// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.s3.inputs;

import io.pulumi.aws.s3.inputs.InventoryDestinationGetArgs;
import io.pulumi.aws.s3.inputs.InventoryFilterGetArgs;
import io.pulumi.aws.s3.inputs.InventoryScheduleGetArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class InventoryState extends io.pulumi.resources.ResourceArgs {

    public static final InventoryState Empty = new InventoryState();

    /**
     * The name of the source bucket that inventory lists the objects for.
     * 
     */
    @Import(name="bucket")
      private final @Nullable Output<String> bucket;

    public Output<String> bucket() {
        return this.bucket == null ? Codegen.empty() : this.bucket;
    }

    /**
     * Contains information about where to publish the inventory results (documented below).
     * 
     */
    @Import(name="destination")
      private final @Nullable Output<InventoryDestinationGetArgs> destination;

    public Output<InventoryDestinationGetArgs> destination() {
        return this.destination == null ? Codegen.empty() : this.destination;
    }

    /**
     * Specifies whether the inventory is enabled or disabled.
     * 
     */
    @Import(name="enabled")
      private final @Nullable Output<Boolean> enabled;

    public Output<Boolean> enabled() {
        return this.enabled == null ? Codegen.empty() : this.enabled;
    }

    /**
     * Specifies an inventory filter. The inventory only includes objects that meet the filter's criteria (documented below).
     * 
     */
    @Import(name="filter")
      private final @Nullable Output<InventoryFilterGetArgs> filter;

    public Output<InventoryFilterGetArgs> filter() {
        return this.filter == null ? Codegen.empty() : this.filter;
    }

    /**
     * Object versions to include in the inventory list. Valid values: `All`, `Current`.
     * 
     */
    @Import(name="includedObjectVersions")
      private final @Nullable Output<String> includedObjectVersions;

    public Output<String> includedObjectVersions() {
        return this.includedObjectVersions == null ? Codegen.empty() : this.includedObjectVersions;
    }

    /**
     * Unique identifier of the inventory configuration for the bucket.
     * 
     */
    @Import(name="name")
      private final @Nullable Output<String> name;

    public Output<String> name() {
        return this.name == null ? Codegen.empty() : this.name;
    }

    /**
     * List of optional fields that are included in the inventory results. Please refer to the S3 [documentation](https://docs.aws.amazon.com/AmazonS3/latest/API/API_InventoryConfiguration.html#AmazonS3-Type-InventoryConfiguration-OptionalFields) for more details.
     * 
     */
    @Import(name="optionalFields")
      private final @Nullable Output<List<String>> optionalFields;

    public Output<List<String>> optionalFields() {
        return this.optionalFields == null ? Codegen.empty() : this.optionalFields;
    }

    /**
     * Specifies the schedule for generating inventory results (documented below).
     * 
     */
    @Import(name="schedule")
      private final @Nullable Output<InventoryScheduleGetArgs> schedule;

    public Output<InventoryScheduleGetArgs> schedule() {
        return this.schedule == null ? Codegen.empty() : this.schedule;
    }

    public InventoryState(
        @Nullable Output<String> bucket,
        @Nullable Output<InventoryDestinationGetArgs> destination,
        @Nullable Output<Boolean> enabled,
        @Nullable Output<InventoryFilterGetArgs> filter,
        @Nullable Output<String> includedObjectVersions,
        @Nullable Output<String> name,
        @Nullable Output<List<String>> optionalFields,
        @Nullable Output<InventoryScheduleGetArgs> schedule) {
        this.bucket = bucket;
        this.destination = destination;
        this.enabled = enabled;
        this.filter = filter;
        this.includedObjectVersions = includedObjectVersions;
        this.name = name;
        this.optionalFields = optionalFields;
        this.schedule = schedule;
    }

    private InventoryState() {
        this.bucket = Codegen.empty();
        this.destination = Codegen.empty();
        this.enabled = Codegen.empty();
        this.filter = Codegen.empty();
        this.includedObjectVersions = Codegen.empty();
        this.name = Codegen.empty();
        this.optionalFields = Codegen.empty();
        this.schedule = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(InventoryState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> bucket;
        private @Nullable Output<InventoryDestinationGetArgs> destination;
        private @Nullable Output<Boolean> enabled;
        private @Nullable Output<InventoryFilterGetArgs> filter;
        private @Nullable Output<String> includedObjectVersions;
        private @Nullable Output<String> name;
        private @Nullable Output<List<String>> optionalFields;
        private @Nullable Output<InventoryScheduleGetArgs> schedule;

        public Builder() {
    	      // Empty
        }

        public Builder(InventoryState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bucket = defaults.bucket;
    	      this.destination = defaults.destination;
    	      this.enabled = defaults.enabled;
    	      this.filter = defaults.filter;
    	      this.includedObjectVersions = defaults.includedObjectVersions;
    	      this.name = defaults.name;
    	      this.optionalFields = defaults.optionalFields;
    	      this.schedule = defaults.schedule;
        }

        public Builder bucket(@Nullable Output<String> bucket) {
            this.bucket = bucket;
            return this;
        }
        public Builder bucket(@Nullable String bucket) {
            this.bucket = Codegen.ofNullable(bucket);
            return this;
        }
        public Builder destination(@Nullable Output<InventoryDestinationGetArgs> destination) {
            this.destination = destination;
            return this;
        }
        public Builder destination(@Nullable InventoryDestinationGetArgs destination) {
            this.destination = Codegen.ofNullable(destination);
            return this;
        }
        public Builder enabled(@Nullable Output<Boolean> enabled) {
            this.enabled = enabled;
            return this;
        }
        public Builder enabled(@Nullable Boolean enabled) {
            this.enabled = Codegen.ofNullable(enabled);
            return this;
        }
        public Builder filter(@Nullable Output<InventoryFilterGetArgs> filter) {
            this.filter = filter;
            return this;
        }
        public Builder filter(@Nullable InventoryFilterGetArgs filter) {
            this.filter = Codegen.ofNullable(filter);
            return this;
        }
        public Builder includedObjectVersions(@Nullable Output<String> includedObjectVersions) {
            this.includedObjectVersions = includedObjectVersions;
            return this;
        }
        public Builder includedObjectVersions(@Nullable String includedObjectVersions) {
            this.includedObjectVersions = Codegen.ofNullable(includedObjectVersions);
            return this;
        }
        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }
        public Builder name(@Nullable String name) {
            this.name = Codegen.ofNullable(name);
            return this;
        }
        public Builder optionalFields(@Nullable Output<List<String>> optionalFields) {
            this.optionalFields = optionalFields;
            return this;
        }
        public Builder optionalFields(@Nullable List<String> optionalFields) {
            this.optionalFields = Codegen.ofNullable(optionalFields);
            return this;
        }
        public Builder optionalFields(String... optionalFields) {
            return optionalFields(List.of(optionalFields));
        }
        public Builder schedule(@Nullable Output<InventoryScheduleGetArgs> schedule) {
            this.schedule = schedule;
            return this;
        }
        public Builder schedule(@Nullable InventoryScheduleGetArgs schedule) {
            this.schedule = Codegen.ofNullable(schedule);
            return this;
        }        public InventoryState build() {
            return new InventoryState(bucket, destination, enabled, filter, includedObjectVersions, name, optionalFields, schedule);
        }
    }
}
