// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.glue.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.Integer;
import java.util.Objects;
import javax.annotation.Nullable;


public final class TriggerActionNotificationPropertyGetArgs extends io.pulumi.resources.ResourceArgs {

    public static final TriggerActionNotificationPropertyGetArgs Empty = new TriggerActionNotificationPropertyGetArgs();

    /**
     * After a job run starts, the number of minutes to wait before sending a job run delay notification.
     * 
     */
    @InputImport(name="notifyDelayAfter")
    private final @Nullable Input<Integer> notifyDelayAfter;

    public Input<Integer> getNotifyDelayAfter() {
        return this.notifyDelayAfter == null ? Input.empty() : this.notifyDelayAfter;
    }

    public TriggerActionNotificationPropertyGetArgs(@Nullable Input<Integer> notifyDelayAfter) {
        this.notifyDelayAfter = notifyDelayAfter;
    }

    private TriggerActionNotificationPropertyGetArgs() {
        this.notifyDelayAfter = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TriggerActionNotificationPropertyGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<Integer> notifyDelayAfter;

        public Builder() {
    	      // Empty
        }

        public Builder(TriggerActionNotificationPropertyGetArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.notifyDelayAfter = defaults.notifyDelayAfter;
        }

        public Builder setNotifyDelayAfter(@Nullable Input<Integer> notifyDelayAfter) {
            this.notifyDelayAfter = notifyDelayAfter;
            return this;
        }

        public Builder setNotifyDelayAfter(@Nullable Integer notifyDelayAfter) {
            this.notifyDelayAfter = Input.ofNullable(notifyDelayAfter);
            return this;
        }
        public TriggerActionNotificationPropertyGetArgs build() {
            return new TriggerActionNotificationPropertyGetArgs(notifyDelayAfter);
        }
    }
}
