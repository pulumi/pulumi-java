// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.emr.inputs;

import io.pulumi.aws.emr.inputs.ClusterMasterInstanceGroupEbsConfigArgs;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ClusterMasterInstanceGroupArgs extends io.pulumi.resources.ResourceArgs {

    public static final ClusterMasterInstanceGroupArgs Empty = new ClusterMasterInstanceGroupArgs();

    /**
     * Bid price for each EC2 instance in the instance group, expressed in USD. By setting this attribute, the instance group is being declared as a Spot Instance, and will implicitly create a Spot request. Leave this blank to use On-Demand Instances.
     * 
     */
    @InputImport(name="bidPrice")
      private final @Nullable Input<String> bidPrice;

    public Input<String> getBidPrice() {
        return this.bidPrice == null ? Input.empty() : this.bidPrice;
    }

    /**
     * Configuration block(s) for EBS volumes attached to each instance in the instance group. Detailed below.
     * 
     */
    @InputImport(name="ebsConfigs")
      private final @Nullable Input<List<ClusterMasterInstanceGroupEbsConfigArgs>> ebsConfigs;

    public Input<List<ClusterMasterInstanceGroupEbsConfigArgs>> getEbsConfigs() {
        return this.ebsConfigs == null ? Input.empty() : this.ebsConfigs;
    }

    /**
     * ID of the cluster.
     * 
     */
    @InputImport(name="id")
      private final @Nullable Input<String> id;

    public Input<String> getId() {
        return this.id == null ? Input.empty() : this.id;
    }

    /**
     * Target number of instances for the instance group. Must be 1 or 3. Defaults to 1. Launching with multiple master nodes is only supported in EMR version 5.23.0+, and requires this resource's `core_instance_group` to be configured. Public (Internet accessible) instances must be created in VPC subnets that have map public IP on launch enabled. Termination protection is automatically enabled when launched with multiple master nodes and this provider must have the `termination_protection = false` configuration applied before destroying this resource.
     * 
     */
    @InputImport(name="instanceCount")
      private final @Nullable Input<Integer> instanceCount;

    public Input<Integer> getInstanceCount() {
        return this.instanceCount == null ? Input.empty() : this.instanceCount;
    }

    /**
     * EC2 instance type for all instances in the instance group.
     * 
     */
    @InputImport(name="instanceType", required=true)
      private final Input<String> instanceType;

    public Input<String> getInstanceType() {
        return this.instanceType;
    }

    /**
     * Name of the step.
     * 
     */
    @InputImport(name="name")
      private final @Nullable Input<String> name;

    public Input<String> getName() {
        return this.name == null ? Input.empty() : this.name;
    }

    public ClusterMasterInstanceGroupArgs(
        @Nullable Input<String> bidPrice,
        @Nullable Input<List<ClusterMasterInstanceGroupEbsConfigArgs>> ebsConfigs,
        @Nullable Input<String> id,
        @Nullable Input<Integer> instanceCount,
        Input<String> instanceType,
        @Nullable Input<String> name) {
        this.bidPrice = bidPrice;
        this.ebsConfigs = ebsConfigs;
        this.id = id;
        this.instanceCount = instanceCount;
        this.instanceType = Objects.requireNonNull(instanceType, "expected parameter 'instanceType' to be non-null");
        this.name = name;
    }

    private ClusterMasterInstanceGroupArgs() {
        this.bidPrice = Input.empty();
        this.ebsConfigs = Input.empty();
        this.id = Input.empty();
        this.instanceCount = Input.empty();
        this.instanceType = Input.empty();
        this.name = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ClusterMasterInstanceGroupArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> bidPrice;
        private @Nullable Input<List<ClusterMasterInstanceGroupEbsConfigArgs>> ebsConfigs;
        private @Nullable Input<String> id;
        private @Nullable Input<Integer> instanceCount;
        private Input<String> instanceType;
        private @Nullable Input<String> name;

        public Builder() {
    	      // Empty
        }

        public Builder(ClusterMasterInstanceGroupArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bidPrice = defaults.bidPrice;
    	      this.ebsConfigs = defaults.ebsConfigs;
    	      this.id = defaults.id;
    	      this.instanceCount = defaults.instanceCount;
    	      this.instanceType = defaults.instanceType;
    	      this.name = defaults.name;
        }

        public Builder bidPrice(@Nullable Input<String> bidPrice) {
            this.bidPrice = bidPrice;
            return this;
        }

        public Builder bidPrice(@Nullable String bidPrice) {
            this.bidPrice = Input.ofNullable(bidPrice);
            return this;
        }

        public Builder ebsConfigs(@Nullable Input<List<ClusterMasterInstanceGroupEbsConfigArgs>> ebsConfigs) {
            this.ebsConfigs = ebsConfigs;
            return this;
        }

        public Builder ebsConfigs(@Nullable List<ClusterMasterInstanceGroupEbsConfigArgs> ebsConfigs) {
            this.ebsConfigs = Input.ofNullable(ebsConfigs);
            return this;
        }

        public Builder id(@Nullable Input<String> id) {
            this.id = id;
            return this;
        }

        public Builder id(@Nullable String id) {
            this.id = Input.ofNullable(id);
            return this;
        }

        public Builder instanceCount(@Nullable Input<Integer> instanceCount) {
            this.instanceCount = instanceCount;
            return this;
        }

        public Builder instanceCount(@Nullable Integer instanceCount) {
            this.instanceCount = Input.ofNullable(instanceCount);
            return this;
        }

        public Builder instanceType(Input<String> instanceType) {
            this.instanceType = Objects.requireNonNull(instanceType);
            return this;
        }

        public Builder instanceType(String instanceType) {
            this.instanceType = Input.of(Objects.requireNonNull(instanceType));
            return this;
        }

        public Builder name(@Nullable Input<String> name) {
            this.name = name;
            return this;
        }

        public Builder name(@Nullable String name) {
            this.name = Input.ofNullable(name);
            return this;
        }
        public ClusterMasterInstanceGroupArgs build() {
            return new ClusterMasterInstanceGroupArgs(bidPrice, ebsConfigs, id, instanceCount, instanceType, name);
        }
    }
}
