// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.ec2transitgateway;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class PrefixListReferenceArgs extends io.pulumi.resources.ResourceArgs {

    public static final PrefixListReferenceArgs Empty = new PrefixListReferenceArgs();

    /**
     * Indicates whether to drop traffic that matches the Prefix List. Defaults to `false`.
     * 
     */
    @Import(name="blackhole")
      private final @Nullable Output<Boolean> blackhole;

    public Output<Boolean> getBlackhole() {
        return this.blackhole == null ? Output.empty() : this.blackhole;
    }

    /**
     * Identifier of EC2 Prefix List.
     * 
     */
    @Import(name="prefixListId", required=true)
      private final Output<String> prefixListId;

    public Output<String> getPrefixListId() {
        return this.prefixListId;
    }

    /**
     * Identifier of EC2 Transit Gateway Attachment.
     * 
     */
    @Import(name="transitGatewayAttachmentId")
      private final @Nullable Output<String> transitGatewayAttachmentId;

    public Output<String> getTransitGatewayAttachmentId() {
        return this.transitGatewayAttachmentId == null ? Output.empty() : this.transitGatewayAttachmentId;
    }

    /**
     * Identifier of EC2 Transit Gateway Route Table.
     * 
     */
    @Import(name="transitGatewayRouteTableId", required=true)
      private final Output<String> transitGatewayRouteTableId;

    public Output<String> getTransitGatewayRouteTableId() {
        return this.transitGatewayRouteTableId;
    }

    public PrefixListReferenceArgs(
        @Nullable Output<Boolean> blackhole,
        Output<String> prefixListId,
        @Nullable Output<String> transitGatewayAttachmentId,
        Output<String> transitGatewayRouteTableId) {
        this.blackhole = blackhole;
        this.prefixListId = Objects.requireNonNull(prefixListId, "expected parameter 'prefixListId' to be non-null");
        this.transitGatewayAttachmentId = transitGatewayAttachmentId;
        this.transitGatewayRouteTableId = Objects.requireNonNull(transitGatewayRouteTableId, "expected parameter 'transitGatewayRouteTableId' to be non-null");
    }

    private PrefixListReferenceArgs() {
        this.blackhole = Output.empty();
        this.prefixListId = Output.empty();
        this.transitGatewayAttachmentId = Output.empty();
        this.transitGatewayRouteTableId = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PrefixListReferenceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<Boolean> blackhole;
        private Output<String> prefixListId;
        private @Nullable Output<String> transitGatewayAttachmentId;
        private Output<String> transitGatewayRouteTableId;

        public Builder() {
    	      // Empty
        }

        public Builder(PrefixListReferenceArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.blackhole = defaults.blackhole;
    	      this.prefixListId = defaults.prefixListId;
    	      this.transitGatewayAttachmentId = defaults.transitGatewayAttachmentId;
    	      this.transitGatewayRouteTableId = defaults.transitGatewayRouteTableId;
        }

        public Builder blackhole(@Nullable Output<Boolean> blackhole) {
            this.blackhole = blackhole;
            return this;
        }
        public Builder blackhole(@Nullable Boolean blackhole) {
            this.blackhole = Output.ofNullable(blackhole);
            return this;
        }
        public Builder prefixListId(Output<String> prefixListId) {
            this.prefixListId = Objects.requireNonNull(prefixListId);
            return this;
        }
        public Builder prefixListId(String prefixListId) {
            this.prefixListId = Output.of(Objects.requireNonNull(prefixListId));
            return this;
        }
        public Builder transitGatewayAttachmentId(@Nullable Output<String> transitGatewayAttachmentId) {
            this.transitGatewayAttachmentId = transitGatewayAttachmentId;
            return this;
        }
        public Builder transitGatewayAttachmentId(@Nullable String transitGatewayAttachmentId) {
            this.transitGatewayAttachmentId = Output.ofNullable(transitGatewayAttachmentId);
            return this;
        }
        public Builder transitGatewayRouteTableId(Output<String> transitGatewayRouteTableId) {
            this.transitGatewayRouteTableId = Objects.requireNonNull(transitGatewayRouteTableId);
            return this;
        }
        public Builder transitGatewayRouteTableId(String transitGatewayRouteTableId) {
            this.transitGatewayRouteTableId = Output.of(Objects.requireNonNull(transitGatewayRouteTableId));
            return this;
        }        public PrefixListReferenceArgs build() {
            return new PrefixListReferenceArgs(blackhole, prefixListId, transitGatewayAttachmentId, transitGatewayRouteTableId);
        }
    }
}
