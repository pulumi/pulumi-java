// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.fsx.inputs;

import io.pulumi.aws.fsx.inputs.OntapStorageVirtualMachineActiveDirectoryConfigurationGetArgs;
import io.pulumi.aws.fsx.inputs.OntapStorageVirtualMachineEndpointGetArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class OntapStorageVirtualMachineState extends io.pulumi.resources.ResourceArgs {

    public static final OntapStorageVirtualMachineState Empty = new OntapStorageVirtualMachineState();

    /**
     * Configuration block that Amazon FSx uses to join the FSx ONTAP Storage Virtual Machine(SVM) to your Microsoft Active Directory (AD) directory. Detailed below.
     * 
     */
    @Import(name="activeDirectoryConfiguration")
      private final @Nullable Output<OntapStorageVirtualMachineActiveDirectoryConfigurationGetArgs> activeDirectoryConfiguration;

    public Output<OntapStorageVirtualMachineActiveDirectoryConfigurationGetArgs> activeDirectoryConfiguration() {
        return this.activeDirectoryConfiguration == null ? Codegen.empty() : this.activeDirectoryConfiguration;
    }

    /**
     * Amazon Resource Name of the storage virtual machine.
     * 
     */
    @Import(name="arn")
      private final @Nullable Output<String> arn;

    public Output<String> arn() {
        return this.arn == null ? Codegen.empty() : this.arn;
    }

    /**
     * The endpoints that are used to access data or to manage the storage virtual machine using the NetApp ONTAP CLI, REST API, or NetApp SnapMirror. See Endpoints below.
     * 
     */
    @Import(name="endpoints")
      private final @Nullable Output<List<OntapStorageVirtualMachineEndpointGetArgs>> endpoints;

    public Output<List<OntapStorageVirtualMachineEndpointGetArgs>> endpoints() {
        return this.endpoints == null ? Codegen.empty() : this.endpoints;
    }

    /**
     * The ID of the Amazon FSx ONTAP File System that this SVM will be created on.
     * 
     */
    @Import(name="fileSystemId")
      private final @Nullable Output<String> fileSystemId;

    public Output<String> fileSystemId() {
        return this.fileSystemId == null ? Codegen.empty() : this.fileSystemId;
    }

    /**
     * The name of the SVM. You can use a maximum of 47 alphanumeric characters, plus the underscore (_) special character.
     * 
     */
    @Import(name="name")
      private final @Nullable Output<String> name;

    public Output<String> name() {
        return this.name == null ? Codegen.empty() : this.name;
    }

    /**
     * Specifies the root volume security style, Valid values are `UNIX`, `NTFS`, and `MIXED`. All volumes created under this SVM will inherit the root security style unless the security style is specified on the volume. Default value is `UNIX`.
     * 
     */
    @Import(name="rootVolumeSecurityStyle")
      private final @Nullable Output<String> rootVolumeSecurityStyle;

    public Output<String> rootVolumeSecurityStyle() {
        return this.rootVolumeSecurityStyle == null ? Codegen.empty() : this.rootVolumeSecurityStyle;
    }

    /**
     * Describes the SVM's subtype, e.g. `DEFAULT`
     * 
     */
    @Import(name="subtype")
      private final @Nullable Output<String> subtype;

    public Output<String> subtype() {
        return this.subtype == null ? Codegen.empty() : this.subtype;
    }

    @Import(name="svmAdminPassword")
      private final @Nullable Output<String> svmAdminPassword;

    public Output<String> svmAdminPassword() {
        return this.svmAdminPassword == null ? Codegen.empty() : this.svmAdminPassword;
    }

    /**
     * A map of tags to assign to the storage virtual machine. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Import(name="tags")
      private final @Nullable Output<Map<String,String>> tags;

    public Output<Map<String,String>> tags() {
        return this.tags == null ? Codegen.empty() : this.tags;
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     */
    @Import(name="tagsAll")
      private final @Nullable Output<Map<String,String>> tagsAll;

    public Output<Map<String,String>> tagsAll() {
        return this.tagsAll == null ? Codegen.empty() : this.tagsAll;
    }

    /**
     * The SVM's UUID (universally unique identifier).
     * 
     */
    @Import(name="uuid")
      private final @Nullable Output<String> uuid;

    public Output<String> uuid() {
        return this.uuid == null ? Codegen.empty() : this.uuid;
    }

    public OntapStorageVirtualMachineState(
        @Nullable Output<OntapStorageVirtualMachineActiveDirectoryConfigurationGetArgs> activeDirectoryConfiguration,
        @Nullable Output<String> arn,
        @Nullable Output<List<OntapStorageVirtualMachineEndpointGetArgs>> endpoints,
        @Nullable Output<String> fileSystemId,
        @Nullable Output<String> name,
        @Nullable Output<String> rootVolumeSecurityStyle,
        @Nullable Output<String> subtype,
        @Nullable Output<String> svmAdminPassword,
        @Nullable Output<Map<String,String>> tags,
        @Nullable Output<Map<String,String>> tagsAll,
        @Nullable Output<String> uuid) {
        this.activeDirectoryConfiguration = activeDirectoryConfiguration;
        this.arn = arn;
        this.endpoints = endpoints;
        this.fileSystemId = fileSystemId;
        this.name = name;
        this.rootVolumeSecurityStyle = rootVolumeSecurityStyle;
        this.subtype = subtype;
        this.svmAdminPassword = svmAdminPassword;
        this.tags = tags;
        this.tagsAll = tagsAll;
        this.uuid = uuid;
    }

    private OntapStorageVirtualMachineState() {
        this.activeDirectoryConfiguration = Codegen.empty();
        this.arn = Codegen.empty();
        this.endpoints = Codegen.empty();
        this.fileSystemId = Codegen.empty();
        this.name = Codegen.empty();
        this.rootVolumeSecurityStyle = Codegen.empty();
        this.subtype = Codegen.empty();
        this.svmAdminPassword = Codegen.empty();
        this.tags = Codegen.empty();
        this.tagsAll = Codegen.empty();
        this.uuid = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(OntapStorageVirtualMachineState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<OntapStorageVirtualMachineActiveDirectoryConfigurationGetArgs> activeDirectoryConfiguration;
        private @Nullable Output<String> arn;
        private @Nullable Output<List<OntapStorageVirtualMachineEndpointGetArgs>> endpoints;
        private @Nullable Output<String> fileSystemId;
        private @Nullable Output<String> name;
        private @Nullable Output<String> rootVolumeSecurityStyle;
        private @Nullable Output<String> subtype;
        private @Nullable Output<String> svmAdminPassword;
        private @Nullable Output<Map<String,String>> tags;
        private @Nullable Output<Map<String,String>> tagsAll;
        private @Nullable Output<String> uuid;

        public Builder() {
    	      // Empty
        }

        public Builder(OntapStorageVirtualMachineState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.activeDirectoryConfiguration = defaults.activeDirectoryConfiguration;
    	      this.arn = defaults.arn;
    	      this.endpoints = defaults.endpoints;
    	      this.fileSystemId = defaults.fileSystemId;
    	      this.name = defaults.name;
    	      this.rootVolumeSecurityStyle = defaults.rootVolumeSecurityStyle;
    	      this.subtype = defaults.subtype;
    	      this.svmAdminPassword = defaults.svmAdminPassword;
    	      this.tags = defaults.tags;
    	      this.tagsAll = defaults.tagsAll;
    	      this.uuid = defaults.uuid;
        }

        public Builder activeDirectoryConfiguration(@Nullable Output<OntapStorageVirtualMachineActiveDirectoryConfigurationGetArgs> activeDirectoryConfiguration) {
            this.activeDirectoryConfiguration = activeDirectoryConfiguration;
            return this;
        }
        public Builder activeDirectoryConfiguration(@Nullable OntapStorageVirtualMachineActiveDirectoryConfigurationGetArgs activeDirectoryConfiguration) {
            this.activeDirectoryConfiguration = Codegen.ofNullable(activeDirectoryConfiguration);
            return this;
        }
        public Builder arn(@Nullable Output<String> arn) {
            this.arn = arn;
            return this;
        }
        public Builder arn(@Nullable String arn) {
            this.arn = Codegen.ofNullable(arn);
            return this;
        }
        public Builder endpoints(@Nullable Output<List<OntapStorageVirtualMachineEndpointGetArgs>> endpoints) {
            this.endpoints = endpoints;
            return this;
        }
        public Builder endpoints(@Nullable List<OntapStorageVirtualMachineEndpointGetArgs> endpoints) {
            this.endpoints = Codegen.ofNullable(endpoints);
            return this;
        }
        public Builder endpoints(OntapStorageVirtualMachineEndpointGetArgs... endpoints) {
            return endpoints(List.of(endpoints));
        }
        public Builder fileSystemId(@Nullable Output<String> fileSystemId) {
            this.fileSystemId = fileSystemId;
            return this;
        }
        public Builder fileSystemId(@Nullable String fileSystemId) {
            this.fileSystemId = Codegen.ofNullable(fileSystemId);
            return this;
        }
        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }
        public Builder name(@Nullable String name) {
            this.name = Codegen.ofNullable(name);
            return this;
        }
        public Builder rootVolumeSecurityStyle(@Nullable Output<String> rootVolumeSecurityStyle) {
            this.rootVolumeSecurityStyle = rootVolumeSecurityStyle;
            return this;
        }
        public Builder rootVolumeSecurityStyle(@Nullable String rootVolumeSecurityStyle) {
            this.rootVolumeSecurityStyle = Codegen.ofNullable(rootVolumeSecurityStyle);
            return this;
        }
        public Builder subtype(@Nullable Output<String> subtype) {
            this.subtype = subtype;
            return this;
        }
        public Builder subtype(@Nullable String subtype) {
            this.subtype = Codegen.ofNullable(subtype);
            return this;
        }
        public Builder svmAdminPassword(@Nullable Output<String> svmAdminPassword) {
            this.svmAdminPassword = svmAdminPassword;
            return this;
        }
        public Builder svmAdminPassword(@Nullable String svmAdminPassword) {
            this.svmAdminPassword = Codegen.ofNullable(svmAdminPassword);
            return this;
        }
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = Codegen.ofNullable(tags);
            return this;
        }
        public Builder tagsAll(@Nullable Output<Map<String,String>> tagsAll) {
            this.tagsAll = tagsAll;
            return this;
        }
        public Builder tagsAll(@Nullable Map<String,String> tagsAll) {
            this.tagsAll = Codegen.ofNullable(tagsAll);
            return this;
        }
        public Builder uuid(@Nullable Output<String> uuid) {
            this.uuid = uuid;
            return this;
        }
        public Builder uuid(@Nullable String uuid) {
            this.uuid = Codegen.ofNullable(uuid);
            return this;
        }        public OntapStorageVirtualMachineState build() {
            return new OntapStorageVirtualMachineState(activeDirectoryConfiguration, arn, endpoints, fileSystemId, name, rootVolumeSecurityStyle, subtype, svmAdminPassword, tags, tagsAll, uuid);
        }
    }
}
