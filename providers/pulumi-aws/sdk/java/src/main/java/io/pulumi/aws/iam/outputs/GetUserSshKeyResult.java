// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.iam.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.String;
import java.util.Objects;

@OutputCustomType
public final class GetUserSshKeyResult {
    private final String encoding;
    /**
     * The MD5 message digest of the SSH public key.
     * 
     */
    private final String fingerprint;
    /**
     * The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    /**
     * The SSH public key.
     * 
     */
    private final String publicKey;
    private final String sshPublicKeyId;
    /**
     * The status of the SSH public key. Active means that the key can be used for authentication with an CodeCommit repository. Inactive means that the key cannot be used.
     * 
     */
    private final String status;
    private final String username;

    @OutputCustomType.Constructor({"encoding","fingerprint","id","publicKey","sshPublicKeyId","status","username"})
    private GetUserSshKeyResult(
        String encoding,
        String fingerprint,
        String id,
        String publicKey,
        String sshPublicKeyId,
        String status,
        String username) {
        this.encoding = Objects.requireNonNull(encoding);
        this.fingerprint = Objects.requireNonNull(fingerprint);
        this.id = Objects.requireNonNull(id);
        this.publicKey = Objects.requireNonNull(publicKey);
        this.sshPublicKeyId = Objects.requireNonNull(sshPublicKeyId);
        this.status = Objects.requireNonNull(status);
        this.username = Objects.requireNonNull(username);
    }

    public String getEncoding() {
        return this.encoding;
    }
    /**
     * The MD5 message digest of the SSH public key.
     * 
     */
    public String getFingerprint() {
        return this.fingerprint;
    }
    /**
     * The provider-assigned unique ID for this managed resource.
     * 
     */
    public String getId() {
        return this.id;
    }
    /**
     * The SSH public key.
     * 
     */
    public String getPublicKey() {
        return this.publicKey;
    }
    public String getSshPublicKeyId() {
        return this.sshPublicKeyId;
    }
    /**
     * The status of the SSH public key. Active means that the key can be used for authentication with an CodeCommit repository. Inactive means that the key cannot be used.
     * 
     */
    public String getStatus() {
        return this.status;
    }
    public String getUsername() {
        return this.username;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetUserSshKeyResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String encoding;
        private String fingerprint;
        private String id;
        private String publicKey;
        private String sshPublicKeyId;
        private String status;
        private String username;

        public Builder() {
    	      // Empty
        }

        public Builder(GetUserSshKeyResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.encoding = defaults.encoding;
    	      this.fingerprint = defaults.fingerprint;
    	      this.id = defaults.id;
    	      this.publicKey = defaults.publicKey;
    	      this.sshPublicKeyId = defaults.sshPublicKeyId;
    	      this.status = defaults.status;
    	      this.username = defaults.username;
        }

        public Builder setEncoding(String encoding) {
            this.encoding = Objects.requireNonNull(encoding);
            return this;
        }

        public Builder setFingerprint(String fingerprint) {
            this.fingerprint = Objects.requireNonNull(fingerprint);
            return this;
        }

        public Builder setId(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }

        public Builder setPublicKey(String publicKey) {
            this.publicKey = Objects.requireNonNull(publicKey);
            return this;
        }

        public Builder setSshPublicKeyId(String sshPublicKeyId) {
            this.sshPublicKeyId = Objects.requireNonNull(sshPublicKeyId);
            return this;
        }

        public Builder setStatus(String status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }

        public Builder setUsername(String username) {
            this.username = Objects.requireNonNull(username);
            return this;
        }
        public GetUserSshKeyResult build() {
            return new GetUserSshKeyResult(encoding, fingerprint, id, publicKey, sshPublicKeyId, status, username);
        }
    }
}
