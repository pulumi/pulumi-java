// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.codepipeline.inputs;

import io.pulumi.aws.codepipeline.inputs.PipelineArtifactStoreEncryptionKeyGetArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class PipelineArtifactStoreGetArgs extends io.pulumi.resources.ResourceArgs {

    public static final PipelineArtifactStoreGetArgs Empty = new PipelineArtifactStoreGetArgs();

    /**
     * The encryption key block AWS CodePipeline uses to encrypt the data in the artifact store, such as an AWS Key Management Service (AWS KMS) key. If you don't specify a key, AWS CodePipeline uses the default key for Amazon Simple Storage Service (Amazon S3). An `encryption_key` block is documented below.
     * 
     */
    @Import(name="encryptionKey")
      private final @Nullable Output<PipelineArtifactStoreEncryptionKeyGetArgs> encryptionKey;

    public Output<PipelineArtifactStoreEncryptionKeyGetArgs> getEncryptionKey() {
        return this.encryptionKey == null ? Output.empty() : this.encryptionKey;
    }

    /**
     * The location where AWS CodePipeline stores artifacts for a pipeline; currently only `S3` is supported.
     * 
     */
    @Import(name="location", required=true)
      private final Output<String> location;

    public Output<String> getLocation() {
        return this.location;
    }

    /**
     * The region where the artifact store is located. Required for a cross-region CodePipeline, do not provide for a single-region CodePipeline.
     * 
     */
    @Import(name="region")
      private final @Nullable Output<String> region;

    public Output<String> getRegion() {
        return this.region == null ? Output.empty() : this.region;
    }

    /**
     * The type of the artifact store, such as Amazon S3
     * 
     */
    @Import(name="type", required=true)
      private final Output<String> type;

    public Output<String> getType() {
        return this.type;
    }

    public PipelineArtifactStoreGetArgs(
        @Nullable Output<PipelineArtifactStoreEncryptionKeyGetArgs> encryptionKey,
        Output<String> location,
        @Nullable Output<String> region,
        Output<String> type) {
        this.encryptionKey = encryptionKey;
        this.location = Objects.requireNonNull(location, "expected parameter 'location' to be non-null");
        this.region = region;
        this.type = Objects.requireNonNull(type, "expected parameter 'type' to be non-null");
    }

    private PipelineArtifactStoreGetArgs() {
        this.encryptionKey = Output.empty();
        this.location = Output.empty();
        this.region = Output.empty();
        this.type = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PipelineArtifactStoreGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<PipelineArtifactStoreEncryptionKeyGetArgs> encryptionKey;
        private Output<String> location;
        private @Nullable Output<String> region;
        private Output<String> type;

        public Builder() {
    	      // Empty
        }

        public Builder(PipelineArtifactStoreGetArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.encryptionKey = defaults.encryptionKey;
    	      this.location = defaults.location;
    	      this.region = defaults.region;
    	      this.type = defaults.type;
        }

        public Builder encryptionKey(@Nullable Output<PipelineArtifactStoreEncryptionKeyGetArgs> encryptionKey) {
            this.encryptionKey = encryptionKey;
            return this;
        }
        public Builder encryptionKey(@Nullable PipelineArtifactStoreEncryptionKeyGetArgs encryptionKey) {
            this.encryptionKey = Output.ofNullable(encryptionKey);
            return this;
        }
        public Builder location(Output<String> location) {
            this.location = Objects.requireNonNull(location);
            return this;
        }
        public Builder location(String location) {
            this.location = Output.of(Objects.requireNonNull(location));
            return this;
        }
        public Builder region(@Nullable Output<String> region) {
            this.region = region;
            return this;
        }
        public Builder region(@Nullable String region) {
            this.region = Output.ofNullable(region);
            return this;
        }
        public Builder type(Output<String> type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public Builder type(String type) {
            this.type = Output.of(Objects.requireNonNull(type));
            return this;
        }        public PipelineArtifactStoreGetArgs build() {
            return new PipelineArtifactStoreGetArgs(encryptionKey, location, region, type);
        }
    }
}
