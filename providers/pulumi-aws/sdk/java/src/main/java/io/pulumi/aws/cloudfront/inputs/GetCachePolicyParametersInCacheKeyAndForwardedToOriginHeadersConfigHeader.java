// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.cloudfront.inputs;

import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class GetCachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigHeader extends io.pulumi.resources.InvokeArgs {

    public static final GetCachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigHeader Empty = new GetCachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigHeader();

    /**
     * A list of item names (`cookies`, `headers`, or `query_strings`).
     * 
     */
    @InputImport(name="items", required=true)
      private final List<String> items;

    public List<String> getItems() {
        return this.items;
    }

    public GetCachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigHeader(List<String> items) {
        this.items = Objects.requireNonNull(items, "expected parameter 'items' to be non-null");
    }

    private GetCachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigHeader() {
        this.items = List.of();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigHeader defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<String> items;

        public Builder() {
    	      // Empty
        }

        public Builder(GetCachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigHeader defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.items = defaults.items;
        }

        public Builder items(List<String> items) {
            this.items = Objects.requireNonNull(items);
            return this;
        }
        public GetCachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigHeader build() {
            return new GetCachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigHeader(items);
        }
    }
}
