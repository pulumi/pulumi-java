// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.guardduty.inputs;

import io.pulumi.aws.guardduty.inputs.OrganizationConfigurationDatasourcesGetArgs;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class OrganizationConfigurationState extends io.pulumi.resources.ResourceArgs {

    public static final OrganizationConfigurationState Empty = new OrganizationConfigurationState();

    /**
     * When this setting is enabled, all new accounts that are created in, or added to, the organization are added as a member accounts of the organizationâ€™s GuardDuty delegated administrator and GuardDuty is enabled in that AWS Region.
     * 
     */
    @InputImport(name="autoEnable")
      private final @Nullable Input<Boolean> autoEnable;

    public Input<Boolean> getAutoEnable() {
        return this.autoEnable == null ? Input.empty() : this.autoEnable;
    }

    /**
     * Configuration for the collected datasources.
     * 
     */
    @InputImport(name="datasources")
      private final @Nullable Input<OrganizationConfigurationDatasourcesGetArgs> datasources;

    public Input<OrganizationConfigurationDatasourcesGetArgs> getDatasources() {
        return this.datasources == null ? Input.empty() : this.datasources;
    }

    /**
     * The detector ID of the GuardDuty account.
     * 
     */
    @InputImport(name="detectorId")
      private final @Nullable Input<String> detectorId;

    public Input<String> getDetectorId() {
        return this.detectorId == null ? Input.empty() : this.detectorId;
    }

    public OrganizationConfigurationState(
        @Nullable Input<Boolean> autoEnable,
        @Nullable Input<OrganizationConfigurationDatasourcesGetArgs> datasources,
        @Nullable Input<String> detectorId) {
        this.autoEnable = autoEnable;
        this.datasources = datasources;
        this.detectorId = detectorId;
    }

    private OrganizationConfigurationState() {
        this.autoEnable = Input.empty();
        this.datasources = Input.empty();
        this.detectorId = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(OrganizationConfigurationState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<Boolean> autoEnable;
        private @Nullable Input<OrganizationConfigurationDatasourcesGetArgs> datasources;
        private @Nullable Input<String> detectorId;

        public Builder() {
    	      // Empty
        }

        public Builder(OrganizationConfigurationState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.autoEnable = defaults.autoEnable;
    	      this.datasources = defaults.datasources;
    	      this.detectorId = defaults.detectorId;
        }

        public Builder autoEnable(@Nullable Input<Boolean> autoEnable) {
            this.autoEnable = autoEnable;
            return this;
        }

        public Builder autoEnable(@Nullable Boolean autoEnable) {
            this.autoEnable = Input.ofNullable(autoEnable);
            return this;
        }

        public Builder datasources(@Nullable Input<OrganizationConfigurationDatasourcesGetArgs> datasources) {
            this.datasources = datasources;
            return this;
        }

        public Builder datasources(@Nullable OrganizationConfigurationDatasourcesGetArgs datasources) {
            this.datasources = Input.ofNullable(datasources);
            return this;
        }

        public Builder detectorId(@Nullable Input<String> detectorId) {
            this.detectorId = detectorId;
            return this;
        }

        public Builder detectorId(@Nullable String detectorId) {
            this.detectorId = Input.ofNullable(detectorId);
            return this;
        }
        public OrganizationConfigurationState build() {
            return new OrganizationConfigurationState(autoEnable, datasources, detectorId);
        }
    }
}
