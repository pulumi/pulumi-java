// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.codeartifact.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.InputImport;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class DomainState extends io.pulumi.resources.ResourceArgs {

    public static final DomainState Empty = new DomainState();

    /**
     * The ARN of the Domain.
     * 
     */
    @InputImport(name="arn")
      private final @Nullable Output<String> arn;

    public Output<String> getArn() {
        return this.arn == null ? Output.empty() : this.arn;
    }

    /**
     * The total size of all assets in the domain.
     * 
     */
    @InputImport(name="assetSizeBytes")
      private final @Nullable Output<Integer> assetSizeBytes;

    public Output<Integer> getAssetSizeBytes() {
        return this.assetSizeBytes == null ? Output.empty() : this.assetSizeBytes;
    }

    /**
     * A timestamp that represents the date and time the domain was created in [RFC3339 format](https://tools.ietf.org/html/rfc3339#section-5.8).
     * 
     */
    @InputImport(name="createdTime")
      private final @Nullable Output<String> createdTime;

    public Output<String> getCreatedTime() {
        return this.createdTime == null ? Output.empty() : this.createdTime;
    }

    /**
     * The name of the domain to create. All domain names in an AWS Region that are in the same AWS account must be unique. The domain name is used as the prefix in DNS hostnames. Do not use sensitive information in a domain name because it is publicly discoverable.
     * 
     */
    @InputImport(name="domain")
      private final @Nullable Output<String> domain;

    public Output<String> getDomain() {
        return this.domain == null ? Output.empty() : this.domain;
    }

    /**
     * The encryption key for the domain. This is used to encrypt content stored in a domain. The KMS Key Amazon Resource Name (ARN). The default aws/codeartifact AWS KMS master key is used if this element is absent.
     * 
     */
    @InputImport(name="encryptionKey")
      private final @Nullable Output<String> encryptionKey;

    public Output<String> getEncryptionKey() {
        return this.encryptionKey == null ? Output.empty() : this.encryptionKey;
    }

    /**
     * The AWS account ID that owns the domain.
     * 
     */
    @InputImport(name="owner")
      private final @Nullable Output<String> owner;

    public Output<String> getOwner() {
        return this.owner == null ? Output.empty() : this.owner;
    }

    /**
     * The number of repositories in the domain.
     * 
     */
    @InputImport(name="repositoryCount")
      private final @Nullable Output<Integer> repositoryCount;

    public Output<Integer> getRepositoryCount() {
        return this.repositoryCount == null ? Output.empty() : this.repositoryCount;
    }

    /**
     * Key-value map of resource tags. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @InputImport(name="tags")
      private final @Nullable Output<Map<String,String>> tags;

    public Output<Map<String,String>> getTags() {
        return this.tags == null ? Output.empty() : this.tags;
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider .
     * 
     */
    @InputImport(name="tagsAll")
      private final @Nullable Output<Map<String,String>> tagsAll;

    public Output<Map<String,String>> getTagsAll() {
        return this.tagsAll == null ? Output.empty() : this.tagsAll;
    }

    public DomainState(
        @Nullable Output<String> arn,
        @Nullable Output<Integer> assetSizeBytes,
        @Nullable Output<String> createdTime,
        @Nullable Output<String> domain,
        @Nullable Output<String> encryptionKey,
        @Nullable Output<String> owner,
        @Nullable Output<Integer> repositoryCount,
        @Nullable Output<Map<String,String>> tags,
        @Nullable Output<Map<String,String>> tagsAll) {
        this.arn = arn;
        this.assetSizeBytes = assetSizeBytes;
        this.createdTime = createdTime;
        this.domain = domain;
        this.encryptionKey = encryptionKey;
        this.owner = owner;
        this.repositoryCount = repositoryCount;
        this.tags = tags;
        this.tagsAll = tagsAll;
    }

    private DomainState() {
        this.arn = Output.empty();
        this.assetSizeBytes = Output.empty();
        this.createdTime = Output.empty();
        this.domain = Output.empty();
        this.encryptionKey = Output.empty();
        this.owner = Output.empty();
        this.repositoryCount = Output.empty();
        this.tags = Output.empty();
        this.tagsAll = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DomainState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> arn;
        private @Nullable Output<Integer> assetSizeBytes;
        private @Nullable Output<String> createdTime;
        private @Nullable Output<String> domain;
        private @Nullable Output<String> encryptionKey;
        private @Nullable Output<String> owner;
        private @Nullable Output<Integer> repositoryCount;
        private @Nullable Output<Map<String,String>> tags;
        private @Nullable Output<Map<String,String>> tagsAll;

        public Builder() {
    	      // Empty
        }

        public Builder(DomainState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.assetSizeBytes = defaults.assetSizeBytes;
    	      this.createdTime = defaults.createdTime;
    	      this.domain = defaults.domain;
    	      this.encryptionKey = defaults.encryptionKey;
    	      this.owner = defaults.owner;
    	      this.repositoryCount = defaults.repositoryCount;
    	      this.tags = defaults.tags;
    	      this.tagsAll = defaults.tagsAll;
        }

        public Builder arn(@Nullable Output<String> arn) {
            this.arn = arn;
            return this;
        }

        public Builder arn(@Nullable String arn) {
            this.arn = Output.ofNullable(arn);
            return this;
        }

        public Builder assetSizeBytes(@Nullable Output<Integer> assetSizeBytes) {
            this.assetSizeBytes = assetSizeBytes;
            return this;
        }

        public Builder assetSizeBytes(@Nullable Integer assetSizeBytes) {
            this.assetSizeBytes = Output.ofNullable(assetSizeBytes);
            return this;
        }

        public Builder createdTime(@Nullable Output<String> createdTime) {
            this.createdTime = createdTime;
            return this;
        }

        public Builder createdTime(@Nullable String createdTime) {
            this.createdTime = Output.ofNullable(createdTime);
            return this;
        }

        public Builder domain(@Nullable Output<String> domain) {
            this.domain = domain;
            return this;
        }

        public Builder domain(@Nullable String domain) {
            this.domain = Output.ofNullable(domain);
            return this;
        }

        public Builder encryptionKey(@Nullable Output<String> encryptionKey) {
            this.encryptionKey = encryptionKey;
            return this;
        }

        public Builder encryptionKey(@Nullable String encryptionKey) {
            this.encryptionKey = Output.ofNullable(encryptionKey);
            return this;
        }

        public Builder owner(@Nullable Output<String> owner) {
            this.owner = owner;
            return this;
        }

        public Builder owner(@Nullable String owner) {
            this.owner = Output.ofNullable(owner);
            return this;
        }

        public Builder repositoryCount(@Nullable Output<Integer> repositoryCount) {
            this.repositoryCount = repositoryCount;
            return this;
        }

        public Builder repositoryCount(@Nullable Integer repositoryCount) {
            this.repositoryCount = Output.ofNullable(repositoryCount);
            return this;
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }

        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = Output.ofNullable(tags);
            return this;
        }

        public Builder tagsAll(@Nullable Output<Map<String,String>> tagsAll) {
            this.tagsAll = tagsAll;
            return this;
        }

        public Builder tagsAll(@Nullable Map<String,String> tagsAll) {
            this.tagsAll = Output.ofNullable(tagsAll);
            return this;
        }
        public DomainState build() {
            return new DomainState(arn, assetSizeBytes, createdTime, domain, encryptionKey, owner, repositoryCount, tags, tagsAll);
        }
    }
}
