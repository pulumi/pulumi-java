// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.glue.inputs;

import io.pulumi.aws.glue.inputs.MLTransformParametersFindMatchesParametersGetArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;


public final class MLTransformParametersGetArgs extends io.pulumi.resources.ResourceArgs {

    public static final MLTransformParametersGetArgs Empty = new MLTransformParametersGetArgs();

    /**
     * The parameters for the find matches algorithm. see Find Matches Parameters.
     * 
     */
    @InputImport(name="findMatchesParameters", required=true)
      private final Output<MLTransformParametersFindMatchesParametersGetArgs> findMatchesParameters;

    public Output<MLTransformParametersFindMatchesParametersGetArgs> getFindMatchesParameters() {
        return this.findMatchesParameters;
    }

    /**
     * The type of machine learning transform. For information about the types of machine learning transforms, see [Creating Machine Learning Transforms](http://docs.aws.amazon.com/glue/latest/dg/add-job-machine-learning-transform.html).
     * 
     */
    @InputImport(name="transformType", required=true)
      private final Output<String> transformType;

    public Output<String> getTransformType() {
        return this.transformType;
    }

    public MLTransformParametersGetArgs(
        Output<MLTransformParametersFindMatchesParametersGetArgs> findMatchesParameters,
        Output<String> transformType) {
        this.findMatchesParameters = Objects.requireNonNull(findMatchesParameters, "expected parameter 'findMatchesParameters' to be non-null");
        this.transformType = Objects.requireNonNull(transformType, "expected parameter 'transformType' to be non-null");
    }

    private MLTransformParametersGetArgs() {
        this.findMatchesParameters = Output.empty();
        this.transformType = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MLTransformParametersGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<MLTransformParametersFindMatchesParametersGetArgs> findMatchesParameters;
        private Output<String> transformType;

        public Builder() {
    	      // Empty
        }

        public Builder(MLTransformParametersGetArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.findMatchesParameters = defaults.findMatchesParameters;
    	      this.transformType = defaults.transformType;
        }

        public Builder findMatchesParameters(Output<MLTransformParametersFindMatchesParametersGetArgs> findMatchesParameters) {
            this.findMatchesParameters = Objects.requireNonNull(findMatchesParameters);
            return this;
        }

        public Builder findMatchesParameters(MLTransformParametersFindMatchesParametersGetArgs findMatchesParameters) {
            this.findMatchesParameters = Output.of(Objects.requireNonNull(findMatchesParameters));
            return this;
        }

        public Builder transformType(Output<String> transformType) {
            this.transformType = Objects.requireNonNull(transformType);
            return this;
        }

        public Builder transformType(String transformType) {
            this.transformType = Output.of(Objects.requireNonNull(transformType));
            return this;
        }
        public MLTransformParametersGetArgs build() {
            return new MLTransformParametersGetArgs(findMatchesParameters, transformType);
        }
    }
}
