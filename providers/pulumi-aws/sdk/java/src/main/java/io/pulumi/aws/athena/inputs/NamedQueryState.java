// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.athena.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class NamedQueryState extends io.pulumi.resources.ResourceArgs {

    public static final NamedQueryState Empty = new NamedQueryState();

    /**
     * The database to which the query belongs.
     * 
     */
    @Import(name="database")
      private final @Nullable Output<String> database;

    public Output<String> getDatabase() {
        return this.database == null ? Output.empty() : this.database;
    }

    /**
     * A brief explanation of the query. Maximum length of 1024.
     * 
     */
    @Import(name="description")
      private final @Nullable Output<String> description;

    public Output<String> getDescription() {
        return this.description == null ? Output.empty() : this.description;
    }

    /**
     * The plain language name for the query. Maximum length of 128.
     * 
     */
    @Import(name="name")
      private final @Nullable Output<String> name;

    public Output<String> getName() {
        return this.name == null ? Output.empty() : this.name;
    }

    /**
     * The text of the query itself. In other words, all query statements. Maximum length of 262144.
     * 
     */
    @Import(name="query")
      private final @Nullable Output<String> query;

    public Output<String> getQuery() {
        return this.query == null ? Output.empty() : this.query;
    }

    /**
     * The workgroup to which the query belongs. Defaults to `primary`
     * 
     */
    @Import(name="workgroup")
      private final @Nullable Output<String> workgroup;

    public Output<String> getWorkgroup() {
        return this.workgroup == null ? Output.empty() : this.workgroup;
    }

    public NamedQueryState(
        @Nullable Output<String> database,
        @Nullable Output<String> description,
        @Nullable Output<String> name,
        @Nullable Output<String> query,
        @Nullable Output<String> workgroup) {
        this.database = database;
        this.description = description;
        this.name = name;
        this.query = query;
        this.workgroup = workgroup;
    }

    private NamedQueryState() {
        this.database = Output.empty();
        this.description = Output.empty();
        this.name = Output.empty();
        this.query = Output.empty();
        this.workgroup = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(NamedQueryState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> database;
        private @Nullable Output<String> description;
        private @Nullable Output<String> name;
        private @Nullable Output<String> query;
        private @Nullable Output<String> workgroup;

        public Builder() {
    	      // Empty
        }

        public Builder(NamedQueryState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.database = defaults.database;
    	      this.description = defaults.description;
    	      this.name = defaults.name;
    	      this.query = defaults.query;
    	      this.workgroup = defaults.workgroup;
        }

        public Builder database(@Nullable Output<String> database) {
            this.database = database;
            return this;
        }

        public Builder database(@Nullable String database) {
            this.database = Output.ofNullable(database);
            return this;
        }

        public Builder description(@Nullable Output<String> description) {
            this.description = description;
            return this;
        }

        public Builder description(@Nullable String description) {
            this.description = Output.ofNullable(description);
            return this;
        }

        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }

        public Builder name(@Nullable String name) {
            this.name = Output.ofNullable(name);
            return this;
        }

        public Builder query(@Nullable Output<String> query) {
            this.query = query;
            return this;
        }

        public Builder query(@Nullable String query) {
            this.query = Output.ofNullable(query);
            return this;
        }

        public Builder workgroup(@Nullable Output<String> workgroup) {
            this.workgroup = workgroup;
            return this;
        }

        public Builder workgroup(@Nullable String workgroup) {
            this.workgroup = Output.ofNullable(workgroup);
            return this;
        }
        public NamedQueryState build() {
            return new NamedQueryState(database, description, name, query, workgroup);
        }
    }
}
