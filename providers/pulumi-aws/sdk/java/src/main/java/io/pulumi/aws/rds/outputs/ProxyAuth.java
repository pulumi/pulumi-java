// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.rds.outputs;

import io.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ProxyAuth {
    /**
     * The type of authentication that the proxy uses for connections from the proxy to the underlying database. One of `SECRETS`.
     * 
     */
    private final @Nullable String authScheme;
    /**
     * A user-specified description about the authentication used by a proxy to log in as a specific database user.
     * 
     */
    private final @Nullable String description;
    /**
     * Whether to require or disallow AWS Identity and Access Management (IAM) authentication for connections to the proxy. One of `DISABLED`, `REQUIRED`.
     * 
     */
    private final @Nullable String iamAuth;
    /**
     * The Amazon Resource Name (ARN) representing the secret that the proxy uses to authenticate to the RDS DB instance or Aurora DB cluster. These secrets are stored within Amazon Secrets Manager.
     * 
     */
    private final @Nullable String secretArn;

    @CustomType.Constructor
    private ProxyAuth(
        @CustomType.Parameter("authScheme") @Nullable String authScheme,
        @CustomType.Parameter("description") @Nullable String description,
        @CustomType.Parameter("iamAuth") @Nullable String iamAuth,
        @CustomType.Parameter("secretArn") @Nullable String secretArn) {
        this.authScheme = authScheme;
        this.description = description;
        this.iamAuth = iamAuth;
        this.secretArn = secretArn;
    }

    /**
     * The type of authentication that the proxy uses for connections from the proxy to the underlying database. One of `SECRETS`.
     * 
    */
    public Optional<String> getAuthScheme() {
        return Optional.ofNullable(this.authScheme);
    }
    /**
     * A user-specified description about the authentication used by a proxy to log in as a specific database user.
     * 
    */
    public Optional<String> getDescription() {
        return Optional.ofNullable(this.description);
    }
    /**
     * Whether to require or disallow AWS Identity and Access Management (IAM) authentication for connections to the proxy. One of `DISABLED`, `REQUIRED`.
     * 
    */
    public Optional<String> getIamAuth() {
        return Optional.ofNullable(this.iamAuth);
    }
    /**
     * The Amazon Resource Name (ARN) representing the secret that the proxy uses to authenticate to the RDS DB instance or Aurora DB cluster. These secrets are stored within Amazon Secrets Manager.
     * 
    */
    public Optional<String> getSecretArn() {
        return Optional.ofNullable(this.secretArn);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ProxyAuth defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String authScheme;
        private @Nullable String description;
        private @Nullable String iamAuth;
        private @Nullable String secretArn;

        public Builder() {
    	      // Empty
        }

        public Builder(ProxyAuth defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.authScheme = defaults.authScheme;
    	      this.description = defaults.description;
    	      this.iamAuth = defaults.iamAuth;
    	      this.secretArn = defaults.secretArn;
        }

        public Builder authScheme(@Nullable String authScheme) {
            this.authScheme = authScheme;
            return this;
        }
        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        public Builder iamAuth(@Nullable String iamAuth) {
            this.iamAuth = iamAuth;
            return this;
        }
        public Builder secretArn(@Nullable String secretArn) {
            this.secretArn = secretArn;
            return this;
        }        public ProxyAuth build() {
            return new ProxyAuth(authScheme, description, iamAuth, secretArn);
        }
    }
}
