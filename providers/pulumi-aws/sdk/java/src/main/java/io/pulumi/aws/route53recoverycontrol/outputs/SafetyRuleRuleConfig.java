// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.route53recoverycontrol.outputs;

import io.pulumi.core.annotations.OutputCustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@OutputCustomType
public final class SafetyRuleRuleConfig {
    /**
     * Logical negation of the rule.
     * 
     */
    private final Boolean inverted;
    /**
     * Number of controls that must be set when you specify an `ATLEAST` type rule.
     * 
     */
    private final Integer threshold;
    /**
     * Rule type. Valid values are `ATLEAST`, `AND`, and `OR`.
     * 
     */
    private final String type;

    @OutputCustomType.Constructor
    private SafetyRuleRuleConfig(
        @OutputCustomType.Parameter("inverted") Boolean inverted,
        @OutputCustomType.Parameter("threshold") Integer threshold,
        @OutputCustomType.Parameter("type") String type) {
        this.inverted = inverted;
        this.threshold = threshold;
        this.type = type;
    }

    /**
     * Logical negation of the rule.
     * 
    */
    public Boolean getInverted() {
        return this.inverted;
    }
    /**
     * Number of controls that must be set when you specify an `ATLEAST` type rule.
     * 
    */
    public Integer getThreshold() {
        return this.threshold;
    }
    /**
     * Rule type. Valid values are `ATLEAST`, `AND`, and `OR`.
     * 
    */
    public String getType() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SafetyRuleRuleConfig defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Boolean inverted;
        private Integer threshold;
        private String type;

        public Builder() {
    	      // Empty
        }

        public Builder(SafetyRuleRuleConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.inverted = defaults.inverted;
    	      this.threshold = defaults.threshold;
    	      this.type = defaults.type;
        }

        public Builder setInverted(Boolean inverted) {
            this.inverted = Objects.requireNonNull(inverted);
            return this;
        }

        public Builder setThreshold(Integer threshold) {
            this.threshold = Objects.requireNonNull(threshold);
            return this;
        }

        public Builder setType(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public SafetyRuleRuleConfig build() {
            return new SafetyRuleRuleConfig(inverted, threshold, type);
        }
    }
}
