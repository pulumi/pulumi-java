// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.s3;

import io.pulumi.aws.s3.inputs.BucketIntelligentTieringConfigurationFilterArgs;
import io.pulumi.aws.s3.inputs.BucketIntelligentTieringConfigurationTieringArgs;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class BucketIntelligentTieringConfigurationArgs extends io.pulumi.resources.ResourceArgs {

    public static final BucketIntelligentTieringConfigurationArgs Empty = new BucketIntelligentTieringConfigurationArgs();

    /**
     * The name of the bucket this intelligent tiering configuration is associated with.
     * 
     */
    @InputImport(name="bucket", required=true)
      private final Input<String> bucket;

    public Input<String> getBucket() {
        return this.bucket;
    }

    /**
     * A bucket filter. The configuration only includes objects that meet the filter's criteria (documented below).
     * 
     */
    @InputImport(name="filter")
      private final @Nullable Input<BucketIntelligentTieringConfigurationFilterArgs> filter;

    public Input<BucketIntelligentTieringConfigurationFilterArgs> getFilter() {
        return this.filter == null ? Input.empty() : this.filter;
    }

    /**
     * The unique name used to identify the S3 Intelligent-Tiering configuration for the bucket.
     * 
     */
    @InputImport(name="name")
      private final @Nullable Input<String> name;

    public Input<String> getName() {
        return this.name == null ? Input.empty() : this.name;
    }

    /**
     * Specifies the status of the configuration. Valid values: `Enabled`, `Disabled`.
     * 
     */
    @InputImport(name="status")
      private final @Nullable Input<String> status;

    public Input<String> getStatus() {
        return this.status == null ? Input.empty() : this.status;
    }

    /**
     * The S3 Intelligent-Tiering storage class tiers of the configuration (documented below).
     * 
     */
    @InputImport(name="tierings", required=true)
      private final Input<List<BucketIntelligentTieringConfigurationTieringArgs>> tierings;

    public Input<List<BucketIntelligentTieringConfigurationTieringArgs>> getTierings() {
        return this.tierings;
    }

    public BucketIntelligentTieringConfigurationArgs(
        Input<String> bucket,
        @Nullable Input<BucketIntelligentTieringConfigurationFilterArgs> filter,
        @Nullable Input<String> name,
        @Nullable Input<String> status,
        Input<List<BucketIntelligentTieringConfigurationTieringArgs>> tierings) {
        this.bucket = Objects.requireNonNull(bucket, "expected parameter 'bucket' to be non-null");
        this.filter = filter;
        this.name = name;
        this.status = status;
        this.tierings = Objects.requireNonNull(tierings, "expected parameter 'tierings' to be non-null");
    }

    private BucketIntelligentTieringConfigurationArgs() {
        this.bucket = Input.empty();
        this.filter = Input.empty();
        this.name = Input.empty();
        this.status = Input.empty();
        this.tierings = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BucketIntelligentTieringConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<String> bucket;
        private @Nullable Input<BucketIntelligentTieringConfigurationFilterArgs> filter;
        private @Nullable Input<String> name;
        private @Nullable Input<String> status;
        private Input<List<BucketIntelligentTieringConfigurationTieringArgs>> tierings;

        public Builder() {
    	      // Empty
        }

        public Builder(BucketIntelligentTieringConfigurationArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bucket = defaults.bucket;
    	      this.filter = defaults.filter;
    	      this.name = defaults.name;
    	      this.status = defaults.status;
    	      this.tierings = defaults.tierings;
        }

        public Builder setBucket(Input<String> bucket) {
            this.bucket = Objects.requireNonNull(bucket);
            return this;
        }

        public Builder setBucket(String bucket) {
            this.bucket = Input.of(Objects.requireNonNull(bucket));
            return this;
        }

        public Builder setFilter(@Nullable Input<BucketIntelligentTieringConfigurationFilterArgs> filter) {
            this.filter = filter;
            return this;
        }

        public Builder setFilter(@Nullable BucketIntelligentTieringConfigurationFilterArgs filter) {
            this.filter = Input.ofNullable(filter);
            return this;
        }

        public Builder setName(@Nullable Input<String> name) {
            this.name = name;
            return this;
        }

        public Builder setName(@Nullable String name) {
            this.name = Input.ofNullable(name);
            return this;
        }

        public Builder setStatus(@Nullable Input<String> status) {
            this.status = status;
            return this;
        }

        public Builder setStatus(@Nullable String status) {
            this.status = Input.ofNullable(status);
            return this;
        }

        public Builder setTierings(Input<List<BucketIntelligentTieringConfigurationTieringArgs>> tierings) {
            this.tierings = Objects.requireNonNull(tierings);
            return this;
        }

        public Builder setTierings(List<BucketIntelligentTieringConfigurationTieringArgs> tierings) {
            this.tierings = Input.of(Objects.requireNonNull(tierings));
            return this;
        }
        public BucketIntelligentTieringConfigurationArgs build() {
            return new BucketIntelligentTieringConfigurationArgs(bucket, filter, name, status, tierings);
        }
    }
}
