// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.servicecatalog.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ConstraintState extends io.pulumi.resources.ResourceArgs {

    public static final ConstraintState Empty = new ConstraintState();

    /**
     * Language code. Valid values: `en` (English), `jp` (Japanese), `zh` (Chinese). Default value is `en`.
     * 
     */
    @Import(name="acceptLanguage")
      private final @Nullable Output<String> acceptLanguage;

    public Output<String> acceptLanguage() {
        return this.acceptLanguage == null ? Codegen.empty() : this.acceptLanguage;
    }

    /**
     * Description of the constraint.
     * 
     */
    @Import(name="description")
      private final @Nullable Output<String> description;

    public Output<String> description() {
        return this.description == null ? Codegen.empty() : this.description;
    }

    /**
     * Owner of the constraint.
     * 
     */
    @Import(name="owner")
      private final @Nullable Output<String> owner;

    public Output<String> owner() {
        return this.owner == null ? Codegen.empty() : this.owner;
    }

    /**
     * Constraint parameters in JSON format. The syntax depends on the constraint type. See details below.
     * 
     */
    @Import(name="parameters")
      private final @Nullable Output<String> parameters;

    public Output<String> parameters() {
        return this.parameters == null ? Codegen.empty() : this.parameters;
    }

    /**
     * Portfolio identifier.
     * 
     */
    @Import(name="portfolioId")
      private final @Nullable Output<String> portfolioId;

    public Output<String> portfolioId() {
        return this.portfolioId == null ? Codegen.empty() : this.portfolioId;
    }

    /**
     * Product identifier.
     * 
     */
    @Import(name="productId")
      private final @Nullable Output<String> productId;

    public Output<String> productId() {
        return this.productId == null ? Codegen.empty() : this.productId;
    }

    @Import(name="status")
      private final @Nullable Output<String> status;

    public Output<String> status() {
        return this.status == null ? Codegen.empty() : this.status;
    }

    /**
     * Type of constraint. Valid values are `LAUNCH`, `NOTIFICATION`, `RESOURCE_UPDATE`, `STACKSET`, and `TEMPLATE`.
     * 
     */
    @Import(name="type")
      private final @Nullable Output<String> type;

    public Output<String> type() {
        return this.type == null ? Codegen.empty() : this.type;
    }

    public ConstraintState(
        @Nullable Output<String> acceptLanguage,
        @Nullable Output<String> description,
        @Nullable Output<String> owner,
        @Nullable Output<String> parameters,
        @Nullable Output<String> portfolioId,
        @Nullable Output<String> productId,
        @Nullable Output<String> status,
        @Nullable Output<String> type) {
        this.acceptLanguage = acceptLanguage;
        this.description = description;
        this.owner = owner;
        this.parameters = parameters;
        this.portfolioId = portfolioId;
        this.productId = productId;
        this.status = status;
        this.type = type;
    }

    private ConstraintState() {
        this.acceptLanguage = Codegen.empty();
        this.description = Codegen.empty();
        this.owner = Codegen.empty();
        this.parameters = Codegen.empty();
        this.portfolioId = Codegen.empty();
        this.productId = Codegen.empty();
        this.status = Codegen.empty();
        this.type = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ConstraintState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> acceptLanguage;
        private @Nullable Output<String> description;
        private @Nullable Output<String> owner;
        private @Nullable Output<String> parameters;
        private @Nullable Output<String> portfolioId;
        private @Nullable Output<String> productId;
        private @Nullable Output<String> status;
        private @Nullable Output<String> type;

        public Builder() {
    	      // Empty
        }

        public Builder(ConstraintState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.acceptLanguage = defaults.acceptLanguage;
    	      this.description = defaults.description;
    	      this.owner = defaults.owner;
    	      this.parameters = defaults.parameters;
    	      this.portfolioId = defaults.portfolioId;
    	      this.productId = defaults.productId;
    	      this.status = defaults.status;
    	      this.type = defaults.type;
        }

        public Builder acceptLanguage(@Nullable Output<String> acceptLanguage) {
            this.acceptLanguage = acceptLanguage;
            return this;
        }
        public Builder acceptLanguage(@Nullable String acceptLanguage) {
            this.acceptLanguage = Codegen.ofNullable(acceptLanguage);
            return this;
        }
        public Builder description(@Nullable Output<String> description) {
            this.description = description;
            return this;
        }
        public Builder description(@Nullable String description) {
            this.description = Codegen.ofNullable(description);
            return this;
        }
        public Builder owner(@Nullable Output<String> owner) {
            this.owner = owner;
            return this;
        }
        public Builder owner(@Nullable String owner) {
            this.owner = Codegen.ofNullable(owner);
            return this;
        }
        public Builder parameters(@Nullable Output<String> parameters) {
            this.parameters = parameters;
            return this;
        }
        public Builder parameters(@Nullable String parameters) {
            this.parameters = Codegen.ofNullable(parameters);
            return this;
        }
        public Builder portfolioId(@Nullable Output<String> portfolioId) {
            this.portfolioId = portfolioId;
            return this;
        }
        public Builder portfolioId(@Nullable String portfolioId) {
            this.portfolioId = Codegen.ofNullable(portfolioId);
            return this;
        }
        public Builder productId(@Nullable Output<String> productId) {
            this.productId = productId;
            return this;
        }
        public Builder productId(@Nullable String productId) {
            this.productId = Codegen.ofNullable(productId);
            return this;
        }
        public Builder status(@Nullable Output<String> status) {
            this.status = status;
            return this;
        }
        public Builder status(@Nullable String status) {
            this.status = Codegen.ofNullable(status);
            return this;
        }
        public Builder type(@Nullable Output<String> type) {
            this.type = type;
            return this;
        }
        public Builder type(@Nullable String type) {
            this.type = Codegen.ofNullable(type);
            return this;
        }        public ConstraintState build() {
            return new ConstraintState(acceptLanguage, description, owner, parameters, portfolioId, productId, status, type);
        }
    }
}
