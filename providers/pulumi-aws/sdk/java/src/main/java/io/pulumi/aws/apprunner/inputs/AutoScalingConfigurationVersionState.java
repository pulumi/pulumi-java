// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.apprunner.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.InputImport;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class AutoScalingConfigurationVersionState extends io.pulumi.resources.ResourceArgs {

    public static final AutoScalingConfigurationVersionState Empty = new AutoScalingConfigurationVersionState();

    /**
     * ARN of this auto scaling configuration version.
     * 
     */
    @InputImport(name="arn")
      private final @Nullable Output<String> arn;

    public Output<String> getArn() {
        return this.arn == null ? Output.empty() : this.arn;
    }

    /**
     * Name of the auto scaling configuration.
     * 
     */
    @InputImport(name="autoScalingConfigurationName")
      private final @Nullable Output<String> autoScalingConfigurationName;

    public Output<String> getAutoScalingConfigurationName() {
        return this.autoScalingConfigurationName == null ? Output.empty() : this.autoScalingConfigurationName;
    }

    /**
     * The revision of this auto scaling configuration.
     * 
     */
    @InputImport(name="autoScalingConfigurationRevision")
      private final @Nullable Output<Integer> autoScalingConfigurationRevision;

    public Output<Integer> getAutoScalingConfigurationRevision() {
        return this.autoScalingConfigurationRevision == null ? Output.empty() : this.autoScalingConfigurationRevision;
    }

    /**
     * Whether the auto scaling configuration has the highest `auto_scaling_configuration_revision` among all configurations that share the same `auto_scaling_configuration_name`.
     * 
     */
    @InputImport(name="latest")
      private final @Nullable Output<Boolean> latest;

    public Output<Boolean> getLatest() {
        return this.latest == null ? Output.empty() : this.latest;
    }

    /**
     * The maximal number of concurrent requests that you want an instance to process. When the number of concurrent requests goes over this limit, App Runner scales up your service.
     * 
     */
    @InputImport(name="maxConcurrency")
      private final @Nullable Output<Integer> maxConcurrency;

    public Output<Integer> getMaxConcurrency() {
        return this.maxConcurrency == null ? Output.empty() : this.maxConcurrency;
    }

    /**
     * The maximal number of instances that App Runner provisions for your service.
     * 
     */
    @InputImport(name="maxSize")
      private final @Nullable Output<Integer> maxSize;

    public Output<Integer> getMaxSize() {
        return this.maxSize == null ? Output.empty() : this.maxSize;
    }

    /**
     * The minimal number of instances that App Runner provisions for your service.
     * 
     */
    @InputImport(name="minSize")
      private final @Nullable Output<Integer> minSize;

    public Output<Integer> getMinSize() {
        return this.minSize == null ? Output.empty() : this.minSize;
    }

    /**
     * The current state of the auto scaling configuration. An INACTIVE configuration revision has been deleted and can't be used. It is permanently removed some time after deletion.
     * 
     */
    @InputImport(name="status")
      private final @Nullable Output<String> status;

    public Output<String> getStatus() {
        return this.status == null ? Output.empty() : this.status;
    }

    /**
     * Key-value map of resource tags. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @InputImport(name="tags")
      private final @Nullable Output<Map<String,String>> tags;

    public Output<Map<String,String>> getTags() {
        return this.tags == null ? Output.empty() : this.tags;
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     */
    @InputImport(name="tagsAll")
      private final @Nullable Output<Map<String,String>> tagsAll;

    public Output<Map<String,String>> getTagsAll() {
        return this.tagsAll == null ? Output.empty() : this.tagsAll;
    }

    public AutoScalingConfigurationVersionState(
        @Nullable Output<String> arn,
        @Nullable Output<String> autoScalingConfigurationName,
        @Nullable Output<Integer> autoScalingConfigurationRevision,
        @Nullable Output<Boolean> latest,
        @Nullable Output<Integer> maxConcurrency,
        @Nullable Output<Integer> maxSize,
        @Nullable Output<Integer> minSize,
        @Nullable Output<String> status,
        @Nullable Output<Map<String,String>> tags,
        @Nullable Output<Map<String,String>> tagsAll) {
        this.arn = arn;
        this.autoScalingConfigurationName = autoScalingConfigurationName;
        this.autoScalingConfigurationRevision = autoScalingConfigurationRevision;
        this.latest = latest;
        this.maxConcurrency = maxConcurrency;
        this.maxSize = maxSize;
        this.minSize = minSize;
        this.status = status;
        this.tags = tags;
        this.tagsAll = tagsAll;
    }

    private AutoScalingConfigurationVersionState() {
        this.arn = Output.empty();
        this.autoScalingConfigurationName = Output.empty();
        this.autoScalingConfigurationRevision = Output.empty();
        this.latest = Output.empty();
        this.maxConcurrency = Output.empty();
        this.maxSize = Output.empty();
        this.minSize = Output.empty();
        this.status = Output.empty();
        this.tags = Output.empty();
        this.tagsAll = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AutoScalingConfigurationVersionState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> arn;
        private @Nullable Output<String> autoScalingConfigurationName;
        private @Nullable Output<Integer> autoScalingConfigurationRevision;
        private @Nullable Output<Boolean> latest;
        private @Nullable Output<Integer> maxConcurrency;
        private @Nullable Output<Integer> maxSize;
        private @Nullable Output<Integer> minSize;
        private @Nullable Output<String> status;
        private @Nullable Output<Map<String,String>> tags;
        private @Nullable Output<Map<String,String>> tagsAll;

        public Builder() {
    	      // Empty
        }

        public Builder(AutoScalingConfigurationVersionState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.autoScalingConfigurationName = defaults.autoScalingConfigurationName;
    	      this.autoScalingConfigurationRevision = defaults.autoScalingConfigurationRevision;
    	      this.latest = defaults.latest;
    	      this.maxConcurrency = defaults.maxConcurrency;
    	      this.maxSize = defaults.maxSize;
    	      this.minSize = defaults.minSize;
    	      this.status = defaults.status;
    	      this.tags = defaults.tags;
    	      this.tagsAll = defaults.tagsAll;
        }

        public Builder arn(@Nullable Output<String> arn) {
            this.arn = arn;
            return this;
        }

        public Builder arn(@Nullable String arn) {
            this.arn = Output.ofNullable(arn);
            return this;
        }

        public Builder autoScalingConfigurationName(@Nullable Output<String> autoScalingConfigurationName) {
            this.autoScalingConfigurationName = autoScalingConfigurationName;
            return this;
        }

        public Builder autoScalingConfigurationName(@Nullable String autoScalingConfigurationName) {
            this.autoScalingConfigurationName = Output.ofNullable(autoScalingConfigurationName);
            return this;
        }

        public Builder autoScalingConfigurationRevision(@Nullable Output<Integer> autoScalingConfigurationRevision) {
            this.autoScalingConfigurationRevision = autoScalingConfigurationRevision;
            return this;
        }

        public Builder autoScalingConfigurationRevision(@Nullable Integer autoScalingConfigurationRevision) {
            this.autoScalingConfigurationRevision = Output.ofNullable(autoScalingConfigurationRevision);
            return this;
        }

        public Builder latest(@Nullable Output<Boolean> latest) {
            this.latest = latest;
            return this;
        }

        public Builder latest(@Nullable Boolean latest) {
            this.latest = Output.ofNullable(latest);
            return this;
        }

        public Builder maxConcurrency(@Nullable Output<Integer> maxConcurrency) {
            this.maxConcurrency = maxConcurrency;
            return this;
        }

        public Builder maxConcurrency(@Nullable Integer maxConcurrency) {
            this.maxConcurrency = Output.ofNullable(maxConcurrency);
            return this;
        }

        public Builder maxSize(@Nullable Output<Integer> maxSize) {
            this.maxSize = maxSize;
            return this;
        }

        public Builder maxSize(@Nullable Integer maxSize) {
            this.maxSize = Output.ofNullable(maxSize);
            return this;
        }

        public Builder minSize(@Nullable Output<Integer> minSize) {
            this.minSize = minSize;
            return this;
        }

        public Builder minSize(@Nullable Integer minSize) {
            this.minSize = Output.ofNullable(minSize);
            return this;
        }

        public Builder status(@Nullable Output<String> status) {
            this.status = status;
            return this;
        }

        public Builder status(@Nullable String status) {
            this.status = Output.ofNullable(status);
            return this;
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }

        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = Output.ofNullable(tags);
            return this;
        }

        public Builder tagsAll(@Nullable Output<Map<String,String>> tagsAll) {
            this.tagsAll = tagsAll;
            return this;
        }

        public Builder tagsAll(@Nullable Map<String,String> tagsAll) {
            this.tagsAll = Output.ofNullable(tagsAll);
            return this;
        }
        public AutoScalingConfigurationVersionState build() {
            return new AutoScalingConfigurationVersionState(arn, autoScalingConfigurationName, autoScalingConfigurationRevision, latest, maxConcurrency, maxSize, minSize, status, tags, tagsAll);
        }
    }
}
