// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.route53;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class VpcAssociationAuthorizationArgs extends io.pulumi.resources.ResourceArgs {

    public static final VpcAssociationAuthorizationArgs Empty = new VpcAssociationAuthorizationArgs();

    /**
     * The VPC to authorize for association with the private hosted zone.
     * 
     */
    @InputImport(name="vpcId", required=true)
      private final Input<String> vpcId;

    public Input<String> getVpcId() {
        return this.vpcId;
    }

    /**
     * The VPC's region. Defaults to the region of the AWS provider.
     * 
     */
    @InputImport(name="vpcRegion")
      private final @Nullable Input<String> vpcRegion;

    public Input<String> getVpcRegion() {
        return this.vpcRegion == null ? Input.empty() : this.vpcRegion;
    }

    /**
     * The ID of the private hosted zone that you want to authorize associating a VPC with.
     * 
     */
    @InputImport(name="zoneId", required=true)
      private final Input<String> zoneId;

    public Input<String> getZoneId() {
        return this.zoneId;
    }

    public VpcAssociationAuthorizationArgs(
        Input<String> vpcId,
        @Nullable Input<String> vpcRegion,
        Input<String> zoneId) {
        this.vpcId = Objects.requireNonNull(vpcId, "expected parameter 'vpcId' to be non-null");
        this.vpcRegion = vpcRegion;
        this.zoneId = Objects.requireNonNull(zoneId, "expected parameter 'zoneId' to be non-null");
    }

    private VpcAssociationAuthorizationArgs() {
        this.vpcId = Input.empty();
        this.vpcRegion = Input.empty();
        this.zoneId = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VpcAssociationAuthorizationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<String> vpcId;
        private @Nullable Input<String> vpcRegion;
        private Input<String> zoneId;

        public Builder() {
    	      // Empty
        }

        public Builder(VpcAssociationAuthorizationArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.vpcId = defaults.vpcId;
    	      this.vpcRegion = defaults.vpcRegion;
    	      this.zoneId = defaults.zoneId;
        }

        public Builder setVpcId(Input<String> vpcId) {
            this.vpcId = Objects.requireNonNull(vpcId);
            return this;
        }

        public Builder setVpcId(String vpcId) {
            this.vpcId = Input.of(Objects.requireNonNull(vpcId));
            return this;
        }

        public Builder setVpcRegion(@Nullable Input<String> vpcRegion) {
            this.vpcRegion = vpcRegion;
            return this;
        }

        public Builder setVpcRegion(@Nullable String vpcRegion) {
            this.vpcRegion = Input.ofNullable(vpcRegion);
            return this;
        }

        public Builder setZoneId(Input<String> zoneId) {
            this.zoneId = Objects.requireNonNull(zoneId);
            return this;
        }

        public Builder setZoneId(String zoneId) {
            this.zoneId = Input.of(Objects.requireNonNull(zoneId));
            return this;
        }
        public VpcAssociationAuthorizationArgs build() {
            return new VpcAssociationAuthorizationArgs(vpcId, vpcRegion, zoneId);
        }
    }
}
