// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.cloudfront;

import io.pulumi.aws.Utilities;
import io.pulumi.aws.cloudfront.RealtimeLogConfigArgs;
import io.pulumi.aws.cloudfront.inputs.RealtimeLogConfigState;
import io.pulumi.aws.cloudfront.outputs.RealtimeLogConfigEndpoint;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Export;
import io.pulumi.core.annotations.ResourceType;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * Provides a CloudFront real-time log configuration resource.
 * 
 * {{% examples %}}
 * ## Example Usage
 * {{% example %}}
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 * 
 * const exampleRole = new aws.iam.Role("exampleRole", {assumeRolePolicy: `{
 *   "Version": "2012-10-17",
 *   "Statement": [
 *     {
 *       "Action": "sts:AssumeRole",
 *       "Principal": {
 *         "Service": "cloudfront.amazonaws.com"
 *       },
 *       "Effect": "Allow"
 *     }
 *   ]
 * }
 * `});
 * const exampleRolePolicy = new aws.iam.RolePolicy("exampleRolePolicy", {
 *     role: exampleRole.id,
 *     policy: `{
 *   "Version": "2012-10-17",
 *   "Statement": [
 *     {
 *         "Effect": "Allow",
 *         "Action": [
 *           "kinesis:DescribeStreamSummary",
 *           "kinesis:DescribeStream",
 *           "kinesis:PutRecord",
 *           "kinesis:PutRecords"
 *         ],
 *         "Resource": "${aws_kinesis_stream.example.arn}"
 *     }
 *   ]
 * }
 * `,
 * });
 * const exampleRealtimeLogConfig = new aws.cloudfront.RealtimeLogConfig("exampleRealtimeLogConfig", {
 *     samplingRate: 75,
 *     fields: [
 *         "timestamp",
 *         "c-ip",
 *     ],
 *     endpoint: {
 *         streamType: "Kinesis",
 *         kinesisStreamConfig: {
 *             roleArn: exampleRole.arn,
 *             streamArn: aws_kinesis_stream.example.arn,
 *         },
 *     },
 * }, {
 *     dependsOn: [exampleRolePolicy],
 * });
 * ```
 * ```python
 * import pulumi
 * import pulumi_aws as aws
 * 
 * example_role = aws.iam.Role("exampleRole", assume_role_policy="""{
 *   "Version": "2012-10-17",
 *   "Statement": [
 *     {
 *       "Action": "sts:AssumeRole",
 *       "Principal": {
 *         "Service": "cloudfront.amazonaws.com"
 *       },
 *       "Effect": "Allow"
 *     }
 *   ]
 * }
 * """)
 * example_role_policy = aws.iam.RolePolicy("exampleRolePolicy",
 *     role=example_role.id,
 *     policy=f"""{{
 *   "Version": "2012-10-17",
 *   "Statement": [
 *     {{
 *         "Effect": "Allow",
 *         "Action": [
 *           "kinesis:DescribeStreamSummary",
 *           "kinesis:DescribeStream",
 *           "kinesis:PutRecord",
 *           "kinesis:PutRecords"
 *         ],
 *         "Resource": "{aws_kinesis_stream["example"]["arn"]}"
 *     }}
 *   ]
 * }}
 * """)
 * example_realtime_log_config = aws.cloudfront.RealtimeLogConfig("exampleRealtimeLogConfig",
 *     sampling_rate=75,
 *     fields=[
 *         "timestamp",
 *         "c-ip",
 *     ],
 *     endpoint=aws.cloudfront.RealtimeLogConfigEndpointArgs(
 *         stream_type="Kinesis",
 *         kinesis_stream_config=aws.cloudfront.RealtimeLogConfigEndpointKinesisStreamConfigArgs(
 *             role_arn=example_role.arn,
 *             stream_arn=aws_kinesis_stream["example"]["arn"],
 *         ),
 *     ),
 *     opts=pulumi.ResourceOptions(depends_on=[example_role_policy]))
 * ```
 * ```csharp
 * using Pulumi;
 * using Aws = Pulumi.Aws;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var exampleRole = new Aws.Iam.Role("exampleRole", new Aws.Iam.RoleArgs
 *         {
 *             AssumeRolePolicy = @"{
 *   ""Version"": ""2012-10-17"",
 *   ""Statement"": [
 *     {
 *       ""Action"": ""sts:AssumeRole"",
 *       ""Principal"": {
 *         ""Service"": ""cloudfront.amazonaws.com""
 *       },
 *       ""Effect"": ""Allow""
 *     }
 *   ]
 * }
 * ",
 *         });
 *         var exampleRolePolicy = new Aws.Iam.RolePolicy("exampleRolePolicy", new Aws.Iam.RolePolicyArgs
 *         {
 *             Role = exampleRole.Id,
 *             Policy = @$"{{
 *   ""Version"": ""2012-10-17"",
 *   ""Statement"": [
 *     {{
 *         ""Effect"": ""Allow"",
 *         ""Action"": [
 *           ""kinesis:DescribeStreamSummary"",
 *           ""kinesis:DescribeStream"",
 *           ""kinesis:PutRecord"",
 *           ""kinesis:PutRecords""
 *         ],
 *         ""Resource"": ""{aws_kinesis_stream.Example.Arn}""
 *     }}
 *   ]
 * }}
 * ",
 *         });
 *         var exampleRealtimeLogConfig = new Aws.CloudFront.RealtimeLogConfig("exampleRealtimeLogConfig", new Aws.CloudFront.RealtimeLogConfigArgs
 *         {
 *             SamplingRate = 75,
 *             Fields = 
 *             {
 *                 "timestamp",
 *                 "c-ip",
 *             },
 *             Endpoint = new Aws.CloudFront.Inputs.RealtimeLogConfigEndpointArgs
 *             {
 *                 StreamType = "Kinesis",
 *                 KinesisStreamConfig = new Aws.CloudFront.Inputs.RealtimeLogConfigEndpointKinesisStreamConfigArgs
 *                 {
 *                     RoleArn = exampleRole.Arn,
 *                     StreamArn = aws_kinesis_stream.Example.Arn,
 *                 },
 *             },
 *         }, new CustomResourceOptions
 *         {
 *             DependsOn = 
 *             {
 *                 exampleRolePolicy,
 *             },
 *         });
 *     }
 * 
 * }
 * ```
 * ```go
 * package main
 * 
 * import (
 * 	"fmt"
 * 
 * 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/cloudfront"
 * 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/iam"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		exampleRole, err := iam.NewRole(ctx, "exampleRole", &iam.RoleArgs{
 * 			AssumeRolePolicy: pulumi.Any(fmt.Sprintf("%v%v%v%v%v%v%v%v%v%v%v%v", "{\n", "  \"Version\": \"2012-10-17\",\n", "  \"Statement\": [\n", "    {\n", "      \"Action\": \"sts:AssumeRole\",\n", "      \"Principal\": {\n", "        \"Service\": \"cloudfront.amazonaws.com\"\n", "      },\n", "      \"Effect\": \"Allow\"\n", "    }\n", "  ]\n", "}\n")),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		exampleRolePolicy, err := iam.NewRolePolicy(ctx, "exampleRolePolicy", &iam.RolePolicyArgs{
 * 			Role:   exampleRole.ID(),
 * 			Policy: pulumi.Any(fmt.Sprintf("%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v", "{\n", "  \"Version\": \"2012-10-17\",\n", "  \"Statement\": [\n", "    {\n", "        \"Effect\": \"Allow\",\n", "        \"Action\": [\n", "          \"kinesis:DescribeStreamSummary\",\n", "          \"kinesis:DescribeStream\",\n", "          \"kinesis:PutRecord\",\n", "          \"kinesis:PutRecords\"\n", "        ],\n", "        \"Resource\": \"", aws_kinesis_stream.Example.Arn, "\"\n", "    }\n", "  ]\n", "}\n")),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		_, err = cloudfront.NewRealtimeLogConfig(ctx, "exampleRealtimeLogConfig", &cloudfront.RealtimeLogConfigArgs{
 * 			SamplingRate: pulumi.Int(75),
 * 			Fields: pulumi.StringArray{
 * 				pulumi.String("timestamp"),
 * 				pulumi.String("c-ip"),
 * 			},
 * 			Endpoint: &cloudfront.RealtimeLogConfigEndpointArgs{
 * 				StreamType: pulumi.String("Kinesis"),
 * 				KinesisStreamConfig: &cloudfront.RealtimeLogConfigEndpointKinesisStreamConfigArgs{
 * 					RoleArn:   exampleRole.Arn,
 * 					StreamArn: pulumi.Any(aws_kinesis_stream.Example.Arn),
 * 				},
 * 			},
 * 		}, pulumi.DependsOn([]pulumi.Resource{
 * 			exampleRolePolicy,
 * 		}))
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * ```
 * {{% /example %}}
 * {{% /examples %}}
 * 
 * ## Import
 * 
 * CloudFront real-time log configurations can be imported using the ARN, e.g.,
 * 
 * ```sh
 *  $ pulumi import aws:cloudfront/realtimeLogConfig:RealtimeLogConfig example arn:aws:cloudfront::111122223333:realtime-log-config/ExampleNameForRealtimeLogConfig
 * ```
 * 
 *  
 */
@ResourceType(type="aws:cloudfront/realtimeLogConfig:RealtimeLogConfig")
public class RealtimeLogConfig extends io.pulumi.resources.CustomResource {
    /**
     * The ARN (Amazon Resource Name) of the CloudFront real-time log configuration.
     * 
     */
    @Export(name="arn", type=String.class, parameters={})
    private Output<String> arn;

    /**
     * @return The ARN (Amazon Resource Name) of the CloudFront real-time log configuration.
     * 
     */
    public Output<String> getArn() {
        return this.arn;
    }
    /**
     * The Amazon Kinesis data streams where real-time log data is sent.
     * 
     */
    @Export(name="endpoint", type=RealtimeLogConfigEndpoint.class, parameters={})
    private Output<RealtimeLogConfigEndpoint> endpoint;

    /**
     * @return The Amazon Kinesis data streams where real-time log data is sent.
     * 
     */
    public Output<RealtimeLogConfigEndpoint> getEndpoint() {
        return this.endpoint;
    }
    /**
     * The fields that are included in each real-time log record. See the [AWS documentation](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/real-time-logs.html#understand-real-time-log-config-fields) for supported values.
     * 
     */
    @Export(name="fields", type=List.class, parameters={String.class})
    private Output<List<String>> fields;

    /**
     * @return The fields that are included in each real-time log record. See the [AWS documentation](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/real-time-logs.html#understand-real-time-log-config-fields) for supported values.
     * 
     */
    public Output<List<String>> getFields() {
        return this.fields;
    }
    /**
     * The unique name to identify this real-time log configuration.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The unique name to identify this real-time log configuration.
     * 
     */
    public Output<String> getName() {
        return this.name;
    }
    /**
     * The sampling rate for this real-time log configuration. The sampling rate determines the percentage of viewer requests that are represented in the real-time log data. An integer between `1` and `100`, inclusive.
     * 
     */
    @Export(name="samplingRate", type=Integer.class, parameters={})
    private Output<Integer> samplingRate;

    /**
     * @return The sampling rate for this real-time log configuration. The sampling rate determines the percentage of viewer requests that are represented in the real-time log data. An integer between `1` and `100`, inclusive.
     * 
     */
    public Output<Integer> getSamplingRate() {
        return this.samplingRate;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public RealtimeLogConfig(String name) {
        this(name, RealtimeLogConfigArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public RealtimeLogConfig(String name, RealtimeLogConfigArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public RealtimeLogConfig(String name, RealtimeLogConfigArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:cloudfront/realtimeLogConfig:RealtimeLogConfig", name, args == null ? RealtimeLogConfigArgs.Empty : args, makeResourceOptions(options, Output.empty()));
    }

    private RealtimeLogConfig(String name, Output<String> id, @Nullable RealtimeLogConfigState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:cloudfront/realtimeLogConfig:RealtimeLogConfig", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static RealtimeLogConfig get(String name, Output<String> id, @Nullable RealtimeLogConfigState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new RealtimeLogConfig(name, id, state, options);
    }
}
