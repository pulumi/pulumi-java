// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.sagemaker.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class FeatureGroupOfflineStoreConfigDataCatalogConfigGetArgs extends io.pulumi.resources.ResourceArgs {

    public static final FeatureGroupOfflineStoreConfigDataCatalogConfigGetArgs Empty = new FeatureGroupOfflineStoreConfigDataCatalogConfigGetArgs();

    /**
     * The name of the Glue table catalog.
     * 
     */
    @Import(name="catalog")
      private final @Nullable Output<String> catalog;

    public Output<String> getCatalog() {
        return this.catalog == null ? Output.empty() : this.catalog;
    }

    /**
     * The name of the Glue table database.
     * 
     */
    @Import(name="database")
      private final @Nullable Output<String> database;

    public Output<String> getDatabase() {
        return this.database == null ? Output.empty() : this.database;
    }

    /**
     * The name of the Glue table.
     * 
     */
    @Import(name="tableName")
      private final @Nullable Output<String> tableName;

    public Output<String> getTableName() {
        return this.tableName == null ? Output.empty() : this.tableName;
    }

    public FeatureGroupOfflineStoreConfigDataCatalogConfigGetArgs(
        @Nullable Output<String> catalog,
        @Nullable Output<String> database,
        @Nullable Output<String> tableName) {
        this.catalog = catalog;
        this.database = database;
        this.tableName = tableName;
    }

    private FeatureGroupOfflineStoreConfigDataCatalogConfigGetArgs() {
        this.catalog = Output.empty();
        this.database = Output.empty();
        this.tableName = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FeatureGroupOfflineStoreConfigDataCatalogConfigGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> catalog;
        private @Nullable Output<String> database;
        private @Nullable Output<String> tableName;

        public Builder() {
    	      // Empty
        }

        public Builder(FeatureGroupOfflineStoreConfigDataCatalogConfigGetArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.catalog = defaults.catalog;
    	      this.database = defaults.database;
    	      this.tableName = defaults.tableName;
        }

        public Builder catalog(@Nullable Output<String> catalog) {
            this.catalog = catalog;
            return this;
        }

        public Builder catalog(@Nullable String catalog) {
            this.catalog = Output.ofNullable(catalog);
            return this;
        }

        public Builder database(@Nullable Output<String> database) {
            this.database = database;
            return this;
        }

        public Builder database(@Nullable String database) {
            this.database = Output.ofNullable(database);
            return this;
        }

        public Builder tableName(@Nullable Output<String> tableName) {
            this.tableName = tableName;
            return this;
        }

        public Builder tableName(@Nullable String tableName) {
            this.tableName = Output.ofNullable(tableName);
            return this;
        }
        public FeatureGroupOfflineStoreConfigDataCatalogConfigGetArgs build() {
            return new FeatureGroupOfflineStoreConfigDataCatalogConfigGetArgs(catalog, database, tableName);
        }
    }
}
