// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.s3.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class BucketLifecycleRuleExpirationGetArgs extends io.pulumi.resources.ResourceArgs {

    public static final BucketLifecycleRuleExpirationGetArgs Empty = new BucketLifecycleRuleExpirationGetArgs();

    /**
     * Specifies the date after which you want the corresponding action to take effect.
     * 
     */
    @InputImport(name="date")
      private final @Nullable Input<String> date;

    public Input<String> getDate() {
        return this.date == null ? Input.empty() : this.date;
    }

    /**
     * Specifies the number of days after object creation when the specific rule action takes effect.
     * 
     */
    @InputImport(name="days")
      private final @Nullable Input<Integer> days;

    public Input<Integer> getDays() {
        return this.days == null ? Input.empty() : this.days;
    }

    /**
     * On a versioned bucket (versioning-enabled or versioning-suspended bucket), you can add this element in the lifecycle configuration to direct Amazon S3 to delete expired object delete markers. This cannot be specified with Days or Date in a Lifecycle Expiration Policy.
     * 
     */
    @InputImport(name="expiredObjectDeleteMarker")
      private final @Nullable Input<Boolean> expiredObjectDeleteMarker;

    public Input<Boolean> getExpiredObjectDeleteMarker() {
        return this.expiredObjectDeleteMarker == null ? Input.empty() : this.expiredObjectDeleteMarker;
    }

    public BucketLifecycleRuleExpirationGetArgs(
        @Nullable Input<String> date,
        @Nullable Input<Integer> days,
        @Nullable Input<Boolean> expiredObjectDeleteMarker) {
        this.date = date;
        this.days = days;
        this.expiredObjectDeleteMarker = expiredObjectDeleteMarker;
    }

    private BucketLifecycleRuleExpirationGetArgs() {
        this.date = Input.empty();
        this.days = Input.empty();
        this.expiredObjectDeleteMarker = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BucketLifecycleRuleExpirationGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> date;
        private @Nullable Input<Integer> days;
        private @Nullable Input<Boolean> expiredObjectDeleteMarker;

        public Builder() {
    	      // Empty
        }

        public Builder(BucketLifecycleRuleExpirationGetArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.date = defaults.date;
    	      this.days = defaults.days;
    	      this.expiredObjectDeleteMarker = defaults.expiredObjectDeleteMarker;
        }

        public Builder date(@Nullable Input<String> date) {
            this.date = date;
            return this;
        }

        public Builder date(@Nullable String date) {
            this.date = Input.ofNullable(date);
            return this;
        }

        public Builder days(@Nullable Input<Integer> days) {
            this.days = days;
            return this;
        }

        public Builder days(@Nullable Integer days) {
            this.days = Input.ofNullable(days);
            return this;
        }

        public Builder expiredObjectDeleteMarker(@Nullable Input<Boolean> expiredObjectDeleteMarker) {
            this.expiredObjectDeleteMarker = expiredObjectDeleteMarker;
            return this;
        }

        public Builder expiredObjectDeleteMarker(@Nullable Boolean expiredObjectDeleteMarker) {
            this.expiredObjectDeleteMarker = Input.ofNullable(expiredObjectDeleteMarker);
            return this;
        }
        public BucketLifecycleRuleExpirationGetArgs build() {
            return new BucketLifecycleRuleExpirationGetArgs(date, days, expiredObjectDeleteMarker);
        }
    }
}
