// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.cloudwatch.inputs;

import io.pulumi.aws.cloudwatch.inputs.EventConnectionAuthParametersApiKeyGetArgs;
import io.pulumi.aws.cloudwatch.inputs.EventConnectionAuthParametersBasicGetArgs;
import io.pulumi.aws.cloudwatch.inputs.EventConnectionAuthParametersInvocationHttpParametersGetArgs;
import io.pulumi.aws.cloudwatch.inputs.EventConnectionAuthParametersOauthGetArgs;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.util.Objects;
import javax.annotation.Nullable;


public final class EventConnectionAuthParametersGetArgs extends io.pulumi.resources.ResourceArgs {

    public static final EventConnectionAuthParametersGetArgs Empty = new EventConnectionAuthParametersGetArgs();

    /**
     * Parameters used for API_KEY authorization. An API key to include in the header for each authentication request. A maximum of 1 are allowed. Conflicts with `basic` and `oauth`. Documented below.
     * 
     */
    @InputImport(name="apiKey")
      private final @Nullable Input<EventConnectionAuthParametersApiKeyGetArgs> apiKey;

    public Input<EventConnectionAuthParametersApiKeyGetArgs> getApiKey() {
        return this.apiKey == null ? Input.empty() : this.apiKey;
    }

    /**
     * Parameters used for BASIC authorization. A maximum of 1 are allowed. Conflicts with `api_key` and `oauth`. Documented below.
     * 
     */
    @InputImport(name="basic")
      private final @Nullable Input<EventConnectionAuthParametersBasicGetArgs> basic;

    public Input<EventConnectionAuthParametersBasicGetArgs> getBasic() {
        return this.basic == null ? Input.empty() : this.basic;
    }

    /**
     * Invocation Http Parameters are additional credentials used to sign each Invocation of the ApiDestination created from this Connection. If the ApiDestination Rule Target has additional HttpParameters, the values will be merged together, with the Connection Invocation Http Parameters taking precedence. Secret values are stored and managed by AWS Secrets Manager. A maximum of 1 are allowed. Documented below.
     * 
     */
    @InputImport(name="invocationHttpParameters")
      private final @Nullable Input<EventConnectionAuthParametersInvocationHttpParametersGetArgs> invocationHttpParameters;

    public Input<EventConnectionAuthParametersInvocationHttpParametersGetArgs> getInvocationHttpParameters() {
        return this.invocationHttpParameters == null ? Input.empty() : this.invocationHttpParameters;
    }

    /**
     * Parameters used for OAUTH_CLIENT_CREDENTIALS authorization. A maximum of 1 are allowed. Conflicts with `basic` and `api_key`. Documented below.
     * 
     */
    @InputImport(name="oauth")
      private final @Nullable Input<EventConnectionAuthParametersOauthGetArgs> oauth;

    public Input<EventConnectionAuthParametersOauthGetArgs> getOauth() {
        return this.oauth == null ? Input.empty() : this.oauth;
    }

    public EventConnectionAuthParametersGetArgs(
        @Nullable Input<EventConnectionAuthParametersApiKeyGetArgs> apiKey,
        @Nullable Input<EventConnectionAuthParametersBasicGetArgs> basic,
        @Nullable Input<EventConnectionAuthParametersInvocationHttpParametersGetArgs> invocationHttpParameters,
        @Nullable Input<EventConnectionAuthParametersOauthGetArgs> oauth) {
        this.apiKey = apiKey;
        this.basic = basic;
        this.invocationHttpParameters = invocationHttpParameters;
        this.oauth = oauth;
    }

    private EventConnectionAuthParametersGetArgs() {
        this.apiKey = Input.empty();
        this.basic = Input.empty();
        this.invocationHttpParameters = Input.empty();
        this.oauth = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(EventConnectionAuthParametersGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<EventConnectionAuthParametersApiKeyGetArgs> apiKey;
        private @Nullable Input<EventConnectionAuthParametersBasicGetArgs> basic;
        private @Nullable Input<EventConnectionAuthParametersInvocationHttpParametersGetArgs> invocationHttpParameters;
        private @Nullable Input<EventConnectionAuthParametersOauthGetArgs> oauth;

        public Builder() {
    	      // Empty
        }

        public Builder(EventConnectionAuthParametersGetArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.apiKey = defaults.apiKey;
    	      this.basic = defaults.basic;
    	      this.invocationHttpParameters = defaults.invocationHttpParameters;
    	      this.oauth = defaults.oauth;
        }

        public Builder apiKey(@Nullable Input<EventConnectionAuthParametersApiKeyGetArgs> apiKey) {
            this.apiKey = apiKey;
            return this;
        }

        public Builder apiKey(@Nullable EventConnectionAuthParametersApiKeyGetArgs apiKey) {
            this.apiKey = Input.ofNullable(apiKey);
            return this;
        }

        public Builder basic(@Nullable Input<EventConnectionAuthParametersBasicGetArgs> basic) {
            this.basic = basic;
            return this;
        }

        public Builder basic(@Nullable EventConnectionAuthParametersBasicGetArgs basic) {
            this.basic = Input.ofNullable(basic);
            return this;
        }

        public Builder invocationHttpParameters(@Nullable Input<EventConnectionAuthParametersInvocationHttpParametersGetArgs> invocationHttpParameters) {
            this.invocationHttpParameters = invocationHttpParameters;
            return this;
        }

        public Builder invocationHttpParameters(@Nullable EventConnectionAuthParametersInvocationHttpParametersGetArgs invocationHttpParameters) {
            this.invocationHttpParameters = Input.ofNullable(invocationHttpParameters);
            return this;
        }

        public Builder oauth(@Nullable Input<EventConnectionAuthParametersOauthGetArgs> oauth) {
            this.oauth = oauth;
            return this;
        }

        public Builder oauth(@Nullable EventConnectionAuthParametersOauthGetArgs oauth) {
            this.oauth = Input.ofNullable(oauth);
            return this;
        }
        public EventConnectionAuthParametersGetArgs build() {
            return new EventConnectionAuthParametersGetArgs(apiKey, basic, invocationHttpParameters, oauth);
        }
    }
}
