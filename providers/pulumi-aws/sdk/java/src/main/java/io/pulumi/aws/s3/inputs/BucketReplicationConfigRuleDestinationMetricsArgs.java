// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.s3.inputs;

import io.pulumi.aws.s3.inputs.BucketReplicationConfigRuleDestinationMetricsEventThresholdArgs;
import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class BucketReplicationConfigRuleDestinationMetricsArgs extends io.pulumi.resources.ResourceArgs {

    public static final BucketReplicationConfigRuleDestinationMetricsArgs Empty = new BucketReplicationConfigRuleDestinationMetricsArgs();

    /**
     * A configuration block that specifies the time threshold for emitting the `s3:Replication:OperationMissedThreshold` event documented below.
     * 
     */
    @InputImport(name="eventThreshold")
    private final @Nullable Input<BucketReplicationConfigRuleDestinationMetricsEventThresholdArgs> eventThreshold;

    public Input<BucketReplicationConfigRuleDestinationMetricsEventThresholdArgs> getEventThreshold() {
        return this.eventThreshold == null ? Input.empty() : this.eventThreshold;
    }

    /**
     * The status of the Destination Metrics. Either `"Enabled"` or `"Disabled"`.
     * 
     */
    @InputImport(name="status", required=true)
    private final Input<String> status;

    public Input<String> getStatus() {
        return this.status;
    }

    public BucketReplicationConfigRuleDestinationMetricsArgs(
        @Nullable Input<BucketReplicationConfigRuleDestinationMetricsEventThresholdArgs> eventThreshold,
        Input<String> status) {
        this.eventThreshold = eventThreshold;
        this.status = Objects.requireNonNull(status, "expected parameter 'status' to be non-null");
    }

    private BucketReplicationConfigRuleDestinationMetricsArgs() {
        this.eventThreshold = Input.empty();
        this.status = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BucketReplicationConfigRuleDestinationMetricsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<BucketReplicationConfigRuleDestinationMetricsEventThresholdArgs> eventThreshold;
        private Input<String> status;

        public Builder() {
    	      // Empty
        }

        public Builder(BucketReplicationConfigRuleDestinationMetricsArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.eventThreshold = defaults.eventThreshold;
    	      this.status = defaults.status;
        }

        public Builder setEventThreshold(@Nullable Input<BucketReplicationConfigRuleDestinationMetricsEventThresholdArgs> eventThreshold) {
            this.eventThreshold = eventThreshold;
            return this;
        }

        public Builder setEventThreshold(@Nullable BucketReplicationConfigRuleDestinationMetricsEventThresholdArgs eventThreshold) {
            this.eventThreshold = Input.ofNullable(eventThreshold);
            return this;
        }

        public Builder setStatus(Input<String> status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }

        public Builder setStatus(String status) {
            this.status = Input.of(Objects.requireNonNull(status));
            return this;
        }
        public BucketReplicationConfigRuleDestinationMetricsArgs build() {
            return new BucketReplicationConfigRuleDestinationMetricsArgs(eventThreshold, status);
        }
    }
}
