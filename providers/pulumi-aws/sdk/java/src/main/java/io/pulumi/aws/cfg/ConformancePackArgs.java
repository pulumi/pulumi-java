// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.cfg;

import io.pulumi.aws.cfg.inputs.ConformancePackInputParameterArgs;
import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ConformancePackArgs extends io.pulumi.resources.ResourceArgs {

    public static final ConformancePackArgs Empty = new ConformancePackArgs();

    /**
     * Amazon S3 bucket where AWS Config stores conformance pack templates. Maximum length of 63.
     * 
     */
    @InputImport(name="deliveryS3Bucket")
    private final @Nullable Input<String> deliveryS3Bucket;

    public Input<String> getDeliveryS3Bucket() {
        return this.deliveryS3Bucket == null ? Input.empty() : this.deliveryS3Bucket;
    }

    /**
     * The prefix for the Amazon S3 bucket. Maximum length of 1024.
     * 
     */
    @InputImport(name="deliveryS3KeyPrefix")
    private final @Nullable Input<String> deliveryS3KeyPrefix;

    public Input<String> getDeliveryS3KeyPrefix() {
        return this.deliveryS3KeyPrefix == null ? Input.empty() : this.deliveryS3KeyPrefix;
    }

    /**
     * Set of configuration blocks describing input parameters passed to the conformance pack template. Documented below. When configured, the parameters must also be included in the `template_body` or in the template stored in Amazon S3 if using `template_s3_uri`.
     * 
     */
    @InputImport(name="inputParameters")
    private final @Nullable Input<List<ConformancePackInputParameterArgs>> inputParameters;

    public Input<List<ConformancePackInputParameterArgs>> getInputParameters() {
        return this.inputParameters == null ? Input.empty() : this.inputParameters;
    }

    /**
     * The name of the conformance pack. Must begin with a letter and contain from 1 to 256 alphanumeric characters and hyphens.
     * 
     */
    @InputImport(name="name")
    private final @Nullable Input<String> name;

    public Input<String> getName() {
        return this.name == null ? Input.empty() : this.name;
    }

    /**
     * A string containing full conformance pack template body. Maximum length of 51200. Drift detection is not possible with this argument.
     * 
     */
    @InputImport(name="templateBody")
    private final @Nullable Input<String> templateBody;

    public Input<String> getTemplateBody() {
        return this.templateBody == null ? Input.empty() : this.templateBody;
    }

    /**
     * Location of file, e.g., `s3://bucketname/prefix`, containing the template body. The uri must point to the conformance pack template that is located in an Amazon S3 bucket in the same region as the conformance pack. Maximum length of 1024. Drift detection is not possible with this argument.
     * 
     */
    @InputImport(name="templateS3Uri")
    private final @Nullable Input<String> templateS3Uri;

    public Input<String> getTemplateS3Uri() {
        return this.templateS3Uri == null ? Input.empty() : this.templateS3Uri;
    }

    public ConformancePackArgs(
        @Nullable Input<String> deliveryS3Bucket,
        @Nullable Input<String> deliveryS3KeyPrefix,
        @Nullable Input<List<ConformancePackInputParameterArgs>> inputParameters,
        @Nullable Input<String> name,
        @Nullable Input<String> templateBody,
        @Nullable Input<String> templateS3Uri) {
        this.deliveryS3Bucket = deliveryS3Bucket;
        this.deliveryS3KeyPrefix = deliveryS3KeyPrefix;
        this.inputParameters = inputParameters;
        this.name = name;
        this.templateBody = templateBody;
        this.templateS3Uri = templateS3Uri;
    }

    private ConformancePackArgs() {
        this.deliveryS3Bucket = Input.empty();
        this.deliveryS3KeyPrefix = Input.empty();
        this.inputParameters = Input.empty();
        this.name = Input.empty();
        this.templateBody = Input.empty();
        this.templateS3Uri = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ConformancePackArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> deliveryS3Bucket;
        private @Nullable Input<String> deliveryS3KeyPrefix;
        private @Nullable Input<List<ConformancePackInputParameterArgs>> inputParameters;
        private @Nullable Input<String> name;
        private @Nullable Input<String> templateBody;
        private @Nullable Input<String> templateS3Uri;

        public Builder() {
    	      // Empty
        }

        public Builder(ConformancePackArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.deliveryS3Bucket = defaults.deliveryS3Bucket;
    	      this.deliveryS3KeyPrefix = defaults.deliveryS3KeyPrefix;
    	      this.inputParameters = defaults.inputParameters;
    	      this.name = defaults.name;
    	      this.templateBody = defaults.templateBody;
    	      this.templateS3Uri = defaults.templateS3Uri;
        }

        public Builder setDeliveryS3Bucket(@Nullable Input<String> deliveryS3Bucket) {
            this.deliveryS3Bucket = deliveryS3Bucket;
            return this;
        }

        public Builder setDeliveryS3Bucket(@Nullable String deliveryS3Bucket) {
            this.deliveryS3Bucket = Input.ofNullable(deliveryS3Bucket);
            return this;
        }

        public Builder setDeliveryS3KeyPrefix(@Nullable Input<String> deliveryS3KeyPrefix) {
            this.deliveryS3KeyPrefix = deliveryS3KeyPrefix;
            return this;
        }

        public Builder setDeliveryS3KeyPrefix(@Nullable String deliveryS3KeyPrefix) {
            this.deliveryS3KeyPrefix = Input.ofNullable(deliveryS3KeyPrefix);
            return this;
        }

        public Builder setInputParameters(@Nullable Input<List<ConformancePackInputParameterArgs>> inputParameters) {
            this.inputParameters = inputParameters;
            return this;
        }

        public Builder setInputParameters(@Nullable List<ConformancePackInputParameterArgs> inputParameters) {
            this.inputParameters = Input.ofNullable(inputParameters);
            return this;
        }

        public Builder setName(@Nullable Input<String> name) {
            this.name = name;
            return this;
        }

        public Builder setName(@Nullable String name) {
            this.name = Input.ofNullable(name);
            return this;
        }

        public Builder setTemplateBody(@Nullable Input<String> templateBody) {
            this.templateBody = templateBody;
            return this;
        }

        public Builder setTemplateBody(@Nullable String templateBody) {
            this.templateBody = Input.ofNullable(templateBody);
            return this;
        }

        public Builder setTemplateS3Uri(@Nullable Input<String> templateS3Uri) {
            this.templateS3Uri = templateS3Uri;
            return this;
        }

        public Builder setTemplateS3Uri(@Nullable String templateS3Uri) {
            this.templateS3Uri = Input.ofNullable(templateS3Uri);
            return this;
        }
        public ConformancePackArgs build() {
            return new ConformancePackArgs(deliveryS3Bucket, deliveryS3KeyPrefix, inputParameters, name, templateBody, templateS3Uri);
        }
    }
}
