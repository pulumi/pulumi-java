// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.ecr.outputs;

import io.pulumi.aws.ecr.outputs.ReplicationConfigurationReplicationConfigurationRuleDestination;
import io.pulumi.aws.ecr.outputs.ReplicationConfigurationReplicationConfigurationRuleRepositoryFilter;
import io.pulumi.core.annotations.OutputCustomType;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@OutputCustomType
public final class ReplicationConfigurationReplicationConfigurationRule {
    /**
     * the details of a replication destination. A maximum of 25 are allowed per `rule`. See Destination.
     * 
     */
    private final List<ReplicationConfigurationReplicationConfigurationRuleDestination> destinations;
    /**
     * filters for a replication rule. See Repository Filter.
     * 
     */
    private final @Nullable List<ReplicationConfigurationReplicationConfigurationRuleRepositoryFilter> repositoryFilters;

    @OutputCustomType.Constructor
    private ReplicationConfigurationReplicationConfigurationRule(
        @OutputCustomType.Parameter("destinations") List<ReplicationConfigurationReplicationConfigurationRuleDestination> destinations,
        @OutputCustomType.Parameter("repositoryFilters") @Nullable List<ReplicationConfigurationReplicationConfigurationRuleRepositoryFilter> repositoryFilters) {
        this.destinations = destinations;
        this.repositoryFilters = repositoryFilters;
    }

    /**
     * the details of a replication destination. A maximum of 25 are allowed per `rule`. See Destination.
     * 
    */
    public List<ReplicationConfigurationReplicationConfigurationRuleDestination> getDestinations() {
        return this.destinations;
    }
    /**
     * filters for a replication rule. See Repository Filter.
     * 
    */
    public List<ReplicationConfigurationReplicationConfigurationRuleRepositoryFilter> getRepositoryFilters() {
        return this.repositoryFilters == null ? List.of() : this.repositoryFilters;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ReplicationConfigurationReplicationConfigurationRule defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<ReplicationConfigurationReplicationConfigurationRuleDestination> destinations;
        private @Nullable List<ReplicationConfigurationReplicationConfigurationRuleRepositoryFilter> repositoryFilters;

        public Builder() {
    	      // Empty
        }

        public Builder(ReplicationConfigurationReplicationConfigurationRule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.destinations = defaults.destinations;
    	      this.repositoryFilters = defaults.repositoryFilters;
        }

        public Builder destinations(List<ReplicationConfigurationReplicationConfigurationRuleDestination> destinations) {
            this.destinations = Objects.requireNonNull(destinations);
            return this;
        }

        public Builder repositoryFilters(@Nullable List<ReplicationConfigurationReplicationConfigurationRuleRepositoryFilter> repositoryFilters) {
            this.repositoryFilters = repositoryFilters;
            return this;
        }
        public ReplicationConfigurationReplicationConfigurationRule build() {
            return new ReplicationConfigurationReplicationConfigurationRule(destinations, repositoryFilters);
        }
    }
}
