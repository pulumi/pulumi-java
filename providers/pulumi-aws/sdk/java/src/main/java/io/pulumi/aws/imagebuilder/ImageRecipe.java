// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.imagebuilder;

import io.pulumi.aws.Utilities;
import io.pulumi.aws.imagebuilder.ImageRecipeArgs;
import io.pulumi.aws.imagebuilder.inputs.ImageRecipeState;
import io.pulumi.aws.imagebuilder.outputs.ImageRecipeBlockDeviceMapping;
import io.pulumi.aws.imagebuilder.outputs.ImageRecipeComponent;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Export;
import io.pulumi.core.annotations.ResourceType;
import io.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;

/**
 * Manages an Image Builder Image Recipe.
 * 
 * ## Example Usage
 * 
 * ## Import
 * 
 * `aws_imagebuilder_image_recipe` resources can be imported by using the Amazon Resource Name (ARN), e.g.,
 * 
 * ```sh
 *  $ pulumi import aws:imagebuilder/imageRecipe:ImageRecipe example arn:aws:imagebuilder:us-east-1:123456789012:image-recipe/example/1.0.0
 * ```
 * 
 */
@ResourceType(type="aws:imagebuilder/imageRecipe:ImageRecipe")
public class ImageRecipe extends io.pulumi.resources.CustomResource {
    /**
     * (Required) Amazon Resource Name (ARN) of the image recipe.
     * 
     */
    @Export(name="arn", type=String.class, parameters={})
    private Output<String> arn;

    /**
     * @return (Required) Amazon Resource Name (ARN) of the image recipe.
     * 
     */
    public Output<String> getArn() {
        return this.arn;
    }
    /**
     * Configuration block(s) with block device mappings for the the image recipe. Detailed below.
     * 
     */
    @Export(name="blockDeviceMappings", type=List.class, parameters={ImageRecipeBlockDeviceMapping.class})
    private Output</* @Nullable */ List<ImageRecipeBlockDeviceMapping>> blockDeviceMappings;

    /**
     * @return Configuration block(s) with block device mappings for the the image recipe. Detailed below.
     * 
     */
    public Output</* @Nullable */ List<ImageRecipeBlockDeviceMapping>> getBlockDeviceMappings() {
        return this.blockDeviceMappings;
    }
    /**
     * Ordered configuration block(s) with components for the image recipe. Detailed below.
     * 
     */
    @Export(name="components", type=List.class, parameters={ImageRecipeComponent.class})
    private Output<List<ImageRecipeComponent>> components;

    /**
     * @return Ordered configuration block(s) with components for the image recipe. Detailed below.
     * 
     */
    public Output<List<ImageRecipeComponent>> getComponents() {
        return this.components;
    }
    /**
     * Date the image recipe was created.
     * 
     */
    @Export(name="dateCreated", type=String.class, parameters={})
    private Output<String> dateCreated;

    /**
     * @return Date the image recipe was created.
     * 
     */
    public Output<String> getDateCreated() {
        return this.dateCreated;
    }
    /**
     * Description of the image recipe.
     * 
     */
    @Export(name="description", type=String.class, parameters={})
    private Output</* @Nullable */ String> description;

    /**
     * @return Description of the image recipe.
     * 
     */
    public Output</* @Nullable */ String> getDescription() {
        return this.description;
    }
    /**
     * Name of the image recipe.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return Name of the image recipe.
     * 
     */
    public Output<String> getName() {
        return this.name;
    }
    /**
     * Owner of the image recipe.
     * 
     */
    @Export(name="owner", type=String.class, parameters={})
    private Output<String> owner;

    /**
     * @return Owner of the image recipe.
     * 
     */
    public Output<String> getOwner() {
        return this.owner;
    }
    /**
     * Platform of the image recipe.
     * 
     */
    @Export(name="parentImage", type=String.class, parameters={})
    private Output<String> parentImage;

    /**
     * @return Platform of the image recipe.
     * 
     */
    public Output<String> getParentImage() {
        return this.parentImage;
    }
    /**
     * Platform of the image recipe.
     * 
     */
    @Export(name="platform", type=String.class, parameters={})
    private Output<String> platform;

    /**
     * @return Platform of the image recipe.
     * 
     */
    public Output<String> getPlatform() {
        return this.platform;
    }
    /**
     * Key-value map of resource tags for the image recipe. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Export(name="tags", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return Key-value map of resource tags for the image recipe. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Output</* @Nullable */ Map<String,String>> getTags() {
        return this.tags;
    }
    /**
     * A map of tags assigned to the resource, including those inherited from the provider .
     * 
     */
    @Export(name="tagsAll", type=Map.class, parameters={String.class, String.class})
    private Output<Map<String,String>> tagsAll;

    /**
     * @return A map of tags assigned to the resource, including those inherited from the provider .
     * 
     */
    public Output<Map<String,String>> getTagsAll() {
        return this.tagsAll;
    }
    /**
     * Base64 encoded user data. Use this to provide commands or a command script to run when you launch your build instance.
     * 
     */
    @Export(name="userDataBase64", type=String.class, parameters={})
    private Output<String> userDataBase64;

    /**
     * @return Base64 encoded user data. Use this to provide commands or a command script to run when you launch your build instance.
     * 
     */
    public Output<String> getUserDataBase64() {
        return this.userDataBase64;
    }
    /**
     * Version of the image recipe.
     * 
     */
    @Export(name="version", type=String.class, parameters={})
    private Output<String> version;

    /**
     * @return Version of the image recipe.
     * 
     */
    public Output<String> getVersion() {
        return this.version;
    }
    /**
     * The working directory to be used during build and test workflows.
     * 
     */
    @Export(name="workingDirectory", type=String.class, parameters={})
    private Output</* @Nullable */ String> workingDirectory;

    /**
     * @return The working directory to be used during build and test workflows.
     * 
     */
    public Output</* @Nullable */ String> getWorkingDirectory() {
        return this.workingDirectory;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ImageRecipe(String name) {
        this(name, ImageRecipeArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ImageRecipe(String name, ImageRecipeArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ImageRecipe(String name, ImageRecipeArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:imagebuilder/imageRecipe:ImageRecipe", name, args == null ? ImageRecipeArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private ImageRecipe(String name, Output<String> id, @Nullable ImageRecipeState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:imagebuilder/imageRecipe:ImageRecipe", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ImageRecipe get(String name, Output<String> id, @Nullable ImageRecipeState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new ImageRecipe(name, id, state, options);
    }
}
