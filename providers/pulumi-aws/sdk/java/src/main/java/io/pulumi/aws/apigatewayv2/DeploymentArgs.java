// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.apigatewayv2;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class DeploymentArgs extends io.pulumi.resources.ResourceArgs {

    public static final DeploymentArgs Empty = new DeploymentArgs();

    /**
     * The API identifier.
     * 
     */
    @InputImport(name="apiId", required=true)
      private final Input<String> apiId;

    public Input<String> getApiId() {
        return this.apiId;
    }

    /**
     * The description for the deployment resource. Must be less than or equal to 1024 characters in length.
     * 
     */
    @InputImport(name="description")
      private final @Nullable Input<String> description;

    public Input<String> getDescription() {
        return this.description == null ? Input.empty() : this.description;
    }

    /**
     * A map of arbitrary keys and values that, when changed, will trigger a redeployment.
     * 
     */
    @InputImport(name="triggers")
      private final @Nullable Input<Map<String,String>> triggers;

    public Input<Map<String,String>> getTriggers() {
        return this.triggers == null ? Input.empty() : this.triggers;
    }

    public DeploymentArgs(
        Input<String> apiId,
        @Nullable Input<String> description,
        @Nullable Input<Map<String,String>> triggers) {
        this.apiId = Objects.requireNonNull(apiId, "expected parameter 'apiId' to be non-null");
        this.description = description;
        this.triggers = triggers;
    }

    private DeploymentArgs() {
        this.apiId = Input.empty();
        this.description = Input.empty();
        this.triggers = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DeploymentArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<String> apiId;
        private @Nullable Input<String> description;
        private @Nullable Input<Map<String,String>> triggers;

        public Builder() {
    	      // Empty
        }

        public Builder(DeploymentArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.apiId = defaults.apiId;
    	      this.description = defaults.description;
    	      this.triggers = defaults.triggers;
        }

        public Builder apiId(Input<String> apiId) {
            this.apiId = Objects.requireNonNull(apiId);
            return this;
        }

        public Builder apiId(String apiId) {
            this.apiId = Input.of(Objects.requireNonNull(apiId));
            return this;
        }

        public Builder description(@Nullable Input<String> description) {
            this.description = description;
            return this;
        }

        public Builder description(@Nullable String description) {
            this.description = Input.ofNullable(description);
            return this;
        }

        public Builder triggers(@Nullable Input<Map<String,String>> triggers) {
            this.triggers = triggers;
            return this;
        }

        public Builder triggers(@Nullable Map<String,String> triggers) {
            this.triggers = Input.ofNullable(triggers);
            return this;
        }
        public DeploymentArgs build() {
            return new DeploymentArgs(apiId, description, triggers);
        }
    }
}
