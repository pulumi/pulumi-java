// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.sagemaker.inputs;

import io.pulumi.aws.sagemaker.inputs.ProjectServiceCatalogProvisioningDetailsGetArgs;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ProjectState extends io.pulumi.resources.ResourceArgs {

    public static final ProjectState Empty = new ProjectState();

    /**
     * The Amazon Resource Name (ARN) assigned by AWS to this Project.
     * 
     */
    @InputImport(name="arn")
      private final @Nullable Input<String> arn;

    public Input<String> getArn() {
        return this.arn == null ? Input.empty() : this.arn;
    }

    /**
     * A description for the project.
     * 
     */
    @InputImport(name="projectDescription")
      private final @Nullable Input<String> projectDescription;

    public Input<String> getProjectDescription() {
        return this.projectDescription == null ? Input.empty() : this.projectDescription;
    }

    /**
     * The ID of the project.
     * 
     */
    @InputImport(name="projectId")
      private final @Nullable Input<String> projectId;

    public Input<String> getProjectId() {
        return this.projectId == null ? Input.empty() : this.projectId;
    }

    /**
     * The name of the Project.
     * 
     */
    @InputImport(name="projectName")
      private final @Nullable Input<String> projectName;

    public Input<String> getProjectName() {
        return this.projectName == null ? Input.empty() : this.projectName;
    }

    /**
     * The product ID and provisioning artifact ID to provision a service catalog. See Service Catalog Provisioning Details below.
     * 
     */
    @InputImport(name="serviceCatalogProvisioningDetails")
      private final @Nullable Input<ProjectServiceCatalogProvisioningDetailsGetArgs> serviceCatalogProvisioningDetails;

    public Input<ProjectServiceCatalogProvisioningDetailsGetArgs> getServiceCatalogProvisioningDetails() {
        return this.serviceCatalogProvisioningDetails == null ? Input.empty() : this.serviceCatalogProvisioningDetails;
    }

    /**
     * A map of tags to assign to the resource. If configured with a provider [`default_tags` configuration block](https://www.terraform.io/docs/providers/aws/index.html#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @InputImport(name="tags")
      private final @Nullable Input<Map<String,String>> tags;

    public Input<Map<String,String>> getTags() {
        return this.tags == null ? Input.empty() : this.tags;
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider [`default_tags` configuration block](https://www.terraform.io/docs/providers/aws/index.html#default_tags-configuration-block).
     * 
     */
    @InputImport(name="tagsAll")
      private final @Nullable Input<Map<String,String>> tagsAll;

    public Input<Map<String,String>> getTagsAll() {
        return this.tagsAll == null ? Input.empty() : this.tagsAll;
    }

    public ProjectState(
        @Nullable Input<String> arn,
        @Nullable Input<String> projectDescription,
        @Nullable Input<String> projectId,
        @Nullable Input<String> projectName,
        @Nullable Input<ProjectServiceCatalogProvisioningDetailsGetArgs> serviceCatalogProvisioningDetails,
        @Nullable Input<Map<String,String>> tags,
        @Nullable Input<Map<String,String>> tagsAll) {
        this.arn = arn;
        this.projectDescription = projectDescription;
        this.projectId = projectId;
        this.projectName = projectName;
        this.serviceCatalogProvisioningDetails = serviceCatalogProvisioningDetails;
        this.tags = tags;
        this.tagsAll = tagsAll;
    }

    private ProjectState() {
        this.arn = Input.empty();
        this.projectDescription = Input.empty();
        this.projectId = Input.empty();
        this.projectName = Input.empty();
        this.serviceCatalogProvisioningDetails = Input.empty();
        this.tags = Input.empty();
        this.tagsAll = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ProjectState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> arn;
        private @Nullable Input<String> projectDescription;
        private @Nullable Input<String> projectId;
        private @Nullable Input<String> projectName;
        private @Nullable Input<ProjectServiceCatalogProvisioningDetailsGetArgs> serviceCatalogProvisioningDetails;
        private @Nullable Input<Map<String,String>> tags;
        private @Nullable Input<Map<String,String>> tagsAll;

        public Builder() {
    	      // Empty
        }

        public Builder(ProjectState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.projectDescription = defaults.projectDescription;
    	      this.projectId = defaults.projectId;
    	      this.projectName = defaults.projectName;
    	      this.serviceCatalogProvisioningDetails = defaults.serviceCatalogProvisioningDetails;
    	      this.tags = defaults.tags;
    	      this.tagsAll = defaults.tagsAll;
        }

        public Builder setArn(@Nullable Input<String> arn) {
            this.arn = arn;
            return this;
        }

        public Builder setArn(@Nullable String arn) {
            this.arn = Input.ofNullable(arn);
            return this;
        }

        public Builder setProjectDescription(@Nullable Input<String> projectDescription) {
            this.projectDescription = projectDescription;
            return this;
        }

        public Builder setProjectDescription(@Nullable String projectDescription) {
            this.projectDescription = Input.ofNullable(projectDescription);
            return this;
        }

        public Builder setProjectId(@Nullable Input<String> projectId) {
            this.projectId = projectId;
            return this;
        }

        public Builder setProjectId(@Nullable String projectId) {
            this.projectId = Input.ofNullable(projectId);
            return this;
        }

        public Builder setProjectName(@Nullable Input<String> projectName) {
            this.projectName = projectName;
            return this;
        }

        public Builder setProjectName(@Nullable String projectName) {
            this.projectName = Input.ofNullable(projectName);
            return this;
        }

        public Builder setServiceCatalogProvisioningDetails(@Nullable Input<ProjectServiceCatalogProvisioningDetailsGetArgs> serviceCatalogProvisioningDetails) {
            this.serviceCatalogProvisioningDetails = serviceCatalogProvisioningDetails;
            return this;
        }

        public Builder setServiceCatalogProvisioningDetails(@Nullable ProjectServiceCatalogProvisioningDetailsGetArgs serviceCatalogProvisioningDetails) {
            this.serviceCatalogProvisioningDetails = Input.ofNullable(serviceCatalogProvisioningDetails);
            return this;
        }

        public Builder setTags(@Nullable Input<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }

        public Builder setTags(@Nullable Map<String,String> tags) {
            this.tags = Input.ofNullable(tags);
            return this;
        }

        public Builder setTagsAll(@Nullable Input<Map<String,String>> tagsAll) {
            this.tagsAll = tagsAll;
            return this;
        }

        public Builder setTagsAll(@Nullable Map<String,String> tagsAll) {
            this.tagsAll = Input.ofNullable(tagsAll);
            return this;
        }
        public ProjectState build() {
            return new ProjectState(arn, projectDescription, projectId, projectName, serviceCatalogProvisioningDetails, tags, tagsAll);
        }
    }
}
