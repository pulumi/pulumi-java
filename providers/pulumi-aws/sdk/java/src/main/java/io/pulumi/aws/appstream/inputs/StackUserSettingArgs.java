// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.appstream.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;


public final class StackUserSettingArgs extends io.pulumi.resources.ResourceArgs {

    public static final StackUserSettingArgs Empty = new StackUserSettingArgs();

    /**
     * Action that is enabled or disabled. Valid values are: `CLIPBOARD_COPY_FROM_LOCAL_DEVICE`,  `CLIPBOARD_COPY_TO_LOCAL_DEVICE`, `FILE_UPLOAD`, `FILE_DOWNLOAD`, `PRINTING_TO_LOCAL_DEVICE`, `DOMAIN_PASSWORD_SIGNIN`, `DOMAIN_SMART_CARD_SIGNIN`.
     * 
     */
    @InputImport(name="action", required=true)
      private final Input<String> action;

    public Input<String> getAction() {
        return this.action;
    }

    /**
     * Indicates whether the action is enabled or disabled. Valid values are: `ENABLED`, `DISABLED`.
     * 
     */
    @InputImport(name="permission", required=true)
      private final Input<String> permission;

    public Input<String> getPermission() {
        return this.permission;
    }

    public StackUserSettingArgs(
        Input<String> action,
        Input<String> permission) {
        this.action = Objects.requireNonNull(action, "expected parameter 'action' to be non-null");
        this.permission = Objects.requireNonNull(permission, "expected parameter 'permission' to be non-null");
    }

    private StackUserSettingArgs() {
        this.action = Input.empty();
        this.permission = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(StackUserSettingArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<String> action;
        private Input<String> permission;

        public Builder() {
    	      // Empty
        }

        public Builder(StackUserSettingArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.action = defaults.action;
    	      this.permission = defaults.permission;
        }

        public Builder action(Input<String> action) {
            this.action = Objects.requireNonNull(action);
            return this;
        }

        public Builder action(String action) {
            this.action = Input.of(Objects.requireNonNull(action));
            return this;
        }

        public Builder permission(Input<String> permission) {
            this.permission = Objects.requireNonNull(permission);
            return this;
        }

        public Builder permission(String permission) {
            this.permission = Input.of(Objects.requireNonNull(permission));
            return this;
        }
        public StackUserSettingArgs build() {
            return new StackUserSettingArgs(action, permission);
        }
    }
}
