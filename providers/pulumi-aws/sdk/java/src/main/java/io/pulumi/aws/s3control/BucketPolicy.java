// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.s3control;

import io.pulumi.aws.Utilities;
import io.pulumi.aws.s3control.BucketPolicyArgs;
import io.pulumi.aws.s3control.inputs.BucketPolicyState;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Export;
import io.pulumi.core.annotations.ResourceType;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * Provides a resource to manage an S3 Control Bucket Policy.
 * 
 * > This functionality is for managing [S3 on Outposts](https://docs.aws.amazon.com/AmazonS3/latest/dev/S3onOutposts.html). To manage S3 Bucket Policies in an AWS Partition, see the `aws.s3.BucketPolicy` resource.
 * 
 * {{% examples %}}
 * ## Example Usage
 * {{% example %}}
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 * 
 * const example = new aws.s3control.BucketPolicy("example", {
 *     bucket: aws_s3control_bucket.example.arn,
 *     policy: JSON.stringify({
 *         Id: "testBucketPolicy",
 *         Statement: [{
 *             Action: "s3-outposts:PutBucketLifecycleConfiguration",
 *             Effect: "Deny",
 *             Principal: {
 *                 AWS: "*",
 *             },
 *             Resource: aws_s3control_bucket.example.arn,
 *             Sid: "statement1",
 *         }],
 *         Version: "2012-10-17",
 *     }),
 * });
 * ```
 * ```python
 * import pulumi
 * import json
 * import pulumi_aws as aws
 * 
 * example = aws.s3control.BucketPolicy("example",
 *     bucket=aws_s3control_bucket["example"]["arn"],
 *     policy=json.dumps({
 *         "Id": "testBucketPolicy",
 *         "Statement": [{
 *             "Action": "s3-outposts:PutBucketLifecycleConfiguration",
 *             "Effect": "Deny",
 *             "Principal": {
 *                 "AWS": "*",
 *             },
 *             "Resource": aws_s3control_bucket["example"]["arn"],
 *             "Sid": "statement1",
 *         }],
 *         "Version": "2012-10-17",
 *     }))
 * ```
 * ```csharp
 * using System.Collections.Generic;
 * using System.Text.Json;
 * using Pulumi;
 * using Aws = Pulumi.Aws;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var example = new Aws.S3Control.BucketPolicy("example", new Aws.S3Control.BucketPolicyArgs
 *         {
 *             Bucket = aws_s3control_bucket.Example.Arn,
 *             Policy = JsonSerializer.Serialize(new Dictionary<string, object?>
 *             {
 *                 { "Id", "testBucketPolicy" },
 *                 { "Statement", new[]
 *                     {
 *                         new Dictionary<string, object?>
 *                         {
 *                             { "Action", "s3-outposts:PutBucketLifecycleConfiguration" },
 *                             { "Effect", "Deny" },
 *                             { "Principal", new Dictionary<string, object?>
 *                             {
 *                                 { "AWS", "*" },
 *                             } },
 *                             { "Resource", aws_s3control_bucket.Example.Arn },
 *                             { "Sid", "statement1" },
 *                         },
 *                     }
 *                  },
 *                 { "Version", "2012-10-17" },
 *             }),
 *         });
 *     }
 * 
 * }
 * ```
 * ```go
 * package main
 * 
 * import (
 * 	"encoding/json"
 * 
 * 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/s3control"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		tmpJSON0, err := json.Marshal(map[string]interface{}{
 * 			"Id": "testBucketPolicy",
 * 			"Statement": []map[string]interface{}{
 * 				map[string]interface{}{
 * 					"Action": "s3-outposts:PutBucketLifecycleConfiguration",
 * 					"Effect": "Deny",
 * 					"Principal": map[string]interface{}{
 * 						"AWS": "*",
 * 					},
 * 					"Resource": aws_s3control_bucket.Example.Arn,
 * 					"Sid":      "statement1",
 * 				},
 * 			},
 * 			"Version": "2012-10-17",
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		json0 := string(tmpJSON0)
 * 		_, err := s3control.NewBucketPolicy(ctx, "example", &s3control.BucketPolicyArgs{
 * 			Bucket: pulumi.Any(aws_s3control_bucket.Example.Arn),
 * 			Policy: pulumi.String(json0),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * ```
 * {{% /example %}}
 * {{% /examples %}}
 * 
 * ## Import
 * 
 * S3 Control Bucket Policies can be imported using the Amazon Resource Name (ARN), e.g.,
 * 
 * ```sh
 *  $ pulumi import aws:s3control/bucketPolicy:BucketPolicy example arn:aws:s3-outposts:us-east-1:123456789012:outpost/op-12345678/bucket/example
 * ```
 * 
 *  
 */
@ResourceType(type="aws:s3control/bucketPolicy:BucketPolicy")
public class BucketPolicy extends io.pulumi.resources.CustomResource {
    /**
     * Amazon Resource Name (ARN) of the bucket.
     * 
     */
    @Export(name="bucket", type=String.class, parameters={})
    private Output<String> bucket;

    /**
     * @return Amazon Resource Name (ARN) of the bucket.
     * 
     */
    public Output<String> getBucket() {
        return this.bucket;
    }
    /**
     * JSON string of the resource policy.
     * 
     */
    @Export(name="policy", type=String.class, parameters={})
    private Output<String> policy;

    /**
     * @return JSON string of the resource policy.
     * 
     */
    public Output<String> getPolicy() {
        return this.policy;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public BucketPolicy(String name) {
        this(name, BucketPolicyArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public BucketPolicy(String name, BucketPolicyArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public BucketPolicy(String name, BucketPolicyArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:s3control/bucketPolicy:BucketPolicy", name, args == null ? BucketPolicyArgs.Empty : args, makeResourceOptions(options, Output.empty()));
    }

    private BucketPolicy(String name, Output<String> id, @Nullable BucketPolicyState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:s3control/bucketPolicy:BucketPolicy", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static BucketPolicy get(String name, Output<String> id, @Nullable BucketPolicyState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new BucketPolicy(name, id, state, options);
    }
}
