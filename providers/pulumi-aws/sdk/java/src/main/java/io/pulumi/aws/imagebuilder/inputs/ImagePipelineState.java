// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.imagebuilder.inputs;

import io.pulumi.aws.imagebuilder.inputs.ImagePipelineImageTestsConfigurationGetArgs;
import io.pulumi.aws.imagebuilder.inputs.ImagePipelineScheduleGetArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ImagePipelineState extends io.pulumi.resources.ResourceArgs {

    public static final ImagePipelineState Empty = new ImagePipelineState();

    /**
     * Amazon Resource Name (ARN) of the image pipeline.
     * 
     */
    @Import(name="arn")
      private final @Nullable Output<String> arn;

    public Output<String> getArn() {
        return this.arn == null ? Codegen.empty() : this.arn;
    }

    /**
     * Date the image pipeline was created.
     * 
     */
    @Import(name="dateCreated")
      private final @Nullable Output<String> dateCreated;

    public Output<String> getDateCreated() {
        return this.dateCreated == null ? Codegen.empty() : this.dateCreated;
    }

    /**
     * Date the image pipeline was last run.
     * 
     */
    @Import(name="dateLastRun")
      private final @Nullable Output<String> dateLastRun;

    public Output<String> getDateLastRun() {
        return this.dateLastRun == null ? Codegen.empty() : this.dateLastRun;
    }

    /**
     * Date the image pipeline will run next.
     * 
     */
    @Import(name="dateNextRun")
      private final @Nullable Output<String> dateNextRun;

    public Output<String> getDateNextRun() {
        return this.dateNextRun == null ? Codegen.empty() : this.dateNextRun;
    }

    /**
     * Date the image pipeline was updated.
     * 
     */
    @Import(name="dateUpdated")
      private final @Nullable Output<String> dateUpdated;

    public Output<String> getDateUpdated() {
        return this.dateUpdated == null ? Codegen.empty() : this.dateUpdated;
    }

    /**
     * Description of the image pipeline.
     * 
     */
    @Import(name="description")
      private final @Nullable Output<String> description;

    public Output<String> getDescription() {
        return this.description == null ? Codegen.empty() : this.description;
    }

    /**
     * Amazon Resource Name (ARN) of the Image Builder Distribution Configuration.
     * 
     */
    @Import(name="distributionConfigurationArn")
      private final @Nullable Output<String> distributionConfigurationArn;

    public Output<String> getDistributionConfigurationArn() {
        return this.distributionConfigurationArn == null ? Codegen.empty() : this.distributionConfigurationArn;
    }

    /**
     * Whether additional information about the image being created is collected. Defaults to `true`.
     * 
     */
    @Import(name="enhancedImageMetadataEnabled")
      private final @Nullable Output<Boolean> enhancedImageMetadataEnabled;

    public Output<Boolean> getEnhancedImageMetadataEnabled() {
        return this.enhancedImageMetadataEnabled == null ? Codegen.empty() : this.enhancedImageMetadataEnabled;
    }

    /**
     * Amazon Resource Name (ARN) of the Image Builder Infrastructure Recipe.
     * 
     */
    @Import(name="imageRecipeArn")
      private final @Nullable Output<String> imageRecipeArn;

    public Output<String> getImageRecipeArn() {
        return this.imageRecipeArn == null ? Codegen.empty() : this.imageRecipeArn;
    }

    /**
     * Configuration block with image tests configuration. Detailed below.
     * 
     */
    @Import(name="imageTestsConfiguration")
      private final @Nullable Output<ImagePipelineImageTestsConfigurationGetArgs> imageTestsConfiguration;

    public Output<ImagePipelineImageTestsConfigurationGetArgs> getImageTestsConfiguration() {
        return this.imageTestsConfiguration == null ? Codegen.empty() : this.imageTestsConfiguration;
    }

    /**
     * Amazon Resource Name (ARN) of the Image Builder Infrastructure Configuration.
     * 
     */
    @Import(name="infrastructureConfigurationArn")
      private final @Nullable Output<String> infrastructureConfigurationArn;

    public Output<String> getInfrastructureConfigurationArn() {
        return this.infrastructureConfigurationArn == null ? Codegen.empty() : this.infrastructureConfigurationArn;
    }

    /**
     * Name of the image pipeline.
     * 
     */
    @Import(name="name")
      private final @Nullable Output<String> name;

    public Output<String> getName() {
        return this.name == null ? Codegen.empty() : this.name;
    }

    /**
     * Platform of the image pipeline.
     * 
     */
    @Import(name="platform")
      private final @Nullable Output<String> platform;

    public Output<String> getPlatform() {
        return this.platform == null ? Codegen.empty() : this.platform;
    }

    /**
     * Configuration block with schedule settings. Detailed below.
     * 
     */
    @Import(name="schedule")
      private final @Nullable Output<ImagePipelineScheduleGetArgs> schedule;

    public Output<ImagePipelineScheduleGetArgs> getSchedule() {
        return this.schedule == null ? Codegen.empty() : this.schedule;
    }

    /**
     * Status of the image pipeline. Valid values are `DISABLED` and `ENABLED`. Defaults to `ENABLED`.
     * 
     */
    @Import(name="status")
      private final @Nullable Output<String> status;

    public Output<String> getStatus() {
        return this.status == null ? Codegen.empty() : this.status;
    }

    /**
     * Key-value map of resource tags for the image pipeline. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Import(name="tags")
      private final @Nullable Output<Map<String,String>> tags;

    public Output<Map<String,String>> getTags() {
        return this.tags == null ? Codegen.empty() : this.tags;
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider .
     * 
     */
    @Import(name="tagsAll")
      private final @Nullable Output<Map<String,String>> tagsAll;

    public Output<Map<String,String>> getTagsAll() {
        return this.tagsAll == null ? Codegen.empty() : this.tagsAll;
    }

    public ImagePipelineState(
        @Nullable Output<String> arn,
        @Nullable Output<String> dateCreated,
        @Nullable Output<String> dateLastRun,
        @Nullable Output<String> dateNextRun,
        @Nullable Output<String> dateUpdated,
        @Nullable Output<String> description,
        @Nullable Output<String> distributionConfigurationArn,
        @Nullable Output<Boolean> enhancedImageMetadataEnabled,
        @Nullable Output<String> imageRecipeArn,
        @Nullable Output<ImagePipelineImageTestsConfigurationGetArgs> imageTestsConfiguration,
        @Nullable Output<String> infrastructureConfigurationArn,
        @Nullable Output<String> name,
        @Nullable Output<String> platform,
        @Nullable Output<ImagePipelineScheduleGetArgs> schedule,
        @Nullable Output<String> status,
        @Nullable Output<Map<String,String>> tags,
        @Nullable Output<Map<String,String>> tagsAll) {
        this.arn = arn;
        this.dateCreated = dateCreated;
        this.dateLastRun = dateLastRun;
        this.dateNextRun = dateNextRun;
        this.dateUpdated = dateUpdated;
        this.description = description;
        this.distributionConfigurationArn = distributionConfigurationArn;
        this.enhancedImageMetadataEnabled = enhancedImageMetadataEnabled;
        this.imageRecipeArn = imageRecipeArn;
        this.imageTestsConfiguration = imageTestsConfiguration;
        this.infrastructureConfigurationArn = infrastructureConfigurationArn;
        this.name = name;
        this.platform = platform;
        this.schedule = schedule;
        this.status = status;
        this.tags = tags;
        this.tagsAll = tagsAll;
    }

    private ImagePipelineState() {
        this.arn = Codegen.empty();
        this.dateCreated = Codegen.empty();
        this.dateLastRun = Codegen.empty();
        this.dateNextRun = Codegen.empty();
        this.dateUpdated = Codegen.empty();
        this.description = Codegen.empty();
        this.distributionConfigurationArn = Codegen.empty();
        this.enhancedImageMetadataEnabled = Codegen.empty();
        this.imageRecipeArn = Codegen.empty();
        this.imageTestsConfiguration = Codegen.empty();
        this.infrastructureConfigurationArn = Codegen.empty();
        this.name = Codegen.empty();
        this.platform = Codegen.empty();
        this.schedule = Codegen.empty();
        this.status = Codegen.empty();
        this.tags = Codegen.empty();
        this.tagsAll = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ImagePipelineState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> arn;
        private @Nullable Output<String> dateCreated;
        private @Nullable Output<String> dateLastRun;
        private @Nullable Output<String> dateNextRun;
        private @Nullable Output<String> dateUpdated;
        private @Nullable Output<String> description;
        private @Nullable Output<String> distributionConfigurationArn;
        private @Nullable Output<Boolean> enhancedImageMetadataEnabled;
        private @Nullable Output<String> imageRecipeArn;
        private @Nullable Output<ImagePipelineImageTestsConfigurationGetArgs> imageTestsConfiguration;
        private @Nullable Output<String> infrastructureConfigurationArn;
        private @Nullable Output<String> name;
        private @Nullable Output<String> platform;
        private @Nullable Output<ImagePipelineScheduleGetArgs> schedule;
        private @Nullable Output<String> status;
        private @Nullable Output<Map<String,String>> tags;
        private @Nullable Output<Map<String,String>> tagsAll;

        public Builder() {
    	      // Empty
        }

        public Builder(ImagePipelineState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.dateCreated = defaults.dateCreated;
    	      this.dateLastRun = defaults.dateLastRun;
    	      this.dateNextRun = defaults.dateNextRun;
    	      this.dateUpdated = defaults.dateUpdated;
    	      this.description = defaults.description;
    	      this.distributionConfigurationArn = defaults.distributionConfigurationArn;
    	      this.enhancedImageMetadataEnabled = defaults.enhancedImageMetadataEnabled;
    	      this.imageRecipeArn = defaults.imageRecipeArn;
    	      this.imageTestsConfiguration = defaults.imageTestsConfiguration;
    	      this.infrastructureConfigurationArn = defaults.infrastructureConfigurationArn;
    	      this.name = defaults.name;
    	      this.platform = defaults.platform;
    	      this.schedule = defaults.schedule;
    	      this.status = defaults.status;
    	      this.tags = defaults.tags;
    	      this.tagsAll = defaults.tagsAll;
        }

        public Builder arn(@Nullable Output<String> arn) {
            this.arn = arn;
            return this;
        }
        public Builder arn(@Nullable String arn) {
            this.arn = Codegen.ofNullable(arn);
            return this;
        }
        public Builder dateCreated(@Nullable Output<String> dateCreated) {
            this.dateCreated = dateCreated;
            return this;
        }
        public Builder dateCreated(@Nullable String dateCreated) {
            this.dateCreated = Codegen.ofNullable(dateCreated);
            return this;
        }
        public Builder dateLastRun(@Nullable Output<String> dateLastRun) {
            this.dateLastRun = dateLastRun;
            return this;
        }
        public Builder dateLastRun(@Nullable String dateLastRun) {
            this.dateLastRun = Codegen.ofNullable(dateLastRun);
            return this;
        }
        public Builder dateNextRun(@Nullable Output<String> dateNextRun) {
            this.dateNextRun = dateNextRun;
            return this;
        }
        public Builder dateNextRun(@Nullable String dateNextRun) {
            this.dateNextRun = Codegen.ofNullable(dateNextRun);
            return this;
        }
        public Builder dateUpdated(@Nullable Output<String> dateUpdated) {
            this.dateUpdated = dateUpdated;
            return this;
        }
        public Builder dateUpdated(@Nullable String dateUpdated) {
            this.dateUpdated = Codegen.ofNullable(dateUpdated);
            return this;
        }
        public Builder description(@Nullable Output<String> description) {
            this.description = description;
            return this;
        }
        public Builder description(@Nullable String description) {
            this.description = Codegen.ofNullable(description);
            return this;
        }
        public Builder distributionConfigurationArn(@Nullable Output<String> distributionConfigurationArn) {
            this.distributionConfigurationArn = distributionConfigurationArn;
            return this;
        }
        public Builder distributionConfigurationArn(@Nullable String distributionConfigurationArn) {
            this.distributionConfigurationArn = Codegen.ofNullable(distributionConfigurationArn);
            return this;
        }
        public Builder enhancedImageMetadataEnabled(@Nullable Output<Boolean> enhancedImageMetadataEnabled) {
            this.enhancedImageMetadataEnabled = enhancedImageMetadataEnabled;
            return this;
        }
        public Builder enhancedImageMetadataEnabled(@Nullable Boolean enhancedImageMetadataEnabled) {
            this.enhancedImageMetadataEnabled = Codegen.ofNullable(enhancedImageMetadataEnabled);
            return this;
        }
        public Builder imageRecipeArn(@Nullable Output<String> imageRecipeArn) {
            this.imageRecipeArn = imageRecipeArn;
            return this;
        }
        public Builder imageRecipeArn(@Nullable String imageRecipeArn) {
            this.imageRecipeArn = Codegen.ofNullable(imageRecipeArn);
            return this;
        }
        public Builder imageTestsConfiguration(@Nullable Output<ImagePipelineImageTestsConfigurationGetArgs> imageTestsConfiguration) {
            this.imageTestsConfiguration = imageTestsConfiguration;
            return this;
        }
        public Builder imageTestsConfiguration(@Nullable ImagePipelineImageTestsConfigurationGetArgs imageTestsConfiguration) {
            this.imageTestsConfiguration = Codegen.ofNullable(imageTestsConfiguration);
            return this;
        }
        public Builder infrastructureConfigurationArn(@Nullable Output<String> infrastructureConfigurationArn) {
            this.infrastructureConfigurationArn = infrastructureConfigurationArn;
            return this;
        }
        public Builder infrastructureConfigurationArn(@Nullable String infrastructureConfigurationArn) {
            this.infrastructureConfigurationArn = Codegen.ofNullable(infrastructureConfigurationArn);
            return this;
        }
        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }
        public Builder name(@Nullable String name) {
            this.name = Codegen.ofNullable(name);
            return this;
        }
        public Builder platform(@Nullable Output<String> platform) {
            this.platform = platform;
            return this;
        }
        public Builder platform(@Nullable String platform) {
            this.platform = Codegen.ofNullable(platform);
            return this;
        }
        public Builder schedule(@Nullable Output<ImagePipelineScheduleGetArgs> schedule) {
            this.schedule = schedule;
            return this;
        }
        public Builder schedule(@Nullable ImagePipelineScheduleGetArgs schedule) {
            this.schedule = Codegen.ofNullable(schedule);
            return this;
        }
        public Builder status(@Nullable Output<String> status) {
            this.status = status;
            return this;
        }
        public Builder status(@Nullable String status) {
            this.status = Codegen.ofNullable(status);
            return this;
        }
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = Codegen.ofNullable(tags);
            return this;
        }
        public Builder tagsAll(@Nullable Output<Map<String,String>> tagsAll) {
            this.tagsAll = tagsAll;
            return this;
        }
        public Builder tagsAll(@Nullable Map<String,String> tagsAll) {
            this.tagsAll = Codegen.ofNullable(tagsAll);
            return this;
        }        public ImagePipelineState build() {
            return new ImagePipelineState(arn, dateCreated, dateLastRun, dateNextRun, dateUpdated, description, distributionConfigurationArn, enhancedImageMetadataEnabled, imageRecipeArn, imageTestsConfiguration, infrastructureConfigurationArn, name, platform, schedule, status, tags, tagsAll);
        }
    }
}
