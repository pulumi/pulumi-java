// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.ec2;

import io.pulumi.aws.ec2.inputs.DefaultNetworkAclEgressArgs;
import io.pulumi.aws.ec2.inputs.DefaultNetworkAclIngressArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class DefaultNetworkAclArgs extends io.pulumi.resources.ResourceArgs {

    public static final DefaultNetworkAclArgs Empty = new DefaultNetworkAclArgs();

    /**
     * Network ACL ID to manage. This attribute is exported from `aws.ec2.Vpc`, or manually found via the AWS Console.
     * 
     */
    @Import(name="defaultNetworkAclId", required=true)
      private final Output<String> defaultNetworkAclId;

    public Output<String> defaultNetworkAclId() {
        return this.defaultNetworkAclId;
    }

    /**
     * Configuration block for an egress rule. Detailed below.
     * 
     */
    @Import(name="egress")
      private final @Nullable Output<List<DefaultNetworkAclEgressArgs>> egress;

    public Output<List<DefaultNetworkAclEgressArgs>> egress() {
        return this.egress == null ? Codegen.empty() : this.egress;
    }

    /**
     * Configuration block for an ingress rule. Detailed below.
     * 
     */
    @Import(name="ingress")
      private final @Nullable Output<List<DefaultNetworkAclIngressArgs>> ingress;

    public Output<List<DefaultNetworkAclIngressArgs>> ingress() {
        return this.ingress == null ? Codegen.empty() : this.ingress;
    }

    /**
     * List of Subnet IDs to apply the ACL to. See the notes below on managing Subnets in the Default Network ACL
     * 
     */
    @Import(name="subnetIds")
      private final @Nullable Output<List<String>> subnetIds;

    public Output<List<String>> subnetIds() {
        return this.subnetIds == null ? Codegen.empty() : this.subnetIds;
    }

    /**
     * Map of tags to assign to the resource. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Import(name="tags")
      private final @Nullable Output<Map<String,String>> tags;

    public Output<Map<String,String>> tags() {
        return this.tags == null ? Codegen.empty() : this.tags;
    }

    public DefaultNetworkAclArgs(
        Output<String> defaultNetworkAclId,
        @Nullable Output<List<DefaultNetworkAclEgressArgs>> egress,
        @Nullable Output<List<DefaultNetworkAclIngressArgs>> ingress,
        @Nullable Output<List<String>> subnetIds,
        @Nullable Output<Map<String,String>> tags) {
        this.defaultNetworkAclId = Objects.requireNonNull(defaultNetworkAclId, "expected parameter 'defaultNetworkAclId' to be non-null");
        this.egress = egress;
        this.ingress = ingress;
        this.subnetIds = subnetIds;
        this.tags = tags;
    }

    private DefaultNetworkAclArgs() {
        this.defaultNetworkAclId = Codegen.empty();
        this.egress = Codegen.empty();
        this.ingress = Codegen.empty();
        this.subnetIds = Codegen.empty();
        this.tags = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DefaultNetworkAclArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> defaultNetworkAclId;
        private @Nullable Output<List<DefaultNetworkAclEgressArgs>> egress;
        private @Nullable Output<List<DefaultNetworkAclIngressArgs>> ingress;
        private @Nullable Output<List<String>> subnetIds;
        private @Nullable Output<Map<String,String>> tags;

        public Builder() {
    	      // Empty
        }

        public Builder(DefaultNetworkAclArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.defaultNetworkAclId = defaults.defaultNetworkAclId;
    	      this.egress = defaults.egress;
    	      this.ingress = defaults.ingress;
    	      this.subnetIds = defaults.subnetIds;
    	      this.tags = defaults.tags;
        }

        public Builder defaultNetworkAclId(Output<String> defaultNetworkAclId) {
            this.defaultNetworkAclId = Objects.requireNonNull(defaultNetworkAclId);
            return this;
        }
        public Builder defaultNetworkAclId(String defaultNetworkAclId) {
            this.defaultNetworkAclId = Output.of(Objects.requireNonNull(defaultNetworkAclId));
            return this;
        }
        public Builder egress(@Nullable Output<List<DefaultNetworkAclEgressArgs>> egress) {
            this.egress = egress;
            return this;
        }
        public Builder egress(@Nullable List<DefaultNetworkAclEgressArgs> egress) {
            this.egress = Codegen.ofNullable(egress);
            return this;
        }
        public Builder egress(DefaultNetworkAclEgressArgs... egress) {
            return egress(List.of(egress));
        }
        public Builder ingress(@Nullable Output<List<DefaultNetworkAclIngressArgs>> ingress) {
            this.ingress = ingress;
            return this;
        }
        public Builder ingress(@Nullable List<DefaultNetworkAclIngressArgs> ingress) {
            this.ingress = Codegen.ofNullable(ingress);
            return this;
        }
        public Builder ingress(DefaultNetworkAclIngressArgs... ingress) {
            return ingress(List.of(ingress));
        }
        public Builder subnetIds(@Nullable Output<List<String>> subnetIds) {
            this.subnetIds = subnetIds;
            return this;
        }
        public Builder subnetIds(@Nullable List<String> subnetIds) {
            this.subnetIds = Codegen.ofNullable(subnetIds);
            return this;
        }
        public Builder subnetIds(String... subnetIds) {
            return subnetIds(List.of(subnetIds));
        }
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = Codegen.ofNullable(tags);
            return this;
        }        public DefaultNetworkAclArgs build() {
            return new DefaultNetworkAclArgs(defaultNetworkAclId, egress, ingress, subnetIds, tags);
        }
    }
}
