// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.ecrpublic;

import io.pulumi.aws.Utilities;
import io.pulumi.aws.ecrpublic.RepositoryArgs;
import io.pulumi.aws.ecrpublic.inputs.RepositoryState;
import io.pulumi.aws.ecrpublic.outputs.RepositoryCatalogData;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Export;
import io.pulumi.core.annotations.ResourceType;
import java.lang.Boolean;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * Provides a Public Elastic Container Registry Repository.
 * 
 * > **NOTE:** This resource can only be used with `us-east-1` region.
 * 
 * {{% examples %}}
 * ## Example Usage
 * {{% example %}}
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 * import * from "fs";
 * 
 * const usEast1 = new aws.Provider("usEast1", {region: "us-east-1"});
 * const foo = new aws.ecrpublic.Repository("foo", {
 *     repositoryName: "bar",
 *     catalogData: {
 *         aboutText: "About Text",
 *         architectures: ["ARM"],
 *         description: "Description",
 *         logoImageBlob: Buffer.from(fs.readFileSync(image.png), 'binary').toString('base64'),
 *         operatingSystems: ["Linux"],
 *         usageText: "Usage Text",
 *     },
 * }, {
 *     provider: aws.us_east_1,
 * });
 * ```
 * ```python
 * import pulumi
 * import base64
 * import pulumi_aws as aws
 * import pulumi_pulumi as pulumi
 * 
 * us_east1 = pulumi.providers.Aws("usEast1", region="us-east-1")
 * foo = aws.ecrpublic.Repository("foo",
 *     repository_name="bar",
 *     catalog_data=aws.ecrpublic.RepositoryCatalogDataArgs(
 *         about_text="About Text",
 *         architectures=["ARM"],
 *         description="Description",
 *         logo_image_blob=(lambda path: base64.b64encode(open(path).read().encode()).decode())(image["png"]),
 *         operating_systems=["Linux"],
 *         usage_text="Usage Text",
 *     ),
 *     opts=pulumi.ResourceOptions(provider=aws["us_east_1"]))
 * ```
 * ```csharp
 * using System;
 * using System.IO;
 * using Pulumi;
 * using Aws = Pulumi.Aws;
 * 
 * class MyStack : Stack
 * {
 * 	private static string ReadFileBase64(string path) {
 * 		return Convert.ToBase64String(Encoding.UTF8.GetBytes(File.ReadAllText(path)))
 * 	}
 * 
 *     public MyStack()
 *     {
 *         var usEast1 = new Aws.Provider("usEast1", new Aws.ProviderArgs
 *         {
 *             Region = "us-east-1",
 *         });
 *         var foo = new Aws.EcrPublic.Repository("foo", new Aws.EcrPublic.RepositoryArgs
 *         {
 *             RepositoryName = "bar",
 *             CatalogData = new Aws.EcrPublic.Inputs.RepositoryCatalogDataArgs
 *             {
 *                 AboutText = "About Text",
 *                 Architectures = 
 *                 {
 *                     "ARM",
 *                 },
 *                 Description = "Description",
 *                 LogoImageBlob = ReadFileBase64(image.Png),
 *                 OperatingSystems = 
 *                 {
 *                     "Linux",
 *                 },
 *                 UsageText = "Usage Text",
 *             },
 *         }, new CustomResourceOptions
 *         {
 *             Provider = aws.Us_east_1,
 *         });
 *     }
 * 
 * }
 * ```
 * ```go
 * package main
 * 
 * import (
 * 	"encoding/base64"
 * 	"io/ioutil"
 * 
 * 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/ecrpublic"
 * 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/providers"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func filebase64OrPanic(path string) pulumi.StringPtrInput {
 * 	if fileData, err := ioutil.ReadFile(path); err == nil {
 * 		return pulumi.String(base64.StdEncoding.EncodeToString(fileData[:]))
 * 	} else {
 * 		panic(err.Error())
 * 	}
 * }
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		_, err := providers.Newaws(ctx, "usEast1", &providers.awsArgs{
 * 			Region: "us-east-1",
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		_, err = ecrpublic.NewRepository(ctx, "foo", &ecrpublic.RepositoryArgs{
 * 			RepositoryName: pulumi.String("bar"),
 * 			CatalogData: &ecrpublic.RepositoryCatalogDataArgs{
 * 				AboutText: pulumi.String("About Text"),
 * 				Architectures: pulumi.StringArray{
 * 					pulumi.String("ARM"),
 * 				},
 * 				Description:   pulumi.String("Description"),
 * 				LogoImageBlob: filebase64OrPanic(image.Png),
 * 				OperatingSystems: pulumi.StringArray{
 * 					pulumi.String("Linux"),
 * 				},
 * 				UsageText: pulumi.String("Usage Text"),
 * 			},
 * 		}, pulumi.Provider(aws.Us_east_1))
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * ```
 * {{% /example %}}
 * {{% /examples %}}
 * 
 * ## Import
 * 
 * ECR Public Repositories can be imported using the `repository_name`, e.g.,
 * 
 * ```sh
 *  $ pulumi import aws:ecrpublic/repository:Repository example example
 * ```
 * 
 *  
 */
@ResourceType(type="aws:ecrpublic/repository:Repository")
public class Repository extends io.pulumi.resources.CustomResource {
    /**
     * Full ARN of the repository.
     * 
     */
    @Export(name="arn", type=String.class, parameters={})
    private Output<String> arn;

    /**
     * @return Full ARN of the repository.
     * 
     */
    public Output<String> getArn() {
        return this.arn;
    }
    /**
     * Catalog data configuration for the repository. See below for schema.
     * 
     */
    @Export(name="catalogData", type=RepositoryCatalogData.class, parameters={})
    private Output</* @Nullable */ RepositoryCatalogData> catalogData;

    /**
     * @return Catalog data configuration for the repository. See below for schema.
     * 
     */
    public Output</* @Nullable */ RepositoryCatalogData> getCatalogData() {
        return this.catalogData;
    }
    @Export(name="forceDestroy", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> forceDestroy;

    public Output</* @Nullable */ Boolean> getForceDestroy() {
        return this.forceDestroy;
    }
    /**
     * The registry ID where the repository was created.
     * 
     */
    @Export(name="registryId", type=String.class, parameters={})
    private Output<String> registryId;

    /**
     * @return The registry ID where the repository was created.
     * 
     */
    public Output<String> getRegistryId() {
        return this.registryId;
    }
    /**
     * Name of the repository.
     * 
     */
    @Export(name="repositoryName", type=String.class, parameters={})
    private Output<String> repositoryName;

    /**
     * @return Name of the repository.
     * 
     */
    public Output<String> getRepositoryName() {
        return this.repositoryName;
    }
    /**
     * The URI of the repository.
     * 
     */
    @Export(name="repositoryUri", type=String.class, parameters={})
    private Output<String> repositoryUri;

    /**
     * @return The URI of the repository.
     * 
     */
    public Output<String> getRepositoryUri() {
        return this.repositoryUri;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Repository(String name) {
        this(name, RepositoryArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Repository(String name, RepositoryArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Repository(String name, RepositoryArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:ecrpublic/repository:Repository", name, args == null ? RepositoryArgs.Empty : args, makeResourceOptions(options, Output.empty()));
    }

    private Repository(String name, Output<String> id, @Nullable RepositoryState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:ecrpublic/repository:Repository", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Repository get(String name, Output<String> id, @Nullable RepositoryState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new Repository(name, id, state, options);
    }
}
