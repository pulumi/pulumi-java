// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.appsync.outputs;

import io.pulumi.core.annotations.OutputCustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class GraphQLApiOpenidConnectConfig {
    /**
     * Number of milliseconds a token is valid after being authenticated.
     * 
     */
    private final @Nullable Integer authTtl;
    /**
     * Client identifier of the Relying party at the OpenID identity provider. This identifier is typically obtained when the Relying party is registered with the OpenID identity provider. You can specify a regular expression so the AWS AppSync can validate against multiple client identifiers at a time.
     * 
     */
    private final @Nullable String clientId;
    /**
     * Number of milliseconds a token is valid after being issued to a user.
     * 
     */
    private final @Nullable Integer iatTtl;
    /**
     * Issuer for the OpenID Connect configuration. The issuer returned by discovery MUST exactly match the value of iss in the ID Token.
     * 
     */
    private final String issuer;

    @OutputCustomType.Constructor({"authTtl","clientId","iatTtl","issuer"})
    private GraphQLApiOpenidConnectConfig(
        @Nullable Integer authTtl,
        @Nullable String clientId,
        @Nullable Integer iatTtl,
        String issuer) {
        this.authTtl = authTtl;
        this.clientId = clientId;
        this.iatTtl = iatTtl;
        this.issuer = issuer;
    }

    /**
     * Number of milliseconds a token is valid after being authenticated.
     * 
    */
    public Optional<Integer> getAuthTtl() {
        return Optional.ofNullable(this.authTtl);
    }
    /**
     * Client identifier of the Relying party at the OpenID identity provider. This identifier is typically obtained when the Relying party is registered with the OpenID identity provider. You can specify a regular expression so the AWS AppSync can validate against multiple client identifiers at a time.
     * 
    */
    public Optional<String> getClientId() {
        return Optional.ofNullable(this.clientId);
    }
    /**
     * Number of milliseconds a token is valid after being issued to a user.
     * 
    */
    public Optional<Integer> getIatTtl() {
        return Optional.ofNullable(this.iatTtl);
    }
    /**
     * Issuer for the OpenID Connect configuration. The issuer returned by discovery MUST exactly match the value of iss in the ID Token.
     * 
    */
    public String getIssuer() {
        return this.issuer;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GraphQLApiOpenidConnectConfig defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Integer authTtl;
        private @Nullable String clientId;
        private @Nullable Integer iatTtl;
        private String issuer;

        public Builder() {
    	      // Empty
        }

        public Builder(GraphQLApiOpenidConnectConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.authTtl = defaults.authTtl;
    	      this.clientId = defaults.clientId;
    	      this.iatTtl = defaults.iatTtl;
    	      this.issuer = defaults.issuer;
        }

        public Builder setAuthTtl(@Nullable Integer authTtl) {
            this.authTtl = authTtl;
            return this;
        }

        public Builder setClientId(@Nullable String clientId) {
            this.clientId = clientId;
            return this;
        }

        public Builder setIatTtl(@Nullable Integer iatTtl) {
            this.iatTtl = iatTtl;
            return this;
        }

        public Builder setIssuer(String issuer) {
            this.issuer = Objects.requireNonNull(issuer);
            return this;
        }
        public GraphQLApiOpenidConnectConfig build() {
            return new GraphQLApiOpenidConnectConfig(authTtl, clientId, iatTtl, issuer);
        }
    }
}
