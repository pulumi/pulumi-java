// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.connect.inputs;

import io.pulumi.aws.connect.inputs.QuickConnectQuickConnectConfigPhoneConfigGetArgs;
import io.pulumi.aws.connect.inputs.QuickConnectQuickConnectConfigQueueConfigGetArgs;
import io.pulumi.aws.connect.inputs.QuickConnectQuickConnectConfigUserConfigGetArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class QuickConnectQuickConnectConfigGetArgs extends io.pulumi.resources.ResourceArgs {

    public static final QuickConnectQuickConnectConfigGetArgs Empty = new QuickConnectQuickConnectConfigGetArgs();

    /**
     * Specifies the phone configuration of the Quick Connect. This is required only if `quick_connect_type` is `PHONE_NUMBER`. The `phone_config` block is documented below.
     * 
     */
    @Import(name="phoneConfigs")
      private final @Nullable Output<List<QuickConnectQuickConnectConfigPhoneConfigGetArgs>> phoneConfigs;

    public Output<List<QuickConnectQuickConnectConfigPhoneConfigGetArgs>> getPhoneConfigs() {
        return this.phoneConfigs == null ? Codegen.empty() : this.phoneConfigs;
    }

    /**
     * Specifies the queue configuration of the Quick Connect. This is required only if `quick_connect_type` is `QUEUE`. The `queue_config` block is documented below.
     * 
     */
    @Import(name="queueConfigs")
      private final @Nullable Output<List<QuickConnectQuickConnectConfigQueueConfigGetArgs>> queueConfigs;

    public Output<List<QuickConnectQuickConnectConfigQueueConfigGetArgs>> getQueueConfigs() {
        return this.queueConfigs == null ? Codegen.empty() : this.queueConfigs;
    }

    /**
     * Specifies the configuration type of the quick connect. valid values are `PHONE_NUMBER`, `QUEUE`, `USER`.
     * 
     */
    @Import(name="quickConnectType", required=true)
      private final Output<String> quickConnectType;

    public Output<String> getQuickConnectType() {
        return this.quickConnectType;
    }

    /**
     * Specifies the user configuration of the Quick Connect. This is required only if `quick_connect_type` is `USER`. The `user_config` block is documented below.
     * 
     */
    @Import(name="userConfigs")
      private final @Nullable Output<List<QuickConnectQuickConnectConfigUserConfigGetArgs>> userConfigs;

    public Output<List<QuickConnectQuickConnectConfigUserConfigGetArgs>> getUserConfigs() {
        return this.userConfigs == null ? Codegen.empty() : this.userConfigs;
    }

    public QuickConnectQuickConnectConfigGetArgs(
        @Nullable Output<List<QuickConnectQuickConnectConfigPhoneConfigGetArgs>> phoneConfigs,
        @Nullable Output<List<QuickConnectQuickConnectConfigQueueConfigGetArgs>> queueConfigs,
        Output<String> quickConnectType,
        @Nullable Output<List<QuickConnectQuickConnectConfigUserConfigGetArgs>> userConfigs) {
        this.phoneConfigs = phoneConfigs;
        this.queueConfigs = queueConfigs;
        this.quickConnectType = Objects.requireNonNull(quickConnectType, "expected parameter 'quickConnectType' to be non-null");
        this.userConfigs = userConfigs;
    }

    private QuickConnectQuickConnectConfigGetArgs() {
        this.phoneConfigs = Codegen.empty();
        this.queueConfigs = Codegen.empty();
        this.quickConnectType = Codegen.empty();
        this.userConfigs = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(QuickConnectQuickConnectConfigGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<List<QuickConnectQuickConnectConfigPhoneConfigGetArgs>> phoneConfigs;
        private @Nullable Output<List<QuickConnectQuickConnectConfigQueueConfigGetArgs>> queueConfigs;
        private Output<String> quickConnectType;
        private @Nullable Output<List<QuickConnectQuickConnectConfigUserConfigGetArgs>> userConfigs;

        public Builder() {
    	      // Empty
        }

        public Builder(QuickConnectQuickConnectConfigGetArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.phoneConfigs = defaults.phoneConfigs;
    	      this.queueConfigs = defaults.queueConfigs;
    	      this.quickConnectType = defaults.quickConnectType;
    	      this.userConfigs = defaults.userConfigs;
        }

        public Builder phoneConfigs(@Nullable Output<List<QuickConnectQuickConnectConfigPhoneConfigGetArgs>> phoneConfigs) {
            this.phoneConfigs = phoneConfigs;
            return this;
        }
        public Builder phoneConfigs(@Nullable List<QuickConnectQuickConnectConfigPhoneConfigGetArgs> phoneConfigs) {
            this.phoneConfigs = Codegen.ofNullable(phoneConfigs);
            return this;
        }
        public Builder phoneConfigs(QuickConnectQuickConnectConfigPhoneConfigGetArgs... phoneConfigs) {
            return phoneConfigs(List.of(phoneConfigs));
        }
        public Builder queueConfigs(@Nullable Output<List<QuickConnectQuickConnectConfigQueueConfigGetArgs>> queueConfigs) {
            this.queueConfigs = queueConfigs;
            return this;
        }
        public Builder queueConfigs(@Nullable List<QuickConnectQuickConnectConfigQueueConfigGetArgs> queueConfigs) {
            this.queueConfigs = Codegen.ofNullable(queueConfigs);
            return this;
        }
        public Builder queueConfigs(QuickConnectQuickConnectConfigQueueConfigGetArgs... queueConfigs) {
            return queueConfigs(List.of(queueConfigs));
        }
        public Builder quickConnectType(Output<String> quickConnectType) {
            this.quickConnectType = Objects.requireNonNull(quickConnectType);
            return this;
        }
        public Builder quickConnectType(String quickConnectType) {
            this.quickConnectType = Output.of(Objects.requireNonNull(quickConnectType));
            return this;
        }
        public Builder userConfigs(@Nullable Output<List<QuickConnectQuickConnectConfigUserConfigGetArgs>> userConfigs) {
            this.userConfigs = userConfigs;
            return this;
        }
        public Builder userConfigs(@Nullable List<QuickConnectQuickConnectConfigUserConfigGetArgs> userConfigs) {
            this.userConfigs = Codegen.ofNullable(userConfigs);
            return this;
        }
        public Builder userConfigs(QuickConnectQuickConnectConfigUserConfigGetArgs... userConfigs) {
            return userConfigs(List.of(userConfigs));
        }        public QuickConnectQuickConnectConfigGetArgs build() {
            return new QuickConnectQuickConnectConfigGetArgs(phoneConfigs, queueConfigs, quickConnectType, userConfigs);
        }
    }
}
