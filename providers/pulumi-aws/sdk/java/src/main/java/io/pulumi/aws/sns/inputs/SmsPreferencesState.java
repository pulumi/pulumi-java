// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.sns.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class SmsPreferencesState extends io.pulumi.resources.ResourceArgs {

    public static final SmsPreferencesState Empty = new SmsPreferencesState();

    /**
     * A string, such as your business brand, that is displayed as the sender on the receiving device.
     * 
     */
    @Import(name="defaultSenderId")
      private final @Nullable Output<String> defaultSenderId;

    public Output<String> defaultSenderId() {
        return this.defaultSenderId == null ? Codegen.empty() : this.defaultSenderId;
    }

    /**
     * The type of SMS message that you will send by default. Possible values are: Promotional, Transactional
     * 
     */
    @Import(name="defaultSmsType")
      private final @Nullable Output<String> defaultSmsType;

    public Output<String> defaultSmsType() {
        return this.defaultSmsType == null ? Codegen.empty() : this.defaultSmsType;
    }

    /**
     * The ARN of the IAM role that allows Amazon SNS to write logs about SMS deliveries in CloudWatch Logs.
     * 
     */
    @Import(name="deliveryStatusIamRoleArn")
      private final @Nullable Output<String> deliveryStatusIamRoleArn;

    public Output<String> deliveryStatusIamRoleArn() {
        return this.deliveryStatusIamRoleArn == null ? Codegen.empty() : this.deliveryStatusIamRoleArn;
    }

    /**
     * The percentage of successful SMS deliveries for which Amazon SNS will write logs in CloudWatch Logs. The value must be between 0 and 100.
     * 
     */
    @Import(name="deliveryStatusSuccessSamplingRate")
      private final @Nullable Output<String> deliveryStatusSuccessSamplingRate;

    public Output<String> deliveryStatusSuccessSamplingRate() {
        return this.deliveryStatusSuccessSamplingRate == null ? Codegen.empty() : this.deliveryStatusSuccessSamplingRate;
    }

    /**
     * The maximum amount in USD that you are willing to spend each month to send SMS messages.
     * 
     */
    @Import(name="monthlySpendLimit")
      private final @Nullable Output<Integer> monthlySpendLimit;

    public Output<Integer> monthlySpendLimit() {
        return this.monthlySpendLimit == null ? Codegen.empty() : this.monthlySpendLimit;
    }

    /**
     * The name of the Amazon S3 bucket to receive daily SMS usage reports from Amazon SNS.
     * 
     */
    @Import(name="usageReportS3Bucket")
      private final @Nullable Output<String> usageReportS3Bucket;

    public Output<String> usageReportS3Bucket() {
        return this.usageReportS3Bucket == null ? Codegen.empty() : this.usageReportS3Bucket;
    }

    public SmsPreferencesState(
        @Nullable Output<String> defaultSenderId,
        @Nullable Output<String> defaultSmsType,
        @Nullable Output<String> deliveryStatusIamRoleArn,
        @Nullable Output<String> deliveryStatusSuccessSamplingRate,
        @Nullable Output<Integer> monthlySpendLimit,
        @Nullable Output<String> usageReportS3Bucket) {
        this.defaultSenderId = defaultSenderId;
        this.defaultSmsType = defaultSmsType;
        this.deliveryStatusIamRoleArn = deliveryStatusIamRoleArn;
        this.deliveryStatusSuccessSamplingRate = deliveryStatusSuccessSamplingRate;
        this.monthlySpendLimit = monthlySpendLimit;
        this.usageReportS3Bucket = usageReportS3Bucket;
    }

    private SmsPreferencesState() {
        this.defaultSenderId = Codegen.empty();
        this.defaultSmsType = Codegen.empty();
        this.deliveryStatusIamRoleArn = Codegen.empty();
        this.deliveryStatusSuccessSamplingRate = Codegen.empty();
        this.monthlySpendLimit = Codegen.empty();
        this.usageReportS3Bucket = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SmsPreferencesState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> defaultSenderId;
        private @Nullable Output<String> defaultSmsType;
        private @Nullable Output<String> deliveryStatusIamRoleArn;
        private @Nullable Output<String> deliveryStatusSuccessSamplingRate;
        private @Nullable Output<Integer> monthlySpendLimit;
        private @Nullable Output<String> usageReportS3Bucket;

        public Builder() {
    	      // Empty
        }

        public Builder(SmsPreferencesState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.defaultSenderId = defaults.defaultSenderId;
    	      this.defaultSmsType = defaults.defaultSmsType;
    	      this.deliveryStatusIamRoleArn = defaults.deliveryStatusIamRoleArn;
    	      this.deliveryStatusSuccessSamplingRate = defaults.deliveryStatusSuccessSamplingRate;
    	      this.monthlySpendLimit = defaults.monthlySpendLimit;
    	      this.usageReportS3Bucket = defaults.usageReportS3Bucket;
        }

        public Builder defaultSenderId(@Nullable Output<String> defaultSenderId) {
            this.defaultSenderId = defaultSenderId;
            return this;
        }
        public Builder defaultSenderId(@Nullable String defaultSenderId) {
            this.defaultSenderId = Codegen.ofNullable(defaultSenderId);
            return this;
        }
        public Builder defaultSmsType(@Nullable Output<String> defaultSmsType) {
            this.defaultSmsType = defaultSmsType;
            return this;
        }
        public Builder defaultSmsType(@Nullable String defaultSmsType) {
            this.defaultSmsType = Codegen.ofNullable(defaultSmsType);
            return this;
        }
        public Builder deliveryStatusIamRoleArn(@Nullable Output<String> deliveryStatusIamRoleArn) {
            this.deliveryStatusIamRoleArn = deliveryStatusIamRoleArn;
            return this;
        }
        public Builder deliveryStatusIamRoleArn(@Nullable String deliveryStatusIamRoleArn) {
            this.deliveryStatusIamRoleArn = Codegen.ofNullable(deliveryStatusIamRoleArn);
            return this;
        }
        public Builder deliveryStatusSuccessSamplingRate(@Nullable Output<String> deliveryStatusSuccessSamplingRate) {
            this.deliveryStatusSuccessSamplingRate = deliveryStatusSuccessSamplingRate;
            return this;
        }
        public Builder deliveryStatusSuccessSamplingRate(@Nullable String deliveryStatusSuccessSamplingRate) {
            this.deliveryStatusSuccessSamplingRate = Codegen.ofNullable(deliveryStatusSuccessSamplingRate);
            return this;
        }
        public Builder monthlySpendLimit(@Nullable Output<Integer> monthlySpendLimit) {
            this.monthlySpendLimit = monthlySpendLimit;
            return this;
        }
        public Builder monthlySpendLimit(@Nullable Integer monthlySpendLimit) {
            this.monthlySpendLimit = Codegen.ofNullable(monthlySpendLimit);
            return this;
        }
        public Builder usageReportS3Bucket(@Nullable Output<String> usageReportS3Bucket) {
            this.usageReportS3Bucket = usageReportS3Bucket;
            return this;
        }
        public Builder usageReportS3Bucket(@Nullable String usageReportS3Bucket) {
            this.usageReportS3Bucket = Codegen.ofNullable(usageReportS3Bucket);
            return this;
        }        public SmsPreferencesState build() {
            return new SmsPreferencesState(defaultSenderId, defaultSmsType, deliveryStatusIamRoleArn, deliveryStatusSuccessSamplingRate, monthlySpendLimit, usageReportS3Bucket);
        }
    }
}
