// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.sns;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class SmsPreferencesArgs extends io.pulumi.resources.ResourceArgs {

    public static final SmsPreferencesArgs Empty = new SmsPreferencesArgs();

    /**
     * A string, such as your business brand, that is displayed as the sender on the receiving device.
     * 
     */
    @InputImport(name="defaultSenderId")
    private final @Nullable Input<String> defaultSenderId;

    public Input<String> getDefaultSenderId() {
        return this.defaultSenderId == null ? Input.empty() : this.defaultSenderId;
    }

    /**
     * The type of SMS message that you will send by default. Possible values are: Promotional, Transactional
     * 
     */
    @InputImport(name="defaultSmsType")
    private final @Nullable Input<String> defaultSmsType;

    public Input<String> getDefaultSmsType() {
        return this.defaultSmsType == null ? Input.empty() : this.defaultSmsType;
    }

    /**
     * The ARN of the IAM role that allows Amazon SNS to write logs about SMS deliveries in CloudWatch Logs.
     * 
     */
    @InputImport(name="deliveryStatusIamRoleArn")
    private final @Nullable Input<String> deliveryStatusIamRoleArn;

    public Input<String> getDeliveryStatusIamRoleArn() {
        return this.deliveryStatusIamRoleArn == null ? Input.empty() : this.deliveryStatusIamRoleArn;
    }

    /**
     * The percentage of successful SMS deliveries for which Amazon SNS will write logs in CloudWatch Logs. The value must be between 0 and 100.
     * 
     */
    @InputImport(name="deliveryStatusSuccessSamplingRate")
    private final @Nullable Input<String> deliveryStatusSuccessSamplingRate;

    public Input<String> getDeliveryStatusSuccessSamplingRate() {
        return this.deliveryStatusSuccessSamplingRate == null ? Input.empty() : this.deliveryStatusSuccessSamplingRate;
    }

    /**
     * The maximum amount in USD that you are willing to spend each month to send SMS messages.
     * 
     */
    @InputImport(name="monthlySpendLimit")
    private final @Nullable Input<Integer> monthlySpendLimit;

    public Input<Integer> getMonthlySpendLimit() {
        return this.monthlySpendLimit == null ? Input.empty() : this.monthlySpendLimit;
    }

    /**
     * The name of the Amazon S3 bucket to receive daily SMS usage reports from Amazon SNS.
     * 
     */
    @InputImport(name="usageReportS3Bucket")
    private final @Nullable Input<String> usageReportS3Bucket;

    public Input<String> getUsageReportS3Bucket() {
        return this.usageReportS3Bucket == null ? Input.empty() : this.usageReportS3Bucket;
    }

    public SmsPreferencesArgs(
        @Nullable Input<String> defaultSenderId,
        @Nullable Input<String> defaultSmsType,
        @Nullable Input<String> deliveryStatusIamRoleArn,
        @Nullable Input<String> deliveryStatusSuccessSamplingRate,
        @Nullable Input<Integer> monthlySpendLimit,
        @Nullable Input<String> usageReportS3Bucket) {
        this.defaultSenderId = defaultSenderId;
        this.defaultSmsType = defaultSmsType;
        this.deliveryStatusIamRoleArn = deliveryStatusIamRoleArn;
        this.deliveryStatusSuccessSamplingRate = deliveryStatusSuccessSamplingRate;
        this.monthlySpendLimit = monthlySpendLimit;
        this.usageReportS3Bucket = usageReportS3Bucket;
    }

    private SmsPreferencesArgs() {
        this.defaultSenderId = Input.empty();
        this.defaultSmsType = Input.empty();
        this.deliveryStatusIamRoleArn = Input.empty();
        this.deliveryStatusSuccessSamplingRate = Input.empty();
        this.monthlySpendLimit = Input.empty();
        this.usageReportS3Bucket = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SmsPreferencesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> defaultSenderId;
        private @Nullable Input<String> defaultSmsType;
        private @Nullable Input<String> deliveryStatusIamRoleArn;
        private @Nullable Input<String> deliveryStatusSuccessSamplingRate;
        private @Nullable Input<Integer> monthlySpendLimit;
        private @Nullable Input<String> usageReportS3Bucket;

        public Builder() {
    	      // Empty
        }

        public Builder(SmsPreferencesArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.defaultSenderId = defaults.defaultSenderId;
    	      this.defaultSmsType = defaults.defaultSmsType;
    	      this.deliveryStatusIamRoleArn = defaults.deliveryStatusIamRoleArn;
    	      this.deliveryStatusSuccessSamplingRate = defaults.deliveryStatusSuccessSamplingRate;
    	      this.monthlySpendLimit = defaults.monthlySpendLimit;
    	      this.usageReportS3Bucket = defaults.usageReportS3Bucket;
        }

        public Builder setDefaultSenderId(@Nullable Input<String> defaultSenderId) {
            this.defaultSenderId = defaultSenderId;
            return this;
        }

        public Builder setDefaultSenderId(@Nullable String defaultSenderId) {
            this.defaultSenderId = Input.ofNullable(defaultSenderId);
            return this;
        }

        public Builder setDefaultSmsType(@Nullable Input<String> defaultSmsType) {
            this.defaultSmsType = defaultSmsType;
            return this;
        }

        public Builder setDefaultSmsType(@Nullable String defaultSmsType) {
            this.defaultSmsType = Input.ofNullable(defaultSmsType);
            return this;
        }

        public Builder setDeliveryStatusIamRoleArn(@Nullable Input<String> deliveryStatusIamRoleArn) {
            this.deliveryStatusIamRoleArn = deliveryStatusIamRoleArn;
            return this;
        }

        public Builder setDeliveryStatusIamRoleArn(@Nullable String deliveryStatusIamRoleArn) {
            this.deliveryStatusIamRoleArn = Input.ofNullable(deliveryStatusIamRoleArn);
            return this;
        }

        public Builder setDeliveryStatusSuccessSamplingRate(@Nullable Input<String> deliveryStatusSuccessSamplingRate) {
            this.deliveryStatusSuccessSamplingRate = deliveryStatusSuccessSamplingRate;
            return this;
        }

        public Builder setDeliveryStatusSuccessSamplingRate(@Nullable String deliveryStatusSuccessSamplingRate) {
            this.deliveryStatusSuccessSamplingRate = Input.ofNullable(deliveryStatusSuccessSamplingRate);
            return this;
        }

        public Builder setMonthlySpendLimit(@Nullable Input<Integer> monthlySpendLimit) {
            this.monthlySpendLimit = monthlySpendLimit;
            return this;
        }

        public Builder setMonthlySpendLimit(@Nullable Integer monthlySpendLimit) {
            this.monthlySpendLimit = Input.ofNullable(monthlySpendLimit);
            return this;
        }

        public Builder setUsageReportS3Bucket(@Nullable Input<String> usageReportS3Bucket) {
            this.usageReportS3Bucket = usageReportS3Bucket;
            return this;
        }

        public Builder setUsageReportS3Bucket(@Nullable String usageReportS3Bucket) {
            this.usageReportS3Bucket = Input.ofNullable(usageReportS3Bucket);
            return this;
        }
        public SmsPreferencesArgs build() {
            return new SmsPreferencesArgs(defaultSenderId, defaultSmsType, deliveryStatusIamRoleArn, deliveryStatusSuccessSamplingRate, monthlySpendLimit, usageReportS3Bucket);
        }
    }
}
