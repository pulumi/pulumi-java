// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.apigateway.inputs;

import io.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GetResourceArgs extends io.pulumi.resources.InvokeArgs {

    public static final GetResourceArgs Empty = new GetResourceArgs();

    /**
     * The full path of the resource.  If no path is found, an error will be returned.
     * 
     */
    @Import(name="path", required=true)
      private final String path;

    public String getPath() {
        return this.path;
    }

    /**
     * The REST API id that owns the resource. If no REST API is found, an error will be returned.
     * 
     */
    @Import(name="restApiId", required=true)
      private final String restApiId;

    public String getRestApiId() {
        return this.restApiId;
    }

    public GetResourceArgs(
        String path,
        String restApiId) {
        this.path = Objects.requireNonNull(path, "expected parameter 'path' to be non-null");
        this.restApiId = Objects.requireNonNull(restApiId, "expected parameter 'restApiId' to be non-null");
    }

    private GetResourceArgs() {
        this.path = null;
        this.restApiId = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetResourceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String path;
        private String restApiId;

        public Builder() {
    	      // Empty
        }

        public Builder(GetResourceArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.path = defaults.path;
    	      this.restApiId = defaults.restApiId;
        }

        public Builder path(String path) {
            this.path = Objects.requireNonNull(path);
            return this;
        }
        public Builder restApiId(String restApiId) {
            this.restApiId = Objects.requireNonNull(restApiId);
            return this;
        }        public GetResourceArgs build() {
            return new GetResourceArgs(path, restApiId);
        }
    }
}
