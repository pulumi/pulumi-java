// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.appconfig;

import io.pulumi.aws.Utilities;
import io.pulumi.aws.appconfig.ConfigurationProfileArgs;
import io.pulumi.aws.appconfig.inputs.ConfigurationProfileState;
import io.pulumi.aws.appconfig.outputs.ConfigurationProfileValidator;
import io.pulumi.core.Input;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.OutputExport;
import io.pulumi.core.annotations.ResourceType;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;

/**
 * Provides an AppConfig Configuration Profile resource.
 * 
 * ## Example Usage
 * 
 * ## Import
 * 
 * AppConfig Configuration Profiles can be imported by using the configuration profile ID and application ID separated by a colon (`:`), e.g.,
 * 
 * ```sh
 *  $ pulumi import aws:appconfig/configurationProfile:ConfigurationProfile example 71abcde:11xxxxx
 * ```
 * 
 */
@ResourceType(type="aws:appconfig/configurationProfile:ConfigurationProfile")
public class ConfigurationProfile extends io.pulumi.resources.CustomResource {
    /**
     * The application ID. Must be between 4 and 7 characters in length.
     * 
     */
    @OutputExport(name="applicationId", type=String.class, parameters={})
    private Output<String> applicationId;

    /**
     * @return The application ID. Must be between 4 and 7 characters in length.
     * 
     */
    public Output<String> getApplicationId() {
        return this.applicationId;
    }
    /**
     * The Amazon Resource Name (ARN) of the AppConfig Configuration Profile.
     * 
     */
    @OutputExport(name="arn", type=String.class, parameters={})
    private Output<String> arn;

    /**
     * @return The Amazon Resource Name (ARN) of the AppConfig Configuration Profile.
     * 
     */
    public Output<String> getArn() {
        return this.arn;
    }
    /**
     * The configuration profile ID.
     * 
     */
    @OutputExport(name="configurationProfileId", type=String.class, parameters={})
    private Output<String> configurationProfileId;

    /**
     * @return The configuration profile ID.
     * 
     */
    public Output<String> getConfigurationProfileId() {
        return this.configurationProfileId;
    }
    /**
     * The description of the configuration profile. Can be at most 1024 characters.
     * 
     */
    @OutputExport(name="description", type=String.class, parameters={})
    private Output</* @Nullable */ String> description;

    /**
     * @return The description of the configuration profile. Can be at most 1024 characters.
     * 
     */
    public Output</* @Nullable */ String> getDescription() {
        return this.description;
    }
    /**
     * A URI to locate the configuration. You can specify the AWS AppConfig hosted configuration store, Systems Manager (SSM) document, an SSM Parameter Store parameter, or an Amazon S3 object. For the hosted configuration store, specify `hosted`. For an SSM document, specify either the document name in the format `ssm-document://<Document_name>` or the Amazon Resource Name (ARN). For a parameter, specify either the parameter name in the format `ssm-parameter://<Parameter_name>` or the ARN. For an Amazon S3 object, specify the URI in the following format: `s3://<bucket>/<objectKey>`.
     * 
     */
    @OutputExport(name="locationUri", type=String.class, parameters={})
    private Output<String> locationUri;

    /**
     * @return A URI to locate the configuration. You can specify the AWS AppConfig hosted configuration store, Systems Manager (SSM) document, an SSM Parameter Store parameter, or an Amazon S3 object. For the hosted configuration store, specify `hosted`. For an SSM document, specify either the document name in the format `ssm-document://<Document_name>` or the Amazon Resource Name (ARN). For a parameter, specify either the parameter name in the format `ssm-parameter://<Parameter_name>` or the ARN. For an Amazon S3 object, specify the URI in the following format: `s3://<bucket>/<objectKey>`.
     * 
     */
    public Output<String> getLocationUri() {
        return this.locationUri;
    }
    /**
     * The name for the configuration profile. Must be between 1 and 64 characters in length.
     * 
     */
    @OutputExport(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The name for the configuration profile. Must be between 1 and 64 characters in length.
     * 
     */
    public Output<String> getName() {
        return this.name;
    }
    /**
     * The ARN of an IAM role with permission to access the configuration at the specified `location_uri`. A retrieval role ARN is not required for configurations stored in the AWS AppConfig `hosted` configuration store. It is required for all other sources that store your configuration.
     * 
     */
    @OutputExport(name="retrievalRoleArn", type=String.class, parameters={})
    private Output</* @Nullable */ String> retrievalRoleArn;

    /**
     * @return The ARN of an IAM role with permission to access the configuration at the specified `location_uri`. A retrieval role ARN is not required for configurations stored in the AWS AppConfig `hosted` configuration store. It is required for all other sources that store your configuration.
     * 
     */
    public Output</* @Nullable */ String> getRetrievalRoleArn() {
        return this.retrievalRoleArn;
    }
    /**
     * A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @OutputExport(name="tags", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Output</* @Nullable */ Map<String,String>> getTags() {
        return this.tags;
    }
    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     */
    @OutputExport(name="tagsAll", type=Map.class, parameters={String.class, String.class})
    private Output<Map<String,String>> tagsAll;

    /**
     * @return A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     */
    public Output<Map<String,String>> getTagsAll() {
        return this.tagsAll;
    }
    /**
     * A set of methods for validating the configuration. Maximum of 2. See Validator below for more details.
     * 
     */
    @OutputExport(name="validators", type=List.class, parameters={ConfigurationProfileValidator.class})
    private Output</* @Nullable */ List<ConfigurationProfileValidator>> validators;

    /**
     * @return A set of methods for validating the configuration. Maximum of 2. See Validator below for more details.
     * 
     */
    public Output</* @Nullable */ List<ConfigurationProfileValidator>> getValidators() {
        return this.validators;
    }

    public interface BuilderApplicator {
        public void apply(ConfigurationProfileArgs.Builder a);
    }
    private static io.pulumi.aws.appconfig.ConfigurationProfileArgs buildArgs(BuilderApplicator argsBuilder) {
        final var builder = io.pulumi.aws.appconfig.ConfigurationProfileArgs.builder();
        argsBuilder.apply(builder);
        return builder.build();
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param argsBuilder A function that configures a passed builder.
     */
    public ConfigurationProfile(String name, BuilderApplicator argsBuilder) {
        this(name, buildArgs(argsBuilder), null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ConfigurationProfile(String name) {
        this(name, ConfigurationProfileArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ConfigurationProfile(String name, ConfigurationProfileArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ConfigurationProfile(String name, ConfigurationProfileArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:appconfig/configurationProfile:ConfigurationProfile", name, args == null ? ConfigurationProfileArgs.Empty : args, makeResourceOptions(options, Input.empty()));
    }

    private ConfigurationProfile(String name, Input<String> id, @Nullable ConfigurationProfileState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:appconfig/configurationProfile:ConfigurationProfile", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Input<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .setVersion(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ConfigurationProfile get(String name, Input<String> id, @Nullable ConfigurationProfileState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new ConfigurationProfile(name, id, state, options);
    }
}
