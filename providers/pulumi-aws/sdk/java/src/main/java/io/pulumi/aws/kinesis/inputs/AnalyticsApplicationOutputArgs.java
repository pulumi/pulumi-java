// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.kinesis.inputs;

import io.pulumi.aws.kinesis.inputs.AnalyticsApplicationOutputKinesisFirehoseArgs;
import io.pulumi.aws.kinesis.inputs.AnalyticsApplicationOutputKinesisStreamArgs;
import io.pulumi.aws.kinesis.inputs.AnalyticsApplicationOutputLambdaArgs;
import io.pulumi.aws.kinesis.inputs.AnalyticsApplicationOutputSchemaArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class AnalyticsApplicationOutputArgs extends io.pulumi.resources.ResourceArgs {

    public static final AnalyticsApplicationOutputArgs Empty = new AnalyticsApplicationOutputArgs();

    /**
     * The ARN of the Kinesis Analytics Application.
     * 
     */
    @Import(name="id")
      private final @Nullable Output<String> id;

    public Output<String> getId() {
        return this.id == null ? Codegen.empty() : this.id;
    }

    /**
     * The Kinesis Firehose configuration for the destination stream. Conflicts with `kinesis_stream`.
     * See Kinesis Firehose below for more details.
     * 
     */
    @Import(name="kinesisFirehose")
      private final @Nullable Output<AnalyticsApplicationOutputKinesisFirehoseArgs> kinesisFirehose;

    public Output<AnalyticsApplicationOutputKinesisFirehoseArgs> getKinesisFirehose() {
        return this.kinesisFirehose == null ? Codegen.empty() : this.kinesisFirehose;
    }

    /**
     * The Kinesis Stream configuration for the destination stream. Conflicts with `kinesis_firehose`.
     * See Kinesis Stream below for more details.
     * 
     */
    @Import(name="kinesisStream")
      private final @Nullable Output<AnalyticsApplicationOutputKinesisStreamArgs> kinesisStream;

    public Output<AnalyticsApplicationOutputKinesisStreamArgs> getKinesisStream() {
        return this.kinesisStream == null ? Codegen.empty() : this.kinesisStream;
    }

    /**
     * The Lambda function destination. See Lambda below for more details.
     * 
     */
    @Import(name="lambda")
      private final @Nullable Output<AnalyticsApplicationOutputLambdaArgs> lambda;

    public Output<AnalyticsApplicationOutputLambdaArgs> getLambda() {
        return this.lambda == null ? Codegen.empty() : this.lambda;
    }

    /**
     * The Name of the in-application stream.
     * 
     */
    @Import(name="name", required=true)
      private final Output<String> name;

    public Output<String> getName() {
        return this.name;
    }

    /**
     * The Schema format of the data written to the destination. See Destination Schema below for more details.
     * 
     */
    @Import(name="schema", required=true)
      private final Output<AnalyticsApplicationOutputSchemaArgs> schema;

    public Output<AnalyticsApplicationOutputSchemaArgs> getSchema() {
        return this.schema;
    }

    public AnalyticsApplicationOutputArgs(
        @Nullable Output<String> id,
        @Nullable Output<AnalyticsApplicationOutputKinesisFirehoseArgs> kinesisFirehose,
        @Nullable Output<AnalyticsApplicationOutputKinesisStreamArgs> kinesisStream,
        @Nullable Output<AnalyticsApplicationOutputLambdaArgs> lambda,
        Output<String> name,
        Output<AnalyticsApplicationOutputSchemaArgs> schema) {
        this.id = id;
        this.kinesisFirehose = kinesisFirehose;
        this.kinesisStream = kinesisStream;
        this.lambda = lambda;
        this.name = Objects.requireNonNull(name, "expected parameter 'name' to be non-null");
        this.schema = Objects.requireNonNull(schema, "expected parameter 'schema' to be non-null");
    }

    private AnalyticsApplicationOutputArgs() {
        this.id = Codegen.empty();
        this.kinesisFirehose = Codegen.empty();
        this.kinesisStream = Codegen.empty();
        this.lambda = Codegen.empty();
        this.name = Codegen.empty();
        this.schema = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AnalyticsApplicationOutputArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> id;
        private @Nullable Output<AnalyticsApplicationOutputKinesisFirehoseArgs> kinesisFirehose;
        private @Nullable Output<AnalyticsApplicationOutputKinesisStreamArgs> kinesisStream;
        private @Nullable Output<AnalyticsApplicationOutputLambdaArgs> lambda;
        private Output<String> name;
        private Output<AnalyticsApplicationOutputSchemaArgs> schema;

        public Builder() {
    	      // Empty
        }

        public Builder(AnalyticsApplicationOutputArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.kinesisFirehose = defaults.kinesisFirehose;
    	      this.kinesisStream = defaults.kinesisStream;
    	      this.lambda = defaults.lambda;
    	      this.name = defaults.name;
    	      this.schema = defaults.schema;
        }

        public Builder id(@Nullable Output<String> id) {
            this.id = id;
            return this;
        }
        public Builder id(@Nullable String id) {
            this.id = Codegen.ofNullable(id);
            return this;
        }
        public Builder kinesisFirehose(@Nullable Output<AnalyticsApplicationOutputKinesisFirehoseArgs> kinesisFirehose) {
            this.kinesisFirehose = kinesisFirehose;
            return this;
        }
        public Builder kinesisFirehose(@Nullable AnalyticsApplicationOutputKinesisFirehoseArgs kinesisFirehose) {
            this.kinesisFirehose = Codegen.ofNullable(kinesisFirehose);
            return this;
        }
        public Builder kinesisStream(@Nullable Output<AnalyticsApplicationOutputKinesisStreamArgs> kinesisStream) {
            this.kinesisStream = kinesisStream;
            return this;
        }
        public Builder kinesisStream(@Nullable AnalyticsApplicationOutputKinesisStreamArgs kinesisStream) {
            this.kinesisStream = Codegen.ofNullable(kinesisStream);
            return this;
        }
        public Builder lambda(@Nullable Output<AnalyticsApplicationOutputLambdaArgs> lambda) {
            this.lambda = lambda;
            return this;
        }
        public Builder lambda(@Nullable AnalyticsApplicationOutputLambdaArgs lambda) {
            this.lambda = Codegen.ofNullable(lambda);
            return this;
        }
        public Builder name(Output<String> name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder name(String name) {
            this.name = Output.of(Objects.requireNonNull(name));
            return this;
        }
        public Builder schema(Output<AnalyticsApplicationOutputSchemaArgs> schema) {
            this.schema = Objects.requireNonNull(schema);
            return this;
        }
        public Builder schema(AnalyticsApplicationOutputSchemaArgs schema) {
            this.schema = Output.of(Objects.requireNonNull(schema));
            return this;
        }        public AnalyticsApplicationOutputArgs build() {
            return new AnalyticsApplicationOutputArgs(id, kinesisFirehose, kinesisStream, lambda, name, schema);
        }
    }
}
