// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.glue.inputs;

import io.pulumi.aws.glue.inputs.DataCatalogEncryptionSettingsDataCatalogEncryptionSettingsConnectionPasswordEncryptionArgs;
import io.pulumi.aws.glue.inputs.DataCatalogEncryptionSettingsDataCatalogEncryptionSettingsEncryptionAtRestArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.InputImport;
import java.util.Objects;


public final class DataCatalogEncryptionSettingsDataCatalogEncryptionSettingsArgs extends io.pulumi.resources.ResourceArgs {

    public static final DataCatalogEncryptionSettingsDataCatalogEncryptionSettingsArgs Empty = new DataCatalogEncryptionSettingsDataCatalogEncryptionSettingsArgs();

    /**
     * When connection password protection is enabled, the Data Catalog uses a customer-provided key to encrypt the password as part of CreateConnection or UpdateConnection and store it in the ENCRYPTED_PASSWORD field in the connection properties. You can enable catalog encryption or only password encryption. see Connection Password Encryption.
     * 
     */
    @InputImport(name="connectionPasswordEncryption", required=true)
      private final Output<DataCatalogEncryptionSettingsDataCatalogEncryptionSettingsConnectionPasswordEncryptionArgs> connectionPasswordEncryption;

    public Output<DataCatalogEncryptionSettingsDataCatalogEncryptionSettingsConnectionPasswordEncryptionArgs> getConnectionPasswordEncryption() {
        return this.connectionPasswordEncryption;
    }

    /**
     * Specifies the encryption-at-rest configuration for the Data Catalog. see Encryption At Rest.
     * 
     */
    @InputImport(name="encryptionAtRest", required=true)
      private final Output<DataCatalogEncryptionSettingsDataCatalogEncryptionSettingsEncryptionAtRestArgs> encryptionAtRest;

    public Output<DataCatalogEncryptionSettingsDataCatalogEncryptionSettingsEncryptionAtRestArgs> getEncryptionAtRest() {
        return this.encryptionAtRest;
    }

    public DataCatalogEncryptionSettingsDataCatalogEncryptionSettingsArgs(
        Output<DataCatalogEncryptionSettingsDataCatalogEncryptionSettingsConnectionPasswordEncryptionArgs> connectionPasswordEncryption,
        Output<DataCatalogEncryptionSettingsDataCatalogEncryptionSettingsEncryptionAtRestArgs> encryptionAtRest) {
        this.connectionPasswordEncryption = Objects.requireNonNull(connectionPasswordEncryption, "expected parameter 'connectionPasswordEncryption' to be non-null");
        this.encryptionAtRest = Objects.requireNonNull(encryptionAtRest, "expected parameter 'encryptionAtRest' to be non-null");
    }

    private DataCatalogEncryptionSettingsDataCatalogEncryptionSettingsArgs() {
        this.connectionPasswordEncryption = Output.empty();
        this.encryptionAtRest = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DataCatalogEncryptionSettingsDataCatalogEncryptionSettingsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<DataCatalogEncryptionSettingsDataCatalogEncryptionSettingsConnectionPasswordEncryptionArgs> connectionPasswordEncryption;
        private Output<DataCatalogEncryptionSettingsDataCatalogEncryptionSettingsEncryptionAtRestArgs> encryptionAtRest;

        public Builder() {
    	      // Empty
        }

        public Builder(DataCatalogEncryptionSettingsDataCatalogEncryptionSettingsArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.connectionPasswordEncryption = defaults.connectionPasswordEncryption;
    	      this.encryptionAtRest = defaults.encryptionAtRest;
        }

        public Builder connectionPasswordEncryption(Output<DataCatalogEncryptionSettingsDataCatalogEncryptionSettingsConnectionPasswordEncryptionArgs> connectionPasswordEncryption) {
            this.connectionPasswordEncryption = Objects.requireNonNull(connectionPasswordEncryption);
            return this;
        }

        public Builder connectionPasswordEncryption(DataCatalogEncryptionSettingsDataCatalogEncryptionSettingsConnectionPasswordEncryptionArgs connectionPasswordEncryption) {
            this.connectionPasswordEncryption = Output.of(Objects.requireNonNull(connectionPasswordEncryption));
            return this;
        }

        public Builder encryptionAtRest(Output<DataCatalogEncryptionSettingsDataCatalogEncryptionSettingsEncryptionAtRestArgs> encryptionAtRest) {
            this.encryptionAtRest = Objects.requireNonNull(encryptionAtRest);
            return this;
        }

        public Builder encryptionAtRest(DataCatalogEncryptionSettingsDataCatalogEncryptionSettingsEncryptionAtRestArgs encryptionAtRest) {
            this.encryptionAtRest = Output.of(Objects.requireNonNull(encryptionAtRest));
            return this;
        }
        public DataCatalogEncryptionSettingsDataCatalogEncryptionSettingsArgs build() {
            return new DataCatalogEncryptionSettingsDataCatalogEncryptionSettingsArgs(connectionPasswordEncryption, encryptionAtRest);
        }
    }
}
