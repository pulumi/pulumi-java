// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.appsync.inputs;

import io.pulumi.aws.appsync.inputs.DataSourceHttpConfigAuthorizationConfigArgs;
import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class DataSourceHttpConfigArgs extends io.pulumi.resources.ResourceArgs {

    public static final DataSourceHttpConfigArgs Empty = new DataSourceHttpConfigArgs();

    /**
     * The authorization configuration in case the HTTP endpoint requires authorization. See Authorization Config.
     * 
     */
    @InputImport(name="authorizationConfig")
    private final @Nullable Input<DataSourceHttpConfigAuthorizationConfigArgs> authorizationConfig;

    public Input<DataSourceHttpConfigAuthorizationConfigArgs> getAuthorizationConfig() {
        return this.authorizationConfig == null ? Input.empty() : this.authorizationConfig;
    }

    /**
     * HTTP URL.
     * 
     */
    @InputImport(name="endpoint", required=true)
    private final Input<String> endpoint;

    public Input<String> getEndpoint() {
        return this.endpoint;
    }

    public DataSourceHttpConfigArgs(
        @Nullable Input<DataSourceHttpConfigAuthorizationConfigArgs> authorizationConfig,
        Input<String> endpoint) {
        this.authorizationConfig = authorizationConfig;
        this.endpoint = Objects.requireNonNull(endpoint, "expected parameter 'endpoint' to be non-null");
    }

    private DataSourceHttpConfigArgs() {
        this.authorizationConfig = Input.empty();
        this.endpoint = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DataSourceHttpConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<DataSourceHttpConfigAuthorizationConfigArgs> authorizationConfig;
        private Input<String> endpoint;

        public Builder() {
    	      // Empty
        }

        public Builder(DataSourceHttpConfigArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.authorizationConfig = defaults.authorizationConfig;
    	      this.endpoint = defaults.endpoint;
        }

        public Builder setAuthorizationConfig(@Nullable Input<DataSourceHttpConfigAuthorizationConfigArgs> authorizationConfig) {
            this.authorizationConfig = authorizationConfig;
            return this;
        }

        public Builder setAuthorizationConfig(@Nullable DataSourceHttpConfigAuthorizationConfigArgs authorizationConfig) {
            this.authorizationConfig = Input.ofNullable(authorizationConfig);
            return this;
        }

        public Builder setEndpoint(Input<String> endpoint) {
            this.endpoint = Objects.requireNonNull(endpoint);
            return this;
        }

        public Builder setEndpoint(String endpoint) {
            this.endpoint = Input.of(Objects.requireNonNull(endpoint));
            return this;
        }
        public DataSourceHttpConfigArgs build() {
            return new DataSourceHttpConfigArgs(authorizationConfig, endpoint);
        }
    }
}
