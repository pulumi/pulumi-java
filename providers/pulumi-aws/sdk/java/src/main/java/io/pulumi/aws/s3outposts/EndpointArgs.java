// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.s3outposts;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.String;
import java.util.Objects;


public final class EndpointArgs extends io.pulumi.resources.ResourceArgs {

    public static final EndpointArgs Empty = new EndpointArgs();

    /**
     * Identifier of the Outpost to contain this endpoint.
     * 
     */
    @InputImport(name="outpostId", required=true)
    private final Input<String> outpostId;

    public Input<String> getOutpostId() {
        return this.outpostId;
    }

    /**
     * Identifier of the EC2 Security Group.
     * 
     */
    @InputImport(name="securityGroupId", required=true)
    private final Input<String> securityGroupId;

    public Input<String> getSecurityGroupId() {
        return this.securityGroupId;
    }

    /**
     * Identifier of the EC2 Subnet.
     * 
     */
    @InputImport(name="subnetId", required=true)
    private final Input<String> subnetId;

    public Input<String> getSubnetId() {
        return this.subnetId;
    }

    public EndpointArgs(
        Input<String> outpostId,
        Input<String> securityGroupId,
        Input<String> subnetId) {
        this.outpostId = Objects.requireNonNull(outpostId, "expected parameter 'outpostId' to be non-null");
        this.securityGroupId = Objects.requireNonNull(securityGroupId, "expected parameter 'securityGroupId' to be non-null");
        this.subnetId = Objects.requireNonNull(subnetId, "expected parameter 'subnetId' to be non-null");
    }

    private EndpointArgs() {
        this.outpostId = Input.empty();
        this.securityGroupId = Input.empty();
        this.subnetId = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(EndpointArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<String> outpostId;
        private Input<String> securityGroupId;
        private Input<String> subnetId;

        public Builder() {
    	      // Empty
        }

        public Builder(EndpointArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.outpostId = defaults.outpostId;
    	      this.securityGroupId = defaults.securityGroupId;
    	      this.subnetId = defaults.subnetId;
        }

        public Builder setOutpostId(Input<String> outpostId) {
            this.outpostId = Objects.requireNonNull(outpostId);
            return this;
        }

        public Builder setOutpostId(String outpostId) {
            this.outpostId = Input.of(Objects.requireNonNull(outpostId));
            return this;
        }

        public Builder setSecurityGroupId(Input<String> securityGroupId) {
            this.securityGroupId = Objects.requireNonNull(securityGroupId);
            return this;
        }

        public Builder setSecurityGroupId(String securityGroupId) {
            this.securityGroupId = Input.of(Objects.requireNonNull(securityGroupId));
            return this;
        }

        public Builder setSubnetId(Input<String> subnetId) {
            this.subnetId = Objects.requireNonNull(subnetId);
            return this;
        }

        public Builder setSubnetId(String subnetId) {
            this.subnetId = Input.of(Objects.requireNonNull(subnetId));
            return this;
        }
        public EndpointArgs build() {
            return new EndpointArgs(outpostId, securityGroupId, subnetId);
        }
    }
}
