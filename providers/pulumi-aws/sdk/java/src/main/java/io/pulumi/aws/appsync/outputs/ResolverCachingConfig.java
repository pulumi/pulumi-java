// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.appsync.outputs;

import io.pulumi.core.annotations.OutputCustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class ResolverCachingConfig {
    /**
     * The list of caching key.
     * 
     */
    private final @Nullable List<String> cachingKeys;
    /**
     * The TTL in seconds.
     * 
     */
    private final @Nullable Integer ttl;

    @OutputCustomType.Constructor
    private ResolverCachingConfig(
        @OutputCustomType.Parameter("cachingKeys") @Nullable List<String> cachingKeys,
        @OutputCustomType.Parameter("ttl") @Nullable Integer ttl) {
        this.cachingKeys = cachingKeys;
        this.ttl = ttl;
    }

    /**
     * The list of caching key.
     * 
    */
    public List<String> getCachingKeys() {
        return this.cachingKeys == null ? List.of() : this.cachingKeys;
    }
    /**
     * The TTL in seconds.
     * 
    */
    public Optional<Integer> getTtl() {
        return Optional.ofNullable(this.ttl);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ResolverCachingConfig defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable List<String> cachingKeys;
        private @Nullable Integer ttl;

        public Builder() {
    	      // Empty
        }

        public Builder(ResolverCachingConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cachingKeys = defaults.cachingKeys;
    	      this.ttl = defaults.ttl;
        }

        public Builder setCachingKeys(@Nullable List<String> cachingKeys) {
            this.cachingKeys = cachingKeys;
            return this;
        }

        public Builder setTtl(@Nullable Integer ttl) {
            this.ttl = ttl;
            return this;
        }
        public ResolverCachingConfig build() {
            return new ResolverCachingConfig(cachingKeys, ttl);
        }
    }
}
