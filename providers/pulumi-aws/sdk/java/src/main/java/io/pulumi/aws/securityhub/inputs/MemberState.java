// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.securityhub.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class MemberState extends io.pulumi.resources.ResourceArgs {

    public static final MemberState Empty = new MemberState();

    /**
     * The ID of the member AWS account.
     * 
     */
    @InputImport(name="accountId")
      private final @Nullable Input<String> accountId;

    public Input<String> getAccountId() {
        return this.accountId == null ? Input.empty() : this.accountId;
    }

    /**
     * The email of the member AWS account.
     * 
     */
    @InputImport(name="email")
      private final @Nullable Input<String> email;

    public Input<String> getEmail() {
        return this.email == null ? Input.empty() : this.email;
    }

    /**
     * Boolean whether to invite the account to Security Hub as a member. Defaults to `false`.
     * 
     */
    @InputImport(name="invite")
      private final @Nullable Input<Boolean> invite;

    public Input<Boolean> getInvite() {
        return this.invite == null ? Input.empty() : this.invite;
    }

    /**
     * The ID of the master Security Hub AWS account.
     * 
     */
    @InputImport(name="masterId")
      private final @Nullable Input<String> masterId;

    public Input<String> getMasterId() {
        return this.masterId == null ? Input.empty() : this.masterId;
    }

    /**
     * The status of the member account relationship.
     * 
     */
    @InputImport(name="memberStatus")
      private final @Nullable Input<String> memberStatus;

    public Input<String> getMemberStatus() {
        return this.memberStatus == null ? Input.empty() : this.memberStatus;
    }

    public MemberState(
        @Nullable Input<String> accountId,
        @Nullable Input<String> email,
        @Nullable Input<Boolean> invite,
        @Nullable Input<String> masterId,
        @Nullable Input<String> memberStatus) {
        this.accountId = accountId;
        this.email = email;
        this.invite = invite;
        this.masterId = masterId;
        this.memberStatus = memberStatus;
    }

    private MemberState() {
        this.accountId = Input.empty();
        this.email = Input.empty();
        this.invite = Input.empty();
        this.masterId = Input.empty();
        this.memberStatus = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MemberState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> accountId;
        private @Nullable Input<String> email;
        private @Nullable Input<Boolean> invite;
        private @Nullable Input<String> masterId;
        private @Nullable Input<String> memberStatus;

        public Builder() {
    	      // Empty
        }

        public Builder(MemberState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountId = defaults.accountId;
    	      this.email = defaults.email;
    	      this.invite = defaults.invite;
    	      this.masterId = defaults.masterId;
    	      this.memberStatus = defaults.memberStatus;
        }

        public Builder accountId(@Nullable Input<String> accountId) {
            this.accountId = accountId;
            return this;
        }

        public Builder accountId(@Nullable String accountId) {
            this.accountId = Input.ofNullable(accountId);
            return this;
        }

        public Builder email(@Nullable Input<String> email) {
            this.email = email;
            return this;
        }

        public Builder email(@Nullable String email) {
            this.email = Input.ofNullable(email);
            return this;
        }

        public Builder invite(@Nullable Input<Boolean> invite) {
            this.invite = invite;
            return this;
        }

        public Builder invite(@Nullable Boolean invite) {
            this.invite = Input.ofNullable(invite);
            return this;
        }

        public Builder masterId(@Nullable Input<String> masterId) {
            this.masterId = masterId;
            return this;
        }

        public Builder masterId(@Nullable String masterId) {
            this.masterId = Input.ofNullable(masterId);
            return this;
        }

        public Builder memberStatus(@Nullable Input<String> memberStatus) {
            this.memberStatus = memberStatus;
            return this;
        }

        public Builder memberStatus(@Nullable String memberStatus) {
            this.memberStatus = Input.ofNullable(memberStatus);
            return this;
        }
        public MemberState build() {
            return new MemberState(accountId, email, invite, masterId, memberStatus);
        }
    }
}
