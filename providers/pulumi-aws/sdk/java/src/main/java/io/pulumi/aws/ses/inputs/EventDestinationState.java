// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.ses.inputs;

import io.pulumi.aws.ses.inputs.EventDestinationCloudwatchDestinationGetArgs;
import io.pulumi.aws.ses.inputs.EventDestinationKinesisDestinationGetArgs;
import io.pulumi.aws.ses.inputs.EventDestinationSnsDestinationGetArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class EventDestinationState extends io.pulumi.resources.ResourceArgs {

    public static final EventDestinationState Empty = new EventDestinationState();

    /**
     * The SES event destination ARN.
     * 
     */
    @Import(name="arn")
      private final @Nullable Output<String> arn;

    public Output<String> getArn() {
        return this.arn == null ? Output.empty() : this.arn;
    }

    /**
     * CloudWatch destination for the events
     * 
     */
    @Import(name="cloudwatchDestinations")
      private final @Nullable Output<List<EventDestinationCloudwatchDestinationGetArgs>> cloudwatchDestinations;

    public Output<List<EventDestinationCloudwatchDestinationGetArgs>> getCloudwatchDestinations() {
        return this.cloudwatchDestinations == null ? Output.empty() : this.cloudwatchDestinations;
    }

    /**
     * The name of the configuration set
     * 
     */
    @Import(name="configurationSetName")
      private final @Nullable Output<String> configurationSetName;

    public Output<String> getConfigurationSetName() {
        return this.configurationSetName == null ? Output.empty() : this.configurationSetName;
    }

    /**
     * If true, the event destination will be enabled
     * 
     */
    @Import(name="enabled")
      private final @Nullable Output<Boolean> enabled;

    public Output<Boolean> getEnabled() {
        return this.enabled == null ? Output.empty() : this.enabled;
    }

    /**
     * Send the events to a kinesis firehose destination
     * 
     */
    @Import(name="kinesisDestination")
      private final @Nullable Output<EventDestinationKinesisDestinationGetArgs> kinesisDestination;

    public Output<EventDestinationKinesisDestinationGetArgs> getKinesisDestination() {
        return this.kinesisDestination == null ? Output.empty() : this.kinesisDestination;
    }

    /**
     * A list of matching types. May be any of `"send"`, `"reject"`, `"bounce"`, `"complaint"`, `"delivery"`, `"open"`, `"click"`, or `"renderingFailure"`.
     * 
     */
    @Import(name="matchingTypes")
      private final @Nullable Output<List<String>> matchingTypes;

    public Output<List<String>> getMatchingTypes() {
        return this.matchingTypes == null ? Output.empty() : this.matchingTypes;
    }

    /**
     * The name of the event destination
     * 
     */
    @Import(name="name")
      private final @Nullable Output<String> name;

    public Output<String> getName() {
        return this.name == null ? Output.empty() : this.name;
    }

    /**
     * Send the events to an SNS Topic destination
     * 
     */
    @Import(name="snsDestination")
      private final @Nullable Output<EventDestinationSnsDestinationGetArgs> snsDestination;

    public Output<EventDestinationSnsDestinationGetArgs> getSnsDestination() {
        return this.snsDestination == null ? Output.empty() : this.snsDestination;
    }

    public EventDestinationState(
        @Nullable Output<String> arn,
        @Nullable Output<List<EventDestinationCloudwatchDestinationGetArgs>> cloudwatchDestinations,
        @Nullable Output<String> configurationSetName,
        @Nullable Output<Boolean> enabled,
        @Nullable Output<EventDestinationKinesisDestinationGetArgs> kinesisDestination,
        @Nullable Output<List<String>> matchingTypes,
        @Nullable Output<String> name,
        @Nullable Output<EventDestinationSnsDestinationGetArgs> snsDestination) {
        this.arn = arn;
        this.cloudwatchDestinations = cloudwatchDestinations;
        this.configurationSetName = configurationSetName;
        this.enabled = enabled;
        this.kinesisDestination = kinesisDestination;
        this.matchingTypes = matchingTypes;
        this.name = name;
        this.snsDestination = snsDestination;
    }

    private EventDestinationState() {
        this.arn = Output.empty();
        this.cloudwatchDestinations = Output.empty();
        this.configurationSetName = Output.empty();
        this.enabled = Output.empty();
        this.kinesisDestination = Output.empty();
        this.matchingTypes = Output.empty();
        this.name = Output.empty();
        this.snsDestination = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(EventDestinationState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> arn;
        private @Nullable Output<List<EventDestinationCloudwatchDestinationGetArgs>> cloudwatchDestinations;
        private @Nullable Output<String> configurationSetName;
        private @Nullable Output<Boolean> enabled;
        private @Nullable Output<EventDestinationKinesisDestinationGetArgs> kinesisDestination;
        private @Nullable Output<List<String>> matchingTypes;
        private @Nullable Output<String> name;
        private @Nullable Output<EventDestinationSnsDestinationGetArgs> snsDestination;

        public Builder() {
    	      // Empty
        }

        public Builder(EventDestinationState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.cloudwatchDestinations = defaults.cloudwatchDestinations;
    	      this.configurationSetName = defaults.configurationSetName;
    	      this.enabled = defaults.enabled;
    	      this.kinesisDestination = defaults.kinesisDestination;
    	      this.matchingTypes = defaults.matchingTypes;
    	      this.name = defaults.name;
    	      this.snsDestination = defaults.snsDestination;
        }

        public Builder arn(@Nullable Output<String> arn) {
            this.arn = arn;
            return this;
        }

        public Builder arn(@Nullable String arn) {
            this.arn = Output.ofNullable(arn);
            return this;
        }

        public Builder cloudwatchDestinations(@Nullable Output<List<EventDestinationCloudwatchDestinationGetArgs>> cloudwatchDestinations) {
            this.cloudwatchDestinations = cloudwatchDestinations;
            return this;
        }

        public Builder cloudwatchDestinations(@Nullable List<EventDestinationCloudwatchDestinationGetArgs> cloudwatchDestinations) {
            this.cloudwatchDestinations = Output.ofNullable(cloudwatchDestinations);
            return this;
        }

        public Builder configurationSetName(@Nullable Output<String> configurationSetName) {
            this.configurationSetName = configurationSetName;
            return this;
        }

        public Builder configurationSetName(@Nullable String configurationSetName) {
            this.configurationSetName = Output.ofNullable(configurationSetName);
            return this;
        }

        public Builder enabled(@Nullable Output<Boolean> enabled) {
            this.enabled = enabled;
            return this;
        }

        public Builder enabled(@Nullable Boolean enabled) {
            this.enabled = Output.ofNullable(enabled);
            return this;
        }

        public Builder kinesisDestination(@Nullable Output<EventDestinationKinesisDestinationGetArgs> kinesisDestination) {
            this.kinesisDestination = kinesisDestination;
            return this;
        }

        public Builder kinesisDestination(@Nullable EventDestinationKinesisDestinationGetArgs kinesisDestination) {
            this.kinesisDestination = Output.ofNullable(kinesisDestination);
            return this;
        }

        public Builder matchingTypes(@Nullable Output<List<String>> matchingTypes) {
            this.matchingTypes = matchingTypes;
            return this;
        }

        public Builder matchingTypes(@Nullable List<String> matchingTypes) {
            this.matchingTypes = Output.ofNullable(matchingTypes);
            return this;
        }

        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }

        public Builder name(@Nullable String name) {
            this.name = Output.ofNullable(name);
            return this;
        }

        public Builder snsDestination(@Nullable Output<EventDestinationSnsDestinationGetArgs> snsDestination) {
            this.snsDestination = snsDestination;
            return this;
        }

        public Builder snsDestination(@Nullable EventDestinationSnsDestinationGetArgs snsDestination) {
            this.snsDestination = Output.ofNullable(snsDestination);
            return this;
        }
        public EventDestinationState build() {
            return new EventDestinationState(arn, cloudwatchDestinations, configurationSetName, enabled, kinesisDestination, matchingTypes, name, snsDestination);
        }
    }
}
