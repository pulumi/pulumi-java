// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.apigateway;

import io.pulumi.aws.Utilities;
import io.pulumi.aws.apigateway.AccountArgs;
import io.pulumi.aws.apigateway.inputs.AccountState;
import io.pulumi.aws.apigateway.outputs.AccountThrottleSettings;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Export;
import io.pulumi.core.annotations.ResourceType;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * Provides a settings of an API Gateway Account. Settings is applied region-wide per `provider` block.
 * 
 * > **Note:** As there is no API method for deleting account settings or resetting it to defaults, destroying this resource will keep your account settings intact
 * 
 * {{% examples %}}
 * ## Example Usage
 * {{% example %}}
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 * 
 * const cloudwatchRole = new aws.iam.Role("cloudwatchRole", {assumeRolePolicy: `{
 *   "Version": "2012-10-17",
 *   "Statement": [
 *     {
 *       "Sid": "",
 *       "Effect": "Allow",
 *       "Principal": {
 *         "Service": "apigateway.amazonaws.com"
 *       },
 *       "Action": "sts:AssumeRole"
 *     }
 *   ]
 * }
 * `});
 * const demo = new aws.apigateway.Account("demo", {cloudwatchRoleArn: cloudwatchRole.arn});
 * const cloudwatchRolePolicy = new aws.iam.RolePolicy("cloudwatchRolePolicy", {
 *     role: cloudwatchRole.id,
 *     policy: `{
 *     "Version": "2012-10-17",
 *     "Statement": [
 *         {
 *             "Effect": "Allow",
 *             "Action": [
 *                 "logs:CreateLogGroup",
 *                 "logs:CreateLogStream",
 *                 "logs:DescribeLogGroups",
 *                 "logs:DescribeLogStreams",
 *                 "logs:PutLogEvents",
 *                 "logs:GetLogEvents",
 *                 "logs:FilterLogEvents"
 *             ],
 *             "Resource": "*"
 *         }
 *     ]
 * }
 * `,
 * });
 * ```
 * ```python
 * import pulumi
 * import pulumi_aws as aws
 * 
 * cloudwatch_role = aws.iam.Role("cloudwatchRole", assume_role_policy="""{
 *   "Version": "2012-10-17",
 *   "Statement": [
 *     {
 *       "Sid": "",
 *       "Effect": "Allow",
 *       "Principal": {
 *         "Service": "apigateway.amazonaws.com"
 *       },
 *       "Action": "sts:AssumeRole"
 *     }
 *   ]
 * }
 * """)
 * demo = aws.apigateway.Account("demo", cloudwatch_role_arn=cloudwatch_role.arn)
 * cloudwatch_role_policy = aws.iam.RolePolicy("cloudwatchRolePolicy",
 *     role=cloudwatch_role.id,
 *     policy="""{
 *     "Version": "2012-10-17",
 *     "Statement": [
 *         {
 *             "Effect": "Allow",
 *             "Action": [
 *                 "logs:CreateLogGroup",
 *                 "logs:CreateLogStream",
 *                 "logs:DescribeLogGroups",
 *                 "logs:DescribeLogStreams",
 *                 "logs:PutLogEvents",
 *                 "logs:GetLogEvents",
 *                 "logs:FilterLogEvents"
 *             ],
 *             "Resource": "*"
 *         }
 *     ]
 * }
 * """)
 * ```
 * ```csharp
 * using Pulumi;
 * using Aws = Pulumi.Aws;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var cloudwatchRole = new Aws.Iam.Role("cloudwatchRole", new Aws.Iam.RoleArgs
 *         {
 *             AssumeRolePolicy = @"{
 *   ""Version"": ""2012-10-17"",
 *   ""Statement"": [
 *     {
 *       ""Sid"": """",
 *       ""Effect"": ""Allow"",
 *       ""Principal"": {
 *         ""Service"": ""apigateway.amazonaws.com""
 *       },
 *       ""Action"": ""sts:AssumeRole""
 *     }
 *   ]
 * }
 * ",
 *         });
 *         var demo = new Aws.ApiGateway.Account("demo", new Aws.ApiGateway.AccountArgs
 *         {
 *             CloudwatchRoleArn = cloudwatchRole.Arn,
 *         });
 *         var cloudwatchRolePolicy = new Aws.Iam.RolePolicy("cloudwatchRolePolicy", new Aws.Iam.RolePolicyArgs
 *         {
 *             Role = cloudwatchRole.Id,
 *             Policy = @"{
 *     ""Version"": ""2012-10-17"",
 *     ""Statement"": [
 *         {
 *             ""Effect"": ""Allow"",
 *             ""Action"": [
 *                 ""logs:CreateLogGroup"",
 *                 ""logs:CreateLogStream"",
 *                 ""logs:DescribeLogGroups"",
 *                 ""logs:DescribeLogStreams"",
 *                 ""logs:PutLogEvents"",
 *                 ""logs:GetLogEvents"",
 *                 ""logs:FilterLogEvents""
 *             ],
 *             ""Resource"": ""*""
 *         }
 *     ]
 * }
 * ",
 *         });
 *     }
 * 
 * }
 * ```
 * ```go
 * package main
 * 
 * import (
 * 	"fmt"
 * 
 * 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/apigateway"
 * 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/iam"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		cloudwatchRole, err := iam.NewRole(ctx, "cloudwatchRole", &iam.RoleArgs{
 * 			AssumeRolePolicy: pulumi.Any(fmt.Sprintf("%v%v%v%v%v%v%v%v%v%v%v%v%v", "{\n", "  \"Version\": \"2012-10-17\",\n", "  \"Statement\": [\n", "    {\n", "      \"Sid\": \"\",\n", "      \"Effect\": \"Allow\",\n", "      \"Principal\": {\n", "        \"Service\": \"apigateway.amazonaws.com\"\n", "      },\n", "      \"Action\": \"sts:AssumeRole\"\n", "    }\n", "  ]\n", "}\n")),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		_, err = apigateway.NewAccount(ctx, "demo", &apigateway.AccountArgs{
 * 			CloudwatchRoleArn: cloudwatchRole.Arn,
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		_, err = iam.NewRolePolicy(ctx, "cloudwatchRolePolicy", &iam.RolePolicyArgs{
 * 			Role:   cloudwatchRole.ID(),
 * 			Policy: pulumi.Any(fmt.Sprintf("%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v", "{\n", "    \"Version\": \"2012-10-17\",\n", "    \"Statement\": [\n", "        {\n", "            \"Effect\": \"Allow\",\n", "            \"Action\": [\n", "                \"logs:CreateLogGroup\",\n", "                \"logs:CreateLogStream\",\n", "                \"logs:DescribeLogGroups\",\n", "                \"logs:DescribeLogStreams\",\n", "                \"logs:PutLogEvents\",\n", "                \"logs:GetLogEvents\",\n", "                \"logs:FilterLogEvents\"\n", "            ],\n", "            \"Resource\": \"*\"\n", "        }\n", "    ]\n", "}\n")),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * ```
 * {{% /example %}}
 * {{% /examples %}}
 * 
 * ## Import
 * 
 * API Gateway Accounts can be imported using the word `api-gateway-account`, e.g.,
 * 
 * ```sh
 *  $ pulumi import aws:apigateway/account:Account demo api-gateway-account
 * ```
 * 
 *  
 */
@ResourceType(type="aws:apigateway/account:Account")
public class Account extends io.pulumi.resources.CustomResource {
    /**
     * The ARN of an IAM role for CloudWatch (to allow logging & monitoring). See more [in AWS Docs](https://docs.aws.amazon.com/apigateway/latest/developerguide/how-to-stage-settings.html#how-to-stage-settings-console). Logging & monitoring can be enabled/disabled and otherwise tuned on the API Gateway Stage level.
     * 
     */
    @Export(name="cloudwatchRoleArn", type=String.class, parameters={})
    private Output</* @Nullable */ String> cloudwatchRoleArn;

    /**
     * @return The ARN of an IAM role for CloudWatch (to allow logging & monitoring). See more [in AWS Docs](https://docs.aws.amazon.com/apigateway/latest/developerguide/how-to-stage-settings.html#how-to-stage-settings-console). Logging & monitoring can be enabled/disabled and otherwise tuned on the API Gateway Stage level.
     * 
     */
    public Output</* @Nullable */ String> getCloudwatchRoleArn() {
        return this.cloudwatchRoleArn;
    }
    /**
     * Account-Level throttle settings. See exported fields below.
     * 
     */
    @Export(name="throttleSettings", type=AccountThrottleSettings.class, parameters={})
    private Output<AccountThrottleSettings> throttleSettings;

    /**
     * @return Account-Level throttle settings. See exported fields below.
     * 
     */
    public Output<AccountThrottleSettings> getThrottleSettings() {
        return this.throttleSettings;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Account(String name) {
        this(name, AccountArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Account(String name, @Nullable AccountArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Account(String name, @Nullable AccountArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:apigateway/account:Account", name, args == null ? AccountArgs.Empty : args, makeResourceOptions(options, Output.empty()));
    }

    private Account(String name, Output<String> id, @Nullable AccountState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:apigateway/account:Account", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Account get(String name, Output<String> id, @Nullable AccountState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new Account(name, id, state, options);
    }
}
