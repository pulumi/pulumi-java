// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.kinesisanalyticsv2.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ApplicationSnapshotState extends io.pulumi.resources.ResourceArgs {

    public static final ApplicationSnapshotState Empty = new ApplicationSnapshotState();

    /**
     * The name of an existing  Kinesis Analytics v2 Application. Note that the application must be running for a snapshot to be created.
     * 
     */
    @InputImport(name="applicationName")
      private final @Nullable Input<String> applicationName;

    public Input<String> getApplicationName() {
        return this.applicationName == null ? Input.empty() : this.applicationName;
    }

    /**
     * The current application version ID when the snapshot was created.
     * 
     */
    @InputImport(name="applicationVersionId")
      private final @Nullable Input<Integer> applicationVersionId;

    public Input<Integer> getApplicationVersionId() {
        return this.applicationVersionId == null ? Input.empty() : this.applicationVersionId;
    }

    /**
     * The timestamp of the application snapshot.
     * 
     */
    @InputImport(name="snapshotCreationTimestamp")
      private final @Nullable Input<String> snapshotCreationTimestamp;

    public Input<String> getSnapshotCreationTimestamp() {
        return this.snapshotCreationTimestamp == null ? Input.empty() : this.snapshotCreationTimestamp;
    }

    /**
     * The name of the application snapshot.
     * 
     */
    @InputImport(name="snapshotName")
      private final @Nullable Input<String> snapshotName;

    public Input<String> getSnapshotName() {
        return this.snapshotName == null ? Input.empty() : this.snapshotName;
    }

    public ApplicationSnapshotState(
        @Nullable Input<String> applicationName,
        @Nullable Input<Integer> applicationVersionId,
        @Nullable Input<String> snapshotCreationTimestamp,
        @Nullable Input<String> snapshotName) {
        this.applicationName = applicationName;
        this.applicationVersionId = applicationVersionId;
        this.snapshotCreationTimestamp = snapshotCreationTimestamp;
        this.snapshotName = snapshotName;
    }

    private ApplicationSnapshotState() {
        this.applicationName = Input.empty();
        this.applicationVersionId = Input.empty();
        this.snapshotCreationTimestamp = Input.empty();
        this.snapshotName = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ApplicationSnapshotState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> applicationName;
        private @Nullable Input<Integer> applicationVersionId;
        private @Nullable Input<String> snapshotCreationTimestamp;
        private @Nullable Input<String> snapshotName;

        public Builder() {
    	      // Empty
        }

        public Builder(ApplicationSnapshotState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.applicationName = defaults.applicationName;
    	      this.applicationVersionId = defaults.applicationVersionId;
    	      this.snapshotCreationTimestamp = defaults.snapshotCreationTimestamp;
    	      this.snapshotName = defaults.snapshotName;
        }

        public Builder setApplicationName(@Nullable Input<String> applicationName) {
            this.applicationName = applicationName;
            return this;
        }

        public Builder setApplicationName(@Nullable String applicationName) {
            this.applicationName = Input.ofNullable(applicationName);
            return this;
        }

        public Builder setApplicationVersionId(@Nullable Input<Integer> applicationVersionId) {
            this.applicationVersionId = applicationVersionId;
            return this;
        }

        public Builder setApplicationVersionId(@Nullable Integer applicationVersionId) {
            this.applicationVersionId = Input.ofNullable(applicationVersionId);
            return this;
        }

        public Builder setSnapshotCreationTimestamp(@Nullable Input<String> snapshotCreationTimestamp) {
            this.snapshotCreationTimestamp = snapshotCreationTimestamp;
            return this;
        }

        public Builder setSnapshotCreationTimestamp(@Nullable String snapshotCreationTimestamp) {
            this.snapshotCreationTimestamp = Input.ofNullable(snapshotCreationTimestamp);
            return this;
        }

        public Builder setSnapshotName(@Nullable Input<String> snapshotName) {
            this.snapshotName = snapshotName;
            return this;
        }

        public Builder setSnapshotName(@Nullable String snapshotName) {
            this.snapshotName = Input.ofNullable(snapshotName);
            return this;
        }
        public ApplicationSnapshotState build() {
            return new ApplicationSnapshotState(applicationName, applicationVersionId, snapshotCreationTimestamp, snapshotName);
        }
    }
}
