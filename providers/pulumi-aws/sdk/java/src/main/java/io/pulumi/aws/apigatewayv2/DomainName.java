// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.apigatewayv2;

import io.pulumi.aws.Utilities;
import io.pulumi.aws.apigatewayv2.DomainNameArgs;
import io.pulumi.aws.apigatewayv2.inputs.DomainNameState;
import io.pulumi.aws.apigatewayv2.outputs.DomainNameDomainNameConfiguration;
import io.pulumi.aws.apigatewayv2.outputs.DomainNameMutualTlsAuthentication;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Export;
import io.pulumi.core.annotations.ResourceType;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;

/**
 * Manages an Amazon API Gateway Version 2 domain name.
 * More information can be found in the [Amazon API Gateway Developer Guide](https://docs.aws.amazon.com/apigateway/latest/developerguide/how-to-custom-domains.html).
 * 
 * > **Note:** This resource establishes ownership of and the TLS settings for
 * a particular domain name. An API stage can be associated with the domain name using the `aws.apigatewayv2.ApiMapping` resource.
 * 
 * {{% examples %}}
 * ## Example Usage
 * {{% example %}}
 * ### Basic
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 * 
 * const example = new aws.apigatewayv2.DomainName("example", {
 *     domainName: "ws-api.example.com",
 *     domainNameConfiguration: {
 *         certificateArn: aws_acm_certificate.example.arn,
 *         endpointType: "REGIONAL",
 *         securityPolicy: "TLS_1_2",
 *     },
 * });
 * ```
 * ```python
 * import pulumi
 * import pulumi_aws as aws
 * 
 * example = aws.apigatewayv2.DomainName("example",
 *     domain_name="ws-api.example.com",
 *     domain_name_configuration=aws.apigatewayv2.DomainNameDomainNameConfigurationArgs(
 *         certificate_arn=aws_acm_certificate["example"]["arn"],
 *         endpoint_type="REGIONAL",
 *         security_policy="TLS_1_2",
 *     ))
 * ```
 * ```csharp
 * using Pulumi;
 * using Aws = Pulumi.Aws;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var example = new Aws.ApiGatewayV2.DomainName("example", new Aws.ApiGatewayV2.DomainNameArgs
 *         {
 *             DomainName = "ws-api.example.com",
 *             DomainNameConfiguration = new Aws.ApiGatewayV2.Inputs.DomainNameDomainNameConfigurationArgs
 *             {
 *                 CertificateArn = aws_acm_certificate.Example.Arn,
 *                 EndpointType = "REGIONAL",
 *                 SecurityPolicy = "TLS_1_2",
 *             },
 *         });
 *     }
 * 
 * }
 * ```
 * ```go
 * package main
 * 
 * import (
 * 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/apigatewayv2"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		_, err := apigatewayv2.NewDomainName(ctx, "example", &apigatewayv2.DomainNameArgs{
 * 			DomainName: pulumi.String("ws-api.example.com"),
 * 			DomainNameConfiguration: &apigatewayv2.DomainNameDomainNameConfigurationArgs{
 * 				CertificateArn: pulumi.Any(aws_acm_certificate.Example.Arn),
 * 				EndpointType:   pulumi.String("REGIONAL"),
 * 				SecurityPolicy: pulumi.String("TLS_1_2"),
 * 			},
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * ```
 * {{% /example %}}
 * {{% example %}}
 * ### Associated Route 53 Resource Record
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 * 
 * const exampleDomainName = new aws.apigatewayv2.DomainName("exampleDomainName", {
 *     domainName: "http-api.example.com",
 *     domainNameConfiguration: {
 *         certificateArn: aws_acm_certificate.example.arn,
 *         endpointType: "REGIONAL",
 *         securityPolicy: "TLS_1_2",
 *     },
 * });
 * const exampleRecord = new aws.route53.Record("exampleRecord", {
 *     name: exampleDomainName.domainName,
 *     type: "A",
 *     zoneId: aws_route53_zone.example.zone_id,
 *     aliases: [{
 *         name: exampleDomainName.domainNameConfiguration.apply(domainNameConfiguration => domainNameConfiguration.targetDomainName),
 *         zoneId: exampleDomainName.domainNameConfiguration.apply(domainNameConfiguration => domainNameConfiguration.hostedZoneId),
 *         evaluateTargetHealth: false,
 *     }],
 * });
 * ```
 * ```python
 * import pulumi
 * import pulumi_aws as aws
 * 
 * example_domain_name = aws.apigatewayv2.DomainName("exampleDomainName",
 *     domain_name="http-api.example.com",
 *     domain_name_configuration=aws.apigatewayv2.DomainNameDomainNameConfigurationArgs(
 *         certificate_arn=aws_acm_certificate["example"]["arn"],
 *         endpoint_type="REGIONAL",
 *         security_policy="TLS_1_2",
 *     ))
 * example_record = aws.route53.Record("exampleRecord",
 *     name=example_domain_name.domain_name,
 *     type="A",
 *     zone_id=aws_route53_zone["example"]["zone_id"],
 *     aliases=[aws.route53.RecordAliasArgs(
 *         name=example_domain_name.domain_name_configuration.target_domain_name,
 *         zone_id=example_domain_name.domain_name_configuration.hosted_zone_id,
 *         evaluate_target_health=False,
 *     )])
 * ```
 * ```csharp
 * using Pulumi;
 * using Aws = Pulumi.Aws;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var exampleDomainName = new Aws.ApiGatewayV2.DomainName("exampleDomainName", new Aws.ApiGatewayV2.DomainNameArgs
 *         {
 *             DomainName = "http-api.example.com",
 *             DomainNameConfiguration = new Aws.ApiGatewayV2.Inputs.DomainNameDomainNameConfigurationArgs
 *             {
 *                 CertificateArn = aws_acm_certificate.Example.Arn,
 *                 EndpointType = "REGIONAL",
 *                 SecurityPolicy = "TLS_1_2",
 *             },
 *         });
 *         var exampleRecord = new Aws.Route53.Record("exampleRecord", new Aws.Route53.RecordArgs
 *         {
 *             Name = exampleDomainName.Domain,
 *             Type = "A",
 *             ZoneId = aws_route53_zone.Example.Zone_id,
 *             Aliases = 
 *             {
 *                 new Aws.Route53.Inputs.RecordAliasArgs
 *                 {
 *                     Name = exampleDomainName.DomainNameConfiguration.Apply(domainNameConfiguration => domainNameConfiguration.TargetDomainName),
 *                     ZoneId = exampleDomainName.DomainNameConfiguration.Apply(domainNameConfiguration => domainNameConfiguration.HostedZoneId),
 *                     EvaluateTargetHealth = false,
 *                 },
 *             },
 *         });
 *     }
 * 
 * }
 * ```
 * ```go
 * package main
 * 
 * import (
 * 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/apigatewayv2"
 * 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/route53"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		exampleDomainName, err := apigatewayv2.NewDomainName(ctx, "exampleDomainName", &apigatewayv2.DomainNameArgs{
 * 			DomainName: pulumi.String("http-api.example.com"),
 * 			DomainNameConfiguration: &apigatewayv2.DomainNameDomainNameConfigurationArgs{
 * 				CertificateArn: pulumi.Any(aws_acm_certificate.Example.Arn),
 * 				EndpointType:   pulumi.String("REGIONAL"),
 * 				SecurityPolicy: pulumi.String("TLS_1_2"),
 * 			},
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		_, err = route53.NewRecord(ctx, "exampleRecord", &route53.RecordArgs{
 * 			Name:   exampleDomainName.DomainName,
 * 			Type:   pulumi.String("A"),
 * 			ZoneId: pulumi.Any(aws_route53_zone.Example.Zone_id),
 * 			Aliases: route53.RecordAliasArray{
 * 				&route53.RecordAliasArgs{
 * 					Name: exampleDomainName.DomainNameConfiguration.ApplyT(func(domainNameConfiguration apigatewayv2.DomainNameDomainNameConfiguration) (string, error) {
 * 						return domainNameConfiguration.TargetDomainName, nil
 * 					}).(pulumi.StringOutput),
 * 					ZoneId: exampleDomainName.DomainNameConfiguration.ApplyT(func(domainNameConfiguration apigatewayv2.DomainNameDomainNameConfiguration) (string, error) {
 * 						return domainNameConfiguration.HostedZoneId, nil
 * 					}).(pulumi.StringOutput),
 * 					EvaluateTargetHealth: pulumi.Bool(false),
 * 				},
 * 			},
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * ```
 * {{% /example %}}
 * {{% /examples %}}
 * 
 * ## Import
 * 
 * `aws_apigatewayv2_domain_name` can be imported by using the domain name, e.g.,
 * 
 * ```sh
 *  $ pulumi import aws:apigatewayv2/domainName:DomainName example ws-api.example.com
 * ```
 * 
 *  
 */
@ResourceType(type="aws:apigatewayv2/domainName:DomainName")
public class DomainName extends io.pulumi.resources.CustomResource {
    /**
     * The [API mapping selection expression](https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-mapping-selection-expressions) for the domain name.
     * 
     */
    @Export(name="apiMappingSelectionExpression", type=String.class, parameters={})
    private Output<String> apiMappingSelectionExpression;

    /**
     * @return The [API mapping selection expression](https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-mapping-selection-expressions) for the domain name.
     * 
     */
    public Output<String> getApiMappingSelectionExpression() {
        return this.apiMappingSelectionExpression;
    }
    /**
     * The ARN of the domain name.
     * 
     */
    @Export(name="arn", type=String.class, parameters={})
    private Output<String> arn;

    /**
     * @return The ARN of the domain name.
     * 
     */
    public Output<String> getArn() {
        return this.arn;
    }
    /**
     * The domain name. Must be between 1 and 512 characters in length.
     * 
     */
    @Export(name="domainName", type=String.class, parameters={})
    private Output<String> domainName;

    /**
     * @return The domain name. Must be between 1 and 512 characters in length.
     * 
     */
    public Output<String> getDomainName() {
        return this.domainName;
    }
    /**
     * The domain name configuration.
     * 
     */
    @Export(name="domainNameConfiguration", type=DomainNameDomainNameConfiguration.class, parameters={})
    private Output<DomainNameDomainNameConfiguration> domainNameConfiguration;

    /**
     * @return The domain name configuration.
     * 
     */
    public Output<DomainNameDomainNameConfiguration> getDomainNameConfiguration() {
        return this.domainNameConfiguration;
    }
    /**
     * The mutual TLS authentication configuration for the domain name.
     * 
     */
    @Export(name="mutualTlsAuthentication", type=DomainNameMutualTlsAuthentication.class, parameters={})
    private Output</* @Nullable */ DomainNameMutualTlsAuthentication> mutualTlsAuthentication;

    /**
     * @return The mutual TLS authentication configuration for the domain name.
     * 
     */
    public Output</* @Nullable */ DomainNameMutualTlsAuthentication> getMutualTlsAuthentication() {
        return this.mutualTlsAuthentication;
    }
    /**
     * A map of tags to assign to the domain name. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Export(name="tags", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return A map of tags to assign to the domain name. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Output</* @Nullable */ Map<String,String>> getTags() {
        return this.tags;
    }
    /**
     * A map of tags assigned to the resource, including those inherited from the provider .
     * 
     */
    @Export(name="tagsAll", type=Map.class, parameters={String.class, String.class})
    private Output<Map<String,String>> tagsAll;

    /**
     * @return A map of tags assigned to the resource, including those inherited from the provider .
     * 
     */
    public Output<Map<String,String>> getTagsAll() {
        return this.tagsAll;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public DomainName(String name) {
        this(name, DomainNameArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public DomainName(String name, DomainNameArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public DomainName(String name, DomainNameArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:apigatewayv2/domainName:DomainName", name, args == null ? DomainNameArgs.Empty : args, makeResourceOptions(options, Output.empty()));
    }

    private DomainName(String name, Output<String> id, @Nullable DomainNameState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:apigatewayv2/domainName:DomainName", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static DomainName get(String name, Output<String> id, @Nullable DomainNameState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new DomainName(name, id, state, options);
    }
}
