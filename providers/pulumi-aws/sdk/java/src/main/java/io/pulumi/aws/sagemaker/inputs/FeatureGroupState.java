// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.sagemaker.inputs;

import io.pulumi.aws.sagemaker.inputs.FeatureGroupFeatureDefinitionGetArgs;
import io.pulumi.aws.sagemaker.inputs.FeatureGroupOfflineStoreConfigGetArgs;
import io.pulumi.aws.sagemaker.inputs.FeatureGroupOnlineStoreConfigGetArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class FeatureGroupState extends io.pulumi.resources.ResourceArgs {

    public static final FeatureGroupState Empty = new FeatureGroupState();

    /**
     * The Amazon Resource Name (ARN) assigned by AWS to this feature_group.
     * 
     */
    @InputImport(name="arn")
      private final @Nullable Output<String> arn;

    public Output<String> getArn() {
        return this.arn == null ? Output.empty() : this.arn;
    }

    /**
     * A free-form description of a Feature Group.
     * 
     */
    @InputImport(name="description")
      private final @Nullable Output<String> description;

    public Output<String> getDescription() {
        return this.description == null ? Output.empty() : this.description;
    }

    /**
     * The name of the feature that stores the EventTime of a Record in a Feature Group.
     * 
     */
    @InputImport(name="eventTimeFeatureName")
      private final @Nullable Output<String> eventTimeFeatureName;

    public Output<String> getEventTimeFeatureName() {
        return this.eventTimeFeatureName == null ? Output.empty() : this.eventTimeFeatureName;
    }

    /**
     * A list of Feature names and types. See Feature Definition Below.
     * 
     */
    @InputImport(name="featureDefinitions")
      private final @Nullable Output<List<FeatureGroupFeatureDefinitionGetArgs>> featureDefinitions;

    public Output<List<FeatureGroupFeatureDefinitionGetArgs>> getFeatureDefinitions() {
        return this.featureDefinitions == null ? Output.empty() : this.featureDefinitions;
    }

    /**
     * The name of the Feature Group. The name must be unique within an AWS Region in an AWS account.
     * 
     */
    @InputImport(name="featureGroupName")
      private final @Nullable Output<String> featureGroupName;

    public Output<String> getFeatureGroupName() {
        return this.featureGroupName == null ? Output.empty() : this.featureGroupName;
    }

    /**
     * The Offline Feature Store Configuration. See Offline Store Config Below.
     * 
     */
    @InputImport(name="offlineStoreConfig")
      private final @Nullable Output<FeatureGroupOfflineStoreConfigGetArgs> offlineStoreConfig;

    public Output<FeatureGroupOfflineStoreConfigGetArgs> getOfflineStoreConfig() {
        return this.offlineStoreConfig == null ? Output.empty() : this.offlineStoreConfig;
    }

    /**
     * The Online Feature Store Configuration. See Online Store Config Below.
     * 
     */
    @InputImport(name="onlineStoreConfig")
      private final @Nullable Output<FeatureGroupOnlineStoreConfigGetArgs> onlineStoreConfig;

    public Output<FeatureGroupOnlineStoreConfigGetArgs> getOnlineStoreConfig() {
        return this.onlineStoreConfig == null ? Output.empty() : this.onlineStoreConfig;
    }

    /**
     * The name of the Feature whose value uniquely identifies a Record defined in the Feature Store. Only the latest record per identifier value will be stored in the Online Store.
     * 
     */
    @InputImport(name="recordIdentifierFeatureName")
      private final @Nullable Output<String> recordIdentifierFeatureName;

    public Output<String> getRecordIdentifierFeatureName() {
        return this.recordIdentifierFeatureName == null ? Output.empty() : this.recordIdentifierFeatureName;
    }

    /**
     * The Amazon Resource Name (ARN) of the IAM execution role used to persist data into the Offline Store if an `offline_store_config` is provided.
     * 
     */
    @InputImport(name="roleArn")
      private final @Nullable Output<String> roleArn;

    public Output<String> getRoleArn() {
        return this.roleArn == null ? Output.empty() : this.roleArn;
    }

    /**
     * Map of resource tags for the resource. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @InputImport(name="tags")
      private final @Nullable Output<Map<String,String>> tags;

    public Output<Map<String,String>> getTags() {
        return this.tags == null ? Output.empty() : this.tags;
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider .
     * 
     */
    @InputImport(name="tagsAll")
      private final @Nullable Output<Map<String,String>> tagsAll;

    public Output<Map<String,String>> getTagsAll() {
        return this.tagsAll == null ? Output.empty() : this.tagsAll;
    }

    public FeatureGroupState(
        @Nullable Output<String> arn,
        @Nullable Output<String> description,
        @Nullable Output<String> eventTimeFeatureName,
        @Nullable Output<List<FeatureGroupFeatureDefinitionGetArgs>> featureDefinitions,
        @Nullable Output<String> featureGroupName,
        @Nullable Output<FeatureGroupOfflineStoreConfigGetArgs> offlineStoreConfig,
        @Nullable Output<FeatureGroupOnlineStoreConfigGetArgs> onlineStoreConfig,
        @Nullable Output<String> recordIdentifierFeatureName,
        @Nullable Output<String> roleArn,
        @Nullable Output<Map<String,String>> tags,
        @Nullable Output<Map<String,String>> tagsAll) {
        this.arn = arn;
        this.description = description;
        this.eventTimeFeatureName = eventTimeFeatureName;
        this.featureDefinitions = featureDefinitions;
        this.featureGroupName = featureGroupName;
        this.offlineStoreConfig = offlineStoreConfig;
        this.onlineStoreConfig = onlineStoreConfig;
        this.recordIdentifierFeatureName = recordIdentifierFeatureName;
        this.roleArn = roleArn;
        this.tags = tags;
        this.tagsAll = tagsAll;
    }

    private FeatureGroupState() {
        this.arn = Output.empty();
        this.description = Output.empty();
        this.eventTimeFeatureName = Output.empty();
        this.featureDefinitions = Output.empty();
        this.featureGroupName = Output.empty();
        this.offlineStoreConfig = Output.empty();
        this.onlineStoreConfig = Output.empty();
        this.recordIdentifierFeatureName = Output.empty();
        this.roleArn = Output.empty();
        this.tags = Output.empty();
        this.tagsAll = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FeatureGroupState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> arn;
        private @Nullable Output<String> description;
        private @Nullable Output<String> eventTimeFeatureName;
        private @Nullable Output<List<FeatureGroupFeatureDefinitionGetArgs>> featureDefinitions;
        private @Nullable Output<String> featureGroupName;
        private @Nullable Output<FeatureGroupOfflineStoreConfigGetArgs> offlineStoreConfig;
        private @Nullable Output<FeatureGroupOnlineStoreConfigGetArgs> onlineStoreConfig;
        private @Nullable Output<String> recordIdentifierFeatureName;
        private @Nullable Output<String> roleArn;
        private @Nullable Output<Map<String,String>> tags;
        private @Nullable Output<Map<String,String>> tagsAll;

        public Builder() {
    	      // Empty
        }

        public Builder(FeatureGroupState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.description = defaults.description;
    	      this.eventTimeFeatureName = defaults.eventTimeFeatureName;
    	      this.featureDefinitions = defaults.featureDefinitions;
    	      this.featureGroupName = defaults.featureGroupName;
    	      this.offlineStoreConfig = defaults.offlineStoreConfig;
    	      this.onlineStoreConfig = defaults.onlineStoreConfig;
    	      this.recordIdentifierFeatureName = defaults.recordIdentifierFeatureName;
    	      this.roleArn = defaults.roleArn;
    	      this.tags = defaults.tags;
    	      this.tagsAll = defaults.tagsAll;
        }

        public Builder arn(@Nullable Output<String> arn) {
            this.arn = arn;
            return this;
        }

        public Builder arn(@Nullable String arn) {
            this.arn = Output.ofNullable(arn);
            return this;
        }

        public Builder description(@Nullable Output<String> description) {
            this.description = description;
            return this;
        }

        public Builder description(@Nullable String description) {
            this.description = Output.ofNullable(description);
            return this;
        }

        public Builder eventTimeFeatureName(@Nullable Output<String> eventTimeFeatureName) {
            this.eventTimeFeatureName = eventTimeFeatureName;
            return this;
        }

        public Builder eventTimeFeatureName(@Nullable String eventTimeFeatureName) {
            this.eventTimeFeatureName = Output.ofNullable(eventTimeFeatureName);
            return this;
        }

        public Builder featureDefinitions(@Nullable Output<List<FeatureGroupFeatureDefinitionGetArgs>> featureDefinitions) {
            this.featureDefinitions = featureDefinitions;
            return this;
        }

        public Builder featureDefinitions(@Nullable List<FeatureGroupFeatureDefinitionGetArgs> featureDefinitions) {
            this.featureDefinitions = Output.ofNullable(featureDefinitions);
            return this;
        }

        public Builder featureGroupName(@Nullable Output<String> featureGroupName) {
            this.featureGroupName = featureGroupName;
            return this;
        }

        public Builder featureGroupName(@Nullable String featureGroupName) {
            this.featureGroupName = Output.ofNullable(featureGroupName);
            return this;
        }

        public Builder offlineStoreConfig(@Nullable Output<FeatureGroupOfflineStoreConfigGetArgs> offlineStoreConfig) {
            this.offlineStoreConfig = offlineStoreConfig;
            return this;
        }

        public Builder offlineStoreConfig(@Nullable FeatureGroupOfflineStoreConfigGetArgs offlineStoreConfig) {
            this.offlineStoreConfig = Output.ofNullable(offlineStoreConfig);
            return this;
        }

        public Builder onlineStoreConfig(@Nullable Output<FeatureGroupOnlineStoreConfigGetArgs> onlineStoreConfig) {
            this.onlineStoreConfig = onlineStoreConfig;
            return this;
        }

        public Builder onlineStoreConfig(@Nullable FeatureGroupOnlineStoreConfigGetArgs onlineStoreConfig) {
            this.onlineStoreConfig = Output.ofNullable(onlineStoreConfig);
            return this;
        }

        public Builder recordIdentifierFeatureName(@Nullable Output<String> recordIdentifierFeatureName) {
            this.recordIdentifierFeatureName = recordIdentifierFeatureName;
            return this;
        }

        public Builder recordIdentifierFeatureName(@Nullable String recordIdentifierFeatureName) {
            this.recordIdentifierFeatureName = Output.ofNullable(recordIdentifierFeatureName);
            return this;
        }

        public Builder roleArn(@Nullable Output<String> roleArn) {
            this.roleArn = roleArn;
            return this;
        }

        public Builder roleArn(@Nullable String roleArn) {
            this.roleArn = Output.ofNullable(roleArn);
            return this;
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }

        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = Output.ofNullable(tags);
            return this;
        }

        public Builder tagsAll(@Nullable Output<Map<String,String>> tagsAll) {
            this.tagsAll = tagsAll;
            return this;
        }

        public Builder tagsAll(@Nullable Map<String,String> tagsAll) {
            this.tagsAll = Output.ofNullable(tagsAll);
            return this;
        }
        public FeatureGroupState build() {
            return new FeatureGroupState(arn, description, eventTimeFeatureName, featureDefinitions, featureGroupName, offlineStoreConfig, onlineStoreConfig, recordIdentifierFeatureName, roleArn, tags, tagsAll);
        }
    }
}
