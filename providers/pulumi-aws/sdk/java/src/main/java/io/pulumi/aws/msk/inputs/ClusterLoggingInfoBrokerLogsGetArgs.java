// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.msk.inputs;

import io.pulumi.aws.msk.inputs.ClusterLoggingInfoBrokerLogsCloudwatchLogsGetArgs;
import io.pulumi.aws.msk.inputs.ClusterLoggingInfoBrokerLogsFirehoseGetArgs;
import io.pulumi.aws.msk.inputs.ClusterLoggingInfoBrokerLogsS3GetArgs;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ClusterLoggingInfoBrokerLogsGetArgs extends io.pulumi.resources.ResourceArgs {

    public static final ClusterLoggingInfoBrokerLogsGetArgs Empty = new ClusterLoggingInfoBrokerLogsGetArgs();

    @InputImport(name="cloudwatchLogs")
      private final @Nullable Input<ClusterLoggingInfoBrokerLogsCloudwatchLogsGetArgs> cloudwatchLogs;

    public Input<ClusterLoggingInfoBrokerLogsCloudwatchLogsGetArgs> getCloudwatchLogs() {
        return this.cloudwatchLogs == null ? Input.empty() : this.cloudwatchLogs;
    }

    @InputImport(name="firehose")
      private final @Nullable Input<ClusterLoggingInfoBrokerLogsFirehoseGetArgs> firehose;

    public Input<ClusterLoggingInfoBrokerLogsFirehoseGetArgs> getFirehose() {
        return this.firehose == null ? Input.empty() : this.firehose;
    }

    @InputImport(name="s3")
      private final @Nullable Input<ClusterLoggingInfoBrokerLogsS3GetArgs> s3;

    public Input<ClusterLoggingInfoBrokerLogsS3GetArgs> getS3() {
        return this.s3 == null ? Input.empty() : this.s3;
    }

    public ClusterLoggingInfoBrokerLogsGetArgs(
        @Nullable Input<ClusterLoggingInfoBrokerLogsCloudwatchLogsGetArgs> cloudwatchLogs,
        @Nullable Input<ClusterLoggingInfoBrokerLogsFirehoseGetArgs> firehose,
        @Nullable Input<ClusterLoggingInfoBrokerLogsS3GetArgs> s3) {
        this.cloudwatchLogs = cloudwatchLogs;
        this.firehose = firehose;
        this.s3 = s3;
    }

    private ClusterLoggingInfoBrokerLogsGetArgs() {
        this.cloudwatchLogs = Input.empty();
        this.firehose = Input.empty();
        this.s3 = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ClusterLoggingInfoBrokerLogsGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<ClusterLoggingInfoBrokerLogsCloudwatchLogsGetArgs> cloudwatchLogs;
        private @Nullable Input<ClusterLoggingInfoBrokerLogsFirehoseGetArgs> firehose;
        private @Nullable Input<ClusterLoggingInfoBrokerLogsS3GetArgs> s3;

        public Builder() {
    	      // Empty
        }

        public Builder(ClusterLoggingInfoBrokerLogsGetArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cloudwatchLogs = defaults.cloudwatchLogs;
    	      this.firehose = defaults.firehose;
    	      this.s3 = defaults.s3;
        }

        public Builder cloudwatchLogs(@Nullable Input<ClusterLoggingInfoBrokerLogsCloudwatchLogsGetArgs> cloudwatchLogs) {
            this.cloudwatchLogs = cloudwatchLogs;
            return this;
        }

        public Builder cloudwatchLogs(@Nullable ClusterLoggingInfoBrokerLogsCloudwatchLogsGetArgs cloudwatchLogs) {
            this.cloudwatchLogs = Input.ofNullable(cloudwatchLogs);
            return this;
        }

        public Builder firehose(@Nullable Input<ClusterLoggingInfoBrokerLogsFirehoseGetArgs> firehose) {
            this.firehose = firehose;
            return this;
        }

        public Builder firehose(@Nullable ClusterLoggingInfoBrokerLogsFirehoseGetArgs firehose) {
            this.firehose = Input.ofNullable(firehose);
            return this;
        }

        public Builder s3(@Nullable Input<ClusterLoggingInfoBrokerLogsS3GetArgs> s3) {
            this.s3 = s3;
            return this;
        }

        public Builder s3(@Nullable ClusterLoggingInfoBrokerLogsS3GetArgs s3) {
            this.s3 = Input.ofNullable(s3);
            return this;
        }
        public ClusterLoggingInfoBrokerLogsGetArgs build() {
            return new ClusterLoggingInfoBrokerLogsGetArgs(cloudwatchLogs, firehose, s3);
        }
    }
}
