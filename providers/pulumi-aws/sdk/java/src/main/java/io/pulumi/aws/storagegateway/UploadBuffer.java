// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.storagegateway;

import io.pulumi.aws.Utilities;
import io.pulumi.aws.storagegateway.UploadBufferArgs;
import io.pulumi.aws.storagegateway.inputs.UploadBufferState;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Export;
import io.pulumi.core.annotations.ResourceType;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * Manages an AWS Storage Gateway upload buffer.
 * 
 * > **NOTE:** The Storage Gateway API provides no method to remove an upload buffer disk. Destroying this resource does not perform any Storage Gateway actions.
 * 
 * {{% examples %}}
 * ## Example Usage
 * {{% example %}}
 * ### Cached and VTL Gateway Type
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 * 
 * const testLocalDisk = aws.storagegateway.getLocalDisk({
 *     diskNode: aws_volume_attachment.test.device_name,
 *     gatewayArn: aws_storagegateway_gateway.test.arn,
 * });
 * const testUploadBuffer = new aws.storagegateway.UploadBuffer("testUploadBuffer", {
 *     diskPath: testLocalDisk.then(testLocalDisk => testLocalDisk.diskPath),
 *     gatewayArn: aws_storagegateway_gateway.test.arn,
 * });
 * ```
 * ```python
 * import pulumi
 * import pulumi_aws as aws
 * 
 * test_local_disk = aws.storagegateway.get_local_disk(disk_node=aws_volume_attachment["test"]["device_name"],
 *     gateway_arn=aws_storagegateway_gateway["test"]["arn"])
 * test_upload_buffer = aws.storagegateway.UploadBuffer("testUploadBuffer",
 *     disk_path=test_local_disk.disk_path,
 *     gateway_arn=aws_storagegateway_gateway["test"]["arn"])
 * ```
 * ```csharp
 * using Pulumi;
 * using Aws = Pulumi.Aws;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var testLocalDisk = Output.Create(Aws.StorageGateway.GetLocalDisk.InvokeAsync(new Aws.StorageGateway.GetLocalDiskArgs
 *         {
 *             DiskNode = aws_volume_attachment.Test.Device_name,
 *             GatewayArn = aws_storagegateway_gateway.Test.Arn,
 *         }));
 *         var testUploadBuffer = new Aws.StorageGateway.UploadBuffer("testUploadBuffer", new Aws.StorageGateway.UploadBufferArgs
 *         {
 *             DiskPath = testLocalDisk.Apply(testLocalDisk => testLocalDisk.DiskPath),
 *             GatewayArn = aws_storagegateway_gateway.Test.Arn,
 *         });
 *     }
 * 
 * }
 * ```
 * ```go
 * package main
 * 
 * import (
 * 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/storagegateway"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		opt0 := aws_volume_attachment.Test.Device_name
 * 		testLocalDisk, err := storagegateway.GetLocalDisk(ctx, &storagegateway.GetLocalDiskArgs{
 * 			DiskNode:   &opt0,
 * 			GatewayArn: aws_storagegateway_gateway.Test.Arn,
 * 		}, nil)
 * 		if err != nil {
 * 			return err
 * 		}
 * 		_, err = storagegateway.NewUploadBuffer(ctx, "testUploadBuffer", &storagegateway.UploadBufferArgs{
 * 			DiskPath:   pulumi.String(testLocalDisk.DiskPath),
 * 			GatewayArn: pulumi.Any(aws_storagegateway_gateway.Test.Arn),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * ```
 * {{% /example %}}
 * {{% example %}}
 * ### Stored Gateway Type
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 * 
 * const test = aws.storagegateway.getLocalDisk({
 *     diskNode: aws_volume_attachment.test.device_name,
 *     gatewayArn: aws_storagegateway_gateway.test.arn,
 * });
 * const example = new aws.storagegateway.UploadBuffer("example", {
 *     diskId: data.aws_storagegateway_local_disk.example.id,
 *     gatewayArn: aws_storagegateway_gateway.example.arn,
 * });
 * ```
 * ```python
 * import pulumi
 * import pulumi_aws as aws
 * 
 * test = aws.storagegateway.get_local_disk(disk_node=aws_volume_attachment["test"]["device_name"],
 *     gateway_arn=aws_storagegateway_gateway["test"]["arn"])
 * example = aws.storagegateway.UploadBuffer("example",
 *     disk_id=data["aws_storagegateway_local_disk"]["example"]["id"],
 *     gateway_arn=aws_storagegateway_gateway["example"]["arn"])
 * ```
 * ```csharp
 * using Pulumi;
 * using Aws = Pulumi.Aws;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var test = Output.Create(Aws.StorageGateway.GetLocalDisk.InvokeAsync(new Aws.StorageGateway.GetLocalDiskArgs
 *         {
 *             DiskNode = aws_volume_attachment.Test.Device_name,
 *             GatewayArn = aws_storagegateway_gateway.Test.Arn,
 *         }));
 *         var example = new Aws.StorageGateway.UploadBuffer("example", new Aws.StorageGateway.UploadBufferArgs
 *         {
 *             DiskId = data.Aws_storagegateway_local_disk.Example.Id,
 *             GatewayArn = aws_storagegateway_gateway.Example.Arn,
 *         });
 *     }
 * 
 * }
 * ```
 * ```go
 * package main
 * 
 * import (
 * 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/storagegateway"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		opt0 := aws_volume_attachment.Test.Device_name
 * 		_, err := storagegateway.GetLocalDisk(ctx, &storagegateway.GetLocalDiskArgs{
 * 			DiskNode:   &opt0,
 * 			GatewayArn: aws_storagegateway_gateway.Test.Arn,
 * 		}, nil)
 * 		if err != nil {
 * 			return err
 * 		}
 * 		_, err = storagegateway.NewUploadBuffer(ctx, "example", &storagegateway.UploadBufferArgs{
 * 			DiskId:     pulumi.Any(data.Aws_storagegateway_local_disk.Example.Id),
 * 			GatewayArn: pulumi.Any(aws_storagegateway_gateway.Example.Arn),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * ```
 * {{% /example %}}
 * {{% /examples %}}
 * 
 * ## Import
 * 
 * `aws_storagegateway_upload_buffer` can be imported by using the gateway Amazon Resource Name (ARN) and local disk identifier separated with a colon (`:`), e.g.,
 * 
 * ```sh
 *  $ pulumi import aws:storagegateway/uploadBuffer:UploadBuffer example arn:aws:storagegateway:us-east-1:123456789012:gateway/sgw-12345678:pci-0000:03:00.0-scsi-0:0:0:0
 * ```
 * 
 *  
 */
@ResourceType(type="aws:storagegateway/uploadBuffer:UploadBuffer")
public class UploadBuffer extends io.pulumi.resources.CustomResource {
    /**
     * Local disk identifier. For example, `pci-0000:03:00.0-scsi-0:0:0:0`.
     * 
     */
    @Export(name="diskId", type=String.class, parameters={})
    private Output<String> diskId;

    /**
     * @return Local disk identifier. For example, `pci-0000:03:00.0-scsi-0:0:0:0`.
     * 
     */
    public Output<String> getDiskId() {
        return this.diskId;
    }
    /**
     * Local disk path. For example, `/dev/nvme1n1`.
     * 
     */
    @Export(name="diskPath", type=String.class, parameters={})
    private Output<String> diskPath;

    /**
     * @return Local disk path. For example, `/dev/nvme1n1`.
     * 
     */
    public Output<String> getDiskPath() {
        return this.diskPath;
    }
    /**
     * The Amazon Resource Name (ARN) of the gateway.
     * 
     */
    @Export(name="gatewayArn", type=String.class, parameters={})
    private Output<String> gatewayArn;

    /**
     * @return The Amazon Resource Name (ARN) of the gateway.
     * 
     */
    public Output<String> getGatewayArn() {
        return this.gatewayArn;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public UploadBuffer(String name) {
        this(name, UploadBufferArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public UploadBuffer(String name, UploadBufferArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public UploadBuffer(String name, UploadBufferArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:storagegateway/uploadBuffer:UploadBuffer", name, args == null ? UploadBufferArgs.Empty : args, makeResourceOptions(options, Output.empty()));
    }

    private UploadBuffer(String name, Output<String> id, @Nullable UploadBufferState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:storagegateway/uploadBuffer:UploadBuffer", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static UploadBuffer get(String name, Output<String> id, @Nullable UploadBufferState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new UploadBuffer(name, id, state, options);
    }
}
