// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.ec2transitgateway.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class VpcAttachmentAccepterState extends io.pulumi.resources.ResourceArgs {

    public static final VpcAttachmentAccepterState Empty = new VpcAttachmentAccepterState();

    /**
     * Whether Appliance Mode support is enabled. Valid values: `disable`, `enable`.
     * 
     */
    @Import(name="applianceModeSupport")
      private final @Nullable Output<String> applianceModeSupport;

    public Output<String> getApplianceModeSupport() {
        return this.applianceModeSupport == null ? Codegen.empty() : this.applianceModeSupport;
    }

    /**
     * Whether DNS support is enabled. Valid values: `disable`, `enable`.
     * 
     */
    @Import(name="dnsSupport")
      private final @Nullable Output<String> dnsSupport;

    public Output<String> getDnsSupport() {
        return this.dnsSupport == null ? Codegen.empty() : this.dnsSupport;
    }

    /**
     * Whether IPv6 support is enabled. Valid values: `disable`, `enable`.
     * 
     */
    @Import(name="ipv6Support")
      private final @Nullable Output<String> ipv6Support;

    public Output<String> getIpv6Support() {
        return this.ipv6Support == null ? Codegen.empty() : this.ipv6Support;
    }

    /**
     * Identifiers of EC2 Subnets.
     * 
     */
    @Import(name="subnetIds")
      private final @Nullable Output<List<String>> subnetIds;

    public Output<List<String>> getSubnetIds() {
        return this.subnetIds == null ? Codegen.empty() : this.subnetIds;
    }

    /**
     * Key-value tags for the EC2 Transit Gateway VPC Attachment. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Import(name="tags")
      private final @Nullable Output<Map<String,String>> tags;

    public Output<Map<String,String>> getTags() {
        return this.tags == null ? Codegen.empty() : this.tags;
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     */
    @Import(name="tagsAll")
      private final @Nullable Output<Map<String,String>> tagsAll;

    public Output<Map<String,String>> getTagsAll() {
        return this.tagsAll == null ? Codegen.empty() : this.tagsAll;
    }

    /**
     * The ID of the EC2 Transit Gateway Attachment to manage.
     * 
     */
    @Import(name="transitGatewayAttachmentId")
      private final @Nullable Output<String> transitGatewayAttachmentId;

    public Output<String> getTransitGatewayAttachmentId() {
        return this.transitGatewayAttachmentId == null ? Codegen.empty() : this.transitGatewayAttachmentId;
    }

    /**
     * Boolean whether the VPC Attachment should be associated with the EC2 Transit Gateway association default route table. Default value: `true`.
     * 
     */
    @Import(name="transitGatewayDefaultRouteTableAssociation")
      private final @Nullable Output<Boolean> transitGatewayDefaultRouteTableAssociation;

    public Output<Boolean> getTransitGatewayDefaultRouteTableAssociation() {
        return this.transitGatewayDefaultRouteTableAssociation == null ? Codegen.empty() : this.transitGatewayDefaultRouteTableAssociation;
    }

    /**
     * Boolean whether the VPC Attachment should propagate routes with the EC2 Transit Gateway propagation default route table. Default value: `true`.
     * 
     */
    @Import(name="transitGatewayDefaultRouteTablePropagation")
      private final @Nullable Output<Boolean> transitGatewayDefaultRouteTablePropagation;

    public Output<Boolean> getTransitGatewayDefaultRouteTablePropagation() {
        return this.transitGatewayDefaultRouteTablePropagation == null ? Codegen.empty() : this.transitGatewayDefaultRouteTablePropagation;
    }

    /**
     * Identifier of EC2 Transit Gateway.
     * 
     */
    @Import(name="transitGatewayId")
      private final @Nullable Output<String> transitGatewayId;

    public Output<String> getTransitGatewayId() {
        return this.transitGatewayId == null ? Codegen.empty() : this.transitGatewayId;
    }

    /**
     * Identifier of EC2 VPC.
     * 
     */
    @Import(name="vpcId")
      private final @Nullable Output<String> vpcId;

    public Output<String> getVpcId() {
        return this.vpcId == null ? Codegen.empty() : this.vpcId;
    }

    /**
     * Identifier of the AWS account that owns the EC2 VPC.
     * 
     */
    @Import(name="vpcOwnerId")
      private final @Nullable Output<String> vpcOwnerId;

    public Output<String> getVpcOwnerId() {
        return this.vpcOwnerId == null ? Codegen.empty() : this.vpcOwnerId;
    }

    public VpcAttachmentAccepterState(
        @Nullable Output<String> applianceModeSupport,
        @Nullable Output<String> dnsSupport,
        @Nullable Output<String> ipv6Support,
        @Nullable Output<List<String>> subnetIds,
        @Nullable Output<Map<String,String>> tags,
        @Nullable Output<Map<String,String>> tagsAll,
        @Nullable Output<String> transitGatewayAttachmentId,
        @Nullable Output<Boolean> transitGatewayDefaultRouteTableAssociation,
        @Nullable Output<Boolean> transitGatewayDefaultRouteTablePropagation,
        @Nullable Output<String> transitGatewayId,
        @Nullable Output<String> vpcId,
        @Nullable Output<String> vpcOwnerId) {
        this.applianceModeSupport = applianceModeSupport;
        this.dnsSupport = dnsSupport;
        this.ipv6Support = ipv6Support;
        this.subnetIds = subnetIds;
        this.tags = tags;
        this.tagsAll = tagsAll;
        this.transitGatewayAttachmentId = transitGatewayAttachmentId;
        this.transitGatewayDefaultRouteTableAssociation = transitGatewayDefaultRouteTableAssociation;
        this.transitGatewayDefaultRouteTablePropagation = transitGatewayDefaultRouteTablePropagation;
        this.transitGatewayId = transitGatewayId;
        this.vpcId = vpcId;
        this.vpcOwnerId = vpcOwnerId;
    }

    private VpcAttachmentAccepterState() {
        this.applianceModeSupport = Codegen.empty();
        this.dnsSupport = Codegen.empty();
        this.ipv6Support = Codegen.empty();
        this.subnetIds = Codegen.empty();
        this.tags = Codegen.empty();
        this.tagsAll = Codegen.empty();
        this.transitGatewayAttachmentId = Codegen.empty();
        this.transitGatewayDefaultRouteTableAssociation = Codegen.empty();
        this.transitGatewayDefaultRouteTablePropagation = Codegen.empty();
        this.transitGatewayId = Codegen.empty();
        this.vpcId = Codegen.empty();
        this.vpcOwnerId = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VpcAttachmentAccepterState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> applianceModeSupport;
        private @Nullable Output<String> dnsSupport;
        private @Nullable Output<String> ipv6Support;
        private @Nullable Output<List<String>> subnetIds;
        private @Nullable Output<Map<String,String>> tags;
        private @Nullable Output<Map<String,String>> tagsAll;
        private @Nullable Output<String> transitGatewayAttachmentId;
        private @Nullable Output<Boolean> transitGatewayDefaultRouteTableAssociation;
        private @Nullable Output<Boolean> transitGatewayDefaultRouteTablePropagation;
        private @Nullable Output<String> transitGatewayId;
        private @Nullable Output<String> vpcId;
        private @Nullable Output<String> vpcOwnerId;

        public Builder() {
    	      // Empty
        }

        public Builder(VpcAttachmentAccepterState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.applianceModeSupport = defaults.applianceModeSupport;
    	      this.dnsSupport = defaults.dnsSupport;
    	      this.ipv6Support = defaults.ipv6Support;
    	      this.subnetIds = defaults.subnetIds;
    	      this.tags = defaults.tags;
    	      this.tagsAll = defaults.tagsAll;
    	      this.transitGatewayAttachmentId = defaults.transitGatewayAttachmentId;
    	      this.transitGatewayDefaultRouteTableAssociation = defaults.transitGatewayDefaultRouteTableAssociation;
    	      this.transitGatewayDefaultRouteTablePropagation = defaults.transitGatewayDefaultRouteTablePropagation;
    	      this.transitGatewayId = defaults.transitGatewayId;
    	      this.vpcId = defaults.vpcId;
    	      this.vpcOwnerId = defaults.vpcOwnerId;
        }

        public Builder applianceModeSupport(@Nullable Output<String> applianceModeSupport) {
            this.applianceModeSupport = applianceModeSupport;
            return this;
        }
        public Builder applianceModeSupport(@Nullable String applianceModeSupport) {
            this.applianceModeSupport = Codegen.ofNullable(applianceModeSupport);
            return this;
        }
        public Builder dnsSupport(@Nullable Output<String> dnsSupport) {
            this.dnsSupport = dnsSupport;
            return this;
        }
        public Builder dnsSupport(@Nullable String dnsSupport) {
            this.dnsSupport = Codegen.ofNullable(dnsSupport);
            return this;
        }
        public Builder ipv6Support(@Nullable Output<String> ipv6Support) {
            this.ipv6Support = ipv6Support;
            return this;
        }
        public Builder ipv6Support(@Nullable String ipv6Support) {
            this.ipv6Support = Codegen.ofNullable(ipv6Support);
            return this;
        }
        public Builder subnetIds(@Nullable Output<List<String>> subnetIds) {
            this.subnetIds = subnetIds;
            return this;
        }
        public Builder subnetIds(@Nullable List<String> subnetIds) {
            this.subnetIds = Codegen.ofNullable(subnetIds);
            return this;
        }
        public Builder subnetIds(String... subnetIds) {
            return subnetIds(List.of(subnetIds));
        }
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = Codegen.ofNullable(tags);
            return this;
        }
        public Builder tagsAll(@Nullable Output<Map<String,String>> tagsAll) {
            this.tagsAll = tagsAll;
            return this;
        }
        public Builder tagsAll(@Nullable Map<String,String> tagsAll) {
            this.tagsAll = Codegen.ofNullable(tagsAll);
            return this;
        }
        public Builder transitGatewayAttachmentId(@Nullable Output<String> transitGatewayAttachmentId) {
            this.transitGatewayAttachmentId = transitGatewayAttachmentId;
            return this;
        }
        public Builder transitGatewayAttachmentId(@Nullable String transitGatewayAttachmentId) {
            this.transitGatewayAttachmentId = Codegen.ofNullable(transitGatewayAttachmentId);
            return this;
        }
        public Builder transitGatewayDefaultRouteTableAssociation(@Nullable Output<Boolean> transitGatewayDefaultRouteTableAssociation) {
            this.transitGatewayDefaultRouteTableAssociation = transitGatewayDefaultRouteTableAssociation;
            return this;
        }
        public Builder transitGatewayDefaultRouteTableAssociation(@Nullable Boolean transitGatewayDefaultRouteTableAssociation) {
            this.transitGatewayDefaultRouteTableAssociation = Codegen.ofNullable(transitGatewayDefaultRouteTableAssociation);
            return this;
        }
        public Builder transitGatewayDefaultRouteTablePropagation(@Nullable Output<Boolean> transitGatewayDefaultRouteTablePropagation) {
            this.transitGatewayDefaultRouteTablePropagation = transitGatewayDefaultRouteTablePropagation;
            return this;
        }
        public Builder transitGatewayDefaultRouteTablePropagation(@Nullable Boolean transitGatewayDefaultRouteTablePropagation) {
            this.transitGatewayDefaultRouteTablePropagation = Codegen.ofNullable(transitGatewayDefaultRouteTablePropagation);
            return this;
        }
        public Builder transitGatewayId(@Nullable Output<String> transitGatewayId) {
            this.transitGatewayId = transitGatewayId;
            return this;
        }
        public Builder transitGatewayId(@Nullable String transitGatewayId) {
            this.transitGatewayId = Codegen.ofNullable(transitGatewayId);
            return this;
        }
        public Builder vpcId(@Nullable Output<String> vpcId) {
            this.vpcId = vpcId;
            return this;
        }
        public Builder vpcId(@Nullable String vpcId) {
            this.vpcId = Codegen.ofNullable(vpcId);
            return this;
        }
        public Builder vpcOwnerId(@Nullable Output<String> vpcOwnerId) {
            this.vpcOwnerId = vpcOwnerId;
            return this;
        }
        public Builder vpcOwnerId(@Nullable String vpcOwnerId) {
            this.vpcOwnerId = Codegen.ofNullable(vpcOwnerId);
            return this;
        }        public VpcAttachmentAccepterState build() {
            return new VpcAttachmentAccepterState(applianceModeSupport, dnsSupport, ipv6Support, subnetIds, tags, tagsAll, transitGatewayAttachmentId, transitGatewayDefaultRouteTableAssociation, transitGatewayDefaultRouteTablePropagation, transitGatewayId, vpcId, vpcOwnerId);
        }
    }
}
