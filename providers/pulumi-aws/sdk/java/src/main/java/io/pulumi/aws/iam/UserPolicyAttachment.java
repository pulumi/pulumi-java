// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.iam;

import io.pulumi.aws.Utilities;
import io.pulumi.aws.iam.UserPolicyAttachmentArgs;
import io.pulumi.aws.iam.inputs.UserPolicyAttachmentState;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Export;
import io.pulumi.core.annotations.ResourceType;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * Attaches a Managed IAM Policy to an IAM user
 * 
 * > **NOTE:** The usage of this resource conflicts with the `aws.iam.PolicyAttachment` resource and will permanently show a difference if both are defined.
 * 
 * {{% examples %}}
 * ## Example Usage
 * {{% example %}}
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 * 
 * const user = new aws.iam.User("user", {});
 * const policy = new aws.iam.Policy("policy", {
 *     description: "A test policy",
 *     policy: "{ ... policy JSON ... }",
 * });
 * const test_attach = new aws.iam.UserPolicyAttachment("test-attach", {
 *     user: user.name,
 *     policyArn: policy.arn,
 * });
 * ```
 * ```python
 * import pulumi
 * import pulumi_aws as aws
 * 
 * user = aws.iam.User("user")
 * policy = aws.iam.Policy("policy",
 *     description="A test policy",
 *     policy="{ ... policy JSON ... }")
 * test_attach = aws.iam.UserPolicyAttachment("test-attach",
 *     user=user.name,
 *     policy_arn=policy.arn)
 * ```
 * ```csharp
 * using Pulumi;
 * using Aws = Pulumi.Aws;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var user = new Aws.Iam.User("user", new Aws.Iam.UserArgs
 *         {
 *         });
 *         var policy = new Aws.Iam.Policy("policy", new Aws.Iam.PolicyArgs
 *         {
 *             Description = "A test policy",
 *             Policy = "{ ... policy JSON ... }",
 *         });
 *         var test_attach = new Aws.Iam.UserPolicyAttachment("test-attach", new Aws.Iam.UserPolicyAttachmentArgs
 *         {
 *             User = user.Name,
 *             PolicyArn = policy.Arn,
 *         });
 *     }
 * 
 * }
 * ```
 * ```go
 * package main
 * 
 * import (
 * 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws"
 * 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/iam"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		user, err := iam.NewUser(ctx, "user", nil)
 * 		if err != nil {
 * 			return err
 * 		}
 * 		policy, err := iam.NewPolicy(ctx, "policy", &iam.PolicyArgs{
 * 			Description: pulumi.String("A test policy"),
 * 			Policy:      pulumi.Any("{ ... policy JSON ... }"),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		_, err = iam.NewUserPolicyAttachment(ctx, "test-attach", &iam.UserPolicyAttachmentArgs{
 * 			User:      user.Name,
 * 			PolicyArn: policy.Arn,
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * ```
 * {{% /example %}}
 * {{% /examples %}}
 * 
 * ## Import
 * 
 * IAM user policy attachments can be imported using the user name and policy arn separated by `/`.
 * 
 * ```sh
 *  $ pulumi import aws:iam/userPolicyAttachment:UserPolicyAttachment test-attach test-user/arn:aws:iam::xxxxxxxxxxxx:policy/test-policy
 * ```
 * 
 *  
 */
@ResourceType(type="aws:iam/userPolicyAttachment:UserPolicyAttachment")
public class UserPolicyAttachment extends io.pulumi.resources.CustomResource {
    /**
     * The ARN of the policy you want to apply
     * 
     */
    @Export(name="policyArn", type=String.class, parameters={})
    private Output<String> policyArn;

    /**
     * @return The ARN of the policy you want to apply
     * 
     */
    public Output<String> getPolicyArn() {
        return this.policyArn;
    }
    /**
     * The user the policy should be applied to
     * 
     */
    @Export(name="user", type=String.class, parameters={})
    private Output<String> user;

    /**
     * @return The user the policy should be applied to
     * 
     */
    public Output<String> getUser() {
        return this.user;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public UserPolicyAttachment(String name) {
        this(name, UserPolicyAttachmentArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public UserPolicyAttachment(String name, UserPolicyAttachmentArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public UserPolicyAttachment(String name, UserPolicyAttachmentArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:iam/userPolicyAttachment:UserPolicyAttachment", name, args == null ? UserPolicyAttachmentArgs.Empty : args, makeResourceOptions(options, Output.empty()));
    }

    private UserPolicyAttachment(String name, Output<String> id, @Nullable UserPolicyAttachmentState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:iam/userPolicyAttachment:UserPolicyAttachment", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static UserPolicyAttachment get(String name, Output<String> id, @Nullable UserPolicyAttachmentState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new UserPolicyAttachment(name, id, state, options);
    }
}
