// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.elasticache;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class UserGroupArgs extends io.pulumi.resources.ResourceArgs {

    public static final UserGroupArgs Empty = new UserGroupArgs();

    @InputImport(name="arn")
    private final @Nullable Input<String> arn;

    public Input<String> getArn() {
        return this.arn == null ? Input.empty() : this.arn;
    }

    /**
     * The current supported value is `REDIS`.
     * 
     */
    @InputImport(name="engine", required=true)
    private final Input<String> engine;

    public Input<String> getEngine() {
        return this.engine;
    }

    @InputImport(name="tags")
    private final @Nullable Input<Map<String,String>> tags;

    public Input<Map<String,String>> getTags() {
        return this.tags == null ? Input.empty() : this.tags;
    }

    /**
     * The ID of the user group.
     * 
     */
    @InputImport(name="userGroupId", required=true)
    private final Input<String> userGroupId;

    public Input<String> getUserGroupId() {
        return this.userGroupId;
    }

    /**
     * The list of user IDs that belong to the user group.
     * 
     */
    @InputImport(name="userIds")
    private final @Nullable Input<List<String>> userIds;

    public Input<List<String>> getUserIds() {
        return this.userIds == null ? Input.empty() : this.userIds;
    }

    public UserGroupArgs(
        @Nullable Input<String> arn,
        Input<String> engine,
        @Nullable Input<Map<String,String>> tags,
        Input<String> userGroupId,
        @Nullable Input<List<String>> userIds) {
        this.arn = arn;
        this.engine = Objects.requireNonNull(engine, "expected parameter 'engine' to be non-null");
        this.tags = tags;
        this.userGroupId = Objects.requireNonNull(userGroupId, "expected parameter 'userGroupId' to be non-null");
        this.userIds = userIds;
    }

    private UserGroupArgs() {
        this.arn = Input.empty();
        this.engine = Input.empty();
        this.tags = Input.empty();
        this.userGroupId = Input.empty();
        this.userIds = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(UserGroupArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> arn;
        private Input<String> engine;
        private @Nullable Input<Map<String,String>> tags;
        private Input<String> userGroupId;
        private @Nullable Input<List<String>> userIds;

        public Builder() {
    	      // Empty
        }

        public Builder(UserGroupArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.engine = defaults.engine;
    	      this.tags = defaults.tags;
    	      this.userGroupId = defaults.userGroupId;
    	      this.userIds = defaults.userIds;
        }

        public Builder setArn(@Nullable Input<String> arn) {
            this.arn = arn;
            return this;
        }

        public Builder setArn(@Nullable String arn) {
            this.arn = Input.ofNullable(arn);
            return this;
        }

        public Builder setEngine(Input<String> engine) {
            this.engine = Objects.requireNonNull(engine);
            return this;
        }

        public Builder setEngine(String engine) {
            this.engine = Input.of(Objects.requireNonNull(engine));
            return this;
        }

        public Builder setTags(@Nullable Input<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }

        public Builder setTags(@Nullable Map<String,String> tags) {
            this.tags = Input.ofNullable(tags);
            return this;
        }

        public Builder setUserGroupId(Input<String> userGroupId) {
            this.userGroupId = Objects.requireNonNull(userGroupId);
            return this;
        }

        public Builder setUserGroupId(String userGroupId) {
            this.userGroupId = Input.of(Objects.requireNonNull(userGroupId));
            return this;
        }

        public Builder setUserIds(@Nullable Input<List<String>> userIds) {
            this.userIds = userIds;
            return this;
        }

        public Builder setUserIds(@Nullable List<String> userIds) {
            this.userIds = Input.ofNullable(userIds);
            return this;
        }
        public UserGroupArgs build() {
            return new UserGroupArgs(arn, engine, tags, userGroupId, userIds);
        }
    }
}
