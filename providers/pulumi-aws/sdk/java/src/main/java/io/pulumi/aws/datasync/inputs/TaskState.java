// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.datasync.inputs;

import io.pulumi.aws.datasync.inputs.TaskExcludesGetArgs;
import io.pulumi.aws.datasync.inputs.TaskOptionsGetArgs;
import io.pulumi.aws.datasync.inputs.TaskScheduleGetArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class TaskState extends io.pulumi.resources.ResourceArgs {

    public static final TaskState Empty = new TaskState();

    /**
     * Amazon Resource Name (ARN) of the DataSync Task.
     * 
     */
    @Import(name="arn")
      private final @Nullable Output<String> arn;

    public Output<String> getArn() {
        return this.arn == null ? Codegen.empty() : this.arn;
    }

    /**
     * Amazon Resource Name (ARN) of the CloudWatch Log Group that is used to monitor and log events in the sync task.
     * 
     */
    @Import(name="cloudwatchLogGroupArn")
      private final @Nullable Output<String> cloudwatchLogGroupArn;

    public Output<String> getCloudwatchLogGroupArn() {
        return this.cloudwatchLogGroupArn == null ? Codegen.empty() : this.cloudwatchLogGroupArn;
    }

    /**
     * Amazon Resource Name (ARN) of destination DataSync Location.
     * 
     */
    @Import(name="destinationLocationArn")
      private final @Nullable Output<String> destinationLocationArn;

    public Output<String> getDestinationLocationArn() {
        return this.destinationLocationArn == null ? Codegen.empty() : this.destinationLocationArn;
    }

    /**
     * Filter rules that determines which files to exclude from a task.
     * 
     */
    @Import(name="excludes")
      private final @Nullable Output<TaskExcludesGetArgs> excludes;

    public Output<TaskExcludesGetArgs> getExcludes() {
        return this.excludes == null ? Codegen.empty() : this.excludes;
    }

    /**
     * Name of the DataSync Task.
     * 
     */
    @Import(name="name")
      private final @Nullable Output<String> name;

    public Output<String> getName() {
        return this.name == null ? Codegen.empty() : this.name;
    }

    /**
     * Configuration block containing option that controls the default behavior when you start an execution of this DataSync Task. For each individual task execution, you can override these options by specifying an overriding configuration in those executions.
     * 
     */
    @Import(name="options")
      private final @Nullable Output<TaskOptionsGetArgs> options;

    public Output<TaskOptionsGetArgs> getOptions() {
        return this.options == null ? Codegen.empty() : this.options;
    }

    /**
     * Specifies a schedule used to periodically transfer files from a source to a destination location.
     * 
     */
    @Import(name="schedule")
      private final @Nullable Output<TaskScheduleGetArgs> schedule;

    public Output<TaskScheduleGetArgs> getSchedule() {
        return this.schedule == null ? Codegen.empty() : this.schedule;
    }

    /**
     * Amazon Resource Name (ARN) of source DataSync Location.
     * 
     */
    @Import(name="sourceLocationArn")
      private final @Nullable Output<String> sourceLocationArn;

    public Output<String> getSourceLocationArn() {
        return this.sourceLocationArn == null ? Codegen.empty() : this.sourceLocationArn;
    }

    /**
     * Key-value pairs of resource tags to assign to the DataSync Task. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Import(name="tags")
      private final @Nullable Output<Map<String,String>> tags;

    public Output<Map<String,String>> getTags() {
        return this.tags == null ? Codegen.empty() : this.tags;
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider .
     * 
     */
    @Import(name="tagsAll")
      private final @Nullable Output<Map<String,String>> tagsAll;

    public Output<Map<String,String>> getTagsAll() {
        return this.tagsAll == null ? Codegen.empty() : this.tagsAll;
    }

    public TaskState(
        @Nullable Output<String> arn,
        @Nullable Output<String> cloudwatchLogGroupArn,
        @Nullable Output<String> destinationLocationArn,
        @Nullable Output<TaskExcludesGetArgs> excludes,
        @Nullable Output<String> name,
        @Nullable Output<TaskOptionsGetArgs> options,
        @Nullable Output<TaskScheduleGetArgs> schedule,
        @Nullable Output<String> sourceLocationArn,
        @Nullable Output<Map<String,String>> tags,
        @Nullable Output<Map<String,String>> tagsAll) {
        this.arn = arn;
        this.cloudwatchLogGroupArn = cloudwatchLogGroupArn;
        this.destinationLocationArn = destinationLocationArn;
        this.excludes = excludes;
        this.name = name;
        this.options = options;
        this.schedule = schedule;
        this.sourceLocationArn = sourceLocationArn;
        this.tags = tags;
        this.tagsAll = tagsAll;
    }

    private TaskState() {
        this.arn = Codegen.empty();
        this.cloudwatchLogGroupArn = Codegen.empty();
        this.destinationLocationArn = Codegen.empty();
        this.excludes = Codegen.empty();
        this.name = Codegen.empty();
        this.options = Codegen.empty();
        this.schedule = Codegen.empty();
        this.sourceLocationArn = Codegen.empty();
        this.tags = Codegen.empty();
        this.tagsAll = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TaskState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> arn;
        private @Nullable Output<String> cloudwatchLogGroupArn;
        private @Nullable Output<String> destinationLocationArn;
        private @Nullable Output<TaskExcludesGetArgs> excludes;
        private @Nullable Output<String> name;
        private @Nullable Output<TaskOptionsGetArgs> options;
        private @Nullable Output<TaskScheduleGetArgs> schedule;
        private @Nullable Output<String> sourceLocationArn;
        private @Nullable Output<Map<String,String>> tags;
        private @Nullable Output<Map<String,String>> tagsAll;

        public Builder() {
    	      // Empty
        }

        public Builder(TaskState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.cloudwatchLogGroupArn = defaults.cloudwatchLogGroupArn;
    	      this.destinationLocationArn = defaults.destinationLocationArn;
    	      this.excludes = defaults.excludes;
    	      this.name = defaults.name;
    	      this.options = defaults.options;
    	      this.schedule = defaults.schedule;
    	      this.sourceLocationArn = defaults.sourceLocationArn;
    	      this.tags = defaults.tags;
    	      this.tagsAll = defaults.tagsAll;
        }

        public Builder arn(@Nullable Output<String> arn) {
            this.arn = arn;
            return this;
        }
        public Builder arn(@Nullable String arn) {
            this.arn = Codegen.ofNullable(arn);
            return this;
        }
        public Builder cloudwatchLogGroupArn(@Nullable Output<String> cloudwatchLogGroupArn) {
            this.cloudwatchLogGroupArn = cloudwatchLogGroupArn;
            return this;
        }
        public Builder cloudwatchLogGroupArn(@Nullable String cloudwatchLogGroupArn) {
            this.cloudwatchLogGroupArn = Codegen.ofNullable(cloudwatchLogGroupArn);
            return this;
        }
        public Builder destinationLocationArn(@Nullable Output<String> destinationLocationArn) {
            this.destinationLocationArn = destinationLocationArn;
            return this;
        }
        public Builder destinationLocationArn(@Nullable String destinationLocationArn) {
            this.destinationLocationArn = Codegen.ofNullable(destinationLocationArn);
            return this;
        }
        public Builder excludes(@Nullable Output<TaskExcludesGetArgs> excludes) {
            this.excludes = excludes;
            return this;
        }
        public Builder excludes(@Nullable TaskExcludesGetArgs excludes) {
            this.excludes = Codegen.ofNullable(excludes);
            return this;
        }
        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }
        public Builder name(@Nullable String name) {
            this.name = Codegen.ofNullable(name);
            return this;
        }
        public Builder options(@Nullable Output<TaskOptionsGetArgs> options) {
            this.options = options;
            return this;
        }
        public Builder options(@Nullable TaskOptionsGetArgs options) {
            this.options = Codegen.ofNullable(options);
            return this;
        }
        public Builder schedule(@Nullable Output<TaskScheduleGetArgs> schedule) {
            this.schedule = schedule;
            return this;
        }
        public Builder schedule(@Nullable TaskScheduleGetArgs schedule) {
            this.schedule = Codegen.ofNullable(schedule);
            return this;
        }
        public Builder sourceLocationArn(@Nullable Output<String> sourceLocationArn) {
            this.sourceLocationArn = sourceLocationArn;
            return this;
        }
        public Builder sourceLocationArn(@Nullable String sourceLocationArn) {
            this.sourceLocationArn = Codegen.ofNullable(sourceLocationArn);
            return this;
        }
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = Codegen.ofNullable(tags);
            return this;
        }
        public Builder tagsAll(@Nullable Output<Map<String,String>> tagsAll) {
            this.tagsAll = tagsAll;
            return this;
        }
        public Builder tagsAll(@Nullable Map<String,String> tagsAll) {
            this.tagsAll = Codegen.ofNullable(tagsAll);
            return this;
        }        public TaskState build() {
            return new TaskState(arn, cloudwatchLogGroupArn, destinationLocationArn, excludes, name, options, schedule, sourceLocationArn, tags, tagsAll);
        }
    }
}
