// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.datasync.inputs;

import io.pulumi.aws.datasync.inputs.TaskExcludesGetArgs;
import io.pulumi.aws.datasync.inputs.TaskOptionsGetArgs;
import io.pulumi.aws.datasync.inputs.TaskScheduleGetArgs;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class TaskState extends io.pulumi.resources.ResourceArgs {

    public static final TaskState Empty = new TaskState();

    /**
     * Amazon Resource Name (ARN) of the DataSync Task.
     * 
     */
    @InputImport(name="arn")
      private final @Nullable Input<String> arn;

    public Input<String> getArn() {
        return this.arn == null ? Input.empty() : this.arn;
    }

    /**
     * Amazon Resource Name (ARN) of the CloudWatch Log Group that is used to monitor and log events in the sync task.
     * 
     */
    @InputImport(name="cloudwatchLogGroupArn")
      private final @Nullable Input<String> cloudwatchLogGroupArn;

    public Input<String> getCloudwatchLogGroupArn() {
        return this.cloudwatchLogGroupArn == null ? Input.empty() : this.cloudwatchLogGroupArn;
    }

    /**
     * Amazon Resource Name (ARN) of destination DataSync Location.
     * 
     */
    @InputImport(name="destinationLocationArn")
      private final @Nullable Input<String> destinationLocationArn;

    public Input<String> getDestinationLocationArn() {
        return this.destinationLocationArn == null ? Input.empty() : this.destinationLocationArn;
    }

    /**
     * Filter rules that determines which files to exclude from a task.
     * 
     */
    @InputImport(name="excludes")
      private final @Nullable Input<TaskExcludesGetArgs> excludes;

    public Input<TaskExcludesGetArgs> getExcludes() {
        return this.excludes == null ? Input.empty() : this.excludes;
    }

    /**
     * Name of the DataSync Task.
     * 
     */
    @InputImport(name="name")
      private final @Nullable Input<String> name;

    public Input<String> getName() {
        return this.name == null ? Input.empty() : this.name;
    }

    /**
     * Configuration block containing option that controls the default behavior when you start an execution of this DataSync Task. For each individual task execution, you can override these options by specifying an overriding configuration in those executions.
     * 
     */
    @InputImport(name="options")
      private final @Nullable Input<TaskOptionsGetArgs> options;

    public Input<TaskOptionsGetArgs> getOptions() {
        return this.options == null ? Input.empty() : this.options;
    }

    /**
     * Specifies a schedule used to periodically transfer files from a source to a destination location.
     * 
     */
    @InputImport(name="schedule")
      private final @Nullable Input<TaskScheduleGetArgs> schedule;

    public Input<TaskScheduleGetArgs> getSchedule() {
        return this.schedule == null ? Input.empty() : this.schedule;
    }

    /**
     * Amazon Resource Name (ARN) of source DataSync Location.
     * 
     */
    @InputImport(name="sourceLocationArn")
      private final @Nullable Input<String> sourceLocationArn;

    public Input<String> getSourceLocationArn() {
        return this.sourceLocationArn == null ? Input.empty() : this.sourceLocationArn;
    }

    /**
     * Key-value pairs of resource tags to assign to the DataSync Task. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @InputImport(name="tags")
      private final @Nullable Input<Map<String,String>> tags;

    public Input<Map<String,String>> getTags() {
        return this.tags == null ? Input.empty() : this.tags;
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider .
     * 
     */
    @InputImport(name="tagsAll")
      private final @Nullable Input<Map<String,String>> tagsAll;

    public Input<Map<String,String>> getTagsAll() {
        return this.tagsAll == null ? Input.empty() : this.tagsAll;
    }

    public TaskState(
        @Nullable Input<String> arn,
        @Nullable Input<String> cloudwatchLogGroupArn,
        @Nullable Input<String> destinationLocationArn,
        @Nullable Input<TaskExcludesGetArgs> excludes,
        @Nullable Input<String> name,
        @Nullable Input<TaskOptionsGetArgs> options,
        @Nullable Input<TaskScheduleGetArgs> schedule,
        @Nullable Input<String> sourceLocationArn,
        @Nullable Input<Map<String,String>> tags,
        @Nullable Input<Map<String,String>> tagsAll) {
        this.arn = arn;
        this.cloudwatchLogGroupArn = cloudwatchLogGroupArn;
        this.destinationLocationArn = destinationLocationArn;
        this.excludes = excludes;
        this.name = name;
        this.options = options;
        this.schedule = schedule;
        this.sourceLocationArn = sourceLocationArn;
        this.tags = tags;
        this.tagsAll = tagsAll;
    }

    private TaskState() {
        this.arn = Input.empty();
        this.cloudwatchLogGroupArn = Input.empty();
        this.destinationLocationArn = Input.empty();
        this.excludes = Input.empty();
        this.name = Input.empty();
        this.options = Input.empty();
        this.schedule = Input.empty();
        this.sourceLocationArn = Input.empty();
        this.tags = Input.empty();
        this.tagsAll = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TaskState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> arn;
        private @Nullable Input<String> cloudwatchLogGroupArn;
        private @Nullable Input<String> destinationLocationArn;
        private @Nullable Input<TaskExcludesGetArgs> excludes;
        private @Nullable Input<String> name;
        private @Nullable Input<TaskOptionsGetArgs> options;
        private @Nullable Input<TaskScheduleGetArgs> schedule;
        private @Nullable Input<String> sourceLocationArn;
        private @Nullable Input<Map<String,String>> tags;
        private @Nullable Input<Map<String,String>> tagsAll;

        public Builder() {
    	      // Empty
        }

        public Builder(TaskState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.cloudwatchLogGroupArn = defaults.cloudwatchLogGroupArn;
    	      this.destinationLocationArn = defaults.destinationLocationArn;
    	      this.excludes = defaults.excludes;
    	      this.name = defaults.name;
    	      this.options = defaults.options;
    	      this.schedule = defaults.schedule;
    	      this.sourceLocationArn = defaults.sourceLocationArn;
    	      this.tags = defaults.tags;
    	      this.tagsAll = defaults.tagsAll;
        }

        public Builder setArn(@Nullable Input<String> arn) {
            this.arn = arn;
            return this;
        }

        public Builder setArn(@Nullable String arn) {
            this.arn = Input.ofNullable(arn);
            return this;
        }

        public Builder setCloudwatchLogGroupArn(@Nullable Input<String> cloudwatchLogGroupArn) {
            this.cloudwatchLogGroupArn = cloudwatchLogGroupArn;
            return this;
        }

        public Builder setCloudwatchLogGroupArn(@Nullable String cloudwatchLogGroupArn) {
            this.cloudwatchLogGroupArn = Input.ofNullable(cloudwatchLogGroupArn);
            return this;
        }

        public Builder setDestinationLocationArn(@Nullable Input<String> destinationLocationArn) {
            this.destinationLocationArn = destinationLocationArn;
            return this;
        }

        public Builder setDestinationLocationArn(@Nullable String destinationLocationArn) {
            this.destinationLocationArn = Input.ofNullable(destinationLocationArn);
            return this;
        }

        public Builder setExcludes(@Nullable Input<TaskExcludesGetArgs> excludes) {
            this.excludes = excludes;
            return this;
        }

        public Builder setExcludes(@Nullable TaskExcludesGetArgs excludes) {
            this.excludes = Input.ofNullable(excludes);
            return this;
        }

        public Builder setName(@Nullable Input<String> name) {
            this.name = name;
            return this;
        }

        public Builder setName(@Nullable String name) {
            this.name = Input.ofNullable(name);
            return this;
        }

        public Builder setOptions(@Nullable Input<TaskOptionsGetArgs> options) {
            this.options = options;
            return this;
        }

        public Builder setOptions(@Nullable TaskOptionsGetArgs options) {
            this.options = Input.ofNullable(options);
            return this;
        }

        public Builder setSchedule(@Nullable Input<TaskScheduleGetArgs> schedule) {
            this.schedule = schedule;
            return this;
        }

        public Builder setSchedule(@Nullable TaskScheduleGetArgs schedule) {
            this.schedule = Input.ofNullable(schedule);
            return this;
        }

        public Builder setSourceLocationArn(@Nullable Input<String> sourceLocationArn) {
            this.sourceLocationArn = sourceLocationArn;
            return this;
        }

        public Builder setSourceLocationArn(@Nullable String sourceLocationArn) {
            this.sourceLocationArn = Input.ofNullable(sourceLocationArn);
            return this;
        }

        public Builder setTags(@Nullable Input<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }

        public Builder setTags(@Nullable Map<String,String> tags) {
            this.tags = Input.ofNullable(tags);
            return this;
        }

        public Builder setTagsAll(@Nullable Input<Map<String,String>> tagsAll) {
            this.tagsAll = tagsAll;
            return this;
        }

        public Builder setTagsAll(@Nullable Map<String,String> tagsAll) {
            this.tagsAll = Input.ofNullable(tagsAll);
            return this;
        }
        public TaskState build() {
            return new TaskState(arn, cloudwatchLogGroupArn, destinationLocationArn, excludes, name, options, schedule, sourceLocationArn, tags, tagsAll);
        }
    }
}
