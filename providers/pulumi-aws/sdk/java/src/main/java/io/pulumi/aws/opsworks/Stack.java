// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.opsworks;

import io.pulumi.aws.Utilities;
import io.pulumi.aws.opsworks.StackArgs;
import io.pulumi.aws.opsworks.inputs.StackState;
import io.pulumi.aws.opsworks.outputs.StackCustomCookbooksSource;
import io.pulumi.core.Input;
import io.pulumi.core.Output;
import io.pulumi.core.internal.annotations.OutputExport;
import io.pulumi.core.internal.annotations.ResourceType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;

/**
 * Provides an OpsWorks stack resource.
 * 
 * ## Example Usage
 * 
 * ## Import
 * 
 * OpsWorks stacks can be imported using the `id`, e.g.,
 * 
 * ```sh
 *  $ pulumi import aws:opsworks/stack:Stack bar 00000000-0000-0000-0000-000000000000
 * ```
 * 
 */
@ResourceType(type="aws:opsworks/stack:Stack")
public class Stack extends io.pulumi.resources.CustomResource {
    /**
     * If set to `"LATEST"`, OpsWorks will automatically install the latest version.
     * 
     */
    @OutputExport(name="agentVersion", type=String.class, parameters={})
    private Output<String> agentVersion;

    /**
     * @return If set to `"LATEST"`, OpsWorks will automatically install the latest version.
     * 
     */
    public Output<String> getAgentVersion() {
        return this.agentVersion;
    }
    @OutputExport(name="arn", type=String.class, parameters={})
    private Output<String> arn;

    public Output<String> getArn() {
        return this.arn;
    }
    /**
     * If `manage_berkshelf` is enabled, the version of Berkshelf to use.
     * 
     */
    @OutputExport(name="berkshelfVersion", type=String.class, parameters={})
    private Output</* @Nullable */ String> berkshelfVersion;

    /**
     * @return If `manage_berkshelf` is enabled, the version of Berkshelf to use.
     * 
     */
    public Output</* @Nullable */ String> getBerkshelfVersion() {
        return this.berkshelfVersion;
    }
    /**
     * Color to paint next to the stack's resources in the OpsWorks console.
     * 
     */
    @OutputExport(name="color", type=String.class, parameters={})
    private Output</* @Nullable */ String> color;

    /**
     * @return Color to paint next to the stack's resources in the OpsWorks console.
     * 
     */
    public Output</* @Nullable */ String> getColor() {
        return this.color;
    }
    /**
     * Name of the configuration manager to use. Defaults to "Chef".
     * 
     */
    @OutputExport(name="configurationManagerName", type=String.class, parameters={})
    private Output</* @Nullable */ String> configurationManagerName;

    /**
     * @return Name of the configuration manager to use. Defaults to "Chef".
     * 
     */
    public Output</* @Nullable */ String> getConfigurationManagerName() {
        return this.configurationManagerName;
    }
    /**
     * Version of the configuration manager to use. Defaults to "11.4".
     * 
     */
    @OutputExport(name="configurationManagerVersion", type=String.class, parameters={})
    private Output</* @Nullable */ String> configurationManagerVersion;

    /**
     * @return Version of the configuration manager to use. Defaults to "11.4".
     * 
     */
    public Output</* @Nullable */ String> getConfigurationManagerVersion() {
        return this.configurationManagerVersion;
    }
    /**
     * When `use_custom_cookbooks` is set, provide this sub-object as
     * described below.
     * 
     */
    @OutputExport(name="customCookbooksSources", type=List.class, parameters={StackCustomCookbooksSource.class})
    private Output<List<StackCustomCookbooksSource>> customCookbooksSources;

    /**
     * @return When `use_custom_cookbooks` is set, provide this sub-object as
     * described below.
     * 
     */
    public Output<List<StackCustomCookbooksSource>> getCustomCookbooksSources() {
        return this.customCookbooksSources;
    }
    /**
     * Custom JSON attributes to apply to the entire stack.
     * 
     */
    @OutputExport(name="customJson", type=String.class, parameters={})
    private Output</* @Nullable */ String> customJson;

    /**
     * @return Custom JSON attributes to apply to the entire stack.
     * 
     */
    public Output</* @Nullable */ String> getCustomJson() {
        return this.customJson;
    }
    /**
     * Name of the availability zone where instances will be created
     * by default. This is required unless you set `vpc_id`.
     * 
     */
    @OutputExport(name="defaultAvailabilityZone", type=String.class, parameters={})
    private Output<String> defaultAvailabilityZone;

    /**
     * @return Name of the availability zone where instances will be created
     * by default. This is required unless you set `vpc_id`.
     * 
     */
    public Output<String> getDefaultAvailabilityZone() {
        return this.defaultAvailabilityZone;
    }
    /**
     * The ARN of an IAM Instance Profile that created instances
     * will have by default.
     * 
     */
    @OutputExport(name="defaultInstanceProfileArn", type=String.class, parameters={})
    private Output<String> defaultInstanceProfileArn;

    /**
     * @return The ARN of an IAM Instance Profile that created instances
     * will have by default.
     * 
     */
    public Output<String> getDefaultInstanceProfileArn() {
        return this.defaultInstanceProfileArn;
    }
    /**
     * Name of OS that will be installed on instances by default.
     * 
     */
    @OutputExport(name="defaultOs", type=String.class, parameters={})
    private Output</* @Nullable */ String> defaultOs;

    /**
     * @return Name of OS that will be installed on instances by default.
     * 
     */
    public Output</* @Nullable */ String> getDefaultOs() {
        return this.defaultOs;
    }
    /**
     * Name of the type of root device instances will have by default.
     * 
     */
    @OutputExport(name="defaultRootDeviceType", type=String.class, parameters={})
    private Output</* @Nullable */ String> defaultRootDeviceType;

    /**
     * @return Name of the type of root device instances will have by default.
     * 
     */
    public Output</* @Nullable */ String> getDefaultRootDeviceType() {
        return this.defaultRootDeviceType;
    }
    /**
     * Name of the SSH keypair that instances will have by default.
     * 
     */
    @OutputExport(name="defaultSshKeyName", type=String.class, parameters={})
    private Output</* @Nullable */ String> defaultSshKeyName;

    /**
     * @return Name of the SSH keypair that instances will have by default.
     * 
     */
    public Output</* @Nullable */ String> getDefaultSshKeyName() {
        return this.defaultSshKeyName;
    }
    /**
     * Id of the subnet in which instances will be created by default. Mandatory
     * if `vpc_id` is set, and forbidden if it isn't.
     * 
     */
    @OutputExport(name="defaultSubnetId", type=String.class, parameters={})
    private Output<String> defaultSubnetId;

    /**
     * @return Id of the subnet in which instances will be created by default. Mandatory
     * if `vpc_id` is set, and forbidden if it isn't.
     * 
     */
    public Output<String> getDefaultSubnetId() {
        return this.defaultSubnetId;
    }
    /**
     * Keyword representing the naming scheme that will be used for instance hostnames
     * within this stack.
     * 
     */
    @OutputExport(name="hostnameTheme", type=String.class, parameters={})
    private Output</* @Nullable */ String> hostnameTheme;

    /**
     * @return Keyword representing the naming scheme that will be used for instance hostnames
     * within this stack.
     * 
     */
    public Output</* @Nullable */ String> getHostnameTheme() {
        return this.hostnameTheme;
    }
    /**
     * Boolean value controlling whether Opsworks will run Berkshelf for this stack.
     * 
     */
    @OutputExport(name="manageBerkshelf", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> manageBerkshelf;

    /**
     * @return Boolean value controlling whether Opsworks will run Berkshelf for this stack.
     * 
     */
    public Output</* @Nullable */ Boolean> getManageBerkshelf() {
        return this.manageBerkshelf;
    }
    /**
     * The name of the stack.
     * 
     */
    @OutputExport(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The name of the stack.
     * 
     */
    public Output<String> getName() {
        return this.name;
    }
    /**
     * The name of the region where the stack will exist.
     * 
     */
    @OutputExport(name="region", type=String.class, parameters={})
    private Output<String> region;

    /**
     * @return The name of the region where the stack will exist.
     * 
     */
    public Output<String> getRegion() {
        return this.region;
    }
    /**
     * The ARN of an IAM role that the OpsWorks service will act as.
     * 
     */
    @OutputExport(name="serviceRoleArn", type=String.class, parameters={})
    private Output<String> serviceRoleArn;

    /**
     * @return The ARN of an IAM role that the OpsWorks service will act as.
     * 
     */
    public Output<String> getServiceRoleArn() {
        return this.serviceRoleArn;
    }
    @OutputExport(name="stackEndpoint", type=String.class, parameters={})
    private Output<String> stackEndpoint;

    public Output<String> getStackEndpoint() {
        return this.stackEndpoint;
    }
    /**
     * A map of tags to assign to the resource. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @OutputExport(name="tags", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return A map of tags to assign to the resource. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Output</* @Nullable */ Map<String,String>> getTags() {
        return this.tags;
    }
    /**
     * A map of tags assigned to the resource, including those inherited from the provider .
     * 
     */
    @OutputExport(name="tagsAll", type=Map.class, parameters={String.class, String.class})
    private Output<Map<String,String>> tagsAll;

    /**
     * @return A map of tags assigned to the resource, including those inherited from the provider .
     * 
     */
    public Output<Map<String,String>> getTagsAll() {
        return this.tagsAll;
    }
    /**
     * Boolean value controlling whether the custom cookbook settings are
     * enabled.
     * 
     */
    @OutputExport(name="useCustomCookbooks", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> useCustomCookbooks;

    /**
     * @return Boolean value controlling whether the custom cookbook settings are
     * enabled.
     * 
     */
    public Output</* @Nullable */ Boolean> getUseCustomCookbooks() {
        return this.useCustomCookbooks;
    }
    /**
     * Boolean value controlling whether the standard OpsWorks
     * security groups apply to created instances.
     * 
     */
    @OutputExport(name="useOpsworksSecurityGroups", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> useOpsworksSecurityGroups;

    /**
     * @return Boolean value controlling whether the standard OpsWorks
     * security groups apply to created instances.
     * 
     */
    public Output</* @Nullable */ Boolean> getUseOpsworksSecurityGroups() {
        return this.useOpsworksSecurityGroups;
    }
    /**
     * The id of the VPC that this stack belongs to.
     * 
     */
    @OutputExport(name="vpcId", type=String.class, parameters={})
    private Output<String> vpcId;

    /**
     * @return The id of the VPC that this stack belongs to.
     * 
     */
    public Output<String> getVpcId() {
        return this.vpcId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Stack(String name, StackArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:opsworks/stack:Stack", name, args == null ? StackArgs.Empty : args, makeResourceOptions(options, Input.empty()));
    }

    private Stack(String name, Input<String> id, @Nullable StackState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:opsworks/stack:Stack", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Input<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .setVersion(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Stack get(String name, Input<String> id, @Nullable StackState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new Stack(name, id, state, options);
    }
}
