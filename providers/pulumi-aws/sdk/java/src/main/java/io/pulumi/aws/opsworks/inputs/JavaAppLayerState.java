// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.opsworks.inputs;

import io.pulumi.aws.opsworks.inputs.JavaAppLayerCloudwatchConfigurationGetArgs;
import io.pulumi.aws.opsworks.inputs.JavaAppLayerEbsVolumeGetArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class JavaAppLayerState extends io.pulumi.resources.ResourceArgs {

    public static final JavaAppLayerState Empty = new JavaAppLayerState();

    /**
     * Keyword for the application container to use. Defaults to "tomcat".
     * 
     */
    @Import(name="appServer")
      private final @Nullable Output<String> appServer;

    public Output<String> getAppServer() {
        return this.appServer == null ? Codegen.empty() : this.appServer;
    }

    /**
     * Version of the selected application container to use. Defaults to "7".
     * 
     */
    @Import(name="appServerVersion")
      private final @Nullable Output<String> appServerVersion;

    public Output<String> getAppServerVersion() {
        return this.appServerVersion == null ? Codegen.empty() : this.appServerVersion;
    }

    /**
     * The Amazon Resource Name(ARN) of the layer.
     * 
     */
    @Import(name="arn")
      private final @Nullable Output<String> arn;

    public Output<String> getArn() {
        return this.arn == null ? Codegen.empty() : this.arn;
    }

    /**
     * Whether to automatically assign an elastic IP address to the layer's instances.
     * 
     */
    @Import(name="autoAssignElasticIps")
      private final @Nullable Output<Boolean> autoAssignElasticIps;

    public Output<Boolean> getAutoAssignElasticIps() {
        return this.autoAssignElasticIps == null ? Codegen.empty() : this.autoAssignElasticIps;
    }

    /**
     * For stacks belonging to a VPC, whether to automatically assign a public IP address to each of the layer's instances.
     * 
     */
    @Import(name="autoAssignPublicIps")
      private final @Nullable Output<Boolean> autoAssignPublicIps;

    public Output<Boolean> getAutoAssignPublicIps() {
        return this.autoAssignPublicIps == null ? Codegen.empty() : this.autoAssignPublicIps;
    }

    /**
     * Whether to enable auto-healing for the layer.
     * 
     */
    @Import(name="autoHealing")
      private final @Nullable Output<Boolean> autoHealing;

    public Output<Boolean> getAutoHealing() {
        return this.autoHealing == null ? Codegen.empty() : this.autoHealing;
    }

    @Import(name="cloudwatchConfiguration")
      private final @Nullable Output<JavaAppLayerCloudwatchConfigurationGetArgs> cloudwatchConfiguration;

    public Output<JavaAppLayerCloudwatchConfigurationGetArgs> getCloudwatchConfiguration() {
        return this.cloudwatchConfiguration == null ? Codegen.empty() : this.cloudwatchConfiguration;
    }

    @Import(name="customConfigureRecipes")
      private final @Nullable Output<List<String>> customConfigureRecipes;

    public Output<List<String>> getCustomConfigureRecipes() {
        return this.customConfigureRecipes == null ? Codegen.empty() : this.customConfigureRecipes;
    }

    @Import(name="customDeployRecipes")
      private final @Nullable Output<List<String>> customDeployRecipes;

    public Output<List<String>> getCustomDeployRecipes() {
        return this.customDeployRecipes == null ? Codegen.empty() : this.customDeployRecipes;
    }

    /**
     * The ARN of an IAM profile that will be used for the layer's instances.
     * 
     */
    @Import(name="customInstanceProfileArn")
      private final @Nullable Output<String> customInstanceProfileArn;

    public Output<String> getCustomInstanceProfileArn() {
        return this.customInstanceProfileArn == null ? Codegen.empty() : this.customInstanceProfileArn;
    }

    /**
     * Custom JSON attributes to apply to the layer.
     * 
     */
    @Import(name="customJson")
      private final @Nullable Output<String> customJson;

    public Output<String> getCustomJson() {
        return this.customJson == null ? Codegen.empty() : this.customJson;
    }

    /**
     * Ids for a set of security groups to apply to the layer's instances.
     * 
     */
    @Import(name="customSecurityGroupIds")
      private final @Nullable Output<List<String>> customSecurityGroupIds;

    public Output<List<String>> getCustomSecurityGroupIds() {
        return this.customSecurityGroupIds == null ? Codegen.empty() : this.customSecurityGroupIds;
    }

    @Import(name="customSetupRecipes")
      private final @Nullable Output<List<String>> customSetupRecipes;

    public Output<List<String>> getCustomSetupRecipes() {
        return this.customSetupRecipes == null ? Codegen.empty() : this.customSetupRecipes;
    }

    @Import(name="customShutdownRecipes")
      private final @Nullable Output<List<String>> customShutdownRecipes;

    public Output<List<String>> getCustomShutdownRecipes() {
        return this.customShutdownRecipes == null ? Codegen.empty() : this.customShutdownRecipes;
    }

    @Import(name="customUndeployRecipes")
      private final @Nullable Output<List<String>> customUndeployRecipes;

    public Output<List<String>> getCustomUndeployRecipes() {
        return this.customUndeployRecipes == null ? Codegen.empty() : this.customUndeployRecipes;
    }

    /**
     * Whether to enable Elastic Load Balancing connection draining.
     * 
     */
    @Import(name="drainElbOnShutdown")
      private final @Nullable Output<Boolean> drainElbOnShutdown;

    public Output<Boolean> getDrainElbOnShutdown() {
        return this.drainElbOnShutdown == null ? Codegen.empty() : this.drainElbOnShutdown;
    }

    /**
     * `ebs_volume` blocks, as described below, will each create an EBS volume and connect it to the layer's instances.
     * 
     */
    @Import(name="ebsVolumes")
      private final @Nullable Output<List<JavaAppLayerEbsVolumeGetArgs>> ebsVolumes;

    public Output<List<JavaAppLayerEbsVolumeGetArgs>> getEbsVolumes() {
        return this.ebsVolumes == null ? Codegen.empty() : this.ebsVolumes;
    }

    /**
     * Name of an Elastic Load Balancer to attach to this layer
     * 
     */
    @Import(name="elasticLoadBalancer")
      private final @Nullable Output<String> elasticLoadBalancer;

    public Output<String> getElasticLoadBalancer() {
        return this.elasticLoadBalancer == null ? Codegen.empty() : this.elasticLoadBalancer;
    }

    /**
     * Whether to install OS and package updates on each instance when it boots.
     * 
     */
    @Import(name="installUpdatesOnBoot")
      private final @Nullable Output<Boolean> installUpdatesOnBoot;

    public Output<Boolean> getInstallUpdatesOnBoot() {
        return this.installUpdatesOnBoot == null ? Codegen.empty() : this.installUpdatesOnBoot;
    }

    /**
     * The time, in seconds, that OpsWorks will wait for Chef to complete after triggering the Shutdown event.
     * 
     */
    @Import(name="instanceShutdownTimeout")
      private final @Nullable Output<Integer> instanceShutdownTimeout;

    public Output<Integer> getInstanceShutdownTimeout() {
        return this.instanceShutdownTimeout == null ? Codegen.empty() : this.instanceShutdownTimeout;
    }

    /**
     * Options to set for the JVM.
     * 
     */
    @Import(name="jvmOptions")
      private final @Nullable Output<String> jvmOptions;

    public Output<String> getJvmOptions() {
        return this.jvmOptions == null ? Codegen.empty() : this.jvmOptions;
    }

    /**
     * Keyword for the type of JVM to use. Defaults to `openjdk`.
     * 
     */
    @Import(name="jvmType")
      private final @Nullable Output<String> jvmType;

    public Output<String> getJvmType() {
        return this.jvmType == null ? Codegen.empty() : this.jvmType;
    }

    /**
     * Version of JVM to use. Defaults to "7".
     * 
     */
    @Import(name="jvmVersion")
      private final @Nullable Output<String> jvmVersion;

    public Output<String> getJvmVersion() {
        return this.jvmVersion == null ? Codegen.empty() : this.jvmVersion;
    }

    /**
     * A human-readable name for the layer.
     * 
     */
    @Import(name="name")
      private final @Nullable Output<String> name;

    public Output<String> getName() {
        return this.name == null ? Codegen.empty() : this.name;
    }

    /**
     * The id of the stack the layer will belong to.
     * 
     */
    @Import(name="stackId")
      private final @Nullable Output<String> stackId;

    public Output<String> getStackId() {
        return this.stackId == null ? Codegen.empty() : this.stackId;
    }

    /**
     * Names of a set of system packages to install on the layer's instances.
     * 
     */
    @Import(name="systemPackages")
      private final @Nullable Output<List<String>> systemPackages;

    public Output<List<String>> getSystemPackages() {
        return this.systemPackages == null ? Codegen.empty() : this.systemPackages;
    }

    /**
     * A map of tags to assign to the resource. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Import(name="tags")
      private final @Nullable Output<Map<String,String>> tags;

    public Output<Map<String,String>> getTags() {
        return this.tags == null ? Codegen.empty() : this.tags;
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider .
     * 
     */
    @Import(name="tagsAll")
      private final @Nullable Output<Map<String,String>> tagsAll;

    public Output<Map<String,String>> getTagsAll() {
        return this.tagsAll == null ? Codegen.empty() : this.tagsAll;
    }

    /**
     * Whether to use EBS-optimized instances.
     * 
     */
    @Import(name="useEbsOptimizedInstances")
      private final @Nullable Output<Boolean> useEbsOptimizedInstances;

    public Output<Boolean> getUseEbsOptimizedInstances() {
        return this.useEbsOptimizedInstances == null ? Codegen.empty() : this.useEbsOptimizedInstances;
    }

    public JavaAppLayerState(
        @Nullable Output<String> appServer,
        @Nullable Output<String> appServerVersion,
        @Nullable Output<String> arn,
        @Nullable Output<Boolean> autoAssignElasticIps,
        @Nullable Output<Boolean> autoAssignPublicIps,
        @Nullable Output<Boolean> autoHealing,
        @Nullable Output<JavaAppLayerCloudwatchConfigurationGetArgs> cloudwatchConfiguration,
        @Nullable Output<List<String>> customConfigureRecipes,
        @Nullable Output<List<String>> customDeployRecipes,
        @Nullable Output<String> customInstanceProfileArn,
        @Nullable Output<String> customJson,
        @Nullable Output<List<String>> customSecurityGroupIds,
        @Nullable Output<List<String>> customSetupRecipes,
        @Nullable Output<List<String>> customShutdownRecipes,
        @Nullable Output<List<String>> customUndeployRecipes,
        @Nullable Output<Boolean> drainElbOnShutdown,
        @Nullable Output<List<JavaAppLayerEbsVolumeGetArgs>> ebsVolumes,
        @Nullable Output<String> elasticLoadBalancer,
        @Nullable Output<Boolean> installUpdatesOnBoot,
        @Nullable Output<Integer> instanceShutdownTimeout,
        @Nullable Output<String> jvmOptions,
        @Nullable Output<String> jvmType,
        @Nullable Output<String> jvmVersion,
        @Nullable Output<String> name,
        @Nullable Output<String> stackId,
        @Nullable Output<List<String>> systemPackages,
        @Nullable Output<Map<String,String>> tags,
        @Nullable Output<Map<String,String>> tagsAll,
        @Nullable Output<Boolean> useEbsOptimizedInstances) {
        this.appServer = appServer;
        this.appServerVersion = appServerVersion;
        this.arn = arn;
        this.autoAssignElasticIps = autoAssignElasticIps;
        this.autoAssignPublicIps = autoAssignPublicIps;
        this.autoHealing = autoHealing;
        this.cloudwatchConfiguration = cloudwatchConfiguration;
        this.customConfigureRecipes = customConfigureRecipes;
        this.customDeployRecipes = customDeployRecipes;
        this.customInstanceProfileArn = customInstanceProfileArn;
        this.customJson = customJson;
        this.customSecurityGroupIds = customSecurityGroupIds;
        this.customSetupRecipes = customSetupRecipes;
        this.customShutdownRecipes = customShutdownRecipes;
        this.customUndeployRecipes = customUndeployRecipes;
        this.drainElbOnShutdown = drainElbOnShutdown;
        this.ebsVolumes = ebsVolumes;
        this.elasticLoadBalancer = elasticLoadBalancer;
        this.installUpdatesOnBoot = installUpdatesOnBoot;
        this.instanceShutdownTimeout = instanceShutdownTimeout;
        this.jvmOptions = jvmOptions;
        this.jvmType = jvmType;
        this.jvmVersion = jvmVersion;
        this.name = name;
        this.stackId = stackId;
        this.systemPackages = systemPackages;
        this.tags = tags;
        this.tagsAll = tagsAll;
        this.useEbsOptimizedInstances = useEbsOptimizedInstances;
    }

    private JavaAppLayerState() {
        this.appServer = Codegen.empty();
        this.appServerVersion = Codegen.empty();
        this.arn = Codegen.empty();
        this.autoAssignElasticIps = Codegen.empty();
        this.autoAssignPublicIps = Codegen.empty();
        this.autoHealing = Codegen.empty();
        this.cloudwatchConfiguration = Codegen.empty();
        this.customConfigureRecipes = Codegen.empty();
        this.customDeployRecipes = Codegen.empty();
        this.customInstanceProfileArn = Codegen.empty();
        this.customJson = Codegen.empty();
        this.customSecurityGroupIds = Codegen.empty();
        this.customSetupRecipes = Codegen.empty();
        this.customShutdownRecipes = Codegen.empty();
        this.customUndeployRecipes = Codegen.empty();
        this.drainElbOnShutdown = Codegen.empty();
        this.ebsVolumes = Codegen.empty();
        this.elasticLoadBalancer = Codegen.empty();
        this.installUpdatesOnBoot = Codegen.empty();
        this.instanceShutdownTimeout = Codegen.empty();
        this.jvmOptions = Codegen.empty();
        this.jvmType = Codegen.empty();
        this.jvmVersion = Codegen.empty();
        this.name = Codegen.empty();
        this.stackId = Codegen.empty();
        this.systemPackages = Codegen.empty();
        this.tags = Codegen.empty();
        this.tagsAll = Codegen.empty();
        this.useEbsOptimizedInstances = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(JavaAppLayerState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> appServer;
        private @Nullable Output<String> appServerVersion;
        private @Nullable Output<String> arn;
        private @Nullable Output<Boolean> autoAssignElasticIps;
        private @Nullable Output<Boolean> autoAssignPublicIps;
        private @Nullable Output<Boolean> autoHealing;
        private @Nullable Output<JavaAppLayerCloudwatchConfigurationGetArgs> cloudwatchConfiguration;
        private @Nullable Output<List<String>> customConfigureRecipes;
        private @Nullable Output<List<String>> customDeployRecipes;
        private @Nullable Output<String> customInstanceProfileArn;
        private @Nullable Output<String> customJson;
        private @Nullable Output<List<String>> customSecurityGroupIds;
        private @Nullable Output<List<String>> customSetupRecipes;
        private @Nullable Output<List<String>> customShutdownRecipes;
        private @Nullable Output<List<String>> customUndeployRecipes;
        private @Nullable Output<Boolean> drainElbOnShutdown;
        private @Nullable Output<List<JavaAppLayerEbsVolumeGetArgs>> ebsVolumes;
        private @Nullable Output<String> elasticLoadBalancer;
        private @Nullable Output<Boolean> installUpdatesOnBoot;
        private @Nullable Output<Integer> instanceShutdownTimeout;
        private @Nullable Output<String> jvmOptions;
        private @Nullable Output<String> jvmType;
        private @Nullable Output<String> jvmVersion;
        private @Nullable Output<String> name;
        private @Nullable Output<String> stackId;
        private @Nullable Output<List<String>> systemPackages;
        private @Nullable Output<Map<String,String>> tags;
        private @Nullable Output<Map<String,String>> tagsAll;
        private @Nullable Output<Boolean> useEbsOptimizedInstances;

        public Builder() {
    	      // Empty
        }

        public Builder(JavaAppLayerState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.appServer = defaults.appServer;
    	      this.appServerVersion = defaults.appServerVersion;
    	      this.arn = defaults.arn;
    	      this.autoAssignElasticIps = defaults.autoAssignElasticIps;
    	      this.autoAssignPublicIps = defaults.autoAssignPublicIps;
    	      this.autoHealing = defaults.autoHealing;
    	      this.cloudwatchConfiguration = defaults.cloudwatchConfiguration;
    	      this.customConfigureRecipes = defaults.customConfigureRecipes;
    	      this.customDeployRecipes = defaults.customDeployRecipes;
    	      this.customInstanceProfileArn = defaults.customInstanceProfileArn;
    	      this.customJson = defaults.customJson;
    	      this.customSecurityGroupIds = defaults.customSecurityGroupIds;
    	      this.customSetupRecipes = defaults.customSetupRecipes;
    	      this.customShutdownRecipes = defaults.customShutdownRecipes;
    	      this.customUndeployRecipes = defaults.customUndeployRecipes;
    	      this.drainElbOnShutdown = defaults.drainElbOnShutdown;
    	      this.ebsVolumes = defaults.ebsVolumes;
    	      this.elasticLoadBalancer = defaults.elasticLoadBalancer;
    	      this.installUpdatesOnBoot = defaults.installUpdatesOnBoot;
    	      this.instanceShutdownTimeout = defaults.instanceShutdownTimeout;
    	      this.jvmOptions = defaults.jvmOptions;
    	      this.jvmType = defaults.jvmType;
    	      this.jvmVersion = defaults.jvmVersion;
    	      this.name = defaults.name;
    	      this.stackId = defaults.stackId;
    	      this.systemPackages = defaults.systemPackages;
    	      this.tags = defaults.tags;
    	      this.tagsAll = defaults.tagsAll;
    	      this.useEbsOptimizedInstances = defaults.useEbsOptimizedInstances;
        }

        public Builder appServer(@Nullable Output<String> appServer) {
            this.appServer = appServer;
            return this;
        }
        public Builder appServer(@Nullable String appServer) {
            this.appServer = Codegen.ofNullable(appServer);
            return this;
        }
        public Builder appServerVersion(@Nullable Output<String> appServerVersion) {
            this.appServerVersion = appServerVersion;
            return this;
        }
        public Builder appServerVersion(@Nullable String appServerVersion) {
            this.appServerVersion = Codegen.ofNullable(appServerVersion);
            return this;
        }
        public Builder arn(@Nullable Output<String> arn) {
            this.arn = arn;
            return this;
        }
        public Builder arn(@Nullable String arn) {
            this.arn = Codegen.ofNullable(arn);
            return this;
        }
        public Builder autoAssignElasticIps(@Nullable Output<Boolean> autoAssignElasticIps) {
            this.autoAssignElasticIps = autoAssignElasticIps;
            return this;
        }
        public Builder autoAssignElasticIps(@Nullable Boolean autoAssignElasticIps) {
            this.autoAssignElasticIps = Codegen.ofNullable(autoAssignElasticIps);
            return this;
        }
        public Builder autoAssignPublicIps(@Nullable Output<Boolean> autoAssignPublicIps) {
            this.autoAssignPublicIps = autoAssignPublicIps;
            return this;
        }
        public Builder autoAssignPublicIps(@Nullable Boolean autoAssignPublicIps) {
            this.autoAssignPublicIps = Codegen.ofNullable(autoAssignPublicIps);
            return this;
        }
        public Builder autoHealing(@Nullable Output<Boolean> autoHealing) {
            this.autoHealing = autoHealing;
            return this;
        }
        public Builder autoHealing(@Nullable Boolean autoHealing) {
            this.autoHealing = Codegen.ofNullable(autoHealing);
            return this;
        }
        public Builder cloudwatchConfiguration(@Nullable Output<JavaAppLayerCloudwatchConfigurationGetArgs> cloudwatchConfiguration) {
            this.cloudwatchConfiguration = cloudwatchConfiguration;
            return this;
        }
        public Builder cloudwatchConfiguration(@Nullable JavaAppLayerCloudwatchConfigurationGetArgs cloudwatchConfiguration) {
            this.cloudwatchConfiguration = Codegen.ofNullable(cloudwatchConfiguration);
            return this;
        }
        public Builder customConfigureRecipes(@Nullable Output<List<String>> customConfigureRecipes) {
            this.customConfigureRecipes = customConfigureRecipes;
            return this;
        }
        public Builder customConfigureRecipes(@Nullable List<String> customConfigureRecipes) {
            this.customConfigureRecipes = Codegen.ofNullable(customConfigureRecipes);
            return this;
        }
        public Builder customConfigureRecipes(String... customConfigureRecipes) {
            return customConfigureRecipes(List.of(customConfigureRecipes));
        }
        public Builder customDeployRecipes(@Nullable Output<List<String>> customDeployRecipes) {
            this.customDeployRecipes = customDeployRecipes;
            return this;
        }
        public Builder customDeployRecipes(@Nullable List<String> customDeployRecipes) {
            this.customDeployRecipes = Codegen.ofNullable(customDeployRecipes);
            return this;
        }
        public Builder customDeployRecipes(String... customDeployRecipes) {
            return customDeployRecipes(List.of(customDeployRecipes));
        }
        public Builder customInstanceProfileArn(@Nullable Output<String> customInstanceProfileArn) {
            this.customInstanceProfileArn = customInstanceProfileArn;
            return this;
        }
        public Builder customInstanceProfileArn(@Nullable String customInstanceProfileArn) {
            this.customInstanceProfileArn = Codegen.ofNullable(customInstanceProfileArn);
            return this;
        }
        public Builder customJson(@Nullable Output<String> customJson) {
            this.customJson = customJson;
            return this;
        }
        public Builder customJson(@Nullable String customJson) {
            this.customJson = Codegen.ofNullable(customJson);
            return this;
        }
        public Builder customSecurityGroupIds(@Nullable Output<List<String>> customSecurityGroupIds) {
            this.customSecurityGroupIds = customSecurityGroupIds;
            return this;
        }
        public Builder customSecurityGroupIds(@Nullable List<String> customSecurityGroupIds) {
            this.customSecurityGroupIds = Codegen.ofNullable(customSecurityGroupIds);
            return this;
        }
        public Builder customSecurityGroupIds(String... customSecurityGroupIds) {
            return customSecurityGroupIds(List.of(customSecurityGroupIds));
        }
        public Builder customSetupRecipes(@Nullable Output<List<String>> customSetupRecipes) {
            this.customSetupRecipes = customSetupRecipes;
            return this;
        }
        public Builder customSetupRecipes(@Nullable List<String> customSetupRecipes) {
            this.customSetupRecipes = Codegen.ofNullable(customSetupRecipes);
            return this;
        }
        public Builder customSetupRecipes(String... customSetupRecipes) {
            return customSetupRecipes(List.of(customSetupRecipes));
        }
        public Builder customShutdownRecipes(@Nullable Output<List<String>> customShutdownRecipes) {
            this.customShutdownRecipes = customShutdownRecipes;
            return this;
        }
        public Builder customShutdownRecipes(@Nullable List<String> customShutdownRecipes) {
            this.customShutdownRecipes = Codegen.ofNullable(customShutdownRecipes);
            return this;
        }
        public Builder customShutdownRecipes(String... customShutdownRecipes) {
            return customShutdownRecipes(List.of(customShutdownRecipes));
        }
        public Builder customUndeployRecipes(@Nullable Output<List<String>> customUndeployRecipes) {
            this.customUndeployRecipes = customUndeployRecipes;
            return this;
        }
        public Builder customUndeployRecipes(@Nullable List<String> customUndeployRecipes) {
            this.customUndeployRecipes = Codegen.ofNullable(customUndeployRecipes);
            return this;
        }
        public Builder customUndeployRecipes(String... customUndeployRecipes) {
            return customUndeployRecipes(List.of(customUndeployRecipes));
        }
        public Builder drainElbOnShutdown(@Nullable Output<Boolean> drainElbOnShutdown) {
            this.drainElbOnShutdown = drainElbOnShutdown;
            return this;
        }
        public Builder drainElbOnShutdown(@Nullable Boolean drainElbOnShutdown) {
            this.drainElbOnShutdown = Codegen.ofNullable(drainElbOnShutdown);
            return this;
        }
        public Builder ebsVolumes(@Nullable Output<List<JavaAppLayerEbsVolumeGetArgs>> ebsVolumes) {
            this.ebsVolumes = ebsVolumes;
            return this;
        }
        public Builder ebsVolumes(@Nullable List<JavaAppLayerEbsVolumeGetArgs> ebsVolumes) {
            this.ebsVolumes = Codegen.ofNullable(ebsVolumes);
            return this;
        }
        public Builder ebsVolumes(JavaAppLayerEbsVolumeGetArgs... ebsVolumes) {
            return ebsVolumes(List.of(ebsVolumes));
        }
        public Builder elasticLoadBalancer(@Nullable Output<String> elasticLoadBalancer) {
            this.elasticLoadBalancer = elasticLoadBalancer;
            return this;
        }
        public Builder elasticLoadBalancer(@Nullable String elasticLoadBalancer) {
            this.elasticLoadBalancer = Codegen.ofNullable(elasticLoadBalancer);
            return this;
        }
        public Builder installUpdatesOnBoot(@Nullable Output<Boolean> installUpdatesOnBoot) {
            this.installUpdatesOnBoot = installUpdatesOnBoot;
            return this;
        }
        public Builder installUpdatesOnBoot(@Nullable Boolean installUpdatesOnBoot) {
            this.installUpdatesOnBoot = Codegen.ofNullable(installUpdatesOnBoot);
            return this;
        }
        public Builder instanceShutdownTimeout(@Nullable Output<Integer> instanceShutdownTimeout) {
            this.instanceShutdownTimeout = instanceShutdownTimeout;
            return this;
        }
        public Builder instanceShutdownTimeout(@Nullable Integer instanceShutdownTimeout) {
            this.instanceShutdownTimeout = Codegen.ofNullable(instanceShutdownTimeout);
            return this;
        }
        public Builder jvmOptions(@Nullable Output<String> jvmOptions) {
            this.jvmOptions = jvmOptions;
            return this;
        }
        public Builder jvmOptions(@Nullable String jvmOptions) {
            this.jvmOptions = Codegen.ofNullable(jvmOptions);
            return this;
        }
        public Builder jvmType(@Nullable Output<String> jvmType) {
            this.jvmType = jvmType;
            return this;
        }
        public Builder jvmType(@Nullable String jvmType) {
            this.jvmType = Codegen.ofNullable(jvmType);
            return this;
        }
        public Builder jvmVersion(@Nullable Output<String> jvmVersion) {
            this.jvmVersion = jvmVersion;
            return this;
        }
        public Builder jvmVersion(@Nullable String jvmVersion) {
            this.jvmVersion = Codegen.ofNullable(jvmVersion);
            return this;
        }
        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }
        public Builder name(@Nullable String name) {
            this.name = Codegen.ofNullable(name);
            return this;
        }
        public Builder stackId(@Nullable Output<String> stackId) {
            this.stackId = stackId;
            return this;
        }
        public Builder stackId(@Nullable String stackId) {
            this.stackId = Codegen.ofNullable(stackId);
            return this;
        }
        public Builder systemPackages(@Nullable Output<List<String>> systemPackages) {
            this.systemPackages = systemPackages;
            return this;
        }
        public Builder systemPackages(@Nullable List<String> systemPackages) {
            this.systemPackages = Codegen.ofNullable(systemPackages);
            return this;
        }
        public Builder systemPackages(String... systemPackages) {
            return systemPackages(List.of(systemPackages));
        }
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = Codegen.ofNullable(tags);
            return this;
        }
        public Builder tagsAll(@Nullable Output<Map<String,String>> tagsAll) {
            this.tagsAll = tagsAll;
            return this;
        }
        public Builder tagsAll(@Nullable Map<String,String> tagsAll) {
            this.tagsAll = Codegen.ofNullable(tagsAll);
            return this;
        }
        public Builder useEbsOptimizedInstances(@Nullable Output<Boolean> useEbsOptimizedInstances) {
            this.useEbsOptimizedInstances = useEbsOptimizedInstances;
            return this;
        }
        public Builder useEbsOptimizedInstances(@Nullable Boolean useEbsOptimizedInstances) {
            this.useEbsOptimizedInstances = Codegen.ofNullable(useEbsOptimizedInstances);
            return this;
        }        public JavaAppLayerState build() {
            return new JavaAppLayerState(appServer, appServerVersion, arn, autoAssignElasticIps, autoAssignPublicIps, autoHealing, cloudwatchConfiguration, customConfigureRecipes, customDeployRecipes, customInstanceProfileArn, customJson, customSecurityGroupIds, customSetupRecipes, customShutdownRecipes, customUndeployRecipes, drainElbOnShutdown, ebsVolumes, elasticLoadBalancer, installUpdatesOnBoot, instanceShutdownTimeout, jvmOptions, jvmType, jvmVersion, name, stackId, systemPackages, tags, tagsAll, useEbsOptimizedInstances);
        }
    }
}
