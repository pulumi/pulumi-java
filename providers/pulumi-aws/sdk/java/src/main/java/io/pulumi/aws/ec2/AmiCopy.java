// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.ec2;

import io.pulumi.aws.Utilities;
import io.pulumi.aws.ec2.AmiCopyArgs;
import io.pulumi.aws.ec2.inputs.AmiCopyState;
import io.pulumi.aws.ec2.outputs.AmiCopyEbsBlockDevice;
import io.pulumi.aws.ec2.outputs.AmiCopyEphemeralBlockDevice;
import io.pulumi.core.Input;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.OutputExport;
import io.pulumi.core.annotations.ResourceType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;

/**
 * The "AMI copy" resource allows duplication of an Amazon Machine Image (AMI),
 * including cross-region copies.
 * 
 * If the source AMI has associated EBS snapshots, those will also be duplicated
 * along with the AMI.
 * 
 * This is useful for taking a single AMI provisioned in one region and making
 * it available in another for a multi-region deployment.
 * 
 * Copying an AMI can take several minutes. The creation of this resource will
 * block until the new AMI is available for use on new instances.
 * 
 * ## Example Usage
 * 
 */
@ResourceType(type="aws:ec2/amiCopy:AmiCopy")
public class AmiCopy extends io.pulumi.resources.CustomResource {
    /**
     * Machine architecture for created instances. Defaults to "x86_64".
     * 
     */
    @OutputExport(name="architecture", type=String.class, parameters={})
    private Output<String> architecture;

    /**
     * @return Machine architecture for created instances. Defaults to "x86_64".
     * 
     */
    public Output<String> getArchitecture() {
        return this.architecture;
    }
    /**
     * The ARN of the AMI.
     * 
     */
    @OutputExport(name="arn", type=String.class, parameters={})
    private Output<String> arn;

    /**
     * @return The ARN of the AMI.
     * 
     */
    public Output<String> getArn() {
        return this.arn;
    }
    /**
     * A longer, human-readable description for the AMI.
     * 
     */
    @OutputExport(name="description", type=String.class, parameters={})
    private Output</* @Nullable */ String> description;

    /**
     * @return A longer, human-readable description for the AMI.
     * 
     */
    public Output</* @Nullable */ String> getDescription() {
        return this.description;
    }
    /**
     * The ARN of the Outpost to which to copy the AMI.
     * Only specify this parameter when copying an AMI from an AWS Region to an Outpost. The AMI must be in the Region of the destination Outpost.
     * 
     */
    @OutputExport(name="destinationOutpostArn", type=String.class, parameters={})
    private Output</* @Nullable */ String> destinationOutpostArn;

    /**
     * @return The ARN of the Outpost to which to copy the AMI.
     * Only specify this parameter when copying an AMI from an AWS Region to an Outpost. The AMI must be in the Region of the destination Outpost.
     * 
     */
    public Output</* @Nullable */ String> getDestinationOutpostArn() {
        return this.destinationOutpostArn;
    }
    /**
     * Nested block describing an EBS block device that should be
     * attached to created instances. The structure of this block is described below.
     * 
     */
    @OutputExport(name="ebsBlockDevices", type=List.class, parameters={AmiCopyEbsBlockDevice.class})
    private Output<List<AmiCopyEbsBlockDevice>> ebsBlockDevices;

    /**
     * @return Nested block describing an EBS block device that should be
     * attached to created instances. The structure of this block is described below.
     * 
     */
    public Output<List<AmiCopyEbsBlockDevice>> getEbsBlockDevices() {
        return this.ebsBlockDevices;
    }
    /**
     * Specifies whether enhanced networking with ENA is enabled. Defaults to `false`.
     * 
     */
    @OutputExport(name="enaSupport", type=Boolean.class, parameters={})
    private Output<Boolean> enaSupport;

    /**
     * @return Specifies whether enhanced networking with ENA is enabled. Defaults to `false`.
     * 
     */
    public Output<Boolean> getEnaSupport() {
        return this.enaSupport;
    }
    /**
     * Boolean controlling whether the created EBS volumes will be encrypted. Can't be used with `snapshot_id`.
     * 
     */
    @OutputExport(name="encrypted", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> encrypted;

    /**
     * @return Boolean controlling whether the created EBS volumes will be encrypted. Can't be used with `snapshot_id`.
     * 
     */
    public Output</* @Nullable */ Boolean> getEncrypted() {
        return this.encrypted;
    }
    /**
     * Nested block describing an ephemeral block device that
     * should be attached to created instances. The structure of this block is described below.
     * 
     */
    @OutputExport(name="ephemeralBlockDevices", type=List.class, parameters={AmiCopyEphemeralBlockDevice.class})
    private Output<List<AmiCopyEphemeralBlockDevice>> ephemeralBlockDevices;

    /**
     * @return Nested block describing an ephemeral block device that
     * should be attached to created instances. The structure of this block is described below.
     * 
     */
    public Output<List<AmiCopyEphemeralBlockDevice>> getEphemeralBlockDevices() {
        return this.ephemeralBlockDevices;
    }
    @OutputExport(name="hypervisor", type=String.class, parameters={})
    private Output<String> hypervisor;

    public Output<String> getHypervisor() {
        return this.hypervisor;
    }
    /**
     * Path to an S3 object containing an image manifest, e.g., created
     * by the `ec2-upload-bundle` command in the EC2 command line tools.
     * 
     */
    @OutputExport(name="imageLocation", type=String.class, parameters={})
    private Output<String> imageLocation;

    /**
     * @return Path to an S3 object containing an image manifest, e.g., created
     * by the `ec2-upload-bundle` command in the EC2 command line tools.
     * 
     */
    public Output<String> getImageLocation() {
        return this.imageLocation;
    }
    @OutputExport(name="imageOwnerAlias", type=String.class, parameters={})
    private Output<String> imageOwnerAlias;

    public Output<String> getImageOwnerAlias() {
        return this.imageOwnerAlias;
    }
    @OutputExport(name="imageType", type=String.class, parameters={})
    private Output<String> imageType;

    public Output<String> getImageType() {
        return this.imageType;
    }
    /**
     * The id of the kernel image (AKI) that will be used as the paravirtual
     * kernel in created instances.
     * 
     */
    @OutputExport(name="kernelId", type=String.class, parameters={})
    private Output<String> kernelId;

    /**
     * @return The id of the kernel image (AKI) that will be used as the paravirtual
     * kernel in created instances.
     * 
     */
    public Output<String> getKernelId() {
        return this.kernelId;
    }
    /**
     * The full ARN of the AWS Key Management Service (AWS KMS) CMK to use when encrypting the snapshots of
     * an image during a copy operation. This parameter is only required if you want to use a non-default CMK;
     * if this parameter is not specified, the default CMK for EBS is used
     * 
     */
    @OutputExport(name="kmsKeyId", type=String.class, parameters={})
    private Output<String> kmsKeyId;

    /**
     * @return The full ARN of the AWS Key Management Service (AWS KMS) CMK to use when encrypting the snapshots of
     * an image during a copy operation. This parameter is only required if you want to use a non-default CMK;
     * if this parameter is not specified, the default CMK for EBS is used
     * 
     */
    public Output<String> getKmsKeyId() {
        return this.kmsKeyId;
    }
    @OutputExport(name="manageEbsSnapshots", type=Boolean.class, parameters={})
    private Output<Boolean> manageEbsSnapshots;

    public Output<Boolean> getManageEbsSnapshots() {
        return this.manageEbsSnapshots;
    }
    /**
     * A region-unique name for the AMI.
     * 
     */
    @OutputExport(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return A region-unique name for the AMI.
     * 
     */
    public Output<String> getName() {
        return this.name;
    }
    @OutputExport(name="ownerId", type=String.class, parameters={})
    private Output<String> ownerId;

    public Output<String> getOwnerId() {
        return this.ownerId;
    }
    @OutputExport(name="platform", type=String.class, parameters={})
    private Output<String> platform;

    public Output<String> getPlatform() {
        return this.platform;
    }
    @OutputExport(name="platformDetails", type=String.class, parameters={})
    private Output<String> platformDetails;

    public Output<String> getPlatformDetails() {
        return this.platformDetails;
    }
    @OutputExport(name="public", type=Boolean.class, parameters={})
    private Output<Boolean> $public;

    public Output<Boolean> get$public() {
        return this.$public;
    }
    /**
     * The id of an initrd image (ARI) that will be used when booting the
     * created instances.
     * 
     */
    @OutputExport(name="ramdiskId", type=String.class, parameters={})
    private Output<String> ramdiskId;

    /**
     * @return The id of an initrd image (ARI) that will be used when booting the
     * created instances.
     * 
     */
    public Output<String> getRamdiskId() {
        return this.ramdiskId;
    }
    /**
     * The name of the root device (for example, `/dev/sda1`, or `/dev/xvda`).
     * 
     */
    @OutputExport(name="rootDeviceName", type=String.class, parameters={})
    private Output<String> rootDeviceName;

    /**
     * @return The name of the root device (for example, `/dev/sda1`, or `/dev/xvda`).
     * 
     */
    public Output<String> getRootDeviceName() {
        return this.rootDeviceName;
    }
    @OutputExport(name="rootSnapshotId", type=String.class, parameters={})
    private Output<String> rootSnapshotId;

    public Output<String> getRootSnapshotId() {
        return this.rootSnapshotId;
    }
    /**
     * The id of the AMI to copy. This id must be valid in the region
     * given by `source_ami_region`.
     * 
     */
    @OutputExport(name="sourceAmiId", type=String.class, parameters={})
    private Output<String> sourceAmiId;

    /**
     * @return The id of the AMI to copy. This id must be valid in the region
     * given by `source_ami_region`.
     * 
     */
    public Output<String> getSourceAmiId() {
        return this.sourceAmiId;
    }
    /**
     * The region from which the AMI will be copied. This may be the
     * same as the AWS provider region in order to create a copy within the same region.
     * 
     */
    @OutputExport(name="sourceAmiRegion", type=String.class, parameters={})
    private Output<String> sourceAmiRegion;

    /**
     * @return The region from which the AMI will be copied. This may be the
     * same as the AWS provider region in order to create a copy within the same region.
     * 
     */
    public Output<String> getSourceAmiRegion() {
        return this.sourceAmiRegion;
    }
    /**
     * When set to "simple" (the default), enables enhanced networking
     * for created instances. No other value is supported at this time.
     * 
     */
    @OutputExport(name="sriovNetSupport", type=String.class, parameters={})
    private Output<String> sriovNetSupport;

    /**
     * @return When set to "simple" (the default), enables enhanced networking
     * for created instances. No other value is supported at this time.
     * 
     */
    public Output<String> getSriovNetSupport() {
        return this.sriovNetSupport;
    }
    /**
     * A map of tags to assign to the resource. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @OutputExport(name="tags", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return A map of tags to assign to the resource. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Output</* @Nullable */ Map<String,String>> getTags() {
        return this.tags;
    }
    @OutputExport(name="tagsAll", type=Map.class, parameters={String.class, String.class})
    private Output<Map<String,String>> tagsAll;

    public Output<Map<String,String>> getTagsAll() {
        return this.tagsAll;
    }
    @OutputExport(name="usageOperation", type=String.class, parameters={})
    private Output<String> usageOperation;

    public Output<String> getUsageOperation() {
        return this.usageOperation;
    }
    /**
     * Keyword to choose what virtualization mode created instances
     * will use. Can be either "paravirtual" (the default) or "hvm". The choice of virtualization type
     * changes the set of further arguments that are required, as described below.
     * 
     */
    @OutputExport(name="virtualizationType", type=String.class, parameters={})
    private Output<String> virtualizationType;

    /**
     * @return Keyword to choose what virtualization mode created instances
     * will use. Can be either "paravirtual" (the default) or "hvm". The choice of virtualization type
     * changes the set of further arguments that are required, as described below.
     * 
     */
    public Output<String> getVirtualizationType() {
        return this.virtualizationType;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public AmiCopy(String name) {
        this(name, AmiCopyArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public AmiCopy(String name, AmiCopyArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public AmiCopy(String name, AmiCopyArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:ec2/amiCopy:AmiCopy", name, args == null ? AmiCopyArgs.Empty : args, makeResourceOptions(options, Input.empty()));
    }

    private AmiCopy(String name, Input<String> id, @Nullable AmiCopyState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:ec2/amiCopy:AmiCopy", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Input<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .setVersion(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static AmiCopy get(String name, Input<String> id, @Nullable AmiCopyState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new AmiCopy(name, id, state, options);
    }
}
