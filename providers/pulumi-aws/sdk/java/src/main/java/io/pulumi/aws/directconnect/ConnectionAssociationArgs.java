// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.directconnect;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.String;
import java.util.Objects;


public final class ConnectionAssociationArgs extends io.pulumi.resources.ResourceArgs {

    public static final ConnectionAssociationArgs Empty = new ConnectionAssociationArgs();

    /**
     * The ID of the connection.
     * 
     */
    @InputImport(name="connectionId", required=true)
    private final Input<String> connectionId;

    public Input<String> getConnectionId() {
        return this.connectionId;
    }

    /**
     * The ID of the LAG with which to associate the connection.
     * 
     */
    @InputImport(name="lagId", required=true)
    private final Input<String> lagId;

    public Input<String> getLagId() {
        return this.lagId;
    }

    public ConnectionAssociationArgs(
        Input<String> connectionId,
        Input<String> lagId) {
        this.connectionId = Objects.requireNonNull(connectionId, "expected parameter 'connectionId' to be non-null");
        this.lagId = Objects.requireNonNull(lagId, "expected parameter 'lagId' to be non-null");
    }

    private ConnectionAssociationArgs() {
        this.connectionId = Input.empty();
        this.lagId = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ConnectionAssociationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<String> connectionId;
        private Input<String> lagId;

        public Builder() {
    	      // Empty
        }

        public Builder(ConnectionAssociationArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.connectionId = defaults.connectionId;
    	      this.lagId = defaults.lagId;
        }

        public Builder setConnectionId(Input<String> connectionId) {
            this.connectionId = Objects.requireNonNull(connectionId);
            return this;
        }

        public Builder setConnectionId(String connectionId) {
            this.connectionId = Input.of(Objects.requireNonNull(connectionId));
            return this;
        }

        public Builder setLagId(Input<String> lagId) {
            this.lagId = Objects.requireNonNull(lagId);
            return this;
        }

        public Builder setLagId(String lagId) {
            this.lagId = Input.of(Objects.requireNonNull(lagId));
            return this;
        }
        public ConnectionAssociationArgs build() {
            return new ConnectionAssociationArgs(connectionId, lagId);
        }
    }
}
