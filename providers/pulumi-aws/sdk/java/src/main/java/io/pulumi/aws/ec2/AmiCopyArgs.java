// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.ec2;

import io.pulumi.aws.ec2.inputs.AmiCopyEbsBlockDeviceArgs;
import io.pulumi.aws.ec2.inputs.AmiCopyEphemeralBlockDeviceArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.InputImport;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class AmiCopyArgs extends io.pulumi.resources.ResourceArgs {

    public static final AmiCopyArgs Empty = new AmiCopyArgs();

    /**
     * A longer, human-readable description for the AMI.
     * 
     */
    @InputImport(name="description")
      private final @Nullable Output<String> description;

    public Output<String> getDescription() {
        return this.description == null ? Output.empty() : this.description;
    }

    /**
     * The ARN of the Outpost to which to copy the AMI.
     * Only specify this parameter when copying an AMI from an AWS Region to an Outpost. The AMI must be in the Region of the destination Outpost.
     * 
     */
    @InputImport(name="destinationOutpostArn")
      private final @Nullable Output<String> destinationOutpostArn;

    public Output<String> getDestinationOutpostArn() {
        return this.destinationOutpostArn == null ? Output.empty() : this.destinationOutpostArn;
    }

    /**
     * Nested block describing an EBS block device that should be
     * attached to created instances. The structure of this block is described below.
     * 
     */
    @InputImport(name="ebsBlockDevices")
      private final @Nullable Output<List<AmiCopyEbsBlockDeviceArgs>> ebsBlockDevices;

    public Output<List<AmiCopyEbsBlockDeviceArgs>> getEbsBlockDevices() {
        return this.ebsBlockDevices == null ? Output.empty() : this.ebsBlockDevices;
    }

    /**
     * Boolean controlling whether the created EBS volumes will be encrypted. Can't be used with `snapshot_id`.
     * 
     */
    @InputImport(name="encrypted")
      private final @Nullable Output<Boolean> encrypted;

    public Output<Boolean> getEncrypted() {
        return this.encrypted == null ? Output.empty() : this.encrypted;
    }

    /**
     * Nested block describing an ephemeral block device that
     * should be attached to created instances. The structure of this block is described below.
     * 
     */
    @InputImport(name="ephemeralBlockDevices")
      private final @Nullable Output<List<AmiCopyEphemeralBlockDeviceArgs>> ephemeralBlockDevices;

    public Output<List<AmiCopyEphemeralBlockDeviceArgs>> getEphemeralBlockDevices() {
        return this.ephemeralBlockDevices == null ? Output.empty() : this.ephemeralBlockDevices;
    }

    /**
     * The full ARN of the AWS Key Management Service (AWS KMS) CMK to use when encrypting the snapshots of
     * an image during a copy operation. This parameter is only required if you want to use a non-default CMK;
     * if this parameter is not specified, the default CMK for EBS is used
     * 
     */
    @InputImport(name="kmsKeyId")
      private final @Nullable Output<String> kmsKeyId;

    public Output<String> getKmsKeyId() {
        return this.kmsKeyId == null ? Output.empty() : this.kmsKeyId;
    }

    /**
     * A region-unique name for the AMI.
     * 
     */
    @InputImport(name="name")
      private final @Nullable Output<String> name;

    public Output<String> getName() {
        return this.name == null ? Output.empty() : this.name;
    }

    /**
     * The id of the AMI to copy. This id must be valid in the region
     * given by `source_ami_region`.
     * 
     */
    @InputImport(name="sourceAmiId", required=true)
      private final Output<String> sourceAmiId;

    public Output<String> getSourceAmiId() {
        return this.sourceAmiId;
    }

    /**
     * The region from which the AMI will be copied. This may be the
     * same as the AWS provider region in order to create a copy within the same region.
     * 
     */
    @InputImport(name="sourceAmiRegion", required=true)
      private final Output<String> sourceAmiRegion;

    public Output<String> getSourceAmiRegion() {
        return this.sourceAmiRegion;
    }

    /**
     * A map of tags to assign to the resource. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @InputImport(name="tags")
      private final @Nullable Output<Map<String,String>> tags;

    public Output<Map<String,String>> getTags() {
        return this.tags == null ? Output.empty() : this.tags;
    }

    public AmiCopyArgs(
        @Nullable Output<String> description,
        @Nullable Output<String> destinationOutpostArn,
        @Nullable Output<List<AmiCopyEbsBlockDeviceArgs>> ebsBlockDevices,
        @Nullable Output<Boolean> encrypted,
        @Nullable Output<List<AmiCopyEphemeralBlockDeviceArgs>> ephemeralBlockDevices,
        @Nullable Output<String> kmsKeyId,
        @Nullable Output<String> name,
        Output<String> sourceAmiId,
        Output<String> sourceAmiRegion,
        @Nullable Output<Map<String,String>> tags) {
        this.description = description;
        this.destinationOutpostArn = destinationOutpostArn;
        this.ebsBlockDevices = ebsBlockDevices;
        this.encrypted = encrypted;
        this.ephemeralBlockDevices = ephemeralBlockDevices;
        this.kmsKeyId = kmsKeyId;
        this.name = name;
        this.sourceAmiId = Objects.requireNonNull(sourceAmiId, "expected parameter 'sourceAmiId' to be non-null");
        this.sourceAmiRegion = Objects.requireNonNull(sourceAmiRegion, "expected parameter 'sourceAmiRegion' to be non-null");
        this.tags = tags;
    }

    private AmiCopyArgs() {
        this.description = Output.empty();
        this.destinationOutpostArn = Output.empty();
        this.ebsBlockDevices = Output.empty();
        this.encrypted = Output.empty();
        this.ephemeralBlockDevices = Output.empty();
        this.kmsKeyId = Output.empty();
        this.name = Output.empty();
        this.sourceAmiId = Output.empty();
        this.sourceAmiRegion = Output.empty();
        this.tags = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AmiCopyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> description;
        private @Nullable Output<String> destinationOutpostArn;
        private @Nullable Output<List<AmiCopyEbsBlockDeviceArgs>> ebsBlockDevices;
        private @Nullable Output<Boolean> encrypted;
        private @Nullable Output<List<AmiCopyEphemeralBlockDeviceArgs>> ephemeralBlockDevices;
        private @Nullable Output<String> kmsKeyId;
        private @Nullable Output<String> name;
        private Output<String> sourceAmiId;
        private Output<String> sourceAmiRegion;
        private @Nullable Output<Map<String,String>> tags;

        public Builder() {
    	      // Empty
        }

        public Builder(AmiCopyArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.destinationOutpostArn = defaults.destinationOutpostArn;
    	      this.ebsBlockDevices = defaults.ebsBlockDevices;
    	      this.encrypted = defaults.encrypted;
    	      this.ephemeralBlockDevices = defaults.ephemeralBlockDevices;
    	      this.kmsKeyId = defaults.kmsKeyId;
    	      this.name = defaults.name;
    	      this.sourceAmiId = defaults.sourceAmiId;
    	      this.sourceAmiRegion = defaults.sourceAmiRegion;
    	      this.tags = defaults.tags;
        }

        public Builder description(@Nullable Output<String> description) {
            this.description = description;
            return this;
        }

        public Builder description(@Nullable String description) {
            this.description = Output.ofNullable(description);
            return this;
        }

        public Builder destinationOutpostArn(@Nullable Output<String> destinationOutpostArn) {
            this.destinationOutpostArn = destinationOutpostArn;
            return this;
        }

        public Builder destinationOutpostArn(@Nullable String destinationOutpostArn) {
            this.destinationOutpostArn = Output.ofNullable(destinationOutpostArn);
            return this;
        }

        public Builder ebsBlockDevices(@Nullable Output<List<AmiCopyEbsBlockDeviceArgs>> ebsBlockDevices) {
            this.ebsBlockDevices = ebsBlockDevices;
            return this;
        }

        public Builder ebsBlockDevices(@Nullable List<AmiCopyEbsBlockDeviceArgs> ebsBlockDevices) {
            this.ebsBlockDevices = Output.ofNullable(ebsBlockDevices);
            return this;
        }

        public Builder encrypted(@Nullable Output<Boolean> encrypted) {
            this.encrypted = encrypted;
            return this;
        }

        public Builder encrypted(@Nullable Boolean encrypted) {
            this.encrypted = Output.ofNullable(encrypted);
            return this;
        }

        public Builder ephemeralBlockDevices(@Nullable Output<List<AmiCopyEphemeralBlockDeviceArgs>> ephemeralBlockDevices) {
            this.ephemeralBlockDevices = ephemeralBlockDevices;
            return this;
        }

        public Builder ephemeralBlockDevices(@Nullable List<AmiCopyEphemeralBlockDeviceArgs> ephemeralBlockDevices) {
            this.ephemeralBlockDevices = Output.ofNullable(ephemeralBlockDevices);
            return this;
        }

        public Builder kmsKeyId(@Nullable Output<String> kmsKeyId) {
            this.kmsKeyId = kmsKeyId;
            return this;
        }

        public Builder kmsKeyId(@Nullable String kmsKeyId) {
            this.kmsKeyId = Output.ofNullable(kmsKeyId);
            return this;
        }

        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }

        public Builder name(@Nullable String name) {
            this.name = Output.ofNullable(name);
            return this;
        }

        public Builder sourceAmiId(Output<String> sourceAmiId) {
            this.sourceAmiId = Objects.requireNonNull(sourceAmiId);
            return this;
        }

        public Builder sourceAmiId(String sourceAmiId) {
            this.sourceAmiId = Output.of(Objects.requireNonNull(sourceAmiId));
            return this;
        }

        public Builder sourceAmiRegion(Output<String> sourceAmiRegion) {
            this.sourceAmiRegion = Objects.requireNonNull(sourceAmiRegion);
            return this;
        }

        public Builder sourceAmiRegion(String sourceAmiRegion) {
            this.sourceAmiRegion = Output.of(Objects.requireNonNull(sourceAmiRegion));
            return this;
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }

        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = Output.ofNullable(tags);
            return this;
        }
        public AmiCopyArgs build() {
            return new AmiCopyArgs(description, destinationOutpostArn, ebsBlockDevices, encrypted, ephemeralBlockDevices, kmsKeyId, name, sourceAmiId, sourceAmiRegion, tags);
        }
    }
}
