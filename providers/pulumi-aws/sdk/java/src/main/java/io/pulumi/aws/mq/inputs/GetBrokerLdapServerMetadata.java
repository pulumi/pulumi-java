// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.mq.inputs;

import io.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class GetBrokerLdapServerMetadata extends io.pulumi.resources.InvokeArgs {

    public static final GetBrokerLdapServerMetadata Empty = new GetBrokerLdapServerMetadata();

    @Import(name="hosts", required=true)
      private final List<String> hosts;

    public List<String> hosts() {
        return this.hosts;
    }

    @Import(name="roleBase", required=true)
      private final String roleBase;

    public String roleBase() {
        return this.roleBase;
    }

    @Import(name="roleName", required=true)
      private final String roleName;

    public String roleName() {
        return this.roleName;
    }

    @Import(name="roleSearchMatching", required=true)
      private final String roleSearchMatching;

    public String roleSearchMatching() {
        return this.roleSearchMatching;
    }

    @Import(name="roleSearchSubtree", required=true)
      private final Boolean roleSearchSubtree;

    public Boolean roleSearchSubtree() {
        return this.roleSearchSubtree;
    }

    @Import(name="serviceAccountPassword", required=true)
      private final String serviceAccountPassword;

    public String serviceAccountPassword() {
        return this.serviceAccountPassword;
    }

    @Import(name="serviceAccountUsername", required=true)
      private final String serviceAccountUsername;

    public String serviceAccountUsername() {
        return this.serviceAccountUsername;
    }

    @Import(name="userBase", required=true)
      private final String userBase;

    public String userBase() {
        return this.userBase;
    }

    @Import(name="userRoleName", required=true)
      private final String userRoleName;

    public String userRoleName() {
        return this.userRoleName;
    }

    @Import(name="userSearchMatching", required=true)
      private final String userSearchMatching;

    public String userSearchMatching() {
        return this.userSearchMatching;
    }

    @Import(name="userSearchSubtree", required=true)
      private final Boolean userSearchSubtree;

    public Boolean userSearchSubtree() {
        return this.userSearchSubtree;
    }

    public GetBrokerLdapServerMetadata(
        List<String> hosts,
        String roleBase,
        String roleName,
        String roleSearchMatching,
        Boolean roleSearchSubtree,
        String serviceAccountPassword,
        String serviceAccountUsername,
        String userBase,
        String userRoleName,
        String userSearchMatching,
        Boolean userSearchSubtree) {
        this.hosts = Objects.requireNonNull(hosts, "expected parameter 'hosts' to be non-null");
        this.roleBase = Objects.requireNonNull(roleBase, "expected parameter 'roleBase' to be non-null");
        this.roleName = Objects.requireNonNull(roleName, "expected parameter 'roleName' to be non-null");
        this.roleSearchMatching = Objects.requireNonNull(roleSearchMatching, "expected parameter 'roleSearchMatching' to be non-null");
        this.roleSearchSubtree = Objects.requireNonNull(roleSearchSubtree, "expected parameter 'roleSearchSubtree' to be non-null");
        this.serviceAccountPassword = Objects.requireNonNull(serviceAccountPassword, "expected parameter 'serviceAccountPassword' to be non-null");
        this.serviceAccountUsername = Objects.requireNonNull(serviceAccountUsername, "expected parameter 'serviceAccountUsername' to be non-null");
        this.userBase = Objects.requireNonNull(userBase, "expected parameter 'userBase' to be non-null");
        this.userRoleName = Objects.requireNonNull(userRoleName, "expected parameter 'userRoleName' to be non-null");
        this.userSearchMatching = Objects.requireNonNull(userSearchMatching, "expected parameter 'userSearchMatching' to be non-null");
        this.userSearchSubtree = Objects.requireNonNull(userSearchSubtree, "expected parameter 'userSearchSubtree' to be non-null");
    }

    private GetBrokerLdapServerMetadata() {
        this.hosts = List.of();
        this.roleBase = null;
        this.roleName = null;
        this.roleSearchMatching = null;
        this.roleSearchSubtree = null;
        this.serviceAccountPassword = null;
        this.serviceAccountUsername = null;
        this.userBase = null;
        this.userRoleName = null;
        this.userSearchMatching = null;
        this.userSearchSubtree = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetBrokerLdapServerMetadata defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<String> hosts;
        private String roleBase;
        private String roleName;
        private String roleSearchMatching;
        private Boolean roleSearchSubtree;
        private String serviceAccountPassword;
        private String serviceAccountUsername;
        private String userBase;
        private String userRoleName;
        private String userSearchMatching;
        private Boolean userSearchSubtree;

        public Builder() {
    	      // Empty
        }

        public Builder(GetBrokerLdapServerMetadata defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.hosts = defaults.hosts;
    	      this.roleBase = defaults.roleBase;
    	      this.roleName = defaults.roleName;
    	      this.roleSearchMatching = defaults.roleSearchMatching;
    	      this.roleSearchSubtree = defaults.roleSearchSubtree;
    	      this.serviceAccountPassword = defaults.serviceAccountPassword;
    	      this.serviceAccountUsername = defaults.serviceAccountUsername;
    	      this.userBase = defaults.userBase;
    	      this.userRoleName = defaults.userRoleName;
    	      this.userSearchMatching = defaults.userSearchMatching;
    	      this.userSearchSubtree = defaults.userSearchSubtree;
        }

        public Builder hosts(List<String> hosts) {
            this.hosts = Objects.requireNonNull(hosts);
            return this;
        }
        public Builder hosts(String... hosts) {
            return hosts(List.of(hosts));
        }
        public Builder roleBase(String roleBase) {
            this.roleBase = Objects.requireNonNull(roleBase);
            return this;
        }
        public Builder roleName(String roleName) {
            this.roleName = Objects.requireNonNull(roleName);
            return this;
        }
        public Builder roleSearchMatching(String roleSearchMatching) {
            this.roleSearchMatching = Objects.requireNonNull(roleSearchMatching);
            return this;
        }
        public Builder roleSearchSubtree(Boolean roleSearchSubtree) {
            this.roleSearchSubtree = Objects.requireNonNull(roleSearchSubtree);
            return this;
        }
        public Builder serviceAccountPassword(String serviceAccountPassword) {
            this.serviceAccountPassword = Objects.requireNonNull(serviceAccountPassword);
            return this;
        }
        public Builder serviceAccountUsername(String serviceAccountUsername) {
            this.serviceAccountUsername = Objects.requireNonNull(serviceAccountUsername);
            return this;
        }
        public Builder userBase(String userBase) {
            this.userBase = Objects.requireNonNull(userBase);
            return this;
        }
        public Builder userRoleName(String userRoleName) {
            this.userRoleName = Objects.requireNonNull(userRoleName);
            return this;
        }
        public Builder userSearchMatching(String userSearchMatching) {
            this.userSearchMatching = Objects.requireNonNull(userSearchMatching);
            return this;
        }
        public Builder userSearchSubtree(Boolean userSearchSubtree) {
            this.userSearchSubtree = Objects.requireNonNull(userSearchSubtree);
            return this;
        }        public GetBrokerLdapServerMetadata build() {
            return new GetBrokerLdapServerMetadata(hosts, roleBase, roleName, roleSearchMatching, roleSearchSubtree, serviceAccountPassword, serviceAccountUsername, userBase, userRoleName, userSearchMatching, userSearchSubtree);
        }
    }
}
