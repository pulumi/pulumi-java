// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.ec2;

import io.pulumi.aws.Utilities;
import io.pulumi.aws.ec2.TrafficMirrorFilterRuleArgs;
import io.pulumi.aws.ec2.inputs.TrafficMirrorFilterRuleState;
import io.pulumi.aws.ec2.outputs.TrafficMirrorFilterRuleDestinationPortRange;
import io.pulumi.aws.ec2.outputs.TrafficMirrorFilterRuleSourcePortRange;
import io.pulumi.core.Input;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.OutputExport;
import io.pulumi.core.annotations.ResourceType;
import java.lang.Integer;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * Provides an Traffic mirror filter rule.\
 * Read [limits and considerations](https://docs.aws.amazon.com/vpc/latest/mirroring/traffic-mirroring-considerations.html) for traffic mirroring
 * 
 * ## Example Usage
 * 
 * ## Import
 * 
 * Traffic mirror rules can be imported using the `traffic_mirror_filter_id` and `id` separated by `:` e.g.,
 * 
 * ```sh
 *  $ pulumi import aws:ec2/trafficMirrorFilterRule:TrafficMirrorFilterRule rule tmf-0fbb93ddf38198f64:tmfr-05a458f06445d0aee
 * ```
 * 
 */
@ResourceType(type="aws:ec2/trafficMirrorFilterRule:TrafficMirrorFilterRule")
public class TrafficMirrorFilterRule extends io.pulumi.resources.CustomResource {
    /**
     * ARN of the traffic mirror filter rule.
     * 
     */
    @OutputExport(name="arn", type=String.class, parameters={})
    private Output<String> arn;

    /**
     * @return ARN of the traffic mirror filter rule.
     * 
     */
    public Output<String> getArn() {
        return this.arn;
    }
    /**
     * Description of the traffic mirror filter rule.
     * 
     */
    @OutputExport(name="description", type=String.class, parameters={})
    private Output</* @Nullable */ String> description;

    /**
     * @return Description of the traffic mirror filter rule.
     * 
     */
    public Output</* @Nullable */ String> getDescription() {
        return this.description;
    }
    /**
     * Destination CIDR block to assign to the Traffic Mirror rule.
     * 
     */
    @OutputExport(name="destinationCidrBlock", type=String.class, parameters={})
    private Output<String> destinationCidrBlock;

    /**
     * @return Destination CIDR block to assign to the Traffic Mirror rule.
     * 
     */
    public Output<String> getDestinationCidrBlock() {
        return this.destinationCidrBlock;
    }
    /**
     * Destination port range. Supported only when the protocol is set to TCP(6) or UDP(17). See Traffic mirror port range documented below
     * 
     */
    @OutputExport(name="destinationPortRange", type=TrafficMirrorFilterRuleDestinationPortRange.class, parameters={})
    private Output</* @Nullable */ TrafficMirrorFilterRuleDestinationPortRange> destinationPortRange;

    /**
     * @return Destination port range. Supported only when the protocol is set to TCP(6) or UDP(17). See Traffic mirror port range documented below
     * 
     */
    public Output</* @Nullable */ TrafficMirrorFilterRuleDestinationPortRange> getDestinationPortRange() {
        return this.destinationPortRange;
    }
    /**
     * Protocol number, for example 17 (UDP), to assign to the Traffic Mirror rule. For information about the protocol value, see [Protocol Numbers](https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml) on the Internet Assigned Numbers Authority (IANA) website.
     * 
     */
    @OutputExport(name="protocol", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> protocol;

    /**
     * @return Protocol number, for example 17 (UDP), to assign to the Traffic Mirror rule. For information about the protocol value, see [Protocol Numbers](https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml) on the Internet Assigned Numbers Authority (IANA) website.
     * 
     */
    public Output</* @Nullable */ Integer> getProtocol() {
        return this.protocol;
    }
    /**
     * Action to take (accept | reject) on the filtered traffic. Valid values are `accept` and `reject`
     * 
     */
    @OutputExport(name="ruleAction", type=String.class, parameters={})
    private Output<String> ruleAction;

    /**
     * @return Action to take (accept | reject) on the filtered traffic. Valid values are `accept` and `reject`
     * 
     */
    public Output<String> getRuleAction() {
        return this.ruleAction;
    }
    /**
     * Number of the Traffic Mirror rule. This number must be unique for each Traffic Mirror rule in a given direction. The rules are processed in ascending order by rule number.
     * 
     */
    @OutputExport(name="ruleNumber", type=Integer.class, parameters={})
    private Output<Integer> ruleNumber;

    /**
     * @return Number of the Traffic Mirror rule. This number must be unique for each Traffic Mirror rule in a given direction. The rules are processed in ascending order by rule number.
     * 
     */
    public Output<Integer> getRuleNumber() {
        return this.ruleNumber;
    }
    /**
     * Source CIDR block to assign to the Traffic Mirror rule.
     * 
     */
    @OutputExport(name="sourceCidrBlock", type=String.class, parameters={})
    private Output<String> sourceCidrBlock;

    /**
     * @return Source CIDR block to assign to the Traffic Mirror rule.
     * 
     */
    public Output<String> getSourceCidrBlock() {
        return this.sourceCidrBlock;
    }
    /**
     * Source port range. Supported only when the protocol is set to TCP(6) or UDP(17). See Traffic mirror port range documented below
     * 
     */
    @OutputExport(name="sourcePortRange", type=TrafficMirrorFilterRuleSourcePortRange.class, parameters={})
    private Output</* @Nullable */ TrafficMirrorFilterRuleSourcePortRange> sourcePortRange;

    /**
     * @return Source port range. Supported only when the protocol is set to TCP(6) or UDP(17). See Traffic mirror port range documented below
     * 
     */
    public Output</* @Nullable */ TrafficMirrorFilterRuleSourcePortRange> getSourcePortRange() {
        return this.sourcePortRange;
    }
    /**
     * Direction of traffic to be captured. Valid values are `ingress` and `egress`
     * 
     */
    @OutputExport(name="trafficDirection", type=String.class, parameters={})
    private Output<String> trafficDirection;

    /**
     * @return Direction of traffic to be captured. Valid values are `ingress` and `egress`
     * 
     */
    public Output<String> getTrafficDirection() {
        return this.trafficDirection;
    }
    /**
     * ID of the traffic mirror filter to which this rule should be added
     * 
     */
    @OutputExport(name="trafficMirrorFilterId", type=String.class, parameters={})
    private Output<String> trafficMirrorFilterId;

    /**
     * @return ID of the traffic mirror filter to which this rule should be added
     * 
     */
    public Output<String> getTrafficMirrorFilterId() {
        return this.trafficMirrorFilterId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public TrafficMirrorFilterRule(String name) {
        this(name, TrafficMirrorFilterRuleArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public TrafficMirrorFilterRule(String name, TrafficMirrorFilterRuleArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public TrafficMirrorFilterRule(String name, TrafficMirrorFilterRuleArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:ec2/trafficMirrorFilterRule:TrafficMirrorFilterRule", name, args == null ? TrafficMirrorFilterRuleArgs.Empty : args, makeResourceOptions(options, Input.empty()));
    }

    private TrafficMirrorFilterRule(String name, Input<String> id, @Nullable TrafficMirrorFilterRuleState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:ec2/trafficMirrorFilterRule:TrafficMirrorFilterRule", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Input<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .setVersion(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static TrafficMirrorFilterRule get(String name, Input<String> id, @Nullable TrafficMirrorFilterRuleState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new TrafficMirrorFilterRule(name, id, state, options);
    }
}
