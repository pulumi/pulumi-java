// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.cloud9;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;


public final class EnvironmentMembershipArgs extends io.pulumi.resources.ResourceArgs {

    public static final EnvironmentMembershipArgs Empty = new EnvironmentMembershipArgs();

    /**
     * The ID of the environment that contains the environment member you want to add.
     * 
     */
    @InputImport(name="environmentId", required=true)
      private final Output<String> environmentId;

    public Output<String> getEnvironmentId() {
        return this.environmentId;
    }

    /**
     * The type of environment member permissions you want to associate with this environment member. Allowed values are `read-only` and `read-write` .
     * 
     */
    @InputImport(name="permissions", required=true)
      private final Output<String> permissions;

    public Output<String> getPermissions() {
        return this.permissions;
    }

    /**
     * The Amazon Resource Name (ARN) of the environment member you want to add.
     * 
     */
    @InputImport(name="userArn", required=true)
      private final Output<String> userArn;

    public Output<String> getUserArn() {
        return this.userArn;
    }

    public EnvironmentMembershipArgs(
        Output<String> environmentId,
        Output<String> permissions,
        Output<String> userArn) {
        this.environmentId = Objects.requireNonNull(environmentId, "expected parameter 'environmentId' to be non-null");
        this.permissions = Objects.requireNonNull(permissions, "expected parameter 'permissions' to be non-null");
        this.userArn = Objects.requireNonNull(userArn, "expected parameter 'userArn' to be non-null");
    }

    private EnvironmentMembershipArgs() {
        this.environmentId = Output.empty();
        this.permissions = Output.empty();
        this.userArn = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(EnvironmentMembershipArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> environmentId;
        private Output<String> permissions;
        private Output<String> userArn;

        public Builder() {
    	      // Empty
        }

        public Builder(EnvironmentMembershipArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.environmentId = defaults.environmentId;
    	      this.permissions = defaults.permissions;
    	      this.userArn = defaults.userArn;
        }

        public Builder environmentId(Output<String> environmentId) {
            this.environmentId = Objects.requireNonNull(environmentId);
            return this;
        }

        public Builder environmentId(String environmentId) {
            this.environmentId = Output.of(Objects.requireNonNull(environmentId));
            return this;
        }

        public Builder permissions(Output<String> permissions) {
            this.permissions = Objects.requireNonNull(permissions);
            return this;
        }

        public Builder permissions(String permissions) {
            this.permissions = Output.of(Objects.requireNonNull(permissions));
            return this;
        }

        public Builder userArn(Output<String> userArn) {
            this.userArn = Objects.requireNonNull(userArn);
            return this;
        }

        public Builder userArn(String userArn) {
            this.userArn = Output.of(Objects.requireNonNull(userArn));
            return this;
        }
        public EnvironmentMembershipArgs build() {
            return new EnvironmentMembershipArgs(environmentId, permissions, userArn);
        }
    }
}
