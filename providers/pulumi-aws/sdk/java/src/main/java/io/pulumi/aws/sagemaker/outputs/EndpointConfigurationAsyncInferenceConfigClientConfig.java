// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.sagemaker.outputs;

import io.pulumi.core.annotations.OutputCustomType;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class EndpointConfigurationAsyncInferenceConfigClientConfig {
    /**
     * The maximum number of concurrent requests sent by the SageMaker client to the model container. If no value is provided, Amazon SageMaker will choose an optimal value for you.
     * 
     */
    private final @Nullable Integer maxConcurrentInvocationsPerInstance;

    @OutputCustomType.Constructor({"maxConcurrentInvocationsPerInstance"})
    private EndpointConfigurationAsyncInferenceConfigClientConfig(@Nullable Integer maxConcurrentInvocationsPerInstance) {
        this.maxConcurrentInvocationsPerInstance = maxConcurrentInvocationsPerInstance;
    }

    /**
     * The maximum number of concurrent requests sent by the SageMaker client to the model container. If no value is provided, Amazon SageMaker will choose an optimal value for you.
     * 
    */
    public Optional<Integer> getMaxConcurrentInvocationsPerInstance() {
        return Optional.ofNullable(this.maxConcurrentInvocationsPerInstance);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(EndpointConfigurationAsyncInferenceConfigClientConfig defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Integer maxConcurrentInvocationsPerInstance;

        public Builder() {
    	      // Empty
        }

        public Builder(EndpointConfigurationAsyncInferenceConfigClientConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.maxConcurrentInvocationsPerInstance = defaults.maxConcurrentInvocationsPerInstance;
        }

        public Builder setMaxConcurrentInvocationsPerInstance(@Nullable Integer maxConcurrentInvocationsPerInstance) {
            this.maxConcurrentInvocationsPerInstance = maxConcurrentInvocationsPerInstance;
            return this;
        }
        public EndpointConfigurationAsyncInferenceConfigClientConfig build() {
            return new EndpointConfigurationAsyncInferenceConfigClientConfig(maxConcurrentInvocationsPerInstance);
        }
    }
}
