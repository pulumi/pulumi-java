// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.s3control.inputs;

import io.pulumi.aws.s3control.inputs.MultiRegionAccessPointDetailsPublicAccessBlockArgs;
import io.pulumi.aws.s3control.inputs.MultiRegionAccessPointDetailsRegionArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class MultiRegionAccessPointDetailsArgs extends io.pulumi.resources.ResourceArgs {

    public static final MultiRegionAccessPointDetailsArgs Empty = new MultiRegionAccessPointDetailsArgs();

    /**
     * The name of the Multi-Region Access Point.
     * 
     */
    @Import(name="name", required=true)
      private final Output<String> name;

    public Output<String> getName() {
        return this.name;
    }

    /**
     * Configuration block to manage the `PublicAccessBlock` configuration that you want to apply to this Multi-Region Access Point. You can enable the configuration options in any combination. See Public Access Block Configuration below for more details.
     * 
     */
    @Import(name="publicAccessBlock")
      private final @Nullable Output<MultiRegionAccessPointDetailsPublicAccessBlockArgs> publicAccessBlock;

    public Output<MultiRegionAccessPointDetailsPublicAccessBlockArgs> getPublicAccessBlock() {
        return this.publicAccessBlock == null ? Codegen.empty() : this.publicAccessBlock;
    }

    /**
     * The Region configuration block to specify the bucket associated with the Multi-Region Access Point. See Region Configuration below for more details.
     * 
     */
    @Import(name="regions", required=true)
      private final Output<List<MultiRegionAccessPointDetailsRegionArgs>> regions;

    public Output<List<MultiRegionAccessPointDetailsRegionArgs>> getRegions() {
        return this.regions;
    }

    public MultiRegionAccessPointDetailsArgs(
        Output<String> name,
        @Nullable Output<MultiRegionAccessPointDetailsPublicAccessBlockArgs> publicAccessBlock,
        Output<List<MultiRegionAccessPointDetailsRegionArgs>> regions) {
        this.name = Objects.requireNonNull(name, "expected parameter 'name' to be non-null");
        this.publicAccessBlock = publicAccessBlock;
        this.regions = Objects.requireNonNull(regions, "expected parameter 'regions' to be non-null");
    }

    private MultiRegionAccessPointDetailsArgs() {
        this.name = Codegen.empty();
        this.publicAccessBlock = Codegen.empty();
        this.regions = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MultiRegionAccessPointDetailsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> name;
        private @Nullable Output<MultiRegionAccessPointDetailsPublicAccessBlockArgs> publicAccessBlock;
        private Output<List<MultiRegionAccessPointDetailsRegionArgs>> regions;

        public Builder() {
    	      // Empty
        }

        public Builder(MultiRegionAccessPointDetailsArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.name = defaults.name;
    	      this.publicAccessBlock = defaults.publicAccessBlock;
    	      this.regions = defaults.regions;
        }

        public Builder name(Output<String> name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder name(String name) {
            this.name = Output.of(Objects.requireNonNull(name));
            return this;
        }
        public Builder publicAccessBlock(@Nullable Output<MultiRegionAccessPointDetailsPublicAccessBlockArgs> publicAccessBlock) {
            this.publicAccessBlock = publicAccessBlock;
            return this;
        }
        public Builder publicAccessBlock(@Nullable MultiRegionAccessPointDetailsPublicAccessBlockArgs publicAccessBlock) {
            this.publicAccessBlock = Codegen.ofNullable(publicAccessBlock);
            return this;
        }
        public Builder regions(Output<List<MultiRegionAccessPointDetailsRegionArgs>> regions) {
            this.regions = Objects.requireNonNull(regions);
            return this;
        }
        public Builder regions(List<MultiRegionAccessPointDetailsRegionArgs> regions) {
            this.regions = Output.of(Objects.requireNonNull(regions));
            return this;
        }
        public Builder regions(MultiRegionAccessPointDetailsRegionArgs... regions) {
            return regions(List.of(regions));
        }        public MultiRegionAccessPointDetailsArgs build() {
            return new MultiRegionAccessPointDetailsArgs(name, publicAccessBlock, regions);
        }
    }
}
