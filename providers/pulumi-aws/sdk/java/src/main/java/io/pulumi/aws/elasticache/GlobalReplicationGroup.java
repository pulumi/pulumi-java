// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.elasticache;

import io.pulumi.aws.Utilities;
import io.pulumi.aws.elasticache.GlobalReplicationGroupArgs;
import io.pulumi.aws.elasticache.inputs.GlobalReplicationGroupState;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Export;
import io.pulumi.core.annotations.ResourceType;
import java.lang.Boolean;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * Provides an ElastiCache Global Replication Group resource, which manages replication between two or more Replication Groups in different regions. For more information, see the [ElastiCache User Guide](https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/Redis-Global-Datastore.html).
 * 
 * {{% examples %}}
 * ## Example Usage
 * {{% example %}}
 * ### Global replication group with one secondary replication group
 * 
 * The global replication group depends on the primary group existing. Secondary replication groups depend on the global replication group. the provider dependency management will handle this transparently using resource value references.
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 * 
 * const primary = new aws.elasticache.ReplicationGroup("primary", {
 *     replicationGroupDescription: "primary replication group",
 *     engine: "redis",
 *     engineVersion: "5.0.6",
 *     nodeType: "cache.m5.large",
 *     numberCacheClusters: 1,
 * });
 * const example = new aws.elasticache.GlobalReplicationGroup("example", {
 *     globalReplicationGroupIdSuffix: "example",
 *     primaryReplicationGroupId: primary.id,
 * });
 * const secondary = new aws.elasticache.ReplicationGroup("secondary", {
 *     replicationGroupDescription: "secondary replication group",
 *     globalReplicationGroupId: example.globalReplicationGroupId,
 *     numberCacheClusters: 1,
 * }, {
 *     provider: aws.other_region,
 * });
 * ```
 * ```python
 * import pulumi
 * import pulumi_aws as aws
 * 
 * primary = aws.elasticache.ReplicationGroup("primary",
 *     replication_group_description="primary replication group",
 *     engine="redis",
 *     engine_version="5.0.6",
 *     node_type="cache.m5.large",
 *     number_cache_clusters=1)
 * example = aws.elasticache.GlobalReplicationGroup("example",
 *     global_replication_group_id_suffix="example",
 *     primary_replication_group_id=primary.id)
 * secondary = aws.elasticache.ReplicationGroup("secondary",
 *     replication_group_description="secondary replication group",
 *     global_replication_group_id=example.global_replication_group_id,
 *     number_cache_clusters=1,
 *     opts=pulumi.ResourceOptions(provider=aws["other_region"]))
 * ```
 * ```csharp
 * using Pulumi;
 * using Aws = Pulumi.Aws;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var primary = new Aws.ElastiCache.ReplicationGroup("primary", new Aws.ElastiCache.ReplicationGroupArgs
 *         {
 *             ReplicationGroupDescription = "primary replication group",
 *             Engine = "redis",
 *             EngineVersion = "5.0.6",
 *             NodeType = "cache.m5.large",
 *             NumberCacheClusters = 1,
 *         });
 *         var example = new Aws.ElastiCache.GlobalReplicationGroup("example", new Aws.ElastiCache.GlobalReplicationGroupArgs
 *         {
 *             GlobalReplicationGroupIdSuffix = "example",
 *             PrimaryReplicationGroupId = primary.Id,
 *         });
 *         var secondary = new Aws.ElastiCache.ReplicationGroup("secondary", new Aws.ElastiCache.ReplicationGroupArgs
 *         {
 *             ReplicationGroupDescription = "secondary replication group",
 *             GlobalReplicationGroupId = example.GlobalReplicationGroupId,
 *             NumberCacheClusters = 1,
 *         }, new CustomResourceOptions
 *         {
 *             Provider = aws.Other_region,
 *         });
 *     }
 * 
 * }
 * ```
 * ```go
 * package main
 * 
 * import (
 * 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/elasticache"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		primary, err := elasticache.NewReplicationGroup(ctx, "primary", &elasticache.ReplicationGroupArgs{
 * 			ReplicationGroupDescription: pulumi.String("primary replication group"),
 * 			Engine:                      pulumi.String("redis"),
 * 			EngineVersion:               pulumi.String("5.0.6"),
 * 			NodeType:                    pulumi.String("cache.m5.large"),
 * 			NumberCacheClusters:         pulumi.Int(1),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		example, err := elasticache.NewGlobalReplicationGroup(ctx, "example", &elasticache.GlobalReplicationGroupArgs{
 * 			GlobalReplicationGroupIdSuffix: pulumi.String("example"),
 * 			PrimaryReplicationGroupId:      primary.ID(),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		_, err = elasticache.NewReplicationGroup(ctx, "secondary", &elasticache.ReplicationGroupArgs{
 * 			ReplicationGroupDescription: pulumi.String("secondary replication group"),
 * 			GlobalReplicationGroupId:    example.GlobalReplicationGroupId,
 * 			NumberCacheClusters:         pulumi.Int(1),
 * 		}, pulumi.Provider(aws.Other_region))
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * ```
 * {{% /example %}}
 * {{% /examples %}}
 * 
 * ## Import
 * 
 * ElastiCache Global Replication Groups can be imported using the `global_replication_group_id`, e.g.,
 * 
 * ```sh
 *  $ pulumi import aws:elasticache/globalReplicationGroup:GlobalReplicationGroup my_global_replication_group okuqm-global-replication-group-1
 * ```
 * 
 *  
 */
@ResourceType(type="aws:elasticache/globalReplicationGroup:GlobalReplicationGroup")
public class GlobalReplicationGroup extends io.pulumi.resources.CustomResource {
    /**
     * (**DEPRECATED** use `engine_version_actual` instead) The full version number of the cache engine running on the members of this global replication group.
     * 
     * @Deprecated
     * Use engine_version_actual instead
     */
    @Deprecated /* Use engine_version_actual instead */
    @Export(name="actualEngineVersion", type=String.class, parameters={})
    private Output<String> actualEngineVersion;

    /**
     * @return (**DEPRECATED** use `engine_version_actual` instead) The full version number of the cache engine running on the members of this global replication group.
     * 
     */
    public Output<String> getActualEngineVersion() {
        return this.actualEngineVersion;
    }
    /**
     * The ARN of the ElastiCache Global Replication Group.
     * 
     */
    @Export(name="arn", type=String.class, parameters={})
    private Output<String> arn;

    /**
     * @return The ARN of the ElastiCache Global Replication Group.
     * 
     */
    public Output<String> getArn() {
        return this.arn;
    }
    /**
     * A flag that indicate whether the encryption at rest is enabled.
     * 
     */
    @Export(name="atRestEncryptionEnabled", type=Boolean.class, parameters={})
    private Output<Boolean> atRestEncryptionEnabled;

    /**
     * @return A flag that indicate whether the encryption at rest is enabled.
     * 
     */
    public Output<Boolean> getAtRestEncryptionEnabled() {
        return this.atRestEncryptionEnabled;
    }
    /**
     * A flag that indicate whether AuthToken (password) is enabled.
     * 
     */
    @Export(name="authTokenEnabled", type=Boolean.class, parameters={})
    private Output<Boolean> authTokenEnabled;

    /**
     * @return A flag that indicate whether AuthToken (password) is enabled.
     * 
     */
    public Output<Boolean> getAuthTokenEnabled() {
        return this.authTokenEnabled;
    }
    /**
     * The instance class used. See AWS documentation for information on [supported node types](https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/CacheNodes.SupportedTypes.html) and [guidance on selecting node types](https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/nodes-select-size.html).
     * 
     */
    @Export(name="cacheNodeType", type=String.class, parameters={})
    private Output<String> cacheNodeType;

    /**
     * @return The instance class used. See AWS documentation for information on [supported node types](https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/CacheNodes.SupportedTypes.html) and [guidance on selecting node types](https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/nodes-select-size.html).
     * 
     */
    public Output<String> getCacheNodeType() {
        return this.cacheNodeType;
    }
    /**
     * Indicates whether the Global Datastore is cluster enabled.
     * 
     */
    @Export(name="clusterEnabled", type=Boolean.class, parameters={})
    private Output<Boolean> clusterEnabled;

    /**
     * @return Indicates whether the Global Datastore is cluster enabled.
     * 
     */
    public Output<Boolean> getClusterEnabled() {
        return this.clusterEnabled;
    }
    /**
     * The name of the cache engine to be used for the clusters in this global replication group.
     * 
     */
    @Export(name="engine", type=String.class, parameters={})
    private Output<String> engine;

    /**
     * @return The name of the cache engine to be used for the clusters in this global replication group.
     * 
     */
    public Output<String> getEngine() {
        return this.engine;
    }
    /**
     * The full version number of the cache engine running on the members of this global replication group.
     * 
     */
    @Export(name="engineVersionActual", type=String.class, parameters={})
    private Output<String> engineVersionActual;

    /**
     * @return The full version number of the cache engine running on the members of this global replication group.
     * 
     */
    public Output<String> getEngineVersionActual() {
        return this.engineVersionActual;
    }
    /**
     * A user-created description for the global replication group.
     * 
     */
    @Export(name="globalReplicationGroupDescription", type=String.class, parameters={})
    private Output</* @Nullable */ String> globalReplicationGroupDescription;

    /**
     * @return A user-created description for the global replication group.
     * 
     */
    public Output</* @Nullable */ String> getGlobalReplicationGroupDescription() {
        return this.globalReplicationGroupDescription;
    }
    /**
     * The full ID of the global replication group.
     * 
     */
    @Export(name="globalReplicationGroupId", type=String.class, parameters={})
    private Output<String> globalReplicationGroupId;

    /**
     * @return The full ID of the global replication group.
     * 
     */
    public Output<String> getGlobalReplicationGroupId() {
        return this.globalReplicationGroupId;
    }
    /**
     * The suffix name of a Global Datastore. If `global_replication_group_id_suffix` is changed, creates a new resource.
     * 
     */
    @Export(name="globalReplicationGroupIdSuffix", type=String.class, parameters={})
    private Output<String> globalReplicationGroupIdSuffix;

    /**
     * @return The suffix name of a Global Datastore. If `global_replication_group_id_suffix` is changed, creates a new resource.
     * 
     */
    public Output<String> getGlobalReplicationGroupIdSuffix() {
        return this.globalReplicationGroupIdSuffix;
    }
    /**
     * The ID of the primary cluster that accepts writes and will replicate updates to the secondary cluster. If `primary_replication_group_id` is changed, creates a new resource.
     * 
     */
    @Export(name="primaryReplicationGroupId", type=String.class, parameters={})
    private Output<String> primaryReplicationGroupId;

    /**
     * @return The ID of the primary cluster that accepts writes and will replicate updates to the secondary cluster. If `primary_replication_group_id` is changed, creates a new resource.
     * 
     */
    public Output<String> getPrimaryReplicationGroupId() {
        return this.primaryReplicationGroupId;
    }
    /**
     * A flag that indicates whether the encryption in transit is enabled.
     * 
     */
    @Export(name="transitEncryptionEnabled", type=Boolean.class, parameters={})
    private Output<Boolean> transitEncryptionEnabled;

    /**
     * @return A flag that indicates whether the encryption in transit is enabled.
     * 
     */
    public Output<Boolean> getTransitEncryptionEnabled() {
        return this.transitEncryptionEnabled;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public GlobalReplicationGroup(String name) {
        this(name, GlobalReplicationGroupArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public GlobalReplicationGroup(String name, GlobalReplicationGroupArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public GlobalReplicationGroup(String name, GlobalReplicationGroupArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:elasticache/globalReplicationGroup:GlobalReplicationGroup", name, args == null ? GlobalReplicationGroupArgs.Empty : args, makeResourceOptions(options, Output.empty()));
    }

    private GlobalReplicationGroup(String name, Output<String> id, @Nullable GlobalReplicationGroupState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:elasticache/globalReplicationGroup:GlobalReplicationGroup", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static GlobalReplicationGroup get(String name, Output<String> id, @Nullable GlobalReplicationGroupState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new GlobalReplicationGroup(name, id, state, options);
    }
}
