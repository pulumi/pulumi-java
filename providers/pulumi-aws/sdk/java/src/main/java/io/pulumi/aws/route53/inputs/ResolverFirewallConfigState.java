// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.route53.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ResolverFirewallConfigState extends io.pulumi.resources.ResourceArgs {

    public static final ResolverFirewallConfigState Empty = new ResolverFirewallConfigState();

    /**
     * Determines how Route 53 Resolver handles queries during failures, for example when all traffic that is sent to DNS Firewall fails to receive a reply. By default, fail open is disabled, which means the failure mode is closed. This approach favors security over availability. DNS Firewall blocks queries that it is unable to evaluate properly. If you enable this option, the failure mode is open. This approach favors availability over security. DNS Firewall allows queries to proceed if it is unable to properly evaluate them. Valid values: `ENABLED`, `DISABLED`.
     * 
     */
    @Import(name="firewallFailOpen")
      private final @Nullable Output<String> firewallFailOpen;

    public Output<String> getFirewallFailOpen() {
        return this.firewallFailOpen == null ? Codegen.empty() : this.firewallFailOpen;
    }

    /**
     * The AWS account ID of the owner of the VPC that this firewall configuration applies to.
     * 
     */
    @Import(name="ownerId")
      private final @Nullable Output<String> ownerId;

    public Output<String> getOwnerId() {
        return this.ownerId == null ? Codegen.empty() : this.ownerId;
    }

    /**
     * The ID of the VPC that the configuration is for.
     * 
     */
    @Import(name="resourceId")
      private final @Nullable Output<String> resourceId;

    public Output<String> getResourceId() {
        return this.resourceId == null ? Codegen.empty() : this.resourceId;
    }

    public ResolverFirewallConfigState(
        @Nullable Output<String> firewallFailOpen,
        @Nullable Output<String> ownerId,
        @Nullable Output<String> resourceId) {
        this.firewallFailOpen = firewallFailOpen;
        this.ownerId = ownerId;
        this.resourceId = resourceId;
    }

    private ResolverFirewallConfigState() {
        this.firewallFailOpen = Codegen.empty();
        this.ownerId = Codegen.empty();
        this.resourceId = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ResolverFirewallConfigState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> firewallFailOpen;
        private @Nullable Output<String> ownerId;
        private @Nullable Output<String> resourceId;

        public Builder() {
    	      // Empty
        }

        public Builder(ResolverFirewallConfigState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.firewallFailOpen = defaults.firewallFailOpen;
    	      this.ownerId = defaults.ownerId;
    	      this.resourceId = defaults.resourceId;
        }

        public Builder firewallFailOpen(@Nullable Output<String> firewallFailOpen) {
            this.firewallFailOpen = firewallFailOpen;
            return this;
        }
        public Builder firewallFailOpen(@Nullable String firewallFailOpen) {
            this.firewallFailOpen = Codegen.ofNullable(firewallFailOpen);
            return this;
        }
        public Builder ownerId(@Nullable Output<String> ownerId) {
            this.ownerId = ownerId;
            return this;
        }
        public Builder ownerId(@Nullable String ownerId) {
            this.ownerId = Codegen.ofNullable(ownerId);
            return this;
        }
        public Builder resourceId(@Nullable Output<String> resourceId) {
            this.resourceId = resourceId;
            return this;
        }
        public Builder resourceId(@Nullable String resourceId) {
            this.resourceId = Codegen.ofNullable(resourceId);
            return this;
        }        public ResolverFirewallConfigState build() {
            return new ResolverFirewallConfigState(firewallFailOpen, ownerId, resourceId);
        }
    }
}
