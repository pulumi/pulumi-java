// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.sagemaker.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class EndpointConfigurationProductionVariantGetArgs extends io.pulumi.resources.ResourceArgs {

    public static final EndpointConfigurationProductionVariantGetArgs Empty = new EndpointConfigurationProductionVariantGetArgs();

    /**
     * The size of the Elastic Inference (EI) instance to use for the production variant.
     * 
     */
    @Import(name="acceleratorType")
      private final @Nullable Output<String> acceleratorType;

    public Output<String> getAcceleratorType() {
        return this.acceleratorType == null ? Output.empty() : this.acceleratorType;
    }

    /**
     * Initial number of instances used for auto-scaling.
     * 
     */
    @Import(name="initialInstanceCount", required=true)
      private final Output<Integer> initialInstanceCount;

    public Output<Integer> getInitialInstanceCount() {
        return this.initialInstanceCount;
    }

    /**
     * Determines initial traffic distribution among all of the models that you specify in the endpoint configuration. If unspecified, it defaults to 1.0.
     * 
     */
    @Import(name="initialVariantWeight")
      private final @Nullable Output<Double> initialVariantWeight;

    public Output<Double> getInitialVariantWeight() {
        return this.initialVariantWeight == null ? Output.empty() : this.initialVariantWeight;
    }

    /**
     * The type of instance to start.
     * 
     */
    @Import(name="instanceType", required=true)
      private final Output<String> instanceType;

    public Output<String> getInstanceType() {
        return this.instanceType;
    }

    /**
     * The name of the model to use.
     * 
     */
    @Import(name="modelName", required=true)
      private final Output<String> modelName;

    public Output<String> getModelName() {
        return this.modelName;
    }

    /**
     * The name of the variant. If omitted, this provider will assign a random, unique name.
     * 
     */
    @Import(name="variantName")
      private final @Nullable Output<String> variantName;

    public Output<String> getVariantName() {
        return this.variantName == null ? Output.empty() : this.variantName;
    }

    public EndpointConfigurationProductionVariantGetArgs(
        @Nullable Output<String> acceleratorType,
        Output<Integer> initialInstanceCount,
        @Nullable Output<Double> initialVariantWeight,
        Output<String> instanceType,
        Output<String> modelName,
        @Nullable Output<String> variantName) {
        this.acceleratorType = acceleratorType;
        this.initialInstanceCount = Objects.requireNonNull(initialInstanceCount, "expected parameter 'initialInstanceCount' to be non-null");
        this.initialVariantWeight = initialVariantWeight;
        this.instanceType = Objects.requireNonNull(instanceType, "expected parameter 'instanceType' to be non-null");
        this.modelName = Objects.requireNonNull(modelName, "expected parameter 'modelName' to be non-null");
        this.variantName = variantName;
    }

    private EndpointConfigurationProductionVariantGetArgs() {
        this.acceleratorType = Output.empty();
        this.initialInstanceCount = Output.empty();
        this.initialVariantWeight = Output.empty();
        this.instanceType = Output.empty();
        this.modelName = Output.empty();
        this.variantName = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(EndpointConfigurationProductionVariantGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> acceleratorType;
        private Output<Integer> initialInstanceCount;
        private @Nullable Output<Double> initialVariantWeight;
        private Output<String> instanceType;
        private Output<String> modelName;
        private @Nullable Output<String> variantName;

        public Builder() {
    	      // Empty
        }

        public Builder(EndpointConfigurationProductionVariantGetArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.acceleratorType = defaults.acceleratorType;
    	      this.initialInstanceCount = defaults.initialInstanceCount;
    	      this.initialVariantWeight = defaults.initialVariantWeight;
    	      this.instanceType = defaults.instanceType;
    	      this.modelName = defaults.modelName;
    	      this.variantName = defaults.variantName;
        }

        public Builder acceleratorType(@Nullable Output<String> acceleratorType) {
            this.acceleratorType = acceleratorType;
            return this;
        }
        public Builder acceleratorType(@Nullable String acceleratorType) {
            this.acceleratorType = Output.ofNullable(acceleratorType);
            return this;
        }
        public Builder initialInstanceCount(Output<Integer> initialInstanceCount) {
            this.initialInstanceCount = Objects.requireNonNull(initialInstanceCount);
            return this;
        }
        public Builder initialInstanceCount(Integer initialInstanceCount) {
            this.initialInstanceCount = Output.of(Objects.requireNonNull(initialInstanceCount));
            return this;
        }
        public Builder initialVariantWeight(@Nullable Output<Double> initialVariantWeight) {
            this.initialVariantWeight = initialVariantWeight;
            return this;
        }
        public Builder initialVariantWeight(@Nullable Double initialVariantWeight) {
            this.initialVariantWeight = Output.ofNullable(initialVariantWeight);
            return this;
        }
        public Builder instanceType(Output<String> instanceType) {
            this.instanceType = Objects.requireNonNull(instanceType);
            return this;
        }
        public Builder instanceType(String instanceType) {
            this.instanceType = Output.of(Objects.requireNonNull(instanceType));
            return this;
        }
        public Builder modelName(Output<String> modelName) {
            this.modelName = Objects.requireNonNull(modelName);
            return this;
        }
        public Builder modelName(String modelName) {
            this.modelName = Output.of(Objects.requireNonNull(modelName));
            return this;
        }
        public Builder variantName(@Nullable Output<String> variantName) {
            this.variantName = variantName;
            return this;
        }
        public Builder variantName(@Nullable String variantName) {
            this.variantName = Output.ofNullable(variantName);
            return this;
        }        public EndpointConfigurationProductionVariantGetArgs build() {
            return new EndpointConfigurationProductionVariantGetArgs(acceleratorType, initialInstanceCount, initialVariantWeight, instanceType, modelName, variantName);
        }
    }
}
