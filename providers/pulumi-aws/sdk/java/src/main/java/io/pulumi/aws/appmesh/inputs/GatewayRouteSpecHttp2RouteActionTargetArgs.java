// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.appmesh.inputs;

import io.pulumi.aws.appmesh.inputs.GatewayRouteSpecHttp2RouteActionTargetVirtualServiceArgs;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.util.Objects;


public final class GatewayRouteSpecHttp2RouteActionTargetArgs extends io.pulumi.resources.ResourceArgs {

    public static final GatewayRouteSpecHttp2RouteActionTargetArgs Empty = new GatewayRouteSpecHttp2RouteActionTargetArgs();

    /**
     * The virtual service gateway route target.
     * 
     */
    @InputImport(name="virtualService", required=true)
      private final Input<GatewayRouteSpecHttp2RouteActionTargetVirtualServiceArgs> virtualService;

    public Input<GatewayRouteSpecHttp2RouteActionTargetVirtualServiceArgs> getVirtualService() {
        return this.virtualService;
    }

    public GatewayRouteSpecHttp2RouteActionTargetArgs(Input<GatewayRouteSpecHttp2RouteActionTargetVirtualServiceArgs> virtualService) {
        this.virtualService = Objects.requireNonNull(virtualService, "expected parameter 'virtualService' to be non-null");
    }

    private GatewayRouteSpecHttp2RouteActionTargetArgs() {
        this.virtualService = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GatewayRouteSpecHttp2RouteActionTargetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<GatewayRouteSpecHttp2RouteActionTargetVirtualServiceArgs> virtualService;

        public Builder() {
    	      // Empty
        }

        public Builder(GatewayRouteSpecHttp2RouteActionTargetArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.virtualService = defaults.virtualService;
        }

        public Builder setVirtualService(Input<GatewayRouteSpecHttp2RouteActionTargetVirtualServiceArgs> virtualService) {
            this.virtualService = Objects.requireNonNull(virtualService);
            return this;
        }

        public Builder setVirtualService(GatewayRouteSpecHttp2RouteActionTargetVirtualServiceArgs virtualService) {
            this.virtualService = Input.of(Objects.requireNonNull(virtualService));
            return this;
        }
        public GatewayRouteSpecHttp2RouteActionTargetArgs build() {
            return new GatewayRouteSpecHttp2RouteActionTargetArgs(virtualService);
        }
    }
}
