// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.appmesh.inputs;

import io.pulumi.aws.appmesh.inputs.VirtualGatewaySpecBackendDefaultsGetArgs;
import io.pulumi.aws.appmesh.inputs.VirtualGatewaySpecListenerGetArgs;
import io.pulumi.aws.appmesh.inputs.VirtualGatewaySpecLoggingGetArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.util.Objects;
import javax.annotation.Nullable;


public final class VirtualGatewaySpecGetArgs extends io.pulumi.resources.ResourceArgs {

    public static final VirtualGatewaySpecGetArgs Empty = new VirtualGatewaySpecGetArgs();

    /**
     * The defaults for backends.
     * 
     */
    @Import(name="backendDefaults")
      private final @Nullable Output<VirtualGatewaySpecBackendDefaultsGetArgs> backendDefaults;

    public Output<VirtualGatewaySpecBackendDefaultsGetArgs> getBackendDefaults() {
        return this.backendDefaults == null ? Codegen.empty() : this.backendDefaults;
    }

    /**
     * The listeners that the mesh endpoint is expected to receive inbound traffic from. You can specify one listener.
     * 
     */
    @Import(name="listener", required=true)
      private final Output<VirtualGatewaySpecListenerGetArgs> listener;

    public Output<VirtualGatewaySpecListenerGetArgs> getListener() {
        return this.listener;
    }

    /**
     * The inbound and outbound access logging information for the virtual gateway.
     * 
     */
    @Import(name="logging")
      private final @Nullable Output<VirtualGatewaySpecLoggingGetArgs> logging;

    public Output<VirtualGatewaySpecLoggingGetArgs> getLogging() {
        return this.logging == null ? Codegen.empty() : this.logging;
    }

    public VirtualGatewaySpecGetArgs(
        @Nullable Output<VirtualGatewaySpecBackendDefaultsGetArgs> backendDefaults,
        Output<VirtualGatewaySpecListenerGetArgs> listener,
        @Nullable Output<VirtualGatewaySpecLoggingGetArgs> logging) {
        this.backendDefaults = backendDefaults;
        this.listener = Objects.requireNonNull(listener, "expected parameter 'listener' to be non-null");
        this.logging = logging;
    }

    private VirtualGatewaySpecGetArgs() {
        this.backendDefaults = Codegen.empty();
        this.listener = Codegen.empty();
        this.logging = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VirtualGatewaySpecGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<VirtualGatewaySpecBackendDefaultsGetArgs> backendDefaults;
        private Output<VirtualGatewaySpecListenerGetArgs> listener;
        private @Nullable Output<VirtualGatewaySpecLoggingGetArgs> logging;

        public Builder() {
    	      // Empty
        }

        public Builder(VirtualGatewaySpecGetArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.backendDefaults = defaults.backendDefaults;
    	      this.listener = defaults.listener;
    	      this.logging = defaults.logging;
        }

        public Builder backendDefaults(@Nullable Output<VirtualGatewaySpecBackendDefaultsGetArgs> backendDefaults) {
            this.backendDefaults = backendDefaults;
            return this;
        }
        public Builder backendDefaults(@Nullable VirtualGatewaySpecBackendDefaultsGetArgs backendDefaults) {
            this.backendDefaults = Codegen.ofNullable(backendDefaults);
            return this;
        }
        public Builder listener(Output<VirtualGatewaySpecListenerGetArgs> listener) {
            this.listener = Objects.requireNonNull(listener);
            return this;
        }
        public Builder listener(VirtualGatewaySpecListenerGetArgs listener) {
            this.listener = Output.of(Objects.requireNonNull(listener));
            return this;
        }
        public Builder logging(@Nullable Output<VirtualGatewaySpecLoggingGetArgs> logging) {
            this.logging = logging;
            return this;
        }
        public Builder logging(@Nullable VirtualGatewaySpecLoggingGetArgs logging) {
            this.logging = Codegen.ofNullable(logging);
            return this;
        }        public VirtualGatewaySpecGetArgs build() {
            return new VirtualGatewaySpecGetArgs(backendDefaults, listener, logging);
        }
    }
}
