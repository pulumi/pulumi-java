// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.ec2clientvpn;

import io.pulumi.aws.Utilities;
import io.pulumi.aws.ec2clientvpn.RouteArgs;
import io.pulumi.aws.ec2clientvpn.inputs.RouteState;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Export;
import io.pulumi.core.annotations.ResourceType;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * Provides additional routes for AWS Client VPN endpoints. For more information on usage, please see the
 * [AWS Client VPN Administrator's Guide](https://docs.aws.amazon.com/vpn/latest/clientvpn-admin/what-is.html).
 * 
 * {{% examples %}}
 * ## Example Usage
 * {{% example %}}
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 * 
 * const exampleEndpoint = new aws.ec2clientvpn.Endpoint("exampleEndpoint", {
 *     description: "Example Client VPN endpoint",
 *     serverCertificateArn: aws_acm_certificate.example.arn,
 *     clientCidrBlock: "10.0.0.0/16",
 *     authenticationOptions: [{
 *         type: "certificate-authentication",
 *         rootCertificateChainArn: aws_acm_certificate.example.arn,
 *     }],
 *     connectionLogOptions: {
 *         enabled: false,
 *     },
 * });
 * const exampleNetworkAssociation = new aws.ec2clientvpn.NetworkAssociation("exampleNetworkAssociation", {
 *     clientVpnEndpointId: exampleEndpoint.id,
 *     subnetId: aws_subnet.example.id,
 * });
 * const exampleRoute = new aws.ec2clientvpn.Route("exampleRoute", {
 *     clientVpnEndpointId: exampleEndpoint.id,
 *     destinationCidrBlock: "0.0.0.0/0",
 *     targetVpcSubnetId: exampleNetworkAssociation.subnetId,
 * });
 * ```
 * ```python
 * import pulumi
 * import pulumi_aws as aws
 * 
 * example_endpoint = aws.ec2clientvpn.Endpoint("exampleEndpoint",
 *     description="Example Client VPN endpoint",
 *     server_certificate_arn=aws_acm_certificate["example"]["arn"],
 *     client_cidr_block="10.0.0.0/16",
 *     authentication_options=[aws.ec2clientvpn.EndpointAuthenticationOptionArgs(
 *         type="certificate-authentication",
 *         root_certificate_chain_arn=aws_acm_certificate["example"]["arn"],
 *     )],
 *     connection_log_options=aws.ec2clientvpn.EndpointConnectionLogOptionsArgs(
 *         enabled=False,
 *     ))
 * example_network_association = aws.ec2clientvpn.NetworkAssociation("exampleNetworkAssociation",
 *     client_vpn_endpoint_id=example_endpoint.id,
 *     subnet_id=aws_subnet["example"]["id"])
 * example_route = aws.ec2clientvpn.Route("exampleRoute",
 *     client_vpn_endpoint_id=example_endpoint.id,
 *     destination_cidr_block="0.0.0.0/0",
 *     target_vpc_subnet_id=example_network_association.subnet_id)
 * ```
 * ```csharp
 * using Pulumi;
 * using Aws = Pulumi.Aws;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var exampleEndpoint = new Aws.Ec2ClientVpn.Endpoint("exampleEndpoint", new Aws.Ec2ClientVpn.EndpointArgs
 *         {
 *             Description = "Example Client VPN endpoint",
 *             ServerCertificateArn = aws_acm_certificate.Example.Arn,
 *             ClientCidrBlock = "10.0.0.0/16",
 *             AuthenticationOptions = 
 *             {
 *                 new Aws.Ec2ClientVpn.Inputs.EndpointAuthenticationOptionArgs
 *                 {
 *                     Type = "certificate-authentication",
 *                     RootCertificateChainArn = aws_acm_certificate.Example.Arn,
 *                 },
 *             },
 *             ConnectionLogOptions = new Aws.Ec2ClientVpn.Inputs.EndpointConnectionLogOptionsArgs
 *             {
 *                 Enabled = false,
 *             },
 *         });
 *         var exampleNetworkAssociation = new Aws.Ec2ClientVpn.NetworkAssociation("exampleNetworkAssociation", new Aws.Ec2ClientVpn.NetworkAssociationArgs
 *         {
 *             ClientVpnEndpointId = exampleEndpoint.Id,
 *             SubnetId = aws_subnet.Example.Id,
 *         });
 *         var exampleRoute = new Aws.Ec2ClientVpn.Route("exampleRoute", new Aws.Ec2ClientVpn.RouteArgs
 *         {
 *             ClientVpnEndpointId = exampleEndpoint.Id,
 *             DestinationCidrBlock = "0.0.0.0/0",
 *             TargetVpcSubnetId = exampleNetworkAssociation.SubnetId,
 *         });
 *     }
 * 
 * }
 * ```
 * ```go
 * package main
 * 
 * import (
 * 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/ec2clientvpn"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		exampleEndpoint, err := ec2clientvpn.NewEndpoint(ctx, "exampleEndpoint", &ec2clientvpn.EndpointArgs{
 * 			Description:          pulumi.String("Example Client VPN endpoint"),
 * 			ServerCertificateArn: pulumi.Any(aws_acm_certificate.Example.Arn),
 * 			ClientCidrBlock:      pulumi.String("10.0.0.0/16"),
 * 			AuthenticationOptions: ec2clientvpn.EndpointAuthenticationOptionArray{
 * 				&ec2clientvpn.EndpointAuthenticationOptionArgs{
 * 					Type:                    pulumi.String("certificate-authentication"),
 * 					RootCertificateChainArn: pulumi.Any(aws_acm_certificate.Example.Arn),
 * 				},
 * 			},
 * 			ConnectionLogOptions: &ec2clientvpn.EndpointConnectionLogOptionsArgs{
 * 				Enabled: pulumi.Bool(false),
 * 			},
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		exampleNetworkAssociation, err := ec2clientvpn.NewNetworkAssociation(ctx, "exampleNetworkAssociation", &ec2clientvpn.NetworkAssociationArgs{
 * 			ClientVpnEndpointId: exampleEndpoint.ID(),
 * 			SubnetId:            pulumi.Any(aws_subnet.Example.Id),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		_, err = ec2clientvpn.NewRoute(ctx, "exampleRoute", &ec2clientvpn.RouteArgs{
 * 			ClientVpnEndpointId:  exampleEndpoint.ID(),
 * 			DestinationCidrBlock: pulumi.String("0.0.0.0/0"),
 * 			TargetVpcSubnetId:    exampleNetworkAssociation.SubnetId,
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * ```
 * {{% /example %}}
 * {{% /examples %}}
 * 
 * ## Import
 * 
 * AWS Client VPN routes can be imported using the endpoint ID, target subnet ID, and destination CIDR block. All values are separated by a `,`.
 * 
 * ```sh
 *  $ pulumi import aws:ec2clientvpn/route:Route example cvpn-endpoint-1234567890abcdef,subnet-9876543210fedcba,10.1.0.0/24
 * ```
 * 
 *  
 */
@ResourceType(type="aws:ec2clientvpn/route:Route")
public class Route extends io.pulumi.resources.CustomResource {
    /**
     * The ID of the Client VPN endpoint.
     * 
     */
    @Export(name="clientVpnEndpointId", type=String.class, parameters={})
    private Output<String> clientVpnEndpointId;

    /**
     * @return The ID of the Client VPN endpoint.
     * 
     */
    public Output<String> getClientVpnEndpointId() {
        return this.clientVpnEndpointId;
    }
    /**
     * A brief description of the authorization rule.
     * 
     */
    @Export(name="description", type=String.class, parameters={})
    private Output</* @Nullable */ String> description;

    /**
     * @return A brief description of the authorization rule.
     * 
     */
    public Output</* @Nullable */ String> getDescription() {
        return this.description;
    }
    /**
     * The IPv4 address range, in CIDR notation, of the route destination.
     * 
     */
    @Export(name="destinationCidrBlock", type=String.class, parameters={})
    private Output<String> destinationCidrBlock;

    /**
     * @return The IPv4 address range, in CIDR notation, of the route destination.
     * 
     */
    public Output<String> getDestinationCidrBlock() {
        return this.destinationCidrBlock;
    }
    /**
     * Indicates how the Client VPN route was added. Will be `add-route` for routes created by this resource.
     * 
     */
    @Export(name="origin", type=String.class, parameters={})
    private Output<String> origin;

    /**
     * @return Indicates how the Client VPN route was added. Will be `add-route` for routes created by this resource.
     * 
     */
    public Output<String> getOrigin() {
        return this.origin;
    }
    /**
     * The ID of the Subnet to route the traffic through. It must already be attached to the Client VPN.
     * 
     */
    @Export(name="targetVpcSubnetId", type=String.class, parameters={})
    private Output<String> targetVpcSubnetId;

    /**
     * @return The ID of the Subnet to route the traffic through. It must already be attached to the Client VPN.
     * 
     */
    public Output<String> getTargetVpcSubnetId() {
        return this.targetVpcSubnetId;
    }
    /**
     * The type of the route.
     * 
     */
    @Export(name="type", type=String.class, parameters={})
    private Output<String> type;

    /**
     * @return The type of the route.
     * 
     */
    public Output<String> getType() {
        return this.type;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Route(String name) {
        this(name, RouteArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Route(String name, RouteArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Route(String name, RouteArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:ec2clientvpn/route:Route", name, args == null ? RouteArgs.Empty : args, makeResourceOptions(options, Output.empty()));
    }

    private Route(String name, Output<String> id, @Nullable RouteState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:ec2clientvpn/route:Route", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Route get(String name, Output<String> id, @Nullable RouteState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new Route(name, id, state, options);
    }
}
