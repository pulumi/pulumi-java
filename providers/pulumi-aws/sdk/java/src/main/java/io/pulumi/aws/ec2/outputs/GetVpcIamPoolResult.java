// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.ec2.outputs;

import io.pulumi.aws.ec2.outputs.GetVpcIamPoolFilter;
import io.pulumi.core.annotations.OutputCustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class GetVpcIamPoolResult {
    /**
     * The IP protocol assigned to this pool.
     * 
     */
    private final String addressFamily;
    /**
     * A default netmask length for allocations added to this pool. If, for example, the CIDR assigned to this pool is 10.0.0.0/8 and you enter 16 here, new allocations will default to 10.0.0.0/16.
     * 
     */
    private final Integer allocationDefaultNetmaskLength;
    /**
     * The maximum netmask length that will be required for CIDR allocations in this pool.
     * 
     */
    private final Integer allocationMaxNetmaskLength;
    /**
     * The minimum netmask length that will be required for CIDR allocations in this pool.
     * 
     */
    private final Integer allocationMinNetmaskLength;
    /**
     * Tags that are required to create resources in using this pool.
     * 
     */
    private final Map<String,String> allocationResourceTags;
    /**
     * Amazon Resource Name (ARN) of the pool
     * 
     */
    private final String arn;
    /**
     * If enabled, IPAM will continuously look for resources within the CIDR range of this pool and automatically import them as allocations into your IPAM.
     * 
     */
    private final Boolean autoImport;
    /**
     * Limits which service in AWS that the pool can be used in. "ec2", for example, allows users to use space for Elastic IP addresses and VPCs.
     * 
     */
    private final String awsService;
    /**
     * A description for the IPAM pool.
     * 
     */
    private final String description;
    private final @Nullable List<GetVpcIamPoolFilter> filters;
    private final @Nullable String id;
    private final @Nullable String ipamPoolId;
    /**
     * The ID of the scope the pool belongs to.
     * 
     */
    private final String ipamScopeId;
    private final String ipamScopeType;
    /**
     * Locale is the Region where your pool is available for allocations. You can only create pools with locales that match the operating Regions of the IPAM. You can only create VPCs from a pool whose locale matches the VPC's Region.
     * 
     */
    private final String locale;
    private final Integer poolDepth;
    /**
     * Defines whether or not IPv6 pool space is publicly ∂advertisable over the internet.
     * 
     */
    private final Boolean publiclyAdvertisable;
    /**
     * The ID of the source IPAM pool.
     * 
     */
    private final String sourceIpamPoolId;
    private final String state;
    /**
     * A map of tags to assigned to the resource.
     * 
     */
    private final Map<String,String> tags;

    @OutputCustomType.Constructor({"addressFamily","allocationDefaultNetmaskLength","allocationMaxNetmaskLength","allocationMinNetmaskLength","allocationResourceTags","arn","autoImport","awsService","description","filters","id","ipamPoolId","ipamScopeId","ipamScopeType","locale","poolDepth","publiclyAdvertisable","sourceIpamPoolId","state","tags"})
    private GetVpcIamPoolResult(
        String addressFamily,
        Integer allocationDefaultNetmaskLength,
        Integer allocationMaxNetmaskLength,
        Integer allocationMinNetmaskLength,
        Map<String,String> allocationResourceTags,
        String arn,
        Boolean autoImport,
        String awsService,
        String description,
        @Nullable List<GetVpcIamPoolFilter> filters,
        @Nullable String id,
        @Nullable String ipamPoolId,
        String ipamScopeId,
        String ipamScopeType,
        String locale,
        Integer poolDepth,
        Boolean publiclyAdvertisable,
        String sourceIpamPoolId,
        String state,
        Map<String,String> tags) {
        this.addressFamily = addressFamily;
        this.allocationDefaultNetmaskLength = allocationDefaultNetmaskLength;
        this.allocationMaxNetmaskLength = allocationMaxNetmaskLength;
        this.allocationMinNetmaskLength = allocationMinNetmaskLength;
        this.allocationResourceTags = allocationResourceTags;
        this.arn = arn;
        this.autoImport = autoImport;
        this.awsService = awsService;
        this.description = description;
        this.filters = filters;
        this.id = id;
        this.ipamPoolId = ipamPoolId;
        this.ipamScopeId = ipamScopeId;
        this.ipamScopeType = ipamScopeType;
        this.locale = locale;
        this.poolDepth = poolDepth;
        this.publiclyAdvertisable = publiclyAdvertisable;
        this.sourceIpamPoolId = sourceIpamPoolId;
        this.state = state;
        this.tags = tags;
    }

    /**
     * The IP protocol assigned to this pool.
     * 
    */
    public String getAddressFamily() {
        return this.addressFamily;
    }
    /**
     * A default netmask length for allocations added to this pool. If, for example, the CIDR assigned to this pool is 10.0.0.0/8 and you enter 16 here, new allocations will default to 10.0.0.0/16.
     * 
    */
    public Integer getAllocationDefaultNetmaskLength() {
        return this.allocationDefaultNetmaskLength;
    }
    /**
     * The maximum netmask length that will be required for CIDR allocations in this pool.
     * 
    */
    public Integer getAllocationMaxNetmaskLength() {
        return this.allocationMaxNetmaskLength;
    }
    /**
     * The minimum netmask length that will be required for CIDR allocations in this pool.
     * 
    */
    public Integer getAllocationMinNetmaskLength() {
        return this.allocationMinNetmaskLength;
    }
    /**
     * Tags that are required to create resources in using this pool.
     * 
    */
    public Map<String,String> getAllocationResourceTags() {
        return this.allocationResourceTags;
    }
    /**
     * Amazon Resource Name (ARN) of the pool
     * 
    */
    public String getArn() {
        return this.arn;
    }
    /**
     * If enabled, IPAM will continuously look for resources within the CIDR range of this pool and automatically import them as allocations into your IPAM.
     * 
    */
    public Boolean getAutoImport() {
        return this.autoImport;
    }
    /**
     * Limits which service in AWS that the pool can be used in. "ec2", for example, allows users to use space for Elastic IP addresses and VPCs.
     * 
    */
    public String getAwsService() {
        return this.awsService;
    }
    /**
     * A description for the IPAM pool.
     * 
    */
    public String getDescription() {
        return this.description;
    }
    public List<GetVpcIamPoolFilter> getFilters() {
        return this.filters == null ? List.of() : this.filters;
    }
    public Optional<String> getId() {
        return Optional.ofNullable(this.id);
    }
    public Optional<String> getIpamPoolId() {
        return Optional.ofNullable(this.ipamPoolId);
    }
    /**
     * The ID of the scope the pool belongs to.
     * 
    */
    public String getIpamScopeId() {
        return this.ipamScopeId;
    }
    public String getIpamScopeType() {
        return this.ipamScopeType;
    }
    /**
     * Locale is the Region where your pool is available for allocations. You can only create pools with locales that match the operating Regions of the IPAM. You can only create VPCs from a pool whose locale matches the VPC's Region.
     * 
    */
    public String getLocale() {
        return this.locale;
    }
    public Integer getPoolDepth() {
        return this.poolDepth;
    }
    /**
     * Defines whether or not IPv6 pool space is publicly ∂advertisable over the internet.
     * 
    */
    public Boolean getPubliclyAdvertisable() {
        return this.publiclyAdvertisable;
    }
    /**
     * The ID of the source IPAM pool.
     * 
    */
    public String getSourceIpamPoolId() {
        return this.sourceIpamPoolId;
    }
    public String getState() {
        return this.state;
    }
    /**
     * A map of tags to assigned to the resource.
     * 
    */
    public Map<String,String> getTags() {
        return this.tags;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetVpcIamPoolResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String addressFamily;
        private Integer allocationDefaultNetmaskLength;
        private Integer allocationMaxNetmaskLength;
        private Integer allocationMinNetmaskLength;
        private Map<String,String> allocationResourceTags;
        private String arn;
        private Boolean autoImport;
        private String awsService;
        private String description;
        private @Nullable List<GetVpcIamPoolFilter> filters;
        private @Nullable String id;
        private @Nullable String ipamPoolId;
        private String ipamScopeId;
        private String ipamScopeType;
        private String locale;
        private Integer poolDepth;
        private Boolean publiclyAdvertisable;
        private String sourceIpamPoolId;
        private String state;
        private Map<String,String> tags;

        public Builder() {
    	      // Empty
        }

        public Builder(GetVpcIamPoolResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.addressFamily = defaults.addressFamily;
    	      this.allocationDefaultNetmaskLength = defaults.allocationDefaultNetmaskLength;
    	      this.allocationMaxNetmaskLength = defaults.allocationMaxNetmaskLength;
    	      this.allocationMinNetmaskLength = defaults.allocationMinNetmaskLength;
    	      this.allocationResourceTags = defaults.allocationResourceTags;
    	      this.arn = defaults.arn;
    	      this.autoImport = defaults.autoImport;
    	      this.awsService = defaults.awsService;
    	      this.description = defaults.description;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.ipamPoolId = defaults.ipamPoolId;
    	      this.ipamScopeId = defaults.ipamScopeId;
    	      this.ipamScopeType = defaults.ipamScopeType;
    	      this.locale = defaults.locale;
    	      this.poolDepth = defaults.poolDepth;
    	      this.publiclyAdvertisable = defaults.publiclyAdvertisable;
    	      this.sourceIpamPoolId = defaults.sourceIpamPoolId;
    	      this.state = defaults.state;
    	      this.tags = defaults.tags;
        }

        public Builder setAddressFamily(String addressFamily) {
            this.addressFamily = Objects.requireNonNull(addressFamily);
            return this;
        }

        public Builder setAllocationDefaultNetmaskLength(Integer allocationDefaultNetmaskLength) {
            this.allocationDefaultNetmaskLength = Objects.requireNonNull(allocationDefaultNetmaskLength);
            return this;
        }

        public Builder setAllocationMaxNetmaskLength(Integer allocationMaxNetmaskLength) {
            this.allocationMaxNetmaskLength = Objects.requireNonNull(allocationMaxNetmaskLength);
            return this;
        }

        public Builder setAllocationMinNetmaskLength(Integer allocationMinNetmaskLength) {
            this.allocationMinNetmaskLength = Objects.requireNonNull(allocationMinNetmaskLength);
            return this;
        }

        public Builder setAllocationResourceTags(Map<String,String> allocationResourceTags) {
            this.allocationResourceTags = Objects.requireNonNull(allocationResourceTags);
            return this;
        }

        public Builder setArn(String arn) {
            this.arn = Objects.requireNonNull(arn);
            return this;
        }

        public Builder setAutoImport(Boolean autoImport) {
            this.autoImport = Objects.requireNonNull(autoImport);
            return this;
        }

        public Builder setAwsService(String awsService) {
            this.awsService = Objects.requireNonNull(awsService);
            return this;
        }

        public Builder setDescription(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }

        public Builder setFilters(@Nullable List<GetVpcIamPoolFilter> filters) {
            this.filters = filters;
            return this;
        }

        public Builder setId(@Nullable String id) {
            this.id = id;
            return this;
        }

        public Builder setIpamPoolId(@Nullable String ipamPoolId) {
            this.ipamPoolId = ipamPoolId;
            return this;
        }

        public Builder setIpamScopeId(String ipamScopeId) {
            this.ipamScopeId = Objects.requireNonNull(ipamScopeId);
            return this;
        }

        public Builder setIpamScopeType(String ipamScopeType) {
            this.ipamScopeType = Objects.requireNonNull(ipamScopeType);
            return this;
        }

        public Builder setLocale(String locale) {
            this.locale = Objects.requireNonNull(locale);
            return this;
        }

        public Builder setPoolDepth(Integer poolDepth) {
            this.poolDepth = Objects.requireNonNull(poolDepth);
            return this;
        }

        public Builder setPubliclyAdvertisable(Boolean publiclyAdvertisable) {
            this.publiclyAdvertisable = Objects.requireNonNull(publiclyAdvertisable);
            return this;
        }

        public Builder setSourceIpamPoolId(String sourceIpamPoolId) {
            this.sourceIpamPoolId = Objects.requireNonNull(sourceIpamPoolId);
            return this;
        }

        public Builder setState(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }

        public Builder setTags(Map<String,String> tags) {
            this.tags = Objects.requireNonNull(tags);
            return this;
        }
        public GetVpcIamPoolResult build() {
            return new GetVpcIamPoolResult(addressFamily, allocationDefaultNetmaskLength, allocationMaxNetmaskLength, allocationMinNetmaskLength, allocationResourceTags, arn, autoImport, awsService, description, filters, id, ipamPoolId, ipamScopeId, ipamScopeType, locale, poolDepth, publiclyAdvertisable, sourceIpamPoolId, state, tags);
        }
    }
}
