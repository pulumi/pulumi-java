// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.cloudfront.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class PublicKeyState extends io.pulumi.resources.ResourceArgs {

    public static final PublicKeyState Empty = new PublicKeyState();

    /**
     * Internal value used by CloudFront to allow future updates to the public key configuration.
     * 
     */
    @InputImport(name="callerReference")
      private final @Nullable Output<String> callerReference;

    public Output<String> getCallerReference() {
        return this.callerReference == null ? Output.empty() : this.callerReference;
    }

    /**
     * An optional comment about the public key.
     * 
     */
    @InputImport(name="comment")
      private final @Nullable Output<String> comment;

    public Output<String> getComment() {
        return this.comment == null ? Output.empty() : this.comment;
    }

    /**
     * The encoded public key that you want to add to CloudFront to use with features like field-level encryption.
     * 
     */
    @InputImport(name="encodedKey")
      private final @Nullable Output<String> encodedKey;

    public Output<String> getEncodedKey() {
        return this.encodedKey == null ? Output.empty() : this.encodedKey;
    }

    /**
     * The current version of the public key. For example: `E2QWRUHAPOMQZL`.
     * 
     */
    @InputImport(name="etag")
      private final @Nullable Output<String> etag;

    public Output<String> getEtag() {
        return this.etag == null ? Output.empty() : this.etag;
    }

    /**
     * The name for the public key. By default generated by this provider.
     * 
     */
    @InputImport(name="name")
      private final @Nullable Output<String> name;

    public Output<String> getName() {
        return this.name == null ? Output.empty() : this.name;
    }

    /**
     * The name for the public key. Conflicts with `name`.
     * 
     */
    @InputImport(name="namePrefix")
      private final @Nullable Output<String> namePrefix;

    public Output<String> getNamePrefix() {
        return this.namePrefix == null ? Output.empty() : this.namePrefix;
    }

    public PublicKeyState(
        @Nullable Output<String> callerReference,
        @Nullable Output<String> comment,
        @Nullable Output<String> encodedKey,
        @Nullable Output<String> etag,
        @Nullable Output<String> name,
        @Nullable Output<String> namePrefix) {
        this.callerReference = callerReference;
        this.comment = comment;
        this.encodedKey = encodedKey;
        this.etag = etag;
        this.name = name;
        this.namePrefix = namePrefix;
    }

    private PublicKeyState() {
        this.callerReference = Output.empty();
        this.comment = Output.empty();
        this.encodedKey = Output.empty();
        this.etag = Output.empty();
        this.name = Output.empty();
        this.namePrefix = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PublicKeyState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> callerReference;
        private @Nullable Output<String> comment;
        private @Nullable Output<String> encodedKey;
        private @Nullable Output<String> etag;
        private @Nullable Output<String> name;
        private @Nullable Output<String> namePrefix;

        public Builder() {
    	      // Empty
        }

        public Builder(PublicKeyState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.callerReference = defaults.callerReference;
    	      this.comment = defaults.comment;
    	      this.encodedKey = defaults.encodedKey;
    	      this.etag = defaults.etag;
    	      this.name = defaults.name;
    	      this.namePrefix = defaults.namePrefix;
        }

        public Builder callerReference(@Nullable Output<String> callerReference) {
            this.callerReference = callerReference;
            return this;
        }

        public Builder callerReference(@Nullable String callerReference) {
            this.callerReference = Output.ofNullable(callerReference);
            return this;
        }

        public Builder comment(@Nullable Output<String> comment) {
            this.comment = comment;
            return this;
        }

        public Builder comment(@Nullable String comment) {
            this.comment = Output.ofNullable(comment);
            return this;
        }

        public Builder encodedKey(@Nullable Output<String> encodedKey) {
            this.encodedKey = encodedKey;
            return this;
        }

        public Builder encodedKey(@Nullable String encodedKey) {
            this.encodedKey = Output.ofNullable(encodedKey);
            return this;
        }

        public Builder etag(@Nullable Output<String> etag) {
            this.etag = etag;
            return this;
        }

        public Builder etag(@Nullable String etag) {
            this.etag = Output.ofNullable(etag);
            return this;
        }

        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }

        public Builder name(@Nullable String name) {
            this.name = Output.ofNullable(name);
            return this;
        }

        public Builder namePrefix(@Nullable Output<String> namePrefix) {
            this.namePrefix = namePrefix;
            return this;
        }

        public Builder namePrefix(@Nullable String namePrefix) {
            this.namePrefix = Output.ofNullable(namePrefix);
            return this;
        }
        public PublicKeyState build() {
            return new PublicKeyState(callerReference, comment, encodedKey, etag, name, namePrefix);
        }
    }
}
