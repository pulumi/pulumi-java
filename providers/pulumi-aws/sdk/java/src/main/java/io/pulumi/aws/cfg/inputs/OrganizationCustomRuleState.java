// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.cfg.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class OrganizationCustomRuleState extends io.pulumi.resources.ResourceArgs {

    public static final OrganizationCustomRuleState Empty = new OrganizationCustomRuleState();

    /**
     * Amazon Resource Name (ARN) of the rule
     * 
     */
    @InputImport(name="arn")
    private final @Nullable Input<String> arn;

    public Input<String> getArn() {
        return this.arn == null ? Input.empty() : this.arn;
    }

    /**
     * Description of the rule
     * 
     */
    @InputImport(name="description")
    private final @Nullable Input<String> description;

    public Input<String> getDescription() {
        return this.description == null ? Input.empty() : this.description;
    }

    /**
     * List of AWS account identifiers to exclude from the rule
     * 
     */
    @InputImport(name="excludedAccounts")
    private final @Nullable Input<List<String>> excludedAccounts;

    public Input<List<String>> getExcludedAccounts() {
        return this.excludedAccounts == null ? Input.empty() : this.excludedAccounts;
    }

    /**
     * A string in JSON format that is passed to the AWS Config Rule Lambda Function
     * 
     */
    @InputImport(name="inputParameters")
    private final @Nullable Input<String> inputParameters;

    public Input<String> getInputParameters() {
        return this.inputParameters == null ? Input.empty() : this.inputParameters;
    }

    /**
     * Amazon Resource Name (ARN) of the rule Lambda Function
     * 
     */
    @InputImport(name="lambdaFunctionArn")
    private final @Nullable Input<String> lambdaFunctionArn;

    public Input<String> getLambdaFunctionArn() {
        return this.lambdaFunctionArn == null ? Input.empty() : this.lambdaFunctionArn;
    }

    /**
     * The maximum frequency with which AWS Config runs evaluations for a rule, if the rule is triggered at a periodic frequency. Defaults to `TwentyFour_Hours` for periodic frequency triggered rules. Valid values: `One_Hour`, `Three_Hours`, `Six_Hours`, `Twelve_Hours`, or `TwentyFour_Hours`.
     * 
     */
    @InputImport(name="maximumExecutionFrequency")
    private final @Nullable Input<String> maximumExecutionFrequency;

    public Input<String> getMaximumExecutionFrequency() {
        return this.maximumExecutionFrequency == null ? Input.empty() : this.maximumExecutionFrequency;
    }

    /**
     * The name of the rule
     * 
     */
    @InputImport(name="name")
    private final @Nullable Input<String> name;

    public Input<String> getName() {
        return this.name == null ? Input.empty() : this.name;
    }

    /**
     * Identifier of the AWS resource to evaluate
     * 
     */
    @InputImport(name="resourceIdScope")
    private final @Nullable Input<String> resourceIdScope;

    public Input<String> getResourceIdScope() {
        return this.resourceIdScope == null ? Input.empty() : this.resourceIdScope;
    }

    /**
     * List of types of AWS resources to evaluate
     * 
     */
    @InputImport(name="resourceTypesScopes")
    private final @Nullable Input<List<String>> resourceTypesScopes;

    public Input<List<String>> getResourceTypesScopes() {
        return this.resourceTypesScopes == null ? Input.empty() : this.resourceTypesScopes;
    }

    /**
     * Tag key of AWS resources to evaluate
     * 
     */
    @InputImport(name="tagKeyScope")
    private final @Nullable Input<String> tagKeyScope;

    public Input<String> getTagKeyScope() {
        return this.tagKeyScope == null ? Input.empty() : this.tagKeyScope;
    }

    /**
     * Tag value of AWS resources to evaluate
     * 
     */
    @InputImport(name="tagValueScope")
    private final @Nullable Input<String> tagValueScope;

    public Input<String> getTagValueScope() {
        return this.tagValueScope == null ? Input.empty() : this.tagValueScope;
    }

    /**
     * List of notification types that trigger AWS Config to run an evaluation for the rule. Valid values: `ConfigurationItemChangeNotification`, `OversizedConfigurationItemChangeNotification`, and `ScheduledNotification`
     * 
     */
    @InputImport(name="triggerTypes")
    private final @Nullable Input<List<String>> triggerTypes;

    public Input<List<String>> getTriggerTypes() {
        return this.triggerTypes == null ? Input.empty() : this.triggerTypes;
    }

    public OrganizationCustomRuleState(
        @Nullable Input<String> arn,
        @Nullable Input<String> description,
        @Nullable Input<List<String>> excludedAccounts,
        @Nullable Input<String> inputParameters,
        @Nullable Input<String> lambdaFunctionArn,
        @Nullable Input<String> maximumExecutionFrequency,
        @Nullable Input<String> name,
        @Nullable Input<String> resourceIdScope,
        @Nullable Input<List<String>> resourceTypesScopes,
        @Nullable Input<String> tagKeyScope,
        @Nullable Input<String> tagValueScope,
        @Nullable Input<List<String>> triggerTypes) {
        this.arn = arn;
        this.description = description;
        this.excludedAccounts = excludedAccounts;
        this.inputParameters = inputParameters;
        this.lambdaFunctionArn = lambdaFunctionArn;
        this.maximumExecutionFrequency = maximumExecutionFrequency;
        this.name = name;
        this.resourceIdScope = resourceIdScope;
        this.resourceTypesScopes = resourceTypesScopes;
        this.tagKeyScope = tagKeyScope;
        this.tagValueScope = tagValueScope;
        this.triggerTypes = triggerTypes;
    }

    private OrganizationCustomRuleState() {
        this.arn = Input.empty();
        this.description = Input.empty();
        this.excludedAccounts = Input.empty();
        this.inputParameters = Input.empty();
        this.lambdaFunctionArn = Input.empty();
        this.maximumExecutionFrequency = Input.empty();
        this.name = Input.empty();
        this.resourceIdScope = Input.empty();
        this.resourceTypesScopes = Input.empty();
        this.tagKeyScope = Input.empty();
        this.tagValueScope = Input.empty();
        this.triggerTypes = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(OrganizationCustomRuleState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> arn;
        private @Nullable Input<String> description;
        private @Nullable Input<List<String>> excludedAccounts;
        private @Nullable Input<String> inputParameters;
        private @Nullable Input<String> lambdaFunctionArn;
        private @Nullable Input<String> maximumExecutionFrequency;
        private @Nullable Input<String> name;
        private @Nullable Input<String> resourceIdScope;
        private @Nullable Input<List<String>> resourceTypesScopes;
        private @Nullable Input<String> tagKeyScope;
        private @Nullable Input<String> tagValueScope;
        private @Nullable Input<List<String>> triggerTypes;

        public Builder() {
    	      // Empty
        }

        public Builder(OrganizationCustomRuleState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.description = defaults.description;
    	      this.excludedAccounts = defaults.excludedAccounts;
    	      this.inputParameters = defaults.inputParameters;
    	      this.lambdaFunctionArn = defaults.lambdaFunctionArn;
    	      this.maximumExecutionFrequency = defaults.maximumExecutionFrequency;
    	      this.name = defaults.name;
    	      this.resourceIdScope = defaults.resourceIdScope;
    	      this.resourceTypesScopes = defaults.resourceTypesScopes;
    	      this.tagKeyScope = defaults.tagKeyScope;
    	      this.tagValueScope = defaults.tagValueScope;
    	      this.triggerTypes = defaults.triggerTypes;
        }

        public Builder setArn(@Nullable Input<String> arn) {
            this.arn = arn;
            return this;
        }

        public Builder setArn(@Nullable String arn) {
            this.arn = Input.ofNullable(arn);
            return this;
        }

        public Builder setDescription(@Nullable Input<String> description) {
            this.description = description;
            return this;
        }

        public Builder setDescription(@Nullable String description) {
            this.description = Input.ofNullable(description);
            return this;
        }

        public Builder setExcludedAccounts(@Nullable Input<List<String>> excludedAccounts) {
            this.excludedAccounts = excludedAccounts;
            return this;
        }

        public Builder setExcludedAccounts(@Nullable List<String> excludedAccounts) {
            this.excludedAccounts = Input.ofNullable(excludedAccounts);
            return this;
        }

        public Builder setInputParameters(@Nullable Input<String> inputParameters) {
            this.inputParameters = inputParameters;
            return this;
        }

        public Builder setInputParameters(@Nullable String inputParameters) {
            this.inputParameters = Input.ofNullable(inputParameters);
            return this;
        }

        public Builder setLambdaFunctionArn(@Nullable Input<String> lambdaFunctionArn) {
            this.lambdaFunctionArn = lambdaFunctionArn;
            return this;
        }

        public Builder setLambdaFunctionArn(@Nullable String lambdaFunctionArn) {
            this.lambdaFunctionArn = Input.ofNullable(lambdaFunctionArn);
            return this;
        }

        public Builder setMaximumExecutionFrequency(@Nullable Input<String> maximumExecutionFrequency) {
            this.maximumExecutionFrequency = maximumExecutionFrequency;
            return this;
        }

        public Builder setMaximumExecutionFrequency(@Nullable String maximumExecutionFrequency) {
            this.maximumExecutionFrequency = Input.ofNullable(maximumExecutionFrequency);
            return this;
        }

        public Builder setName(@Nullable Input<String> name) {
            this.name = name;
            return this;
        }

        public Builder setName(@Nullable String name) {
            this.name = Input.ofNullable(name);
            return this;
        }

        public Builder setResourceIdScope(@Nullable Input<String> resourceIdScope) {
            this.resourceIdScope = resourceIdScope;
            return this;
        }

        public Builder setResourceIdScope(@Nullable String resourceIdScope) {
            this.resourceIdScope = Input.ofNullable(resourceIdScope);
            return this;
        }

        public Builder setResourceTypesScopes(@Nullable Input<List<String>> resourceTypesScopes) {
            this.resourceTypesScopes = resourceTypesScopes;
            return this;
        }

        public Builder setResourceTypesScopes(@Nullable List<String> resourceTypesScopes) {
            this.resourceTypesScopes = Input.ofNullable(resourceTypesScopes);
            return this;
        }

        public Builder setTagKeyScope(@Nullable Input<String> tagKeyScope) {
            this.tagKeyScope = tagKeyScope;
            return this;
        }

        public Builder setTagKeyScope(@Nullable String tagKeyScope) {
            this.tagKeyScope = Input.ofNullable(tagKeyScope);
            return this;
        }

        public Builder setTagValueScope(@Nullable Input<String> tagValueScope) {
            this.tagValueScope = tagValueScope;
            return this;
        }

        public Builder setTagValueScope(@Nullable String tagValueScope) {
            this.tagValueScope = Input.ofNullable(tagValueScope);
            return this;
        }

        public Builder setTriggerTypes(@Nullable Input<List<String>> triggerTypes) {
            this.triggerTypes = triggerTypes;
            return this;
        }

        public Builder setTriggerTypes(@Nullable List<String> triggerTypes) {
            this.triggerTypes = Input.ofNullable(triggerTypes);
            return this;
        }
        public OrganizationCustomRuleState build() {
            return new OrganizationCustomRuleState(arn, description, excludedAccounts, inputParameters, lambdaFunctionArn, maximumExecutionFrequency, name, resourceIdScope, resourceTypesScopes, tagKeyScope, tagValueScope, triggerTypes);
        }
    }
}
