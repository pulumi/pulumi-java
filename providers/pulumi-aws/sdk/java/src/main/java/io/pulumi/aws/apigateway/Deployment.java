// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.apigateway;

import io.pulumi.aws.Utilities;
import io.pulumi.aws.apigateway.DeploymentArgs;
import io.pulumi.aws.apigateway.inputs.DeploymentState;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Export;
import io.pulumi.core.annotations.ResourceType;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;

/**
 * Manages an API Gateway REST Deployment. A deployment is a snapshot of the REST API configuration. The deployment can then be published to callable endpoints via the `aws.apigateway.Stage` resource and optionally managed further with the `aws.apigateway.BasePathMapping` resource, `aws.apigateway.DomainName` resource, and `aws_api_method_settings` resource. For more information, see the [API Gateway Developer Guide](https://docs.aws.amazon.com/apigateway/latest/developerguide/how-to-deploy-api.html).
 * 
 * To properly capture all REST API configuration in a deployment, this resource must have dependencies on all prior resources that manage resources/paths, methods, integrations, etc.
 * 
 * * For REST APIs that are configured via OpenAPI specification (`aws.apigateway.RestApi` resource `body` argument), no special dependency setup is needed beyond referencing the  `id` attribute of that resource unless additional resources have further customized the REST API.
 * * When the REST API configuration involves other resources (`aws.apigateway.Integration` resource), the dependency setup can be done with implicit resource references in the `triggers` argument or explicit resource references using the [resource `dependsOn` custom option](https://www.pulumi.com/docs/intro/concepts/resources/#dependson). The `triggers` argument should be preferred over `depends_on`, since `depends_on` can only capture dependency ordering and will not cause the resource to recreate (redeploy the REST API) with upstream configuration changes.
 * 
 * !> **WARNING:** It is recommended to use the `aws.apigateway.Stage` resource instead of managing an API Gateway Stage via the `stage_name` argument of this resource. When this resource is recreated (REST API redeployment) with the `stage_name` configured, the stage is deleted and recreated. This will cause a temporary service interruption, increase provide plan differences, and can require a second apply to recreate any downstream stage configuration such as associated `aws_api_method_settings` resources.
 * 
 * {{% examples %}}
 * ## Example Usage
 * {{% example %}}
 * ### OpenAPI Specification
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 * import * as crypto from "crypto";
 * 
 * const exampleRestApi = new aws.apigateway.RestApi("exampleRestApi", {body: JSON.stringify({
 *     openapi: "3.0.1",
 *     info: {
 *         title: "example",
 *         version: "1.0",
 *     },
 *     paths: {
 *         "/path1": {
 *             get: {
 *                 "x-amazon-apigateway-integration": {
 *                     httpMethod: "GET",
 *                     payloadFormatVersion: "1.0",
 *                     type: "HTTP_PROXY",
 *                     uri: "https://ip-ranges.amazonaws.com/ip-ranges.json",
 *                 },
 *             },
 *         },
 *     },
 * })});
 * const exampleDeployment = new aws.apigateway.Deployment("exampleDeployment", {
 *     restApi: exampleRestApi.id,
 *     triggers: {
 *         redeployment: exampleRestApi.body.apply(body => JSON.stringify(body)).apply(toJSON => crypto.createHash('sha1').update(toJSON).digest('hex')),
 *     },
 * });
 * const exampleStage = new aws.apigateway.Stage("exampleStage", {
 *     deployment: exampleDeployment.id,
 *     restApi: exampleRestApi.id,
 *     stageName: "example",
 * });
 * ```
 * ```python
 * import pulumi
 * import hashlib
 * import json
 * import pulumi_aws as aws
 * 
 * example_rest_api = aws.apigateway.RestApi("exampleRestApi", body=json.dumps({
 *     "openapi": "3.0.1",
 *     "info": {
 *         "title": "example",
 *         "version": "1.0",
 *     },
 *     "paths": {
 *         "/path1": {
 *             "get": {
 *                 "x-amazon-apigateway-integration": {
 *                     "httpMethod": "GET",
 *                     "payloadFormatVersion": "1.0",
 *                     "type": "HTTP_PROXY",
 *                     "uri": "https://ip-ranges.amazonaws.com/ip-ranges.json",
 *                 },
 *             },
 *         },
 *     },
 * }))
 * example_deployment = aws.apigateway.Deployment("exampleDeployment",
 *     rest_api=example_rest_api.id,
 *     triggers={
 *         "redeployment": example_rest_api.body.apply(lambda body: json.dumps(body)).apply(lambda to_json: hashlib.sha1(to_json.encode()).hexdigest()),
 *     })
 * example_stage = aws.apigateway.Stage("exampleStage",
 *     deployment=example_deployment.id,
 *     rest_api=example_rest_api.id,
 *     stage_name="example")
 * ```
 * ```csharp
 * using System.Collections.Generic;
 * using System.Security.Cryptography;
 * using System.Text;
 * using System.Text.Json;
 * using Pulumi;
 * using Aws = Pulumi.Aws;
 * 
 * class MyStack : Stack
 * {
 * 	private static string ComputeSHA1(string input) {
 * 		return BitConverter.ToString(
 * 			SHA1.Create().ComputeHash(Encoding.UTF8.GetBytes(input))
 * 		).Replace("-","").ToLowerInvariant());
 * 	}
 * 
 *     public MyStack()
 *     {
 *         var exampleRestApi = new Aws.ApiGateway.RestApi("exampleRestApi", new Aws.ApiGateway.RestApiArgs
 *         {
 *             Body = JsonSerializer.Serialize(new Dictionary<string, object?>
 *             {
 *                 { "openapi", "3.0.1" },
 *                 { "info", new Dictionary<string, object?>
 *                 {
 *                     { "title", "example" },
 *                     { "version", "1.0" },
 *                 } },
 *                 { "paths", new Dictionary<string, object?>
 *                 {
 *                     { "/path1", new Dictionary<string, object?>
 *                     {
 *                         { "get", new Dictionary<string, object?>
 *                         {
 *                             { "x-amazon-apigateway-integration", new Dictionary<string, object?>
 *                             {
 *                                 { "httpMethod", "GET" },
 *                                 { "payloadFormatVersion", "1.0" },
 *                                 { "type", "HTTP_PROXY" },
 *                                 { "uri", "https://ip-ranges.amazonaws.com/ip-ranges.json" },
 *                             } },
 *                         } },
 *                     } },
 *                 } },
 *             }),
 *         });
 *         var exampleDeployment = new Aws.ApiGateway.Deployment("exampleDeployment", new Aws.ApiGateway.DeploymentArgs
 *         {
 *             RestApi = exampleRestApi.Id,
 *             Triggers = 
 *             {
 *                 { "redeployment", exampleRestApi.Body.Apply(body => JsonSerializer.Serialize(body)).Apply(toJSON => ComputeSHA1(toJSON)) },
 *             },
 *         });
 *         var exampleStage = new Aws.ApiGateway.Stage("exampleStage", new Aws.ApiGateway.StageArgs
 *         {
 *             Deployment = exampleDeployment.Id,
 *             RestApi = exampleRestApi.Id,
 *             StageName = "example",
 *         });
 *     }
 * 
 * }
 * ```
 * ```go
 * package main
 * 
 * import (
 * 	"crypto/sha1"
 * 	"encoding/json"
 * 	"fmt"
 * 
 * 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/apigateway"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func sha1Hash(input string) string {
 * 	hash := sha1.Sum([]byte(input))
 * 	return hex.EncodeToString(hash[:])
 * }
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		tmpJSON0, err := json.Marshal(map[string]interface{}{
 * 			"openapi": "3.0.1",
 * 			"info": map[string]interface{}{
 * 				"title":   "example",
 * 				"version": "1.0",
 * 			},
 * 			"paths": map[string]interface{}{
 * 				"/path1": map[string]interface{}{
 * 					"get": map[string]interface{}{
 * 						"x-amazon-apigateway-integration": map[string]interface{}{
 * 							"httpMethod":           "GET",
 * 							"payloadFormatVersion": "1.0",
 * 							"type":                 "HTTP_PROXY",
 * 							"uri":                  "https://ip-ranges.amazonaws.com/ip-ranges.json",
 * 						},
 * 					},
 * 				},
 * 			},
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		json0 := string(tmpJSON0)
 * 		exampleRestApi, err := apigateway.NewRestApi(ctx, "exampleRestApi", &apigateway.RestApiArgs{
 * 			Body: pulumi.String(json0),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		exampleDeployment, err := apigateway.NewDeployment(ctx, "exampleDeployment", &apigateway.DeploymentArgs{
 * 			RestApi: exampleRestApi.ID(),
 * 			Triggers: pulumi.StringMap{
 * 				"redeployment": exampleRestApi.Body.ApplyT(func(body string) (pulumi.String, error) {
 * 					var _zero pulumi.String
 * 					tmpJSON1, err := json.Marshal(body)
 * 					if err != nil {
 * 						return _zero, err
 * 					}
 * 					json1 := string(tmpJSON1)
 * 					return json1, nil
 * 				}).(pulumi.StringOutput).ApplyT(func(toJSON string) (pulumi.String, error) {
 * 					return sha1Hash(toJSON), nil
 * 				}).(pulumi.StringOutput),
 * 			},
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		_, err = apigateway.NewStage(ctx, "exampleStage", &apigateway.StageArgs{
 * 			Deployment: exampleDeployment.ID(),
 * 			RestApi:    exampleRestApi.ID(),
 * 			StageName:  pulumi.String("example"),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * ```
 * {{% /example %}}
 * {{% example %}}
 * ### Resources
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 * import * as crypto from "crypto";
 * 
 * const exampleRestApi = new aws.apigateway.RestApi("exampleRestApi", {});
 * const exampleResource = new aws.apigateway.Resource("exampleResource", {
 *     parentId: exampleRestApi.rootResourceId,
 *     pathPart: "example",
 *     restApi: exampleRestApi.id,
 * });
 * const exampleMethod = new aws.apigateway.Method("exampleMethod", {
 *     authorization: "NONE",
 *     httpMethod: "GET",
 *     resourceId: exampleResource.id,
 *     restApi: exampleRestApi.id,
 * });
 * const exampleIntegration = new aws.apigateway.Integration("exampleIntegration", {
 *     httpMethod: exampleMethod.httpMethod,
 *     resourceId: exampleResource.id,
 *     restApi: exampleRestApi.id,
 *     type: "MOCK",
 * });
 * const exampleDeployment = new aws.apigateway.Deployment("exampleDeployment", {
 *     restApi: exampleRestApi.id,
 *     triggers: {
 *         redeployment: pulumi.all([exampleResource.id, exampleMethod.id, exampleIntegration.id]).apply(([exampleResourceId, exampleMethodId, exampleIntegrationId]) => JSON.stringify([
 *             exampleResourceId,
 *             exampleMethodId,
 *             exampleIntegrationId,
 *         ])).apply(toJSON => crypto.createHash('sha1').update(toJSON).digest('hex')),
 *     },
 * });
 * const exampleStage = new aws.apigateway.Stage("exampleStage", {
 *     deployment: exampleDeployment.id,
 *     restApi: exampleRestApi.id,
 *     stageName: "example",
 * });
 * ```
 * ```python
 * import pulumi
 * import hashlib
 * import json
 * import pulumi_aws as aws
 * 
 * example_rest_api = aws.apigateway.RestApi("exampleRestApi")
 * example_resource = aws.apigateway.Resource("exampleResource",
 *     parent_id=example_rest_api.root_resource_id,
 *     path_part="example",
 *     rest_api=example_rest_api.id)
 * example_method = aws.apigateway.Method("exampleMethod",
 *     authorization="NONE",
 *     http_method="GET",
 *     resource_id=example_resource.id,
 *     rest_api=example_rest_api.id)
 * example_integration = aws.apigateway.Integration("exampleIntegration",
 *     http_method=example_method.http_method,
 *     resource_id=example_resource.id,
 *     rest_api=example_rest_api.id,
 *     type="MOCK")
 * example_deployment = aws.apigateway.Deployment("exampleDeployment",
 *     rest_api=example_rest_api.id,
 *     triggers={
 *         "redeployment": pulumi.Output.all(example_resource.id, example_method.id, example_integration.id).apply(lambda exampleResourceId, exampleMethodId, exampleIntegrationId: json.dumps([
 *             example_resource_id,
 *             example_method_id,
 *             example_integration_id,
 *         ])).apply(lambda to_json: hashlib.sha1(to_json.encode()).hexdigest()),
 *     })
 * example_stage = aws.apigateway.Stage("exampleStage",
 *     deployment=example_deployment.id,
 *     rest_api=example_rest_api.id,
 *     stage_name="example")
 * ```
 * ```csharp
 * using System.Collections.Generic;
 * using System.Security.Cryptography;
 * using System.Text;
 * using System.Text.Json;
 * using Pulumi;
 * using Aws = Pulumi.Aws;
 * 
 * class MyStack : Stack
 * {
 * 	private static string ComputeSHA1(string input) {
 * 		return BitConverter.ToString(
 * 			SHA1.Create().ComputeHash(Encoding.UTF8.GetBytes(input))
 * 		).Replace("-","").ToLowerInvariant());
 * 	}
 * 
 *     public MyStack()
 *     {
 *         var exampleRestApi = new Aws.ApiGateway.RestApi("exampleRestApi", new Aws.ApiGateway.RestApiArgs
 *         {
 *         });
 *         var exampleResource = new Aws.ApiGateway.Resource("exampleResource", new Aws.ApiGateway.ResourceArgs
 *         {
 *             ParentId = exampleRestApi.RootResourceId,
 *             PathPart = "example",
 *             RestApi = exampleRestApi.Id,
 *         });
 *         var exampleMethod = new Aws.ApiGateway.Method("exampleMethod", new Aws.ApiGateway.MethodArgs
 *         {
 *             Authorization = "NONE",
 *             HttpMethod = "GET",
 *             ResourceId = exampleResource.Id,
 *             RestApi = exampleRestApi.Id,
 *         });
 *         var exampleIntegration = new Aws.ApiGateway.Integration("exampleIntegration", new Aws.ApiGateway.IntegrationArgs
 *         {
 *             HttpMethod = exampleMethod.HttpMethod,
 *             ResourceId = exampleResource.Id,
 *             RestApi = exampleRestApi.Id,
 *             Type = "MOCK",
 *         });
 *         var exampleDeployment = new Aws.ApiGateway.Deployment("exampleDeployment", new Aws.ApiGateway.DeploymentArgs
 *         {
 *             RestApi = exampleRestApi.Id,
 *             Triggers = 
 *             {
 *                 { "redeployment", Output.Tuple(exampleResource.Id, exampleMethod.Id, exampleIntegration.Id).Apply(values =>
 *                 {
 *                     var exampleResourceId = values.Item1;
 *                     var exampleMethodId = values.Item2;
 *                     var exampleIntegrationId = values.Item3;
 *                     return JsonSerializer.Serialize(new[]
 *                         {
 *                             exampleResourceId,
 *                             exampleMethodId,
 *                             exampleIntegrationId,
 *                         }
 *                     );
 *                 }).Apply(toJSON => ComputeSHA1(toJSON)) },
 *             },
 *         });
 *         var exampleStage = new Aws.ApiGateway.Stage("exampleStage", new Aws.ApiGateway.StageArgs
 *         {
 *             Deployment = exampleDeployment.Id,
 *             RestApi = exampleRestApi.Id,
 *             StageName = "example",
 *         });
 *     }
 * 
 * }
 * ```
 * ```go
 * package main
 * 
 * import (
 * 	"crypto/sha1"
 * 	"encoding/json"
 * 	"fmt"
 * 
 * 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/apigateway"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func sha1Hash(input string) string {
 * 	hash := sha1.Sum([]byte(input))
 * 	return hex.EncodeToString(hash[:])
 * }
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		exampleRestApi, err := apigateway.NewRestApi(ctx, "exampleRestApi", nil)
 * 		if err != nil {
 * 			return err
 * 		}
 * 		exampleResource, err := apigateway.NewResource(ctx, "exampleResource", &apigateway.ResourceArgs{
 * 			ParentId: exampleRestApi.RootResourceId,
 * 			PathPart: pulumi.String("example"),
 * 			RestApi:  exampleRestApi.ID(),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		exampleMethod, err := apigateway.NewMethod(ctx, "exampleMethod", &apigateway.MethodArgs{
 * 			Authorization: pulumi.String("NONE"),
 * 			HttpMethod:    pulumi.String("GET"),
 * 			ResourceId:    exampleResource.ID(),
 * 			RestApi:       exampleRestApi.ID(),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		exampleIntegration, err := apigateway.NewIntegration(ctx, "exampleIntegration", &apigateway.IntegrationArgs{
 * 			HttpMethod: exampleMethod.HttpMethod,
 * 			ResourceId: exampleResource.ID(),
 * 			RestApi:    exampleRestApi.ID(),
 * 			Type:       pulumi.String("MOCK"),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		exampleDeployment, err := apigateway.NewDeployment(ctx, "exampleDeployment", &apigateway.DeploymentArgs{
 * 			RestApi: exampleRestApi.ID(),
 * 			Triggers: pulumi.StringMap{
 * 				"redeployment": pulumi.All(exampleResource.ID(), exampleMethod.ID(), exampleIntegration.ID()).ApplyT(func(_args []interface{}) (string, error) {
 * 					exampleResourceId := _args[0].(string)
 * 					exampleMethodId := _args[1].(string)
 * 					exampleIntegrationId := _args[2].(string)
 * 					var _zero string
 * 					tmpJSON0, err := json.Marshal([]string{
 * 						exampleResourceId,
 * 						exampleMethodId,
 * 						exampleIntegrationId,
 * 					})
 * 					if err != nil {
 * 						return _zero, err
 * 					}
 * 					json0 := string(tmpJSON0)
 * 					return json0, nil
 * 				}).(pulumi.StringOutput).ApplyT(func(toJSON string) (pulumi.String, error) {
 * 					return sha1Hash(toJSON), nil
 * 				}).(pulumi.StringOutput),
 * 			},
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		_, err = apigateway.NewStage(ctx, "exampleStage", &apigateway.StageArgs{
 * 			Deployment: exampleDeployment.ID(),
 * 			RestApi:    exampleRestApi.ID(),
 * 			StageName:  pulumi.String("example"),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * ```
 * {{% /example %}}
 * {{% /examples %}}
 */
@ResourceType(type="aws:apigateway/deployment:Deployment")
public class Deployment extends io.pulumi.resources.CustomResource {
    /**
     * The creation date of the deployment
     * 
     */
    @Export(name="createdDate", type=String.class, parameters={})
    private Output<String> createdDate;

    /**
     * @return The creation date of the deployment
     * 
     */
    public Output<String> getCreatedDate() {
        return this.createdDate;
    }
    /**
     * Description of the deployment
     * 
     */
    @Export(name="description", type=String.class, parameters={})
    private Output</* @Nullable */ String> description;

    /**
     * @return Description of the deployment
     * 
     */
    public Output</* @Nullable */ String> getDescription() {
        return this.description;
    }
    /**
     * The execution ARN to be used in `lambda_permission` resource's `source_arn`
     * when allowing API Gateway to invoke a Lambda function,
     * e.g., `arn:aws:execute-api:eu-west-2:123456789012:z4675bid1j/prod`
     * 
     */
    @Export(name="executionArn", type=String.class, parameters={})
    private Output<String> executionArn;

    /**
     * @return The execution ARN to be used in `lambda_permission` resource's `source_arn`
     * when allowing API Gateway to invoke a Lambda function,
     * e.g., `arn:aws:execute-api:eu-west-2:123456789012:z4675bid1j/prod`
     * 
     */
    public Output<String> getExecutionArn() {
        return this.executionArn;
    }
    /**
     * The URL to invoke the API pointing to the stage,
     * e.g. `https://z4675bid1j.execute-api.eu-west-2.amazonaws.com/prod`
     * 
     */
    @Export(name="invokeUrl", type=String.class, parameters={})
    private Output<String> invokeUrl;

    /**
     * @return The URL to invoke the API pointing to the stage,
     * e.g. `https://z4675bid1j.execute-api.eu-west-2.amazonaws.com/prod`
     * 
     */
    public Output<String> getInvokeUrl() {
        return this.invokeUrl;
    }
    /**
     * REST API identifier.
     * 
     */
    @Export(name="restApi", type=String.class, parameters={})
    private Output<String> restApi;

    /**
     * @return REST API identifier.
     * 
     */
    public Output<String> getRestApi() {
        return this.restApi;
    }
    /**
     * Description to set on the stage managed by the `stage_name` argument.
     * 
     */
    @Export(name="stageDescription", type=String.class, parameters={})
    private Output</* @Nullable */ String> stageDescription;

    /**
     * @return Description to set on the stage managed by the `stage_name` argument.
     * 
     */
    public Output</* @Nullable */ String> getStageDescription() {
        return this.stageDescription;
    }
    /**
     * Name of the stage to create with this deployment. If the specified stage already exists, it will be updated to point to the new deployment. It is recommended to use the `aws.apigateway.Stage` resource instead to manage stages.
     * 
     */
    @Export(name="stageName", type=String.class, parameters={})
    private Output</* @Nullable */ String> stageName;

    /**
     * @return Name of the stage to create with this deployment. If the specified stage already exists, it will be updated to point to the new deployment. It is recommended to use the `aws.apigateway.Stage` resource instead to manage stages.
     * 
     */
    public Output</* @Nullable */ String> getStageName() {
        return this.stageName;
    }
    /**
     * Map of arbitrary keys and values that, when changed, will trigger a redeployment.
     * 
     */
    @Export(name="triggers", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> triggers;

    /**
     * @return Map of arbitrary keys and values that, when changed, will trigger a redeployment.
     * 
     */
    public Output</* @Nullable */ Map<String,String>> getTriggers() {
        return this.triggers;
    }
    /**
     * Map to set on the stage managed by the `stage_name` argument.
     * 
     */
    @Export(name="variables", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> variables;

    /**
     * @return Map to set on the stage managed by the `stage_name` argument.
     * 
     */
    public Output</* @Nullable */ Map<String,String>> getVariables() {
        return this.variables;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Deployment(String name) {
        this(name, DeploymentArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Deployment(String name, DeploymentArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Deployment(String name, DeploymentArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:apigateway/deployment:Deployment", name, args == null ? DeploymentArgs.Empty : args, makeResourceOptions(options, Output.empty()));
    }

    private Deployment(String name, Output<String> id, @Nullable DeploymentState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:apigateway/deployment:Deployment", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Deployment get(String name, Output<String> id, @Nullable DeploymentState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new Deployment(name, id, state, options);
    }
}
