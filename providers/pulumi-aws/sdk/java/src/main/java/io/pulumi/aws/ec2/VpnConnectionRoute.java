// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.ec2;

import io.pulumi.aws.Utilities;
import io.pulumi.aws.ec2.VpnConnectionRouteArgs;
import io.pulumi.aws.ec2.inputs.VpnConnectionRouteState;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Export;
import io.pulumi.core.annotations.ResourceType;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * Provides a static route between a VPN connection and a customer gateway.
 * 
 * {{% examples %}}
 * ## Example Usage
 * {{% example %}}
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 * 
 * const vpc = new aws.ec2.Vpc("vpc", {cidrBlock: "10.0.0.0/16"});
 * const vpnGateway = new aws.ec2.VpnGateway("vpnGateway", {vpcId: vpc.id});
 * const customerGateway = new aws.ec2.CustomerGateway("customerGateway", {
 *     bgpAsn: 65000,
 *     ipAddress: "172.0.0.1",
 *     type: "ipsec.1",
 * });
 * const main = new aws.ec2.VpnConnection("main", {
 *     vpnGatewayId: vpnGateway.id,
 *     customerGatewayId: customerGateway.id,
 *     type: "ipsec.1",
 *     staticRoutesOnly: true,
 * });
 * const office = new aws.ec2.VpnConnectionRoute("office", {
 *     destinationCidrBlock: "192.168.10.0/24",
 *     vpnConnectionId: main.id,
 * });
 * ```
 * ```python
 * import pulumi
 * import pulumi_aws as aws
 * 
 * vpc = aws.ec2.Vpc("vpc", cidr_block="10.0.0.0/16")
 * vpn_gateway = aws.ec2.VpnGateway("vpnGateway", vpc_id=vpc.id)
 * customer_gateway = aws.ec2.CustomerGateway("customerGateway",
 *     bgp_asn="65000",
 *     ip_address="172.0.0.1",
 *     type="ipsec.1")
 * main = aws.ec2.VpnConnection("main",
 *     vpn_gateway_id=vpn_gateway.id,
 *     customer_gateway_id=customer_gateway.id,
 *     type="ipsec.1",
 *     static_routes_only=True)
 * office = aws.ec2.VpnConnectionRoute("office",
 *     destination_cidr_block="192.168.10.0/24",
 *     vpn_connection_id=main.id)
 * ```
 * ```csharp
 * using Pulumi;
 * using Aws = Pulumi.Aws;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var vpc = new Aws.Ec2.Vpc("vpc", new Aws.Ec2.VpcArgs
 *         {
 *             CidrBlock = "10.0.0.0/16",
 *         });
 *         var vpnGateway = new Aws.Ec2.VpnGateway("vpnGateway", new Aws.Ec2.VpnGatewayArgs
 *         {
 *             VpcId = vpc.Id,
 *         });
 *         var customerGateway = new Aws.Ec2.CustomerGateway("customerGateway", new Aws.Ec2.CustomerGatewayArgs
 *         {
 *             BgpAsn = "65000",
 *             IpAddress = "172.0.0.1",
 *             Type = "ipsec.1",
 *         });
 *         var main = new Aws.Ec2.VpnConnection("main", new Aws.Ec2.VpnConnectionArgs
 *         {
 *             VpnGatewayId = vpnGateway.Id,
 *             CustomerGatewayId = customerGateway.Id,
 *             Type = "ipsec.1",
 *             StaticRoutesOnly = true,
 *         });
 *         var office = new Aws.Ec2.VpnConnectionRoute("office", new Aws.Ec2.VpnConnectionRouteArgs
 *         {
 *             DestinationCidrBlock = "192.168.10.0/24",
 *             VpnConnectionId = main.Id,
 *         });
 *     }
 * 
 * }
 * ```
 * ```go
 * package main
 * 
 * import (
 * 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/ec2"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		vpc, err := ec2.NewVpc(ctx, "vpc", &ec2.VpcArgs{
 * 			CidrBlock: pulumi.String("10.0.0.0/16"),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		vpnGateway, err := ec2.NewVpnGateway(ctx, "vpnGateway", &ec2.VpnGatewayArgs{
 * 			VpcId: vpc.ID(),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		customerGateway, err := ec2.NewCustomerGateway(ctx, "customerGateway", &ec2.CustomerGatewayArgs{
 * 			BgpAsn:    pulumi.String("65000"),
 * 			IpAddress: pulumi.String("172.0.0.1"),
 * 			Type:      pulumi.String("ipsec.1"),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		main, err := ec2.NewVpnConnection(ctx, "main", &ec2.VpnConnectionArgs{
 * 			VpnGatewayId:      vpnGateway.ID(),
 * 			CustomerGatewayId: customerGateway.ID(),
 * 			Type:              pulumi.String("ipsec.1"),
 * 			StaticRoutesOnly:  pulumi.Bool(true),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		_, err = ec2.NewVpnConnectionRoute(ctx, "office", &ec2.VpnConnectionRouteArgs{
 * 			DestinationCidrBlock: pulumi.String("192.168.10.0/24"),
 * 			VpnConnectionId:      main.ID(),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * ```
 * {{% /example %}}
 * {{% /examples %}}
 */
@ResourceType(type="aws:ec2/vpnConnectionRoute:VpnConnectionRoute")
public class VpnConnectionRoute extends io.pulumi.resources.CustomResource {
    /**
     * The CIDR block associated with the local subnet of the customer network.
     * 
     */
    @Export(name="destinationCidrBlock", type=String.class, parameters={})
    private Output<String> destinationCidrBlock;

    /**
     * @return The CIDR block associated with the local subnet of the customer network.
     * 
     */
    public Output<String> getDestinationCidrBlock() {
        return this.destinationCidrBlock;
    }
    /**
     * The ID of the VPN connection.
     * 
     */
    @Export(name="vpnConnectionId", type=String.class, parameters={})
    private Output<String> vpnConnectionId;

    /**
     * @return The ID of the VPN connection.
     * 
     */
    public Output<String> getVpnConnectionId() {
        return this.vpnConnectionId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public VpnConnectionRoute(String name) {
        this(name, VpnConnectionRouteArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public VpnConnectionRoute(String name, VpnConnectionRouteArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public VpnConnectionRoute(String name, VpnConnectionRouteArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:ec2/vpnConnectionRoute:VpnConnectionRoute", name, args == null ? VpnConnectionRouteArgs.Empty : args, makeResourceOptions(options, Output.empty()));
    }

    private VpnConnectionRoute(String name, Output<String> id, @Nullable VpnConnectionRouteState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:ec2/vpnConnectionRoute:VpnConnectionRoute", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static VpnConnectionRoute get(String name, Output<String> id, @Nullable VpnConnectionRouteState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new VpnConnectionRoute(name, id, state, options);
    }
}
