// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.apigatewayv2.inputs;

import io.pulumi.core.annotations.InputImport;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetExportArgs extends io.pulumi.resources.InvokeArgs {

    public static final GetExportArgs Empty = new GetExportArgs();

    /**
     * The API identifier.
     * 
     */
    @InputImport(name="apiId", required=true)
      private final String apiId;

    public String getApiId() {
        return this.apiId;
    }

    /**
     * The version of the API Gateway export algorithm. API Gateway uses the latest version by default. Currently, the only supported version is `1.0`.
     * 
     */
    @InputImport(name="exportVersion")
      private final @Nullable String exportVersion;

    public Optional<String> getExportVersion() {
        return this.exportVersion == null ? Optional.empty() : Optional.ofNullable(this.exportVersion);
    }

    /**
     * Specifies whether to include API Gateway extensions in the exported API definition. API Gateway extensions are included by default.
     * 
     */
    @InputImport(name="includeExtensions")
      private final @Nullable Boolean includeExtensions;

    public Optional<Boolean> getIncludeExtensions() {
        return this.includeExtensions == null ? Optional.empty() : Optional.ofNullable(this.includeExtensions);
    }

    /**
     * The output type of the exported definition file. Valid values are `JSON` and `YAML`.
     * 
     */
    @InputImport(name="outputType", required=true)
      private final String outputType;

    public String getOutputType() {
        return this.outputType;
    }

    /**
     * The version of the API specification to use. `OAS30`, for OpenAPI 3.0, is the only supported value.
     * 
     */
    @InputImport(name="specification", required=true)
      private final String specification;

    public String getSpecification() {
        return this.specification;
    }

    /**
     * The name of the API stage to export. If you don't specify this property, a representation of the latest API configuration is exported.
     * 
     */
    @InputImport(name="stageName")
      private final @Nullable String stageName;

    public Optional<String> getStageName() {
        return this.stageName == null ? Optional.empty() : Optional.ofNullable(this.stageName);
    }

    public GetExportArgs(
        String apiId,
        @Nullable String exportVersion,
        @Nullable Boolean includeExtensions,
        String outputType,
        String specification,
        @Nullable String stageName) {
        this.apiId = Objects.requireNonNull(apiId, "expected parameter 'apiId' to be non-null");
        this.exportVersion = exportVersion;
        this.includeExtensions = includeExtensions;
        this.outputType = Objects.requireNonNull(outputType, "expected parameter 'outputType' to be non-null");
        this.specification = Objects.requireNonNull(specification, "expected parameter 'specification' to be non-null");
        this.stageName = stageName;
    }

    private GetExportArgs() {
        this.apiId = null;
        this.exportVersion = null;
        this.includeExtensions = null;
        this.outputType = null;
        this.specification = null;
        this.stageName = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetExportArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String apiId;
        private @Nullable String exportVersion;
        private @Nullable Boolean includeExtensions;
        private String outputType;
        private String specification;
        private @Nullable String stageName;

        public Builder() {
    	      // Empty
        }

        public Builder(GetExportArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.apiId = defaults.apiId;
    	      this.exportVersion = defaults.exportVersion;
    	      this.includeExtensions = defaults.includeExtensions;
    	      this.outputType = defaults.outputType;
    	      this.specification = defaults.specification;
    	      this.stageName = defaults.stageName;
        }

        public Builder apiId(String apiId) {
            this.apiId = Objects.requireNonNull(apiId);
            return this;
        }

        public Builder exportVersion(@Nullable String exportVersion) {
            this.exportVersion = exportVersion;
            return this;
        }

        public Builder includeExtensions(@Nullable Boolean includeExtensions) {
            this.includeExtensions = includeExtensions;
            return this;
        }

        public Builder outputType(String outputType) {
            this.outputType = Objects.requireNonNull(outputType);
            return this;
        }

        public Builder specification(String specification) {
            this.specification = Objects.requireNonNull(specification);
            return this;
        }

        public Builder stageName(@Nullable String stageName) {
            this.stageName = stageName;
            return this;
        }
        public GetExportArgs build() {
            return new GetExportArgs(apiId, exportVersion, includeExtensions, outputType, specification, stageName);
        }
    }
}
