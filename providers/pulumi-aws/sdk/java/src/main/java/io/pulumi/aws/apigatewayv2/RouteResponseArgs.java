// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.apigatewayv2;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class RouteResponseArgs extends io.pulumi.resources.ResourceArgs {

    public static final RouteResponseArgs Empty = new RouteResponseArgs();

    /**
     * The API identifier.
     * 
     */
    @InputImport(name="apiId", required=true)
    private final Input<String> apiId;

    public Input<String> getApiId() {
        return this.apiId;
    }

    /**
     * The [model selection expression](https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-model-selection-expressions) for the route response.
     * 
     */
    @InputImport(name="modelSelectionExpression")
    private final @Nullable Input<String> modelSelectionExpression;

    public Input<String> getModelSelectionExpression() {
        return this.modelSelectionExpression == null ? Input.empty() : this.modelSelectionExpression;
    }

    /**
     * The response models for the route response.
     * 
     */
    @InputImport(name="responseModels")
    private final @Nullable Input<Map<String,String>> responseModels;

    public Input<Map<String,String>> getResponseModels() {
        return this.responseModels == null ? Input.empty() : this.responseModels;
    }

    /**
     * The identifier of the `aws.apigatewayv2.Route`.
     * 
     */
    @InputImport(name="routeId", required=true)
    private final Input<String> routeId;

    public Input<String> getRouteId() {
        return this.routeId;
    }

    /**
     * The route response key.
     * 
     */
    @InputImport(name="routeResponseKey", required=true)
    private final Input<String> routeResponseKey;

    public Input<String> getRouteResponseKey() {
        return this.routeResponseKey;
    }

    public RouteResponseArgs(
        Input<String> apiId,
        @Nullable Input<String> modelSelectionExpression,
        @Nullable Input<Map<String,String>> responseModels,
        Input<String> routeId,
        Input<String> routeResponseKey) {
        this.apiId = Objects.requireNonNull(apiId, "expected parameter 'apiId' to be non-null");
        this.modelSelectionExpression = modelSelectionExpression;
        this.responseModels = responseModels;
        this.routeId = Objects.requireNonNull(routeId, "expected parameter 'routeId' to be non-null");
        this.routeResponseKey = Objects.requireNonNull(routeResponseKey, "expected parameter 'routeResponseKey' to be non-null");
    }

    private RouteResponseArgs() {
        this.apiId = Input.empty();
        this.modelSelectionExpression = Input.empty();
        this.responseModels = Input.empty();
        this.routeId = Input.empty();
        this.routeResponseKey = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RouteResponseArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<String> apiId;
        private @Nullable Input<String> modelSelectionExpression;
        private @Nullable Input<Map<String,String>> responseModels;
        private Input<String> routeId;
        private Input<String> routeResponseKey;

        public Builder() {
    	      // Empty
        }

        public Builder(RouteResponseArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.apiId = defaults.apiId;
    	      this.modelSelectionExpression = defaults.modelSelectionExpression;
    	      this.responseModels = defaults.responseModels;
    	      this.routeId = defaults.routeId;
    	      this.routeResponseKey = defaults.routeResponseKey;
        }

        public Builder setApiId(Input<String> apiId) {
            this.apiId = Objects.requireNonNull(apiId);
            return this;
        }

        public Builder setApiId(String apiId) {
            this.apiId = Input.of(Objects.requireNonNull(apiId));
            return this;
        }

        public Builder setModelSelectionExpression(@Nullable Input<String> modelSelectionExpression) {
            this.modelSelectionExpression = modelSelectionExpression;
            return this;
        }

        public Builder setModelSelectionExpression(@Nullable String modelSelectionExpression) {
            this.modelSelectionExpression = Input.ofNullable(modelSelectionExpression);
            return this;
        }

        public Builder setResponseModels(@Nullable Input<Map<String,String>> responseModels) {
            this.responseModels = responseModels;
            return this;
        }

        public Builder setResponseModels(@Nullable Map<String,String> responseModels) {
            this.responseModels = Input.ofNullable(responseModels);
            return this;
        }

        public Builder setRouteId(Input<String> routeId) {
            this.routeId = Objects.requireNonNull(routeId);
            return this;
        }

        public Builder setRouteId(String routeId) {
            this.routeId = Input.of(Objects.requireNonNull(routeId));
            return this;
        }

        public Builder setRouteResponseKey(Input<String> routeResponseKey) {
            this.routeResponseKey = Objects.requireNonNull(routeResponseKey);
            return this;
        }

        public Builder setRouteResponseKey(String routeResponseKey) {
            this.routeResponseKey = Input.of(Objects.requireNonNull(routeResponseKey));
            return this;
        }
        public RouteResponseArgs build() {
            return new RouteResponseArgs(apiId, modelSelectionExpression, responseModels, routeId, routeResponseKey);
        }
    }
}
