// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.acmpca.inputs;

import io.pulumi.aws.acmpca.inputs.CertificateValidityGetArgs;
import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class CertificateState extends io.pulumi.resources.ResourceArgs {

    public static final CertificateState Empty = new CertificateState();

    /**
     * Amazon Resource Name (ARN) of the certificate.
     * 
     */
    @InputImport(name="arn")
    private final @Nullable Input<String> arn;

    public Input<String> getArn() {
        return this.arn == null ? Input.empty() : this.arn;
    }

    /**
     * The PEM-encoded certificate value.
     * 
     */
    @InputImport(name="certificate")
    private final @Nullable Input<String> certificate;

    public Input<String> getCertificate() {
        return this.certificate == null ? Input.empty() : this.certificate;
    }

    /**
     * Amazon Resource Name (ARN) of the certificate authority.
     * 
     */
    @InputImport(name="certificateAuthorityArn")
    private final @Nullable Input<String> certificateAuthorityArn;

    public Input<String> getCertificateAuthorityArn() {
        return this.certificateAuthorityArn == null ? Input.empty() : this.certificateAuthorityArn;
    }

    /**
     * The PEM-encoded certificate chain that includes any intermediate certificates and chains up to root CA.
     * 
     */
    @InputImport(name="certificateChain")
    private final @Nullable Input<String> certificateChain;

    public Input<String> getCertificateChain() {
        return this.certificateChain == null ? Input.empty() : this.certificateChain;
    }

    /**
     * Certificate Signing Request in PEM format.
     * 
     */
    @InputImport(name="certificateSigningRequest")
    private final @Nullable Input<String> certificateSigningRequest;

    public Input<String> getCertificateSigningRequest() {
        return this.certificateSigningRequest == null ? Input.empty() : this.certificateSigningRequest;
    }

    /**
     * Algorithm to use to sign certificate requests. Valid values: `SHA256WITHRSA`, `SHA256WITHECDSA`, `SHA384WITHRSA`, `SHA384WITHECDSA`, `SHA512WITHRSA`, `SHA512WITHECDSA`
     * 
     */
    @InputImport(name="signingAlgorithm")
    private final @Nullable Input<String> signingAlgorithm;

    public Input<String> getSigningAlgorithm() {
        return this.signingAlgorithm == null ? Input.empty() : this.signingAlgorithm;
    }

    /**
     * The template to use when issuing a certificate. See [ACM PCA Documentation](https://docs.aws.amazon.com/acm-pca/latest/userguide/UsingTemplates.html) for more information.
     * 
     */
    @InputImport(name="templateArn")
    private final @Nullable Input<String> templateArn;

    public Input<String> getTemplateArn() {
        return this.templateArn == null ? Input.empty() : this.templateArn;
    }

    /**
     * Configures end of the validity period for the certificate. See validity block below.
     * 
     */
    @InputImport(name="validity")
    private final @Nullable Input<CertificateValidityGetArgs> validity;

    public Input<CertificateValidityGetArgs> getValidity() {
        return this.validity == null ? Input.empty() : this.validity;
    }

    public CertificateState(
        @Nullable Input<String> arn,
        @Nullable Input<String> certificate,
        @Nullable Input<String> certificateAuthorityArn,
        @Nullable Input<String> certificateChain,
        @Nullable Input<String> certificateSigningRequest,
        @Nullable Input<String> signingAlgorithm,
        @Nullable Input<String> templateArn,
        @Nullable Input<CertificateValidityGetArgs> validity) {
        this.arn = arn;
        this.certificate = certificate;
        this.certificateAuthorityArn = certificateAuthorityArn;
        this.certificateChain = certificateChain;
        this.certificateSigningRequest = certificateSigningRequest;
        this.signingAlgorithm = signingAlgorithm;
        this.templateArn = templateArn;
        this.validity = validity;
    }

    private CertificateState() {
        this.arn = Input.empty();
        this.certificate = Input.empty();
        this.certificateAuthorityArn = Input.empty();
        this.certificateChain = Input.empty();
        this.certificateSigningRequest = Input.empty();
        this.signingAlgorithm = Input.empty();
        this.templateArn = Input.empty();
        this.validity = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CertificateState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> arn;
        private @Nullable Input<String> certificate;
        private @Nullable Input<String> certificateAuthorityArn;
        private @Nullable Input<String> certificateChain;
        private @Nullable Input<String> certificateSigningRequest;
        private @Nullable Input<String> signingAlgorithm;
        private @Nullable Input<String> templateArn;
        private @Nullable Input<CertificateValidityGetArgs> validity;

        public Builder() {
    	      // Empty
        }

        public Builder(CertificateState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.certificate = defaults.certificate;
    	      this.certificateAuthorityArn = defaults.certificateAuthorityArn;
    	      this.certificateChain = defaults.certificateChain;
    	      this.certificateSigningRequest = defaults.certificateSigningRequest;
    	      this.signingAlgorithm = defaults.signingAlgorithm;
    	      this.templateArn = defaults.templateArn;
    	      this.validity = defaults.validity;
        }

        public Builder setArn(@Nullable Input<String> arn) {
            this.arn = arn;
            return this;
        }

        public Builder setArn(@Nullable String arn) {
            this.arn = Input.ofNullable(arn);
            return this;
        }

        public Builder setCertificate(@Nullable Input<String> certificate) {
            this.certificate = certificate;
            return this;
        }

        public Builder setCertificate(@Nullable String certificate) {
            this.certificate = Input.ofNullable(certificate);
            return this;
        }

        public Builder setCertificateAuthorityArn(@Nullable Input<String> certificateAuthorityArn) {
            this.certificateAuthorityArn = certificateAuthorityArn;
            return this;
        }

        public Builder setCertificateAuthorityArn(@Nullable String certificateAuthorityArn) {
            this.certificateAuthorityArn = Input.ofNullable(certificateAuthorityArn);
            return this;
        }

        public Builder setCertificateChain(@Nullable Input<String> certificateChain) {
            this.certificateChain = certificateChain;
            return this;
        }

        public Builder setCertificateChain(@Nullable String certificateChain) {
            this.certificateChain = Input.ofNullable(certificateChain);
            return this;
        }

        public Builder setCertificateSigningRequest(@Nullable Input<String> certificateSigningRequest) {
            this.certificateSigningRequest = certificateSigningRequest;
            return this;
        }

        public Builder setCertificateSigningRequest(@Nullable String certificateSigningRequest) {
            this.certificateSigningRequest = Input.ofNullable(certificateSigningRequest);
            return this;
        }

        public Builder setSigningAlgorithm(@Nullable Input<String> signingAlgorithm) {
            this.signingAlgorithm = signingAlgorithm;
            return this;
        }

        public Builder setSigningAlgorithm(@Nullable String signingAlgorithm) {
            this.signingAlgorithm = Input.ofNullable(signingAlgorithm);
            return this;
        }

        public Builder setTemplateArn(@Nullable Input<String> templateArn) {
            this.templateArn = templateArn;
            return this;
        }

        public Builder setTemplateArn(@Nullable String templateArn) {
            this.templateArn = Input.ofNullable(templateArn);
            return this;
        }

        public Builder setValidity(@Nullable Input<CertificateValidityGetArgs> validity) {
            this.validity = validity;
            return this;
        }

        public Builder setValidity(@Nullable CertificateValidityGetArgs validity) {
            this.validity = Input.ofNullable(validity);
            return this;
        }
        public CertificateState build() {
            return new CertificateState(arn, certificate, certificateAuthorityArn, certificateChain, certificateSigningRequest, signingAlgorithm, templateArn, validity);
        }
    }
}
