// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.datasync.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class TaskExcludesGetArgs extends io.pulumi.resources.ResourceArgs {

    public static final TaskExcludesGetArgs Empty = new TaskExcludesGetArgs();

    /**
     * The type of filter rule to apply. Valid values: `SIMPLE_PATTERN`.
     * 
     */
    @InputImport(name="filterType")
      private final @Nullable Input<String> filterType;

    public Input<String> getFilterType() {
        return this.filterType == null ? Input.empty() : this.filterType;
    }

    /**
     * A single filter string that consists of the patterns to include or exclude. The patterns are delimited by "|" (that is, a pipe), for example: `/folder1|/folder2`
     * 
     */
    @InputImport(name="value")
      private final @Nullable Input<String> value;

    public Input<String> getValue() {
        return this.value == null ? Input.empty() : this.value;
    }

    public TaskExcludesGetArgs(
        @Nullable Input<String> filterType,
        @Nullable Input<String> value) {
        this.filterType = filterType;
        this.value = value;
    }

    private TaskExcludesGetArgs() {
        this.filterType = Input.empty();
        this.value = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TaskExcludesGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> filterType;
        private @Nullable Input<String> value;

        public Builder() {
    	      // Empty
        }

        public Builder(TaskExcludesGetArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.filterType = defaults.filterType;
    	      this.value = defaults.value;
        }

        public Builder setFilterType(@Nullable Input<String> filterType) {
            this.filterType = filterType;
            return this;
        }

        public Builder setFilterType(@Nullable String filterType) {
            this.filterType = Input.ofNullable(filterType);
            return this;
        }

        public Builder setValue(@Nullable Input<String> value) {
            this.value = value;
            return this;
        }

        public Builder setValue(@Nullable String value) {
            this.value = Input.ofNullable(value);
            return this;
        }
        public TaskExcludesGetArgs build() {
            return new TaskExcludesGetArgs(filterType, value);
        }
    }
}
