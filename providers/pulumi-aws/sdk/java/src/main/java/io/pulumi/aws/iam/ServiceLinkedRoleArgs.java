// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.iam;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ServiceLinkedRoleArgs extends io.pulumi.resources.ResourceArgs {

    public static final ServiceLinkedRoleArgs Empty = new ServiceLinkedRoleArgs();

    /**
     * The AWS service to which this role is attached. You use a string similar to a URL but without the `http://` in front. For example: `elasticbeanstalk.amazonaws.com`. To find the full list of services that support service-linked roles, check [the docs](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_aws-services-that-work-with-iam.html).
     * 
     */
    @InputImport(name="awsServiceName", required=true)
    private final Input<String> awsServiceName;

    public Input<String> getAwsServiceName() {
        return this.awsServiceName;
    }

    /**
     * Additional string appended to the role name. Not all AWS services support custom suffixes.
     * 
     */
    @InputImport(name="customSuffix")
    private final @Nullable Input<String> customSuffix;

    public Input<String> getCustomSuffix() {
        return this.customSuffix == null ? Input.empty() : this.customSuffix;
    }

    /**
     * The description of the role.
     * 
     */
    @InputImport(name="description")
    private final @Nullable Input<String> description;

    public Input<String> getDescription() {
        return this.description == null ? Input.empty() : this.description;
    }

    /**
     * Key-value mapping of tags for the IAM role. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @InputImport(name="tags")
    private final @Nullable Input<Map<String,String>> tags;

    public Input<Map<String,String>> getTags() {
        return this.tags == null ? Input.empty() : this.tags;
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     */
    @InputImport(name="tagsAll")
    private final @Nullable Input<Map<String,String>> tagsAll;

    public Input<Map<String,String>> getTagsAll() {
        return this.tagsAll == null ? Input.empty() : this.tagsAll;
    }

    public ServiceLinkedRoleArgs(
        Input<String> awsServiceName,
        @Nullable Input<String> customSuffix,
        @Nullable Input<String> description,
        @Nullable Input<Map<String,String>> tags,
        @Nullable Input<Map<String,String>> tagsAll) {
        this.awsServiceName = Objects.requireNonNull(awsServiceName, "expected parameter 'awsServiceName' to be non-null");
        this.customSuffix = customSuffix;
        this.description = description;
        this.tags = tags;
        this.tagsAll = tagsAll;
    }

    private ServiceLinkedRoleArgs() {
        this.awsServiceName = Input.empty();
        this.customSuffix = Input.empty();
        this.description = Input.empty();
        this.tags = Input.empty();
        this.tagsAll = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ServiceLinkedRoleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<String> awsServiceName;
        private @Nullable Input<String> customSuffix;
        private @Nullable Input<String> description;
        private @Nullable Input<Map<String,String>> tags;
        private @Nullable Input<Map<String,String>> tagsAll;

        public Builder() {
    	      // Empty
        }

        public Builder(ServiceLinkedRoleArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.awsServiceName = defaults.awsServiceName;
    	      this.customSuffix = defaults.customSuffix;
    	      this.description = defaults.description;
    	      this.tags = defaults.tags;
    	      this.tagsAll = defaults.tagsAll;
        }

        public Builder setAwsServiceName(Input<String> awsServiceName) {
            this.awsServiceName = Objects.requireNonNull(awsServiceName);
            return this;
        }

        public Builder setAwsServiceName(String awsServiceName) {
            this.awsServiceName = Input.of(Objects.requireNonNull(awsServiceName));
            return this;
        }

        public Builder setCustomSuffix(@Nullable Input<String> customSuffix) {
            this.customSuffix = customSuffix;
            return this;
        }

        public Builder setCustomSuffix(@Nullable String customSuffix) {
            this.customSuffix = Input.ofNullable(customSuffix);
            return this;
        }

        public Builder setDescription(@Nullable Input<String> description) {
            this.description = description;
            return this;
        }

        public Builder setDescription(@Nullable String description) {
            this.description = Input.ofNullable(description);
            return this;
        }

        public Builder setTags(@Nullable Input<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }

        public Builder setTags(@Nullable Map<String,String> tags) {
            this.tags = Input.ofNullable(tags);
            return this;
        }

        public Builder setTagsAll(@Nullable Input<Map<String,String>> tagsAll) {
            this.tagsAll = tagsAll;
            return this;
        }

        public Builder setTagsAll(@Nullable Map<String,String> tagsAll) {
            this.tagsAll = Input.ofNullable(tagsAll);
            return this;
        }
        public ServiceLinkedRoleArgs build() {
            return new ServiceLinkedRoleArgs(awsServiceName, customSuffix, description, tags, tagsAll);
        }
    }
}
