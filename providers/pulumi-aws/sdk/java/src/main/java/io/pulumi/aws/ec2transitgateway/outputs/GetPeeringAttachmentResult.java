// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.ec2transitgateway.outputs;

import io.pulumi.aws.ec2transitgateway.outputs.GetPeeringAttachmentFilter;
import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;

@OutputCustomType
public final class GetPeeringAttachmentResult {
    private final @Nullable List<GetPeeringAttachmentFilter> filters;
    private final String id;
    /**
     * Identifier of the peer AWS account
     * 
     */
    private final String peerAccountId;
    /**
     * Identifier of the peer AWS region
     * 
     */
    private final String peerRegion;
    /**
     * Identifier of the peer EC2 Transit Gateway
     * 
     */
    private final String peerTransitGatewayId;
    private final Map<String,String> tags;
    /**
     * Identifier of the local EC2 Transit Gateway
     * 
     */
    private final String transitGatewayId;

    @OutputCustomType.Constructor({"filters","id","peerAccountId","peerRegion","peerTransitGatewayId","tags","transitGatewayId"})
    private GetPeeringAttachmentResult(
        @Nullable List<GetPeeringAttachmentFilter> filters,
        String id,
        String peerAccountId,
        String peerRegion,
        String peerTransitGatewayId,
        Map<String,String> tags,
        String transitGatewayId) {
        this.filters = filters;
        this.id = Objects.requireNonNull(id);
        this.peerAccountId = Objects.requireNonNull(peerAccountId);
        this.peerRegion = Objects.requireNonNull(peerRegion);
        this.peerTransitGatewayId = Objects.requireNonNull(peerTransitGatewayId);
        this.tags = Objects.requireNonNull(tags);
        this.transitGatewayId = Objects.requireNonNull(transitGatewayId);
    }

    public List<GetPeeringAttachmentFilter> getFilters() {
        return this.filters == null ? List.of() : this.filters;
    }
    public String getId() {
        return this.id;
    }
    /**
     * Identifier of the peer AWS account
     * 
     */
    public String getPeerAccountId() {
        return this.peerAccountId;
    }
    /**
     * Identifier of the peer AWS region
     * 
     */
    public String getPeerRegion() {
        return this.peerRegion;
    }
    /**
     * Identifier of the peer EC2 Transit Gateway
     * 
     */
    public String getPeerTransitGatewayId() {
        return this.peerTransitGatewayId;
    }
    public Map<String,String> getTags() {
        return this.tags;
    }
    /**
     * Identifier of the local EC2 Transit Gateway
     * 
     */
    public String getTransitGatewayId() {
        return this.transitGatewayId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPeeringAttachmentResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable List<GetPeeringAttachmentFilter> filters;
        private String id;
        private String peerAccountId;
        private String peerRegion;
        private String peerTransitGatewayId;
        private Map<String,String> tags;
        private String transitGatewayId;

        public Builder() {
    	      // Empty
        }

        public Builder(GetPeeringAttachmentResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.peerAccountId = defaults.peerAccountId;
    	      this.peerRegion = defaults.peerRegion;
    	      this.peerTransitGatewayId = defaults.peerTransitGatewayId;
    	      this.tags = defaults.tags;
    	      this.transitGatewayId = defaults.transitGatewayId;
        }

        public Builder setFilters(@Nullable List<GetPeeringAttachmentFilter> filters) {
            this.filters = filters;
            return this;
        }

        public Builder setId(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }

        public Builder setPeerAccountId(String peerAccountId) {
            this.peerAccountId = Objects.requireNonNull(peerAccountId);
            return this;
        }

        public Builder setPeerRegion(String peerRegion) {
            this.peerRegion = Objects.requireNonNull(peerRegion);
            return this;
        }

        public Builder setPeerTransitGatewayId(String peerTransitGatewayId) {
            this.peerTransitGatewayId = Objects.requireNonNull(peerTransitGatewayId);
            return this;
        }

        public Builder setTags(Map<String,String> tags) {
            this.tags = Objects.requireNonNull(tags);
            return this;
        }

        public Builder setTransitGatewayId(String transitGatewayId) {
            this.transitGatewayId = Objects.requireNonNull(transitGatewayId);
            return this;
        }
        public GetPeeringAttachmentResult build() {
            return new GetPeeringAttachmentResult(filters, id, peerAccountId, peerRegion, peerTransitGatewayId, tags, transitGatewayId);
        }
    }
}
