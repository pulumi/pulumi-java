// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.emr;

import io.pulumi.aws.Utilities;
import io.pulumi.aws.emr.InstanceFleetArgs;
import io.pulumi.aws.emr.inputs.InstanceFleetState;
import io.pulumi.aws.emr.outputs.InstanceFleetInstanceTypeConfig;
import io.pulumi.aws.emr.outputs.InstanceFleetLaunchSpecifications;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Export;
import io.pulumi.core.annotations.ResourceType;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * Provides an Elastic MapReduce Cluster Instance Fleet configuration.
 * See [Amazon Elastic MapReduce Documentation](https://aws.amazon.com/documentation/emr/) for more information.
 * 
 * > **NOTE:** At this time, Instance Fleets cannot be destroyed through the API nor
 * web interface. Instance Fleets are destroyed when the EMR Cluster is destroyed.
 * the provider will resize any Instance Fleet to zero when destroying the resource.
 * 
 * {{% examples %}}
 * ## Example Usage
 * {{% example %}}
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 * 
 * const task = new aws.emr.InstanceFleet("task", {
 *     clusterId: aws_emr_cluster.cluster.id,
 *     instanceTypeConfigs: [
 *         {
 *             bidPriceAsPercentageOfOnDemandPrice: 100,
 *             ebsConfigs: [{
 *                 size: 100,
 *                 type: "gp2",
 *                 volumesPerInstance: 1,
 *             }],
 *             instanceType: "m4.xlarge",
 *             weightedCapacity: 1,
 *         },
 *         {
 *             bidPriceAsPercentageOfOnDemandPrice: 100,
 *             ebsConfigs: [{
 *                 size: 100,
 *                 type: "gp2",
 *                 volumesPerInstance: 1,
 *             }],
 *             instanceType: "m4.2xlarge",
 *             weightedCapacity: 2,
 *         },
 *     ],
 *     launchSpecifications: {
 *         spotSpecifications: [{
 *             allocationStrategy: "capacity-optimized",
 *             blockDurationMinutes: 0,
 *             timeoutAction: "TERMINATE_CLUSTER",
 *             timeoutDurationMinutes: 10,
 *         }],
 *     },
 *     targetOnDemandCapacity: 1,
 *     targetSpotCapacity: 1,
 * });
 * ```
 * ```python
 * import pulumi
 * import pulumi_aws as aws
 * 
 * task = aws.emr.InstanceFleet("task",
 *     cluster_id=aws_emr_cluster["cluster"]["id"],
 *     instance_type_configs=[
 *         aws.emr.InstanceFleetInstanceTypeConfigArgs(
 *             bid_price_as_percentage_of_on_demand_price=100,
 *             ebs_configs=[aws.emr.InstanceFleetInstanceTypeConfigEbsConfigArgs(
 *                 size=100,
 *                 type="gp2",
 *                 volumes_per_instance=1,
 *             )],
 *             instance_type="m4.xlarge",
 *             weighted_capacity=1,
 *         ),
 *         aws.emr.InstanceFleetInstanceTypeConfigArgs(
 *             bid_price_as_percentage_of_on_demand_price=100,
 *             ebs_configs=[aws.emr.InstanceFleetInstanceTypeConfigEbsConfigArgs(
 *                 size=100,
 *                 type="gp2",
 *                 volumes_per_instance=1,
 *             )],
 *             instance_type="m4.2xlarge",
 *             weighted_capacity=2,
 *         ),
 *     ],
 *     launch_specifications=aws.emr.InstanceFleetLaunchSpecificationsArgs(
 *         spot_specifications=[aws.emr.InstanceFleetLaunchSpecificationsSpotSpecificationArgs(
 *             allocation_strategy="capacity-optimized",
 *             block_duration_minutes=0,
 *             timeout_action="TERMINATE_CLUSTER",
 *             timeout_duration_minutes=10,
 *         )],
 *     ),
 *     target_on_demand_capacity=1,
 *     target_spot_capacity=1)
 * ```
 * ```csharp
 * using Pulumi;
 * using Aws = Pulumi.Aws;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var task = new Aws.Emr.InstanceFleet("task", new Aws.Emr.InstanceFleetArgs
 *         {
 *             ClusterId = aws_emr_cluster.Cluster.Id,
 *             InstanceTypeConfigs = 
 *             {
 *                 new Aws.Emr.Inputs.InstanceFleetInstanceTypeConfigArgs
 *                 {
 *                     BidPriceAsPercentageOfOnDemandPrice = 100,
 *                     EbsConfigs = 
 *                     {
 *                         new Aws.Emr.Inputs.InstanceFleetInstanceTypeConfigEbsConfigArgs
 *                         {
 *                             Size = 100,
 *                             Type = "gp2",
 *                             VolumesPerInstance = 1,
 *                         },
 *                     },
 *                     InstanceType = "m4.xlarge",
 *                     WeightedCapacity = 1,
 *                 },
 *                 new Aws.Emr.Inputs.InstanceFleetInstanceTypeConfigArgs
 *                 {
 *                     BidPriceAsPercentageOfOnDemandPrice = 100,
 *                     EbsConfigs = 
 *                     {
 *                         new Aws.Emr.Inputs.InstanceFleetInstanceTypeConfigEbsConfigArgs
 *                         {
 *                             Size = 100,
 *                             Type = "gp2",
 *                             VolumesPerInstance = 1,
 *                         },
 *                     },
 *                     InstanceType = "m4.2xlarge",
 *                     WeightedCapacity = 2,
 *                 },
 *             },
 *             LaunchSpecifications = new Aws.Emr.Inputs.InstanceFleetLaunchSpecificationsArgs
 *             {
 *                 SpotSpecifications = 
 *                 {
 *                     new Aws.Emr.Inputs.InstanceFleetLaunchSpecificationsSpotSpecificationArgs
 *                     {
 *                         AllocationStrategy = "capacity-optimized",
 *                         BlockDurationMinutes = 0,
 *                         TimeoutAction = "TERMINATE_CLUSTER",
 *                         TimeoutDurationMinutes = 10,
 *                     },
 *                 },
 *             },
 *             TargetOnDemandCapacity = 1,
 *             TargetSpotCapacity = 1,
 *         });
 *     }
 * 
 * }
 * ```
 * ```go
 * package main
 * 
 * import (
 * 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/emr"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		_, err := emr.NewInstanceFleet(ctx, "task", &emr.InstanceFleetArgs{
 * 			ClusterId: pulumi.Any(aws_emr_cluster.Cluster.Id),
 * 			InstanceTypeConfigs: emr.InstanceFleetInstanceTypeConfigArray{
 * 				&emr.InstanceFleetInstanceTypeConfigArgs{
 * 					BidPriceAsPercentageOfOnDemandPrice: pulumi.Float64(100),
 * 					EbsConfigs: emr.InstanceFleetInstanceTypeConfigEbsConfigArray{
 * 						&emr.InstanceFleetInstanceTypeConfigEbsConfigArgs{
 * 							Size:               pulumi.Int(100),
 * 							Type:               pulumi.String("gp2"),
 * 							VolumesPerInstance: pulumi.Int(1),
 * 						},
 * 					},
 * 					InstanceType:     pulumi.String("m4.xlarge"),
 * 					WeightedCapacity: pulumi.Int(1),
 * 				},
 * 				&emr.InstanceFleetInstanceTypeConfigArgs{
 * 					BidPriceAsPercentageOfOnDemandPrice: pulumi.Float64(100),
 * 					EbsConfigs: emr.InstanceFleetInstanceTypeConfigEbsConfigArray{
 * 						&emr.InstanceFleetInstanceTypeConfigEbsConfigArgs{
 * 							Size:               pulumi.Int(100),
 * 							Type:               pulumi.String("gp2"),
 * 							VolumesPerInstance: pulumi.Int(1),
 * 						},
 * 					},
 * 					InstanceType:     pulumi.String("m4.2xlarge"),
 * 					WeightedCapacity: pulumi.Int(2),
 * 				},
 * 			},
 * 			LaunchSpecifications: &emr.InstanceFleetLaunchSpecificationsArgs{
 * 				SpotSpecifications: emr.InstanceFleetLaunchSpecificationsSpotSpecificationArray{
 * 					&emr.InstanceFleetLaunchSpecificationsSpotSpecificationArgs{
 * 						AllocationStrategy:     pulumi.String("capacity-optimized"),
 * 						BlockDurationMinutes:   pulumi.Int(0),
 * 						TimeoutAction:          pulumi.String("TERMINATE_CLUSTER"),
 * 						TimeoutDurationMinutes: pulumi.Int(10),
 * 					},
 * 				},
 * 			},
 * 			TargetOnDemandCapacity: pulumi.Int(1),
 * 			TargetSpotCapacity:     pulumi.Int(1),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * ```
 * {{% /example %}}
 * {{% /examples %}}
 * 
 * ## Import
 * 
 * EMR Instance Fleet can be imported with the EMR Cluster identifier and Instance Fleet identifier separated by a forward slash (`/`), e.g., console
 * 
 * ```sh
 *  $ pulumi import aws:emr/instanceFleet:InstanceFleet example j-123456ABCDEF/if-15EK4O09RZLNR
 * ```
 * 
 *  
 */
@ResourceType(type="aws:emr/instanceFleet:InstanceFleet")
public class InstanceFleet extends io.pulumi.resources.CustomResource {
    /**
     * ID of the EMR Cluster to attach to. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="clusterId", type=String.class, parameters={})
    private Output<String> clusterId;

    /**
     * @return ID of the EMR Cluster to attach to. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> getClusterId() {
        return this.clusterId;
    }
    /**
     * Configuration block for instance fleet
     * 
     */
    @Export(name="instanceTypeConfigs", type=List.class, parameters={InstanceFleetInstanceTypeConfig.class})
    private Output</* @Nullable */ List<InstanceFleetInstanceTypeConfig>> instanceTypeConfigs;

    /**
     * @return Configuration block for instance fleet
     * 
     */
    public Output</* @Nullable */ List<InstanceFleetInstanceTypeConfig>> getInstanceTypeConfigs() {
        return this.instanceTypeConfigs;
    }
    /**
     * Configuration block for launch specification
     * 
     */
    @Export(name="launchSpecifications", type=InstanceFleetLaunchSpecifications.class, parameters={})
    private Output</* @Nullable */ InstanceFleetLaunchSpecifications> launchSpecifications;

    /**
     * @return Configuration block for launch specification
     * 
     */
    public Output</* @Nullable */ InstanceFleetLaunchSpecifications> getLaunchSpecifications() {
        return this.launchSpecifications;
    }
    /**
     * Friendly name given to the instance fleet.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return Friendly name given to the instance fleet.
     * 
     */
    public Output<String> getName() {
        return this.name;
    }
    @Export(name="provisionedOnDemandCapacity", type=Integer.class, parameters={})
    private Output<Integer> provisionedOnDemandCapacity;

    public Output<Integer> getProvisionedOnDemandCapacity() {
        return this.provisionedOnDemandCapacity;
    }
    @Export(name="provisionedSpotCapacity", type=Integer.class, parameters={})
    private Output<Integer> provisionedSpotCapacity;

    public Output<Integer> getProvisionedSpotCapacity() {
        return this.provisionedSpotCapacity;
    }
    /**
     * The target capacity of On-Demand units for the instance fleet, which determines how many On-Demand instances to provision.
     * 
     */
    @Export(name="targetOnDemandCapacity", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> targetOnDemandCapacity;

    /**
     * @return The target capacity of On-Demand units for the instance fleet, which determines how many On-Demand instances to provision.
     * 
     */
    public Output</* @Nullable */ Integer> getTargetOnDemandCapacity() {
        return this.targetOnDemandCapacity;
    }
    /**
     * The target capacity of Spot units for the instance fleet, which determines how many Spot instances to provision.
     * 
     */
    @Export(name="targetSpotCapacity", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> targetSpotCapacity;

    /**
     * @return The target capacity of Spot units for the instance fleet, which determines how many Spot instances to provision.
     * 
     */
    public Output</* @Nullable */ Integer> getTargetSpotCapacity() {
        return this.targetSpotCapacity;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public InstanceFleet(String name) {
        this(name, InstanceFleetArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public InstanceFleet(String name, InstanceFleetArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public InstanceFleet(String name, InstanceFleetArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:emr/instanceFleet:InstanceFleet", name, args == null ? InstanceFleetArgs.Empty : args, makeResourceOptions(options, Output.empty()));
    }

    private InstanceFleet(String name, Output<String> id, @Nullable InstanceFleetState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:emr/instanceFleet:InstanceFleet", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static InstanceFleet get(String name, Output<String> id, @Nullable InstanceFleetState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new InstanceFleet(name, id, state, options);
    }
}
