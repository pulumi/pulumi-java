// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.glue.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class CrawlerJdbcTargetGetArgs extends io.pulumi.resources.ResourceArgs {

    public static final CrawlerJdbcTargetGetArgs Empty = new CrawlerJdbcTargetGetArgs();

    /**
     * The name of the connection to use to connect to the Delta table target.
     * 
     */
    @InputImport(name="connectionName", required=true)
      private final Input<String> connectionName;

    public Input<String> getConnectionName() {
        return this.connectionName;
    }

    /**
     * A list of glob patterns used to exclude from the crawl.
     * 
     */
    @InputImport(name="exclusions")
      private final @Nullable Input<List<String>> exclusions;

    public Input<List<String>> getExclusions() {
        return this.exclusions == null ? Input.empty() : this.exclusions;
    }

    /**
     * The path of the Amazon DocumentDB or MongoDB target (database/collection).
     * 
     */
    @InputImport(name="path", required=true)
      private final Input<String> path;

    public Input<String> getPath() {
        return this.path;
    }

    public CrawlerJdbcTargetGetArgs(
        Input<String> connectionName,
        @Nullable Input<List<String>> exclusions,
        Input<String> path) {
        this.connectionName = Objects.requireNonNull(connectionName, "expected parameter 'connectionName' to be non-null");
        this.exclusions = exclusions;
        this.path = Objects.requireNonNull(path, "expected parameter 'path' to be non-null");
    }

    private CrawlerJdbcTargetGetArgs() {
        this.connectionName = Input.empty();
        this.exclusions = Input.empty();
        this.path = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CrawlerJdbcTargetGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<String> connectionName;
        private @Nullable Input<List<String>> exclusions;
        private Input<String> path;

        public Builder() {
    	      // Empty
        }

        public Builder(CrawlerJdbcTargetGetArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.connectionName = defaults.connectionName;
    	      this.exclusions = defaults.exclusions;
    	      this.path = defaults.path;
        }

        public Builder setConnectionName(Input<String> connectionName) {
            this.connectionName = Objects.requireNonNull(connectionName);
            return this;
        }

        public Builder setConnectionName(String connectionName) {
            this.connectionName = Input.of(Objects.requireNonNull(connectionName));
            return this;
        }

        public Builder setExclusions(@Nullable Input<List<String>> exclusions) {
            this.exclusions = exclusions;
            return this;
        }

        public Builder setExclusions(@Nullable List<String> exclusions) {
            this.exclusions = Input.ofNullable(exclusions);
            return this;
        }

        public Builder setPath(Input<String> path) {
            this.path = Objects.requireNonNull(path);
            return this;
        }

        public Builder setPath(String path) {
            this.path = Input.of(Objects.requireNonNull(path));
            return this;
        }
        public CrawlerJdbcTargetGetArgs build() {
            return new CrawlerJdbcTargetGetArgs(connectionName, exclusions, path);
        }
    }
}
