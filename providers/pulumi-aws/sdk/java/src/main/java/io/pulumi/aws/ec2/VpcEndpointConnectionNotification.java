// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.ec2;

import io.pulumi.aws.Utilities;
import io.pulumi.aws.ec2.VpcEndpointConnectionNotificationArgs;
import io.pulumi.aws.ec2.inputs.VpcEndpointConnectionNotificationState;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Export;
import io.pulumi.core.annotations.ResourceType;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * Provides a VPC Endpoint connection notification resource.
 * Connection notifications notify subscribers of VPC Endpoint events.
 * 
 * {{% examples %}}
 * ## Example Usage
 * {{% example %}}
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 * 
 * const topic = new aws.sns.Topic("topic", {policy: `{
 *     "Version":"2012-10-17",
 *     "Statement":[{
 *         "Effect": "Allow",
 *         "Principal": {
 *             "Service": "vpce.amazonaws.com"
 *         },
 *         "Action": "SNS:Publish",
 *         "Resource": "arn:aws:sns:*:*:vpce-notification-topic"
 *     }]
 * }
 * `});
 * const fooVpcEndpointService = new aws.ec2.VpcEndpointService("fooVpcEndpointService", {
 *     acceptanceRequired: false,
 *     networkLoadBalancerArns: [aws_lb.test.arn],
 * });
 * const fooVpcEndpointConnectionNotification = new aws.ec2.VpcEndpointConnectionNotification("fooVpcEndpointConnectionNotification", {
 *     vpcEndpointServiceId: fooVpcEndpointService.id,
 *     connectionNotificationArn: topic.arn,
 *     connectionEvents: [
 *         "Accept",
 *         "Reject",
 *     ],
 * });
 * ```
 * ```python
 * import pulumi
 * import pulumi_aws as aws
 * 
 * topic = aws.sns.Topic("topic", policy="""{
 *     "Version":"2012-10-17",
 *     "Statement":[{
 *         "Effect": "Allow",
 *         "Principal": {
 *             "Service": "vpce.amazonaws.com"
 *         },
 *         "Action": "SNS:Publish",
 *         "Resource": "arn:aws:sns:*:*:vpce-notification-topic"
 *     }]
 * }
 * """)
 * foo_vpc_endpoint_service = aws.ec2.VpcEndpointService("fooVpcEndpointService",
 *     acceptance_required=False,
 *     network_load_balancer_arns=[aws_lb["test"]["arn"]])
 * foo_vpc_endpoint_connection_notification = aws.ec2.VpcEndpointConnectionNotification("fooVpcEndpointConnectionNotification",
 *     vpc_endpoint_service_id=foo_vpc_endpoint_service.id,
 *     connection_notification_arn=topic.arn,
 *     connection_events=[
 *         "Accept",
 *         "Reject",
 *     ])
 * ```
 * ```csharp
 * using Pulumi;
 * using Aws = Pulumi.Aws;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var topic = new Aws.Sns.Topic("topic", new Aws.Sns.TopicArgs
 *         {
 *             Policy = @"{
 *     ""Version"":""2012-10-17"",
 *     ""Statement"":[{
 *         ""Effect"": ""Allow"",
 *         ""Principal"": {
 *             ""Service"": ""vpce.amazonaws.com""
 *         },
 *         ""Action"": ""SNS:Publish"",
 *         ""Resource"": ""arn:aws:sns:*:*:vpce-notification-topic""
 *     }]
 * }
 * ",
 *         });
 *         var fooVpcEndpointService = new Aws.Ec2.VpcEndpointService("fooVpcEndpointService", new Aws.Ec2.VpcEndpointServiceArgs
 *         {
 *             AcceptanceRequired = false,
 *             NetworkLoadBalancerArns = 
 *             {
 *                 aws_lb.Test.Arn,
 *             },
 *         });
 *         var fooVpcEndpointConnectionNotification = new Aws.Ec2.VpcEndpointConnectionNotification("fooVpcEndpointConnectionNotification", new Aws.Ec2.VpcEndpointConnectionNotificationArgs
 *         {
 *             VpcEndpointServiceId = fooVpcEndpointService.Id,
 *             ConnectionNotificationArn = topic.Arn,
 *             ConnectionEvents = 
 *             {
 *                 "Accept",
 *                 "Reject",
 *             },
 *         });
 *     }
 * 
 * }
 * ```
 * ```go
 * package main
 * 
 * import (
 * 	"fmt"
 * 
 * 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/ec2"
 * 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/sns"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		topic, err := sns.NewTopic(ctx, "topic", &sns.TopicArgs{
 * 			Policy: pulumi.String(fmt.Sprintf("%v%v%v%v%v%v%v%v%v%v%v", "{\n", "    \"Version\":\"2012-10-17\",\n", "    \"Statement\":[{\n", "        \"Effect\": \"Allow\",\n", "        \"Principal\": {\n", "            \"Service\": \"vpce.amazonaws.com\"\n", "        },\n", "        \"Action\": \"SNS:Publish\",\n", "        \"Resource\": \"arn:aws:sns:*:*:vpce-notification-topic\"\n", "    }]\n", "}\n")),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		fooVpcEndpointService, err := ec2.NewVpcEndpointService(ctx, "fooVpcEndpointService", &ec2.VpcEndpointServiceArgs{
 * 			AcceptanceRequired: pulumi.Bool(false),
 * 			NetworkLoadBalancerArns: pulumi.StringArray{
 * 				pulumi.Any(aws_lb.Test.Arn),
 * 			},
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		_, err = ec2.NewVpcEndpointConnectionNotification(ctx, "fooVpcEndpointConnectionNotification", &ec2.VpcEndpointConnectionNotificationArgs{
 * 			VpcEndpointServiceId:      fooVpcEndpointService.ID(),
 * 			ConnectionNotificationArn: topic.Arn,
 * 			ConnectionEvents: pulumi.StringArray{
 * 				pulumi.String("Accept"),
 * 				pulumi.String("Reject"),
 * 			},
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * ```
 * {{% /example %}}
 * {{% /examples %}}
 * 
 * ## Import
 * 
 * VPC Endpoint connection notifications can be imported using the `VPC endpoint connection notification id`, e.g.,
 * 
 * ```sh
 *  $ pulumi import aws:ec2/vpcEndpointConnectionNotification:VpcEndpointConnectionNotification foo vpce-nfn-09e6ed3b4efba2263
 * ```
 * 
 *  
 */
@ResourceType(type="aws:ec2/vpcEndpointConnectionNotification:VpcEndpointConnectionNotification")
public class VpcEndpointConnectionNotification extends io.pulumi.resources.CustomResource {
    /**
     * One or more endpoint [events](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVpcEndpointConnectionNotification.html#API_CreateVpcEndpointConnectionNotification_RequestParameters) for which to receive notifications.
     * 
     */
    @Export(name="connectionEvents", type=List.class, parameters={String.class})
    private Output<List<String>> connectionEvents;

    /**
     * @return One or more endpoint [events](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVpcEndpointConnectionNotification.html#API_CreateVpcEndpointConnectionNotification_RequestParameters) for which to receive notifications.
     * 
     */
    public Output<List<String>> getConnectionEvents() {
        return this.connectionEvents;
    }
    /**
     * The ARN of the SNS topic for the notifications.
     * 
     */
    @Export(name="connectionNotificationArn", type=String.class, parameters={})
    private Output<String> connectionNotificationArn;

    /**
     * @return The ARN of the SNS topic for the notifications.
     * 
     */
    public Output<String> getConnectionNotificationArn() {
        return this.connectionNotificationArn;
    }
    /**
     * The type of notification.
     * 
     */
    @Export(name="notificationType", type=String.class, parameters={})
    private Output<String> notificationType;

    /**
     * @return The type of notification.
     * 
     */
    public Output<String> getNotificationType() {
        return this.notificationType;
    }
    /**
     * The state of the notification.
     * 
     */
    @Export(name="state", type=String.class, parameters={})
    private Output<String> state;

    /**
     * @return The state of the notification.
     * 
     */
    public Output<String> getState() {
        return this.state;
    }
    /**
     * The ID of the VPC Endpoint to receive notifications for.
     * 
     */
    @Export(name="vpcEndpointId", type=String.class, parameters={})
    private Output</* @Nullable */ String> vpcEndpointId;

    /**
     * @return The ID of the VPC Endpoint to receive notifications for.
     * 
     */
    public Output</* @Nullable */ String> getVpcEndpointId() {
        return this.vpcEndpointId;
    }
    /**
     * The ID of the VPC Endpoint Service to receive notifications for.
     * 
     */
    @Export(name="vpcEndpointServiceId", type=String.class, parameters={})
    private Output</* @Nullable */ String> vpcEndpointServiceId;

    /**
     * @return The ID of the VPC Endpoint Service to receive notifications for.
     * 
     */
    public Output</* @Nullable */ String> getVpcEndpointServiceId() {
        return this.vpcEndpointServiceId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public VpcEndpointConnectionNotification(String name) {
        this(name, VpcEndpointConnectionNotificationArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public VpcEndpointConnectionNotification(String name, VpcEndpointConnectionNotificationArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public VpcEndpointConnectionNotification(String name, VpcEndpointConnectionNotificationArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:ec2/vpcEndpointConnectionNotification:VpcEndpointConnectionNotification", name, args == null ? VpcEndpointConnectionNotificationArgs.Empty : args, makeResourceOptions(options, Output.empty()));
    }

    private VpcEndpointConnectionNotification(String name, Output<String> id, @Nullable VpcEndpointConnectionNotificationState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:ec2/vpcEndpointConnectionNotification:VpcEndpointConnectionNotification", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static VpcEndpointConnectionNotification get(String name, Output<String> id, @Nullable VpcEndpointConnectionNotificationState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new VpcEndpointConnectionNotification(name, id, state, options);
    }
}
