// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.efs.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class FileSystemLifecyclePolicyArgs extends io.pulumi.resources.ResourceArgs {

    public static final FileSystemLifecyclePolicyArgs Empty = new FileSystemLifecyclePolicyArgs();

    /**
     * Indicates how long it takes to transition files to the IA storage class. Valid values: `AFTER_7_DAYS`, `AFTER_14_DAYS`, `AFTER_30_DAYS`, `AFTER_60_DAYS`, or `AFTER_90_DAYS`.
     * 
     */
    @Import(name="transitionToIa")
      private final @Nullable Output<String> transitionToIa;

    public Output<String> getTransitionToIa() {
        return this.transitionToIa == null ? Output.empty() : this.transitionToIa;
    }

    /**
     * Describes the policy used to transition a file from infequent access storage to primary storage. Valid values: `AFTER_1_ACCESS`.
     * 
     */
    @Import(name="transitionToPrimaryStorageClass")
      private final @Nullable Output<String> transitionToPrimaryStorageClass;

    public Output<String> getTransitionToPrimaryStorageClass() {
        return this.transitionToPrimaryStorageClass == null ? Output.empty() : this.transitionToPrimaryStorageClass;
    }

    public FileSystemLifecyclePolicyArgs(
        @Nullable Output<String> transitionToIa,
        @Nullable Output<String> transitionToPrimaryStorageClass) {
        this.transitionToIa = transitionToIa;
        this.transitionToPrimaryStorageClass = transitionToPrimaryStorageClass;
    }

    private FileSystemLifecyclePolicyArgs() {
        this.transitionToIa = Output.empty();
        this.transitionToPrimaryStorageClass = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FileSystemLifecyclePolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> transitionToIa;
        private @Nullable Output<String> transitionToPrimaryStorageClass;

        public Builder() {
    	      // Empty
        }

        public Builder(FileSystemLifecyclePolicyArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.transitionToIa = defaults.transitionToIa;
    	      this.transitionToPrimaryStorageClass = defaults.transitionToPrimaryStorageClass;
        }

        public Builder transitionToIa(@Nullable Output<String> transitionToIa) {
            this.transitionToIa = transitionToIa;
            return this;
        }

        public Builder transitionToIa(@Nullable String transitionToIa) {
            this.transitionToIa = Output.ofNullable(transitionToIa);
            return this;
        }

        public Builder transitionToPrimaryStorageClass(@Nullable Output<String> transitionToPrimaryStorageClass) {
            this.transitionToPrimaryStorageClass = transitionToPrimaryStorageClass;
            return this;
        }

        public Builder transitionToPrimaryStorageClass(@Nullable String transitionToPrimaryStorageClass) {
            this.transitionToPrimaryStorageClass = Output.ofNullable(transitionToPrimaryStorageClass);
            return this;
        }
        public FileSystemLifecyclePolicyArgs build() {
            return new FileSystemLifecyclePolicyArgs(transitionToIa, transitionToPrimaryStorageClass);
        }
    }
}
