// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.backup;

import io.pulumi.aws.Utilities;
import io.pulumi.aws.backup.VaultPolicyArgs;
import io.pulumi.aws.backup.inputs.VaultPolicyState;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Export;
import io.pulumi.core.annotations.ResourceType;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * Provides an AWS Backup vault policy resource.
 * 
 * ## Example Usage
 * 
 * ## Import
 * 
 * Backup vault policy can be imported using the `name`, e.g.,
 * 
 * ```sh
 *  $ pulumi import aws:backup/vaultPolicy:VaultPolicy test TestVault
 * ```
 * 
 */
@ResourceType(type="aws:backup/vaultPolicy:VaultPolicy")
public class VaultPolicy extends io.pulumi.resources.CustomResource {
    /**
     * The ARN of the vault.
     * 
     */
    @Export(name="backupVaultArn", type=String.class, parameters={})
    private Output<String> backupVaultArn;

    /**
     * @return The ARN of the vault.
     * 
     */
    public Output<String> getBackupVaultArn() {
        return this.backupVaultArn;
    }
    /**
     * Name of the backup vault to add policy for.
     * 
     */
    @Export(name="backupVaultName", type=String.class, parameters={})
    private Output<String> backupVaultName;

    /**
     * @return Name of the backup vault to add policy for.
     * 
     */
    public Output<String> getBackupVaultName() {
        return this.backupVaultName;
    }
    /**
     * The backup vault access policy document in JSON format.
     * 
     */
    @Export(name="policy", type=String.class, parameters={})
    private Output<String> policy;

    /**
     * @return The backup vault access policy document in JSON format.
     * 
     */
    public Output<String> getPolicy() {
        return this.policy;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public VaultPolicy(String name) {
        this(name, VaultPolicyArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public VaultPolicy(String name, VaultPolicyArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public VaultPolicy(String name, VaultPolicyArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:backup/vaultPolicy:VaultPolicy", name, args == null ? VaultPolicyArgs.Empty : args, makeResourceOptions(options, Output.empty()));
    }

    private VaultPolicy(String name, Output<String> id, @Nullable VaultPolicyState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:backup/vaultPolicy:VaultPolicy", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static VaultPolicy get(String name, Output<String> id, @Nullable VaultPolicyState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new VaultPolicy(name, id, state, options);
    }
}
