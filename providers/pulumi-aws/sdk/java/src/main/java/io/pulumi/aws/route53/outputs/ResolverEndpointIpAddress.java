// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.route53.outputs;

import io.pulumi.core.annotations.OutputCustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class ResolverEndpointIpAddress {
    /**
     * The IP address in the subnet that you want to use for DNS queries.
     * 
     */
    private final @Nullable String ip;
    private final @Nullable String ipId;
    /**
     * The ID of the subnet that contains the IP address.
     * 
     */
    private final String subnetId;

    @OutputCustomType.Constructor({"ip","ipId","subnetId"})
    private ResolverEndpointIpAddress(
        @Nullable String ip,
        @Nullable String ipId,
        String subnetId) {
        this.ip = ip;
        this.ipId = ipId;
        this.subnetId = Objects.requireNonNull(subnetId);
    }

    /**
     * The IP address in the subnet that you want to use for DNS queries.
     * 
    */
    public Optional<String> getIp() {
        return Optional.ofNullable(this.ip);
    }
    public Optional<String> getIpId() {
        return Optional.ofNullable(this.ipId);
    }
    /**
     * The ID of the subnet that contains the IP address.
     * 
    */
    public String getSubnetId() {
        return this.subnetId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ResolverEndpointIpAddress defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String ip;
        private @Nullable String ipId;
        private String subnetId;

        public Builder() {
    	      // Empty
        }

        public Builder(ResolverEndpointIpAddress defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.ip = defaults.ip;
    	      this.ipId = defaults.ipId;
    	      this.subnetId = defaults.subnetId;
        }

        public Builder setIp(@Nullable String ip) {
            this.ip = ip;
            return this;
        }

        public Builder setIpId(@Nullable String ipId) {
            this.ipId = ipId;
            return this;
        }

        public Builder setSubnetId(String subnetId) {
            this.subnetId = Objects.requireNonNull(subnetId);
            return this;
        }
        public ResolverEndpointIpAddress build() {
            return new ResolverEndpointIpAddress(ip, ipId, subnetId);
        }
    }
}
