// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.cloudwatch.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class EventTargetInputTransformerArgs extends io.pulumi.resources.ResourceArgs {

    public static final EventTargetInputTransformerArgs Empty = new EventTargetInputTransformerArgs();

    /**
     * Key value pairs specified in the form of JSONPath (for example, time = $.time)
     * * You can have as many as 100 key-value pairs.
     * * You must use JSON dot notation, not bracket notation.
     * * The keys can't start with "AWS".
     * 
     */
    @Import(name="inputPaths")
      private final @Nullable Output<Map<String,String>> inputPaths;

    public Output<Map<String,String>> inputPaths() {
        return this.inputPaths == null ? Codegen.empty() : this.inputPaths;
    }

    /**
     * Template to customize data sent to the target. Must be valid JSON. To send a string value, the string value must include double quotes. Values must be escaped for both JSON and the provider, e.g., `"\"Your string goes here.\\nA new line.\""`
     * 
     */
    @Import(name="inputTemplate", required=true)
      private final Output<String> inputTemplate;

    public Output<String> inputTemplate() {
        return this.inputTemplate;
    }

    public EventTargetInputTransformerArgs(
        @Nullable Output<Map<String,String>> inputPaths,
        Output<String> inputTemplate) {
        this.inputPaths = inputPaths;
        this.inputTemplate = Objects.requireNonNull(inputTemplate, "expected parameter 'inputTemplate' to be non-null");
    }

    private EventTargetInputTransformerArgs() {
        this.inputPaths = Codegen.empty();
        this.inputTemplate = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(EventTargetInputTransformerArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<Map<String,String>> inputPaths;
        private Output<String> inputTemplate;

        public Builder() {
    	      // Empty
        }

        public Builder(EventTargetInputTransformerArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.inputPaths = defaults.inputPaths;
    	      this.inputTemplate = defaults.inputTemplate;
        }

        public Builder inputPaths(@Nullable Output<Map<String,String>> inputPaths) {
            this.inputPaths = inputPaths;
            return this;
        }
        public Builder inputPaths(@Nullable Map<String,String> inputPaths) {
            this.inputPaths = Codegen.ofNullable(inputPaths);
            return this;
        }
        public Builder inputTemplate(Output<String> inputTemplate) {
            this.inputTemplate = Objects.requireNonNull(inputTemplate);
            return this;
        }
        public Builder inputTemplate(String inputTemplate) {
            this.inputTemplate = Output.of(Objects.requireNonNull(inputTemplate));
            return this;
        }        public EventTargetInputTransformerArgs build() {
            return new EventTargetInputTransformerArgs(inputPaths, inputTemplate);
        }
    }
}
