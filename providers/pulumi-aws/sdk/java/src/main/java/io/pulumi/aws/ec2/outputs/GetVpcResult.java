// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.ec2.outputs;

import io.pulumi.aws.ec2.outputs.GetVpcCidrBlockAssociation;
import io.pulumi.aws.ec2.outputs.GetVpcFilter;
import io.pulumi.core.annotations.OutputCustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;

@OutputCustomType
public final class GetVpcResult {
    /**
     * Amazon Resource Name (ARN) of VPC
     * 
     */
    private final String arn;
    /**
     * The CIDR block for the association.
     * 
     */
    private final String cidrBlock;
    private final List<GetVpcCidrBlockAssociation> cidrBlockAssociations;
    private final Boolean $default;
    private final String dhcpOptionsId;
    /**
     * Whether or not the VPC has DNS hostname support
     * 
     */
    private final Boolean enableDnsHostnames;
    /**
     * Whether or not the VPC has DNS support
     * 
     */
    private final Boolean enableDnsSupport;
    private final @Nullable List<GetVpcFilter> filters;
    private final String id;
    /**
     * The allowed tenancy of instances launched into the
     * selected VPC. May be any of `"default"`, `"dedicated"`, or `"host"`.
     * 
     */
    private final String instanceTenancy;
    /**
     * The association ID for the IPv6 CIDR block.
     * 
     */
    private final String ipv6AssociationId;
    /**
     * The IPv6 CIDR block.
     * 
     */
    private final String ipv6CidrBlock;
    /**
     * The ID of the main route table associated with this VPC.
     * 
     */
    private final String mainRouteTableId;
    /**
     * The ID of the AWS account that owns the VPC.
     * 
     */
    private final String ownerId;
    /**
     * The State of the association.
     * 
     */
    private final String state;
    private final Map<String,String> tags;

    @OutputCustomType.Constructor({"arn","cidrBlock","cidrBlockAssociations","$default","dhcpOptionsId","enableDnsHostnames","enableDnsSupport","filters","id","instanceTenancy","ipv6AssociationId","ipv6CidrBlock","mainRouteTableId","ownerId","state","tags"})
    private GetVpcResult(
        String arn,
        String cidrBlock,
        List<GetVpcCidrBlockAssociation> cidrBlockAssociations,
        Boolean $default,
        String dhcpOptionsId,
        Boolean enableDnsHostnames,
        Boolean enableDnsSupport,
        @Nullable List<GetVpcFilter> filters,
        String id,
        String instanceTenancy,
        String ipv6AssociationId,
        String ipv6CidrBlock,
        String mainRouteTableId,
        String ownerId,
        String state,
        Map<String,String> tags) {
        this.arn = Objects.requireNonNull(arn);
        this.cidrBlock = Objects.requireNonNull(cidrBlock);
        this.cidrBlockAssociations = Objects.requireNonNull(cidrBlockAssociations);
        this.$default = Objects.requireNonNull($default);
        this.dhcpOptionsId = Objects.requireNonNull(dhcpOptionsId);
        this.enableDnsHostnames = Objects.requireNonNull(enableDnsHostnames);
        this.enableDnsSupport = Objects.requireNonNull(enableDnsSupport);
        this.filters = filters;
        this.id = Objects.requireNonNull(id);
        this.instanceTenancy = Objects.requireNonNull(instanceTenancy);
        this.ipv6AssociationId = Objects.requireNonNull(ipv6AssociationId);
        this.ipv6CidrBlock = Objects.requireNonNull(ipv6CidrBlock);
        this.mainRouteTableId = Objects.requireNonNull(mainRouteTableId);
        this.ownerId = Objects.requireNonNull(ownerId);
        this.state = Objects.requireNonNull(state);
        this.tags = Objects.requireNonNull(tags);
    }

    /**
     * Amazon Resource Name (ARN) of VPC
     * 
     */
    public String getArn() {
        return this.arn;
    }
    /**
     * The CIDR block for the association.
     * 
     */
    public String getCidrBlock() {
        return this.cidrBlock;
    }
    public List<GetVpcCidrBlockAssociation> getCidrBlockAssociations() {
        return this.cidrBlockAssociations;
    }
    public Boolean get$default() {
        return this.$default;
    }
    public String getDhcpOptionsId() {
        return this.dhcpOptionsId;
    }
    /**
     * Whether or not the VPC has DNS hostname support
     * 
     */
    public Boolean getEnableDnsHostnames() {
        return this.enableDnsHostnames;
    }
    /**
     * Whether or not the VPC has DNS support
     * 
     */
    public Boolean getEnableDnsSupport() {
        return this.enableDnsSupport;
    }
    public List<GetVpcFilter> getFilters() {
        return this.filters == null ? List.of() : this.filters;
    }
    public String getId() {
        return this.id;
    }
    /**
     * The allowed tenancy of instances launched into the
     * selected VPC. May be any of `"default"`, `"dedicated"`, or `"host"`.
     * 
     */
    public String getInstanceTenancy() {
        return this.instanceTenancy;
    }
    /**
     * The association ID for the IPv6 CIDR block.
     * 
     */
    public String getIpv6AssociationId() {
        return this.ipv6AssociationId;
    }
    /**
     * The IPv6 CIDR block.
     * 
     */
    public String getIpv6CidrBlock() {
        return this.ipv6CidrBlock;
    }
    /**
     * The ID of the main route table associated with this VPC.
     * 
     */
    public String getMainRouteTableId() {
        return this.mainRouteTableId;
    }
    /**
     * The ID of the AWS account that owns the VPC.
     * 
     */
    public String getOwnerId() {
        return this.ownerId;
    }
    /**
     * The State of the association.
     * 
     */
    public String getState() {
        return this.state;
    }
    public Map<String,String> getTags() {
        return this.tags;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetVpcResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String arn;
        private String cidrBlock;
        private List<GetVpcCidrBlockAssociation> cidrBlockAssociations;
        private Boolean $default;
        private String dhcpOptionsId;
        private Boolean enableDnsHostnames;
        private Boolean enableDnsSupport;
        private @Nullable List<GetVpcFilter> filters;
        private String id;
        private String instanceTenancy;
        private String ipv6AssociationId;
        private String ipv6CidrBlock;
        private String mainRouteTableId;
        private String ownerId;
        private String state;
        private Map<String,String> tags;

        public Builder() {
    	      // Empty
        }

        public Builder(GetVpcResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.cidrBlock = defaults.cidrBlock;
    	      this.cidrBlockAssociations = defaults.cidrBlockAssociations;
    	      this.$default = defaults.$default;
    	      this.dhcpOptionsId = defaults.dhcpOptionsId;
    	      this.enableDnsHostnames = defaults.enableDnsHostnames;
    	      this.enableDnsSupport = defaults.enableDnsSupport;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.instanceTenancy = defaults.instanceTenancy;
    	      this.ipv6AssociationId = defaults.ipv6AssociationId;
    	      this.ipv6CidrBlock = defaults.ipv6CidrBlock;
    	      this.mainRouteTableId = defaults.mainRouteTableId;
    	      this.ownerId = defaults.ownerId;
    	      this.state = defaults.state;
    	      this.tags = defaults.tags;
        }

        public Builder setArn(String arn) {
            this.arn = Objects.requireNonNull(arn);
            return this;
        }

        public Builder setCidrBlock(String cidrBlock) {
            this.cidrBlock = Objects.requireNonNull(cidrBlock);
            return this;
        }

        public Builder setCidrBlockAssociations(List<GetVpcCidrBlockAssociation> cidrBlockAssociations) {
            this.cidrBlockAssociations = Objects.requireNonNull(cidrBlockAssociations);
            return this;
        }

        public Builder set$default(Boolean $default) {
            this.$default = Objects.requireNonNull($default);
            return this;
        }

        public Builder setDhcpOptionsId(String dhcpOptionsId) {
            this.dhcpOptionsId = Objects.requireNonNull(dhcpOptionsId);
            return this;
        }

        public Builder setEnableDnsHostnames(Boolean enableDnsHostnames) {
            this.enableDnsHostnames = Objects.requireNonNull(enableDnsHostnames);
            return this;
        }

        public Builder setEnableDnsSupport(Boolean enableDnsSupport) {
            this.enableDnsSupport = Objects.requireNonNull(enableDnsSupport);
            return this;
        }

        public Builder setFilters(@Nullable List<GetVpcFilter> filters) {
            this.filters = filters;
            return this;
        }

        public Builder setId(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }

        public Builder setInstanceTenancy(String instanceTenancy) {
            this.instanceTenancy = Objects.requireNonNull(instanceTenancy);
            return this;
        }

        public Builder setIpv6AssociationId(String ipv6AssociationId) {
            this.ipv6AssociationId = Objects.requireNonNull(ipv6AssociationId);
            return this;
        }

        public Builder setIpv6CidrBlock(String ipv6CidrBlock) {
            this.ipv6CidrBlock = Objects.requireNonNull(ipv6CidrBlock);
            return this;
        }

        public Builder setMainRouteTableId(String mainRouteTableId) {
            this.mainRouteTableId = Objects.requireNonNull(mainRouteTableId);
            return this;
        }

        public Builder setOwnerId(String ownerId) {
            this.ownerId = Objects.requireNonNull(ownerId);
            return this;
        }

        public Builder setState(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }

        public Builder setTags(Map<String,String> tags) {
            this.tags = Objects.requireNonNull(tags);
            return this;
        }
        public GetVpcResult build() {
            return new GetVpcResult(arn, cidrBlock, cidrBlockAssociations, $default, dhcpOptionsId, enableDnsHostnames, enableDnsSupport, filters, id, instanceTenancy, ipv6AssociationId, ipv6CidrBlock, mainRouteTableId, ownerId, state, tags);
        }
    }
}
