// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.ec2;

import io.pulumi.aws.ec2.enums.PlacementStrategy;
import io.pulumi.core.Either;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class PlacementGroupArgs extends io.pulumi.resources.ResourceArgs {

    public static final PlacementGroupArgs Empty = new PlacementGroupArgs();

    /**
     * The name of the placement group.
     * 
     */
    @InputImport(name="name")
      private final @Nullable Input<String> name;

    public Input<String> getName() {
        return this.name == null ? Input.empty() : this.name;
    }

    /**
     * The number of partitions to create in the
     * placement group.  Can only be specified when the `strategy` is set to
     * `"partition"`.  Valid values are 1 - 7 (default is `2`).
     * 
     */
    @InputImport(name="partitionCount")
      private final @Nullable Input<Integer> partitionCount;

    public Input<Integer> getPartitionCount() {
        return this.partitionCount == null ? Input.empty() : this.partitionCount;
    }

    /**
     * The placement strategy. Can be `"cluster"`, `"partition"` or `"spread"`.
     * 
     */
    @InputImport(name="strategy", required=true)
      private final Input<Either<String,PlacementStrategy>> strategy;

    public Input<Either<String,PlacementStrategy>> getStrategy() {
        return this.strategy;
    }

    /**
     * Key-value map of resource tags. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @InputImport(name="tags")
      private final @Nullable Input<Map<String,String>> tags;

    public Input<Map<String,String>> getTags() {
        return this.tags == null ? Input.empty() : this.tags;
    }

    public PlacementGroupArgs(
        @Nullable Input<String> name,
        @Nullable Input<Integer> partitionCount,
        Input<Either<String,PlacementStrategy>> strategy,
        @Nullable Input<Map<String,String>> tags) {
        this.name = name;
        this.partitionCount = partitionCount;
        this.strategy = Objects.requireNonNull(strategy, "expected parameter 'strategy' to be non-null");
        this.tags = tags;
    }

    private PlacementGroupArgs() {
        this.name = Input.empty();
        this.partitionCount = Input.empty();
        this.strategy = Input.empty();
        this.tags = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PlacementGroupArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> name;
        private @Nullable Input<Integer> partitionCount;
        private Input<Either<String,PlacementStrategy>> strategy;
        private @Nullable Input<Map<String,String>> tags;

        public Builder() {
    	      // Empty
        }

        public Builder(PlacementGroupArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.name = defaults.name;
    	      this.partitionCount = defaults.partitionCount;
    	      this.strategy = defaults.strategy;
    	      this.tags = defaults.tags;
        }

        public Builder setName(@Nullable Input<String> name) {
            this.name = name;
            return this;
        }

        public Builder setName(@Nullable String name) {
            this.name = Input.ofNullable(name);
            return this;
        }

        public Builder setPartitionCount(@Nullable Input<Integer> partitionCount) {
            this.partitionCount = partitionCount;
            return this;
        }

        public Builder setPartitionCount(@Nullable Integer partitionCount) {
            this.partitionCount = Input.ofNullable(partitionCount);
            return this;
        }

        public Builder setStrategy(Input<Either<String,PlacementStrategy>> strategy) {
            this.strategy = Objects.requireNonNull(strategy);
            return this;
        }

        public Builder setStrategy(Either<String,PlacementStrategy> strategy) {
            this.strategy = Input.of(Objects.requireNonNull(strategy));
            return this;
        }

        public Builder setTags(@Nullable Input<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }

        public Builder setTags(@Nullable Map<String,String> tags) {
            this.tags = Input.ofNullable(tags);
            return this;
        }
        public PlacementGroupArgs build() {
            return new PlacementGroupArgs(name, partitionCount, strategy, tags);
        }
    }
}
