// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.glue;

import io.pulumi.aws.Utilities;
import io.pulumi.aws.glue.PartitionArgs;
import io.pulumi.aws.glue.inputs.PartitionState;
import io.pulumi.aws.glue.outputs.PartitionStorageDescriptor;
import io.pulumi.core.Input;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.OutputExport;
import io.pulumi.core.annotations.ResourceType;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;

/**
 * Provides a Glue Partition Resource.
 * 
 * ## Example Usage
 * 
 * ## Import
 * 
 * Glue Partitions can be imported with their catalog ID (usually AWS account ID), database name, table name and partition values e.g.,
 * 
 * ```sh
 *  $ pulumi import aws:glue/partition:Partition part 123456789012:MyDatabase:MyTable:val1#val2
 * ```
 * 
 */
@ResourceType(type="aws:glue/partition:Partition")
public class Partition extends io.pulumi.resources.CustomResource {
    /**
     * ID of the Glue Catalog and database to create the table in. If omitted, this defaults to the AWS Account ID plus the database name.
     * 
     */
    @OutputExport(name="catalogId", type=String.class, parameters={})
    private Output<String> catalogId;

    /**
     * @return ID of the Glue Catalog and database to create the table in. If omitted, this defaults to the AWS Account ID plus the database name.
     * 
     */
    public Output<String> getCatalogId() {
        return this.catalogId;
    }
    /**
     * The time at which the partition was created.
     * 
     */
    @OutputExport(name="creationTime", type=String.class, parameters={})
    private Output<String> creationTime;

    /**
     * @return The time at which the partition was created.
     * 
     */
    public Output<String> getCreationTime() {
        return this.creationTime;
    }
    /**
     * Name of the metadata database where the table metadata resides. For Hive compatibility, this must be all lowercase.
     * 
     */
    @OutputExport(name="databaseName", type=String.class, parameters={})
    private Output<String> databaseName;

    /**
     * @return Name of the metadata database where the table metadata resides. For Hive compatibility, this must be all lowercase.
     * 
     */
    public Output<String> getDatabaseName() {
        return this.databaseName;
    }
    /**
     * The last time at which the partition was accessed.
     * 
     */
    @OutputExport(name="lastAccessedTime", type=String.class, parameters={})
    private Output<String> lastAccessedTime;

    /**
     * @return The last time at which the partition was accessed.
     * 
     */
    public Output<String> getLastAccessedTime() {
        return this.lastAccessedTime;
    }
    /**
     * The last time at which column statistics were computed for this partition.
     * 
     */
    @OutputExport(name="lastAnalyzedTime", type=String.class, parameters={})
    private Output<String> lastAnalyzedTime;

    /**
     * @return The last time at which column statistics were computed for this partition.
     * 
     */
    public Output<String> getLastAnalyzedTime() {
        return this.lastAnalyzedTime;
    }
    /**
     * A map of initialization parameters for the SerDe, in key-value form.
     * 
     */
    @OutputExport(name="parameters", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> parameters;

    /**
     * @return A map of initialization parameters for the SerDe, in key-value form.
     * 
     */
    public Output</* @Nullable */ Map<String,String>> getParameters() {
        return this.parameters;
    }
    /**
     * The values that define the partition.
     * 
     */
    @OutputExport(name="partitionValues", type=List.class, parameters={String.class})
    private Output<List<String>> partitionValues;

    /**
     * @return The values that define the partition.
     * 
     */
    public Output<List<String>> getPartitionValues() {
        return this.partitionValues;
    }
    /**
     * A storage descriptor object containing information about the physical storage of this table. You can refer to the [Glue Developer Guide](https://docs.aws.amazon.com/glue/latest/dg/aws-glue-api-catalog-tables.html#aws-glue-api-catalog-tables-StorageDescriptor) for a full explanation of this object.
     * 
     */
    @OutputExport(name="storageDescriptor", type=PartitionStorageDescriptor.class, parameters={})
    private Output</* @Nullable */ PartitionStorageDescriptor> storageDescriptor;

    /**
     * @return A storage descriptor object containing information about the physical storage of this table. You can refer to the [Glue Developer Guide](https://docs.aws.amazon.com/glue/latest/dg/aws-glue-api-catalog-tables.html#aws-glue-api-catalog-tables-StorageDescriptor) for a full explanation of this object.
     * 
     */
    public Output</* @Nullable */ PartitionStorageDescriptor> getStorageDescriptor() {
        return this.storageDescriptor;
    }
    @OutputExport(name="tableName", type=String.class, parameters={})
    private Output<String> tableName;

    public Output<String> getTableName() {
        return this.tableName;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Partition(String name) {
        this(name, PartitionArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Partition(String name, PartitionArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Partition(String name, PartitionArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:glue/partition:Partition", name, args == null ? PartitionArgs.Empty : args, makeResourceOptions(options, Input.empty()));
    }

    private Partition(String name, Input<String> id, @Nullable PartitionState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:glue/partition:Partition", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Input<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .setVersion(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Partition get(String name, Input<String> id, @Nullable PartitionState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new Partition(name, id, state, options);
    }
}
