// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.codestarnotifications.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class NotificationRuleTargetGetArgs extends io.pulumi.resources.ResourceArgs {

    public static final NotificationRuleTargetGetArgs Empty = new NotificationRuleTargetGetArgs();

    /**
     * The ARN of notification rule target. For example, a SNS Topic ARN.
     * 
     */
    @Import(name="address", required=true)
      private final Output<String> address;

    public Output<String> address() {
        return this.address;
    }

    /**
     * The status of the notification rule. Possible values are `ENABLED` and `DISABLED`, default is `ENABLED`.
     * 
     */
    @Import(name="status")
      private final @Nullable Output<String> status;

    public Output<String> status() {
        return this.status == null ? Codegen.empty() : this.status;
    }

    /**
     * The type of the notification target. Default value is `SNS`.
     * 
     */
    @Import(name="type")
      private final @Nullable Output<String> type;

    public Output<String> type() {
        return this.type == null ? Codegen.empty() : this.type;
    }

    public NotificationRuleTargetGetArgs(
        Output<String> address,
        @Nullable Output<String> status,
        @Nullable Output<String> type) {
        this.address = Objects.requireNonNull(address, "expected parameter 'address' to be non-null");
        this.status = status;
        this.type = type;
    }

    private NotificationRuleTargetGetArgs() {
        this.address = Codegen.empty();
        this.status = Codegen.empty();
        this.type = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(NotificationRuleTargetGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> address;
        private @Nullable Output<String> status;
        private @Nullable Output<String> type;

        public Builder() {
    	      // Empty
        }

        public Builder(NotificationRuleTargetGetArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.address = defaults.address;
    	      this.status = defaults.status;
    	      this.type = defaults.type;
        }

        public Builder address(Output<String> address) {
            this.address = Objects.requireNonNull(address);
            return this;
        }
        public Builder address(String address) {
            this.address = Output.of(Objects.requireNonNull(address));
            return this;
        }
        public Builder status(@Nullable Output<String> status) {
            this.status = status;
            return this;
        }
        public Builder status(@Nullable String status) {
            this.status = Codegen.ofNullable(status);
            return this;
        }
        public Builder type(@Nullable Output<String> type) {
            this.type = type;
            return this;
        }
        public Builder type(@Nullable String type) {
            this.type = Codegen.ofNullable(type);
            return this;
        }        public NotificationRuleTargetGetArgs build() {
            return new NotificationRuleTargetGetArgs(address, status, type);
        }
    }
}
