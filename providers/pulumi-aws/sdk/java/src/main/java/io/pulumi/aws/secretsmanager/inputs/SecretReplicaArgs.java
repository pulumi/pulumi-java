// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.secretsmanager.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class SecretReplicaArgs extends io.pulumi.resources.ResourceArgs {

    public static final SecretReplicaArgs Empty = new SecretReplicaArgs();

    /**
     * ARN, Key ID, or Alias of the AWS KMS key within the region secret is replicated to. If one is not specified, then Secrets Manager defaults to using the AWS account's default KMS key (`aws/secretsmanager`) in the region or creates one for use if non-existent.
     * 
     */
    @InputImport(name="kmsKeyId")
    private final @Nullable Input<String> kmsKeyId;

    public Input<String> getKmsKeyId() {
        return this.kmsKeyId == null ? Input.empty() : this.kmsKeyId;
    }

    /**
     * Date that you last accessed the secret in the Region.
     * 
     */
    @InputImport(name="lastAccessedDate")
    private final @Nullable Input<String> lastAccessedDate;

    public Input<String> getLastAccessedDate() {
        return this.lastAccessedDate == null ? Input.empty() : this.lastAccessedDate;
    }

    /**
     * Region for replicating the secret.
     * 
     */
    @InputImport(name="region", required=true)
    private final Input<String> region;

    public Input<String> getRegion() {
        return this.region;
    }

    /**
     * Status can be `InProgress`, `Failed`, or `InSync`.
     * 
     */
    @InputImport(name="status")
    private final @Nullable Input<String> status;

    public Input<String> getStatus() {
        return this.status == null ? Input.empty() : this.status;
    }

    /**
     * Message such as `Replication succeeded` or `Secret with this name already exists in this region`.
     * 
     */
    @InputImport(name="statusMessage")
    private final @Nullable Input<String> statusMessage;

    public Input<String> getStatusMessage() {
        return this.statusMessage == null ? Input.empty() : this.statusMessage;
    }

    public SecretReplicaArgs(
        @Nullable Input<String> kmsKeyId,
        @Nullable Input<String> lastAccessedDate,
        Input<String> region,
        @Nullable Input<String> status,
        @Nullable Input<String> statusMessage) {
        this.kmsKeyId = kmsKeyId;
        this.lastAccessedDate = lastAccessedDate;
        this.region = Objects.requireNonNull(region, "expected parameter 'region' to be non-null");
        this.status = status;
        this.statusMessage = statusMessage;
    }

    private SecretReplicaArgs() {
        this.kmsKeyId = Input.empty();
        this.lastAccessedDate = Input.empty();
        this.region = Input.empty();
        this.status = Input.empty();
        this.statusMessage = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SecretReplicaArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> kmsKeyId;
        private @Nullable Input<String> lastAccessedDate;
        private Input<String> region;
        private @Nullable Input<String> status;
        private @Nullable Input<String> statusMessage;

        public Builder() {
    	      // Empty
        }

        public Builder(SecretReplicaArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.kmsKeyId = defaults.kmsKeyId;
    	      this.lastAccessedDate = defaults.lastAccessedDate;
    	      this.region = defaults.region;
    	      this.status = defaults.status;
    	      this.statusMessage = defaults.statusMessage;
        }

        public Builder setKmsKeyId(@Nullable Input<String> kmsKeyId) {
            this.kmsKeyId = kmsKeyId;
            return this;
        }

        public Builder setKmsKeyId(@Nullable String kmsKeyId) {
            this.kmsKeyId = Input.ofNullable(kmsKeyId);
            return this;
        }

        public Builder setLastAccessedDate(@Nullable Input<String> lastAccessedDate) {
            this.lastAccessedDate = lastAccessedDate;
            return this;
        }

        public Builder setLastAccessedDate(@Nullable String lastAccessedDate) {
            this.lastAccessedDate = Input.ofNullable(lastAccessedDate);
            return this;
        }

        public Builder setRegion(Input<String> region) {
            this.region = Objects.requireNonNull(region);
            return this;
        }

        public Builder setRegion(String region) {
            this.region = Input.of(Objects.requireNonNull(region));
            return this;
        }

        public Builder setStatus(@Nullable Input<String> status) {
            this.status = status;
            return this;
        }

        public Builder setStatus(@Nullable String status) {
            this.status = Input.ofNullable(status);
            return this;
        }

        public Builder setStatusMessage(@Nullable Input<String> statusMessage) {
            this.statusMessage = statusMessage;
            return this;
        }

        public Builder setStatusMessage(@Nullable String statusMessage) {
            this.statusMessage = Input.ofNullable(statusMessage);
            return this;
        }
        public SecretReplicaArgs build() {
            return new SecretReplicaArgs(kmsKeyId, lastAccessedDate, region, status, statusMessage);
        }
    }
}
