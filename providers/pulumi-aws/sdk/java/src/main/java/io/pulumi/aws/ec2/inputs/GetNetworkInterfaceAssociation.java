// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.ec2.inputs;

import io.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GetNetworkInterfaceAssociation extends io.pulumi.resources.InvokeArgs {

    public static final GetNetworkInterfaceAssociation Empty = new GetNetworkInterfaceAssociation();

    /**
     * The allocation ID.
     * 
     */
    @Import(name="allocationId", required=true)
      private final String allocationId;

    public String allocationId() {
        return this.allocationId;
    }

    /**
     * The association ID.
     * 
     */
    @Import(name="associationId", required=true)
      private final String associationId;

    public String associationId() {
        return this.associationId;
    }

    /**
     * The carrier IP address associated with the network interface. This attribute is only set when the network interface is in a subnet which is associated with a Wavelength Zone.
     * 
     */
    @Import(name="carrierIp", required=true)
      private final String carrierIp;

    public String carrierIp() {
        return this.carrierIp;
    }

    /**
     * The customer-owned IP address.
     * 
     */
    @Import(name="customerOwnedIp", required=true)
      private final String customerOwnedIp;

    public String customerOwnedIp() {
        return this.customerOwnedIp;
    }

    /**
     * The ID of the Elastic IP address owner.
     * 
     */
    @Import(name="ipOwnerId", required=true)
      private final String ipOwnerId;

    public String ipOwnerId() {
        return this.ipOwnerId;
    }

    /**
     * The public DNS name.
     * 
     */
    @Import(name="publicDnsName", required=true)
      private final String publicDnsName;

    public String publicDnsName() {
        return this.publicDnsName;
    }

    /**
     * The address of the Elastic IP address bound to the network interface.
     * 
     */
    @Import(name="publicIp", required=true)
      private final String publicIp;

    public String publicIp() {
        return this.publicIp;
    }

    public GetNetworkInterfaceAssociation(
        String allocationId,
        String associationId,
        String carrierIp,
        String customerOwnedIp,
        String ipOwnerId,
        String publicDnsName,
        String publicIp) {
        this.allocationId = Objects.requireNonNull(allocationId, "expected parameter 'allocationId' to be non-null");
        this.associationId = Objects.requireNonNull(associationId, "expected parameter 'associationId' to be non-null");
        this.carrierIp = Objects.requireNonNull(carrierIp, "expected parameter 'carrierIp' to be non-null");
        this.customerOwnedIp = Objects.requireNonNull(customerOwnedIp, "expected parameter 'customerOwnedIp' to be non-null");
        this.ipOwnerId = Objects.requireNonNull(ipOwnerId, "expected parameter 'ipOwnerId' to be non-null");
        this.publicDnsName = Objects.requireNonNull(publicDnsName, "expected parameter 'publicDnsName' to be non-null");
        this.publicIp = Objects.requireNonNull(publicIp, "expected parameter 'publicIp' to be non-null");
    }

    private GetNetworkInterfaceAssociation() {
        this.allocationId = null;
        this.associationId = null;
        this.carrierIp = null;
        this.customerOwnedIp = null;
        this.ipOwnerId = null;
        this.publicDnsName = null;
        this.publicIp = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetNetworkInterfaceAssociation defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String allocationId;
        private String associationId;
        private String carrierIp;
        private String customerOwnedIp;
        private String ipOwnerId;
        private String publicDnsName;
        private String publicIp;

        public Builder() {
    	      // Empty
        }

        public Builder(GetNetworkInterfaceAssociation defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allocationId = defaults.allocationId;
    	      this.associationId = defaults.associationId;
    	      this.carrierIp = defaults.carrierIp;
    	      this.customerOwnedIp = defaults.customerOwnedIp;
    	      this.ipOwnerId = defaults.ipOwnerId;
    	      this.publicDnsName = defaults.publicDnsName;
    	      this.publicIp = defaults.publicIp;
        }

        public Builder allocationId(String allocationId) {
            this.allocationId = Objects.requireNonNull(allocationId);
            return this;
        }
        public Builder associationId(String associationId) {
            this.associationId = Objects.requireNonNull(associationId);
            return this;
        }
        public Builder carrierIp(String carrierIp) {
            this.carrierIp = Objects.requireNonNull(carrierIp);
            return this;
        }
        public Builder customerOwnedIp(String customerOwnedIp) {
            this.customerOwnedIp = Objects.requireNonNull(customerOwnedIp);
            return this;
        }
        public Builder ipOwnerId(String ipOwnerId) {
            this.ipOwnerId = Objects.requireNonNull(ipOwnerId);
            return this;
        }
        public Builder publicDnsName(String publicDnsName) {
            this.publicDnsName = Objects.requireNonNull(publicDnsName);
            return this;
        }
        public Builder publicIp(String publicIp) {
            this.publicIp = Objects.requireNonNull(publicIp);
            return this;
        }        public GetNetworkInterfaceAssociation build() {
            return new GetNetworkInterfaceAssociation(allocationId, associationId, carrierIp, customerOwnedIp, ipOwnerId, publicDnsName, publicIp);
        }
    }
}
