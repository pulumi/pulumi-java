// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.cognito;

import io.pulumi.aws.Utilities;
import io.pulumi.aws.cognito.UserPoolClientArgs;
import io.pulumi.aws.cognito.inputs.UserPoolClientState;
import io.pulumi.aws.cognito.outputs.UserPoolClientAnalyticsConfiguration;
import io.pulumi.aws.cognito.outputs.UserPoolClientTokenValidityUnits;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Export;
import io.pulumi.core.annotations.ResourceType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * Provides a Cognito User Pool Client resource.
 * 
 * {{% examples %}}
 * ## Example Usage
 * {{% example %}}
 * ### Create a basic user pool client
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 * 
 * const pool = new aws.cognito.UserPool("pool", {});
 * const client = new aws.cognito.UserPoolClient("client", {userPoolId: pool.id});
 * ```
 * ```python
 * import pulumi
 * import pulumi_aws as aws
 * 
 * pool = aws.cognito.UserPool("pool")
 * client = aws.cognito.UserPoolClient("client", user_pool_id=pool.id)
 * ```
 * ```csharp
 * using Pulumi;
 * using Aws = Pulumi.Aws;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var pool = new Aws.Cognito.UserPool("pool", new Aws.Cognito.UserPoolArgs
 *         {
 *         });
 *         var client = new Aws.Cognito.UserPoolClient("client", new Aws.Cognito.UserPoolClientArgs
 *         {
 *             UserPoolId = pool.Id,
 *         });
 *     }
 * 
 * }
 * ```
 * ```go
 * package main
 * 
 * import (
 * 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/cognito"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		pool, err := cognito.NewUserPool(ctx, "pool", nil)
 * 		if err != nil {
 * 			return err
 * 		}
 * 		_, err = cognito.NewUserPoolClient(ctx, "client", &cognito.UserPoolClientArgs{
 * 			UserPoolId: pool.ID(),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * ```
 * {{% /example %}}
 * {{% example %}}
 * ### Create a user pool client with no SRP authentication
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 * 
 * const pool = new aws.cognito.UserPool("pool", {});
 * const client = new aws.cognito.UserPoolClient("client", {
 *     userPoolId: pool.id,
 *     generateSecret: true,
 *     explicitAuthFlows: ["ADMIN_NO_SRP_AUTH"],
 * });
 * ```
 * ```python
 * import pulumi
 * import pulumi_aws as aws
 * 
 * pool = aws.cognito.UserPool("pool")
 * client = aws.cognito.UserPoolClient("client",
 *     user_pool_id=pool.id,
 *     generate_secret=True,
 *     explicit_auth_flows=["ADMIN_NO_SRP_AUTH"])
 * ```
 * ```csharp
 * using Pulumi;
 * using Aws = Pulumi.Aws;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var pool = new Aws.Cognito.UserPool("pool", new Aws.Cognito.UserPoolArgs
 *         {
 *         });
 *         var client = new Aws.Cognito.UserPoolClient("client", new Aws.Cognito.UserPoolClientArgs
 *         {
 *             UserPoolId = pool.Id,
 *             GenerateSecret = true,
 *             ExplicitAuthFlows = 
 *             {
 *                 "ADMIN_NO_SRP_AUTH",
 *             },
 *         });
 *     }
 * 
 * }
 * ```
 * ```go
 * package main
 * 
 * import (
 * 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/cognito"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		pool, err := cognito.NewUserPool(ctx, "pool", nil)
 * 		if err != nil {
 * 			return err
 * 		}
 * 		_, err = cognito.NewUserPoolClient(ctx, "client", &cognito.UserPoolClientArgs{
 * 			UserPoolId:     pool.ID(),
 * 			GenerateSecret: pulumi.Bool(true),
 * 			ExplicitAuthFlows: pulumi.StringArray{
 * 				pulumi.String("ADMIN_NO_SRP_AUTH"),
 * 			},
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * ```
 * {{% /example %}}
 * {{% example %}}
 * ### Create a user pool client with pinpoint analytics
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 * 
 * const current = aws.getCallerIdentity({});
 * const testUserPool = new aws.cognito.UserPool("testUserPool", {});
 * const testApp = new aws.pinpoint.App("testApp", {});
 * const testRole = new aws.iam.Role("testRole", {assumeRolePolicy: `{
 *   "Version": "2012-10-17",
 *   "Statement": [
 *     {
 *       "Action": "sts:AssumeRole",
 *       "Principal": {
 *         "Service": "cognito-idp.amazonaws.com"
 *       },
 *       "Effect": "Allow",
 *       "Sid": ""
 *     }
 *   ]
 * }
 * `});
 * const testRolePolicy = new aws.iam.RolePolicy("testRolePolicy", {
 *     role: testRole.id,
 *     policy: pulumi.all([current, testApp.applicationId]).apply(([current, applicationId]) => `{
 *   "Version": "2012-10-17",
 *   "Statement": [
 *     {
 *       "Action": [
 *         "mobiletargeting:UpdateEndpoint",
 *         "mobiletargeting:PutItems"
 *       ],
 *       "Effect": "Allow",
 *       "Resource": "arn:aws:mobiletargeting:*:${current.accountId}:apps/${applicationId}*"
 *     }
 *   ]
 * }
 * `),
 * });
 * const testUserPoolClient = new aws.cognito.UserPoolClient("testUserPoolClient", {
 *     userPoolId: testUserPool.id,
 *     analyticsConfiguration: {
 *         applicationId: testApp.applicationId,
 *         externalId: "some_id",
 *         roleArn: testRole.arn,
 *         userDataShared: true,
 *     },
 * });
 * ```
 * ```python
 * import pulumi
 * import pulumi_aws as aws
 * 
 * current = aws.get_caller_identity()
 * test_user_pool = aws.cognito.UserPool("testUserPool")
 * test_app = aws.pinpoint.App("testApp")
 * test_role = aws.iam.Role("testRole", assume_role_policy="""{
 *   "Version": "2012-10-17",
 *   "Statement": [
 *     {
 *       "Action": "sts:AssumeRole",
 *       "Principal": {
 *         "Service": "cognito-idp.amazonaws.com"
 *       },
 *       "Effect": "Allow",
 *       "Sid": ""
 *     }
 *   ]
 * }
 * """)
 * test_role_policy = aws.iam.RolePolicy("testRolePolicy",
 *     role=test_role.id,
 *     policy=test_app.application_id.apply(lambda application_id: f"""{{
 *   "Version": "2012-10-17",
 *   "Statement": [
 *     {{
 *       "Action": [
 *         "mobiletargeting:UpdateEndpoint",
 *         "mobiletargeting:PutItems"
 *       ],
 *       "Effect": "Allow",
 *       "Resource": "arn:aws:mobiletargeting:*:{current.account_id}:apps/{application_id}*"
 *     }}
 *   ]
 * }}
 * """))
 * test_user_pool_client = aws.cognito.UserPoolClient("testUserPoolClient",
 *     user_pool_id=test_user_pool.id,
 *     analytics_configuration=aws.cognito.UserPoolClientAnalyticsConfigurationArgs(
 *         application_id=test_app.application_id,
 *         external_id="some_id",
 *         role_arn=test_role.arn,
 *         user_data_shared=True,
 *     ))
 * ```
 * ```csharp
 * using Pulumi;
 * using Aws = Pulumi.Aws;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var current = Output.Create(Aws.GetCallerIdentity.InvokeAsync());
 *         var testUserPool = new Aws.Cognito.UserPool("testUserPool", new Aws.Cognito.UserPoolArgs
 *         {
 *         });
 *         var testApp = new Aws.Pinpoint.App("testApp", new Aws.Pinpoint.AppArgs
 *         {
 *         });
 *         var testRole = new Aws.Iam.Role("testRole", new Aws.Iam.RoleArgs
 *         {
 *             AssumeRolePolicy = @"{
 *   ""Version"": ""2012-10-17"",
 *   ""Statement"": [
 *     {
 *       ""Action"": ""sts:AssumeRole"",
 *       ""Principal"": {
 *         ""Service"": ""cognito-idp.amazonaws.com""
 *       },
 *       ""Effect"": ""Allow"",
 *       ""Sid"": """"
 *     }
 *   ]
 * }
 * ",
 *         });
 *         var testRolePolicy = new Aws.Iam.RolePolicy("testRolePolicy", new Aws.Iam.RolePolicyArgs
 *         {
 *             Role = testRole.Id,
 *             Policy = Output.Tuple(current, testApp.ApplicationId).Apply(values =>
 *             {
 *                 var current = values.Item1;
 *                 var applicationId = values.Item2;
 *                 return @$"{{
 *   ""Version"": ""2012-10-17"",
 *   ""Statement"": [
 *     {{
 *       ""Action"": [
 *         ""mobiletargeting:UpdateEndpoint"",
 *         ""mobiletargeting:PutItems""
 *       ],
 *       ""Effect"": ""Allow"",
 *       ""Resource"": ""arn:aws:mobiletargeting:*:{current.AccountId}:apps/{applicationId}*""
 *     }}
 *   ]
 * }}
 * ";
 *             }),
 *         });
 *         var testUserPoolClient = new Aws.Cognito.UserPoolClient("testUserPoolClient", new Aws.Cognito.UserPoolClientArgs
 *         {
 *             UserPoolId = testUserPool.Id,
 *             AnalyticsConfiguration = new Aws.Cognito.Inputs.UserPoolClientAnalyticsConfigurationArgs
 *             {
 *                 ApplicationId = testApp.ApplicationId,
 *                 ExternalId = "some_id",
 *                 RoleArn = testRole.Arn,
 *                 UserDataShared = true,
 *             },
 *         });
 *     }
 * 
 * }
 * ```
 * ```go
 * package main
 * 
 * import (
 * 	"fmt"
 * 
 * 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws"
 * 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/cognito"
 * 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/iam"
 * 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/pinpoint"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		current, err := aws.GetCallerIdentity(ctx, nil, nil)
 * 		if err != nil {
 * 			return err
 * 		}
 * 		testUserPool, err := cognito.NewUserPool(ctx, "testUserPool", nil)
 * 		if err != nil {
 * 			return err
 * 		}
 * 		testApp, err := pinpoint.NewApp(ctx, "testApp", nil)
 * 		if err != nil {
 * 			return err
 * 		}
 * 		testRole, err := iam.NewRole(ctx, "testRole", &iam.RoleArgs{
 * 			AssumeRolePolicy: pulumi.Any(fmt.Sprintf("%v%v%v%v%v%v%v%v%v%v%v%v%v", "{\n", "  \"Version\": \"2012-10-17\",\n", "  \"Statement\": [\n", "    {\n", "      \"Action\": \"sts:AssumeRole\",\n", "      \"Principal\": {\n", "        \"Service\": \"cognito-idp.amazonaws.com\"\n", "      },\n", "      \"Effect\": \"Allow\",\n", "      \"Sid\": \"\"\n", "    }\n", "  ]\n", "}\n")),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		_, err = iam.NewRolePolicy(ctx, "testRolePolicy", &iam.RolePolicyArgs{
 * 			Role: testRole.ID(),
 * 			Policy: testApp.ApplicationId.ApplyT(func(applicationId string) (string, error) {
 * 				return fmt.Sprintf("%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v", "{\n", "  \"Version\": \"2012-10-17\",\n", "  \"Statement\": [\n", "    {\n", "      \"Action\": [\n", "        \"mobiletargeting:UpdateEndpoint\",\n", "        \"mobiletargeting:PutItems\"\n", "      ],\n", "      \"Effect\": \"Allow\",\n", "      \"Resource\": \"arn:aws:mobiletargeting:*:", current.AccountId, ":apps/", applicationId, "*\"\n", "    }\n", "  ]\n", "}\n"), nil
 * 			}).(pulumi.StringOutput),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		_, err = cognito.NewUserPoolClient(ctx, "testUserPoolClient", &cognito.UserPoolClientArgs{
 * 			UserPoolId: testUserPool.ID(),
 * 			AnalyticsConfiguration: &cognito.UserPoolClientAnalyticsConfigurationArgs{
 * 				ApplicationId:  testApp.ApplicationId,
 * 				ExternalId:     pulumi.String("some_id"),
 * 				RoleArn:        testRole.Arn,
 * 				UserDataShared: pulumi.Bool(true),
 * 			},
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * ```
 * {{% /example %}}
 * {{% /examples %}}
 * 
 * ## Import
 * 
 * Cognito User Pool Clients can be imported using the `id` of the Cognito User Pool, and the `id` of the Cognito User Pool Client, e.g.,
 * 
 * ```sh
 *  $ pulumi import aws:cognito/userPoolClient:UserPoolClient client <user_pool_id>/<user_pool_client_id>
 * ```
 * 
 *  
 */
@ResourceType(type="aws:cognito/userPoolClient:UserPoolClient")
public class UserPoolClient extends io.pulumi.resources.CustomResource {
    /**
     * Time limit, between 5 minutes and 1 day, after which the access token is no longer valid and cannot be used. This value will be overridden if you have entered a value in `token_validity_units`.
     * 
     */
    @Export(name="accessTokenValidity", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> accessTokenValidity;

    /**
     * @return Time limit, between 5 minutes and 1 day, after which the access token is no longer valid and cannot be used. This value will be overridden if you have entered a value in `token_validity_units`.
     * 
     */
    public Output</* @Nullable */ Integer> getAccessTokenValidity() {
        return this.accessTokenValidity;
    }
    /**
     * List of allowed OAuth flows (code, implicit, client_credentials).
     * 
     */
    @Export(name="allowedOauthFlows", type=List.class, parameters={String.class})
    private Output</* @Nullable */ List<String>> allowedOauthFlows;

    /**
     * @return List of allowed OAuth flows (code, implicit, client_credentials).
     * 
     */
    public Output</* @Nullable */ List<String>> getAllowedOauthFlows() {
        return this.allowedOauthFlows;
    }
    /**
     * Whether the client is allowed to follow the OAuth protocol when interacting with Cognito user pools.
     * 
     */
    @Export(name="allowedOauthFlowsUserPoolClient", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> allowedOauthFlowsUserPoolClient;

    /**
     * @return Whether the client is allowed to follow the OAuth protocol when interacting with Cognito user pools.
     * 
     */
    public Output</* @Nullable */ Boolean> getAllowedOauthFlowsUserPoolClient() {
        return this.allowedOauthFlowsUserPoolClient;
    }
    /**
     * List of allowed OAuth scopes (phone, email, openid, profile, and aws.cognito.signin.user.admin).
     * 
     */
    @Export(name="allowedOauthScopes", type=List.class, parameters={String.class})
    private Output</* @Nullable */ List<String>> allowedOauthScopes;

    /**
     * @return List of allowed OAuth scopes (phone, email, openid, profile, and aws.cognito.signin.user.admin).
     * 
     */
    public Output</* @Nullable */ List<String>> getAllowedOauthScopes() {
        return this.allowedOauthScopes;
    }
    /**
     * Configuration block for Amazon Pinpoint analytics for collecting metrics for this user pool. Detailed below.
     * 
     */
    @Export(name="analyticsConfiguration", type=UserPoolClientAnalyticsConfiguration.class, parameters={})
    private Output</* @Nullable */ UserPoolClientAnalyticsConfiguration> analyticsConfiguration;

    /**
     * @return Configuration block for Amazon Pinpoint analytics for collecting metrics for this user pool. Detailed below.
     * 
     */
    public Output</* @Nullable */ UserPoolClientAnalyticsConfiguration> getAnalyticsConfiguration() {
        return this.analyticsConfiguration;
    }
    /**
     * List of allowed callback URLs for the identity providers.
     * 
     */
    @Export(name="callbackUrls", type=List.class, parameters={String.class})
    private Output<List<String>> callbackUrls;

    /**
     * @return List of allowed callback URLs for the identity providers.
     * 
     */
    public Output<List<String>> getCallbackUrls() {
        return this.callbackUrls;
    }
    /**
     * Client secret of the user pool client.
     * 
     */
    @Export(name="clientSecret", type=String.class, parameters={})
    private Output<String> clientSecret;

    /**
     * @return Client secret of the user pool client.
     * 
     */
    public Output<String> getClientSecret() {
        return this.clientSecret;
    }
    /**
     * Default redirect URI. Must be in the list of callback URLs.
     * 
     */
    @Export(name="defaultRedirectUri", type=String.class, parameters={})
    private Output</* @Nullable */ String> defaultRedirectUri;

    /**
     * @return Default redirect URI. Must be in the list of callback URLs.
     * 
     */
    public Output</* @Nullable */ String> getDefaultRedirectUri() {
        return this.defaultRedirectUri;
    }
    /**
     * Enables or disables token revocation.
     * 
     */
    @Export(name="enableTokenRevocation", type=Boolean.class, parameters={})
    private Output<Boolean> enableTokenRevocation;

    /**
     * @return Enables or disables token revocation.
     * 
     */
    public Output<Boolean> getEnableTokenRevocation() {
        return this.enableTokenRevocation;
    }
    /**
     * List of authentication flows (ADMIN_NO_SRP_AUTH, CUSTOM_AUTH_FLOW_ONLY, USER_PASSWORD_AUTH, ALLOW_ADMIN_USER_PASSWORD_AUTH, ALLOW_CUSTOM_AUTH, ALLOW_USER_PASSWORD_AUTH, ALLOW_USER_SRP_AUTH, ALLOW_REFRESH_TOKEN_AUTH).
     * 
     */
    @Export(name="explicitAuthFlows", type=List.class, parameters={String.class})
    private Output</* @Nullable */ List<String>> explicitAuthFlows;

    /**
     * @return List of authentication flows (ADMIN_NO_SRP_AUTH, CUSTOM_AUTH_FLOW_ONLY, USER_PASSWORD_AUTH, ALLOW_ADMIN_USER_PASSWORD_AUTH, ALLOW_CUSTOM_AUTH, ALLOW_USER_PASSWORD_AUTH, ALLOW_USER_SRP_AUTH, ALLOW_REFRESH_TOKEN_AUTH).
     * 
     */
    public Output</* @Nullable */ List<String>> getExplicitAuthFlows() {
        return this.explicitAuthFlows;
    }
    /**
     * Should an application secret be generated.
     * 
     */
    @Export(name="generateSecret", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> generateSecret;

    /**
     * @return Should an application secret be generated.
     * 
     */
    public Output</* @Nullable */ Boolean> getGenerateSecret() {
        return this.generateSecret;
    }
    /**
     * Time limit, between 5 minutes and 1 day, after which the ID token is no longer valid and cannot be used. This value will be overridden if you have entered a value in `token_validity_units`.
     * 
     */
    @Export(name="idTokenValidity", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> idTokenValidity;

    /**
     * @return Time limit, between 5 minutes and 1 day, after which the ID token is no longer valid and cannot be used. This value will be overridden if you have entered a value in `token_validity_units`.
     * 
     */
    public Output</* @Nullable */ Integer> getIdTokenValidity() {
        return this.idTokenValidity;
    }
    /**
     * List of allowed logout URLs for the identity providers.
     * 
     */
    @Export(name="logoutUrls", type=List.class, parameters={String.class})
    private Output<List<String>> logoutUrls;

    /**
     * @return List of allowed logout URLs for the identity providers.
     * 
     */
    public Output<List<String>> getLogoutUrls() {
        return this.logoutUrls;
    }
    /**
     * Name of the application client.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return Name of the application client.
     * 
     */
    public Output<String> getName() {
        return this.name;
    }
    /**
     * Choose which errors and responses are returned by Cognito APIs during authentication, account confirmation, and password recovery when the user does not exist in the user pool. When set to `ENABLED` and the user does not exist, authentication returns an error indicating either the username or password was incorrect, and account confirmation and password recovery return a response indicating a code was sent to a simulated destination. When set to `LEGACY`, those APIs will return a `UserNotFoundException` exception if the user does not exist in the user pool.
     * 
     */
    @Export(name="preventUserExistenceErrors", type=String.class, parameters={})
    private Output<String> preventUserExistenceErrors;

    /**
     * @return Choose which errors and responses are returned by Cognito APIs during authentication, account confirmation, and password recovery when the user does not exist in the user pool. When set to `ENABLED` and the user does not exist, authentication returns an error indicating either the username or password was incorrect, and account confirmation and password recovery return a response indicating a code was sent to a simulated destination. When set to `LEGACY`, those APIs will return a `UserNotFoundException` exception if the user does not exist in the user pool.
     * 
     */
    public Output<String> getPreventUserExistenceErrors() {
        return this.preventUserExistenceErrors;
    }
    /**
     * List of user pool attributes the application client can read from.
     * 
     */
    @Export(name="readAttributes", type=List.class, parameters={String.class})
    private Output</* @Nullable */ List<String>> readAttributes;

    /**
     * @return List of user pool attributes the application client can read from.
     * 
     */
    public Output</* @Nullable */ List<String>> getReadAttributes() {
        return this.readAttributes;
    }
    /**
     * Time limit in days refresh tokens are valid for.
     * 
     */
    @Export(name="refreshTokenValidity", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> refreshTokenValidity;

    /**
     * @return Time limit in days refresh tokens are valid for.
     * 
     */
    public Output</* @Nullable */ Integer> getRefreshTokenValidity() {
        return this.refreshTokenValidity;
    }
    /**
     * List of provider names for the identity providers that are supported on this client. Uses the `provider_name` attribute of `aws.cognito.IdentityProvider` resource(s), or the equivalent string(s).
     * 
     */
    @Export(name="supportedIdentityProviders", type=List.class, parameters={String.class})
    private Output</* @Nullable */ List<String>> supportedIdentityProviders;

    /**
     * @return List of provider names for the identity providers that are supported on this client. Uses the `provider_name` attribute of `aws.cognito.IdentityProvider` resource(s), or the equivalent string(s).
     * 
     */
    public Output</* @Nullable */ List<String>> getSupportedIdentityProviders() {
        return this.supportedIdentityProviders;
    }
    /**
     * Configuration block for units in which the validity times are represented in. Detailed below.
     * 
     */
    @Export(name="tokenValidityUnits", type=UserPoolClientTokenValidityUnits.class, parameters={})
    private Output</* @Nullable */ UserPoolClientTokenValidityUnits> tokenValidityUnits;

    /**
     * @return Configuration block for units in which the validity times are represented in. Detailed below.
     * 
     */
    public Output</* @Nullable */ UserPoolClientTokenValidityUnits> getTokenValidityUnits() {
        return this.tokenValidityUnits;
    }
    /**
     * User pool the client belongs to.
     * 
     */
    @Export(name="userPoolId", type=String.class, parameters={})
    private Output<String> userPoolId;

    /**
     * @return User pool the client belongs to.
     * 
     */
    public Output<String> getUserPoolId() {
        return this.userPoolId;
    }
    /**
     * List of user pool attributes the application client can write to.
     * 
     */
    @Export(name="writeAttributes", type=List.class, parameters={String.class})
    private Output</* @Nullable */ List<String>> writeAttributes;

    /**
     * @return List of user pool attributes the application client can write to.
     * 
     */
    public Output</* @Nullable */ List<String>> getWriteAttributes() {
        return this.writeAttributes;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public UserPoolClient(String name) {
        this(name, UserPoolClientArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public UserPoolClient(String name, UserPoolClientArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public UserPoolClient(String name, UserPoolClientArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:cognito/userPoolClient:UserPoolClient", name, args == null ? UserPoolClientArgs.Empty : args, makeResourceOptions(options, Output.empty()));
    }

    private UserPoolClient(String name, Output<String> id, @Nullable UserPoolClientState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:cognito/userPoolClient:UserPoolClient", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static UserPoolClient get(String name, Output<String> id, @Nullable UserPoolClientState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new UserPoolClient(name, id, state, options);
    }
}
