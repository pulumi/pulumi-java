// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.s3;

import io.pulumi.aws.s3.inputs.BucketOwnershipControlsRuleArgs;
import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.String;
import java.util.Objects;


public final class BucketOwnershipControlsArgs extends io.pulumi.resources.ResourceArgs {

    public static final BucketOwnershipControlsArgs Empty = new BucketOwnershipControlsArgs();

    /**
     * The name of the bucket that you want to associate this access point with.
     * 
     */
    @InputImport(name="bucket", required=true)
    private final Input<String> bucket;

    public Input<String> getBucket() {
        return this.bucket;
    }

    /**
     * Configuration block(s) with Ownership Controls rules. Detailed below.
     * 
     */
    @InputImport(name="rule", required=true)
    private final Input<BucketOwnershipControlsRuleArgs> rule;

    public Input<BucketOwnershipControlsRuleArgs> getRule() {
        return this.rule;
    }

    public BucketOwnershipControlsArgs(
        Input<String> bucket,
        Input<BucketOwnershipControlsRuleArgs> rule) {
        this.bucket = Objects.requireNonNull(bucket, "expected parameter 'bucket' to be non-null");
        this.rule = Objects.requireNonNull(rule, "expected parameter 'rule' to be non-null");
    }

    private BucketOwnershipControlsArgs() {
        this.bucket = Input.empty();
        this.rule = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BucketOwnershipControlsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<String> bucket;
        private Input<BucketOwnershipControlsRuleArgs> rule;

        public Builder() {
    	      // Empty
        }

        public Builder(BucketOwnershipControlsArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bucket = defaults.bucket;
    	      this.rule = defaults.rule;
        }

        public Builder setBucket(Input<String> bucket) {
            this.bucket = Objects.requireNonNull(bucket);
            return this;
        }

        public Builder setBucket(String bucket) {
            this.bucket = Input.of(Objects.requireNonNull(bucket));
            return this;
        }

        public Builder setRule(Input<BucketOwnershipControlsRuleArgs> rule) {
            this.rule = Objects.requireNonNull(rule);
            return this;
        }

        public Builder setRule(BucketOwnershipControlsRuleArgs rule) {
            this.rule = Input.of(Objects.requireNonNull(rule));
            return this;
        }
        public BucketOwnershipControlsArgs build() {
            return new BucketOwnershipControlsArgs(bucket, rule);
        }
    }
}
