// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.msk.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ClusterBrokerNodeGroupInfoGetArgs extends io.pulumi.resources.ResourceArgs {

    public static final ClusterBrokerNodeGroupInfoGetArgs Empty = new ClusterBrokerNodeGroupInfoGetArgs();

    /**
     * The distribution of broker nodes across availability zones ([documentation](https://docs.aws.amazon.com/msk/1.0/apireference/clusters.html#clusters-model-brokerazdistribution)). Currently the only valid value is `DEFAULT`.
     * 
     */
    @Import(name="azDistribution")
      private final @Nullable Output<String> azDistribution;

    public Output<String> azDistribution() {
        return this.azDistribution == null ? Codegen.empty() : this.azDistribution;
    }

    /**
     * A list of subnets to connect to in client VPC ([documentation](https://docs.aws.amazon.com/msk/1.0/apireference/clusters.html#clusters-prop-brokernodegroupinfo-clientsubnets)).
     * 
     */
    @Import(name="clientSubnets", required=true)
      private final Output<List<String>> clientSubnets;

    public Output<List<String>> clientSubnets() {
        return this.clientSubnets;
    }

    /**
     * The size in GiB of the EBS volume for the data drive on each broker node.
     * 
     */
    @Import(name="ebsVolumeSize", required=true)
      private final Output<Integer> ebsVolumeSize;

    public Output<Integer> ebsVolumeSize() {
        return this.ebsVolumeSize;
    }

    /**
     * Specify the instance type to use for the kafka brokersE.g., kafka.m5.large. ([Pricing info](https://aws.amazon.com/msk/pricing/))
     * 
     */
    @Import(name="instanceType", required=true)
      private final Output<String> instanceType;

    public Output<String> instanceType() {
        return this.instanceType;
    }

    /**
     * A list of the security groups to associate with the elastic network interfaces to control who can communicate with the cluster.
     * 
     */
    @Import(name="securityGroups", required=true)
      private final Output<List<String>> securityGroups;

    public Output<List<String>> securityGroups() {
        return this.securityGroups;
    }

    public ClusterBrokerNodeGroupInfoGetArgs(
        @Nullable Output<String> azDistribution,
        Output<List<String>> clientSubnets,
        Output<Integer> ebsVolumeSize,
        Output<String> instanceType,
        Output<List<String>> securityGroups) {
        this.azDistribution = azDistribution;
        this.clientSubnets = Objects.requireNonNull(clientSubnets, "expected parameter 'clientSubnets' to be non-null");
        this.ebsVolumeSize = Objects.requireNonNull(ebsVolumeSize, "expected parameter 'ebsVolumeSize' to be non-null");
        this.instanceType = Objects.requireNonNull(instanceType, "expected parameter 'instanceType' to be non-null");
        this.securityGroups = Objects.requireNonNull(securityGroups, "expected parameter 'securityGroups' to be non-null");
    }

    private ClusterBrokerNodeGroupInfoGetArgs() {
        this.azDistribution = Codegen.empty();
        this.clientSubnets = Codegen.empty();
        this.ebsVolumeSize = Codegen.empty();
        this.instanceType = Codegen.empty();
        this.securityGroups = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ClusterBrokerNodeGroupInfoGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> azDistribution;
        private Output<List<String>> clientSubnets;
        private Output<Integer> ebsVolumeSize;
        private Output<String> instanceType;
        private Output<List<String>> securityGroups;

        public Builder() {
    	      // Empty
        }

        public Builder(ClusterBrokerNodeGroupInfoGetArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.azDistribution = defaults.azDistribution;
    	      this.clientSubnets = defaults.clientSubnets;
    	      this.ebsVolumeSize = defaults.ebsVolumeSize;
    	      this.instanceType = defaults.instanceType;
    	      this.securityGroups = defaults.securityGroups;
        }

        public Builder azDistribution(@Nullable Output<String> azDistribution) {
            this.azDistribution = azDistribution;
            return this;
        }
        public Builder azDistribution(@Nullable String azDistribution) {
            this.azDistribution = Codegen.ofNullable(azDistribution);
            return this;
        }
        public Builder clientSubnets(Output<List<String>> clientSubnets) {
            this.clientSubnets = Objects.requireNonNull(clientSubnets);
            return this;
        }
        public Builder clientSubnets(List<String> clientSubnets) {
            this.clientSubnets = Output.of(Objects.requireNonNull(clientSubnets));
            return this;
        }
        public Builder clientSubnets(String... clientSubnets) {
            return clientSubnets(List.of(clientSubnets));
        }
        public Builder ebsVolumeSize(Output<Integer> ebsVolumeSize) {
            this.ebsVolumeSize = Objects.requireNonNull(ebsVolumeSize);
            return this;
        }
        public Builder ebsVolumeSize(Integer ebsVolumeSize) {
            this.ebsVolumeSize = Output.of(Objects.requireNonNull(ebsVolumeSize));
            return this;
        }
        public Builder instanceType(Output<String> instanceType) {
            this.instanceType = Objects.requireNonNull(instanceType);
            return this;
        }
        public Builder instanceType(String instanceType) {
            this.instanceType = Output.of(Objects.requireNonNull(instanceType));
            return this;
        }
        public Builder securityGroups(Output<List<String>> securityGroups) {
            this.securityGroups = Objects.requireNonNull(securityGroups);
            return this;
        }
        public Builder securityGroups(List<String> securityGroups) {
            this.securityGroups = Output.of(Objects.requireNonNull(securityGroups));
            return this;
        }
        public Builder securityGroups(String... securityGroups) {
            return securityGroups(List.of(securityGroups));
        }        public ClusterBrokerNodeGroupInfoGetArgs build() {
            return new ClusterBrokerNodeGroupInfoGetArgs(azDistribution, clientSubnets, ebsVolumeSize, instanceType, securityGroups);
        }
    }
}
