// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.globalaccelerator;

import io.pulumi.aws.Utilities;
import io.pulumi.aws.globalaccelerator.ListenerArgs;
import io.pulumi.aws.globalaccelerator.inputs.ListenerState;
import io.pulumi.aws.globalaccelerator.outputs.ListenerPortRange;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Export;
import io.pulumi.core.annotations.ResourceType;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * Provides a Global Accelerator listener.
 * 
 * {{% examples %}}
 * ## Example Usage
 * {{% example %}}
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 * 
 * const exampleAccelerator = new aws.globalaccelerator.Accelerator("exampleAccelerator", {
 *     ipAddressType: "IPV4",
 *     enabled: true,
 *     attributes: {
 *         flowLogsEnabled: true,
 *         flowLogsS3Bucket: "example-bucket",
 *         flowLogsS3Prefix: "flow-logs/",
 *     },
 * });
 * const exampleListener = new aws.globalaccelerator.Listener("exampleListener", {
 *     acceleratorArn: exampleAccelerator.id,
 *     clientAffinity: "SOURCE_IP",
 *     protocol: "TCP",
 *     portRanges: [{
 *         fromPort: 80,
 *         toPort: 80,
 *     }],
 * });
 * ```
 * ```python
 * import pulumi
 * import pulumi_aws as aws
 * 
 * example_accelerator = aws.globalaccelerator.Accelerator("exampleAccelerator",
 *     ip_address_type="IPV4",
 *     enabled=True,
 *     attributes=aws.globalaccelerator.AcceleratorAttributesArgs(
 *         flow_logs_enabled=True,
 *         flow_logs_s3_bucket="example-bucket",
 *         flow_logs_s3_prefix="flow-logs/",
 *     ))
 * example_listener = aws.globalaccelerator.Listener("exampleListener",
 *     accelerator_arn=example_accelerator.id,
 *     client_affinity="SOURCE_IP",
 *     protocol="TCP",
 *     port_ranges=[aws.globalaccelerator.ListenerPortRangeArgs(
 *         from_port=80,
 *         to_port=80,
 *     )])
 * ```
 * ```csharp
 * using Pulumi;
 * using Aws = Pulumi.Aws;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var exampleAccelerator = new Aws.GlobalAccelerator.Accelerator("exampleAccelerator", new Aws.GlobalAccelerator.AcceleratorArgs
 *         {
 *             IpAddressType = "IPV4",
 *             Enabled = true,
 *             Attributes = new Aws.GlobalAccelerator.Inputs.AcceleratorAttributesArgs
 *             {
 *                 FlowLogsEnabled = true,
 *                 FlowLogsS3Bucket = "example-bucket",
 *                 FlowLogsS3Prefix = "flow-logs/",
 *             },
 *         });
 *         var exampleListener = new Aws.GlobalAccelerator.Listener("exampleListener", new Aws.GlobalAccelerator.ListenerArgs
 *         {
 *             AcceleratorArn = exampleAccelerator.Id,
 *             ClientAffinity = "SOURCE_IP",
 *             Protocol = "TCP",
 *             PortRanges = 
 *             {
 *                 new Aws.GlobalAccelerator.Inputs.ListenerPortRangeArgs
 *                 {
 *                     FromPort = 80,
 *                     ToPort = 80,
 *                 },
 *             },
 *         });
 *     }
 * 
 * }
 * ```
 * ```go
 * package main
 * 
 * import (
 * 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/globalaccelerator"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		exampleAccelerator, err := globalaccelerator.NewAccelerator(ctx, "exampleAccelerator", &globalaccelerator.AcceleratorArgs{
 * 			IpAddressType: pulumi.String("IPV4"),
 * 			Enabled:       pulumi.Bool(true),
 * 			Attributes: &globalaccelerator.AcceleratorAttributesArgs{
 * 				FlowLogsEnabled:  pulumi.Bool(true),
 * 				FlowLogsS3Bucket: pulumi.String("example-bucket"),
 * 				FlowLogsS3Prefix: pulumi.String("flow-logs/"),
 * 			},
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		_, err = globalaccelerator.NewListener(ctx, "exampleListener", &globalaccelerator.ListenerArgs{
 * 			AcceleratorArn: exampleAccelerator.ID(),
 * 			ClientAffinity: pulumi.String("SOURCE_IP"),
 * 			Protocol:       pulumi.String("TCP"),
 * 			PortRanges: globalaccelerator.ListenerPortRangeArray{
 * 				&globalaccelerator.ListenerPortRangeArgs{
 * 					FromPort: pulumi.Int(80),
 * 					ToPort:   pulumi.Int(80),
 * 				},
 * 			},
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * ```
 * {{% /example %}}
 * {{% /examples %}}
 * 
 * ## Import
 * 
 * Global Accelerator listeners can be imported using the `id`, e.g.,
 * 
 * ```sh
 *  $ pulumi import aws:globalaccelerator/listener:Listener example arn:aws:globalaccelerator::111111111111:accelerator/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/listener/xxxxxxxx
 * ```
 * 
 *  
 */
@ResourceType(type="aws:globalaccelerator/listener:Listener")
public class Listener extends io.pulumi.resources.CustomResource {
    /**
     * The Amazon Resource Name (ARN) of your accelerator.
     * 
     */
    @Export(name="acceleratorArn", type=String.class, parameters={})
    private Output<String> acceleratorArn;

    /**
     * @return The Amazon Resource Name (ARN) of your accelerator.
     * 
     */
    public Output<String> getAcceleratorArn() {
        return this.acceleratorArn;
    }
    /**
     * Direct all requests from a user to the same endpoint. Valid values are `NONE`, `SOURCE_IP`. Default: `NONE`. If `NONE`, Global Accelerator uses the "five-tuple" properties of source IP address, source port, destination IP address, destination port, and protocol to select the hash value. If `SOURCE_IP`, Global Accelerator uses the "two-tuple" properties of source (client) IP address and destination IP address to select the hash value.
     * 
     */
    @Export(name="clientAffinity", type=String.class, parameters={})
    private Output</* @Nullable */ String> clientAffinity;

    /**
     * @return Direct all requests from a user to the same endpoint. Valid values are `NONE`, `SOURCE_IP`. Default: `NONE`. If `NONE`, Global Accelerator uses the "five-tuple" properties of source IP address, source port, destination IP address, destination port, and protocol to select the hash value. If `SOURCE_IP`, Global Accelerator uses the "two-tuple" properties of source (client) IP address and destination IP address to select the hash value.
     * 
     */
    public Output</* @Nullable */ String> getClientAffinity() {
        return this.clientAffinity;
    }
    /**
     * The list of port ranges for the connections from clients to the accelerator. Fields documented below.
     * 
     */
    @Export(name="portRanges", type=List.class, parameters={ListenerPortRange.class})
    private Output<List<ListenerPortRange>> portRanges;

    /**
     * @return The list of port ranges for the connections from clients to the accelerator. Fields documented below.
     * 
     */
    public Output<List<ListenerPortRange>> getPortRanges() {
        return this.portRanges;
    }
    /**
     * The protocol for the connections from clients to the accelerator. Valid values are `TCP`, `UDP`.
     * 
     */
    @Export(name="protocol", type=String.class, parameters={})
    private Output<String> protocol;

    /**
     * @return The protocol for the connections from clients to the accelerator. Valid values are `TCP`, `UDP`.
     * 
     */
    public Output<String> getProtocol() {
        return this.protocol;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Listener(String name) {
        this(name, ListenerArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Listener(String name, ListenerArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Listener(String name, ListenerArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:globalaccelerator/listener:Listener", name, args == null ? ListenerArgs.Empty : args, makeResourceOptions(options, Output.empty()));
    }

    private Listener(String name, Output<String> id, @Nullable ListenerState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:globalaccelerator/listener:Listener", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Listener get(String name, Output<String> id, @Nullable ListenerState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new Listener(name, id, state, options);
    }
}
