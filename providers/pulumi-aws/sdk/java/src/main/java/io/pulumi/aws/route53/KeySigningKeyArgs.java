// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.route53;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class KeySigningKeyArgs extends io.pulumi.resources.ResourceArgs {

    public static final KeySigningKeyArgs Empty = new KeySigningKeyArgs();

    /**
     * Identifier of the Route 53 Hosted Zone.
     * 
     */
    @InputImport(name="hostedZoneId", required=true)
      private final Input<String> hostedZoneId;

    public Input<String> getHostedZoneId() {
        return this.hostedZoneId;
    }

    /**
     * Amazon Resource Name (ARN) of the Key Management Service (KMS) Key. This must be unique for each key-signing key (KSK) in a single hosted zone. This key must be in the `us-east-1` Region and meet certain requirements, which are described in the [Route 53 Developer Guide](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-configuring-dnssec-cmk-requirements.html) and [Route 53 API Reference](https://docs.aws.amazon.com/Route53/latest/APIReference/API_CreateKeySigningKey.html).
     * 
     */
    @InputImport(name="keyManagementServiceArn", required=true)
      private final Input<String> keyManagementServiceArn;

    public Input<String> getKeyManagementServiceArn() {
        return this.keyManagementServiceArn;
    }

    /**
     * Name of the key-signing key (KSK). Must be unique for each key-singing key in the same hosted zone.
     * 
     */
    @InputImport(name="name")
      private final @Nullable Input<String> name;

    public Input<String> getName() {
        return this.name == null ? Input.empty() : this.name;
    }

    /**
     * Status of the key-signing key (KSK). Valid values: `ACTIVE`, `INACTIVE`. Defaults to `ACTIVE`.
     * 
     */
    @InputImport(name="status")
      private final @Nullable Input<String> status;

    public Input<String> getStatus() {
        return this.status == null ? Input.empty() : this.status;
    }

    public KeySigningKeyArgs(
        Input<String> hostedZoneId,
        Input<String> keyManagementServiceArn,
        @Nullable Input<String> name,
        @Nullable Input<String> status) {
        this.hostedZoneId = Objects.requireNonNull(hostedZoneId, "expected parameter 'hostedZoneId' to be non-null");
        this.keyManagementServiceArn = Objects.requireNonNull(keyManagementServiceArn, "expected parameter 'keyManagementServiceArn' to be non-null");
        this.name = name;
        this.status = status;
    }

    private KeySigningKeyArgs() {
        this.hostedZoneId = Input.empty();
        this.keyManagementServiceArn = Input.empty();
        this.name = Input.empty();
        this.status = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(KeySigningKeyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<String> hostedZoneId;
        private Input<String> keyManagementServiceArn;
        private @Nullable Input<String> name;
        private @Nullable Input<String> status;

        public Builder() {
    	      // Empty
        }

        public Builder(KeySigningKeyArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.hostedZoneId = defaults.hostedZoneId;
    	      this.keyManagementServiceArn = defaults.keyManagementServiceArn;
    	      this.name = defaults.name;
    	      this.status = defaults.status;
        }

        public Builder setHostedZoneId(Input<String> hostedZoneId) {
            this.hostedZoneId = Objects.requireNonNull(hostedZoneId);
            return this;
        }

        public Builder setHostedZoneId(String hostedZoneId) {
            this.hostedZoneId = Input.of(Objects.requireNonNull(hostedZoneId));
            return this;
        }

        public Builder setKeyManagementServiceArn(Input<String> keyManagementServiceArn) {
            this.keyManagementServiceArn = Objects.requireNonNull(keyManagementServiceArn);
            return this;
        }

        public Builder setKeyManagementServiceArn(String keyManagementServiceArn) {
            this.keyManagementServiceArn = Input.of(Objects.requireNonNull(keyManagementServiceArn));
            return this;
        }

        public Builder setName(@Nullable Input<String> name) {
            this.name = name;
            return this;
        }

        public Builder setName(@Nullable String name) {
            this.name = Input.ofNullable(name);
            return this;
        }

        public Builder setStatus(@Nullable Input<String> status) {
            this.status = status;
            return this;
        }

        public Builder setStatus(@Nullable String status) {
            this.status = Input.ofNullable(status);
            return this;
        }
        public KeySigningKeyArgs build() {
            return new KeySigningKeyArgs(hostedZoneId, keyManagementServiceArn, name, status);
        }
    }
}
