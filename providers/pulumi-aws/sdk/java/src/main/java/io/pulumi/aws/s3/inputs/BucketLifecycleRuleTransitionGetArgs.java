// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.s3.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class BucketLifecycleRuleTransitionGetArgs extends io.pulumi.resources.ResourceArgs {

    public static final BucketLifecycleRuleTransitionGetArgs Empty = new BucketLifecycleRuleTransitionGetArgs();

    /**
     * Specifies the date after which you want the corresponding action to take effect.
     * 
     */
    @InputImport(name="date")
      private final @Nullable Input<String> date;

    public Input<String> getDate() {
        return this.date == null ? Input.empty() : this.date;
    }

    /**
     * Specifies the number of days after object creation when the specific rule action takes effect.
     * 
     */
    @InputImport(name="days")
      private final @Nullable Input<Integer> days;

    public Input<Integer> getDays() {
        return this.days == null ? Input.empty() : this.days;
    }

    /**
     * Specifies the Amazon S3 [storage class](https://docs.aws.amazon.com/AmazonS3/latest/API/API_Transition.html#AmazonS3-Type-Transition-StorageClass) to which you want the object to transition.
     * 
     */
    @InputImport(name="storageClass", required=true)
      private final Input<String> storageClass;

    public Input<String> getStorageClass() {
        return this.storageClass;
    }

    public BucketLifecycleRuleTransitionGetArgs(
        @Nullable Input<String> date,
        @Nullable Input<Integer> days,
        Input<String> storageClass) {
        this.date = date;
        this.days = days;
        this.storageClass = Objects.requireNonNull(storageClass, "expected parameter 'storageClass' to be non-null");
    }

    private BucketLifecycleRuleTransitionGetArgs() {
        this.date = Input.empty();
        this.days = Input.empty();
        this.storageClass = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BucketLifecycleRuleTransitionGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> date;
        private @Nullable Input<Integer> days;
        private Input<String> storageClass;

        public Builder() {
    	      // Empty
        }

        public Builder(BucketLifecycleRuleTransitionGetArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.date = defaults.date;
    	      this.days = defaults.days;
    	      this.storageClass = defaults.storageClass;
        }

        public Builder date(@Nullable Input<String> date) {
            this.date = date;
            return this;
        }

        public Builder date(@Nullable String date) {
            this.date = Input.ofNullable(date);
            return this;
        }

        public Builder days(@Nullable Input<Integer> days) {
            this.days = days;
            return this;
        }

        public Builder days(@Nullable Integer days) {
            this.days = Input.ofNullable(days);
            return this;
        }

        public Builder storageClass(Input<String> storageClass) {
            this.storageClass = Objects.requireNonNull(storageClass);
            return this;
        }

        public Builder storageClass(String storageClass) {
            this.storageClass = Input.of(Objects.requireNonNull(storageClass));
            return this;
        }
        public BucketLifecycleRuleTransitionGetArgs build() {
            return new BucketLifecycleRuleTransitionGetArgs(date, days, storageClass);
        }
    }
}
