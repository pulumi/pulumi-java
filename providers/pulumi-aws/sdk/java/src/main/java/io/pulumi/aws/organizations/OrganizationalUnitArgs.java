// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.organizations;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class OrganizationalUnitArgs extends io.pulumi.resources.ResourceArgs {

    public static final OrganizationalUnitArgs Empty = new OrganizationalUnitArgs();

    /**
     * The name for the organizational unit
     * 
     */
    @InputImport(name="name")
      private final @Nullable Input<String> name;

    public Input<String> getName() {
        return this.name == null ? Input.empty() : this.name;
    }

    /**
     * ID of the parent organizational unit, which may be the root
     * 
     */
    @InputImport(name="parentId", required=true)
      private final Input<String> parentId;

    public Input<String> getParentId() {
        return this.parentId;
    }

    /**
     * Key-value map of resource tags. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @InputImport(name="tags")
      private final @Nullable Input<Map<String,String>> tags;

    public Input<Map<String,String>> getTags() {
        return this.tags == null ? Input.empty() : this.tags;
    }

    public OrganizationalUnitArgs(
        @Nullable Input<String> name,
        Input<String> parentId,
        @Nullable Input<Map<String,String>> tags) {
        this.name = name;
        this.parentId = Objects.requireNonNull(parentId, "expected parameter 'parentId' to be non-null");
        this.tags = tags;
    }

    private OrganizationalUnitArgs() {
        this.name = Input.empty();
        this.parentId = Input.empty();
        this.tags = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(OrganizationalUnitArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> name;
        private Input<String> parentId;
        private @Nullable Input<Map<String,String>> tags;

        public Builder() {
    	      // Empty
        }

        public Builder(OrganizationalUnitArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.name = defaults.name;
    	      this.parentId = defaults.parentId;
    	      this.tags = defaults.tags;
        }

        public Builder setName(@Nullable Input<String> name) {
            this.name = name;
            return this;
        }

        public Builder setName(@Nullable String name) {
            this.name = Input.ofNullable(name);
            return this;
        }

        public Builder setParentId(Input<String> parentId) {
            this.parentId = Objects.requireNonNull(parentId);
            return this;
        }

        public Builder setParentId(String parentId) {
            this.parentId = Input.of(Objects.requireNonNull(parentId));
            return this;
        }

        public Builder setTags(@Nullable Input<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }

        public Builder setTags(@Nullable Map<String,String> tags) {
            this.tags = Input.ofNullable(tags);
            return this;
        }
        public OrganizationalUnitArgs build() {
            return new OrganizationalUnitArgs(name, parentId, tags);
        }
    }
}
