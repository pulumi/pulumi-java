// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.macie;

import io.pulumi.aws.macie.inputs.S3BucketAssociationClassificationTypeArgs;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class S3BucketAssociationArgs extends io.pulumi.resources.ResourceArgs {

    public static final S3BucketAssociationArgs Empty = new S3BucketAssociationArgs();

    /**
     * The name of the S3 bucket that you want to associate with Amazon Macie.
     * 
     */
    @InputImport(name="bucketName", required=true)
      private final Input<String> bucketName;

    public Input<String> getBucketName() {
        return this.bucketName;
    }

    /**
     * The configuration of how Amazon Macie classifies the S3 objects.
     * 
     */
    @InputImport(name="classificationType")
      private final @Nullable Input<S3BucketAssociationClassificationTypeArgs> classificationType;

    public Input<S3BucketAssociationClassificationTypeArgs> getClassificationType() {
        return this.classificationType == null ? Input.empty() : this.classificationType;
    }

    /**
     * The ID of the Amazon Macie member account whose S3 resources you want to associate with Macie. If `member_account_id` isn't specified, the action associates specified S3 resources with Macie for the current master account.
     * 
     */
    @InputImport(name="memberAccountId")
      private final @Nullable Input<String> memberAccountId;

    public Input<String> getMemberAccountId() {
        return this.memberAccountId == null ? Input.empty() : this.memberAccountId;
    }

    /**
     * Object key prefix identifying one or more S3 objects to which the association applies.
     * 
     */
    @InputImport(name="prefix")
      private final @Nullable Input<String> prefix;

    public Input<String> getPrefix() {
        return this.prefix == null ? Input.empty() : this.prefix;
    }

    public S3BucketAssociationArgs(
        Input<String> bucketName,
        @Nullable Input<S3BucketAssociationClassificationTypeArgs> classificationType,
        @Nullable Input<String> memberAccountId,
        @Nullable Input<String> prefix) {
        this.bucketName = Objects.requireNonNull(bucketName, "expected parameter 'bucketName' to be non-null");
        this.classificationType = classificationType;
        this.memberAccountId = memberAccountId;
        this.prefix = prefix;
    }

    private S3BucketAssociationArgs() {
        this.bucketName = Input.empty();
        this.classificationType = Input.empty();
        this.memberAccountId = Input.empty();
        this.prefix = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(S3BucketAssociationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<String> bucketName;
        private @Nullable Input<S3BucketAssociationClassificationTypeArgs> classificationType;
        private @Nullable Input<String> memberAccountId;
        private @Nullable Input<String> prefix;

        public Builder() {
    	      // Empty
        }

        public Builder(S3BucketAssociationArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bucketName = defaults.bucketName;
    	      this.classificationType = defaults.classificationType;
    	      this.memberAccountId = defaults.memberAccountId;
    	      this.prefix = defaults.prefix;
        }

        public Builder bucketName(Input<String> bucketName) {
            this.bucketName = Objects.requireNonNull(bucketName);
            return this;
        }

        public Builder bucketName(String bucketName) {
            this.bucketName = Input.of(Objects.requireNonNull(bucketName));
            return this;
        }

        public Builder classificationType(@Nullable Input<S3BucketAssociationClassificationTypeArgs> classificationType) {
            this.classificationType = classificationType;
            return this;
        }

        public Builder classificationType(@Nullable S3BucketAssociationClassificationTypeArgs classificationType) {
            this.classificationType = Input.ofNullable(classificationType);
            return this;
        }

        public Builder memberAccountId(@Nullable Input<String> memberAccountId) {
            this.memberAccountId = memberAccountId;
            return this;
        }

        public Builder memberAccountId(@Nullable String memberAccountId) {
            this.memberAccountId = Input.ofNullable(memberAccountId);
            return this;
        }

        public Builder prefix(@Nullable Input<String> prefix) {
            this.prefix = prefix;
            return this;
        }

        public Builder prefix(@Nullable String prefix) {
            this.prefix = Input.ofNullable(prefix);
            return this;
        }
        public S3BucketAssociationArgs build() {
            return new S3BucketAssociationArgs(bucketName, classificationType, memberAccountId, prefix);
        }
    }
}
