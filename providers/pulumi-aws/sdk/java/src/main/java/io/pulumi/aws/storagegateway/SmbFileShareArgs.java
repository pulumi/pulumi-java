// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.storagegateway;

import io.pulumi.aws.storagegateway.inputs.SmbFileShareCacheAttributesArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class SmbFileShareArgs extends io.pulumi.resources.ResourceArgs {

    public static final SmbFileShareArgs Empty = new SmbFileShareArgs();

    /**
     * The files and folders on this share will only be visible to users with read access. Default value is `false`.
     * 
     */
    @Import(name="accessBasedEnumeration")
      private final @Nullable Output<Boolean> accessBasedEnumeration;

    public Output<Boolean> getAccessBasedEnumeration() {
        return this.accessBasedEnumeration == null ? Output.empty() : this.accessBasedEnumeration;
    }

    /**
     * A list of users in the Active Directory that have admin access to the file share. Only valid if `authentication` is set to `ActiveDirectory`.
     * 
     */
    @Import(name="adminUserLists")
      private final @Nullable Output<List<String>> adminUserLists;

    public Output<List<String>> getAdminUserLists() {
        return this.adminUserLists == null ? Output.empty() : this.adminUserLists;
    }

    /**
     * The Amazon Resource Name (ARN) of the CloudWatch Log Group used for the audit logs.
     * 
     */
    @Import(name="auditDestinationArn")
      private final @Nullable Output<String> auditDestinationArn;

    public Output<String> getAuditDestinationArn() {
        return this.auditDestinationArn == null ? Output.empty() : this.auditDestinationArn;
    }

    /**
     * The authentication method that users use to access the file share. Defaults to `ActiveDirectory`. Valid values: `ActiveDirectory`, `GuestAccess`.
     * 
     */
    @Import(name="authentication")
      private final @Nullable Output<String> authentication;

    public Output<String> getAuthentication() {
        return this.authentication == null ? Output.empty() : this.authentication;
    }

    /**
     * The region of the S3 buck used by the file share. Required when specifying a `vpc_endpoint_dns_name`.
     * 
     */
    @Import(name="bucketRegion")
      private final @Nullable Output<String> bucketRegion;

    public Output<String> getBucketRegion() {
        return this.bucketRegion == null ? Output.empty() : this.bucketRegion;
    }

    /**
     * Refresh cache information. see Cache Attributes for more details.
     * 
     */
    @Import(name="cacheAttributes")
      private final @Nullable Output<SmbFileShareCacheAttributesArgs> cacheAttributes;

    public Output<SmbFileShareCacheAttributesArgs> getCacheAttributes() {
        return this.cacheAttributes == null ? Output.empty() : this.cacheAttributes;
    }

    /**
     * The case of an object name in an Amazon S3 bucket. For `ClientSpecified`, the client determines the case sensitivity. For `CaseSensitive`, the gateway determines the case sensitivity. The default value is `ClientSpecified`.
     * 
     */
    @Import(name="caseSensitivity")
      private final @Nullable Output<String> caseSensitivity;

    public Output<String> getCaseSensitivity() {
        return this.caseSensitivity == null ? Output.empty() : this.caseSensitivity;
    }

    /**
     * The default [storage class](https://docs.aws.amazon.com/storagegateway/latest/APIReference/API_CreateNFSFileShare.html#StorageGateway-CreateNFSFileShare-request-DefaultStorageClass) for objects put into an Amazon S3 bucket by the file gateway. Defaults to `S3_STANDARD`.
     * 
     */
    @Import(name="defaultStorageClass")
      private final @Nullable Output<String> defaultStorageClass;

    public Output<String> getDefaultStorageClass() {
        return this.defaultStorageClass == null ? Output.empty() : this.defaultStorageClass;
    }

    /**
     * The name of the file share. Must be set if an S3 prefix name is set in `location_arn`.
     * 
     */
    @Import(name="fileShareName")
      private final @Nullable Output<String> fileShareName;

    public Output<String> getFileShareName() {
        return this.fileShareName == null ? Output.empty() : this.fileShareName;
    }

    /**
     * Amazon Resource Name (ARN) of the file gateway.
     * 
     */
    @Import(name="gatewayArn", required=true)
      private final Output<String> gatewayArn;

    public Output<String> getGatewayArn() {
        return this.gatewayArn;
    }

    /**
     * Boolean value that enables guessing of the MIME type for uploaded objects based on file extensions. Defaults to `true`.
     * 
     */
    @Import(name="guessMimeTypeEnabled")
      private final @Nullable Output<Boolean> guessMimeTypeEnabled;

    public Output<Boolean> getGuessMimeTypeEnabled() {
        return this.guessMimeTypeEnabled == null ? Output.empty() : this.guessMimeTypeEnabled;
    }

    /**
     * A list of users in the Active Directory that are not allowed to access the file share. Only valid if `authentication` is set to `ActiveDirectory`.
     * 
     */
    @Import(name="invalidUserLists")
      private final @Nullable Output<List<String>> invalidUserLists;

    public Output<List<String>> getInvalidUserLists() {
        return this.invalidUserLists == null ? Output.empty() : this.invalidUserLists;
    }

    /**
     * Boolean value if `true` to use Amazon S3 server side encryption with your own AWS KMS key, or `false` to use a key managed by Amazon S3. Defaults to `false`.
     * 
     */
    @Import(name="kmsEncrypted")
      private final @Nullable Output<Boolean> kmsEncrypted;

    public Output<Boolean> getKmsEncrypted() {
        return this.kmsEncrypted == null ? Output.empty() : this.kmsEncrypted;
    }

    /**
     * Amazon Resource Name (ARN) for KMS key used for Amazon S3 server side encryption. This value can only be set when `kms_encrypted` is true.
     * 
     */
    @Import(name="kmsKeyArn")
      private final @Nullable Output<String> kmsKeyArn;

    public Output<String> getKmsKeyArn() {
        return this.kmsKeyArn == null ? Output.empty() : this.kmsKeyArn;
    }

    /**
     * The ARN of the backed storage used for storing file data.
     * 
     */
    @Import(name="locationArn", required=true)
      private final Output<String> locationArn;

    public Output<String> getLocationArn() {
        return this.locationArn;
    }

    /**
     * The notification policy of the file share. For more information see the [AWS Documentation](https://docs.aws.amazon.com/storagegateway/latest/APIReference/API_CreateNFSFileShare.html#StorageGateway-CreateNFSFileShare-request-NotificationPolicy). Default value is `{}`.
     * 
     */
    @Import(name="notificationPolicy")
      private final @Nullable Output<String> notificationPolicy;

    public Output<String> getNotificationPolicy() {
        return this.notificationPolicy == null ? Output.empty() : this.notificationPolicy;
    }

    /**
     * Access Control List permission for S3 bucket objects. Defaults to `private`.
     * 
     */
    @Import(name="objectAcl")
      private final @Nullable Output<String> objectAcl;

    public Output<String> getObjectAcl() {
        return this.objectAcl == null ? Output.empty() : this.objectAcl;
    }

    /**
     * Boolean to indicate Opportunistic lock (oplock) status. Defaults to `true`.
     * 
     */
    @Import(name="oplocksEnabled")
      private final @Nullable Output<Boolean> oplocksEnabled;

    public Output<Boolean> getOplocksEnabled() {
        return this.oplocksEnabled == null ? Output.empty() : this.oplocksEnabled;
    }

    /**
     * Boolean to indicate write status of file share. File share does not accept writes if `true`. Defaults to `false`.
     * 
     */
    @Import(name="readOnly")
      private final @Nullable Output<Boolean> readOnly;

    public Output<Boolean> getReadOnly() {
        return this.readOnly == null ? Output.empty() : this.readOnly;
    }

    /**
     * Boolean who pays the cost of the request and the data download from the Amazon S3 bucket. Set this value to `true` if you want the requester to pay instead of the bucket owner. Defaults to `false`.
     * 
     */
    @Import(name="requesterPays")
      private final @Nullable Output<Boolean> requesterPays;

    public Output<Boolean> getRequesterPays() {
        return this.requesterPays == null ? Output.empty() : this.requesterPays;
    }

    /**
     * The ARN of the AWS Identity and Access Management (IAM) role that a file gateway assumes when it accesses the underlying storage.
     * 
     */
    @Import(name="roleArn", required=true)
      private final Output<String> roleArn;

    public Output<String> getRoleArn() {
        return this.roleArn;
    }

    /**
     * Set this value to `true` to enable ACL (access control list) on the SMB fileshare. Set it to `false` to map file and directory permissions to the POSIX permissions. This setting applies only to `ActiveDirectory` authentication type.
     * 
     */
    @Import(name="smbAclEnabled")
      private final @Nullable Output<Boolean> smbAclEnabled;

    public Output<Boolean> getSmbAclEnabled() {
        return this.smbAclEnabled == null ? Output.empty() : this.smbAclEnabled;
    }

    /**
     * Key-value map of resource tags. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Import(name="tags")
      private final @Nullable Output<Map<String,String>> tags;

    public Output<Map<String,String>> getTags() {
        return this.tags == null ? Output.empty() : this.tags;
    }

    /**
     * A list of users in the Active Directory that are allowed to access the file share. If you need to specify an Active directory group, add '@' before the name of the group. It will be set on Allowed group in AWS console. Only valid if `authentication` is set to `ActiveDirectory`.
     * 
     */
    @Import(name="validUserLists")
      private final @Nullable Output<List<String>> validUserLists;

    public Output<List<String>> getValidUserLists() {
        return this.validUserLists == null ? Output.empty() : this.validUserLists;
    }

    /**
     * The DNS name of the VPC endpoint for S3 private link.
     * 
     */
    @Import(name="vpcEndpointDnsName")
      private final @Nullable Output<String> vpcEndpointDnsName;

    public Output<String> getVpcEndpointDnsName() {
        return this.vpcEndpointDnsName == null ? Output.empty() : this.vpcEndpointDnsName;
    }

    public SmbFileShareArgs(
        @Nullable Output<Boolean> accessBasedEnumeration,
        @Nullable Output<List<String>> adminUserLists,
        @Nullable Output<String> auditDestinationArn,
        @Nullable Output<String> authentication,
        @Nullable Output<String> bucketRegion,
        @Nullable Output<SmbFileShareCacheAttributesArgs> cacheAttributes,
        @Nullable Output<String> caseSensitivity,
        @Nullable Output<String> defaultStorageClass,
        @Nullable Output<String> fileShareName,
        Output<String> gatewayArn,
        @Nullable Output<Boolean> guessMimeTypeEnabled,
        @Nullable Output<List<String>> invalidUserLists,
        @Nullable Output<Boolean> kmsEncrypted,
        @Nullable Output<String> kmsKeyArn,
        Output<String> locationArn,
        @Nullable Output<String> notificationPolicy,
        @Nullable Output<String> objectAcl,
        @Nullable Output<Boolean> oplocksEnabled,
        @Nullable Output<Boolean> readOnly,
        @Nullable Output<Boolean> requesterPays,
        Output<String> roleArn,
        @Nullable Output<Boolean> smbAclEnabled,
        @Nullable Output<Map<String,String>> tags,
        @Nullable Output<List<String>> validUserLists,
        @Nullable Output<String> vpcEndpointDnsName) {
        this.accessBasedEnumeration = accessBasedEnumeration;
        this.adminUserLists = adminUserLists;
        this.auditDestinationArn = auditDestinationArn;
        this.authentication = authentication;
        this.bucketRegion = bucketRegion;
        this.cacheAttributes = cacheAttributes;
        this.caseSensitivity = caseSensitivity;
        this.defaultStorageClass = defaultStorageClass;
        this.fileShareName = fileShareName;
        this.gatewayArn = Objects.requireNonNull(gatewayArn, "expected parameter 'gatewayArn' to be non-null");
        this.guessMimeTypeEnabled = guessMimeTypeEnabled;
        this.invalidUserLists = invalidUserLists;
        this.kmsEncrypted = kmsEncrypted;
        this.kmsKeyArn = kmsKeyArn;
        this.locationArn = Objects.requireNonNull(locationArn, "expected parameter 'locationArn' to be non-null");
        this.notificationPolicy = notificationPolicy;
        this.objectAcl = objectAcl;
        this.oplocksEnabled = oplocksEnabled;
        this.readOnly = readOnly;
        this.requesterPays = requesterPays;
        this.roleArn = Objects.requireNonNull(roleArn, "expected parameter 'roleArn' to be non-null");
        this.smbAclEnabled = smbAclEnabled;
        this.tags = tags;
        this.validUserLists = validUserLists;
        this.vpcEndpointDnsName = vpcEndpointDnsName;
    }

    private SmbFileShareArgs() {
        this.accessBasedEnumeration = Output.empty();
        this.adminUserLists = Output.empty();
        this.auditDestinationArn = Output.empty();
        this.authentication = Output.empty();
        this.bucketRegion = Output.empty();
        this.cacheAttributes = Output.empty();
        this.caseSensitivity = Output.empty();
        this.defaultStorageClass = Output.empty();
        this.fileShareName = Output.empty();
        this.gatewayArn = Output.empty();
        this.guessMimeTypeEnabled = Output.empty();
        this.invalidUserLists = Output.empty();
        this.kmsEncrypted = Output.empty();
        this.kmsKeyArn = Output.empty();
        this.locationArn = Output.empty();
        this.notificationPolicy = Output.empty();
        this.objectAcl = Output.empty();
        this.oplocksEnabled = Output.empty();
        this.readOnly = Output.empty();
        this.requesterPays = Output.empty();
        this.roleArn = Output.empty();
        this.smbAclEnabled = Output.empty();
        this.tags = Output.empty();
        this.validUserLists = Output.empty();
        this.vpcEndpointDnsName = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SmbFileShareArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<Boolean> accessBasedEnumeration;
        private @Nullable Output<List<String>> adminUserLists;
        private @Nullable Output<String> auditDestinationArn;
        private @Nullable Output<String> authentication;
        private @Nullable Output<String> bucketRegion;
        private @Nullable Output<SmbFileShareCacheAttributesArgs> cacheAttributes;
        private @Nullable Output<String> caseSensitivity;
        private @Nullable Output<String> defaultStorageClass;
        private @Nullable Output<String> fileShareName;
        private Output<String> gatewayArn;
        private @Nullable Output<Boolean> guessMimeTypeEnabled;
        private @Nullable Output<List<String>> invalidUserLists;
        private @Nullable Output<Boolean> kmsEncrypted;
        private @Nullable Output<String> kmsKeyArn;
        private Output<String> locationArn;
        private @Nullable Output<String> notificationPolicy;
        private @Nullable Output<String> objectAcl;
        private @Nullable Output<Boolean> oplocksEnabled;
        private @Nullable Output<Boolean> readOnly;
        private @Nullable Output<Boolean> requesterPays;
        private Output<String> roleArn;
        private @Nullable Output<Boolean> smbAclEnabled;
        private @Nullable Output<Map<String,String>> tags;
        private @Nullable Output<List<String>> validUserLists;
        private @Nullable Output<String> vpcEndpointDnsName;

        public Builder() {
    	      // Empty
        }

        public Builder(SmbFileShareArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessBasedEnumeration = defaults.accessBasedEnumeration;
    	      this.adminUserLists = defaults.adminUserLists;
    	      this.auditDestinationArn = defaults.auditDestinationArn;
    	      this.authentication = defaults.authentication;
    	      this.bucketRegion = defaults.bucketRegion;
    	      this.cacheAttributes = defaults.cacheAttributes;
    	      this.caseSensitivity = defaults.caseSensitivity;
    	      this.defaultStorageClass = defaults.defaultStorageClass;
    	      this.fileShareName = defaults.fileShareName;
    	      this.gatewayArn = defaults.gatewayArn;
    	      this.guessMimeTypeEnabled = defaults.guessMimeTypeEnabled;
    	      this.invalidUserLists = defaults.invalidUserLists;
    	      this.kmsEncrypted = defaults.kmsEncrypted;
    	      this.kmsKeyArn = defaults.kmsKeyArn;
    	      this.locationArn = defaults.locationArn;
    	      this.notificationPolicy = defaults.notificationPolicy;
    	      this.objectAcl = defaults.objectAcl;
    	      this.oplocksEnabled = defaults.oplocksEnabled;
    	      this.readOnly = defaults.readOnly;
    	      this.requesterPays = defaults.requesterPays;
    	      this.roleArn = defaults.roleArn;
    	      this.smbAclEnabled = defaults.smbAclEnabled;
    	      this.tags = defaults.tags;
    	      this.validUserLists = defaults.validUserLists;
    	      this.vpcEndpointDnsName = defaults.vpcEndpointDnsName;
        }

        public Builder accessBasedEnumeration(@Nullable Output<Boolean> accessBasedEnumeration) {
            this.accessBasedEnumeration = accessBasedEnumeration;
            return this;
        }
        public Builder accessBasedEnumeration(@Nullable Boolean accessBasedEnumeration) {
            this.accessBasedEnumeration = Output.ofNullable(accessBasedEnumeration);
            return this;
        }
        public Builder adminUserLists(@Nullable Output<List<String>> adminUserLists) {
            this.adminUserLists = adminUserLists;
            return this;
        }
        public Builder adminUserLists(@Nullable List<String> adminUserLists) {
            this.adminUserLists = Output.ofNullable(adminUserLists);
            return this;
        }
        public Builder adminUserLists(String... adminUserLists) {
            return adminUserLists(List.of(adminUserLists));
        }
        public Builder auditDestinationArn(@Nullable Output<String> auditDestinationArn) {
            this.auditDestinationArn = auditDestinationArn;
            return this;
        }
        public Builder auditDestinationArn(@Nullable String auditDestinationArn) {
            this.auditDestinationArn = Output.ofNullable(auditDestinationArn);
            return this;
        }
        public Builder authentication(@Nullable Output<String> authentication) {
            this.authentication = authentication;
            return this;
        }
        public Builder authentication(@Nullable String authentication) {
            this.authentication = Output.ofNullable(authentication);
            return this;
        }
        public Builder bucketRegion(@Nullable Output<String> bucketRegion) {
            this.bucketRegion = bucketRegion;
            return this;
        }
        public Builder bucketRegion(@Nullable String bucketRegion) {
            this.bucketRegion = Output.ofNullable(bucketRegion);
            return this;
        }
        public Builder cacheAttributes(@Nullable Output<SmbFileShareCacheAttributesArgs> cacheAttributes) {
            this.cacheAttributes = cacheAttributes;
            return this;
        }
        public Builder cacheAttributes(@Nullable SmbFileShareCacheAttributesArgs cacheAttributes) {
            this.cacheAttributes = Output.ofNullable(cacheAttributes);
            return this;
        }
        public Builder caseSensitivity(@Nullable Output<String> caseSensitivity) {
            this.caseSensitivity = caseSensitivity;
            return this;
        }
        public Builder caseSensitivity(@Nullable String caseSensitivity) {
            this.caseSensitivity = Output.ofNullable(caseSensitivity);
            return this;
        }
        public Builder defaultStorageClass(@Nullable Output<String> defaultStorageClass) {
            this.defaultStorageClass = defaultStorageClass;
            return this;
        }
        public Builder defaultStorageClass(@Nullable String defaultStorageClass) {
            this.defaultStorageClass = Output.ofNullable(defaultStorageClass);
            return this;
        }
        public Builder fileShareName(@Nullable Output<String> fileShareName) {
            this.fileShareName = fileShareName;
            return this;
        }
        public Builder fileShareName(@Nullable String fileShareName) {
            this.fileShareName = Output.ofNullable(fileShareName);
            return this;
        }
        public Builder gatewayArn(Output<String> gatewayArn) {
            this.gatewayArn = Objects.requireNonNull(gatewayArn);
            return this;
        }
        public Builder gatewayArn(String gatewayArn) {
            this.gatewayArn = Output.of(Objects.requireNonNull(gatewayArn));
            return this;
        }
        public Builder guessMimeTypeEnabled(@Nullable Output<Boolean> guessMimeTypeEnabled) {
            this.guessMimeTypeEnabled = guessMimeTypeEnabled;
            return this;
        }
        public Builder guessMimeTypeEnabled(@Nullable Boolean guessMimeTypeEnabled) {
            this.guessMimeTypeEnabled = Output.ofNullable(guessMimeTypeEnabled);
            return this;
        }
        public Builder invalidUserLists(@Nullable Output<List<String>> invalidUserLists) {
            this.invalidUserLists = invalidUserLists;
            return this;
        }
        public Builder invalidUserLists(@Nullable List<String> invalidUserLists) {
            this.invalidUserLists = Output.ofNullable(invalidUserLists);
            return this;
        }
        public Builder invalidUserLists(String... invalidUserLists) {
            return invalidUserLists(List.of(invalidUserLists));
        }
        public Builder kmsEncrypted(@Nullable Output<Boolean> kmsEncrypted) {
            this.kmsEncrypted = kmsEncrypted;
            return this;
        }
        public Builder kmsEncrypted(@Nullable Boolean kmsEncrypted) {
            this.kmsEncrypted = Output.ofNullable(kmsEncrypted);
            return this;
        }
        public Builder kmsKeyArn(@Nullable Output<String> kmsKeyArn) {
            this.kmsKeyArn = kmsKeyArn;
            return this;
        }
        public Builder kmsKeyArn(@Nullable String kmsKeyArn) {
            this.kmsKeyArn = Output.ofNullable(kmsKeyArn);
            return this;
        }
        public Builder locationArn(Output<String> locationArn) {
            this.locationArn = Objects.requireNonNull(locationArn);
            return this;
        }
        public Builder locationArn(String locationArn) {
            this.locationArn = Output.of(Objects.requireNonNull(locationArn));
            return this;
        }
        public Builder notificationPolicy(@Nullable Output<String> notificationPolicy) {
            this.notificationPolicy = notificationPolicy;
            return this;
        }
        public Builder notificationPolicy(@Nullable String notificationPolicy) {
            this.notificationPolicy = Output.ofNullable(notificationPolicy);
            return this;
        }
        public Builder objectAcl(@Nullable Output<String> objectAcl) {
            this.objectAcl = objectAcl;
            return this;
        }
        public Builder objectAcl(@Nullable String objectAcl) {
            this.objectAcl = Output.ofNullable(objectAcl);
            return this;
        }
        public Builder oplocksEnabled(@Nullable Output<Boolean> oplocksEnabled) {
            this.oplocksEnabled = oplocksEnabled;
            return this;
        }
        public Builder oplocksEnabled(@Nullable Boolean oplocksEnabled) {
            this.oplocksEnabled = Output.ofNullable(oplocksEnabled);
            return this;
        }
        public Builder readOnly(@Nullable Output<Boolean> readOnly) {
            this.readOnly = readOnly;
            return this;
        }
        public Builder readOnly(@Nullable Boolean readOnly) {
            this.readOnly = Output.ofNullable(readOnly);
            return this;
        }
        public Builder requesterPays(@Nullable Output<Boolean> requesterPays) {
            this.requesterPays = requesterPays;
            return this;
        }
        public Builder requesterPays(@Nullable Boolean requesterPays) {
            this.requesterPays = Output.ofNullable(requesterPays);
            return this;
        }
        public Builder roleArn(Output<String> roleArn) {
            this.roleArn = Objects.requireNonNull(roleArn);
            return this;
        }
        public Builder roleArn(String roleArn) {
            this.roleArn = Output.of(Objects.requireNonNull(roleArn));
            return this;
        }
        public Builder smbAclEnabled(@Nullable Output<Boolean> smbAclEnabled) {
            this.smbAclEnabled = smbAclEnabled;
            return this;
        }
        public Builder smbAclEnabled(@Nullable Boolean smbAclEnabled) {
            this.smbAclEnabled = Output.ofNullable(smbAclEnabled);
            return this;
        }
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = Output.ofNullable(tags);
            return this;
        }
        public Builder validUserLists(@Nullable Output<List<String>> validUserLists) {
            this.validUserLists = validUserLists;
            return this;
        }
        public Builder validUserLists(@Nullable List<String> validUserLists) {
            this.validUserLists = Output.ofNullable(validUserLists);
            return this;
        }
        public Builder validUserLists(String... validUserLists) {
            return validUserLists(List.of(validUserLists));
        }
        public Builder vpcEndpointDnsName(@Nullable Output<String> vpcEndpointDnsName) {
            this.vpcEndpointDnsName = vpcEndpointDnsName;
            return this;
        }
        public Builder vpcEndpointDnsName(@Nullable String vpcEndpointDnsName) {
            this.vpcEndpointDnsName = Output.ofNullable(vpcEndpointDnsName);
            return this;
        }        public SmbFileShareArgs build() {
            return new SmbFileShareArgs(accessBasedEnumeration, adminUserLists, auditDestinationArn, authentication, bucketRegion, cacheAttributes, caseSensitivity, defaultStorageClass, fileShareName, gatewayArn, guessMimeTypeEnabled, invalidUserLists, kmsEncrypted, kmsKeyArn, locationArn, notificationPolicy, objectAcl, oplocksEnabled, readOnly, requesterPays, roleArn, smbAclEnabled, tags, validUserLists, vpcEndpointDnsName);
        }
    }
}
