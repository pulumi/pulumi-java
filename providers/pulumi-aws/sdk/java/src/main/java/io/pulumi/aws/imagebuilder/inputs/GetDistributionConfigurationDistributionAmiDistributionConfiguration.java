// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.imagebuilder.inputs;

import io.pulumi.aws.imagebuilder.inputs.GetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermission;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;


public final class GetDistributionConfigurationDistributionAmiDistributionConfiguration extends io.pulumi.resources.InvokeArgs {

    public static final GetDistributionConfigurationDistributionAmiDistributionConfiguration Empty = new GetDistributionConfigurationDistributionAmiDistributionConfiguration();

    /**
     * Key-value map of tags to apply to distributed AMI.
     * 
     */
    @InputImport(name="amiTags", required=true)
    private final Map<String,String> amiTags;

    public Map<String,String> getAmiTags() {
        return this.amiTags;
    }

    /**
     * Description to apply to distributed AMI.
     * 
     */
    @InputImport(name="description", required=true)
    private final String description;

    public String getDescription() {
        return this.description;
    }

    /**
     * Amazon Resource Name (ARN) of Key Management Service (KMS) Key to encrypt AMI.
     * 
     */
    @InputImport(name="kmsKeyId", required=true)
    private final String kmsKeyId;

    public String getKmsKeyId() {
        return this.kmsKeyId;
    }

    /**
     * Nested list of EC2 launch permissions.
     * 
     */
    @InputImport(name="launchPermissions", required=true)
    private final List<GetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermission> launchPermissions;

    public List<GetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermission> getLaunchPermissions() {
        return this.launchPermissions;
    }

    /**
     * Name of the distribution configuration.
     * 
     */
    @InputImport(name="name", required=true)
    private final String name;

    public String getName() {
        return this.name;
    }

    /**
     * Set of target AWS Account identifiers.
     * 
     */
    @InputImport(name="targetAccountIds", required=true)
    private final List<String> targetAccountIds;

    public List<String> getTargetAccountIds() {
        return this.targetAccountIds;
    }

    public GetDistributionConfigurationDistributionAmiDistributionConfiguration(
        Map<String,String> amiTags,
        String description,
        String kmsKeyId,
        List<GetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermission> launchPermissions,
        String name,
        List<String> targetAccountIds) {
        this.amiTags = Objects.requireNonNull(amiTags, "expected parameter 'amiTags' to be non-null");
        this.description = Objects.requireNonNull(description, "expected parameter 'description' to be non-null");
        this.kmsKeyId = Objects.requireNonNull(kmsKeyId, "expected parameter 'kmsKeyId' to be non-null");
        this.launchPermissions = Objects.requireNonNull(launchPermissions, "expected parameter 'launchPermissions' to be non-null");
        this.name = Objects.requireNonNull(name, "expected parameter 'name' to be non-null");
        this.targetAccountIds = Objects.requireNonNull(targetAccountIds, "expected parameter 'targetAccountIds' to be non-null");
    }

    private GetDistributionConfigurationDistributionAmiDistributionConfiguration() {
        this.amiTags = Map.of();
        this.description = null;
        this.kmsKeyId = null;
        this.launchPermissions = List.of();
        this.name = null;
        this.targetAccountIds = List.of();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDistributionConfigurationDistributionAmiDistributionConfiguration defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Map<String,String> amiTags;
        private String description;
        private String kmsKeyId;
        private List<GetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermission> launchPermissions;
        private String name;
        private List<String> targetAccountIds;

        public Builder() {
    	      // Empty
        }

        public Builder(GetDistributionConfigurationDistributionAmiDistributionConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.amiTags = defaults.amiTags;
    	      this.description = defaults.description;
    	      this.kmsKeyId = defaults.kmsKeyId;
    	      this.launchPermissions = defaults.launchPermissions;
    	      this.name = defaults.name;
    	      this.targetAccountIds = defaults.targetAccountIds;
        }

        public Builder setAmiTags(Map<String,String> amiTags) {
            this.amiTags = Objects.requireNonNull(amiTags);
            return this;
        }

        public Builder setDescription(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }

        public Builder setKmsKeyId(String kmsKeyId) {
            this.kmsKeyId = Objects.requireNonNull(kmsKeyId);
            return this;
        }

        public Builder setLaunchPermissions(List<GetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermission> launchPermissions) {
            this.launchPermissions = Objects.requireNonNull(launchPermissions);
            return this;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setTargetAccountIds(List<String> targetAccountIds) {
            this.targetAccountIds = Objects.requireNonNull(targetAccountIds);
            return this;
        }
        public GetDistributionConfigurationDistributionAmiDistributionConfiguration build() {
            return new GetDistributionConfigurationDistributionAmiDistributionConfiguration(amiTags, description, kmsKeyId, launchPermissions, name, targetAccountIds);
        }
    }
}
