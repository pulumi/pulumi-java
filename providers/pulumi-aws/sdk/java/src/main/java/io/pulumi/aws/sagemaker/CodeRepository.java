// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.sagemaker;

import io.pulumi.aws.Utilities;
import io.pulumi.aws.sagemaker.CodeRepositoryArgs;
import io.pulumi.aws.sagemaker.inputs.CodeRepositoryState;
import io.pulumi.aws.sagemaker.outputs.CodeRepositoryGitConfig;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Export;
import io.pulumi.core.annotations.ResourceType;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;

/**
 * Provides a Sagemaker Code Repository resource.
 * 
 * {{% examples %}}
 * ## Example Usage
 * {{% example %}}
 * ### Basic usage
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 * 
 * const example = new aws.sagemaker.CodeRepository("example", {
 *     codeRepositoryName: "example",
 *     gitConfig: {
 *         repositoryUrl: "https://github.com/hashicorp/terraform-provider-aws.git",
 *     },
 * });
 * ```
 * ```python
 * import pulumi
 * import pulumi_aws as aws
 * 
 * example = aws.sagemaker.CodeRepository("example",
 *     code_repository_name="example",
 *     git_config=aws.sagemaker.CodeRepositoryGitConfigArgs(
 *         repository_url="https://github.com/hashicorp/terraform-provider-aws.git",
 *     ))
 * ```
 * ```csharp
 * using Pulumi;
 * using Aws = Pulumi.Aws;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var example = new Aws.Sagemaker.CodeRepository("example", new Aws.Sagemaker.CodeRepositoryArgs
 *         {
 *             CodeRepositoryName = "example",
 *             GitConfig = new Aws.Sagemaker.Inputs.CodeRepositoryGitConfigArgs
 *             {
 *                 RepositoryUrl = "https://github.com/hashicorp/terraform-provider-aws.git",
 *             },
 *         });
 *     }
 * 
 * }
 * ```
 * ```go
 * package main
 * 
 * import (
 * 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/sagemaker"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		_, err := sagemaker.NewCodeRepository(ctx, "example", &sagemaker.CodeRepositoryArgs{
 * 			CodeRepositoryName: pulumi.String("example"),
 * 			GitConfig: &sagemaker.CodeRepositoryGitConfigArgs{
 * 				RepositoryUrl: pulumi.String("https://github.com/hashicorp/terraform-provider-aws.git"),
 * 			},
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * ```
 * {{% /example %}}
 * {{% example %}}
 * ### Example with Secret
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 * 
 * const exampleSecret = new aws.secretsmanager.Secret("exampleSecret", {});
 * const exampleSecretVersion = new aws.secretsmanager.SecretVersion("exampleSecretVersion", {
 *     secretId: exampleSecret.id,
 *     secretString: JSON.stringify({
 *         username: "example",
 *         password: "example",
 *     }),
 * });
 * const exampleCodeRepository = new aws.sagemaker.CodeRepository("exampleCodeRepository", {
 *     codeRepositoryName: "example",
 *     gitConfig: {
 *         repositoryUrl: "https://github.com/hashicorp/terraform-provider-aws.git",
 *         secretArn: exampleSecret.arn,
 *     },
 * }, {
 *     dependsOn: [exampleSecretVersion],
 * });
 * ```
 * ```python
 * import pulumi
 * import json
 * import pulumi_aws as aws
 * 
 * example_secret = aws.secretsmanager.Secret("exampleSecret")
 * example_secret_version = aws.secretsmanager.SecretVersion("exampleSecretVersion",
 *     secret_id=example_secret.id,
 *     secret_string=json.dumps({
 *         "username": "example",
 *         "password": "example",
 *     }))
 * example_code_repository = aws.sagemaker.CodeRepository("exampleCodeRepository",
 *     code_repository_name="example",
 *     git_config=aws.sagemaker.CodeRepositoryGitConfigArgs(
 *         repository_url="https://github.com/hashicorp/terraform-provider-aws.git",
 *         secret_arn=example_secret.arn,
 *     ),
 *     opts=pulumi.ResourceOptions(depends_on=[example_secret_version]))
 * ```
 * ```csharp
 * using System.Collections.Generic;
 * using System.Text.Json;
 * using Pulumi;
 * using Aws = Pulumi.Aws;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var exampleSecret = new Aws.SecretsManager.Secret("exampleSecret", new Aws.SecretsManager.SecretArgs
 *         {
 *         });
 *         var exampleSecretVersion = new Aws.SecretsManager.SecretVersion("exampleSecretVersion", new Aws.SecretsManager.SecretVersionArgs
 *         {
 *             SecretId = exampleSecret.Id,
 *             SecretString = JsonSerializer.Serialize(new Dictionary<string, object?>
 *             {
 *                 { "username", "example" },
 *                 { "password", "example" },
 *             }),
 *         });
 *         var exampleCodeRepository = new Aws.Sagemaker.CodeRepository("exampleCodeRepository", new Aws.Sagemaker.CodeRepositoryArgs
 *         {
 *             CodeRepositoryName = "example",
 *             GitConfig = new Aws.Sagemaker.Inputs.CodeRepositoryGitConfigArgs
 *             {
 *                 RepositoryUrl = "https://github.com/hashicorp/terraform-provider-aws.git",
 *                 SecretArn = exampleSecret.Arn,
 *             },
 *         }, new CustomResourceOptions
 *         {
 *             DependsOn = 
 *             {
 *                 exampleSecretVersion,
 *             },
 *         });
 *     }
 * 
 * }
 * ```
 * ```go
 * package main
 * 
 * import (
 * 	"encoding/json"
 * 
 * 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/sagemaker"
 * 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/secretsmanager"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		exampleSecret, err := secretsmanager.NewSecret(ctx, "exampleSecret", nil)
 * 		if err != nil {
 * 			return err
 * 		}
 * 		tmpJSON0, err := json.Marshal(map[string]interface{}{
 * 			"username": "example",
 * 			"password": "example",
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		json0 := string(tmpJSON0)
 * 		exampleSecretVersion, err := secretsmanager.NewSecretVersion(ctx, "exampleSecretVersion", &secretsmanager.SecretVersionArgs{
 * 			SecretId:     exampleSecret.ID(),
 * 			SecretString: pulumi.String(json0),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		_, err = sagemaker.NewCodeRepository(ctx, "exampleCodeRepository", &sagemaker.CodeRepositoryArgs{
 * 			CodeRepositoryName: pulumi.String("example"),
 * 			GitConfig: &sagemaker.CodeRepositoryGitConfigArgs{
 * 				RepositoryUrl: pulumi.String("https://github.com/hashicorp/terraform-provider-aws.git"),
 * 				SecretArn:     exampleSecret.Arn,
 * 			},
 * 		}, pulumi.DependsOn([]pulumi.Resource{
 * 			exampleSecretVersion,
 * 		}))
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * ```
 * {{% /example %}}
 * {{% /examples %}}
 * 
 * ## Import
 * 
 * Sagemaker Code Repositories can be imported using the `name`, e.g.,
 * 
 * ```sh
 *  $ pulumi import aws:sagemaker/codeRepository:CodeRepository test_code_repository my-code-repo
 * ```
 * 
 *  
 */
@ResourceType(type="aws:sagemaker/codeRepository:CodeRepository")
public class CodeRepository extends io.pulumi.resources.CustomResource {
    /**
     * The Amazon Resource Name (ARN) assigned by AWS to this Code Repository.
     * 
     */
    @Export(name="arn", type=String.class, parameters={})
    private Output<String> arn;

    /**
     * @return The Amazon Resource Name (ARN) assigned by AWS to this Code Repository.
     * 
     */
    public Output<String> getArn() {
        return this.arn;
    }
    /**
     * The name of the Code Repository (must be unique).
     * 
     */
    @Export(name="codeRepositoryName", type=String.class, parameters={})
    private Output<String> codeRepositoryName;

    /**
     * @return The name of the Code Repository (must be unique).
     * 
     */
    public Output<String> getCodeRepositoryName() {
        return this.codeRepositoryName;
    }
    /**
     * Specifies details about the repository. see Git Config details below.
     * 
     */
    @Export(name="gitConfig", type=CodeRepositoryGitConfig.class, parameters={})
    private Output<CodeRepositoryGitConfig> gitConfig;

    /**
     * @return Specifies details about the repository. see Git Config details below.
     * 
     */
    public Output<CodeRepositoryGitConfig> getGitConfig() {
        return this.gitConfig;
    }
    /**
     * A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Export(name="tags", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Output</* @Nullable */ Map<String,String>> getTags() {
        return this.tags;
    }
    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     */
    @Export(name="tagsAll", type=Map.class, parameters={String.class, String.class})
    private Output<Map<String,String>> tagsAll;

    /**
     * @return A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     */
    public Output<Map<String,String>> getTagsAll() {
        return this.tagsAll;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public CodeRepository(String name) {
        this(name, CodeRepositoryArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public CodeRepository(String name, CodeRepositoryArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public CodeRepository(String name, CodeRepositoryArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:sagemaker/codeRepository:CodeRepository", name, args == null ? CodeRepositoryArgs.Empty : args, makeResourceOptions(options, Output.empty()));
    }

    private CodeRepository(String name, Output<String> id, @Nullable CodeRepositoryState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:sagemaker/codeRepository:CodeRepository", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static CodeRepository get(String name, Output<String> id, @Nullable CodeRepositoryState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new CodeRepository(name, id, state, options);
    }
}
