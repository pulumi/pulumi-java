// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.s3.inputs;

import io.pulumi.aws.s3.inputs.BucketReplicationConfigRuleFilterAndArgs;
import io.pulumi.aws.s3.inputs.BucketReplicationConfigRuleFilterTagArgs;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class BucketReplicationConfigRuleFilterArgs extends io.pulumi.resources.ResourceArgs {

    public static final BucketReplicationConfigRuleFilterArgs Empty = new BucketReplicationConfigRuleFilterArgs();

    /**
     * A configuration block for specifying rule filters. This element is required only if you specify more than one filter. See and below for more details.
     * 
     */
    @InputImport(name="and")
      private final @Nullable Input<BucketReplicationConfigRuleFilterAndArgs> and;

    public Input<BucketReplicationConfigRuleFilterAndArgs> getAnd() {
        return this.and == null ? Input.empty() : this.and;
    }

    /**
     * An object key name prefix that identifies subset of objects to which the rule applies. Must be less than or equal to 1024 characters in length.
     * 
     */
    @InputImport(name="prefix")
      private final @Nullable Input<String> prefix;

    public Input<String> getPrefix() {
        return this.prefix == null ? Input.empty() : this.prefix;
    }

    /**
     * A configuration block for specifying a tag key and value documented below.
     * 
     */
    @InputImport(name="tag")
      private final @Nullable Input<BucketReplicationConfigRuleFilterTagArgs> tag;

    public Input<BucketReplicationConfigRuleFilterTagArgs> getTag() {
        return this.tag == null ? Input.empty() : this.tag;
    }

    public BucketReplicationConfigRuleFilterArgs(
        @Nullable Input<BucketReplicationConfigRuleFilterAndArgs> and,
        @Nullable Input<String> prefix,
        @Nullable Input<BucketReplicationConfigRuleFilterTagArgs> tag) {
        this.and = and;
        this.prefix = prefix;
        this.tag = tag;
    }

    private BucketReplicationConfigRuleFilterArgs() {
        this.and = Input.empty();
        this.prefix = Input.empty();
        this.tag = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BucketReplicationConfigRuleFilterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<BucketReplicationConfigRuleFilterAndArgs> and;
        private @Nullable Input<String> prefix;
        private @Nullable Input<BucketReplicationConfigRuleFilterTagArgs> tag;

        public Builder() {
    	      // Empty
        }

        public Builder(BucketReplicationConfigRuleFilterArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.and = defaults.and;
    	      this.prefix = defaults.prefix;
    	      this.tag = defaults.tag;
        }

        public Builder setAnd(@Nullable Input<BucketReplicationConfigRuleFilterAndArgs> and) {
            this.and = and;
            return this;
        }

        public Builder setAnd(@Nullable BucketReplicationConfigRuleFilterAndArgs and) {
            this.and = Input.ofNullable(and);
            return this;
        }

        public Builder setPrefix(@Nullable Input<String> prefix) {
            this.prefix = prefix;
            return this;
        }

        public Builder setPrefix(@Nullable String prefix) {
            this.prefix = Input.ofNullable(prefix);
            return this;
        }

        public Builder setTag(@Nullable Input<BucketReplicationConfigRuleFilterTagArgs> tag) {
            this.tag = tag;
            return this;
        }

        public Builder setTag(@Nullable BucketReplicationConfigRuleFilterTagArgs tag) {
            this.tag = Input.ofNullable(tag);
            return this;
        }
        public BucketReplicationConfigRuleFilterArgs build() {
            return new BucketReplicationConfigRuleFilterArgs(and, prefix, tag);
        }
    }
}
