// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.autoscaling;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ScheduleArgs extends io.pulumi.resources.ResourceArgs {

    public static final ScheduleArgs Empty = new ScheduleArgs();

    /**
     * The name or Amazon Resource Name (ARN) of the Auto Scaling group.
     * 
     */
    @Import(name="autoscalingGroupName", required=true)
      private final Output<String> autoscalingGroupName;

    public Output<String> getAutoscalingGroupName() {
        return this.autoscalingGroupName;
    }

    /**
     * The number of EC2 instances that should be running in the group. Default 0.  Set to -1 if you don't want to change the desired capacity at the scheduled time.
     * 
     */
    @Import(name="desiredCapacity")
      private final @Nullable Output<Integer> desiredCapacity;

    public Output<Integer> getDesiredCapacity() {
        return this.desiredCapacity == null ? Output.empty() : this.desiredCapacity;
    }

    /**
     * The time for this action to end, in "YYYY-MM-DDThh:mm:ssZ" format in UTC/GMT only (for example, 2014-06-01T00:00:00Z ).
     * If you try to schedule your action in the past, Auto Scaling returns an error message.
     * 
     */
    @Import(name="endTime")
      private final @Nullable Output<String> endTime;

    public Output<String> getEndTime() {
        return this.endTime == null ? Output.empty() : this.endTime;
    }

    /**
     * The maximum size for the Auto Scaling group. Default 0.
     * Set to -1 if you don't want to change the maximum size at the scheduled time.
     * 
     */
    @Import(name="maxSize")
      private final @Nullable Output<Integer> maxSize;

    public Output<Integer> getMaxSize() {
        return this.maxSize == null ? Output.empty() : this.maxSize;
    }

    /**
     * The minimum size for the Auto Scaling group. Default 0.
     * Set to -1 if you don't want to change the minimum size at the scheduled time.
     * 
     */
    @Import(name="minSize")
      private final @Nullable Output<Integer> minSize;

    public Output<Integer> getMinSize() {
        return this.minSize == null ? Output.empty() : this.minSize;
    }

    /**
     * The time when recurring future actions will start. Start time is specified by the user following the Unix cron syntax format.
     * 
     */
    @Import(name="recurrence")
      private final @Nullable Output<String> recurrence;

    public Output<String> getRecurrence() {
        return this.recurrence == null ? Output.empty() : this.recurrence;
    }

    /**
     * The name of this scaling action.
     * 
     */
    @Import(name="scheduledActionName", required=true)
      private final Output<String> scheduledActionName;

    public Output<String> getScheduledActionName() {
        return this.scheduledActionName;
    }

    /**
     * The time for this action to start, in "YYYY-MM-DDThh:mm:ssZ" format in UTC/GMT only (for example, 2014-06-01T00:00:00Z ).
     * If you try to schedule your action in the past, Auto Scaling returns an error message.
     * 
     */
    @Import(name="startTime")
      private final @Nullable Output<String> startTime;

    public Output<String> getStartTime() {
        return this.startTime == null ? Output.empty() : this.startTime;
    }

    /**
     * The timezone for the cron expression. Valid values are the canonical names of the IANA time zones (such as Etc/GMT+9 or Pacific/Tahiti).
     * 
     */
    @Import(name="timeZone")
      private final @Nullable Output<String> timeZone;

    public Output<String> getTimeZone() {
        return this.timeZone == null ? Output.empty() : this.timeZone;
    }

    public ScheduleArgs(
        Output<String> autoscalingGroupName,
        @Nullable Output<Integer> desiredCapacity,
        @Nullable Output<String> endTime,
        @Nullable Output<Integer> maxSize,
        @Nullable Output<Integer> minSize,
        @Nullable Output<String> recurrence,
        Output<String> scheduledActionName,
        @Nullable Output<String> startTime,
        @Nullable Output<String> timeZone) {
        this.autoscalingGroupName = Objects.requireNonNull(autoscalingGroupName, "expected parameter 'autoscalingGroupName' to be non-null");
        this.desiredCapacity = desiredCapacity;
        this.endTime = endTime;
        this.maxSize = maxSize;
        this.minSize = minSize;
        this.recurrence = recurrence;
        this.scheduledActionName = Objects.requireNonNull(scheduledActionName, "expected parameter 'scheduledActionName' to be non-null");
        this.startTime = startTime;
        this.timeZone = timeZone;
    }

    private ScheduleArgs() {
        this.autoscalingGroupName = Output.empty();
        this.desiredCapacity = Output.empty();
        this.endTime = Output.empty();
        this.maxSize = Output.empty();
        this.minSize = Output.empty();
        this.recurrence = Output.empty();
        this.scheduledActionName = Output.empty();
        this.startTime = Output.empty();
        this.timeZone = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ScheduleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> autoscalingGroupName;
        private @Nullable Output<Integer> desiredCapacity;
        private @Nullable Output<String> endTime;
        private @Nullable Output<Integer> maxSize;
        private @Nullable Output<Integer> minSize;
        private @Nullable Output<String> recurrence;
        private Output<String> scheduledActionName;
        private @Nullable Output<String> startTime;
        private @Nullable Output<String> timeZone;

        public Builder() {
    	      // Empty
        }

        public Builder(ScheduleArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.autoscalingGroupName = defaults.autoscalingGroupName;
    	      this.desiredCapacity = defaults.desiredCapacity;
    	      this.endTime = defaults.endTime;
    	      this.maxSize = defaults.maxSize;
    	      this.minSize = defaults.minSize;
    	      this.recurrence = defaults.recurrence;
    	      this.scheduledActionName = defaults.scheduledActionName;
    	      this.startTime = defaults.startTime;
    	      this.timeZone = defaults.timeZone;
        }

        public Builder autoscalingGroupName(Output<String> autoscalingGroupName) {
            this.autoscalingGroupName = Objects.requireNonNull(autoscalingGroupName);
            return this;
        }
        public Builder autoscalingGroupName(String autoscalingGroupName) {
            this.autoscalingGroupName = Output.of(Objects.requireNonNull(autoscalingGroupName));
            return this;
        }
        public Builder desiredCapacity(@Nullable Output<Integer> desiredCapacity) {
            this.desiredCapacity = desiredCapacity;
            return this;
        }
        public Builder desiredCapacity(@Nullable Integer desiredCapacity) {
            this.desiredCapacity = Output.ofNullable(desiredCapacity);
            return this;
        }
        public Builder endTime(@Nullable Output<String> endTime) {
            this.endTime = endTime;
            return this;
        }
        public Builder endTime(@Nullable String endTime) {
            this.endTime = Output.ofNullable(endTime);
            return this;
        }
        public Builder maxSize(@Nullable Output<Integer> maxSize) {
            this.maxSize = maxSize;
            return this;
        }
        public Builder maxSize(@Nullable Integer maxSize) {
            this.maxSize = Output.ofNullable(maxSize);
            return this;
        }
        public Builder minSize(@Nullable Output<Integer> minSize) {
            this.minSize = minSize;
            return this;
        }
        public Builder minSize(@Nullable Integer minSize) {
            this.minSize = Output.ofNullable(minSize);
            return this;
        }
        public Builder recurrence(@Nullable Output<String> recurrence) {
            this.recurrence = recurrence;
            return this;
        }
        public Builder recurrence(@Nullable String recurrence) {
            this.recurrence = Output.ofNullable(recurrence);
            return this;
        }
        public Builder scheduledActionName(Output<String> scheduledActionName) {
            this.scheduledActionName = Objects.requireNonNull(scheduledActionName);
            return this;
        }
        public Builder scheduledActionName(String scheduledActionName) {
            this.scheduledActionName = Output.of(Objects.requireNonNull(scheduledActionName));
            return this;
        }
        public Builder startTime(@Nullable Output<String> startTime) {
            this.startTime = startTime;
            return this;
        }
        public Builder startTime(@Nullable String startTime) {
            this.startTime = Output.ofNullable(startTime);
            return this;
        }
        public Builder timeZone(@Nullable Output<String> timeZone) {
            this.timeZone = timeZone;
            return this;
        }
        public Builder timeZone(@Nullable String timeZone) {
            this.timeZone = Output.ofNullable(timeZone);
            return this;
        }        public ScheduleArgs build() {
            return new ScheduleArgs(autoscalingGroupName, desiredCapacity, endTime, maxSize, minSize, recurrence, scheduledActionName, startTime, timeZone);
        }
    }
}
