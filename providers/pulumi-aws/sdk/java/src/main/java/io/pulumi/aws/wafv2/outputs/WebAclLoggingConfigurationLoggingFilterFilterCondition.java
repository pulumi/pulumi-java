// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.wafv2.outputs;

import io.pulumi.aws.wafv2.outputs.WebAclLoggingConfigurationLoggingFilterFilterConditionActionCondition;
import io.pulumi.aws.wafv2.outputs.WebAclLoggingConfigurationLoggingFilterFilterConditionLabelNameCondition;
import io.pulumi.core.annotations.OutputCustomType;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class WebAclLoggingConfigurationLoggingFilterFilterCondition {
    /**
     * A single action condition. See Action Condition below for more details.
     * 
     */
    private final @Nullable WebAclLoggingConfigurationLoggingFilterFilterConditionActionCondition actionCondition;
    /**
     * A single label name condition. See Label Name Condition below for more details.
     * 
     */
    private final @Nullable WebAclLoggingConfigurationLoggingFilterFilterConditionLabelNameCondition labelNameCondition;

    @OutputCustomType.Constructor
    private WebAclLoggingConfigurationLoggingFilterFilterCondition(
        @OutputCustomType.Parameter("actionCondition") @Nullable WebAclLoggingConfigurationLoggingFilterFilterConditionActionCondition actionCondition,
        @OutputCustomType.Parameter("labelNameCondition") @Nullable WebAclLoggingConfigurationLoggingFilterFilterConditionLabelNameCondition labelNameCondition) {
        this.actionCondition = actionCondition;
        this.labelNameCondition = labelNameCondition;
    }

    /**
     * A single action condition. See Action Condition below for more details.
     * 
    */
    public Optional<WebAclLoggingConfigurationLoggingFilterFilterConditionActionCondition> getActionCondition() {
        return Optional.ofNullable(this.actionCondition);
    }
    /**
     * A single label name condition. See Label Name Condition below for more details.
     * 
    */
    public Optional<WebAclLoggingConfigurationLoggingFilterFilterConditionLabelNameCondition> getLabelNameCondition() {
        return Optional.ofNullable(this.labelNameCondition);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(WebAclLoggingConfigurationLoggingFilterFilterCondition defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable WebAclLoggingConfigurationLoggingFilterFilterConditionActionCondition actionCondition;
        private @Nullable WebAclLoggingConfigurationLoggingFilterFilterConditionLabelNameCondition labelNameCondition;

        public Builder() {
    	      // Empty
        }

        public Builder(WebAclLoggingConfigurationLoggingFilterFilterCondition defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.actionCondition = defaults.actionCondition;
    	      this.labelNameCondition = defaults.labelNameCondition;
        }

        public Builder setActionCondition(@Nullable WebAclLoggingConfigurationLoggingFilterFilterConditionActionCondition actionCondition) {
            this.actionCondition = actionCondition;
            return this;
        }

        public Builder setLabelNameCondition(@Nullable WebAclLoggingConfigurationLoggingFilterFilterConditionLabelNameCondition labelNameCondition) {
            this.labelNameCondition = labelNameCondition;
            return this;
        }
        public WebAclLoggingConfigurationLoggingFilterFilterCondition build() {
            return new WebAclLoggingConfigurationLoggingFilterFilterCondition(actionCondition, labelNameCondition);
        }
    }
}
