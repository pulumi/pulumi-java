// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.imagebuilder.outputs;

import io.pulumi.aws.imagebuilder.outputs.GetInfrastructureConfigurationLogging;
import io.pulumi.core.annotations.OutputCustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@OutputCustomType
public final class GetInfrastructureConfigurationResult {
    private final String arn;
    /**
     * Date the infrastructure configuration was updated.
     * 
     */
    private final String dateCreated;
    private final String dateUpdated;
    /**
     * Description of the infrastructure configuration.
     * 
     */
    private final String description;
    /**
     * The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    /**
     * Name of the IAM Instance Profile associated with the configuration.
     * 
     */
    private final String instanceProfileName;
    /**
     * Set of EC2 Instance Types associated with the configuration.
     * 
     */
    private final List<String> instanceTypes;
    /**
     * Name of the EC2 Key Pair associated with the configuration.
     * 
     */
    private final String keyPair;
    /**
     * Nested list of logging settings.
     * 
     */
    private final List<GetInfrastructureConfigurationLogging> loggings;
    /**
     * Name of the infrastructure configuration.
     * 
     */
    private final String name;
    /**
     * Key-value map of resource tags for the infrastructure created by the infrastructure configuration.
     * 
     */
    private final Map<String,String> resourceTags;
    /**
     * Set of EC2 Security Group identifiers associated with the configuration.
     * 
     */
    private final List<String> securityGroupIds;
    /**
     * Amazon Resource Name (ARN) of the SNS Topic associated with the configuration.
     * 
     */
    private final String snsTopicArn;
    /**
     * Identifier of the EC2 Subnet associated with the configuration.
     * 
     */
    private final String subnetId;
    /**
     * Key-value map of resource tags for the infrastructure configuration.
     * 
     */
    private final Map<String,String> tags;
    /**
     * Whether instances are terminated on failure.
     * 
     */
    private final Boolean terminateInstanceOnFailure;

    @OutputCustomType.Constructor({"arn","dateCreated","dateUpdated","description","id","instanceProfileName","instanceTypes","keyPair","loggings","name","resourceTags","securityGroupIds","snsTopicArn","subnetId","tags","terminateInstanceOnFailure"})
    private GetInfrastructureConfigurationResult(
        String arn,
        String dateCreated,
        String dateUpdated,
        String description,
        String id,
        String instanceProfileName,
        List<String> instanceTypes,
        String keyPair,
        List<GetInfrastructureConfigurationLogging> loggings,
        String name,
        Map<String,String> resourceTags,
        List<String> securityGroupIds,
        String snsTopicArn,
        String subnetId,
        Map<String,String> tags,
        Boolean terminateInstanceOnFailure) {
        this.arn = arn;
        this.dateCreated = dateCreated;
        this.dateUpdated = dateUpdated;
        this.description = description;
        this.id = id;
        this.instanceProfileName = instanceProfileName;
        this.instanceTypes = instanceTypes;
        this.keyPair = keyPair;
        this.loggings = loggings;
        this.name = name;
        this.resourceTags = resourceTags;
        this.securityGroupIds = securityGroupIds;
        this.snsTopicArn = snsTopicArn;
        this.subnetId = subnetId;
        this.tags = tags;
        this.terminateInstanceOnFailure = terminateInstanceOnFailure;
    }

    public String getArn() {
        return this.arn;
    }
    /**
     * Date the infrastructure configuration was updated.
     * 
    */
    public String getDateCreated() {
        return this.dateCreated;
    }
    public String getDateUpdated() {
        return this.dateUpdated;
    }
    /**
     * Description of the infrastructure configuration.
     * 
    */
    public String getDescription() {
        return this.description;
    }
    /**
     * The provider-assigned unique ID for this managed resource.
     * 
    */
    public String getId() {
        return this.id;
    }
    /**
     * Name of the IAM Instance Profile associated with the configuration.
     * 
    */
    public String getInstanceProfileName() {
        return this.instanceProfileName;
    }
    /**
     * Set of EC2 Instance Types associated with the configuration.
     * 
    */
    public List<String> getInstanceTypes() {
        return this.instanceTypes;
    }
    /**
     * Name of the EC2 Key Pair associated with the configuration.
     * 
    */
    public String getKeyPair() {
        return this.keyPair;
    }
    /**
     * Nested list of logging settings.
     * 
    */
    public List<GetInfrastructureConfigurationLogging> getLoggings() {
        return this.loggings;
    }
    /**
     * Name of the infrastructure configuration.
     * 
    */
    public String getName() {
        return this.name;
    }
    /**
     * Key-value map of resource tags for the infrastructure created by the infrastructure configuration.
     * 
    */
    public Map<String,String> getResourceTags() {
        return this.resourceTags;
    }
    /**
     * Set of EC2 Security Group identifiers associated with the configuration.
     * 
    */
    public List<String> getSecurityGroupIds() {
        return this.securityGroupIds;
    }
    /**
     * Amazon Resource Name (ARN) of the SNS Topic associated with the configuration.
     * 
    */
    public String getSnsTopicArn() {
        return this.snsTopicArn;
    }
    /**
     * Identifier of the EC2 Subnet associated with the configuration.
     * 
    */
    public String getSubnetId() {
        return this.subnetId;
    }
    /**
     * Key-value map of resource tags for the infrastructure configuration.
     * 
    */
    public Map<String,String> getTags() {
        return this.tags;
    }
    /**
     * Whether instances are terminated on failure.
     * 
    */
    public Boolean getTerminateInstanceOnFailure() {
        return this.terminateInstanceOnFailure;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetInfrastructureConfigurationResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String arn;
        private String dateCreated;
        private String dateUpdated;
        private String description;
        private String id;
        private String instanceProfileName;
        private List<String> instanceTypes;
        private String keyPair;
        private List<GetInfrastructureConfigurationLogging> loggings;
        private String name;
        private Map<String,String> resourceTags;
        private List<String> securityGroupIds;
        private String snsTopicArn;
        private String subnetId;
        private Map<String,String> tags;
        private Boolean terminateInstanceOnFailure;

        public Builder() {
    	      // Empty
        }

        public Builder(GetInfrastructureConfigurationResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.dateCreated = defaults.dateCreated;
    	      this.dateUpdated = defaults.dateUpdated;
    	      this.description = defaults.description;
    	      this.id = defaults.id;
    	      this.instanceProfileName = defaults.instanceProfileName;
    	      this.instanceTypes = defaults.instanceTypes;
    	      this.keyPair = defaults.keyPair;
    	      this.loggings = defaults.loggings;
    	      this.name = defaults.name;
    	      this.resourceTags = defaults.resourceTags;
    	      this.securityGroupIds = defaults.securityGroupIds;
    	      this.snsTopicArn = defaults.snsTopicArn;
    	      this.subnetId = defaults.subnetId;
    	      this.tags = defaults.tags;
    	      this.terminateInstanceOnFailure = defaults.terminateInstanceOnFailure;
        }

        public Builder setArn(String arn) {
            this.arn = Objects.requireNonNull(arn);
            return this;
        }

        public Builder setDateCreated(String dateCreated) {
            this.dateCreated = Objects.requireNonNull(dateCreated);
            return this;
        }

        public Builder setDateUpdated(String dateUpdated) {
            this.dateUpdated = Objects.requireNonNull(dateUpdated);
            return this;
        }

        public Builder setDescription(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }

        public Builder setId(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }

        public Builder setInstanceProfileName(String instanceProfileName) {
            this.instanceProfileName = Objects.requireNonNull(instanceProfileName);
            return this;
        }

        public Builder setInstanceTypes(List<String> instanceTypes) {
            this.instanceTypes = Objects.requireNonNull(instanceTypes);
            return this;
        }

        public Builder setKeyPair(String keyPair) {
            this.keyPair = Objects.requireNonNull(keyPair);
            return this;
        }

        public Builder setLoggings(List<GetInfrastructureConfigurationLogging> loggings) {
            this.loggings = Objects.requireNonNull(loggings);
            return this;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setResourceTags(Map<String,String> resourceTags) {
            this.resourceTags = Objects.requireNonNull(resourceTags);
            return this;
        }

        public Builder setSecurityGroupIds(List<String> securityGroupIds) {
            this.securityGroupIds = Objects.requireNonNull(securityGroupIds);
            return this;
        }

        public Builder setSnsTopicArn(String snsTopicArn) {
            this.snsTopicArn = Objects.requireNonNull(snsTopicArn);
            return this;
        }

        public Builder setSubnetId(String subnetId) {
            this.subnetId = Objects.requireNonNull(subnetId);
            return this;
        }

        public Builder setTags(Map<String,String> tags) {
            this.tags = Objects.requireNonNull(tags);
            return this;
        }

        public Builder setTerminateInstanceOnFailure(Boolean terminateInstanceOnFailure) {
            this.terminateInstanceOnFailure = Objects.requireNonNull(terminateInstanceOnFailure);
            return this;
        }
        public GetInfrastructureConfigurationResult build() {
            return new GetInfrastructureConfigurationResult(arn, dateCreated, dateUpdated, description, id, instanceProfileName, instanceTypes, keyPair, loggings, name, resourceTags, securityGroupIds, snsTopicArn, subnetId, tags, terminateInstanceOnFailure);
        }
    }
}
