// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.amplify.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class BranchState extends io.pulumi.resources.ResourceArgs {

    public static final BranchState Empty = new BranchState();

    /**
     * The unique ID for an Amplify app.
     * 
     */
    @InputImport(name="appId")
      private final @Nullable Input<String> appId;

    public Input<String> getAppId() {
        return this.appId == null ? Input.empty() : this.appId;
    }

    /**
     * The Amazon Resource Name (ARN) for the branch.
     * 
     */
    @InputImport(name="arn")
      private final @Nullable Input<String> arn;

    public Input<String> getArn() {
        return this.arn == null ? Input.empty() : this.arn;
    }

    /**
     * A list of custom resources that are linked to this branch.
     * 
     */
    @InputImport(name="associatedResources")
      private final @Nullable Input<List<String>> associatedResources;

    public Input<List<String>> getAssociatedResources() {
        return this.associatedResources == null ? Input.empty() : this.associatedResources;
    }

    /**
     * The Amazon Resource Name (ARN) for a backend environment that is part of an Amplify app.
     * 
     */
    @InputImport(name="backendEnvironmentArn")
      private final @Nullable Input<String> backendEnvironmentArn;

    public Input<String> getBackendEnvironmentArn() {
        return this.backendEnvironmentArn == null ? Input.empty() : this.backendEnvironmentArn;
    }

    /**
     * The basic authorization credentials for the branch.
     * 
     */
    @InputImport(name="basicAuthCredentials")
      private final @Nullable Input<String> basicAuthCredentials;

    public Input<String> getBasicAuthCredentials() {
        return this.basicAuthCredentials == null ? Input.empty() : this.basicAuthCredentials;
    }

    /**
     * The name for the branch.
     * 
     */
    @InputImport(name="branchName")
      private final @Nullable Input<String> branchName;

    public Input<String> getBranchName() {
        return this.branchName == null ? Input.empty() : this.branchName;
    }

    /**
     * The custom domains for the branch.
     * 
     */
    @InputImport(name="customDomains")
      private final @Nullable Input<List<String>> customDomains;

    public Input<List<String>> getCustomDomains() {
        return this.customDomains == null ? Input.empty() : this.customDomains;
    }

    /**
     * The description for the branch.
     * 
     */
    @InputImport(name="description")
      private final @Nullable Input<String> description;

    public Input<String> getDescription() {
        return this.description == null ? Input.empty() : this.description;
    }

    /**
     * The destination branch if the branch is a pull request branch.
     * 
     */
    @InputImport(name="destinationBranch")
      private final @Nullable Input<String> destinationBranch;

    public Input<String> getDestinationBranch() {
        return this.destinationBranch == null ? Input.empty() : this.destinationBranch;
    }

    /**
     * The display name for a branch. This is used as the default domain prefix.
     * 
     */
    @InputImport(name="displayName")
      private final @Nullable Input<String> displayName;

    public Input<String> getDisplayName() {
        return this.displayName == null ? Input.empty() : this.displayName;
    }

    /**
     * Enables auto building for the branch.
     * 
     */
    @InputImport(name="enableAutoBuild")
      private final @Nullable Input<Boolean> enableAutoBuild;

    public Input<Boolean> getEnableAutoBuild() {
        return this.enableAutoBuild == null ? Input.empty() : this.enableAutoBuild;
    }

    /**
     * Enables basic authorization for the branch.
     * 
     */
    @InputImport(name="enableBasicAuth")
      private final @Nullable Input<Boolean> enableBasicAuth;

    public Input<Boolean> getEnableBasicAuth() {
        return this.enableBasicAuth == null ? Input.empty() : this.enableBasicAuth;
    }

    /**
     * Enables notifications for the branch.
     * 
     */
    @InputImport(name="enableNotification")
      private final @Nullable Input<Boolean> enableNotification;

    public Input<Boolean> getEnableNotification() {
        return this.enableNotification == null ? Input.empty() : this.enableNotification;
    }

    /**
     * Enables performance mode for the branch.
     * 
     */
    @InputImport(name="enablePerformanceMode")
      private final @Nullable Input<Boolean> enablePerformanceMode;

    public Input<Boolean> getEnablePerformanceMode() {
        return this.enablePerformanceMode == null ? Input.empty() : this.enablePerformanceMode;
    }

    /**
     * Enables pull request previews for this branch.
     * 
     */
    @InputImport(name="enablePullRequestPreview")
      private final @Nullable Input<Boolean> enablePullRequestPreview;

    public Input<Boolean> getEnablePullRequestPreview() {
        return this.enablePullRequestPreview == null ? Input.empty() : this.enablePullRequestPreview;
    }

    /**
     * The environment variables for the branch.
     * 
     */
    @InputImport(name="environmentVariables")
      private final @Nullable Input<Map<String,String>> environmentVariables;

    public Input<Map<String,String>> getEnvironmentVariables() {
        return this.environmentVariables == null ? Input.empty() : this.environmentVariables;
    }

    /**
     * The framework for the branch.
     * 
     */
    @InputImport(name="framework")
      private final @Nullable Input<String> framework;

    public Input<String> getFramework() {
        return this.framework == null ? Input.empty() : this.framework;
    }

    /**
     * The Amplify environment name for the pull request.
     * 
     */
    @InputImport(name="pullRequestEnvironmentName")
      private final @Nullable Input<String> pullRequestEnvironmentName;

    public Input<String> getPullRequestEnvironmentName() {
        return this.pullRequestEnvironmentName == null ? Input.empty() : this.pullRequestEnvironmentName;
    }

    /**
     * The source branch if the branch is a pull request branch.
     * 
     */
    @InputImport(name="sourceBranch")
      private final @Nullable Input<String> sourceBranch;

    public Input<String> getSourceBranch() {
        return this.sourceBranch == null ? Input.empty() : this.sourceBranch;
    }

    /**
     * Describes the current stage for the branch. Valid values: `PRODUCTION`, `BETA`, `DEVELOPMENT`, `EXPERIMENTAL`, `PULL_REQUEST`.
     * 
     */
    @InputImport(name="stage")
      private final @Nullable Input<String> stage;

    public Input<String> getStage() {
        return this.stage == null ? Input.empty() : this.stage;
    }

    /**
     * Key-value mapping of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @InputImport(name="tags")
      private final @Nullable Input<Map<String,String>> tags;

    public Input<Map<String,String>> getTags() {
        return this.tags == null ? Input.empty() : this.tags;
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     */
    @InputImport(name="tagsAll")
      private final @Nullable Input<Map<String,String>> tagsAll;

    public Input<Map<String,String>> getTagsAll() {
        return this.tagsAll == null ? Input.empty() : this.tagsAll;
    }

    /**
     * The content Time To Live (TTL) for the website in seconds.
     * 
     */
    @InputImport(name="ttl")
      private final @Nullable Input<String> ttl;

    public Input<String> getTtl() {
        return this.ttl == null ? Input.empty() : this.ttl;
    }

    public BranchState(
        @Nullable Input<String> appId,
        @Nullable Input<String> arn,
        @Nullable Input<List<String>> associatedResources,
        @Nullable Input<String> backendEnvironmentArn,
        @Nullable Input<String> basicAuthCredentials,
        @Nullable Input<String> branchName,
        @Nullable Input<List<String>> customDomains,
        @Nullable Input<String> description,
        @Nullable Input<String> destinationBranch,
        @Nullable Input<String> displayName,
        @Nullable Input<Boolean> enableAutoBuild,
        @Nullable Input<Boolean> enableBasicAuth,
        @Nullable Input<Boolean> enableNotification,
        @Nullable Input<Boolean> enablePerformanceMode,
        @Nullable Input<Boolean> enablePullRequestPreview,
        @Nullable Input<Map<String,String>> environmentVariables,
        @Nullable Input<String> framework,
        @Nullable Input<String> pullRequestEnvironmentName,
        @Nullable Input<String> sourceBranch,
        @Nullable Input<String> stage,
        @Nullable Input<Map<String,String>> tags,
        @Nullable Input<Map<String,String>> tagsAll,
        @Nullable Input<String> ttl) {
        this.appId = appId;
        this.arn = arn;
        this.associatedResources = associatedResources;
        this.backendEnvironmentArn = backendEnvironmentArn;
        this.basicAuthCredentials = basicAuthCredentials;
        this.branchName = branchName;
        this.customDomains = customDomains;
        this.description = description;
        this.destinationBranch = destinationBranch;
        this.displayName = displayName;
        this.enableAutoBuild = enableAutoBuild;
        this.enableBasicAuth = enableBasicAuth;
        this.enableNotification = enableNotification;
        this.enablePerformanceMode = enablePerformanceMode;
        this.enablePullRequestPreview = enablePullRequestPreview;
        this.environmentVariables = environmentVariables;
        this.framework = framework;
        this.pullRequestEnvironmentName = pullRequestEnvironmentName;
        this.sourceBranch = sourceBranch;
        this.stage = stage;
        this.tags = tags;
        this.tagsAll = tagsAll;
        this.ttl = ttl;
    }

    private BranchState() {
        this.appId = Input.empty();
        this.arn = Input.empty();
        this.associatedResources = Input.empty();
        this.backendEnvironmentArn = Input.empty();
        this.basicAuthCredentials = Input.empty();
        this.branchName = Input.empty();
        this.customDomains = Input.empty();
        this.description = Input.empty();
        this.destinationBranch = Input.empty();
        this.displayName = Input.empty();
        this.enableAutoBuild = Input.empty();
        this.enableBasicAuth = Input.empty();
        this.enableNotification = Input.empty();
        this.enablePerformanceMode = Input.empty();
        this.enablePullRequestPreview = Input.empty();
        this.environmentVariables = Input.empty();
        this.framework = Input.empty();
        this.pullRequestEnvironmentName = Input.empty();
        this.sourceBranch = Input.empty();
        this.stage = Input.empty();
        this.tags = Input.empty();
        this.tagsAll = Input.empty();
        this.ttl = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BranchState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> appId;
        private @Nullable Input<String> arn;
        private @Nullable Input<List<String>> associatedResources;
        private @Nullable Input<String> backendEnvironmentArn;
        private @Nullable Input<String> basicAuthCredentials;
        private @Nullable Input<String> branchName;
        private @Nullable Input<List<String>> customDomains;
        private @Nullable Input<String> description;
        private @Nullable Input<String> destinationBranch;
        private @Nullable Input<String> displayName;
        private @Nullable Input<Boolean> enableAutoBuild;
        private @Nullable Input<Boolean> enableBasicAuth;
        private @Nullable Input<Boolean> enableNotification;
        private @Nullable Input<Boolean> enablePerformanceMode;
        private @Nullable Input<Boolean> enablePullRequestPreview;
        private @Nullable Input<Map<String,String>> environmentVariables;
        private @Nullable Input<String> framework;
        private @Nullable Input<String> pullRequestEnvironmentName;
        private @Nullable Input<String> sourceBranch;
        private @Nullable Input<String> stage;
        private @Nullable Input<Map<String,String>> tags;
        private @Nullable Input<Map<String,String>> tagsAll;
        private @Nullable Input<String> ttl;

        public Builder() {
    	      // Empty
        }

        public Builder(BranchState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.appId = defaults.appId;
    	      this.arn = defaults.arn;
    	      this.associatedResources = defaults.associatedResources;
    	      this.backendEnvironmentArn = defaults.backendEnvironmentArn;
    	      this.basicAuthCredentials = defaults.basicAuthCredentials;
    	      this.branchName = defaults.branchName;
    	      this.customDomains = defaults.customDomains;
    	      this.description = defaults.description;
    	      this.destinationBranch = defaults.destinationBranch;
    	      this.displayName = defaults.displayName;
    	      this.enableAutoBuild = defaults.enableAutoBuild;
    	      this.enableBasicAuth = defaults.enableBasicAuth;
    	      this.enableNotification = defaults.enableNotification;
    	      this.enablePerformanceMode = defaults.enablePerformanceMode;
    	      this.enablePullRequestPreview = defaults.enablePullRequestPreview;
    	      this.environmentVariables = defaults.environmentVariables;
    	      this.framework = defaults.framework;
    	      this.pullRequestEnvironmentName = defaults.pullRequestEnvironmentName;
    	      this.sourceBranch = defaults.sourceBranch;
    	      this.stage = defaults.stage;
    	      this.tags = defaults.tags;
    	      this.tagsAll = defaults.tagsAll;
    	      this.ttl = defaults.ttl;
        }

        public Builder setAppId(@Nullable Input<String> appId) {
            this.appId = appId;
            return this;
        }

        public Builder setAppId(@Nullable String appId) {
            this.appId = Input.ofNullable(appId);
            return this;
        }

        public Builder setArn(@Nullable Input<String> arn) {
            this.arn = arn;
            return this;
        }

        public Builder setArn(@Nullable String arn) {
            this.arn = Input.ofNullable(arn);
            return this;
        }

        public Builder setAssociatedResources(@Nullable Input<List<String>> associatedResources) {
            this.associatedResources = associatedResources;
            return this;
        }

        public Builder setAssociatedResources(@Nullable List<String> associatedResources) {
            this.associatedResources = Input.ofNullable(associatedResources);
            return this;
        }

        public Builder setBackendEnvironmentArn(@Nullable Input<String> backendEnvironmentArn) {
            this.backendEnvironmentArn = backendEnvironmentArn;
            return this;
        }

        public Builder setBackendEnvironmentArn(@Nullable String backendEnvironmentArn) {
            this.backendEnvironmentArn = Input.ofNullable(backendEnvironmentArn);
            return this;
        }

        public Builder setBasicAuthCredentials(@Nullable Input<String> basicAuthCredentials) {
            this.basicAuthCredentials = basicAuthCredentials;
            return this;
        }

        public Builder setBasicAuthCredentials(@Nullable String basicAuthCredentials) {
            this.basicAuthCredentials = Input.ofNullable(basicAuthCredentials);
            return this;
        }

        public Builder setBranchName(@Nullable Input<String> branchName) {
            this.branchName = branchName;
            return this;
        }

        public Builder setBranchName(@Nullable String branchName) {
            this.branchName = Input.ofNullable(branchName);
            return this;
        }

        public Builder setCustomDomains(@Nullable Input<List<String>> customDomains) {
            this.customDomains = customDomains;
            return this;
        }

        public Builder setCustomDomains(@Nullable List<String> customDomains) {
            this.customDomains = Input.ofNullable(customDomains);
            return this;
        }

        public Builder setDescription(@Nullable Input<String> description) {
            this.description = description;
            return this;
        }

        public Builder setDescription(@Nullable String description) {
            this.description = Input.ofNullable(description);
            return this;
        }

        public Builder setDestinationBranch(@Nullable Input<String> destinationBranch) {
            this.destinationBranch = destinationBranch;
            return this;
        }

        public Builder setDestinationBranch(@Nullable String destinationBranch) {
            this.destinationBranch = Input.ofNullable(destinationBranch);
            return this;
        }

        public Builder setDisplayName(@Nullable Input<String> displayName) {
            this.displayName = displayName;
            return this;
        }

        public Builder setDisplayName(@Nullable String displayName) {
            this.displayName = Input.ofNullable(displayName);
            return this;
        }

        public Builder setEnableAutoBuild(@Nullable Input<Boolean> enableAutoBuild) {
            this.enableAutoBuild = enableAutoBuild;
            return this;
        }

        public Builder setEnableAutoBuild(@Nullable Boolean enableAutoBuild) {
            this.enableAutoBuild = Input.ofNullable(enableAutoBuild);
            return this;
        }

        public Builder setEnableBasicAuth(@Nullable Input<Boolean> enableBasicAuth) {
            this.enableBasicAuth = enableBasicAuth;
            return this;
        }

        public Builder setEnableBasicAuth(@Nullable Boolean enableBasicAuth) {
            this.enableBasicAuth = Input.ofNullable(enableBasicAuth);
            return this;
        }

        public Builder setEnableNotification(@Nullable Input<Boolean> enableNotification) {
            this.enableNotification = enableNotification;
            return this;
        }

        public Builder setEnableNotification(@Nullable Boolean enableNotification) {
            this.enableNotification = Input.ofNullable(enableNotification);
            return this;
        }

        public Builder setEnablePerformanceMode(@Nullable Input<Boolean> enablePerformanceMode) {
            this.enablePerformanceMode = enablePerformanceMode;
            return this;
        }

        public Builder setEnablePerformanceMode(@Nullable Boolean enablePerformanceMode) {
            this.enablePerformanceMode = Input.ofNullable(enablePerformanceMode);
            return this;
        }

        public Builder setEnablePullRequestPreview(@Nullable Input<Boolean> enablePullRequestPreview) {
            this.enablePullRequestPreview = enablePullRequestPreview;
            return this;
        }

        public Builder setEnablePullRequestPreview(@Nullable Boolean enablePullRequestPreview) {
            this.enablePullRequestPreview = Input.ofNullable(enablePullRequestPreview);
            return this;
        }

        public Builder setEnvironmentVariables(@Nullable Input<Map<String,String>> environmentVariables) {
            this.environmentVariables = environmentVariables;
            return this;
        }

        public Builder setEnvironmentVariables(@Nullable Map<String,String> environmentVariables) {
            this.environmentVariables = Input.ofNullable(environmentVariables);
            return this;
        }

        public Builder setFramework(@Nullable Input<String> framework) {
            this.framework = framework;
            return this;
        }

        public Builder setFramework(@Nullable String framework) {
            this.framework = Input.ofNullable(framework);
            return this;
        }

        public Builder setPullRequestEnvironmentName(@Nullable Input<String> pullRequestEnvironmentName) {
            this.pullRequestEnvironmentName = pullRequestEnvironmentName;
            return this;
        }

        public Builder setPullRequestEnvironmentName(@Nullable String pullRequestEnvironmentName) {
            this.pullRequestEnvironmentName = Input.ofNullable(pullRequestEnvironmentName);
            return this;
        }

        public Builder setSourceBranch(@Nullable Input<String> sourceBranch) {
            this.sourceBranch = sourceBranch;
            return this;
        }

        public Builder setSourceBranch(@Nullable String sourceBranch) {
            this.sourceBranch = Input.ofNullable(sourceBranch);
            return this;
        }

        public Builder setStage(@Nullable Input<String> stage) {
            this.stage = stage;
            return this;
        }

        public Builder setStage(@Nullable String stage) {
            this.stage = Input.ofNullable(stage);
            return this;
        }

        public Builder setTags(@Nullable Input<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }

        public Builder setTags(@Nullable Map<String,String> tags) {
            this.tags = Input.ofNullable(tags);
            return this;
        }

        public Builder setTagsAll(@Nullable Input<Map<String,String>> tagsAll) {
            this.tagsAll = tagsAll;
            return this;
        }

        public Builder setTagsAll(@Nullable Map<String,String> tagsAll) {
            this.tagsAll = Input.ofNullable(tagsAll);
            return this;
        }

        public Builder setTtl(@Nullable Input<String> ttl) {
            this.ttl = ttl;
            return this;
        }

        public Builder setTtl(@Nullable String ttl) {
            this.ttl = Input.ofNullable(ttl);
            return this;
        }
        public BranchState build() {
            return new BranchState(appId, arn, associatedResources, backendEnvironmentArn, basicAuthCredentials, branchName, customDomains, description, destinationBranch, displayName, enableAutoBuild, enableBasicAuth, enableNotification, enablePerformanceMode, enablePullRequestPreview, environmentVariables, framework, pullRequestEnvironmentName, sourceBranch, stage, tags, tagsAll, ttl);
        }
    }
}
