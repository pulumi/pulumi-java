// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.cloudfront.inputs;

import io.pulumi.aws.cloudfront.inputs.DistributionCustomErrorResponseGetArgs;
import io.pulumi.aws.cloudfront.inputs.DistributionDefaultCacheBehaviorGetArgs;
import io.pulumi.aws.cloudfront.inputs.DistributionLoggingConfigGetArgs;
import io.pulumi.aws.cloudfront.inputs.DistributionOrderedCacheBehaviorGetArgs;
import io.pulumi.aws.cloudfront.inputs.DistributionOriginGetArgs;
import io.pulumi.aws.cloudfront.inputs.DistributionOriginGroupGetArgs;
import io.pulumi.aws.cloudfront.inputs.DistributionRestrictionsGetArgs;
import io.pulumi.aws.cloudfront.inputs.DistributionTrustedKeyGroupGetArgs;
import io.pulumi.aws.cloudfront.inputs.DistributionTrustedSignerGetArgs;
import io.pulumi.aws.cloudfront.inputs.DistributionViewerCertificateGetArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class DistributionState extends io.pulumi.resources.ResourceArgs {

    public static final DistributionState Empty = new DistributionState();

    /**
     * Extra CNAMEs (alternate domain names), if any, for
     * this distribution.
     * 
     */
    @Import(name="aliases")
      private final @Nullable Output<List<String>> aliases;

    public Output<List<String>> getAliases() {
        return this.aliases == null ? Output.empty() : this.aliases;
    }

    /**
     * The ARN (Amazon Resource Name) for the distribution. For example: `arn:aws:cloudfront::123456789012:distribution/EDFDVBD632BHDS5`, where `123456789012` is your AWS account ID.
     * 
     */
    @Import(name="arn")
      private final @Nullable Output<String> arn;

    public Output<String> getArn() {
        return this.arn == null ? Output.empty() : this.arn;
    }

    /**
     * Internal value used by CloudFront to allow future
     * updates to the distribution configuration.
     * 
     */
    @Import(name="callerReference")
      private final @Nullable Output<String> callerReference;

    public Output<String> getCallerReference() {
        return this.callerReference == null ? Output.empty() : this.callerReference;
    }

    /**
     * Any comments you want to include about the
     * distribution.
     * 
     */
    @Import(name="comment")
      private final @Nullable Output<String> comment;

    public Output<String> getComment() {
        return this.comment == null ? Output.empty() : this.comment;
    }

    /**
     * One or more custom error response elements (multiples allowed).
     * 
     */
    @Import(name="customErrorResponses")
      private final @Nullable Output<List<DistributionCustomErrorResponseGetArgs>> customErrorResponses;

    public Output<List<DistributionCustomErrorResponseGetArgs>> getCustomErrorResponses() {
        return this.customErrorResponses == null ? Output.empty() : this.customErrorResponses;
    }

    /**
     * The default cache behavior for this distribution (maximum
     * one).
     * 
     */
    @Import(name="defaultCacheBehavior")
      private final @Nullable Output<DistributionDefaultCacheBehaviorGetArgs> defaultCacheBehavior;

    public Output<DistributionDefaultCacheBehaviorGetArgs> getDefaultCacheBehavior() {
        return this.defaultCacheBehavior == null ? Output.empty() : this.defaultCacheBehavior;
    }

    /**
     * The object that you want CloudFront to
     * return (for example, index.html) when an end user requests the root URL.
     * 
     */
    @Import(name="defaultRootObject")
      private final @Nullable Output<String> defaultRootObject;

    public Output<String> getDefaultRootObject() {
        return this.defaultRootObject == null ? Output.empty() : this.defaultRootObject;
    }

    /**
     * The DNS domain name of either the S3 bucket, or
     * web site of your custom origin.
     * 
     */
    @Import(name="domainName")
      private final @Nullable Output<String> domainName;

    public Output<String> getDomainName() {
        return this.domainName == null ? Output.empty() : this.domainName;
    }

    /**
     * A flag that specifies whether Origin Shield is enabled.
     * 
     */
    @Import(name="enabled")
      private final @Nullable Output<Boolean> enabled;

    public Output<Boolean> getEnabled() {
        return this.enabled == null ? Output.empty() : this.enabled;
    }

    /**
     * The current version of the distribution's information. For example:
     * `E2QWRUHAPOMQZL`.
     * 
     */
    @Import(name="etag")
      private final @Nullable Output<String> etag;

    public Output<String> getEtag() {
        return this.etag == null ? Output.empty() : this.etag;
    }

    /**
     * The CloudFront Route 53 zone ID that can be used to
     * route an [Alias Resource Record Set](http://docs.aws.amazon.com/Route53/latest/APIReference/CreateAliasRRSAPI.html) to. This attribute is simply an
     * alias for the zone ID `Z2FDTNDATAQYW2`.
     * 
     */
    @Import(name="hostedZoneId")
      private final @Nullable Output<String> hostedZoneId;

    public Output<String> getHostedZoneId() {
        return this.hostedZoneId == null ? Output.empty() : this.hostedZoneId;
    }

    /**
     * The maximum HTTP version to support on the
     * distribution. Allowed values are `http1.1` and `http2`. The default is
     * `http2`.
     * 
     */
    @Import(name="httpVersion")
      private final @Nullable Output<String> httpVersion;

    public Output<String> getHttpVersion() {
        return this.httpVersion == null ? Output.empty() : this.httpVersion;
    }

    /**
     * The number of invalidation batches
     * currently in progress.
     * 
     */
    @Import(name="inProgressValidationBatches")
      private final @Nullable Output<Integer> inProgressValidationBatches;

    public Output<Integer> getInProgressValidationBatches() {
        return this.inProgressValidationBatches == null ? Output.empty() : this.inProgressValidationBatches;
    }

    /**
     * Whether the IPv6 is enabled for the distribution.
     * 
     */
    @Import(name="isIpv6Enabled")
      private final @Nullable Output<Boolean> isIpv6Enabled;

    public Output<Boolean> getIsIpv6Enabled() {
        return this.isIpv6Enabled == null ? Output.empty() : this.isIpv6Enabled;
    }

    /**
     * The date and time the distribution was last modified.
     * 
     */
    @Import(name="lastModifiedTime")
      private final @Nullable Output<String> lastModifiedTime;

    public Output<String> getLastModifiedTime() {
        return this.lastModifiedTime == null ? Output.empty() : this.lastModifiedTime;
    }

    /**
     * The logging
     * configuration that controls how logs are written
     * to your distribution (maximum one).
     * 
     */
    @Import(name="loggingConfig")
      private final @Nullable Output<DistributionLoggingConfigGetArgs> loggingConfig;

    public Output<DistributionLoggingConfigGetArgs> getLoggingConfig() {
        return this.loggingConfig == null ? Output.empty() : this.loggingConfig;
    }

    /**
     * An ordered list of cache behaviors
     * resource for this distribution. List from top to bottom
     * in order of precedence. The topmost cache behavior will have precedence 0.
     * 
     */
    @Import(name="orderedCacheBehaviors")
      private final @Nullable Output<List<DistributionOrderedCacheBehaviorGetArgs>> orderedCacheBehaviors;

    public Output<List<DistributionOrderedCacheBehaviorGetArgs>> getOrderedCacheBehaviors() {
        return this.orderedCacheBehaviors == null ? Output.empty() : this.orderedCacheBehaviors;
    }

    /**
     * One or more origin_group for this
     * distribution (multiples allowed).
     * 
     */
    @Import(name="originGroups")
      private final @Nullable Output<List<DistributionOriginGroupGetArgs>> originGroups;

    public Output<List<DistributionOriginGroupGetArgs>> getOriginGroups() {
        return this.originGroups == null ? Output.empty() : this.originGroups;
    }

    /**
     * One or more origins for this
     * distribution (multiples allowed).
     * 
     */
    @Import(name="origins")
      private final @Nullable Output<List<DistributionOriginGetArgs>> origins;

    public Output<List<DistributionOriginGetArgs>> getOrigins() {
        return this.origins == null ? Output.empty() : this.origins;
    }

    /**
     * The price class for this distribution. One of
     * `PriceClass_All`, `PriceClass_200`, `PriceClass_100`
     * 
     */
    @Import(name="priceClass")
      private final @Nullable Output<String> priceClass;

    public Output<String> getPriceClass() {
        return this.priceClass == null ? Output.empty() : this.priceClass;
    }

    /**
     * The restriction
     * configuration for this distribution (maximum one).
     * 
     */
    @Import(name="restrictions")
      private final @Nullable Output<DistributionRestrictionsGetArgs> restrictions;

    public Output<DistributionRestrictionsGetArgs> getRestrictions() {
        return this.restrictions == null ? Output.empty() : this.restrictions;
    }

    /**
     * Disables the distribution instead of
     * deleting it when destroying the resource. If this is set,
     * the distribution needs to be deleted manually afterwards. Default: `false`.
     * 
     */
    @Import(name="retainOnDelete")
      private final @Nullable Output<Boolean> retainOnDelete;

    public Output<Boolean> getRetainOnDelete() {
        return this.retainOnDelete == null ? Output.empty() : this.retainOnDelete;
    }

    /**
     * The current status of the distribution. `Deployed` if the
     * distribution's information is fully propagated throughout the Amazon
     * CloudFront system.
     * 
     */
    @Import(name="status")
      private final @Nullable Output<String> status;

    public Output<String> getStatus() {
        return this.status == null ? Output.empty() : this.status;
    }

    /**
     * A map of tags to assign to the resource. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Import(name="tags")
      private final @Nullable Output<Map<String,String>> tags;

    public Output<Map<String,String>> getTags() {
        return this.tags == null ? Output.empty() : this.tags;
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider .
     * 
     */
    @Import(name="tagsAll")
      private final @Nullable Output<Map<String,String>> tagsAll;

    public Output<Map<String,String>> getTagsAll() {
        return this.tagsAll == null ? Output.empty() : this.tagsAll;
    }

    /**
     * A list of key group IDs that CloudFront can use to validate signed URLs or signed cookies.
     * See the [CloudFront User Guide](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/private-content-trusted-signers.html) for more information about this feature.
     * 
     */
    @Import(name="trustedKeyGroups")
      private final @Nullable Output<List<DistributionTrustedKeyGroupGetArgs>> trustedKeyGroups;

    public Output<List<DistributionTrustedKeyGroupGetArgs>> getTrustedKeyGroups() {
        return this.trustedKeyGroups == null ? Output.empty() : this.trustedKeyGroups;
    }

    /**
     * List of AWS account IDs (or `self`) that you want to allow to create signed URLs for private content.
     * See the [CloudFront User Guide](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/private-content-trusted-signers.html) for more information about this feature.
     * 
     */
    @Import(name="trustedSigners")
      private final @Nullable Output<List<DistributionTrustedSignerGetArgs>> trustedSigners;

    public Output<List<DistributionTrustedSignerGetArgs>> getTrustedSigners() {
        return this.trustedSigners == null ? Output.empty() : this.trustedSigners;
    }

    /**
     * The SSL
     * configuration for this distribution (maximum
     * one).
     * 
     */
    @Import(name="viewerCertificate")
      private final @Nullable Output<DistributionViewerCertificateGetArgs> viewerCertificate;

    public Output<DistributionViewerCertificateGetArgs> getViewerCertificate() {
        return this.viewerCertificate == null ? Output.empty() : this.viewerCertificate;
    }

    /**
     * If enabled, the resource will wait for
     * the distribution status to change from `InProgress` to `Deployed`. Setting
     * this to`false` will skip the process. Default: `true`.
     * 
     */
    @Import(name="waitForDeployment")
      private final @Nullable Output<Boolean> waitForDeployment;

    public Output<Boolean> getWaitForDeployment() {
        return this.waitForDeployment == null ? Output.empty() : this.waitForDeployment;
    }

    /**
     * A unique identifier that specifies the AWS WAF web ACL,
     * if any, to associate with this distribution.
     * To specify a web ACL created using the latest version of AWS WAF (WAFv2), use the ACL ARN,
     * for example `aws_wafv2_web_acl.example.arn`. To specify a web
     * ACL created using AWS WAF Classic, use the ACL ID, for example `aws_waf_web_acl.example.id`.
     * The WAF Web ACL must exist in the WAF Global (CloudFront) region and the
     * credentials configuring this argument must have `waf:GetWebACL` permissions assigned.
     * 
     */
    @Import(name="webAclId")
      private final @Nullable Output<String> webAclId;

    public Output<String> getWebAclId() {
        return this.webAclId == null ? Output.empty() : this.webAclId;
    }

    public DistributionState(
        @Nullable Output<List<String>> aliases,
        @Nullable Output<String> arn,
        @Nullable Output<String> callerReference,
        @Nullable Output<String> comment,
        @Nullable Output<List<DistributionCustomErrorResponseGetArgs>> customErrorResponses,
        @Nullable Output<DistributionDefaultCacheBehaviorGetArgs> defaultCacheBehavior,
        @Nullable Output<String> defaultRootObject,
        @Nullable Output<String> domainName,
        @Nullable Output<Boolean> enabled,
        @Nullable Output<String> etag,
        @Nullable Output<String> hostedZoneId,
        @Nullable Output<String> httpVersion,
        @Nullable Output<Integer> inProgressValidationBatches,
        @Nullable Output<Boolean> isIpv6Enabled,
        @Nullable Output<String> lastModifiedTime,
        @Nullable Output<DistributionLoggingConfigGetArgs> loggingConfig,
        @Nullable Output<List<DistributionOrderedCacheBehaviorGetArgs>> orderedCacheBehaviors,
        @Nullable Output<List<DistributionOriginGroupGetArgs>> originGroups,
        @Nullable Output<List<DistributionOriginGetArgs>> origins,
        @Nullable Output<String> priceClass,
        @Nullable Output<DistributionRestrictionsGetArgs> restrictions,
        @Nullable Output<Boolean> retainOnDelete,
        @Nullable Output<String> status,
        @Nullable Output<Map<String,String>> tags,
        @Nullable Output<Map<String,String>> tagsAll,
        @Nullable Output<List<DistributionTrustedKeyGroupGetArgs>> trustedKeyGroups,
        @Nullable Output<List<DistributionTrustedSignerGetArgs>> trustedSigners,
        @Nullable Output<DistributionViewerCertificateGetArgs> viewerCertificate,
        @Nullable Output<Boolean> waitForDeployment,
        @Nullable Output<String> webAclId) {
        this.aliases = aliases;
        this.arn = arn;
        this.callerReference = callerReference;
        this.comment = comment;
        this.customErrorResponses = customErrorResponses;
        this.defaultCacheBehavior = defaultCacheBehavior;
        this.defaultRootObject = defaultRootObject;
        this.domainName = domainName;
        this.enabled = enabled;
        this.etag = etag;
        this.hostedZoneId = hostedZoneId;
        this.httpVersion = httpVersion;
        this.inProgressValidationBatches = inProgressValidationBatches;
        this.isIpv6Enabled = isIpv6Enabled;
        this.lastModifiedTime = lastModifiedTime;
        this.loggingConfig = loggingConfig;
        this.orderedCacheBehaviors = orderedCacheBehaviors;
        this.originGroups = originGroups;
        this.origins = origins;
        this.priceClass = priceClass;
        this.restrictions = restrictions;
        this.retainOnDelete = retainOnDelete;
        this.status = status;
        this.tags = tags;
        this.tagsAll = tagsAll;
        this.trustedKeyGroups = trustedKeyGroups;
        this.trustedSigners = trustedSigners;
        this.viewerCertificate = viewerCertificate;
        this.waitForDeployment = waitForDeployment;
        this.webAclId = webAclId;
    }

    private DistributionState() {
        this.aliases = Output.empty();
        this.arn = Output.empty();
        this.callerReference = Output.empty();
        this.comment = Output.empty();
        this.customErrorResponses = Output.empty();
        this.defaultCacheBehavior = Output.empty();
        this.defaultRootObject = Output.empty();
        this.domainName = Output.empty();
        this.enabled = Output.empty();
        this.etag = Output.empty();
        this.hostedZoneId = Output.empty();
        this.httpVersion = Output.empty();
        this.inProgressValidationBatches = Output.empty();
        this.isIpv6Enabled = Output.empty();
        this.lastModifiedTime = Output.empty();
        this.loggingConfig = Output.empty();
        this.orderedCacheBehaviors = Output.empty();
        this.originGroups = Output.empty();
        this.origins = Output.empty();
        this.priceClass = Output.empty();
        this.restrictions = Output.empty();
        this.retainOnDelete = Output.empty();
        this.status = Output.empty();
        this.tags = Output.empty();
        this.tagsAll = Output.empty();
        this.trustedKeyGroups = Output.empty();
        this.trustedSigners = Output.empty();
        this.viewerCertificate = Output.empty();
        this.waitForDeployment = Output.empty();
        this.webAclId = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DistributionState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<List<String>> aliases;
        private @Nullable Output<String> arn;
        private @Nullable Output<String> callerReference;
        private @Nullable Output<String> comment;
        private @Nullable Output<List<DistributionCustomErrorResponseGetArgs>> customErrorResponses;
        private @Nullable Output<DistributionDefaultCacheBehaviorGetArgs> defaultCacheBehavior;
        private @Nullable Output<String> defaultRootObject;
        private @Nullable Output<String> domainName;
        private @Nullable Output<Boolean> enabled;
        private @Nullable Output<String> etag;
        private @Nullable Output<String> hostedZoneId;
        private @Nullable Output<String> httpVersion;
        private @Nullable Output<Integer> inProgressValidationBatches;
        private @Nullable Output<Boolean> isIpv6Enabled;
        private @Nullable Output<String> lastModifiedTime;
        private @Nullable Output<DistributionLoggingConfigGetArgs> loggingConfig;
        private @Nullable Output<List<DistributionOrderedCacheBehaviorGetArgs>> orderedCacheBehaviors;
        private @Nullable Output<List<DistributionOriginGroupGetArgs>> originGroups;
        private @Nullable Output<List<DistributionOriginGetArgs>> origins;
        private @Nullable Output<String> priceClass;
        private @Nullable Output<DistributionRestrictionsGetArgs> restrictions;
        private @Nullable Output<Boolean> retainOnDelete;
        private @Nullable Output<String> status;
        private @Nullable Output<Map<String,String>> tags;
        private @Nullable Output<Map<String,String>> tagsAll;
        private @Nullable Output<List<DistributionTrustedKeyGroupGetArgs>> trustedKeyGroups;
        private @Nullable Output<List<DistributionTrustedSignerGetArgs>> trustedSigners;
        private @Nullable Output<DistributionViewerCertificateGetArgs> viewerCertificate;
        private @Nullable Output<Boolean> waitForDeployment;
        private @Nullable Output<String> webAclId;

        public Builder() {
    	      // Empty
        }

        public Builder(DistributionState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.aliases = defaults.aliases;
    	      this.arn = defaults.arn;
    	      this.callerReference = defaults.callerReference;
    	      this.comment = defaults.comment;
    	      this.customErrorResponses = defaults.customErrorResponses;
    	      this.defaultCacheBehavior = defaults.defaultCacheBehavior;
    	      this.defaultRootObject = defaults.defaultRootObject;
    	      this.domainName = defaults.domainName;
    	      this.enabled = defaults.enabled;
    	      this.etag = defaults.etag;
    	      this.hostedZoneId = defaults.hostedZoneId;
    	      this.httpVersion = defaults.httpVersion;
    	      this.inProgressValidationBatches = defaults.inProgressValidationBatches;
    	      this.isIpv6Enabled = defaults.isIpv6Enabled;
    	      this.lastModifiedTime = defaults.lastModifiedTime;
    	      this.loggingConfig = defaults.loggingConfig;
    	      this.orderedCacheBehaviors = defaults.orderedCacheBehaviors;
    	      this.originGroups = defaults.originGroups;
    	      this.origins = defaults.origins;
    	      this.priceClass = defaults.priceClass;
    	      this.restrictions = defaults.restrictions;
    	      this.retainOnDelete = defaults.retainOnDelete;
    	      this.status = defaults.status;
    	      this.tags = defaults.tags;
    	      this.tagsAll = defaults.tagsAll;
    	      this.trustedKeyGroups = defaults.trustedKeyGroups;
    	      this.trustedSigners = defaults.trustedSigners;
    	      this.viewerCertificate = defaults.viewerCertificate;
    	      this.waitForDeployment = defaults.waitForDeployment;
    	      this.webAclId = defaults.webAclId;
        }

        public Builder aliases(@Nullable Output<List<String>> aliases) {
            this.aliases = aliases;
            return this;
        }
        public Builder aliases(@Nullable List<String> aliases) {
            this.aliases = Output.ofNullable(aliases);
            return this;
        }
        public Builder aliases(String... aliases) {
            return aliases(List.of(aliases));
        }
        public Builder arn(@Nullable Output<String> arn) {
            this.arn = arn;
            return this;
        }
        public Builder arn(@Nullable String arn) {
            this.arn = Output.ofNullable(arn);
            return this;
        }
        public Builder callerReference(@Nullable Output<String> callerReference) {
            this.callerReference = callerReference;
            return this;
        }
        public Builder callerReference(@Nullable String callerReference) {
            this.callerReference = Output.ofNullable(callerReference);
            return this;
        }
        public Builder comment(@Nullable Output<String> comment) {
            this.comment = comment;
            return this;
        }
        public Builder comment(@Nullable String comment) {
            this.comment = Output.ofNullable(comment);
            return this;
        }
        public Builder customErrorResponses(@Nullable Output<List<DistributionCustomErrorResponseGetArgs>> customErrorResponses) {
            this.customErrorResponses = customErrorResponses;
            return this;
        }
        public Builder customErrorResponses(@Nullable List<DistributionCustomErrorResponseGetArgs> customErrorResponses) {
            this.customErrorResponses = Output.ofNullable(customErrorResponses);
            return this;
        }
        public Builder customErrorResponses(DistributionCustomErrorResponseGetArgs... customErrorResponses) {
            return customErrorResponses(List.of(customErrorResponses));
        }
        public Builder defaultCacheBehavior(@Nullable Output<DistributionDefaultCacheBehaviorGetArgs> defaultCacheBehavior) {
            this.defaultCacheBehavior = defaultCacheBehavior;
            return this;
        }
        public Builder defaultCacheBehavior(@Nullable DistributionDefaultCacheBehaviorGetArgs defaultCacheBehavior) {
            this.defaultCacheBehavior = Output.ofNullable(defaultCacheBehavior);
            return this;
        }
        public Builder defaultRootObject(@Nullable Output<String> defaultRootObject) {
            this.defaultRootObject = defaultRootObject;
            return this;
        }
        public Builder defaultRootObject(@Nullable String defaultRootObject) {
            this.defaultRootObject = Output.ofNullable(defaultRootObject);
            return this;
        }
        public Builder domainName(@Nullable Output<String> domainName) {
            this.domainName = domainName;
            return this;
        }
        public Builder domainName(@Nullable String domainName) {
            this.domainName = Output.ofNullable(domainName);
            return this;
        }
        public Builder enabled(@Nullable Output<Boolean> enabled) {
            this.enabled = enabled;
            return this;
        }
        public Builder enabled(@Nullable Boolean enabled) {
            this.enabled = Output.ofNullable(enabled);
            return this;
        }
        public Builder etag(@Nullable Output<String> etag) {
            this.etag = etag;
            return this;
        }
        public Builder etag(@Nullable String etag) {
            this.etag = Output.ofNullable(etag);
            return this;
        }
        public Builder hostedZoneId(@Nullable Output<String> hostedZoneId) {
            this.hostedZoneId = hostedZoneId;
            return this;
        }
        public Builder hostedZoneId(@Nullable String hostedZoneId) {
            this.hostedZoneId = Output.ofNullable(hostedZoneId);
            return this;
        }
        public Builder httpVersion(@Nullable Output<String> httpVersion) {
            this.httpVersion = httpVersion;
            return this;
        }
        public Builder httpVersion(@Nullable String httpVersion) {
            this.httpVersion = Output.ofNullable(httpVersion);
            return this;
        }
        public Builder inProgressValidationBatches(@Nullable Output<Integer> inProgressValidationBatches) {
            this.inProgressValidationBatches = inProgressValidationBatches;
            return this;
        }
        public Builder inProgressValidationBatches(@Nullable Integer inProgressValidationBatches) {
            this.inProgressValidationBatches = Output.ofNullable(inProgressValidationBatches);
            return this;
        }
        public Builder isIpv6Enabled(@Nullable Output<Boolean> isIpv6Enabled) {
            this.isIpv6Enabled = isIpv6Enabled;
            return this;
        }
        public Builder isIpv6Enabled(@Nullable Boolean isIpv6Enabled) {
            this.isIpv6Enabled = Output.ofNullable(isIpv6Enabled);
            return this;
        }
        public Builder lastModifiedTime(@Nullable Output<String> lastModifiedTime) {
            this.lastModifiedTime = lastModifiedTime;
            return this;
        }
        public Builder lastModifiedTime(@Nullable String lastModifiedTime) {
            this.lastModifiedTime = Output.ofNullable(lastModifiedTime);
            return this;
        }
        public Builder loggingConfig(@Nullable Output<DistributionLoggingConfigGetArgs> loggingConfig) {
            this.loggingConfig = loggingConfig;
            return this;
        }
        public Builder loggingConfig(@Nullable DistributionLoggingConfigGetArgs loggingConfig) {
            this.loggingConfig = Output.ofNullable(loggingConfig);
            return this;
        }
        public Builder orderedCacheBehaviors(@Nullable Output<List<DistributionOrderedCacheBehaviorGetArgs>> orderedCacheBehaviors) {
            this.orderedCacheBehaviors = orderedCacheBehaviors;
            return this;
        }
        public Builder orderedCacheBehaviors(@Nullable List<DistributionOrderedCacheBehaviorGetArgs> orderedCacheBehaviors) {
            this.orderedCacheBehaviors = Output.ofNullable(orderedCacheBehaviors);
            return this;
        }
        public Builder orderedCacheBehaviors(DistributionOrderedCacheBehaviorGetArgs... orderedCacheBehaviors) {
            return orderedCacheBehaviors(List.of(orderedCacheBehaviors));
        }
        public Builder originGroups(@Nullable Output<List<DistributionOriginGroupGetArgs>> originGroups) {
            this.originGroups = originGroups;
            return this;
        }
        public Builder originGroups(@Nullable List<DistributionOriginGroupGetArgs> originGroups) {
            this.originGroups = Output.ofNullable(originGroups);
            return this;
        }
        public Builder originGroups(DistributionOriginGroupGetArgs... originGroups) {
            return originGroups(List.of(originGroups));
        }
        public Builder origins(@Nullable Output<List<DistributionOriginGetArgs>> origins) {
            this.origins = origins;
            return this;
        }
        public Builder origins(@Nullable List<DistributionOriginGetArgs> origins) {
            this.origins = Output.ofNullable(origins);
            return this;
        }
        public Builder origins(DistributionOriginGetArgs... origins) {
            return origins(List.of(origins));
        }
        public Builder priceClass(@Nullable Output<String> priceClass) {
            this.priceClass = priceClass;
            return this;
        }
        public Builder priceClass(@Nullable String priceClass) {
            this.priceClass = Output.ofNullable(priceClass);
            return this;
        }
        public Builder restrictions(@Nullable Output<DistributionRestrictionsGetArgs> restrictions) {
            this.restrictions = restrictions;
            return this;
        }
        public Builder restrictions(@Nullable DistributionRestrictionsGetArgs restrictions) {
            this.restrictions = Output.ofNullable(restrictions);
            return this;
        }
        public Builder retainOnDelete(@Nullable Output<Boolean> retainOnDelete) {
            this.retainOnDelete = retainOnDelete;
            return this;
        }
        public Builder retainOnDelete(@Nullable Boolean retainOnDelete) {
            this.retainOnDelete = Output.ofNullable(retainOnDelete);
            return this;
        }
        public Builder status(@Nullable Output<String> status) {
            this.status = status;
            return this;
        }
        public Builder status(@Nullable String status) {
            this.status = Output.ofNullable(status);
            return this;
        }
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = Output.ofNullable(tags);
            return this;
        }
        public Builder tagsAll(@Nullable Output<Map<String,String>> tagsAll) {
            this.tagsAll = tagsAll;
            return this;
        }
        public Builder tagsAll(@Nullable Map<String,String> tagsAll) {
            this.tagsAll = Output.ofNullable(tagsAll);
            return this;
        }
        public Builder trustedKeyGroups(@Nullable Output<List<DistributionTrustedKeyGroupGetArgs>> trustedKeyGroups) {
            this.trustedKeyGroups = trustedKeyGroups;
            return this;
        }
        public Builder trustedKeyGroups(@Nullable List<DistributionTrustedKeyGroupGetArgs> trustedKeyGroups) {
            this.trustedKeyGroups = Output.ofNullable(trustedKeyGroups);
            return this;
        }
        public Builder trustedKeyGroups(DistributionTrustedKeyGroupGetArgs... trustedKeyGroups) {
            return trustedKeyGroups(List.of(trustedKeyGroups));
        }
        public Builder trustedSigners(@Nullable Output<List<DistributionTrustedSignerGetArgs>> trustedSigners) {
            this.trustedSigners = trustedSigners;
            return this;
        }
        public Builder trustedSigners(@Nullable List<DistributionTrustedSignerGetArgs> trustedSigners) {
            this.trustedSigners = Output.ofNullable(trustedSigners);
            return this;
        }
        public Builder trustedSigners(DistributionTrustedSignerGetArgs... trustedSigners) {
            return trustedSigners(List.of(trustedSigners));
        }
        public Builder viewerCertificate(@Nullable Output<DistributionViewerCertificateGetArgs> viewerCertificate) {
            this.viewerCertificate = viewerCertificate;
            return this;
        }
        public Builder viewerCertificate(@Nullable DistributionViewerCertificateGetArgs viewerCertificate) {
            this.viewerCertificate = Output.ofNullable(viewerCertificate);
            return this;
        }
        public Builder waitForDeployment(@Nullable Output<Boolean> waitForDeployment) {
            this.waitForDeployment = waitForDeployment;
            return this;
        }
        public Builder waitForDeployment(@Nullable Boolean waitForDeployment) {
            this.waitForDeployment = Output.ofNullable(waitForDeployment);
            return this;
        }
        public Builder webAclId(@Nullable Output<String> webAclId) {
            this.webAclId = webAclId;
            return this;
        }
        public Builder webAclId(@Nullable String webAclId) {
            this.webAclId = Output.ofNullable(webAclId);
            return this;
        }        public DistributionState build() {
            return new DistributionState(aliases, arn, callerReference, comment, customErrorResponses, defaultCacheBehavior, defaultRootObject, domainName, enabled, etag, hostedZoneId, httpVersion, inProgressValidationBatches, isIpv6Enabled, lastModifiedTime, loggingConfig, orderedCacheBehaviors, originGroups, origins, priceClass, restrictions, retainOnDelete, status, tags, tagsAll, trustedKeyGroups, trustedSigners, viewerCertificate, waitForDeployment, webAclId);
        }
    }
}
