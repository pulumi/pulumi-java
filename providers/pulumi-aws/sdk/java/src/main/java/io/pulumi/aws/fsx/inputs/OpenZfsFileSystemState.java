// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.fsx.inputs;

import io.pulumi.aws.fsx.inputs.OpenZfsFileSystemDiskIopsConfigurationGetArgs;
import io.pulumi.aws.fsx.inputs.OpenZfsFileSystemRootVolumeConfigurationGetArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class OpenZfsFileSystemState extends io.pulumi.resources.ResourceArgs {

    public static final OpenZfsFileSystemState Empty = new OpenZfsFileSystemState();

    /**
     * Amazon Resource Name of the file system.
     * 
     */
    @Import(name="arn")
      private final @Nullable Output<String> arn;

    public Output<String> getArn() {
        return this.arn == null ? Codegen.empty() : this.arn;
    }

    /**
     * The number of days to retain automatic backups. Setting this to 0 disables automatic backups. You can retain automatic backups for a maximum of 90 days.
     * 
     */
    @Import(name="automaticBackupRetentionDays")
      private final @Nullable Output<Integer> automaticBackupRetentionDays;

    public Output<Integer> getAutomaticBackupRetentionDays() {
        return this.automaticBackupRetentionDays == null ? Codegen.empty() : this.automaticBackupRetentionDays;
    }

    /**
     * The ID of the source backup to create the filesystem from.
     * 
     */
    @Import(name="backupId")
      private final @Nullable Output<String> backupId;

    public Output<String> getBackupId() {
        return this.backupId == null ? Codegen.empty() : this.backupId;
    }

    /**
     * A boolean flag indicating whether tags for the file system should be copied to backups. The default value is false.
     * 
     */
    @Import(name="copyTagsToBackups")
      private final @Nullable Output<Boolean> copyTagsToBackups;

    public Output<Boolean> getCopyTagsToBackups() {
        return this.copyTagsToBackups == null ? Codegen.empty() : this.copyTagsToBackups;
    }

    /**
     * A boolean flag indicating whether tags for the file system should be copied to snapshots. The default value is false.
     * 
     */
    @Import(name="copyTagsToVolumes")
      private final @Nullable Output<Boolean> copyTagsToVolumes;

    public Output<Boolean> getCopyTagsToVolumes() {
        return this.copyTagsToVolumes == null ? Codegen.empty() : this.copyTagsToVolumes;
    }

    /**
     * A recurring daily time, in the format HH:MM. HH is the zero-padded hour of the day (0-23), and MM is the zero-padded minute of the hour. For example, 05:00 specifies 5 AM daily. Requires `automatic_backup_retention_days` to be set.
     * 
     */
    @Import(name="dailyAutomaticBackupStartTime")
      private final @Nullable Output<String> dailyAutomaticBackupStartTime;

    public Output<String> getDailyAutomaticBackupStartTime() {
        return this.dailyAutomaticBackupStartTime == null ? Codegen.empty() : this.dailyAutomaticBackupStartTime;
    }

    /**
     * - The filesystem deployment type. Only `SINGLE_AZ_1` is supported.
     * 
     */
    @Import(name="deploymentType")
      private final @Nullable Output<String> deploymentType;

    public Output<String> getDeploymentType() {
        return this.deploymentType == null ? Codegen.empty() : this.deploymentType;
    }

    /**
     * The SSD IOPS configuration for the Amazon FSx for OpenZFS file system. See Disk Iops Configuration Below.
     * 
     */
    @Import(name="diskIopsConfiguration")
      private final @Nullable Output<OpenZfsFileSystemDiskIopsConfigurationGetArgs> diskIopsConfiguration;

    public Output<OpenZfsFileSystemDiskIopsConfigurationGetArgs> getDiskIopsConfiguration() {
        return this.diskIopsConfiguration == null ? Codegen.empty() : this.diskIopsConfiguration;
    }

    /**
     * DNS name for the file system, e.g., `fs-12345678.fsx.us-west-2.amazonaws.com`
     * 
     */
    @Import(name="dnsName")
      private final @Nullable Output<String> dnsName;

    public Output<String> getDnsName() {
        return this.dnsName == null ? Codegen.empty() : this.dnsName;
    }

    /**
     * ARN for the KMS Key to encrypt the file system at rest, Defaults to an AWS managed KMS Key.
     * 
     */
    @Import(name="kmsKeyId")
      private final @Nullable Output<String> kmsKeyId;

    public Output<String> getKmsKeyId() {
        return this.kmsKeyId == null ? Codegen.empty() : this.kmsKeyId;
    }

    /**
     * Set of Elastic Network Interface identifiers from which the file system is accessible The first network interface returned is the primary network interface.
     * 
     */
    @Import(name="networkInterfaceIds")
      private final @Nullable Output<List<String>> networkInterfaceIds;

    public Output<List<String>> getNetworkInterfaceIds() {
        return this.networkInterfaceIds == null ? Codegen.empty() : this.networkInterfaceIds;
    }

    /**
     * AWS account identifier that created the file system.
     * 
     */
    @Import(name="ownerId")
      private final @Nullable Output<String> ownerId;

    public Output<String> getOwnerId() {
        return this.ownerId == null ? Codegen.empty() : this.ownerId;
    }

    /**
     * The configuration for the root volume of the file system. All other volumes are children or the root volume. See Root Volume Configuration Below.
     * 
     */
    @Import(name="rootVolumeConfiguration")
      private final @Nullable Output<OpenZfsFileSystemRootVolumeConfigurationGetArgs> rootVolumeConfiguration;

    public Output<OpenZfsFileSystemRootVolumeConfigurationGetArgs> getRootVolumeConfiguration() {
        return this.rootVolumeConfiguration == null ? Codegen.empty() : this.rootVolumeConfiguration;
    }

    /**
     * Identifier of the root volume, e.g., `fsvol-12345678`
     * 
     */
    @Import(name="rootVolumeId")
      private final @Nullable Output<String> rootVolumeId;

    public Output<String> getRootVolumeId() {
        return this.rootVolumeId == null ? Codegen.empty() : this.rootVolumeId;
    }

    /**
     * A list of IDs for the security groups that apply to the specified network interfaces created for file system access. These security groups will apply to all network interfaces.
     * 
     */
    @Import(name="securityGroupIds")
      private final @Nullable Output<List<String>> securityGroupIds;

    public Output<List<String>> getSecurityGroupIds() {
        return this.securityGroupIds == null ? Codegen.empty() : this.securityGroupIds;
    }

    /**
     * The storage capacity (GiB) of the file system. Valid values between `64` and `524288`.
     * 
     */
    @Import(name="storageCapacity")
      private final @Nullable Output<Integer> storageCapacity;

    public Output<Integer> getStorageCapacity() {
        return this.storageCapacity == null ? Codegen.empty() : this.storageCapacity;
    }

    /**
     * The filesystem storage type. Only `SSD` is supported.
     * 
     */
    @Import(name="storageType")
      private final @Nullable Output<String> storageType;

    public Output<String> getStorageType() {
        return this.storageType == null ? Codegen.empty() : this.storageType;
    }

    /**
     * A list of IDs for the subnets that the file system will be accessible from. Exactly 1 subnet need to be provided.
     * 
     */
    @Import(name="subnetIds")
      private final @Nullable Output<String> subnetIds;

    public Output<String> getSubnetIds() {
        return this.subnetIds == null ? Codegen.empty() : this.subnetIds;
    }

    /**
     * A map of tags to assign to the file system. If configured with a provider [`default_tags` configuration block](https://www.terraform.io/docs/providers/aws/index.html#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Import(name="tags")
      private final @Nullable Output<Map<String,String>> tags;

    public Output<Map<String,String>> getTags() {
        return this.tags == null ? Codegen.empty() : this.tags;
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider [`default_tags` configuration block](https://www.terraform.io/docs/providers/aws/index.html#default_tags-configuration-block).
     * 
     */
    @Import(name="tagsAll")
      private final @Nullable Output<Map<String,String>> tagsAll;

    public Output<Map<String,String>> getTagsAll() {
        return this.tagsAll == null ? Codegen.empty() : this.tagsAll;
    }

    /**
     * Throughput (megabytes per second) of the file system in power of 2 increments. Minimum of `64` and maximum of `4096`.
     * 
     */
    @Import(name="throughputCapacity")
      private final @Nullable Output<Integer> throughputCapacity;

    public Output<Integer> getThroughputCapacity() {
        return this.throughputCapacity == null ? Codegen.empty() : this.throughputCapacity;
    }

    /**
     * Identifier of the Virtual Private Cloud for the file system.
     * 
     */
    @Import(name="vpcId")
      private final @Nullable Output<String> vpcId;

    public Output<String> getVpcId() {
        return this.vpcId == null ? Codegen.empty() : this.vpcId;
    }

    /**
     * The preferred start time (in `d:HH:MM` format) to perform weekly maintenance, in the UTC time zone.
     * 
     */
    @Import(name="weeklyMaintenanceStartTime")
      private final @Nullable Output<String> weeklyMaintenanceStartTime;

    public Output<String> getWeeklyMaintenanceStartTime() {
        return this.weeklyMaintenanceStartTime == null ? Codegen.empty() : this.weeklyMaintenanceStartTime;
    }

    public OpenZfsFileSystemState(
        @Nullable Output<String> arn,
        @Nullable Output<Integer> automaticBackupRetentionDays,
        @Nullable Output<String> backupId,
        @Nullable Output<Boolean> copyTagsToBackups,
        @Nullable Output<Boolean> copyTagsToVolumes,
        @Nullable Output<String> dailyAutomaticBackupStartTime,
        @Nullable Output<String> deploymentType,
        @Nullable Output<OpenZfsFileSystemDiskIopsConfigurationGetArgs> diskIopsConfiguration,
        @Nullable Output<String> dnsName,
        @Nullable Output<String> kmsKeyId,
        @Nullable Output<List<String>> networkInterfaceIds,
        @Nullable Output<String> ownerId,
        @Nullable Output<OpenZfsFileSystemRootVolumeConfigurationGetArgs> rootVolumeConfiguration,
        @Nullable Output<String> rootVolumeId,
        @Nullable Output<List<String>> securityGroupIds,
        @Nullable Output<Integer> storageCapacity,
        @Nullable Output<String> storageType,
        @Nullable Output<String> subnetIds,
        @Nullable Output<Map<String,String>> tags,
        @Nullable Output<Map<String,String>> tagsAll,
        @Nullable Output<Integer> throughputCapacity,
        @Nullable Output<String> vpcId,
        @Nullable Output<String> weeklyMaintenanceStartTime) {
        this.arn = arn;
        this.automaticBackupRetentionDays = automaticBackupRetentionDays;
        this.backupId = backupId;
        this.copyTagsToBackups = copyTagsToBackups;
        this.copyTagsToVolumes = copyTagsToVolumes;
        this.dailyAutomaticBackupStartTime = dailyAutomaticBackupStartTime;
        this.deploymentType = deploymentType;
        this.diskIopsConfiguration = diskIopsConfiguration;
        this.dnsName = dnsName;
        this.kmsKeyId = kmsKeyId;
        this.networkInterfaceIds = networkInterfaceIds;
        this.ownerId = ownerId;
        this.rootVolumeConfiguration = rootVolumeConfiguration;
        this.rootVolumeId = rootVolumeId;
        this.securityGroupIds = securityGroupIds;
        this.storageCapacity = storageCapacity;
        this.storageType = storageType;
        this.subnetIds = subnetIds;
        this.tags = tags;
        this.tagsAll = tagsAll;
        this.throughputCapacity = throughputCapacity;
        this.vpcId = vpcId;
        this.weeklyMaintenanceStartTime = weeklyMaintenanceStartTime;
    }

    private OpenZfsFileSystemState() {
        this.arn = Codegen.empty();
        this.automaticBackupRetentionDays = Codegen.empty();
        this.backupId = Codegen.empty();
        this.copyTagsToBackups = Codegen.empty();
        this.copyTagsToVolumes = Codegen.empty();
        this.dailyAutomaticBackupStartTime = Codegen.empty();
        this.deploymentType = Codegen.empty();
        this.diskIopsConfiguration = Codegen.empty();
        this.dnsName = Codegen.empty();
        this.kmsKeyId = Codegen.empty();
        this.networkInterfaceIds = Codegen.empty();
        this.ownerId = Codegen.empty();
        this.rootVolumeConfiguration = Codegen.empty();
        this.rootVolumeId = Codegen.empty();
        this.securityGroupIds = Codegen.empty();
        this.storageCapacity = Codegen.empty();
        this.storageType = Codegen.empty();
        this.subnetIds = Codegen.empty();
        this.tags = Codegen.empty();
        this.tagsAll = Codegen.empty();
        this.throughputCapacity = Codegen.empty();
        this.vpcId = Codegen.empty();
        this.weeklyMaintenanceStartTime = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(OpenZfsFileSystemState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> arn;
        private @Nullable Output<Integer> automaticBackupRetentionDays;
        private @Nullable Output<String> backupId;
        private @Nullable Output<Boolean> copyTagsToBackups;
        private @Nullable Output<Boolean> copyTagsToVolumes;
        private @Nullable Output<String> dailyAutomaticBackupStartTime;
        private @Nullable Output<String> deploymentType;
        private @Nullable Output<OpenZfsFileSystemDiskIopsConfigurationGetArgs> diskIopsConfiguration;
        private @Nullable Output<String> dnsName;
        private @Nullable Output<String> kmsKeyId;
        private @Nullable Output<List<String>> networkInterfaceIds;
        private @Nullable Output<String> ownerId;
        private @Nullable Output<OpenZfsFileSystemRootVolumeConfigurationGetArgs> rootVolumeConfiguration;
        private @Nullable Output<String> rootVolumeId;
        private @Nullable Output<List<String>> securityGroupIds;
        private @Nullable Output<Integer> storageCapacity;
        private @Nullable Output<String> storageType;
        private @Nullable Output<String> subnetIds;
        private @Nullable Output<Map<String,String>> tags;
        private @Nullable Output<Map<String,String>> tagsAll;
        private @Nullable Output<Integer> throughputCapacity;
        private @Nullable Output<String> vpcId;
        private @Nullable Output<String> weeklyMaintenanceStartTime;

        public Builder() {
    	      // Empty
        }

        public Builder(OpenZfsFileSystemState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.automaticBackupRetentionDays = defaults.automaticBackupRetentionDays;
    	      this.backupId = defaults.backupId;
    	      this.copyTagsToBackups = defaults.copyTagsToBackups;
    	      this.copyTagsToVolumes = defaults.copyTagsToVolumes;
    	      this.dailyAutomaticBackupStartTime = defaults.dailyAutomaticBackupStartTime;
    	      this.deploymentType = defaults.deploymentType;
    	      this.diskIopsConfiguration = defaults.diskIopsConfiguration;
    	      this.dnsName = defaults.dnsName;
    	      this.kmsKeyId = defaults.kmsKeyId;
    	      this.networkInterfaceIds = defaults.networkInterfaceIds;
    	      this.ownerId = defaults.ownerId;
    	      this.rootVolumeConfiguration = defaults.rootVolumeConfiguration;
    	      this.rootVolumeId = defaults.rootVolumeId;
    	      this.securityGroupIds = defaults.securityGroupIds;
    	      this.storageCapacity = defaults.storageCapacity;
    	      this.storageType = defaults.storageType;
    	      this.subnetIds = defaults.subnetIds;
    	      this.tags = defaults.tags;
    	      this.tagsAll = defaults.tagsAll;
    	      this.throughputCapacity = defaults.throughputCapacity;
    	      this.vpcId = defaults.vpcId;
    	      this.weeklyMaintenanceStartTime = defaults.weeklyMaintenanceStartTime;
        }

        public Builder arn(@Nullable Output<String> arn) {
            this.arn = arn;
            return this;
        }
        public Builder arn(@Nullable String arn) {
            this.arn = Codegen.ofNullable(arn);
            return this;
        }
        public Builder automaticBackupRetentionDays(@Nullable Output<Integer> automaticBackupRetentionDays) {
            this.automaticBackupRetentionDays = automaticBackupRetentionDays;
            return this;
        }
        public Builder automaticBackupRetentionDays(@Nullable Integer automaticBackupRetentionDays) {
            this.automaticBackupRetentionDays = Codegen.ofNullable(automaticBackupRetentionDays);
            return this;
        }
        public Builder backupId(@Nullable Output<String> backupId) {
            this.backupId = backupId;
            return this;
        }
        public Builder backupId(@Nullable String backupId) {
            this.backupId = Codegen.ofNullable(backupId);
            return this;
        }
        public Builder copyTagsToBackups(@Nullable Output<Boolean> copyTagsToBackups) {
            this.copyTagsToBackups = copyTagsToBackups;
            return this;
        }
        public Builder copyTagsToBackups(@Nullable Boolean copyTagsToBackups) {
            this.copyTagsToBackups = Codegen.ofNullable(copyTagsToBackups);
            return this;
        }
        public Builder copyTagsToVolumes(@Nullable Output<Boolean> copyTagsToVolumes) {
            this.copyTagsToVolumes = copyTagsToVolumes;
            return this;
        }
        public Builder copyTagsToVolumes(@Nullable Boolean copyTagsToVolumes) {
            this.copyTagsToVolumes = Codegen.ofNullable(copyTagsToVolumes);
            return this;
        }
        public Builder dailyAutomaticBackupStartTime(@Nullable Output<String> dailyAutomaticBackupStartTime) {
            this.dailyAutomaticBackupStartTime = dailyAutomaticBackupStartTime;
            return this;
        }
        public Builder dailyAutomaticBackupStartTime(@Nullable String dailyAutomaticBackupStartTime) {
            this.dailyAutomaticBackupStartTime = Codegen.ofNullable(dailyAutomaticBackupStartTime);
            return this;
        }
        public Builder deploymentType(@Nullable Output<String> deploymentType) {
            this.deploymentType = deploymentType;
            return this;
        }
        public Builder deploymentType(@Nullable String deploymentType) {
            this.deploymentType = Codegen.ofNullable(deploymentType);
            return this;
        }
        public Builder diskIopsConfiguration(@Nullable Output<OpenZfsFileSystemDiskIopsConfigurationGetArgs> diskIopsConfiguration) {
            this.diskIopsConfiguration = diskIopsConfiguration;
            return this;
        }
        public Builder diskIopsConfiguration(@Nullable OpenZfsFileSystemDiskIopsConfigurationGetArgs diskIopsConfiguration) {
            this.diskIopsConfiguration = Codegen.ofNullable(diskIopsConfiguration);
            return this;
        }
        public Builder dnsName(@Nullable Output<String> dnsName) {
            this.dnsName = dnsName;
            return this;
        }
        public Builder dnsName(@Nullable String dnsName) {
            this.dnsName = Codegen.ofNullable(dnsName);
            return this;
        }
        public Builder kmsKeyId(@Nullable Output<String> kmsKeyId) {
            this.kmsKeyId = kmsKeyId;
            return this;
        }
        public Builder kmsKeyId(@Nullable String kmsKeyId) {
            this.kmsKeyId = Codegen.ofNullable(kmsKeyId);
            return this;
        }
        public Builder networkInterfaceIds(@Nullable Output<List<String>> networkInterfaceIds) {
            this.networkInterfaceIds = networkInterfaceIds;
            return this;
        }
        public Builder networkInterfaceIds(@Nullable List<String> networkInterfaceIds) {
            this.networkInterfaceIds = Codegen.ofNullable(networkInterfaceIds);
            return this;
        }
        public Builder networkInterfaceIds(String... networkInterfaceIds) {
            return networkInterfaceIds(List.of(networkInterfaceIds));
        }
        public Builder ownerId(@Nullable Output<String> ownerId) {
            this.ownerId = ownerId;
            return this;
        }
        public Builder ownerId(@Nullable String ownerId) {
            this.ownerId = Codegen.ofNullable(ownerId);
            return this;
        }
        public Builder rootVolumeConfiguration(@Nullable Output<OpenZfsFileSystemRootVolumeConfigurationGetArgs> rootVolumeConfiguration) {
            this.rootVolumeConfiguration = rootVolumeConfiguration;
            return this;
        }
        public Builder rootVolumeConfiguration(@Nullable OpenZfsFileSystemRootVolumeConfigurationGetArgs rootVolumeConfiguration) {
            this.rootVolumeConfiguration = Codegen.ofNullable(rootVolumeConfiguration);
            return this;
        }
        public Builder rootVolumeId(@Nullable Output<String> rootVolumeId) {
            this.rootVolumeId = rootVolumeId;
            return this;
        }
        public Builder rootVolumeId(@Nullable String rootVolumeId) {
            this.rootVolumeId = Codegen.ofNullable(rootVolumeId);
            return this;
        }
        public Builder securityGroupIds(@Nullable Output<List<String>> securityGroupIds) {
            this.securityGroupIds = securityGroupIds;
            return this;
        }
        public Builder securityGroupIds(@Nullable List<String> securityGroupIds) {
            this.securityGroupIds = Codegen.ofNullable(securityGroupIds);
            return this;
        }
        public Builder securityGroupIds(String... securityGroupIds) {
            return securityGroupIds(List.of(securityGroupIds));
        }
        public Builder storageCapacity(@Nullable Output<Integer> storageCapacity) {
            this.storageCapacity = storageCapacity;
            return this;
        }
        public Builder storageCapacity(@Nullable Integer storageCapacity) {
            this.storageCapacity = Codegen.ofNullable(storageCapacity);
            return this;
        }
        public Builder storageType(@Nullable Output<String> storageType) {
            this.storageType = storageType;
            return this;
        }
        public Builder storageType(@Nullable String storageType) {
            this.storageType = Codegen.ofNullable(storageType);
            return this;
        }
        public Builder subnetIds(@Nullable Output<String> subnetIds) {
            this.subnetIds = subnetIds;
            return this;
        }
        public Builder subnetIds(@Nullable String subnetIds) {
            this.subnetIds = Codegen.ofNullable(subnetIds);
            return this;
        }
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = Codegen.ofNullable(tags);
            return this;
        }
        public Builder tagsAll(@Nullable Output<Map<String,String>> tagsAll) {
            this.tagsAll = tagsAll;
            return this;
        }
        public Builder tagsAll(@Nullable Map<String,String> tagsAll) {
            this.tagsAll = Codegen.ofNullable(tagsAll);
            return this;
        }
        public Builder throughputCapacity(@Nullable Output<Integer> throughputCapacity) {
            this.throughputCapacity = throughputCapacity;
            return this;
        }
        public Builder throughputCapacity(@Nullable Integer throughputCapacity) {
            this.throughputCapacity = Codegen.ofNullable(throughputCapacity);
            return this;
        }
        public Builder vpcId(@Nullable Output<String> vpcId) {
            this.vpcId = vpcId;
            return this;
        }
        public Builder vpcId(@Nullable String vpcId) {
            this.vpcId = Codegen.ofNullable(vpcId);
            return this;
        }
        public Builder weeklyMaintenanceStartTime(@Nullable Output<String> weeklyMaintenanceStartTime) {
            this.weeklyMaintenanceStartTime = weeklyMaintenanceStartTime;
            return this;
        }
        public Builder weeklyMaintenanceStartTime(@Nullable String weeklyMaintenanceStartTime) {
            this.weeklyMaintenanceStartTime = Codegen.ofNullable(weeklyMaintenanceStartTime);
            return this;
        }        public OpenZfsFileSystemState build() {
            return new OpenZfsFileSystemState(arn, automaticBackupRetentionDays, backupId, copyTagsToBackups, copyTagsToVolumes, dailyAutomaticBackupStartTime, deploymentType, diskIopsConfiguration, dnsName, kmsKeyId, networkInterfaceIds, ownerId, rootVolumeConfiguration, rootVolumeId, securityGroupIds, storageCapacity, storageType, subnetIds, tags, tagsAll, throughputCapacity, vpcId, weeklyMaintenanceStartTime);
        }
    }
}
