// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.devicefarm.inputs;

import io.pulumi.aws.devicefarm.inputs.DevicePoolRuleGetArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class DevicePoolState extends io.pulumi.resources.ResourceArgs {

    public static final DevicePoolState Empty = new DevicePoolState();

    /**
     * The Amazon Resource Name of this Device Pool
     * 
     */
    @Import(name="arn")
      private final @Nullable Output<String> arn;

    public Output<String> getArn() {
        return this.arn == null ? Output.empty() : this.arn;
    }

    /**
     * The device pool's description.
     * 
     */
    @Import(name="description")
      private final @Nullable Output<String> description;

    public Output<String> getDescription() {
        return this.description == null ? Output.empty() : this.description;
    }

    /**
     * The number of devices that Device Farm can add to your device pool.
     * 
     */
    @Import(name="maxDevices")
      private final @Nullable Output<Integer> maxDevices;

    public Output<Integer> getMaxDevices() {
        return this.maxDevices == null ? Output.empty() : this.maxDevices;
    }

    /**
     * The name of the Device Pool
     * 
     */
    @Import(name="name")
      private final @Nullable Output<String> name;

    public Output<String> getName() {
        return this.name == null ? Output.empty() : this.name;
    }

    /**
     * The ARN of the project for the device pool.
     * 
     */
    @Import(name="projectArn")
      private final @Nullable Output<String> projectArn;

    public Output<String> getProjectArn() {
        return this.projectArn == null ? Output.empty() : this.projectArn;
    }

    /**
     * The device pool's rules. See Rule.
     * 
     */
    @Import(name="rules")
      private final @Nullable Output<List<DevicePoolRuleGetArgs>> rules;

    public Output<List<DevicePoolRuleGetArgs>> getRules() {
        return this.rules == null ? Output.empty() : this.rules;
    }

    /**
     * A map of tags to assign to the resource. If configured with a provider [`default_tags` configuration block](https://www.terraform.io/docs/providers/aws/index.html#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Import(name="tags")
      private final @Nullable Output<Map<String,String>> tags;

    public Output<Map<String,String>> getTags() {
        return this.tags == null ? Output.empty() : this.tags;
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider [`default_tags` configuration block](https://www.terraform.io/docs/providers/aws/index.html#default_tags-configuration-block).
     * 
     */
    @Import(name="tagsAll")
      private final @Nullable Output<Map<String,String>> tagsAll;

    public Output<Map<String,String>> getTagsAll() {
        return this.tagsAll == null ? Output.empty() : this.tagsAll;
    }

    @Import(name="type")
      private final @Nullable Output<String> type;

    public Output<String> getType() {
        return this.type == null ? Output.empty() : this.type;
    }

    public DevicePoolState(
        @Nullable Output<String> arn,
        @Nullable Output<String> description,
        @Nullable Output<Integer> maxDevices,
        @Nullable Output<String> name,
        @Nullable Output<String> projectArn,
        @Nullable Output<List<DevicePoolRuleGetArgs>> rules,
        @Nullable Output<Map<String,String>> tags,
        @Nullable Output<Map<String,String>> tagsAll,
        @Nullable Output<String> type) {
        this.arn = arn;
        this.description = description;
        this.maxDevices = maxDevices;
        this.name = name;
        this.projectArn = projectArn;
        this.rules = rules;
        this.tags = tags;
        this.tagsAll = tagsAll;
        this.type = type;
    }

    private DevicePoolState() {
        this.arn = Output.empty();
        this.description = Output.empty();
        this.maxDevices = Output.empty();
        this.name = Output.empty();
        this.projectArn = Output.empty();
        this.rules = Output.empty();
        this.tags = Output.empty();
        this.tagsAll = Output.empty();
        this.type = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DevicePoolState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> arn;
        private @Nullable Output<String> description;
        private @Nullable Output<Integer> maxDevices;
        private @Nullable Output<String> name;
        private @Nullable Output<String> projectArn;
        private @Nullable Output<List<DevicePoolRuleGetArgs>> rules;
        private @Nullable Output<Map<String,String>> tags;
        private @Nullable Output<Map<String,String>> tagsAll;
        private @Nullable Output<String> type;

        public Builder() {
    	      // Empty
        }

        public Builder(DevicePoolState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.description = defaults.description;
    	      this.maxDevices = defaults.maxDevices;
    	      this.name = defaults.name;
    	      this.projectArn = defaults.projectArn;
    	      this.rules = defaults.rules;
    	      this.tags = defaults.tags;
    	      this.tagsAll = defaults.tagsAll;
    	      this.type = defaults.type;
        }

        public Builder arn(@Nullable Output<String> arn) {
            this.arn = arn;
            return this;
        }

        public Builder arn(@Nullable String arn) {
            this.arn = Output.ofNullable(arn);
            return this;
        }

        public Builder description(@Nullable Output<String> description) {
            this.description = description;
            return this;
        }

        public Builder description(@Nullable String description) {
            this.description = Output.ofNullable(description);
            return this;
        }

        public Builder maxDevices(@Nullable Output<Integer> maxDevices) {
            this.maxDevices = maxDevices;
            return this;
        }

        public Builder maxDevices(@Nullable Integer maxDevices) {
            this.maxDevices = Output.ofNullable(maxDevices);
            return this;
        }

        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }

        public Builder name(@Nullable String name) {
            this.name = Output.ofNullable(name);
            return this;
        }

        public Builder projectArn(@Nullable Output<String> projectArn) {
            this.projectArn = projectArn;
            return this;
        }

        public Builder projectArn(@Nullable String projectArn) {
            this.projectArn = Output.ofNullable(projectArn);
            return this;
        }

        public Builder rules(@Nullable Output<List<DevicePoolRuleGetArgs>> rules) {
            this.rules = rules;
            return this;
        }

        public Builder rules(@Nullable List<DevicePoolRuleGetArgs> rules) {
            this.rules = Output.ofNullable(rules);
            return this;
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }

        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = Output.ofNullable(tags);
            return this;
        }

        public Builder tagsAll(@Nullable Output<Map<String,String>> tagsAll) {
            this.tagsAll = tagsAll;
            return this;
        }

        public Builder tagsAll(@Nullable Map<String,String> tagsAll) {
            this.tagsAll = Output.ofNullable(tagsAll);
            return this;
        }

        public Builder type(@Nullable Output<String> type) {
            this.type = type;
            return this;
        }

        public Builder type(@Nullable String type) {
            this.type = Output.ofNullable(type);
            return this;
        }
        public DevicePoolState build() {
            return new DevicePoolState(arn, description, maxDevices, name, projectArn, rules, tags, tagsAll, type);
        }
    }
}
