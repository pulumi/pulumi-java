// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.autoscaling.outputs;

import io.pulumi.aws.autoscaling.outputs.GroupInstanceRefreshPreferences;
import io.pulumi.core.annotations.OutputCustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class GroupInstanceRefresh {
    /**
     * Override default parameters for Instance Refresh.
     * 
     */
    private final @Nullable GroupInstanceRefreshPreferences preferences;
    /**
     * The strategy to use for instance refresh. The only allowed value is `Rolling`. See [StartInstanceRefresh Action](https://docs.aws.amazon.com/autoscaling/ec2/APIReference/API_StartInstanceRefresh.html#API_StartInstanceRefresh_RequestParameters) for more information.
     * 
     */
    private final String strategy;
    /**
     * Set of additional property names that will trigger an Instance Refresh. A refresh will always be triggered by a change in any of `launch_configuration`, `launch_template`, or `mixed_instances_policy`.
     * 
     */
    private final @Nullable List<String> triggers;

    @OutputCustomType.Constructor({"preferences","strategy","triggers"})
    private GroupInstanceRefresh(
        @Nullable GroupInstanceRefreshPreferences preferences,
        String strategy,
        @Nullable List<String> triggers) {
        this.preferences = preferences;
        this.strategy = strategy;
        this.triggers = triggers;
    }

    /**
     * Override default parameters for Instance Refresh.
     * 
    */
    public Optional<GroupInstanceRefreshPreferences> getPreferences() {
        return Optional.ofNullable(this.preferences);
    }
    /**
     * The strategy to use for instance refresh. The only allowed value is `Rolling`. See [StartInstanceRefresh Action](https://docs.aws.amazon.com/autoscaling/ec2/APIReference/API_StartInstanceRefresh.html#API_StartInstanceRefresh_RequestParameters) for more information.
     * 
    */
    public String getStrategy() {
        return this.strategy;
    }
    /**
     * Set of additional property names that will trigger an Instance Refresh. A refresh will always be triggered by a change in any of `launch_configuration`, `launch_template`, or `mixed_instances_policy`.
     * 
    */
    public List<String> getTriggers() {
        return this.triggers == null ? List.of() : this.triggers;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GroupInstanceRefresh defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable GroupInstanceRefreshPreferences preferences;
        private String strategy;
        private @Nullable List<String> triggers;

        public Builder() {
    	      // Empty
        }

        public Builder(GroupInstanceRefresh defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.preferences = defaults.preferences;
    	      this.strategy = defaults.strategy;
    	      this.triggers = defaults.triggers;
        }

        public Builder setPreferences(@Nullable GroupInstanceRefreshPreferences preferences) {
            this.preferences = preferences;
            return this;
        }

        public Builder setStrategy(String strategy) {
            this.strategy = Objects.requireNonNull(strategy);
            return this;
        }

        public Builder setTriggers(@Nullable List<String> triggers) {
            this.triggers = triggers;
            return this;
        }
        public GroupInstanceRefresh build() {
            return new GroupInstanceRefresh(preferences, strategy, triggers);
        }
    }
}
