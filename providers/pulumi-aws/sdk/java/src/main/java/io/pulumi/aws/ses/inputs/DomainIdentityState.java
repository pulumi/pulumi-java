// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.ses.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class DomainIdentityState extends io.pulumi.resources.ResourceArgs {

    public static final DomainIdentityState Empty = new DomainIdentityState();

    /**
     * The ARN of the domain identity.
     * 
     */
    @InputImport(name="arn")
      private final @Nullable Input<String> arn;

    public Input<String> getArn() {
        return this.arn == null ? Input.empty() : this.arn;
    }

    /**
     * The domain name to assign to SES
     * 
     */
    @InputImport(name="domain")
      private final @Nullable Input<String> domain;

    public Input<String> getDomain() {
        return this.domain == null ? Input.empty() : this.domain;
    }

    /**
     * A code which when added to the domain as a TXT record
     * will signal to SES that the owner of the domain has authorised SES to act on
     * their behalf. The domain identity will be in state "verification pending"
     * until this is done. See below for an example of how this might be achieved
     * when the domain is hosted in Route 53 and managed by this provider.  Find out
     * more about verifying domains in Amazon SES in the [AWS SES
     * docs](http://docs.aws.amazon.com/ses/latest/DeveloperGuide/verify-domains.html).
     * 
     */
    @InputImport(name="verificationToken")
      private final @Nullable Input<String> verificationToken;

    public Input<String> getVerificationToken() {
        return this.verificationToken == null ? Input.empty() : this.verificationToken;
    }

    public DomainIdentityState(
        @Nullable Input<String> arn,
        @Nullable Input<String> domain,
        @Nullable Input<String> verificationToken) {
        this.arn = arn;
        this.domain = domain;
        this.verificationToken = verificationToken;
    }

    private DomainIdentityState() {
        this.arn = Input.empty();
        this.domain = Input.empty();
        this.verificationToken = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DomainIdentityState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> arn;
        private @Nullable Input<String> domain;
        private @Nullable Input<String> verificationToken;

        public Builder() {
    	      // Empty
        }

        public Builder(DomainIdentityState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.domain = defaults.domain;
    	      this.verificationToken = defaults.verificationToken;
        }

        public Builder setArn(@Nullable Input<String> arn) {
            this.arn = arn;
            return this;
        }

        public Builder setArn(@Nullable String arn) {
            this.arn = Input.ofNullable(arn);
            return this;
        }

        public Builder setDomain(@Nullable Input<String> domain) {
            this.domain = domain;
            return this;
        }

        public Builder setDomain(@Nullable String domain) {
            this.domain = Input.ofNullable(domain);
            return this;
        }

        public Builder setVerificationToken(@Nullable Input<String> verificationToken) {
            this.verificationToken = verificationToken;
            return this;
        }

        public Builder setVerificationToken(@Nullable String verificationToken) {
            this.verificationToken = Input.ofNullable(verificationToken);
            return this;
        }
        public DomainIdentityState build() {
            return new DomainIdentityState(arn, domain, verificationToken);
        }
    }
}
