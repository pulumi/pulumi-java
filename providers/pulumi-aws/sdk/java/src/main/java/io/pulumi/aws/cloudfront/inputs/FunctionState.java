// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.cloudfront.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class FunctionState extends io.pulumi.resources.ResourceArgs {

    public static final FunctionState Empty = new FunctionState();

    /**
     * Amazon Resource Name (ARN) identifying your CloudFront Function.
     * 
     */
    @InputImport(name="arn")
    private final @Nullable Input<String> arn;

    public Input<String> getArn() {
        return this.arn == null ? Input.empty() : this.arn;
    }

    /**
     * Source code of the function
     * 
     */
    @InputImport(name="code")
    private final @Nullable Input<String> code;

    public Input<String> getCode() {
        return this.code == null ? Input.empty() : this.code;
    }

    /**
     * Comment.
     * 
     */
    @InputImport(name="comment")
    private final @Nullable Input<String> comment;

    public Input<String> getComment() {
        return this.comment == null ? Input.empty() : this.comment;
    }

    /**
     * ETag hash of the function. This is the value for the `DEVELOPMENT` stage of the function.
     * 
     */
    @InputImport(name="etag")
    private final @Nullable Input<String> etag;

    public Input<String> getEtag() {
        return this.etag == null ? Input.empty() : this.etag;
    }

    /**
     * ETag hash of any `LIVE` stage of the function.
     * 
     */
    @InputImport(name="liveStageEtag")
    private final @Nullable Input<String> liveStageEtag;

    public Input<String> getLiveStageEtag() {
        return this.liveStageEtag == null ? Input.empty() : this.liveStageEtag;
    }

    /**
     * Unique name for your CloudFront Function.
     * 
     */
    @InputImport(name="name")
    private final @Nullable Input<String> name;

    public Input<String> getName() {
        return this.name == null ? Input.empty() : this.name;
    }

    /**
     * Whether to publish creation/change as Live CloudFront Function Version. Defaults to `true`.
     * 
     */
    @InputImport(name="publish")
    private final @Nullable Input<Boolean> publish;

    public Input<Boolean> getPublish() {
        return this.publish == null ? Input.empty() : this.publish;
    }

    /**
     * Identifier of the function's runtime. Currently only `cloudfront-js-1.0` is valid.
     * 
     */
    @InputImport(name="runtime")
    private final @Nullable Input<String> runtime;

    public Input<String> getRuntime() {
        return this.runtime == null ? Input.empty() : this.runtime;
    }

    /**
     * Status of the function. Can be `UNPUBLISHED`, `UNASSOCIATED` or `ASSOCIATED`.
     * 
     */
    @InputImport(name="status")
    private final @Nullable Input<String> status;

    public Input<String> getStatus() {
        return this.status == null ? Input.empty() : this.status;
    }

    public FunctionState(
        @Nullable Input<String> arn,
        @Nullable Input<String> code,
        @Nullable Input<String> comment,
        @Nullable Input<String> etag,
        @Nullable Input<String> liveStageEtag,
        @Nullable Input<String> name,
        @Nullable Input<Boolean> publish,
        @Nullable Input<String> runtime,
        @Nullable Input<String> status) {
        this.arn = arn;
        this.code = code;
        this.comment = comment;
        this.etag = etag;
        this.liveStageEtag = liveStageEtag;
        this.name = name;
        this.publish = publish;
        this.runtime = runtime;
        this.status = status;
    }

    private FunctionState() {
        this.arn = Input.empty();
        this.code = Input.empty();
        this.comment = Input.empty();
        this.etag = Input.empty();
        this.liveStageEtag = Input.empty();
        this.name = Input.empty();
        this.publish = Input.empty();
        this.runtime = Input.empty();
        this.status = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FunctionState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> arn;
        private @Nullable Input<String> code;
        private @Nullable Input<String> comment;
        private @Nullable Input<String> etag;
        private @Nullable Input<String> liveStageEtag;
        private @Nullable Input<String> name;
        private @Nullable Input<Boolean> publish;
        private @Nullable Input<String> runtime;
        private @Nullable Input<String> status;

        public Builder() {
    	      // Empty
        }

        public Builder(FunctionState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.code = defaults.code;
    	      this.comment = defaults.comment;
    	      this.etag = defaults.etag;
    	      this.liveStageEtag = defaults.liveStageEtag;
    	      this.name = defaults.name;
    	      this.publish = defaults.publish;
    	      this.runtime = defaults.runtime;
    	      this.status = defaults.status;
        }

        public Builder setArn(@Nullable Input<String> arn) {
            this.arn = arn;
            return this;
        }

        public Builder setArn(@Nullable String arn) {
            this.arn = Input.ofNullable(arn);
            return this;
        }

        public Builder setCode(@Nullable Input<String> code) {
            this.code = code;
            return this;
        }

        public Builder setCode(@Nullable String code) {
            this.code = Input.ofNullable(code);
            return this;
        }

        public Builder setComment(@Nullable Input<String> comment) {
            this.comment = comment;
            return this;
        }

        public Builder setComment(@Nullable String comment) {
            this.comment = Input.ofNullable(comment);
            return this;
        }

        public Builder setEtag(@Nullable Input<String> etag) {
            this.etag = etag;
            return this;
        }

        public Builder setEtag(@Nullable String etag) {
            this.etag = Input.ofNullable(etag);
            return this;
        }

        public Builder setLiveStageEtag(@Nullable Input<String> liveStageEtag) {
            this.liveStageEtag = liveStageEtag;
            return this;
        }

        public Builder setLiveStageEtag(@Nullable String liveStageEtag) {
            this.liveStageEtag = Input.ofNullable(liveStageEtag);
            return this;
        }

        public Builder setName(@Nullable Input<String> name) {
            this.name = name;
            return this;
        }

        public Builder setName(@Nullable String name) {
            this.name = Input.ofNullable(name);
            return this;
        }

        public Builder setPublish(@Nullable Input<Boolean> publish) {
            this.publish = publish;
            return this;
        }

        public Builder setPublish(@Nullable Boolean publish) {
            this.publish = Input.ofNullable(publish);
            return this;
        }

        public Builder setRuntime(@Nullable Input<String> runtime) {
            this.runtime = runtime;
            return this;
        }

        public Builder setRuntime(@Nullable String runtime) {
            this.runtime = Input.ofNullable(runtime);
            return this;
        }

        public Builder setStatus(@Nullable Input<String> status) {
            this.status = status;
            return this;
        }

        public Builder setStatus(@Nullable String status) {
            this.status = Input.ofNullable(status);
            return this;
        }
        public FunctionState build() {
            return new FunctionState(arn, code, comment, etag, liveStageEtag, name, publish, runtime, status);
        }
    }
}
