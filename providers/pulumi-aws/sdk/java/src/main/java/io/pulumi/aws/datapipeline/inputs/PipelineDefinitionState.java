// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.datapipeline.inputs;

import io.pulumi.aws.datapipeline.inputs.PipelineDefinitionParameterObjectGetArgs;
import io.pulumi.aws.datapipeline.inputs.PipelineDefinitionParameterValueGetArgs;
import io.pulumi.aws.datapipeline.inputs.PipelineDefinitionPipelineObjectGetArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class PipelineDefinitionState extends io.pulumi.resources.ResourceArgs {

    public static final PipelineDefinitionState Empty = new PipelineDefinitionState();

    /**
     * Configuration block for the parameter objects used in the pipeline definition. See below
     * 
     */
    @Import(name="parameterObjects")
      private final @Nullable Output<List<PipelineDefinitionParameterObjectGetArgs>> parameterObjects;

    public Output<List<PipelineDefinitionParameterObjectGetArgs>> parameterObjects() {
        return this.parameterObjects == null ? Codegen.empty() : this.parameterObjects;
    }

    /**
     * Configuration block for the parameter values used in the pipeline definition. See below
     * 
     */
    @Import(name="parameterValues")
      private final @Nullable Output<List<PipelineDefinitionParameterValueGetArgs>> parameterValues;

    public Output<List<PipelineDefinitionParameterValueGetArgs>> parameterValues() {
        return this.parameterValues == null ? Codegen.empty() : this.parameterValues;
    }

    /**
     * ID of the pipeline.
     * 
     */
    @Import(name="pipelineId")
      private final @Nullable Output<String> pipelineId;

    public Output<String> pipelineId() {
        return this.pipelineId == null ? Codegen.empty() : this.pipelineId;
    }

    /**
     * Configuration block for the objects that define the pipeline. See below
     * 
     */
    @Import(name="pipelineObjects")
      private final @Nullable Output<List<PipelineDefinitionPipelineObjectGetArgs>> pipelineObjects;

    public Output<List<PipelineDefinitionPipelineObjectGetArgs>> pipelineObjects() {
        return this.pipelineObjects == null ? Codegen.empty() : this.pipelineObjects;
    }

    public PipelineDefinitionState(
        @Nullable Output<List<PipelineDefinitionParameterObjectGetArgs>> parameterObjects,
        @Nullable Output<List<PipelineDefinitionParameterValueGetArgs>> parameterValues,
        @Nullable Output<String> pipelineId,
        @Nullable Output<List<PipelineDefinitionPipelineObjectGetArgs>> pipelineObjects) {
        this.parameterObjects = parameterObjects;
        this.parameterValues = parameterValues;
        this.pipelineId = pipelineId;
        this.pipelineObjects = pipelineObjects;
    }

    private PipelineDefinitionState() {
        this.parameterObjects = Codegen.empty();
        this.parameterValues = Codegen.empty();
        this.pipelineId = Codegen.empty();
        this.pipelineObjects = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PipelineDefinitionState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<List<PipelineDefinitionParameterObjectGetArgs>> parameterObjects;
        private @Nullable Output<List<PipelineDefinitionParameterValueGetArgs>> parameterValues;
        private @Nullable Output<String> pipelineId;
        private @Nullable Output<List<PipelineDefinitionPipelineObjectGetArgs>> pipelineObjects;

        public Builder() {
    	      // Empty
        }

        public Builder(PipelineDefinitionState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.parameterObjects = defaults.parameterObjects;
    	      this.parameterValues = defaults.parameterValues;
    	      this.pipelineId = defaults.pipelineId;
    	      this.pipelineObjects = defaults.pipelineObjects;
        }

        public Builder parameterObjects(@Nullable Output<List<PipelineDefinitionParameterObjectGetArgs>> parameterObjects) {
            this.parameterObjects = parameterObjects;
            return this;
        }
        public Builder parameterObjects(@Nullable List<PipelineDefinitionParameterObjectGetArgs> parameterObjects) {
            this.parameterObjects = Codegen.ofNullable(parameterObjects);
            return this;
        }
        public Builder parameterObjects(PipelineDefinitionParameterObjectGetArgs... parameterObjects) {
            return parameterObjects(List.of(parameterObjects));
        }
        public Builder parameterValues(@Nullable Output<List<PipelineDefinitionParameterValueGetArgs>> parameterValues) {
            this.parameterValues = parameterValues;
            return this;
        }
        public Builder parameterValues(@Nullable List<PipelineDefinitionParameterValueGetArgs> parameterValues) {
            this.parameterValues = Codegen.ofNullable(parameterValues);
            return this;
        }
        public Builder parameterValues(PipelineDefinitionParameterValueGetArgs... parameterValues) {
            return parameterValues(List.of(parameterValues));
        }
        public Builder pipelineId(@Nullable Output<String> pipelineId) {
            this.pipelineId = pipelineId;
            return this;
        }
        public Builder pipelineId(@Nullable String pipelineId) {
            this.pipelineId = Codegen.ofNullable(pipelineId);
            return this;
        }
        public Builder pipelineObjects(@Nullable Output<List<PipelineDefinitionPipelineObjectGetArgs>> pipelineObjects) {
            this.pipelineObjects = pipelineObjects;
            return this;
        }
        public Builder pipelineObjects(@Nullable List<PipelineDefinitionPipelineObjectGetArgs> pipelineObjects) {
            this.pipelineObjects = Codegen.ofNullable(pipelineObjects);
            return this;
        }
        public Builder pipelineObjects(PipelineDefinitionPipelineObjectGetArgs... pipelineObjects) {
            return pipelineObjects(List.of(pipelineObjects));
        }        public PipelineDefinitionState build() {
            return new PipelineDefinitionState(parameterObjects, parameterValues, pipelineId, pipelineObjects);
        }
    }
}
