// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.pinpoint;

import io.pulumi.aws.pinpoint.inputs.AppCampaignHookArgs;
import io.pulumi.aws.pinpoint.inputs.AppLimitsArgs;
import io.pulumi.aws.pinpoint.inputs.AppQuietTimeArgs;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class AppArgs extends io.pulumi.resources.ResourceArgs {

    public static final AppArgs Empty = new AppArgs();

    /**
     * Specifies settings for invoking an AWS Lambda function that customizes a segment for a campaign
     * 
     */
    @InputImport(name="campaignHook")
      private final @Nullable Input<AppCampaignHookArgs> campaignHook;

    public Input<AppCampaignHookArgs> getCampaignHook() {
        return this.campaignHook == null ? Input.empty() : this.campaignHook;
    }

    /**
     * The default campaign limits for the app. These limits apply to each campaign for the app, unless the campaign overrides the default with limits of its own
     * 
     */
    @InputImport(name="limits")
      private final @Nullable Input<AppLimitsArgs> limits;

    public Input<AppLimitsArgs> getLimits() {
        return this.limits == null ? Input.empty() : this.limits;
    }

    /**
     * The application name. By default generated by this provider
     * 
     */
    @InputImport(name="name")
      private final @Nullable Input<String> name;

    public Input<String> getName() {
        return this.name == null ? Input.empty() : this.name;
    }

    /**
     * The name of the Pinpoint application. Conflicts with `name`
     * 
     */
    @InputImport(name="namePrefix")
      private final @Nullable Input<String> namePrefix;

    public Input<String> getNamePrefix() {
        return this.namePrefix == null ? Input.empty() : this.namePrefix;
    }

    /**
     * The default quiet time for the app. Each campaign for this app sends no messages during this time unless the campaign overrides the default with a quiet time of its own
     * 
     */
    @InputImport(name="quietTime")
      private final @Nullable Input<AppQuietTimeArgs> quietTime;

    public Input<AppQuietTimeArgs> getQuietTime() {
        return this.quietTime == null ? Input.empty() : this.quietTime;
    }

    /**
     * Key-value map of resource tags. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @InputImport(name="tags")
      private final @Nullable Input<Map<String,String>> tags;

    public Input<Map<String,String>> getTags() {
        return this.tags == null ? Input.empty() : this.tags;
    }

    public AppArgs(
        @Nullable Input<AppCampaignHookArgs> campaignHook,
        @Nullable Input<AppLimitsArgs> limits,
        @Nullable Input<String> name,
        @Nullable Input<String> namePrefix,
        @Nullable Input<AppQuietTimeArgs> quietTime,
        @Nullable Input<Map<String,String>> tags) {
        this.campaignHook = campaignHook;
        this.limits = limits;
        this.name = name;
        this.namePrefix = namePrefix;
        this.quietTime = quietTime;
        this.tags = tags;
    }

    private AppArgs() {
        this.campaignHook = Input.empty();
        this.limits = Input.empty();
        this.name = Input.empty();
        this.namePrefix = Input.empty();
        this.quietTime = Input.empty();
        this.tags = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AppArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<AppCampaignHookArgs> campaignHook;
        private @Nullable Input<AppLimitsArgs> limits;
        private @Nullable Input<String> name;
        private @Nullable Input<String> namePrefix;
        private @Nullable Input<AppQuietTimeArgs> quietTime;
        private @Nullable Input<Map<String,String>> tags;

        public Builder() {
    	      // Empty
        }

        public Builder(AppArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.campaignHook = defaults.campaignHook;
    	      this.limits = defaults.limits;
    	      this.name = defaults.name;
    	      this.namePrefix = defaults.namePrefix;
    	      this.quietTime = defaults.quietTime;
    	      this.tags = defaults.tags;
        }

        public Builder setCampaignHook(@Nullable Input<AppCampaignHookArgs> campaignHook) {
            this.campaignHook = campaignHook;
            return this;
        }

        public Builder setCampaignHook(@Nullable AppCampaignHookArgs campaignHook) {
            this.campaignHook = Input.ofNullable(campaignHook);
            return this;
        }

        public Builder setLimits(@Nullable Input<AppLimitsArgs> limits) {
            this.limits = limits;
            return this;
        }

        public Builder setLimits(@Nullable AppLimitsArgs limits) {
            this.limits = Input.ofNullable(limits);
            return this;
        }

        public Builder setName(@Nullable Input<String> name) {
            this.name = name;
            return this;
        }

        public Builder setName(@Nullable String name) {
            this.name = Input.ofNullable(name);
            return this;
        }

        public Builder setNamePrefix(@Nullable Input<String> namePrefix) {
            this.namePrefix = namePrefix;
            return this;
        }

        public Builder setNamePrefix(@Nullable String namePrefix) {
            this.namePrefix = Input.ofNullable(namePrefix);
            return this;
        }

        public Builder setQuietTime(@Nullable Input<AppQuietTimeArgs> quietTime) {
            this.quietTime = quietTime;
            return this;
        }

        public Builder setQuietTime(@Nullable AppQuietTimeArgs quietTime) {
            this.quietTime = Input.ofNullable(quietTime);
            return this;
        }

        public Builder setTags(@Nullable Input<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }

        public Builder setTags(@Nullable Map<String,String> tags) {
            this.tags = Input.ofNullable(tags);
            return this;
        }
        public AppArgs build() {
            return new AppArgs(campaignHook, limits, name, namePrefix, quietTime, tags);
        }
    }
}
