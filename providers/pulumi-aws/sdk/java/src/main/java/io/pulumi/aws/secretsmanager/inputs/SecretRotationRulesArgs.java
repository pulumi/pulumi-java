// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.secretsmanager.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.util.Objects;


public final class SecretRotationRulesArgs extends io.pulumi.resources.ResourceArgs {

    public static final SecretRotationRulesArgs Empty = new SecretRotationRulesArgs();

    /**
     * Specifies the number of days between automatic scheduled rotations of the secret.
     * 
     */
    @Import(name="automaticallyAfterDays", required=true)
      private final Output<Integer> automaticallyAfterDays;

    public Output<Integer> getAutomaticallyAfterDays() {
        return this.automaticallyAfterDays;
    }

    public SecretRotationRulesArgs(Output<Integer> automaticallyAfterDays) {
        this.automaticallyAfterDays = Objects.requireNonNull(automaticallyAfterDays, "expected parameter 'automaticallyAfterDays' to be non-null");
    }

    private SecretRotationRulesArgs() {
        this.automaticallyAfterDays = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SecretRotationRulesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<Integer> automaticallyAfterDays;

        public Builder() {
    	      // Empty
        }

        public Builder(SecretRotationRulesArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.automaticallyAfterDays = defaults.automaticallyAfterDays;
        }

        public Builder automaticallyAfterDays(Output<Integer> automaticallyAfterDays) {
            this.automaticallyAfterDays = Objects.requireNonNull(automaticallyAfterDays);
            return this;
        }
        public Builder automaticallyAfterDays(Integer automaticallyAfterDays) {
            this.automaticallyAfterDays = Output.of(Objects.requireNonNull(automaticallyAfterDays));
            return this;
        }        public SecretRotationRulesArgs build() {
            return new SecretRotationRulesArgs(automaticallyAfterDays);
        }
    }
}
