// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.docdb.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ClusterInstanceState extends io.pulumi.resources.ResourceArgs {

    public static final ClusterInstanceState Empty = new ClusterInstanceState();

    /**
     * Specifies whether any database modifications
     * are applied immediately, or during the next maintenance window. Default is`false`.
     * 
     */
    @Import(name="applyImmediately")
      private final @Nullable Output<Boolean> applyImmediately;

    public Output<Boolean> getApplyImmediately() {
        return this.applyImmediately == null ? Output.empty() : this.applyImmediately;
    }

    /**
     * Amazon Resource Name (ARN) of cluster instance
     * 
     */
    @Import(name="arn")
      private final @Nullable Output<String> arn;

    public Output<String> getArn() {
        return this.arn == null ? Output.empty() : this.arn;
    }

    /**
     * Indicates that minor engine upgrades will be applied automatically to the DB instance during the maintenance window. Default `true`.
     * 
     */
    @Import(name="autoMinorVersionUpgrade")
      private final @Nullable Output<Boolean> autoMinorVersionUpgrade;

    public Output<Boolean> getAutoMinorVersionUpgrade() {
        return this.autoMinorVersionUpgrade == null ? Output.empty() : this.autoMinorVersionUpgrade;
    }

    /**
     * The EC2 Availability Zone that the DB instance is created in. See [docs](https://docs.aws.amazon.com/documentdb/latest/developerguide/API_CreateDBInstance.html) about the details.
     * 
     */
    @Import(name="availabilityZone")
      private final @Nullable Output<String> availabilityZone;

    public Output<String> getAvailabilityZone() {
        return this.availabilityZone == null ? Output.empty() : this.availabilityZone;
    }

    /**
     * (Optional) The identifier of the CA certificate for the DB instance.
     * 
     */
    @Import(name="caCertIdentifier")
      private final @Nullable Output<String> caCertIdentifier;

    public Output<String> getCaCertIdentifier() {
        return this.caCertIdentifier == null ? Output.empty() : this.caCertIdentifier;
    }

    /**
     * The identifier of the `aws.docdb.Cluster` in which to launch this instance.
     * 
     */
    @Import(name="clusterIdentifier")
      private final @Nullable Output<String> clusterIdentifier;

    public Output<String> getClusterIdentifier() {
        return this.clusterIdentifier == null ? Output.empty() : this.clusterIdentifier;
    }

    /**
     * The DB subnet group to associate with this DB instance.
     * 
     */
    @Import(name="dbSubnetGroupName")
      private final @Nullable Output<String> dbSubnetGroupName;

    public Output<String> getDbSubnetGroupName() {
        return this.dbSubnetGroupName == null ? Output.empty() : this.dbSubnetGroupName;
    }

    /**
     * The region-unique, immutable identifier for the DB instance.
     * 
     */
    @Import(name="dbiResourceId")
      private final @Nullable Output<String> dbiResourceId;

    public Output<String> getDbiResourceId() {
        return this.dbiResourceId == null ? Output.empty() : this.dbiResourceId;
    }

    /**
     * The DNS address for this instance. May not be writable
     * 
     */
    @Import(name="endpoint")
      private final @Nullable Output<String> endpoint;

    public Output<String> getEndpoint() {
        return this.endpoint == null ? Output.empty() : this.endpoint;
    }

    /**
     * The name of the database engine to be used for the DocDB instance. Defaults to `docdb`. Valid Values: `docdb`.
     * 
     */
    @Import(name="engine")
      private final @Nullable Output<String> engine;

    public Output<String> getEngine() {
        return this.engine == null ? Output.empty() : this.engine;
    }

    /**
     * The database engine version
     * 
     */
    @Import(name="engineVersion")
      private final @Nullable Output<String> engineVersion;

    public Output<String> getEngineVersion() {
        return this.engineVersion == null ? Output.empty() : this.engineVersion;
    }

    /**
     * The identifier for the DocDB instance, if omitted, this provider will assign a random, unique identifier.
     * 
     */
    @Import(name="identifier")
      private final @Nullable Output<String> identifier;

    public Output<String> getIdentifier() {
        return this.identifier == null ? Output.empty() : this.identifier;
    }

    /**
     * Creates a unique identifier beginning with the specified prefix. Conflicts with `identifier`.
     * 
     */
    @Import(name="identifierPrefix")
      private final @Nullable Output<String> identifierPrefix;

    public Output<String> getIdentifierPrefix() {
        return this.identifierPrefix == null ? Output.empty() : this.identifierPrefix;
    }

    /**
     * The instance class to use. For details on CPU and memory, see [Scaling for DocDB Instances](https://docs.aws.amazon.com/documentdb/latest/developerguide/db-cluster-manage-performance.html#db-cluster-manage-scaling-instance). DocDB currently
     * supports the below instance classes. Please see [AWS Documentation](https://docs.aws.amazon.com/documentdb/latest/developerguide/db-instance-classes.html#db-instance-class-specs) for complete details.
     * - db.r5.large
     * - db.r5.xlarge
     * - db.r5.2xlarge
     * - db.r5.4xlarge
     * - db.r5.12xlarge
     * - db.r5.24xlarge
     * - db.r4.large
     * - db.r4.xlarge
     * - db.r4.2xlarge
     * - db.r4.4xlarge
     * - db.r4.8xlarge
     * - db.r4.16xlarge
     * - db.t3.medium
     * 
     */
    @Import(name="instanceClass")
      private final @Nullable Output<String> instanceClass;

    public Output<String> getInstanceClass() {
        return this.instanceClass == null ? Output.empty() : this.instanceClass;
    }

    /**
     * The ARN for the KMS encryption key if one is set to the cluster.
     * 
     */
    @Import(name="kmsKeyId")
      private final @Nullable Output<String> kmsKeyId;

    public Output<String> getKmsKeyId() {
        return this.kmsKeyId == null ? Output.empty() : this.kmsKeyId;
    }

    /**
     * The database port
     * 
     */
    @Import(name="port")
      private final @Nullable Output<Integer> port;

    public Output<Integer> getPort() {
        return this.port == null ? Output.empty() : this.port;
    }

    /**
     * The daily time range during which automated backups are created if automated backups are enabled.
     * 
     */
    @Import(name="preferredBackupWindow")
      private final @Nullable Output<String> preferredBackupWindow;

    public Output<String> getPreferredBackupWindow() {
        return this.preferredBackupWindow == null ? Output.empty() : this.preferredBackupWindow;
    }

    /**
     * The window to perform maintenance in.
     * Syntax: "ddd:hh24:mi-ddd:hh24:mi". Eg: "Mon:00:00-Mon:03:00".
     * 
     */
    @Import(name="preferredMaintenanceWindow")
      private final @Nullable Output<String> preferredMaintenanceWindow;

    public Output<String> getPreferredMaintenanceWindow() {
        return this.preferredMaintenanceWindow == null ? Output.empty() : this.preferredMaintenanceWindow;
    }

    /**
     * Default 0. Failover Priority setting on instance level. The reader who has lower tier has higher priority to get promoter to writer.
     * 
     */
    @Import(name="promotionTier")
      private final @Nullable Output<Integer> promotionTier;

    public Output<Integer> getPromotionTier() {
        return this.promotionTier == null ? Output.empty() : this.promotionTier;
    }

    @Import(name="publiclyAccessible")
      private final @Nullable Output<Boolean> publiclyAccessible;

    public Output<Boolean> getPubliclyAccessible() {
        return this.publiclyAccessible == null ? Output.empty() : this.publiclyAccessible;
    }

    /**
     * Specifies whether the DB cluster is encrypted.
     * 
     */
    @Import(name="storageEncrypted")
      private final @Nullable Output<Boolean> storageEncrypted;

    public Output<Boolean> getStorageEncrypted() {
        return this.storageEncrypted == null ? Output.empty() : this.storageEncrypted;
    }

    /**
     * A map of tags to assign to the instance. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Import(name="tags")
      private final @Nullable Output<Map<String,String>> tags;

    public Output<Map<String,String>> getTags() {
        return this.tags == null ? Output.empty() : this.tags;
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider .
     * 
     */
    @Import(name="tagsAll")
      private final @Nullable Output<Map<String,String>> tagsAll;

    public Output<Map<String,String>> getTagsAll() {
        return this.tagsAll == null ? Output.empty() : this.tagsAll;
    }

    /**
     * Boolean indicating if this instance is writable. `False` indicates this instance is a read replica.
     * 
     */
    @Import(name="writer")
      private final @Nullable Output<Boolean> writer;

    public Output<Boolean> getWriter() {
        return this.writer == null ? Output.empty() : this.writer;
    }

    public ClusterInstanceState(
        @Nullable Output<Boolean> applyImmediately,
        @Nullable Output<String> arn,
        @Nullable Output<Boolean> autoMinorVersionUpgrade,
        @Nullable Output<String> availabilityZone,
        @Nullable Output<String> caCertIdentifier,
        @Nullable Output<String> clusterIdentifier,
        @Nullable Output<String> dbSubnetGroupName,
        @Nullable Output<String> dbiResourceId,
        @Nullable Output<String> endpoint,
        @Nullable Output<String> engine,
        @Nullable Output<String> engineVersion,
        @Nullable Output<String> identifier,
        @Nullable Output<String> identifierPrefix,
        @Nullable Output<String> instanceClass,
        @Nullable Output<String> kmsKeyId,
        @Nullable Output<Integer> port,
        @Nullable Output<String> preferredBackupWindow,
        @Nullable Output<String> preferredMaintenanceWindow,
        @Nullable Output<Integer> promotionTier,
        @Nullable Output<Boolean> publiclyAccessible,
        @Nullable Output<Boolean> storageEncrypted,
        @Nullable Output<Map<String,String>> tags,
        @Nullable Output<Map<String,String>> tagsAll,
        @Nullable Output<Boolean> writer) {
        this.applyImmediately = applyImmediately;
        this.arn = arn;
        this.autoMinorVersionUpgrade = autoMinorVersionUpgrade;
        this.availabilityZone = availabilityZone;
        this.caCertIdentifier = caCertIdentifier;
        this.clusterIdentifier = clusterIdentifier;
        this.dbSubnetGroupName = dbSubnetGroupName;
        this.dbiResourceId = dbiResourceId;
        this.endpoint = endpoint;
        this.engine = engine;
        this.engineVersion = engineVersion;
        this.identifier = identifier;
        this.identifierPrefix = identifierPrefix;
        this.instanceClass = instanceClass;
        this.kmsKeyId = kmsKeyId;
        this.port = port;
        this.preferredBackupWindow = preferredBackupWindow;
        this.preferredMaintenanceWindow = preferredMaintenanceWindow;
        this.promotionTier = promotionTier;
        this.publiclyAccessible = publiclyAccessible;
        this.storageEncrypted = storageEncrypted;
        this.tags = tags;
        this.tagsAll = tagsAll;
        this.writer = writer;
    }

    private ClusterInstanceState() {
        this.applyImmediately = Output.empty();
        this.arn = Output.empty();
        this.autoMinorVersionUpgrade = Output.empty();
        this.availabilityZone = Output.empty();
        this.caCertIdentifier = Output.empty();
        this.clusterIdentifier = Output.empty();
        this.dbSubnetGroupName = Output.empty();
        this.dbiResourceId = Output.empty();
        this.endpoint = Output.empty();
        this.engine = Output.empty();
        this.engineVersion = Output.empty();
        this.identifier = Output.empty();
        this.identifierPrefix = Output.empty();
        this.instanceClass = Output.empty();
        this.kmsKeyId = Output.empty();
        this.port = Output.empty();
        this.preferredBackupWindow = Output.empty();
        this.preferredMaintenanceWindow = Output.empty();
        this.promotionTier = Output.empty();
        this.publiclyAccessible = Output.empty();
        this.storageEncrypted = Output.empty();
        this.tags = Output.empty();
        this.tagsAll = Output.empty();
        this.writer = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ClusterInstanceState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<Boolean> applyImmediately;
        private @Nullable Output<String> arn;
        private @Nullable Output<Boolean> autoMinorVersionUpgrade;
        private @Nullable Output<String> availabilityZone;
        private @Nullable Output<String> caCertIdentifier;
        private @Nullable Output<String> clusterIdentifier;
        private @Nullable Output<String> dbSubnetGroupName;
        private @Nullable Output<String> dbiResourceId;
        private @Nullable Output<String> endpoint;
        private @Nullable Output<String> engine;
        private @Nullable Output<String> engineVersion;
        private @Nullable Output<String> identifier;
        private @Nullable Output<String> identifierPrefix;
        private @Nullable Output<String> instanceClass;
        private @Nullable Output<String> kmsKeyId;
        private @Nullable Output<Integer> port;
        private @Nullable Output<String> preferredBackupWindow;
        private @Nullable Output<String> preferredMaintenanceWindow;
        private @Nullable Output<Integer> promotionTier;
        private @Nullable Output<Boolean> publiclyAccessible;
        private @Nullable Output<Boolean> storageEncrypted;
        private @Nullable Output<Map<String,String>> tags;
        private @Nullable Output<Map<String,String>> tagsAll;
        private @Nullable Output<Boolean> writer;

        public Builder() {
    	      // Empty
        }

        public Builder(ClusterInstanceState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.applyImmediately = defaults.applyImmediately;
    	      this.arn = defaults.arn;
    	      this.autoMinorVersionUpgrade = defaults.autoMinorVersionUpgrade;
    	      this.availabilityZone = defaults.availabilityZone;
    	      this.caCertIdentifier = defaults.caCertIdentifier;
    	      this.clusterIdentifier = defaults.clusterIdentifier;
    	      this.dbSubnetGroupName = defaults.dbSubnetGroupName;
    	      this.dbiResourceId = defaults.dbiResourceId;
    	      this.endpoint = defaults.endpoint;
    	      this.engine = defaults.engine;
    	      this.engineVersion = defaults.engineVersion;
    	      this.identifier = defaults.identifier;
    	      this.identifierPrefix = defaults.identifierPrefix;
    	      this.instanceClass = defaults.instanceClass;
    	      this.kmsKeyId = defaults.kmsKeyId;
    	      this.port = defaults.port;
    	      this.preferredBackupWindow = defaults.preferredBackupWindow;
    	      this.preferredMaintenanceWindow = defaults.preferredMaintenanceWindow;
    	      this.promotionTier = defaults.promotionTier;
    	      this.publiclyAccessible = defaults.publiclyAccessible;
    	      this.storageEncrypted = defaults.storageEncrypted;
    	      this.tags = defaults.tags;
    	      this.tagsAll = defaults.tagsAll;
    	      this.writer = defaults.writer;
        }

        public Builder applyImmediately(@Nullable Output<Boolean> applyImmediately) {
            this.applyImmediately = applyImmediately;
            return this;
        }
        public Builder applyImmediately(@Nullable Boolean applyImmediately) {
            this.applyImmediately = Output.ofNullable(applyImmediately);
            return this;
        }
        public Builder arn(@Nullable Output<String> arn) {
            this.arn = arn;
            return this;
        }
        public Builder arn(@Nullable String arn) {
            this.arn = Output.ofNullable(arn);
            return this;
        }
        public Builder autoMinorVersionUpgrade(@Nullable Output<Boolean> autoMinorVersionUpgrade) {
            this.autoMinorVersionUpgrade = autoMinorVersionUpgrade;
            return this;
        }
        public Builder autoMinorVersionUpgrade(@Nullable Boolean autoMinorVersionUpgrade) {
            this.autoMinorVersionUpgrade = Output.ofNullable(autoMinorVersionUpgrade);
            return this;
        }
        public Builder availabilityZone(@Nullable Output<String> availabilityZone) {
            this.availabilityZone = availabilityZone;
            return this;
        }
        public Builder availabilityZone(@Nullable String availabilityZone) {
            this.availabilityZone = Output.ofNullable(availabilityZone);
            return this;
        }
        public Builder caCertIdentifier(@Nullable Output<String> caCertIdentifier) {
            this.caCertIdentifier = caCertIdentifier;
            return this;
        }
        public Builder caCertIdentifier(@Nullable String caCertIdentifier) {
            this.caCertIdentifier = Output.ofNullable(caCertIdentifier);
            return this;
        }
        public Builder clusterIdentifier(@Nullable Output<String> clusterIdentifier) {
            this.clusterIdentifier = clusterIdentifier;
            return this;
        }
        public Builder clusterIdentifier(@Nullable String clusterIdentifier) {
            this.clusterIdentifier = Output.ofNullable(clusterIdentifier);
            return this;
        }
        public Builder dbSubnetGroupName(@Nullable Output<String> dbSubnetGroupName) {
            this.dbSubnetGroupName = dbSubnetGroupName;
            return this;
        }
        public Builder dbSubnetGroupName(@Nullable String dbSubnetGroupName) {
            this.dbSubnetGroupName = Output.ofNullable(dbSubnetGroupName);
            return this;
        }
        public Builder dbiResourceId(@Nullable Output<String> dbiResourceId) {
            this.dbiResourceId = dbiResourceId;
            return this;
        }
        public Builder dbiResourceId(@Nullable String dbiResourceId) {
            this.dbiResourceId = Output.ofNullable(dbiResourceId);
            return this;
        }
        public Builder endpoint(@Nullable Output<String> endpoint) {
            this.endpoint = endpoint;
            return this;
        }
        public Builder endpoint(@Nullable String endpoint) {
            this.endpoint = Output.ofNullable(endpoint);
            return this;
        }
        public Builder engine(@Nullable Output<String> engine) {
            this.engine = engine;
            return this;
        }
        public Builder engine(@Nullable String engine) {
            this.engine = Output.ofNullable(engine);
            return this;
        }
        public Builder engineVersion(@Nullable Output<String> engineVersion) {
            this.engineVersion = engineVersion;
            return this;
        }
        public Builder engineVersion(@Nullable String engineVersion) {
            this.engineVersion = Output.ofNullable(engineVersion);
            return this;
        }
        public Builder identifier(@Nullable Output<String> identifier) {
            this.identifier = identifier;
            return this;
        }
        public Builder identifier(@Nullable String identifier) {
            this.identifier = Output.ofNullable(identifier);
            return this;
        }
        public Builder identifierPrefix(@Nullable Output<String> identifierPrefix) {
            this.identifierPrefix = identifierPrefix;
            return this;
        }
        public Builder identifierPrefix(@Nullable String identifierPrefix) {
            this.identifierPrefix = Output.ofNullable(identifierPrefix);
            return this;
        }
        public Builder instanceClass(@Nullable Output<String> instanceClass) {
            this.instanceClass = instanceClass;
            return this;
        }
        public Builder instanceClass(@Nullable String instanceClass) {
            this.instanceClass = Output.ofNullable(instanceClass);
            return this;
        }
        public Builder kmsKeyId(@Nullable Output<String> kmsKeyId) {
            this.kmsKeyId = kmsKeyId;
            return this;
        }
        public Builder kmsKeyId(@Nullable String kmsKeyId) {
            this.kmsKeyId = Output.ofNullable(kmsKeyId);
            return this;
        }
        public Builder port(@Nullable Output<Integer> port) {
            this.port = port;
            return this;
        }
        public Builder port(@Nullable Integer port) {
            this.port = Output.ofNullable(port);
            return this;
        }
        public Builder preferredBackupWindow(@Nullable Output<String> preferredBackupWindow) {
            this.preferredBackupWindow = preferredBackupWindow;
            return this;
        }
        public Builder preferredBackupWindow(@Nullable String preferredBackupWindow) {
            this.preferredBackupWindow = Output.ofNullable(preferredBackupWindow);
            return this;
        }
        public Builder preferredMaintenanceWindow(@Nullable Output<String> preferredMaintenanceWindow) {
            this.preferredMaintenanceWindow = preferredMaintenanceWindow;
            return this;
        }
        public Builder preferredMaintenanceWindow(@Nullable String preferredMaintenanceWindow) {
            this.preferredMaintenanceWindow = Output.ofNullable(preferredMaintenanceWindow);
            return this;
        }
        public Builder promotionTier(@Nullable Output<Integer> promotionTier) {
            this.promotionTier = promotionTier;
            return this;
        }
        public Builder promotionTier(@Nullable Integer promotionTier) {
            this.promotionTier = Output.ofNullable(promotionTier);
            return this;
        }
        public Builder publiclyAccessible(@Nullable Output<Boolean> publiclyAccessible) {
            this.publiclyAccessible = publiclyAccessible;
            return this;
        }
        public Builder publiclyAccessible(@Nullable Boolean publiclyAccessible) {
            this.publiclyAccessible = Output.ofNullable(publiclyAccessible);
            return this;
        }
        public Builder storageEncrypted(@Nullable Output<Boolean> storageEncrypted) {
            this.storageEncrypted = storageEncrypted;
            return this;
        }
        public Builder storageEncrypted(@Nullable Boolean storageEncrypted) {
            this.storageEncrypted = Output.ofNullable(storageEncrypted);
            return this;
        }
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = Output.ofNullable(tags);
            return this;
        }
        public Builder tagsAll(@Nullable Output<Map<String,String>> tagsAll) {
            this.tagsAll = tagsAll;
            return this;
        }
        public Builder tagsAll(@Nullable Map<String,String> tagsAll) {
            this.tagsAll = Output.ofNullable(tagsAll);
            return this;
        }
        public Builder writer(@Nullable Output<Boolean> writer) {
            this.writer = writer;
            return this;
        }
        public Builder writer(@Nullable Boolean writer) {
            this.writer = Output.ofNullable(writer);
            return this;
        }        public ClusterInstanceState build() {
            return new ClusterInstanceState(applyImmediately, arn, autoMinorVersionUpgrade, availabilityZone, caCertIdentifier, clusterIdentifier, dbSubnetGroupName, dbiResourceId, endpoint, engine, engineVersion, identifier, identifierPrefix, instanceClass, kmsKeyId, port, preferredBackupWindow, preferredMaintenanceWindow, promotionTier, publiclyAccessible, storageEncrypted, tags, tagsAll, writer);
        }
    }
}
