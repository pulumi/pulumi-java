// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.cloudfront.inputs;

import io.pulumi.aws.cloudfront.inputs.MonitoringSubscriptionMonitoringSubscriptionGetArgs;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class MonitoringSubscriptionState extends io.pulumi.resources.ResourceArgs {

    public static final MonitoringSubscriptionState Empty = new MonitoringSubscriptionState();

    /**
     * The ID of the distribution that you are enabling metrics for.
     * 
     */
    @InputImport(name="distributionId")
      private final @Nullable Input<String> distributionId;

    public Input<String> getDistributionId() {
        return this.distributionId == null ? Input.empty() : this.distributionId;
    }

    /**
     * A monitoring subscription. This structure contains information about whether additional CloudWatch metrics are enabled for a given CloudFront distribution.
     * 
     */
    @InputImport(name="monitoringSubscription")
      private final @Nullable Input<MonitoringSubscriptionMonitoringSubscriptionGetArgs> monitoringSubscription;

    public Input<MonitoringSubscriptionMonitoringSubscriptionGetArgs> getMonitoringSubscription() {
        return this.monitoringSubscription == null ? Input.empty() : this.monitoringSubscription;
    }

    public MonitoringSubscriptionState(
        @Nullable Input<String> distributionId,
        @Nullable Input<MonitoringSubscriptionMonitoringSubscriptionGetArgs> monitoringSubscription) {
        this.distributionId = distributionId;
        this.monitoringSubscription = monitoringSubscription;
    }

    private MonitoringSubscriptionState() {
        this.distributionId = Input.empty();
        this.monitoringSubscription = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MonitoringSubscriptionState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> distributionId;
        private @Nullable Input<MonitoringSubscriptionMonitoringSubscriptionGetArgs> monitoringSubscription;

        public Builder() {
    	      // Empty
        }

        public Builder(MonitoringSubscriptionState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.distributionId = defaults.distributionId;
    	      this.monitoringSubscription = defaults.monitoringSubscription;
        }

        public Builder distributionId(@Nullable Input<String> distributionId) {
            this.distributionId = distributionId;
            return this;
        }

        public Builder distributionId(@Nullable String distributionId) {
            this.distributionId = Input.ofNullable(distributionId);
            return this;
        }

        public Builder monitoringSubscription(@Nullable Input<MonitoringSubscriptionMonitoringSubscriptionGetArgs> monitoringSubscription) {
            this.monitoringSubscription = monitoringSubscription;
            return this;
        }

        public Builder monitoringSubscription(@Nullable MonitoringSubscriptionMonitoringSubscriptionGetArgs monitoringSubscription) {
            this.monitoringSubscription = Input.ofNullable(monitoringSubscription);
            return this;
        }
        public MonitoringSubscriptionState build() {
            return new MonitoringSubscriptionState(distributionId, monitoringSubscription);
        }
    }
}
