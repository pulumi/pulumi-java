// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.glue.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;


public final class ClassifierJsonClassifierArgs extends io.pulumi.resources.ResourceArgs {

    public static final ClassifierJsonClassifierArgs Empty = new ClassifierJsonClassifierArgs();

    /**
     * A `JsonPath` string defining the JSON data for the classifier to classify. AWS Glue supports a subset of `JsonPath`, as described in [Writing JsonPath Custom Classifiers](https://docs.aws.amazon.com/glue/latest/dg/custom-classifier.html#custom-classifier-json).
     * 
     */
    @InputImport(name="jsonPath", required=true)
      private final Input<String> jsonPath;

    public Input<String> getJsonPath() {
        return this.jsonPath;
    }

    public ClassifierJsonClassifierArgs(Input<String> jsonPath) {
        this.jsonPath = Objects.requireNonNull(jsonPath, "expected parameter 'jsonPath' to be non-null");
    }

    private ClassifierJsonClassifierArgs() {
        this.jsonPath = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ClassifierJsonClassifierArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<String> jsonPath;

        public Builder() {
    	      // Empty
        }

        public Builder(ClassifierJsonClassifierArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.jsonPath = defaults.jsonPath;
        }

        public Builder jsonPath(Input<String> jsonPath) {
            this.jsonPath = Objects.requireNonNull(jsonPath);
            return this;
        }

        public Builder jsonPath(String jsonPath) {
            this.jsonPath = Input.of(Objects.requireNonNull(jsonPath));
            return this;
        }
        public ClassifierJsonClassifierArgs build() {
            return new ClassifierJsonClassifierArgs(jsonPath);
        }
    }
}
