// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.storagegateway;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class UploadBufferArgs extends io.pulumi.resources.ResourceArgs {

    public static final UploadBufferArgs Empty = new UploadBufferArgs();

    /**
     * Local disk identifier. For example, `pci-0000:03:00.0-scsi-0:0:0:0`.
     * 
     */
    @InputImport(name="diskId")
    private final @Nullable Input<String> diskId;

    public Input<String> getDiskId() {
        return this.diskId == null ? Input.empty() : this.diskId;
    }

    /**
     * Local disk path. For example, `/dev/nvme1n1`.
     * 
     */
    @InputImport(name="diskPath")
    private final @Nullable Input<String> diskPath;

    public Input<String> getDiskPath() {
        return this.diskPath == null ? Input.empty() : this.diskPath;
    }

    /**
     * The Amazon Resource Name (ARN) of the gateway.
     * 
     */
    @InputImport(name="gatewayArn", required=true)
    private final Input<String> gatewayArn;

    public Input<String> getGatewayArn() {
        return this.gatewayArn;
    }

    public UploadBufferArgs(
        @Nullable Input<String> diskId,
        @Nullable Input<String> diskPath,
        Input<String> gatewayArn) {
        this.diskId = diskId;
        this.diskPath = diskPath;
        this.gatewayArn = Objects.requireNonNull(gatewayArn, "expected parameter 'gatewayArn' to be non-null");
    }

    private UploadBufferArgs() {
        this.diskId = Input.empty();
        this.diskPath = Input.empty();
        this.gatewayArn = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(UploadBufferArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> diskId;
        private @Nullable Input<String> diskPath;
        private Input<String> gatewayArn;

        public Builder() {
    	      // Empty
        }

        public Builder(UploadBufferArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.diskId = defaults.diskId;
    	      this.diskPath = defaults.diskPath;
    	      this.gatewayArn = defaults.gatewayArn;
        }

        public Builder setDiskId(@Nullable Input<String> diskId) {
            this.diskId = diskId;
            return this;
        }

        public Builder setDiskId(@Nullable String diskId) {
            this.diskId = Input.ofNullable(diskId);
            return this;
        }

        public Builder setDiskPath(@Nullable Input<String> diskPath) {
            this.diskPath = diskPath;
            return this;
        }

        public Builder setDiskPath(@Nullable String diskPath) {
            this.diskPath = Input.ofNullable(diskPath);
            return this;
        }

        public Builder setGatewayArn(Input<String> gatewayArn) {
            this.gatewayArn = Objects.requireNonNull(gatewayArn);
            return this;
        }

        public Builder setGatewayArn(String gatewayArn) {
            this.gatewayArn = Input.of(Objects.requireNonNull(gatewayArn));
            return this;
        }
        public UploadBufferArgs build() {
            return new UploadBufferArgs(diskId, diskPath, gatewayArn);
        }
    }
}
