// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.storagegateway.inputs;

import io.pulumi.aws.storagegateway.inputs.SmbFileShareCacheAttributesGetArgs;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class SmbFileShareState extends io.pulumi.resources.ResourceArgs {

    public static final SmbFileShareState Empty = new SmbFileShareState();

    /**
     * The files and folders on this share will only be visible to users with read access. Default value is `false`.
     * 
     */
    @InputImport(name="accessBasedEnumeration")
      private final @Nullable Input<Boolean> accessBasedEnumeration;

    public Input<Boolean> getAccessBasedEnumeration() {
        return this.accessBasedEnumeration == null ? Input.empty() : this.accessBasedEnumeration;
    }

    /**
     * A list of users in the Active Directory that have admin access to the file share. Only valid if `authentication` is set to `ActiveDirectory`.
     * 
     */
    @InputImport(name="adminUserLists")
      private final @Nullable Input<List<String>> adminUserLists;

    public Input<List<String>> getAdminUserLists() {
        return this.adminUserLists == null ? Input.empty() : this.adminUserLists;
    }

    /**
     * Amazon Resource Name (ARN) of the SMB File Share.
     * 
     */
    @InputImport(name="arn")
      private final @Nullable Input<String> arn;

    public Input<String> getArn() {
        return this.arn == null ? Input.empty() : this.arn;
    }

    /**
     * The Amazon Resource Name (ARN) of the CloudWatch Log Group used for the audit logs.
     * 
     */
    @InputImport(name="auditDestinationArn")
      private final @Nullable Input<String> auditDestinationArn;

    public Input<String> getAuditDestinationArn() {
        return this.auditDestinationArn == null ? Input.empty() : this.auditDestinationArn;
    }

    /**
     * The authentication method that users use to access the file share. Defaults to `ActiveDirectory`. Valid values: `ActiveDirectory`, `GuestAccess`.
     * 
     */
    @InputImport(name="authentication")
      private final @Nullable Input<String> authentication;

    public Input<String> getAuthentication() {
        return this.authentication == null ? Input.empty() : this.authentication;
    }

    /**
     * The region of the S3 buck used by the file share. Required when specifying a `vpc_endpoint_dns_name`.
     * 
     */
    @InputImport(name="bucketRegion")
      private final @Nullable Input<String> bucketRegion;

    public Input<String> getBucketRegion() {
        return this.bucketRegion == null ? Input.empty() : this.bucketRegion;
    }

    /**
     * Refresh cache information. see Cache Attributes for more details.
     * 
     */
    @InputImport(name="cacheAttributes")
      private final @Nullable Input<SmbFileShareCacheAttributesGetArgs> cacheAttributes;

    public Input<SmbFileShareCacheAttributesGetArgs> getCacheAttributes() {
        return this.cacheAttributes == null ? Input.empty() : this.cacheAttributes;
    }

    /**
     * The case of an object name in an Amazon S3 bucket. For `ClientSpecified`, the client determines the case sensitivity. For `CaseSensitive`, the gateway determines the case sensitivity. The default value is `ClientSpecified`.
     * 
     */
    @InputImport(name="caseSensitivity")
      private final @Nullable Input<String> caseSensitivity;

    public Input<String> getCaseSensitivity() {
        return this.caseSensitivity == null ? Input.empty() : this.caseSensitivity;
    }

    /**
     * The default [storage class](https://docs.aws.amazon.com/storagegateway/latest/APIReference/API_CreateNFSFileShare.html#StorageGateway-CreateNFSFileShare-request-DefaultStorageClass) for objects put into an Amazon S3 bucket by the file gateway. Defaults to `S3_STANDARD`.
     * 
     */
    @InputImport(name="defaultStorageClass")
      private final @Nullable Input<String> defaultStorageClass;

    public Input<String> getDefaultStorageClass() {
        return this.defaultStorageClass == null ? Input.empty() : this.defaultStorageClass;
    }

    /**
     * The name of the file share. Must be set if an S3 prefix name is set in `location_arn`.
     * 
     */
    @InputImport(name="fileShareName")
      private final @Nullable Input<String> fileShareName;

    public Input<String> getFileShareName() {
        return this.fileShareName == null ? Input.empty() : this.fileShareName;
    }

    /**
     * ID of the SMB File Share.
     * 
     */
    @InputImport(name="fileshareId")
      private final @Nullable Input<String> fileshareId;

    public Input<String> getFileshareId() {
        return this.fileshareId == null ? Input.empty() : this.fileshareId;
    }

    /**
     * Amazon Resource Name (ARN) of the file gateway.
     * 
     */
    @InputImport(name="gatewayArn")
      private final @Nullable Input<String> gatewayArn;

    public Input<String> getGatewayArn() {
        return this.gatewayArn == null ? Input.empty() : this.gatewayArn;
    }

    /**
     * Boolean value that enables guessing of the MIME type for uploaded objects based on file extensions. Defaults to `true`.
     * 
     */
    @InputImport(name="guessMimeTypeEnabled")
      private final @Nullable Input<Boolean> guessMimeTypeEnabled;

    public Input<Boolean> getGuessMimeTypeEnabled() {
        return this.guessMimeTypeEnabled == null ? Input.empty() : this.guessMimeTypeEnabled;
    }

    /**
     * A list of users in the Active Directory that are not allowed to access the file share. Only valid if `authentication` is set to `ActiveDirectory`.
     * 
     */
    @InputImport(name="invalidUserLists")
      private final @Nullable Input<List<String>> invalidUserLists;

    public Input<List<String>> getInvalidUserLists() {
        return this.invalidUserLists == null ? Input.empty() : this.invalidUserLists;
    }

    /**
     * Boolean value if `true` to use Amazon S3 server side encryption with your own AWS KMS key, or `false` to use a key managed by Amazon S3. Defaults to `false`.
     * 
     */
    @InputImport(name="kmsEncrypted")
      private final @Nullable Input<Boolean> kmsEncrypted;

    public Input<Boolean> getKmsEncrypted() {
        return this.kmsEncrypted == null ? Input.empty() : this.kmsEncrypted;
    }

    /**
     * Amazon Resource Name (ARN) for KMS key used for Amazon S3 server side encryption. This value can only be set when `kms_encrypted` is true.
     * 
     */
    @InputImport(name="kmsKeyArn")
      private final @Nullable Input<String> kmsKeyArn;

    public Input<String> getKmsKeyArn() {
        return this.kmsKeyArn == null ? Input.empty() : this.kmsKeyArn;
    }

    /**
     * The ARN of the backed storage used for storing file data.
     * 
     */
    @InputImport(name="locationArn")
      private final @Nullable Input<String> locationArn;

    public Input<String> getLocationArn() {
        return this.locationArn == null ? Input.empty() : this.locationArn;
    }

    /**
     * The notification policy of the file share. For more information see the [AWS Documentation](https://docs.aws.amazon.com/storagegateway/latest/APIReference/API_CreateNFSFileShare.html#StorageGateway-CreateNFSFileShare-request-NotificationPolicy). Default value is `{}`.
     * 
     */
    @InputImport(name="notificationPolicy")
      private final @Nullable Input<String> notificationPolicy;

    public Input<String> getNotificationPolicy() {
        return this.notificationPolicy == null ? Input.empty() : this.notificationPolicy;
    }

    /**
     * Access Control List permission for S3 bucket objects. Defaults to `private`.
     * 
     */
    @InputImport(name="objectAcl")
      private final @Nullable Input<String> objectAcl;

    public Input<String> getObjectAcl() {
        return this.objectAcl == null ? Input.empty() : this.objectAcl;
    }

    /**
     * Boolean to indicate Opportunistic lock (oplock) status. Defaults to `true`.
     * 
     */
    @InputImport(name="oplocksEnabled")
      private final @Nullable Input<Boolean> oplocksEnabled;

    public Input<Boolean> getOplocksEnabled() {
        return this.oplocksEnabled == null ? Input.empty() : this.oplocksEnabled;
    }

    /**
     * File share path used by the NFS client to identify the mount point.
     * 
     */
    @InputImport(name="path")
      private final @Nullable Input<String> path;

    public Input<String> getPath() {
        return this.path == null ? Input.empty() : this.path;
    }

    /**
     * Boolean to indicate write status of file share. File share does not accept writes if `true`. Defaults to `false`.
     * 
     */
    @InputImport(name="readOnly")
      private final @Nullable Input<Boolean> readOnly;

    public Input<Boolean> getReadOnly() {
        return this.readOnly == null ? Input.empty() : this.readOnly;
    }

    /**
     * Boolean who pays the cost of the request and the data download from the Amazon S3 bucket. Set this value to `true` if you want the requester to pay instead of the bucket owner. Defaults to `false`.
     * 
     */
    @InputImport(name="requesterPays")
      private final @Nullable Input<Boolean> requesterPays;

    public Input<Boolean> getRequesterPays() {
        return this.requesterPays == null ? Input.empty() : this.requesterPays;
    }

    /**
     * The ARN of the AWS Identity and Access Management (IAM) role that a file gateway assumes when it accesses the underlying storage.
     * 
     */
    @InputImport(name="roleArn")
      private final @Nullable Input<String> roleArn;

    public Input<String> getRoleArn() {
        return this.roleArn == null ? Input.empty() : this.roleArn;
    }

    /**
     * Set this value to `true` to enable ACL (access control list) on the SMB fileshare. Set it to `false` to map file and directory permissions to the POSIX permissions. This setting applies only to `ActiveDirectory` authentication type.
     * 
     */
    @InputImport(name="smbAclEnabled")
      private final @Nullable Input<Boolean> smbAclEnabled;

    public Input<Boolean> getSmbAclEnabled() {
        return this.smbAclEnabled == null ? Input.empty() : this.smbAclEnabled;
    }

    /**
     * Key-value map of resource tags. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @InputImport(name="tags")
      private final @Nullable Input<Map<String,String>> tags;

    public Input<Map<String,String>> getTags() {
        return this.tags == null ? Input.empty() : this.tags;
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider .
     * 
     */
    @InputImport(name="tagsAll")
      private final @Nullable Input<Map<String,String>> tagsAll;

    public Input<Map<String,String>> getTagsAll() {
        return this.tagsAll == null ? Input.empty() : this.tagsAll;
    }

    /**
     * A list of users in the Active Directory that are allowed to access the file share. If you need to specify an Active directory group, add '@' before the name of the group. It will be set on Allowed group in AWS console. Only valid if `authentication` is set to `ActiveDirectory`.
     * 
     */
    @InputImport(name="validUserLists")
      private final @Nullable Input<List<String>> validUserLists;

    public Input<List<String>> getValidUserLists() {
        return this.validUserLists == null ? Input.empty() : this.validUserLists;
    }

    /**
     * The DNS name of the VPC endpoint for S3 private link.
     * 
     */
    @InputImport(name="vpcEndpointDnsName")
      private final @Nullable Input<String> vpcEndpointDnsName;

    public Input<String> getVpcEndpointDnsName() {
        return this.vpcEndpointDnsName == null ? Input.empty() : this.vpcEndpointDnsName;
    }

    public SmbFileShareState(
        @Nullable Input<Boolean> accessBasedEnumeration,
        @Nullable Input<List<String>> adminUserLists,
        @Nullable Input<String> arn,
        @Nullable Input<String> auditDestinationArn,
        @Nullable Input<String> authentication,
        @Nullable Input<String> bucketRegion,
        @Nullable Input<SmbFileShareCacheAttributesGetArgs> cacheAttributes,
        @Nullable Input<String> caseSensitivity,
        @Nullable Input<String> defaultStorageClass,
        @Nullable Input<String> fileShareName,
        @Nullable Input<String> fileshareId,
        @Nullable Input<String> gatewayArn,
        @Nullable Input<Boolean> guessMimeTypeEnabled,
        @Nullable Input<List<String>> invalidUserLists,
        @Nullable Input<Boolean> kmsEncrypted,
        @Nullable Input<String> kmsKeyArn,
        @Nullable Input<String> locationArn,
        @Nullable Input<String> notificationPolicy,
        @Nullable Input<String> objectAcl,
        @Nullable Input<Boolean> oplocksEnabled,
        @Nullable Input<String> path,
        @Nullable Input<Boolean> readOnly,
        @Nullable Input<Boolean> requesterPays,
        @Nullable Input<String> roleArn,
        @Nullable Input<Boolean> smbAclEnabled,
        @Nullable Input<Map<String,String>> tags,
        @Nullable Input<Map<String,String>> tagsAll,
        @Nullable Input<List<String>> validUserLists,
        @Nullable Input<String> vpcEndpointDnsName) {
        this.accessBasedEnumeration = accessBasedEnumeration;
        this.adminUserLists = adminUserLists;
        this.arn = arn;
        this.auditDestinationArn = auditDestinationArn;
        this.authentication = authentication;
        this.bucketRegion = bucketRegion;
        this.cacheAttributes = cacheAttributes;
        this.caseSensitivity = caseSensitivity;
        this.defaultStorageClass = defaultStorageClass;
        this.fileShareName = fileShareName;
        this.fileshareId = fileshareId;
        this.gatewayArn = gatewayArn;
        this.guessMimeTypeEnabled = guessMimeTypeEnabled;
        this.invalidUserLists = invalidUserLists;
        this.kmsEncrypted = kmsEncrypted;
        this.kmsKeyArn = kmsKeyArn;
        this.locationArn = locationArn;
        this.notificationPolicy = notificationPolicy;
        this.objectAcl = objectAcl;
        this.oplocksEnabled = oplocksEnabled;
        this.path = path;
        this.readOnly = readOnly;
        this.requesterPays = requesterPays;
        this.roleArn = roleArn;
        this.smbAclEnabled = smbAclEnabled;
        this.tags = tags;
        this.tagsAll = tagsAll;
        this.validUserLists = validUserLists;
        this.vpcEndpointDnsName = vpcEndpointDnsName;
    }

    private SmbFileShareState() {
        this.accessBasedEnumeration = Input.empty();
        this.adminUserLists = Input.empty();
        this.arn = Input.empty();
        this.auditDestinationArn = Input.empty();
        this.authentication = Input.empty();
        this.bucketRegion = Input.empty();
        this.cacheAttributes = Input.empty();
        this.caseSensitivity = Input.empty();
        this.defaultStorageClass = Input.empty();
        this.fileShareName = Input.empty();
        this.fileshareId = Input.empty();
        this.gatewayArn = Input.empty();
        this.guessMimeTypeEnabled = Input.empty();
        this.invalidUserLists = Input.empty();
        this.kmsEncrypted = Input.empty();
        this.kmsKeyArn = Input.empty();
        this.locationArn = Input.empty();
        this.notificationPolicy = Input.empty();
        this.objectAcl = Input.empty();
        this.oplocksEnabled = Input.empty();
        this.path = Input.empty();
        this.readOnly = Input.empty();
        this.requesterPays = Input.empty();
        this.roleArn = Input.empty();
        this.smbAclEnabled = Input.empty();
        this.tags = Input.empty();
        this.tagsAll = Input.empty();
        this.validUserLists = Input.empty();
        this.vpcEndpointDnsName = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SmbFileShareState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<Boolean> accessBasedEnumeration;
        private @Nullable Input<List<String>> adminUserLists;
        private @Nullable Input<String> arn;
        private @Nullable Input<String> auditDestinationArn;
        private @Nullable Input<String> authentication;
        private @Nullable Input<String> bucketRegion;
        private @Nullable Input<SmbFileShareCacheAttributesGetArgs> cacheAttributes;
        private @Nullable Input<String> caseSensitivity;
        private @Nullable Input<String> defaultStorageClass;
        private @Nullable Input<String> fileShareName;
        private @Nullable Input<String> fileshareId;
        private @Nullable Input<String> gatewayArn;
        private @Nullable Input<Boolean> guessMimeTypeEnabled;
        private @Nullable Input<List<String>> invalidUserLists;
        private @Nullable Input<Boolean> kmsEncrypted;
        private @Nullable Input<String> kmsKeyArn;
        private @Nullable Input<String> locationArn;
        private @Nullable Input<String> notificationPolicy;
        private @Nullable Input<String> objectAcl;
        private @Nullable Input<Boolean> oplocksEnabled;
        private @Nullable Input<String> path;
        private @Nullable Input<Boolean> readOnly;
        private @Nullable Input<Boolean> requesterPays;
        private @Nullable Input<String> roleArn;
        private @Nullable Input<Boolean> smbAclEnabled;
        private @Nullable Input<Map<String,String>> tags;
        private @Nullable Input<Map<String,String>> tagsAll;
        private @Nullable Input<List<String>> validUserLists;
        private @Nullable Input<String> vpcEndpointDnsName;

        public Builder() {
    	      // Empty
        }

        public Builder(SmbFileShareState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessBasedEnumeration = defaults.accessBasedEnumeration;
    	      this.adminUserLists = defaults.adminUserLists;
    	      this.arn = defaults.arn;
    	      this.auditDestinationArn = defaults.auditDestinationArn;
    	      this.authentication = defaults.authentication;
    	      this.bucketRegion = defaults.bucketRegion;
    	      this.cacheAttributes = defaults.cacheAttributes;
    	      this.caseSensitivity = defaults.caseSensitivity;
    	      this.defaultStorageClass = defaults.defaultStorageClass;
    	      this.fileShareName = defaults.fileShareName;
    	      this.fileshareId = defaults.fileshareId;
    	      this.gatewayArn = defaults.gatewayArn;
    	      this.guessMimeTypeEnabled = defaults.guessMimeTypeEnabled;
    	      this.invalidUserLists = defaults.invalidUserLists;
    	      this.kmsEncrypted = defaults.kmsEncrypted;
    	      this.kmsKeyArn = defaults.kmsKeyArn;
    	      this.locationArn = defaults.locationArn;
    	      this.notificationPolicy = defaults.notificationPolicy;
    	      this.objectAcl = defaults.objectAcl;
    	      this.oplocksEnabled = defaults.oplocksEnabled;
    	      this.path = defaults.path;
    	      this.readOnly = defaults.readOnly;
    	      this.requesterPays = defaults.requesterPays;
    	      this.roleArn = defaults.roleArn;
    	      this.smbAclEnabled = defaults.smbAclEnabled;
    	      this.tags = defaults.tags;
    	      this.tagsAll = defaults.tagsAll;
    	      this.validUserLists = defaults.validUserLists;
    	      this.vpcEndpointDnsName = defaults.vpcEndpointDnsName;
        }

        public Builder setAccessBasedEnumeration(@Nullable Input<Boolean> accessBasedEnumeration) {
            this.accessBasedEnumeration = accessBasedEnumeration;
            return this;
        }

        public Builder setAccessBasedEnumeration(@Nullable Boolean accessBasedEnumeration) {
            this.accessBasedEnumeration = Input.ofNullable(accessBasedEnumeration);
            return this;
        }

        public Builder setAdminUserLists(@Nullable Input<List<String>> adminUserLists) {
            this.adminUserLists = adminUserLists;
            return this;
        }

        public Builder setAdminUserLists(@Nullable List<String> adminUserLists) {
            this.adminUserLists = Input.ofNullable(adminUserLists);
            return this;
        }

        public Builder setArn(@Nullable Input<String> arn) {
            this.arn = arn;
            return this;
        }

        public Builder setArn(@Nullable String arn) {
            this.arn = Input.ofNullable(arn);
            return this;
        }

        public Builder setAuditDestinationArn(@Nullable Input<String> auditDestinationArn) {
            this.auditDestinationArn = auditDestinationArn;
            return this;
        }

        public Builder setAuditDestinationArn(@Nullable String auditDestinationArn) {
            this.auditDestinationArn = Input.ofNullable(auditDestinationArn);
            return this;
        }

        public Builder setAuthentication(@Nullable Input<String> authentication) {
            this.authentication = authentication;
            return this;
        }

        public Builder setAuthentication(@Nullable String authentication) {
            this.authentication = Input.ofNullable(authentication);
            return this;
        }

        public Builder setBucketRegion(@Nullable Input<String> bucketRegion) {
            this.bucketRegion = bucketRegion;
            return this;
        }

        public Builder setBucketRegion(@Nullable String bucketRegion) {
            this.bucketRegion = Input.ofNullable(bucketRegion);
            return this;
        }

        public Builder setCacheAttributes(@Nullable Input<SmbFileShareCacheAttributesGetArgs> cacheAttributes) {
            this.cacheAttributes = cacheAttributes;
            return this;
        }

        public Builder setCacheAttributes(@Nullable SmbFileShareCacheAttributesGetArgs cacheAttributes) {
            this.cacheAttributes = Input.ofNullable(cacheAttributes);
            return this;
        }

        public Builder setCaseSensitivity(@Nullable Input<String> caseSensitivity) {
            this.caseSensitivity = caseSensitivity;
            return this;
        }

        public Builder setCaseSensitivity(@Nullable String caseSensitivity) {
            this.caseSensitivity = Input.ofNullable(caseSensitivity);
            return this;
        }

        public Builder setDefaultStorageClass(@Nullable Input<String> defaultStorageClass) {
            this.defaultStorageClass = defaultStorageClass;
            return this;
        }

        public Builder setDefaultStorageClass(@Nullable String defaultStorageClass) {
            this.defaultStorageClass = Input.ofNullable(defaultStorageClass);
            return this;
        }

        public Builder setFileShareName(@Nullable Input<String> fileShareName) {
            this.fileShareName = fileShareName;
            return this;
        }

        public Builder setFileShareName(@Nullable String fileShareName) {
            this.fileShareName = Input.ofNullable(fileShareName);
            return this;
        }

        public Builder setFileshareId(@Nullable Input<String> fileshareId) {
            this.fileshareId = fileshareId;
            return this;
        }

        public Builder setFileshareId(@Nullable String fileshareId) {
            this.fileshareId = Input.ofNullable(fileshareId);
            return this;
        }

        public Builder setGatewayArn(@Nullable Input<String> gatewayArn) {
            this.gatewayArn = gatewayArn;
            return this;
        }

        public Builder setGatewayArn(@Nullable String gatewayArn) {
            this.gatewayArn = Input.ofNullable(gatewayArn);
            return this;
        }

        public Builder setGuessMimeTypeEnabled(@Nullable Input<Boolean> guessMimeTypeEnabled) {
            this.guessMimeTypeEnabled = guessMimeTypeEnabled;
            return this;
        }

        public Builder setGuessMimeTypeEnabled(@Nullable Boolean guessMimeTypeEnabled) {
            this.guessMimeTypeEnabled = Input.ofNullable(guessMimeTypeEnabled);
            return this;
        }

        public Builder setInvalidUserLists(@Nullable Input<List<String>> invalidUserLists) {
            this.invalidUserLists = invalidUserLists;
            return this;
        }

        public Builder setInvalidUserLists(@Nullable List<String> invalidUserLists) {
            this.invalidUserLists = Input.ofNullable(invalidUserLists);
            return this;
        }

        public Builder setKmsEncrypted(@Nullable Input<Boolean> kmsEncrypted) {
            this.kmsEncrypted = kmsEncrypted;
            return this;
        }

        public Builder setKmsEncrypted(@Nullable Boolean kmsEncrypted) {
            this.kmsEncrypted = Input.ofNullable(kmsEncrypted);
            return this;
        }

        public Builder setKmsKeyArn(@Nullable Input<String> kmsKeyArn) {
            this.kmsKeyArn = kmsKeyArn;
            return this;
        }

        public Builder setKmsKeyArn(@Nullable String kmsKeyArn) {
            this.kmsKeyArn = Input.ofNullable(kmsKeyArn);
            return this;
        }

        public Builder setLocationArn(@Nullable Input<String> locationArn) {
            this.locationArn = locationArn;
            return this;
        }

        public Builder setLocationArn(@Nullable String locationArn) {
            this.locationArn = Input.ofNullable(locationArn);
            return this;
        }

        public Builder setNotificationPolicy(@Nullable Input<String> notificationPolicy) {
            this.notificationPolicy = notificationPolicy;
            return this;
        }

        public Builder setNotificationPolicy(@Nullable String notificationPolicy) {
            this.notificationPolicy = Input.ofNullable(notificationPolicy);
            return this;
        }

        public Builder setObjectAcl(@Nullable Input<String> objectAcl) {
            this.objectAcl = objectAcl;
            return this;
        }

        public Builder setObjectAcl(@Nullable String objectAcl) {
            this.objectAcl = Input.ofNullable(objectAcl);
            return this;
        }

        public Builder setOplocksEnabled(@Nullable Input<Boolean> oplocksEnabled) {
            this.oplocksEnabled = oplocksEnabled;
            return this;
        }

        public Builder setOplocksEnabled(@Nullable Boolean oplocksEnabled) {
            this.oplocksEnabled = Input.ofNullable(oplocksEnabled);
            return this;
        }

        public Builder setPath(@Nullable Input<String> path) {
            this.path = path;
            return this;
        }

        public Builder setPath(@Nullable String path) {
            this.path = Input.ofNullable(path);
            return this;
        }

        public Builder setReadOnly(@Nullable Input<Boolean> readOnly) {
            this.readOnly = readOnly;
            return this;
        }

        public Builder setReadOnly(@Nullable Boolean readOnly) {
            this.readOnly = Input.ofNullable(readOnly);
            return this;
        }

        public Builder setRequesterPays(@Nullable Input<Boolean> requesterPays) {
            this.requesterPays = requesterPays;
            return this;
        }

        public Builder setRequesterPays(@Nullable Boolean requesterPays) {
            this.requesterPays = Input.ofNullable(requesterPays);
            return this;
        }

        public Builder setRoleArn(@Nullable Input<String> roleArn) {
            this.roleArn = roleArn;
            return this;
        }

        public Builder setRoleArn(@Nullable String roleArn) {
            this.roleArn = Input.ofNullable(roleArn);
            return this;
        }

        public Builder setSmbAclEnabled(@Nullable Input<Boolean> smbAclEnabled) {
            this.smbAclEnabled = smbAclEnabled;
            return this;
        }

        public Builder setSmbAclEnabled(@Nullable Boolean smbAclEnabled) {
            this.smbAclEnabled = Input.ofNullable(smbAclEnabled);
            return this;
        }

        public Builder setTags(@Nullable Input<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }

        public Builder setTags(@Nullable Map<String,String> tags) {
            this.tags = Input.ofNullable(tags);
            return this;
        }

        public Builder setTagsAll(@Nullable Input<Map<String,String>> tagsAll) {
            this.tagsAll = tagsAll;
            return this;
        }

        public Builder setTagsAll(@Nullable Map<String,String> tagsAll) {
            this.tagsAll = Input.ofNullable(tagsAll);
            return this;
        }

        public Builder setValidUserLists(@Nullable Input<List<String>> validUserLists) {
            this.validUserLists = validUserLists;
            return this;
        }

        public Builder setValidUserLists(@Nullable List<String> validUserLists) {
            this.validUserLists = Input.ofNullable(validUserLists);
            return this;
        }

        public Builder setVpcEndpointDnsName(@Nullable Input<String> vpcEndpointDnsName) {
            this.vpcEndpointDnsName = vpcEndpointDnsName;
            return this;
        }

        public Builder setVpcEndpointDnsName(@Nullable String vpcEndpointDnsName) {
            this.vpcEndpointDnsName = Input.ofNullable(vpcEndpointDnsName);
            return this;
        }
        public SmbFileShareState build() {
            return new SmbFileShareState(accessBasedEnumeration, adminUserLists, arn, auditDestinationArn, authentication, bucketRegion, cacheAttributes, caseSensitivity, defaultStorageClass, fileShareName, fileshareId, gatewayArn, guessMimeTypeEnabled, invalidUserLists, kmsEncrypted, kmsKeyArn, locationArn, notificationPolicy, objectAcl, oplocksEnabled, path, readOnly, requesterPays, roleArn, smbAclEnabled, tags, tagsAll, validUserLists, vpcEndpointDnsName);
        }
    }
}
