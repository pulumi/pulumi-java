// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.apigateway.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class UsagePlanQuotaSettingsGetArgs extends io.pulumi.resources.ResourceArgs {

    public static final UsagePlanQuotaSettingsGetArgs Empty = new UsagePlanQuotaSettingsGetArgs();

    /**
     * The maximum number of requests that can be made in a given time period.
     * 
     */
    @InputImport(name="limit", required=true)
    private final Input<Integer> limit;

    public Input<Integer> getLimit() {
        return this.limit;
    }

    /**
     * The number of requests subtracted from the given limit in the initial time period.
     * 
     */
    @InputImport(name="offset")
    private final @Nullable Input<Integer> offset;

    public Input<Integer> getOffset() {
        return this.offset == null ? Input.empty() : this.offset;
    }

    /**
     * The time period in which the limit applies. Valid values are "DAY", "WEEK" or "MONTH".
     * 
     */
    @InputImport(name="period", required=true)
    private final Input<String> period;

    public Input<String> getPeriod() {
        return this.period;
    }

    public UsagePlanQuotaSettingsGetArgs(
        Input<Integer> limit,
        @Nullable Input<Integer> offset,
        Input<String> period) {
        this.limit = Objects.requireNonNull(limit, "expected parameter 'limit' to be non-null");
        this.offset = offset;
        this.period = Objects.requireNonNull(period, "expected parameter 'period' to be non-null");
    }

    private UsagePlanQuotaSettingsGetArgs() {
        this.limit = Input.empty();
        this.offset = Input.empty();
        this.period = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(UsagePlanQuotaSettingsGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<Integer> limit;
        private @Nullable Input<Integer> offset;
        private Input<String> period;

        public Builder() {
    	      // Empty
        }

        public Builder(UsagePlanQuotaSettingsGetArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.limit = defaults.limit;
    	      this.offset = defaults.offset;
    	      this.period = defaults.period;
        }

        public Builder setLimit(Input<Integer> limit) {
            this.limit = Objects.requireNonNull(limit);
            return this;
        }

        public Builder setLimit(Integer limit) {
            this.limit = Input.of(Objects.requireNonNull(limit));
            return this;
        }

        public Builder setOffset(@Nullable Input<Integer> offset) {
            this.offset = offset;
            return this;
        }

        public Builder setOffset(@Nullable Integer offset) {
            this.offset = Input.ofNullable(offset);
            return this;
        }

        public Builder setPeriod(Input<String> period) {
            this.period = Objects.requireNonNull(period);
            return this;
        }

        public Builder setPeriod(String period) {
            this.period = Input.of(Objects.requireNonNull(period));
            return this;
        }
        public UsagePlanQuotaSettingsGetArgs build() {
            return new UsagePlanQuotaSettingsGetArgs(limit, offset, period);
        }
    }
}
