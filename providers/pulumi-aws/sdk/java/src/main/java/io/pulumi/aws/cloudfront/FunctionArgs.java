// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.cloudfront;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class FunctionArgs extends io.pulumi.resources.ResourceArgs {

    public static final FunctionArgs Empty = new FunctionArgs();

    /**
     * Source code of the function
     * 
     */
    @InputImport(name="code", required=true)
      private final Input<String> code;

    public Input<String> getCode() {
        return this.code;
    }

    /**
     * Comment.
     * 
     */
    @InputImport(name="comment")
      private final @Nullable Input<String> comment;

    public Input<String> getComment() {
        return this.comment == null ? Input.empty() : this.comment;
    }

    /**
     * Unique name for your CloudFront Function.
     * 
     */
    @InputImport(name="name")
      private final @Nullable Input<String> name;

    public Input<String> getName() {
        return this.name == null ? Input.empty() : this.name;
    }

    /**
     * Whether to publish creation/change as Live CloudFront Function Version. Defaults to `true`.
     * 
     */
    @InputImport(name="publish")
      private final @Nullable Input<Boolean> publish;

    public Input<Boolean> getPublish() {
        return this.publish == null ? Input.empty() : this.publish;
    }

    /**
     * Identifier of the function's runtime. Currently only `cloudfront-js-1.0` is valid.
     * 
     */
    @InputImport(name="runtime", required=true)
      private final Input<String> runtime;

    public Input<String> getRuntime() {
        return this.runtime;
    }

    public FunctionArgs(
        Input<String> code,
        @Nullable Input<String> comment,
        @Nullable Input<String> name,
        @Nullable Input<Boolean> publish,
        Input<String> runtime) {
        this.code = Objects.requireNonNull(code, "expected parameter 'code' to be non-null");
        this.comment = comment;
        this.name = name;
        this.publish = publish;
        this.runtime = Objects.requireNonNull(runtime, "expected parameter 'runtime' to be non-null");
    }

    private FunctionArgs() {
        this.code = Input.empty();
        this.comment = Input.empty();
        this.name = Input.empty();
        this.publish = Input.empty();
        this.runtime = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FunctionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<String> code;
        private @Nullable Input<String> comment;
        private @Nullable Input<String> name;
        private @Nullable Input<Boolean> publish;
        private Input<String> runtime;

        public Builder() {
    	      // Empty
        }

        public Builder(FunctionArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.code = defaults.code;
    	      this.comment = defaults.comment;
    	      this.name = defaults.name;
    	      this.publish = defaults.publish;
    	      this.runtime = defaults.runtime;
        }

        public Builder setCode(Input<String> code) {
            this.code = Objects.requireNonNull(code);
            return this;
        }

        public Builder setCode(String code) {
            this.code = Input.of(Objects.requireNonNull(code));
            return this;
        }

        public Builder setComment(@Nullable Input<String> comment) {
            this.comment = comment;
            return this;
        }

        public Builder setComment(@Nullable String comment) {
            this.comment = Input.ofNullable(comment);
            return this;
        }

        public Builder setName(@Nullable Input<String> name) {
            this.name = name;
            return this;
        }

        public Builder setName(@Nullable String name) {
            this.name = Input.ofNullable(name);
            return this;
        }

        public Builder setPublish(@Nullable Input<Boolean> publish) {
            this.publish = publish;
            return this;
        }

        public Builder setPublish(@Nullable Boolean publish) {
            this.publish = Input.ofNullable(publish);
            return this;
        }

        public Builder setRuntime(Input<String> runtime) {
            this.runtime = Objects.requireNonNull(runtime);
            return this;
        }

        public Builder setRuntime(String runtime) {
            this.runtime = Input.of(Objects.requireNonNull(runtime));
            return this;
        }
        public FunctionArgs build() {
            return new FunctionArgs(code, comment, name, publish, runtime);
        }
    }
}
