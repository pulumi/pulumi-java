// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.secretsmanager;

import io.pulumi.aws.Utilities;
import io.pulumi.aws.secretsmanager.SecretPolicyArgs;
import io.pulumi.aws.secretsmanager.inputs.SecretPolicyState;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Export;
import io.pulumi.core.annotations.ResourceType;
import java.lang.Boolean;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * Provides a resource to manage AWS Secrets Manager secret policy.
 * 
 * {{% examples %}}
 * ## Example Usage
 * {{% example %}}
 * ### Basic
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 * 
 * const exampleSecret = new aws.secretsmanager.Secret("exampleSecret", {});
 * const exampleSecretPolicy = new aws.secretsmanager.SecretPolicy("exampleSecretPolicy", {
 *     secretArn: exampleSecret.arn,
 *     policy: `{
 *   "Version": "2012-10-17",
 *   "Statement": [
 * 	{
 * 	  "Sid": "EnableAnotherAWSAccountToReadTheSecret",
 * 	  "Effect": "Allow",
 * 	  "Principal": {
 * 		"AWS": "arn:aws:iam::123456789012:root"
 * 	  },
 * 	  "Action": "secretsmanager:GetSecretValue",
 * 	  "Resource": "*"
 * 	}
 *   ]
 * }
 * `,
 * });
 * ```
 * ```python
 * import pulumi
 * import pulumi_aws as aws
 * 
 * example_secret = aws.secretsmanager.Secret("exampleSecret")
 * example_secret_policy = aws.secretsmanager.SecretPolicy("exampleSecretPolicy",
 *     secret_arn=example_secret.arn,
 *     policy="""{
 *   "Version": "2012-10-17",
 *   "Statement": [
 * 	{
 * 	  "Sid": "EnableAnotherAWSAccountToReadTheSecret",
 * 	  "Effect": "Allow",
 * 	  "Principal": {
 * 		"AWS": "arn:aws:iam::123456789012:root"
 * 	  },
 * 	  "Action": "secretsmanager:GetSecretValue",
 * 	  "Resource": "*"
 * 	}
 *   ]
 * }
 * """)
 * ```
 * ```csharp
 * using Pulumi;
 * using Aws = Pulumi.Aws;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var exampleSecret = new Aws.SecretsManager.Secret("exampleSecret", new Aws.SecretsManager.SecretArgs
 *         {
 *         });
 *         var exampleSecretPolicy = new Aws.SecretsManager.SecretPolicy("exampleSecretPolicy", new Aws.SecretsManager.SecretPolicyArgs
 *         {
 *             SecretArn = exampleSecret.Arn,
 *             Policy = @"{
 *   ""Version"": ""2012-10-17"",
 *   ""Statement"": [
 * 	{
 * 	  ""Sid"": ""EnableAnotherAWSAccountToReadTheSecret"",
 * 	  ""Effect"": ""Allow"",
 * 	  ""Principal"": {
 * 		""AWS"": ""arn:aws:iam::123456789012:root""
 * 	  },
 * 	  ""Action"": ""secretsmanager:GetSecretValue"",
 * 	  ""Resource"": ""*""
 * 	}
 *   ]
 * }
 * ",
 *         });
 *     }
 * 
 * }
 * ```
 * ```go
 * package main
 * 
 * import (
 * 	"fmt"
 * 
 * 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/secretsmanager"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		exampleSecret, err := secretsmanager.NewSecret(ctx, "exampleSecret", nil)
 * 		if err != nil {
 * 			return err
 * 		}
 * 		_, err = secretsmanager.NewSecretPolicy(ctx, "exampleSecretPolicy", &secretsmanager.SecretPolicyArgs{
 * 			SecretArn: exampleSecret.Arn,
 * 			Policy: pulumi.String(fmt.Sprintf("%v%v%v%v%v%v%v%v%v%v%v%v%v%v", "{\n", "  \"Version\": \"2012-10-17\",\n", "  \"Statement\": [\n", "	{\n", "	  \"Sid\": \"EnableAnotherAWSAccountToReadTheSecret\",\n", "	  \"Effect\": \"Allow\",\n", "	  \"Principal\": {\n", "		\"AWS\": \"arn:aws:iam::123456789012:root\"\n", "	  },\n", "	  \"Action\": \"secretsmanager:GetSecretValue\",\n", "	  \"Resource\": \"*\"\n", "	}\n", "  ]\n", "}\n")),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * ```
 * {{% /example %}}
 * {{% /examples %}}
 * 
 * ## Import
 * 
 * `aws_secretsmanager_secret_policy` can be imported by using the secret Amazon Resource Name (ARN), e.g.,
 * 
 * ```sh
 *  $ pulumi import aws:secretsmanager/secretPolicy:SecretPolicy example arn:aws:secretsmanager:us-east-1:123456789012:secret:example-123456
 * ```
 * 
 *  
 */
@ResourceType(type="aws:secretsmanager/secretPolicy:SecretPolicy")
public class SecretPolicy extends io.pulumi.resources.CustomResource {
    /**
     * Makes an optional API call to Zelkova to validate the Resource Policy to prevent broad access to your secret.
     * 
     */
    @Export(name="blockPublicPolicy", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> blockPublicPolicy;

    /**
     * @return Makes an optional API call to Zelkova to validate the Resource Policy to prevent broad access to your secret.
     * 
     */
    public Output</* @Nullable */ Boolean> getBlockPublicPolicy() {
        return this.blockPublicPolicy;
    }
    /**
     * Valid JSON document representing a [resource policy](https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access_resource-based-policies.html). Unlike `aws.secretsmanager.Secret`, where `policy` can be set to `"{}"` to delete the policy, `"{}"` is not a valid policy since `policy` is required.
     * 
     */
    @Export(name="policy", type=String.class, parameters={})
    private Output<String> policy;

    /**
     * @return Valid JSON document representing a [resource policy](https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access_resource-based-policies.html). Unlike `aws.secretsmanager.Secret`, where `policy` can be set to `"{}"` to delete the policy, `"{}"` is not a valid policy since `policy` is required.
     * 
     */
    public Output<String> getPolicy() {
        return this.policy;
    }
    /**
     * Secret ARN.
     * 
     */
    @Export(name="secretArn", type=String.class, parameters={})
    private Output<String> secretArn;

    /**
     * @return Secret ARN.
     * 
     */
    public Output<String> getSecretArn() {
        return this.secretArn;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public SecretPolicy(String name) {
        this(name, SecretPolicyArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public SecretPolicy(String name, SecretPolicyArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public SecretPolicy(String name, SecretPolicyArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:secretsmanager/secretPolicy:SecretPolicy", name, args == null ? SecretPolicyArgs.Empty : args, makeResourceOptions(options, Output.empty()));
    }

    private SecretPolicy(String name, Output<String> id, @Nullable SecretPolicyState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:secretsmanager/secretPolicy:SecretPolicy", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static SecretPolicy get(String name, Output<String> id, @Nullable SecretPolicyState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new SecretPolicy(name, id, state, options);
    }
}
