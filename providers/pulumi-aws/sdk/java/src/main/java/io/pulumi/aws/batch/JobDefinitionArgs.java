// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.batch;

import io.pulumi.aws.batch.inputs.JobDefinitionRetryStrategyArgs;
import io.pulumi.aws.batch.inputs.JobDefinitionTimeoutArgs;
import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class JobDefinitionArgs extends io.pulumi.resources.ResourceArgs {

    public static final JobDefinitionArgs Empty = new JobDefinitionArgs();

    /**
     * A valid [container properties](http://docs.aws.amazon.com/batch/latest/APIReference/API_RegisterJobDefinition.html)
     * provided as a single valid JSON document. This parameter is required if the `type` parameter is `container`.
     * 
     */
    @InputImport(name="containerProperties")
    private final @Nullable Input<String> containerProperties;

    public Input<String> getContainerProperties() {
        return this.containerProperties == null ? Input.empty() : this.containerProperties;
    }

    /**
     * Specifies the name of the job definition.
     * 
     */
    @InputImport(name="name")
    private final @Nullable Input<String> name;

    public Input<String> getName() {
        return this.name == null ? Input.empty() : this.name;
    }

    /**
     * Specifies the parameter substitution placeholders to set in the job definition.
     * 
     */
    @InputImport(name="parameters")
    private final @Nullable Input<Map<String,String>> parameters;

    public Input<Map<String,String>> getParameters() {
        return this.parameters == null ? Input.empty() : this.parameters;
    }

    /**
     * The platform capabilities required by the job definition. If no value is specified, it defaults to `EC2`. To run the job on Fargate resources, specify `FARGATE`.
     * 
     */
    @InputImport(name="platformCapabilities")
    private final @Nullable Input<List<String>> platformCapabilities;

    public Input<List<String>> getPlatformCapabilities() {
        return this.platformCapabilities == null ? Input.empty() : this.platformCapabilities;
    }

    /**
     * Specifies whether to propagate the tags from the job definition to the corresponding Amazon ECS task. Default is `false`.
     * 
     */
    @InputImport(name="propagateTags")
    private final @Nullable Input<Boolean> propagateTags;

    public Input<Boolean> getPropagateTags() {
        return this.propagateTags == null ? Input.empty() : this.propagateTags;
    }

    /**
     * Specifies the retry strategy to use for failed jobs that are submitted with this job definition.
     * Maximum number of `retry_strategy` is `1`.  Defined below.
     * 
     */
    @InputImport(name="retryStrategy")
    private final @Nullable Input<JobDefinitionRetryStrategyArgs> retryStrategy;

    public Input<JobDefinitionRetryStrategyArgs> getRetryStrategy() {
        return this.retryStrategy == null ? Input.empty() : this.retryStrategy;
    }

    /**
     * Key-value map of resource tags. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @InputImport(name="tags")
    private final @Nullable Input<Map<String,String>> tags;

    public Input<Map<String,String>> getTags() {
        return this.tags == null ? Input.empty() : this.tags;
    }

    /**
     * Specifies the timeout for jobs so that if a job runs longer, AWS Batch terminates the job. Maximum number of `timeout` is `1`. Defined below.
     * 
     */
    @InputImport(name="timeout")
    private final @Nullable Input<JobDefinitionTimeoutArgs> timeout;

    public Input<JobDefinitionTimeoutArgs> getTimeout() {
        return this.timeout == null ? Input.empty() : this.timeout;
    }

    /**
     * The type of job definition.  Must be `container`.
     * 
     */
    @InputImport(name="type", required=true)
    private final Input<String> type;

    public Input<String> getType() {
        return this.type;
    }

    public JobDefinitionArgs(
        @Nullable Input<String> containerProperties,
        @Nullable Input<String> name,
        @Nullable Input<Map<String,String>> parameters,
        @Nullable Input<List<String>> platformCapabilities,
        @Nullable Input<Boolean> propagateTags,
        @Nullable Input<JobDefinitionRetryStrategyArgs> retryStrategy,
        @Nullable Input<Map<String,String>> tags,
        @Nullable Input<JobDefinitionTimeoutArgs> timeout,
        Input<String> type) {
        this.containerProperties = containerProperties;
        this.name = name;
        this.parameters = parameters;
        this.platformCapabilities = platformCapabilities;
        this.propagateTags = propagateTags;
        this.retryStrategy = retryStrategy;
        this.tags = tags;
        this.timeout = timeout;
        this.type = Objects.requireNonNull(type, "expected parameter 'type' to be non-null");
    }

    private JobDefinitionArgs() {
        this.containerProperties = Input.empty();
        this.name = Input.empty();
        this.parameters = Input.empty();
        this.platformCapabilities = Input.empty();
        this.propagateTags = Input.empty();
        this.retryStrategy = Input.empty();
        this.tags = Input.empty();
        this.timeout = Input.empty();
        this.type = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(JobDefinitionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> containerProperties;
        private @Nullable Input<String> name;
        private @Nullable Input<Map<String,String>> parameters;
        private @Nullable Input<List<String>> platformCapabilities;
        private @Nullable Input<Boolean> propagateTags;
        private @Nullable Input<JobDefinitionRetryStrategyArgs> retryStrategy;
        private @Nullable Input<Map<String,String>> tags;
        private @Nullable Input<JobDefinitionTimeoutArgs> timeout;
        private Input<String> type;

        public Builder() {
    	      // Empty
        }

        public Builder(JobDefinitionArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.containerProperties = defaults.containerProperties;
    	      this.name = defaults.name;
    	      this.parameters = defaults.parameters;
    	      this.platformCapabilities = defaults.platformCapabilities;
    	      this.propagateTags = defaults.propagateTags;
    	      this.retryStrategy = defaults.retryStrategy;
    	      this.tags = defaults.tags;
    	      this.timeout = defaults.timeout;
    	      this.type = defaults.type;
        }

        public Builder setContainerProperties(@Nullable Input<String> containerProperties) {
            this.containerProperties = containerProperties;
            return this;
        }

        public Builder setContainerProperties(@Nullable String containerProperties) {
            this.containerProperties = Input.ofNullable(containerProperties);
            return this;
        }

        public Builder setName(@Nullable Input<String> name) {
            this.name = name;
            return this;
        }

        public Builder setName(@Nullable String name) {
            this.name = Input.ofNullable(name);
            return this;
        }

        public Builder setParameters(@Nullable Input<Map<String,String>> parameters) {
            this.parameters = parameters;
            return this;
        }

        public Builder setParameters(@Nullable Map<String,String> parameters) {
            this.parameters = Input.ofNullable(parameters);
            return this;
        }

        public Builder setPlatformCapabilities(@Nullable Input<List<String>> platformCapabilities) {
            this.platformCapabilities = platformCapabilities;
            return this;
        }

        public Builder setPlatformCapabilities(@Nullable List<String> platformCapabilities) {
            this.platformCapabilities = Input.ofNullable(platformCapabilities);
            return this;
        }

        public Builder setPropagateTags(@Nullable Input<Boolean> propagateTags) {
            this.propagateTags = propagateTags;
            return this;
        }

        public Builder setPropagateTags(@Nullable Boolean propagateTags) {
            this.propagateTags = Input.ofNullable(propagateTags);
            return this;
        }

        public Builder setRetryStrategy(@Nullable Input<JobDefinitionRetryStrategyArgs> retryStrategy) {
            this.retryStrategy = retryStrategy;
            return this;
        }

        public Builder setRetryStrategy(@Nullable JobDefinitionRetryStrategyArgs retryStrategy) {
            this.retryStrategy = Input.ofNullable(retryStrategy);
            return this;
        }

        public Builder setTags(@Nullable Input<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }

        public Builder setTags(@Nullable Map<String,String> tags) {
            this.tags = Input.ofNullable(tags);
            return this;
        }

        public Builder setTimeout(@Nullable Input<JobDefinitionTimeoutArgs> timeout) {
            this.timeout = timeout;
            return this;
        }

        public Builder setTimeout(@Nullable JobDefinitionTimeoutArgs timeout) {
            this.timeout = Input.ofNullable(timeout);
            return this;
        }

        public Builder setType(Input<String> type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }

        public Builder setType(String type) {
            this.type = Input.of(Objects.requireNonNull(type));
            return this;
        }
        public JobDefinitionArgs build() {
            return new JobDefinitionArgs(containerProperties, name, parameters, platformCapabilities, propagateTags, retryStrategy, tags, timeout, type);
        }
    }
}
