// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.glue.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;


public final class CatalogTableStorageDescriptorSortColumnGetArgs extends io.pulumi.resources.ResourceArgs {

    public static final CatalogTableStorageDescriptorSortColumnGetArgs Empty = new CatalogTableStorageDescriptorSortColumnGetArgs();

    /**
     * Name of the column.
     * 
     */
    @InputImport(name="column", required=true)
    private final Input<String> column;

    public Input<String> getColumn() {
        return this.column;
    }

    /**
     * Whether the column is sorted in ascending (`1`) or descending order (`0`).
     * 
     */
    @InputImport(name="sortOrder", required=true)
    private final Input<Integer> sortOrder;

    public Input<Integer> getSortOrder() {
        return this.sortOrder;
    }

    public CatalogTableStorageDescriptorSortColumnGetArgs(
        Input<String> column,
        Input<Integer> sortOrder) {
        this.column = Objects.requireNonNull(column, "expected parameter 'column' to be non-null");
        this.sortOrder = Objects.requireNonNull(sortOrder, "expected parameter 'sortOrder' to be non-null");
    }

    private CatalogTableStorageDescriptorSortColumnGetArgs() {
        this.column = Input.empty();
        this.sortOrder = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CatalogTableStorageDescriptorSortColumnGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<String> column;
        private Input<Integer> sortOrder;

        public Builder() {
    	      // Empty
        }

        public Builder(CatalogTableStorageDescriptorSortColumnGetArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.column = defaults.column;
    	      this.sortOrder = defaults.sortOrder;
        }

        public Builder setColumn(Input<String> column) {
            this.column = Objects.requireNonNull(column);
            return this;
        }

        public Builder setColumn(String column) {
            this.column = Input.of(Objects.requireNonNull(column));
            return this;
        }

        public Builder setSortOrder(Input<Integer> sortOrder) {
            this.sortOrder = Objects.requireNonNull(sortOrder);
            return this;
        }

        public Builder setSortOrder(Integer sortOrder) {
            this.sortOrder = Input.of(Objects.requireNonNull(sortOrder));
            return this;
        }
        public CatalogTableStorageDescriptorSortColumnGetArgs build() {
            return new CatalogTableStorageDescriptorSortColumnGetArgs(column, sortOrder);
        }
    }
}
