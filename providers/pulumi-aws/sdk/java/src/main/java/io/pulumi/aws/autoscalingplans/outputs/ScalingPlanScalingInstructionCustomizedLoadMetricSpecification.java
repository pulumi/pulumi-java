// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.autoscalingplans.outputs;

import io.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ScalingPlanScalingInstructionCustomizedLoadMetricSpecification {
    /**
     * The dimensions of the metric.
     * 
     */
    private final @Nullable Map<String,String> dimensions;
    /**
     * The name of the metric.
     * 
     */
    private final String metricName;
    /**
     * The namespace of the metric.
     * 
     */
    private final String namespace;
    /**
     * The statistic of the metric. Currently, the value must always be `Sum`.
     * 
     */
    private final String statistic;
    /**
     * The unit of the metric.
     * 
     */
    private final @Nullable String unit;

    @CustomType.Constructor
    private ScalingPlanScalingInstructionCustomizedLoadMetricSpecification(
        @CustomType.Parameter("dimensions") @Nullable Map<String,String> dimensions,
        @CustomType.Parameter("metricName") String metricName,
        @CustomType.Parameter("namespace") String namespace,
        @CustomType.Parameter("statistic") String statistic,
        @CustomType.Parameter("unit") @Nullable String unit) {
        this.dimensions = dimensions;
        this.metricName = metricName;
        this.namespace = namespace;
        this.statistic = statistic;
        this.unit = unit;
    }

    /**
     * The dimensions of the metric.
     * 
    */
    public Map<String,String> dimensions() {
        return this.dimensions == null ? Map.of() : this.dimensions;
    }
    /**
     * The name of the metric.
     * 
    */
    public String metricName() {
        return this.metricName;
    }
    /**
     * The namespace of the metric.
     * 
    */
    public String namespace() {
        return this.namespace;
    }
    /**
     * The statistic of the metric. Currently, the value must always be `Sum`.
     * 
    */
    public String statistic() {
        return this.statistic;
    }
    /**
     * The unit of the metric.
     * 
    */
    public Optional<String> unit() {
        return Optional.ofNullable(this.unit);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ScalingPlanScalingInstructionCustomizedLoadMetricSpecification defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Map<String,String> dimensions;
        private String metricName;
        private String namespace;
        private String statistic;
        private @Nullable String unit;

        public Builder() {
    	      // Empty
        }

        public Builder(ScalingPlanScalingInstructionCustomizedLoadMetricSpecification defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dimensions = defaults.dimensions;
    	      this.metricName = defaults.metricName;
    	      this.namespace = defaults.namespace;
    	      this.statistic = defaults.statistic;
    	      this.unit = defaults.unit;
        }

        public Builder dimensions(@Nullable Map<String,String> dimensions) {
            this.dimensions = dimensions;
            return this;
        }
        public Builder metricName(String metricName) {
            this.metricName = Objects.requireNonNull(metricName);
            return this;
        }
        public Builder namespace(String namespace) {
            this.namespace = Objects.requireNonNull(namespace);
            return this;
        }
        public Builder statistic(String statistic) {
            this.statistic = Objects.requireNonNull(statistic);
            return this;
        }
        public Builder unit(@Nullable String unit) {
            this.unit = unit;
            return this;
        }        public ScalingPlanScalingInstructionCustomizedLoadMetricSpecification build() {
            return new ScalingPlanScalingInstructionCustomizedLoadMetricSpecification(dimensions, metricName, namespace, statistic, unit);
        }
    }
}
