// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.apigatewayv2;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ApiMappingArgs extends io.pulumi.resources.ResourceArgs {

    public static final ApiMappingArgs Empty = new ApiMappingArgs();

    /**
     * The API identifier.
     * 
     */
    @InputImport(name="apiId", required=true)
      private final Output<String> apiId;

    public Output<String> getApiId() {
        return this.apiId;
    }

    /**
     * The [API mapping key](https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-mapping-template-reference.html).
     * 
     */
    @InputImport(name="apiMappingKey")
      private final @Nullable Output<String> apiMappingKey;

    public Output<String> getApiMappingKey() {
        return this.apiMappingKey == null ? Output.empty() : this.apiMappingKey;
    }

    /**
     * The domain name. Use the `aws.apigatewayv2.DomainName` resource to configure a domain name.
     * 
     */
    @InputImport(name="domainName", required=true)
      private final Output<String> domainName;

    public Output<String> getDomainName() {
        return this.domainName;
    }

    /**
     * The API stage. Use the `aws.apigatewayv2.Stage` resource to configure an API stage.
     * 
     */
    @InputImport(name="stage", required=true)
      private final Output<String> stage;

    public Output<String> getStage() {
        return this.stage;
    }

    public ApiMappingArgs(
        Output<String> apiId,
        @Nullable Output<String> apiMappingKey,
        Output<String> domainName,
        Output<String> stage) {
        this.apiId = Objects.requireNonNull(apiId, "expected parameter 'apiId' to be non-null");
        this.apiMappingKey = apiMappingKey;
        this.domainName = Objects.requireNonNull(domainName, "expected parameter 'domainName' to be non-null");
        this.stage = Objects.requireNonNull(stage, "expected parameter 'stage' to be non-null");
    }

    private ApiMappingArgs() {
        this.apiId = Output.empty();
        this.apiMappingKey = Output.empty();
        this.domainName = Output.empty();
        this.stage = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ApiMappingArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> apiId;
        private @Nullable Output<String> apiMappingKey;
        private Output<String> domainName;
        private Output<String> stage;

        public Builder() {
    	      // Empty
        }

        public Builder(ApiMappingArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.apiId = defaults.apiId;
    	      this.apiMappingKey = defaults.apiMappingKey;
    	      this.domainName = defaults.domainName;
    	      this.stage = defaults.stage;
        }

        public Builder apiId(Output<String> apiId) {
            this.apiId = Objects.requireNonNull(apiId);
            return this;
        }

        public Builder apiId(String apiId) {
            this.apiId = Output.of(Objects.requireNonNull(apiId));
            return this;
        }

        public Builder apiMappingKey(@Nullable Output<String> apiMappingKey) {
            this.apiMappingKey = apiMappingKey;
            return this;
        }

        public Builder apiMappingKey(@Nullable String apiMappingKey) {
            this.apiMappingKey = Output.ofNullable(apiMappingKey);
            return this;
        }

        public Builder domainName(Output<String> domainName) {
            this.domainName = Objects.requireNonNull(domainName);
            return this;
        }

        public Builder domainName(String domainName) {
            this.domainName = Output.of(Objects.requireNonNull(domainName));
            return this;
        }

        public Builder stage(Output<String> stage) {
            this.stage = Objects.requireNonNull(stage);
            return this;
        }

        public Builder stage(String stage) {
            this.stage = Output.of(Objects.requireNonNull(stage));
            return this;
        }
        public ApiMappingArgs build() {
            return new ApiMappingArgs(apiId, apiMappingKey, domainName, stage);
        }
    }
}
