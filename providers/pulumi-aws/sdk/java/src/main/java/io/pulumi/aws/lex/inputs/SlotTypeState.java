// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.lex.inputs;

import io.pulumi.aws.lex.inputs.SlotTypeEnumerationValueGetArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.InputImport;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class SlotTypeState extends io.pulumi.resources.ResourceArgs {

    public static final SlotTypeState Empty = new SlotTypeState();

    /**
     * Checksum identifying the version of the slot type that was created. The checksum is
     * not included as an argument because the resource will add it automatically when updating the slot type.
     * 
     */
    @InputImport(name="checksum")
      private final @Nullable Output<String> checksum;

    public Output<String> getChecksum() {
        return this.checksum == null ? Output.empty() : this.checksum;
    }

    /**
     * Determines if a new slot type version is created when the initial resource is created and on each
     * update. Defaults to `false`.
     * 
     */
    @InputImport(name="createVersion")
      private final @Nullable Output<Boolean> createVersion;

    public Output<Boolean> getCreateVersion() {
        return this.createVersion == null ? Output.empty() : this.createVersion;
    }

    /**
     * The date when the slot type version was created.
     * 
     */
    @InputImport(name="createdDate")
      private final @Nullable Output<String> createdDate;

    public Output<String> getCreatedDate() {
        return this.createdDate == null ? Output.empty() : this.createdDate;
    }

    /**
     * A description of the slot type. Must be less than or equal to 200 characters in length.
     * 
     */
    @InputImport(name="description")
      private final @Nullable Output<String> description;

    public Output<String> getDescription() {
        return this.description == null ? Output.empty() : this.description;
    }

    /**
     * A list of EnumerationValue objects that defines the values that
     * the slot type can take. Each value can have a list of synonyms, which are additional values that help
     * train the machine learning model about the values that it resolves for a slot. Attributes are
     * documented under enumeration_value.
     * 
     */
    @InputImport(name="enumerationValues")
      private final @Nullable Output<List<SlotTypeEnumerationValueGetArgs>> enumerationValues;

    public Output<List<SlotTypeEnumerationValueGetArgs>> getEnumerationValues() {
        return this.enumerationValues == null ? Output.empty() : this.enumerationValues;
    }

    /**
     * The date when the `$LATEST` version of this slot type was updated.
     * 
     */
    @InputImport(name="lastUpdatedDate")
      private final @Nullable Output<String> lastUpdatedDate;

    public Output<String> getLastUpdatedDate() {
        return this.lastUpdatedDate == null ? Output.empty() : this.lastUpdatedDate;
    }

    /**
     * The name of the slot type. The name is not case sensitive. Must be less than or equal to 100 characters in length.
     * 
     */
    @InputImport(name="name")
      private final @Nullable Output<String> name;

    public Output<String> getName() {
        return this.name == null ? Output.empty() : this.name;
    }

    /**
     * Determines the slot resolution strategy that Amazon Lex
     * uses to return slot type values. `ORIGINAL_VALUE` returns the value entered by the user if the user
     * value is similar to the slot value. `TOP_RESOLUTION` returns the first value in the resolution list
     * if there is a resolution list for the slot, otherwise null is returned. Defaults to `ORIGINAL_VALUE`.
     * 
     */
    @InputImport(name="valueSelectionStrategy")
      private final @Nullable Output<String> valueSelectionStrategy;

    public Output<String> getValueSelectionStrategy() {
        return this.valueSelectionStrategy == null ? Output.empty() : this.valueSelectionStrategy;
    }

    /**
     * The version of the slot type.
     * 
     */
    @InputImport(name="version")
      private final @Nullable Output<String> version;

    public Output<String> getVersion() {
        return this.version == null ? Output.empty() : this.version;
    }

    public SlotTypeState(
        @Nullable Output<String> checksum,
        @Nullable Output<Boolean> createVersion,
        @Nullable Output<String> createdDate,
        @Nullable Output<String> description,
        @Nullable Output<List<SlotTypeEnumerationValueGetArgs>> enumerationValues,
        @Nullable Output<String> lastUpdatedDate,
        @Nullable Output<String> name,
        @Nullable Output<String> valueSelectionStrategy,
        @Nullable Output<String> version) {
        this.checksum = checksum;
        this.createVersion = createVersion;
        this.createdDate = createdDate;
        this.description = description;
        this.enumerationValues = enumerationValues;
        this.lastUpdatedDate = lastUpdatedDate;
        this.name = name;
        this.valueSelectionStrategy = valueSelectionStrategy;
        this.version = version;
    }

    private SlotTypeState() {
        this.checksum = Output.empty();
        this.createVersion = Output.empty();
        this.createdDate = Output.empty();
        this.description = Output.empty();
        this.enumerationValues = Output.empty();
        this.lastUpdatedDate = Output.empty();
        this.name = Output.empty();
        this.valueSelectionStrategy = Output.empty();
        this.version = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SlotTypeState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> checksum;
        private @Nullable Output<Boolean> createVersion;
        private @Nullable Output<String> createdDate;
        private @Nullable Output<String> description;
        private @Nullable Output<List<SlotTypeEnumerationValueGetArgs>> enumerationValues;
        private @Nullable Output<String> lastUpdatedDate;
        private @Nullable Output<String> name;
        private @Nullable Output<String> valueSelectionStrategy;
        private @Nullable Output<String> version;

        public Builder() {
    	      // Empty
        }

        public Builder(SlotTypeState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.checksum = defaults.checksum;
    	      this.createVersion = defaults.createVersion;
    	      this.createdDate = defaults.createdDate;
    	      this.description = defaults.description;
    	      this.enumerationValues = defaults.enumerationValues;
    	      this.lastUpdatedDate = defaults.lastUpdatedDate;
    	      this.name = defaults.name;
    	      this.valueSelectionStrategy = defaults.valueSelectionStrategy;
    	      this.version = defaults.version;
        }

        public Builder checksum(@Nullable Output<String> checksum) {
            this.checksum = checksum;
            return this;
        }

        public Builder checksum(@Nullable String checksum) {
            this.checksum = Output.ofNullable(checksum);
            return this;
        }

        public Builder createVersion(@Nullable Output<Boolean> createVersion) {
            this.createVersion = createVersion;
            return this;
        }

        public Builder createVersion(@Nullable Boolean createVersion) {
            this.createVersion = Output.ofNullable(createVersion);
            return this;
        }

        public Builder createdDate(@Nullable Output<String> createdDate) {
            this.createdDate = createdDate;
            return this;
        }

        public Builder createdDate(@Nullable String createdDate) {
            this.createdDate = Output.ofNullable(createdDate);
            return this;
        }

        public Builder description(@Nullable Output<String> description) {
            this.description = description;
            return this;
        }

        public Builder description(@Nullable String description) {
            this.description = Output.ofNullable(description);
            return this;
        }

        public Builder enumerationValues(@Nullable Output<List<SlotTypeEnumerationValueGetArgs>> enumerationValues) {
            this.enumerationValues = enumerationValues;
            return this;
        }

        public Builder enumerationValues(@Nullable List<SlotTypeEnumerationValueGetArgs> enumerationValues) {
            this.enumerationValues = Output.ofNullable(enumerationValues);
            return this;
        }

        public Builder lastUpdatedDate(@Nullable Output<String> lastUpdatedDate) {
            this.lastUpdatedDate = lastUpdatedDate;
            return this;
        }

        public Builder lastUpdatedDate(@Nullable String lastUpdatedDate) {
            this.lastUpdatedDate = Output.ofNullable(lastUpdatedDate);
            return this;
        }

        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }

        public Builder name(@Nullable String name) {
            this.name = Output.ofNullable(name);
            return this;
        }

        public Builder valueSelectionStrategy(@Nullable Output<String> valueSelectionStrategy) {
            this.valueSelectionStrategy = valueSelectionStrategy;
            return this;
        }

        public Builder valueSelectionStrategy(@Nullable String valueSelectionStrategy) {
            this.valueSelectionStrategy = Output.ofNullable(valueSelectionStrategy);
            return this;
        }

        public Builder version(@Nullable Output<String> version) {
            this.version = version;
            return this;
        }

        public Builder version(@Nullable String version) {
            this.version = Output.ofNullable(version);
            return this;
        }
        public SlotTypeState build() {
            return new SlotTypeState(checksum, createVersion, createdDate, description, enumerationValues, lastUpdatedDate, name, valueSelectionStrategy, version);
        }
    }
}
