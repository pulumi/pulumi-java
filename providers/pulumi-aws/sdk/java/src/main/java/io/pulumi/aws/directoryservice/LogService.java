// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.directoryservice;

import io.pulumi.aws.Utilities;
import io.pulumi.aws.directoryservice.LogServiceArgs;
import io.pulumi.aws.directoryservice.inputs.LogServiceState;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Export;
import io.pulumi.core.annotations.ResourceType;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * Provides a Log subscription for AWS Directory Service that pushes logs to cloudwatch.
 * 
 * ## Example Usage
 * 
 * ## Import
 * 
 * Directory Service Log Subscriptions can be imported using the directory id, e.g.,
 * 
 * ```sh
 *  $ pulumi import aws:directoryservice/logService:LogService msad d-1234567890
 * ```
 * 
 */
@ResourceType(type="aws:directoryservice/logService:LogService")
public class LogService extends io.pulumi.resources.CustomResource {
    /**
     * The id of directory.
     * 
     */
    @Export(name="directoryId", type=String.class, parameters={})
    private Output<String> directoryId;

    /**
     * @return The id of directory.
     * 
     */
    public Output<String> getDirectoryId() {
        return this.directoryId;
    }
    /**
     * Name of the cloudwatch log group to which the logs should be published. The log group should be already created and the directory service principal should be provided with required permission to create stream and publish logs. Changing this value would delete the current subscription and create a new one. A directory can only have one log subscription at a time.
     * 
     */
    @Export(name="logGroupName", type=String.class, parameters={})
    private Output<String> logGroupName;

    /**
     * @return Name of the cloudwatch log group to which the logs should be published. The log group should be already created and the directory service principal should be provided with required permission to create stream and publish logs. Changing this value would delete the current subscription and create a new one. A directory can only have one log subscription at a time.
     * 
     */
    public Output<String> getLogGroupName() {
        return this.logGroupName;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public LogService(String name) {
        this(name, LogServiceArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public LogService(String name, LogServiceArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public LogService(String name, LogServiceArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:directoryservice/logService:LogService", name, args == null ? LogServiceArgs.Empty : args, makeResourceOptions(options, Output.empty()));
    }

    private LogService(String name, Output<String> id, @Nullable LogServiceState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:directoryservice/logService:LogService", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static LogService get(String name, Output<String> id, @Nullable LogServiceState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new LogService(name, id, state, options);
    }
}
