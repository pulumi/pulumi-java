// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.imagebuilder.inputs;

import io.pulumi.core.annotations.InputImport;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;


public final class GetImageRecipeBlockDeviceMappingEb extends io.pulumi.resources.InvokeArgs {

    public static final GetImageRecipeBlockDeviceMappingEb Empty = new GetImageRecipeBlockDeviceMappingEb();

    /**
     * Whether to delete the volume on termination. Defaults to unset, which is the value inherited from the parent image.
     * 
     */
    @InputImport(name="deleteOnTermination", required=true)
      private final Boolean deleteOnTermination;

    public Boolean getDeleteOnTermination() {
        return this.deleteOnTermination;
    }

    /**
     * Whether to encrypt the volume. Defaults to unset, which is the value inherited from the parent image.
     * 
     */
    @InputImport(name="encrypted", required=true)
      private final Boolean encrypted;

    public Boolean getEncrypted() {
        return this.encrypted;
    }

    /**
     * Number of Input/Output (I/O) operations per second to provision for an `io1` or `io2` volume.
     * 
     */
    @InputImport(name="iops", required=true)
      private final Integer iops;

    public Integer getIops() {
        return this.iops;
    }

    /**
     * Amazon Resource Name (ARN) of the Key Management Service (KMS) Key for encryption.
     * 
     */
    @InputImport(name="kmsKeyId", required=true)
      private final String kmsKeyId;

    public String getKmsKeyId() {
        return this.kmsKeyId;
    }

    /**
     * Identifier of the EC2 Volume Snapshot.
     * 
     */
    @InputImport(name="snapshotId", required=true)
      private final String snapshotId;

    public String getSnapshotId() {
        return this.snapshotId;
    }

    /**
     * Size of the volume, in GiB.
     * 
     */
    @InputImport(name="volumeSize", required=true)
      private final Integer volumeSize;

    public Integer getVolumeSize() {
        return this.volumeSize;
    }

    /**
     * Type of the volume. For example, `gp2` or `io2`.
     * 
     */
    @InputImport(name="volumeType", required=true)
      private final String volumeType;

    public String getVolumeType() {
        return this.volumeType;
    }

    public GetImageRecipeBlockDeviceMappingEb(
        Boolean deleteOnTermination,
        Boolean encrypted,
        Integer iops,
        String kmsKeyId,
        String snapshotId,
        Integer volumeSize,
        String volumeType) {
        this.deleteOnTermination = Objects.requireNonNull(deleteOnTermination, "expected parameter 'deleteOnTermination' to be non-null");
        this.encrypted = Objects.requireNonNull(encrypted, "expected parameter 'encrypted' to be non-null");
        this.iops = Objects.requireNonNull(iops, "expected parameter 'iops' to be non-null");
        this.kmsKeyId = Objects.requireNonNull(kmsKeyId, "expected parameter 'kmsKeyId' to be non-null");
        this.snapshotId = Objects.requireNonNull(snapshotId, "expected parameter 'snapshotId' to be non-null");
        this.volumeSize = Objects.requireNonNull(volumeSize, "expected parameter 'volumeSize' to be non-null");
        this.volumeType = Objects.requireNonNull(volumeType, "expected parameter 'volumeType' to be non-null");
    }

    private GetImageRecipeBlockDeviceMappingEb() {
        this.deleteOnTermination = null;
        this.encrypted = null;
        this.iops = null;
        this.kmsKeyId = null;
        this.snapshotId = null;
        this.volumeSize = null;
        this.volumeType = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetImageRecipeBlockDeviceMappingEb defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Boolean deleteOnTermination;
        private Boolean encrypted;
        private Integer iops;
        private String kmsKeyId;
        private String snapshotId;
        private Integer volumeSize;
        private String volumeType;

        public Builder() {
    	      // Empty
        }

        public Builder(GetImageRecipeBlockDeviceMappingEb defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.deleteOnTermination = defaults.deleteOnTermination;
    	      this.encrypted = defaults.encrypted;
    	      this.iops = defaults.iops;
    	      this.kmsKeyId = defaults.kmsKeyId;
    	      this.snapshotId = defaults.snapshotId;
    	      this.volumeSize = defaults.volumeSize;
    	      this.volumeType = defaults.volumeType;
        }

        public Builder setDeleteOnTermination(Boolean deleteOnTermination) {
            this.deleteOnTermination = Objects.requireNonNull(deleteOnTermination);
            return this;
        }

        public Builder setEncrypted(Boolean encrypted) {
            this.encrypted = Objects.requireNonNull(encrypted);
            return this;
        }

        public Builder setIops(Integer iops) {
            this.iops = Objects.requireNonNull(iops);
            return this;
        }

        public Builder setKmsKeyId(String kmsKeyId) {
            this.kmsKeyId = Objects.requireNonNull(kmsKeyId);
            return this;
        }

        public Builder setSnapshotId(String snapshotId) {
            this.snapshotId = Objects.requireNonNull(snapshotId);
            return this;
        }

        public Builder setVolumeSize(Integer volumeSize) {
            this.volumeSize = Objects.requireNonNull(volumeSize);
            return this;
        }

        public Builder setVolumeType(String volumeType) {
            this.volumeType = Objects.requireNonNull(volumeType);
            return this;
        }
        public GetImageRecipeBlockDeviceMappingEb build() {
            return new GetImageRecipeBlockDeviceMappingEb(deleteOnTermination, encrypted, iops, kmsKeyId, snapshotId, volumeSize, volumeType);
        }
    }
}
