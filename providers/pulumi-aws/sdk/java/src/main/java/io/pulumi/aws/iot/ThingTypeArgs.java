// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.iot;

import io.pulumi.aws.iot.inputs.ThingTypePropertiesArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.InputImport;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ThingTypeArgs extends io.pulumi.resources.ResourceArgs {

    public static final ThingTypeArgs Empty = new ThingTypeArgs();

    /**
     * Whether the thing type is deprecated. If true, no new things could be associated with this type.
     * 
     */
    @InputImport(name="deprecated")
      private final @Nullable Output<Boolean> deprecated;

    public Output<Boolean> getDeprecated() {
        return this.deprecated == null ? Output.empty() : this.deprecated;
    }

    /**
     * The name of the thing type.
     * 
     */
    @InputImport(name="name")
      private final @Nullable Output<String> name;

    public Output<String> getName() {
        return this.name == null ? Output.empty() : this.name;
    }

    /**
     * , Configuration block that can contain the following properties of the thing type:
     * 
     */
    @InputImport(name="properties")
      private final @Nullable Output<ThingTypePropertiesArgs> properties;

    public Output<ThingTypePropertiesArgs> getProperties() {
        return this.properties == null ? Output.empty() : this.properties;
    }

    /**
     * Key-value mapping of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @InputImport(name="tags")
      private final @Nullable Output<Map<String,String>> tags;

    public Output<Map<String,String>> getTags() {
        return this.tags == null ? Output.empty() : this.tags;
    }

    public ThingTypeArgs(
        @Nullable Output<Boolean> deprecated,
        @Nullable Output<String> name,
        @Nullable Output<ThingTypePropertiesArgs> properties,
        @Nullable Output<Map<String,String>> tags) {
        this.deprecated = deprecated;
        this.name = name;
        this.properties = properties;
        this.tags = tags;
    }

    private ThingTypeArgs() {
        this.deprecated = Output.empty();
        this.name = Output.empty();
        this.properties = Output.empty();
        this.tags = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ThingTypeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<Boolean> deprecated;
        private @Nullable Output<String> name;
        private @Nullable Output<ThingTypePropertiesArgs> properties;
        private @Nullable Output<Map<String,String>> tags;

        public Builder() {
    	      // Empty
        }

        public Builder(ThingTypeArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.deprecated = defaults.deprecated;
    	      this.name = defaults.name;
    	      this.properties = defaults.properties;
    	      this.tags = defaults.tags;
        }

        public Builder deprecated(@Nullable Output<Boolean> deprecated) {
            this.deprecated = deprecated;
            return this;
        }

        public Builder deprecated(@Nullable Boolean deprecated) {
            this.deprecated = Output.ofNullable(deprecated);
            return this;
        }

        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }

        public Builder name(@Nullable String name) {
            this.name = Output.ofNullable(name);
            return this;
        }

        public Builder properties(@Nullable Output<ThingTypePropertiesArgs> properties) {
            this.properties = properties;
            return this;
        }

        public Builder properties(@Nullable ThingTypePropertiesArgs properties) {
            this.properties = Output.ofNullable(properties);
            return this;
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }

        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = Output.ofNullable(tags);
            return this;
        }
        public ThingTypeArgs build() {
            return new ThingTypeArgs(deprecated, name, properties, tags);
        }
    }
}
