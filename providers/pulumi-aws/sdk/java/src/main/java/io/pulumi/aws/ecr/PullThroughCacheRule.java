// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.ecr;

import io.pulumi.aws.Utilities;
import io.pulumi.aws.ecr.PullThroughCacheRuleArgs;
import io.pulumi.aws.ecr.inputs.PullThroughCacheRuleState;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Export;
import io.pulumi.core.annotations.ResourceType;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * Provides an Elastic Container Registry Pull Through Cache Rule.
 * 
 * More information about pull through cache rules, including the set of supported
 * upstream repositories, see [Using pull through cache rules](https://docs.aws.amazon.com/AmazonECR/latest/userguide/pull-through-cache.html).
 * 
 * ## Example Usage
 * 
 * ## Import
 * 
 * Use the `ecr_repository_prefix` to import a Pull Through Cache Rule. For example
 * 
 * ```sh
 *  $ pulumi import aws:ecr/pullThroughCacheRule:PullThroughCacheRule example ecr-public
 * ```
 * 
 */
@ResourceType(type="aws:ecr/pullThroughCacheRule:PullThroughCacheRule")
public class PullThroughCacheRule extends io.pulumi.resources.CustomResource {
    /**
     * The repository name prefix to use when caching images from the source registry.
     * 
     */
    @Export(name="ecrRepositoryPrefix", type=String.class, parameters={})
    private Output<String> ecrRepositoryPrefix;

    /**
     * @return The repository name prefix to use when caching images from the source registry.
     * 
     */
    public Output<String> getEcrRepositoryPrefix() {
        return this.ecrRepositoryPrefix;
    }
    /**
     * The registry ID where the repository was created.
     * 
     */
    @Export(name="registryId", type=String.class, parameters={})
    private Output<String> registryId;

    /**
     * @return The registry ID where the repository was created.
     * 
     */
    public Output<String> getRegistryId() {
        return this.registryId;
    }
    /**
     * The registry URL of the upstream public registry to use as the source.
     * 
     */
    @Export(name="upstreamRegistryUrl", type=String.class, parameters={})
    private Output<String> upstreamRegistryUrl;

    /**
     * @return The registry URL of the upstream public registry to use as the source.
     * 
     */
    public Output<String> getUpstreamRegistryUrl() {
        return this.upstreamRegistryUrl;
    }

    public interface BuilderApplicator {
        public void apply(PullThroughCacheRuleArgs.Builder a);
    }
    private static io.pulumi.aws.ecr.PullThroughCacheRuleArgs buildArgs(BuilderApplicator argsBuilder) {
        final var builder = io.pulumi.aws.ecr.PullThroughCacheRuleArgs.builder();
        argsBuilder.apply(builder);
        return builder.build();
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param argsBuilder A function that configures a passed builder.
     */
    public PullThroughCacheRule(String name, BuilderApplicator argsBuilder) {
        this(name, buildArgs(argsBuilder), null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public PullThroughCacheRule(String name) {
        this(name, PullThroughCacheRuleArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public PullThroughCacheRule(String name, PullThroughCacheRuleArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public PullThroughCacheRule(String name, PullThroughCacheRuleArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:ecr/pullThroughCacheRule:PullThroughCacheRule", name, args == null ? PullThroughCacheRuleArgs.Empty : args, makeResourceOptions(options, Output.empty()));
    }

    private PullThroughCacheRule(String name, Output<String> id, @Nullable PullThroughCacheRuleState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:ecr/pullThroughCacheRule:PullThroughCacheRule", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .setVersion(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static PullThroughCacheRule get(String name, Output<String> id, @Nullable PullThroughCacheRuleState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new PullThroughCacheRule(name, id, state, options);
    }
}
