// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.datasync;

import io.pulumi.aws.Utilities;
import io.pulumi.aws.datasync.LocationSmbArgs;
import io.pulumi.aws.datasync.inputs.LocationSmbState;
import io.pulumi.aws.datasync.outputs.LocationSmbMountOptions;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Export;
import io.pulumi.core.annotations.ResourceType;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;

/**
 * Manages a SMB Location within AWS DataSync.
 * 
 * > **NOTE:** The DataSync Agents must be available before creating this resource.
 * 
 * ## Example Usage
 * 
 * ## Import
 * 
 * `aws_datasync_location_smb` can be imported by using the Amazon Resource Name (ARN), e.g.,
 * 
 * ```sh
 *  $ pulumi import aws:datasync/locationSmb:LocationSmb example arn:aws:datasync:us-east-1:123456789012:location/loc-12345678901234567
 * ```
 * 
 */
@ResourceType(type="aws:datasync/locationSmb:LocationSmb")
public class LocationSmb extends io.pulumi.resources.CustomResource {
    /**
     * A list of DataSync Agent ARNs with which this location will be associated.
     * 
     */
    @Export(name="agentArns", type=List.class, parameters={String.class})
    private Output<List<String>> agentArns;

    /**
     * @return A list of DataSync Agent ARNs with which this location will be associated.
     * 
     */
    public Output<List<String>> getAgentArns() {
        return this.agentArns;
    }
    /**
     * Amazon Resource Name (ARN) of the DataSync Location.
     * 
     */
    @Export(name="arn", type=String.class, parameters={})
    private Output<String> arn;

    /**
     * @return Amazon Resource Name (ARN) of the DataSync Location.
     * 
     */
    public Output<String> getArn() {
        return this.arn;
    }
    /**
     * The name of the Windows domain the SMB server belongs to.
     * 
     */
    @Export(name="domain", type=String.class, parameters={})
    private Output<String> domain;

    /**
     * @return The name of the Windows domain the SMB server belongs to.
     * 
     */
    public Output<String> getDomain() {
        return this.domain;
    }
    /**
     * Configuration block containing mount options used by DataSync to access the SMB Server. Can be `AUTOMATIC`, `SMB2`, or `SMB3`.
     * 
     */
    @Export(name="mountOptions", type=LocationSmbMountOptions.class, parameters={})
    private Output</* @Nullable */ LocationSmbMountOptions> mountOptions;

    /**
     * @return Configuration block containing mount options used by DataSync to access the SMB Server. Can be `AUTOMATIC`, `SMB2`, or `SMB3`.
     * 
     */
    public Output</* @Nullable */ LocationSmbMountOptions> getMountOptions() {
        return this.mountOptions;
    }
    /**
     * The password of the user who can mount the share and has file permissions in the SMB.
     * 
     */
    @Export(name="password", type=String.class, parameters={})
    private Output<String> password;

    /**
     * @return The password of the user who can mount the share and has file permissions in the SMB.
     * 
     */
    public Output<String> getPassword() {
        return this.password;
    }
    /**
     * Specifies the IP address or DNS name of the SMB server. The DataSync Agent(s) use this to mount the SMB share.
     * 
     */
    @Export(name="serverHostname", type=String.class, parameters={})
    private Output<String> serverHostname;

    /**
     * @return Specifies the IP address or DNS name of the SMB server. The DataSync Agent(s) use this to mount the SMB share.
     * 
     */
    public Output<String> getServerHostname() {
        return this.serverHostname;
    }
    /**
     * Subdirectory to perform actions as source or destination. Should be exported by the NFS server.
     * 
     */
    @Export(name="subdirectory", type=String.class, parameters={})
    private Output<String> subdirectory;

    /**
     * @return Subdirectory to perform actions as source or destination. Should be exported by the NFS server.
     * 
     */
    public Output<String> getSubdirectory() {
        return this.subdirectory;
    }
    /**
     * Key-value pairs of resource tags to assign to the DataSync Location. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Export(name="tags", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return Key-value pairs of resource tags to assign to the DataSync Location. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Output</* @Nullable */ Map<String,String>> getTags() {
        return this.tags;
    }
    /**
     * A map of tags assigned to the resource, including those inherited from the provider .
     * 
     */
    @Export(name="tagsAll", type=Map.class, parameters={String.class, String.class})
    private Output<Map<String,String>> tagsAll;

    /**
     * @return A map of tags assigned to the resource, including those inherited from the provider .
     * 
     */
    public Output<Map<String,String>> getTagsAll() {
        return this.tagsAll;
    }
    @Export(name="uri", type=String.class, parameters={})
    private Output<String> uri;

    public Output<String> getUri() {
        return this.uri;
    }
    /**
     * The user who can mount the share and has file and folder permissions in the SMB share.
     * 
     */
    @Export(name="user", type=String.class, parameters={})
    private Output<String> user;

    /**
     * @return The user who can mount the share and has file and folder permissions in the SMB share.
     * 
     */
    public Output<String> getUser() {
        return this.user;
    }

    public interface BuilderApplicator {
        public void apply(LocationSmbArgs.Builder a);
    }
    private static io.pulumi.aws.datasync.LocationSmbArgs buildArgs(BuilderApplicator argsBuilder) {
        final var builder = io.pulumi.aws.datasync.LocationSmbArgs.builder();
        argsBuilder.apply(builder);
        return builder.build();
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param argsBuilder A function that configures a passed builder.
     */
    public LocationSmb(String name, BuilderApplicator argsBuilder) {
        this(name, buildArgs(argsBuilder), null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public LocationSmb(String name) {
        this(name, LocationSmbArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public LocationSmb(String name, LocationSmbArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public LocationSmb(String name, LocationSmbArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:datasync/locationSmb:LocationSmb", name, args == null ? LocationSmbArgs.Empty : args, makeResourceOptions(options, Output.empty()));
    }

    private LocationSmb(String name, Output<String> id, @Nullable LocationSmbState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:datasync/locationSmb:LocationSmb", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .setVersion(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static LocationSmb get(String name, Output<String> id, @Nullable LocationSmbState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new LocationSmb(name, id, state, options);
    }
}
