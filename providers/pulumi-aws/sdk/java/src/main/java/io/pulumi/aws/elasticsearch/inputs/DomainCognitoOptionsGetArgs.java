// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.elasticsearch.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class DomainCognitoOptionsGetArgs extends io.pulumi.resources.ResourceArgs {

    public static final DomainCognitoOptionsGetArgs Empty = new DomainCognitoOptionsGetArgs();

    /**
     * Whether to enable node-to-node encryption. If the `node_to_node_encryption` block is not provided then this defaults to `false`.
     * 
     */
    @Import(name="enabled")
      private final @Nullable Output<Boolean> enabled;

    public Output<Boolean> getEnabled() {
        return this.enabled == null ? Output.empty() : this.enabled;
    }

    /**
     * ID of the Cognito Identity Pool to use.
     * 
     */
    @Import(name="identityPoolId", required=true)
      private final Output<String> identityPoolId;

    public Output<String> getIdentityPoolId() {
        return this.identityPoolId;
    }

    /**
     * ARN of the IAM role that has the AmazonESCognitoAccess policy attached.
     * 
     */
    @Import(name="roleArn", required=true)
      private final Output<String> roleArn;

    public Output<String> getRoleArn() {
        return this.roleArn;
    }

    /**
     * ID of the Cognito User Pool to use.
     * 
     */
    @Import(name="userPoolId", required=true)
      private final Output<String> userPoolId;

    public Output<String> getUserPoolId() {
        return this.userPoolId;
    }

    public DomainCognitoOptionsGetArgs(
        @Nullable Output<Boolean> enabled,
        Output<String> identityPoolId,
        Output<String> roleArn,
        Output<String> userPoolId) {
        this.enabled = enabled;
        this.identityPoolId = Objects.requireNonNull(identityPoolId, "expected parameter 'identityPoolId' to be non-null");
        this.roleArn = Objects.requireNonNull(roleArn, "expected parameter 'roleArn' to be non-null");
        this.userPoolId = Objects.requireNonNull(userPoolId, "expected parameter 'userPoolId' to be non-null");
    }

    private DomainCognitoOptionsGetArgs() {
        this.enabled = Output.empty();
        this.identityPoolId = Output.empty();
        this.roleArn = Output.empty();
        this.userPoolId = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DomainCognitoOptionsGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<Boolean> enabled;
        private Output<String> identityPoolId;
        private Output<String> roleArn;
        private Output<String> userPoolId;

        public Builder() {
    	      // Empty
        }

        public Builder(DomainCognitoOptionsGetArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.enabled = defaults.enabled;
    	      this.identityPoolId = defaults.identityPoolId;
    	      this.roleArn = defaults.roleArn;
    	      this.userPoolId = defaults.userPoolId;
        }

        public Builder enabled(@Nullable Output<Boolean> enabled) {
            this.enabled = enabled;
            return this;
        }

        public Builder enabled(@Nullable Boolean enabled) {
            this.enabled = Output.ofNullable(enabled);
            return this;
        }

        public Builder identityPoolId(Output<String> identityPoolId) {
            this.identityPoolId = Objects.requireNonNull(identityPoolId);
            return this;
        }

        public Builder identityPoolId(String identityPoolId) {
            this.identityPoolId = Output.of(Objects.requireNonNull(identityPoolId));
            return this;
        }

        public Builder roleArn(Output<String> roleArn) {
            this.roleArn = Objects.requireNonNull(roleArn);
            return this;
        }

        public Builder roleArn(String roleArn) {
            this.roleArn = Output.of(Objects.requireNonNull(roleArn));
            return this;
        }

        public Builder userPoolId(Output<String> userPoolId) {
            this.userPoolId = Objects.requireNonNull(userPoolId);
            return this;
        }

        public Builder userPoolId(String userPoolId) {
            this.userPoolId = Output.of(Objects.requireNonNull(userPoolId));
            return this;
        }
        public DomainCognitoOptionsGetArgs build() {
            return new DomainCognitoOptionsGetArgs(enabled, identityPoolId, roleArn, userPoolId);
        }
    }
}
