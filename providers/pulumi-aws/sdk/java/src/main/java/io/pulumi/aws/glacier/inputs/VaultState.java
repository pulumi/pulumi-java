// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.glacier.inputs;

import io.pulumi.aws.glacier.inputs.VaultNotificationGetArgs;
import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class VaultState extends io.pulumi.resources.ResourceArgs {

    public static final VaultState Empty = new VaultState();

    /**
     * The policy document. This is a JSON formatted string.
     * The heredoc syntax or `file` function is helpful here. Use the [Glacier Developer Guide](https://docs.aws.amazon.com/amazonglacier/latest/dev/vault-access-policy.html) for more information on Glacier Vault Policy
     * 
     */
    @InputImport(name="accessPolicy")
    private final @Nullable Input<String> accessPolicy;

    public Input<String> getAccessPolicy() {
        return this.accessPolicy == null ? Input.empty() : this.accessPolicy;
    }

    /**
     * The ARN of the vault.
     * 
     */
    @InputImport(name="arn")
    private final @Nullable Input<String> arn;

    public Input<String> getArn() {
        return this.arn == null ? Input.empty() : this.arn;
    }

    /**
     * The URI of the vault that was created.
     * 
     */
    @InputImport(name="location")
    private final @Nullable Input<String> location;

    public Input<String> getLocation() {
        return this.location == null ? Input.empty() : this.location;
    }

    /**
     * The name of the Vault. Names can be between 1 and 255 characters long and the valid characters are a-z, A-Z, 0-9, '_' (underscore), '-' (hyphen), and '.' (period).
     * 
     */
    @InputImport(name="name")
    private final @Nullable Input<String> name;

    public Input<String> getName() {
        return this.name == null ? Input.empty() : this.name;
    }

    /**
     * The notifications for the Vault. Fields documented below.
     * 
     */
    @InputImport(name="notification")
    private final @Nullable Input<VaultNotificationGetArgs> notification;

    public Input<VaultNotificationGetArgs> getNotification() {
        return this.notification == null ? Input.empty() : this.notification;
    }

    /**
     * A map of tags to assign to the resource. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @InputImport(name="tags")
    private final @Nullable Input<Map<String,String>> tags;

    public Input<Map<String,String>> getTags() {
        return this.tags == null ? Input.empty() : this.tags;
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider .
     * 
     */
    @InputImport(name="tagsAll")
    private final @Nullable Input<Map<String,String>> tagsAll;

    public Input<Map<String,String>> getTagsAll() {
        return this.tagsAll == null ? Input.empty() : this.tagsAll;
    }

    public VaultState(
        @Nullable Input<String> accessPolicy,
        @Nullable Input<String> arn,
        @Nullable Input<String> location,
        @Nullable Input<String> name,
        @Nullable Input<VaultNotificationGetArgs> notification,
        @Nullable Input<Map<String,String>> tags,
        @Nullable Input<Map<String,String>> tagsAll) {
        this.accessPolicy = accessPolicy;
        this.arn = arn;
        this.location = location;
        this.name = name;
        this.notification = notification;
        this.tags = tags;
        this.tagsAll = tagsAll;
    }

    private VaultState() {
        this.accessPolicy = Input.empty();
        this.arn = Input.empty();
        this.location = Input.empty();
        this.name = Input.empty();
        this.notification = Input.empty();
        this.tags = Input.empty();
        this.tagsAll = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VaultState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> accessPolicy;
        private @Nullable Input<String> arn;
        private @Nullable Input<String> location;
        private @Nullable Input<String> name;
        private @Nullable Input<VaultNotificationGetArgs> notification;
        private @Nullable Input<Map<String,String>> tags;
        private @Nullable Input<Map<String,String>> tagsAll;

        public Builder() {
    	      // Empty
        }

        public Builder(VaultState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessPolicy = defaults.accessPolicy;
    	      this.arn = defaults.arn;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.notification = defaults.notification;
    	      this.tags = defaults.tags;
    	      this.tagsAll = defaults.tagsAll;
        }

        public Builder setAccessPolicy(@Nullable Input<String> accessPolicy) {
            this.accessPolicy = accessPolicy;
            return this;
        }

        public Builder setAccessPolicy(@Nullable String accessPolicy) {
            this.accessPolicy = Input.ofNullable(accessPolicy);
            return this;
        }

        public Builder setArn(@Nullable Input<String> arn) {
            this.arn = arn;
            return this;
        }

        public Builder setArn(@Nullable String arn) {
            this.arn = Input.ofNullable(arn);
            return this;
        }

        public Builder setLocation(@Nullable Input<String> location) {
            this.location = location;
            return this;
        }

        public Builder setLocation(@Nullable String location) {
            this.location = Input.ofNullable(location);
            return this;
        }

        public Builder setName(@Nullable Input<String> name) {
            this.name = name;
            return this;
        }

        public Builder setName(@Nullable String name) {
            this.name = Input.ofNullable(name);
            return this;
        }

        public Builder setNotification(@Nullable Input<VaultNotificationGetArgs> notification) {
            this.notification = notification;
            return this;
        }

        public Builder setNotification(@Nullable VaultNotificationGetArgs notification) {
            this.notification = Input.ofNullable(notification);
            return this;
        }

        public Builder setTags(@Nullable Input<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }

        public Builder setTags(@Nullable Map<String,String> tags) {
            this.tags = Input.ofNullable(tags);
            return this;
        }

        public Builder setTagsAll(@Nullable Input<Map<String,String>> tagsAll) {
            this.tagsAll = tagsAll;
            return this;
        }

        public Builder setTagsAll(@Nullable Map<String,String> tagsAll) {
            this.tagsAll = Input.ofNullable(tagsAll);
            return this;
        }
        public VaultState build() {
            return new VaultState(accessPolicy, arn, location, name, notification, tags, tagsAll);
        }
    }
}
