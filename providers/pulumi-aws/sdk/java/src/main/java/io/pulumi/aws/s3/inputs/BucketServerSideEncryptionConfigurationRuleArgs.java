// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.s3.inputs;

import io.pulumi.aws.s3.inputs.BucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.util.Objects;
import javax.annotation.Nullable;


public final class BucketServerSideEncryptionConfigurationRuleArgs extends io.pulumi.resources.ResourceArgs {

    public static final BucketServerSideEncryptionConfigurationRuleArgs Empty = new BucketServerSideEncryptionConfigurationRuleArgs();

    /**
     * A single object for setting server-side encryption by default. (documented below)
     * 
     */
    @Import(name="applyServerSideEncryptionByDefault", required=true)
      private final Output<BucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultArgs> applyServerSideEncryptionByDefault;

    public Output<BucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultArgs> applyServerSideEncryptionByDefault() {
        return this.applyServerSideEncryptionByDefault;
    }

    /**
     * Whether or not to use [Amazon S3 Bucket Keys](https://docs.aws.amazon.com/AmazonS3/latest/dev/bucket-key.html) for SSE-KMS.
     * 
     */
    @Import(name="bucketKeyEnabled")
      private final @Nullable Output<Boolean> bucketKeyEnabled;

    public Output<Boolean> bucketKeyEnabled() {
        return this.bucketKeyEnabled == null ? Codegen.empty() : this.bucketKeyEnabled;
    }

    public BucketServerSideEncryptionConfigurationRuleArgs(
        Output<BucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultArgs> applyServerSideEncryptionByDefault,
        @Nullable Output<Boolean> bucketKeyEnabled) {
        this.applyServerSideEncryptionByDefault = Objects.requireNonNull(applyServerSideEncryptionByDefault, "expected parameter 'applyServerSideEncryptionByDefault' to be non-null");
        this.bucketKeyEnabled = bucketKeyEnabled;
    }

    private BucketServerSideEncryptionConfigurationRuleArgs() {
        this.applyServerSideEncryptionByDefault = Codegen.empty();
        this.bucketKeyEnabled = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BucketServerSideEncryptionConfigurationRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<BucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultArgs> applyServerSideEncryptionByDefault;
        private @Nullable Output<Boolean> bucketKeyEnabled;

        public Builder() {
    	      // Empty
        }

        public Builder(BucketServerSideEncryptionConfigurationRuleArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.applyServerSideEncryptionByDefault = defaults.applyServerSideEncryptionByDefault;
    	      this.bucketKeyEnabled = defaults.bucketKeyEnabled;
        }

        public Builder applyServerSideEncryptionByDefault(Output<BucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultArgs> applyServerSideEncryptionByDefault) {
            this.applyServerSideEncryptionByDefault = Objects.requireNonNull(applyServerSideEncryptionByDefault);
            return this;
        }
        public Builder applyServerSideEncryptionByDefault(BucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultArgs applyServerSideEncryptionByDefault) {
            this.applyServerSideEncryptionByDefault = Output.of(Objects.requireNonNull(applyServerSideEncryptionByDefault));
            return this;
        }
        public Builder bucketKeyEnabled(@Nullable Output<Boolean> bucketKeyEnabled) {
            this.bucketKeyEnabled = bucketKeyEnabled;
            return this;
        }
        public Builder bucketKeyEnabled(@Nullable Boolean bucketKeyEnabled) {
            this.bucketKeyEnabled = Codegen.ofNullable(bucketKeyEnabled);
            return this;
        }        public BucketServerSideEncryptionConfigurationRuleArgs build() {
            return new BucketServerSideEncryptionConfigurationRuleArgs(applyServerSideEncryptionByDefault, bucketKeyEnabled);
        }
    }
}
