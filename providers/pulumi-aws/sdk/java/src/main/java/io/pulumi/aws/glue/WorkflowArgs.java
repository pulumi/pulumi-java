// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.glue;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class WorkflowArgs extends io.pulumi.resources.ResourceArgs {

    public static final WorkflowArgs Empty = new WorkflowArgs();

    /**
     * A map of default run properties for this workflow. These properties are passed to all jobs associated to the workflow.
     * 
     */
    @InputImport(name="defaultRunProperties")
    private final @Nullable Input<Map<String,Object>> defaultRunProperties;

    public Input<Map<String,Object>> getDefaultRunProperties() {
        return this.defaultRunProperties == null ? Input.empty() : this.defaultRunProperties;
    }

    /**
     * Description of the workflow.
     * 
     */
    @InputImport(name="description")
    private final @Nullable Input<String> description;

    public Input<String> getDescription() {
        return this.description == null ? Input.empty() : this.description;
    }

    /**
     * Prevents exceeding the maximum number of concurrent runs of any of the component jobs. If you leave this parameter blank, there is no limit to the number of concurrent workflow runs.
     * 
     */
    @InputImport(name="maxConcurrentRuns")
    private final @Nullable Input<Integer> maxConcurrentRuns;

    public Input<Integer> getMaxConcurrentRuns() {
        return this.maxConcurrentRuns == null ? Input.empty() : this.maxConcurrentRuns;
    }

    /**
     * The name you assign to this workflow.
     * 
     */
    @InputImport(name="name")
    private final @Nullable Input<String> name;

    public Input<String> getName() {
        return this.name == null ? Input.empty() : this.name;
    }

    /**
     * Key-value map of resource tags. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @InputImport(name="tags")
    private final @Nullable Input<Map<String,String>> tags;

    public Input<Map<String,String>> getTags() {
        return this.tags == null ? Input.empty() : this.tags;
    }

    public WorkflowArgs(
        @Nullable Input<Map<String,Object>> defaultRunProperties,
        @Nullable Input<String> description,
        @Nullable Input<Integer> maxConcurrentRuns,
        @Nullable Input<String> name,
        @Nullable Input<Map<String,String>> tags) {
        this.defaultRunProperties = defaultRunProperties;
        this.description = description;
        this.maxConcurrentRuns = maxConcurrentRuns;
        this.name = name;
        this.tags = tags;
    }

    private WorkflowArgs() {
        this.defaultRunProperties = Input.empty();
        this.description = Input.empty();
        this.maxConcurrentRuns = Input.empty();
        this.name = Input.empty();
        this.tags = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(WorkflowArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<Map<String,Object>> defaultRunProperties;
        private @Nullable Input<String> description;
        private @Nullable Input<Integer> maxConcurrentRuns;
        private @Nullable Input<String> name;
        private @Nullable Input<Map<String,String>> tags;

        public Builder() {
    	      // Empty
        }

        public Builder(WorkflowArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.defaultRunProperties = defaults.defaultRunProperties;
    	      this.description = defaults.description;
    	      this.maxConcurrentRuns = defaults.maxConcurrentRuns;
    	      this.name = defaults.name;
    	      this.tags = defaults.tags;
        }

        public Builder setDefaultRunProperties(@Nullable Input<Map<String,Object>> defaultRunProperties) {
            this.defaultRunProperties = defaultRunProperties;
            return this;
        }

        public Builder setDefaultRunProperties(@Nullable Map<String,Object> defaultRunProperties) {
            this.defaultRunProperties = Input.ofNullable(defaultRunProperties);
            return this;
        }

        public Builder setDescription(@Nullable Input<String> description) {
            this.description = description;
            return this;
        }

        public Builder setDescription(@Nullable String description) {
            this.description = Input.ofNullable(description);
            return this;
        }

        public Builder setMaxConcurrentRuns(@Nullable Input<Integer> maxConcurrentRuns) {
            this.maxConcurrentRuns = maxConcurrentRuns;
            return this;
        }

        public Builder setMaxConcurrentRuns(@Nullable Integer maxConcurrentRuns) {
            this.maxConcurrentRuns = Input.ofNullable(maxConcurrentRuns);
            return this;
        }

        public Builder setName(@Nullable Input<String> name) {
            this.name = name;
            return this;
        }

        public Builder setName(@Nullable String name) {
            this.name = Input.ofNullable(name);
            return this;
        }

        public Builder setTags(@Nullable Input<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }

        public Builder setTags(@Nullable Map<String,String> tags) {
            this.tags = Input.ofNullable(tags);
            return this;
        }
        public WorkflowArgs build() {
            return new WorkflowArgs(defaultRunProperties, description, maxConcurrentRuns, name, tags);
        }
    }
}
