// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.route53;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ResolverFirewallRuleGroupAssociationArgs extends io.pulumi.resources.ResourceArgs {

    public static final ResolverFirewallRuleGroupAssociationArgs Empty = new ResolverFirewallRuleGroupAssociationArgs();

    /**
     * The unique identifier of the firewall rule group.
     * 
     */
    @InputImport(name="firewallRuleGroupId", required=true)
      private final Input<String> firewallRuleGroupId;

    public Input<String> getFirewallRuleGroupId() {
        return this.firewallRuleGroupId;
    }

    /**
     * If enabled, this setting disallows modification or removal of the association, to help prevent against accidentally altering DNS firewall protections. Valid values: `ENABLED`, `DISABLED`.
     * 
     */
    @InputImport(name="mutationProtection")
      private final @Nullable Input<String> mutationProtection;

    public Input<String> getMutationProtection() {
        return this.mutationProtection == null ? Input.empty() : this.mutationProtection;
    }

    /**
     * A name that lets you identify the rule group association, to manage and use it.
     * 
     */
    @InputImport(name="name")
      private final @Nullable Input<String> name;

    public Input<String> getName() {
        return this.name == null ? Input.empty() : this.name;
    }

    /**
     * The setting that determines the processing order of the rule group among the rule groups that you associate with the specified VPC. DNS Firewall filters VPC traffic starting from the rule group with the lowest numeric priority setting.
     * 
     */
    @InputImport(name="priority", required=true)
      private final Input<Integer> priority;

    public Input<Integer> getPriority() {
        return this.priority;
    }

    /**
     * Key-value map of resource tags. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @InputImport(name="tags")
      private final @Nullable Input<Map<String,String>> tags;

    public Input<Map<String,String>> getTags() {
        return this.tags == null ? Input.empty() : this.tags;
    }

    /**
     * The unique identifier of the VPC that you want to associate with the rule group.
     * 
     */
    @InputImport(name="vpcId", required=true)
      private final Input<String> vpcId;

    public Input<String> getVpcId() {
        return this.vpcId;
    }

    public ResolverFirewallRuleGroupAssociationArgs(
        Input<String> firewallRuleGroupId,
        @Nullable Input<String> mutationProtection,
        @Nullable Input<String> name,
        Input<Integer> priority,
        @Nullable Input<Map<String,String>> tags,
        Input<String> vpcId) {
        this.firewallRuleGroupId = Objects.requireNonNull(firewallRuleGroupId, "expected parameter 'firewallRuleGroupId' to be non-null");
        this.mutationProtection = mutationProtection;
        this.name = name;
        this.priority = Objects.requireNonNull(priority, "expected parameter 'priority' to be non-null");
        this.tags = tags;
        this.vpcId = Objects.requireNonNull(vpcId, "expected parameter 'vpcId' to be non-null");
    }

    private ResolverFirewallRuleGroupAssociationArgs() {
        this.firewallRuleGroupId = Input.empty();
        this.mutationProtection = Input.empty();
        this.name = Input.empty();
        this.priority = Input.empty();
        this.tags = Input.empty();
        this.vpcId = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ResolverFirewallRuleGroupAssociationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<String> firewallRuleGroupId;
        private @Nullable Input<String> mutationProtection;
        private @Nullable Input<String> name;
        private Input<Integer> priority;
        private @Nullable Input<Map<String,String>> tags;
        private Input<String> vpcId;

        public Builder() {
    	      // Empty
        }

        public Builder(ResolverFirewallRuleGroupAssociationArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.firewallRuleGroupId = defaults.firewallRuleGroupId;
    	      this.mutationProtection = defaults.mutationProtection;
    	      this.name = defaults.name;
    	      this.priority = defaults.priority;
    	      this.tags = defaults.tags;
    	      this.vpcId = defaults.vpcId;
        }

        public Builder setFirewallRuleGroupId(Input<String> firewallRuleGroupId) {
            this.firewallRuleGroupId = Objects.requireNonNull(firewallRuleGroupId);
            return this;
        }

        public Builder setFirewallRuleGroupId(String firewallRuleGroupId) {
            this.firewallRuleGroupId = Input.of(Objects.requireNonNull(firewallRuleGroupId));
            return this;
        }

        public Builder setMutationProtection(@Nullable Input<String> mutationProtection) {
            this.mutationProtection = mutationProtection;
            return this;
        }

        public Builder setMutationProtection(@Nullable String mutationProtection) {
            this.mutationProtection = Input.ofNullable(mutationProtection);
            return this;
        }

        public Builder setName(@Nullable Input<String> name) {
            this.name = name;
            return this;
        }

        public Builder setName(@Nullable String name) {
            this.name = Input.ofNullable(name);
            return this;
        }

        public Builder setPriority(Input<Integer> priority) {
            this.priority = Objects.requireNonNull(priority);
            return this;
        }

        public Builder setPriority(Integer priority) {
            this.priority = Input.of(Objects.requireNonNull(priority));
            return this;
        }

        public Builder setTags(@Nullable Input<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }

        public Builder setTags(@Nullable Map<String,String> tags) {
            this.tags = Input.ofNullable(tags);
            return this;
        }

        public Builder setVpcId(Input<String> vpcId) {
            this.vpcId = Objects.requireNonNull(vpcId);
            return this;
        }

        public Builder setVpcId(String vpcId) {
            this.vpcId = Input.of(Objects.requireNonNull(vpcId));
            return this;
        }
        public ResolverFirewallRuleGroupAssociationArgs build() {
            return new ResolverFirewallRuleGroupAssociationArgs(firewallRuleGroupId, mutationProtection, name, priority, tags, vpcId);
        }
    }
}
