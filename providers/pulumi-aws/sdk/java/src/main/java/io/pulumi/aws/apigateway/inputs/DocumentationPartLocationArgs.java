// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.apigateway.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class DocumentationPartLocationArgs extends io.pulumi.resources.ResourceArgs {

    public static final DocumentationPartLocationArgs Empty = new DocumentationPartLocationArgs();

    /**
     * The HTTP verb of a method. The default value is `*` for any method.
     * 
     */
    @InputImport(name="method")
      private final @Nullable Input<String> method;

    public Input<String> getMethod() {
        return this.method == null ? Input.empty() : this.method;
    }

    /**
     * The name of the targeted API entity.
     * 
     */
    @InputImport(name="name")
      private final @Nullable Input<String> name;

    public Input<String> getName() {
        return this.name == null ? Input.empty() : this.name;
    }

    /**
     * The URL path of the target. The default value is `/` for the root resource.
     * 
     */
    @InputImport(name="path")
      private final @Nullable Input<String> path;

    public Input<String> getPath() {
        return this.path == null ? Input.empty() : this.path;
    }

    /**
     * The HTTP status code of a response. The default value is `*` for any status code.
     * 
     */
    @InputImport(name="statusCode")
      private final @Nullable Input<String> statusCode;

    public Input<String> getStatusCode() {
        return this.statusCode == null ? Input.empty() : this.statusCode;
    }

    /**
     * The type of API entity to which the documentation content appliesE.g., `API`, `METHOD` or `REQUEST_BODY`
     * 
     */
    @InputImport(name="type", required=true)
      private final Input<String> type;

    public Input<String> getType() {
        return this.type;
    }

    public DocumentationPartLocationArgs(
        @Nullable Input<String> method,
        @Nullable Input<String> name,
        @Nullable Input<String> path,
        @Nullable Input<String> statusCode,
        Input<String> type) {
        this.method = method;
        this.name = name;
        this.path = path;
        this.statusCode = statusCode;
        this.type = Objects.requireNonNull(type, "expected parameter 'type' to be non-null");
    }

    private DocumentationPartLocationArgs() {
        this.method = Input.empty();
        this.name = Input.empty();
        this.path = Input.empty();
        this.statusCode = Input.empty();
        this.type = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DocumentationPartLocationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> method;
        private @Nullable Input<String> name;
        private @Nullable Input<String> path;
        private @Nullable Input<String> statusCode;
        private Input<String> type;

        public Builder() {
    	      // Empty
        }

        public Builder(DocumentationPartLocationArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.method = defaults.method;
    	      this.name = defaults.name;
    	      this.path = defaults.path;
    	      this.statusCode = defaults.statusCode;
    	      this.type = defaults.type;
        }

        public Builder method(@Nullable Input<String> method) {
            this.method = method;
            return this;
        }

        public Builder method(@Nullable String method) {
            this.method = Input.ofNullable(method);
            return this;
        }

        public Builder name(@Nullable Input<String> name) {
            this.name = name;
            return this;
        }

        public Builder name(@Nullable String name) {
            this.name = Input.ofNullable(name);
            return this;
        }

        public Builder path(@Nullable Input<String> path) {
            this.path = path;
            return this;
        }

        public Builder path(@Nullable String path) {
            this.path = Input.ofNullable(path);
            return this;
        }

        public Builder statusCode(@Nullable Input<String> statusCode) {
            this.statusCode = statusCode;
            return this;
        }

        public Builder statusCode(@Nullable String statusCode) {
            this.statusCode = Input.ofNullable(statusCode);
            return this;
        }

        public Builder type(Input<String> type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }

        public Builder type(String type) {
            this.type = Input.of(Objects.requireNonNull(type));
            return this;
        }
        public DocumentationPartLocationArgs build() {
            return new DocumentationPartLocationArgs(method, name, path, statusCode, type);
        }
    }
}
