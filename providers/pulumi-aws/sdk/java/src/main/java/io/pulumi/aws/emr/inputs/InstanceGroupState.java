// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.emr.inputs;

import io.pulumi.aws.emr.inputs.InstanceGroupEbsConfigGetArgs;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class InstanceGroupState extends io.pulumi.resources.ResourceArgs {

    public static final InstanceGroupState Empty = new InstanceGroupState();

    /**
     * The autoscaling policy document. This is a JSON formatted string. See [EMR Auto Scaling](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-automatic-scaling.html)
     * 
     */
    @InputImport(name="autoscalingPolicy")
      private final @Nullable Input<String> autoscalingPolicy;

    public Input<String> getAutoscalingPolicy() {
        return this.autoscalingPolicy == null ? Input.empty() : this.autoscalingPolicy;
    }

    /**
     * If set, the bid price for each EC2 instance in the instance group, expressed in USD. By setting this attribute, the instance group is being declared as a Spot Instance, and will implicitly create a Spot request. Leave this blank to use On-Demand Instances.
     * 
     */
    @InputImport(name="bidPrice")
      private final @Nullable Input<String> bidPrice;

    public Input<String> getBidPrice() {
        return this.bidPrice == null ? Input.empty() : this.bidPrice;
    }

    /**
     * ID of the EMR Cluster to attach to. Changing this forces a new resource to be created.
     * 
     */
    @InputImport(name="clusterId")
      private final @Nullable Input<String> clusterId;

    public Input<String> getClusterId() {
        return this.clusterId == null ? Input.empty() : this.clusterId;
    }

    /**
     * A JSON string for supplying list of configurations specific to the EMR instance group. Note that this can only be changed when using EMR release 5.21 or later.
     * 
     */
    @InputImport(name="configurationsJson")
      private final @Nullable Input<String> configurationsJson;

    public Input<String> getConfigurationsJson() {
        return this.configurationsJson == null ? Input.empty() : this.configurationsJson;
    }

    /**
     * One or more `ebs_config` blocks as defined below. Changing this forces a new resource to be created.
     * 
     */
    @InputImport(name="ebsConfigs")
      private final @Nullable Input<List<InstanceGroupEbsConfigGetArgs>> ebsConfigs;

    public Input<List<InstanceGroupEbsConfigGetArgs>> getEbsConfigs() {
        return this.ebsConfigs == null ? Input.empty() : this.ebsConfigs;
    }

    /**
     * Indicates whether an Amazon EBS volume is EBS-optimized. Changing this forces a new resource to be created.
     * 
     */
    @InputImport(name="ebsOptimized")
      private final @Nullable Input<Boolean> ebsOptimized;

    public Input<Boolean> getEbsOptimized() {
        return this.ebsOptimized == null ? Input.empty() : this.ebsOptimized;
    }

    /**
     * target number of instances for the instance group. defaults to 0.
     * 
     */
    @InputImport(name="instanceCount")
      private final @Nullable Input<Integer> instanceCount;

    public Input<Integer> getInstanceCount() {
        return this.instanceCount == null ? Input.empty() : this.instanceCount;
    }

    /**
     * The EC2 instance type for all instances in the instance group. Changing this forces a new resource to be created.
     * 
     */
    @InputImport(name="instanceType")
      private final @Nullable Input<String> instanceType;

    public Input<String> getInstanceType() {
        return this.instanceType == null ? Input.empty() : this.instanceType;
    }

    /**
     * Human friendly name given to the instance group. Changing this forces a new resource to be created.
     * 
     */
    @InputImport(name="name")
      private final @Nullable Input<String> name;

    public Input<String> getName() {
        return this.name == null ? Input.empty() : this.name;
    }

    @InputImport(name="runningInstanceCount")
      private final @Nullable Input<Integer> runningInstanceCount;

    public Input<Integer> getRunningInstanceCount() {
        return this.runningInstanceCount == null ? Input.empty() : this.runningInstanceCount;
    }

    @InputImport(name="status")
      private final @Nullable Input<String> status;

    public Input<String> getStatus() {
        return this.status == null ? Input.empty() : this.status;
    }

    public InstanceGroupState(
        @Nullable Input<String> autoscalingPolicy,
        @Nullable Input<String> bidPrice,
        @Nullable Input<String> clusterId,
        @Nullable Input<String> configurationsJson,
        @Nullable Input<List<InstanceGroupEbsConfigGetArgs>> ebsConfigs,
        @Nullable Input<Boolean> ebsOptimized,
        @Nullable Input<Integer> instanceCount,
        @Nullable Input<String> instanceType,
        @Nullable Input<String> name,
        @Nullable Input<Integer> runningInstanceCount,
        @Nullable Input<String> status) {
        this.autoscalingPolicy = autoscalingPolicy;
        this.bidPrice = bidPrice;
        this.clusterId = clusterId;
        this.configurationsJson = configurationsJson;
        this.ebsConfigs = ebsConfigs;
        this.ebsOptimized = ebsOptimized;
        this.instanceCount = instanceCount;
        this.instanceType = instanceType;
        this.name = name;
        this.runningInstanceCount = runningInstanceCount;
        this.status = status;
    }

    private InstanceGroupState() {
        this.autoscalingPolicy = Input.empty();
        this.bidPrice = Input.empty();
        this.clusterId = Input.empty();
        this.configurationsJson = Input.empty();
        this.ebsConfigs = Input.empty();
        this.ebsOptimized = Input.empty();
        this.instanceCount = Input.empty();
        this.instanceType = Input.empty();
        this.name = Input.empty();
        this.runningInstanceCount = Input.empty();
        this.status = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(InstanceGroupState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> autoscalingPolicy;
        private @Nullable Input<String> bidPrice;
        private @Nullable Input<String> clusterId;
        private @Nullable Input<String> configurationsJson;
        private @Nullable Input<List<InstanceGroupEbsConfigGetArgs>> ebsConfigs;
        private @Nullable Input<Boolean> ebsOptimized;
        private @Nullable Input<Integer> instanceCount;
        private @Nullable Input<String> instanceType;
        private @Nullable Input<String> name;
        private @Nullable Input<Integer> runningInstanceCount;
        private @Nullable Input<String> status;

        public Builder() {
    	      // Empty
        }

        public Builder(InstanceGroupState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.autoscalingPolicy = defaults.autoscalingPolicy;
    	      this.bidPrice = defaults.bidPrice;
    	      this.clusterId = defaults.clusterId;
    	      this.configurationsJson = defaults.configurationsJson;
    	      this.ebsConfigs = defaults.ebsConfigs;
    	      this.ebsOptimized = defaults.ebsOptimized;
    	      this.instanceCount = defaults.instanceCount;
    	      this.instanceType = defaults.instanceType;
    	      this.name = defaults.name;
    	      this.runningInstanceCount = defaults.runningInstanceCount;
    	      this.status = defaults.status;
        }

        public Builder setAutoscalingPolicy(@Nullable Input<String> autoscalingPolicy) {
            this.autoscalingPolicy = autoscalingPolicy;
            return this;
        }

        public Builder setAutoscalingPolicy(@Nullable String autoscalingPolicy) {
            this.autoscalingPolicy = Input.ofNullable(autoscalingPolicy);
            return this;
        }

        public Builder setBidPrice(@Nullable Input<String> bidPrice) {
            this.bidPrice = bidPrice;
            return this;
        }

        public Builder setBidPrice(@Nullable String bidPrice) {
            this.bidPrice = Input.ofNullable(bidPrice);
            return this;
        }

        public Builder setClusterId(@Nullable Input<String> clusterId) {
            this.clusterId = clusterId;
            return this;
        }

        public Builder setClusterId(@Nullable String clusterId) {
            this.clusterId = Input.ofNullable(clusterId);
            return this;
        }

        public Builder setConfigurationsJson(@Nullable Input<String> configurationsJson) {
            this.configurationsJson = configurationsJson;
            return this;
        }

        public Builder setConfigurationsJson(@Nullable String configurationsJson) {
            this.configurationsJson = Input.ofNullable(configurationsJson);
            return this;
        }

        public Builder setEbsConfigs(@Nullable Input<List<InstanceGroupEbsConfigGetArgs>> ebsConfigs) {
            this.ebsConfigs = ebsConfigs;
            return this;
        }

        public Builder setEbsConfigs(@Nullable List<InstanceGroupEbsConfigGetArgs> ebsConfigs) {
            this.ebsConfigs = Input.ofNullable(ebsConfigs);
            return this;
        }

        public Builder setEbsOptimized(@Nullable Input<Boolean> ebsOptimized) {
            this.ebsOptimized = ebsOptimized;
            return this;
        }

        public Builder setEbsOptimized(@Nullable Boolean ebsOptimized) {
            this.ebsOptimized = Input.ofNullable(ebsOptimized);
            return this;
        }

        public Builder setInstanceCount(@Nullable Input<Integer> instanceCount) {
            this.instanceCount = instanceCount;
            return this;
        }

        public Builder setInstanceCount(@Nullable Integer instanceCount) {
            this.instanceCount = Input.ofNullable(instanceCount);
            return this;
        }

        public Builder setInstanceType(@Nullable Input<String> instanceType) {
            this.instanceType = instanceType;
            return this;
        }

        public Builder setInstanceType(@Nullable String instanceType) {
            this.instanceType = Input.ofNullable(instanceType);
            return this;
        }

        public Builder setName(@Nullable Input<String> name) {
            this.name = name;
            return this;
        }

        public Builder setName(@Nullable String name) {
            this.name = Input.ofNullable(name);
            return this;
        }

        public Builder setRunningInstanceCount(@Nullable Input<Integer> runningInstanceCount) {
            this.runningInstanceCount = runningInstanceCount;
            return this;
        }

        public Builder setRunningInstanceCount(@Nullable Integer runningInstanceCount) {
            this.runningInstanceCount = Input.ofNullable(runningInstanceCount);
            return this;
        }

        public Builder setStatus(@Nullable Input<String> status) {
            this.status = status;
            return this;
        }

        public Builder setStatus(@Nullable String status) {
            this.status = Input.ofNullable(status);
            return this;
        }
        public InstanceGroupState build() {
            return new InstanceGroupState(autoscalingPolicy, bidPrice, clusterId, configurationsJson, ebsConfigs, ebsOptimized, instanceCount, instanceType, name, runningInstanceCount, status);
        }
    }
}
