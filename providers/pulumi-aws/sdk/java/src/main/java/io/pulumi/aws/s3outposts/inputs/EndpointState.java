// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.s3outposts.inputs;

import io.pulumi.aws.s3outposts.inputs.EndpointNetworkInterfaceGetArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class EndpointState extends io.pulumi.resources.ResourceArgs {

    public static final EndpointState Empty = new EndpointState();

    /**
     * Amazon Resource Name (ARN) of the endpoint.
     * 
     */
    @Import(name="arn")
      private final @Nullable Output<String> arn;

    public Output<String> getArn() {
        return this.arn == null ? Output.empty() : this.arn;
    }

    /**
     * VPC CIDR block of the endpoint.
     * 
     */
    @Import(name="cidrBlock")
      private final @Nullable Output<String> cidrBlock;

    public Output<String> getCidrBlock() {
        return this.cidrBlock == null ? Output.empty() : this.cidrBlock;
    }

    /**
     * UTC creation time in [RFC3339 format](https://tools.ietf.org/html/rfc3339#section-5.8).
     * 
     */
    @Import(name="creationTime")
      private final @Nullable Output<String> creationTime;

    public Output<String> getCreationTime() {
        return this.creationTime == null ? Output.empty() : this.creationTime;
    }

    /**
     * Set of nested attributes for associated Elastic Network Interfaces (ENIs).
     * 
     */
    @Import(name="networkInterfaces")
      private final @Nullable Output<List<EndpointNetworkInterfaceGetArgs>> networkInterfaces;

    public Output<List<EndpointNetworkInterfaceGetArgs>> getNetworkInterfaces() {
        return this.networkInterfaces == null ? Output.empty() : this.networkInterfaces;
    }

    /**
     * Identifier of the Outpost to contain this endpoint.
     * 
     */
    @Import(name="outpostId")
      private final @Nullable Output<String> outpostId;

    public Output<String> getOutpostId() {
        return this.outpostId == null ? Output.empty() : this.outpostId;
    }

    /**
     * Identifier of the EC2 Security Group.
     * 
     */
    @Import(name="securityGroupId")
      private final @Nullable Output<String> securityGroupId;

    public Output<String> getSecurityGroupId() {
        return this.securityGroupId == null ? Output.empty() : this.securityGroupId;
    }

    /**
     * Identifier of the EC2 Subnet.
     * 
     */
    @Import(name="subnetId")
      private final @Nullable Output<String> subnetId;

    public Output<String> getSubnetId() {
        return this.subnetId == null ? Output.empty() : this.subnetId;
    }

    public EndpointState(
        @Nullable Output<String> arn,
        @Nullable Output<String> cidrBlock,
        @Nullable Output<String> creationTime,
        @Nullable Output<List<EndpointNetworkInterfaceGetArgs>> networkInterfaces,
        @Nullable Output<String> outpostId,
        @Nullable Output<String> securityGroupId,
        @Nullable Output<String> subnetId) {
        this.arn = arn;
        this.cidrBlock = cidrBlock;
        this.creationTime = creationTime;
        this.networkInterfaces = networkInterfaces;
        this.outpostId = outpostId;
        this.securityGroupId = securityGroupId;
        this.subnetId = subnetId;
    }

    private EndpointState() {
        this.arn = Output.empty();
        this.cidrBlock = Output.empty();
        this.creationTime = Output.empty();
        this.networkInterfaces = Output.empty();
        this.outpostId = Output.empty();
        this.securityGroupId = Output.empty();
        this.subnetId = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(EndpointState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> arn;
        private @Nullable Output<String> cidrBlock;
        private @Nullable Output<String> creationTime;
        private @Nullable Output<List<EndpointNetworkInterfaceGetArgs>> networkInterfaces;
        private @Nullable Output<String> outpostId;
        private @Nullable Output<String> securityGroupId;
        private @Nullable Output<String> subnetId;

        public Builder() {
    	      // Empty
        }

        public Builder(EndpointState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.cidrBlock = defaults.cidrBlock;
    	      this.creationTime = defaults.creationTime;
    	      this.networkInterfaces = defaults.networkInterfaces;
    	      this.outpostId = defaults.outpostId;
    	      this.securityGroupId = defaults.securityGroupId;
    	      this.subnetId = defaults.subnetId;
        }

        public Builder arn(@Nullable Output<String> arn) {
            this.arn = arn;
            return this;
        }
        public Builder arn(@Nullable String arn) {
            this.arn = Output.ofNullable(arn);
            return this;
        }
        public Builder cidrBlock(@Nullable Output<String> cidrBlock) {
            this.cidrBlock = cidrBlock;
            return this;
        }
        public Builder cidrBlock(@Nullable String cidrBlock) {
            this.cidrBlock = Output.ofNullable(cidrBlock);
            return this;
        }
        public Builder creationTime(@Nullable Output<String> creationTime) {
            this.creationTime = creationTime;
            return this;
        }
        public Builder creationTime(@Nullable String creationTime) {
            this.creationTime = Output.ofNullable(creationTime);
            return this;
        }
        public Builder networkInterfaces(@Nullable Output<List<EndpointNetworkInterfaceGetArgs>> networkInterfaces) {
            this.networkInterfaces = networkInterfaces;
            return this;
        }
        public Builder networkInterfaces(@Nullable List<EndpointNetworkInterfaceGetArgs> networkInterfaces) {
            this.networkInterfaces = Output.ofNullable(networkInterfaces);
            return this;
        }
        public Builder networkInterfaces(EndpointNetworkInterfaceGetArgs... networkInterfaces) {
            return networkInterfaces(List.of(networkInterfaces));
        }
        public Builder outpostId(@Nullable Output<String> outpostId) {
            this.outpostId = outpostId;
            return this;
        }
        public Builder outpostId(@Nullable String outpostId) {
            this.outpostId = Output.ofNullable(outpostId);
            return this;
        }
        public Builder securityGroupId(@Nullable Output<String> securityGroupId) {
            this.securityGroupId = securityGroupId;
            return this;
        }
        public Builder securityGroupId(@Nullable String securityGroupId) {
            this.securityGroupId = Output.ofNullable(securityGroupId);
            return this;
        }
        public Builder subnetId(@Nullable Output<String> subnetId) {
            this.subnetId = subnetId;
            return this;
        }
        public Builder subnetId(@Nullable String subnetId) {
            this.subnetId = Output.ofNullable(subnetId);
            return this;
        }        public EndpointState build() {
            return new EndpointState(arn, cidrBlock, creationTime, networkInterfaces, outpostId, securityGroupId, subnetId);
        }
    }
}
