// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.ec2;

import io.pulumi.aws.Utilities;
import io.pulumi.aws.ec2.RouteArgs;
import io.pulumi.aws.ec2.inputs.RouteState;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.OutputExport;
import io.pulumi.core.annotations.ResourceType;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * ## Import
 * 
 * Individual routes can be imported using `ROUTETABLEID_DESTINATION`. For example, import a route in route table `rtb-656C65616E6F72` with an IPv4 destination CIDR of `10.42.0.0/16` like thisconsole
 * 
 * ```sh
 *  $ pulumi import aws:ec2/route:Route my_route rtb-656C65616E6F72_10.42.0.0/16
 * ```
 * 
 *  Import a route in route table `rtb-656C65616E6F72` with an IPv6 destination CIDR of `2620:0:2d0:200::8/125` similarlyconsole
 * 
 * ```sh
 *  $ pulumi import aws:ec2/route:Route my_route rtb-656C65616E6F72_2620:0:2d0:200::8/125
 * ```
 * 
 *  Import a route in route table `rtb-656C65616E6F72` with a managed prefix list destination of `pl-0570a1d2d725c16be` similarlyconsole
 * 
 * ```sh
 *  $ pulumi import aws:ec2/route:Route my_route rtb-656C65616E6F72_pl-0570a1d2d725c16be
 * ```
 * 
 */
@ResourceType(type="aws:ec2/route:Route")
public class Route extends io.pulumi.resources.CustomResource {
    /**
     * Identifier of a carrier gateway. This attribute can only be used when the VPC contains a subnet which is associated with a Wavelength Zone.
     * 
     */
    @OutputExport(name="carrierGatewayId", type=String.class, parameters={})
    private Output</* @Nullable */ String> carrierGatewayId;

    /**
     * @return Identifier of a carrier gateway. This attribute can only be used when the VPC contains a subnet which is associated with a Wavelength Zone.
     * 
     */
    public Output</* @Nullable */ String> getCarrierGatewayId() {
        return this.carrierGatewayId;
    }
    /**
     * The destination CIDR block.
     * 
     */
    @OutputExport(name="destinationCidrBlock", type=String.class, parameters={})
    private Output</* @Nullable */ String> destinationCidrBlock;

    /**
     * @return The destination CIDR block.
     * 
     */
    public Output</* @Nullable */ String> getDestinationCidrBlock() {
        return this.destinationCidrBlock;
    }
    /**
     * The destination IPv6 CIDR block.
     * 
     */
    @OutputExport(name="destinationIpv6CidrBlock", type=String.class, parameters={})
    private Output</* @Nullable */ String> destinationIpv6CidrBlock;

    /**
     * @return The destination IPv6 CIDR block.
     * 
     */
    public Output</* @Nullable */ String> getDestinationIpv6CidrBlock() {
        return this.destinationIpv6CidrBlock;
    }
    /**
     * The ID of a managed prefix list destination.
     * 
     */
    @OutputExport(name="destinationPrefixListId", type=String.class, parameters={})
    private Output</* @Nullable */ String> destinationPrefixListId;

    /**
     * @return The ID of a managed prefix list destination.
     * 
     */
    public Output</* @Nullable */ String> getDestinationPrefixListId() {
        return this.destinationPrefixListId;
    }
    /**
     * Identifier of a VPC Egress Only Internet Gateway.
     * 
     */
    @OutputExport(name="egressOnlyGatewayId", type=String.class, parameters={})
    private Output</* @Nullable */ String> egressOnlyGatewayId;

    /**
     * @return Identifier of a VPC Egress Only Internet Gateway.
     * 
     */
    public Output</* @Nullable */ String> getEgressOnlyGatewayId() {
        return this.egressOnlyGatewayId;
    }
    /**
     * Identifier of a VPC internet gateway or a virtual private gateway.
     * 
     */
    @OutputExport(name="gatewayId", type=String.class, parameters={})
    private Output</* @Nullable */ String> gatewayId;

    /**
     * @return Identifier of a VPC internet gateway or a virtual private gateway.
     * 
     */
    public Output</* @Nullable */ String> getGatewayId() {
        return this.gatewayId;
    }
    /**
     * Identifier of an EC2 instance.
     * 
     */
    @OutputExport(name="instanceId", type=String.class, parameters={})
    private Output<String> instanceId;

    /**
     * @return Identifier of an EC2 instance.
     * 
     */
    public Output<String> getInstanceId() {
        return this.instanceId;
    }
    /**
     * The AWS account ID of the owner of the EC2 instance.
     * 
     */
    @OutputExport(name="instanceOwnerId", type=String.class, parameters={})
    private Output<String> instanceOwnerId;

    /**
     * @return The AWS account ID of the owner of the EC2 instance.
     * 
     */
    public Output<String> getInstanceOwnerId() {
        return this.instanceOwnerId;
    }
    /**
     * Identifier of a Outpost local gateway.
     * 
     */
    @OutputExport(name="localGatewayId", type=String.class, parameters={})
    private Output</* @Nullable */ String> localGatewayId;

    /**
     * @return Identifier of a Outpost local gateway.
     * 
     */
    public Output</* @Nullable */ String> getLocalGatewayId() {
        return this.localGatewayId;
    }
    /**
     * Identifier of a VPC NAT gateway.
     * 
     */
    @OutputExport(name="natGatewayId", type=String.class, parameters={})
    private Output</* @Nullable */ String> natGatewayId;

    /**
     * @return Identifier of a VPC NAT gateway.
     * 
     */
    public Output</* @Nullable */ String> getNatGatewayId() {
        return this.natGatewayId;
    }
    /**
     * Identifier of an EC2 network interface.
     * 
     */
    @OutputExport(name="networkInterfaceId", type=String.class, parameters={})
    private Output<String> networkInterfaceId;

    /**
     * @return Identifier of an EC2 network interface.
     * 
     */
    public Output<String> getNetworkInterfaceId() {
        return this.networkInterfaceId;
    }
    /**
     * How the route was created - `CreateRouteTable`, `CreateRoute` or `EnableVgwRoutePropagation`.
     * 
     */
    @OutputExport(name="origin", type=String.class, parameters={})
    private Output<String> origin;

    /**
     * @return How the route was created - `CreateRouteTable`, `CreateRoute` or `EnableVgwRoutePropagation`.
     * 
     */
    public Output<String> getOrigin() {
        return this.origin;
    }
    /**
     * The ID of the routing table.
     * 
     */
    @OutputExport(name="routeTableId", type=String.class, parameters={})
    private Output<String> routeTableId;

    /**
     * @return The ID of the routing table.
     * 
     */
    public Output<String> getRouteTableId() {
        return this.routeTableId;
    }
    /**
     * The state of the route - `active` or `blackhole`.
     * 
     */
    @OutputExport(name="state", type=String.class, parameters={})
    private Output<String> state;

    /**
     * @return The state of the route - `active` or `blackhole`.
     * 
     */
    public Output<String> getState() {
        return this.state;
    }
    /**
     * Identifier of an EC2 Transit Gateway.
     * 
     */
    @OutputExport(name="transitGatewayId", type=String.class, parameters={})
    private Output</* @Nullable */ String> transitGatewayId;

    /**
     * @return Identifier of an EC2 Transit Gateway.
     * 
     */
    public Output</* @Nullable */ String> getTransitGatewayId() {
        return this.transitGatewayId;
    }
    /**
     * Identifier of a VPC Endpoint.
     * 
     */
    @OutputExport(name="vpcEndpointId", type=String.class, parameters={})
    private Output</* @Nullable */ String> vpcEndpointId;

    /**
     * @return Identifier of a VPC Endpoint.
     * 
     */
    public Output</* @Nullable */ String> getVpcEndpointId() {
        return this.vpcEndpointId;
    }
    /**
     * Identifier of a VPC peering connection.
     * 
     */
    @OutputExport(name="vpcPeeringConnectionId", type=String.class, parameters={})
    private Output</* @Nullable */ String> vpcPeeringConnectionId;

    /**
     * @return Identifier of a VPC peering connection.
     * 
     */
    public Output</* @Nullable */ String> getVpcPeeringConnectionId() {
        return this.vpcPeeringConnectionId;
    }

    public interface BuilderApplicator {
        public void apply(RouteArgs.Builder a);
    }
    private static io.pulumi.aws.ec2.RouteArgs buildArgs(BuilderApplicator argsBuilder) {
        final var builder = io.pulumi.aws.ec2.RouteArgs.builder();
        argsBuilder.apply(builder);
        return builder.build();
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param argsBuilder A function that configures a passed builder.
     */
    public Route(String name, BuilderApplicator argsBuilder) {
        this(name, buildArgs(argsBuilder), null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Route(String name) {
        this(name, RouteArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Route(String name, RouteArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Route(String name, RouteArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:ec2/route:Route", name, args == null ? RouteArgs.Empty : args, makeResourceOptions(options, Output.empty()));
    }

    private Route(String name, Output<String> id, @Nullable RouteState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:ec2/route:Route", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .setVersion(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Route get(String name, Output<String> id, @Nullable RouteState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new Route(name, id, state, options);
    }
}
