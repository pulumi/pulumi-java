// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.ec2;

import io.pulumi.aws.Utilities;
import io.pulumi.aws.ec2.AmiLaunchPermissionArgs;
import io.pulumi.aws.ec2.inputs.AmiLaunchPermissionState;
import io.pulumi.core.Input;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.OutputExport;
import io.pulumi.core.annotations.ResourceType;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * Adds launch permission to Amazon Machine Image (AMI) from another AWS account.
 * 
 * ## Example Usage
 * 
 * ## Import
 * 
 * AWS AMI Launch Permission can be imported using the `ACCOUNT-ID/IMAGE-ID`, e.g.,
 * 
 * ```sh
 *  $ pulumi import aws:ec2/amiLaunchPermission:AmiLaunchPermission example 123456789012/ami-12345678
 * ```
 * 
 */
@ResourceType(type="aws:ec2/amiLaunchPermission:AmiLaunchPermission")
public class AmiLaunchPermission extends io.pulumi.resources.CustomResource {
    /**
     * An AWS Account ID to add launch permissions.
     * 
     */
    @OutputExport(name="accountId", type=String.class, parameters={})
    private Output<String> accountId;

    /**
     * @return An AWS Account ID to add launch permissions.
     * 
     */
    public Output<String> getAccountId() {
        return this.accountId;
    }
    /**
     * A region-unique name for the AMI.
     * 
     */
    @OutputExport(name="imageId", type=String.class, parameters={})
    private Output<String> imageId;

    /**
     * @return A region-unique name for the AMI.
     * 
     */
    public Output<String> getImageId() {
        return this.imageId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public AmiLaunchPermission(String name) {
        this(name, AmiLaunchPermissionArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public AmiLaunchPermission(String name, AmiLaunchPermissionArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public AmiLaunchPermission(String name, AmiLaunchPermissionArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:ec2/amiLaunchPermission:AmiLaunchPermission", name, args == null ? AmiLaunchPermissionArgs.Empty : args, makeResourceOptions(options, Input.empty()));
    }

    private AmiLaunchPermission(String name, Input<String> id, @Nullable AmiLaunchPermissionState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:ec2/amiLaunchPermission:AmiLaunchPermission", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Input<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .setVersion(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static AmiLaunchPermission get(String name, Input<String> id, @Nullable AmiLaunchPermissionState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new AmiLaunchPermission(name, id, state, options);
    }
}
