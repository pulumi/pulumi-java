// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.acmpca.outputs;

import io.pulumi.aws.acmpca.outputs.CertificateAuthorityCertificateAuthorityConfigurationSubject;
import io.pulumi.core.annotations.OutputCustomType;
import java.lang.String;
import java.util.Objects;

@OutputCustomType
public final class CertificateAuthorityCertificateAuthorityConfiguration {
    /**
     * Type of the public key algorithm and size, in bits, of the key pair that your key pair creates when it issues a certificate. Valid values can be found in the [ACM PCA Documentation](https://docs.aws.amazon.com/acm-pca/latest/APIReference/API_CertificateAuthorityConfiguration.html).
     * 
     */
    private final String keyAlgorithm;
    /**
     * Name of the algorithm your private CA uses to sign certificate requests. Valid values can be found in the [ACM PCA Documentation](https://docs.aws.amazon.com/acm-pca/latest/APIReference/API_CertificateAuthorityConfiguration.html).
     * 
     */
    private final String signingAlgorithm;
    /**
     * Nested argument that contains X.500 distinguished name information. At least one nested attribute must be specified.
     * 
     */
    private final CertificateAuthorityCertificateAuthorityConfigurationSubject subject;

    @OutputCustomType.Constructor({"keyAlgorithm","signingAlgorithm","subject"})
    private CertificateAuthorityCertificateAuthorityConfiguration(
        String keyAlgorithm,
        String signingAlgorithm,
        CertificateAuthorityCertificateAuthorityConfigurationSubject subject) {
        this.keyAlgorithm = Objects.requireNonNull(keyAlgorithm);
        this.signingAlgorithm = Objects.requireNonNull(signingAlgorithm);
        this.subject = Objects.requireNonNull(subject);
    }

    /**
     * Type of the public key algorithm and size, in bits, of the key pair that your key pair creates when it issues a certificate. Valid values can be found in the [ACM PCA Documentation](https://docs.aws.amazon.com/acm-pca/latest/APIReference/API_CertificateAuthorityConfiguration.html).
     * 
     */
    public String getKeyAlgorithm() {
        return this.keyAlgorithm;
    }
    /**
     * Name of the algorithm your private CA uses to sign certificate requests. Valid values can be found in the [ACM PCA Documentation](https://docs.aws.amazon.com/acm-pca/latest/APIReference/API_CertificateAuthorityConfiguration.html).
     * 
     */
    public String getSigningAlgorithm() {
        return this.signingAlgorithm;
    }
    /**
     * Nested argument that contains X.500 distinguished name information. At least one nested attribute must be specified.
     * 
     */
    public CertificateAuthorityCertificateAuthorityConfigurationSubject getSubject() {
        return this.subject;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CertificateAuthorityCertificateAuthorityConfiguration defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String keyAlgorithm;
        private String signingAlgorithm;
        private CertificateAuthorityCertificateAuthorityConfigurationSubject subject;

        public Builder() {
    	      // Empty
        }

        public Builder(CertificateAuthorityCertificateAuthorityConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.keyAlgorithm = defaults.keyAlgorithm;
    	      this.signingAlgorithm = defaults.signingAlgorithm;
    	      this.subject = defaults.subject;
        }

        public Builder setKeyAlgorithm(String keyAlgorithm) {
            this.keyAlgorithm = Objects.requireNonNull(keyAlgorithm);
            return this;
        }

        public Builder setSigningAlgorithm(String signingAlgorithm) {
            this.signingAlgorithm = Objects.requireNonNull(signingAlgorithm);
            return this;
        }

        public Builder setSubject(CertificateAuthorityCertificateAuthorityConfigurationSubject subject) {
            this.subject = Objects.requireNonNull(subject);
            return this;
        }
        public CertificateAuthorityCertificateAuthorityConfiguration build() {
            return new CertificateAuthorityCertificateAuthorityConfiguration(keyAlgorithm, signingAlgorithm, subject);
        }
    }
}
