// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.dms;

import io.pulumi.aws.Utilities;
import io.pulumi.aws.dms.EndpointArgs;
import io.pulumi.aws.dms.inputs.EndpointState;
import io.pulumi.aws.dms.outputs.EndpointElasticsearchSettings;
import io.pulumi.aws.dms.outputs.EndpointKafkaSettings;
import io.pulumi.aws.dms.outputs.EndpointKinesisSettings;
import io.pulumi.aws.dms.outputs.EndpointMongodbSettings;
import io.pulumi.aws.dms.outputs.EndpointS3Settings;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Export;
import io.pulumi.core.annotations.ResourceType;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;

/**
 * Provides a DMS (Data Migration Service) endpoint resource. DMS endpoints can be created, updated, deleted, and imported.
 * 
 * {{% examples %}}
 * ## Example Usage
 * {{% example %}}
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 * 
 * // Create a new endpoint
 * const test = new aws.dms.Endpoint("test", {
 *     certificateArn: "arn:aws:acm:us-east-1:123456789012:certificate/12345678-1234-1234-1234-123456789012",
 *     databaseName: "test",
 *     endpointId: "test-dms-endpoint-tf",
 *     endpointType: "source",
 *     engineName: "aurora",
 *     extraConnectionAttributes: "",
 *     kmsKeyArn: "arn:aws:kms:us-east-1:123456789012:key/12345678-1234-1234-1234-123456789012",
 *     password: "test",
 *     port: 3306,
 *     serverName: "test",
 *     sslMode: "none",
 *     tags: {
 *         Name: "test",
 *     },
 *     username: "test",
 * });
 * ```
 * ```python
 * import pulumi
 * import pulumi_aws as aws
 * 
 * # Create a new endpoint
 * test = aws.dms.Endpoint("test",
 *     certificate_arn="arn:aws:acm:us-east-1:123456789012:certificate/12345678-1234-1234-1234-123456789012",
 *     database_name="test",
 *     endpoint_id="test-dms-endpoint-tf",
 *     endpoint_type="source",
 *     engine_name="aurora",
 *     extra_connection_attributes="",
 *     kms_key_arn="arn:aws:kms:us-east-1:123456789012:key/12345678-1234-1234-1234-123456789012",
 *     password="test",
 *     port=3306,
 *     server_name="test",
 *     ssl_mode="none",
 *     tags={
 *         "Name": "test",
 *     },
 *     username="test")
 * ```
 * ```csharp
 * using Pulumi;
 * using Aws = Pulumi.Aws;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         // Create a new endpoint
 *         var test = new Aws.Dms.Endpoint("test", new Aws.Dms.EndpointArgs
 *         {
 *             CertificateArn = "arn:aws:acm:us-east-1:123456789012:certificate/12345678-1234-1234-1234-123456789012",
 *             DatabaseName = "test",
 *             EndpointId = "test-dms-endpoint-tf",
 *             EndpointType = "source",
 *             EngineName = "aurora",
 *             ExtraConnectionAttributes = "",
 *             KmsKeyArn = "arn:aws:kms:us-east-1:123456789012:key/12345678-1234-1234-1234-123456789012",
 *             Password = "test",
 *             Port = 3306,
 *             ServerName = "test",
 *             SslMode = "none",
 *             Tags = 
 *             {
 *                 { "Name", "test" },
 *             },
 *             Username = "test",
 *         });
 *     }
 * 
 * }
 * ```
 * ```go
 * package main
 * 
 * import (
 * 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/dms"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		_, err := dms.NewEndpoint(ctx, "test", &dms.EndpointArgs{
 * 			CertificateArn:            pulumi.String("arn:aws:acm:us-east-1:123456789012:certificate/12345678-1234-1234-1234-123456789012"),
 * 			DatabaseName:              pulumi.String("test"),
 * 			EndpointId:                pulumi.String("test-dms-endpoint-tf"),
 * 			EndpointType:              pulumi.String("source"),
 * 			EngineName:                pulumi.String("aurora"),
 * 			ExtraConnectionAttributes: pulumi.String(""),
 * 			KmsKeyArn:                 pulumi.String("arn:aws:kms:us-east-1:123456789012:key/12345678-1234-1234-1234-123456789012"),
 * 			Password:                  pulumi.String("test"),
 * 			Port:                      pulumi.Int(3306),
 * 			ServerName:                pulumi.String("test"),
 * 			SslMode:                   pulumi.String("none"),
 * 			Tags: pulumi.StringMap{
 * 				"Name": pulumi.String("test"),
 * 			},
 * 			Username: pulumi.String("test"),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * ```
 * {{% /example %}}
 * {{% /examples %}}
 * 
 * ## Import
 * 
 * Endpoints can be imported using the `endpoint_id`, e.g.,
 * 
 * ```sh
 *  $ pulumi import aws:dms/endpoint:Endpoint test test-dms-endpoint-tf
 * ```
 * 
 *  
 */
@ResourceType(type="aws:dms/endpoint:Endpoint")
public class Endpoint extends io.pulumi.resources.CustomResource {
    /**
     * The Amazon Resource Name (ARN) for the certificate.
     * 
     */
    @Export(name="certificateArn", type=String.class, parameters={})
    private Output<String> certificateArn;

    /**
     * @return The Amazon Resource Name (ARN) for the certificate.
     * 
     */
    public Output<String> getCertificateArn() {
        return this.certificateArn;
    }
    /**
     * The name of the endpoint database.
     * 
     */
    @Export(name="databaseName", type=String.class, parameters={})
    private Output</* @Nullable */ String> databaseName;

    /**
     * @return The name of the endpoint database.
     * 
     */
    public Output</* @Nullable */ String> getDatabaseName() {
        return this.databaseName;
    }
    /**
     * Configuration block with Elasticsearch settings. Detailed below.
     * 
     */
    @Export(name="elasticsearchSettings", type=EndpointElasticsearchSettings.class, parameters={})
    private Output</* @Nullable */ EndpointElasticsearchSettings> elasticsearchSettings;

    /**
     * @return Configuration block with Elasticsearch settings. Detailed below.
     * 
     */
    public Output</* @Nullable */ EndpointElasticsearchSettings> getElasticsearchSettings() {
        return this.elasticsearchSettings;
    }
    /**
     * The Amazon Resource Name (ARN) for the endpoint.
     * 
     */
    @Export(name="endpointArn", type=String.class, parameters={})
    private Output<String> endpointArn;

    /**
     * @return The Amazon Resource Name (ARN) for the endpoint.
     * 
     */
    public Output<String> getEndpointArn() {
        return this.endpointArn;
    }
    /**
     * The database endpoint identifier.
     * 
     */
    @Export(name="endpointId", type=String.class, parameters={})
    private Output<String> endpointId;

    /**
     * @return The database endpoint identifier.
     * 
     */
    public Output<String> getEndpointId() {
        return this.endpointId;
    }
    /**
     * The type of endpoint. Can be one of `source | target`.
     * 
     */
    @Export(name="endpointType", type=String.class, parameters={})
    private Output<String> endpointType;

    /**
     * @return The type of endpoint. Can be one of `source | target`.
     * 
     */
    public Output<String> getEndpointType() {
        return this.endpointType;
    }
    /**
     * The type of engine for the endpoint. Can be one of `aurora | aurora-postgresql| azuredb | db2 | docdb | dynamodb | elasticsearch | kafka | kinesis | mariadb | mongodb | mysql | oracle | postgres | redshift | s3 | sqlserver | sybase`.
     * 
     */
    @Export(name="engineName", type=String.class, parameters={})
    private Output<String> engineName;

    /**
     * @return The type of engine for the endpoint. Can be one of `aurora | aurora-postgresql| azuredb | db2 | docdb | dynamodb | elasticsearch | kafka | kinesis | mariadb | mongodb | mysql | oracle | postgres | redshift | s3 | sqlserver | sybase`.
     * 
     */
    public Output<String> getEngineName() {
        return this.engineName;
    }
    /**
     * Additional attributes associated with the connection. For available attributes see [Using Extra Connection Attributes with AWS Database Migration Service](https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Source.PostgreSQL.html#CHAP_Source.PostgreSQL.ConnectionAttrib).
     * 
     */
    @Export(name="extraConnectionAttributes", type=String.class, parameters={})
    private Output<String> extraConnectionAttributes;

    /**
     * @return Additional attributes associated with the connection. For available attributes see [Using Extra Connection Attributes with AWS Database Migration Service](https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Source.PostgreSQL.html#CHAP_Source.PostgreSQL.ConnectionAttrib).
     * 
     */
    public Output<String> getExtraConnectionAttributes() {
        return this.extraConnectionAttributes;
    }
    /**
     * Configuration block with Kafka settings. Detailed below.
     * 
     */
    @Export(name="kafkaSettings", type=EndpointKafkaSettings.class, parameters={})
    private Output</* @Nullable */ EndpointKafkaSettings> kafkaSettings;

    /**
     * @return Configuration block with Kafka settings. Detailed below.
     * 
     */
    public Output</* @Nullable */ EndpointKafkaSettings> getKafkaSettings() {
        return this.kafkaSettings;
    }
    /**
     * Configuration block with Kinesis settings. Detailed below.
     * 
     */
    @Export(name="kinesisSettings", type=EndpointKinesisSettings.class, parameters={})
    private Output</* @Nullable */ EndpointKinesisSettings> kinesisSettings;

    /**
     * @return Configuration block with Kinesis settings. Detailed below.
     * 
     */
    public Output</* @Nullable */ EndpointKinesisSettings> getKinesisSettings() {
        return this.kinesisSettings;
    }
    /**
     * The Amazon Resource Name (ARN) for the KMS key that will be used to encrypt the connection parameters. If you do not specify a value for `kms_key_arn`, then AWS DMS will use your default encryption key. AWS KMS creates the default encryption key for your AWS account. Your AWS account has a different default encryption key for each AWS region.
     * 
     */
    @Export(name="kmsKeyArn", type=String.class, parameters={})
    private Output<String> kmsKeyArn;

    /**
     * @return The Amazon Resource Name (ARN) for the KMS key that will be used to encrypt the connection parameters. If you do not specify a value for `kms_key_arn`, then AWS DMS will use your default encryption key. AWS KMS creates the default encryption key for your AWS account. Your AWS account has a different default encryption key for each AWS region.
     * 
     */
    public Output<String> getKmsKeyArn() {
        return this.kmsKeyArn;
    }
    /**
     * Configuration block with MongoDB settings. Detailed below.
     * 
     */
    @Export(name="mongodbSettings", type=EndpointMongodbSettings.class, parameters={})
    private Output</* @Nullable */ EndpointMongodbSettings> mongodbSettings;

    /**
     * @return Configuration block with MongoDB settings. Detailed below.
     * 
     */
    public Output</* @Nullable */ EndpointMongodbSettings> getMongodbSettings() {
        return this.mongodbSettings;
    }
    /**
     * The password to be used to login to the endpoint database.
     * 
     */
    @Export(name="password", type=String.class, parameters={})
    private Output</* @Nullable */ String> password;

    /**
     * @return The password to be used to login to the endpoint database.
     * 
     */
    public Output</* @Nullable */ String> getPassword() {
        return this.password;
    }
    /**
     * The port used by the endpoint database.
     * 
     */
    @Export(name="port", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> port;

    /**
     * @return The port used by the endpoint database.
     * 
     */
    public Output</* @Nullable */ Integer> getPort() {
        return this.port;
    }
    /**
     * Configuration block with S3 settings. Detailed below.
     * 
     */
    @Export(name="s3Settings", type=EndpointS3Settings.class, parameters={})
    private Output</* @Nullable */ EndpointS3Settings> s3Settings;

    /**
     * @return Configuration block with S3 settings. Detailed below.
     * 
     */
    public Output</* @Nullable */ EndpointS3Settings> getS3Settings() {
        return this.s3Settings;
    }
    /**
     * Amazon Resource Name (ARN) of the IAM role that specifies AWS DMS as the trusted entity and has the required permissions to access the value in SecretsManagerSecret.
     * 
     */
    @Export(name="secretsManagerAccessRoleArn", type=String.class, parameters={})
    private Output</* @Nullable */ String> secretsManagerAccessRoleArn;

    /**
     * @return Amazon Resource Name (ARN) of the IAM role that specifies AWS DMS as the trusted entity and has the required permissions to access the value in SecretsManagerSecret.
     * 
     */
    public Output</* @Nullable */ String> getSecretsManagerAccessRoleArn() {
        return this.secretsManagerAccessRoleArn;
    }
    /**
     * The full ARN, partial ARN, or friendly name of the SecretsManagerSecret that contains the endpoint connection details. Supported only for `engine_name` as `oracle` and `postgres`.
     * 
     */
    @Export(name="secretsManagerArn", type=String.class, parameters={})
    private Output</* @Nullable */ String> secretsManagerArn;

    /**
     * @return The full ARN, partial ARN, or friendly name of the SecretsManagerSecret that contains the endpoint connection details. Supported only for `engine_name` as `oracle` and `postgres`.
     * 
     */
    public Output</* @Nullable */ String> getSecretsManagerArn() {
        return this.secretsManagerArn;
    }
    /**
     * The host name of the server.
     * 
     */
    @Export(name="serverName", type=String.class, parameters={})
    private Output</* @Nullable */ String> serverName;

    /**
     * @return The host name of the server.
     * 
     */
    public Output</* @Nullable */ String> getServerName() {
        return this.serverName;
    }
    /**
     * The Amazon Resource Name (ARN) used by the service access IAM role for dynamodb endpoints.
     * 
     */
    @Export(name="serviceAccessRole", type=String.class, parameters={})
    private Output</* @Nullable */ String> serviceAccessRole;

    /**
     * @return The Amazon Resource Name (ARN) used by the service access IAM role for dynamodb endpoints.
     * 
     */
    public Output</* @Nullable */ String> getServiceAccessRole() {
        return this.serviceAccessRole;
    }
    /**
     * The SSL mode to use for the connection. Can be one of `none | require | verify-ca | verify-full`
     * 
     */
    @Export(name="sslMode", type=String.class, parameters={})
    private Output<String> sslMode;

    /**
     * @return The SSL mode to use for the connection. Can be one of `none | require | verify-ca | verify-full`
     * 
     */
    public Output<String> getSslMode() {
        return this.sslMode;
    }
    /**
     * A map of tags to assign to the resource. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Export(name="tags", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return A map of tags to assign to the resource. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Output</* @Nullable */ Map<String,String>> getTags() {
        return this.tags;
    }
    /**
     * A map of tags assigned to the resource, including those inherited from the provider .
     * 
     */
    @Export(name="tagsAll", type=Map.class, parameters={String.class, String.class})
    private Output<Map<String,String>> tagsAll;

    /**
     * @return A map of tags assigned to the resource, including those inherited from the provider .
     * 
     */
    public Output<Map<String,String>> getTagsAll() {
        return this.tagsAll;
    }
    /**
     * The user name to be used to login to the endpoint database.
     * 
     */
    @Export(name="username", type=String.class, parameters={})
    private Output</* @Nullable */ String> username;

    /**
     * @return The user name to be used to login to the endpoint database.
     * 
     */
    public Output</* @Nullable */ String> getUsername() {
        return this.username;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Endpoint(String name) {
        this(name, EndpointArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Endpoint(String name, EndpointArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Endpoint(String name, EndpointArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:dms/endpoint:Endpoint", name, args == null ? EndpointArgs.Empty : args, makeResourceOptions(options, Output.empty()));
    }

    private Endpoint(String name, Output<String> id, @Nullable EndpointState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:dms/endpoint:Endpoint", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Endpoint get(String name, Output<String> id, @Nullable EndpointState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new Endpoint(name, id, state, options);
    }
}
