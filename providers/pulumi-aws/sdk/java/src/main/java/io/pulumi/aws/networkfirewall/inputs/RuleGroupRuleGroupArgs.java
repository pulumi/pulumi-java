// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.networkfirewall.inputs;

import io.pulumi.aws.networkfirewall.inputs.RuleGroupRuleGroupRuleVariablesArgs;
import io.pulumi.aws.networkfirewall.inputs.RuleGroupRuleGroupRulesSourceArgs;
import io.pulumi.aws.networkfirewall.inputs.RuleGroupRuleGroupStatefulRuleOptionsArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.util.Objects;
import javax.annotation.Nullable;


public final class RuleGroupRuleGroupArgs extends io.pulumi.resources.ResourceArgs {

    public static final RuleGroupRuleGroupArgs Empty = new RuleGroupRuleGroupArgs();

    /**
     * A configuration block that defines additional settings available to use in the rules defined in the rule group. Can only be specified for **stateful** rule groups. See Rule Variables below for details.
     * 
     */
    @Import(name="ruleVariables")
      private final @Nullable Output<RuleGroupRuleGroupRuleVariablesArgs> ruleVariables;

    public Output<RuleGroupRuleGroupRuleVariablesArgs> getRuleVariables() {
        return this.ruleVariables == null ? Output.empty() : this.ruleVariables;
    }

    /**
     * A configuration block that defines the stateful or stateless rules for the rule group. See Rules Source below for details.
     * 
     */
    @Import(name="rulesSource", required=true)
      private final Output<RuleGroupRuleGroupRulesSourceArgs> rulesSource;

    public Output<RuleGroupRuleGroupRulesSourceArgs> getRulesSource() {
        return this.rulesSource;
    }

    /**
     * A configuration block that defines stateful rule options for the rule group. See Stateful Rule Options below for details.
     * 
     */
    @Import(name="statefulRuleOptions")
      private final @Nullable Output<RuleGroupRuleGroupStatefulRuleOptionsArgs> statefulRuleOptions;

    public Output<RuleGroupRuleGroupStatefulRuleOptionsArgs> getStatefulRuleOptions() {
        return this.statefulRuleOptions == null ? Output.empty() : this.statefulRuleOptions;
    }

    public RuleGroupRuleGroupArgs(
        @Nullable Output<RuleGroupRuleGroupRuleVariablesArgs> ruleVariables,
        Output<RuleGroupRuleGroupRulesSourceArgs> rulesSource,
        @Nullable Output<RuleGroupRuleGroupStatefulRuleOptionsArgs> statefulRuleOptions) {
        this.ruleVariables = ruleVariables;
        this.rulesSource = Objects.requireNonNull(rulesSource, "expected parameter 'rulesSource' to be non-null");
        this.statefulRuleOptions = statefulRuleOptions;
    }

    private RuleGroupRuleGroupArgs() {
        this.ruleVariables = Output.empty();
        this.rulesSource = Output.empty();
        this.statefulRuleOptions = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RuleGroupRuleGroupArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<RuleGroupRuleGroupRuleVariablesArgs> ruleVariables;
        private Output<RuleGroupRuleGroupRulesSourceArgs> rulesSource;
        private @Nullable Output<RuleGroupRuleGroupStatefulRuleOptionsArgs> statefulRuleOptions;

        public Builder() {
    	      // Empty
        }

        public Builder(RuleGroupRuleGroupArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.ruleVariables = defaults.ruleVariables;
    	      this.rulesSource = defaults.rulesSource;
    	      this.statefulRuleOptions = defaults.statefulRuleOptions;
        }

        public Builder ruleVariables(@Nullable Output<RuleGroupRuleGroupRuleVariablesArgs> ruleVariables) {
            this.ruleVariables = ruleVariables;
            return this;
        }

        public Builder ruleVariables(@Nullable RuleGroupRuleGroupRuleVariablesArgs ruleVariables) {
            this.ruleVariables = Output.ofNullable(ruleVariables);
            return this;
        }

        public Builder rulesSource(Output<RuleGroupRuleGroupRulesSourceArgs> rulesSource) {
            this.rulesSource = Objects.requireNonNull(rulesSource);
            return this;
        }

        public Builder rulesSource(RuleGroupRuleGroupRulesSourceArgs rulesSource) {
            this.rulesSource = Output.of(Objects.requireNonNull(rulesSource));
            return this;
        }

        public Builder statefulRuleOptions(@Nullable Output<RuleGroupRuleGroupStatefulRuleOptionsArgs> statefulRuleOptions) {
            this.statefulRuleOptions = statefulRuleOptions;
            return this;
        }

        public Builder statefulRuleOptions(@Nullable RuleGroupRuleGroupStatefulRuleOptionsArgs statefulRuleOptions) {
            this.statefulRuleOptions = Output.ofNullable(statefulRuleOptions);
            return this;
        }
        public RuleGroupRuleGroupArgs build() {
            return new RuleGroupRuleGroupArgs(ruleVariables, rulesSource, statefulRuleOptions);
        }
    }
}
