// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.appconfig.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class DeploymentState extends io.pulumi.resources.ResourceArgs {

    public static final DeploymentState Empty = new DeploymentState();

    /**
     * The application ID. Must be between 4 and 7 characters in length.
     * 
     */
    @InputImport(name="applicationId")
      private final @Nullable Input<String> applicationId;

    public Input<String> getApplicationId() {
        return this.applicationId == null ? Input.empty() : this.applicationId;
    }

    /**
     * The Amazon Resource Name (ARN) of the AppConfig Deployment.
     * 
     */
    @InputImport(name="arn")
      private final @Nullable Input<String> arn;

    public Input<String> getArn() {
        return this.arn == null ? Input.empty() : this.arn;
    }

    /**
     * The configuration profile ID. Must be between 4 and 7 characters in length.
     * 
     */
    @InputImport(name="configurationProfileId")
      private final @Nullable Input<String> configurationProfileId;

    public Input<String> getConfigurationProfileId() {
        return this.configurationProfileId == null ? Input.empty() : this.configurationProfileId;
    }

    /**
     * The configuration version to deploy. Can be at most 1024 characters.
     * 
     */
    @InputImport(name="configurationVersion")
      private final @Nullable Input<String> configurationVersion;

    public Input<String> getConfigurationVersion() {
        return this.configurationVersion == null ? Input.empty() : this.configurationVersion;
    }

    /**
     * The deployment number.
     * 
     */
    @InputImport(name="deploymentNumber")
      private final @Nullable Input<Integer> deploymentNumber;

    public Input<Integer> getDeploymentNumber() {
        return this.deploymentNumber == null ? Input.empty() : this.deploymentNumber;
    }

    /**
     * The deployment strategy ID or name of a predefined deployment strategy. See [Predefined Deployment Strategies](https://docs.aws.amazon.com/appconfig/latest/userguide/appconfig-creating-deployment-strategy.html#appconfig-creating-deployment-strategy-predefined) for more details.
     * 
     */
    @InputImport(name="deploymentStrategyId")
      private final @Nullable Input<String> deploymentStrategyId;

    public Input<String> getDeploymentStrategyId() {
        return this.deploymentStrategyId == null ? Input.empty() : this.deploymentStrategyId;
    }

    /**
     * The description of the deployment. Can be at most 1024 characters.
     * 
     */
    @InputImport(name="description")
      private final @Nullable Input<String> description;

    public Input<String> getDescription() {
        return this.description == null ? Input.empty() : this.description;
    }

    /**
     * The environment ID. Must be between 4 and 7 characters in length.
     * 
     */
    @InputImport(name="environmentId")
      private final @Nullable Input<String> environmentId;

    public Input<String> getEnvironmentId() {
        return this.environmentId == null ? Input.empty() : this.environmentId;
    }

    /**
     * The state of the deployment.
     * 
     */
    @InputImport(name="state")
      private final @Nullable Input<String> state;

    public Input<String> getState() {
        return this.state == null ? Input.empty() : this.state;
    }

    /**
     * A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @InputImport(name="tags")
      private final @Nullable Input<Map<String,String>> tags;

    public Input<Map<String,String>> getTags() {
        return this.tags == null ? Input.empty() : this.tags;
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     */
    @InputImport(name="tagsAll")
      private final @Nullable Input<Map<String,String>> tagsAll;

    public Input<Map<String,String>> getTagsAll() {
        return this.tagsAll == null ? Input.empty() : this.tagsAll;
    }

    public DeploymentState(
        @Nullable Input<String> applicationId,
        @Nullable Input<String> arn,
        @Nullable Input<String> configurationProfileId,
        @Nullable Input<String> configurationVersion,
        @Nullable Input<Integer> deploymentNumber,
        @Nullable Input<String> deploymentStrategyId,
        @Nullable Input<String> description,
        @Nullable Input<String> environmentId,
        @Nullable Input<String> state,
        @Nullable Input<Map<String,String>> tags,
        @Nullable Input<Map<String,String>> tagsAll) {
        this.applicationId = applicationId;
        this.arn = arn;
        this.configurationProfileId = configurationProfileId;
        this.configurationVersion = configurationVersion;
        this.deploymentNumber = deploymentNumber;
        this.deploymentStrategyId = deploymentStrategyId;
        this.description = description;
        this.environmentId = environmentId;
        this.state = state;
        this.tags = tags;
        this.tagsAll = tagsAll;
    }

    private DeploymentState() {
        this.applicationId = Input.empty();
        this.arn = Input.empty();
        this.configurationProfileId = Input.empty();
        this.configurationVersion = Input.empty();
        this.deploymentNumber = Input.empty();
        this.deploymentStrategyId = Input.empty();
        this.description = Input.empty();
        this.environmentId = Input.empty();
        this.state = Input.empty();
        this.tags = Input.empty();
        this.tagsAll = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DeploymentState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> applicationId;
        private @Nullable Input<String> arn;
        private @Nullable Input<String> configurationProfileId;
        private @Nullable Input<String> configurationVersion;
        private @Nullable Input<Integer> deploymentNumber;
        private @Nullable Input<String> deploymentStrategyId;
        private @Nullable Input<String> description;
        private @Nullable Input<String> environmentId;
        private @Nullable Input<String> state;
        private @Nullable Input<Map<String,String>> tags;
        private @Nullable Input<Map<String,String>> tagsAll;

        public Builder() {
    	      // Empty
        }

        public Builder(DeploymentState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.applicationId = defaults.applicationId;
    	      this.arn = defaults.arn;
    	      this.configurationProfileId = defaults.configurationProfileId;
    	      this.configurationVersion = defaults.configurationVersion;
    	      this.deploymentNumber = defaults.deploymentNumber;
    	      this.deploymentStrategyId = defaults.deploymentStrategyId;
    	      this.description = defaults.description;
    	      this.environmentId = defaults.environmentId;
    	      this.state = defaults.state;
    	      this.tags = defaults.tags;
    	      this.tagsAll = defaults.tagsAll;
        }

        public Builder setApplicationId(@Nullable Input<String> applicationId) {
            this.applicationId = applicationId;
            return this;
        }

        public Builder setApplicationId(@Nullable String applicationId) {
            this.applicationId = Input.ofNullable(applicationId);
            return this;
        }

        public Builder setArn(@Nullable Input<String> arn) {
            this.arn = arn;
            return this;
        }

        public Builder setArn(@Nullable String arn) {
            this.arn = Input.ofNullable(arn);
            return this;
        }

        public Builder setConfigurationProfileId(@Nullable Input<String> configurationProfileId) {
            this.configurationProfileId = configurationProfileId;
            return this;
        }

        public Builder setConfigurationProfileId(@Nullable String configurationProfileId) {
            this.configurationProfileId = Input.ofNullable(configurationProfileId);
            return this;
        }

        public Builder setConfigurationVersion(@Nullable Input<String> configurationVersion) {
            this.configurationVersion = configurationVersion;
            return this;
        }

        public Builder setConfigurationVersion(@Nullable String configurationVersion) {
            this.configurationVersion = Input.ofNullable(configurationVersion);
            return this;
        }

        public Builder setDeploymentNumber(@Nullable Input<Integer> deploymentNumber) {
            this.deploymentNumber = deploymentNumber;
            return this;
        }

        public Builder setDeploymentNumber(@Nullable Integer deploymentNumber) {
            this.deploymentNumber = Input.ofNullable(deploymentNumber);
            return this;
        }

        public Builder setDeploymentStrategyId(@Nullable Input<String> deploymentStrategyId) {
            this.deploymentStrategyId = deploymentStrategyId;
            return this;
        }

        public Builder setDeploymentStrategyId(@Nullable String deploymentStrategyId) {
            this.deploymentStrategyId = Input.ofNullable(deploymentStrategyId);
            return this;
        }

        public Builder setDescription(@Nullable Input<String> description) {
            this.description = description;
            return this;
        }

        public Builder setDescription(@Nullable String description) {
            this.description = Input.ofNullable(description);
            return this;
        }

        public Builder setEnvironmentId(@Nullable Input<String> environmentId) {
            this.environmentId = environmentId;
            return this;
        }

        public Builder setEnvironmentId(@Nullable String environmentId) {
            this.environmentId = Input.ofNullable(environmentId);
            return this;
        }

        public Builder setState(@Nullable Input<String> state) {
            this.state = state;
            return this;
        }

        public Builder setState(@Nullable String state) {
            this.state = Input.ofNullable(state);
            return this;
        }

        public Builder setTags(@Nullable Input<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }

        public Builder setTags(@Nullable Map<String,String> tags) {
            this.tags = Input.ofNullable(tags);
            return this;
        }

        public Builder setTagsAll(@Nullable Input<Map<String,String>> tagsAll) {
            this.tagsAll = tagsAll;
            return this;
        }

        public Builder setTagsAll(@Nullable Map<String,String> tagsAll) {
            this.tagsAll = Input.ofNullable(tagsAll);
            return this;
        }
        public DeploymentState build() {
            return new DeploymentState(applicationId, arn, configurationProfileId, configurationVersion, deploymentNumber, deploymentStrategyId, description, environmentId, state, tags, tagsAll);
        }
    }
}
