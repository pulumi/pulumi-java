// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.cloudwatch.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class LogDestinationPolicyState extends io.pulumi.resources.ResourceArgs {

    public static final LogDestinationPolicyState Empty = new LogDestinationPolicyState();

    /**
     * The policy document. This is a JSON formatted string.
     * 
     */
    @InputImport(name="accessPolicy")
    private final @Nullable Input<String> accessPolicy;

    public Input<String> getAccessPolicy() {
        return this.accessPolicy == null ? Input.empty() : this.accessPolicy;
    }

    /**
     * A name for the subscription filter
     * 
     */
    @InputImport(name="destinationName")
    private final @Nullable Input<String> destinationName;

    public Input<String> getDestinationName() {
        return this.destinationName == null ? Input.empty() : this.destinationName;
    }

    /**
     * Specify true if you are updating an existing destination policy to grant permission to an organization ID instead of granting permission to individual AWS accounts.
     * 
     */
    @InputImport(name="forceUpdate")
    private final @Nullable Input<Boolean> forceUpdate;

    public Input<Boolean> getForceUpdate() {
        return this.forceUpdate == null ? Input.empty() : this.forceUpdate;
    }

    public LogDestinationPolicyState(
        @Nullable Input<String> accessPolicy,
        @Nullable Input<String> destinationName,
        @Nullable Input<Boolean> forceUpdate) {
        this.accessPolicy = accessPolicy;
        this.destinationName = destinationName;
        this.forceUpdate = forceUpdate;
    }

    private LogDestinationPolicyState() {
        this.accessPolicy = Input.empty();
        this.destinationName = Input.empty();
        this.forceUpdate = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(LogDestinationPolicyState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> accessPolicy;
        private @Nullable Input<String> destinationName;
        private @Nullable Input<Boolean> forceUpdate;

        public Builder() {
    	      // Empty
        }

        public Builder(LogDestinationPolicyState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessPolicy = defaults.accessPolicy;
    	      this.destinationName = defaults.destinationName;
    	      this.forceUpdate = defaults.forceUpdate;
        }

        public Builder setAccessPolicy(@Nullable Input<String> accessPolicy) {
            this.accessPolicy = accessPolicy;
            return this;
        }

        public Builder setAccessPolicy(@Nullable String accessPolicy) {
            this.accessPolicy = Input.ofNullable(accessPolicy);
            return this;
        }

        public Builder setDestinationName(@Nullable Input<String> destinationName) {
            this.destinationName = destinationName;
            return this;
        }

        public Builder setDestinationName(@Nullable String destinationName) {
            this.destinationName = Input.ofNullable(destinationName);
            return this;
        }

        public Builder setForceUpdate(@Nullable Input<Boolean> forceUpdate) {
            this.forceUpdate = forceUpdate;
            return this;
        }

        public Builder setForceUpdate(@Nullable Boolean forceUpdate) {
            this.forceUpdate = Input.ofNullable(forceUpdate);
            return this;
        }
        public LogDestinationPolicyState build() {
            return new LogDestinationPolicyState(accessPolicy, destinationName, forceUpdate);
        }
    }
}
