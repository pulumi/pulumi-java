// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.rds;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;


public final class RoleAssociationArgs extends io.pulumi.resources.ResourceArgs {

    public static final RoleAssociationArgs Empty = new RoleAssociationArgs();

    /**
     * DB Instance Identifier to associate with the IAM Role.
     * 
     */
    @Import(name="dbInstanceIdentifier", required=true)
      private final Output<String> dbInstanceIdentifier;

    public Output<String> dbInstanceIdentifier() {
        return this.dbInstanceIdentifier;
    }

    /**
     * Name of the feature for association. This can be found in the AWS documentation relevant to the integration or a full list is available in the `SupportedFeatureNames` list returned by [AWS CLI rds describe-db-engine-versions](https://docs.aws.amazon.com/cli/latest/reference/rds/describe-db-engine-versions.html).
     * 
     */
    @Import(name="featureName", required=true)
      private final Output<String> featureName;

    public Output<String> featureName() {
        return this.featureName;
    }

    /**
     * Amazon Resource Name (ARN) of the IAM Role to associate with the DB Instance.
     * 
     */
    @Import(name="roleArn", required=true)
      private final Output<String> roleArn;

    public Output<String> roleArn() {
        return this.roleArn;
    }

    public RoleAssociationArgs(
        Output<String> dbInstanceIdentifier,
        Output<String> featureName,
        Output<String> roleArn) {
        this.dbInstanceIdentifier = Objects.requireNonNull(dbInstanceIdentifier, "expected parameter 'dbInstanceIdentifier' to be non-null");
        this.featureName = Objects.requireNonNull(featureName, "expected parameter 'featureName' to be non-null");
        this.roleArn = Objects.requireNonNull(roleArn, "expected parameter 'roleArn' to be non-null");
    }

    private RoleAssociationArgs() {
        this.dbInstanceIdentifier = Codegen.empty();
        this.featureName = Codegen.empty();
        this.roleArn = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RoleAssociationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> dbInstanceIdentifier;
        private Output<String> featureName;
        private Output<String> roleArn;

        public Builder() {
    	      // Empty
        }

        public Builder(RoleAssociationArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dbInstanceIdentifier = defaults.dbInstanceIdentifier;
    	      this.featureName = defaults.featureName;
    	      this.roleArn = defaults.roleArn;
        }

        public Builder dbInstanceIdentifier(Output<String> dbInstanceIdentifier) {
            this.dbInstanceIdentifier = Objects.requireNonNull(dbInstanceIdentifier);
            return this;
        }
        public Builder dbInstanceIdentifier(String dbInstanceIdentifier) {
            this.dbInstanceIdentifier = Output.of(Objects.requireNonNull(dbInstanceIdentifier));
            return this;
        }
        public Builder featureName(Output<String> featureName) {
            this.featureName = Objects.requireNonNull(featureName);
            return this;
        }
        public Builder featureName(String featureName) {
            this.featureName = Output.of(Objects.requireNonNull(featureName));
            return this;
        }
        public Builder roleArn(Output<String> roleArn) {
            this.roleArn = Objects.requireNonNull(roleArn);
            return this;
        }
        public Builder roleArn(String roleArn) {
            this.roleArn = Output.of(Objects.requireNonNull(roleArn));
            return this;
        }        public RoleAssociationArgs build() {
            return new RoleAssociationArgs(dbInstanceIdentifier, featureName, roleArn);
        }
    }
}
