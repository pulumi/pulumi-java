// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.ebs;

import io.pulumi.aws.Utilities;
import io.pulumi.aws.ebs.VolumeArgs;
import io.pulumi.aws.ebs.inputs.VolumeState;
import io.pulumi.core.Input;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.OutputExport;
import io.pulumi.core.annotations.ResourceType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;

/**
 * Manages a single EBS volume.
 * 
 * ## Example Usage
 * 
 * ## Import
 * 
 * EBS Volumes can be imported using the `id`, e.g.,
 * 
 * ```sh
 *  $ pulumi import aws:ebs/volume:Volume id vol-049df61146c4d7901
 * ```
 * 
 */
@ResourceType(type="aws:ebs/volume:Volume")
public class Volume extends io.pulumi.resources.CustomResource {
    /**
     * The volume ARN (e.g., arn:aws:ec2:us-east-1:0123456789012:volume/vol-59fcb34e).
     * 
     */
    @OutputExport(name="arn", type=String.class, parameters={})
    private Output<String> arn;

    /**
     * @return The volume ARN (e.g., arn:aws:ec2:us-east-1:0123456789012:volume/vol-59fcb34e).
     * 
     */
    public Output<String> getArn() {
        return this.arn;
    }
    /**
     * The AZ where the EBS volume will exist.
     * 
     */
    @OutputExport(name="availabilityZone", type=String.class, parameters={})
    private Output<String> availabilityZone;

    /**
     * @return The AZ where the EBS volume will exist.
     * 
     */
    public Output<String> getAvailabilityZone() {
        return this.availabilityZone;
    }
    /**
     * If true, the disk will be encrypted.
     * 
     */
    @OutputExport(name="encrypted", type=Boolean.class, parameters={})
    private Output<Boolean> encrypted;

    /**
     * @return If true, the disk will be encrypted.
     * 
     */
    public Output<Boolean> getEncrypted() {
        return this.encrypted;
    }
    /**
     * The amount of IOPS to provision for the disk. Only valid for `type` of `io1`, `io2` or `gp3`.
     * 
     */
    @OutputExport(name="iops", type=Integer.class, parameters={})
    private Output<Integer> iops;

    /**
     * @return The amount of IOPS to provision for the disk. Only valid for `type` of `io1`, `io2` or `gp3`.
     * 
     */
    public Output<Integer> getIops() {
        return this.iops;
    }
    @OutputExport(name="kmsKeyId", type=String.class, parameters={})
    private Output<String> kmsKeyId;

    public Output<String> getKmsKeyId() {
        return this.kmsKeyId;
    }
    /**
     * Specifies whether to enable Amazon EBS Multi-Attach. Multi-Attach is supported exclusively on `io1` volumes.
     * 
     */
    @OutputExport(name="multiAttachEnabled", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> multiAttachEnabled;

    /**
     * @return Specifies whether to enable Amazon EBS Multi-Attach. Multi-Attach is supported exclusively on `io1` volumes.
     * 
     */
    public Output</* @Nullable */ Boolean> getMultiAttachEnabled() {
        return this.multiAttachEnabled;
    }
    /**
     * The Amazon Resource Name (ARN) of the Outpost.
     * 
     */
    @OutputExport(name="outpostArn", type=String.class, parameters={})
    private Output</* @Nullable */ String> outpostArn;

    /**
     * @return The Amazon Resource Name (ARN) of the Outpost.
     * 
     */
    public Output</* @Nullable */ String> getOutpostArn() {
        return this.outpostArn;
    }
    /**
     * The size of the drive in GiBs.
     * 
     */
    @OutputExport(name="size", type=Integer.class, parameters={})
    private Output<Integer> size;

    /**
     * @return The size of the drive in GiBs.
     * 
     */
    public Output<Integer> getSize() {
        return this.size;
    }
    /**
     * A snapshot to base the EBS volume off of.
     * 
     */
    @OutputExport(name="snapshotId", type=String.class, parameters={})
    private Output<String> snapshotId;

    /**
     * @return A snapshot to base the EBS volume off of.
     * 
     */
    public Output<String> getSnapshotId() {
        return this.snapshotId;
    }
    /**
     * A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @OutputExport(name="tags", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Output</* @Nullable */ Map<String,String>> getTags() {
        return this.tags;
    }
    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     */
    @OutputExport(name="tagsAll", type=Map.class, parameters={String.class, String.class})
    private Output<Map<String,String>> tagsAll;

    /**
     * @return A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     */
    public Output<Map<String,String>> getTagsAll() {
        return this.tagsAll;
    }
    /**
     * The throughput that the volume supports, in MiB/s. Only valid for `type` of `gp3`.
     * 
     */
    @OutputExport(name="throughput", type=Integer.class, parameters={})
    private Output<Integer> throughput;

    /**
     * @return The throughput that the volume supports, in MiB/s. Only valid for `type` of `gp3`.
     * 
     */
    public Output<Integer> getThroughput() {
        return this.throughput;
    }
    /**
     * The type of EBS volume. Can be `standard`, `gp2`, `gp3`, `io1`, `io2`, `sc1` or `st1` (Default: `gp2`).
     * 
     */
    @OutputExport(name="type", type=String.class, parameters={})
    private Output<String> type;

    /**
     * @return The type of EBS volume. Can be `standard`, `gp2`, `gp3`, `io1`, `io2`, `sc1` or `st1` (Default: `gp2`).
     * 
     */
    public Output<String> getType() {
        return this.type;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Volume(String name) {
        this(name, VolumeArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Volume(String name, VolumeArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Volume(String name, VolumeArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:ebs/volume:Volume", name, args == null ? VolumeArgs.Empty : args, makeResourceOptions(options, Input.empty()));
    }

    private Volume(String name, Input<String> id, @Nullable VolumeState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:ebs/volume:Volume", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Input<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .setVersion(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Volume get(String name, Input<String> id, @Nullable VolumeState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new Volume(name, id, state, options);
    }
}
