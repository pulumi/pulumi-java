// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.s3;

import io.pulumi.aws.Utilities;
import io.pulumi.aws.s3.BucketIntelligentTieringConfigurationArgs;
import io.pulumi.aws.s3.inputs.BucketIntelligentTieringConfigurationState;
import io.pulumi.aws.s3.outputs.BucketIntelligentTieringConfigurationFilter;
import io.pulumi.aws.s3.outputs.BucketIntelligentTieringConfigurationTiering;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Export;
import io.pulumi.core.annotations.ResourceType;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * Provides an [S3 Intelligent-Tiering](https://docs.aws.amazon.com/AmazonS3/latest/userguide/intelligent-tiering.html) configuration resource.
 * 
 * {{% examples %}}
 * ## Example Usage
 * {{% example %}}
 * ### Add intelligent tiering configuration for entire S3 bucket
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 * 
 * const example = new aws.s3.Bucket("example", {});
 * const example_entire_bucket = new aws.s3.BucketIntelligentTieringConfiguration("example-entire-bucket", {
 *     bucket: example.bucket,
 *     tierings: [
 *         {
 *             accessTier: "DEEP_ARCHIVE_ACCESS",
 *             days: 180,
 *         },
 *         {
 *             accessTier: "ARCHIVE_ACCESS",
 *             days: 125,
 *         },
 *     ],
 * });
 * ```
 * ```python
 * import pulumi
 * import pulumi_aws as aws
 * 
 * example = aws.s3.Bucket("example")
 * example_entire_bucket = aws.s3.BucketIntelligentTieringConfiguration("example-entire-bucket",
 *     bucket=example.bucket,
 *     tierings=[
 *         aws.s3.BucketIntelligentTieringConfigurationTieringArgs(
 *             access_tier="DEEP_ARCHIVE_ACCESS",
 *             days=180,
 *         ),
 *         aws.s3.BucketIntelligentTieringConfigurationTieringArgs(
 *             access_tier="ARCHIVE_ACCESS",
 *             days=125,
 *         ),
 *     ])
 * ```
 * ```csharp
 * using Pulumi;
 * using Aws = Pulumi.Aws;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var example = new Aws.S3.Bucket("example", new Aws.S3.BucketArgs
 *         {
 *         });
 *         var example_entire_bucket = new Aws.S3.BucketIntelligentTieringConfiguration("example-entire-bucket", new Aws.S3.BucketIntelligentTieringConfigurationArgs
 *         {
 *             Bucket = example.BucketName,
 *             Tierings = 
 *             {
 *                 new Aws.S3.Inputs.BucketIntelligentTieringConfigurationTieringArgs
 *                 {
 *                     AccessTier = "DEEP_ARCHIVE_ACCESS",
 *                     Days = 180,
 *                 },
 *                 new Aws.S3.Inputs.BucketIntelligentTieringConfigurationTieringArgs
 *                 {
 *                     AccessTier = "ARCHIVE_ACCESS",
 *                     Days = 125,
 *                 },
 *             },
 *         });
 *     }
 * 
 * }
 * ```
 * ```go
 * package main
 * 
 * import (
 * 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/s3"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		example, err := s3.NewBucket(ctx, "example", nil)
 * 		if err != nil {
 * 			return err
 * 		}
 * 		_, err = s3.NewBucketIntelligentTieringConfiguration(ctx, "example-entire-bucket", &s3.BucketIntelligentTieringConfigurationArgs{
 * 			Bucket: example.Bucket,
 * 			Tierings: s3.BucketIntelligentTieringConfigurationTieringArray{
 * 				&s3.BucketIntelligentTieringConfigurationTieringArgs{
 * 					AccessTier: pulumi.String("DEEP_ARCHIVE_ACCESS"),
 * 					Days:       pulumi.Int(180),
 * 				},
 * 				&s3.BucketIntelligentTieringConfigurationTieringArgs{
 * 					AccessTier: pulumi.String("ARCHIVE_ACCESS"),
 * 					Days:       pulumi.Int(125),
 * 				},
 * 			},
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * ```
 * {{% /example %}}
 * {{% example %}}
 * ### Add intelligent tiering configuration with S3 bucket object filter
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 * 
 * const example = new aws.s3.Bucket("example", {});
 * const example_filtered = new aws.s3.BucketIntelligentTieringConfiguration("example-filtered", {
 *     bucket: example.bucket,
 *     status: "Disabled",
 *     filter: {
 *         prefix: "documents/",
 *         tags: {
 *             priority: "high",
 *             "class": "blue",
 *         },
 *     },
 *     tierings: [{
 *         accessTier: "ARCHIVE_ACCESS",
 *         days: 125,
 *     }],
 * });
 * ```
 * ```python
 * import pulumi
 * import pulumi_aws as aws
 * 
 * example = aws.s3.Bucket("example")
 * example_filtered = aws.s3.BucketIntelligentTieringConfiguration("example-filtered",
 *     bucket=example.bucket,
 *     status="Disabled",
 *     filter=aws.s3.BucketIntelligentTieringConfigurationFilterArgs(
 *         prefix="documents/",
 *         tags={
 *             "priority": "high",
 *             "class": "blue",
 *         },
 *     ),
 *     tierings=[aws.s3.BucketIntelligentTieringConfigurationTieringArgs(
 *         access_tier="ARCHIVE_ACCESS",
 *         days=125,
 *     )])
 * ```
 * ```csharp
 * using Pulumi;
 * using Aws = Pulumi.Aws;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var example = new Aws.S3.Bucket("example", new Aws.S3.BucketArgs
 *         {
 *         });
 *         var example_filtered = new Aws.S3.BucketIntelligentTieringConfiguration("example-filtered", new Aws.S3.BucketIntelligentTieringConfigurationArgs
 *         {
 *             Bucket = example.BucketName,
 *             Status = "Disabled",
 *             Filter = new Aws.S3.Inputs.BucketIntelligentTieringConfigurationFilterArgs
 *             {
 *                 Prefix = "documents/",
 *                 Tags = 
 *                 {
 *                     { "priority", "high" },
 *                     { "class", "blue" },
 *                 },
 *             },
 *             Tierings = 
 *             {
 *                 new Aws.S3.Inputs.BucketIntelligentTieringConfigurationTieringArgs
 *                 {
 *                     AccessTier = "ARCHIVE_ACCESS",
 *                     Days = 125,
 *                 },
 *             },
 *         });
 *     }
 * 
 * }
 * ```
 * ```go
 * package main
 * 
 * import (
 * 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/s3"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		example, err := s3.NewBucket(ctx, "example", nil)
 * 		if err != nil {
 * 			return err
 * 		}
 * 		_, err = s3.NewBucketIntelligentTieringConfiguration(ctx, "example-filtered", &s3.BucketIntelligentTieringConfigurationArgs{
 * 			Bucket: example.Bucket,
 * 			Status: pulumi.String("Disabled"),
 * 			Filter: &s3.BucketIntelligentTieringConfigurationFilterArgs{
 * 				Prefix: pulumi.String("documents/"),
 * 				Tags: pulumi.StringMap{
 * 					"priority": pulumi.String("high"),
 * 					"class":    pulumi.String("blue"),
 * 				},
 * 			},
 * 			Tierings: s3.BucketIntelligentTieringConfigurationTieringArray{
 * 				&s3.BucketIntelligentTieringConfigurationTieringArgs{
 * 					AccessTier: pulumi.String("ARCHIVE_ACCESS"),
 * 					Days:       pulumi.Int(125),
 * 				},
 * 			},
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * ```
 * {{% /example %}}
 * {{% /examples %}}
 * 
 * ## Import
 * 
 * S3 bucket intelligent tiering configurations can be imported using `bucket:name`, e.g.
 * 
 * ```sh
 *  $ pulumi import aws:s3/bucketIntelligentTieringConfiguration:BucketIntelligentTieringConfiguration my-bucket-entire-bucket my-bucket:EntireBucket
 * ```
 * 
 *  
 */
@ResourceType(type="aws:s3/bucketIntelligentTieringConfiguration:BucketIntelligentTieringConfiguration")
public class BucketIntelligentTieringConfiguration extends io.pulumi.resources.CustomResource {
    /**
     * The name of the bucket this intelligent tiering configuration is associated with.
     * 
     */
    @Export(name="bucket", type=String.class, parameters={})
    private Output<String> bucket;

    /**
     * @return The name of the bucket this intelligent tiering configuration is associated with.
     * 
     */
    public Output<String> getBucket() {
        return this.bucket;
    }
    /**
     * A bucket filter. The configuration only includes objects that meet the filter's criteria (documented below).
     * 
     */
    @Export(name="filter", type=BucketIntelligentTieringConfigurationFilter.class, parameters={})
    private Output</* @Nullable */ BucketIntelligentTieringConfigurationFilter> filter;

    /**
     * @return A bucket filter. The configuration only includes objects that meet the filter's criteria (documented below).
     * 
     */
    public Output</* @Nullable */ BucketIntelligentTieringConfigurationFilter> getFilter() {
        return this.filter;
    }
    /**
     * The unique name used to identify the S3 Intelligent-Tiering configuration for the bucket.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The unique name used to identify the S3 Intelligent-Tiering configuration for the bucket.
     * 
     */
    public Output<String> getName() {
        return this.name;
    }
    /**
     * Specifies the status of the configuration. Valid values: `Enabled`, `Disabled`.
     * 
     */
    @Export(name="status", type=String.class, parameters={})
    private Output</* @Nullable */ String> status;

    /**
     * @return Specifies the status of the configuration. Valid values: `Enabled`, `Disabled`.
     * 
     */
    public Output</* @Nullable */ String> getStatus() {
        return this.status;
    }
    /**
     * The S3 Intelligent-Tiering storage class tiers of the configuration (documented below).
     * 
     */
    @Export(name="tierings", type=List.class, parameters={BucketIntelligentTieringConfigurationTiering.class})
    private Output<List<BucketIntelligentTieringConfigurationTiering>> tierings;

    /**
     * @return The S3 Intelligent-Tiering storage class tiers of the configuration (documented below).
     * 
     */
    public Output<List<BucketIntelligentTieringConfigurationTiering>> getTierings() {
        return this.tierings;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public BucketIntelligentTieringConfiguration(String name) {
        this(name, BucketIntelligentTieringConfigurationArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public BucketIntelligentTieringConfiguration(String name, BucketIntelligentTieringConfigurationArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public BucketIntelligentTieringConfiguration(String name, BucketIntelligentTieringConfigurationArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:s3/bucketIntelligentTieringConfiguration:BucketIntelligentTieringConfiguration", name, args == null ? BucketIntelligentTieringConfigurationArgs.Empty : args, makeResourceOptions(options, Output.empty()));
    }

    private BucketIntelligentTieringConfiguration(String name, Output<String> id, @Nullable BucketIntelligentTieringConfigurationState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:s3/bucketIntelligentTieringConfiguration:BucketIntelligentTieringConfiguration", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static BucketIntelligentTieringConfiguration get(String name, Output<String> id, @Nullable BucketIntelligentTieringConfigurationState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new BucketIntelligentTieringConfiguration(name, id, state, options);
    }
}
