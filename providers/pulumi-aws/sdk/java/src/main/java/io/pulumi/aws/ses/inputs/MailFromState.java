// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.ses.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class MailFromState extends io.pulumi.resources.ResourceArgs {

    public static final MailFromState Empty = new MailFromState();

    /**
     * The action that you want Amazon SES to take if it cannot successfully read the required MX record when you send an email. Defaults to `UseDefaultValue`. See the [SES API documentation](https://docs.aws.amazon.com/ses/latest/APIReference/API_SetIdentityMailFromDomain.html) for more information.
     * 
     */
    @Import(name="behaviorOnMxFailure")
      private final @Nullable Output<String> behaviorOnMxFailure;

    public Output<String> behaviorOnMxFailure() {
        return this.behaviorOnMxFailure == null ? Codegen.empty() : this.behaviorOnMxFailure;
    }

    /**
     * Verified domain name to generate DKIM tokens for.
     * 
     */
    @Import(name="domain")
      private final @Nullable Output<String> domain;

    public Output<String> domain() {
        return this.domain == null ? Codegen.empty() : this.domain;
    }

    /**
     * Subdomain (of above domain) which is to be used as MAIL FROM address (Required for DMARC validation)
     * 
     */
    @Import(name="mailFromDomain")
      private final @Nullable Output<String> mailFromDomain;

    public Output<String> mailFromDomain() {
        return this.mailFromDomain == null ? Codegen.empty() : this.mailFromDomain;
    }

    public MailFromState(
        @Nullable Output<String> behaviorOnMxFailure,
        @Nullable Output<String> domain,
        @Nullable Output<String> mailFromDomain) {
        this.behaviorOnMxFailure = behaviorOnMxFailure;
        this.domain = domain;
        this.mailFromDomain = mailFromDomain;
    }

    private MailFromState() {
        this.behaviorOnMxFailure = Codegen.empty();
        this.domain = Codegen.empty();
        this.mailFromDomain = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MailFromState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> behaviorOnMxFailure;
        private @Nullable Output<String> domain;
        private @Nullable Output<String> mailFromDomain;

        public Builder() {
    	      // Empty
        }

        public Builder(MailFromState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.behaviorOnMxFailure = defaults.behaviorOnMxFailure;
    	      this.domain = defaults.domain;
    	      this.mailFromDomain = defaults.mailFromDomain;
        }

        public Builder behaviorOnMxFailure(@Nullable Output<String> behaviorOnMxFailure) {
            this.behaviorOnMxFailure = behaviorOnMxFailure;
            return this;
        }
        public Builder behaviorOnMxFailure(@Nullable String behaviorOnMxFailure) {
            this.behaviorOnMxFailure = Codegen.ofNullable(behaviorOnMxFailure);
            return this;
        }
        public Builder domain(@Nullable Output<String> domain) {
            this.domain = domain;
            return this;
        }
        public Builder domain(@Nullable String domain) {
            this.domain = Codegen.ofNullable(domain);
            return this;
        }
        public Builder mailFromDomain(@Nullable Output<String> mailFromDomain) {
            this.mailFromDomain = mailFromDomain;
            return this;
        }
        public Builder mailFromDomain(@Nullable String mailFromDomain) {
            this.mailFromDomain = Codegen.ofNullable(mailFromDomain);
            return this;
        }        public MailFromState build() {
            return new MailFromState(behaviorOnMxFailure, domain, mailFromDomain);
        }
    }
}
