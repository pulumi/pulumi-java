// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.s3control.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class BucketState extends io.pulumi.resources.ResourceArgs {

    public static final BucketState Empty = new BucketState();

    /**
     * Amazon Resource Name (ARN) of the bucket.
     * 
     */
    @Import(name="arn")
      private final @Nullable Output<String> arn;

    public Output<String> getArn() {
        return this.arn == null ? Codegen.empty() : this.arn;
    }

    /**
     * Name of the bucket.
     * 
     */
    @Import(name="bucket")
      private final @Nullable Output<String> bucket;

    public Output<String> getBucket() {
        return this.bucket == null ? Codegen.empty() : this.bucket;
    }

    /**
     * UTC creation date in [RFC3339 format](https://tools.ietf.org/html/rfc3339#section-5.8).
     * 
     */
    @Import(name="creationDate")
      private final @Nullable Output<String> creationDate;

    public Output<String> getCreationDate() {
        return this.creationDate == null ? Codegen.empty() : this.creationDate;
    }

    /**
     * Identifier of the Outpost to contain this bucket.
     * 
     */
    @Import(name="outpostId")
      private final @Nullable Output<String> outpostId;

    public Output<String> getOutpostId() {
        return this.outpostId == null ? Codegen.empty() : this.outpostId;
    }

    /**
     * Boolean whether Public Access Block is enabled.
     * 
     */
    @Import(name="publicAccessBlockEnabled")
      private final @Nullable Output<Boolean> publicAccessBlockEnabled;

    public Output<Boolean> getPublicAccessBlockEnabled() {
        return this.publicAccessBlockEnabled == null ? Codegen.empty() : this.publicAccessBlockEnabled;
    }

    /**
     * Key-value map of resource tags. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Import(name="tags")
      private final @Nullable Output<Map<String,String>> tags;

    public Output<Map<String,String>> getTags() {
        return this.tags == null ? Codegen.empty() : this.tags;
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider .
     * 
     */
    @Import(name="tagsAll")
      private final @Nullable Output<Map<String,String>> tagsAll;

    public Output<Map<String,String>> getTagsAll() {
        return this.tagsAll == null ? Codegen.empty() : this.tagsAll;
    }

    public BucketState(
        @Nullable Output<String> arn,
        @Nullable Output<String> bucket,
        @Nullable Output<String> creationDate,
        @Nullable Output<String> outpostId,
        @Nullable Output<Boolean> publicAccessBlockEnabled,
        @Nullable Output<Map<String,String>> tags,
        @Nullable Output<Map<String,String>> tagsAll) {
        this.arn = arn;
        this.bucket = bucket;
        this.creationDate = creationDate;
        this.outpostId = outpostId;
        this.publicAccessBlockEnabled = publicAccessBlockEnabled;
        this.tags = tags;
        this.tagsAll = tagsAll;
    }

    private BucketState() {
        this.arn = Codegen.empty();
        this.bucket = Codegen.empty();
        this.creationDate = Codegen.empty();
        this.outpostId = Codegen.empty();
        this.publicAccessBlockEnabled = Codegen.empty();
        this.tags = Codegen.empty();
        this.tagsAll = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BucketState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> arn;
        private @Nullable Output<String> bucket;
        private @Nullable Output<String> creationDate;
        private @Nullable Output<String> outpostId;
        private @Nullable Output<Boolean> publicAccessBlockEnabled;
        private @Nullable Output<Map<String,String>> tags;
        private @Nullable Output<Map<String,String>> tagsAll;

        public Builder() {
    	      // Empty
        }

        public Builder(BucketState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.bucket = defaults.bucket;
    	      this.creationDate = defaults.creationDate;
    	      this.outpostId = defaults.outpostId;
    	      this.publicAccessBlockEnabled = defaults.publicAccessBlockEnabled;
    	      this.tags = defaults.tags;
    	      this.tagsAll = defaults.tagsAll;
        }

        public Builder arn(@Nullable Output<String> arn) {
            this.arn = arn;
            return this;
        }
        public Builder arn(@Nullable String arn) {
            this.arn = Codegen.ofNullable(arn);
            return this;
        }
        public Builder bucket(@Nullable Output<String> bucket) {
            this.bucket = bucket;
            return this;
        }
        public Builder bucket(@Nullable String bucket) {
            this.bucket = Codegen.ofNullable(bucket);
            return this;
        }
        public Builder creationDate(@Nullable Output<String> creationDate) {
            this.creationDate = creationDate;
            return this;
        }
        public Builder creationDate(@Nullable String creationDate) {
            this.creationDate = Codegen.ofNullable(creationDate);
            return this;
        }
        public Builder outpostId(@Nullable Output<String> outpostId) {
            this.outpostId = outpostId;
            return this;
        }
        public Builder outpostId(@Nullable String outpostId) {
            this.outpostId = Codegen.ofNullable(outpostId);
            return this;
        }
        public Builder publicAccessBlockEnabled(@Nullable Output<Boolean> publicAccessBlockEnabled) {
            this.publicAccessBlockEnabled = publicAccessBlockEnabled;
            return this;
        }
        public Builder publicAccessBlockEnabled(@Nullable Boolean publicAccessBlockEnabled) {
            this.publicAccessBlockEnabled = Codegen.ofNullable(publicAccessBlockEnabled);
            return this;
        }
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = Codegen.ofNullable(tags);
            return this;
        }
        public Builder tagsAll(@Nullable Output<Map<String,String>> tagsAll) {
            this.tagsAll = tagsAll;
            return this;
        }
        public Builder tagsAll(@Nullable Map<String,String> tagsAll) {
            this.tagsAll = Codegen.ofNullable(tagsAll);
            return this;
        }        public BucketState build() {
            return new BucketState(arn, bucket, creationDate, outpostId, publicAccessBlockEnabled, tags, tagsAll);
        }
    }
}
