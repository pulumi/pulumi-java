// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.workspaces.outputs;

import io.pulumi.aws.workspaces.outputs.GetWorkspaceWorkspaceProperty;
import io.pulumi.core.annotations.OutputCustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@OutputCustomType
public final class GetWorkspaceResult {
    private final String bundleId;
    /**
     * The name of the WorkSpace, as seen by the operating system.
     * 
     */
    private final String computerName;
    private final String directoryId;
    /**
     * The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    /**
     * The IP address of the WorkSpace.
     * 
     */
    private final String ipAddress;
    private final Boolean rootVolumeEncryptionEnabled;
    /**
     * The operational state of the WorkSpace.
     * 
     */
    private final String state;
    private final Map<String,String> tags;
    private final String userName;
    private final Boolean userVolumeEncryptionEnabled;
    private final String volumeEncryptionKey;
    private final String workspaceId;
    private final List<GetWorkspaceWorkspaceProperty> workspaceProperties;

    @OutputCustomType.Constructor
    private GetWorkspaceResult(
        @OutputCustomType.Parameter("bundleId") String bundleId,
        @OutputCustomType.Parameter("computerName") String computerName,
        @OutputCustomType.Parameter("directoryId") String directoryId,
        @OutputCustomType.Parameter("id") String id,
        @OutputCustomType.Parameter("ipAddress") String ipAddress,
        @OutputCustomType.Parameter("rootVolumeEncryptionEnabled") Boolean rootVolumeEncryptionEnabled,
        @OutputCustomType.Parameter("state") String state,
        @OutputCustomType.Parameter("tags") Map<String,String> tags,
        @OutputCustomType.Parameter("userName") String userName,
        @OutputCustomType.Parameter("userVolumeEncryptionEnabled") Boolean userVolumeEncryptionEnabled,
        @OutputCustomType.Parameter("volumeEncryptionKey") String volumeEncryptionKey,
        @OutputCustomType.Parameter("workspaceId") String workspaceId,
        @OutputCustomType.Parameter("workspaceProperties") List<GetWorkspaceWorkspaceProperty> workspaceProperties) {
        this.bundleId = bundleId;
        this.computerName = computerName;
        this.directoryId = directoryId;
        this.id = id;
        this.ipAddress = ipAddress;
        this.rootVolumeEncryptionEnabled = rootVolumeEncryptionEnabled;
        this.state = state;
        this.tags = tags;
        this.userName = userName;
        this.userVolumeEncryptionEnabled = userVolumeEncryptionEnabled;
        this.volumeEncryptionKey = volumeEncryptionKey;
        this.workspaceId = workspaceId;
        this.workspaceProperties = workspaceProperties;
    }

    public String getBundleId() {
        return this.bundleId;
    }
    /**
     * The name of the WorkSpace, as seen by the operating system.
     * 
    */
    public String getComputerName() {
        return this.computerName;
    }
    public String getDirectoryId() {
        return this.directoryId;
    }
    /**
     * The provider-assigned unique ID for this managed resource.
     * 
    */
    public String getId() {
        return this.id;
    }
    /**
     * The IP address of the WorkSpace.
     * 
    */
    public String getIpAddress() {
        return this.ipAddress;
    }
    public Boolean getRootVolumeEncryptionEnabled() {
        return this.rootVolumeEncryptionEnabled;
    }
    /**
     * The operational state of the WorkSpace.
     * 
    */
    public String getState() {
        return this.state;
    }
    public Map<String,String> getTags() {
        return this.tags;
    }
    public String getUserName() {
        return this.userName;
    }
    public Boolean getUserVolumeEncryptionEnabled() {
        return this.userVolumeEncryptionEnabled;
    }
    public String getVolumeEncryptionKey() {
        return this.volumeEncryptionKey;
    }
    public String getWorkspaceId() {
        return this.workspaceId;
    }
    public List<GetWorkspaceWorkspaceProperty> getWorkspaceProperties() {
        return this.workspaceProperties;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetWorkspaceResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String bundleId;
        private String computerName;
        private String directoryId;
        private String id;
        private String ipAddress;
        private Boolean rootVolumeEncryptionEnabled;
        private String state;
        private Map<String,String> tags;
        private String userName;
        private Boolean userVolumeEncryptionEnabled;
        private String volumeEncryptionKey;
        private String workspaceId;
        private List<GetWorkspaceWorkspaceProperty> workspaceProperties;

        public Builder() {
    	      // Empty
        }

        public Builder(GetWorkspaceResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bundleId = defaults.bundleId;
    	      this.computerName = defaults.computerName;
    	      this.directoryId = defaults.directoryId;
    	      this.id = defaults.id;
    	      this.ipAddress = defaults.ipAddress;
    	      this.rootVolumeEncryptionEnabled = defaults.rootVolumeEncryptionEnabled;
    	      this.state = defaults.state;
    	      this.tags = defaults.tags;
    	      this.userName = defaults.userName;
    	      this.userVolumeEncryptionEnabled = defaults.userVolumeEncryptionEnabled;
    	      this.volumeEncryptionKey = defaults.volumeEncryptionKey;
    	      this.workspaceId = defaults.workspaceId;
    	      this.workspaceProperties = defaults.workspaceProperties;
        }

        public Builder bundleId(String bundleId) {
            this.bundleId = Objects.requireNonNull(bundleId);
            return this;
        }

        public Builder computerName(String computerName) {
            this.computerName = Objects.requireNonNull(computerName);
            return this;
        }

        public Builder directoryId(String directoryId) {
            this.directoryId = Objects.requireNonNull(directoryId);
            return this;
        }

        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }

        public Builder ipAddress(String ipAddress) {
            this.ipAddress = Objects.requireNonNull(ipAddress);
            return this;
        }

        public Builder rootVolumeEncryptionEnabled(Boolean rootVolumeEncryptionEnabled) {
            this.rootVolumeEncryptionEnabled = Objects.requireNonNull(rootVolumeEncryptionEnabled);
            return this;
        }

        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            this.tags = Objects.requireNonNull(tags);
            return this;
        }

        public Builder userName(String userName) {
            this.userName = Objects.requireNonNull(userName);
            return this;
        }

        public Builder userVolumeEncryptionEnabled(Boolean userVolumeEncryptionEnabled) {
            this.userVolumeEncryptionEnabled = Objects.requireNonNull(userVolumeEncryptionEnabled);
            return this;
        }

        public Builder volumeEncryptionKey(String volumeEncryptionKey) {
            this.volumeEncryptionKey = Objects.requireNonNull(volumeEncryptionKey);
            return this;
        }

        public Builder workspaceId(String workspaceId) {
            this.workspaceId = Objects.requireNonNull(workspaceId);
            return this;
        }

        public Builder workspaceProperties(List<GetWorkspaceWorkspaceProperty> workspaceProperties) {
            this.workspaceProperties = Objects.requireNonNull(workspaceProperties);
            return this;
        }
        public GetWorkspaceResult build() {
            return new GetWorkspaceResult(bundleId, computerName, directoryId, id, ipAddress, rootVolumeEncryptionEnabled, state, tags, userName, userVolumeEncryptionEnabled, volumeEncryptionKey, workspaceId, workspaceProperties);
        }
    }
}
