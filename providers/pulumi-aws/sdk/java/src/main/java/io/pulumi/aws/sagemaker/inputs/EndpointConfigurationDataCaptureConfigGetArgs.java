// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.sagemaker.inputs;

import io.pulumi.aws.sagemaker.inputs.EndpointConfigurationDataCaptureConfigCaptureContentTypeHeaderGetArgs;
import io.pulumi.aws.sagemaker.inputs.EndpointConfigurationDataCaptureConfigCaptureOptionGetArgs;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class EndpointConfigurationDataCaptureConfigGetArgs extends io.pulumi.resources.ResourceArgs {

    public static final EndpointConfigurationDataCaptureConfigGetArgs Empty = new EndpointConfigurationDataCaptureConfigGetArgs();

    /**
     * The content type headers to capture. Fields are documented below.
     * 
     */
    @InputImport(name="captureContentTypeHeader")
      private final @Nullable Input<EndpointConfigurationDataCaptureConfigCaptureContentTypeHeaderGetArgs> captureContentTypeHeader;

    public Input<EndpointConfigurationDataCaptureConfigCaptureContentTypeHeaderGetArgs> getCaptureContentTypeHeader() {
        return this.captureContentTypeHeader == null ? Input.empty() : this.captureContentTypeHeader;
    }

    /**
     * Specifies what data to capture. Fields are documented below.
     * 
     */
    @InputImport(name="captureOptions", required=true)
      private final Input<List<EndpointConfigurationDataCaptureConfigCaptureOptionGetArgs>> captureOptions;

    public Input<List<EndpointConfigurationDataCaptureConfigCaptureOptionGetArgs>> getCaptureOptions() {
        return this.captureOptions;
    }

    /**
     * The URL for S3 location where the captured data is stored.
     * 
     */
    @InputImport(name="destinationS3Uri", required=true)
      private final Input<String> destinationS3Uri;

    public Input<String> getDestinationS3Uri() {
        return this.destinationS3Uri;
    }

    /**
     * Flag to enable data capture. Defaults to `false`.
     * 
     */
    @InputImport(name="enableCapture")
      private final @Nullable Input<Boolean> enableCapture;

    public Input<Boolean> getEnableCapture() {
        return this.enableCapture == null ? Input.empty() : this.enableCapture;
    }

    /**
     * Portion of data to capture. Should be between 0 and 100.
     * 
     */
    @InputImport(name="initialSamplingPercentage", required=true)
      private final Input<Integer> initialSamplingPercentage;

    public Input<Integer> getInitialSamplingPercentage() {
        return this.initialSamplingPercentage;
    }

    /**
     * The Amazon Web Services Key Management Service (Amazon Web Services KMS) key that Amazon SageMaker uses to encrypt the asynchronous inference output in Amazon S3.
     * 
     */
    @InputImport(name="kmsKeyId")
      private final @Nullable Input<String> kmsKeyId;

    public Input<String> getKmsKeyId() {
        return this.kmsKeyId == null ? Input.empty() : this.kmsKeyId;
    }

    public EndpointConfigurationDataCaptureConfigGetArgs(
        @Nullable Input<EndpointConfigurationDataCaptureConfigCaptureContentTypeHeaderGetArgs> captureContentTypeHeader,
        Input<List<EndpointConfigurationDataCaptureConfigCaptureOptionGetArgs>> captureOptions,
        Input<String> destinationS3Uri,
        @Nullable Input<Boolean> enableCapture,
        Input<Integer> initialSamplingPercentage,
        @Nullable Input<String> kmsKeyId) {
        this.captureContentTypeHeader = captureContentTypeHeader;
        this.captureOptions = Objects.requireNonNull(captureOptions, "expected parameter 'captureOptions' to be non-null");
        this.destinationS3Uri = Objects.requireNonNull(destinationS3Uri, "expected parameter 'destinationS3Uri' to be non-null");
        this.enableCapture = enableCapture;
        this.initialSamplingPercentage = Objects.requireNonNull(initialSamplingPercentage, "expected parameter 'initialSamplingPercentage' to be non-null");
        this.kmsKeyId = kmsKeyId;
    }

    private EndpointConfigurationDataCaptureConfigGetArgs() {
        this.captureContentTypeHeader = Input.empty();
        this.captureOptions = Input.empty();
        this.destinationS3Uri = Input.empty();
        this.enableCapture = Input.empty();
        this.initialSamplingPercentage = Input.empty();
        this.kmsKeyId = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(EndpointConfigurationDataCaptureConfigGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<EndpointConfigurationDataCaptureConfigCaptureContentTypeHeaderGetArgs> captureContentTypeHeader;
        private Input<List<EndpointConfigurationDataCaptureConfigCaptureOptionGetArgs>> captureOptions;
        private Input<String> destinationS3Uri;
        private @Nullable Input<Boolean> enableCapture;
        private Input<Integer> initialSamplingPercentage;
        private @Nullable Input<String> kmsKeyId;

        public Builder() {
    	      // Empty
        }

        public Builder(EndpointConfigurationDataCaptureConfigGetArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.captureContentTypeHeader = defaults.captureContentTypeHeader;
    	      this.captureOptions = defaults.captureOptions;
    	      this.destinationS3Uri = defaults.destinationS3Uri;
    	      this.enableCapture = defaults.enableCapture;
    	      this.initialSamplingPercentage = defaults.initialSamplingPercentage;
    	      this.kmsKeyId = defaults.kmsKeyId;
        }

        public Builder captureContentTypeHeader(@Nullable Input<EndpointConfigurationDataCaptureConfigCaptureContentTypeHeaderGetArgs> captureContentTypeHeader) {
            this.captureContentTypeHeader = captureContentTypeHeader;
            return this;
        }

        public Builder captureContentTypeHeader(@Nullable EndpointConfigurationDataCaptureConfigCaptureContentTypeHeaderGetArgs captureContentTypeHeader) {
            this.captureContentTypeHeader = Input.ofNullable(captureContentTypeHeader);
            return this;
        }

        public Builder captureOptions(Input<List<EndpointConfigurationDataCaptureConfigCaptureOptionGetArgs>> captureOptions) {
            this.captureOptions = Objects.requireNonNull(captureOptions);
            return this;
        }

        public Builder captureOptions(List<EndpointConfigurationDataCaptureConfigCaptureOptionGetArgs> captureOptions) {
            this.captureOptions = Input.of(Objects.requireNonNull(captureOptions));
            return this;
        }

        public Builder destinationS3Uri(Input<String> destinationS3Uri) {
            this.destinationS3Uri = Objects.requireNonNull(destinationS3Uri);
            return this;
        }

        public Builder destinationS3Uri(String destinationS3Uri) {
            this.destinationS3Uri = Input.of(Objects.requireNonNull(destinationS3Uri));
            return this;
        }

        public Builder enableCapture(@Nullable Input<Boolean> enableCapture) {
            this.enableCapture = enableCapture;
            return this;
        }

        public Builder enableCapture(@Nullable Boolean enableCapture) {
            this.enableCapture = Input.ofNullable(enableCapture);
            return this;
        }

        public Builder initialSamplingPercentage(Input<Integer> initialSamplingPercentage) {
            this.initialSamplingPercentage = Objects.requireNonNull(initialSamplingPercentage);
            return this;
        }

        public Builder initialSamplingPercentage(Integer initialSamplingPercentage) {
            this.initialSamplingPercentage = Input.of(Objects.requireNonNull(initialSamplingPercentage));
            return this;
        }

        public Builder kmsKeyId(@Nullable Input<String> kmsKeyId) {
            this.kmsKeyId = kmsKeyId;
            return this;
        }

        public Builder kmsKeyId(@Nullable String kmsKeyId) {
            this.kmsKeyId = Input.ofNullable(kmsKeyId);
            return this;
        }
        public EndpointConfigurationDataCaptureConfigGetArgs build() {
            return new EndpointConfigurationDataCaptureConfigGetArgs(captureContentTypeHeader, captureOptions, destinationS3Uri, enableCapture, initialSamplingPercentage, kmsKeyId);
        }
    }
}
