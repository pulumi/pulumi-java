// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.lex.inputs;

import io.pulumi.aws.lex.inputs.IntentSlotValueElicitationPromptGetArgs;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class IntentSlotGetArgs extends io.pulumi.resources.ResourceArgs {

    public static final IntentSlotGetArgs Empty = new IntentSlotGetArgs();

    /**
     * A description of the bot. Must be less than or equal to 200 characters in length.
     * 
     */
    @InputImport(name="description")
      private final @Nullable Input<String> description;

    public Input<String> getDescription() {
        return this.description == null ? Input.empty() : this.description;
    }

    /**
     * The name of the intent slot that you want to create. The name is case sensitive. Must be less than or equal to 100 characters in length.
     * 
     */
    @InputImport(name="name", required=true)
      private final Input<String> name;

    public Input<String> getName() {
        return this.name;
    }

    /**
     * Directs Lex the order in which to elicit this slot value from the user.
     * For example, if the intent has two slots with priorities 1 and 2, AWS Lex first elicits a value for
     * the slot with priority 1. If multiple slots share the same priority, the order in which Lex elicits
     * values is arbitrary. Must be between 1 and 100.
     * 
     */
    @InputImport(name="priority")
      private final @Nullable Input<Integer> priority;

    public Input<Integer> getPriority() {
        return this.priority == null ? Input.empty() : this.priority;
    }

    /**
     * The response card. Amazon Lex will substitute session attributes and
     * slot values into the response card. For more information, see
     * [Example: Using a Response Card](https://docs.aws.amazon.com/lex/latest/dg/ex-resp-card.html). Must be less than or equal to 50000 characters in length.
     * 
     */
    @InputImport(name="responseCard")
      private final @Nullable Input<String> responseCard;

    public Input<String> getResponseCard() {
        return this.responseCard == null ? Input.empty() : this.responseCard;
    }

    /**
     * If you know a specific pattern with which users might respond to
     * an Amazon Lex request for a slot value, you can provide those utterances to improve accuracy. This
     * is optional. In most cases, Amazon Lex is capable of understanding user utterances. Must have between 1 and 10 items in the list, and each item must be less than or equal to 200 characters in length.
     * 
     */
    @InputImport(name="sampleUtterances")
      private final @Nullable Input<List<String>> sampleUtterances;

    public Input<List<String>> getSampleUtterances() {
        return this.sampleUtterances == null ? Input.empty() : this.sampleUtterances;
    }

    /**
     * Specifies whether the slot is required or optional.
     * 
     */
    @InputImport(name="slotConstraint", required=true)
      private final Input<String> slotConstraint;

    public Input<String> getSlotConstraint() {
        return this.slotConstraint;
    }

    /**
     * The type of the slot, either a custom slot type that you defined or one of
     * the built-in slot types. Must be less than or equal to 100 characters in length.
     * 
     */
    @InputImport(name="slotType", required=true)
      private final Input<String> slotType;

    public Input<String> getSlotType() {
        return this.slotType;
    }

    /**
     * The version of the slot type. Must be less than or equal to 64 characters in length.
     * 
     */
    @InputImport(name="slotTypeVersion")
      private final @Nullable Input<String> slotTypeVersion;

    public Input<String> getSlotTypeVersion() {
        return this.slotTypeVersion == null ? Input.empty() : this.slotTypeVersion;
    }

    /**
     * The prompt that Amazon Lex uses to elicit the slot value
     * from the user. Attributes are documented under prompt.
     * 
     */
    @InputImport(name="valueElicitationPrompt")
      private final @Nullable Input<IntentSlotValueElicitationPromptGetArgs> valueElicitationPrompt;

    public Input<IntentSlotValueElicitationPromptGetArgs> getValueElicitationPrompt() {
        return this.valueElicitationPrompt == null ? Input.empty() : this.valueElicitationPrompt;
    }

    public IntentSlotGetArgs(
        @Nullable Input<String> description,
        Input<String> name,
        @Nullable Input<Integer> priority,
        @Nullable Input<String> responseCard,
        @Nullable Input<List<String>> sampleUtterances,
        Input<String> slotConstraint,
        Input<String> slotType,
        @Nullable Input<String> slotTypeVersion,
        @Nullable Input<IntentSlotValueElicitationPromptGetArgs> valueElicitationPrompt) {
        this.description = description;
        this.name = Objects.requireNonNull(name, "expected parameter 'name' to be non-null");
        this.priority = priority;
        this.responseCard = responseCard;
        this.sampleUtterances = sampleUtterances;
        this.slotConstraint = Objects.requireNonNull(slotConstraint, "expected parameter 'slotConstraint' to be non-null");
        this.slotType = Objects.requireNonNull(slotType, "expected parameter 'slotType' to be non-null");
        this.slotTypeVersion = slotTypeVersion;
        this.valueElicitationPrompt = valueElicitationPrompt;
    }

    private IntentSlotGetArgs() {
        this.description = Input.empty();
        this.name = Input.empty();
        this.priority = Input.empty();
        this.responseCard = Input.empty();
        this.sampleUtterances = Input.empty();
        this.slotConstraint = Input.empty();
        this.slotType = Input.empty();
        this.slotTypeVersion = Input.empty();
        this.valueElicitationPrompt = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(IntentSlotGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> description;
        private Input<String> name;
        private @Nullable Input<Integer> priority;
        private @Nullable Input<String> responseCard;
        private @Nullable Input<List<String>> sampleUtterances;
        private Input<String> slotConstraint;
        private Input<String> slotType;
        private @Nullable Input<String> slotTypeVersion;
        private @Nullable Input<IntentSlotValueElicitationPromptGetArgs> valueElicitationPrompt;

        public Builder() {
    	      // Empty
        }

        public Builder(IntentSlotGetArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.name = defaults.name;
    	      this.priority = defaults.priority;
    	      this.responseCard = defaults.responseCard;
    	      this.sampleUtterances = defaults.sampleUtterances;
    	      this.slotConstraint = defaults.slotConstraint;
    	      this.slotType = defaults.slotType;
    	      this.slotTypeVersion = defaults.slotTypeVersion;
    	      this.valueElicitationPrompt = defaults.valueElicitationPrompt;
        }

        public Builder setDescription(@Nullable Input<String> description) {
            this.description = description;
            return this;
        }

        public Builder setDescription(@Nullable String description) {
            this.description = Input.ofNullable(description);
            return this;
        }

        public Builder setName(Input<String> name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setName(String name) {
            this.name = Input.of(Objects.requireNonNull(name));
            return this;
        }

        public Builder setPriority(@Nullable Input<Integer> priority) {
            this.priority = priority;
            return this;
        }

        public Builder setPriority(@Nullable Integer priority) {
            this.priority = Input.ofNullable(priority);
            return this;
        }

        public Builder setResponseCard(@Nullable Input<String> responseCard) {
            this.responseCard = responseCard;
            return this;
        }

        public Builder setResponseCard(@Nullable String responseCard) {
            this.responseCard = Input.ofNullable(responseCard);
            return this;
        }

        public Builder setSampleUtterances(@Nullable Input<List<String>> sampleUtterances) {
            this.sampleUtterances = sampleUtterances;
            return this;
        }

        public Builder setSampleUtterances(@Nullable List<String> sampleUtterances) {
            this.sampleUtterances = Input.ofNullable(sampleUtterances);
            return this;
        }

        public Builder setSlotConstraint(Input<String> slotConstraint) {
            this.slotConstraint = Objects.requireNonNull(slotConstraint);
            return this;
        }

        public Builder setSlotConstraint(String slotConstraint) {
            this.slotConstraint = Input.of(Objects.requireNonNull(slotConstraint));
            return this;
        }

        public Builder setSlotType(Input<String> slotType) {
            this.slotType = Objects.requireNonNull(slotType);
            return this;
        }

        public Builder setSlotType(String slotType) {
            this.slotType = Input.of(Objects.requireNonNull(slotType));
            return this;
        }

        public Builder setSlotTypeVersion(@Nullable Input<String> slotTypeVersion) {
            this.slotTypeVersion = slotTypeVersion;
            return this;
        }

        public Builder setSlotTypeVersion(@Nullable String slotTypeVersion) {
            this.slotTypeVersion = Input.ofNullable(slotTypeVersion);
            return this;
        }

        public Builder setValueElicitationPrompt(@Nullable Input<IntentSlotValueElicitationPromptGetArgs> valueElicitationPrompt) {
            this.valueElicitationPrompt = valueElicitationPrompt;
            return this;
        }

        public Builder setValueElicitationPrompt(@Nullable IntentSlotValueElicitationPromptGetArgs valueElicitationPrompt) {
            this.valueElicitationPrompt = Input.ofNullable(valueElicitationPrompt);
            return this;
        }
        public IntentSlotGetArgs build() {
            return new IntentSlotGetArgs(description, name, priority, responseCard, sampleUtterances, slotConstraint, slotType, slotTypeVersion, valueElicitationPrompt);
        }
    }
}
