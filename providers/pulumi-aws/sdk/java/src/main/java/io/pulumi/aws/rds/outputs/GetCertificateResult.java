// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.rds.outputs;

import io.pulumi.core.annotations.OutputCustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class GetCertificateResult {
    /**
     * Amazon Resource Name (ARN) of the certificate.
     * 
     */
    private final String arn;
    /**
     * Type of certificate. For example, `CA`.
     * 
     */
    private final String certificateType;
    /**
     * Boolean whether there is an override for the default certificate identifier.
     * 
     */
    private final Boolean customerOverride;
    /**
     * If there is an override for the default certificate identifier, when the override expires.
     * 
     */
    private final String customerOverrideValidTill;
    private final String id;
    private final @Nullable Boolean latestValidTill;
    /**
     * Thumbprint of the certificate.
     * 
     */
    private final String thumbprint;
    /**
     * [RFC3339 format](https://tools.ietf.org/html/rfc3339#section-5.8) of certificate starting validity date.
     * 
     */
    private final String validFrom;
    /**
     * [RFC3339 format](https://tools.ietf.org/html/rfc3339#section-5.8) of certificate ending validity date.
     * 
     */
    private final String validTill;

    @OutputCustomType.Constructor({"arn","certificateType","customerOverride","customerOverrideValidTill","id","latestValidTill","thumbprint","validFrom","validTill"})
    private GetCertificateResult(
        String arn,
        String certificateType,
        Boolean customerOverride,
        String customerOverrideValidTill,
        String id,
        @Nullable Boolean latestValidTill,
        String thumbprint,
        String validFrom,
        String validTill) {
        this.arn = arn;
        this.certificateType = certificateType;
        this.customerOverride = customerOverride;
        this.customerOverrideValidTill = customerOverrideValidTill;
        this.id = id;
        this.latestValidTill = latestValidTill;
        this.thumbprint = thumbprint;
        this.validFrom = validFrom;
        this.validTill = validTill;
    }

    /**
     * Amazon Resource Name (ARN) of the certificate.
     * 
    */
    public String getArn() {
        return this.arn;
    }
    /**
     * Type of certificate. For example, `CA`.
     * 
    */
    public String getCertificateType() {
        return this.certificateType;
    }
    /**
     * Boolean whether there is an override for the default certificate identifier.
     * 
    */
    public Boolean getCustomerOverride() {
        return this.customerOverride;
    }
    /**
     * If there is an override for the default certificate identifier, when the override expires.
     * 
    */
    public String getCustomerOverrideValidTill() {
        return this.customerOverrideValidTill;
    }
    public String getId() {
        return this.id;
    }
    public Optional<Boolean> getLatestValidTill() {
        return Optional.ofNullable(this.latestValidTill);
    }
    /**
     * Thumbprint of the certificate.
     * 
    */
    public String getThumbprint() {
        return this.thumbprint;
    }
    /**
     * [RFC3339 format](https://tools.ietf.org/html/rfc3339#section-5.8) of certificate starting validity date.
     * 
    */
    public String getValidFrom() {
        return this.validFrom;
    }
    /**
     * [RFC3339 format](https://tools.ietf.org/html/rfc3339#section-5.8) of certificate ending validity date.
     * 
    */
    public String getValidTill() {
        return this.validTill;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCertificateResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String arn;
        private String certificateType;
        private Boolean customerOverride;
        private String customerOverrideValidTill;
        private String id;
        private @Nullable Boolean latestValidTill;
        private String thumbprint;
        private String validFrom;
        private String validTill;

        public Builder() {
    	      // Empty
        }

        public Builder(GetCertificateResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.certificateType = defaults.certificateType;
    	      this.customerOverride = defaults.customerOverride;
    	      this.customerOverrideValidTill = defaults.customerOverrideValidTill;
    	      this.id = defaults.id;
    	      this.latestValidTill = defaults.latestValidTill;
    	      this.thumbprint = defaults.thumbprint;
    	      this.validFrom = defaults.validFrom;
    	      this.validTill = defaults.validTill;
        }

        public Builder setArn(String arn) {
            this.arn = Objects.requireNonNull(arn);
            return this;
        }

        public Builder setCertificateType(String certificateType) {
            this.certificateType = Objects.requireNonNull(certificateType);
            return this;
        }

        public Builder setCustomerOverride(Boolean customerOverride) {
            this.customerOverride = Objects.requireNonNull(customerOverride);
            return this;
        }

        public Builder setCustomerOverrideValidTill(String customerOverrideValidTill) {
            this.customerOverrideValidTill = Objects.requireNonNull(customerOverrideValidTill);
            return this;
        }

        public Builder setId(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }

        public Builder setLatestValidTill(@Nullable Boolean latestValidTill) {
            this.latestValidTill = latestValidTill;
            return this;
        }

        public Builder setThumbprint(String thumbprint) {
            this.thumbprint = Objects.requireNonNull(thumbprint);
            return this;
        }

        public Builder setValidFrom(String validFrom) {
            this.validFrom = Objects.requireNonNull(validFrom);
            return this;
        }

        public Builder setValidTill(String validTill) {
            this.validTill = Objects.requireNonNull(validTill);
            return this;
        }
        public GetCertificateResult build() {
            return new GetCertificateResult(arn, certificateType, customerOverride, customerOverrideValidTill, id, latestValidTill, thumbprint, validFrom, validTill);
        }
    }
}
