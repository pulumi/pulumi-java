// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.cloudwatch.inputs;

import io.pulumi.aws.cloudwatch.inputs.MetricStreamExcludeFilterGetArgs;
import io.pulumi.aws.cloudwatch.inputs.MetricStreamIncludeFilterGetArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class MetricStreamState extends io.pulumi.resources.ResourceArgs {

    public static final MetricStreamState Empty = new MetricStreamState();

    /**
     * ARN of the metric stream.
     * 
     */
    @Import(name="arn")
      private final @Nullable Output<String> arn;

    public Output<String> getArn() {
        return this.arn == null ? Output.empty() : this.arn;
    }

    /**
     * Date and time in [RFC3339 format](https://tools.ietf.org/html/rfc3339#section-5.8) that the metric stream was created.
     * 
     */
    @Import(name="creationDate")
      private final @Nullable Output<String> creationDate;

    public Output<String> getCreationDate() {
        return this.creationDate == null ? Output.empty() : this.creationDate;
    }

    /**
     * List of exclusive metric filters. If you specify this parameter, the stream sends metrics from all metric namespaces except for the namespaces that you specify here. Conflicts with `include_filter`.
     * 
     */
    @Import(name="excludeFilters")
      private final @Nullable Output<List<MetricStreamExcludeFilterGetArgs>> excludeFilters;

    public Output<List<MetricStreamExcludeFilterGetArgs>> getExcludeFilters() {
        return this.excludeFilters == null ? Output.empty() : this.excludeFilters;
    }

    /**
     * ARN of the Amazon Kinesis Firehose delivery stream to use for this metric stream.
     * 
     */
    @Import(name="firehoseArn")
      private final @Nullable Output<String> firehoseArn;

    public Output<String> getFirehoseArn() {
        return this.firehoseArn == null ? Output.empty() : this.firehoseArn;
    }

    /**
     * List of inclusive metric filters. If you specify this parameter, the stream sends only the metrics from the metric namespaces that you specify here. Conflicts with `exclude_filter`.
     * 
     */
    @Import(name="includeFilters")
      private final @Nullable Output<List<MetricStreamIncludeFilterGetArgs>> includeFilters;

    public Output<List<MetricStreamIncludeFilterGetArgs>> getIncludeFilters() {
        return this.includeFilters == null ? Output.empty() : this.includeFilters;
    }

    /**
     * Date and time in [RFC3339 format](https://tools.ietf.org/html/rfc3339#section-5.8) that the metric stream was last updated.
     * 
     */
    @Import(name="lastUpdateDate")
      private final @Nullable Output<String> lastUpdateDate;

    public Output<String> getLastUpdateDate() {
        return this.lastUpdateDate == null ? Output.empty() : this.lastUpdateDate;
    }

    @Import(name="name")
      private final @Nullable Output<String> name;

    public Output<String> getName() {
        return this.name == null ? Output.empty() : this.name;
    }

    /**
     * Creates a unique friendly name beginning with the specified prefix. Conflicts with `name`.
     * 
     */
    @Import(name="namePrefix")
      private final @Nullable Output<String> namePrefix;

    public Output<String> getNamePrefix() {
        return this.namePrefix == null ? Output.empty() : this.namePrefix;
    }

    /**
     * Output format for the stream. Possible values are `json` and `opentelemetry0.7`. For more information about output formats, see [Metric streams output formats](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-metric-streams-formats.html).
     * 
     */
    @Import(name="outputFormat")
      private final @Nullable Output<String> outputFormat;

    public Output<String> getOutputFormat() {
        return this.outputFormat == null ? Output.empty() : this.outputFormat;
    }

    /**
     * ARN of the IAM role that this metric stream will use to access Amazon Kinesis Firehose resources. For more information about role permissions, see [Trust between CloudWatch and Kinesis Data Firehose](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-metric-streams-trustpolicy.html).
     * 
     */
    @Import(name="roleArn")
      private final @Nullable Output<String> roleArn;

    public Output<String> getRoleArn() {
        return this.roleArn == null ? Output.empty() : this.roleArn;
    }

    /**
     * State of the metric stream. Possible values are `running` and `stopped`.
     * 
     */
    @Import(name="state")
      private final @Nullable Output<String> state;

    public Output<String> getState() {
        return this.state == null ? Output.empty() : this.state;
    }

    /**
     * Map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Import(name="tags")
      private final @Nullable Output<Map<String,String>> tags;

    public Output<Map<String,String>> getTags() {
        return this.tags == null ? Output.empty() : this.tags;
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     */
    @Import(name="tagsAll")
      private final @Nullable Output<Map<String,String>> tagsAll;

    public Output<Map<String,String>> getTagsAll() {
        return this.tagsAll == null ? Output.empty() : this.tagsAll;
    }

    public MetricStreamState(
        @Nullable Output<String> arn,
        @Nullable Output<String> creationDate,
        @Nullable Output<List<MetricStreamExcludeFilterGetArgs>> excludeFilters,
        @Nullable Output<String> firehoseArn,
        @Nullable Output<List<MetricStreamIncludeFilterGetArgs>> includeFilters,
        @Nullable Output<String> lastUpdateDate,
        @Nullable Output<String> name,
        @Nullable Output<String> namePrefix,
        @Nullable Output<String> outputFormat,
        @Nullable Output<String> roleArn,
        @Nullable Output<String> state,
        @Nullable Output<Map<String,String>> tags,
        @Nullable Output<Map<String,String>> tagsAll) {
        this.arn = arn;
        this.creationDate = creationDate;
        this.excludeFilters = excludeFilters;
        this.firehoseArn = firehoseArn;
        this.includeFilters = includeFilters;
        this.lastUpdateDate = lastUpdateDate;
        this.name = name;
        this.namePrefix = namePrefix;
        this.outputFormat = outputFormat;
        this.roleArn = roleArn;
        this.state = state;
        this.tags = tags;
        this.tagsAll = tagsAll;
    }

    private MetricStreamState() {
        this.arn = Output.empty();
        this.creationDate = Output.empty();
        this.excludeFilters = Output.empty();
        this.firehoseArn = Output.empty();
        this.includeFilters = Output.empty();
        this.lastUpdateDate = Output.empty();
        this.name = Output.empty();
        this.namePrefix = Output.empty();
        this.outputFormat = Output.empty();
        this.roleArn = Output.empty();
        this.state = Output.empty();
        this.tags = Output.empty();
        this.tagsAll = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MetricStreamState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> arn;
        private @Nullable Output<String> creationDate;
        private @Nullable Output<List<MetricStreamExcludeFilterGetArgs>> excludeFilters;
        private @Nullable Output<String> firehoseArn;
        private @Nullable Output<List<MetricStreamIncludeFilterGetArgs>> includeFilters;
        private @Nullable Output<String> lastUpdateDate;
        private @Nullable Output<String> name;
        private @Nullable Output<String> namePrefix;
        private @Nullable Output<String> outputFormat;
        private @Nullable Output<String> roleArn;
        private @Nullable Output<String> state;
        private @Nullable Output<Map<String,String>> tags;
        private @Nullable Output<Map<String,String>> tagsAll;

        public Builder() {
    	      // Empty
        }

        public Builder(MetricStreamState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.creationDate = defaults.creationDate;
    	      this.excludeFilters = defaults.excludeFilters;
    	      this.firehoseArn = defaults.firehoseArn;
    	      this.includeFilters = defaults.includeFilters;
    	      this.lastUpdateDate = defaults.lastUpdateDate;
    	      this.name = defaults.name;
    	      this.namePrefix = defaults.namePrefix;
    	      this.outputFormat = defaults.outputFormat;
    	      this.roleArn = defaults.roleArn;
    	      this.state = defaults.state;
    	      this.tags = defaults.tags;
    	      this.tagsAll = defaults.tagsAll;
        }

        public Builder arn(@Nullable Output<String> arn) {
            this.arn = arn;
            return this;
        }
        public Builder arn(@Nullable String arn) {
            this.arn = Output.ofNullable(arn);
            return this;
        }
        public Builder creationDate(@Nullable Output<String> creationDate) {
            this.creationDate = creationDate;
            return this;
        }
        public Builder creationDate(@Nullable String creationDate) {
            this.creationDate = Output.ofNullable(creationDate);
            return this;
        }
        public Builder excludeFilters(@Nullable Output<List<MetricStreamExcludeFilterGetArgs>> excludeFilters) {
            this.excludeFilters = excludeFilters;
            return this;
        }
        public Builder excludeFilters(@Nullable List<MetricStreamExcludeFilterGetArgs> excludeFilters) {
            this.excludeFilters = Output.ofNullable(excludeFilters);
            return this;
        }
        public Builder excludeFilters(MetricStreamExcludeFilterGetArgs... excludeFilters) {
            return excludeFilters(List.of(excludeFilters));
        }
        public Builder firehoseArn(@Nullable Output<String> firehoseArn) {
            this.firehoseArn = firehoseArn;
            return this;
        }
        public Builder firehoseArn(@Nullable String firehoseArn) {
            this.firehoseArn = Output.ofNullable(firehoseArn);
            return this;
        }
        public Builder includeFilters(@Nullable Output<List<MetricStreamIncludeFilterGetArgs>> includeFilters) {
            this.includeFilters = includeFilters;
            return this;
        }
        public Builder includeFilters(@Nullable List<MetricStreamIncludeFilterGetArgs> includeFilters) {
            this.includeFilters = Output.ofNullable(includeFilters);
            return this;
        }
        public Builder includeFilters(MetricStreamIncludeFilterGetArgs... includeFilters) {
            return includeFilters(List.of(includeFilters));
        }
        public Builder lastUpdateDate(@Nullable Output<String> lastUpdateDate) {
            this.lastUpdateDate = lastUpdateDate;
            return this;
        }
        public Builder lastUpdateDate(@Nullable String lastUpdateDate) {
            this.lastUpdateDate = Output.ofNullable(lastUpdateDate);
            return this;
        }
        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }
        public Builder name(@Nullable String name) {
            this.name = Output.ofNullable(name);
            return this;
        }
        public Builder namePrefix(@Nullable Output<String> namePrefix) {
            this.namePrefix = namePrefix;
            return this;
        }
        public Builder namePrefix(@Nullable String namePrefix) {
            this.namePrefix = Output.ofNullable(namePrefix);
            return this;
        }
        public Builder outputFormat(@Nullable Output<String> outputFormat) {
            this.outputFormat = outputFormat;
            return this;
        }
        public Builder outputFormat(@Nullable String outputFormat) {
            this.outputFormat = Output.ofNullable(outputFormat);
            return this;
        }
        public Builder roleArn(@Nullable Output<String> roleArn) {
            this.roleArn = roleArn;
            return this;
        }
        public Builder roleArn(@Nullable String roleArn) {
            this.roleArn = Output.ofNullable(roleArn);
            return this;
        }
        public Builder state(@Nullable Output<String> state) {
            this.state = state;
            return this;
        }
        public Builder state(@Nullable String state) {
            this.state = Output.ofNullable(state);
            return this;
        }
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = Output.ofNullable(tags);
            return this;
        }
        public Builder tagsAll(@Nullable Output<Map<String,String>> tagsAll) {
            this.tagsAll = tagsAll;
            return this;
        }
        public Builder tagsAll(@Nullable Map<String,String> tagsAll) {
            this.tagsAll = Output.ofNullable(tagsAll);
            return this;
        }        public MetricStreamState build() {
            return new MetricStreamState(arn, creationDate, excludeFilters, firehoseArn, includeFilters, lastUpdateDate, name, namePrefix, outputFormat, roleArn, state, tags, tagsAll);
        }
    }
}
