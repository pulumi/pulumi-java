// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.imagebuilder;

import io.pulumi.aws.imagebuilder.inputs.ImageImageTestsConfigurationArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.InputImport;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ImageArgs extends io.pulumi.resources.ResourceArgs {

    public static final ImageArgs Empty = new ImageArgs();

    /**
     * Amazon Resource Name (ARN) of the Image Builder Distribution Configuration.
     * 
     */
    @InputImport(name="distributionConfigurationArn")
      private final @Nullable Output<String> distributionConfigurationArn;

    public Output<String> getDistributionConfigurationArn() {
        return this.distributionConfigurationArn == null ? Output.empty() : this.distributionConfigurationArn;
    }

    /**
     * Whether additional information about the image being created is collected. Defaults to `true`.
     * 
     */
    @InputImport(name="enhancedImageMetadataEnabled")
      private final @Nullable Output<Boolean> enhancedImageMetadataEnabled;

    public Output<Boolean> getEnhancedImageMetadataEnabled() {
        return this.enhancedImageMetadataEnabled == null ? Output.empty() : this.enhancedImageMetadataEnabled;
    }

    /**
     * Amazon Resource Name (ARN) of the Image Builder Infrastructure Recipe.
     * 
     */
    @InputImport(name="imageRecipeArn", required=true)
      private final Output<String> imageRecipeArn;

    public Output<String> getImageRecipeArn() {
        return this.imageRecipeArn;
    }

    /**
     * Configuration block with image tests configuration. Detailed below.
     * 
     */
    @InputImport(name="imageTestsConfiguration")
      private final @Nullable Output<ImageImageTestsConfigurationArgs> imageTestsConfiguration;

    public Output<ImageImageTestsConfigurationArgs> getImageTestsConfiguration() {
        return this.imageTestsConfiguration == null ? Output.empty() : this.imageTestsConfiguration;
    }

    /**
     * Amazon Resource Name (ARN) of the Image Builder Infrastructure Configuration.
     * 
     */
    @InputImport(name="infrastructureConfigurationArn", required=true)
      private final Output<String> infrastructureConfigurationArn;

    public Output<String> getInfrastructureConfigurationArn() {
        return this.infrastructureConfigurationArn;
    }

    /**
     * Key-value map of resource tags for the Image Builder Image. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @InputImport(name="tags")
      private final @Nullable Output<Map<String,String>> tags;

    public Output<Map<String,String>> getTags() {
        return this.tags == null ? Output.empty() : this.tags;
    }

    public ImageArgs(
        @Nullable Output<String> distributionConfigurationArn,
        @Nullable Output<Boolean> enhancedImageMetadataEnabled,
        Output<String> imageRecipeArn,
        @Nullable Output<ImageImageTestsConfigurationArgs> imageTestsConfiguration,
        Output<String> infrastructureConfigurationArn,
        @Nullable Output<Map<String,String>> tags) {
        this.distributionConfigurationArn = distributionConfigurationArn;
        this.enhancedImageMetadataEnabled = enhancedImageMetadataEnabled;
        this.imageRecipeArn = Objects.requireNonNull(imageRecipeArn, "expected parameter 'imageRecipeArn' to be non-null");
        this.imageTestsConfiguration = imageTestsConfiguration;
        this.infrastructureConfigurationArn = Objects.requireNonNull(infrastructureConfigurationArn, "expected parameter 'infrastructureConfigurationArn' to be non-null");
        this.tags = tags;
    }

    private ImageArgs() {
        this.distributionConfigurationArn = Output.empty();
        this.enhancedImageMetadataEnabled = Output.empty();
        this.imageRecipeArn = Output.empty();
        this.imageTestsConfiguration = Output.empty();
        this.infrastructureConfigurationArn = Output.empty();
        this.tags = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ImageArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> distributionConfigurationArn;
        private @Nullable Output<Boolean> enhancedImageMetadataEnabled;
        private Output<String> imageRecipeArn;
        private @Nullable Output<ImageImageTestsConfigurationArgs> imageTestsConfiguration;
        private Output<String> infrastructureConfigurationArn;
        private @Nullable Output<Map<String,String>> tags;

        public Builder() {
    	      // Empty
        }

        public Builder(ImageArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.distributionConfigurationArn = defaults.distributionConfigurationArn;
    	      this.enhancedImageMetadataEnabled = defaults.enhancedImageMetadataEnabled;
    	      this.imageRecipeArn = defaults.imageRecipeArn;
    	      this.imageTestsConfiguration = defaults.imageTestsConfiguration;
    	      this.infrastructureConfigurationArn = defaults.infrastructureConfigurationArn;
    	      this.tags = defaults.tags;
        }

        public Builder distributionConfigurationArn(@Nullable Output<String> distributionConfigurationArn) {
            this.distributionConfigurationArn = distributionConfigurationArn;
            return this;
        }

        public Builder distributionConfigurationArn(@Nullable String distributionConfigurationArn) {
            this.distributionConfigurationArn = Output.ofNullable(distributionConfigurationArn);
            return this;
        }

        public Builder enhancedImageMetadataEnabled(@Nullable Output<Boolean> enhancedImageMetadataEnabled) {
            this.enhancedImageMetadataEnabled = enhancedImageMetadataEnabled;
            return this;
        }

        public Builder enhancedImageMetadataEnabled(@Nullable Boolean enhancedImageMetadataEnabled) {
            this.enhancedImageMetadataEnabled = Output.ofNullable(enhancedImageMetadataEnabled);
            return this;
        }

        public Builder imageRecipeArn(Output<String> imageRecipeArn) {
            this.imageRecipeArn = Objects.requireNonNull(imageRecipeArn);
            return this;
        }

        public Builder imageRecipeArn(String imageRecipeArn) {
            this.imageRecipeArn = Output.of(Objects.requireNonNull(imageRecipeArn));
            return this;
        }

        public Builder imageTestsConfiguration(@Nullable Output<ImageImageTestsConfigurationArgs> imageTestsConfiguration) {
            this.imageTestsConfiguration = imageTestsConfiguration;
            return this;
        }

        public Builder imageTestsConfiguration(@Nullable ImageImageTestsConfigurationArgs imageTestsConfiguration) {
            this.imageTestsConfiguration = Output.ofNullable(imageTestsConfiguration);
            return this;
        }

        public Builder infrastructureConfigurationArn(Output<String> infrastructureConfigurationArn) {
            this.infrastructureConfigurationArn = Objects.requireNonNull(infrastructureConfigurationArn);
            return this;
        }

        public Builder infrastructureConfigurationArn(String infrastructureConfigurationArn) {
            this.infrastructureConfigurationArn = Output.of(Objects.requireNonNull(infrastructureConfigurationArn));
            return this;
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }

        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = Output.ofNullable(tags);
            return this;
        }
        public ImageArgs build() {
            return new ImageArgs(distributionConfigurationArn, enhancedImageMetadataEnabled, imageRecipeArn, imageTestsConfiguration, infrastructureConfigurationArn, tags);
        }
    }
}
