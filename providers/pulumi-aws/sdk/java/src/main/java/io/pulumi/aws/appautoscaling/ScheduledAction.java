// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.appautoscaling;

import io.pulumi.aws.Utilities;
import io.pulumi.aws.appautoscaling.ScheduledActionArgs;
import io.pulumi.aws.appautoscaling.inputs.ScheduledActionState;
import io.pulumi.aws.appautoscaling.outputs.ScheduledActionScalableTargetAction;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Export;
import io.pulumi.core.annotations.ResourceType;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * Provides an Application AutoScaling ScheduledAction resource.
 * 
 * {{% examples %}}
 * ## Example Usage
 * {{% example %}}
 * ### DynamoDB Table Autoscaling
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 * 
 * const dynamodbTarget = new aws.appautoscaling.Target("dynamodbTarget", {
 *     maxCapacity: 100,
 *     minCapacity: 5,
 *     resourceId: "table/tableName",
 *     scalableDimension: "dynamodb:table:ReadCapacityUnits",
 *     serviceNamespace: "dynamodb",
 * });
 * const dynamodbScheduledAction = new aws.appautoscaling.ScheduledAction("dynamodbScheduledAction", {
 *     serviceNamespace: dynamodbTarget.serviceNamespace,
 *     resourceId: dynamodbTarget.resourceId,
 *     scalableDimension: dynamodbTarget.scalableDimension,
 *     schedule: "at(2006-01-02T15:04:05)",
 *     scalableTargetAction: {
 *         minCapacity: 1,
 *         maxCapacity: 200,
 *     },
 * });
 * ```
 * ```python
 * import pulumi
 * import pulumi_aws as aws
 * 
 * dynamodb_target = aws.appautoscaling.Target("dynamodbTarget",
 *     max_capacity=100,
 *     min_capacity=5,
 *     resource_id="table/tableName",
 *     scalable_dimension="dynamodb:table:ReadCapacityUnits",
 *     service_namespace="dynamodb")
 * dynamodb_scheduled_action = aws.appautoscaling.ScheduledAction("dynamodbScheduledAction",
 *     service_namespace=dynamodb_target.service_namespace,
 *     resource_id=dynamodb_target.resource_id,
 *     scalable_dimension=dynamodb_target.scalable_dimension,
 *     schedule="at(2006-01-02T15:04:05)",
 *     scalable_target_action=aws.appautoscaling.ScheduledActionScalableTargetActionArgs(
 *         min_capacity=1,
 *         max_capacity=200,
 *     ))
 * ```
 * ```csharp
 * using Pulumi;
 * using Aws = Pulumi.Aws;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var dynamodbTarget = new Aws.AppAutoScaling.Target("dynamodbTarget", new Aws.AppAutoScaling.TargetArgs
 *         {
 *             MaxCapacity = 100,
 *             MinCapacity = 5,
 *             ResourceId = "table/tableName",
 *             ScalableDimension = "dynamodb:table:ReadCapacityUnits",
 *             ServiceNamespace = "dynamodb",
 *         });
 *         var dynamodbScheduledAction = new Aws.AppAutoScaling.ScheduledAction("dynamodbScheduledAction", new Aws.AppAutoScaling.ScheduledActionArgs
 *         {
 *             ServiceNamespace = dynamodbTarget.ServiceNamespace,
 *             ResourceId = dynamodbTarget.ResourceId,
 *             ScalableDimension = dynamodbTarget.ScalableDimension,
 *             Schedule = "at(2006-01-02T15:04:05)",
 *             ScalableTargetAction = new Aws.AppAutoScaling.Inputs.ScheduledActionScalableTargetActionArgs
 *             {
 *                 MinCapacity = 1,
 *                 MaxCapacity = 200,
 *             },
 *         });
 *     }
 * 
 * }
 * ```
 * ```go
 * package main
 * 
 * import (
 * 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/appautoscaling"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		dynamodbTarget, err := appautoscaling.NewTarget(ctx, "dynamodbTarget", &appautoscaling.TargetArgs{
 * 			MaxCapacity:       pulumi.Int(100),
 * 			MinCapacity:       pulumi.Int(5),
 * 			ResourceId:        pulumi.String("table/tableName"),
 * 			ScalableDimension: pulumi.String("dynamodb:table:ReadCapacityUnits"),
 * 			ServiceNamespace:  pulumi.String("dynamodb"),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		_, err = appautoscaling.NewScheduledAction(ctx, "dynamodbScheduledAction", &appautoscaling.ScheduledActionArgs{
 * 			ServiceNamespace:  dynamodbTarget.ServiceNamespace,
 * 			ResourceId:        dynamodbTarget.ResourceId,
 * 			ScalableDimension: dynamodbTarget.ScalableDimension,
 * 			Schedule:          pulumi.String("at(2006-01-02T15:04:05)"),
 * 			ScalableTargetAction: &appautoscaling.ScheduledActionScalableTargetActionArgs{
 * 				MinCapacity: pulumi.Int(1),
 * 				MaxCapacity: pulumi.Int(200),
 * 			},
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * ```
 * {{% /example %}}
 * {{% example %}}
 * ### ECS Service Autoscaling
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 * 
 * const ecsTarget = new aws.appautoscaling.Target("ecsTarget", {
 *     maxCapacity: 4,
 *     minCapacity: 1,
 *     resourceId: "service/clusterName/serviceName",
 *     scalableDimension: "ecs:service:DesiredCount",
 *     serviceNamespace: "ecs",
 * });
 * const ecsScheduledAction = new aws.appautoscaling.ScheduledAction("ecsScheduledAction", {
 *     serviceNamespace: ecsTarget.serviceNamespace,
 *     resourceId: ecsTarget.resourceId,
 *     scalableDimension: ecsTarget.scalableDimension,
 *     schedule: "at(2006-01-02T15:04:05)",
 *     scalableTargetAction: {
 *         minCapacity: 1,
 *         maxCapacity: 10,
 *     },
 * });
 * ```
 * ```python
 * import pulumi
 * import pulumi_aws as aws
 * 
 * ecs_target = aws.appautoscaling.Target("ecsTarget",
 *     max_capacity=4,
 *     min_capacity=1,
 *     resource_id="service/clusterName/serviceName",
 *     scalable_dimension="ecs:service:DesiredCount",
 *     service_namespace="ecs")
 * ecs_scheduled_action = aws.appautoscaling.ScheduledAction("ecsScheduledAction",
 *     service_namespace=ecs_target.service_namespace,
 *     resource_id=ecs_target.resource_id,
 *     scalable_dimension=ecs_target.scalable_dimension,
 *     schedule="at(2006-01-02T15:04:05)",
 *     scalable_target_action=aws.appautoscaling.ScheduledActionScalableTargetActionArgs(
 *         min_capacity=1,
 *         max_capacity=10,
 *     ))
 * ```
 * ```csharp
 * using Pulumi;
 * using Aws = Pulumi.Aws;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var ecsTarget = new Aws.AppAutoScaling.Target("ecsTarget", new Aws.AppAutoScaling.TargetArgs
 *         {
 *             MaxCapacity = 4,
 *             MinCapacity = 1,
 *             ResourceId = "service/clusterName/serviceName",
 *             ScalableDimension = "ecs:service:DesiredCount",
 *             ServiceNamespace = "ecs",
 *         });
 *         var ecsScheduledAction = new Aws.AppAutoScaling.ScheduledAction("ecsScheduledAction", new Aws.AppAutoScaling.ScheduledActionArgs
 *         {
 *             ServiceNamespace = ecsTarget.ServiceNamespace,
 *             ResourceId = ecsTarget.ResourceId,
 *             ScalableDimension = ecsTarget.ScalableDimension,
 *             Schedule = "at(2006-01-02T15:04:05)",
 *             ScalableTargetAction = new Aws.AppAutoScaling.Inputs.ScheduledActionScalableTargetActionArgs
 *             {
 *                 MinCapacity = 1,
 *                 MaxCapacity = 10,
 *             },
 *         });
 *     }
 * 
 * }
 * ```
 * ```go
 * package main
 * 
 * import (
 * 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/appautoscaling"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		ecsTarget, err := appautoscaling.NewTarget(ctx, "ecsTarget", &appautoscaling.TargetArgs{
 * 			MaxCapacity:       pulumi.Int(4),
 * 			MinCapacity:       pulumi.Int(1),
 * 			ResourceId:        pulumi.String("service/clusterName/serviceName"),
 * 			ScalableDimension: pulumi.String("ecs:service:DesiredCount"),
 * 			ServiceNamespace:  pulumi.String("ecs"),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		_, err = appautoscaling.NewScheduledAction(ctx, "ecsScheduledAction", &appautoscaling.ScheduledActionArgs{
 * 			ServiceNamespace:  ecsTarget.ServiceNamespace,
 * 			ResourceId:        ecsTarget.ResourceId,
 * 			ScalableDimension: ecsTarget.ScalableDimension,
 * 			Schedule:          pulumi.String("at(2006-01-02T15:04:05)"),
 * 			ScalableTargetAction: &appautoscaling.ScheduledActionScalableTargetActionArgs{
 * 				MinCapacity: pulumi.Int(1),
 * 				MaxCapacity: pulumi.Int(10),
 * 			},
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * ```
 * {{% /example %}}
 * {{% /examples %}}
 */
@ResourceType(type="aws:appautoscaling/scheduledAction:ScheduledAction")
public class ScheduledAction extends io.pulumi.resources.CustomResource {
    /**
     * The Amazon Resource Name (ARN) of the scheduled action.
     * 
     */
    @Export(name="arn", type=String.class, parameters={})
    private Output<String> arn;

    /**
     * @return The Amazon Resource Name (ARN) of the scheduled action.
     * 
     */
    public Output<String> getArn() {
        return this.arn;
    }
    /**
     * The date and time for the scheduled action to end in RFC 3339 format. The timezone is not affected by the setting of `timezone`.
     * 
     */
    @Export(name="endTime", type=String.class, parameters={})
    private Output</* @Nullable */ String> endTime;

    /**
     * @return The date and time for the scheduled action to end in RFC 3339 format. The timezone is not affected by the setting of `timezone`.
     * 
     */
    public Output</* @Nullable */ String> getEndTime() {
        return this.endTime;
    }
    /**
     * The name of the scheduled action.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The name of the scheduled action.
     * 
     */
    public Output<String> getName() {
        return this.name;
    }
    /**
     * The identifier of the resource associated with the scheduled action. Documentation can be found in the parameter at: [AWS Application Auto Scaling API Reference](https://docs.aws.amazon.com/ApplicationAutoScaling/latest/APIReference/API_PutScheduledAction.html#ApplicationAutoScaling-PutScheduledAction-request-ResourceId)
     * 
     */
    @Export(name="resourceId", type=String.class, parameters={})
    private Output<String> resourceId;

    /**
     * @return The identifier of the resource associated with the scheduled action. Documentation can be found in the parameter at: [AWS Application Auto Scaling API Reference](https://docs.aws.amazon.com/ApplicationAutoScaling/latest/APIReference/API_PutScheduledAction.html#ApplicationAutoScaling-PutScheduledAction-request-ResourceId)
     * 
     */
    public Output<String> getResourceId() {
        return this.resourceId;
    }
    /**
     * The scalable dimension. Documentation can be found in the parameter at: [AWS Application Auto Scaling API Reference](https://docs.aws.amazon.com/ApplicationAutoScaling/latest/APIReference/API_PutScheduledAction.html#ApplicationAutoScaling-PutScheduledAction-request-ScalableDimension) Example: ecs:service:DesiredCount
     * 
     */
    @Export(name="scalableDimension", type=String.class, parameters={})
    private Output<String> scalableDimension;

    /**
     * @return The scalable dimension. Documentation can be found in the parameter at: [AWS Application Auto Scaling API Reference](https://docs.aws.amazon.com/ApplicationAutoScaling/latest/APIReference/API_PutScheduledAction.html#ApplicationAutoScaling-PutScheduledAction-request-ScalableDimension) Example: ecs:service:DesiredCount
     * 
     */
    public Output<String> getScalableDimension() {
        return this.scalableDimension;
    }
    /**
     * The new minimum and maximum capacity. You can set both values or just one. See below
     * 
     */
    @Export(name="scalableTargetAction", type=ScheduledActionScalableTargetAction.class, parameters={})
    private Output<ScheduledActionScalableTargetAction> scalableTargetAction;

    /**
     * @return The new minimum and maximum capacity. You can set both values or just one. See below
     * 
     */
    public Output<ScheduledActionScalableTargetAction> getScalableTargetAction() {
        return this.scalableTargetAction;
    }
    /**
     * The schedule for this action. The following formats are supported: At expressions - at(yyyy-mm-ddThh:mm:ss), Rate expressions - rate(valueunit), Cron expressions - cron(fields). Times for at expressions and cron expressions are evaluated using the time zone configured in `timezone`. Documentation can be found in the parameter at: [AWS Application Auto Scaling API Reference](https://docs.aws.amazon.com/ApplicationAutoScaling/latest/APIReference/API_PutScheduledAction.html#ApplicationAutoScaling-PutScheduledAction-request-Schedule)
     * 
     */
    @Export(name="schedule", type=String.class, parameters={})
    private Output<String> schedule;

    /**
     * @return The schedule for this action. The following formats are supported: At expressions - at(yyyy-mm-ddThh:mm:ss), Rate expressions - rate(valueunit), Cron expressions - cron(fields). Times for at expressions and cron expressions are evaluated using the time zone configured in `timezone`. Documentation can be found in the parameter at: [AWS Application Auto Scaling API Reference](https://docs.aws.amazon.com/ApplicationAutoScaling/latest/APIReference/API_PutScheduledAction.html#ApplicationAutoScaling-PutScheduledAction-request-Schedule)
     * 
     */
    public Output<String> getSchedule() {
        return this.schedule;
    }
    /**
     * The namespace of the AWS service. Documentation can be found in the parameter at: [AWS Application Auto Scaling API Reference](https://docs.aws.amazon.com/ApplicationAutoScaling/latest/APIReference/API_PutScheduledAction.html#ApplicationAutoScaling-PutScheduledAction-request-ServiceNamespace) Example: ecs
     * 
     */
    @Export(name="serviceNamespace", type=String.class, parameters={})
    private Output<String> serviceNamespace;

    /**
     * @return The namespace of the AWS service. Documentation can be found in the parameter at: [AWS Application Auto Scaling API Reference](https://docs.aws.amazon.com/ApplicationAutoScaling/latest/APIReference/API_PutScheduledAction.html#ApplicationAutoScaling-PutScheduledAction-request-ServiceNamespace) Example: ecs
     * 
     */
    public Output<String> getServiceNamespace() {
        return this.serviceNamespace;
    }
    /**
     * The date and time for the scheduled action to start in RFC 3339 format. The timezone is not affected by the setting of `timezone`.
     * 
     */
    @Export(name="startTime", type=String.class, parameters={})
    private Output</* @Nullable */ String> startTime;

    /**
     * @return The date and time for the scheduled action to start in RFC 3339 format. The timezone is not affected by the setting of `timezone`.
     * 
     */
    public Output</* @Nullable */ String> getStartTime() {
        return this.startTime;
    }
    /**
     * The time zone used when setting a scheduled action by using an at or cron expression. Does not affect timezone for `start_time` and `end_time`. Valid values are the [canonical names of the IANA time zones supported by Joda-Time](https://www.joda.org/joda-time/timezones.html), such as `Etc/GMT+9` or `Pacific/Tahiti`. Default is `UTC`.
     * 
     */
    @Export(name="timezone", type=String.class, parameters={})
    private Output</* @Nullable */ String> timezone;

    /**
     * @return The time zone used when setting a scheduled action by using an at or cron expression. Does not affect timezone for `start_time` and `end_time`. Valid values are the [canonical names of the IANA time zones supported by Joda-Time](https://www.joda.org/joda-time/timezones.html), such as `Etc/GMT+9` or `Pacific/Tahiti`. Default is `UTC`.
     * 
     */
    public Output</* @Nullable */ String> getTimezone() {
        return this.timezone;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ScheduledAction(String name) {
        this(name, ScheduledActionArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ScheduledAction(String name, ScheduledActionArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ScheduledAction(String name, ScheduledActionArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:appautoscaling/scheduledAction:ScheduledAction", name, args == null ? ScheduledActionArgs.Empty : args, makeResourceOptions(options, Output.empty()));
    }

    private ScheduledAction(String name, Output<String> id, @Nullable ScheduledActionState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:appautoscaling/scheduledAction:ScheduledAction", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ScheduledAction get(String name, Output<String> id, @Nullable ScheduledActionState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new ScheduledAction(name, id, state, options);
    }
}
