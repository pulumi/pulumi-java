// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.s3.inputs;

import io.pulumi.aws.s3.inputs.BucketReplicationConfigRuleDestinationAccessControlTranslationGetArgs;
import io.pulumi.aws.s3.inputs.BucketReplicationConfigRuleDestinationEncryptionConfigurationGetArgs;
import io.pulumi.aws.s3.inputs.BucketReplicationConfigRuleDestinationMetricsGetArgs;
import io.pulumi.aws.s3.inputs.BucketReplicationConfigRuleDestinationReplicationTimeGetArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class BucketReplicationConfigRuleDestinationGetArgs extends io.pulumi.resources.ResourceArgs {

    public static final BucketReplicationConfigRuleDestinationGetArgs Empty = new BucketReplicationConfigRuleDestinationGetArgs();

    /**
     * A configuration block that specifies the overrides to use for object owners on replication documented below. Specify this only in a cross-account scenario (where source and destination bucket owners are not the same), and you want to change replica ownership to the AWS account that owns the destination bucket. If this is not specified in the replication configuration, the replicas are owned by same AWS account that owns the source object. Must be used in conjunction with `account` owner override configuration.
     * 
     */
    @Import(name="accessControlTranslation")
      private final @Nullable Output<BucketReplicationConfigRuleDestinationAccessControlTranslationGetArgs> accessControlTranslation;

    public Output<BucketReplicationConfigRuleDestinationAccessControlTranslationGetArgs> getAccessControlTranslation() {
        return this.accessControlTranslation == null ? Codegen.empty() : this.accessControlTranslation;
    }

    /**
     * The Account ID to specify the replica ownership. Must be used in conjunction with `access_control_translation` override configuration.
     * 
     */
    @Import(name="account")
      private final @Nullable Output<String> account;

    public Output<String> getAccount() {
        return this.account == null ? Codegen.empty() : this.account;
    }

    /**
     * The ARN of the S3 bucket where you want Amazon S3 to store replicas of the objects identified by the rule.
     * 
     */
    @Import(name="bucket", required=true)
      private final Output<String> bucket;

    public Output<String> getBucket() {
        return this.bucket;
    }

    /**
     * A configuration block that provides information about encryption documented below. If `source_selection_criteria` is specified, you must specify this element.
     * 
     */
    @Import(name="encryptionConfiguration")
      private final @Nullable Output<BucketReplicationConfigRuleDestinationEncryptionConfigurationGetArgs> encryptionConfiguration;

    public Output<BucketReplicationConfigRuleDestinationEncryptionConfigurationGetArgs> getEncryptionConfiguration() {
        return this.encryptionConfiguration == null ? Codegen.empty() : this.encryptionConfiguration;
    }

    /**
     * A configuration block that specifies replication metrics-related settings enabling replication metrics and events documented below.
     * 
     */
    @Import(name="metrics")
      private final @Nullable Output<BucketReplicationConfigRuleDestinationMetricsGetArgs> metrics;

    public Output<BucketReplicationConfigRuleDestinationMetricsGetArgs> getMetrics() {
        return this.metrics == null ? Codegen.empty() : this.metrics;
    }

    /**
     * A configuration block that specifies S3 Replication Time Control (S3 RTC), including whether S3 RTC is enabled and the time when all objects and operations on objects must be replicated documented below. Replication Time Control must be used in conjunction with `metrics`.
     * 
     */
    @Import(name="replicationTime")
      private final @Nullable Output<BucketReplicationConfigRuleDestinationReplicationTimeGetArgs> replicationTime;

    public Output<BucketReplicationConfigRuleDestinationReplicationTimeGetArgs> getReplicationTime() {
        return this.replicationTime == null ? Codegen.empty() : this.replicationTime;
    }

    /**
     * The [storage class](https://docs.aws.amazon.com/AmazonS3/latest/API/API_Destination.html#AmazonS3-Type-Destination-StorageClass) used to store the object. By default, Amazon S3 uses the storage class of the source object to create the object replica.
     * 
     */
    @Import(name="storageClass")
      private final @Nullable Output<String> storageClass;

    public Output<String> getStorageClass() {
        return this.storageClass == null ? Codegen.empty() : this.storageClass;
    }

    public BucketReplicationConfigRuleDestinationGetArgs(
        @Nullable Output<BucketReplicationConfigRuleDestinationAccessControlTranslationGetArgs> accessControlTranslation,
        @Nullable Output<String> account,
        Output<String> bucket,
        @Nullable Output<BucketReplicationConfigRuleDestinationEncryptionConfigurationGetArgs> encryptionConfiguration,
        @Nullable Output<BucketReplicationConfigRuleDestinationMetricsGetArgs> metrics,
        @Nullable Output<BucketReplicationConfigRuleDestinationReplicationTimeGetArgs> replicationTime,
        @Nullable Output<String> storageClass) {
        this.accessControlTranslation = accessControlTranslation;
        this.account = account;
        this.bucket = Objects.requireNonNull(bucket, "expected parameter 'bucket' to be non-null");
        this.encryptionConfiguration = encryptionConfiguration;
        this.metrics = metrics;
        this.replicationTime = replicationTime;
        this.storageClass = storageClass;
    }

    private BucketReplicationConfigRuleDestinationGetArgs() {
        this.accessControlTranslation = Codegen.empty();
        this.account = Codegen.empty();
        this.bucket = Codegen.empty();
        this.encryptionConfiguration = Codegen.empty();
        this.metrics = Codegen.empty();
        this.replicationTime = Codegen.empty();
        this.storageClass = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BucketReplicationConfigRuleDestinationGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<BucketReplicationConfigRuleDestinationAccessControlTranslationGetArgs> accessControlTranslation;
        private @Nullable Output<String> account;
        private Output<String> bucket;
        private @Nullable Output<BucketReplicationConfigRuleDestinationEncryptionConfigurationGetArgs> encryptionConfiguration;
        private @Nullable Output<BucketReplicationConfigRuleDestinationMetricsGetArgs> metrics;
        private @Nullable Output<BucketReplicationConfigRuleDestinationReplicationTimeGetArgs> replicationTime;
        private @Nullable Output<String> storageClass;

        public Builder() {
    	      // Empty
        }

        public Builder(BucketReplicationConfigRuleDestinationGetArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessControlTranslation = defaults.accessControlTranslation;
    	      this.account = defaults.account;
    	      this.bucket = defaults.bucket;
    	      this.encryptionConfiguration = defaults.encryptionConfiguration;
    	      this.metrics = defaults.metrics;
    	      this.replicationTime = defaults.replicationTime;
    	      this.storageClass = defaults.storageClass;
        }

        public Builder accessControlTranslation(@Nullable Output<BucketReplicationConfigRuleDestinationAccessControlTranslationGetArgs> accessControlTranslation) {
            this.accessControlTranslation = accessControlTranslation;
            return this;
        }
        public Builder accessControlTranslation(@Nullable BucketReplicationConfigRuleDestinationAccessControlTranslationGetArgs accessControlTranslation) {
            this.accessControlTranslation = Codegen.ofNullable(accessControlTranslation);
            return this;
        }
        public Builder account(@Nullable Output<String> account) {
            this.account = account;
            return this;
        }
        public Builder account(@Nullable String account) {
            this.account = Codegen.ofNullable(account);
            return this;
        }
        public Builder bucket(Output<String> bucket) {
            this.bucket = Objects.requireNonNull(bucket);
            return this;
        }
        public Builder bucket(String bucket) {
            this.bucket = Output.of(Objects.requireNonNull(bucket));
            return this;
        }
        public Builder encryptionConfiguration(@Nullable Output<BucketReplicationConfigRuleDestinationEncryptionConfigurationGetArgs> encryptionConfiguration) {
            this.encryptionConfiguration = encryptionConfiguration;
            return this;
        }
        public Builder encryptionConfiguration(@Nullable BucketReplicationConfigRuleDestinationEncryptionConfigurationGetArgs encryptionConfiguration) {
            this.encryptionConfiguration = Codegen.ofNullable(encryptionConfiguration);
            return this;
        }
        public Builder metrics(@Nullable Output<BucketReplicationConfigRuleDestinationMetricsGetArgs> metrics) {
            this.metrics = metrics;
            return this;
        }
        public Builder metrics(@Nullable BucketReplicationConfigRuleDestinationMetricsGetArgs metrics) {
            this.metrics = Codegen.ofNullable(metrics);
            return this;
        }
        public Builder replicationTime(@Nullable Output<BucketReplicationConfigRuleDestinationReplicationTimeGetArgs> replicationTime) {
            this.replicationTime = replicationTime;
            return this;
        }
        public Builder replicationTime(@Nullable BucketReplicationConfigRuleDestinationReplicationTimeGetArgs replicationTime) {
            this.replicationTime = Codegen.ofNullable(replicationTime);
            return this;
        }
        public Builder storageClass(@Nullable Output<String> storageClass) {
            this.storageClass = storageClass;
            return this;
        }
        public Builder storageClass(@Nullable String storageClass) {
            this.storageClass = Codegen.ofNullable(storageClass);
            return this;
        }        public BucketReplicationConfigRuleDestinationGetArgs build() {
            return new BucketReplicationConfigRuleDestinationGetArgs(accessControlTranslation, account, bucket, encryptionConfiguration, metrics, replicationTime, storageClass);
        }
    }
}
