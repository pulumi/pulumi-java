// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.iam;

import io.pulumi.aws.Utilities;
import io.pulumi.aws.iam.UserGroupMembershipArgs;
import io.pulumi.aws.iam.inputs.UserGroupMembershipState;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Export;
import io.pulumi.core.annotations.ResourceType;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * Provides a resource for adding an IAM User to IAM Groups. This
 * resource can be used multiple times with the same user for non-overlapping
 * groups.
 * 
 * To exclusively manage the users in a group, see the
 * `aws.iam.GroupMembership` resource.
 * 
 * {{% examples %}}
 * ## Example Usage
 * {{% example %}}
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 * 
 * const user1 = new aws.iam.User("user1", {});
 * const group1 = new aws.iam.Group("group1", {});
 * const group2 = new aws.iam.Group("group2", {});
 * const example1 = new aws.iam.UserGroupMembership("example1", {
 *     user: user1.name,
 *     groups: [
 *         group1.name,
 *         group2.name,
 *     ],
 * });
 * const group3 = new aws.iam.Group("group3", {});
 * const example2 = new aws.iam.UserGroupMembership("example2", {
 *     user: user1.name,
 *     groups: [group3.name],
 * });
 * ```
 * ```python
 * import pulumi
 * import pulumi_aws as aws
 * 
 * user1 = aws.iam.User("user1")
 * group1 = aws.iam.Group("group1")
 * group2 = aws.iam.Group("group2")
 * example1 = aws.iam.UserGroupMembership("example1",
 *     user=user1.name,
 *     groups=[
 *         group1.name,
 *         group2.name,
 *     ])
 * group3 = aws.iam.Group("group3")
 * example2 = aws.iam.UserGroupMembership("example2",
 *     user=user1.name,
 *     groups=[group3.name])
 * ```
 * ```csharp
 * using Pulumi;
 * using Aws = Pulumi.Aws;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var user1 = new Aws.Iam.User("user1", new Aws.Iam.UserArgs
 *         {
 *         });
 *         var group1 = new Aws.Iam.Group("group1", new Aws.Iam.GroupArgs
 *         {
 *         });
 *         var group2 = new Aws.Iam.Group("group2", new Aws.Iam.GroupArgs
 *         {
 *         });
 *         var example1 = new Aws.Iam.UserGroupMembership("example1", new Aws.Iam.UserGroupMembershipArgs
 *         {
 *             User = user1.Name,
 *             Groups = 
 *             {
 *                 group1.Name,
 *                 group2.Name,
 *             },
 *         });
 *         var group3 = new Aws.Iam.Group("group3", new Aws.Iam.GroupArgs
 *         {
 *         });
 *         var example2 = new Aws.Iam.UserGroupMembership("example2", new Aws.Iam.UserGroupMembershipArgs
 *         {
 *             User = user1.Name,
 *             Groups = 
 *             {
 *                 group3.Name,
 *             },
 *         });
 *     }
 * 
 * }
 * ```
 * ```go
 * package main
 * 
 * import (
 * 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/iam"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		user1, err := iam.NewUser(ctx, "user1", nil)
 * 		if err != nil {
 * 			return err
 * 		}
 * 		group1, err := iam.NewGroup(ctx, "group1", nil)
 * 		if err != nil {
 * 			return err
 * 		}
 * 		group2, err := iam.NewGroup(ctx, "group2", nil)
 * 		if err != nil {
 * 			return err
 * 		}
 * 		_, err = iam.NewUserGroupMembership(ctx, "example1", &iam.UserGroupMembershipArgs{
 * 			User: user1.Name,
 * 			Groups: pulumi.StringArray{
 * 				group1.Name,
 * 				group2.Name,
 * 			},
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		group3, err := iam.NewGroup(ctx, "group3", nil)
 * 		if err != nil {
 * 			return err
 * 		}
 * 		_, err = iam.NewUserGroupMembership(ctx, "example2", &iam.UserGroupMembershipArgs{
 * 			User: user1.Name,
 * 			Groups: pulumi.StringArray{
 * 				group3.Name,
 * 			},
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * ```
 * {{% /example %}}
 * {{% /examples %}}
 * 
 * ## Import
 * 
 * IAM user group membership can be imported using the user name and group names separated by `/`.
 * 
 * ```sh
 *  $ pulumi import aws:iam/userGroupMembership:UserGroupMembership example1 user1/group1/group2
 * ```
 * 
 *  
 */
@ResourceType(type="aws:iam/userGroupMembership:UserGroupMembership")
public class UserGroupMembership extends io.pulumi.resources.CustomResource {
    /**
     * A list of IAM Groups to add the user to
     * 
     */
    @Export(name="groups", type=List.class, parameters={String.class})
    private Output<List<String>> groups;

    /**
     * @return A list of IAM Groups to add the user to
     * 
     */
    public Output<List<String>> getGroups() {
        return this.groups;
    }
    /**
     * The name of the IAM User to add to groups
     * 
     */
    @Export(name="user", type=String.class, parameters={})
    private Output<String> user;

    /**
     * @return The name of the IAM User to add to groups
     * 
     */
    public Output<String> getUser() {
        return this.user;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public UserGroupMembership(String name) {
        this(name, UserGroupMembershipArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public UserGroupMembership(String name, UserGroupMembershipArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public UserGroupMembership(String name, UserGroupMembershipArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:iam/userGroupMembership:UserGroupMembership", name, args == null ? UserGroupMembershipArgs.Empty : args, makeResourceOptions(options, Output.empty()));
    }

    private UserGroupMembership(String name, Output<String> id, @Nullable UserGroupMembershipState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:iam/userGroupMembership:UserGroupMembership", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static UserGroupMembership get(String name, Output<String> id, @Nullable UserGroupMembershipState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new UserGroupMembership(name, id, state, options);
    }
}
