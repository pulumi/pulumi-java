// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.globalaccelerator;

import io.pulumi.aws.globalaccelerator.inputs.ListenerPortRangeArgs;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ListenerArgs extends io.pulumi.resources.ResourceArgs {

    public static final ListenerArgs Empty = new ListenerArgs();

    /**
     * The Amazon Resource Name (ARN) of your accelerator.
     * 
     */
    @InputImport(name="acceleratorArn", required=true)
      private final Input<String> acceleratorArn;

    public Input<String> getAcceleratorArn() {
        return this.acceleratorArn;
    }

    /**
     * Direct all requests from a user to the same endpoint. Valid values are `NONE`, `SOURCE_IP`. Default: `NONE`. If `NONE`, Global Accelerator uses the "five-tuple" properties of source IP address, source port, destination IP address, destination port, and protocol to select the hash value. If `SOURCE_IP`, Global Accelerator uses the "two-tuple" properties of source (client) IP address and destination IP address to select the hash value.
     * 
     */
    @InputImport(name="clientAffinity")
      private final @Nullable Input<String> clientAffinity;

    public Input<String> getClientAffinity() {
        return this.clientAffinity == null ? Input.empty() : this.clientAffinity;
    }

    /**
     * The list of port ranges for the connections from clients to the accelerator. Fields documented below.
     * 
     */
    @InputImport(name="portRanges", required=true)
      private final Input<List<ListenerPortRangeArgs>> portRanges;

    public Input<List<ListenerPortRangeArgs>> getPortRanges() {
        return this.portRanges;
    }

    /**
     * The protocol for the connections from clients to the accelerator. Valid values are `TCP`, `UDP`.
     * 
     */
    @InputImport(name="protocol", required=true)
      private final Input<String> protocol;

    public Input<String> getProtocol() {
        return this.protocol;
    }

    public ListenerArgs(
        Input<String> acceleratorArn,
        @Nullable Input<String> clientAffinity,
        Input<List<ListenerPortRangeArgs>> portRanges,
        Input<String> protocol) {
        this.acceleratorArn = Objects.requireNonNull(acceleratorArn, "expected parameter 'acceleratorArn' to be non-null");
        this.clientAffinity = clientAffinity;
        this.portRanges = Objects.requireNonNull(portRanges, "expected parameter 'portRanges' to be non-null");
        this.protocol = Objects.requireNonNull(protocol, "expected parameter 'protocol' to be non-null");
    }

    private ListenerArgs() {
        this.acceleratorArn = Input.empty();
        this.clientAffinity = Input.empty();
        this.portRanges = Input.empty();
        this.protocol = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ListenerArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<String> acceleratorArn;
        private @Nullable Input<String> clientAffinity;
        private Input<List<ListenerPortRangeArgs>> portRanges;
        private Input<String> protocol;

        public Builder() {
    	      // Empty
        }

        public Builder(ListenerArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.acceleratorArn = defaults.acceleratorArn;
    	      this.clientAffinity = defaults.clientAffinity;
    	      this.portRanges = defaults.portRanges;
    	      this.protocol = defaults.protocol;
        }

        public Builder acceleratorArn(Input<String> acceleratorArn) {
            this.acceleratorArn = Objects.requireNonNull(acceleratorArn);
            return this;
        }

        public Builder acceleratorArn(String acceleratorArn) {
            this.acceleratorArn = Input.of(Objects.requireNonNull(acceleratorArn));
            return this;
        }

        public Builder clientAffinity(@Nullable Input<String> clientAffinity) {
            this.clientAffinity = clientAffinity;
            return this;
        }

        public Builder clientAffinity(@Nullable String clientAffinity) {
            this.clientAffinity = Input.ofNullable(clientAffinity);
            return this;
        }

        public Builder portRanges(Input<List<ListenerPortRangeArgs>> portRanges) {
            this.portRanges = Objects.requireNonNull(portRanges);
            return this;
        }

        public Builder portRanges(List<ListenerPortRangeArgs> portRanges) {
            this.portRanges = Input.of(Objects.requireNonNull(portRanges));
            return this;
        }

        public Builder protocol(Input<String> protocol) {
            this.protocol = Objects.requireNonNull(protocol);
            return this;
        }

        public Builder protocol(String protocol) {
            this.protocol = Input.of(Objects.requireNonNull(protocol));
            return this;
        }
        public ListenerArgs build() {
            return new ListenerArgs(acceleratorArn, clientAffinity, portRanges, protocol);
        }
    }
}
