// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.glue.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class CrawlerCatalogTargetArgs extends io.pulumi.resources.ResourceArgs {

    public static final CrawlerCatalogTargetArgs Empty = new CrawlerCatalogTargetArgs();

    /**
     * The name of the Glue database to be synchronized.
     * 
     */
    @InputImport(name="databaseName", required=true)
      private final Input<String> databaseName;

    public Input<String> getDatabaseName() {
        return this.databaseName;
    }

    /**
     * A list of catalog tables to be synchronized.
     * 
     */
    @InputImport(name="tables", required=true)
      private final Input<List<String>> tables;

    public Input<List<String>> getTables() {
        return this.tables;
    }

    public CrawlerCatalogTargetArgs(
        Input<String> databaseName,
        Input<List<String>> tables) {
        this.databaseName = Objects.requireNonNull(databaseName, "expected parameter 'databaseName' to be non-null");
        this.tables = Objects.requireNonNull(tables, "expected parameter 'tables' to be non-null");
    }

    private CrawlerCatalogTargetArgs() {
        this.databaseName = Input.empty();
        this.tables = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CrawlerCatalogTargetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<String> databaseName;
        private Input<List<String>> tables;

        public Builder() {
    	      // Empty
        }

        public Builder(CrawlerCatalogTargetArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.databaseName = defaults.databaseName;
    	      this.tables = defaults.tables;
        }

        public Builder setDatabaseName(Input<String> databaseName) {
            this.databaseName = Objects.requireNonNull(databaseName);
            return this;
        }

        public Builder setDatabaseName(String databaseName) {
            this.databaseName = Input.of(Objects.requireNonNull(databaseName));
            return this;
        }

        public Builder setTables(Input<List<String>> tables) {
            this.tables = Objects.requireNonNull(tables);
            return this;
        }

        public Builder setTables(List<String> tables) {
            this.tables = Input.of(Objects.requireNonNull(tables));
            return this;
        }
        public CrawlerCatalogTargetArgs build() {
            return new CrawlerCatalogTargetArgs(databaseName, tables);
        }
    }
}
