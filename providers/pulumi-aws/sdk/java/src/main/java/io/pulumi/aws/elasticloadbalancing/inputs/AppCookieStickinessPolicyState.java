// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.elasticloadbalancing.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.InputImport;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class AppCookieStickinessPolicyState extends io.pulumi.resources.ResourceArgs {

    public static final AppCookieStickinessPolicyState Empty = new AppCookieStickinessPolicyState();

    /**
     * The application cookie whose lifetime the ELB's cookie should follow.
     * 
     */
    @InputImport(name="cookieName")
      private final @Nullable Output<String> cookieName;

    public Output<String> getCookieName() {
        return this.cookieName == null ? Output.empty() : this.cookieName;
    }

    /**
     * The load balancer port to which the policy
     * should be applied. This must be an active listener on the load
     * balancer.
     * 
     */
    @InputImport(name="lbPort")
      private final @Nullable Output<Integer> lbPort;

    public Output<Integer> getLbPort() {
        return this.lbPort == null ? Output.empty() : this.lbPort;
    }

    /**
     * The name of load balancer to which the policy
     * should be attached.
     * 
     */
    @InputImport(name="loadBalancer")
      private final @Nullable Output<String> loadBalancer;

    public Output<String> getLoadBalancer() {
        return this.loadBalancer == null ? Output.empty() : this.loadBalancer;
    }

    /**
     * The name of the stickiness policy.
     * 
     */
    @InputImport(name="name")
      private final @Nullable Output<String> name;

    public Output<String> getName() {
        return this.name == null ? Output.empty() : this.name;
    }

    public AppCookieStickinessPolicyState(
        @Nullable Output<String> cookieName,
        @Nullable Output<Integer> lbPort,
        @Nullable Output<String> loadBalancer,
        @Nullable Output<String> name) {
        this.cookieName = cookieName;
        this.lbPort = lbPort;
        this.loadBalancer = loadBalancer;
        this.name = name;
    }

    private AppCookieStickinessPolicyState() {
        this.cookieName = Output.empty();
        this.lbPort = Output.empty();
        this.loadBalancer = Output.empty();
        this.name = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AppCookieStickinessPolicyState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> cookieName;
        private @Nullable Output<Integer> lbPort;
        private @Nullable Output<String> loadBalancer;
        private @Nullable Output<String> name;

        public Builder() {
    	      // Empty
        }

        public Builder(AppCookieStickinessPolicyState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cookieName = defaults.cookieName;
    	      this.lbPort = defaults.lbPort;
    	      this.loadBalancer = defaults.loadBalancer;
    	      this.name = defaults.name;
        }

        public Builder cookieName(@Nullable Output<String> cookieName) {
            this.cookieName = cookieName;
            return this;
        }

        public Builder cookieName(@Nullable String cookieName) {
            this.cookieName = Output.ofNullable(cookieName);
            return this;
        }

        public Builder lbPort(@Nullable Output<Integer> lbPort) {
            this.lbPort = lbPort;
            return this;
        }

        public Builder lbPort(@Nullable Integer lbPort) {
            this.lbPort = Output.ofNullable(lbPort);
            return this;
        }

        public Builder loadBalancer(@Nullable Output<String> loadBalancer) {
            this.loadBalancer = loadBalancer;
            return this;
        }

        public Builder loadBalancer(@Nullable String loadBalancer) {
            this.loadBalancer = Output.ofNullable(loadBalancer);
            return this;
        }

        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }

        public Builder name(@Nullable String name) {
            this.name = Output.ofNullable(name);
            return this;
        }
        public AppCookieStickinessPolicyState build() {
            return new AppCookieStickinessPolicyState(cookieName, lbPort, loadBalancer, name);
        }
    }
}
