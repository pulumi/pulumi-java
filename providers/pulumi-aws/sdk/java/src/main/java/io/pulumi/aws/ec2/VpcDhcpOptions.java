// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.ec2;

import io.pulumi.aws.Utilities;
import io.pulumi.aws.ec2.VpcDhcpOptionsArgs;
import io.pulumi.aws.ec2.inputs.VpcDhcpOptionsState;
import io.pulumi.core.Input;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.OutputExport;
import io.pulumi.core.annotations.ResourceType;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;

/**
 * Provides a VPC DHCP Options resource.
 * 
 * ## Example Usage
 * ## Remarks
 * 
 * * Notice that all arguments are optional but you have to specify at least one argument.
 * * `domain_name_servers`, `netbios_name_servers`, `ntp_servers` are limited by AWS to maximum four servers only.
 * * To actually use the DHCP Options Set you need to associate it to a VPC using `aws.ec2.VpcDhcpOptionsAssociation`.
 * * If you delete a DHCP Options Set, all VPCs using it will be associated to AWS's `default` DHCP Option Set.
 * * In most cases unless you're configuring your own DNS you'll want to set `domain_name_servers` to `AmazonProvidedDNS`.
 * 
 * ## Import
 * 
 * VPC DHCP Options can be imported using the `dhcp options id`, e.g.,
 * 
 * ```sh
 *  $ pulumi import aws:ec2/vpcDhcpOptions:VpcDhcpOptions my_options dopt-d9070ebb
 * ```
 * 
 */
@ResourceType(type="aws:ec2/vpcDhcpOptions:VpcDhcpOptions")
public class VpcDhcpOptions extends io.pulumi.resources.CustomResource {
    /**
     * The ARN of the DHCP Options Set.
     * 
     */
    @OutputExport(name="arn", type=String.class, parameters={})
    private Output<String> arn;

    /**
     * @return The ARN of the DHCP Options Set.
     * 
     */
    public Output<String> getArn() {
        return this.arn;
    }
    /**
     * the suffix domain name to use by default when resolving non Fully Qualified Domain Names. In other words, this is what ends up being the `search` value in the `/etc/resolv.conf` file.
     * 
     */
    @OutputExport(name="domainName", type=String.class, parameters={})
    private Output</* @Nullable */ String> domainName;

    /**
     * @return the suffix domain name to use by default when resolving non Fully Qualified Domain Names. In other words, this is what ends up being the `search` value in the `/etc/resolv.conf` file.
     * 
     */
    public Output</* @Nullable */ String> getDomainName() {
        return this.domainName;
    }
    /**
     * List of name servers to configure in `/etc/resolv.conf`. If you want to use the default AWS nameservers you should set this to `AmazonProvidedDNS`.
     * 
     */
    @OutputExport(name="domainNameServers", type=List.class, parameters={String.class})
    private Output</* @Nullable */ List<String>> domainNameServers;

    /**
     * @return List of name servers to configure in `/etc/resolv.conf`. If you want to use the default AWS nameservers you should set this to `AmazonProvidedDNS`.
     * 
     */
    public Output</* @Nullable */ List<String>> getDomainNameServers() {
        return this.domainNameServers;
    }
    /**
     * List of NETBIOS name servers.
     * 
     */
    @OutputExport(name="netbiosNameServers", type=List.class, parameters={String.class})
    private Output</* @Nullable */ List<String>> netbiosNameServers;

    /**
     * @return List of NETBIOS name servers.
     * 
     */
    public Output</* @Nullable */ List<String>> getNetbiosNameServers() {
        return this.netbiosNameServers;
    }
    /**
     * The NetBIOS node type (1, 2, 4, or 8). AWS recommends to specify 2 since broadcast and multicast are not supported in their network. For more information about these node types, see [RFC 2132](http://www.ietf.org/rfc/rfc2132.txt).
     * 
     */
    @OutputExport(name="netbiosNodeType", type=String.class, parameters={})
    private Output</* @Nullable */ String> netbiosNodeType;

    /**
     * @return The NetBIOS node type (1, 2, 4, or 8). AWS recommends to specify 2 since broadcast and multicast are not supported in their network. For more information about these node types, see [RFC 2132](http://www.ietf.org/rfc/rfc2132.txt).
     * 
     */
    public Output</* @Nullable */ String> getNetbiosNodeType() {
        return this.netbiosNodeType;
    }
    /**
     * List of NTP servers to configure.
     * 
     */
    @OutputExport(name="ntpServers", type=List.class, parameters={String.class})
    private Output</* @Nullable */ List<String>> ntpServers;

    /**
     * @return List of NTP servers to configure.
     * 
     */
    public Output</* @Nullable */ List<String>> getNtpServers() {
        return this.ntpServers;
    }
    /**
     * The ID of the AWS account that owns the DHCP options set.
     * 
     */
    @OutputExport(name="ownerId", type=String.class, parameters={})
    private Output<String> ownerId;

    /**
     * @return The ID of the AWS account that owns the DHCP options set.
     * 
     */
    public Output<String> getOwnerId() {
        return this.ownerId;
    }
    /**
     * A map of tags to assign to the resource. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @OutputExport(name="tags", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return A map of tags to assign to the resource. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Output</* @Nullable */ Map<String,String>> getTags() {
        return this.tags;
    }
    /**
     * A map of tags assigned to the resource, including those inherited from the provider .
     * 
     */
    @OutputExport(name="tagsAll", type=Map.class, parameters={String.class, String.class})
    private Output<Map<String,String>> tagsAll;

    /**
     * @return A map of tags assigned to the resource, including those inherited from the provider .
     * 
     */
    public Output<Map<String,String>> getTagsAll() {
        return this.tagsAll;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public VpcDhcpOptions(String name) {
        this(name, VpcDhcpOptionsArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public VpcDhcpOptions(String name, @Nullable VpcDhcpOptionsArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public VpcDhcpOptions(String name, @Nullable VpcDhcpOptionsArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:ec2/vpcDhcpOptions:VpcDhcpOptions", name, args == null ? VpcDhcpOptionsArgs.Empty : args, makeResourceOptions(options, Input.empty()));
    }

    private VpcDhcpOptions(String name, Input<String> id, @Nullable VpcDhcpOptionsState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:ec2/vpcDhcpOptions:VpcDhcpOptions", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Input<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .setVersion(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static VpcDhcpOptions get(String name, Input<String> id, @Nullable VpcDhcpOptionsState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new VpcDhcpOptions(name, id, state, options);
    }
}
