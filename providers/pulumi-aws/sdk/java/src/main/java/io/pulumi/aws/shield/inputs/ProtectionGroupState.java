// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.shield.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ProtectionGroupState extends io.pulumi.resources.ResourceArgs {

    public static final ProtectionGroupState Empty = new ProtectionGroupState();

    /**
     * Defines how AWS Shield combines resource data for the group in order to detect, mitigate, and report events.
     * 
     */
    @Import(name="aggregation")
      private final @Nullable Output<String> aggregation;

    public Output<String> aggregation() {
        return this.aggregation == null ? Codegen.empty() : this.aggregation;
    }

    /**
     * The Amazon Resource Names (ARNs) of the resources to include in the protection group. You must set this when you set `pattern` to ARBITRARY and you must not set it for any other `pattern` setting.
     * 
     */
    @Import(name="members")
      private final @Nullable Output<List<String>> members;

    public Output<List<String>> members() {
        return this.members == null ? Codegen.empty() : this.members;
    }

    /**
     * The criteria to use to choose the protected resources for inclusion in the group.
     * 
     */
    @Import(name="pattern")
      private final @Nullable Output<String> pattern;

    public Output<String> pattern() {
        return this.pattern == null ? Codegen.empty() : this.pattern;
    }

    /**
     * The ARN (Amazon Resource Name) of the protection group.
     * 
     */
    @Import(name="protectionGroupArn")
      private final @Nullable Output<String> protectionGroupArn;

    public Output<String> protectionGroupArn() {
        return this.protectionGroupArn == null ? Codegen.empty() : this.protectionGroupArn;
    }

    /**
     * The name of the protection group.
     * 
     */
    @Import(name="protectionGroupId")
      private final @Nullable Output<String> protectionGroupId;

    public Output<String> protectionGroupId() {
        return this.protectionGroupId == null ? Codegen.empty() : this.protectionGroupId;
    }

    /**
     * The resource type to include in the protection group. You must set this when you set `pattern` to BY_RESOURCE_TYPE and you must not set it for any other `pattern` setting.
     * 
     */
    @Import(name="resourceType")
      private final @Nullable Output<String> resourceType;

    public Output<String> resourceType() {
        return this.resourceType == null ? Codegen.empty() : this.resourceType;
    }

    /**
     * Key-value map of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Import(name="tags")
      private final @Nullable Output<Map<String,String>> tags;

    public Output<Map<String,String>> tags() {
        return this.tags == null ? Codegen.empty() : this.tags;
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     */
    @Import(name="tagsAll")
      private final @Nullable Output<Map<String,String>> tagsAll;

    public Output<Map<String,String>> tagsAll() {
        return this.tagsAll == null ? Codegen.empty() : this.tagsAll;
    }

    public ProtectionGroupState(
        @Nullable Output<String> aggregation,
        @Nullable Output<List<String>> members,
        @Nullable Output<String> pattern,
        @Nullable Output<String> protectionGroupArn,
        @Nullable Output<String> protectionGroupId,
        @Nullable Output<String> resourceType,
        @Nullable Output<Map<String,String>> tags,
        @Nullable Output<Map<String,String>> tagsAll) {
        this.aggregation = aggregation;
        this.members = members;
        this.pattern = pattern;
        this.protectionGroupArn = protectionGroupArn;
        this.protectionGroupId = protectionGroupId;
        this.resourceType = resourceType;
        this.tags = tags;
        this.tagsAll = tagsAll;
    }

    private ProtectionGroupState() {
        this.aggregation = Codegen.empty();
        this.members = Codegen.empty();
        this.pattern = Codegen.empty();
        this.protectionGroupArn = Codegen.empty();
        this.protectionGroupId = Codegen.empty();
        this.resourceType = Codegen.empty();
        this.tags = Codegen.empty();
        this.tagsAll = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ProtectionGroupState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> aggregation;
        private @Nullable Output<List<String>> members;
        private @Nullable Output<String> pattern;
        private @Nullable Output<String> protectionGroupArn;
        private @Nullable Output<String> protectionGroupId;
        private @Nullable Output<String> resourceType;
        private @Nullable Output<Map<String,String>> tags;
        private @Nullable Output<Map<String,String>> tagsAll;

        public Builder() {
    	      // Empty
        }

        public Builder(ProtectionGroupState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.aggregation = defaults.aggregation;
    	      this.members = defaults.members;
    	      this.pattern = defaults.pattern;
    	      this.protectionGroupArn = defaults.protectionGroupArn;
    	      this.protectionGroupId = defaults.protectionGroupId;
    	      this.resourceType = defaults.resourceType;
    	      this.tags = defaults.tags;
    	      this.tagsAll = defaults.tagsAll;
        }

        public Builder aggregation(@Nullable Output<String> aggregation) {
            this.aggregation = aggregation;
            return this;
        }
        public Builder aggregation(@Nullable String aggregation) {
            this.aggregation = Codegen.ofNullable(aggregation);
            return this;
        }
        public Builder members(@Nullable Output<List<String>> members) {
            this.members = members;
            return this;
        }
        public Builder members(@Nullable List<String> members) {
            this.members = Codegen.ofNullable(members);
            return this;
        }
        public Builder members(String... members) {
            return members(List.of(members));
        }
        public Builder pattern(@Nullable Output<String> pattern) {
            this.pattern = pattern;
            return this;
        }
        public Builder pattern(@Nullable String pattern) {
            this.pattern = Codegen.ofNullable(pattern);
            return this;
        }
        public Builder protectionGroupArn(@Nullable Output<String> protectionGroupArn) {
            this.protectionGroupArn = protectionGroupArn;
            return this;
        }
        public Builder protectionGroupArn(@Nullable String protectionGroupArn) {
            this.protectionGroupArn = Codegen.ofNullable(protectionGroupArn);
            return this;
        }
        public Builder protectionGroupId(@Nullable Output<String> protectionGroupId) {
            this.protectionGroupId = protectionGroupId;
            return this;
        }
        public Builder protectionGroupId(@Nullable String protectionGroupId) {
            this.protectionGroupId = Codegen.ofNullable(protectionGroupId);
            return this;
        }
        public Builder resourceType(@Nullable Output<String> resourceType) {
            this.resourceType = resourceType;
            return this;
        }
        public Builder resourceType(@Nullable String resourceType) {
            this.resourceType = Codegen.ofNullable(resourceType);
            return this;
        }
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = Codegen.ofNullable(tags);
            return this;
        }
        public Builder tagsAll(@Nullable Output<Map<String,String>> tagsAll) {
            this.tagsAll = tagsAll;
            return this;
        }
        public Builder tagsAll(@Nullable Map<String,String> tagsAll) {
            this.tagsAll = Codegen.ofNullable(tagsAll);
            return this;
        }        public ProtectionGroupState build() {
            return new ProtectionGroupState(aggregation, members, pattern, protectionGroupArn, protectionGroupId, resourceType, tags, tagsAll);
        }
    }
}
