// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.cloudsearch.inputs;

import io.pulumi.aws.cloudsearch.inputs.DomainEndpointOptionsGetArgs;
import io.pulumi.aws.cloudsearch.inputs.DomainIndexFieldGetArgs;
import io.pulumi.aws.cloudsearch.inputs.DomainScalingParametersGetArgs;
import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class DomainState extends io.pulumi.resources.ResourceArgs {

    public static final DomainState Empty = new DomainState();

    /**
     * The domain's ARN.
     * 
     */
    @InputImport(name="arn")
    private final @Nullable Input<String> arn;

    public Input<String> getArn() {
        return this.arn == null ? Input.empty() : this.arn;
    }

    /**
     * The service endpoint for updating documents in a search domain.
     * 
     */
    @InputImport(name="documentServiceEndpoint")
    private final @Nullable Input<String> documentServiceEndpoint;

    public Input<String> getDocumentServiceEndpoint() {
        return this.documentServiceEndpoint == null ? Input.empty() : this.documentServiceEndpoint;
    }

    /**
     * An internally generated unique identifier for the domain.
     * 
     */
    @InputImport(name="domainId")
    private final @Nullable Input<String> domainId;

    public Input<String> getDomainId() {
        return this.domainId == null ? Input.empty() : this.domainId;
    }

    /**
     * Domain endpoint options. Documented below.
     * 
     */
    @InputImport(name="endpointOptions")
    private final @Nullable Input<DomainEndpointOptionsGetArgs> endpointOptions;

    public Input<DomainEndpointOptionsGetArgs> getEndpointOptions() {
        return this.endpointOptions == null ? Input.empty() : this.endpointOptions;
    }

    /**
     * The index fields for documents added to the domain. Documented below.
     * 
     */
    @InputImport(name="indexFields")
    private final @Nullable Input<List<DomainIndexFieldGetArgs>> indexFields;

    public Input<List<DomainIndexFieldGetArgs>> getIndexFields() {
        return this.indexFields == null ? Input.empty() : this.indexFields;
    }

    /**
     * Whether or not to maintain extra instances for the domain in a second Availability Zone to ensure high availability.
     * 
     */
    @InputImport(name="multiAz")
    private final @Nullable Input<Boolean> multiAz;

    public Input<Boolean> getMultiAz() {
        return this.multiAz == null ? Input.empty() : this.multiAz;
    }

    /**
     * A unique name for the field. Field names must begin with a letter and be at least 3 and no more than 64 characters long. The allowed characters are: `a`-`z` (lower-case letters), `0`-`9`, and `_` (underscore). The name `score` is reserved and cannot be used as a field name.
     * 
     */
    @InputImport(name="name")
    private final @Nullable Input<String> name;

    public Input<String> getName() {
        return this.name == null ? Input.empty() : this.name;
    }

    /**
     * Domain scaling parameters. Documented below.
     * 
     */
    @InputImport(name="scalingParameters")
    private final @Nullable Input<DomainScalingParametersGetArgs> scalingParameters;

    public Input<DomainScalingParametersGetArgs> getScalingParameters() {
        return this.scalingParameters == null ? Input.empty() : this.scalingParameters;
    }

    /**
     * The service endpoint for requesting search results from a search domain.
     * 
     */
    @InputImport(name="searchServiceEndpoint")
    private final @Nullable Input<String> searchServiceEndpoint;

    public Input<String> getSearchServiceEndpoint() {
        return this.searchServiceEndpoint == null ? Input.empty() : this.searchServiceEndpoint;
    }

    public DomainState(
        @Nullable Input<String> arn,
        @Nullable Input<String> documentServiceEndpoint,
        @Nullable Input<String> domainId,
        @Nullable Input<DomainEndpointOptionsGetArgs> endpointOptions,
        @Nullable Input<List<DomainIndexFieldGetArgs>> indexFields,
        @Nullable Input<Boolean> multiAz,
        @Nullable Input<String> name,
        @Nullable Input<DomainScalingParametersGetArgs> scalingParameters,
        @Nullable Input<String> searchServiceEndpoint) {
        this.arn = arn;
        this.documentServiceEndpoint = documentServiceEndpoint;
        this.domainId = domainId;
        this.endpointOptions = endpointOptions;
        this.indexFields = indexFields;
        this.multiAz = multiAz;
        this.name = name;
        this.scalingParameters = scalingParameters;
        this.searchServiceEndpoint = searchServiceEndpoint;
    }

    private DomainState() {
        this.arn = Input.empty();
        this.documentServiceEndpoint = Input.empty();
        this.domainId = Input.empty();
        this.endpointOptions = Input.empty();
        this.indexFields = Input.empty();
        this.multiAz = Input.empty();
        this.name = Input.empty();
        this.scalingParameters = Input.empty();
        this.searchServiceEndpoint = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DomainState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> arn;
        private @Nullable Input<String> documentServiceEndpoint;
        private @Nullable Input<String> domainId;
        private @Nullable Input<DomainEndpointOptionsGetArgs> endpointOptions;
        private @Nullable Input<List<DomainIndexFieldGetArgs>> indexFields;
        private @Nullable Input<Boolean> multiAz;
        private @Nullable Input<String> name;
        private @Nullable Input<DomainScalingParametersGetArgs> scalingParameters;
        private @Nullable Input<String> searchServiceEndpoint;

        public Builder() {
    	      // Empty
        }

        public Builder(DomainState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.documentServiceEndpoint = defaults.documentServiceEndpoint;
    	      this.domainId = defaults.domainId;
    	      this.endpointOptions = defaults.endpointOptions;
    	      this.indexFields = defaults.indexFields;
    	      this.multiAz = defaults.multiAz;
    	      this.name = defaults.name;
    	      this.scalingParameters = defaults.scalingParameters;
    	      this.searchServiceEndpoint = defaults.searchServiceEndpoint;
        }

        public Builder setArn(@Nullable Input<String> arn) {
            this.arn = arn;
            return this;
        }

        public Builder setArn(@Nullable String arn) {
            this.arn = Input.ofNullable(arn);
            return this;
        }

        public Builder setDocumentServiceEndpoint(@Nullable Input<String> documentServiceEndpoint) {
            this.documentServiceEndpoint = documentServiceEndpoint;
            return this;
        }

        public Builder setDocumentServiceEndpoint(@Nullable String documentServiceEndpoint) {
            this.documentServiceEndpoint = Input.ofNullable(documentServiceEndpoint);
            return this;
        }

        public Builder setDomainId(@Nullable Input<String> domainId) {
            this.domainId = domainId;
            return this;
        }

        public Builder setDomainId(@Nullable String domainId) {
            this.domainId = Input.ofNullable(domainId);
            return this;
        }

        public Builder setEndpointOptions(@Nullable Input<DomainEndpointOptionsGetArgs> endpointOptions) {
            this.endpointOptions = endpointOptions;
            return this;
        }

        public Builder setEndpointOptions(@Nullable DomainEndpointOptionsGetArgs endpointOptions) {
            this.endpointOptions = Input.ofNullable(endpointOptions);
            return this;
        }

        public Builder setIndexFields(@Nullable Input<List<DomainIndexFieldGetArgs>> indexFields) {
            this.indexFields = indexFields;
            return this;
        }

        public Builder setIndexFields(@Nullable List<DomainIndexFieldGetArgs> indexFields) {
            this.indexFields = Input.ofNullable(indexFields);
            return this;
        }

        public Builder setMultiAz(@Nullable Input<Boolean> multiAz) {
            this.multiAz = multiAz;
            return this;
        }

        public Builder setMultiAz(@Nullable Boolean multiAz) {
            this.multiAz = Input.ofNullable(multiAz);
            return this;
        }

        public Builder setName(@Nullable Input<String> name) {
            this.name = name;
            return this;
        }

        public Builder setName(@Nullable String name) {
            this.name = Input.ofNullable(name);
            return this;
        }

        public Builder setScalingParameters(@Nullable Input<DomainScalingParametersGetArgs> scalingParameters) {
            this.scalingParameters = scalingParameters;
            return this;
        }

        public Builder setScalingParameters(@Nullable DomainScalingParametersGetArgs scalingParameters) {
            this.scalingParameters = Input.ofNullable(scalingParameters);
            return this;
        }

        public Builder setSearchServiceEndpoint(@Nullable Input<String> searchServiceEndpoint) {
            this.searchServiceEndpoint = searchServiceEndpoint;
            return this;
        }

        public Builder setSearchServiceEndpoint(@Nullable String searchServiceEndpoint) {
            this.searchServiceEndpoint = Input.ofNullable(searchServiceEndpoint);
            return this;
        }
        public DomainState build() {
            return new DomainState(arn, documentServiceEndpoint, domainId, endpointOptions, indexFields, multiAz, name, scalingParameters, searchServiceEndpoint);
        }
    }
}
