// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.dms;

import io.pulumi.aws.Utilities;
import io.pulumi.aws.dms.ReplicationInstanceArgs;
import io.pulumi.aws.dms.inputs.ReplicationInstanceState;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Export;
import io.pulumi.core.annotations.ResourceType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;

/**
 * Provides a DMS (Data Migration Service) replication instance resource. DMS replication instances can be created, updated, deleted, and imported.
 * 
 * {{% examples %}}
 * ## Example Usage
 * {{% example %}}
 * 
 * Create required roles and then create a DMS instance, setting the depends_on to the required role policy attachments.
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 * 
 * const dmsAssumeRole = aws.iam.getPolicyDocument({
 *     statements: [{
 *         actions: ["sts:AssumeRole"],
 *         principals: [{
 *             identifiers: ["dms.amazonaws.com"],
 *             type: "Service",
 *         }],
 *     }],
 * });
 * const dms_access_for_endpoint = new aws.iam.Role("dms-access-for-endpoint", {assumeRolePolicy: dmsAssumeRole.then(dmsAssumeRole => dmsAssumeRole.json)});
 * const dms_access_for_endpoint_AmazonDMSRedshiftS3Role = new aws.iam.RolePolicyAttachment("dms-access-for-endpoint-AmazonDMSRedshiftS3Role", {
 *     policyArn: "arn:aws:iam::aws:policy/service-role/AmazonDMSRedshiftS3Role",
 *     role: dms_access_for_endpoint.name,
 * });
 * const dms_cloudwatch_logs_role = new aws.iam.Role("dms-cloudwatch-logs-role", {assumeRolePolicy: dmsAssumeRole.then(dmsAssumeRole => dmsAssumeRole.json)});
 * const dms_cloudwatch_logs_role_AmazonDMSCloudWatchLogsRole = new aws.iam.RolePolicyAttachment("dms-cloudwatch-logs-role-AmazonDMSCloudWatchLogsRole", {
 *     policyArn: "arn:aws:iam::aws:policy/service-role/AmazonDMSCloudWatchLogsRole",
 *     role: dms_cloudwatch_logs_role.name,
 * });
 * const dms_vpc_role = new aws.iam.Role("dms-vpc-role", {assumeRolePolicy: dmsAssumeRole.then(dmsAssumeRole => dmsAssumeRole.json)});
 * const dms_vpc_role_AmazonDMSVPCManagementRole = new aws.iam.RolePolicyAttachment("dms-vpc-role-AmazonDMSVPCManagementRole", {
 *     policyArn: "arn:aws:iam::aws:policy/service-role/AmazonDMSVPCManagementRole",
 *     role: dms_vpc_role.name,
 * });
 * // Create a new replication instance
 * const test = new aws.dms.ReplicationInstance("test", {
 *     allocatedStorage: 20,
 *     applyImmediately: true,
 *     autoMinorVersionUpgrade: true,
 *     availabilityZone: "us-west-2c",
 *     engineVersion: "3.1.4",
 *     kmsKeyArn: "arn:aws:kms:us-east-1:123456789012:key/12345678-1234-1234-1234-123456789012",
 *     multiAz: false,
 *     preferredMaintenanceWindow: "sun:10:30-sun:14:30",
 *     publiclyAccessible: true,
 *     replicationInstanceClass: "dms.t2.micro",
 *     replicationInstanceId: "test-dms-replication-instance-tf",
 *     replicationSubnetGroupId: aws_dms_replication_subnet_group["test-dms-replication-subnet-group-tf"].id,
 *     tags: {
 *         Name: "test",
 *     },
 *     vpcSecurityGroupIds: ["sg-12345678"],
 * }, {
 *     dependsOn: [
 *         dms_access_for_endpoint_AmazonDMSRedshiftS3Role,
 *         dms_cloudwatch_logs_role_AmazonDMSCloudWatchLogsRole,
 *         dms_vpc_role_AmazonDMSVPCManagementRole,
 *     ],
 * });
 * ```
 * ```python
 * import pulumi
 * import pulumi_aws as aws
 * 
 * dms_assume_role = aws.iam.get_policy_document(statements=[aws.iam.GetPolicyDocumentStatementArgs(
 *     actions=["sts:AssumeRole"],
 *     principals=[aws.iam.GetPolicyDocumentStatementPrincipalArgs(
 *         identifiers=["dms.amazonaws.com"],
 *         type="Service",
 *     )],
 * )])
 * dms_access_for_endpoint = aws.iam.Role("dms-access-for-endpoint", assume_role_policy=dms_assume_role.json)
 * dms_access_for_endpoint__amazon_dms_redshift_s3_role = aws.iam.RolePolicyAttachment("dms-access-for-endpoint-AmazonDMSRedshiftS3Role",
 *     policy_arn="arn:aws:iam::aws:policy/service-role/AmazonDMSRedshiftS3Role",
 *     role=dms_access_for_endpoint.name)
 * dms_cloudwatch_logs_role = aws.iam.Role("dms-cloudwatch-logs-role", assume_role_policy=dms_assume_role.json)
 * dms_cloudwatch_logs_role__amazon_dms_cloud_watch_logs_role = aws.iam.RolePolicyAttachment("dms-cloudwatch-logs-role-AmazonDMSCloudWatchLogsRole",
 *     policy_arn="arn:aws:iam::aws:policy/service-role/AmazonDMSCloudWatchLogsRole",
 *     role=dms_cloudwatch_logs_role.name)
 * dms_vpc_role = aws.iam.Role("dms-vpc-role", assume_role_policy=dms_assume_role.json)
 * dms_vpc_role__amazon_dmsvpc_management_role = aws.iam.RolePolicyAttachment("dms-vpc-role-AmazonDMSVPCManagementRole",
 *     policy_arn="arn:aws:iam::aws:policy/service-role/AmazonDMSVPCManagementRole",
 *     role=dms_vpc_role.name)
 * # Create a new replication instance
 * test = aws.dms.ReplicationInstance("test",
 *     allocated_storage=20,
 *     apply_immediately=True,
 *     auto_minor_version_upgrade=True,
 *     availability_zone="us-west-2c",
 *     engine_version="3.1.4",
 *     kms_key_arn="arn:aws:kms:us-east-1:123456789012:key/12345678-1234-1234-1234-123456789012",
 *     multi_az=False,
 *     preferred_maintenance_window="sun:10:30-sun:14:30",
 *     publicly_accessible=True,
 *     replication_instance_class="dms.t2.micro",
 *     replication_instance_id="test-dms-replication-instance-tf",
 *     replication_subnet_group_id=aws_dms_replication_subnet_group["test-dms-replication-subnet-group-tf"]["id"],
 *     tags={
 *         "Name": "test",
 *     },
 *     vpc_security_group_ids=["sg-12345678"],
 *     opts=pulumi.ResourceOptions(depends_on=[
 *             dms_access_for_endpoint__amazon_dms_redshift_s3_role,
 *             dms_cloudwatch_logs_role__amazon_dms_cloud_watch_logs_role,
 *             dms_vpc_role__amazon_dmsvpc_management_role,
 *         ]))
 * ```
 * ```csharp
 * using Pulumi;
 * using Aws = Pulumi.Aws;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var dmsAssumeRole = Output.Create(Aws.Iam.GetPolicyDocument.InvokeAsync(new Aws.Iam.GetPolicyDocumentArgs
 *         {
 *             Statements = 
 *             {
 *                 new Aws.Iam.Inputs.GetPolicyDocumentStatementArgs
 *                 {
 *                     Actions = 
 *                     {
 *                         "sts:AssumeRole",
 *                     },
 *                     Principals = 
 *                     {
 *                         new Aws.Iam.Inputs.GetPolicyDocumentStatementPrincipalArgs
 *                         {
 *                             Identifiers = 
 *                             {
 *                                 "dms.amazonaws.com",
 *                             },
 *                             Type = "Service",
 *                         },
 *                     },
 *                 },
 *             },
 *         }));
 *         var dms_access_for_endpoint = new Aws.Iam.Role("dms-access-for-endpoint", new Aws.Iam.RoleArgs
 *         {
 *             AssumeRolePolicy = dmsAssumeRole.Apply(dmsAssumeRole => dmsAssumeRole.Json),
 *         });
 *         var dms_access_for_endpoint_AmazonDMSRedshiftS3Role = new Aws.Iam.RolePolicyAttachment("dms-access-for-endpoint-AmazonDMSRedshiftS3Role", new Aws.Iam.RolePolicyAttachmentArgs
 *         {
 *             PolicyArn = "arn:aws:iam::aws:policy/service-role/AmazonDMSRedshiftS3Role",
 *             Role = dms_access_for_endpoint.Name,
 *         });
 *         var dms_cloudwatch_logs_role = new Aws.Iam.Role("dms-cloudwatch-logs-role", new Aws.Iam.RoleArgs
 *         {
 *             AssumeRolePolicy = dmsAssumeRole.Apply(dmsAssumeRole => dmsAssumeRole.Json),
 *         });
 *         var dms_cloudwatch_logs_role_AmazonDMSCloudWatchLogsRole = new Aws.Iam.RolePolicyAttachment("dms-cloudwatch-logs-role-AmazonDMSCloudWatchLogsRole", new Aws.Iam.RolePolicyAttachmentArgs
 *         {
 *             PolicyArn = "arn:aws:iam::aws:policy/service-role/AmazonDMSCloudWatchLogsRole",
 *             Role = dms_cloudwatch_logs_role.Name,
 *         });
 *         var dms_vpc_role = new Aws.Iam.Role("dms-vpc-role", new Aws.Iam.RoleArgs
 *         {
 *             AssumeRolePolicy = dmsAssumeRole.Apply(dmsAssumeRole => dmsAssumeRole.Json),
 *         });
 *         var dms_vpc_role_AmazonDMSVPCManagementRole = new Aws.Iam.RolePolicyAttachment("dms-vpc-role-AmazonDMSVPCManagementRole", new Aws.Iam.RolePolicyAttachmentArgs
 *         {
 *             PolicyArn = "arn:aws:iam::aws:policy/service-role/AmazonDMSVPCManagementRole",
 *             Role = dms_vpc_role.Name,
 *         });
 *         // Create a new replication instance
 *         var test = new Aws.Dms.ReplicationInstance("test", new Aws.Dms.ReplicationInstanceArgs
 *         {
 *             AllocatedStorage = 20,
 *             ApplyImmediately = true,
 *             AutoMinorVersionUpgrade = true,
 *             AvailabilityZone = "us-west-2c",
 *             EngineVersion = "3.1.4",
 *             KmsKeyArn = "arn:aws:kms:us-east-1:123456789012:key/12345678-1234-1234-1234-123456789012",
 *             MultiAz = false,
 *             PreferredMaintenanceWindow = "sun:10:30-sun:14:30",
 *             PubliclyAccessible = true,
 *             ReplicationInstanceClass = "dms.t2.micro",
 *             ReplicationInstanceId = "test-dms-replication-instance-tf",
 *             ReplicationSubnetGroupId = aws_dms_replication_subnet_group.Test_dms_replication_subnet_group_tf.Id,
 *             Tags = 
 *             {
 *                 { "Name", "test" },
 *             },
 *             VpcSecurityGroupIds = 
 *             {
 *                 "sg-12345678",
 *             },
 *         }, new CustomResourceOptions
 *         {
 *             DependsOn = 
 *             {
 *                 dms_access_for_endpoint_AmazonDMSRedshiftS3Role,
 *                 dms_cloudwatch_logs_role_AmazonDMSCloudWatchLogsRole,
 *                 dms_vpc_role_AmazonDMSVPCManagementRole,
 *             },
 *         });
 *     }
 * 
 * }
 * ```
 * ```go
 * package main
 * 
 * import (
 * 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/dms"
 * 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/iam"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		dmsAssumeRole, err := iam.GetPolicyDocument(ctx, &iam.GetPolicyDocumentArgs{
 * 			Statements: []iam.GetPolicyDocumentStatement{
 * 				iam.GetPolicyDocumentStatement{
 * 					Actions: []string{
 * 						"sts:AssumeRole",
 * 					},
 * 					Principals: []iam.GetPolicyDocumentStatementPrincipal{
 * 						iam.GetPolicyDocumentStatementPrincipal{
 * 							Identifiers: []string{
 * 								"dms.amazonaws.com",
 * 							},
 * 							Type: "Service",
 * 						},
 * 					},
 * 				},
 * 			},
 * 		}, nil)
 * 		if err != nil {
 * 			return err
 * 		}
 * 		_, err = iam.NewRole(ctx, "dms-access-for-endpoint", &iam.RoleArgs{
 * 			AssumeRolePolicy: pulumi.String(dmsAssumeRole.Json),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		_, err = iam.NewRolePolicyAttachment(ctx, "dms-access-for-endpoint-AmazonDMSRedshiftS3Role", &iam.RolePolicyAttachmentArgs{
 * 			PolicyArn: pulumi.String("arn:aws:iam::aws:policy/service-role/AmazonDMSRedshiftS3Role"),
 * 			Role:      dms_access_for_endpoint.Name,
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		_, err = iam.NewRole(ctx, "dms-cloudwatch-logs-role", &iam.RoleArgs{
 * 			AssumeRolePolicy: pulumi.String(dmsAssumeRole.Json),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		_, err = iam.NewRolePolicyAttachment(ctx, "dms-cloudwatch-logs-role-AmazonDMSCloudWatchLogsRole", &iam.RolePolicyAttachmentArgs{
 * 			PolicyArn: pulumi.String("arn:aws:iam::aws:policy/service-role/AmazonDMSCloudWatchLogsRole"),
 * 			Role:      dms_cloudwatch_logs_role.Name,
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		_, err = iam.NewRole(ctx, "dms-vpc-role", &iam.RoleArgs{
 * 			AssumeRolePolicy: pulumi.String(dmsAssumeRole.Json),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		_, err = iam.NewRolePolicyAttachment(ctx, "dms-vpc-role-AmazonDMSVPCManagementRole", &iam.RolePolicyAttachmentArgs{
 * 			PolicyArn: pulumi.String("arn:aws:iam::aws:policy/service-role/AmazonDMSVPCManagementRole"),
 * 			Role:      dms_vpc_role.Name,
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		_, err = dms.NewReplicationInstance(ctx, "test", &dms.ReplicationInstanceArgs{
 * 			AllocatedStorage:           pulumi.Int(20),
 * 			ApplyImmediately:           pulumi.Bool(true),
 * 			AutoMinorVersionUpgrade:    pulumi.Bool(true),
 * 			AvailabilityZone:           pulumi.String("us-west-2c"),
 * 			EngineVersion:              pulumi.String("3.1.4"),
 * 			KmsKeyArn:                  pulumi.String("arn:aws:kms:us-east-1:123456789012:key/12345678-1234-1234-1234-123456789012"),
 * 			MultiAz:                    pulumi.Bool(false),
 * 			PreferredMaintenanceWindow: pulumi.String("sun:10:30-sun:14:30"),
 * 			PubliclyAccessible:         pulumi.Bool(true),
 * 			ReplicationInstanceClass:   pulumi.String("dms.t2.micro"),
 * 			ReplicationInstanceId:      pulumi.String("test-dms-replication-instance-tf"),
 * 			ReplicationSubnetGroupId:   pulumi.Any(aws_dms_replication_subnet_group.Test - dms - replication - subnet - group - tf.Id),
 * 			Tags: pulumi.StringMap{
 * 				"Name": pulumi.String("test"),
 * 			},
 * 			VpcSecurityGroupIds: pulumi.StringArray{
 * 				pulumi.String("sg-12345678"),
 * 			},
 * 		}, pulumi.DependsOn([]pulumi.Resource{
 * 			dms_access_for_endpoint_AmazonDMSRedshiftS3Role,
 * 			dms_cloudwatch_logs_role_AmazonDMSCloudWatchLogsRole,
 * 			dms_vpc_role_AmazonDMSVPCManagementRole,
 * 		}))
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * ```
 * {{% /example %}}
 * {{% /examples %}}
 * 
 * ## Import
 * 
 * Replication instances can be imported using the `replication_instance_id`, e.g.,
 * 
 * ```sh
 *  $ pulumi import aws:dms/replicationInstance:ReplicationInstance test test-dms-replication-instance-tf
 * ```
 * 
 *  
 */
@ResourceType(type="aws:dms/replicationInstance:ReplicationInstance")
public class ReplicationInstance extends io.pulumi.resources.CustomResource {
    /**
     * The amount of storage (in gigabytes) to be initially allocated for the replication instance.
     * 
     */
    @Export(name="allocatedStorage", type=Integer.class, parameters={})
    private Output<Integer> allocatedStorage;

    /**
     * @return The amount of storage (in gigabytes) to be initially allocated for the replication instance.
     * 
     */
    public Output<Integer> getAllocatedStorage() {
        return this.allocatedStorage;
    }
    /**
     * Indicates that major version upgrades are allowed.
     * 
     */
    @Export(name="allowMajorVersionUpgrade", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> allowMajorVersionUpgrade;

    /**
     * @return Indicates that major version upgrades are allowed.
     * 
     */
    public Output</* @Nullable */ Boolean> getAllowMajorVersionUpgrade() {
        return this.allowMajorVersionUpgrade;
    }
    /**
     * Indicates whether the changes should be applied immediately or during the next maintenance window. Only used when updating an existing resource.
     * 
     */
    @Export(name="applyImmediately", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> applyImmediately;

    /**
     * @return Indicates whether the changes should be applied immediately or during the next maintenance window. Only used when updating an existing resource.
     * 
     */
    public Output</* @Nullable */ Boolean> getApplyImmediately() {
        return this.applyImmediately;
    }
    /**
     * Indicates that minor engine upgrades will be applied automatically to the replication instance during the maintenance window.
     * 
     */
    @Export(name="autoMinorVersionUpgrade", type=Boolean.class, parameters={})
    private Output<Boolean> autoMinorVersionUpgrade;

    /**
     * @return Indicates that minor engine upgrades will be applied automatically to the replication instance during the maintenance window.
     * 
     */
    public Output<Boolean> getAutoMinorVersionUpgrade() {
        return this.autoMinorVersionUpgrade;
    }
    /**
     * The EC2 Availability Zone that the replication instance will be created in.
     * 
     */
    @Export(name="availabilityZone", type=String.class, parameters={})
    private Output<String> availabilityZone;

    /**
     * @return The EC2 Availability Zone that the replication instance will be created in.
     * 
     */
    public Output<String> getAvailabilityZone() {
        return this.availabilityZone;
    }
    /**
     * The engine version number of the replication instance.
     * 
     */
    @Export(name="engineVersion", type=String.class, parameters={})
    private Output<String> engineVersion;

    /**
     * @return The engine version number of the replication instance.
     * 
     */
    public Output<String> getEngineVersion() {
        return this.engineVersion;
    }
    /**
     * The Amazon Resource Name (ARN) for the KMS key that will be used to encrypt the connection parameters. If you do not specify a value for `kms_key_arn`, then AWS DMS will use your default encryption key. AWS KMS creates the default encryption key for your AWS account. Your AWS account has a different default encryption key for each AWS region.
     * 
     */
    @Export(name="kmsKeyArn", type=String.class, parameters={})
    private Output<String> kmsKeyArn;

    /**
     * @return The Amazon Resource Name (ARN) for the KMS key that will be used to encrypt the connection parameters. If you do not specify a value for `kms_key_arn`, then AWS DMS will use your default encryption key. AWS KMS creates the default encryption key for your AWS account. Your AWS account has a different default encryption key for each AWS region.
     * 
     */
    public Output<String> getKmsKeyArn() {
        return this.kmsKeyArn;
    }
    /**
     * Specifies if the replication instance is a multi-az deployment. You cannot set the `availability_zone` parameter if the `multi_az` parameter is set to `true`.
     * 
     */
    @Export(name="multiAz", type=Boolean.class, parameters={})
    private Output<Boolean> multiAz;

    /**
     * @return Specifies if the replication instance is a multi-az deployment. You cannot set the `availability_zone` parameter if the `multi_az` parameter is set to `true`.
     * 
     */
    public Output<Boolean> getMultiAz() {
        return this.multiAz;
    }
    /**
     * The weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).
     * 
     */
    @Export(name="preferredMaintenanceWindow", type=String.class, parameters={})
    private Output<String> preferredMaintenanceWindow;

    /**
     * @return The weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).
     * 
     */
    public Output<String> getPreferredMaintenanceWindow() {
        return this.preferredMaintenanceWindow;
    }
    /**
     * Specifies the accessibility options for the replication instance. A value of true represents an instance with a public IP address. A value of false represents an instance with a private IP address.
     * 
     */
    @Export(name="publiclyAccessible", type=Boolean.class, parameters={})
    private Output<Boolean> publiclyAccessible;

    /**
     * @return Specifies the accessibility options for the replication instance. A value of true represents an instance with a public IP address. A value of false represents an instance with a private IP address.
     * 
     */
    public Output<Boolean> getPubliclyAccessible() {
        return this.publiclyAccessible;
    }
    /**
     * The Amazon Resource Name (ARN) of the replication instance.
     * 
     */
    @Export(name="replicationInstanceArn", type=String.class, parameters={})
    private Output<String> replicationInstanceArn;

    /**
     * @return The Amazon Resource Name (ARN) of the replication instance.
     * 
     */
    public Output<String> getReplicationInstanceArn() {
        return this.replicationInstanceArn;
    }
    /**
     * The compute and memory capacity of the replication instance as specified by the replication instance class. See [AWS DMS User Guide](https://docs.aws.amazon.com/dms/latest/userguide/CHAP_ReplicationInstance.Types.html) for available instance sizes and advice on which one to choose.
     * 
     */
    @Export(name="replicationInstanceClass", type=String.class, parameters={})
    private Output<String> replicationInstanceClass;

    /**
     * @return The compute and memory capacity of the replication instance as specified by the replication instance class. See [AWS DMS User Guide](https://docs.aws.amazon.com/dms/latest/userguide/CHAP_ReplicationInstance.Types.html) for available instance sizes and advice on which one to choose.
     * 
     */
    public Output<String> getReplicationInstanceClass() {
        return this.replicationInstanceClass;
    }
    /**
     * The replication instance identifier. This parameter is stored as a lowercase string.
     * 
     */
    @Export(name="replicationInstanceId", type=String.class, parameters={})
    private Output<String> replicationInstanceId;

    /**
     * @return The replication instance identifier. This parameter is stored as a lowercase string.
     * 
     */
    public Output<String> getReplicationInstanceId() {
        return this.replicationInstanceId;
    }
    /**
     * A list of the private IP addresses of the replication instance.
     * 
     */
    @Export(name="replicationInstancePrivateIps", type=List.class, parameters={String.class})
    private Output<List<String>> replicationInstancePrivateIps;

    /**
     * @return A list of the private IP addresses of the replication instance.
     * 
     */
    public Output<List<String>> getReplicationInstancePrivateIps() {
        return this.replicationInstancePrivateIps;
    }
    /**
     * A list of the public IP addresses of the replication instance.
     * 
     */
    @Export(name="replicationInstancePublicIps", type=List.class, parameters={String.class})
    private Output<List<String>> replicationInstancePublicIps;

    /**
     * @return A list of the public IP addresses of the replication instance.
     * 
     */
    public Output<List<String>> getReplicationInstancePublicIps() {
        return this.replicationInstancePublicIps;
    }
    /**
     * A subnet group to associate with the replication instance.
     * 
     */
    @Export(name="replicationSubnetGroupId", type=String.class, parameters={})
    private Output<String> replicationSubnetGroupId;

    /**
     * @return A subnet group to associate with the replication instance.
     * 
     */
    public Output<String> getReplicationSubnetGroupId() {
        return this.replicationSubnetGroupId;
    }
    /**
     * A map of tags to assign to the resource. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Export(name="tags", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return A map of tags to assign to the resource. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Output</* @Nullable */ Map<String,String>> getTags() {
        return this.tags;
    }
    /**
     * A map of tags assigned to the resource, including those inherited from the provider .
     * 
     */
    @Export(name="tagsAll", type=Map.class, parameters={String.class, String.class})
    private Output<Map<String,String>> tagsAll;

    /**
     * @return A map of tags assigned to the resource, including those inherited from the provider .
     * 
     */
    public Output<Map<String,String>> getTagsAll() {
        return this.tagsAll;
    }
    /**
     * A list of VPC security group IDs to be used with the replication instance. The VPC security groups must work with the VPC containing the replication instance.
     * 
     */
    @Export(name="vpcSecurityGroupIds", type=List.class, parameters={String.class})
    private Output<List<String>> vpcSecurityGroupIds;

    /**
     * @return A list of VPC security group IDs to be used with the replication instance. The VPC security groups must work with the VPC containing the replication instance.
     * 
     */
    public Output<List<String>> getVpcSecurityGroupIds() {
        return this.vpcSecurityGroupIds;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ReplicationInstance(String name) {
        this(name, ReplicationInstanceArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ReplicationInstance(String name, ReplicationInstanceArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ReplicationInstance(String name, ReplicationInstanceArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:dms/replicationInstance:ReplicationInstance", name, args == null ? ReplicationInstanceArgs.Empty : args, makeResourceOptions(options, Output.empty()));
    }

    private ReplicationInstance(String name, Output<String> id, @Nullable ReplicationInstanceState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:dms/replicationInstance:ReplicationInstance", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ReplicationInstance get(String name, Output<String> id, @Nullable ReplicationInstanceState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new ReplicationInstance(name, id, state, options);
    }
}
