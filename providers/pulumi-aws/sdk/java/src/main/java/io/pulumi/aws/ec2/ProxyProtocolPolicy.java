// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.ec2;

import io.pulumi.aws.Utilities;
import io.pulumi.aws.ec2.ProxyProtocolPolicyArgs;
import io.pulumi.aws.ec2.inputs.ProxyProtocolPolicyState;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Export;
import io.pulumi.core.annotations.ResourceType;
import io.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * Provides a proxy protocol policy, which allows an ELB to carry a client connection information to a backend.
 * 
 * ## Example Usage
 * 
 */
@ResourceType(type="aws:ec2/proxyProtocolPolicy:ProxyProtocolPolicy")
public class ProxyProtocolPolicy extends io.pulumi.resources.CustomResource {
    /**
     * List of instance ports to which the policy
     * should be applied. This can be specified if the protocol is SSL or TCP.
     * 
     */
    @Export(name="instancePorts", type=List.class, parameters={String.class})
    private Output<List<String>> instancePorts;

    /**
     * @return List of instance ports to which the policy
     * should be applied. This can be specified if the protocol is SSL or TCP.
     * 
     */
    public Output<List<String>> getInstancePorts() {
        return this.instancePorts;
    }
    /**
     * The load balancer to which the policy
     * should be attached.
     * 
     */
    @Export(name="loadBalancer", type=String.class, parameters={})
    private Output<String> loadBalancer;

    /**
     * @return The load balancer to which the policy
     * should be attached.
     * 
     */
    public Output<String> getLoadBalancer() {
        return this.loadBalancer;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ProxyProtocolPolicy(String name) {
        this(name, ProxyProtocolPolicyArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ProxyProtocolPolicy(String name, ProxyProtocolPolicyArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ProxyProtocolPolicy(String name, ProxyProtocolPolicyArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:ec2/proxyProtocolPolicy:ProxyProtocolPolicy", name, args == null ? ProxyProtocolPolicyArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private ProxyProtocolPolicy(String name, Output<String> id, @Nullable ProxyProtocolPolicyState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:ec2/proxyProtocolPolicy:ProxyProtocolPolicy", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ProxyProtocolPolicy get(String name, Output<String> id, @Nullable ProxyProtocolPolicyState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new ProxyProtocolPolicy(name, id, state, options);
    }
}
