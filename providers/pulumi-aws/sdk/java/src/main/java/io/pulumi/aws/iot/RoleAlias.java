// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.iot;

import io.pulumi.aws.Utilities;
import io.pulumi.aws.iot.RoleAliasArgs;
import io.pulumi.aws.iot.inputs.RoleAliasState;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Export;
import io.pulumi.core.annotations.ResourceType;
import java.lang.Integer;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * Provides an IoT role alias.
 * 
 * {{% examples %}}
 * ## Example Usage
 * {{% example %}}
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 * 
 * const role = new aws.iam.Role("role", {assumeRolePolicy: `{
 *   "Version": "2012-10-17",
 *   "Statement": [
 *     {
 *       "Effect": "Allow",
 *       "Principal": {"Service": "credentials.iot.amazonaws.com",
 *       "Action": "sts:AssumeRole"
 *     }
 *   ]
 * }
 * `});
 * const alias = new aws.iot.RoleAlias("alias", {
 *     alias: "Thermostat-dynamodb-access-role-alias",
 *     roleArn: role.arn,
 * });
 * ```
 * ```python
 * import pulumi
 * import pulumi_aws as aws
 * 
 * role = aws.iam.Role("role", assume_role_policy="""{
 *   "Version": "2012-10-17",
 *   "Statement": [
 *     {
 *       "Effect": "Allow",
 *       "Principal": {"Service": "credentials.iot.amazonaws.com",
 *       "Action": "sts:AssumeRole"
 *     }
 *   ]
 * }
 * """)
 * alias = aws.iot.RoleAlias("alias",
 *     alias="Thermostat-dynamodb-access-role-alias",
 *     role_arn=role.arn)
 * ```
 * ```csharp
 * using Pulumi;
 * using Aws = Pulumi.Aws;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var role = new Aws.Iam.Role("role", new Aws.Iam.RoleArgs
 *         {
 *             AssumeRolePolicy = @"{
 *   ""Version"": ""2012-10-17"",
 *   ""Statement"": [
 *     {
 *       ""Effect"": ""Allow"",
 *       ""Principal"": {""Service"": ""credentials.iot.amazonaws.com"",
 *       ""Action"": ""sts:AssumeRole""
 *     }
 *   ]
 * }
 * ",
 *         });
 *         var @alias = new Aws.Iot.RoleAlias("alias", new Aws.Iot.RoleAliasArgs
 *         {
 *             Alias = "Thermostat-dynamodb-access-role-alias",
 *             RoleArn = role.Arn,
 *         });
 *     }
 * 
 * }
 * ```
 * ```go
 * package main
 * 
 * import (
 * 	"fmt"
 * 
 * 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/iam"
 * 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/iot"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		role, err := iam.NewRole(ctx, "role", &iam.RoleArgs{
 * 			AssumeRolePolicy: pulumi.Any(fmt.Sprintf("%v%v%v%v%v%v%v%v%v%v", "{\n", "  \"Version\": \"2012-10-17\",\n", "  \"Statement\": [\n", "    {\n", "      \"Effect\": \"Allow\",\n", "      \"Principal\": {\"Service\": \"credentials.iot.amazonaws.com\",\n", "      \"Action\": \"sts:AssumeRole\"\n", "    }\n", "  ]\n", "}\n")),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		_, err = iot.NewRoleAlias(ctx, "alias", &iot.RoleAliasArgs{
 * 			Alias:   pulumi.String("Thermostat-dynamodb-access-role-alias"),
 * 			RoleArn: role.Arn,
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * ```
 * {{% /example %}}
 * {{% /examples %}}
 * 
 * ## Import
 * 
 * IOT Role Alias can be imported via the alias, e.g.,
 * 
 * ```sh
 *  $ pulumi import aws:iot/roleAlias:RoleAlias example myalias
 * ```
 * 
 *  
 */
@ResourceType(type="aws:iot/roleAlias:RoleAlias")
public class RoleAlias extends io.pulumi.resources.CustomResource {
    /**
     * The name of the role alias.
     * 
     */
    @Export(name="alias", type=String.class, parameters={})
    private Output<String> alias;

    /**
     * @return The name of the role alias.
     * 
     */
    public Output<String> getAlias() {
        return this.alias;
    }
    /**
     * The ARN assigned by AWS to this role alias.
     * 
     */
    @Export(name="arn", type=String.class, parameters={})
    private Output<String> arn;

    /**
     * @return The ARN assigned by AWS to this role alias.
     * 
     */
    public Output<String> getArn() {
        return this.arn;
    }
    /**
     * The duration of the credential, in seconds. If you do not specify a value for this setting, the default maximum of one hour is applied. This setting can have a value from 900 seconds (15 minutes) to 43200 seconds (12 hours).
     * 
     */
    @Export(name="credentialDuration", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> credentialDuration;

    /**
     * @return The duration of the credential, in seconds. If you do not specify a value for this setting, the default maximum of one hour is applied. This setting can have a value from 900 seconds (15 minutes) to 43200 seconds (12 hours).
     * 
     */
    public Output</* @Nullable */ Integer> getCredentialDuration() {
        return this.credentialDuration;
    }
    /**
     * The identity of the role to which the alias refers.
     * 
     */
    @Export(name="roleArn", type=String.class, parameters={})
    private Output<String> roleArn;

    /**
     * @return The identity of the role to which the alias refers.
     * 
     */
    public Output<String> getRoleArn() {
        return this.roleArn;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public RoleAlias(String name) {
        this(name, RoleAliasArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public RoleAlias(String name, RoleAliasArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public RoleAlias(String name, RoleAliasArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:iot/roleAlias:RoleAlias", name, args == null ? RoleAliasArgs.Empty : args, makeResourceOptions(options, Output.empty()));
    }

    private RoleAlias(String name, Output<String> id, @Nullable RoleAliasState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:iot/roleAlias:RoleAlias", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static RoleAlias get(String name, Output<String> id, @Nullable RoleAliasState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new RoleAlias(name, id, state, options);
    }
}
