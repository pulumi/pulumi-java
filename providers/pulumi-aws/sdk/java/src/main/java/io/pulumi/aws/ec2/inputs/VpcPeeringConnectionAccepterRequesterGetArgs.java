// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.ec2.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.util.Objects;
import javax.annotation.Nullable;


public final class VpcPeeringConnectionAccepterRequesterGetArgs extends io.pulumi.resources.ResourceArgs {

    public static final VpcPeeringConnectionAccepterRequesterGetArgs Empty = new VpcPeeringConnectionAccepterRequesterGetArgs();

    /**
     * Indicates whether a local ClassicLink connection can communicate
     * with the peer VPC over the VPC Peering Connection.
     * 
     */
    @Import(name="allowClassicLinkToRemoteVpc")
      private final @Nullable Output<Boolean> allowClassicLinkToRemoteVpc;

    public Output<Boolean> allowClassicLinkToRemoteVpc() {
        return this.allowClassicLinkToRemoteVpc == null ? Codegen.empty() : this.allowClassicLinkToRemoteVpc;
    }

    /**
     * Indicates whether a local VPC can resolve public DNS hostnames to
     * private IP addresses when queried from instances in a peer VPC.
     * 
     */
    @Import(name="allowRemoteVpcDnsResolution")
      private final @Nullable Output<Boolean> allowRemoteVpcDnsResolution;

    public Output<Boolean> allowRemoteVpcDnsResolution() {
        return this.allowRemoteVpcDnsResolution == null ? Codegen.empty() : this.allowRemoteVpcDnsResolution;
    }

    /**
     * Indicates whether a local VPC can communicate with a ClassicLink
     * connection in the peer VPC over the VPC Peering Connection.
     * 
     */
    @Import(name="allowVpcToRemoteClassicLink")
      private final @Nullable Output<Boolean> allowVpcToRemoteClassicLink;

    public Output<Boolean> allowVpcToRemoteClassicLink() {
        return this.allowVpcToRemoteClassicLink == null ? Codegen.empty() : this.allowVpcToRemoteClassicLink;
    }

    public VpcPeeringConnectionAccepterRequesterGetArgs(
        @Nullable Output<Boolean> allowClassicLinkToRemoteVpc,
        @Nullable Output<Boolean> allowRemoteVpcDnsResolution,
        @Nullable Output<Boolean> allowVpcToRemoteClassicLink) {
        this.allowClassicLinkToRemoteVpc = allowClassicLinkToRemoteVpc;
        this.allowRemoteVpcDnsResolution = allowRemoteVpcDnsResolution;
        this.allowVpcToRemoteClassicLink = allowVpcToRemoteClassicLink;
    }

    private VpcPeeringConnectionAccepterRequesterGetArgs() {
        this.allowClassicLinkToRemoteVpc = Codegen.empty();
        this.allowRemoteVpcDnsResolution = Codegen.empty();
        this.allowVpcToRemoteClassicLink = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VpcPeeringConnectionAccepterRequesterGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<Boolean> allowClassicLinkToRemoteVpc;
        private @Nullable Output<Boolean> allowRemoteVpcDnsResolution;
        private @Nullable Output<Boolean> allowVpcToRemoteClassicLink;

        public Builder() {
    	      // Empty
        }

        public Builder(VpcPeeringConnectionAccepterRequesterGetArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allowClassicLinkToRemoteVpc = defaults.allowClassicLinkToRemoteVpc;
    	      this.allowRemoteVpcDnsResolution = defaults.allowRemoteVpcDnsResolution;
    	      this.allowVpcToRemoteClassicLink = defaults.allowVpcToRemoteClassicLink;
        }

        public Builder allowClassicLinkToRemoteVpc(@Nullable Output<Boolean> allowClassicLinkToRemoteVpc) {
            this.allowClassicLinkToRemoteVpc = allowClassicLinkToRemoteVpc;
            return this;
        }
        public Builder allowClassicLinkToRemoteVpc(@Nullable Boolean allowClassicLinkToRemoteVpc) {
            this.allowClassicLinkToRemoteVpc = Codegen.ofNullable(allowClassicLinkToRemoteVpc);
            return this;
        }
        public Builder allowRemoteVpcDnsResolution(@Nullable Output<Boolean> allowRemoteVpcDnsResolution) {
            this.allowRemoteVpcDnsResolution = allowRemoteVpcDnsResolution;
            return this;
        }
        public Builder allowRemoteVpcDnsResolution(@Nullable Boolean allowRemoteVpcDnsResolution) {
            this.allowRemoteVpcDnsResolution = Codegen.ofNullable(allowRemoteVpcDnsResolution);
            return this;
        }
        public Builder allowVpcToRemoteClassicLink(@Nullable Output<Boolean> allowVpcToRemoteClassicLink) {
            this.allowVpcToRemoteClassicLink = allowVpcToRemoteClassicLink;
            return this;
        }
        public Builder allowVpcToRemoteClassicLink(@Nullable Boolean allowVpcToRemoteClassicLink) {
            this.allowVpcToRemoteClassicLink = Codegen.ofNullable(allowVpcToRemoteClassicLink);
            return this;
        }        public VpcPeeringConnectionAccepterRequesterGetArgs build() {
            return new VpcPeeringConnectionAccepterRequesterGetArgs(allowClassicLinkToRemoteVpc, allowRemoteVpcDnsResolution, allowVpcToRemoteClassicLink);
        }
    }
}
