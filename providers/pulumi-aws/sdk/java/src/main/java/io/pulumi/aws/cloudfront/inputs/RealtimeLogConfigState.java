// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.cloudfront.inputs;

import io.pulumi.aws.cloudfront.inputs.RealtimeLogConfigEndpointGetArgs;
import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class RealtimeLogConfigState extends io.pulumi.resources.ResourceArgs {

    public static final RealtimeLogConfigState Empty = new RealtimeLogConfigState();

    /**
     * The ARN (Amazon Resource Name) of the CloudFront real-time log configuration.
     * 
     */
    @InputImport(name="arn")
    private final @Nullable Input<String> arn;

    public Input<String> getArn() {
        return this.arn == null ? Input.empty() : this.arn;
    }

    /**
     * The Amazon Kinesis data streams where real-time log data is sent.
     * 
     */
    @InputImport(name="endpoint")
    private final @Nullable Input<RealtimeLogConfigEndpointGetArgs> endpoint;

    public Input<RealtimeLogConfigEndpointGetArgs> getEndpoint() {
        return this.endpoint == null ? Input.empty() : this.endpoint;
    }

    /**
     * The fields that are included in each real-time log record. See the [AWS documentation](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/real-time-logs.html#understand-real-time-log-config-fields) for supported values.
     * 
     */
    @InputImport(name="fields")
    private final @Nullable Input<List<String>> fields;

    public Input<List<String>> getFields() {
        return this.fields == null ? Input.empty() : this.fields;
    }

    /**
     * The unique name to identify this real-time log configuration.
     * 
     */
    @InputImport(name="name")
    private final @Nullable Input<String> name;

    public Input<String> getName() {
        return this.name == null ? Input.empty() : this.name;
    }

    /**
     * The sampling rate for this real-time log configuration. The sampling rate determines the percentage of viewer requests that are represented in the real-time log data. An integer between `1` and `100`, inclusive.
     * 
     */
    @InputImport(name="samplingRate")
    private final @Nullable Input<Integer> samplingRate;

    public Input<Integer> getSamplingRate() {
        return this.samplingRate == null ? Input.empty() : this.samplingRate;
    }

    public RealtimeLogConfigState(
        @Nullable Input<String> arn,
        @Nullable Input<RealtimeLogConfigEndpointGetArgs> endpoint,
        @Nullable Input<List<String>> fields,
        @Nullable Input<String> name,
        @Nullable Input<Integer> samplingRate) {
        this.arn = arn;
        this.endpoint = endpoint;
        this.fields = fields;
        this.name = name;
        this.samplingRate = samplingRate;
    }

    private RealtimeLogConfigState() {
        this.arn = Input.empty();
        this.endpoint = Input.empty();
        this.fields = Input.empty();
        this.name = Input.empty();
        this.samplingRate = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RealtimeLogConfigState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> arn;
        private @Nullable Input<RealtimeLogConfigEndpointGetArgs> endpoint;
        private @Nullable Input<List<String>> fields;
        private @Nullable Input<String> name;
        private @Nullable Input<Integer> samplingRate;

        public Builder() {
    	      // Empty
        }

        public Builder(RealtimeLogConfigState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.endpoint = defaults.endpoint;
    	      this.fields = defaults.fields;
    	      this.name = defaults.name;
    	      this.samplingRate = defaults.samplingRate;
        }

        public Builder setArn(@Nullable Input<String> arn) {
            this.arn = arn;
            return this;
        }

        public Builder setArn(@Nullable String arn) {
            this.arn = Input.ofNullable(arn);
            return this;
        }

        public Builder setEndpoint(@Nullable Input<RealtimeLogConfigEndpointGetArgs> endpoint) {
            this.endpoint = endpoint;
            return this;
        }

        public Builder setEndpoint(@Nullable RealtimeLogConfigEndpointGetArgs endpoint) {
            this.endpoint = Input.ofNullable(endpoint);
            return this;
        }

        public Builder setFields(@Nullable Input<List<String>> fields) {
            this.fields = fields;
            return this;
        }

        public Builder setFields(@Nullable List<String> fields) {
            this.fields = Input.ofNullable(fields);
            return this;
        }

        public Builder setName(@Nullable Input<String> name) {
            this.name = name;
            return this;
        }

        public Builder setName(@Nullable String name) {
            this.name = Input.ofNullable(name);
            return this;
        }

        public Builder setSamplingRate(@Nullable Input<Integer> samplingRate) {
            this.samplingRate = samplingRate;
            return this;
        }

        public Builder setSamplingRate(@Nullable Integer samplingRate) {
            this.samplingRate = Input.ofNullable(samplingRate);
            return this;
        }
        public RealtimeLogConfigState build() {
            return new RealtimeLogConfigState(arn, endpoint, fields, name, samplingRate);
        }
    }
}
