// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.ec2;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class EipArgs extends io.pulumi.resources.ResourceArgs {

    public static final EipArgs Empty = new EipArgs();

    /**
     * IP address from an EC2 BYOIP pool. This option is only available for VPC EIPs.
     * 
     */
    @InputImport(name="address")
      private final @Nullable Input<String> address;

    public Input<String> getAddress() {
        return this.address == null ? Input.empty() : this.address;
    }

    /**
     * User-specified primary or secondary private IP address to associate with the Elastic IP address. If no private IP address is specified, the Elastic IP address is associated with the primary private IP address.
     * 
     */
    @InputImport(name="associateWithPrivateIp")
      private final @Nullable Input<String> associateWithPrivateIp;

    public Input<String> getAssociateWithPrivateIp() {
        return this.associateWithPrivateIp == null ? Input.empty() : this.associateWithPrivateIp;
    }

    /**
     * ID  of a customer-owned address pool. For more on customer owned IP addressed check out [Customer-owned IP addresses guide](https://docs.aws.amazon.com/outposts/latest/userguide/outposts-networking-components.html#ip-addressing).
     * 
     */
    @InputImport(name="customerOwnedIpv4Pool")
      private final @Nullable Input<String> customerOwnedIpv4Pool;

    public Input<String> getCustomerOwnedIpv4Pool() {
        return this.customerOwnedIpv4Pool == null ? Input.empty() : this.customerOwnedIpv4Pool;
    }

    /**
     * EC2 instance ID.
     * 
     */
    @InputImport(name="instance")
      private final @Nullable Input<String> instance;

    public Input<String> getInstance() {
        return this.instance == null ? Input.empty() : this.instance;
    }

    /**
     * Location from which the IP address is advertised. Use this parameter to limit the address to this location.
     * 
     */
    @InputImport(name="networkBorderGroup")
      private final @Nullable Input<String> networkBorderGroup;

    public Input<String> getNetworkBorderGroup() {
        return this.networkBorderGroup == null ? Input.empty() : this.networkBorderGroup;
    }

    /**
     * Network interface ID to associate with.
     * 
     */
    @InputImport(name="networkInterface")
      private final @Nullable Input<String> networkInterface;

    public Input<String> getNetworkInterface() {
        return this.networkInterface == null ? Input.empty() : this.networkInterface;
    }

    /**
     * EC2 IPv4 address pool identifier or `amazon`. This option is only available for VPC EIPs.
     * 
     */
    @InputImport(name="publicIpv4Pool")
      private final @Nullable Input<String> publicIpv4Pool;

    public Input<String> getPublicIpv4Pool() {
        return this.publicIpv4Pool == null ? Input.empty() : this.publicIpv4Pool;
    }

    /**
     * Map of tags to assign to the resource. Tags can only be applied to EIPs in a VPC. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @InputImport(name="tags")
      private final @Nullable Input<Map<String,String>> tags;

    public Input<Map<String,String>> getTags() {
        return this.tags == null ? Input.empty() : this.tags;
    }

    /**
     * Boolean if the EIP is in a VPC or not.
     * 
     */
    @InputImport(name="vpc")
      private final @Nullable Input<Boolean> vpc;

    public Input<Boolean> getVpc() {
        return this.vpc == null ? Input.empty() : this.vpc;
    }

    public EipArgs(
        @Nullable Input<String> address,
        @Nullable Input<String> associateWithPrivateIp,
        @Nullable Input<String> customerOwnedIpv4Pool,
        @Nullable Input<String> instance,
        @Nullable Input<String> networkBorderGroup,
        @Nullable Input<String> networkInterface,
        @Nullable Input<String> publicIpv4Pool,
        @Nullable Input<Map<String,String>> tags,
        @Nullable Input<Boolean> vpc) {
        this.address = address;
        this.associateWithPrivateIp = associateWithPrivateIp;
        this.customerOwnedIpv4Pool = customerOwnedIpv4Pool;
        this.instance = instance;
        this.networkBorderGroup = networkBorderGroup;
        this.networkInterface = networkInterface;
        this.publicIpv4Pool = publicIpv4Pool;
        this.tags = tags;
        this.vpc = vpc;
    }

    private EipArgs() {
        this.address = Input.empty();
        this.associateWithPrivateIp = Input.empty();
        this.customerOwnedIpv4Pool = Input.empty();
        this.instance = Input.empty();
        this.networkBorderGroup = Input.empty();
        this.networkInterface = Input.empty();
        this.publicIpv4Pool = Input.empty();
        this.tags = Input.empty();
        this.vpc = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(EipArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> address;
        private @Nullable Input<String> associateWithPrivateIp;
        private @Nullable Input<String> customerOwnedIpv4Pool;
        private @Nullable Input<String> instance;
        private @Nullable Input<String> networkBorderGroup;
        private @Nullable Input<String> networkInterface;
        private @Nullable Input<String> publicIpv4Pool;
        private @Nullable Input<Map<String,String>> tags;
        private @Nullable Input<Boolean> vpc;

        public Builder() {
    	      // Empty
        }

        public Builder(EipArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.address = defaults.address;
    	      this.associateWithPrivateIp = defaults.associateWithPrivateIp;
    	      this.customerOwnedIpv4Pool = defaults.customerOwnedIpv4Pool;
    	      this.instance = defaults.instance;
    	      this.networkBorderGroup = defaults.networkBorderGroup;
    	      this.networkInterface = defaults.networkInterface;
    	      this.publicIpv4Pool = defaults.publicIpv4Pool;
    	      this.tags = defaults.tags;
    	      this.vpc = defaults.vpc;
        }

        public Builder setAddress(@Nullable Input<String> address) {
            this.address = address;
            return this;
        }

        public Builder setAddress(@Nullable String address) {
            this.address = Input.ofNullable(address);
            return this;
        }

        public Builder setAssociateWithPrivateIp(@Nullable Input<String> associateWithPrivateIp) {
            this.associateWithPrivateIp = associateWithPrivateIp;
            return this;
        }

        public Builder setAssociateWithPrivateIp(@Nullable String associateWithPrivateIp) {
            this.associateWithPrivateIp = Input.ofNullable(associateWithPrivateIp);
            return this;
        }

        public Builder setCustomerOwnedIpv4Pool(@Nullable Input<String> customerOwnedIpv4Pool) {
            this.customerOwnedIpv4Pool = customerOwnedIpv4Pool;
            return this;
        }

        public Builder setCustomerOwnedIpv4Pool(@Nullable String customerOwnedIpv4Pool) {
            this.customerOwnedIpv4Pool = Input.ofNullable(customerOwnedIpv4Pool);
            return this;
        }

        public Builder setInstance(@Nullable Input<String> instance) {
            this.instance = instance;
            return this;
        }

        public Builder setInstance(@Nullable String instance) {
            this.instance = Input.ofNullable(instance);
            return this;
        }

        public Builder setNetworkBorderGroup(@Nullable Input<String> networkBorderGroup) {
            this.networkBorderGroup = networkBorderGroup;
            return this;
        }

        public Builder setNetworkBorderGroup(@Nullable String networkBorderGroup) {
            this.networkBorderGroup = Input.ofNullable(networkBorderGroup);
            return this;
        }

        public Builder setNetworkInterface(@Nullable Input<String> networkInterface) {
            this.networkInterface = networkInterface;
            return this;
        }

        public Builder setNetworkInterface(@Nullable String networkInterface) {
            this.networkInterface = Input.ofNullable(networkInterface);
            return this;
        }

        public Builder setPublicIpv4Pool(@Nullable Input<String> publicIpv4Pool) {
            this.publicIpv4Pool = publicIpv4Pool;
            return this;
        }

        public Builder setPublicIpv4Pool(@Nullable String publicIpv4Pool) {
            this.publicIpv4Pool = Input.ofNullable(publicIpv4Pool);
            return this;
        }

        public Builder setTags(@Nullable Input<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }

        public Builder setTags(@Nullable Map<String,String> tags) {
            this.tags = Input.ofNullable(tags);
            return this;
        }

        public Builder setVpc(@Nullable Input<Boolean> vpc) {
            this.vpc = vpc;
            return this;
        }

        public Builder setVpc(@Nullable Boolean vpc) {
            this.vpc = Input.ofNullable(vpc);
            return this;
        }
        public EipArgs build() {
            return new EipArgs(address, associateWithPrivateIp, customerOwnedIpv4Pool, instance, networkBorderGroup, networkInterface, publicIpv4Pool, tags, vpc);
        }
    }
}
