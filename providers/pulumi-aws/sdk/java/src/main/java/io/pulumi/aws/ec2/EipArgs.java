// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.ec2;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class EipArgs extends io.pulumi.resources.ResourceArgs {

    public static final EipArgs Empty = new EipArgs();

    /**
     * IP address from an EC2 BYOIP pool. This option is only available for VPC EIPs.
     * 
     */
    @Import(name="address")
      private final @Nullable Output<String> address;

    public Output<String> getAddress() {
        return this.address == null ? Codegen.empty() : this.address;
    }

    /**
     * User-specified primary or secondary private IP address to associate with the Elastic IP address. If no private IP address is specified, the Elastic IP address is associated with the primary private IP address.
     * 
     */
    @Import(name="associateWithPrivateIp")
      private final @Nullable Output<String> associateWithPrivateIp;

    public Output<String> getAssociateWithPrivateIp() {
        return this.associateWithPrivateIp == null ? Codegen.empty() : this.associateWithPrivateIp;
    }

    /**
     * ID  of a customer-owned address pool. For more on customer owned IP addressed check out [Customer-owned IP addresses guide](https://docs.aws.amazon.com/outposts/latest/userguide/outposts-networking-components.html#ip-addressing).
     * 
     */
    @Import(name="customerOwnedIpv4Pool")
      private final @Nullable Output<String> customerOwnedIpv4Pool;

    public Output<String> getCustomerOwnedIpv4Pool() {
        return this.customerOwnedIpv4Pool == null ? Codegen.empty() : this.customerOwnedIpv4Pool;
    }

    /**
     * EC2 instance ID.
     * 
     */
    @Import(name="instance")
      private final @Nullable Output<String> instance;

    public Output<String> getInstance() {
        return this.instance == null ? Codegen.empty() : this.instance;
    }

    /**
     * Location from which the IP address is advertised. Use this parameter to limit the address to this location.
     * 
     */
    @Import(name="networkBorderGroup")
      private final @Nullable Output<String> networkBorderGroup;

    public Output<String> getNetworkBorderGroup() {
        return this.networkBorderGroup == null ? Codegen.empty() : this.networkBorderGroup;
    }

    /**
     * Network interface ID to associate with.
     * 
     */
    @Import(name="networkInterface")
      private final @Nullable Output<String> networkInterface;

    public Output<String> getNetworkInterface() {
        return this.networkInterface == null ? Codegen.empty() : this.networkInterface;
    }

    /**
     * EC2 IPv4 address pool identifier or `amazon`. This option is only available for VPC EIPs.
     * 
     */
    @Import(name="publicIpv4Pool")
      private final @Nullable Output<String> publicIpv4Pool;

    public Output<String> getPublicIpv4Pool() {
        return this.publicIpv4Pool == null ? Codegen.empty() : this.publicIpv4Pool;
    }

    /**
     * Map of tags to assign to the resource. Tags can only be applied to EIPs in a VPC. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Import(name="tags")
      private final @Nullable Output<Map<String,String>> tags;

    public Output<Map<String,String>> getTags() {
        return this.tags == null ? Codegen.empty() : this.tags;
    }

    /**
     * Boolean if the EIP is in a VPC or not.
     * 
     */
    @Import(name="vpc")
      private final @Nullable Output<Boolean> vpc;

    public Output<Boolean> getVpc() {
        return this.vpc == null ? Codegen.empty() : this.vpc;
    }

    public EipArgs(
        @Nullable Output<String> address,
        @Nullable Output<String> associateWithPrivateIp,
        @Nullable Output<String> customerOwnedIpv4Pool,
        @Nullable Output<String> instance,
        @Nullable Output<String> networkBorderGroup,
        @Nullable Output<String> networkInterface,
        @Nullable Output<String> publicIpv4Pool,
        @Nullable Output<Map<String,String>> tags,
        @Nullable Output<Boolean> vpc) {
        this.address = address;
        this.associateWithPrivateIp = associateWithPrivateIp;
        this.customerOwnedIpv4Pool = customerOwnedIpv4Pool;
        this.instance = instance;
        this.networkBorderGroup = networkBorderGroup;
        this.networkInterface = networkInterface;
        this.publicIpv4Pool = publicIpv4Pool;
        this.tags = tags;
        this.vpc = vpc;
    }

    private EipArgs() {
        this.address = Codegen.empty();
        this.associateWithPrivateIp = Codegen.empty();
        this.customerOwnedIpv4Pool = Codegen.empty();
        this.instance = Codegen.empty();
        this.networkBorderGroup = Codegen.empty();
        this.networkInterface = Codegen.empty();
        this.publicIpv4Pool = Codegen.empty();
        this.tags = Codegen.empty();
        this.vpc = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(EipArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> address;
        private @Nullable Output<String> associateWithPrivateIp;
        private @Nullable Output<String> customerOwnedIpv4Pool;
        private @Nullable Output<String> instance;
        private @Nullable Output<String> networkBorderGroup;
        private @Nullable Output<String> networkInterface;
        private @Nullable Output<String> publicIpv4Pool;
        private @Nullable Output<Map<String,String>> tags;
        private @Nullable Output<Boolean> vpc;

        public Builder() {
    	      // Empty
        }

        public Builder(EipArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.address = defaults.address;
    	      this.associateWithPrivateIp = defaults.associateWithPrivateIp;
    	      this.customerOwnedIpv4Pool = defaults.customerOwnedIpv4Pool;
    	      this.instance = defaults.instance;
    	      this.networkBorderGroup = defaults.networkBorderGroup;
    	      this.networkInterface = defaults.networkInterface;
    	      this.publicIpv4Pool = defaults.publicIpv4Pool;
    	      this.tags = defaults.tags;
    	      this.vpc = defaults.vpc;
        }

        public Builder address(@Nullable Output<String> address) {
            this.address = address;
            return this;
        }
        public Builder address(@Nullable String address) {
            this.address = Codegen.ofNullable(address);
            return this;
        }
        public Builder associateWithPrivateIp(@Nullable Output<String> associateWithPrivateIp) {
            this.associateWithPrivateIp = associateWithPrivateIp;
            return this;
        }
        public Builder associateWithPrivateIp(@Nullable String associateWithPrivateIp) {
            this.associateWithPrivateIp = Codegen.ofNullable(associateWithPrivateIp);
            return this;
        }
        public Builder customerOwnedIpv4Pool(@Nullable Output<String> customerOwnedIpv4Pool) {
            this.customerOwnedIpv4Pool = customerOwnedIpv4Pool;
            return this;
        }
        public Builder customerOwnedIpv4Pool(@Nullable String customerOwnedIpv4Pool) {
            this.customerOwnedIpv4Pool = Codegen.ofNullable(customerOwnedIpv4Pool);
            return this;
        }
        public Builder instance(@Nullable Output<String> instance) {
            this.instance = instance;
            return this;
        }
        public Builder instance(@Nullable String instance) {
            this.instance = Codegen.ofNullable(instance);
            return this;
        }
        public Builder networkBorderGroup(@Nullable Output<String> networkBorderGroup) {
            this.networkBorderGroup = networkBorderGroup;
            return this;
        }
        public Builder networkBorderGroup(@Nullable String networkBorderGroup) {
            this.networkBorderGroup = Codegen.ofNullable(networkBorderGroup);
            return this;
        }
        public Builder networkInterface(@Nullable Output<String> networkInterface) {
            this.networkInterface = networkInterface;
            return this;
        }
        public Builder networkInterface(@Nullable String networkInterface) {
            this.networkInterface = Codegen.ofNullable(networkInterface);
            return this;
        }
        public Builder publicIpv4Pool(@Nullable Output<String> publicIpv4Pool) {
            this.publicIpv4Pool = publicIpv4Pool;
            return this;
        }
        public Builder publicIpv4Pool(@Nullable String publicIpv4Pool) {
            this.publicIpv4Pool = Codegen.ofNullable(publicIpv4Pool);
            return this;
        }
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = Codegen.ofNullable(tags);
            return this;
        }
        public Builder vpc(@Nullable Output<Boolean> vpc) {
            this.vpc = vpc;
            return this;
        }
        public Builder vpc(@Nullable Boolean vpc) {
            this.vpc = Codegen.ofNullable(vpc);
            return this;
        }        public EipArgs build() {
            return new EipArgs(address, associateWithPrivateIp, customerOwnedIpv4Pool, instance, networkBorderGroup, networkInterface, publicIpv4Pool, tags, vpc);
        }
    }
}
