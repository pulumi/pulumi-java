// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.opsworks;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;


public final class RdsDbInstanceArgs extends io.pulumi.resources.ResourceArgs {

    public static final RdsDbInstanceArgs Empty = new RdsDbInstanceArgs();

    /**
     * A db password
     * 
     */
    @InputImport(name="dbPassword", required=true)
      private final Input<String> dbPassword;

    public Input<String> getDbPassword() {
        return this.dbPassword;
    }

    /**
     * A db username
     * 
     */
    @InputImport(name="dbUser", required=true)
      private final Input<String> dbUser;

    public Input<String> getDbUser() {
        return this.dbUser;
    }

    /**
     * The db instance to register for this stack. Changing this will force a new resource.
     * 
     */
    @InputImport(name="rdsDbInstanceArn", required=true)
      private final Input<String> rdsDbInstanceArn;

    public Input<String> getRdsDbInstanceArn() {
        return this.rdsDbInstanceArn;
    }

    /**
     * The stack to register a db instance for. Changing this will force a new resource.
     * 
     */
    @InputImport(name="stackId", required=true)
      private final Input<String> stackId;

    public Input<String> getStackId() {
        return this.stackId;
    }

    public RdsDbInstanceArgs(
        Input<String> dbPassword,
        Input<String> dbUser,
        Input<String> rdsDbInstanceArn,
        Input<String> stackId) {
        this.dbPassword = Objects.requireNonNull(dbPassword, "expected parameter 'dbPassword' to be non-null");
        this.dbUser = Objects.requireNonNull(dbUser, "expected parameter 'dbUser' to be non-null");
        this.rdsDbInstanceArn = Objects.requireNonNull(rdsDbInstanceArn, "expected parameter 'rdsDbInstanceArn' to be non-null");
        this.stackId = Objects.requireNonNull(stackId, "expected parameter 'stackId' to be non-null");
    }

    private RdsDbInstanceArgs() {
        this.dbPassword = Input.empty();
        this.dbUser = Input.empty();
        this.rdsDbInstanceArn = Input.empty();
        this.stackId = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RdsDbInstanceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<String> dbPassword;
        private Input<String> dbUser;
        private Input<String> rdsDbInstanceArn;
        private Input<String> stackId;

        public Builder() {
    	      // Empty
        }

        public Builder(RdsDbInstanceArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dbPassword = defaults.dbPassword;
    	      this.dbUser = defaults.dbUser;
    	      this.rdsDbInstanceArn = defaults.rdsDbInstanceArn;
    	      this.stackId = defaults.stackId;
        }

        public Builder setDbPassword(Input<String> dbPassword) {
            this.dbPassword = Objects.requireNonNull(dbPassword);
            return this;
        }

        public Builder setDbPassword(String dbPassword) {
            this.dbPassword = Input.of(Objects.requireNonNull(dbPassword));
            return this;
        }

        public Builder setDbUser(Input<String> dbUser) {
            this.dbUser = Objects.requireNonNull(dbUser);
            return this;
        }

        public Builder setDbUser(String dbUser) {
            this.dbUser = Input.of(Objects.requireNonNull(dbUser));
            return this;
        }

        public Builder setRdsDbInstanceArn(Input<String> rdsDbInstanceArn) {
            this.rdsDbInstanceArn = Objects.requireNonNull(rdsDbInstanceArn);
            return this;
        }

        public Builder setRdsDbInstanceArn(String rdsDbInstanceArn) {
            this.rdsDbInstanceArn = Input.of(Objects.requireNonNull(rdsDbInstanceArn));
            return this;
        }

        public Builder setStackId(Input<String> stackId) {
            this.stackId = Objects.requireNonNull(stackId);
            return this;
        }

        public Builder setStackId(String stackId) {
            this.stackId = Input.of(Objects.requireNonNull(stackId));
            return this;
        }
        public RdsDbInstanceArgs build() {
            return new RdsDbInstanceArgs(dbPassword, dbUser, rdsDbInstanceArn, stackId);
        }
    }
}
