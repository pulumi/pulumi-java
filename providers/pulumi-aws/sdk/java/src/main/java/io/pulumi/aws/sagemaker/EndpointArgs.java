// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.sagemaker;

import io.pulumi.aws.sagemaker.inputs.EndpointDeploymentConfigArgs;
import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class EndpointArgs extends io.pulumi.resources.ResourceArgs {

    public static final EndpointArgs Empty = new EndpointArgs();

    /**
     * The deployment configuration for an endpoint, which contains the desired deployment strategy and rollback configurations. See Deployment Config.
     * 
     */
    @InputImport(name="deploymentConfig")
    private final @Nullable Input<EndpointDeploymentConfigArgs> deploymentConfig;

    public Input<EndpointDeploymentConfigArgs> getDeploymentConfig() {
        return this.deploymentConfig == null ? Input.empty() : this.deploymentConfig;
    }

    /**
     * The name of the endpoint configuration to use.
     * 
     */
    @InputImport(name="endpointConfigName", required=true)
    private final Input<String> endpointConfigName;

    public Input<String> getEndpointConfigName() {
        return this.endpointConfigName;
    }

    /**
     * The name of the endpoint.
     * 
     */
    @InputImport(name="name")
    private final @Nullable Input<String> name;

    public Input<String> getName() {
        return this.name == null ? Input.empty() : this.name;
    }

    /**
     * A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @InputImport(name="tags")
    private final @Nullable Input<Map<String,String>> tags;

    public Input<Map<String,String>> getTags() {
        return this.tags == null ? Input.empty() : this.tags;
    }

    public EndpointArgs(
        @Nullable Input<EndpointDeploymentConfigArgs> deploymentConfig,
        Input<String> endpointConfigName,
        @Nullable Input<String> name,
        @Nullable Input<Map<String,String>> tags) {
        this.deploymentConfig = deploymentConfig;
        this.endpointConfigName = Objects.requireNonNull(endpointConfigName, "expected parameter 'endpointConfigName' to be non-null");
        this.name = name;
        this.tags = tags;
    }

    private EndpointArgs() {
        this.deploymentConfig = Input.empty();
        this.endpointConfigName = Input.empty();
        this.name = Input.empty();
        this.tags = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(EndpointArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<EndpointDeploymentConfigArgs> deploymentConfig;
        private Input<String> endpointConfigName;
        private @Nullable Input<String> name;
        private @Nullable Input<Map<String,String>> tags;

        public Builder() {
    	      // Empty
        }

        public Builder(EndpointArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.deploymentConfig = defaults.deploymentConfig;
    	      this.endpointConfigName = defaults.endpointConfigName;
    	      this.name = defaults.name;
    	      this.tags = defaults.tags;
        }

        public Builder setDeploymentConfig(@Nullable Input<EndpointDeploymentConfigArgs> deploymentConfig) {
            this.deploymentConfig = deploymentConfig;
            return this;
        }

        public Builder setDeploymentConfig(@Nullable EndpointDeploymentConfigArgs deploymentConfig) {
            this.deploymentConfig = Input.ofNullable(deploymentConfig);
            return this;
        }

        public Builder setEndpointConfigName(Input<String> endpointConfigName) {
            this.endpointConfigName = Objects.requireNonNull(endpointConfigName);
            return this;
        }

        public Builder setEndpointConfigName(String endpointConfigName) {
            this.endpointConfigName = Input.of(Objects.requireNonNull(endpointConfigName));
            return this;
        }

        public Builder setName(@Nullable Input<String> name) {
            this.name = name;
            return this;
        }

        public Builder setName(@Nullable String name) {
            this.name = Input.ofNullable(name);
            return this;
        }

        public Builder setTags(@Nullable Input<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }

        public Builder setTags(@Nullable Map<String,String> tags) {
            this.tags = Input.ofNullable(tags);
            return this;
        }
        public EndpointArgs build() {
            return new EndpointArgs(deploymentConfig, endpointConfigName, name, tags);
        }
    }
}
