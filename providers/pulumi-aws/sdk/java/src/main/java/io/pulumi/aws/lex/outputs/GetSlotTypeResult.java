// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.lex.outputs;

import io.pulumi.aws.lex.outputs.GetSlotTypeEnumerationValue;
import io.pulumi.core.annotations.OutputCustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class GetSlotTypeResult {
    /**
     * Checksum identifying the version of the slot type that was created. The checksum is
     * not included as an argument because the resource will add it automatically when updating the slot type.
     * 
     */
    private final String checksum;
    /**
     * The date when the slot type version was created.
     * 
     */
    private final String createdDate;
    /**
     * A description of the slot type.
     * 
     */
    private final String description;
    /**
     * A set of EnumerationValue objects that defines the values that
     * the slot type can take. Each value can have a set of synonyms, which are additional values that help
     * train the machine learning model about the values that it resolves for a slot.
     * 
     */
    private final List<GetSlotTypeEnumerationValue> enumerationValues;
    /**
     * The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    /**
     * The date when the $LATEST version of this slot type was updated.
     * 
     */
    private final String lastUpdatedDate;
    /**
     * The name of the slot type. The name is not case sensitive.
     * 
     */
    private final String name;
    /**
     * Determines the slot resolution strategy that Amazon Lex
     * uses to return slot type values. `ORIGINAL_VALUE` returns the value entered by the user if the user
     * value is similar to the slot value. `TOP_RESOLUTION` returns the first value in the resolution list
     * if there is a resolution list for the slot, otherwise null is returned.
     * 
     */
    private final String valueSelectionStrategy;
    /**
     * The version of the slot type.
     * 
     */
    private final @Nullable String version;

    @OutputCustomType.Constructor({"checksum","createdDate","description","enumerationValues","id","lastUpdatedDate","name","valueSelectionStrategy","version"})
    private GetSlotTypeResult(
        String checksum,
        String createdDate,
        String description,
        List<GetSlotTypeEnumerationValue> enumerationValues,
        String id,
        String lastUpdatedDate,
        String name,
        String valueSelectionStrategy,
        @Nullable String version) {
        this.checksum = Objects.requireNonNull(checksum);
        this.createdDate = Objects.requireNonNull(createdDate);
        this.description = Objects.requireNonNull(description);
        this.enumerationValues = Objects.requireNonNull(enumerationValues);
        this.id = Objects.requireNonNull(id);
        this.lastUpdatedDate = Objects.requireNonNull(lastUpdatedDate);
        this.name = Objects.requireNonNull(name);
        this.valueSelectionStrategy = Objects.requireNonNull(valueSelectionStrategy);
        this.version = version;
    }

    /**
     * Checksum identifying the version of the slot type that was created. The checksum is
     * not included as an argument because the resource will add it automatically when updating the slot type.
     * 
     */
    public String getChecksum() {
        return this.checksum;
    }
    /**
     * The date when the slot type version was created.
     * 
     */
    public String getCreatedDate() {
        return this.createdDate;
    }
    /**
     * A description of the slot type.
     * 
     */
    public String getDescription() {
        return this.description;
    }
    /**
     * A set of EnumerationValue objects that defines the values that
     * the slot type can take. Each value can have a set of synonyms, which are additional values that help
     * train the machine learning model about the values that it resolves for a slot.
     * 
     */
    public List<GetSlotTypeEnumerationValue> getEnumerationValues() {
        return this.enumerationValues;
    }
    /**
     * The provider-assigned unique ID for this managed resource.
     * 
     */
    public String getId() {
        return this.id;
    }
    /**
     * The date when the $LATEST version of this slot type was updated.
     * 
     */
    public String getLastUpdatedDate() {
        return this.lastUpdatedDate;
    }
    /**
     * The name of the slot type. The name is not case sensitive.
     * 
     */
    public String getName() {
        return this.name;
    }
    /**
     * Determines the slot resolution strategy that Amazon Lex
     * uses to return slot type values. `ORIGINAL_VALUE` returns the value entered by the user if the user
     * value is similar to the slot value. `TOP_RESOLUTION` returns the first value in the resolution list
     * if there is a resolution list for the slot, otherwise null is returned.
     * 
     */
    public String getValueSelectionStrategy() {
        return this.valueSelectionStrategy;
    }
    /**
     * The version of the slot type.
     * 
     */
    public Optional<String> getVersion() {
        return Optional.ofNullable(this.version);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSlotTypeResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String checksum;
        private String createdDate;
        private String description;
        private List<GetSlotTypeEnumerationValue> enumerationValues;
        private String id;
        private String lastUpdatedDate;
        private String name;
        private String valueSelectionStrategy;
        private @Nullable String version;

        public Builder() {
    	      // Empty
        }

        public Builder(GetSlotTypeResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.checksum = defaults.checksum;
    	      this.createdDate = defaults.createdDate;
    	      this.description = defaults.description;
    	      this.enumerationValues = defaults.enumerationValues;
    	      this.id = defaults.id;
    	      this.lastUpdatedDate = defaults.lastUpdatedDate;
    	      this.name = defaults.name;
    	      this.valueSelectionStrategy = defaults.valueSelectionStrategy;
    	      this.version = defaults.version;
        }

        public Builder setChecksum(String checksum) {
            this.checksum = Objects.requireNonNull(checksum);
            return this;
        }

        public Builder setCreatedDate(String createdDate) {
            this.createdDate = Objects.requireNonNull(createdDate);
            return this;
        }

        public Builder setDescription(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }

        public Builder setEnumerationValues(List<GetSlotTypeEnumerationValue> enumerationValues) {
            this.enumerationValues = Objects.requireNonNull(enumerationValues);
            return this;
        }

        public Builder setId(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }

        public Builder setLastUpdatedDate(String lastUpdatedDate) {
            this.lastUpdatedDate = Objects.requireNonNull(lastUpdatedDate);
            return this;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setValueSelectionStrategy(String valueSelectionStrategy) {
            this.valueSelectionStrategy = Objects.requireNonNull(valueSelectionStrategy);
            return this;
        }

        public Builder setVersion(@Nullable String version) {
            this.version = version;
            return this;
        }
        public GetSlotTypeResult build() {
            return new GetSlotTypeResult(checksum, createdDate, description, enumerationValues, id, lastUpdatedDate, name, valueSelectionStrategy, version);
        }
    }
}
