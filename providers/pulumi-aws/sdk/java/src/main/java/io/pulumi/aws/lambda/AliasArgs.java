// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.lambda;

import io.pulumi.aws.lambda.inputs.AliasRoutingConfigArgs;
import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class AliasArgs extends io.pulumi.resources.ResourceArgs {

    public static final AliasArgs Empty = new AliasArgs();

    /**
     * Description of the alias.
     * 
     */
    @InputImport(name="description")
    private final @Nullable Input<String> description;

    public Input<String> getDescription() {
        return this.description == null ? Input.empty() : this.description;
    }

    /**
     * Lambda Function name or ARN.
     * 
     */
    @InputImport(name="functionName", required=true)
    private final Input<String> functionName;

    public Input<String> getFunctionName() {
        return this.functionName;
    }

    /**
     * Lambda function version for which you are creating the alias. Pattern: `(\$LATEST|[0-9]+)`.
     * 
     */
    @InputImport(name="functionVersion", required=true)
    private final Input<String> functionVersion;

    public Input<String> getFunctionVersion() {
        return this.functionVersion;
    }

    /**
     * Name for the alias you are creating. Pattern: `(?!^[0-9]+$)([a-zA-Z0-9-_]+)`
     * 
     */
    @InputImport(name="name")
    private final @Nullable Input<String> name;

    public Input<String> getName() {
        return this.name == null ? Input.empty() : this.name;
    }

    /**
     * The Lambda alias' route configuration settings. Fields documented below
     * 
     */
    @InputImport(name="routingConfig")
    private final @Nullable Input<AliasRoutingConfigArgs> routingConfig;

    public Input<AliasRoutingConfigArgs> getRoutingConfig() {
        return this.routingConfig == null ? Input.empty() : this.routingConfig;
    }

    public AliasArgs(
        @Nullable Input<String> description,
        Input<String> functionName,
        Input<String> functionVersion,
        @Nullable Input<String> name,
        @Nullable Input<AliasRoutingConfigArgs> routingConfig) {
        this.description = description;
        this.functionName = Objects.requireNonNull(functionName, "expected parameter 'functionName' to be non-null");
        this.functionVersion = Objects.requireNonNull(functionVersion, "expected parameter 'functionVersion' to be non-null");
        this.name = name;
        this.routingConfig = routingConfig;
    }

    private AliasArgs() {
        this.description = Input.empty();
        this.functionName = Input.empty();
        this.functionVersion = Input.empty();
        this.name = Input.empty();
        this.routingConfig = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AliasArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> description;
        private Input<String> functionName;
        private Input<String> functionVersion;
        private @Nullable Input<String> name;
        private @Nullable Input<AliasRoutingConfigArgs> routingConfig;

        public Builder() {
    	      // Empty
        }

        public Builder(AliasArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.functionName = defaults.functionName;
    	      this.functionVersion = defaults.functionVersion;
    	      this.name = defaults.name;
    	      this.routingConfig = defaults.routingConfig;
        }

        public Builder setDescription(@Nullable Input<String> description) {
            this.description = description;
            return this;
        }

        public Builder setDescription(@Nullable String description) {
            this.description = Input.ofNullable(description);
            return this;
        }

        public Builder setFunctionName(Input<String> functionName) {
            this.functionName = Objects.requireNonNull(functionName);
            return this;
        }

        public Builder setFunctionName(String functionName) {
            this.functionName = Input.of(Objects.requireNonNull(functionName));
            return this;
        }

        public Builder setFunctionVersion(Input<String> functionVersion) {
            this.functionVersion = Objects.requireNonNull(functionVersion);
            return this;
        }

        public Builder setFunctionVersion(String functionVersion) {
            this.functionVersion = Input.of(Objects.requireNonNull(functionVersion));
            return this;
        }

        public Builder setName(@Nullable Input<String> name) {
            this.name = name;
            return this;
        }

        public Builder setName(@Nullable String name) {
            this.name = Input.ofNullable(name);
            return this;
        }

        public Builder setRoutingConfig(@Nullable Input<AliasRoutingConfigArgs> routingConfig) {
            this.routingConfig = routingConfig;
            return this;
        }

        public Builder setRoutingConfig(@Nullable AliasRoutingConfigArgs routingConfig) {
            this.routingConfig = Input.ofNullable(routingConfig);
            return this;
        }
        public AliasArgs build() {
            return new AliasArgs(description, functionName, functionVersion, name, routingConfig);
        }
    }
}
