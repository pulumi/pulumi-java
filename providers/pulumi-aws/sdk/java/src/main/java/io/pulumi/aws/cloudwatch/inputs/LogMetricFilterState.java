// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.cloudwatch.inputs;

import io.pulumi.aws.cloudwatch.inputs.LogMetricFilterMetricTransformationGetArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class LogMetricFilterState extends io.pulumi.resources.ResourceArgs {

    public static final LogMetricFilterState Empty = new LogMetricFilterState();

    /**
     * The name of the log group to associate the metric filter with.
     * 
     */
    @Import(name="logGroupName")
      private final @Nullable Output<String> logGroupName;

    public Output<String> getLogGroupName() {
        return this.logGroupName == null ? Output.empty() : this.logGroupName;
    }

    /**
     * A block defining collection of information needed to define how metric data gets emitted. See below.
     * 
     */
    @Import(name="metricTransformation")
      private final @Nullable Output<LogMetricFilterMetricTransformationGetArgs> metricTransformation;

    public Output<LogMetricFilterMetricTransformationGetArgs> getMetricTransformation() {
        return this.metricTransformation == null ? Output.empty() : this.metricTransformation;
    }

    /**
     * A name for the metric filter.
     * 
     */
    @Import(name="name")
      private final @Nullable Output<String> name;

    public Output<String> getName() {
        return this.name == null ? Output.empty() : this.name;
    }

    /**
     * A valid [CloudWatch Logs filter pattern](https://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/FilterAndPatternSyntax.html)
     * for extracting metric data out of ingested log events.
     * 
     */
    @Import(name="pattern")
      private final @Nullable Output<String> pattern;

    public Output<String> getPattern() {
        return this.pattern == null ? Output.empty() : this.pattern;
    }

    public LogMetricFilterState(
        @Nullable Output<String> logGroupName,
        @Nullable Output<LogMetricFilterMetricTransformationGetArgs> metricTransformation,
        @Nullable Output<String> name,
        @Nullable Output<String> pattern) {
        this.logGroupName = logGroupName;
        this.metricTransformation = metricTransformation;
        this.name = name;
        this.pattern = pattern;
    }

    private LogMetricFilterState() {
        this.logGroupName = Output.empty();
        this.metricTransformation = Output.empty();
        this.name = Output.empty();
        this.pattern = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(LogMetricFilterState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> logGroupName;
        private @Nullable Output<LogMetricFilterMetricTransformationGetArgs> metricTransformation;
        private @Nullable Output<String> name;
        private @Nullable Output<String> pattern;

        public Builder() {
    	      // Empty
        }

        public Builder(LogMetricFilterState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.logGroupName = defaults.logGroupName;
    	      this.metricTransformation = defaults.metricTransformation;
    	      this.name = defaults.name;
    	      this.pattern = defaults.pattern;
        }

        public Builder logGroupName(@Nullable Output<String> logGroupName) {
            this.logGroupName = logGroupName;
            return this;
        }
        public Builder logGroupName(@Nullable String logGroupName) {
            this.logGroupName = Output.ofNullable(logGroupName);
            return this;
        }
        public Builder metricTransformation(@Nullable Output<LogMetricFilterMetricTransformationGetArgs> metricTransformation) {
            this.metricTransformation = metricTransformation;
            return this;
        }
        public Builder metricTransformation(@Nullable LogMetricFilterMetricTransformationGetArgs metricTransformation) {
            this.metricTransformation = Output.ofNullable(metricTransformation);
            return this;
        }
        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }
        public Builder name(@Nullable String name) {
            this.name = Output.ofNullable(name);
            return this;
        }
        public Builder pattern(@Nullable Output<String> pattern) {
            this.pattern = pattern;
            return this;
        }
        public Builder pattern(@Nullable String pattern) {
            this.pattern = Output.ofNullable(pattern);
            return this;
        }        public LogMetricFilterState build() {
            return new LogMetricFilterState(logGroupName, metricTransformation, name, pattern);
        }
    }
}
