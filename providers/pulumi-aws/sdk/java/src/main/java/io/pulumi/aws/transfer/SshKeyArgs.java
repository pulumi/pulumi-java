// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.transfer;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;


public final class SshKeyArgs extends io.pulumi.resources.ResourceArgs {

    public static final SshKeyArgs Empty = new SshKeyArgs();

    /**
     * The public key portion of an SSH key pair.
     * 
     */
    @InputImport(name="body", required=true)
      private final Output<String> body;

    public Output<String> getBody() {
        return this.body;
    }

    /**
     * The Server ID of the Transfer Server (e.g., `s-12345678`)
     * 
     */
    @InputImport(name="serverId", required=true)
      private final Output<String> serverId;

    public Output<String> getServerId() {
        return this.serverId;
    }

    /**
     * The name of the user account that is assigned to one or more servers.
     * 
     */
    @InputImport(name="userName", required=true)
      private final Output<String> userName;

    public Output<String> getUserName() {
        return this.userName;
    }

    public SshKeyArgs(
        Output<String> body,
        Output<String> serverId,
        Output<String> userName) {
        this.body = Objects.requireNonNull(body, "expected parameter 'body' to be non-null");
        this.serverId = Objects.requireNonNull(serverId, "expected parameter 'serverId' to be non-null");
        this.userName = Objects.requireNonNull(userName, "expected parameter 'userName' to be non-null");
    }

    private SshKeyArgs() {
        this.body = Output.empty();
        this.serverId = Output.empty();
        this.userName = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SshKeyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> body;
        private Output<String> serverId;
        private Output<String> userName;

        public Builder() {
    	      // Empty
        }

        public Builder(SshKeyArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.body = defaults.body;
    	      this.serverId = defaults.serverId;
    	      this.userName = defaults.userName;
        }

        public Builder body(Output<String> body) {
            this.body = Objects.requireNonNull(body);
            return this;
        }

        public Builder body(String body) {
            this.body = Output.of(Objects.requireNonNull(body));
            return this;
        }

        public Builder serverId(Output<String> serverId) {
            this.serverId = Objects.requireNonNull(serverId);
            return this;
        }

        public Builder serverId(String serverId) {
            this.serverId = Output.of(Objects.requireNonNull(serverId));
            return this;
        }

        public Builder userName(Output<String> userName) {
            this.userName = Objects.requireNonNull(userName);
            return this;
        }

        public Builder userName(String userName) {
            this.userName = Output.of(Objects.requireNonNull(userName));
            return this;
        }
        public SshKeyArgs build() {
            return new SshKeyArgs(body, serverId, userName);
        }
    }
}
