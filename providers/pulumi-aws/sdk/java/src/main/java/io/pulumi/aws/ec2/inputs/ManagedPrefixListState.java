// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.ec2.inputs;

import io.pulumi.aws.ec2.inputs.ManagedPrefixListEntryGetArgs;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ManagedPrefixListState extends io.pulumi.resources.ResourceArgs {

    public static final ManagedPrefixListState Empty = new ManagedPrefixListState();

    /**
     * Address family (`IPv4` or `IPv6`) of this prefix list.
     * 
     */
    @InputImport(name="addressFamily")
      private final @Nullable Input<String> addressFamily;

    public Input<String> getAddressFamily() {
        return this.addressFamily == null ? Input.empty() : this.addressFamily;
    }

    /**
     * ARN of the prefix list.
     * 
     */
    @InputImport(name="arn")
      private final @Nullable Input<String> arn;

    public Input<String> getArn() {
        return this.arn == null ? Input.empty() : this.arn;
    }

    /**
     * Configuration block for prefix list entry. Detailed below. Different entries may have overlapping CIDR blocks, but a particular CIDR should not be duplicated.
     * 
     */
    @InputImport(name="entries")
      private final @Nullable Input<List<ManagedPrefixListEntryGetArgs>> entries;

    public Input<List<ManagedPrefixListEntryGetArgs>> getEntries() {
        return this.entries == null ? Input.empty() : this.entries;
    }

    /**
     * Maximum number of entries that this prefix list can contain.
     * 
     */
    @InputImport(name="maxEntries")
      private final @Nullable Input<Integer> maxEntries;

    public Input<Integer> getMaxEntries() {
        return this.maxEntries == null ? Input.empty() : this.maxEntries;
    }

    /**
     * Name of this resource. The name must not start with `com.amazonaws`.
     * 
     */
    @InputImport(name="name")
      private final @Nullable Input<String> name;

    public Input<String> getName() {
        return this.name == null ? Input.empty() : this.name;
    }

    /**
     * ID of the AWS account that owns this prefix list.
     * 
     */
    @InputImport(name="ownerId")
      private final @Nullable Input<String> ownerId;

    public Input<String> getOwnerId() {
        return this.ownerId == null ? Input.empty() : this.ownerId;
    }

    /**
     * Map of tags to assign to this resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @InputImport(name="tags")
      private final @Nullable Input<Map<String,String>> tags;

    public Input<Map<String,String>> getTags() {
        return this.tags == null ? Input.empty() : this.tags;
    }

    @InputImport(name="tagsAll")
      private final @Nullable Input<Map<String,String>> tagsAll;

    public Input<Map<String,String>> getTagsAll() {
        return this.tagsAll == null ? Input.empty() : this.tagsAll;
    }

    /**
     * Latest version of this prefix list.
     * 
     */
    @InputImport(name="version")
      private final @Nullable Input<Integer> version;

    public Input<Integer> getVersion() {
        return this.version == null ? Input.empty() : this.version;
    }

    public ManagedPrefixListState(
        @Nullable Input<String> addressFamily,
        @Nullable Input<String> arn,
        @Nullable Input<List<ManagedPrefixListEntryGetArgs>> entries,
        @Nullable Input<Integer> maxEntries,
        @Nullable Input<String> name,
        @Nullable Input<String> ownerId,
        @Nullable Input<Map<String,String>> tags,
        @Nullable Input<Map<String,String>> tagsAll,
        @Nullable Input<Integer> version) {
        this.addressFamily = addressFamily;
        this.arn = arn;
        this.entries = entries;
        this.maxEntries = maxEntries;
        this.name = name;
        this.ownerId = ownerId;
        this.tags = tags;
        this.tagsAll = tagsAll;
        this.version = version;
    }

    private ManagedPrefixListState() {
        this.addressFamily = Input.empty();
        this.arn = Input.empty();
        this.entries = Input.empty();
        this.maxEntries = Input.empty();
        this.name = Input.empty();
        this.ownerId = Input.empty();
        this.tags = Input.empty();
        this.tagsAll = Input.empty();
        this.version = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ManagedPrefixListState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> addressFamily;
        private @Nullable Input<String> arn;
        private @Nullable Input<List<ManagedPrefixListEntryGetArgs>> entries;
        private @Nullable Input<Integer> maxEntries;
        private @Nullable Input<String> name;
        private @Nullable Input<String> ownerId;
        private @Nullable Input<Map<String,String>> tags;
        private @Nullable Input<Map<String,String>> tagsAll;
        private @Nullable Input<Integer> version;

        public Builder() {
    	      // Empty
        }

        public Builder(ManagedPrefixListState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.addressFamily = defaults.addressFamily;
    	      this.arn = defaults.arn;
    	      this.entries = defaults.entries;
    	      this.maxEntries = defaults.maxEntries;
    	      this.name = defaults.name;
    	      this.ownerId = defaults.ownerId;
    	      this.tags = defaults.tags;
    	      this.tagsAll = defaults.tagsAll;
    	      this.version = defaults.version;
        }

        public Builder addressFamily(@Nullable Input<String> addressFamily) {
            this.addressFamily = addressFamily;
            return this;
        }

        public Builder addressFamily(@Nullable String addressFamily) {
            this.addressFamily = Input.ofNullable(addressFamily);
            return this;
        }

        public Builder arn(@Nullable Input<String> arn) {
            this.arn = arn;
            return this;
        }

        public Builder arn(@Nullable String arn) {
            this.arn = Input.ofNullable(arn);
            return this;
        }

        public Builder entries(@Nullable Input<List<ManagedPrefixListEntryGetArgs>> entries) {
            this.entries = entries;
            return this;
        }

        public Builder entries(@Nullable List<ManagedPrefixListEntryGetArgs> entries) {
            this.entries = Input.ofNullable(entries);
            return this;
        }

        public Builder maxEntries(@Nullable Input<Integer> maxEntries) {
            this.maxEntries = maxEntries;
            return this;
        }

        public Builder maxEntries(@Nullable Integer maxEntries) {
            this.maxEntries = Input.ofNullable(maxEntries);
            return this;
        }

        public Builder name(@Nullable Input<String> name) {
            this.name = name;
            return this;
        }

        public Builder name(@Nullable String name) {
            this.name = Input.ofNullable(name);
            return this;
        }

        public Builder ownerId(@Nullable Input<String> ownerId) {
            this.ownerId = ownerId;
            return this;
        }

        public Builder ownerId(@Nullable String ownerId) {
            this.ownerId = Input.ofNullable(ownerId);
            return this;
        }

        public Builder tags(@Nullable Input<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }

        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = Input.ofNullable(tags);
            return this;
        }

        public Builder tagsAll(@Nullable Input<Map<String,String>> tagsAll) {
            this.tagsAll = tagsAll;
            return this;
        }

        public Builder tagsAll(@Nullable Map<String,String> tagsAll) {
            this.tagsAll = Input.ofNullable(tagsAll);
            return this;
        }

        public Builder version(@Nullable Input<Integer> version) {
            this.version = version;
            return this;
        }

        public Builder version(@Nullable Integer version) {
            this.version = Input.ofNullable(version);
            return this;
        }
        public ManagedPrefixListState build() {
            return new ManagedPrefixListState(addressFamily, arn, entries, maxEntries, name, ownerId, tags, tagsAll, version);
        }
    }
}
