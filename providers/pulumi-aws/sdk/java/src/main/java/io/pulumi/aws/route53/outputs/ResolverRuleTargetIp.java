// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.route53.outputs;

import io.pulumi.core.annotations.OutputCustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class ResolverRuleTargetIp {
    /**
     * One IP address that you want to forward DNS queries to. You can specify only IPv4 addresses.
     * 
     */
    private final String ip;
    /**
     * The port at `ip` that you want to forward DNS queries to. Default value is `53`
     * 
     */
    private final @Nullable Integer port;

    @OutputCustomType.Constructor({"ip","port"})
    private ResolverRuleTargetIp(
        String ip,
        @Nullable Integer port) {
        this.ip = Objects.requireNonNull(ip);
        this.port = port;
    }

    /**
     * One IP address that you want to forward DNS queries to. You can specify only IPv4 addresses.
     * 
     */
    public String getIp() {
        return this.ip;
    }
    /**
     * The port at `ip` that you want to forward DNS queries to. Default value is `53`
     * 
     */
    public Optional<Integer> getPort() {
        return Optional.ofNullable(this.port);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ResolverRuleTargetIp defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String ip;
        private @Nullable Integer port;

        public Builder() {
    	      // Empty
        }

        public Builder(ResolverRuleTargetIp defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.ip = defaults.ip;
    	      this.port = defaults.port;
        }

        public Builder setIp(String ip) {
            this.ip = Objects.requireNonNull(ip);
            return this;
        }

        public Builder setPort(@Nullable Integer port) {
            this.port = port;
            return this;
        }
        public ResolverRuleTargetIp build() {
            return new ResolverRuleTargetIp(ip, port);
        }
    }
}
