// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.cloudfront.outputs;

import io.pulumi.aws.cloudfront.outputs.FieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfiles;
import io.pulumi.core.annotations.OutputCustomType;
import java.lang.Boolean;
import java.util.Objects;

@OutputCustomType
public final class FieldLevelEncryptionConfigContentTypeProfileConfig {
    /**
     * Object that contains an attribute `items` that contains the list of configurations for a field-level encryption content type-profile. See Content Type Profile.
     * 
     */
    private final FieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfiles contentTypeProfiles;
    /**
     * specifies what to do when an unknown content type is provided for the profile. If true, content is forwarded without being encrypted when the content type is unknown. If false (the default), an error is returned when the content type is unknown.
     * 
     */
    private final Boolean forwardWhenContentTypeIsUnknown;

    @OutputCustomType.Constructor
    private FieldLevelEncryptionConfigContentTypeProfileConfig(
        @OutputCustomType.Parameter("contentTypeProfiles") FieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfiles contentTypeProfiles,
        @OutputCustomType.Parameter("forwardWhenContentTypeIsUnknown") Boolean forwardWhenContentTypeIsUnknown) {
        this.contentTypeProfiles = contentTypeProfiles;
        this.forwardWhenContentTypeIsUnknown = forwardWhenContentTypeIsUnknown;
    }

    /**
     * Object that contains an attribute `items` that contains the list of configurations for a field-level encryption content type-profile. See Content Type Profile.
     * 
    */
    public FieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfiles getContentTypeProfiles() {
        return this.contentTypeProfiles;
    }
    /**
     * specifies what to do when an unknown content type is provided for the profile. If true, content is forwarded without being encrypted when the content type is unknown. If false (the default), an error is returned when the content type is unknown.
     * 
    */
    public Boolean getForwardWhenContentTypeIsUnknown() {
        return this.forwardWhenContentTypeIsUnknown;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FieldLevelEncryptionConfigContentTypeProfileConfig defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfiles contentTypeProfiles;
        private Boolean forwardWhenContentTypeIsUnknown;

        public Builder() {
    	      // Empty
        }

        public Builder(FieldLevelEncryptionConfigContentTypeProfileConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.contentTypeProfiles = defaults.contentTypeProfiles;
    	      this.forwardWhenContentTypeIsUnknown = defaults.forwardWhenContentTypeIsUnknown;
        }

        public Builder setContentTypeProfiles(FieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfiles contentTypeProfiles) {
            this.contentTypeProfiles = Objects.requireNonNull(contentTypeProfiles);
            return this;
        }

        public Builder setForwardWhenContentTypeIsUnknown(Boolean forwardWhenContentTypeIsUnknown) {
            this.forwardWhenContentTypeIsUnknown = Objects.requireNonNull(forwardWhenContentTypeIsUnknown);
            return this;
        }
        public FieldLevelEncryptionConfigContentTypeProfileConfig build() {
            return new FieldLevelEncryptionConfigContentTypeProfileConfig(contentTypeProfiles, forwardWhenContentTypeIsUnknown);
        }
    }
}
