// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.opsworks;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class UserProfileArgs extends io.pulumi.resources.ResourceArgs {

    public static final UserProfileArgs Empty = new UserProfileArgs();

    /**
     * Whether users can specify their own SSH public key through the My Settings page
     * 
     */
    @InputImport(name="allowSelfManagement")
      private final @Nullable Input<Boolean> allowSelfManagement;

    public Input<Boolean> getAllowSelfManagement() {
        return this.allowSelfManagement == null ? Input.empty() : this.allowSelfManagement;
    }

    /**
     * The users public key
     * 
     */
    @InputImport(name="sshPublicKey")
      private final @Nullable Input<String> sshPublicKey;

    public Input<String> getSshPublicKey() {
        return this.sshPublicKey == null ? Input.empty() : this.sshPublicKey;
    }

    /**
     * The ssh username, with witch this user wants to log in
     * 
     */
    @InputImport(name="sshUsername", required=true)
      private final Input<String> sshUsername;

    public Input<String> getSshUsername() {
        return this.sshUsername;
    }

    /**
     * The user's IAM ARN
     * 
     */
    @InputImport(name="userArn", required=true)
      private final Input<String> userArn;

    public Input<String> getUserArn() {
        return this.userArn;
    }

    public UserProfileArgs(
        @Nullable Input<Boolean> allowSelfManagement,
        @Nullable Input<String> sshPublicKey,
        Input<String> sshUsername,
        Input<String> userArn) {
        this.allowSelfManagement = allowSelfManagement;
        this.sshPublicKey = sshPublicKey;
        this.sshUsername = Objects.requireNonNull(sshUsername, "expected parameter 'sshUsername' to be non-null");
        this.userArn = Objects.requireNonNull(userArn, "expected parameter 'userArn' to be non-null");
    }

    private UserProfileArgs() {
        this.allowSelfManagement = Input.empty();
        this.sshPublicKey = Input.empty();
        this.sshUsername = Input.empty();
        this.userArn = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(UserProfileArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<Boolean> allowSelfManagement;
        private @Nullable Input<String> sshPublicKey;
        private Input<String> sshUsername;
        private Input<String> userArn;

        public Builder() {
    	      // Empty
        }

        public Builder(UserProfileArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allowSelfManagement = defaults.allowSelfManagement;
    	      this.sshPublicKey = defaults.sshPublicKey;
    	      this.sshUsername = defaults.sshUsername;
    	      this.userArn = defaults.userArn;
        }

        public Builder allowSelfManagement(@Nullable Input<Boolean> allowSelfManagement) {
            this.allowSelfManagement = allowSelfManagement;
            return this;
        }

        public Builder allowSelfManagement(@Nullable Boolean allowSelfManagement) {
            this.allowSelfManagement = Input.ofNullable(allowSelfManagement);
            return this;
        }

        public Builder sshPublicKey(@Nullable Input<String> sshPublicKey) {
            this.sshPublicKey = sshPublicKey;
            return this;
        }

        public Builder sshPublicKey(@Nullable String sshPublicKey) {
            this.sshPublicKey = Input.ofNullable(sshPublicKey);
            return this;
        }

        public Builder sshUsername(Input<String> sshUsername) {
            this.sshUsername = Objects.requireNonNull(sshUsername);
            return this;
        }

        public Builder sshUsername(String sshUsername) {
            this.sshUsername = Input.of(Objects.requireNonNull(sshUsername));
            return this;
        }

        public Builder userArn(Input<String> userArn) {
            this.userArn = Objects.requireNonNull(userArn);
            return this;
        }

        public Builder userArn(String userArn) {
            this.userArn = Input.of(Objects.requireNonNull(userArn));
            return this;
        }
        public UserProfileArgs build() {
            return new UserProfileArgs(allowSelfManagement, sshPublicKey, sshUsername, userArn);
        }
    }
}
