// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.cognito.inputs;

import io.pulumi.aws.cognito.inputs.UserPoolAccountRecoverySettingGetArgs;
import io.pulumi.aws.cognito.inputs.UserPoolAdminCreateUserConfigGetArgs;
import io.pulumi.aws.cognito.inputs.UserPoolDeviceConfigurationGetArgs;
import io.pulumi.aws.cognito.inputs.UserPoolEmailConfigurationGetArgs;
import io.pulumi.aws.cognito.inputs.UserPoolLambdaConfigGetArgs;
import io.pulumi.aws.cognito.inputs.UserPoolPasswordPolicyGetArgs;
import io.pulumi.aws.cognito.inputs.UserPoolSchemaGetArgs;
import io.pulumi.aws.cognito.inputs.UserPoolSmsConfigurationGetArgs;
import io.pulumi.aws.cognito.inputs.UserPoolSoftwareTokenMfaConfigurationGetArgs;
import io.pulumi.aws.cognito.inputs.UserPoolUserPoolAddOnsGetArgs;
import io.pulumi.aws.cognito.inputs.UserPoolUsernameConfigurationGetArgs;
import io.pulumi.aws.cognito.inputs.UserPoolVerificationMessageTemplateGetArgs;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class UserPoolState extends io.pulumi.resources.ResourceArgs {

    public static final UserPoolState Empty = new UserPoolState();

    /**
     * Configuration block to define which verified available method a user can use to recover their forgotten password. Detailed below.
     * 
     */
    @InputImport(name="accountRecoverySetting")
      private final @Nullable Input<UserPoolAccountRecoverySettingGetArgs> accountRecoverySetting;

    public Input<UserPoolAccountRecoverySettingGetArgs> getAccountRecoverySetting() {
        return this.accountRecoverySetting == null ? Input.empty() : this.accountRecoverySetting;
    }

    /**
     * Configuration block for creating a new user profile. Detailed below.
     * 
     */
    @InputImport(name="adminCreateUserConfig")
      private final @Nullable Input<UserPoolAdminCreateUserConfigGetArgs> adminCreateUserConfig;

    public Input<UserPoolAdminCreateUserConfigGetArgs> getAdminCreateUserConfig() {
        return this.adminCreateUserConfig == null ? Input.empty() : this.adminCreateUserConfig;
    }

    /**
     * Attributes supported as an alias for this user pool. Valid values: `phone_number`, `email`, or `preferred_username`. Conflicts with `username_attributes`.
     * 
     */
    @InputImport(name="aliasAttributes")
      private final @Nullable Input<List<String>> aliasAttributes;

    public Input<List<String>> getAliasAttributes() {
        return this.aliasAttributes == null ? Input.empty() : this.aliasAttributes;
    }

    /**
     * ARN of the user pool.
     * 
     */
    @InputImport(name="arn")
      private final @Nullable Input<String> arn;

    public Input<String> getArn() {
        return this.arn == null ? Input.empty() : this.arn;
    }

    /**
     * Attributes to be auto-verified. Valid values: `email`, `phone_number`.
     * 
     */
    @InputImport(name="autoVerifiedAttributes")
      private final @Nullable Input<List<String>> autoVerifiedAttributes;

    public Input<List<String>> getAutoVerifiedAttributes() {
        return this.autoVerifiedAttributes == null ? Input.empty() : this.autoVerifiedAttributes;
    }

    /**
     * Date the user pool was created.
     * 
     */
    @InputImport(name="creationDate")
      private final @Nullable Input<String> creationDate;

    public Input<String> getCreationDate() {
        return this.creationDate == null ? Input.empty() : this.creationDate;
    }

    /**
     * A custom domain name that you provide to Amazon Cognito. This parameter applies only if you use a custom domain to host the sign-up and sign-in pages for your application. For example: `auth.example.com`.
     * 
     */
    @InputImport(name="customDomain")
      private final @Nullable Input<String> customDomain;

    public Input<String> getCustomDomain() {
        return this.customDomain == null ? Input.empty() : this.customDomain;
    }

    /**
     * Configuration block for the user pool's device tracking. Detailed below.
     * 
     */
    @InputImport(name="deviceConfiguration")
      private final @Nullable Input<UserPoolDeviceConfigurationGetArgs> deviceConfiguration;

    public Input<UserPoolDeviceConfigurationGetArgs> getDeviceConfiguration() {
        return this.deviceConfiguration == null ? Input.empty() : this.deviceConfiguration;
    }

    /**
     * Holds the domain prefix if the user pool has a domain associated with it.
     * 
     */
    @InputImport(name="domain")
      private final @Nullable Input<String> domain;

    public Input<String> getDomain() {
        return this.domain == null ? Input.empty() : this.domain;
    }

    /**
     * Configuration block for configuring email. Detailed below.
     * 
     */
    @InputImport(name="emailConfiguration")
      private final @Nullable Input<UserPoolEmailConfigurationGetArgs> emailConfiguration;

    public Input<UserPoolEmailConfigurationGetArgs> getEmailConfiguration() {
        return this.emailConfiguration == null ? Input.empty() : this.emailConfiguration;
    }

    /**
     * String representing the email verification message. Conflicts with `verification_message_template` configuration block `email_message` argument.
     * 
     */
    @InputImport(name="emailVerificationMessage")
      private final @Nullable Input<String> emailVerificationMessage;

    public Input<String> getEmailVerificationMessage() {
        return this.emailVerificationMessage == null ? Input.empty() : this.emailVerificationMessage;
    }

    /**
     * String representing the email verification subject. Conflicts with `verification_message_template` configuration block `email_subject` argument.
     * 
     */
    @InputImport(name="emailVerificationSubject")
      private final @Nullable Input<String> emailVerificationSubject;

    public Input<String> getEmailVerificationSubject() {
        return this.emailVerificationSubject == null ? Input.empty() : this.emailVerificationSubject;
    }

    /**
     * Endpoint name of the user pool. Example format: `cognito-idp.REGION.amazonaws.com/xxxx_yyyyy`
     * 
     */
    @InputImport(name="endpoint")
      private final @Nullable Input<String> endpoint;

    public Input<String> getEndpoint() {
        return this.endpoint == null ? Input.empty() : this.endpoint;
    }

    /**
     * A number estimating the size of the user pool.
     * 
     */
    @InputImport(name="estimatedNumberOfUsers")
      private final @Nullable Input<Integer> estimatedNumberOfUsers;

    public Input<Integer> getEstimatedNumberOfUsers() {
        return this.estimatedNumberOfUsers == null ? Input.empty() : this.estimatedNumberOfUsers;
    }

    /**
     * Configuration block for the AWS Lambda triggers associated with the user pool. Detailed below.
     * 
     */
    @InputImport(name="lambdaConfig")
      private final @Nullable Input<UserPoolLambdaConfigGetArgs> lambdaConfig;

    public Input<UserPoolLambdaConfigGetArgs> getLambdaConfig() {
        return this.lambdaConfig == null ? Input.empty() : this.lambdaConfig;
    }

    /**
     * Date the user pool was last modified.
     * 
     */
    @InputImport(name="lastModifiedDate")
      private final @Nullable Input<String> lastModifiedDate;

    public Input<String> getLastModifiedDate() {
        return this.lastModifiedDate == null ? Input.empty() : this.lastModifiedDate;
    }

    /**
     * Multi-Factor Authentication (MFA) configuration for the User Pool. Defaults of `OFF`. Valid values are `OFF` (MFA Tokens are not required), `ON` (MFA is required for all users to sign in; requires at least one of `sms_configuration` or `software_token_mfa_configuration` to be configured), or `OPTIONAL` (MFA Will be required only for individual users who have MFA Enabled; requires at least one of `sms_configuration` or `software_token_mfa_configuration` to be configured).
     * 
     */
    @InputImport(name="mfaConfiguration")
      private final @Nullable Input<String> mfaConfiguration;

    public Input<String> getMfaConfiguration() {
        return this.mfaConfiguration == null ? Input.empty() : this.mfaConfiguration;
    }

    /**
     * Name of the attribute.
     * 
     */
    @InputImport(name="name")
      private final @Nullable Input<String> name;

    public Input<String> getName() {
        return this.name == null ? Input.empty() : this.name;
    }

    /**
     * Configuration blocked for information about the user pool password policy. Detailed below.
     * 
     */
    @InputImport(name="passwordPolicy")
      private final @Nullable Input<UserPoolPasswordPolicyGetArgs> passwordPolicy;

    public Input<UserPoolPasswordPolicyGetArgs> getPasswordPolicy() {
        return this.passwordPolicy == null ? Input.empty() : this.passwordPolicy;
    }

    /**
     * Configuration block for the schema attributes of a user pool. Detailed below. Schema attributes from the [standard attribute set](https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-settings-attributes.html#cognito-user-pools-standard-attributes) only need to be specified if they are different from the default configuration. Attributes can be added, but not modified or removed. Maximum of 50 attributes.
     * 
     */
    @InputImport(name="schemas")
      private final @Nullable Input<List<UserPoolSchemaGetArgs>> schemas;

    public Input<List<UserPoolSchemaGetArgs>> getSchemas() {
        return this.schemas == null ? Input.empty() : this.schemas;
    }

    /**
     * String representing the SMS authentication message. The Message must contain the `{####}` placeholder, which will be replaced with the code.
     * 
     */
    @InputImport(name="smsAuthenticationMessage")
      private final @Nullable Input<String> smsAuthenticationMessage;

    public Input<String> getSmsAuthenticationMessage() {
        return this.smsAuthenticationMessage == null ? Input.empty() : this.smsAuthenticationMessage;
    }

    /**
     * Configuration block for Short Message Service (SMS) settings. Detailed below. These settings apply to SMS user verification and SMS Multi-Factor Authentication (MFA). Due to Cognito API restrictions, the SMS configuration cannot be removed without recreating the Cognito User Pool. For user data safety, this resource will ignore the removal of this configuration by disabling drift detection.
     * 
     */
    @InputImport(name="smsConfiguration")
      private final @Nullable Input<UserPoolSmsConfigurationGetArgs> smsConfiguration;

    public Input<UserPoolSmsConfigurationGetArgs> getSmsConfiguration() {
        return this.smsConfiguration == null ? Input.empty() : this.smsConfiguration;
    }

    /**
     * String representing the SMS verification message. Conflicts with `verification_message_template` configuration block `sms_message` argument.
     * 
     */
    @InputImport(name="smsVerificationMessage")
      private final @Nullable Input<String> smsVerificationMessage;

    public Input<String> getSmsVerificationMessage() {
        return this.smsVerificationMessage == null ? Input.empty() : this.smsVerificationMessage;
    }

    /**
     * Configuration block for software token Mult-Factor Authentication (MFA) settings. Detailed below.
     * 
     */
    @InputImport(name="softwareTokenMfaConfiguration")
      private final @Nullable Input<UserPoolSoftwareTokenMfaConfigurationGetArgs> softwareTokenMfaConfiguration;

    public Input<UserPoolSoftwareTokenMfaConfigurationGetArgs> getSoftwareTokenMfaConfiguration() {
        return this.softwareTokenMfaConfiguration == null ? Input.empty() : this.softwareTokenMfaConfiguration;
    }

    /**
     * Map of tags to assign to the User Pool. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @InputImport(name="tags")
      private final @Nullable Input<Map<String,String>> tags;

    public Input<Map<String,String>> getTags() {
        return this.tags == null ? Input.empty() : this.tags;
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider .
     * 
     */
    @InputImport(name="tagsAll")
      private final @Nullable Input<Map<String,String>> tagsAll;

    public Input<Map<String,String>> getTagsAll() {
        return this.tagsAll == null ? Input.empty() : this.tagsAll;
    }

    /**
     * Configuration block for user pool add-ons to enable user pool advanced security mode features. Detailed below.
     * 
     */
    @InputImport(name="userPoolAddOns")
      private final @Nullable Input<UserPoolUserPoolAddOnsGetArgs> userPoolAddOns;

    public Input<UserPoolUserPoolAddOnsGetArgs> getUserPoolAddOns() {
        return this.userPoolAddOns == null ? Input.empty() : this.userPoolAddOns;
    }

    /**
     * Whether email addresses or phone numbers can be specified as usernames when a user signs up. Conflicts with `alias_attributes`.
     * 
     */
    @InputImport(name="usernameAttributes")
      private final @Nullable Input<List<String>> usernameAttributes;

    public Input<List<String>> getUsernameAttributes() {
        return this.usernameAttributes == null ? Input.empty() : this.usernameAttributes;
    }

    /**
     * Configuration block for username configuration. Detailed below.
     * 
     */
    @InputImport(name="usernameConfiguration")
      private final @Nullable Input<UserPoolUsernameConfigurationGetArgs> usernameConfiguration;

    public Input<UserPoolUsernameConfigurationGetArgs> getUsernameConfiguration() {
        return this.usernameConfiguration == null ? Input.empty() : this.usernameConfiguration;
    }

    /**
     * Configuration block for verification message templates. Detailed below.
     * 
     */
    @InputImport(name="verificationMessageTemplate")
      private final @Nullable Input<UserPoolVerificationMessageTemplateGetArgs> verificationMessageTemplate;

    public Input<UserPoolVerificationMessageTemplateGetArgs> getVerificationMessageTemplate() {
        return this.verificationMessageTemplate == null ? Input.empty() : this.verificationMessageTemplate;
    }

    public UserPoolState(
        @Nullable Input<UserPoolAccountRecoverySettingGetArgs> accountRecoverySetting,
        @Nullable Input<UserPoolAdminCreateUserConfigGetArgs> adminCreateUserConfig,
        @Nullable Input<List<String>> aliasAttributes,
        @Nullable Input<String> arn,
        @Nullable Input<List<String>> autoVerifiedAttributes,
        @Nullable Input<String> creationDate,
        @Nullable Input<String> customDomain,
        @Nullable Input<UserPoolDeviceConfigurationGetArgs> deviceConfiguration,
        @Nullable Input<String> domain,
        @Nullable Input<UserPoolEmailConfigurationGetArgs> emailConfiguration,
        @Nullable Input<String> emailVerificationMessage,
        @Nullable Input<String> emailVerificationSubject,
        @Nullable Input<String> endpoint,
        @Nullable Input<Integer> estimatedNumberOfUsers,
        @Nullable Input<UserPoolLambdaConfigGetArgs> lambdaConfig,
        @Nullable Input<String> lastModifiedDate,
        @Nullable Input<String> mfaConfiguration,
        @Nullable Input<String> name,
        @Nullable Input<UserPoolPasswordPolicyGetArgs> passwordPolicy,
        @Nullable Input<List<UserPoolSchemaGetArgs>> schemas,
        @Nullable Input<String> smsAuthenticationMessage,
        @Nullable Input<UserPoolSmsConfigurationGetArgs> smsConfiguration,
        @Nullable Input<String> smsVerificationMessage,
        @Nullable Input<UserPoolSoftwareTokenMfaConfigurationGetArgs> softwareTokenMfaConfiguration,
        @Nullable Input<Map<String,String>> tags,
        @Nullable Input<Map<String,String>> tagsAll,
        @Nullable Input<UserPoolUserPoolAddOnsGetArgs> userPoolAddOns,
        @Nullable Input<List<String>> usernameAttributes,
        @Nullable Input<UserPoolUsernameConfigurationGetArgs> usernameConfiguration,
        @Nullable Input<UserPoolVerificationMessageTemplateGetArgs> verificationMessageTemplate) {
        this.accountRecoverySetting = accountRecoverySetting;
        this.adminCreateUserConfig = adminCreateUserConfig;
        this.aliasAttributes = aliasAttributes;
        this.arn = arn;
        this.autoVerifiedAttributes = autoVerifiedAttributes;
        this.creationDate = creationDate;
        this.customDomain = customDomain;
        this.deviceConfiguration = deviceConfiguration;
        this.domain = domain;
        this.emailConfiguration = emailConfiguration;
        this.emailVerificationMessage = emailVerificationMessage;
        this.emailVerificationSubject = emailVerificationSubject;
        this.endpoint = endpoint;
        this.estimatedNumberOfUsers = estimatedNumberOfUsers;
        this.lambdaConfig = lambdaConfig;
        this.lastModifiedDate = lastModifiedDate;
        this.mfaConfiguration = mfaConfiguration;
        this.name = name;
        this.passwordPolicy = passwordPolicy;
        this.schemas = schemas;
        this.smsAuthenticationMessage = smsAuthenticationMessage;
        this.smsConfiguration = smsConfiguration;
        this.smsVerificationMessage = smsVerificationMessage;
        this.softwareTokenMfaConfiguration = softwareTokenMfaConfiguration;
        this.tags = tags;
        this.tagsAll = tagsAll;
        this.userPoolAddOns = userPoolAddOns;
        this.usernameAttributes = usernameAttributes;
        this.usernameConfiguration = usernameConfiguration;
        this.verificationMessageTemplate = verificationMessageTemplate;
    }

    private UserPoolState() {
        this.accountRecoverySetting = Input.empty();
        this.adminCreateUserConfig = Input.empty();
        this.aliasAttributes = Input.empty();
        this.arn = Input.empty();
        this.autoVerifiedAttributes = Input.empty();
        this.creationDate = Input.empty();
        this.customDomain = Input.empty();
        this.deviceConfiguration = Input.empty();
        this.domain = Input.empty();
        this.emailConfiguration = Input.empty();
        this.emailVerificationMessage = Input.empty();
        this.emailVerificationSubject = Input.empty();
        this.endpoint = Input.empty();
        this.estimatedNumberOfUsers = Input.empty();
        this.lambdaConfig = Input.empty();
        this.lastModifiedDate = Input.empty();
        this.mfaConfiguration = Input.empty();
        this.name = Input.empty();
        this.passwordPolicy = Input.empty();
        this.schemas = Input.empty();
        this.smsAuthenticationMessage = Input.empty();
        this.smsConfiguration = Input.empty();
        this.smsVerificationMessage = Input.empty();
        this.softwareTokenMfaConfiguration = Input.empty();
        this.tags = Input.empty();
        this.tagsAll = Input.empty();
        this.userPoolAddOns = Input.empty();
        this.usernameAttributes = Input.empty();
        this.usernameConfiguration = Input.empty();
        this.verificationMessageTemplate = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(UserPoolState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<UserPoolAccountRecoverySettingGetArgs> accountRecoverySetting;
        private @Nullable Input<UserPoolAdminCreateUserConfigGetArgs> adminCreateUserConfig;
        private @Nullable Input<List<String>> aliasAttributes;
        private @Nullable Input<String> arn;
        private @Nullable Input<List<String>> autoVerifiedAttributes;
        private @Nullable Input<String> creationDate;
        private @Nullable Input<String> customDomain;
        private @Nullable Input<UserPoolDeviceConfigurationGetArgs> deviceConfiguration;
        private @Nullable Input<String> domain;
        private @Nullable Input<UserPoolEmailConfigurationGetArgs> emailConfiguration;
        private @Nullable Input<String> emailVerificationMessage;
        private @Nullable Input<String> emailVerificationSubject;
        private @Nullable Input<String> endpoint;
        private @Nullable Input<Integer> estimatedNumberOfUsers;
        private @Nullable Input<UserPoolLambdaConfigGetArgs> lambdaConfig;
        private @Nullable Input<String> lastModifiedDate;
        private @Nullable Input<String> mfaConfiguration;
        private @Nullable Input<String> name;
        private @Nullable Input<UserPoolPasswordPolicyGetArgs> passwordPolicy;
        private @Nullable Input<List<UserPoolSchemaGetArgs>> schemas;
        private @Nullable Input<String> smsAuthenticationMessage;
        private @Nullable Input<UserPoolSmsConfigurationGetArgs> smsConfiguration;
        private @Nullable Input<String> smsVerificationMessage;
        private @Nullable Input<UserPoolSoftwareTokenMfaConfigurationGetArgs> softwareTokenMfaConfiguration;
        private @Nullable Input<Map<String,String>> tags;
        private @Nullable Input<Map<String,String>> tagsAll;
        private @Nullable Input<UserPoolUserPoolAddOnsGetArgs> userPoolAddOns;
        private @Nullable Input<List<String>> usernameAttributes;
        private @Nullable Input<UserPoolUsernameConfigurationGetArgs> usernameConfiguration;
        private @Nullable Input<UserPoolVerificationMessageTemplateGetArgs> verificationMessageTemplate;

        public Builder() {
    	      // Empty
        }

        public Builder(UserPoolState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountRecoverySetting = defaults.accountRecoverySetting;
    	      this.adminCreateUserConfig = defaults.adminCreateUserConfig;
    	      this.aliasAttributes = defaults.aliasAttributes;
    	      this.arn = defaults.arn;
    	      this.autoVerifiedAttributes = defaults.autoVerifiedAttributes;
    	      this.creationDate = defaults.creationDate;
    	      this.customDomain = defaults.customDomain;
    	      this.deviceConfiguration = defaults.deviceConfiguration;
    	      this.domain = defaults.domain;
    	      this.emailConfiguration = defaults.emailConfiguration;
    	      this.emailVerificationMessage = defaults.emailVerificationMessage;
    	      this.emailVerificationSubject = defaults.emailVerificationSubject;
    	      this.endpoint = defaults.endpoint;
    	      this.estimatedNumberOfUsers = defaults.estimatedNumberOfUsers;
    	      this.lambdaConfig = defaults.lambdaConfig;
    	      this.lastModifiedDate = defaults.lastModifiedDate;
    	      this.mfaConfiguration = defaults.mfaConfiguration;
    	      this.name = defaults.name;
    	      this.passwordPolicy = defaults.passwordPolicy;
    	      this.schemas = defaults.schemas;
    	      this.smsAuthenticationMessage = defaults.smsAuthenticationMessage;
    	      this.smsConfiguration = defaults.smsConfiguration;
    	      this.smsVerificationMessage = defaults.smsVerificationMessage;
    	      this.softwareTokenMfaConfiguration = defaults.softwareTokenMfaConfiguration;
    	      this.tags = defaults.tags;
    	      this.tagsAll = defaults.tagsAll;
    	      this.userPoolAddOns = defaults.userPoolAddOns;
    	      this.usernameAttributes = defaults.usernameAttributes;
    	      this.usernameConfiguration = defaults.usernameConfiguration;
    	      this.verificationMessageTemplate = defaults.verificationMessageTemplate;
        }

        public Builder setAccountRecoverySetting(@Nullable Input<UserPoolAccountRecoverySettingGetArgs> accountRecoverySetting) {
            this.accountRecoverySetting = accountRecoverySetting;
            return this;
        }

        public Builder setAccountRecoverySetting(@Nullable UserPoolAccountRecoverySettingGetArgs accountRecoverySetting) {
            this.accountRecoverySetting = Input.ofNullable(accountRecoverySetting);
            return this;
        }

        public Builder setAdminCreateUserConfig(@Nullable Input<UserPoolAdminCreateUserConfigGetArgs> adminCreateUserConfig) {
            this.adminCreateUserConfig = adminCreateUserConfig;
            return this;
        }

        public Builder setAdminCreateUserConfig(@Nullable UserPoolAdminCreateUserConfigGetArgs adminCreateUserConfig) {
            this.adminCreateUserConfig = Input.ofNullable(adminCreateUserConfig);
            return this;
        }

        public Builder setAliasAttributes(@Nullable Input<List<String>> aliasAttributes) {
            this.aliasAttributes = aliasAttributes;
            return this;
        }

        public Builder setAliasAttributes(@Nullable List<String> aliasAttributes) {
            this.aliasAttributes = Input.ofNullable(aliasAttributes);
            return this;
        }

        public Builder setArn(@Nullable Input<String> arn) {
            this.arn = arn;
            return this;
        }

        public Builder setArn(@Nullable String arn) {
            this.arn = Input.ofNullable(arn);
            return this;
        }

        public Builder setAutoVerifiedAttributes(@Nullable Input<List<String>> autoVerifiedAttributes) {
            this.autoVerifiedAttributes = autoVerifiedAttributes;
            return this;
        }

        public Builder setAutoVerifiedAttributes(@Nullable List<String> autoVerifiedAttributes) {
            this.autoVerifiedAttributes = Input.ofNullable(autoVerifiedAttributes);
            return this;
        }

        public Builder setCreationDate(@Nullable Input<String> creationDate) {
            this.creationDate = creationDate;
            return this;
        }

        public Builder setCreationDate(@Nullable String creationDate) {
            this.creationDate = Input.ofNullable(creationDate);
            return this;
        }

        public Builder setCustomDomain(@Nullable Input<String> customDomain) {
            this.customDomain = customDomain;
            return this;
        }

        public Builder setCustomDomain(@Nullable String customDomain) {
            this.customDomain = Input.ofNullable(customDomain);
            return this;
        }

        public Builder setDeviceConfiguration(@Nullable Input<UserPoolDeviceConfigurationGetArgs> deviceConfiguration) {
            this.deviceConfiguration = deviceConfiguration;
            return this;
        }

        public Builder setDeviceConfiguration(@Nullable UserPoolDeviceConfigurationGetArgs deviceConfiguration) {
            this.deviceConfiguration = Input.ofNullable(deviceConfiguration);
            return this;
        }

        public Builder setDomain(@Nullable Input<String> domain) {
            this.domain = domain;
            return this;
        }

        public Builder setDomain(@Nullable String domain) {
            this.domain = Input.ofNullable(domain);
            return this;
        }

        public Builder setEmailConfiguration(@Nullable Input<UserPoolEmailConfigurationGetArgs> emailConfiguration) {
            this.emailConfiguration = emailConfiguration;
            return this;
        }

        public Builder setEmailConfiguration(@Nullable UserPoolEmailConfigurationGetArgs emailConfiguration) {
            this.emailConfiguration = Input.ofNullable(emailConfiguration);
            return this;
        }

        public Builder setEmailVerificationMessage(@Nullable Input<String> emailVerificationMessage) {
            this.emailVerificationMessage = emailVerificationMessage;
            return this;
        }

        public Builder setEmailVerificationMessage(@Nullable String emailVerificationMessage) {
            this.emailVerificationMessage = Input.ofNullable(emailVerificationMessage);
            return this;
        }

        public Builder setEmailVerificationSubject(@Nullable Input<String> emailVerificationSubject) {
            this.emailVerificationSubject = emailVerificationSubject;
            return this;
        }

        public Builder setEmailVerificationSubject(@Nullable String emailVerificationSubject) {
            this.emailVerificationSubject = Input.ofNullable(emailVerificationSubject);
            return this;
        }

        public Builder setEndpoint(@Nullable Input<String> endpoint) {
            this.endpoint = endpoint;
            return this;
        }

        public Builder setEndpoint(@Nullable String endpoint) {
            this.endpoint = Input.ofNullable(endpoint);
            return this;
        }

        public Builder setEstimatedNumberOfUsers(@Nullable Input<Integer> estimatedNumberOfUsers) {
            this.estimatedNumberOfUsers = estimatedNumberOfUsers;
            return this;
        }

        public Builder setEstimatedNumberOfUsers(@Nullable Integer estimatedNumberOfUsers) {
            this.estimatedNumberOfUsers = Input.ofNullable(estimatedNumberOfUsers);
            return this;
        }

        public Builder setLambdaConfig(@Nullable Input<UserPoolLambdaConfigGetArgs> lambdaConfig) {
            this.lambdaConfig = lambdaConfig;
            return this;
        }

        public Builder setLambdaConfig(@Nullable UserPoolLambdaConfigGetArgs lambdaConfig) {
            this.lambdaConfig = Input.ofNullable(lambdaConfig);
            return this;
        }

        public Builder setLastModifiedDate(@Nullable Input<String> lastModifiedDate) {
            this.lastModifiedDate = lastModifiedDate;
            return this;
        }

        public Builder setLastModifiedDate(@Nullable String lastModifiedDate) {
            this.lastModifiedDate = Input.ofNullable(lastModifiedDate);
            return this;
        }

        public Builder setMfaConfiguration(@Nullable Input<String> mfaConfiguration) {
            this.mfaConfiguration = mfaConfiguration;
            return this;
        }

        public Builder setMfaConfiguration(@Nullable String mfaConfiguration) {
            this.mfaConfiguration = Input.ofNullable(mfaConfiguration);
            return this;
        }

        public Builder setName(@Nullable Input<String> name) {
            this.name = name;
            return this;
        }

        public Builder setName(@Nullable String name) {
            this.name = Input.ofNullable(name);
            return this;
        }

        public Builder setPasswordPolicy(@Nullable Input<UserPoolPasswordPolicyGetArgs> passwordPolicy) {
            this.passwordPolicy = passwordPolicy;
            return this;
        }

        public Builder setPasswordPolicy(@Nullable UserPoolPasswordPolicyGetArgs passwordPolicy) {
            this.passwordPolicy = Input.ofNullable(passwordPolicy);
            return this;
        }

        public Builder setSchemas(@Nullable Input<List<UserPoolSchemaGetArgs>> schemas) {
            this.schemas = schemas;
            return this;
        }

        public Builder setSchemas(@Nullable List<UserPoolSchemaGetArgs> schemas) {
            this.schemas = Input.ofNullable(schemas);
            return this;
        }

        public Builder setSmsAuthenticationMessage(@Nullable Input<String> smsAuthenticationMessage) {
            this.smsAuthenticationMessage = smsAuthenticationMessage;
            return this;
        }

        public Builder setSmsAuthenticationMessage(@Nullable String smsAuthenticationMessage) {
            this.smsAuthenticationMessage = Input.ofNullable(smsAuthenticationMessage);
            return this;
        }

        public Builder setSmsConfiguration(@Nullable Input<UserPoolSmsConfigurationGetArgs> smsConfiguration) {
            this.smsConfiguration = smsConfiguration;
            return this;
        }

        public Builder setSmsConfiguration(@Nullable UserPoolSmsConfigurationGetArgs smsConfiguration) {
            this.smsConfiguration = Input.ofNullable(smsConfiguration);
            return this;
        }

        public Builder setSmsVerificationMessage(@Nullable Input<String> smsVerificationMessage) {
            this.smsVerificationMessage = smsVerificationMessage;
            return this;
        }

        public Builder setSmsVerificationMessage(@Nullable String smsVerificationMessage) {
            this.smsVerificationMessage = Input.ofNullable(smsVerificationMessage);
            return this;
        }

        public Builder setSoftwareTokenMfaConfiguration(@Nullable Input<UserPoolSoftwareTokenMfaConfigurationGetArgs> softwareTokenMfaConfiguration) {
            this.softwareTokenMfaConfiguration = softwareTokenMfaConfiguration;
            return this;
        }

        public Builder setSoftwareTokenMfaConfiguration(@Nullable UserPoolSoftwareTokenMfaConfigurationGetArgs softwareTokenMfaConfiguration) {
            this.softwareTokenMfaConfiguration = Input.ofNullable(softwareTokenMfaConfiguration);
            return this;
        }

        public Builder setTags(@Nullable Input<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }

        public Builder setTags(@Nullable Map<String,String> tags) {
            this.tags = Input.ofNullable(tags);
            return this;
        }

        public Builder setTagsAll(@Nullable Input<Map<String,String>> tagsAll) {
            this.tagsAll = tagsAll;
            return this;
        }

        public Builder setTagsAll(@Nullable Map<String,String> tagsAll) {
            this.tagsAll = Input.ofNullable(tagsAll);
            return this;
        }

        public Builder setUserPoolAddOns(@Nullable Input<UserPoolUserPoolAddOnsGetArgs> userPoolAddOns) {
            this.userPoolAddOns = userPoolAddOns;
            return this;
        }

        public Builder setUserPoolAddOns(@Nullable UserPoolUserPoolAddOnsGetArgs userPoolAddOns) {
            this.userPoolAddOns = Input.ofNullable(userPoolAddOns);
            return this;
        }

        public Builder setUsernameAttributes(@Nullable Input<List<String>> usernameAttributes) {
            this.usernameAttributes = usernameAttributes;
            return this;
        }

        public Builder setUsernameAttributes(@Nullable List<String> usernameAttributes) {
            this.usernameAttributes = Input.ofNullable(usernameAttributes);
            return this;
        }

        public Builder setUsernameConfiguration(@Nullable Input<UserPoolUsernameConfigurationGetArgs> usernameConfiguration) {
            this.usernameConfiguration = usernameConfiguration;
            return this;
        }

        public Builder setUsernameConfiguration(@Nullable UserPoolUsernameConfigurationGetArgs usernameConfiguration) {
            this.usernameConfiguration = Input.ofNullable(usernameConfiguration);
            return this;
        }

        public Builder setVerificationMessageTemplate(@Nullable Input<UserPoolVerificationMessageTemplateGetArgs> verificationMessageTemplate) {
            this.verificationMessageTemplate = verificationMessageTemplate;
            return this;
        }

        public Builder setVerificationMessageTemplate(@Nullable UserPoolVerificationMessageTemplateGetArgs verificationMessageTemplate) {
            this.verificationMessageTemplate = Input.ofNullable(verificationMessageTemplate);
            return this;
        }
        public UserPoolState build() {
            return new UserPoolState(accountRecoverySetting, adminCreateUserConfig, aliasAttributes, arn, autoVerifiedAttributes, creationDate, customDomain, deviceConfiguration, domain, emailConfiguration, emailVerificationMessage, emailVerificationSubject, endpoint, estimatedNumberOfUsers, lambdaConfig, lastModifiedDate, mfaConfiguration, name, passwordPolicy, schemas, smsAuthenticationMessage, smsConfiguration, smsVerificationMessage, softwareTokenMfaConfiguration, tags, tagsAll, userPoolAddOns, usernameAttributes, usernameConfiguration, verificationMessageTemplate);
        }
    }
}
