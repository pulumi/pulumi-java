// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.cognito.inputs;

import io.pulumi.aws.cognito.inputs.UserPoolAccountRecoverySettingGetArgs;
import io.pulumi.aws.cognito.inputs.UserPoolAdminCreateUserConfigGetArgs;
import io.pulumi.aws.cognito.inputs.UserPoolDeviceConfigurationGetArgs;
import io.pulumi.aws.cognito.inputs.UserPoolEmailConfigurationGetArgs;
import io.pulumi.aws.cognito.inputs.UserPoolLambdaConfigGetArgs;
import io.pulumi.aws.cognito.inputs.UserPoolPasswordPolicyGetArgs;
import io.pulumi.aws.cognito.inputs.UserPoolSchemaGetArgs;
import io.pulumi.aws.cognito.inputs.UserPoolSmsConfigurationGetArgs;
import io.pulumi.aws.cognito.inputs.UserPoolSoftwareTokenMfaConfigurationGetArgs;
import io.pulumi.aws.cognito.inputs.UserPoolUserPoolAddOnsGetArgs;
import io.pulumi.aws.cognito.inputs.UserPoolUsernameConfigurationGetArgs;
import io.pulumi.aws.cognito.inputs.UserPoolVerificationMessageTemplateGetArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class UserPoolState extends io.pulumi.resources.ResourceArgs {

    public static final UserPoolState Empty = new UserPoolState();

    /**
     * Configuration block to define which verified available method a user can use to recover their forgotten password. Detailed below.
     * 
     */
    @Import(name="accountRecoverySetting")
      private final @Nullable Output<UserPoolAccountRecoverySettingGetArgs> accountRecoverySetting;

    public Output<UserPoolAccountRecoverySettingGetArgs> getAccountRecoverySetting() {
        return this.accountRecoverySetting == null ? Output.empty() : this.accountRecoverySetting;
    }

    /**
     * Configuration block for creating a new user profile. Detailed below.
     * 
     */
    @Import(name="adminCreateUserConfig")
      private final @Nullable Output<UserPoolAdminCreateUserConfigGetArgs> adminCreateUserConfig;

    public Output<UserPoolAdminCreateUserConfigGetArgs> getAdminCreateUserConfig() {
        return this.adminCreateUserConfig == null ? Output.empty() : this.adminCreateUserConfig;
    }

    /**
     * Attributes supported as an alias for this user pool. Valid values: `phone_number`, `email`, or `preferred_username`. Conflicts with `username_attributes`.
     * 
     */
    @Import(name="aliasAttributes")
      private final @Nullable Output<List<String>> aliasAttributes;

    public Output<List<String>> getAliasAttributes() {
        return this.aliasAttributes == null ? Output.empty() : this.aliasAttributes;
    }

    /**
     * ARN of the user pool.
     * 
     */
    @Import(name="arn")
      private final @Nullable Output<String> arn;

    public Output<String> getArn() {
        return this.arn == null ? Output.empty() : this.arn;
    }

    /**
     * Attributes to be auto-verified. Valid values: `email`, `phone_number`.
     * 
     */
    @Import(name="autoVerifiedAttributes")
      private final @Nullable Output<List<String>> autoVerifiedAttributes;

    public Output<List<String>> getAutoVerifiedAttributes() {
        return this.autoVerifiedAttributes == null ? Output.empty() : this.autoVerifiedAttributes;
    }

    /**
     * Date the user pool was created.
     * 
     */
    @Import(name="creationDate")
      private final @Nullable Output<String> creationDate;

    public Output<String> getCreationDate() {
        return this.creationDate == null ? Output.empty() : this.creationDate;
    }

    /**
     * A custom domain name that you provide to Amazon Cognito. This parameter applies only if you use a custom domain to host the sign-up and sign-in pages for your application. For example: `auth.example.com`.
     * 
     */
    @Import(name="customDomain")
      private final @Nullable Output<String> customDomain;

    public Output<String> getCustomDomain() {
        return this.customDomain == null ? Output.empty() : this.customDomain;
    }

    /**
     * Configuration block for the user pool's device tracking. Detailed below.
     * 
     */
    @Import(name="deviceConfiguration")
      private final @Nullable Output<UserPoolDeviceConfigurationGetArgs> deviceConfiguration;

    public Output<UserPoolDeviceConfigurationGetArgs> getDeviceConfiguration() {
        return this.deviceConfiguration == null ? Output.empty() : this.deviceConfiguration;
    }

    /**
     * Holds the domain prefix if the user pool has a domain associated with it.
     * 
     */
    @Import(name="domain")
      private final @Nullable Output<String> domain;

    public Output<String> getDomain() {
        return this.domain == null ? Output.empty() : this.domain;
    }

    /**
     * Configuration block for configuring email. Detailed below.
     * 
     */
    @Import(name="emailConfiguration")
      private final @Nullable Output<UserPoolEmailConfigurationGetArgs> emailConfiguration;

    public Output<UserPoolEmailConfigurationGetArgs> getEmailConfiguration() {
        return this.emailConfiguration == null ? Output.empty() : this.emailConfiguration;
    }

    /**
     * String representing the email verification message. Conflicts with `verification_message_template` configuration block `email_message` argument.
     * 
     */
    @Import(name="emailVerificationMessage")
      private final @Nullable Output<String> emailVerificationMessage;

    public Output<String> getEmailVerificationMessage() {
        return this.emailVerificationMessage == null ? Output.empty() : this.emailVerificationMessage;
    }

    /**
     * String representing the email verification subject. Conflicts with `verification_message_template` configuration block `email_subject` argument.
     * 
     */
    @Import(name="emailVerificationSubject")
      private final @Nullable Output<String> emailVerificationSubject;

    public Output<String> getEmailVerificationSubject() {
        return this.emailVerificationSubject == null ? Output.empty() : this.emailVerificationSubject;
    }

    /**
     * Endpoint name of the user pool. Example format: `cognito-idp.REGION.amazonaws.com/xxxx_yyyyy`
     * 
     */
    @Import(name="endpoint")
      private final @Nullable Output<String> endpoint;

    public Output<String> getEndpoint() {
        return this.endpoint == null ? Output.empty() : this.endpoint;
    }

    /**
     * A number estimating the size of the user pool.
     * 
     */
    @Import(name="estimatedNumberOfUsers")
      private final @Nullable Output<Integer> estimatedNumberOfUsers;

    public Output<Integer> getEstimatedNumberOfUsers() {
        return this.estimatedNumberOfUsers == null ? Output.empty() : this.estimatedNumberOfUsers;
    }

    /**
     * Configuration block for the AWS Lambda triggers associated with the user pool. Detailed below.
     * 
     */
    @Import(name="lambdaConfig")
      private final @Nullable Output<UserPoolLambdaConfigGetArgs> lambdaConfig;

    public Output<UserPoolLambdaConfigGetArgs> getLambdaConfig() {
        return this.lambdaConfig == null ? Output.empty() : this.lambdaConfig;
    }

    /**
     * Date the user pool was last modified.
     * 
     */
    @Import(name="lastModifiedDate")
      private final @Nullable Output<String> lastModifiedDate;

    public Output<String> getLastModifiedDate() {
        return this.lastModifiedDate == null ? Output.empty() : this.lastModifiedDate;
    }

    /**
     * Multi-Factor Authentication (MFA) configuration for the User Pool. Defaults of `OFF`. Valid values are `OFF` (MFA Tokens are not required), `ON` (MFA is required for all users to sign in; requires at least one of `sms_configuration` or `software_token_mfa_configuration` to be configured), or `OPTIONAL` (MFA Will be required only for individual users who have MFA Enabled; requires at least one of `sms_configuration` or `software_token_mfa_configuration` to be configured).
     * 
     */
    @Import(name="mfaConfiguration")
      private final @Nullable Output<String> mfaConfiguration;

    public Output<String> getMfaConfiguration() {
        return this.mfaConfiguration == null ? Output.empty() : this.mfaConfiguration;
    }

    /**
     * Name of the attribute.
     * 
     */
    @Import(name="name")
      private final @Nullable Output<String> name;

    public Output<String> getName() {
        return this.name == null ? Output.empty() : this.name;
    }

    /**
     * Configuration blocked for information about the user pool password policy. Detailed below.
     * 
     */
    @Import(name="passwordPolicy")
      private final @Nullable Output<UserPoolPasswordPolicyGetArgs> passwordPolicy;

    public Output<UserPoolPasswordPolicyGetArgs> getPasswordPolicy() {
        return this.passwordPolicy == null ? Output.empty() : this.passwordPolicy;
    }

    /**
     * Configuration block for the schema attributes of a user pool. Detailed below. Schema attributes from the [standard attribute set](https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-settings-attributes.html#cognito-user-pools-standard-attributes) only need to be specified if they are different from the default configuration. Attributes can be added, but not modified or removed. Maximum of 50 attributes.
     * 
     */
    @Import(name="schemas")
      private final @Nullable Output<List<UserPoolSchemaGetArgs>> schemas;

    public Output<List<UserPoolSchemaGetArgs>> getSchemas() {
        return this.schemas == null ? Output.empty() : this.schemas;
    }

    /**
     * String representing the SMS authentication message. The Message must contain the `{####}` placeholder, which will be replaced with the code.
     * 
     */
    @Import(name="smsAuthenticationMessage")
      private final @Nullable Output<String> smsAuthenticationMessage;

    public Output<String> getSmsAuthenticationMessage() {
        return this.smsAuthenticationMessage == null ? Output.empty() : this.smsAuthenticationMessage;
    }

    /**
     * Configuration block for Short Message Service (SMS) settings. Detailed below. These settings apply to SMS user verification and SMS Multi-Factor Authentication (MFA). Due to Cognito API restrictions, the SMS configuration cannot be removed without recreating the Cognito User Pool. For user data safety, this resource will ignore the removal of this configuration by disabling drift detection.
     * 
     */
    @Import(name="smsConfiguration")
      private final @Nullable Output<UserPoolSmsConfigurationGetArgs> smsConfiguration;

    public Output<UserPoolSmsConfigurationGetArgs> getSmsConfiguration() {
        return this.smsConfiguration == null ? Output.empty() : this.smsConfiguration;
    }

    /**
     * String representing the SMS verification message. Conflicts with `verification_message_template` configuration block `sms_message` argument.
     * 
     */
    @Import(name="smsVerificationMessage")
      private final @Nullable Output<String> smsVerificationMessage;

    public Output<String> getSmsVerificationMessage() {
        return this.smsVerificationMessage == null ? Output.empty() : this.smsVerificationMessage;
    }

    /**
     * Configuration block for software token Mult-Factor Authentication (MFA) settings. Detailed below.
     * 
     */
    @Import(name="softwareTokenMfaConfiguration")
      private final @Nullable Output<UserPoolSoftwareTokenMfaConfigurationGetArgs> softwareTokenMfaConfiguration;

    public Output<UserPoolSoftwareTokenMfaConfigurationGetArgs> getSoftwareTokenMfaConfiguration() {
        return this.softwareTokenMfaConfiguration == null ? Output.empty() : this.softwareTokenMfaConfiguration;
    }

    /**
     * Map of tags to assign to the User Pool. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Import(name="tags")
      private final @Nullable Output<Map<String,String>> tags;

    public Output<Map<String,String>> getTags() {
        return this.tags == null ? Output.empty() : this.tags;
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider .
     * 
     */
    @Import(name="tagsAll")
      private final @Nullable Output<Map<String,String>> tagsAll;

    public Output<Map<String,String>> getTagsAll() {
        return this.tagsAll == null ? Output.empty() : this.tagsAll;
    }

    /**
     * Configuration block for user pool add-ons to enable user pool advanced security mode features. Detailed below.
     * 
     */
    @Import(name="userPoolAddOns")
      private final @Nullable Output<UserPoolUserPoolAddOnsGetArgs> userPoolAddOns;

    public Output<UserPoolUserPoolAddOnsGetArgs> getUserPoolAddOns() {
        return this.userPoolAddOns == null ? Output.empty() : this.userPoolAddOns;
    }

    /**
     * Whether email addresses or phone numbers can be specified as usernames when a user signs up. Conflicts with `alias_attributes`.
     * 
     */
    @Import(name="usernameAttributes")
      private final @Nullable Output<List<String>> usernameAttributes;

    public Output<List<String>> getUsernameAttributes() {
        return this.usernameAttributes == null ? Output.empty() : this.usernameAttributes;
    }

    /**
     * Configuration block for username configuration. Detailed below.
     * 
     */
    @Import(name="usernameConfiguration")
      private final @Nullable Output<UserPoolUsernameConfigurationGetArgs> usernameConfiguration;

    public Output<UserPoolUsernameConfigurationGetArgs> getUsernameConfiguration() {
        return this.usernameConfiguration == null ? Output.empty() : this.usernameConfiguration;
    }

    /**
     * Configuration block for verification message templates. Detailed below.
     * 
     */
    @Import(name="verificationMessageTemplate")
      private final @Nullable Output<UserPoolVerificationMessageTemplateGetArgs> verificationMessageTemplate;

    public Output<UserPoolVerificationMessageTemplateGetArgs> getVerificationMessageTemplate() {
        return this.verificationMessageTemplate == null ? Output.empty() : this.verificationMessageTemplate;
    }

    public UserPoolState(
        @Nullable Output<UserPoolAccountRecoverySettingGetArgs> accountRecoverySetting,
        @Nullable Output<UserPoolAdminCreateUserConfigGetArgs> adminCreateUserConfig,
        @Nullable Output<List<String>> aliasAttributes,
        @Nullable Output<String> arn,
        @Nullable Output<List<String>> autoVerifiedAttributes,
        @Nullable Output<String> creationDate,
        @Nullable Output<String> customDomain,
        @Nullable Output<UserPoolDeviceConfigurationGetArgs> deviceConfiguration,
        @Nullable Output<String> domain,
        @Nullable Output<UserPoolEmailConfigurationGetArgs> emailConfiguration,
        @Nullable Output<String> emailVerificationMessage,
        @Nullable Output<String> emailVerificationSubject,
        @Nullable Output<String> endpoint,
        @Nullable Output<Integer> estimatedNumberOfUsers,
        @Nullable Output<UserPoolLambdaConfigGetArgs> lambdaConfig,
        @Nullable Output<String> lastModifiedDate,
        @Nullable Output<String> mfaConfiguration,
        @Nullable Output<String> name,
        @Nullable Output<UserPoolPasswordPolicyGetArgs> passwordPolicy,
        @Nullable Output<List<UserPoolSchemaGetArgs>> schemas,
        @Nullable Output<String> smsAuthenticationMessage,
        @Nullable Output<UserPoolSmsConfigurationGetArgs> smsConfiguration,
        @Nullable Output<String> smsVerificationMessage,
        @Nullable Output<UserPoolSoftwareTokenMfaConfigurationGetArgs> softwareTokenMfaConfiguration,
        @Nullable Output<Map<String,String>> tags,
        @Nullable Output<Map<String,String>> tagsAll,
        @Nullable Output<UserPoolUserPoolAddOnsGetArgs> userPoolAddOns,
        @Nullable Output<List<String>> usernameAttributes,
        @Nullable Output<UserPoolUsernameConfigurationGetArgs> usernameConfiguration,
        @Nullable Output<UserPoolVerificationMessageTemplateGetArgs> verificationMessageTemplate) {
        this.accountRecoverySetting = accountRecoverySetting;
        this.adminCreateUserConfig = adminCreateUserConfig;
        this.aliasAttributes = aliasAttributes;
        this.arn = arn;
        this.autoVerifiedAttributes = autoVerifiedAttributes;
        this.creationDate = creationDate;
        this.customDomain = customDomain;
        this.deviceConfiguration = deviceConfiguration;
        this.domain = domain;
        this.emailConfiguration = emailConfiguration;
        this.emailVerificationMessage = emailVerificationMessage;
        this.emailVerificationSubject = emailVerificationSubject;
        this.endpoint = endpoint;
        this.estimatedNumberOfUsers = estimatedNumberOfUsers;
        this.lambdaConfig = lambdaConfig;
        this.lastModifiedDate = lastModifiedDate;
        this.mfaConfiguration = mfaConfiguration;
        this.name = name;
        this.passwordPolicy = passwordPolicy;
        this.schemas = schemas;
        this.smsAuthenticationMessage = smsAuthenticationMessage;
        this.smsConfiguration = smsConfiguration;
        this.smsVerificationMessage = smsVerificationMessage;
        this.softwareTokenMfaConfiguration = softwareTokenMfaConfiguration;
        this.tags = tags;
        this.tagsAll = tagsAll;
        this.userPoolAddOns = userPoolAddOns;
        this.usernameAttributes = usernameAttributes;
        this.usernameConfiguration = usernameConfiguration;
        this.verificationMessageTemplate = verificationMessageTemplate;
    }

    private UserPoolState() {
        this.accountRecoverySetting = Output.empty();
        this.adminCreateUserConfig = Output.empty();
        this.aliasAttributes = Output.empty();
        this.arn = Output.empty();
        this.autoVerifiedAttributes = Output.empty();
        this.creationDate = Output.empty();
        this.customDomain = Output.empty();
        this.deviceConfiguration = Output.empty();
        this.domain = Output.empty();
        this.emailConfiguration = Output.empty();
        this.emailVerificationMessage = Output.empty();
        this.emailVerificationSubject = Output.empty();
        this.endpoint = Output.empty();
        this.estimatedNumberOfUsers = Output.empty();
        this.lambdaConfig = Output.empty();
        this.lastModifiedDate = Output.empty();
        this.mfaConfiguration = Output.empty();
        this.name = Output.empty();
        this.passwordPolicy = Output.empty();
        this.schemas = Output.empty();
        this.smsAuthenticationMessage = Output.empty();
        this.smsConfiguration = Output.empty();
        this.smsVerificationMessage = Output.empty();
        this.softwareTokenMfaConfiguration = Output.empty();
        this.tags = Output.empty();
        this.tagsAll = Output.empty();
        this.userPoolAddOns = Output.empty();
        this.usernameAttributes = Output.empty();
        this.usernameConfiguration = Output.empty();
        this.verificationMessageTemplate = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(UserPoolState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<UserPoolAccountRecoverySettingGetArgs> accountRecoverySetting;
        private @Nullable Output<UserPoolAdminCreateUserConfigGetArgs> adminCreateUserConfig;
        private @Nullable Output<List<String>> aliasAttributes;
        private @Nullable Output<String> arn;
        private @Nullable Output<List<String>> autoVerifiedAttributes;
        private @Nullable Output<String> creationDate;
        private @Nullable Output<String> customDomain;
        private @Nullable Output<UserPoolDeviceConfigurationGetArgs> deviceConfiguration;
        private @Nullable Output<String> domain;
        private @Nullable Output<UserPoolEmailConfigurationGetArgs> emailConfiguration;
        private @Nullable Output<String> emailVerificationMessage;
        private @Nullable Output<String> emailVerificationSubject;
        private @Nullable Output<String> endpoint;
        private @Nullable Output<Integer> estimatedNumberOfUsers;
        private @Nullable Output<UserPoolLambdaConfigGetArgs> lambdaConfig;
        private @Nullable Output<String> lastModifiedDate;
        private @Nullable Output<String> mfaConfiguration;
        private @Nullable Output<String> name;
        private @Nullable Output<UserPoolPasswordPolicyGetArgs> passwordPolicy;
        private @Nullable Output<List<UserPoolSchemaGetArgs>> schemas;
        private @Nullable Output<String> smsAuthenticationMessage;
        private @Nullable Output<UserPoolSmsConfigurationGetArgs> smsConfiguration;
        private @Nullable Output<String> smsVerificationMessage;
        private @Nullable Output<UserPoolSoftwareTokenMfaConfigurationGetArgs> softwareTokenMfaConfiguration;
        private @Nullable Output<Map<String,String>> tags;
        private @Nullable Output<Map<String,String>> tagsAll;
        private @Nullable Output<UserPoolUserPoolAddOnsGetArgs> userPoolAddOns;
        private @Nullable Output<List<String>> usernameAttributes;
        private @Nullable Output<UserPoolUsernameConfigurationGetArgs> usernameConfiguration;
        private @Nullable Output<UserPoolVerificationMessageTemplateGetArgs> verificationMessageTemplate;

        public Builder() {
    	      // Empty
        }

        public Builder(UserPoolState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountRecoverySetting = defaults.accountRecoverySetting;
    	      this.adminCreateUserConfig = defaults.adminCreateUserConfig;
    	      this.aliasAttributes = defaults.aliasAttributes;
    	      this.arn = defaults.arn;
    	      this.autoVerifiedAttributes = defaults.autoVerifiedAttributes;
    	      this.creationDate = defaults.creationDate;
    	      this.customDomain = defaults.customDomain;
    	      this.deviceConfiguration = defaults.deviceConfiguration;
    	      this.domain = defaults.domain;
    	      this.emailConfiguration = defaults.emailConfiguration;
    	      this.emailVerificationMessage = defaults.emailVerificationMessage;
    	      this.emailVerificationSubject = defaults.emailVerificationSubject;
    	      this.endpoint = defaults.endpoint;
    	      this.estimatedNumberOfUsers = defaults.estimatedNumberOfUsers;
    	      this.lambdaConfig = defaults.lambdaConfig;
    	      this.lastModifiedDate = defaults.lastModifiedDate;
    	      this.mfaConfiguration = defaults.mfaConfiguration;
    	      this.name = defaults.name;
    	      this.passwordPolicy = defaults.passwordPolicy;
    	      this.schemas = defaults.schemas;
    	      this.smsAuthenticationMessage = defaults.smsAuthenticationMessage;
    	      this.smsConfiguration = defaults.smsConfiguration;
    	      this.smsVerificationMessage = defaults.smsVerificationMessage;
    	      this.softwareTokenMfaConfiguration = defaults.softwareTokenMfaConfiguration;
    	      this.tags = defaults.tags;
    	      this.tagsAll = defaults.tagsAll;
    	      this.userPoolAddOns = defaults.userPoolAddOns;
    	      this.usernameAttributes = defaults.usernameAttributes;
    	      this.usernameConfiguration = defaults.usernameConfiguration;
    	      this.verificationMessageTemplate = defaults.verificationMessageTemplate;
        }

        public Builder accountRecoverySetting(@Nullable Output<UserPoolAccountRecoverySettingGetArgs> accountRecoverySetting) {
            this.accountRecoverySetting = accountRecoverySetting;
            return this;
        }
        public Builder accountRecoverySetting(@Nullable UserPoolAccountRecoverySettingGetArgs accountRecoverySetting) {
            this.accountRecoverySetting = Output.ofNullable(accountRecoverySetting);
            return this;
        }
        public Builder adminCreateUserConfig(@Nullable Output<UserPoolAdminCreateUserConfigGetArgs> adminCreateUserConfig) {
            this.adminCreateUserConfig = adminCreateUserConfig;
            return this;
        }
        public Builder adminCreateUserConfig(@Nullable UserPoolAdminCreateUserConfigGetArgs adminCreateUserConfig) {
            this.adminCreateUserConfig = Output.ofNullable(adminCreateUserConfig);
            return this;
        }
        public Builder aliasAttributes(@Nullable Output<List<String>> aliasAttributes) {
            this.aliasAttributes = aliasAttributes;
            return this;
        }
        public Builder aliasAttributes(@Nullable List<String> aliasAttributes) {
            this.aliasAttributes = Output.ofNullable(aliasAttributes);
            return this;
        }
        public Builder aliasAttributes(String... aliasAttributes) {
            return aliasAttributes(List.of(aliasAttributes));
        }
        public Builder arn(@Nullable Output<String> arn) {
            this.arn = arn;
            return this;
        }
        public Builder arn(@Nullable String arn) {
            this.arn = Output.ofNullable(arn);
            return this;
        }
        public Builder autoVerifiedAttributes(@Nullable Output<List<String>> autoVerifiedAttributes) {
            this.autoVerifiedAttributes = autoVerifiedAttributes;
            return this;
        }
        public Builder autoVerifiedAttributes(@Nullable List<String> autoVerifiedAttributes) {
            this.autoVerifiedAttributes = Output.ofNullable(autoVerifiedAttributes);
            return this;
        }
        public Builder autoVerifiedAttributes(String... autoVerifiedAttributes) {
            return autoVerifiedAttributes(List.of(autoVerifiedAttributes));
        }
        public Builder creationDate(@Nullable Output<String> creationDate) {
            this.creationDate = creationDate;
            return this;
        }
        public Builder creationDate(@Nullable String creationDate) {
            this.creationDate = Output.ofNullable(creationDate);
            return this;
        }
        public Builder customDomain(@Nullable Output<String> customDomain) {
            this.customDomain = customDomain;
            return this;
        }
        public Builder customDomain(@Nullable String customDomain) {
            this.customDomain = Output.ofNullable(customDomain);
            return this;
        }
        public Builder deviceConfiguration(@Nullable Output<UserPoolDeviceConfigurationGetArgs> deviceConfiguration) {
            this.deviceConfiguration = deviceConfiguration;
            return this;
        }
        public Builder deviceConfiguration(@Nullable UserPoolDeviceConfigurationGetArgs deviceConfiguration) {
            this.deviceConfiguration = Output.ofNullable(deviceConfiguration);
            return this;
        }
        public Builder domain(@Nullable Output<String> domain) {
            this.domain = domain;
            return this;
        }
        public Builder domain(@Nullable String domain) {
            this.domain = Output.ofNullable(domain);
            return this;
        }
        public Builder emailConfiguration(@Nullable Output<UserPoolEmailConfigurationGetArgs> emailConfiguration) {
            this.emailConfiguration = emailConfiguration;
            return this;
        }
        public Builder emailConfiguration(@Nullable UserPoolEmailConfigurationGetArgs emailConfiguration) {
            this.emailConfiguration = Output.ofNullable(emailConfiguration);
            return this;
        }
        public Builder emailVerificationMessage(@Nullable Output<String> emailVerificationMessage) {
            this.emailVerificationMessage = emailVerificationMessage;
            return this;
        }
        public Builder emailVerificationMessage(@Nullable String emailVerificationMessage) {
            this.emailVerificationMessage = Output.ofNullable(emailVerificationMessage);
            return this;
        }
        public Builder emailVerificationSubject(@Nullable Output<String> emailVerificationSubject) {
            this.emailVerificationSubject = emailVerificationSubject;
            return this;
        }
        public Builder emailVerificationSubject(@Nullable String emailVerificationSubject) {
            this.emailVerificationSubject = Output.ofNullable(emailVerificationSubject);
            return this;
        }
        public Builder endpoint(@Nullable Output<String> endpoint) {
            this.endpoint = endpoint;
            return this;
        }
        public Builder endpoint(@Nullable String endpoint) {
            this.endpoint = Output.ofNullable(endpoint);
            return this;
        }
        public Builder estimatedNumberOfUsers(@Nullable Output<Integer> estimatedNumberOfUsers) {
            this.estimatedNumberOfUsers = estimatedNumberOfUsers;
            return this;
        }
        public Builder estimatedNumberOfUsers(@Nullable Integer estimatedNumberOfUsers) {
            this.estimatedNumberOfUsers = Output.ofNullable(estimatedNumberOfUsers);
            return this;
        }
        public Builder lambdaConfig(@Nullable Output<UserPoolLambdaConfigGetArgs> lambdaConfig) {
            this.lambdaConfig = lambdaConfig;
            return this;
        }
        public Builder lambdaConfig(@Nullable UserPoolLambdaConfigGetArgs lambdaConfig) {
            this.lambdaConfig = Output.ofNullable(lambdaConfig);
            return this;
        }
        public Builder lastModifiedDate(@Nullable Output<String> lastModifiedDate) {
            this.lastModifiedDate = lastModifiedDate;
            return this;
        }
        public Builder lastModifiedDate(@Nullable String lastModifiedDate) {
            this.lastModifiedDate = Output.ofNullable(lastModifiedDate);
            return this;
        }
        public Builder mfaConfiguration(@Nullable Output<String> mfaConfiguration) {
            this.mfaConfiguration = mfaConfiguration;
            return this;
        }
        public Builder mfaConfiguration(@Nullable String mfaConfiguration) {
            this.mfaConfiguration = Output.ofNullable(mfaConfiguration);
            return this;
        }
        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }
        public Builder name(@Nullable String name) {
            this.name = Output.ofNullable(name);
            return this;
        }
        public Builder passwordPolicy(@Nullable Output<UserPoolPasswordPolicyGetArgs> passwordPolicy) {
            this.passwordPolicy = passwordPolicy;
            return this;
        }
        public Builder passwordPolicy(@Nullable UserPoolPasswordPolicyGetArgs passwordPolicy) {
            this.passwordPolicy = Output.ofNullable(passwordPolicy);
            return this;
        }
        public Builder schemas(@Nullable Output<List<UserPoolSchemaGetArgs>> schemas) {
            this.schemas = schemas;
            return this;
        }
        public Builder schemas(@Nullable List<UserPoolSchemaGetArgs> schemas) {
            this.schemas = Output.ofNullable(schemas);
            return this;
        }
        public Builder schemas(UserPoolSchemaGetArgs... schemas) {
            return schemas(List.of(schemas));
        }
        public Builder smsAuthenticationMessage(@Nullable Output<String> smsAuthenticationMessage) {
            this.smsAuthenticationMessage = smsAuthenticationMessage;
            return this;
        }
        public Builder smsAuthenticationMessage(@Nullable String smsAuthenticationMessage) {
            this.smsAuthenticationMessage = Output.ofNullable(smsAuthenticationMessage);
            return this;
        }
        public Builder smsConfiguration(@Nullable Output<UserPoolSmsConfigurationGetArgs> smsConfiguration) {
            this.smsConfiguration = smsConfiguration;
            return this;
        }
        public Builder smsConfiguration(@Nullable UserPoolSmsConfigurationGetArgs smsConfiguration) {
            this.smsConfiguration = Output.ofNullable(smsConfiguration);
            return this;
        }
        public Builder smsVerificationMessage(@Nullable Output<String> smsVerificationMessage) {
            this.smsVerificationMessage = smsVerificationMessage;
            return this;
        }
        public Builder smsVerificationMessage(@Nullable String smsVerificationMessage) {
            this.smsVerificationMessage = Output.ofNullable(smsVerificationMessage);
            return this;
        }
        public Builder softwareTokenMfaConfiguration(@Nullable Output<UserPoolSoftwareTokenMfaConfigurationGetArgs> softwareTokenMfaConfiguration) {
            this.softwareTokenMfaConfiguration = softwareTokenMfaConfiguration;
            return this;
        }
        public Builder softwareTokenMfaConfiguration(@Nullable UserPoolSoftwareTokenMfaConfigurationGetArgs softwareTokenMfaConfiguration) {
            this.softwareTokenMfaConfiguration = Output.ofNullable(softwareTokenMfaConfiguration);
            return this;
        }
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = Output.ofNullable(tags);
            return this;
        }
        public Builder tagsAll(@Nullable Output<Map<String,String>> tagsAll) {
            this.tagsAll = tagsAll;
            return this;
        }
        public Builder tagsAll(@Nullable Map<String,String> tagsAll) {
            this.tagsAll = Output.ofNullable(tagsAll);
            return this;
        }
        public Builder userPoolAddOns(@Nullable Output<UserPoolUserPoolAddOnsGetArgs> userPoolAddOns) {
            this.userPoolAddOns = userPoolAddOns;
            return this;
        }
        public Builder userPoolAddOns(@Nullable UserPoolUserPoolAddOnsGetArgs userPoolAddOns) {
            this.userPoolAddOns = Output.ofNullable(userPoolAddOns);
            return this;
        }
        public Builder usernameAttributes(@Nullable Output<List<String>> usernameAttributes) {
            this.usernameAttributes = usernameAttributes;
            return this;
        }
        public Builder usernameAttributes(@Nullable List<String> usernameAttributes) {
            this.usernameAttributes = Output.ofNullable(usernameAttributes);
            return this;
        }
        public Builder usernameAttributes(String... usernameAttributes) {
            return usernameAttributes(List.of(usernameAttributes));
        }
        public Builder usernameConfiguration(@Nullable Output<UserPoolUsernameConfigurationGetArgs> usernameConfiguration) {
            this.usernameConfiguration = usernameConfiguration;
            return this;
        }
        public Builder usernameConfiguration(@Nullable UserPoolUsernameConfigurationGetArgs usernameConfiguration) {
            this.usernameConfiguration = Output.ofNullable(usernameConfiguration);
            return this;
        }
        public Builder verificationMessageTemplate(@Nullable Output<UserPoolVerificationMessageTemplateGetArgs> verificationMessageTemplate) {
            this.verificationMessageTemplate = verificationMessageTemplate;
            return this;
        }
        public Builder verificationMessageTemplate(@Nullable UserPoolVerificationMessageTemplateGetArgs verificationMessageTemplate) {
            this.verificationMessageTemplate = Output.ofNullable(verificationMessageTemplate);
            return this;
        }        public UserPoolState build() {
            return new UserPoolState(accountRecoverySetting, adminCreateUserConfig, aliasAttributes, arn, autoVerifiedAttributes, creationDate, customDomain, deviceConfiguration, domain, emailConfiguration, emailVerificationMessage, emailVerificationSubject, endpoint, estimatedNumberOfUsers, lambdaConfig, lastModifiedDate, mfaConfiguration, name, passwordPolicy, schemas, smsAuthenticationMessage, smsConfiguration, smsVerificationMessage, softwareTokenMfaConfiguration, tags, tagsAll, userPoolAddOns, usernameAttributes, usernameConfiguration, verificationMessageTemplate);
        }
    }
}
