// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.fsx;

import io.pulumi.aws.fsx.inputs.OntapFileSystemDiskIopsConfigurationArgs;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class OntapFileSystemArgs extends io.pulumi.resources.ResourceArgs {

    public static final OntapFileSystemArgs Empty = new OntapFileSystemArgs();

    /**
     * The number of days to retain automatic backups. Setting this to 0 disables automatic backups. You can retain automatic backups for a maximum of 90 days.
     * 
     */
    @InputImport(name="automaticBackupRetentionDays")
      private final @Nullable Input<Integer> automaticBackupRetentionDays;

    public Input<Integer> getAutomaticBackupRetentionDays() {
        return this.automaticBackupRetentionDays == null ? Input.empty() : this.automaticBackupRetentionDays;
    }

    /**
     * A recurring daily time, in the format HH:MM. HH is the zero-padded hour of the day (0-23), and MM is the zero-padded minute of the hour. For example, 05:00 specifies 5 AM daily. Requires `automatic_backup_retention_days` to be set.
     * 
     */
    @InputImport(name="dailyAutomaticBackupStartTime")
      private final @Nullable Input<String> dailyAutomaticBackupStartTime;

    public Input<String> getDailyAutomaticBackupStartTime() {
        return this.dailyAutomaticBackupStartTime == null ? Input.empty() : this.dailyAutomaticBackupStartTime;
    }

    /**
     * - The filesystem deployment type. Only `MULTI_AZ_1` is supported.
     * 
     */
    @InputImport(name="deploymentType", required=true)
      private final Input<String> deploymentType;

    public Input<String> getDeploymentType() {
        return this.deploymentType;
    }

    /**
     * The SSD IOPS configuration for the Amazon FSx for NetApp ONTAP file system. See Disk Iops Configuration Below.
     * 
     */
    @InputImport(name="diskIopsConfiguration")
      private final @Nullable Input<OntapFileSystemDiskIopsConfigurationArgs> diskIopsConfiguration;

    public Input<OntapFileSystemDiskIopsConfigurationArgs> getDiskIopsConfiguration() {
        return this.diskIopsConfiguration == null ? Input.empty() : this.diskIopsConfiguration;
    }

    /**
     * Specifies the IP address range in which the endpoints to access your file system will be created. By default, Amazon FSx selects an unused IP address range for you from the 198.19.* range.
     * 
     */
    @InputImport(name="endpointIpAddressRange")
      private final @Nullable Input<String> endpointIpAddressRange;

    public Input<String> getEndpointIpAddressRange() {
        return this.endpointIpAddressRange == null ? Input.empty() : this.endpointIpAddressRange;
    }

    /**
     * The ONTAP administrative password for the fsxadmin user that you can use to administer your file system using the ONTAP CLI and REST API.
     * 
     */
    @InputImport(name="fsxAdminPassword")
      private final @Nullable Input<String> fsxAdminPassword;

    public Input<String> getFsxAdminPassword() {
        return this.fsxAdminPassword == null ? Input.empty() : this.fsxAdminPassword;
    }

    /**
     * ARN for the KMS Key to encrypt the file system at rest, Defaults to an AWS managed KMS Key.
     * 
     */
    @InputImport(name="kmsKeyId")
      private final @Nullable Input<String> kmsKeyId;

    public Input<String> getKmsKeyId() {
        return this.kmsKeyId == null ? Input.empty() : this.kmsKeyId;
    }

    /**
     * The ID for a subnet. A subnet is a range of IP addresses in your virtual private cloud (VPC).
     * 
     */
    @InputImport(name="preferredSubnetId", required=true)
      private final Input<String> preferredSubnetId;

    public Input<String> getPreferredSubnetId() {
        return this.preferredSubnetId;
    }

    /**
     * Specifies the VPC route tables in which your file system's endpoints will be created. You should specify all VPC route tables associated with the subnets in which your clients are located. By default, Amazon FSx selects your VPC's default route table.
     * 
     */
    @InputImport(name="routeTableIds")
      private final @Nullable Input<List<String>> routeTableIds;

    public Input<List<String>> getRouteTableIds() {
        return this.routeTableIds == null ? Input.empty() : this.routeTableIds;
    }

    /**
     * A list of IDs for the security groups that apply to the specified network interfaces created for file system access. These security groups will apply to all network interfaces.
     * 
     */
    @InputImport(name="securityGroupIds")
      private final @Nullable Input<List<String>> securityGroupIds;

    public Input<List<String>> getSecurityGroupIds() {
        return this.securityGroupIds == null ? Input.empty() : this.securityGroupIds;
    }

    /**
     * The storage capacity (GiB) of the file system. Valid values between `1024` and `196608`.
     * 
     */
    @InputImport(name="storageCapacity")
      private final @Nullable Input<Integer> storageCapacity;

    public Input<Integer> getStorageCapacity() {
        return this.storageCapacity == null ? Input.empty() : this.storageCapacity;
    }

    /**
     * - The filesystem storage type. defaults to `SSD`.
     * 
     */
    @InputImport(name="storageType")
      private final @Nullable Input<String> storageType;

    public Input<String> getStorageType() {
        return this.storageType == null ? Input.empty() : this.storageType;
    }

    /**
     * A list of IDs for the subnets that the file system will be accessible from. Exactly 2 subnets need to be provided.
     * 
     */
    @InputImport(name="subnetIds", required=true)
      private final Input<List<String>> subnetIds;

    public Input<List<String>> getSubnetIds() {
        return this.subnetIds;
    }

    /**
     * A map of tags to assign to the file system. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @InputImport(name="tags")
      private final @Nullable Input<Map<String,String>> tags;

    public Input<Map<String,String>> getTags() {
        return this.tags == null ? Input.empty() : this.tags;
    }

    @InputImport(name="throughputCapacity", required=true)
      private final Input<Integer> throughputCapacity;

    public Input<Integer> getThroughputCapacity() {
        return this.throughputCapacity;
    }

    /**
     * The preferred start time (in `d:HH:MM` format) to perform weekly maintenance, in the UTC time zone.
     * 
     */
    @InputImport(name="weeklyMaintenanceStartTime")
      private final @Nullable Input<String> weeklyMaintenanceStartTime;

    public Input<String> getWeeklyMaintenanceStartTime() {
        return this.weeklyMaintenanceStartTime == null ? Input.empty() : this.weeklyMaintenanceStartTime;
    }

    public OntapFileSystemArgs(
        @Nullable Input<Integer> automaticBackupRetentionDays,
        @Nullable Input<String> dailyAutomaticBackupStartTime,
        Input<String> deploymentType,
        @Nullable Input<OntapFileSystemDiskIopsConfigurationArgs> diskIopsConfiguration,
        @Nullable Input<String> endpointIpAddressRange,
        @Nullable Input<String> fsxAdminPassword,
        @Nullable Input<String> kmsKeyId,
        Input<String> preferredSubnetId,
        @Nullable Input<List<String>> routeTableIds,
        @Nullable Input<List<String>> securityGroupIds,
        @Nullable Input<Integer> storageCapacity,
        @Nullable Input<String> storageType,
        Input<List<String>> subnetIds,
        @Nullable Input<Map<String,String>> tags,
        Input<Integer> throughputCapacity,
        @Nullable Input<String> weeklyMaintenanceStartTime) {
        this.automaticBackupRetentionDays = automaticBackupRetentionDays;
        this.dailyAutomaticBackupStartTime = dailyAutomaticBackupStartTime;
        this.deploymentType = Objects.requireNonNull(deploymentType, "expected parameter 'deploymentType' to be non-null");
        this.diskIopsConfiguration = diskIopsConfiguration;
        this.endpointIpAddressRange = endpointIpAddressRange;
        this.fsxAdminPassword = fsxAdminPassword;
        this.kmsKeyId = kmsKeyId;
        this.preferredSubnetId = Objects.requireNonNull(preferredSubnetId, "expected parameter 'preferredSubnetId' to be non-null");
        this.routeTableIds = routeTableIds;
        this.securityGroupIds = securityGroupIds;
        this.storageCapacity = storageCapacity;
        this.storageType = storageType;
        this.subnetIds = Objects.requireNonNull(subnetIds, "expected parameter 'subnetIds' to be non-null");
        this.tags = tags;
        this.throughputCapacity = Objects.requireNonNull(throughputCapacity, "expected parameter 'throughputCapacity' to be non-null");
        this.weeklyMaintenanceStartTime = weeklyMaintenanceStartTime;
    }

    private OntapFileSystemArgs() {
        this.automaticBackupRetentionDays = Input.empty();
        this.dailyAutomaticBackupStartTime = Input.empty();
        this.deploymentType = Input.empty();
        this.diskIopsConfiguration = Input.empty();
        this.endpointIpAddressRange = Input.empty();
        this.fsxAdminPassword = Input.empty();
        this.kmsKeyId = Input.empty();
        this.preferredSubnetId = Input.empty();
        this.routeTableIds = Input.empty();
        this.securityGroupIds = Input.empty();
        this.storageCapacity = Input.empty();
        this.storageType = Input.empty();
        this.subnetIds = Input.empty();
        this.tags = Input.empty();
        this.throughputCapacity = Input.empty();
        this.weeklyMaintenanceStartTime = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(OntapFileSystemArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<Integer> automaticBackupRetentionDays;
        private @Nullable Input<String> dailyAutomaticBackupStartTime;
        private Input<String> deploymentType;
        private @Nullable Input<OntapFileSystemDiskIopsConfigurationArgs> diskIopsConfiguration;
        private @Nullable Input<String> endpointIpAddressRange;
        private @Nullable Input<String> fsxAdminPassword;
        private @Nullable Input<String> kmsKeyId;
        private Input<String> preferredSubnetId;
        private @Nullable Input<List<String>> routeTableIds;
        private @Nullable Input<List<String>> securityGroupIds;
        private @Nullable Input<Integer> storageCapacity;
        private @Nullable Input<String> storageType;
        private Input<List<String>> subnetIds;
        private @Nullable Input<Map<String,String>> tags;
        private Input<Integer> throughputCapacity;
        private @Nullable Input<String> weeklyMaintenanceStartTime;

        public Builder() {
    	      // Empty
        }

        public Builder(OntapFileSystemArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.automaticBackupRetentionDays = defaults.automaticBackupRetentionDays;
    	      this.dailyAutomaticBackupStartTime = defaults.dailyAutomaticBackupStartTime;
    	      this.deploymentType = defaults.deploymentType;
    	      this.diskIopsConfiguration = defaults.diskIopsConfiguration;
    	      this.endpointIpAddressRange = defaults.endpointIpAddressRange;
    	      this.fsxAdminPassword = defaults.fsxAdminPassword;
    	      this.kmsKeyId = defaults.kmsKeyId;
    	      this.preferredSubnetId = defaults.preferredSubnetId;
    	      this.routeTableIds = defaults.routeTableIds;
    	      this.securityGroupIds = defaults.securityGroupIds;
    	      this.storageCapacity = defaults.storageCapacity;
    	      this.storageType = defaults.storageType;
    	      this.subnetIds = defaults.subnetIds;
    	      this.tags = defaults.tags;
    	      this.throughputCapacity = defaults.throughputCapacity;
    	      this.weeklyMaintenanceStartTime = defaults.weeklyMaintenanceStartTime;
        }

        public Builder setAutomaticBackupRetentionDays(@Nullable Input<Integer> automaticBackupRetentionDays) {
            this.automaticBackupRetentionDays = automaticBackupRetentionDays;
            return this;
        }

        public Builder setAutomaticBackupRetentionDays(@Nullable Integer automaticBackupRetentionDays) {
            this.automaticBackupRetentionDays = Input.ofNullable(automaticBackupRetentionDays);
            return this;
        }

        public Builder setDailyAutomaticBackupStartTime(@Nullable Input<String> dailyAutomaticBackupStartTime) {
            this.dailyAutomaticBackupStartTime = dailyAutomaticBackupStartTime;
            return this;
        }

        public Builder setDailyAutomaticBackupStartTime(@Nullable String dailyAutomaticBackupStartTime) {
            this.dailyAutomaticBackupStartTime = Input.ofNullable(dailyAutomaticBackupStartTime);
            return this;
        }

        public Builder setDeploymentType(Input<String> deploymentType) {
            this.deploymentType = Objects.requireNonNull(deploymentType);
            return this;
        }

        public Builder setDeploymentType(String deploymentType) {
            this.deploymentType = Input.of(Objects.requireNonNull(deploymentType));
            return this;
        }

        public Builder setDiskIopsConfiguration(@Nullable Input<OntapFileSystemDiskIopsConfigurationArgs> diskIopsConfiguration) {
            this.diskIopsConfiguration = diskIopsConfiguration;
            return this;
        }

        public Builder setDiskIopsConfiguration(@Nullable OntapFileSystemDiskIopsConfigurationArgs diskIopsConfiguration) {
            this.diskIopsConfiguration = Input.ofNullable(diskIopsConfiguration);
            return this;
        }

        public Builder setEndpointIpAddressRange(@Nullable Input<String> endpointIpAddressRange) {
            this.endpointIpAddressRange = endpointIpAddressRange;
            return this;
        }

        public Builder setEndpointIpAddressRange(@Nullable String endpointIpAddressRange) {
            this.endpointIpAddressRange = Input.ofNullable(endpointIpAddressRange);
            return this;
        }

        public Builder setFsxAdminPassword(@Nullable Input<String> fsxAdminPassword) {
            this.fsxAdminPassword = fsxAdminPassword;
            return this;
        }

        public Builder setFsxAdminPassword(@Nullable String fsxAdminPassword) {
            this.fsxAdminPassword = Input.ofNullable(fsxAdminPassword);
            return this;
        }

        public Builder setKmsKeyId(@Nullable Input<String> kmsKeyId) {
            this.kmsKeyId = kmsKeyId;
            return this;
        }

        public Builder setKmsKeyId(@Nullable String kmsKeyId) {
            this.kmsKeyId = Input.ofNullable(kmsKeyId);
            return this;
        }

        public Builder setPreferredSubnetId(Input<String> preferredSubnetId) {
            this.preferredSubnetId = Objects.requireNonNull(preferredSubnetId);
            return this;
        }

        public Builder setPreferredSubnetId(String preferredSubnetId) {
            this.preferredSubnetId = Input.of(Objects.requireNonNull(preferredSubnetId));
            return this;
        }

        public Builder setRouteTableIds(@Nullable Input<List<String>> routeTableIds) {
            this.routeTableIds = routeTableIds;
            return this;
        }

        public Builder setRouteTableIds(@Nullable List<String> routeTableIds) {
            this.routeTableIds = Input.ofNullable(routeTableIds);
            return this;
        }

        public Builder setSecurityGroupIds(@Nullable Input<List<String>> securityGroupIds) {
            this.securityGroupIds = securityGroupIds;
            return this;
        }

        public Builder setSecurityGroupIds(@Nullable List<String> securityGroupIds) {
            this.securityGroupIds = Input.ofNullable(securityGroupIds);
            return this;
        }

        public Builder setStorageCapacity(@Nullable Input<Integer> storageCapacity) {
            this.storageCapacity = storageCapacity;
            return this;
        }

        public Builder setStorageCapacity(@Nullable Integer storageCapacity) {
            this.storageCapacity = Input.ofNullable(storageCapacity);
            return this;
        }

        public Builder setStorageType(@Nullable Input<String> storageType) {
            this.storageType = storageType;
            return this;
        }

        public Builder setStorageType(@Nullable String storageType) {
            this.storageType = Input.ofNullable(storageType);
            return this;
        }

        public Builder setSubnetIds(Input<List<String>> subnetIds) {
            this.subnetIds = Objects.requireNonNull(subnetIds);
            return this;
        }

        public Builder setSubnetIds(List<String> subnetIds) {
            this.subnetIds = Input.of(Objects.requireNonNull(subnetIds));
            return this;
        }

        public Builder setTags(@Nullable Input<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }

        public Builder setTags(@Nullable Map<String,String> tags) {
            this.tags = Input.ofNullable(tags);
            return this;
        }

        public Builder setThroughputCapacity(Input<Integer> throughputCapacity) {
            this.throughputCapacity = Objects.requireNonNull(throughputCapacity);
            return this;
        }

        public Builder setThroughputCapacity(Integer throughputCapacity) {
            this.throughputCapacity = Input.of(Objects.requireNonNull(throughputCapacity));
            return this;
        }

        public Builder setWeeklyMaintenanceStartTime(@Nullable Input<String> weeklyMaintenanceStartTime) {
            this.weeklyMaintenanceStartTime = weeklyMaintenanceStartTime;
            return this;
        }

        public Builder setWeeklyMaintenanceStartTime(@Nullable String weeklyMaintenanceStartTime) {
            this.weeklyMaintenanceStartTime = Input.ofNullable(weeklyMaintenanceStartTime);
            return this;
        }
        public OntapFileSystemArgs build() {
            return new OntapFileSystemArgs(automaticBackupRetentionDays, dailyAutomaticBackupStartTime, deploymentType, diskIopsConfiguration, endpointIpAddressRange, fsxAdminPassword, kmsKeyId, preferredSubnetId, routeTableIds, securityGroupIds, storageCapacity, storageType, subnetIds, tags, throughputCapacity, weeklyMaintenanceStartTime);
        }
    }
}
