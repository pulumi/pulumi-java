// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.s3.inputs;

import io.pulumi.aws.s3.inputs.BucketReplicationConfigRuleGetArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class BucketReplicationConfigState extends io.pulumi.resources.ResourceArgs {

    public static final BucketReplicationConfigState Empty = new BucketReplicationConfigState();

    /**
     * The name of the source S3 bucket you want Amazon S3 to monitor.
     * 
     */
    @Import(name="bucket")
      private final @Nullable Output<String> bucket;

    public Output<String> getBucket() {
        return this.bucket == null ? Output.empty() : this.bucket;
    }

    /**
     * The ARN of the IAM role for Amazon S3 to assume when replicating the objects.
     * 
     */
    @Import(name="role")
      private final @Nullable Output<String> role;

    public Output<String> getRole() {
        return this.role == null ? Output.empty() : this.role;
    }

    /**
     * Set of configuration blocks describing the rules managing the replication documented below.
     * 
     */
    @Import(name="rules")
      private final @Nullable Output<List<BucketReplicationConfigRuleGetArgs>> rules;

    public Output<List<BucketReplicationConfigRuleGetArgs>> getRules() {
        return this.rules == null ? Output.empty() : this.rules;
    }

    public BucketReplicationConfigState(
        @Nullable Output<String> bucket,
        @Nullable Output<String> role,
        @Nullable Output<List<BucketReplicationConfigRuleGetArgs>> rules) {
        this.bucket = bucket;
        this.role = role;
        this.rules = rules;
    }

    private BucketReplicationConfigState() {
        this.bucket = Output.empty();
        this.role = Output.empty();
        this.rules = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BucketReplicationConfigState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> bucket;
        private @Nullable Output<String> role;
        private @Nullable Output<List<BucketReplicationConfigRuleGetArgs>> rules;

        public Builder() {
    	      // Empty
        }

        public Builder(BucketReplicationConfigState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bucket = defaults.bucket;
    	      this.role = defaults.role;
    	      this.rules = defaults.rules;
        }

        public Builder bucket(@Nullable Output<String> bucket) {
            this.bucket = bucket;
            return this;
        }
        public Builder bucket(@Nullable String bucket) {
            this.bucket = Output.ofNullable(bucket);
            return this;
        }
        public Builder role(@Nullable Output<String> role) {
            this.role = role;
            return this;
        }
        public Builder role(@Nullable String role) {
            this.role = Output.ofNullable(role);
            return this;
        }
        public Builder rules(@Nullable Output<List<BucketReplicationConfigRuleGetArgs>> rules) {
            this.rules = rules;
            return this;
        }
        public Builder rules(@Nullable List<BucketReplicationConfigRuleGetArgs> rules) {
            this.rules = Output.ofNullable(rules);
            return this;
        }
        public Builder rules(BucketReplicationConfigRuleGetArgs... rules) {
            return rules(List.of(rules));
        }        public BucketReplicationConfigState build() {
            return new BucketReplicationConfigState(bucket, role, rules);
        }
    }
}
