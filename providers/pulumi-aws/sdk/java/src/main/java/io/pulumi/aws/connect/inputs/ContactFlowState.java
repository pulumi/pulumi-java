// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.connect.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ContactFlowState extends io.pulumi.resources.ResourceArgs {

    public static final ContactFlowState Empty = new ContactFlowState();

    /**
     * The Amazon Resource Name (ARN) of the Contact Flow.
     * 
     */
    @Import(name="arn")
      private final @Nullable Output<String> arn;

    public Output<String> arn() {
        return this.arn == null ? Codegen.empty() : this.arn;
    }

    /**
     * The identifier of the Contact Flow.
     * 
     */
    @Import(name="contactFlowId")
      private final @Nullable Output<String> contactFlowId;

    public Output<String> contactFlowId() {
        return this.contactFlowId == null ? Codegen.empty() : this.contactFlowId;
    }

    /**
     * Specifies the content of the Contact Flow, provided as a JSON string, written in Amazon Connect Contact Flow Language. If defined, the `filename` argument cannot be used.
     * 
     */
    @Import(name="content")
      private final @Nullable Output<String> content;

    public Output<String> content() {
        return this.content == null ? Codegen.empty() : this.content;
    }

    @Import(name="contentHash")
      private final @Nullable Output<String> contentHash;

    public Output<String> contentHash() {
        return this.contentHash == null ? Codegen.empty() : this.contentHash;
    }

    /**
     * Specifies the description of the Contact Flow.
     * 
     */
    @Import(name="description")
      private final @Nullable Output<String> description;

    public Output<String> description() {
        return this.description == null ? Codegen.empty() : this.description;
    }

    /**
     * The path to the Contact Flow source within the local filesystem. Conflicts with `content`.
     * 
     */
    @Import(name="filename")
      private final @Nullable Output<String> filename;

    public Output<String> filename() {
        return this.filename == null ? Codegen.empty() : this.filename;
    }

    /**
     * Specifies the identifier of the hosting Amazon Connect Instance.
     * 
     */
    @Import(name="instanceId")
      private final @Nullable Output<String> instanceId;

    public Output<String> instanceId() {
        return this.instanceId == null ? Codegen.empty() : this.instanceId;
    }

    /**
     * Specifies the name of the Contact Flow.
     * 
     */
    @Import(name="name")
      private final @Nullable Output<String> name;

    public Output<String> name() {
        return this.name == null ? Codegen.empty() : this.name;
    }

    /**
     * Tags to apply to the Contact Flow. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Import(name="tags")
      private final @Nullable Output<Map<String,String>> tags;

    public Output<Map<String,String>> tags() {
        return this.tags == null ? Codegen.empty() : this.tags;
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     */
    @Import(name="tagsAll")
      private final @Nullable Output<Map<String,String>> tagsAll;

    public Output<Map<String,String>> tagsAll() {
        return this.tagsAll == null ? Codegen.empty() : this.tagsAll;
    }

    /**
     * Specifies the type of the Contact Flow. Defaults to `CONTACT_FLOW`. Allowed Values are: `CONTACT_FLOW`, `CUSTOMER_QUEUE`, `CUSTOMER_HOLD`, `CUSTOMER_WHISPER`, `AGENT_HOLD`, `AGENT_WHISPER`, `OUTBOUND_WHISPER`, `AGENT_TRANSFER`, `QUEUE_TRANSFER`.
     * 
     */
    @Import(name="type")
      private final @Nullable Output<String> type;

    public Output<String> type() {
        return this.type == null ? Codegen.empty() : this.type;
    }

    public ContactFlowState(
        @Nullable Output<String> arn,
        @Nullable Output<String> contactFlowId,
        @Nullable Output<String> content,
        @Nullable Output<String> contentHash,
        @Nullable Output<String> description,
        @Nullable Output<String> filename,
        @Nullable Output<String> instanceId,
        @Nullable Output<String> name,
        @Nullable Output<Map<String,String>> tags,
        @Nullable Output<Map<String,String>> tagsAll,
        @Nullable Output<String> type) {
        this.arn = arn;
        this.contactFlowId = contactFlowId;
        this.content = content;
        this.contentHash = contentHash;
        this.description = description;
        this.filename = filename;
        this.instanceId = instanceId;
        this.name = name;
        this.tags = tags;
        this.tagsAll = tagsAll;
        this.type = type;
    }

    private ContactFlowState() {
        this.arn = Codegen.empty();
        this.contactFlowId = Codegen.empty();
        this.content = Codegen.empty();
        this.contentHash = Codegen.empty();
        this.description = Codegen.empty();
        this.filename = Codegen.empty();
        this.instanceId = Codegen.empty();
        this.name = Codegen.empty();
        this.tags = Codegen.empty();
        this.tagsAll = Codegen.empty();
        this.type = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ContactFlowState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> arn;
        private @Nullable Output<String> contactFlowId;
        private @Nullable Output<String> content;
        private @Nullable Output<String> contentHash;
        private @Nullable Output<String> description;
        private @Nullable Output<String> filename;
        private @Nullable Output<String> instanceId;
        private @Nullable Output<String> name;
        private @Nullable Output<Map<String,String>> tags;
        private @Nullable Output<Map<String,String>> tagsAll;
        private @Nullable Output<String> type;

        public Builder() {
    	      // Empty
        }

        public Builder(ContactFlowState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.contactFlowId = defaults.contactFlowId;
    	      this.content = defaults.content;
    	      this.contentHash = defaults.contentHash;
    	      this.description = defaults.description;
    	      this.filename = defaults.filename;
    	      this.instanceId = defaults.instanceId;
    	      this.name = defaults.name;
    	      this.tags = defaults.tags;
    	      this.tagsAll = defaults.tagsAll;
    	      this.type = defaults.type;
        }

        public Builder arn(@Nullable Output<String> arn) {
            this.arn = arn;
            return this;
        }
        public Builder arn(@Nullable String arn) {
            this.arn = Codegen.ofNullable(arn);
            return this;
        }
        public Builder contactFlowId(@Nullable Output<String> contactFlowId) {
            this.contactFlowId = contactFlowId;
            return this;
        }
        public Builder contactFlowId(@Nullable String contactFlowId) {
            this.contactFlowId = Codegen.ofNullable(contactFlowId);
            return this;
        }
        public Builder content(@Nullable Output<String> content) {
            this.content = content;
            return this;
        }
        public Builder content(@Nullable String content) {
            this.content = Codegen.ofNullable(content);
            return this;
        }
        public Builder contentHash(@Nullable Output<String> contentHash) {
            this.contentHash = contentHash;
            return this;
        }
        public Builder contentHash(@Nullable String contentHash) {
            this.contentHash = Codegen.ofNullable(contentHash);
            return this;
        }
        public Builder description(@Nullable Output<String> description) {
            this.description = description;
            return this;
        }
        public Builder description(@Nullable String description) {
            this.description = Codegen.ofNullable(description);
            return this;
        }
        public Builder filename(@Nullable Output<String> filename) {
            this.filename = filename;
            return this;
        }
        public Builder filename(@Nullable String filename) {
            this.filename = Codegen.ofNullable(filename);
            return this;
        }
        public Builder instanceId(@Nullable Output<String> instanceId) {
            this.instanceId = instanceId;
            return this;
        }
        public Builder instanceId(@Nullable String instanceId) {
            this.instanceId = Codegen.ofNullable(instanceId);
            return this;
        }
        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }
        public Builder name(@Nullable String name) {
            this.name = Codegen.ofNullable(name);
            return this;
        }
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = Codegen.ofNullable(tags);
            return this;
        }
        public Builder tagsAll(@Nullable Output<Map<String,String>> tagsAll) {
            this.tagsAll = tagsAll;
            return this;
        }
        public Builder tagsAll(@Nullable Map<String,String> tagsAll) {
            this.tagsAll = Codegen.ofNullable(tagsAll);
            return this;
        }
        public Builder type(@Nullable Output<String> type) {
            this.type = type;
            return this;
        }
        public Builder type(@Nullable String type) {
            this.type = Codegen.ofNullable(type);
            return this;
        }        public ContactFlowState build() {
            return new ContactFlowState(arn, contactFlowId, content, contentHash, description, filename, instanceId, name, tags, tagsAll, type);
        }
    }
}
