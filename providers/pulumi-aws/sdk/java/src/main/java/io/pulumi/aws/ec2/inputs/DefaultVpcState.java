// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.ec2.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class DefaultVpcState extends io.pulumi.resources.ResourceArgs {

    public static final DefaultVpcState Empty = new DefaultVpcState();

    /**
     * Amazon Resource Name (ARN) of VPC
     * 
     */
    @Import(name="arn")
      private final @Nullable Output<String> arn;

    public Output<String> getArn() {
        return this.arn == null ? Codegen.empty() : this.arn;
    }

    /**
     * Whether or not an Amazon-provided IPv6 CIDR
     * block with a /56 prefix length for the VPC was assigned
     * 
     */
    @Import(name="assignGeneratedIpv6CidrBlock")
      private final @Nullable Output<Boolean> assignGeneratedIpv6CidrBlock;

    public Output<Boolean> getAssignGeneratedIpv6CidrBlock() {
        return this.assignGeneratedIpv6CidrBlock == null ? Codegen.empty() : this.assignGeneratedIpv6CidrBlock;
    }

    /**
     * The CIDR block of the VPC
     * 
     */
    @Import(name="cidrBlock")
      private final @Nullable Output<String> cidrBlock;

    public Output<String> getCidrBlock() {
        return this.cidrBlock == null ? Codegen.empty() : this.cidrBlock;
    }

    /**
     * The ID of the network ACL created by default on VPC creation
     * 
     */
    @Import(name="defaultNetworkAclId")
      private final @Nullable Output<String> defaultNetworkAclId;

    public Output<String> getDefaultNetworkAclId() {
        return this.defaultNetworkAclId == null ? Codegen.empty() : this.defaultNetworkAclId;
    }

    /**
     * The ID of the route table created by default on VPC creation
     * 
     */
    @Import(name="defaultRouteTableId")
      private final @Nullable Output<String> defaultRouteTableId;

    public Output<String> getDefaultRouteTableId() {
        return this.defaultRouteTableId == null ? Codegen.empty() : this.defaultRouteTableId;
    }

    /**
     * The ID of the security group created by default on VPC creation
     * 
     */
    @Import(name="defaultSecurityGroupId")
      private final @Nullable Output<String> defaultSecurityGroupId;

    public Output<String> getDefaultSecurityGroupId() {
        return this.defaultSecurityGroupId == null ? Codegen.empty() : this.defaultSecurityGroupId;
    }

    @Import(name="dhcpOptionsId")
      private final @Nullable Output<String> dhcpOptionsId;

    public Output<String> getDhcpOptionsId() {
        return this.dhcpOptionsId == null ? Codegen.empty() : this.dhcpOptionsId;
    }

    /**
     * A boolean flag to enable/disable ClassicLink
     * for the VPC. Only valid in regions and accounts that support EC2 Classic.
     * See the [ClassicLink documentation](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/vpc-classiclink.html) for more information. Defaults false.
     * 
     */
    @Import(name="enableClassiclink")
      private final @Nullable Output<Boolean> enableClassiclink;

    public Output<Boolean> getEnableClassiclink() {
        return this.enableClassiclink == null ? Codegen.empty() : this.enableClassiclink;
    }

    @Import(name="enableClassiclinkDnsSupport")
      private final @Nullable Output<Boolean> enableClassiclinkDnsSupport;

    public Output<Boolean> getEnableClassiclinkDnsSupport() {
        return this.enableClassiclinkDnsSupport == null ? Codegen.empty() : this.enableClassiclinkDnsSupport;
    }

    /**
     * A boolean flag to enable/disable DNS hostnames in the VPC. Defaults false.
     * 
     */
    @Import(name="enableDnsHostnames")
      private final @Nullable Output<Boolean> enableDnsHostnames;

    public Output<Boolean> getEnableDnsHostnames() {
        return this.enableDnsHostnames == null ? Codegen.empty() : this.enableDnsHostnames;
    }

    /**
     * A boolean flag to enable/disable DNS support in the VPC. Defaults true.
     * 
     */
    @Import(name="enableDnsSupport")
      private final @Nullable Output<Boolean> enableDnsSupport;

    public Output<Boolean> getEnableDnsSupport() {
        return this.enableDnsSupport == null ? Codegen.empty() : this.enableDnsSupport;
    }

    /**
     * Tenancy of instances spin up within VPC.
     * 
     */
    @Import(name="instanceTenancy")
      private final @Nullable Output<String> instanceTenancy;

    public Output<String> getInstanceTenancy() {
        return this.instanceTenancy == null ? Codegen.empty() : this.instanceTenancy;
    }

    @Import(name="ipv4IpamPoolId")
      private final @Nullable Output<String> ipv4IpamPoolId;

    public Output<String> getIpv4IpamPoolId() {
        return this.ipv4IpamPoolId == null ? Codegen.empty() : this.ipv4IpamPoolId;
    }

    @Import(name="ipv4NetmaskLength")
      private final @Nullable Output<Integer> ipv4NetmaskLength;

    public Output<Integer> getIpv4NetmaskLength() {
        return this.ipv4NetmaskLength == null ? Codegen.empty() : this.ipv4NetmaskLength;
    }

    /**
     * The association ID for the IPv6 CIDR block of the VPC
     * 
     */
    @Import(name="ipv6AssociationId")
      private final @Nullable Output<String> ipv6AssociationId;

    public Output<String> getIpv6AssociationId() {
        return this.ipv6AssociationId == null ? Codegen.empty() : this.ipv6AssociationId;
    }

    /**
     * The IPv6 CIDR block of the VPC
     * 
     */
    @Import(name="ipv6CidrBlock")
      private final @Nullable Output<String> ipv6CidrBlock;

    public Output<String> getIpv6CidrBlock() {
        return this.ipv6CidrBlock == null ? Codegen.empty() : this.ipv6CidrBlock;
    }

    @Import(name="ipv6CidrBlockNetworkBorderGroup")
      private final @Nullable Output<String> ipv6CidrBlockNetworkBorderGroup;

    public Output<String> getIpv6CidrBlockNetworkBorderGroup() {
        return this.ipv6CidrBlockNetworkBorderGroup == null ? Codegen.empty() : this.ipv6CidrBlockNetworkBorderGroup;
    }

    @Import(name="ipv6IpamPoolId")
      private final @Nullable Output<String> ipv6IpamPoolId;

    public Output<String> getIpv6IpamPoolId() {
        return this.ipv6IpamPoolId == null ? Codegen.empty() : this.ipv6IpamPoolId;
    }

    @Import(name="ipv6NetmaskLength")
      private final @Nullable Output<Integer> ipv6NetmaskLength;

    public Output<Integer> getIpv6NetmaskLength() {
        return this.ipv6NetmaskLength == null ? Codegen.empty() : this.ipv6NetmaskLength;
    }

    /**
     * The ID of the main route table associated with
     * this VPC. Note that you can change a VPC's main route table by using an
     * `aws.ec2.MainRouteTableAssociation`
     * 
     */
    @Import(name="mainRouteTableId")
      private final @Nullable Output<String> mainRouteTableId;

    public Output<String> getMainRouteTableId() {
        return this.mainRouteTableId == null ? Codegen.empty() : this.mainRouteTableId;
    }

    /**
     * The ID of the AWS account that owns the VPC.
     * 
     */
    @Import(name="ownerId")
      private final @Nullable Output<String> ownerId;

    public Output<String> getOwnerId() {
        return this.ownerId == null ? Codegen.empty() : this.ownerId;
    }

    /**
     * A map of tags to assign to the resource.
     * 
     */
    @Import(name="tags")
      private final @Nullable Output<Map<String,String>> tags;

    public Output<Map<String,String>> getTags() {
        return this.tags == null ? Codegen.empty() : this.tags;
    }

    @Import(name="tagsAll")
      private final @Nullable Output<Map<String,String>> tagsAll;

    public Output<Map<String,String>> getTagsAll() {
        return this.tagsAll == null ? Codegen.empty() : this.tagsAll;
    }

    public DefaultVpcState(
        @Nullable Output<String> arn,
        @Nullable Output<Boolean> assignGeneratedIpv6CidrBlock,
        @Nullable Output<String> cidrBlock,
        @Nullable Output<String> defaultNetworkAclId,
        @Nullable Output<String> defaultRouteTableId,
        @Nullable Output<String> defaultSecurityGroupId,
        @Nullable Output<String> dhcpOptionsId,
        @Nullable Output<Boolean> enableClassiclink,
        @Nullable Output<Boolean> enableClassiclinkDnsSupport,
        @Nullable Output<Boolean> enableDnsHostnames,
        @Nullable Output<Boolean> enableDnsSupport,
        @Nullable Output<String> instanceTenancy,
        @Nullable Output<String> ipv4IpamPoolId,
        @Nullable Output<Integer> ipv4NetmaskLength,
        @Nullable Output<String> ipv6AssociationId,
        @Nullable Output<String> ipv6CidrBlock,
        @Nullable Output<String> ipv6CidrBlockNetworkBorderGroup,
        @Nullable Output<String> ipv6IpamPoolId,
        @Nullable Output<Integer> ipv6NetmaskLength,
        @Nullable Output<String> mainRouteTableId,
        @Nullable Output<String> ownerId,
        @Nullable Output<Map<String,String>> tags,
        @Nullable Output<Map<String,String>> tagsAll) {
        this.arn = arn;
        this.assignGeneratedIpv6CidrBlock = assignGeneratedIpv6CidrBlock;
        this.cidrBlock = cidrBlock;
        this.defaultNetworkAclId = defaultNetworkAclId;
        this.defaultRouteTableId = defaultRouteTableId;
        this.defaultSecurityGroupId = defaultSecurityGroupId;
        this.dhcpOptionsId = dhcpOptionsId;
        this.enableClassiclink = enableClassiclink;
        this.enableClassiclinkDnsSupport = enableClassiclinkDnsSupport;
        this.enableDnsHostnames = enableDnsHostnames;
        this.enableDnsSupport = enableDnsSupport;
        this.instanceTenancy = instanceTenancy;
        this.ipv4IpamPoolId = ipv4IpamPoolId;
        this.ipv4NetmaskLength = ipv4NetmaskLength;
        this.ipv6AssociationId = ipv6AssociationId;
        this.ipv6CidrBlock = ipv6CidrBlock;
        this.ipv6CidrBlockNetworkBorderGroup = ipv6CidrBlockNetworkBorderGroup;
        this.ipv6IpamPoolId = ipv6IpamPoolId;
        this.ipv6NetmaskLength = ipv6NetmaskLength;
        this.mainRouteTableId = mainRouteTableId;
        this.ownerId = ownerId;
        this.tags = tags;
        this.tagsAll = tagsAll;
    }

    private DefaultVpcState() {
        this.arn = Codegen.empty();
        this.assignGeneratedIpv6CidrBlock = Codegen.empty();
        this.cidrBlock = Codegen.empty();
        this.defaultNetworkAclId = Codegen.empty();
        this.defaultRouteTableId = Codegen.empty();
        this.defaultSecurityGroupId = Codegen.empty();
        this.dhcpOptionsId = Codegen.empty();
        this.enableClassiclink = Codegen.empty();
        this.enableClassiclinkDnsSupport = Codegen.empty();
        this.enableDnsHostnames = Codegen.empty();
        this.enableDnsSupport = Codegen.empty();
        this.instanceTenancy = Codegen.empty();
        this.ipv4IpamPoolId = Codegen.empty();
        this.ipv4NetmaskLength = Codegen.empty();
        this.ipv6AssociationId = Codegen.empty();
        this.ipv6CidrBlock = Codegen.empty();
        this.ipv6CidrBlockNetworkBorderGroup = Codegen.empty();
        this.ipv6IpamPoolId = Codegen.empty();
        this.ipv6NetmaskLength = Codegen.empty();
        this.mainRouteTableId = Codegen.empty();
        this.ownerId = Codegen.empty();
        this.tags = Codegen.empty();
        this.tagsAll = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DefaultVpcState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> arn;
        private @Nullable Output<Boolean> assignGeneratedIpv6CidrBlock;
        private @Nullable Output<String> cidrBlock;
        private @Nullable Output<String> defaultNetworkAclId;
        private @Nullable Output<String> defaultRouteTableId;
        private @Nullable Output<String> defaultSecurityGroupId;
        private @Nullable Output<String> dhcpOptionsId;
        private @Nullable Output<Boolean> enableClassiclink;
        private @Nullable Output<Boolean> enableClassiclinkDnsSupport;
        private @Nullable Output<Boolean> enableDnsHostnames;
        private @Nullable Output<Boolean> enableDnsSupport;
        private @Nullable Output<String> instanceTenancy;
        private @Nullable Output<String> ipv4IpamPoolId;
        private @Nullable Output<Integer> ipv4NetmaskLength;
        private @Nullable Output<String> ipv6AssociationId;
        private @Nullable Output<String> ipv6CidrBlock;
        private @Nullable Output<String> ipv6CidrBlockNetworkBorderGroup;
        private @Nullable Output<String> ipv6IpamPoolId;
        private @Nullable Output<Integer> ipv6NetmaskLength;
        private @Nullable Output<String> mainRouteTableId;
        private @Nullable Output<String> ownerId;
        private @Nullable Output<Map<String,String>> tags;
        private @Nullable Output<Map<String,String>> tagsAll;

        public Builder() {
    	      // Empty
        }

        public Builder(DefaultVpcState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.assignGeneratedIpv6CidrBlock = defaults.assignGeneratedIpv6CidrBlock;
    	      this.cidrBlock = defaults.cidrBlock;
    	      this.defaultNetworkAclId = defaults.defaultNetworkAclId;
    	      this.defaultRouteTableId = defaults.defaultRouteTableId;
    	      this.defaultSecurityGroupId = defaults.defaultSecurityGroupId;
    	      this.dhcpOptionsId = defaults.dhcpOptionsId;
    	      this.enableClassiclink = defaults.enableClassiclink;
    	      this.enableClassiclinkDnsSupport = defaults.enableClassiclinkDnsSupport;
    	      this.enableDnsHostnames = defaults.enableDnsHostnames;
    	      this.enableDnsSupport = defaults.enableDnsSupport;
    	      this.instanceTenancy = defaults.instanceTenancy;
    	      this.ipv4IpamPoolId = defaults.ipv4IpamPoolId;
    	      this.ipv4NetmaskLength = defaults.ipv4NetmaskLength;
    	      this.ipv6AssociationId = defaults.ipv6AssociationId;
    	      this.ipv6CidrBlock = defaults.ipv6CidrBlock;
    	      this.ipv6CidrBlockNetworkBorderGroup = defaults.ipv6CidrBlockNetworkBorderGroup;
    	      this.ipv6IpamPoolId = defaults.ipv6IpamPoolId;
    	      this.ipv6NetmaskLength = defaults.ipv6NetmaskLength;
    	      this.mainRouteTableId = defaults.mainRouteTableId;
    	      this.ownerId = defaults.ownerId;
    	      this.tags = defaults.tags;
    	      this.tagsAll = defaults.tagsAll;
        }

        public Builder arn(@Nullable Output<String> arn) {
            this.arn = arn;
            return this;
        }
        public Builder arn(@Nullable String arn) {
            this.arn = Codegen.ofNullable(arn);
            return this;
        }
        public Builder assignGeneratedIpv6CidrBlock(@Nullable Output<Boolean> assignGeneratedIpv6CidrBlock) {
            this.assignGeneratedIpv6CidrBlock = assignGeneratedIpv6CidrBlock;
            return this;
        }
        public Builder assignGeneratedIpv6CidrBlock(@Nullable Boolean assignGeneratedIpv6CidrBlock) {
            this.assignGeneratedIpv6CidrBlock = Codegen.ofNullable(assignGeneratedIpv6CidrBlock);
            return this;
        }
        public Builder cidrBlock(@Nullable Output<String> cidrBlock) {
            this.cidrBlock = cidrBlock;
            return this;
        }
        public Builder cidrBlock(@Nullable String cidrBlock) {
            this.cidrBlock = Codegen.ofNullable(cidrBlock);
            return this;
        }
        public Builder defaultNetworkAclId(@Nullable Output<String> defaultNetworkAclId) {
            this.defaultNetworkAclId = defaultNetworkAclId;
            return this;
        }
        public Builder defaultNetworkAclId(@Nullable String defaultNetworkAclId) {
            this.defaultNetworkAclId = Codegen.ofNullable(defaultNetworkAclId);
            return this;
        }
        public Builder defaultRouteTableId(@Nullable Output<String> defaultRouteTableId) {
            this.defaultRouteTableId = defaultRouteTableId;
            return this;
        }
        public Builder defaultRouteTableId(@Nullable String defaultRouteTableId) {
            this.defaultRouteTableId = Codegen.ofNullable(defaultRouteTableId);
            return this;
        }
        public Builder defaultSecurityGroupId(@Nullable Output<String> defaultSecurityGroupId) {
            this.defaultSecurityGroupId = defaultSecurityGroupId;
            return this;
        }
        public Builder defaultSecurityGroupId(@Nullable String defaultSecurityGroupId) {
            this.defaultSecurityGroupId = Codegen.ofNullable(defaultSecurityGroupId);
            return this;
        }
        public Builder dhcpOptionsId(@Nullable Output<String> dhcpOptionsId) {
            this.dhcpOptionsId = dhcpOptionsId;
            return this;
        }
        public Builder dhcpOptionsId(@Nullable String dhcpOptionsId) {
            this.dhcpOptionsId = Codegen.ofNullable(dhcpOptionsId);
            return this;
        }
        public Builder enableClassiclink(@Nullable Output<Boolean> enableClassiclink) {
            this.enableClassiclink = enableClassiclink;
            return this;
        }
        public Builder enableClassiclink(@Nullable Boolean enableClassiclink) {
            this.enableClassiclink = Codegen.ofNullable(enableClassiclink);
            return this;
        }
        public Builder enableClassiclinkDnsSupport(@Nullable Output<Boolean> enableClassiclinkDnsSupport) {
            this.enableClassiclinkDnsSupport = enableClassiclinkDnsSupport;
            return this;
        }
        public Builder enableClassiclinkDnsSupport(@Nullable Boolean enableClassiclinkDnsSupport) {
            this.enableClassiclinkDnsSupport = Codegen.ofNullable(enableClassiclinkDnsSupport);
            return this;
        }
        public Builder enableDnsHostnames(@Nullable Output<Boolean> enableDnsHostnames) {
            this.enableDnsHostnames = enableDnsHostnames;
            return this;
        }
        public Builder enableDnsHostnames(@Nullable Boolean enableDnsHostnames) {
            this.enableDnsHostnames = Codegen.ofNullable(enableDnsHostnames);
            return this;
        }
        public Builder enableDnsSupport(@Nullable Output<Boolean> enableDnsSupport) {
            this.enableDnsSupport = enableDnsSupport;
            return this;
        }
        public Builder enableDnsSupport(@Nullable Boolean enableDnsSupport) {
            this.enableDnsSupport = Codegen.ofNullable(enableDnsSupport);
            return this;
        }
        public Builder instanceTenancy(@Nullable Output<String> instanceTenancy) {
            this.instanceTenancy = instanceTenancy;
            return this;
        }
        public Builder instanceTenancy(@Nullable String instanceTenancy) {
            this.instanceTenancy = Codegen.ofNullable(instanceTenancy);
            return this;
        }
        public Builder ipv4IpamPoolId(@Nullable Output<String> ipv4IpamPoolId) {
            this.ipv4IpamPoolId = ipv4IpamPoolId;
            return this;
        }
        public Builder ipv4IpamPoolId(@Nullable String ipv4IpamPoolId) {
            this.ipv4IpamPoolId = Codegen.ofNullable(ipv4IpamPoolId);
            return this;
        }
        public Builder ipv4NetmaskLength(@Nullable Output<Integer> ipv4NetmaskLength) {
            this.ipv4NetmaskLength = ipv4NetmaskLength;
            return this;
        }
        public Builder ipv4NetmaskLength(@Nullable Integer ipv4NetmaskLength) {
            this.ipv4NetmaskLength = Codegen.ofNullable(ipv4NetmaskLength);
            return this;
        }
        public Builder ipv6AssociationId(@Nullable Output<String> ipv6AssociationId) {
            this.ipv6AssociationId = ipv6AssociationId;
            return this;
        }
        public Builder ipv6AssociationId(@Nullable String ipv6AssociationId) {
            this.ipv6AssociationId = Codegen.ofNullable(ipv6AssociationId);
            return this;
        }
        public Builder ipv6CidrBlock(@Nullable Output<String> ipv6CidrBlock) {
            this.ipv6CidrBlock = ipv6CidrBlock;
            return this;
        }
        public Builder ipv6CidrBlock(@Nullable String ipv6CidrBlock) {
            this.ipv6CidrBlock = Codegen.ofNullable(ipv6CidrBlock);
            return this;
        }
        public Builder ipv6CidrBlockNetworkBorderGroup(@Nullable Output<String> ipv6CidrBlockNetworkBorderGroup) {
            this.ipv6CidrBlockNetworkBorderGroup = ipv6CidrBlockNetworkBorderGroup;
            return this;
        }
        public Builder ipv6CidrBlockNetworkBorderGroup(@Nullable String ipv6CidrBlockNetworkBorderGroup) {
            this.ipv6CidrBlockNetworkBorderGroup = Codegen.ofNullable(ipv6CidrBlockNetworkBorderGroup);
            return this;
        }
        public Builder ipv6IpamPoolId(@Nullable Output<String> ipv6IpamPoolId) {
            this.ipv6IpamPoolId = ipv6IpamPoolId;
            return this;
        }
        public Builder ipv6IpamPoolId(@Nullable String ipv6IpamPoolId) {
            this.ipv6IpamPoolId = Codegen.ofNullable(ipv6IpamPoolId);
            return this;
        }
        public Builder ipv6NetmaskLength(@Nullable Output<Integer> ipv6NetmaskLength) {
            this.ipv6NetmaskLength = ipv6NetmaskLength;
            return this;
        }
        public Builder ipv6NetmaskLength(@Nullable Integer ipv6NetmaskLength) {
            this.ipv6NetmaskLength = Codegen.ofNullable(ipv6NetmaskLength);
            return this;
        }
        public Builder mainRouteTableId(@Nullable Output<String> mainRouteTableId) {
            this.mainRouteTableId = mainRouteTableId;
            return this;
        }
        public Builder mainRouteTableId(@Nullable String mainRouteTableId) {
            this.mainRouteTableId = Codegen.ofNullable(mainRouteTableId);
            return this;
        }
        public Builder ownerId(@Nullable Output<String> ownerId) {
            this.ownerId = ownerId;
            return this;
        }
        public Builder ownerId(@Nullable String ownerId) {
            this.ownerId = Codegen.ofNullable(ownerId);
            return this;
        }
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = Codegen.ofNullable(tags);
            return this;
        }
        public Builder tagsAll(@Nullable Output<Map<String,String>> tagsAll) {
            this.tagsAll = tagsAll;
            return this;
        }
        public Builder tagsAll(@Nullable Map<String,String> tagsAll) {
            this.tagsAll = Codegen.ofNullable(tagsAll);
            return this;
        }        public DefaultVpcState build() {
            return new DefaultVpcState(arn, assignGeneratedIpv6CidrBlock, cidrBlock, defaultNetworkAclId, defaultRouteTableId, defaultSecurityGroupId, dhcpOptionsId, enableClassiclink, enableClassiclinkDnsSupport, enableDnsHostnames, enableDnsSupport, instanceTenancy, ipv4IpamPoolId, ipv4NetmaskLength, ipv6AssociationId, ipv6CidrBlock, ipv6CidrBlockNetworkBorderGroup, ipv6IpamPoolId, ipv6NetmaskLength, mainRouteTableId, ownerId, tags, tagsAll);
        }
    }
}
