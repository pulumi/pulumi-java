// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.appmesh.inputs;

import io.pulumi.aws.appmesh.inputs.RouteSpecHttpRouteActionWeightedTargetArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.util.List;
import java.util.Objects;


public final class RouteSpecHttpRouteActionArgs extends io.pulumi.resources.ResourceArgs {

    public static final RouteSpecHttpRouteActionArgs Empty = new RouteSpecHttpRouteActionArgs();

    /**
     * The targets that traffic is routed to when a request matches the route.
     * You can specify one or more targets and their relative weights with which to distribute traffic.
     * 
     */
    @Import(name="weightedTargets", required=true)
      private final Output<List<RouteSpecHttpRouteActionWeightedTargetArgs>> weightedTargets;

    public Output<List<RouteSpecHttpRouteActionWeightedTargetArgs>> weightedTargets() {
        return this.weightedTargets;
    }

    public RouteSpecHttpRouteActionArgs(Output<List<RouteSpecHttpRouteActionWeightedTargetArgs>> weightedTargets) {
        this.weightedTargets = Objects.requireNonNull(weightedTargets, "expected parameter 'weightedTargets' to be non-null");
    }

    private RouteSpecHttpRouteActionArgs() {
        this.weightedTargets = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RouteSpecHttpRouteActionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<List<RouteSpecHttpRouteActionWeightedTargetArgs>> weightedTargets;

        public Builder() {
    	      // Empty
        }

        public Builder(RouteSpecHttpRouteActionArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.weightedTargets = defaults.weightedTargets;
        }

        public Builder weightedTargets(Output<List<RouteSpecHttpRouteActionWeightedTargetArgs>> weightedTargets) {
            this.weightedTargets = Objects.requireNonNull(weightedTargets);
            return this;
        }
        public Builder weightedTargets(List<RouteSpecHttpRouteActionWeightedTargetArgs> weightedTargets) {
            this.weightedTargets = Output.of(Objects.requireNonNull(weightedTargets));
            return this;
        }
        public Builder weightedTargets(RouteSpecHttpRouteActionWeightedTargetArgs... weightedTargets) {
            return weightedTargets(List.of(weightedTargets));
        }        public RouteSpecHttpRouteActionArgs build() {
            return new RouteSpecHttpRouteActionArgs(weightedTargets);
        }
    }
}
