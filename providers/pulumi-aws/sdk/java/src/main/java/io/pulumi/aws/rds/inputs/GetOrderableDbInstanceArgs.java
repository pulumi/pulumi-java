// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.rds.inputs;

import io.pulumi.core.annotations.InputImport;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetOrderableDbInstanceArgs extends io.pulumi.resources.InvokeArgs {

    public static final GetOrderableDbInstanceArgs Empty = new GetOrderableDbInstanceArgs();

    /**
     * Availability zone group.
     * 
     */
    @InputImport(name="availabilityZoneGroup")
      private final @Nullable String availabilityZoneGroup;

    public Optional<String> getAvailabilityZoneGroup() {
        return this.availabilityZoneGroup == null ? Optional.empty() : Optional.ofNullable(this.availabilityZoneGroup);
    }

    /**
     * DB engine. Engine values include `aurora`, `aurora-mysql`, `aurora-postgresql`, `docdb`, `mariadb`, `mysql`, `neptune`, `oracle-ee`, `oracle-se`, `oracle-se1`, `oracle-se2`, `postgres`, `sqlserver-ee`, `sqlserver-ex`, `sqlserver-se`, and `sqlserver-web`.
     * 
     */
    @InputImport(name="engine", required=true)
      private final String engine;

    public String getEngine() {
        return this.engine;
    }

    /**
     * Version of the DB engine. If none is provided, the AWS-defined default version will be used.
     * 
     */
    @InputImport(name="engineVersion")
      private final @Nullable String engineVersion;

    public Optional<String> getEngineVersion() {
        return this.engineVersion == null ? Optional.empty() : Optional.ofNullable(this.engineVersion);
    }

    /**
     * DB instance class. Examples of classes are `db.m3.2xlarge`, `db.t2.small`, and `db.m3.medium`.
     * 
     */
    @InputImport(name="instanceClass")
      private final @Nullable String instanceClass;

    public Optional<String> getInstanceClass() {
        return this.instanceClass == null ? Optional.empty() : Optional.ofNullable(this.instanceClass);
    }

    /**
     * License model. Examples of license models are `general-public-license`, `bring-your-own-license`, and `amazon-license`.
     * 
     */
    @InputImport(name="licenseModel")
      private final @Nullable String licenseModel;

    public Optional<String> getLicenseModel() {
        return this.licenseModel == null ? Optional.empty() : Optional.ofNullable(this.licenseModel);
    }

    /**
     * Ordered list of preferred RDS DB instance engine versions. The first match in this list will be returned. If no preferred matches are found and the original search returned more than one result, an error is returned.
     * 
     */
    @InputImport(name="preferredEngineVersions")
      private final @Nullable List<String> preferredEngineVersions;

    public List<String> getPreferredEngineVersions() {
        return this.preferredEngineVersions == null ? List.of() : this.preferredEngineVersions;
    }

    /**
     * Ordered list of preferred RDS DB instance classes. The first match in this list will be returned. If no preferred matches are found and the original search returned more than one result, an error is returned.
     * 
     */
    @InputImport(name="preferredInstanceClasses")
      private final @Nullable List<String> preferredInstanceClasses;

    public List<String> getPreferredInstanceClasses() {
        return this.preferredInstanceClasses == null ? List.of() : this.preferredInstanceClasses;
    }

    /**
     * Storage types. Examples of storage types are `standard`, `io1`, `gp2`, and `aurora`.
     * 
     */
    @InputImport(name="storageType")
      private final @Nullable String storageType;

    public Optional<String> getStorageType() {
        return this.storageType == null ? Optional.empty() : Optional.ofNullable(this.storageType);
    }

    /**
     * Enable this to ensure a DB instance supports Enhanced Monitoring at intervals from 1 to 60 seconds.
     * 
     */
    @InputImport(name="supportsEnhancedMonitoring")
      private final @Nullable Boolean supportsEnhancedMonitoring;

    public Optional<Boolean> getSupportsEnhancedMonitoring() {
        return this.supportsEnhancedMonitoring == null ? Optional.empty() : Optional.ofNullable(this.supportsEnhancedMonitoring);
    }

    /**
     * Enable this to ensure a DB instance supports Aurora global databases with a specific combination of other DB engine attributes.
     * 
     */
    @InputImport(name="supportsGlobalDatabases")
      private final @Nullable Boolean supportsGlobalDatabases;

    public Optional<Boolean> getSupportsGlobalDatabases() {
        return this.supportsGlobalDatabases == null ? Optional.empty() : Optional.ofNullable(this.supportsGlobalDatabases);
    }

    /**
     * Enable this to ensure a DB instance supports IAM database authentication.
     * 
     */
    @InputImport(name="supportsIamDatabaseAuthentication")
      private final @Nullable Boolean supportsIamDatabaseAuthentication;

    public Optional<Boolean> getSupportsIamDatabaseAuthentication() {
        return this.supportsIamDatabaseAuthentication == null ? Optional.empty() : Optional.ofNullable(this.supportsIamDatabaseAuthentication);
    }

    /**
     * Enable this to ensure a DB instance supports provisioned IOPS.
     * 
     */
    @InputImport(name="supportsIops")
      private final @Nullable Boolean supportsIops;

    public Optional<Boolean> getSupportsIops() {
        return this.supportsIops == null ? Optional.empty() : Optional.ofNullable(this.supportsIops);
    }

    /**
     * Enable this to ensure a DB instance supports Kerberos Authentication.
     * 
     */
    @InputImport(name="supportsKerberosAuthentication")
      private final @Nullable Boolean supportsKerberosAuthentication;

    public Optional<Boolean> getSupportsKerberosAuthentication() {
        return this.supportsKerberosAuthentication == null ? Optional.empty() : Optional.ofNullable(this.supportsKerberosAuthentication);
    }

    /**
     * Enable this to ensure a DB instance supports Performance Insights.
     * 
     */
    @InputImport(name="supportsPerformanceInsights")
      private final @Nullable Boolean supportsPerformanceInsights;

    public Optional<Boolean> getSupportsPerformanceInsights() {
        return this.supportsPerformanceInsights == null ? Optional.empty() : Optional.ofNullable(this.supportsPerformanceInsights);
    }

    /**
     * Enable this to ensure Amazon RDS can automatically scale storage for DB instances that use the specified DB instance class.
     * 
     */
    @InputImport(name="supportsStorageAutoscaling")
      private final @Nullable Boolean supportsStorageAutoscaling;

    public Optional<Boolean> getSupportsStorageAutoscaling() {
        return this.supportsStorageAutoscaling == null ? Optional.empty() : Optional.ofNullable(this.supportsStorageAutoscaling);
    }

    /**
     * Enable this to ensure a DB instance supports encrypted storage.
     * 
     */
    @InputImport(name="supportsStorageEncryption")
      private final @Nullable Boolean supportsStorageEncryption;

    public Optional<Boolean> getSupportsStorageEncryption() {
        return this.supportsStorageEncryption == null ? Optional.empty() : Optional.ofNullable(this.supportsStorageEncryption);
    }

    /**
     * Boolean that indicates whether to show only VPC or non-VPC offerings.
     * 
     */
    @InputImport(name="vpc")
      private final @Nullable Boolean vpc;

    public Optional<Boolean> getVpc() {
        return this.vpc == null ? Optional.empty() : Optional.ofNullable(this.vpc);
    }

    public GetOrderableDbInstanceArgs(
        @Nullable String availabilityZoneGroup,
        String engine,
        @Nullable String engineVersion,
        @Nullable String instanceClass,
        @Nullable String licenseModel,
        @Nullable List<String> preferredEngineVersions,
        @Nullable List<String> preferredInstanceClasses,
        @Nullable String storageType,
        @Nullable Boolean supportsEnhancedMonitoring,
        @Nullable Boolean supportsGlobalDatabases,
        @Nullable Boolean supportsIamDatabaseAuthentication,
        @Nullable Boolean supportsIops,
        @Nullable Boolean supportsKerberosAuthentication,
        @Nullable Boolean supportsPerformanceInsights,
        @Nullable Boolean supportsStorageAutoscaling,
        @Nullable Boolean supportsStorageEncryption,
        @Nullable Boolean vpc) {
        this.availabilityZoneGroup = availabilityZoneGroup;
        this.engine = Objects.requireNonNull(engine, "expected parameter 'engine' to be non-null");
        this.engineVersion = engineVersion;
        this.instanceClass = instanceClass;
        this.licenseModel = licenseModel;
        this.preferredEngineVersions = preferredEngineVersions;
        this.preferredInstanceClasses = preferredInstanceClasses;
        this.storageType = storageType;
        this.supportsEnhancedMonitoring = supportsEnhancedMonitoring;
        this.supportsGlobalDatabases = supportsGlobalDatabases;
        this.supportsIamDatabaseAuthentication = supportsIamDatabaseAuthentication;
        this.supportsIops = supportsIops;
        this.supportsKerberosAuthentication = supportsKerberosAuthentication;
        this.supportsPerformanceInsights = supportsPerformanceInsights;
        this.supportsStorageAutoscaling = supportsStorageAutoscaling;
        this.supportsStorageEncryption = supportsStorageEncryption;
        this.vpc = vpc;
    }

    private GetOrderableDbInstanceArgs() {
        this.availabilityZoneGroup = null;
        this.engine = null;
        this.engineVersion = null;
        this.instanceClass = null;
        this.licenseModel = null;
        this.preferredEngineVersions = List.of();
        this.preferredInstanceClasses = List.of();
        this.storageType = null;
        this.supportsEnhancedMonitoring = null;
        this.supportsGlobalDatabases = null;
        this.supportsIamDatabaseAuthentication = null;
        this.supportsIops = null;
        this.supportsKerberosAuthentication = null;
        this.supportsPerformanceInsights = null;
        this.supportsStorageAutoscaling = null;
        this.supportsStorageEncryption = null;
        this.vpc = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetOrderableDbInstanceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String availabilityZoneGroup;
        private String engine;
        private @Nullable String engineVersion;
        private @Nullable String instanceClass;
        private @Nullable String licenseModel;
        private @Nullable List<String> preferredEngineVersions;
        private @Nullable List<String> preferredInstanceClasses;
        private @Nullable String storageType;
        private @Nullable Boolean supportsEnhancedMonitoring;
        private @Nullable Boolean supportsGlobalDatabases;
        private @Nullable Boolean supportsIamDatabaseAuthentication;
        private @Nullable Boolean supportsIops;
        private @Nullable Boolean supportsKerberosAuthentication;
        private @Nullable Boolean supportsPerformanceInsights;
        private @Nullable Boolean supportsStorageAutoscaling;
        private @Nullable Boolean supportsStorageEncryption;
        private @Nullable Boolean vpc;

        public Builder() {
    	      // Empty
        }

        public Builder(GetOrderableDbInstanceArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.availabilityZoneGroup = defaults.availabilityZoneGroup;
    	      this.engine = defaults.engine;
    	      this.engineVersion = defaults.engineVersion;
    	      this.instanceClass = defaults.instanceClass;
    	      this.licenseModel = defaults.licenseModel;
    	      this.preferredEngineVersions = defaults.preferredEngineVersions;
    	      this.preferredInstanceClasses = defaults.preferredInstanceClasses;
    	      this.storageType = defaults.storageType;
    	      this.supportsEnhancedMonitoring = defaults.supportsEnhancedMonitoring;
    	      this.supportsGlobalDatabases = defaults.supportsGlobalDatabases;
    	      this.supportsIamDatabaseAuthentication = defaults.supportsIamDatabaseAuthentication;
    	      this.supportsIops = defaults.supportsIops;
    	      this.supportsKerberosAuthentication = defaults.supportsKerberosAuthentication;
    	      this.supportsPerformanceInsights = defaults.supportsPerformanceInsights;
    	      this.supportsStorageAutoscaling = defaults.supportsStorageAutoscaling;
    	      this.supportsStorageEncryption = defaults.supportsStorageEncryption;
    	      this.vpc = defaults.vpc;
        }

        public Builder availabilityZoneGroup(@Nullable String availabilityZoneGroup) {
            this.availabilityZoneGroup = availabilityZoneGroup;
            return this;
        }

        public Builder engine(String engine) {
            this.engine = Objects.requireNonNull(engine);
            return this;
        }

        public Builder engineVersion(@Nullable String engineVersion) {
            this.engineVersion = engineVersion;
            return this;
        }

        public Builder instanceClass(@Nullable String instanceClass) {
            this.instanceClass = instanceClass;
            return this;
        }

        public Builder licenseModel(@Nullable String licenseModel) {
            this.licenseModel = licenseModel;
            return this;
        }

        public Builder preferredEngineVersions(@Nullable List<String> preferredEngineVersions) {
            this.preferredEngineVersions = preferredEngineVersions;
            return this;
        }

        public Builder preferredInstanceClasses(@Nullable List<String> preferredInstanceClasses) {
            this.preferredInstanceClasses = preferredInstanceClasses;
            return this;
        }

        public Builder storageType(@Nullable String storageType) {
            this.storageType = storageType;
            return this;
        }

        public Builder supportsEnhancedMonitoring(@Nullable Boolean supportsEnhancedMonitoring) {
            this.supportsEnhancedMonitoring = supportsEnhancedMonitoring;
            return this;
        }

        public Builder supportsGlobalDatabases(@Nullable Boolean supportsGlobalDatabases) {
            this.supportsGlobalDatabases = supportsGlobalDatabases;
            return this;
        }

        public Builder supportsIamDatabaseAuthentication(@Nullable Boolean supportsIamDatabaseAuthentication) {
            this.supportsIamDatabaseAuthentication = supportsIamDatabaseAuthentication;
            return this;
        }

        public Builder supportsIops(@Nullable Boolean supportsIops) {
            this.supportsIops = supportsIops;
            return this;
        }

        public Builder supportsKerberosAuthentication(@Nullable Boolean supportsKerberosAuthentication) {
            this.supportsKerberosAuthentication = supportsKerberosAuthentication;
            return this;
        }

        public Builder supportsPerformanceInsights(@Nullable Boolean supportsPerformanceInsights) {
            this.supportsPerformanceInsights = supportsPerformanceInsights;
            return this;
        }

        public Builder supportsStorageAutoscaling(@Nullable Boolean supportsStorageAutoscaling) {
            this.supportsStorageAutoscaling = supportsStorageAutoscaling;
            return this;
        }

        public Builder supportsStorageEncryption(@Nullable Boolean supportsStorageEncryption) {
            this.supportsStorageEncryption = supportsStorageEncryption;
            return this;
        }

        public Builder vpc(@Nullable Boolean vpc) {
            this.vpc = vpc;
            return this;
        }
        public GetOrderableDbInstanceArgs build() {
            return new GetOrderableDbInstanceArgs(availabilityZoneGroup, engine, engineVersion, instanceClass, licenseModel, preferredEngineVersions, preferredInstanceClasses, storageType, supportsEnhancedMonitoring, supportsGlobalDatabases, supportsIamDatabaseAuthentication, supportsIops, supportsKerberosAuthentication, supportsPerformanceInsights, supportsStorageAutoscaling, supportsStorageEncryption, vpc);
        }
    }
}
