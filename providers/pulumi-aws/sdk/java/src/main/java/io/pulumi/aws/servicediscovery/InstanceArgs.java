// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.servicediscovery;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Map;
import java.util.Objects;


public final class InstanceArgs extends io.pulumi.resources.ResourceArgs {

    public static final InstanceArgs Empty = new InstanceArgs();

    /**
     * A map contains the attributes of the instance. Check the [doc](https://docs.aws.amazon.com/cloud-map/latest/api/API_RegisterInstance.html#API_RegisterInstance_RequestSyntax) for the supported attributes and syntax.
     * 
     */
    @InputImport(name="attributes", required=true)
      private final Output<Map<String,String>> attributes;

    public Output<Map<String,String>> getAttributes() {
        return this.attributes;
    }

    /**
     * The ID of the service instance.
     * 
     */
    @InputImport(name="instanceId", required=true)
      private final Output<String> instanceId;

    public Output<String> getInstanceId() {
        return this.instanceId;
    }

    /**
     * The ID of the service that you want to use to create the instance.
     * 
     */
    @InputImport(name="serviceId", required=true)
      private final Output<String> serviceId;

    public Output<String> getServiceId() {
        return this.serviceId;
    }

    public InstanceArgs(
        Output<Map<String,String>> attributes,
        Output<String> instanceId,
        Output<String> serviceId) {
        this.attributes = Objects.requireNonNull(attributes, "expected parameter 'attributes' to be non-null");
        this.instanceId = Objects.requireNonNull(instanceId, "expected parameter 'instanceId' to be non-null");
        this.serviceId = Objects.requireNonNull(serviceId, "expected parameter 'serviceId' to be non-null");
    }

    private InstanceArgs() {
        this.attributes = Output.empty();
        this.instanceId = Output.empty();
        this.serviceId = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(InstanceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<Map<String,String>> attributes;
        private Output<String> instanceId;
        private Output<String> serviceId;

        public Builder() {
    	      // Empty
        }

        public Builder(InstanceArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.attributes = defaults.attributes;
    	      this.instanceId = defaults.instanceId;
    	      this.serviceId = defaults.serviceId;
        }

        public Builder attributes(Output<Map<String,String>> attributes) {
            this.attributes = Objects.requireNonNull(attributes);
            return this;
        }

        public Builder attributes(Map<String,String> attributes) {
            this.attributes = Output.of(Objects.requireNonNull(attributes));
            return this;
        }

        public Builder instanceId(Output<String> instanceId) {
            this.instanceId = Objects.requireNonNull(instanceId);
            return this;
        }

        public Builder instanceId(String instanceId) {
            this.instanceId = Output.of(Objects.requireNonNull(instanceId));
            return this;
        }

        public Builder serviceId(Output<String> serviceId) {
            this.serviceId = Objects.requireNonNull(serviceId);
            return this;
        }

        public Builder serviceId(String serviceId) {
            this.serviceId = Output.of(Objects.requireNonNull(serviceId));
            return this;
        }
        public InstanceArgs build() {
            return new InstanceArgs(attributes, instanceId, serviceId);
        }
    }
}
