// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.ec2;

import io.pulumi.aws.Utilities;
import io.pulumi.aws.ec2.SpotInstanceRequestArgs;
import io.pulumi.aws.ec2.inputs.SpotInstanceRequestState;
import io.pulumi.aws.ec2.outputs.SpotInstanceRequestCapacityReservationSpecification;
import io.pulumi.aws.ec2.outputs.SpotInstanceRequestCreditSpecification;
import io.pulumi.aws.ec2.outputs.SpotInstanceRequestEbsBlockDevice;
import io.pulumi.aws.ec2.outputs.SpotInstanceRequestEnclaveOptions;
import io.pulumi.aws.ec2.outputs.SpotInstanceRequestEphemeralBlockDevice;
import io.pulumi.aws.ec2.outputs.SpotInstanceRequestLaunchTemplate;
import io.pulumi.aws.ec2.outputs.SpotInstanceRequestMetadataOptions;
import io.pulumi.aws.ec2.outputs.SpotInstanceRequestNetworkInterface;
import io.pulumi.aws.ec2.outputs.SpotInstanceRequestRootBlockDevice;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Export;
import io.pulumi.core.annotations.ResourceType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;

/**
 * Provides an EC2 Spot Instance Request resource. This allows instances to be
 * requested on the spot market.
 * 
 * By default this provider creates Spot Instance Requests with a `persistent` type,
 * which means that for the duration of their lifetime, AWS will launch an
 * instance with the configured details if and when the spot market will accept
 * the requested price.
 * 
 * On destruction, this provider will make an attempt to terminate the associated Spot
 * Instance if there is one present.
 * 
 * Spot Instances requests with a `one-time` type will close the spot request
 * when the instance is terminated either by the request being below the current spot
 * price availability or by a user.
 * 
 * > **NOTE:** Because their behavior depends on the live status of the spot
 * market, Spot Instance Requests have a unique lifecycle that makes them behave
 * differently than other resources. Most importantly: there is __no
 * guarantee__ that a Spot Instance exists to fulfill the request at any given
 * point in time. See the [AWS Spot Instance
 * documentation](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-spot-instances.html)
 * for more information.
 * 
 * ## Example Usage
 * 
 */
@ResourceType(type="aws:ec2/spotInstanceRequest:SpotInstanceRequest")
public class SpotInstanceRequest extends io.pulumi.resources.CustomResource {
    /**
     * AMI to use for the instance. Required unless `launch_template` is specified and the Launch Template specifes an AMI. If an AMI is specified in the Launch Template, setting `ami` will override the AMI specified in the Launch Template.
     * 
     */
    @Export(name="ami", type=String.class, parameters={})
    private Output<String> ami;

    /**
     * @return AMI to use for the instance. Required unless `launch_template` is specified and the Launch Template specifes an AMI. If an AMI is specified in the Launch Template, setting `ami` will override the AMI specified in the Launch Template.
     * 
     */
    public Output<String> getAmi() {
        return this.ami;
    }
    @Export(name="arn", type=String.class, parameters={})
    private Output<String> arn;

    public Output<String> getArn() {
        return this.arn;
    }
    /**
     * Whether to associate a public IP address with an instance in a VPC.
     * 
     */
    @Export(name="associatePublicIpAddress", type=Boolean.class, parameters={})
    private Output<Boolean> associatePublicIpAddress;

    /**
     * @return Whether to associate a public IP address with an instance in a VPC.
     * 
     */
    public Output<Boolean> getAssociatePublicIpAddress() {
        return this.associatePublicIpAddress;
    }
    /**
     * AZ to start the instance in.
     * 
     */
    @Export(name="availabilityZone", type=String.class, parameters={})
    private Output<String> availabilityZone;

    /**
     * @return AZ to start the instance in.
     * 
     */
    public Output<String> getAvailabilityZone() {
        return this.availabilityZone;
    }
    /**
     * The required duration for the Spot instances, in minutes. This value must be a multiple of 60 (60, 120, 180, 240, 300, or 360).
     * The duration period starts as soon as your Spot instance receives its instance ID. At the end of the duration period, Amazon EC2 marks the Spot instance for termination and provides a Spot instance termination notice, which gives the instance a two-minute warning before it terminates.
     * Note that you can't specify an Availability Zone group or a launch group if you specify a duration.
     * 
     */
    @Export(name="blockDurationMinutes", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> blockDurationMinutes;

    /**
     * @return The required duration for the Spot instances, in minutes. This value must be a multiple of 60 (60, 120, 180, 240, 300, or 360).
     * The duration period starts as soon as your Spot instance receives its instance ID. At the end of the duration period, Amazon EC2 marks the Spot instance for termination and provides a Spot instance termination notice, which gives the instance a two-minute warning before it terminates.
     * Note that you can't specify an Availability Zone group or a launch group if you specify a duration.
     * 
     */
    public Output</* @Nullable */ Integer> getBlockDurationMinutes() {
        return this.blockDurationMinutes;
    }
    /**
     * Describes an instance's Capacity Reservation targeting option. See Capacity Reservation Specification below for more details.
     * 
     */
    @Export(name="capacityReservationSpecification", type=SpotInstanceRequestCapacityReservationSpecification.class, parameters={})
    private Output<SpotInstanceRequestCapacityReservationSpecification> capacityReservationSpecification;

    /**
     * @return Describes an instance's Capacity Reservation targeting option. See Capacity Reservation Specification below for more details.
     * 
     */
    public Output<SpotInstanceRequestCapacityReservationSpecification> getCapacityReservationSpecification() {
        return this.capacityReservationSpecification;
    }
    /**
     * Sets the number of CPU cores for an instance. This option is only supported on creation of instance type that support CPU Options [CPU Cores and Threads Per CPU Core Per Instance Type](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-optimize-cpu.html#cpu-options-supported-instances-values) - specifying this option for unsupported instance types will return an error from the EC2 API.
     * 
     */
    @Export(name="cpuCoreCount", type=Integer.class, parameters={})
    private Output<Integer> cpuCoreCount;

    /**
     * @return Sets the number of CPU cores for an instance. This option is only supported on creation of instance type that support CPU Options [CPU Cores and Threads Per CPU Core Per Instance Type](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-optimize-cpu.html#cpu-options-supported-instances-values) - specifying this option for unsupported instance types will return an error from the EC2 API.
     * 
     */
    public Output<Integer> getCpuCoreCount() {
        return this.cpuCoreCount;
    }
    /**
     * If set to to 1, hyperthreading is disabled on the launched instance. Defaults to 2 if not set. See [Optimizing CPU Options](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-optimize-cpu.html) for more information.
     * 
     */
    @Export(name="cpuThreadsPerCore", type=Integer.class, parameters={})
    private Output<Integer> cpuThreadsPerCore;

    /**
     * @return If set to to 1, hyperthreading is disabled on the launched instance. Defaults to 2 if not set. See [Optimizing CPU Options](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-optimize-cpu.html) for more information.
     * 
     */
    public Output<Integer> getCpuThreadsPerCore() {
        return this.cpuThreadsPerCore;
    }
    /**
     * Configuration block for customizing the credit specification of the instance. See Credit Specification below for more details. the provider will only perform drift detection of its value when present in a configuration. Removing this configuration on existing instances will only stop managing it. It will not change the configuration back to the default for the instance type.
     * 
     */
    @Export(name="creditSpecification", type=SpotInstanceRequestCreditSpecification.class, parameters={})
    private Output</* @Nullable */ SpotInstanceRequestCreditSpecification> creditSpecification;

    /**
     * @return Configuration block for customizing the credit specification of the instance. See Credit Specification below for more details. the provider will only perform drift detection of its value when present in a configuration. Removing this configuration on existing instances will only stop managing it. It will not change the configuration back to the default for the instance type.
     * 
     */
    public Output</* @Nullable */ SpotInstanceRequestCreditSpecification> getCreditSpecification() {
        return this.creditSpecification;
    }
    /**
     * If true, enables [EC2 Instance Termination Protection](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#Using_ChangingDisableAPITermination).
     * 
     */
    @Export(name="disableApiTermination", type=Boolean.class, parameters={})
    private Output<Boolean> disableApiTermination;

    /**
     * @return If true, enables [EC2 Instance Termination Protection](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#Using_ChangingDisableAPITermination).
     * 
     */
    public Output<Boolean> getDisableApiTermination() {
        return this.disableApiTermination;
    }
    /**
     * One or more configuration blocks with additional EBS block devices to attach to the instance. Block device configurations only apply on resource creation. See Block Devices below for details on attributes and drift detection. When accessing this as an attribute reference, it is a set of objects.
     * 
     */
    @Export(name="ebsBlockDevices", type=List.class, parameters={SpotInstanceRequestEbsBlockDevice.class})
    private Output<List<SpotInstanceRequestEbsBlockDevice>> ebsBlockDevices;

    /**
     * @return One or more configuration blocks with additional EBS block devices to attach to the instance. Block device configurations only apply on resource creation. See Block Devices below for details on attributes and drift detection. When accessing this as an attribute reference, it is a set of objects.
     * 
     */
    public Output<List<SpotInstanceRequestEbsBlockDevice>> getEbsBlockDevices() {
        return this.ebsBlockDevices;
    }
    /**
     * If true, the launched EC2 instance will be EBS-optimized. Note that if this is not set on an instance type that is optimized by default then this will show as disabled but if the instance type is optimized by default then there is no need to set this and there is no effect to disabling it. See the [EBS Optimized section](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSOptimized.html) of the AWS User Guide for more information.
     * 
     */
    @Export(name="ebsOptimized", type=Boolean.class, parameters={})
    private Output<Boolean> ebsOptimized;

    /**
     * @return If true, the launched EC2 instance will be EBS-optimized. Note that if this is not set on an instance type that is optimized by default then this will show as disabled but if the instance type is optimized by default then there is no need to set this and there is no effect to disabling it. See the [EBS Optimized section](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSOptimized.html) of the AWS User Guide for more information.
     * 
     */
    public Output<Boolean> getEbsOptimized() {
        return this.ebsOptimized;
    }
    /**
     * Enable Nitro Enclaves on launched instances. See Enclave Options below for more details.
     * 
     */
    @Export(name="enclaveOptions", type=SpotInstanceRequestEnclaveOptions.class, parameters={})
    private Output<SpotInstanceRequestEnclaveOptions> enclaveOptions;

    /**
     * @return Enable Nitro Enclaves on launched instances. See Enclave Options below for more details.
     * 
     */
    public Output<SpotInstanceRequestEnclaveOptions> getEnclaveOptions() {
        return this.enclaveOptions;
    }
    /**
     * One or more configuration blocks to customize Ephemeral (also known as "Instance Store") volumes on the instance. See Block Devices below for details. When accessing this as an attribute reference, it is a set of objects.
     * 
     */
    @Export(name="ephemeralBlockDevices", type=List.class, parameters={SpotInstanceRequestEphemeralBlockDevice.class})
    private Output<List<SpotInstanceRequestEphemeralBlockDevice>> ephemeralBlockDevices;

    /**
     * @return One or more configuration blocks to customize Ephemeral (also known as "Instance Store") volumes on the instance. See Block Devices below for details. When accessing this as an attribute reference, it is a set of objects.
     * 
     */
    public Output<List<SpotInstanceRequestEphemeralBlockDevice>> getEphemeralBlockDevices() {
        return this.ephemeralBlockDevices;
    }
    /**
     * If true, wait for password data to become available and retrieve it. Useful for getting the administrator password for instances running Microsoft Windows. The password data is exported to the `password_data` attribute. See [GetPasswordData](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetPasswordData.html) for more information.
     * 
     */
    @Export(name="getPasswordData", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> getPasswordData;

    /**
     * @return If true, wait for password data to become available and retrieve it. Useful for getting the administrator password for instances running Microsoft Windows. The password data is exported to the `password_data` attribute. See [GetPasswordData](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetPasswordData.html) for more information.
     * 
     */
    public Output</* @Nullable */ Boolean> getGetPasswordData() {
        return this.getPasswordData;
    }
    /**
     * If true, the launched EC2 instance will support hibernation.
     * 
     */
    @Export(name="hibernation", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> hibernation;

    /**
     * @return If true, the launched EC2 instance will support hibernation.
     * 
     */
    public Output</* @Nullable */ Boolean> getHibernation() {
        return this.hibernation;
    }
    /**
     * ID of a dedicated host that the instance will be assigned to. Use when an instance is to be launched on a specific dedicated host.
     * 
     */
    @Export(name="hostId", type=String.class, parameters={})
    private Output<String> hostId;

    /**
     * @return ID of a dedicated host that the instance will be assigned to. Use when an instance is to be launched on a specific dedicated host.
     * 
     */
    public Output<String> getHostId() {
        return this.hostId;
    }
    /**
     * IAM Instance Profile to launch the instance with. Specified as the name of the Instance Profile. Ensure your credentials have the correct permission to assign the instance profile according to the [EC2 documentation](http://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use_switch-role-ec2.html#roles-usingrole-ec2instance-permissions), notably `iam:PassRole`.
     * 
     */
    @Export(name="iamInstanceProfile", type=String.class, parameters={})
    private Output</* @Nullable */ String> iamInstanceProfile;

    /**
     * @return IAM Instance Profile to launch the instance with. Specified as the name of the Instance Profile. Ensure your credentials have the correct permission to assign the instance profile according to the [EC2 documentation](http://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use_switch-role-ec2.html#roles-usingrole-ec2instance-permissions), notably `iam:PassRole`.
     * 
     */
    public Output</* @Nullable */ String> getIamInstanceProfile() {
        return this.iamInstanceProfile;
    }
    /**
     * Shutdown behavior for the instance. Amazon defaults this to `stop` for EBS-backed instances and `terminate` for instance-store instances. Cannot be set on instance-store instances. See [Shutdown Behavior](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#Using_ChangingInstanceInitiatedShutdownBehavior) for more information.
     * 
     */
    @Export(name="instanceInitiatedShutdownBehavior", type=String.class, parameters={})
    private Output<String> instanceInitiatedShutdownBehavior;

    /**
     * @return Shutdown behavior for the instance. Amazon defaults this to `stop` for EBS-backed instances and `terminate` for instance-store instances. Cannot be set on instance-store instances. See [Shutdown Behavior](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#Using_ChangingInstanceInitiatedShutdownBehavior) for more information.
     * 
     */
    public Output<String> getInstanceInitiatedShutdownBehavior() {
        return this.instanceInitiatedShutdownBehavior;
    }
    /**
     * Indicates Spot instance behavior when it is interrupted. Valid values are `terminate`, `stop`, or `hibernate`. Default value is `terminate`.
     * 
     */
    @Export(name="instanceInterruptionBehavior", type=String.class, parameters={})
    private Output<String> instanceInterruptionBehavior;

    /**
     * @return Indicates Spot instance behavior when it is interrupted. Valid values are `terminate`, `stop`, or `hibernate`. Default value is `terminate`.
     * 
     */
    public Output<String> getInstanceInterruptionBehavior() {
        return this.instanceInterruptionBehavior;
    }
    /**
     * Indicates Spot instance behavior when it is interrupted. Valid values are `terminate`, `stop`, or `hibernate`. Default value is `terminate`. Use the argument `instance_interruption_behavior` instead.
     * 
     * @Deprecated
     * Use the parameter "instance_interruption_behavior" instead.
     * 
     */
    @Deprecated /* Use the parameter ""instance_interruption_behavior"" instead. */
    @Export(name="instanceInterruptionBehaviour", type=String.class, parameters={})
    private Output<String> instanceInterruptionBehaviour;

    /**
     * @return Indicates Spot instance behavior when it is interrupted. Valid values are `terminate`, `stop`, or `hibernate`. Default value is `terminate`. Use the argument `instance_interruption_behavior` instead.
     * 
     */
    public Output<String> getInstanceInterruptionBehaviour() {
        return this.instanceInterruptionBehaviour;
    }
    @Export(name="instanceState", type=String.class, parameters={})
    private Output<String> instanceState;

    public Output<String> getInstanceState() {
        return this.instanceState;
    }
    /**
     * The instance type to use for the instance. Updates to this field will trigger a stop/start of the EC2 instance.
     * 
     */
    @Export(name="instanceType", type=String.class, parameters={})
    private Output<String> instanceType;

    /**
     * @return The instance type to use for the instance. Updates to this field will trigger a stop/start of the EC2 instance.
     * 
     */
    public Output<String> getInstanceType() {
        return this.instanceType;
    }
    /**
     * A number of IPv6 addresses to associate with the primary network interface. Amazon EC2 chooses the IPv6 addresses from the range of your subnet.
     * 
     */
    @Export(name="ipv6AddressCount", type=Integer.class, parameters={})
    private Output<Integer> ipv6AddressCount;

    /**
     * @return A number of IPv6 addresses to associate with the primary network interface. Amazon EC2 chooses the IPv6 addresses from the range of your subnet.
     * 
     */
    public Output<Integer> getIpv6AddressCount() {
        return this.ipv6AddressCount;
    }
    /**
     * Specify one or more IPv6 addresses from the range of the subnet to associate with the primary network interface
     * 
     */
    @Export(name="ipv6Addresses", type=List.class, parameters={String.class})
    private Output<List<String>> ipv6Addresses;

    /**
     * @return Specify one or more IPv6 addresses from the range of the subnet to associate with the primary network interface
     * 
     */
    public Output<List<String>> getIpv6Addresses() {
        return this.ipv6Addresses;
    }
    /**
     * Key name of the Key Pair to use for the instance; which can be managed using the `aws.ec2.KeyPair` resource.
     * 
     */
    @Export(name="keyName", type=String.class, parameters={})
    private Output<String> keyName;

    /**
     * @return Key name of the Key Pair to use for the instance; which can be managed using the `aws.ec2.KeyPair` resource.
     * 
     */
    public Output<String> getKeyName() {
        return this.keyName;
    }
    /**
     * A launch group is a group of spot instances that launch together and terminate together.
     * If left empty instances are launched and terminated individually.
     * 
     */
    @Export(name="launchGroup", type=String.class, parameters={})
    private Output</* @Nullable */ String> launchGroup;

    /**
     * @return A launch group is a group of spot instances that launch together and terminate together.
     * If left empty instances are launched and terminated individually.
     * 
     */
    public Output</* @Nullable */ String> getLaunchGroup() {
        return this.launchGroup;
    }
    /**
     * Specifies a Launch Template to configure the instance. Parameters configured on this resource will override the corresponding parameters in the Launch Template.
     * See Launch Template Specification below for more details.
     * 
     */
    @Export(name="launchTemplate", type=SpotInstanceRequestLaunchTemplate.class, parameters={})
    private Output</* @Nullable */ SpotInstanceRequestLaunchTemplate> launchTemplate;

    /**
     * @return Specifies a Launch Template to configure the instance. Parameters configured on this resource will override the corresponding parameters in the Launch Template.
     * See Launch Template Specification below for more details.
     * 
     */
    public Output</* @Nullable */ SpotInstanceRequestLaunchTemplate> getLaunchTemplate() {
        return this.launchTemplate;
    }
    /**
     * Customize the metadata options of the instance. See Metadata Options below for more details.
     * 
     */
    @Export(name="metadataOptions", type=SpotInstanceRequestMetadataOptions.class, parameters={})
    private Output<SpotInstanceRequestMetadataOptions> metadataOptions;

    /**
     * @return Customize the metadata options of the instance. See Metadata Options below for more details.
     * 
     */
    public Output<SpotInstanceRequestMetadataOptions> getMetadataOptions() {
        return this.metadataOptions;
    }
    /**
     * If true, the launched EC2 instance will have detailed monitoring enabled. (Available since v0.6.0)
     * 
     */
    @Export(name="monitoring", type=Boolean.class, parameters={})
    private Output<Boolean> monitoring;

    /**
     * @return If true, the launched EC2 instance will have detailed monitoring enabled. (Available since v0.6.0)
     * 
     */
    public Output<Boolean> getMonitoring() {
        return this.monitoring;
    }
    /**
     * Customize network interfaces to be attached at instance boot time. See Network Interfaces below for more details.
     * 
     */
    @Export(name="networkInterfaces", type=List.class, parameters={SpotInstanceRequestNetworkInterface.class})
    private Output<List<SpotInstanceRequestNetworkInterface>> networkInterfaces;

    /**
     * @return Customize network interfaces to be attached at instance boot time. See Network Interfaces below for more details.
     * 
     */
    public Output<List<SpotInstanceRequestNetworkInterface>> getNetworkInterfaces() {
        return this.networkInterfaces;
    }
    @Export(name="outpostArn", type=String.class, parameters={})
    private Output<String> outpostArn;

    public Output<String> getOutpostArn() {
        return this.outpostArn;
    }
    @Export(name="passwordData", type=String.class, parameters={})
    private Output<String> passwordData;

    public Output<String> getPasswordData() {
        return this.passwordData;
    }
    /**
     * Placement Group to start the instance in.
     * 
     */
    @Export(name="placementGroup", type=String.class, parameters={})
    private Output<String> placementGroup;

    /**
     * @return Placement Group to start the instance in.
     * 
     */
    public Output<String> getPlacementGroup() {
        return this.placementGroup;
    }
    /**
     * The number of the partition the instance is in. Valid only if the `aws.ec2.PlacementGroup` resource's `strategy` argument is set to `"partition"`.
     * 
     */
    @Export(name="placementPartitionNumber", type=Integer.class, parameters={})
    private Output<Integer> placementPartitionNumber;

    /**
     * @return The number of the partition the instance is in. Valid only if the `aws.ec2.PlacementGroup` resource's `strategy` argument is set to `"partition"`.
     * 
     */
    public Output<Integer> getPlacementPartitionNumber() {
        return this.placementPartitionNumber;
    }
    @Export(name="primaryNetworkInterfaceId", type=String.class, parameters={})
    private Output<String> primaryNetworkInterfaceId;

    public Output<String> getPrimaryNetworkInterfaceId() {
        return this.primaryNetworkInterfaceId;
    }
    /**
     * The private DNS name assigned to the instance. Can only be
     * used inside the Amazon EC2, and only available if you've enabled DNS hostnames
     * for your VPC
     * 
     */
    @Export(name="privateDns", type=String.class, parameters={})
    private Output<String> privateDns;

    /**
     * @return The private DNS name assigned to the instance. Can only be
     * used inside the Amazon EC2, and only available if you've enabled DNS hostnames
     * for your VPC
     * 
     */
    public Output<String> getPrivateDns() {
        return this.privateDns;
    }
    /**
     * Private IP address to associate with the instance in a VPC.
     * 
     */
    @Export(name="privateIp", type=String.class, parameters={})
    private Output<String> privateIp;

    /**
     * @return Private IP address to associate with the instance in a VPC.
     * 
     */
    public Output<String> getPrivateIp() {
        return this.privateIp;
    }
    /**
     * The public DNS name assigned to the instance. For EC2-VPC, this
     * is only available if you've enabled DNS hostnames for your VPC
     * 
     */
    @Export(name="publicDns", type=String.class, parameters={})
    private Output<String> publicDns;

    /**
     * @return The public DNS name assigned to the instance. For EC2-VPC, this
     * is only available if you've enabled DNS hostnames for your VPC
     * 
     */
    public Output<String> getPublicDns() {
        return this.publicDns;
    }
    /**
     * The public IP address assigned to the instance, if applicable.
     * 
     */
    @Export(name="publicIp", type=String.class, parameters={})
    private Output<String> publicIp;

    /**
     * @return The public IP address assigned to the instance, if applicable.
     * 
     */
    public Output<String> getPublicIp() {
        return this.publicIp;
    }
    /**
     * Configuration block to customize details about the root block device of the instance. See Block Devices below for details. When accessing this as an attribute reference, it is a list containing one object.
     * 
     */
    @Export(name="rootBlockDevice", type=SpotInstanceRequestRootBlockDevice.class, parameters={})
    private Output<SpotInstanceRequestRootBlockDevice> rootBlockDevice;

    /**
     * @return Configuration block to customize details about the root block device of the instance. See Block Devices below for details. When accessing this as an attribute reference, it is a list containing one object.
     * 
     */
    public Output<SpotInstanceRequestRootBlockDevice> getRootBlockDevice() {
        return this.rootBlockDevice;
    }
    /**
     * A list of secondary private IPv4 addresses to assign to the instance's primary network interface (eth0) in a VPC. Can only be assigned to the primary network interface (eth0) attached at instance creation, not a pre-existing network interface i.e., referenced in a `network_interface` block. Refer to the [Elastic network interfaces documentation](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-eni.html#AvailableIpPerENI) to see the maximum number of private IP addresses allowed per instance type.
     * 
     */
    @Export(name="secondaryPrivateIps", type=List.class, parameters={String.class})
    private Output<List<String>> secondaryPrivateIps;

    /**
     * @return A list of secondary private IPv4 addresses to assign to the instance's primary network interface (eth0) in a VPC. Can only be assigned to the primary network interface (eth0) attached at instance creation, not a pre-existing network interface i.e., referenced in a `network_interface` block. Refer to the [Elastic network interfaces documentation](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-eni.html#AvailableIpPerENI) to see the maximum number of private IP addresses allowed per instance type.
     * 
     */
    public Output<List<String>> getSecondaryPrivateIps() {
        return this.secondaryPrivateIps;
    }
    /**
     * A list of security group names to associate with.
     * 
     */
    @Export(name="securityGroups", type=List.class, parameters={String.class})
    private Output<List<String>> securityGroups;

    /**
     * @return A list of security group names to associate with.
     * 
     */
    public Output<List<String>> getSecurityGroups() {
        return this.securityGroups;
    }
    /**
     * Controls if traffic is routed to the instance when the destination address does not match the instance. Used for NAT or VPNs. Defaults true.
     * 
     */
    @Export(name="sourceDestCheck", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> sourceDestCheck;

    /**
     * @return Controls if traffic is routed to the instance when the destination address does not match the instance. Used for NAT or VPNs. Defaults true.
     * 
     */
    public Output</* @Nullable */ Boolean> getSourceDestCheck() {
        return this.sourceDestCheck;
    }
    /**
     * The current [bid
     * status](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-bid-status.html)
     * of the Spot Instance Request.
     * * `spot_request_state` The current [request
     *   state](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-requests.html#creating-spot-request-status)
     *   of the Spot Instance Request.
     * 
     */
    @Export(name="spotBidStatus", type=String.class, parameters={})
    private Output<String> spotBidStatus;

    /**
     * @return The current [bid
     * status](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-bid-status.html)
     * of the Spot Instance Request.
     * * `spot_request_state` The current [request
     *   state](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-requests.html#creating-spot-request-status)
     *   of the Spot Instance Request.
     * 
     */
    public Output<String> getSpotBidStatus() {
        return this.spotBidStatus;
    }
    /**
     * The Instance ID (if any) that is currently fulfilling
     * the Spot Instance request.
     * 
     */
    @Export(name="spotInstanceId", type=String.class, parameters={})
    private Output<String> spotInstanceId;

    /**
     * @return The Instance ID (if any) that is currently fulfilling
     * the Spot Instance request.
     * 
     */
    public Output<String> getSpotInstanceId() {
        return this.spotInstanceId;
    }
    /**
     * The maximum price to request on the spot market.
     * 
     */
    @Export(name="spotPrice", type=String.class, parameters={})
    private Output<String> spotPrice;

    /**
     * @return The maximum price to request on the spot market.
     * 
     */
    public Output<String> getSpotPrice() {
        return this.spotPrice;
    }
    @Export(name="spotRequestState", type=String.class, parameters={})
    private Output<String> spotRequestState;

    public Output<String> getSpotRequestState() {
        return this.spotRequestState;
    }
    /**
     * If set to `one-time`, after
     * the instance is terminated, the spot request will be closed.
     * 
     */
    @Export(name="spotType", type=String.class, parameters={})
    private Output</* @Nullable */ String> spotType;

    /**
     * @return If set to `one-time`, after
     * the instance is terminated, the spot request will be closed.
     * 
     */
    public Output</* @Nullable */ String> getSpotType() {
        return this.spotType;
    }
    /**
     * VPC Subnet ID to launch in.
     * 
     */
    @Export(name="subnetId", type=String.class, parameters={})
    private Output<String> subnetId;

    /**
     * @return VPC Subnet ID to launch in.
     * 
     */
    public Output<String> getSubnetId() {
        return this.subnetId;
    }
    /**
     * A map of tags to assign to the resource. Note that these tags apply to the instance and not block storage devices. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Export(name="tags", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return A map of tags to assign to the resource. Note that these tags apply to the instance and not block storage devices. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Output</* @Nullable */ Map<String,String>> getTags() {
        return this.tags;
    }
    /**
     * A map of tags assigned to the resource, including those inherited from the provider .
     * 
     */
    @Export(name="tagsAll", type=Map.class, parameters={String.class, String.class})
    private Output<Map<String,String>> tagsAll;

    /**
     * @return A map of tags assigned to the resource, including those inherited from the provider .
     * 
     */
    public Output<Map<String,String>> getTagsAll() {
        return this.tagsAll;
    }
    /**
     * Tenancy of the instance (if the instance is running in a VPC). An instance with a tenancy of dedicated runs on single-tenant hardware. The host tenancy is not supported for the import-instance command.
     * 
     */
    @Export(name="tenancy", type=String.class, parameters={})
    private Output<String> tenancy;

    /**
     * @return Tenancy of the instance (if the instance is running in a VPC). An instance with a tenancy of dedicated runs on single-tenant hardware. The host tenancy is not supported for the import-instance command.
     * 
     */
    public Output<String> getTenancy() {
        return this.tenancy;
    }
    /**
     * User data to provide when launching the instance. Do not pass gzip-compressed data via this argument; see `user_data_base64` instead.
     * 
     */
    @Export(name="userData", type=String.class, parameters={})
    private Output<String> userData;

    /**
     * @return User data to provide when launching the instance. Do not pass gzip-compressed data via this argument; see `user_data_base64` instead.
     * 
     */
    public Output<String> getUserData() {
        return this.userData;
    }
    /**
     * Can be used instead of `user_data` to pass base64-encoded binary data directly. Use this instead of `user_data` whenever the value is not a valid UTF-8 string. For example, gzip-encoded user data must be base64-encoded and passed via this argument to avoid corruption.
     * 
     */
    @Export(name="userDataBase64", type=String.class, parameters={})
    private Output<String> userDataBase64;

    /**
     * @return Can be used instead of `user_data` to pass base64-encoded binary data directly. Use this instead of `user_data` whenever the value is not a valid UTF-8 string. For example, gzip-encoded user data must be base64-encoded and passed via this argument to avoid corruption.
     * 
     */
    public Output<String> getUserDataBase64() {
        return this.userDataBase64;
    }
    /**
     * The start date and time of the request, in UTC [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.8) format(for example, YYYY-MM-DDTHH:MM:SSZ). The default is to start fulfilling the request immediately.
     * 
     */
    @Export(name="validFrom", type=String.class, parameters={})
    private Output<String> validFrom;

    /**
     * @return The start date and time of the request, in UTC [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.8) format(for example, YYYY-MM-DDTHH:MM:SSZ). The default is to start fulfilling the request immediately.
     * 
     */
    public Output<String> getValidFrom() {
        return this.validFrom;
    }
    /**
     * The end date and time of the request, in UTC [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.8) format(for example, YYYY-MM-DDTHH:MM:SSZ). At this point, no new Spot instance requests are placed or enabled to fulfill the request. The default end date is 7 days from the current date.
     * 
     */
    @Export(name="validUntil", type=String.class, parameters={})
    private Output<String> validUntil;

    /**
     * @return The end date and time of the request, in UTC [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.8) format(for example, YYYY-MM-DDTHH:MM:SSZ). At this point, no new Spot instance requests are placed or enabled to fulfill the request. The default end date is 7 days from the current date.
     * 
     */
    public Output<String> getValidUntil() {
        return this.validUntil;
    }
    /**
     * A map of tags to assign, at instance-creation time, to root and EBS volumes.
     * 
     */
    @Export(name="volumeTags", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> volumeTags;

    /**
     * @return A map of tags to assign, at instance-creation time, to root and EBS volumes.
     * 
     */
    public Output</* @Nullable */ Map<String,String>> getVolumeTags() {
        return this.volumeTags;
    }
    /**
     * A list of security group IDs to associate with.
     * 
     */
    @Export(name="vpcSecurityGroupIds", type=List.class, parameters={String.class})
    private Output<List<String>> vpcSecurityGroupIds;

    /**
     * @return A list of security group IDs to associate with.
     * 
     */
    public Output<List<String>> getVpcSecurityGroupIds() {
        return this.vpcSecurityGroupIds;
    }
    /**
     * If set, this provider will
     * wait for the Spot Request to be fulfilled, and will throw an error if the
     * timeout of 10m is reached.
     * 
     */
    @Export(name="waitForFulfillment", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> waitForFulfillment;

    /**
     * @return If set, this provider will
     * wait for the Spot Request to be fulfilled, and will throw an error if the
     * timeout of 10m is reached.
     * 
     */
    public Output</* @Nullable */ Boolean> getWaitForFulfillment() {
        return this.waitForFulfillment;
    }

    public interface BuilderApplicator {
        public void apply(@Nullable SpotInstanceRequestArgs.Builder a);
    }
    private static io.pulumi.aws.ec2.SpotInstanceRequestArgs buildArgs(BuilderApplicator argsBuilder) {
        final var builder = io.pulumi.aws.ec2.SpotInstanceRequestArgs.builder();
        argsBuilder.apply(builder);
        return builder.build();
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param argsBuilder A function that configures a passed builder.
     */
    public SpotInstanceRequest(String name, BuilderApplicator argsBuilder) {
        this(name, buildArgs(argsBuilder), null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public SpotInstanceRequest(String name) {
        this(name, SpotInstanceRequestArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public SpotInstanceRequest(String name, @Nullable SpotInstanceRequestArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public SpotInstanceRequest(String name, @Nullable SpotInstanceRequestArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:ec2/spotInstanceRequest:SpotInstanceRequest", name, args == null ? SpotInstanceRequestArgs.Empty : args, makeResourceOptions(options, Output.empty()));
    }

    private SpotInstanceRequest(String name, Output<String> id, @Nullable SpotInstanceRequestState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:ec2/spotInstanceRequest:SpotInstanceRequest", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .setVersion(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static SpotInstanceRequest get(String name, Output<String> id, @Nullable SpotInstanceRequestState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new SpotInstanceRequest(name, id, state, options);
    }
}
