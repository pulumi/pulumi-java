// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.securityhub;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class MemberArgs extends io.pulumi.resources.ResourceArgs {

    public static final MemberArgs Empty = new MemberArgs();

    /**
     * The ID of the member AWS account.
     * 
     */
    @Import(name="accountId", required=true)
      private final Output<String> accountId;

    public Output<String> getAccountId() {
        return this.accountId;
    }

    /**
     * The email of the member AWS account.
     * 
     */
    @Import(name="email", required=true)
      private final Output<String> email;

    public Output<String> getEmail() {
        return this.email;
    }

    /**
     * Boolean whether to invite the account to Security Hub as a member. Defaults to `false`.
     * 
     */
    @Import(name="invite")
      private final @Nullable Output<Boolean> invite;

    public Output<Boolean> getInvite() {
        return this.invite == null ? Output.empty() : this.invite;
    }

    public MemberArgs(
        Output<String> accountId,
        Output<String> email,
        @Nullable Output<Boolean> invite) {
        this.accountId = Objects.requireNonNull(accountId, "expected parameter 'accountId' to be non-null");
        this.email = Objects.requireNonNull(email, "expected parameter 'email' to be non-null");
        this.invite = invite;
    }

    private MemberArgs() {
        this.accountId = Output.empty();
        this.email = Output.empty();
        this.invite = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MemberArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> accountId;
        private Output<String> email;
        private @Nullable Output<Boolean> invite;

        public Builder() {
    	      // Empty
        }

        public Builder(MemberArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountId = defaults.accountId;
    	      this.email = defaults.email;
    	      this.invite = defaults.invite;
        }

        public Builder accountId(Output<String> accountId) {
            this.accountId = Objects.requireNonNull(accountId);
            return this;
        }

        public Builder accountId(String accountId) {
            this.accountId = Output.of(Objects.requireNonNull(accountId));
            return this;
        }

        public Builder email(Output<String> email) {
            this.email = Objects.requireNonNull(email);
            return this;
        }

        public Builder email(String email) {
            this.email = Output.of(Objects.requireNonNull(email));
            return this;
        }

        public Builder invite(@Nullable Output<Boolean> invite) {
            this.invite = invite;
            return this;
        }

        public Builder invite(@Nullable Boolean invite) {
            this.invite = Output.ofNullable(invite);
            return this;
        }
        public MemberArgs build() {
            return new MemberArgs(accountId, email, invite);
        }
    }
}
