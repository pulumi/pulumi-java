// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.cloud9;

import io.pulumi.aws.Utilities;
import io.pulumi.aws.cloud9.EnvironmentEC2Args;
import io.pulumi.aws.cloud9.inputs.EnvironmentEC2State;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Export;
import io.pulumi.core.annotations.ResourceType;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;

/**
 * Provides a Cloud9 EC2 Development Environment.
 * 
 * {{% examples %}}
 * ## Example Usage
 * {{% example %}}
 * 
 * Basic usage:
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 * 
 * const example = new aws.cloud9.EnvironmentEC2("example", {
 *     instanceType: "t2.micro",
 * });
 * ```
 * ```python
 * import pulumi
 * import pulumi_aws as aws
 * 
 * example = aws.cloud9.EnvironmentEC2("example", instance_type="t2.micro")
 * ```
 * ```csharp
 * using Pulumi;
 * using Aws = Pulumi.Aws;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var example = new Aws.Cloud9.EnvironmentEC2("example", new Aws.Cloud9.EnvironmentEC2Args
 *         {
 *             InstanceType = "t2.micro",
 *         });
 *     }
 * 
 * }
 * ```
 * ```go
 * package main
 * 
 * import (
 * 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/cloud9"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		_, err := cloud9.NewEnvironmentEC2(ctx, "example", &cloud9.EnvironmentEC2Args{
 * 			InstanceType: pulumi.String("t2.micro"),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * ```
 * 
 * Get the URL of the Cloud9 environment after creation:
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 * 
 * const example = new aws.cloud9.EnvironmentEC2("example", {instanceType: "t2.micro"});
 * const cloud9Instance = aws.ec2.getInstanceOutput({
 *     filters: [{
 *         name: "tag:aws:cloud9:environment",
 *         values: [example.id],
 *     }],
 * });
 * export const cloud9Url = pulumi.interpolate`https://${_var.region}.console.aws.amazon.com/cloud9/ide/${example.id}`;
 * ```
 * ```python
 * import pulumi
 * import pulumi_aws as aws
 * 
 * example = aws.cloud9.EnvironmentEC2("example", instance_type="t2.micro")
 * cloud9_instance = aws.ec2.get_instance_output(filters=[aws.ec2.GetInstanceFilterArgs(
 *     name="tag:aws:cloud9:environment",
 *     values=[example.id],
 * )])
 * pulumi.export("cloud9Url", example.id.apply(lambda id: f"https://{var['region']}.console.aws.amazon.com/cloud9/ide/{id}"))
 * ```
 * ```csharp
 * using Pulumi;
 * using Aws = Pulumi.Aws;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var example = new Aws.Cloud9.EnvironmentEC2("example", new Aws.Cloud9.EnvironmentEC2Args
 *         {
 *             InstanceType = "t2.micro",
 *         });
 *         var cloud9Instance = Aws.Ec2.GetInstance.Invoke(new Aws.Ec2.GetInstanceInvokeArgs
 *         {
 *             Filters = 
 *             {
 *                 new Aws.Ec2.Inputs.GetInstanceFilterInputArgs
 *                 {
 *                     Name = "tag:aws:cloud9:environment",
 *                     Values = 
 *                     {
 *                         example.Id,
 *                     },
 *                 },
 *             },
 *         });
 *         this.Cloud9Url = example.Id.Apply(id => $"https://{@var.Region}.console.aws.amazon.com/cloud9/ide/{id}");
 *     }
 * 
 *     [Output("cloud9Url")]
 *     public Output<string> Cloud9Url { get; set; }
 * }
 * ```
 * ```go
 * package main
 * 
 * import (
 * 	"fmt"
 * 
 * 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/cloud9"
 * 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/ec2"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		example, err := cloud9.NewEnvironmentEC2(ctx, "example", &cloud9.EnvironmentEC2Args{
 * 			InstanceType: pulumi.String("t2.micro"),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		_ = ec2.LookupInstanceOutput(ctx, ec2.GetInstanceOutputArgs{
 * 			Filters: ec2.GetInstanceFilterArray{
 * 				&ec2.GetInstanceFilterArgs{
 * 					Name: pulumi.String("tag:aws:cloud9:environment"),
 * 					Values: pulumi.StringArray{
 * 						example.ID(),
 * 					},
 * 				},
 * 			},
 * 		}, nil)
 * 		ctx.Export("cloud9Url", example.ID().ApplyT(func(id string) (string, error) {
 * 			return fmt.Sprintf("%v%v%v%v", "https://", _var.Region, ".console.aws.amazon.com/cloud9/ide/", id), nil
 * 		}).(pulumi.StringOutput))
 * 		return nil
 * 	})
 * }
 * ```
 * 
 * Allocate a static IP to the Cloud9 environment:
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 * 
 * const example = new aws.cloud9.EnvironmentEC2("example", {instanceType: "t2.micro"});
 * const cloud9Instance = aws.ec2.getInstanceOutput({
 *     filters: [{
 *         name: "tag:aws:cloud9:environment",
 *         values: [example.id],
 *     }],
 * });
 * const cloud9Eip = new aws.ec2.Eip("cloud9Eip", {
 *     instance: cloud9Instance.apply(cloud9Instance => cloud9Instance.id),
 *     vpc: true,
 * });
 * export const cloud9PublicIp = cloud9Eip.publicIp;
 * ```
 * ```python
 * import pulumi
 * import pulumi_aws as aws
 * 
 * example = aws.cloud9.EnvironmentEC2("example", instance_type="t2.micro")
 * cloud9_instance = aws.ec2.get_instance_output(filters=[aws.ec2.GetInstanceFilterArgs(
 *     name="tag:aws:cloud9:environment",
 *     values=[example.id],
 * )])
 * cloud9_eip = aws.ec2.Eip("cloud9Eip",
 *     instance=cloud9_instance.id,
 *     vpc=True)
 * pulumi.export("cloud9PublicIp", cloud9_eip.public_ip)
 * ```
 * ```csharp
 * using Pulumi;
 * using Aws = Pulumi.Aws;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var example = new Aws.Cloud9.EnvironmentEC2("example", new Aws.Cloud9.EnvironmentEC2Args
 *         {
 *             InstanceType = "t2.micro",
 *         });
 *         var cloud9Instance = Aws.Ec2.GetInstance.Invoke(new Aws.Ec2.GetInstanceInvokeArgs
 *         {
 *             Filters = 
 *             {
 *                 new Aws.Ec2.Inputs.GetInstanceFilterInputArgs
 *                 {
 *                     Name = "tag:aws:cloud9:environment",
 *                     Values = 
 *                     {
 *                         example.Id,
 *                     },
 *                 },
 *             },
 *         });
 *         var cloud9Eip = new Aws.Ec2.Eip("cloud9Eip", new Aws.Ec2.EipArgs
 *         {
 *             Instance = cloud9Instance.Apply(cloud9Instance => cloud9Instance.Id),
 *             Vpc = true,
 *         });
 *         this.Cloud9PublicIp = cloud9Eip.PublicIp;
 *     }
 * 
 *     [Output("cloud9PublicIp")]
 *     public Output<string> Cloud9PublicIp { get; set; }
 * }
 * ```
 * ```go
 * package main
 * 
 * import (
 * 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/cloud9"
 * 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/ec2"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		example, err := cloud9.NewEnvironmentEC2(ctx, "example", &cloud9.EnvironmentEC2Args{
 * 			InstanceType: pulumi.String("t2.micro"),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		cloud9Instance := ec2.LookupInstanceOutput(ctx, ec2.GetInstanceOutputArgs{
 * 			Filters: ec2.GetInstanceFilterArray{
 * 				&ec2.GetInstanceFilterArgs{
 * 					Name: pulumi.String("tag:aws:cloud9:environment"),
 * 					Values: pulumi.StringArray{
 * 						example.ID(),
 * 					},
 * 				},
 * 			},
 * 		}, nil)
 * 		cloud9Eip, err := ec2.NewEip(ctx, "cloud9Eip", &ec2.EipArgs{
 * 			Instance: cloud9Instance.ApplyT(func(cloud9Instance ec2.GetInstanceResult) (string, error) {
 * 				return cloud9Instance.Id, nil
 * 			}).(pulumi.StringOutput),
 * 			Vpc: pulumi.Bool(true),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		ctx.Export("cloud9PublicIp", cloud9Eip.PublicIp)
 * 		return nil
 * 	})
 * }
 * ```
 * {{% /example %}}
 * {{% /examples %}}
 */
@ResourceType(type="aws:cloud9/environmentEC2:EnvironmentEC2")
public class EnvironmentEC2 extends io.pulumi.resources.CustomResource {
    /**
     * The ARN of the environment.
     * 
     */
    @Export(name="arn", type=String.class, parameters={})
    private Output<String> arn;

    /**
     * @return The ARN of the environment.
     * 
     */
    public Output<String> getArn() {
        return this.arn;
    }
    /**
     * The number of minutes until the running instance is shut down after the environment has last been used.
     * 
     */
    @Export(name="automaticStopTimeMinutes", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> automaticStopTimeMinutes;

    /**
     * @return The number of minutes until the running instance is shut down after the environment has last been used.
     * 
     */
    public Output</* @Nullable */ Integer> getAutomaticStopTimeMinutes() {
        return this.automaticStopTimeMinutes;
    }
    /**
     * The description of the environment.
     * 
     */
    @Export(name="description", type=String.class, parameters={})
    private Output</* @Nullable */ String> description;

    /**
     * @return The description of the environment.
     * 
     */
    public Output</* @Nullable */ String> getDescription() {
        return this.description;
    }
    /**
     * The type of instance to connect to the environment, e.g., `t2.micro`.
     * 
     */
    @Export(name="instanceType", type=String.class, parameters={})
    private Output<String> instanceType;

    /**
     * @return The type of instance to connect to the environment, e.g., `t2.micro`.
     * 
     */
    public Output<String> getInstanceType() {
        return this.instanceType;
    }
    /**
     * The name of the environment.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The name of the environment.
     * 
     */
    public Output<String> getName() {
        return this.name;
    }
    /**
     * The ARN of the environment owner. This can be ARN of any AWS IAM principal. Defaults to the environment's creator.
     * 
     */
    @Export(name="ownerArn", type=String.class, parameters={})
    private Output<String> ownerArn;

    /**
     * @return The ARN of the environment owner. This can be ARN of any AWS IAM principal. Defaults to the environment's creator.
     * 
     */
    public Output<String> getOwnerArn() {
        return this.ownerArn;
    }
    /**
     * The ID of the subnet in Amazon VPC that AWS Cloud9 will use to communicate with the Amazon EC2 instance.
     * 
     */
    @Export(name="subnetId", type=String.class, parameters={})
    private Output</* @Nullable */ String> subnetId;

    /**
     * @return The ID of the subnet in Amazon VPC that AWS Cloud9 will use to communicate with the Amazon EC2 instance.
     * 
     */
    public Output</* @Nullable */ String> getSubnetId() {
        return this.subnetId;
    }
    /**
     * Key-value map of resource tags. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Export(name="tags", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return Key-value map of resource tags. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Output</* @Nullable */ Map<String,String>> getTags() {
        return this.tags;
    }
    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     */
    @Export(name="tagsAll", type=Map.class, parameters={String.class, String.class})
    private Output<Map<String,String>> tagsAll;

    /**
     * @return A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     */
    public Output<Map<String,String>> getTagsAll() {
        return this.tagsAll;
    }
    /**
     * The type of the environment (e.g., `ssh` or `ec2`)
     * 
     */
    @Export(name="type", type=String.class, parameters={})
    private Output<String> type;

    /**
     * @return The type of the environment (e.g., `ssh` or `ec2`)
     * 
     */
    public Output<String> getType() {
        return this.type;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public EnvironmentEC2(String name) {
        this(name, EnvironmentEC2Args.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public EnvironmentEC2(String name, EnvironmentEC2Args args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public EnvironmentEC2(String name, EnvironmentEC2Args args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:cloud9/environmentEC2:EnvironmentEC2", name, args == null ? EnvironmentEC2Args.Empty : args, makeResourceOptions(options, Output.empty()));
    }

    private EnvironmentEC2(String name, Output<String> id, @Nullable EnvironmentEC2State state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:cloud9/environmentEC2:EnvironmentEC2", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static EnvironmentEC2 get(String name, Output<String> id, @Nullable EnvironmentEC2State state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new EnvironmentEC2(name, id, state, options);
    }
}
