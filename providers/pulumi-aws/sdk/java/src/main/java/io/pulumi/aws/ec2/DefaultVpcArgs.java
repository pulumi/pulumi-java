// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.ec2;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class DefaultVpcArgs extends io.pulumi.resources.ResourceArgs {

    public static final DefaultVpcArgs Empty = new DefaultVpcArgs();

    /**
     * A boolean flag to enable/disable ClassicLink
     * for the VPC. Only valid in regions and accounts that support EC2 Classic.
     * See the [ClassicLink documentation](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/vpc-classiclink.html) for more information. Defaults false.
     * 
     */
    @Import(name="enableClassiclink")
      private final @Nullable Output<Boolean> enableClassiclink;

    public Output<Boolean> enableClassiclink() {
        return this.enableClassiclink == null ? Codegen.empty() : this.enableClassiclink;
    }

    @Import(name="enableClassiclinkDnsSupport")
      private final @Nullable Output<Boolean> enableClassiclinkDnsSupport;

    public Output<Boolean> enableClassiclinkDnsSupport() {
        return this.enableClassiclinkDnsSupport == null ? Codegen.empty() : this.enableClassiclinkDnsSupport;
    }

    /**
     * A boolean flag to enable/disable DNS hostnames in the VPC. Defaults false.
     * 
     */
    @Import(name="enableDnsHostnames")
      private final @Nullable Output<Boolean> enableDnsHostnames;

    public Output<Boolean> enableDnsHostnames() {
        return this.enableDnsHostnames == null ? Codegen.empty() : this.enableDnsHostnames;
    }

    /**
     * A boolean flag to enable/disable DNS support in the VPC. Defaults true.
     * 
     */
    @Import(name="enableDnsSupport")
      private final @Nullable Output<Boolean> enableDnsSupport;

    public Output<Boolean> enableDnsSupport() {
        return this.enableDnsSupport == null ? Codegen.empty() : this.enableDnsSupport;
    }

    @Import(name="ipv4IpamPoolId")
      private final @Nullable Output<String> ipv4IpamPoolId;

    public Output<String> ipv4IpamPoolId() {
        return this.ipv4IpamPoolId == null ? Codegen.empty() : this.ipv4IpamPoolId;
    }

    @Import(name="ipv4NetmaskLength")
      private final @Nullable Output<Integer> ipv4NetmaskLength;

    public Output<Integer> ipv4NetmaskLength() {
        return this.ipv4NetmaskLength == null ? Codegen.empty() : this.ipv4NetmaskLength;
    }

    /**
     * The IPv6 CIDR block of the VPC
     * 
     */
    @Import(name="ipv6CidrBlock")
      private final @Nullable Output<String> ipv6CidrBlock;

    public Output<String> ipv6CidrBlock() {
        return this.ipv6CidrBlock == null ? Codegen.empty() : this.ipv6CidrBlock;
    }

    @Import(name="ipv6CidrBlockNetworkBorderGroup")
      private final @Nullable Output<String> ipv6CidrBlockNetworkBorderGroup;

    public Output<String> ipv6CidrBlockNetworkBorderGroup() {
        return this.ipv6CidrBlockNetworkBorderGroup == null ? Codegen.empty() : this.ipv6CidrBlockNetworkBorderGroup;
    }

    @Import(name="ipv6IpamPoolId")
      private final @Nullable Output<String> ipv6IpamPoolId;

    public Output<String> ipv6IpamPoolId() {
        return this.ipv6IpamPoolId == null ? Codegen.empty() : this.ipv6IpamPoolId;
    }

    @Import(name="ipv6NetmaskLength")
      private final @Nullable Output<Integer> ipv6NetmaskLength;

    public Output<Integer> ipv6NetmaskLength() {
        return this.ipv6NetmaskLength == null ? Codegen.empty() : this.ipv6NetmaskLength;
    }

    /**
     * A map of tags to assign to the resource.
     * 
     */
    @Import(name="tags")
      private final @Nullable Output<Map<String,String>> tags;

    public Output<Map<String,String>> tags() {
        return this.tags == null ? Codegen.empty() : this.tags;
    }

    public DefaultVpcArgs(
        @Nullable Output<Boolean> enableClassiclink,
        @Nullable Output<Boolean> enableClassiclinkDnsSupport,
        @Nullable Output<Boolean> enableDnsHostnames,
        @Nullable Output<Boolean> enableDnsSupport,
        @Nullable Output<String> ipv4IpamPoolId,
        @Nullable Output<Integer> ipv4NetmaskLength,
        @Nullable Output<String> ipv6CidrBlock,
        @Nullable Output<String> ipv6CidrBlockNetworkBorderGroup,
        @Nullable Output<String> ipv6IpamPoolId,
        @Nullable Output<Integer> ipv6NetmaskLength,
        @Nullable Output<Map<String,String>> tags) {
        this.enableClassiclink = enableClassiclink;
        this.enableClassiclinkDnsSupport = enableClassiclinkDnsSupport;
        this.enableDnsHostnames = enableDnsHostnames;
        this.enableDnsSupport = enableDnsSupport;
        this.ipv4IpamPoolId = ipv4IpamPoolId;
        this.ipv4NetmaskLength = ipv4NetmaskLength;
        this.ipv6CidrBlock = ipv6CidrBlock;
        this.ipv6CidrBlockNetworkBorderGroup = ipv6CidrBlockNetworkBorderGroup;
        this.ipv6IpamPoolId = ipv6IpamPoolId;
        this.ipv6NetmaskLength = ipv6NetmaskLength;
        this.tags = tags;
    }

    private DefaultVpcArgs() {
        this.enableClassiclink = Codegen.empty();
        this.enableClassiclinkDnsSupport = Codegen.empty();
        this.enableDnsHostnames = Codegen.empty();
        this.enableDnsSupport = Codegen.empty();
        this.ipv4IpamPoolId = Codegen.empty();
        this.ipv4NetmaskLength = Codegen.empty();
        this.ipv6CidrBlock = Codegen.empty();
        this.ipv6CidrBlockNetworkBorderGroup = Codegen.empty();
        this.ipv6IpamPoolId = Codegen.empty();
        this.ipv6NetmaskLength = Codegen.empty();
        this.tags = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DefaultVpcArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<Boolean> enableClassiclink;
        private @Nullable Output<Boolean> enableClassiclinkDnsSupport;
        private @Nullable Output<Boolean> enableDnsHostnames;
        private @Nullable Output<Boolean> enableDnsSupport;
        private @Nullable Output<String> ipv4IpamPoolId;
        private @Nullable Output<Integer> ipv4NetmaskLength;
        private @Nullable Output<String> ipv6CidrBlock;
        private @Nullable Output<String> ipv6CidrBlockNetworkBorderGroup;
        private @Nullable Output<String> ipv6IpamPoolId;
        private @Nullable Output<Integer> ipv6NetmaskLength;
        private @Nullable Output<Map<String,String>> tags;

        public Builder() {
    	      // Empty
        }

        public Builder(DefaultVpcArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.enableClassiclink = defaults.enableClassiclink;
    	      this.enableClassiclinkDnsSupport = defaults.enableClassiclinkDnsSupport;
    	      this.enableDnsHostnames = defaults.enableDnsHostnames;
    	      this.enableDnsSupport = defaults.enableDnsSupport;
    	      this.ipv4IpamPoolId = defaults.ipv4IpamPoolId;
    	      this.ipv4NetmaskLength = defaults.ipv4NetmaskLength;
    	      this.ipv6CidrBlock = defaults.ipv6CidrBlock;
    	      this.ipv6CidrBlockNetworkBorderGroup = defaults.ipv6CidrBlockNetworkBorderGroup;
    	      this.ipv6IpamPoolId = defaults.ipv6IpamPoolId;
    	      this.ipv6NetmaskLength = defaults.ipv6NetmaskLength;
    	      this.tags = defaults.tags;
        }

        public Builder enableClassiclink(@Nullable Output<Boolean> enableClassiclink) {
            this.enableClassiclink = enableClassiclink;
            return this;
        }
        public Builder enableClassiclink(@Nullable Boolean enableClassiclink) {
            this.enableClassiclink = Codegen.ofNullable(enableClassiclink);
            return this;
        }
        public Builder enableClassiclinkDnsSupport(@Nullable Output<Boolean> enableClassiclinkDnsSupport) {
            this.enableClassiclinkDnsSupport = enableClassiclinkDnsSupport;
            return this;
        }
        public Builder enableClassiclinkDnsSupport(@Nullable Boolean enableClassiclinkDnsSupport) {
            this.enableClassiclinkDnsSupport = Codegen.ofNullable(enableClassiclinkDnsSupport);
            return this;
        }
        public Builder enableDnsHostnames(@Nullable Output<Boolean> enableDnsHostnames) {
            this.enableDnsHostnames = enableDnsHostnames;
            return this;
        }
        public Builder enableDnsHostnames(@Nullable Boolean enableDnsHostnames) {
            this.enableDnsHostnames = Codegen.ofNullable(enableDnsHostnames);
            return this;
        }
        public Builder enableDnsSupport(@Nullable Output<Boolean> enableDnsSupport) {
            this.enableDnsSupport = enableDnsSupport;
            return this;
        }
        public Builder enableDnsSupport(@Nullable Boolean enableDnsSupport) {
            this.enableDnsSupport = Codegen.ofNullable(enableDnsSupport);
            return this;
        }
        public Builder ipv4IpamPoolId(@Nullable Output<String> ipv4IpamPoolId) {
            this.ipv4IpamPoolId = ipv4IpamPoolId;
            return this;
        }
        public Builder ipv4IpamPoolId(@Nullable String ipv4IpamPoolId) {
            this.ipv4IpamPoolId = Codegen.ofNullable(ipv4IpamPoolId);
            return this;
        }
        public Builder ipv4NetmaskLength(@Nullable Output<Integer> ipv4NetmaskLength) {
            this.ipv4NetmaskLength = ipv4NetmaskLength;
            return this;
        }
        public Builder ipv4NetmaskLength(@Nullable Integer ipv4NetmaskLength) {
            this.ipv4NetmaskLength = Codegen.ofNullable(ipv4NetmaskLength);
            return this;
        }
        public Builder ipv6CidrBlock(@Nullable Output<String> ipv6CidrBlock) {
            this.ipv6CidrBlock = ipv6CidrBlock;
            return this;
        }
        public Builder ipv6CidrBlock(@Nullable String ipv6CidrBlock) {
            this.ipv6CidrBlock = Codegen.ofNullable(ipv6CidrBlock);
            return this;
        }
        public Builder ipv6CidrBlockNetworkBorderGroup(@Nullable Output<String> ipv6CidrBlockNetworkBorderGroup) {
            this.ipv6CidrBlockNetworkBorderGroup = ipv6CidrBlockNetworkBorderGroup;
            return this;
        }
        public Builder ipv6CidrBlockNetworkBorderGroup(@Nullable String ipv6CidrBlockNetworkBorderGroup) {
            this.ipv6CidrBlockNetworkBorderGroup = Codegen.ofNullable(ipv6CidrBlockNetworkBorderGroup);
            return this;
        }
        public Builder ipv6IpamPoolId(@Nullable Output<String> ipv6IpamPoolId) {
            this.ipv6IpamPoolId = ipv6IpamPoolId;
            return this;
        }
        public Builder ipv6IpamPoolId(@Nullable String ipv6IpamPoolId) {
            this.ipv6IpamPoolId = Codegen.ofNullable(ipv6IpamPoolId);
            return this;
        }
        public Builder ipv6NetmaskLength(@Nullable Output<Integer> ipv6NetmaskLength) {
            this.ipv6NetmaskLength = ipv6NetmaskLength;
            return this;
        }
        public Builder ipv6NetmaskLength(@Nullable Integer ipv6NetmaskLength) {
            this.ipv6NetmaskLength = Codegen.ofNullable(ipv6NetmaskLength);
            return this;
        }
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = Codegen.ofNullable(tags);
            return this;
        }        public DefaultVpcArgs build() {
            return new DefaultVpcArgs(enableClassiclink, enableClassiclinkDnsSupport, enableDnsHostnames, enableDnsSupport, ipv4IpamPoolId, ipv4NetmaskLength, ipv6CidrBlock, ipv6CidrBlockNetworkBorderGroup, ipv6IpamPoolId, ipv6NetmaskLength, tags);
        }
    }
}
