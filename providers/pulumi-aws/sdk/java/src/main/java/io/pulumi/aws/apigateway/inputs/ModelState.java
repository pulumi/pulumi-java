// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.apigateway.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ModelState extends io.pulumi.resources.ResourceArgs {

    public static final ModelState Empty = new ModelState();

    /**
     * The content type of the model
     * 
     */
    @InputImport(name="contentType")
    private final @Nullable Input<String> contentType;

    public Input<String> getContentType() {
        return this.contentType == null ? Input.empty() : this.contentType;
    }

    /**
     * The description of the model
     * 
     */
    @InputImport(name="description")
    private final @Nullable Input<String> description;

    public Input<String> getDescription() {
        return this.description == null ? Input.empty() : this.description;
    }

    /**
     * The name of the model
     * 
     */
    @InputImport(name="name")
    private final @Nullable Input<String> name;

    public Input<String> getName() {
        return this.name == null ? Input.empty() : this.name;
    }

    /**
     * The ID of the associated REST API
     * 
     */
    @InputImport(name="restApi")
    private final @Nullable Input<String> restApi;

    public Input<String> getRestApi() {
        return this.restApi == null ? Input.empty() : this.restApi;
    }

    /**
     * The schema of the model in a JSON form
     * 
     */
    @InputImport(name="schema")
    private final @Nullable Input<String> schema;

    public Input<String> getSchema() {
        return this.schema == null ? Input.empty() : this.schema;
    }

    public ModelState(
        @Nullable Input<String> contentType,
        @Nullable Input<String> description,
        @Nullable Input<String> name,
        @Nullable Input<String> restApi,
        @Nullable Input<String> schema) {
        this.contentType = contentType;
        this.description = description;
        this.name = name;
        this.restApi = restApi;
        this.schema = schema;
    }

    private ModelState() {
        this.contentType = Input.empty();
        this.description = Input.empty();
        this.name = Input.empty();
        this.restApi = Input.empty();
        this.schema = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ModelState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> contentType;
        private @Nullable Input<String> description;
        private @Nullable Input<String> name;
        private @Nullable Input<String> restApi;
        private @Nullable Input<String> schema;

        public Builder() {
    	      // Empty
        }

        public Builder(ModelState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.contentType = defaults.contentType;
    	      this.description = defaults.description;
    	      this.name = defaults.name;
    	      this.restApi = defaults.restApi;
    	      this.schema = defaults.schema;
        }

        public Builder setContentType(@Nullable Input<String> contentType) {
            this.contentType = contentType;
            return this;
        }

        public Builder setContentType(@Nullable String contentType) {
            this.contentType = Input.ofNullable(contentType);
            return this;
        }

        public Builder setDescription(@Nullable Input<String> description) {
            this.description = description;
            return this;
        }

        public Builder setDescription(@Nullable String description) {
            this.description = Input.ofNullable(description);
            return this;
        }

        public Builder setName(@Nullable Input<String> name) {
            this.name = name;
            return this;
        }

        public Builder setName(@Nullable String name) {
            this.name = Input.ofNullable(name);
            return this;
        }

        public Builder setRestApi(@Nullable Input<String> restApi) {
            this.restApi = restApi;
            return this;
        }

        public Builder setSchema(@Nullable Input<String> schema) {
            this.schema = schema;
            return this;
        }

        public Builder setSchema(@Nullable String schema) {
            this.schema = Input.ofNullable(schema);
            return this;
        }
        public ModelState build() {
            return new ModelState(contentType, description, name, restApi, schema);
        }
    }
}
