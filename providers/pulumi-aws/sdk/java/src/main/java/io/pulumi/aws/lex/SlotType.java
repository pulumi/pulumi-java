// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.lex;

import io.pulumi.aws.Utilities;
import io.pulumi.aws.lex.SlotTypeArgs;
import io.pulumi.aws.lex.inputs.SlotTypeState;
import io.pulumi.aws.lex.outputs.SlotTypeEnumerationValue;
import io.pulumi.core.Input;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.OutputExport;
import io.pulumi.core.annotations.ResourceType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * Provides an Amazon Lex Slot Type resource. For more information see
 * [Amazon Lex: How It Works](https://docs.aws.amazon.com/lex/latest/dg/how-it-works.html)
 * 
 * ## Example Usage
 * 
 * ## Import
 * 
 * Slot types can be imported using their name.
 * 
 * ```sh
 *  $ pulumi import aws:lex/slotType:SlotType flower_types FlowerTypes
 * ```
 * 
 */
@ResourceType(type="aws:lex/slotType:SlotType")
public class SlotType extends io.pulumi.resources.CustomResource {
    /**
     * Checksum identifying the version of the slot type that was created. The checksum is
     * not included as an argument because the resource will add it automatically when updating the slot type.
     * 
     */
    @OutputExport(name="checksum", type=String.class, parameters={})
    private Output<String> checksum;

    /**
     * @return Checksum identifying the version of the slot type that was created. The checksum is
     * not included as an argument because the resource will add it automatically when updating the slot type.
     * 
     */
    public Output<String> getChecksum() {
        return this.checksum;
    }
    /**
     * Determines if a new slot type version is created when the initial resource is created and on each
     * update. Defaults to `false`.
     * 
     */
    @OutputExport(name="createVersion", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> createVersion;

    /**
     * @return Determines if a new slot type version is created when the initial resource is created and on each
     * update. Defaults to `false`.
     * 
     */
    public Output</* @Nullable */ Boolean> getCreateVersion() {
        return this.createVersion;
    }
    /**
     * The date when the slot type version was created.
     * 
     */
    @OutputExport(name="createdDate", type=String.class, parameters={})
    private Output<String> createdDate;

    /**
     * @return The date when the slot type version was created.
     * 
     */
    public Output<String> getCreatedDate() {
        return this.createdDate;
    }
    /**
     * A description of the slot type. Must be less than or equal to 200 characters in length.
     * 
     */
    @OutputExport(name="description", type=String.class, parameters={})
    private Output</* @Nullable */ String> description;

    /**
     * @return A description of the slot type. Must be less than or equal to 200 characters in length.
     * 
     */
    public Output</* @Nullable */ String> getDescription() {
        return this.description;
    }
    /**
     * A list of EnumerationValue objects that defines the values that
     * the slot type can take. Each value can have a list of synonyms, which are additional values that help
     * train the machine learning model about the values that it resolves for a slot. Attributes are
     * documented under enumeration_value.
     * 
     */
    @OutputExport(name="enumerationValues", type=List.class, parameters={SlotTypeEnumerationValue.class})
    private Output<List<SlotTypeEnumerationValue>> enumerationValues;

    /**
     * @return A list of EnumerationValue objects that defines the values that
     * the slot type can take. Each value can have a list of synonyms, which are additional values that help
     * train the machine learning model about the values that it resolves for a slot. Attributes are
     * documented under enumeration_value.
     * 
     */
    public Output<List<SlotTypeEnumerationValue>> getEnumerationValues() {
        return this.enumerationValues;
    }
    /**
     * The date when the `$LATEST` version of this slot type was updated.
     * 
     */
    @OutputExport(name="lastUpdatedDate", type=String.class, parameters={})
    private Output<String> lastUpdatedDate;

    /**
     * @return The date when the `$LATEST` version of this slot type was updated.
     * 
     */
    public Output<String> getLastUpdatedDate() {
        return this.lastUpdatedDate;
    }
    /**
     * The name of the slot type. The name is not case sensitive. Must be less than or equal to 100 characters in length.
     * 
     */
    @OutputExport(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The name of the slot type. The name is not case sensitive. Must be less than or equal to 100 characters in length.
     * 
     */
    public Output<String> getName() {
        return this.name;
    }
    /**
     * Determines the slot resolution strategy that Amazon Lex
     * uses to return slot type values. `ORIGINAL_VALUE` returns the value entered by the user if the user
     * value is similar to the slot value. `TOP_RESOLUTION` returns the first value in the resolution list
     * if there is a resolution list for the slot, otherwise null is returned. Defaults to `ORIGINAL_VALUE`.
     * 
     */
    @OutputExport(name="valueSelectionStrategy", type=String.class, parameters={})
    private Output</* @Nullable */ String> valueSelectionStrategy;

    /**
     * @return Determines the slot resolution strategy that Amazon Lex
     * uses to return slot type values. `ORIGINAL_VALUE` returns the value entered by the user if the user
     * value is similar to the slot value. `TOP_RESOLUTION` returns the first value in the resolution list
     * if there is a resolution list for the slot, otherwise null is returned. Defaults to `ORIGINAL_VALUE`.
     * 
     */
    public Output</* @Nullable */ String> getValueSelectionStrategy() {
        return this.valueSelectionStrategy;
    }
    /**
     * The version of the slot type.
     * 
     */
    @OutputExport(name="version", type=String.class, parameters={})
    private Output<String> version;

    /**
     * @return The version of the slot type.
     * 
     */
    public Output<String> getVersion() {
        return this.version;
    }

    public interface BuilderApplicator {
        public void apply(SlotTypeArgs.Builder a);
    }
    private static io.pulumi.aws.lex.SlotTypeArgs buildArgs(BuilderApplicator argsBuilder) {
        final var builder = io.pulumi.aws.lex.SlotTypeArgs.builder();
        argsBuilder.apply(builder);
        return builder.build();
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param argsBuilder A function that configures a passed builder.
     */
    public SlotType(String name, BuilderApplicator argsBuilder) {
        this(name, buildArgs(argsBuilder), null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public SlotType(String name) {
        this(name, SlotTypeArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public SlotType(String name, SlotTypeArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public SlotType(String name, SlotTypeArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:lex/slotType:SlotType", name, args == null ? SlotTypeArgs.Empty : args, makeResourceOptions(options, Input.empty()));
    }

    private SlotType(String name, Input<String> id, @Nullable SlotTypeState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:lex/slotType:SlotType", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Input<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .setVersion(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static SlotType get(String name, Input<String> id, @Nullable SlotTypeState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new SlotType(name, id, state, options);
    }
}
