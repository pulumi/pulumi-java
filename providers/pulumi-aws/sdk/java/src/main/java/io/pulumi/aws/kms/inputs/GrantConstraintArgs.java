// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.kms.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class GrantConstraintArgs extends io.pulumi.resources.ResourceArgs {

    public static final GrantConstraintArgs Empty = new GrantConstraintArgs();

    /**
     * A list of key-value pairs that must match the encryption context in subsequent cryptographic operation requests. The grant allows the operation only when the encryption context in the request is the same as the encryption context specified in this constraint. Conflicts with `encryption_context_subset`.
     * 
     */
    @InputImport(name="encryptionContextEquals")
    private final @Nullable Input<Map<String,String>> encryptionContextEquals;

    public Input<Map<String,String>> getEncryptionContextEquals() {
        return this.encryptionContextEquals == null ? Input.empty() : this.encryptionContextEquals;
    }

    /**
     * A list of key-value pairs that must be included in the encryption context of subsequent cryptographic operation requests. The grant allows the cryptographic operation only when the encryption context in the request includes the key-value pairs specified in this constraint, although it can include additional key-value pairs. Conflicts with `encryption_context_equals`.
     * 
     */
    @InputImport(name="encryptionContextSubset")
    private final @Nullable Input<Map<String,String>> encryptionContextSubset;

    public Input<Map<String,String>> getEncryptionContextSubset() {
        return this.encryptionContextSubset == null ? Input.empty() : this.encryptionContextSubset;
    }

    public GrantConstraintArgs(
        @Nullable Input<Map<String,String>> encryptionContextEquals,
        @Nullable Input<Map<String,String>> encryptionContextSubset) {
        this.encryptionContextEquals = encryptionContextEquals;
        this.encryptionContextSubset = encryptionContextSubset;
    }

    private GrantConstraintArgs() {
        this.encryptionContextEquals = Input.empty();
        this.encryptionContextSubset = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GrantConstraintArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<Map<String,String>> encryptionContextEquals;
        private @Nullable Input<Map<String,String>> encryptionContextSubset;

        public Builder() {
    	      // Empty
        }

        public Builder(GrantConstraintArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.encryptionContextEquals = defaults.encryptionContextEquals;
    	      this.encryptionContextSubset = defaults.encryptionContextSubset;
        }

        public Builder setEncryptionContextEquals(@Nullable Input<Map<String,String>> encryptionContextEquals) {
            this.encryptionContextEquals = encryptionContextEquals;
            return this;
        }

        public Builder setEncryptionContextEquals(@Nullable Map<String,String> encryptionContextEquals) {
            this.encryptionContextEquals = Input.ofNullable(encryptionContextEquals);
            return this;
        }

        public Builder setEncryptionContextSubset(@Nullable Input<Map<String,String>> encryptionContextSubset) {
            this.encryptionContextSubset = encryptionContextSubset;
            return this;
        }

        public Builder setEncryptionContextSubset(@Nullable Map<String,String> encryptionContextSubset) {
            this.encryptionContextSubset = Input.ofNullable(encryptionContextSubset);
            return this;
        }
        public GrantConstraintArgs build() {
            return new GrantConstraintArgs(encryptionContextEquals, encryptionContextSubset);
        }
    }
}
