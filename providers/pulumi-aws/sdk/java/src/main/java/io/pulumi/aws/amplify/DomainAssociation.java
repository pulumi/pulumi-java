// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.amplify;

import io.pulumi.aws.Utilities;
import io.pulumi.aws.amplify.DomainAssociationArgs;
import io.pulumi.aws.amplify.inputs.DomainAssociationState;
import io.pulumi.aws.amplify.outputs.DomainAssociationSubDomain;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Export;
import io.pulumi.core.annotations.ResourceType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * Provides an Amplify Domain Association resource.
 * 
 * {{% examples %}}
 * ## Example Usage
 * {{% example %}}
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 * 
 * const exampleApp = new aws.amplify.App("exampleApp", {customRules: [{
 *     source: "https://example.com",
 *     status: "302",
 *     target: "https://www.example.com",
 * }]});
 * const master = new aws.amplify.Branch("master", {
 *     appId: exampleApp.id,
 *     branchName: "master",
 * });
 * const exampleDomainAssociation = new aws.amplify.DomainAssociation("exampleDomainAssociation", {
 *     appId: exampleApp.id,
 *     domainName: "example.com",
 *     subDomains: [
 *         {
 *             branchName: master.branchName,
 *             prefix: "",
 *         },
 *         {
 *             branchName: master.branchName,
 *             prefix: "www",
 *         },
 *     ],
 * });
 * ```
 * ```python
 * import pulumi
 * import pulumi_aws as aws
 * 
 * example_app = aws.amplify.App("exampleApp", custom_rules=[aws.amplify.AppCustomRuleArgs(
 *     source="https://example.com",
 *     status="302",
 *     target="https://www.example.com",
 * )])
 * master = aws.amplify.Branch("master",
 *     app_id=example_app.id,
 *     branch_name="master")
 * example_domain_association = aws.amplify.DomainAssociation("exampleDomainAssociation",
 *     app_id=example_app.id,
 *     domain_name="example.com",
 *     sub_domains=[
 *         aws.amplify.DomainAssociationSubDomainArgs(
 *             branch_name=master.branch_name,
 *             prefix="",
 *         ),
 *         aws.amplify.DomainAssociationSubDomainArgs(
 *             branch_name=master.branch_name,
 *             prefix="www",
 *         ),
 *     ])
 * ```
 * ```csharp
 * using Pulumi;
 * using Aws = Pulumi.Aws;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var exampleApp = new Aws.Amplify.App("exampleApp", new Aws.Amplify.AppArgs
 *         {
 *             CustomRules = 
 *             {
 *                 new Aws.Amplify.Inputs.AppCustomRuleArgs
 *                 {
 *                     Source = "https://example.com",
 *                     Status = "302",
 *                     Target = "https://www.example.com",
 *                 },
 *             },
 *         });
 *         var master = new Aws.Amplify.Branch("master", new Aws.Amplify.BranchArgs
 *         {
 *             AppId = exampleApp.Id,
 *             BranchName = "master",
 *         });
 *         var exampleDomainAssociation = new Aws.Amplify.DomainAssociation("exampleDomainAssociation", new Aws.Amplify.DomainAssociationArgs
 *         {
 *             AppId = exampleApp.Id,
 *             DomainName = "example.com",
 *             SubDomains = 
 *             {
 *                 new Aws.Amplify.Inputs.DomainAssociationSubDomainArgs
 *                 {
 *                     BranchName = master.BranchName,
 *                     Prefix = "",
 *                 },
 *                 new Aws.Amplify.Inputs.DomainAssociationSubDomainArgs
 *                 {
 *                     BranchName = master.BranchName,
 *                     Prefix = "www",
 *                 },
 *             },
 *         });
 *     }
 * 
 * }
 * ```
 * ```go
 * package main
 * 
 * import (
 * 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/amplify"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		exampleApp, err := amplify.NewApp(ctx, "exampleApp", &amplify.AppArgs{
 * 			CustomRules: amplify.AppCustomRuleArray{
 * 				&amplify.AppCustomRuleArgs{
 * 					Source: pulumi.String("https://example.com"),
 * 					Status: pulumi.String("302"),
 * 					Target: pulumi.String("https://www.example.com"),
 * 				},
 * 			},
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		master, err := amplify.NewBranch(ctx, "master", &amplify.BranchArgs{
 * 			AppId:      exampleApp.ID(),
 * 			BranchName: pulumi.String("master"),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		_, err = amplify.NewDomainAssociation(ctx, "exampleDomainAssociation", &amplify.DomainAssociationArgs{
 * 			AppId:      exampleApp.ID(),
 * 			DomainName: pulumi.String("example.com"),
 * 			SubDomains: amplify.DomainAssociationSubDomainArray{
 * 				&amplify.DomainAssociationSubDomainArgs{
 * 					BranchName: master.BranchName,
 * 					Prefix:     pulumi.String(""),
 * 				},
 * 				&amplify.DomainAssociationSubDomainArgs{
 * 					BranchName: master.BranchName,
 * 					Prefix:     pulumi.String("www"),
 * 				},
 * 			},
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * ```
 * {{% /example %}}
 * {{% /examples %}}
 * 
 * ## Import
 * 
 * Amplify domain association can be imported using `app_id` and `domain_name`, e.g.,
 * 
 * ```sh
 *  $ pulumi import aws:amplify/domainAssociation:DomainAssociation app d2ypk4k47z8u6/example.com
 * ```
 * 
 *  
 */
@ResourceType(type="aws:amplify/domainAssociation:DomainAssociation")
public class DomainAssociation extends io.pulumi.resources.CustomResource {
    /**
     * The unique ID for an Amplify app.
     * 
     */
    @Export(name="appId", type=String.class, parameters={})
    private Output<String> appId;

    /**
     * @return The unique ID for an Amplify app.
     * 
     */
    public Output<String> getAppId() {
        return this.appId;
    }
    /**
     * The Amazon Resource Name (ARN) for the domain association.
     * 
     */
    @Export(name="arn", type=String.class, parameters={})
    private Output<String> arn;

    /**
     * @return The Amazon Resource Name (ARN) for the domain association.
     * 
     */
    public Output<String> getArn() {
        return this.arn;
    }
    /**
     * The DNS record for certificate verification.
     * 
     */
    @Export(name="certificateVerificationDnsRecord", type=String.class, parameters={})
    private Output<String> certificateVerificationDnsRecord;

    /**
     * @return The DNS record for certificate verification.
     * 
     */
    public Output<String> getCertificateVerificationDnsRecord() {
        return this.certificateVerificationDnsRecord;
    }
    /**
     * The domain name for the domain association.
     * 
     */
    @Export(name="domainName", type=String.class, parameters={})
    private Output<String> domainName;

    /**
     * @return The domain name for the domain association.
     * 
     */
    public Output<String> getDomainName() {
        return this.domainName;
    }
    /**
     * The setting for the subdomain. Documented below.
     * 
     */
    @Export(name="subDomains", type=List.class, parameters={DomainAssociationSubDomain.class})
    private Output<List<DomainAssociationSubDomain>> subDomains;

    /**
     * @return The setting for the subdomain. Documented below.
     * 
     */
    public Output<List<DomainAssociationSubDomain>> getSubDomains() {
        return this.subDomains;
    }
    /**
     * If enabled, the resource will wait for the domain association status to change to `PENDING_DEPLOYMENT` or `AVAILABLE`. Setting this to `false` will skip the process. Default: `true`.
     * 
     */
    @Export(name="waitForVerification", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> waitForVerification;

    /**
     * @return If enabled, the resource will wait for the domain association status to change to `PENDING_DEPLOYMENT` or `AVAILABLE`. Setting this to `false` will skip the process. Default: `true`.
     * 
     */
    public Output</* @Nullable */ Boolean> getWaitForVerification() {
        return this.waitForVerification;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public DomainAssociation(String name) {
        this(name, DomainAssociationArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public DomainAssociation(String name, DomainAssociationArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public DomainAssociation(String name, DomainAssociationArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:amplify/domainAssociation:DomainAssociation", name, args == null ? DomainAssociationArgs.Empty : args, makeResourceOptions(options, Output.empty()));
    }

    private DomainAssociation(String name, Output<String> id, @Nullable DomainAssociationState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:amplify/domainAssociation:DomainAssociation", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static DomainAssociation get(String name, Output<String> id, @Nullable DomainAssociationState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new DomainAssociation(name, id, state, options);
    }
}
