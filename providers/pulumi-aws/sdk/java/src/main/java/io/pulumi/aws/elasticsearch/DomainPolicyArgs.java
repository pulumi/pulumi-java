// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.elasticsearch;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.String;
import java.util.Objects;


public final class DomainPolicyArgs extends io.pulumi.resources.ResourceArgs {

    public static final DomainPolicyArgs Empty = new DomainPolicyArgs();

    /**
     * IAM policy document specifying the access policies for the domain
     * 
     */
    @InputImport(name="accessPolicies", required=true)
    private final Input<String> accessPolicies;

    public Input<String> getAccessPolicies() {
        return this.accessPolicies;
    }

    /**
     * Name of the domain.
     * 
     */
    @InputImport(name="domainName", required=true)
    private final Input<String> domainName;

    public Input<String> getDomainName() {
        return this.domainName;
    }

    public DomainPolicyArgs(
        Input<String> accessPolicies,
        Input<String> domainName) {
        this.accessPolicies = Objects.requireNonNull(accessPolicies, "expected parameter 'accessPolicies' to be non-null");
        this.domainName = Objects.requireNonNull(domainName, "expected parameter 'domainName' to be non-null");
    }

    private DomainPolicyArgs() {
        this.accessPolicies = Input.empty();
        this.domainName = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DomainPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<String> accessPolicies;
        private Input<String> domainName;

        public Builder() {
    	      // Empty
        }

        public Builder(DomainPolicyArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessPolicies = defaults.accessPolicies;
    	      this.domainName = defaults.domainName;
        }

        public Builder setAccessPolicies(Input<String> accessPolicies) {
            this.accessPolicies = Objects.requireNonNull(accessPolicies);
            return this;
        }

        public Builder setDomainName(Input<String> domainName) {
            this.domainName = Objects.requireNonNull(domainName);
            return this;
        }

        public Builder setDomainName(String domainName) {
            this.domainName = Input.of(Objects.requireNonNull(domainName));
            return this;
        }
        public DomainPolicyArgs build() {
            return new DomainPolicyArgs(accessPolicies, domainName);
        }
    }
}
