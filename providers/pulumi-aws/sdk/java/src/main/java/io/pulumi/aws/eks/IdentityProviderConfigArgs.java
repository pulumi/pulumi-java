// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.eks;

import io.pulumi.aws.eks.inputs.IdentityProviderConfigOidcArgs;
import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class IdentityProviderConfigArgs extends io.pulumi.resources.ResourceArgs {

    public static final IdentityProviderConfigArgs Empty = new IdentityProviderConfigArgs();

    /**
     * Name of the EKS Cluster.
     * 
     */
    @InputImport(name="clusterName", required=true)
    private final Input<String> clusterName;

    public Input<String> getClusterName() {
        return this.clusterName;
    }

    /**
     * Nested attribute containing [OpenID Connect](https://openid.net/connect/) identity provider information for the cluster. Detailed below.
     * 
     */
    @InputImport(name="oidc", required=true)
    private final Input<IdentityProviderConfigOidcArgs> oidc;

    public Input<IdentityProviderConfigOidcArgs> getOidc() {
        return this.oidc;
    }

    /**
     * Key-value map of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @InputImport(name="tags")
    private final @Nullable Input<Map<String,String>> tags;

    public Input<Map<String,String>> getTags() {
        return this.tags == null ? Input.empty() : this.tags;
    }

    public IdentityProviderConfigArgs(
        Input<String> clusterName,
        Input<IdentityProviderConfigOidcArgs> oidc,
        @Nullable Input<Map<String,String>> tags) {
        this.clusterName = Objects.requireNonNull(clusterName, "expected parameter 'clusterName' to be non-null");
        this.oidc = Objects.requireNonNull(oidc, "expected parameter 'oidc' to be non-null");
        this.tags = tags;
    }

    private IdentityProviderConfigArgs() {
        this.clusterName = Input.empty();
        this.oidc = Input.empty();
        this.tags = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(IdentityProviderConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<String> clusterName;
        private Input<IdentityProviderConfigOidcArgs> oidc;
        private @Nullable Input<Map<String,String>> tags;

        public Builder() {
    	      // Empty
        }

        public Builder(IdentityProviderConfigArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.clusterName = defaults.clusterName;
    	      this.oidc = defaults.oidc;
    	      this.tags = defaults.tags;
        }

        public Builder setClusterName(Input<String> clusterName) {
            this.clusterName = Objects.requireNonNull(clusterName);
            return this;
        }

        public Builder setClusterName(String clusterName) {
            this.clusterName = Input.of(Objects.requireNonNull(clusterName));
            return this;
        }

        public Builder setOidc(Input<IdentityProviderConfigOidcArgs> oidc) {
            this.oidc = Objects.requireNonNull(oidc);
            return this;
        }

        public Builder setOidc(IdentityProviderConfigOidcArgs oidc) {
            this.oidc = Input.of(Objects.requireNonNull(oidc));
            return this;
        }

        public Builder setTags(@Nullable Input<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }

        public Builder setTags(@Nullable Map<String,String> tags) {
            this.tags = Input.ofNullable(tags);
            return this;
        }
        public IdentityProviderConfigArgs build() {
            return new IdentityProviderConfigArgs(clusterName, oidc, tags);
        }
    }
}
