// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.glue.inputs;

import io.pulumi.aws.glue.inputs.TriggerActionNotificationPropertyGetArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class TriggerActionGetArgs extends io.pulumi.resources.ResourceArgs {

    public static final TriggerActionGetArgs Empty = new TriggerActionGetArgs();

    /**
     * Arguments to be passed to the job. You can specify arguments here that your own job-execution script consumes, as well as arguments that AWS Glue itself consumes.
     * 
     */
    @Import(name="arguments")
      private final @Nullable Output<Map<String,String>> arguments;

    public Output<Map<String,String>> arguments() {
        return this.arguments == null ? Codegen.empty() : this.arguments;
    }

    /**
     * The name of the crawler to watch. If this is specified, `crawl_state` must also be specified. Conflicts with `job_name`.
     * 
     */
    @Import(name="crawlerName")
      private final @Nullable Output<String> crawlerName;

    public Output<String> crawlerName() {
        return this.crawlerName == null ? Codegen.empty() : this.crawlerName;
    }

    /**
     * The name of the job to watch. If this is specified, `state` must also be specified. Conflicts with `crawler_name`.
     * 
     */
    @Import(name="jobName")
      private final @Nullable Output<String> jobName;

    public Output<String> jobName() {
        return this.jobName == null ? Codegen.empty() : this.jobName;
    }

    /**
     * Specifies configuration properties of a job run notification. See Notification Property details below.
     * 
     */
    @Import(name="notificationProperty")
      private final @Nullable Output<TriggerActionNotificationPropertyGetArgs> notificationProperty;

    public Output<TriggerActionNotificationPropertyGetArgs> notificationProperty() {
        return this.notificationProperty == null ? Codegen.empty() : this.notificationProperty;
    }

    /**
     * The name of the Security Configuration structure to be used with this action.
     * 
     */
    @Import(name="securityConfiguration")
      private final @Nullable Output<String> securityConfiguration;

    public Output<String> securityConfiguration() {
        return this.securityConfiguration == null ? Codegen.empty() : this.securityConfiguration;
    }

    /**
     * The job run timeout in minutes. It overrides the timeout value of the job.
     * 
     */
    @Import(name="timeout")
      private final @Nullable Output<Integer> timeout;

    public Output<Integer> timeout() {
        return this.timeout == null ? Codegen.empty() : this.timeout;
    }

    public TriggerActionGetArgs(
        @Nullable Output<Map<String,String>> arguments,
        @Nullable Output<String> crawlerName,
        @Nullable Output<String> jobName,
        @Nullable Output<TriggerActionNotificationPropertyGetArgs> notificationProperty,
        @Nullable Output<String> securityConfiguration,
        @Nullable Output<Integer> timeout) {
        this.arguments = arguments;
        this.crawlerName = crawlerName;
        this.jobName = jobName;
        this.notificationProperty = notificationProperty;
        this.securityConfiguration = securityConfiguration;
        this.timeout = timeout;
    }

    private TriggerActionGetArgs() {
        this.arguments = Codegen.empty();
        this.crawlerName = Codegen.empty();
        this.jobName = Codegen.empty();
        this.notificationProperty = Codegen.empty();
        this.securityConfiguration = Codegen.empty();
        this.timeout = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TriggerActionGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<Map<String,String>> arguments;
        private @Nullable Output<String> crawlerName;
        private @Nullable Output<String> jobName;
        private @Nullable Output<TriggerActionNotificationPropertyGetArgs> notificationProperty;
        private @Nullable Output<String> securityConfiguration;
        private @Nullable Output<Integer> timeout;

        public Builder() {
    	      // Empty
        }

        public Builder(TriggerActionGetArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arguments = defaults.arguments;
    	      this.crawlerName = defaults.crawlerName;
    	      this.jobName = defaults.jobName;
    	      this.notificationProperty = defaults.notificationProperty;
    	      this.securityConfiguration = defaults.securityConfiguration;
    	      this.timeout = defaults.timeout;
        }

        public Builder arguments(@Nullable Output<Map<String,String>> arguments) {
            this.arguments = arguments;
            return this;
        }
        public Builder arguments(@Nullable Map<String,String> arguments) {
            this.arguments = Codegen.ofNullable(arguments);
            return this;
        }
        public Builder crawlerName(@Nullable Output<String> crawlerName) {
            this.crawlerName = crawlerName;
            return this;
        }
        public Builder crawlerName(@Nullable String crawlerName) {
            this.crawlerName = Codegen.ofNullable(crawlerName);
            return this;
        }
        public Builder jobName(@Nullable Output<String> jobName) {
            this.jobName = jobName;
            return this;
        }
        public Builder jobName(@Nullable String jobName) {
            this.jobName = Codegen.ofNullable(jobName);
            return this;
        }
        public Builder notificationProperty(@Nullable Output<TriggerActionNotificationPropertyGetArgs> notificationProperty) {
            this.notificationProperty = notificationProperty;
            return this;
        }
        public Builder notificationProperty(@Nullable TriggerActionNotificationPropertyGetArgs notificationProperty) {
            this.notificationProperty = Codegen.ofNullable(notificationProperty);
            return this;
        }
        public Builder securityConfiguration(@Nullable Output<String> securityConfiguration) {
            this.securityConfiguration = securityConfiguration;
            return this;
        }
        public Builder securityConfiguration(@Nullable String securityConfiguration) {
            this.securityConfiguration = Codegen.ofNullable(securityConfiguration);
            return this;
        }
        public Builder timeout(@Nullable Output<Integer> timeout) {
            this.timeout = timeout;
            return this;
        }
        public Builder timeout(@Nullable Integer timeout) {
            this.timeout = Codegen.ofNullable(timeout);
            return this;
        }        public TriggerActionGetArgs build() {
            return new TriggerActionGetArgs(arguments, crawlerName, jobName, notificationProperty, securityConfiguration, timeout);
        }
    }
}
