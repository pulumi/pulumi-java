// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.pinpoint.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class EmailChannelState extends io.pulumi.resources.ResourceArgs {

    public static final EmailChannelState Empty = new EmailChannelState();

    /**
     * The application ID.
     * 
     */
    @InputImport(name="applicationId")
    private final @Nullable Input<String> applicationId;

    public Input<String> getApplicationId() {
        return this.applicationId == null ? Input.empty() : this.applicationId;
    }

    /**
     * The ARN of the Amazon SES configuration set that you want to apply to messages that you send through the channel.
     * 
     */
    @InputImport(name="configurationSet")
    private final @Nullable Input<String> configurationSet;

    public Input<String> getConfigurationSet() {
        return this.configurationSet == null ? Input.empty() : this.configurationSet;
    }

    /**
     * Whether the channel is enabled or disabled. Defaults to `true`.
     * 
     */
    @InputImport(name="enabled")
    private final @Nullable Input<Boolean> enabled;

    public Input<Boolean> getEnabled() {
        return this.enabled == null ? Input.empty() : this.enabled;
    }

    /**
     * The email address used to send emails from. You can use email only (`user@example.com`) or friendly address (`User <user@example.com>`). This field comply with [RFC 5322](https://www.ietf.org/rfc/rfc5322.txt).
     * 
     */
    @InputImport(name="fromAddress")
    private final @Nullable Input<String> fromAddress;

    public Input<String> getFromAddress() {
        return this.fromAddress == null ? Input.empty() : this.fromAddress;
    }

    /**
     * The ARN of an identity verified with SES.
     * 
     */
    @InputImport(name="identity")
    private final @Nullable Input<String> identity;

    public Input<String> getIdentity() {
        return this.identity == null ? Input.empty() : this.identity;
    }

    /**
     * Messages per second that can be sent.
     * 
     */
    @InputImport(name="messagesPerSecond")
    private final @Nullable Input<Integer> messagesPerSecond;

    public Input<Integer> getMessagesPerSecond() {
        return this.messagesPerSecond == null ? Input.empty() : this.messagesPerSecond;
    }

    /**
     * The ARN of an IAM Role used to submit events to Mobile Analytics' event ingestion service.
     * 
     */
    @InputImport(name="roleArn")
    private final @Nullable Input<String> roleArn;

    public Input<String> getRoleArn() {
        return this.roleArn == null ? Input.empty() : this.roleArn;
    }

    public EmailChannelState(
        @Nullable Input<String> applicationId,
        @Nullable Input<String> configurationSet,
        @Nullable Input<Boolean> enabled,
        @Nullable Input<String> fromAddress,
        @Nullable Input<String> identity,
        @Nullable Input<Integer> messagesPerSecond,
        @Nullable Input<String> roleArn) {
        this.applicationId = applicationId;
        this.configurationSet = configurationSet;
        this.enabled = enabled;
        this.fromAddress = fromAddress;
        this.identity = identity;
        this.messagesPerSecond = messagesPerSecond;
        this.roleArn = roleArn;
    }

    private EmailChannelState() {
        this.applicationId = Input.empty();
        this.configurationSet = Input.empty();
        this.enabled = Input.empty();
        this.fromAddress = Input.empty();
        this.identity = Input.empty();
        this.messagesPerSecond = Input.empty();
        this.roleArn = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(EmailChannelState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> applicationId;
        private @Nullable Input<String> configurationSet;
        private @Nullable Input<Boolean> enabled;
        private @Nullable Input<String> fromAddress;
        private @Nullable Input<String> identity;
        private @Nullable Input<Integer> messagesPerSecond;
        private @Nullable Input<String> roleArn;

        public Builder() {
    	      // Empty
        }

        public Builder(EmailChannelState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.applicationId = defaults.applicationId;
    	      this.configurationSet = defaults.configurationSet;
    	      this.enabled = defaults.enabled;
    	      this.fromAddress = defaults.fromAddress;
    	      this.identity = defaults.identity;
    	      this.messagesPerSecond = defaults.messagesPerSecond;
    	      this.roleArn = defaults.roleArn;
        }

        public Builder setApplicationId(@Nullable Input<String> applicationId) {
            this.applicationId = applicationId;
            return this;
        }

        public Builder setApplicationId(@Nullable String applicationId) {
            this.applicationId = Input.ofNullable(applicationId);
            return this;
        }

        public Builder setConfigurationSet(@Nullable Input<String> configurationSet) {
            this.configurationSet = configurationSet;
            return this;
        }

        public Builder setConfigurationSet(@Nullable String configurationSet) {
            this.configurationSet = Input.ofNullable(configurationSet);
            return this;
        }

        public Builder setEnabled(@Nullable Input<Boolean> enabled) {
            this.enabled = enabled;
            return this;
        }

        public Builder setEnabled(@Nullable Boolean enabled) {
            this.enabled = Input.ofNullable(enabled);
            return this;
        }

        public Builder setFromAddress(@Nullable Input<String> fromAddress) {
            this.fromAddress = fromAddress;
            return this;
        }

        public Builder setFromAddress(@Nullable String fromAddress) {
            this.fromAddress = Input.ofNullable(fromAddress);
            return this;
        }

        public Builder setIdentity(@Nullable Input<String> identity) {
            this.identity = identity;
            return this;
        }

        public Builder setIdentity(@Nullable String identity) {
            this.identity = Input.ofNullable(identity);
            return this;
        }

        public Builder setMessagesPerSecond(@Nullable Input<Integer> messagesPerSecond) {
            this.messagesPerSecond = messagesPerSecond;
            return this;
        }

        public Builder setMessagesPerSecond(@Nullable Integer messagesPerSecond) {
            this.messagesPerSecond = Input.ofNullable(messagesPerSecond);
            return this;
        }

        public Builder setRoleArn(@Nullable Input<String> roleArn) {
            this.roleArn = roleArn;
            return this;
        }

        public Builder setRoleArn(@Nullable String roleArn) {
            this.roleArn = Input.ofNullable(roleArn);
            return this;
        }
        public EmailChannelState build() {
            return new EmailChannelState(applicationId, configurationSet, enabled, fromAddress, identity, messagesPerSecond, roleArn);
        }
    }
}
