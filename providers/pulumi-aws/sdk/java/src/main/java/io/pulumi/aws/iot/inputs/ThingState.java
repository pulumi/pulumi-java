// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.iot.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ThingState extends io.pulumi.resources.ResourceArgs {

    public static final ThingState Empty = new ThingState();

    /**
     * The ARN of the thing.
     * 
     */
    @InputImport(name="arn")
      private final @Nullable Input<String> arn;

    public Input<String> getArn() {
        return this.arn == null ? Input.empty() : this.arn;
    }

    /**
     * Map of attributes of the thing.
     * 
     */
    @InputImport(name="attributes")
      private final @Nullable Input<Map<String,String>> attributes;

    public Input<Map<String,String>> getAttributes() {
        return this.attributes == null ? Input.empty() : this.attributes;
    }

    /**
     * The default client ID.
     * 
     */
    @InputImport(name="defaultClientId")
      private final @Nullable Input<String> defaultClientId;

    public Input<String> getDefaultClientId() {
        return this.defaultClientId == null ? Input.empty() : this.defaultClientId;
    }

    /**
     * The name of the thing.
     * 
     */
    @InputImport(name="name")
      private final @Nullable Input<String> name;

    public Input<String> getName() {
        return this.name == null ? Input.empty() : this.name;
    }

    /**
     * The thing type name.
     * 
     */
    @InputImport(name="thingTypeName")
      private final @Nullable Input<String> thingTypeName;

    public Input<String> getThingTypeName() {
        return this.thingTypeName == null ? Input.empty() : this.thingTypeName;
    }

    /**
     * The current version of the thing record in the registry.
     * 
     */
    @InputImport(name="version")
      private final @Nullable Input<Integer> version;

    public Input<Integer> getVersion() {
        return this.version == null ? Input.empty() : this.version;
    }

    public ThingState(
        @Nullable Input<String> arn,
        @Nullable Input<Map<String,String>> attributes,
        @Nullable Input<String> defaultClientId,
        @Nullable Input<String> name,
        @Nullable Input<String> thingTypeName,
        @Nullable Input<Integer> version) {
        this.arn = arn;
        this.attributes = attributes;
        this.defaultClientId = defaultClientId;
        this.name = name;
        this.thingTypeName = thingTypeName;
        this.version = version;
    }

    private ThingState() {
        this.arn = Input.empty();
        this.attributes = Input.empty();
        this.defaultClientId = Input.empty();
        this.name = Input.empty();
        this.thingTypeName = Input.empty();
        this.version = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ThingState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> arn;
        private @Nullable Input<Map<String,String>> attributes;
        private @Nullable Input<String> defaultClientId;
        private @Nullable Input<String> name;
        private @Nullable Input<String> thingTypeName;
        private @Nullable Input<Integer> version;

        public Builder() {
    	      // Empty
        }

        public Builder(ThingState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.attributes = defaults.attributes;
    	      this.defaultClientId = defaults.defaultClientId;
    	      this.name = defaults.name;
    	      this.thingTypeName = defaults.thingTypeName;
    	      this.version = defaults.version;
        }

        public Builder setArn(@Nullable Input<String> arn) {
            this.arn = arn;
            return this;
        }

        public Builder setArn(@Nullable String arn) {
            this.arn = Input.ofNullable(arn);
            return this;
        }

        public Builder setAttributes(@Nullable Input<Map<String,String>> attributes) {
            this.attributes = attributes;
            return this;
        }

        public Builder setAttributes(@Nullable Map<String,String> attributes) {
            this.attributes = Input.ofNullable(attributes);
            return this;
        }

        public Builder setDefaultClientId(@Nullable Input<String> defaultClientId) {
            this.defaultClientId = defaultClientId;
            return this;
        }

        public Builder setDefaultClientId(@Nullable String defaultClientId) {
            this.defaultClientId = Input.ofNullable(defaultClientId);
            return this;
        }

        public Builder setName(@Nullable Input<String> name) {
            this.name = name;
            return this;
        }

        public Builder setName(@Nullable String name) {
            this.name = Input.ofNullable(name);
            return this;
        }

        public Builder setThingTypeName(@Nullable Input<String> thingTypeName) {
            this.thingTypeName = thingTypeName;
            return this;
        }

        public Builder setThingTypeName(@Nullable String thingTypeName) {
            this.thingTypeName = Input.ofNullable(thingTypeName);
            return this;
        }

        public Builder setVersion(@Nullable Input<Integer> version) {
            this.version = version;
            return this;
        }

        public Builder setVersion(@Nullable Integer version) {
            this.version = Input.ofNullable(version);
            return this;
        }
        public ThingState build() {
            return new ThingState(arn, attributes, defaultClientId, name, thingTypeName, version);
        }
    }
}
