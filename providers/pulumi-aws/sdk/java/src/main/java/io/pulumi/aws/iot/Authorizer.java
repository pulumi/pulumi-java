// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.iot;

import io.pulumi.aws.Utilities;
import io.pulumi.aws.iot.AuthorizerArgs;
import io.pulumi.aws.iot.inputs.AuthorizerState;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Export;
import io.pulumi.core.annotations.ResourceType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;

/**
 * Creates and manages an AWS IoT Authorizer.
 * 
 * {{% examples %}}
 * ## Example Usage
 * {{% example %}}
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 * import * from "fs";
 * 
 * const example = new aws.iot.Authorizer("example", {
 *     authorizerFunctionArn: aws_lambda_function.example.arn,
 *     signingDisabled: false,
 *     status: "ACTIVE",
 *     tokenKeyName: "Token-Header",
 *     tokenSigningPublicKeys: {
 *         Key1: fs.readFileSync("test-fixtures/iot-authorizer-signing-key.pem"),
 *     },
 * });
 * ```
 * ```python
 * import pulumi
 * import pulumi_aws as aws
 * 
 * example = aws.iot.Authorizer("example",
 *     authorizer_function_arn=aws_lambda_function["example"]["arn"],
 *     signing_disabled=False,
 *     status="ACTIVE",
 *     token_key_name="Token-Header",
 *     token_signing_public_keys={
 *         "Key1": (lambda path: open(path).read())("test-fixtures/iot-authorizer-signing-key.pem"),
 *     })
 * ```
 * ```csharp
 * using System.IO;
 * using Pulumi;
 * using Aws = Pulumi.Aws;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var example = new Aws.Iot.Authorizer("example", new Aws.Iot.AuthorizerArgs
 *         {
 *             AuthorizerFunctionArn = aws_lambda_function.Example.Arn,
 *             SigningDisabled = false,
 *             Status = "ACTIVE",
 *             TokenKeyName = "Token-Header",
 *             TokenSigningPublicKeys = 
 *             {
 *                 { "Key1", File.ReadAllText("test-fixtures/iot-authorizer-signing-key.pem") },
 *             },
 *         });
 *     }
 * 
 * }
 * ```
 * ```go
 * package main
 * 
 * import (
 * 	"io/ioutil"
 * 
 * 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/iot"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func readFileOrPanic(path string) pulumi.StringPtrInput {
 * 	data, err := ioutil.ReadFile(path)
 * 	if err != nil {
 * 		panic(err.Error())
 * 	}
 * 	return pulumi.String(string(data))
 * }
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		_, err := iot.NewAuthorizer(ctx, "example", &iot.AuthorizerArgs{
 * 			AuthorizerFunctionArn: pulumi.Any(aws_lambda_function.Example.Arn),
 * 			SigningDisabled:       pulumi.Bool(false),
 * 			Status:                pulumi.String("ACTIVE"),
 * 			TokenKeyName:          pulumi.String("Token-Header"),
 * 			TokenSigningPublicKeys: pulumi.StringMap{
 * 				"Key1": readFileOrPanic("test-fixtures/iot-authorizer-signing-key.pem"),
 * 			},
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * ```
 * {{% /example %}}
 * {{% /examples %}}
 * 
 * ## Import
 * 
 * IOT Authorizers can be imported using the name, e.g.,
 * 
 * ```sh
 *  $ pulumi import aws:iot/authorizer:Authorizer example example
 * ```
 * 
 *  
 */
@ResourceType(type="aws:iot/authorizer:Authorizer")
public class Authorizer extends io.pulumi.resources.CustomResource {
    /**
     * The ARN of the authorizer.
     * 
     */
    @Export(name="arn", type=String.class, parameters={})
    private Output<String> arn;

    /**
     * @return The ARN of the authorizer.
     * 
     */
    public Output<String> getArn() {
        return this.arn;
    }
    /**
     * The ARN of the authorizer's Lambda function.
     * 
     */
    @Export(name="authorizerFunctionArn", type=String.class, parameters={})
    private Output<String> authorizerFunctionArn;

    /**
     * @return The ARN of the authorizer's Lambda function.
     * 
     */
    public Output<String> getAuthorizerFunctionArn() {
        return this.authorizerFunctionArn;
    }
    /**
     * The name of the authorizer.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The name of the authorizer.
     * 
     */
    public Output<String> getName() {
        return this.name;
    }
    /**
     * Specifies whether AWS IoT validates the token signature in an authorization request. Default: `false`.
     * 
     */
    @Export(name="signingDisabled", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> signingDisabled;

    /**
     * @return Specifies whether AWS IoT validates the token signature in an authorization request. Default: `false`.
     * 
     */
    public Output</* @Nullable */ Boolean> getSigningDisabled() {
        return this.signingDisabled;
    }
    /**
     * The status of Authorizer request at creation. Valid values: `ACTIVE`, `INACTIVE`. Default: `ACTIVE`.
     * 
     */
    @Export(name="status", type=String.class, parameters={})
    private Output</* @Nullable */ String> status;

    /**
     * @return The status of Authorizer request at creation. Valid values: `ACTIVE`, `INACTIVE`. Default: `ACTIVE`.
     * 
     */
    public Output</* @Nullable */ String> getStatus() {
        return this.status;
    }
    /**
     * The name of the token key used to extract the token from the HTTP headers. This value is required if signing is enabled in your authorizer.
     * 
     */
    @Export(name="tokenKeyName", type=String.class, parameters={})
    private Output</* @Nullable */ String> tokenKeyName;

    /**
     * @return The name of the token key used to extract the token from the HTTP headers. This value is required if signing is enabled in your authorizer.
     * 
     */
    public Output</* @Nullable */ String> getTokenKeyName() {
        return this.tokenKeyName;
    }
    /**
     * The public keys used to verify the digital signature returned by your custom authentication service. This value is required if signing is enabled in your authorizer.
     * 
     */
    @Export(name="tokenSigningPublicKeys", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> tokenSigningPublicKeys;

    /**
     * @return The public keys used to verify the digital signature returned by your custom authentication service. This value is required if signing is enabled in your authorizer.
     * 
     */
    public Output</* @Nullable */ Map<String,String>> getTokenSigningPublicKeys() {
        return this.tokenSigningPublicKeys;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Authorizer(String name) {
        this(name, AuthorizerArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Authorizer(String name, AuthorizerArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Authorizer(String name, AuthorizerArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:iot/authorizer:Authorizer", name, args == null ? AuthorizerArgs.Empty : args, makeResourceOptions(options, Output.empty()));
    }

    private Authorizer(String name, Output<String> id, @Nullable AuthorizerState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:iot/authorizer:Authorizer", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Authorizer get(String name, Output<String> id, @Nullable AuthorizerState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new Authorizer(name, id, state, options);
    }
}
