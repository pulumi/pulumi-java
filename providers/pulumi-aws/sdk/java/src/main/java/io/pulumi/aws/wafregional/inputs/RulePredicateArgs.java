// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.wafregional.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;


public final class RulePredicateArgs extends io.pulumi.resources.ResourceArgs {

    public static final RulePredicateArgs Empty = new RulePredicateArgs();

    @InputImport(name="dataId", required=true)
      private final Input<String> dataId;

    public Input<String> getDataId() {
        return this.dataId;
    }

    @InputImport(name="negated", required=true)
      private final Input<Boolean> negated;

    public Input<Boolean> getNegated() {
        return this.negated;
    }

    @InputImport(name="type", required=true)
      private final Input<String> type;

    public Input<String> getType() {
        return this.type;
    }

    public RulePredicateArgs(
        Input<String> dataId,
        Input<Boolean> negated,
        Input<String> type) {
        this.dataId = Objects.requireNonNull(dataId, "expected parameter 'dataId' to be non-null");
        this.negated = Objects.requireNonNull(negated, "expected parameter 'negated' to be non-null");
        this.type = Objects.requireNonNull(type, "expected parameter 'type' to be non-null");
    }

    private RulePredicateArgs() {
        this.dataId = Input.empty();
        this.negated = Input.empty();
        this.type = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RulePredicateArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<String> dataId;
        private Input<Boolean> negated;
        private Input<String> type;

        public Builder() {
    	      // Empty
        }

        public Builder(RulePredicateArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dataId = defaults.dataId;
    	      this.negated = defaults.negated;
    	      this.type = defaults.type;
        }

        public Builder setDataId(Input<String> dataId) {
            this.dataId = Objects.requireNonNull(dataId);
            return this;
        }

        public Builder setDataId(String dataId) {
            this.dataId = Input.of(Objects.requireNonNull(dataId));
            return this;
        }

        public Builder setNegated(Input<Boolean> negated) {
            this.negated = Objects.requireNonNull(negated);
            return this;
        }

        public Builder setNegated(Boolean negated) {
            this.negated = Input.of(Objects.requireNonNull(negated));
            return this;
        }

        public Builder setType(Input<String> type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }

        public Builder setType(String type) {
            this.type = Input.of(Objects.requireNonNull(type));
            return this;
        }
        public RulePredicateArgs build() {
            return new RulePredicateArgs(dataId, negated, type);
        }
    }
}
