// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.ssm;

import io.pulumi.aws.Utilities;
import io.pulumi.aws.ssm.DocumentArgs;
import io.pulumi.aws.ssm.inputs.DocumentState;
import io.pulumi.aws.ssm.outputs.DocumentAttachmentsSource;
import io.pulumi.aws.ssm.outputs.DocumentParameter;
import io.pulumi.core.Input;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.OutputExport;
import io.pulumi.core.annotations.ResourceType;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;

/**
 * Provides an SSM Document resource
 * 
 * > **NOTE on updating SSM documents:** Only documents with a schema version of 2.0
 * or greater can update their content once created, see [SSM Schema Features](http://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-ssm-docs.html#document-schemas-features). To update a document with an older schema version you must recreate the resource. Not all document types support a schema version of 2.0 or greater. Refer to [SSM document schema features and examples](https://docs.aws.amazon.com/systems-manager/latest/userguide/document-schemas-features.html) for information about which schema versions are supported for the respective `document_type`.
 * 
 * ## Example Usage
 * ## Permissions
 * 
 * The permissions attribute specifies how you want to share the document. If you share a document privately,
 * you must specify the AWS user account IDs for those people who can use the document. If you share a document
 * publicly, you must specify All as the account ID.
 * 
 * The permissions mapping supports the following:
 * 
 * * `type` - The permission type for the document. The permission type can be `Share`.
 * * `account_ids` - The AWS user accounts that should have access to the document. The account IDs can either be a group of account IDs or `All`.
 * 
 * ## Import
 * 
 * SSM Documents can be imported using the name, e.g.,
 * 
 * ```sh
 *  $ pulumi import aws:ssm/document:Document example example
 * ```
 * 
 *  The `attachments_source` argument does not have an SSM API method for reading the attachment information detail after creation. If the argument is set in the provider configuration on an imported resource, this provider will always show a difference. To workaround this behavior, either omit the argument from the configuration or use [`ignoreChanges`](https://www.pulumi.com/docs/intro/concepts/programming-model/#ignorechanges) to hide the difference, e.g. terraform resource "aws_ssm_document" "test" {
 * 
 *  name
 * 
 * = "test_document"
 * 
 *  document_type = "Package"
 * 
 *  attachments_source {
 * 
 *  key
 * 
 * = "SourceUrl"
 * 
 *  values = ["s3://${aws_s3_bucket.object_bucket.bucket}/test.zip"]
 * 
 *  }
 * 
 * # There is no AWS SSM API for reading attachments_source info directly
 * 
 *  lifecycle {
 * 
 *  ignore_changes = [attachments_source]
 * 
 *  } }
 * 
 */
@ResourceType(type="aws:ssm/document:Document")
public class Document extends io.pulumi.resources.CustomResource {
    @OutputExport(name="arn", type=String.class, parameters={})
    private Output<String> arn;

    public Output<String> getArn() {
        return this.arn;
    }
    /**
     * One or more configuration blocks describing attachments sources to a version of a document. Defined below.
     * 
     */
    @OutputExport(name="attachmentsSources", type=List.class, parameters={DocumentAttachmentsSource.class})
    private Output</* @Nullable */ List<DocumentAttachmentsSource>> attachmentsSources;

    /**
     * @return One or more configuration blocks describing attachments sources to a version of a document. Defined below.
     * 
     */
    public Output</* @Nullable */ List<DocumentAttachmentsSource>> getAttachmentsSources() {
        return this.attachmentsSources;
    }
    /**
     * The JSON or YAML content of the document.
     * 
     */
    @OutputExport(name="content", type=String.class, parameters={})
    private Output<String> content;

    /**
     * @return The JSON or YAML content of the document.
     * 
     */
    public Output<String> getContent() {
        return this.content;
    }
    /**
     * The date the document was created.
     * 
     */
    @OutputExport(name="createdDate", type=String.class, parameters={})
    private Output<String> createdDate;

    /**
     * @return The date the document was created.
     * 
     */
    public Output<String> getCreatedDate() {
        return this.createdDate;
    }
    /**
     * The default version of the document.
     * 
     */
    @OutputExport(name="defaultVersion", type=String.class, parameters={})
    private Output<String> defaultVersion;

    /**
     * @return The default version of the document.
     * 
     */
    public Output<String> getDefaultVersion() {
        return this.defaultVersion;
    }
    /**
     * The description of the document.
     * 
     */
    @OutputExport(name="description", type=String.class, parameters={})
    private Output<String> description;

    /**
     * @return The description of the document.
     * 
     */
    public Output<String> getDescription() {
        return this.description;
    }
    /**
     * The format of the document. Valid document types include: `JSON` and `YAML`
     * 
     */
    @OutputExport(name="documentFormat", type=String.class, parameters={})
    private Output</* @Nullable */ String> documentFormat;

    /**
     * @return The format of the document. Valid document types include: `JSON` and `YAML`
     * 
     */
    public Output</* @Nullable */ String> getDocumentFormat() {
        return this.documentFormat;
    }
    /**
     * The type of the document. Valid document types include: `Automation`, `Command`, `Package`, `Policy`, and `Session`
     * 
     */
    @OutputExport(name="documentType", type=String.class, parameters={})
    private Output<String> documentType;

    /**
     * @return The type of the document. Valid document types include: `Automation`, `Command`, `Package`, `Policy`, and `Session`
     * 
     */
    public Output<String> getDocumentType() {
        return this.documentType;
    }
    /**
     * The document version.
     * 
     */
    @OutputExport(name="documentVersion", type=String.class, parameters={})
    private Output<String> documentVersion;

    /**
     * @return The document version.
     * 
     */
    public Output<String> getDocumentVersion() {
        return this.documentVersion;
    }
    /**
     * The sha1 or sha256 of the document content
     * 
     */
    @OutputExport(name="hash", type=String.class, parameters={})
    private Output<String> hash;

    /**
     * @return The sha1 or sha256 of the document content
     * 
     */
    public Output<String> getHash() {
        return this.hash;
    }
    /**
     * "Sha1" "Sha256". The hashing algorithm used when hashing the content.
     * 
     */
    @OutputExport(name="hashType", type=String.class, parameters={})
    private Output<String> hashType;

    /**
     * @return "Sha1" "Sha256". The hashing algorithm used when hashing the content.
     * 
     */
    public Output<String> getHashType() {
        return this.hashType;
    }
    /**
     * The latest version of the document.
     * 
     */
    @OutputExport(name="latestVersion", type=String.class, parameters={})
    private Output<String> latestVersion;

    /**
     * @return The latest version of the document.
     * 
     */
    public Output<String> getLatestVersion() {
        return this.latestVersion;
    }
    /**
     * The name of the document.
     * 
     */
    @OutputExport(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The name of the document.
     * 
     */
    public Output<String> getName() {
        return this.name;
    }
    /**
     * The AWS user account of the person who created the document.
     * 
     */
    @OutputExport(name="owner", type=String.class, parameters={})
    private Output<String> owner;

    /**
     * @return The AWS user account of the person who created the document.
     * 
     */
    public Output<String> getOwner() {
        return this.owner;
    }
    /**
     * The parameters that are available to this document.
     * 
     */
    @OutputExport(name="parameters", type=List.class, parameters={DocumentParameter.class})
    private Output<List<DocumentParameter>> parameters;

    /**
     * @return The parameters that are available to this document.
     * 
     */
    public Output<List<DocumentParameter>> getParameters() {
        return this.parameters;
    }
    /**
     * Additional Permissions to attach to the document. See Permissions below for details.
     * 
     */
    @OutputExport(name="permissions", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> permissions;

    /**
     * @return Additional Permissions to attach to the document. See Permissions below for details.
     * 
     */
    public Output</* @Nullable */ Map<String,String>> getPermissions() {
        return this.permissions;
    }
    /**
     * A list of OS platforms compatible with this SSM document, either "Windows" or "Linux".
     * 
     */
    @OutputExport(name="platformTypes", type=List.class, parameters={String.class})
    private Output<List<String>> platformTypes;

    /**
     * @return A list of OS platforms compatible with this SSM document, either "Windows" or "Linux".
     * 
     */
    public Output<List<String>> getPlatformTypes() {
        return this.platformTypes;
    }
    /**
     * The schema version of the document.
     * 
     */
    @OutputExport(name="schemaVersion", type=String.class, parameters={})
    private Output<String> schemaVersion;

    /**
     * @return The schema version of the document.
     * 
     */
    public Output<String> getSchemaVersion() {
        return this.schemaVersion;
    }
    /**
     * "Creating", "Active" or "Deleting". The current status of the document.
     * 
     */
    @OutputExport(name="status", type=String.class, parameters={})
    private Output<String> status;

    /**
     * @return "Creating", "Active" or "Deleting". The current status of the document.
     * 
     */
    public Output<String> getStatus() {
        return this.status;
    }
    /**
     * A map of tags to assign to the object. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @OutputExport(name="tags", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return A map of tags to assign to the object. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Output</* @Nullable */ Map<String,String>> getTags() {
        return this.tags;
    }
    /**
     * A map of tags assigned to the resource, including those inherited from the provider .
     * 
     */
    @OutputExport(name="tagsAll", type=Map.class, parameters={String.class, String.class})
    private Output<Map<String,String>> tagsAll;

    /**
     * @return A map of tags assigned to the resource, including those inherited from the provider .
     * 
     */
    public Output<Map<String,String>> getTagsAll() {
        return this.tagsAll;
    }
    /**
     * The target type which defines the kinds of resources the document can run on. For example, /AWS::EC2::Instance. For a list of valid resource types, see AWS Resource Types Reference (http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html)
     * 
     */
    @OutputExport(name="targetType", type=String.class, parameters={})
    private Output</* @Nullable */ String> targetType;

    /**
     * @return The target type which defines the kinds of resources the document can run on. For example, /AWS::EC2::Instance. For a list of valid resource types, see AWS Resource Types Reference (http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html)
     * 
     */
    public Output</* @Nullable */ String> getTargetType() {
        return this.targetType;
    }
    /**
     * A field specifying the version of the artifact you are creating with the document. For example, "Release 12, Update 6". This value is unique across all versions of a document and cannot be changed for an existing document version.
     * 
     */
    @OutputExport(name="versionName", type=String.class, parameters={})
    private Output</* @Nullable */ String> versionName;

    /**
     * @return A field specifying the version of the artifact you are creating with the document. For example, "Release 12, Update 6". This value is unique across all versions of a document and cannot be changed for an existing document version.
     * 
     */
    public Output</* @Nullable */ String> getVersionName() {
        return this.versionName;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Document(String name) {
        this(name, DocumentArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Document(String name, DocumentArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Document(String name, DocumentArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:ssm/document:Document", name, args == null ? DocumentArgs.Empty : args, makeResourceOptions(options, Input.empty()));
    }

    private Document(String name, Input<String> id, @Nullable DocumentState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:ssm/document:Document", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Input<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .setVersion(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Document get(String name, Input<String> id, @Nullable DocumentState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new Document(name, id, state, options);
    }
}
