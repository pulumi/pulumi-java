// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.kinesis.outputs;

import io.pulumi.core.annotations.OutputCustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfiguration {
    /**
     * The ID of the AWS Glue Data Catalog. If you don't supply this, the AWS account ID is used by default.
     * 
     */
    private final @Nullable String catalogId;
    /**
     * Specifies the name of the AWS Glue database that contains the schema for the output data.
     * 
     */
    private final String databaseName;
    /**
     * If you don't specify an AWS Region, the default is the current region.
     * 
     */
    private final @Nullable String region;
    /**
     * The role that Kinesis Data Firehose can use to access AWS Glue. This role must be in the same account you use for Kinesis Data Firehose. Cross-account roles aren't allowed.
     * 
     */
    private final String roleArn;
    /**
     * Specifies the AWS Glue table that contains the column information that constitutes your data schema.
     * 
     */
    private final String tableName;
    /**
     * Specifies the table version for the output data schema. Defaults to `LATEST`.
     * 
     */
    private final @Nullable String versionId;

    @OutputCustomType.Constructor({"catalogId","databaseName","region","roleArn","tableName","versionId"})
    private FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfiguration(
        @Nullable String catalogId,
        String databaseName,
        @Nullable String region,
        String roleArn,
        String tableName,
        @Nullable String versionId) {
        this.catalogId = catalogId;
        this.databaseName = Objects.requireNonNull(databaseName);
        this.region = region;
        this.roleArn = Objects.requireNonNull(roleArn);
        this.tableName = Objects.requireNonNull(tableName);
        this.versionId = versionId;
    }

    /**
     * The ID of the AWS Glue Data Catalog. If you don't supply this, the AWS account ID is used by default.
     * 
     */
    public Optional<String> getCatalogId() {
        return Optional.ofNullable(this.catalogId);
    }
    /**
     * Specifies the name of the AWS Glue database that contains the schema for the output data.
     * 
     */
    public String getDatabaseName() {
        return this.databaseName;
    }
    /**
     * If you don't specify an AWS Region, the default is the current region.
     * 
     */
    public Optional<String> getRegion() {
        return Optional.ofNullable(this.region);
    }
    /**
     * The role that Kinesis Data Firehose can use to access AWS Glue. This role must be in the same account you use for Kinesis Data Firehose. Cross-account roles aren't allowed.
     * 
     */
    public String getRoleArn() {
        return this.roleArn;
    }
    /**
     * Specifies the AWS Glue table that contains the column information that constitutes your data schema.
     * 
     */
    public String getTableName() {
        return this.tableName;
    }
    /**
     * Specifies the table version for the output data schema. Defaults to `LATEST`.
     * 
     */
    public Optional<String> getVersionId() {
        return Optional.ofNullable(this.versionId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfiguration defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String catalogId;
        private String databaseName;
        private @Nullable String region;
        private String roleArn;
        private String tableName;
        private @Nullable String versionId;

        public Builder() {
    	      // Empty
        }

        public Builder(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.catalogId = defaults.catalogId;
    	      this.databaseName = defaults.databaseName;
    	      this.region = defaults.region;
    	      this.roleArn = defaults.roleArn;
    	      this.tableName = defaults.tableName;
    	      this.versionId = defaults.versionId;
        }

        public Builder setCatalogId(@Nullable String catalogId) {
            this.catalogId = catalogId;
            return this;
        }

        public Builder setDatabaseName(String databaseName) {
            this.databaseName = Objects.requireNonNull(databaseName);
            return this;
        }

        public Builder setRegion(@Nullable String region) {
            this.region = region;
            return this;
        }

        public Builder setRoleArn(String roleArn) {
            this.roleArn = Objects.requireNonNull(roleArn);
            return this;
        }

        public Builder setTableName(String tableName) {
            this.tableName = Objects.requireNonNull(tableName);
            return this;
        }

        public Builder setVersionId(@Nullable String versionId) {
            this.versionId = versionId;
            return this;
        }
        public FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfiguration build() {
            return new FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfiguration(catalogId, databaseName, region, roleArn, tableName, versionId);
        }
    }
}
