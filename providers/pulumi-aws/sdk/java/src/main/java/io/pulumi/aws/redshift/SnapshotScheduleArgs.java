// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.redshift;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class SnapshotScheduleArgs extends io.pulumi.resources.ResourceArgs {

    public static final SnapshotScheduleArgs Empty = new SnapshotScheduleArgs();

    /**
     * The definition of the snapshot schedule. The definition is made up of schedule expressions, for example `cron(30 12 *)` or `rate(12 hours)`.
     * 
     */
    @Import(name="definitions", required=true)
      private final Output<List<String>> definitions;

    public Output<List<String>> getDefinitions() {
        return this.definitions;
    }

    /**
     * The description of the snapshot schedule.
     * 
     */
    @Import(name="description")
      private final @Nullable Output<String> description;

    public Output<String> getDescription() {
        return this.description == null ? Codegen.empty() : this.description;
    }

    /**
     * Whether to destroy all associated clusters with this snapshot schedule on deletion. Must be enabled and applied before attempting deletion.
     * 
     */
    @Import(name="forceDestroy")
      private final @Nullable Output<Boolean> forceDestroy;

    public Output<Boolean> getForceDestroy() {
        return this.forceDestroy == null ? Codegen.empty() : this.forceDestroy;
    }

    /**
     * The snapshot schedule identifier. If omitted, this provider will assign a random, unique identifier.
     * 
     */
    @Import(name="identifier")
      private final @Nullable Output<String> identifier;

    public Output<String> getIdentifier() {
        return this.identifier == null ? Codegen.empty() : this.identifier;
    }

    /**
     * Creates a unique
     * identifier beginning with the specified prefix. Conflicts with `identifier`.
     * 
     */
    @Import(name="identifierPrefix")
      private final @Nullable Output<String> identifierPrefix;

    public Output<String> getIdentifierPrefix() {
        return this.identifierPrefix == null ? Codegen.empty() : this.identifierPrefix;
    }

    /**
     * A map of tags to assign to the resource. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Import(name="tags")
      private final @Nullable Output<Map<String,String>> tags;

    public Output<Map<String,String>> getTags() {
        return this.tags == null ? Codegen.empty() : this.tags;
    }

    public SnapshotScheduleArgs(
        Output<List<String>> definitions,
        @Nullable Output<String> description,
        @Nullable Output<Boolean> forceDestroy,
        @Nullable Output<String> identifier,
        @Nullable Output<String> identifierPrefix,
        @Nullable Output<Map<String,String>> tags) {
        this.definitions = Objects.requireNonNull(definitions, "expected parameter 'definitions' to be non-null");
        this.description = description;
        this.forceDestroy = forceDestroy;
        this.identifier = identifier;
        this.identifierPrefix = identifierPrefix;
        this.tags = tags;
    }

    private SnapshotScheduleArgs() {
        this.definitions = Codegen.empty();
        this.description = Codegen.empty();
        this.forceDestroy = Codegen.empty();
        this.identifier = Codegen.empty();
        this.identifierPrefix = Codegen.empty();
        this.tags = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SnapshotScheduleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<List<String>> definitions;
        private @Nullable Output<String> description;
        private @Nullable Output<Boolean> forceDestroy;
        private @Nullable Output<String> identifier;
        private @Nullable Output<String> identifierPrefix;
        private @Nullable Output<Map<String,String>> tags;

        public Builder() {
    	      // Empty
        }

        public Builder(SnapshotScheduleArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.definitions = defaults.definitions;
    	      this.description = defaults.description;
    	      this.forceDestroy = defaults.forceDestroy;
    	      this.identifier = defaults.identifier;
    	      this.identifierPrefix = defaults.identifierPrefix;
    	      this.tags = defaults.tags;
        }

        public Builder definitions(Output<List<String>> definitions) {
            this.definitions = Objects.requireNonNull(definitions);
            return this;
        }
        public Builder definitions(List<String> definitions) {
            this.definitions = Output.of(Objects.requireNonNull(definitions));
            return this;
        }
        public Builder definitions(String... definitions) {
            return definitions(List.of(definitions));
        }
        public Builder description(@Nullable Output<String> description) {
            this.description = description;
            return this;
        }
        public Builder description(@Nullable String description) {
            this.description = Codegen.ofNullable(description);
            return this;
        }
        public Builder forceDestroy(@Nullable Output<Boolean> forceDestroy) {
            this.forceDestroy = forceDestroy;
            return this;
        }
        public Builder forceDestroy(@Nullable Boolean forceDestroy) {
            this.forceDestroy = Codegen.ofNullable(forceDestroy);
            return this;
        }
        public Builder identifier(@Nullable Output<String> identifier) {
            this.identifier = identifier;
            return this;
        }
        public Builder identifier(@Nullable String identifier) {
            this.identifier = Codegen.ofNullable(identifier);
            return this;
        }
        public Builder identifierPrefix(@Nullable Output<String> identifierPrefix) {
            this.identifierPrefix = identifierPrefix;
            return this;
        }
        public Builder identifierPrefix(@Nullable String identifierPrefix) {
            this.identifierPrefix = Codegen.ofNullable(identifierPrefix);
            return this;
        }
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = Codegen.ofNullable(tags);
            return this;
        }        public SnapshotScheduleArgs build() {
            return new SnapshotScheduleArgs(definitions, description, forceDestroy, identifier, identifierPrefix, tags);
        }
    }
}
