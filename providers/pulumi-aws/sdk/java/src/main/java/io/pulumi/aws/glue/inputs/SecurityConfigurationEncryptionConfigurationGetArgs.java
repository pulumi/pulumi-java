// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.glue.inputs;

import io.pulumi.aws.glue.inputs.SecurityConfigurationEncryptionConfigurationCloudwatchEncryptionGetArgs;
import io.pulumi.aws.glue.inputs.SecurityConfigurationEncryptionConfigurationJobBookmarksEncryptionGetArgs;
import io.pulumi.aws.glue.inputs.SecurityConfigurationEncryptionConfigurationS3EncryptionGetArgs;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.util.Objects;


public final class SecurityConfigurationEncryptionConfigurationGetArgs extends io.pulumi.resources.ResourceArgs {

    public static final SecurityConfigurationEncryptionConfigurationGetArgs Empty = new SecurityConfigurationEncryptionConfigurationGetArgs();

    @InputImport(name="cloudwatchEncryption", required=true)
      private final Input<SecurityConfigurationEncryptionConfigurationCloudwatchEncryptionGetArgs> cloudwatchEncryption;

    public Input<SecurityConfigurationEncryptionConfigurationCloudwatchEncryptionGetArgs> getCloudwatchEncryption() {
        return this.cloudwatchEncryption;
    }

    @InputImport(name="jobBookmarksEncryption", required=true)
      private final Input<SecurityConfigurationEncryptionConfigurationJobBookmarksEncryptionGetArgs> jobBookmarksEncryption;

    public Input<SecurityConfigurationEncryptionConfigurationJobBookmarksEncryptionGetArgs> getJobBookmarksEncryption() {
        return this.jobBookmarksEncryption;
    }

    /**
     * A ` s3_encryption  ` block as described below, which contains encryption configuration for S3 data.
     * 
     */
    @InputImport(name="s3Encryption", required=true)
      private final Input<SecurityConfigurationEncryptionConfigurationS3EncryptionGetArgs> s3Encryption;

    public Input<SecurityConfigurationEncryptionConfigurationS3EncryptionGetArgs> getS3Encryption() {
        return this.s3Encryption;
    }

    public SecurityConfigurationEncryptionConfigurationGetArgs(
        Input<SecurityConfigurationEncryptionConfigurationCloudwatchEncryptionGetArgs> cloudwatchEncryption,
        Input<SecurityConfigurationEncryptionConfigurationJobBookmarksEncryptionGetArgs> jobBookmarksEncryption,
        Input<SecurityConfigurationEncryptionConfigurationS3EncryptionGetArgs> s3Encryption) {
        this.cloudwatchEncryption = Objects.requireNonNull(cloudwatchEncryption, "expected parameter 'cloudwatchEncryption' to be non-null");
        this.jobBookmarksEncryption = Objects.requireNonNull(jobBookmarksEncryption, "expected parameter 'jobBookmarksEncryption' to be non-null");
        this.s3Encryption = Objects.requireNonNull(s3Encryption, "expected parameter 's3Encryption' to be non-null");
    }

    private SecurityConfigurationEncryptionConfigurationGetArgs() {
        this.cloudwatchEncryption = Input.empty();
        this.jobBookmarksEncryption = Input.empty();
        this.s3Encryption = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SecurityConfigurationEncryptionConfigurationGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<SecurityConfigurationEncryptionConfigurationCloudwatchEncryptionGetArgs> cloudwatchEncryption;
        private Input<SecurityConfigurationEncryptionConfigurationJobBookmarksEncryptionGetArgs> jobBookmarksEncryption;
        private Input<SecurityConfigurationEncryptionConfigurationS3EncryptionGetArgs> s3Encryption;

        public Builder() {
    	      // Empty
        }

        public Builder(SecurityConfigurationEncryptionConfigurationGetArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cloudwatchEncryption = defaults.cloudwatchEncryption;
    	      this.jobBookmarksEncryption = defaults.jobBookmarksEncryption;
    	      this.s3Encryption = defaults.s3Encryption;
        }

        public Builder setCloudwatchEncryption(Input<SecurityConfigurationEncryptionConfigurationCloudwatchEncryptionGetArgs> cloudwatchEncryption) {
            this.cloudwatchEncryption = Objects.requireNonNull(cloudwatchEncryption);
            return this;
        }

        public Builder setCloudwatchEncryption(SecurityConfigurationEncryptionConfigurationCloudwatchEncryptionGetArgs cloudwatchEncryption) {
            this.cloudwatchEncryption = Input.of(Objects.requireNonNull(cloudwatchEncryption));
            return this;
        }

        public Builder setJobBookmarksEncryption(Input<SecurityConfigurationEncryptionConfigurationJobBookmarksEncryptionGetArgs> jobBookmarksEncryption) {
            this.jobBookmarksEncryption = Objects.requireNonNull(jobBookmarksEncryption);
            return this;
        }

        public Builder setJobBookmarksEncryption(SecurityConfigurationEncryptionConfigurationJobBookmarksEncryptionGetArgs jobBookmarksEncryption) {
            this.jobBookmarksEncryption = Input.of(Objects.requireNonNull(jobBookmarksEncryption));
            return this;
        }

        public Builder setS3Encryption(Input<SecurityConfigurationEncryptionConfigurationS3EncryptionGetArgs> s3Encryption) {
            this.s3Encryption = Objects.requireNonNull(s3Encryption);
            return this;
        }

        public Builder setS3Encryption(SecurityConfigurationEncryptionConfigurationS3EncryptionGetArgs s3Encryption) {
            this.s3Encryption = Input.of(Objects.requireNonNull(s3Encryption));
            return this;
        }
        public SecurityConfigurationEncryptionConfigurationGetArgs build() {
            return new SecurityConfigurationEncryptionConfigurationGetArgs(cloudwatchEncryption, jobBookmarksEncryption, s3Encryption);
        }
    }
}
