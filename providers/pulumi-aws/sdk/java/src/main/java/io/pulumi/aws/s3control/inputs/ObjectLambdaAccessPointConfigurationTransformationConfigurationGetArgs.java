// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.s3control.inputs;

import io.pulumi.aws.s3control.inputs.ObjectLambdaAccessPointConfigurationTransformationConfigurationContentTransformationGetArgs;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class ObjectLambdaAccessPointConfigurationTransformationConfigurationGetArgs extends io.pulumi.resources.ResourceArgs {

    public static final ObjectLambdaAccessPointConfigurationTransformationConfigurationGetArgs Empty = new ObjectLambdaAccessPointConfigurationTransformationConfigurationGetArgs();

    /**
     * The actions of an Object Lambda Access Point configuration. Valid values: `GetObject`.
     * 
     */
    @InputImport(name="actions", required=true)
      private final Input<List<String>> actions;

    public Input<List<String>> getActions() {
        return this.actions;
    }

    /**
     * The content transformation of an Object Lambda Access Point configuration. See Content Transformation below for more details.
     * 
     */
    @InputImport(name="contentTransformation", required=true)
      private final Input<ObjectLambdaAccessPointConfigurationTransformationConfigurationContentTransformationGetArgs> contentTransformation;

    public Input<ObjectLambdaAccessPointConfigurationTransformationConfigurationContentTransformationGetArgs> getContentTransformation() {
        return this.contentTransformation;
    }

    public ObjectLambdaAccessPointConfigurationTransformationConfigurationGetArgs(
        Input<List<String>> actions,
        Input<ObjectLambdaAccessPointConfigurationTransformationConfigurationContentTransformationGetArgs> contentTransformation) {
        this.actions = Objects.requireNonNull(actions, "expected parameter 'actions' to be non-null");
        this.contentTransformation = Objects.requireNonNull(contentTransformation, "expected parameter 'contentTransformation' to be non-null");
    }

    private ObjectLambdaAccessPointConfigurationTransformationConfigurationGetArgs() {
        this.actions = Input.empty();
        this.contentTransformation = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ObjectLambdaAccessPointConfigurationTransformationConfigurationGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<List<String>> actions;
        private Input<ObjectLambdaAccessPointConfigurationTransformationConfigurationContentTransformationGetArgs> contentTransformation;

        public Builder() {
    	      // Empty
        }

        public Builder(ObjectLambdaAccessPointConfigurationTransformationConfigurationGetArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.actions = defaults.actions;
    	      this.contentTransformation = defaults.contentTransformation;
        }

        public Builder actions(Input<List<String>> actions) {
            this.actions = Objects.requireNonNull(actions);
            return this;
        }

        public Builder actions(List<String> actions) {
            this.actions = Input.of(Objects.requireNonNull(actions));
            return this;
        }

        public Builder contentTransformation(Input<ObjectLambdaAccessPointConfigurationTransformationConfigurationContentTransformationGetArgs> contentTransformation) {
            this.contentTransformation = Objects.requireNonNull(contentTransformation);
            return this;
        }

        public Builder contentTransformation(ObjectLambdaAccessPointConfigurationTransformationConfigurationContentTransformationGetArgs contentTransformation) {
            this.contentTransformation = Input.of(Objects.requireNonNull(contentTransformation));
            return this;
        }
        public ObjectLambdaAccessPointConfigurationTransformationConfigurationGetArgs build() {
            return new ObjectLambdaAccessPointConfigurationTransformationConfigurationGetArgs(actions, contentTransformation);
        }
    }
}
