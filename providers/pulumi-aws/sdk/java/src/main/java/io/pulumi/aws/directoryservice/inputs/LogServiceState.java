// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.directoryservice.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class LogServiceState extends io.pulumi.resources.ResourceArgs {

    public static final LogServiceState Empty = new LogServiceState();

    /**
     * The id of directory.
     * 
     */
    @InputImport(name="directoryId")
    private final @Nullable Input<String> directoryId;

    public Input<String> getDirectoryId() {
        return this.directoryId == null ? Input.empty() : this.directoryId;
    }

    /**
     * Name of the cloudwatch log group to which the logs should be published. The log group should be already created and the directory service principal should be provided with required permission to create stream and publish logs. Changing this value would delete the current subscription and create a new one. A directory can only have one log subscription at a time.
     * 
     */
    @InputImport(name="logGroupName")
    private final @Nullable Input<String> logGroupName;

    public Input<String> getLogGroupName() {
        return this.logGroupName == null ? Input.empty() : this.logGroupName;
    }

    public LogServiceState(
        @Nullable Input<String> directoryId,
        @Nullable Input<String> logGroupName) {
        this.directoryId = directoryId;
        this.logGroupName = logGroupName;
    }

    private LogServiceState() {
        this.directoryId = Input.empty();
        this.logGroupName = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(LogServiceState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> directoryId;
        private @Nullable Input<String> logGroupName;

        public Builder() {
    	      // Empty
        }

        public Builder(LogServiceState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.directoryId = defaults.directoryId;
    	      this.logGroupName = defaults.logGroupName;
        }

        public Builder setDirectoryId(@Nullable Input<String> directoryId) {
            this.directoryId = directoryId;
            return this;
        }

        public Builder setDirectoryId(@Nullable String directoryId) {
            this.directoryId = Input.ofNullable(directoryId);
            return this;
        }

        public Builder setLogGroupName(@Nullable Input<String> logGroupName) {
            this.logGroupName = logGroupName;
            return this;
        }

        public Builder setLogGroupName(@Nullable String logGroupName) {
            this.logGroupName = Input.ofNullable(logGroupName);
            return this;
        }
        public LogServiceState build() {
            return new LogServiceState(directoryId, logGroupName);
        }
    }
}
