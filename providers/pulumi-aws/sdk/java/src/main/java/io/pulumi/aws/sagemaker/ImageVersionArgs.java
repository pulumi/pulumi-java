// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.sagemaker;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;


public final class ImageVersionArgs extends io.pulumi.resources.ResourceArgs {

    public static final ImageVersionArgs Empty = new ImageVersionArgs();

    /**
     * The registry path of the container image on which this image version is based.
     * 
     */
    @Import(name="baseImage", required=true)
      private final Output<String> baseImage;

    public Output<String> getBaseImage() {
        return this.baseImage;
    }

    /**
     * The name of the image. Must be unique to your account.
     * 
     */
    @Import(name="imageName", required=true)
      private final Output<String> imageName;

    public Output<String> getImageName() {
        return this.imageName;
    }

    public ImageVersionArgs(
        Output<String> baseImage,
        Output<String> imageName) {
        this.baseImage = Objects.requireNonNull(baseImage, "expected parameter 'baseImage' to be non-null");
        this.imageName = Objects.requireNonNull(imageName, "expected parameter 'imageName' to be non-null");
    }

    private ImageVersionArgs() {
        this.baseImage = Codegen.empty();
        this.imageName = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ImageVersionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> baseImage;
        private Output<String> imageName;

        public Builder() {
    	      // Empty
        }

        public Builder(ImageVersionArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.baseImage = defaults.baseImage;
    	      this.imageName = defaults.imageName;
        }

        public Builder baseImage(Output<String> baseImage) {
            this.baseImage = Objects.requireNonNull(baseImage);
            return this;
        }
        public Builder baseImage(String baseImage) {
            this.baseImage = Output.of(Objects.requireNonNull(baseImage));
            return this;
        }
        public Builder imageName(Output<String> imageName) {
            this.imageName = Objects.requireNonNull(imageName);
            return this;
        }
        public Builder imageName(String imageName) {
            this.imageName = Output.of(Objects.requireNonNull(imageName));
            return this;
        }        public ImageVersionArgs build() {
            return new ImageVersionArgs(baseImage, imageName);
        }
    }
}
