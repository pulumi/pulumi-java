// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.elastictranscoder;

import io.pulumi.aws.Utilities;
import io.pulumi.aws.elastictranscoder.PresetArgs;
import io.pulumi.aws.elastictranscoder.inputs.PresetState;
import io.pulumi.aws.elastictranscoder.outputs.PresetAudio;
import io.pulumi.aws.elastictranscoder.outputs.PresetAudioCodecOptions;
import io.pulumi.aws.elastictranscoder.outputs.PresetThumbnails;
import io.pulumi.aws.elastictranscoder.outputs.PresetVideo;
import io.pulumi.aws.elastictranscoder.outputs.PresetVideoWatermark;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Export;
import io.pulumi.core.annotations.ResourceType;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;

/**
 * Provides an Elastic Transcoder preset resource.
 * 
 * {{% examples %}}
 * ## Example Usage
 * {{% example %}}
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 * 
 * const bar = new aws.elastictranscoder.Preset("bar", {
 *     audio: {
 *         audioPackingMode: "SingleTrack",
 *         bitRate: "96",
 *         channels: "2",
 *         codec: "AAC",
 *         sampleRate: "44100",
 *     },
 *     audioCodecOptions: {
 *         profile: "AAC-LC",
 *     },
 *     container: "mp4",
 *     description: "Sample Preset",
 *     thumbnails: {
 *         format: "png",
 *         interval: "120",
 *         maxHeight: "auto",
 *         maxWidth: "auto",
 *         paddingPolicy: "Pad",
 *         sizingPolicy: "Fit",
 *     },
 *     video: {
 *         bitRate: "1600",
 *         codec: "H.264",
 *         displayAspectRatio: "16:9",
 *         fixedGop: "false",
 *         frameRate: "auto",
 *         keyframesMaxDist: "240",
 *         maxFrameRate: "60",
 *         maxHeight: "auto",
 *         maxWidth: "auto",
 *         paddingPolicy: "Pad",
 *         sizingPolicy: "Fit",
 *     },
 *     videoCodecOptions: {
 *         ColorSpaceConversionMode: "None",
 *         InterlacedMode: "Progressive",
 *         Level: "2.2",
 *         MaxReferenceFrames: 3,
 *         Profile: "main",
 *     },
 *     videoWatermarks: [{
 *         horizontalAlign: "Right",
 *         horizontalOffset: "10px",
 *         id: "Test",
 *         maxHeight: "20%",
 *         maxWidth: "20%",
 *         opacity: "55.5",
 *         sizingPolicy: "ShrinkToFit",
 *         target: "Content",
 *         verticalAlign: "Bottom",
 *         verticalOffset: "10px",
 *     }],
 * });
 * ```
 * ```python
 * import pulumi
 * import pulumi_aws as aws
 * 
 * bar = aws.elastictranscoder.Preset("bar",
 *     audio=aws.elastictranscoder.PresetAudioArgs(
 *         audio_packing_mode="SingleTrack",
 *         bit_rate="96",
 *         channels="2",
 *         codec="AAC",
 *         sample_rate="44100",
 *     ),
 *     audio_codec_options=aws.elastictranscoder.PresetAudioCodecOptionsArgs(
 *         profile="AAC-LC",
 *     ),
 *     container="mp4",
 *     description="Sample Preset",
 *     thumbnails=aws.elastictranscoder.PresetThumbnailsArgs(
 *         format="png",
 *         interval="120",
 *         max_height="auto",
 *         max_width="auto",
 *         padding_policy="Pad",
 *         sizing_policy="Fit",
 *     ),
 *     video=aws.elastictranscoder.PresetVideoArgs(
 *         bit_rate="1600",
 *         codec="H.264",
 *         display_aspect_ratio="16:9",
 *         fixed_gop="false",
 *         frame_rate="auto",
 *         keyframes_max_dist="240",
 *         max_frame_rate="60",
 *         max_height="auto",
 *         max_width="auto",
 *         padding_policy="Pad",
 *         sizing_policy="Fit",
 *     ),
 *     video_codec_options={
 *         "ColorSpaceConversionMode": "None",
 *         "InterlacedMode": "Progressive",
 *         "Level": "2.2",
 *         "MaxReferenceFrames": "3",
 *         "Profile": "main",
 *     },
 *     video_watermarks=[aws.elastictranscoder.PresetVideoWatermarkArgs(
 *         horizontal_align="Right",
 *         horizontal_offset="10px",
 *         id="Test",
 *         max_height="20%",
 *         max_width="20%",
 *         opacity="55.5",
 *         sizing_policy="ShrinkToFit",
 *         target="Content",
 *         vertical_align="Bottom",
 *         vertical_offset="10px",
 *     )])
 * ```
 * ```csharp
 * using Pulumi;
 * using Aws = Pulumi.Aws;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var bar = new Aws.ElasticTranscoder.Preset("bar", new Aws.ElasticTranscoder.PresetArgs
 *         {
 *             Audio = new Aws.ElasticTranscoder.Inputs.PresetAudioArgs
 *             {
 *                 AudioPackingMode = "SingleTrack",
 *                 BitRate = "96",
 *                 Channels = "2",
 *                 Codec = "AAC",
 *                 SampleRate = "44100",
 *             },
 *             AudioCodecOptions = new Aws.ElasticTranscoder.Inputs.PresetAudioCodecOptionsArgs
 *             {
 *                 Profile = "AAC-LC",
 *             },
 *             Container = "mp4",
 *             Description = "Sample Preset",
 *             Thumbnails = new Aws.ElasticTranscoder.Inputs.PresetThumbnailsArgs
 *             {
 *                 Format = "png",
 *                 Interval = "120",
 *                 MaxHeight = "auto",
 *                 MaxWidth = "auto",
 *                 PaddingPolicy = "Pad",
 *                 SizingPolicy = "Fit",
 *             },
 *             Video = new Aws.ElasticTranscoder.Inputs.PresetVideoArgs
 *             {
 *                 BitRate = "1600",
 *                 Codec = "H.264",
 *                 DisplayAspectRatio = "16:9",
 *                 FixedGop = "false",
 *                 FrameRate = "auto",
 *                 KeyframesMaxDist = "240",
 *                 MaxFrameRate = "60",
 *                 MaxHeight = "auto",
 *                 MaxWidth = "auto",
 *                 PaddingPolicy = "Pad",
 *                 SizingPolicy = "Fit",
 *             },
 *             VideoCodecOptions = 
 *             {
 *                 { "ColorSpaceConversionMode", "None" },
 *                 { "InterlacedMode", "Progressive" },
 *                 { "Level", "2.2" },
 *                 { "MaxReferenceFrames", "3" },
 *                 { "Profile", "main" },
 *             },
 *             VideoWatermarks = 
 *             {
 *                 new Aws.ElasticTranscoder.Inputs.PresetVideoWatermarkArgs
 *                 {
 *                     HorizontalAlign = "Right",
 *                     HorizontalOffset = "10px",
 *                     Id = "Test",
 *                     MaxHeight = "20%",
 *                     MaxWidth = "20%",
 *                     Opacity = "55.5",
 *                     SizingPolicy = "ShrinkToFit",
 *                     Target = "Content",
 *                     VerticalAlign = "Bottom",
 *                     VerticalOffset = "10px",
 *                 },
 *             },
 *         });
 *     }
 * 
 * }
 * ```
 * ```go
 * package main
 * 
 * import (
 * 	"fmt"
 * 
 * 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/elastictranscoder"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		_, err := elastictranscoder.NewPreset(ctx, "bar", &elastictranscoder.PresetArgs{
 * 			Audio: &elastictranscoder.PresetAudioArgs{
 * 				AudioPackingMode: pulumi.String("SingleTrack"),
 * 				BitRate:          pulumi.String("96"),
 * 				Channels:         pulumi.String("2"),
 * 				Codec:            pulumi.String("AAC"),
 * 				SampleRate:       pulumi.String("44100"),
 * 			},
 * 			AudioCodecOptions: &elastictranscoder.PresetAudioCodecOptionsArgs{
 * 				Profile: pulumi.String("AAC-LC"),
 * 			},
 * 			Container:   pulumi.String("mp4"),
 * 			Description: pulumi.String("Sample Preset"),
 * 			Thumbnails: &elastictranscoder.PresetThumbnailsArgs{
 * 				Format:        pulumi.String("png"),
 * 				Interval:      pulumi.String("120"),
 * 				MaxHeight:     pulumi.String("auto"),
 * 				MaxWidth:      pulumi.String("auto"),
 * 				PaddingPolicy: pulumi.String("Pad"),
 * 				SizingPolicy:  pulumi.String("Fit"),
 * 			},
 * 			Video: &elastictranscoder.PresetVideoArgs{
 * 				BitRate:            pulumi.String("1600"),
 * 				Codec:              pulumi.String("H.264"),
 * 				DisplayAspectRatio: pulumi.String("16:9"),
 * 				FixedGop:           pulumi.String("false"),
 * 				FrameRate:          pulumi.String("auto"),
 * 				KeyframesMaxDist:   pulumi.String("240"),
 * 				MaxFrameRate:       pulumi.String("60"),
 * 				MaxHeight:          pulumi.String("auto"),
 * 				MaxWidth:           pulumi.String("auto"),
 * 				PaddingPolicy:      pulumi.String("Pad"),
 * 				SizingPolicy:       pulumi.String("Fit"),
 * 			},
 * 			VideoCodecOptions: pulumi.StringMap{
 * 				"ColorSpaceConversionMode": pulumi.String("None"),
 * 				"InterlacedMode":           pulumi.String("Progressive"),
 * 				"Level":                    pulumi.String("2.2"),
 * 				"MaxReferenceFrames":       pulumi.String("3"),
 * 				"Profile":                  pulumi.String("main"),
 * 			},
 * 			VideoWatermarks: elastictranscoder.PresetVideoWatermarkArray{
 * 				&elastictranscoder.PresetVideoWatermarkArgs{
 * 					HorizontalAlign:  pulumi.String("Right"),
 * 					HorizontalOffset: pulumi.String("10px"),
 * 					Id:               pulumi.String("Test"),
 * 					MaxHeight:        pulumi.String(fmt.Sprintf("%v%v", "20", "%")),
 * 					MaxWidth:         pulumi.String(fmt.Sprintf("%v%v", "20", "%")),
 * 					Opacity:          pulumi.String("55.5"),
 * 					SizingPolicy:     pulumi.String("ShrinkToFit"),
 * 					Target:           pulumi.String("Content"),
 * 					VerticalAlign:    pulumi.String("Bottom"),
 * 					VerticalOffset:   pulumi.String("10px"),
 * 				},
 * 			},
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * ```
 * {{% /example %}}
 * {{% /examples %}}
 * 
 * ## Import
 * 
 * Elastic Transcoder presets can be imported using the `id`, e.g.,
 * 
 * ```sh
 *  $ pulumi import aws:elastictranscoder/preset:Preset basic_preset 1407981661351-cttk8b
 * ```
 * 
 *  
 */
@ResourceType(type="aws:elastictranscoder/preset:Preset")
public class Preset extends io.pulumi.resources.CustomResource {
    /**
     * Amazon Resource Name (ARN) of the Elastic Transcoder Preset.
     * 
     */
    @Export(name="arn", type=String.class, parameters={})
    private Output<String> arn;

    /**
     * @return Amazon Resource Name (ARN) of the Elastic Transcoder Preset.
     * 
     */
    public Output<String> getArn() {
        return this.arn;
    }
    /**
     * Audio parameters object (documented below).
     * 
     */
    @Export(name="audio", type=PresetAudio.class, parameters={})
    private Output</* @Nullable */ PresetAudio> audio;

    /**
     * @return Audio parameters object (documented below).
     * 
     */
    public Output</* @Nullable */ PresetAudio> getAudio() {
        return this.audio;
    }
    /**
     * Codec options for the audio parameters (documented below)
     * 
     */
    @Export(name="audioCodecOptions", type=PresetAudioCodecOptions.class, parameters={})
    private Output</* @Nullable */ PresetAudioCodecOptions> audioCodecOptions;

    /**
     * @return Codec options for the audio parameters (documented below)
     * 
     */
    public Output</* @Nullable */ PresetAudioCodecOptions> getAudioCodecOptions() {
        return this.audioCodecOptions;
    }
    /**
     * The container type for the output file. Valid values are `flac`, `flv`, `fmp4`, `gif`, `mp3`, `mp4`, `mpg`, `mxf`, `oga`, `ogg`, `ts`, and `webm`.
     * 
     */
    @Export(name="container", type=String.class, parameters={})
    private Output<String> container;

    /**
     * @return The container type for the output file. Valid values are `flac`, `flv`, `fmp4`, `gif`, `mp3`, `mp4`, `mpg`, `mxf`, `oga`, `ogg`, `ts`, and `webm`.
     * 
     */
    public Output<String> getContainer() {
        return this.container;
    }
    /**
     * A description of the preset (maximum 255 characters)
     * 
     */
    @Export(name="description", type=String.class, parameters={})
    private Output</* @Nullable */ String> description;

    /**
     * @return A description of the preset (maximum 255 characters)
     * 
     */
    public Output</* @Nullable */ String> getDescription() {
        return this.description;
    }
    /**
     * The name of the preset. (maximum 40 characters)
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The name of the preset. (maximum 40 characters)
     * 
     */
    public Output<String> getName() {
        return this.name;
    }
    /**
     * Thumbnail parameters object (documented below)
     * 
     */
    @Export(name="thumbnails", type=PresetThumbnails.class, parameters={})
    private Output</* @Nullable */ PresetThumbnails> thumbnails;

    /**
     * @return Thumbnail parameters object (documented below)
     * 
     */
    public Output</* @Nullable */ PresetThumbnails> getThumbnails() {
        return this.thumbnails;
    }
    @Export(name="type", type=String.class, parameters={})
    private Output<String> type;

    public Output<String> getType() {
        return this.type;
    }
    /**
     * Video parameters object (documented below)
     * 
     */
    @Export(name="video", type=PresetVideo.class, parameters={})
    private Output</* @Nullable */ PresetVideo> video;

    /**
     * @return Video parameters object (documented below)
     * 
     */
    public Output</* @Nullable */ PresetVideo> getVideo() {
        return this.video;
    }
    /**
     * Codec options for the video parameters
     * 
     */
    @Export(name="videoCodecOptions", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> videoCodecOptions;

    /**
     * @return Codec options for the video parameters
     * 
     */
    public Output</* @Nullable */ Map<String,String>> getVideoCodecOptions() {
        return this.videoCodecOptions;
    }
    /**
     * Watermark parameters for the video parameters (documented below)
     * 
     */
    @Export(name="videoWatermarks", type=List.class, parameters={PresetVideoWatermark.class})
    private Output</* @Nullable */ List<PresetVideoWatermark>> videoWatermarks;

    /**
     * @return Watermark parameters for the video parameters (documented below)
     * 
     */
    public Output</* @Nullable */ List<PresetVideoWatermark>> getVideoWatermarks() {
        return this.videoWatermarks;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Preset(String name) {
        this(name, PresetArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Preset(String name, PresetArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Preset(String name, PresetArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:elastictranscoder/preset:Preset", name, args == null ? PresetArgs.Empty : args, makeResourceOptions(options, Output.empty()));
    }

    private Preset(String name, Output<String> id, @Nullable PresetState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:elastictranscoder/preset:Preset", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Preset get(String name, Output<String> id, @Nullable PresetState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new Preset(name, id, state, options);
    }
}
