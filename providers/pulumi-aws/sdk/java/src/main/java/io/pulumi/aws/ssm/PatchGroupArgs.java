// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.ssm;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;


public final class PatchGroupArgs extends io.pulumi.resources.ResourceArgs {

    public static final PatchGroupArgs Empty = new PatchGroupArgs();

    /**
     * The ID of the patch baseline to register the patch group with.
     * 
     */
    @Import(name="baselineId", required=true)
      private final Output<String> baselineId;

    public Output<String> baselineId() {
        return this.baselineId;
    }

    /**
     * The name of the patch group that should be registered with the patch baseline.
     * 
     */
    @Import(name="patchGroup", required=true)
      private final Output<String> patchGroup;

    public Output<String> patchGroup() {
        return this.patchGroup;
    }

    public PatchGroupArgs(
        Output<String> baselineId,
        Output<String> patchGroup) {
        this.baselineId = Objects.requireNonNull(baselineId, "expected parameter 'baselineId' to be non-null");
        this.patchGroup = Objects.requireNonNull(patchGroup, "expected parameter 'patchGroup' to be non-null");
    }

    private PatchGroupArgs() {
        this.baselineId = Codegen.empty();
        this.patchGroup = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PatchGroupArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> baselineId;
        private Output<String> patchGroup;

        public Builder() {
    	      // Empty
        }

        public Builder(PatchGroupArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.baselineId = defaults.baselineId;
    	      this.patchGroup = defaults.patchGroup;
        }

        public Builder baselineId(Output<String> baselineId) {
            this.baselineId = Objects.requireNonNull(baselineId);
            return this;
        }
        public Builder baselineId(String baselineId) {
            this.baselineId = Output.of(Objects.requireNonNull(baselineId));
            return this;
        }
        public Builder patchGroup(Output<String> patchGroup) {
            this.patchGroup = Objects.requireNonNull(patchGroup);
            return this;
        }
        public Builder patchGroup(String patchGroup) {
            this.patchGroup = Output.of(Objects.requireNonNull(patchGroup));
            return this;
        }        public PatchGroupArgs build() {
            return new PatchGroupArgs(baselineId, patchGroup);
        }
    }
}
