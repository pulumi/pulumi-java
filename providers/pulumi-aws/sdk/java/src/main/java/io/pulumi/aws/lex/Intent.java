// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.lex;

import io.pulumi.aws.Utilities;
import io.pulumi.aws.lex.IntentArgs;
import io.pulumi.aws.lex.inputs.IntentState;
import io.pulumi.aws.lex.outputs.IntentConclusionStatement;
import io.pulumi.aws.lex.outputs.IntentConfirmationPrompt;
import io.pulumi.aws.lex.outputs.IntentDialogCodeHook;
import io.pulumi.aws.lex.outputs.IntentFollowUpPrompt;
import io.pulumi.aws.lex.outputs.IntentFulfillmentActivity;
import io.pulumi.aws.lex.outputs.IntentRejectionStatement;
import io.pulumi.aws.lex.outputs.IntentSlot;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Export;
import io.pulumi.core.annotations.ResourceType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * Provides an Amazon Lex Intent resource. For more information see
 * [Amazon Lex: How It Works](https://docs.aws.amazon.com/lex/latest/dg/how-it-works.html)
 * 
 * ## Example Usage
 * 
 * ## Import
 * 
 * Intents can be imported using their name.
 * 
 * ```sh
 *  $ pulumi import aws:lex/intent:Intent order_flowers_intent OrderFlowers
 * ```
 * 
 */
@ResourceType(type="aws:lex/intent:Intent")
public class Intent extends io.pulumi.resources.CustomResource {
    /**
     * The ARN of the Lex intent.
     * 
     */
    @Export(name="arn", type=String.class, parameters={})
    private Output<String> arn;

    /**
     * @return The ARN of the Lex intent.
     * 
     */
    public Output<String> getArn() {
        return this.arn;
    }
    /**
     * Checksum identifying the version of the intent that was created. The checksum is not
     * included as an argument because the resource will add it automatically when updating the intent.
     * 
     */
    @Export(name="checksum", type=String.class, parameters={})
    private Output<String> checksum;

    /**
     * @return Checksum identifying the version of the intent that was created. The checksum is not
     * included as an argument because the resource will add it automatically when updating the intent.
     * 
     */
    public Output<String> getChecksum() {
        return this.checksum;
    }
    /**
     * The statement that you want Amazon Lex to convey to the user
     * after the intent is successfully fulfilled by the Lambda function. This element is relevant only if
     * you provide a Lambda function in the `fulfillment_activity`. If you return the intent to the client
     * application, you can't specify this element. The `follow_up_prompt` and `conclusion_statement` are
     * mutually exclusive. You can specify only one. Attributes are documented under statement.
     * 
     */
    @Export(name="conclusionStatement", type=IntentConclusionStatement.class, parameters={})
    private Output</* @Nullable */ IntentConclusionStatement> conclusionStatement;

    /**
     * @return The statement that you want Amazon Lex to convey to the user
     * after the intent is successfully fulfilled by the Lambda function. This element is relevant only if
     * you provide a Lambda function in the `fulfillment_activity`. If you return the intent to the client
     * application, you can't specify this element. The `follow_up_prompt` and `conclusion_statement` are
     * mutually exclusive. You can specify only one. Attributes are documented under statement.
     * 
     */
    public Output</* @Nullable */ IntentConclusionStatement> getConclusionStatement() {
        return this.conclusionStatement;
    }
    /**
     * Prompts the user to confirm the intent. This question should
     * have a yes or no answer. You you must provide both the `rejection_statement` and `confirmation_prompt`,
     * or neither. Attributes are documented under prompt.
     * 
     */
    @Export(name="confirmationPrompt", type=IntentConfirmationPrompt.class, parameters={})
    private Output</* @Nullable */ IntentConfirmationPrompt> confirmationPrompt;

    /**
     * @return Prompts the user to confirm the intent. This question should
     * have a yes or no answer. You you must provide both the `rejection_statement` and `confirmation_prompt`,
     * or neither. Attributes are documented under prompt.
     * 
     */
    public Output</* @Nullable */ IntentConfirmationPrompt> getConfirmationPrompt() {
        return this.confirmationPrompt;
    }
    /**
     * Determines if a new slot type version is created when the initial
     * resource is created and on each update. Defaults to `false`.
     * 
     */
    @Export(name="createVersion", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> createVersion;

    /**
     * @return Determines if a new slot type version is created when the initial
     * resource is created and on each update. Defaults to `false`.
     * 
     */
    public Output</* @Nullable */ Boolean> getCreateVersion() {
        return this.createVersion;
    }
    /**
     * The date when the intent version was created.
     * 
     */
    @Export(name="createdDate", type=String.class, parameters={})
    private Output<String> createdDate;

    /**
     * @return The date when the intent version was created.
     * 
     */
    public Output<String> getCreatedDate() {
        return this.createdDate;
    }
    /**
     * A description of the bot. Must be less than or equal to 200 characters in length.
     * 
     */
    @Export(name="description", type=String.class, parameters={})
    private Output</* @Nullable */ String> description;

    /**
     * @return A description of the bot. Must be less than or equal to 200 characters in length.
     * 
     */
    public Output</* @Nullable */ String> getDescription() {
        return this.description;
    }
    /**
     * Specifies a Lambda function to invoke for each user input. You can
     * invoke this Lambda function to personalize user interaction. Attributes are documented under code_hook.
     * 
     */
    @Export(name="dialogCodeHook", type=IntentDialogCodeHook.class, parameters={})
    private Output</* @Nullable */ IntentDialogCodeHook> dialogCodeHook;

    /**
     * @return Specifies a Lambda function to invoke for each user input. You can
     * invoke this Lambda function to personalize user interaction. Attributes are documented under code_hook.
     * 
     */
    public Output</* @Nullable */ IntentDialogCodeHook> getDialogCodeHook() {
        return this.dialogCodeHook;
    }
    /**
     * Amazon Lex uses this prompt to solicit additional activity after
     * fulfilling an intent. For example, after the OrderPizza intent is fulfilled, you might prompt the
     * user to order a drink. The `follow_up_prompt` field and the `conclusion_statement` field are mutually
     * exclusive. You can specify only one. Attributes are documented under follow_up_prompt.
     * 
     */
    @Export(name="followUpPrompt", type=IntentFollowUpPrompt.class, parameters={})
    private Output</* @Nullable */ IntentFollowUpPrompt> followUpPrompt;

    /**
     * @return Amazon Lex uses this prompt to solicit additional activity after
     * fulfilling an intent. For example, after the OrderPizza intent is fulfilled, you might prompt the
     * user to order a drink. The `follow_up_prompt` field and the `conclusion_statement` field are mutually
     * exclusive. You can specify only one. Attributes are documented under follow_up_prompt.
     * 
     */
    public Output</* @Nullable */ IntentFollowUpPrompt> getFollowUpPrompt() {
        return this.followUpPrompt;
    }
    /**
     * Describes how the intent is fulfilled. For example, after a
     * user provides all of the information for a pizza order, `fulfillment_activity` defines how the bot
     * places an order with a local pizza store. Attributes are documented under fulfillment_activity.
     * 
     */
    @Export(name="fulfillmentActivity", type=IntentFulfillmentActivity.class, parameters={})
    private Output<IntentFulfillmentActivity> fulfillmentActivity;

    /**
     * @return Describes how the intent is fulfilled. For example, after a
     * user provides all of the information for a pizza order, `fulfillment_activity` defines how the bot
     * places an order with a local pizza store. Attributes are documented under fulfillment_activity.
     * 
     */
    public Output<IntentFulfillmentActivity> getFulfillmentActivity() {
        return this.fulfillmentActivity;
    }
    /**
     * The date when the $LATEST version of this intent was updated.
     * 
     */
    @Export(name="lastUpdatedDate", type=String.class, parameters={})
    private Output<String> lastUpdatedDate;

    /**
     * @return The date when the $LATEST version of this intent was updated.
     * 
     */
    public Output<String> getLastUpdatedDate() {
        return this.lastUpdatedDate;
    }
    /**
     * The name of the intent slot that you want to create. The name is case sensitive. Must be less than or equal to 100 characters in length.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The name of the intent slot that you want to create. The name is case sensitive. Must be less than or equal to 100 characters in length.
     * 
     */
    public Output<String> getName() {
        return this.name;
    }
    /**
     * A unique identifier for the built-in intent to base this
     * intent on. To find the signature for an intent, see
     * [Standard Built-in Intents](https://developer.amazon.com/public/solutions/alexa/alexa-skills-kit/docs/built-in-intent-ref/standard-intents)
     * in the Alexa Skills Kit.
     * 
     */
    @Export(name="parentIntentSignature", type=String.class, parameters={})
    private Output</* @Nullable */ String> parentIntentSignature;

    /**
     * @return A unique identifier for the built-in intent to base this
     * intent on. To find the signature for an intent, see
     * [Standard Built-in Intents](https://developer.amazon.com/public/solutions/alexa/alexa-skills-kit/docs/built-in-intent-ref/standard-intents)
     * in the Alexa Skills Kit.
     * 
     */
    public Output</* @Nullable */ String> getParentIntentSignature() {
        return this.parentIntentSignature;
    }
    /**
     * If the user answers "no" to the question defined in the prompt field,
     * Amazon Lex responds with this statement to acknowledge that the intent was canceled. Attributes are
     * documented below under statement.
     * 
     */
    @Export(name="rejectionStatement", type=IntentRejectionStatement.class, parameters={})
    private Output</* @Nullable */ IntentRejectionStatement> rejectionStatement;

    /**
     * @return If the user answers "no" to the question defined in the prompt field,
     * Amazon Lex responds with this statement to acknowledge that the intent was canceled. Attributes are
     * documented below under statement.
     * 
     */
    public Output</* @Nullable */ IntentRejectionStatement> getRejectionStatement() {
        return this.rejectionStatement;
    }
    /**
     * If you know a specific pattern with which users might respond to
     * an Amazon Lex request for a slot value, you can provide those utterances to improve accuracy. This
     * is optional. In most cases, Amazon Lex is capable of understanding user utterances. Must have between 1 and 10 items in the list, and each item must be less than or equal to 200 characters in length.
     * 
     */
    @Export(name="sampleUtterances", type=List.class, parameters={String.class})
    private Output</* @Nullable */ List<String>> sampleUtterances;

    /**
     * @return If you know a specific pattern with which users might respond to
     * an Amazon Lex request for a slot value, you can provide those utterances to improve accuracy. This
     * is optional. In most cases, Amazon Lex is capable of understanding user utterances. Must have between 1 and 10 items in the list, and each item must be less than or equal to 200 characters in length.
     * 
     */
    public Output</* @Nullable */ List<String>> getSampleUtterances() {
        return this.sampleUtterances;
    }
    /**
     * An list of intent slots. At runtime, Amazon Lex elicits required slot values
     * from the user using prompts defined in the slots. Attributes are documented under slot.
     * 
     */
    @Export(name="slots", type=List.class, parameters={IntentSlot.class})
    private Output</* @Nullable */ List<IntentSlot>> slots;

    /**
     * @return An list of intent slots. At runtime, Amazon Lex elicits required slot values
     * from the user using prompts defined in the slots. Attributes are documented under slot.
     * 
     */
    public Output</* @Nullable */ List<IntentSlot>> getSlots() {
        return this.slots;
    }
    /**
     * The version of the bot.
     * 
     */
    @Export(name="version", type=String.class, parameters={})
    private Output<String> version;

    /**
     * @return The version of the bot.
     * 
     */
    public Output<String> getVersion() {
        return this.version;
    }

    public interface BuilderApplicator {
        public void apply(IntentArgs.Builder a);
    }
    private static io.pulumi.aws.lex.IntentArgs buildArgs(BuilderApplicator argsBuilder) {
        final var builder = io.pulumi.aws.lex.IntentArgs.builder();
        argsBuilder.apply(builder);
        return builder.build();
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param argsBuilder A function that configures a passed builder.
     */
    public Intent(String name, BuilderApplicator argsBuilder) {
        this(name, buildArgs(argsBuilder), null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Intent(String name) {
        this(name, IntentArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Intent(String name, IntentArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Intent(String name, IntentArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:lex/intent:Intent", name, args == null ? IntentArgs.Empty : args, makeResourceOptions(options, Output.empty()));
    }

    private Intent(String name, Output<String> id, @Nullable IntentState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:lex/intent:Intent", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Intent get(String name, Output<String> id, @Nullable IntentState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new Intent(name, id, state, options);
    }
}
