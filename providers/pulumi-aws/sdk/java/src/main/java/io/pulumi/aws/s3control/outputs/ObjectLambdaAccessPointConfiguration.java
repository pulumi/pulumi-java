// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.s3control.outputs;

import io.pulumi.aws.s3control.outputs.ObjectLambdaAccessPointConfigurationTransformationConfiguration;
import io.pulumi.core.annotations.OutputCustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class ObjectLambdaAccessPointConfiguration {
    /**
     * Allowed features. Valid values: `GetObject-Range`, `GetObject-PartNumber`.
     * 
     */
    private final @Nullable List<String> allowedFeatures;
    /**
     * Whether or not the CloudWatch metrics configuration is enabled.
     * 
     */
    private final @Nullable Boolean cloudWatchMetricsEnabled;
    /**
     * Standard access point associated with the Object Lambda Access Point.
     * 
     */
    private final String supportingAccessPoint;
    /**
     * List of transformation configurations for the Object Lambda Access Point. See Transformation Configuration below for more details.
     * 
     */
    private final List<ObjectLambdaAccessPointConfigurationTransformationConfiguration> transformationConfigurations;

    @OutputCustomType.Constructor({"allowedFeatures","cloudWatchMetricsEnabled","supportingAccessPoint","transformationConfigurations"})
    private ObjectLambdaAccessPointConfiguration(
        @Nullable List<String> allowedFeatures,
        @Nullable Boolean cloudWatchMetricsEnabled,
        String supportingAccessPoint,
        List<ObjectLambdaAccessPointConfigurationTransformationConfiguration> transformationConfigurations) {
        this.allowedFeatures = allowedFeatures;
        this.cloudWatchMetricsEnabled = cloudWatchMetricsEnabled;
        this.supportingAccessPoint = Objects.requireNonNull(supportingAccessPoint);
        this.transformationConfigurations = Objects.requireNonNull(transformationConfigurations);
    }

    /**
     * Allowed features. Valid values: `GetObject-Range`, `GetObject-PartNumber`.
     * 
     */
    public List<String> getAllowedFeatures() {
        return this.allowedFeatures == null ? List.of() : this.allowedFeatures;
    }
    /**
     * Whether or not the CloudWatch metrics configuration is enabled.
     * 
     */
    public Optional<Boolean> getCloudWatchMetricsEnabled() {
        return Optional.ofNullable(this.cloudWatchMetricsEnabled);
    }
    /**
     * Standard access point associated with the Object Lambda Access Point.
     * 
     */
    public String getSupportingAccessPoint() {
        return this.supportingAccessPoint;
    }
    /**
     * List of transformation configurations for the Object Lambda Access Point. See Transformation Configuration below for more details.
     * 
     */
    public List<ObjectLambdaAccessPointConfigurationTransformationConfiguration> getTransformationConfigurations() {
        return this.transformationConfigurations;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ObjectLambdaAccessPointConfiguration defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable List<String> allowedFeatures;
        private @Nullable Boolean cloudWatchMetricsEnabled;
        private String supportingAccessPoint;
        private List<ObjectLambdaAccessPointConfigurationTransformationConfiguration> transformationConfigurations;

        public Builder() {
    	      // Empty
        }

        public Builder(ObjectLambdaAccessPointConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allowedFeatures = defaults.allowedFeatures;
    	      this.cloudWatchMetricsEnabled = defaults.cloudWatchMetricsEnabled;
    	      this.supportingAccessPoint = defaults.supportingAccessPoint;
    	      this.transformationConfigurations = defaults.transformationConfigurations;
        }

        public Builder setAllowedFeatures(@Nullable List<String> allowedFeatures) {
            this.allowedFeatures = allowedFeatures;
            return this;
        }

        public Builder setCloudWatchMetricsEnabled(@Nullable Boolean cloudWatchMetricsEnabled) {
            this.cloudWatchMetricsEnabled = cloudWatchMetricsEnabled;
            return this;
        }

        public Builder setSupportingAccessPoint(String supportingAccessPoint) {
            this.supportingAccessPoint = Objects.requireNonNull(supportingAccessPoint);
            return this;
        }

        public Builder setTransformationConfigurations(List<ObjectLambdaAccessPointConfigurationTransformationConfiguration> transformationConfigurations) {
            this.transformationConfigurations = Objects.requireNonNull(transformationConfigurations);
            return this;
        }
        public ObjectLambdaAccessPointConfiguration build() {
            return new ObjectLambdaAccessPointConfiguration(allowedFeatures, cloudWatchMetricsEnabled, supportingAccessPoint, transformationConfigurations);
        }
    }
}
