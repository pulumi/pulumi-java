// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.msk.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.Double;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@OutputCustomType
public final class GetBrokerNodesNodeInfoList {
    /**
     * The attached elastic network interface of the broker
     * 
     */
    private final String attachedEniId;
    /**
     * The ID of the broker
     * 
     */
    private final Double brokerId;
    /**
     * The client subnet to which this broker node belongs
     * 
     */
    private final String clientSubnet;
    /**
     * The client virtual private cloud (VPC) IP address
     * 
     */
    private final String clientVpcIpAddress;
    /**
     * Set of endpoints for accessing the broker. This does not include ports
     * 
     */
    private final List<String> endpoints;
    /**
     * The Amazon Resource Name (ARN) of the node
     * 
     */
    private final String nodeArn;

    @OutputCustomType.Constructor({"attachedEniId","brokerId","clientSubnet","clientVpcIpAddress","endpoints","nodeArn"})
    private GetBrokerNodesNodeInfoList(
        String attachedEniId,
        Double brokerId,
        String clientSubnet,
        String clientVpcIpAddress,
        List<String> endpoints,
        String nodeArn) {
        this.attachedEniId = Objects.requireNonNull(attachedEniId);
        this.brokerId = Objects.requireNonNull(brokerId);
        this.clientSubnet = Objects.requireNonNull(clientSubnet);
        this.clientVpcIpAddress = Objects.requireNonNull(clientVpcIpAddress);
        this.endpoints = Objects.requireNonNull(endpoints);
        this.nodeArn = Objects.requireNonNull(nodeArn);
    }

    /**
     * The attached elastic network interface of the broker
     * 
     */
    public String getAttachedEniId() {
        return this.attachedEniId;
    }
    /**
     * The ID of the broker
     * 
     */
    public Double getBrokerId() {
        return this.brokerId;
    }
    /**
     * The client subnet to which this broker node belongs
     * 
     */
    public String getClientSubnet() {
        return this.clientSubnet;
    }
    /**
     * The client virtual private cloud (VPC) IP address
     * 
     */
    public String getClientVpcIpAddress() {
        return this.clientVpcIpAddress;
    }
    /**
     * Set of endpoints for accessing the broker. This does not include ports
     * 
     */
    public List<String> getEndpoints() {
        return this.endpoints;
    }
    /**
     * The Amazon Resource Name (ARN) of the node
     * 
     */
    public String getNodeArn() {
        return this.nodeArn;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetBrokerNodesNodeInfoList defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String attachedEniId;
        private Double brokerId;
        private String clientSubnet;
        private String clientVpcIpAddress;
        private List<String> endpoints;
        private String nodeArn;

        public Builder() {
    	      // Empty
        }

        public Builder(GetBrokerNodesNodeInfoList defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.attachedEniId = defaults.attachedEniId;
    	      this.brokerId = defaults.brokerId;
    	      this.clientSubnet = defaults.clientSubnet;
    	      this.clientVpcIpAddress = defaults.clientVpcIpAddress;
    	      this.endpoints = defaults.endpoints;
    	      this.nodeArn = defaults.nodeArn;
        }

        public Builder setAttachedEniId(String attachedEniId) {
            this.attachedEniId = Objects.requireNonNull(attachedEniId);
            return this;
        }

        public Builder setBrokerId(Double brokerId) {
            this.brokerId = Objects.requireNonNull(brokerId);
            return this;
        }

        public Builder setClientSubnet(String clientSubnet) {
            this.clientSubnet = Objects.requireNonNull(clientSubnet);
            return this;
        }

        public Builder setClientVpcIpAddress(String clientVpcIpAddress) {
            this.clientVpcIpAddress = Objects.requireNonNull(clientVpcIpAddress);
            return this;
        }

        public Builder setEndpoints(List<String> endpoints) {
            this.endpoints = Objects.requireNonNull(endpoints);
            return this;
        }

        public Builder setNodeArn(String nodeArn) {
            this.nodeArn = Objects.requireNonNull(nodeArn);
            return this;
        }
        public GetBrokerNodesNodeInfoList build() {
            return new GetBrokerNodesNodeInfoList(attachedEniId, brokerId, clientSubnet, clientVpcIpAddress, endpoints, nodeArn);
        }
    }
}
