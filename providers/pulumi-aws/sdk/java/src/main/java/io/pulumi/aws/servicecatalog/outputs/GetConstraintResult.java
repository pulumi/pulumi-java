// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.servicecatalog.outputs;

import io.pulumi.core.annotations.OutputCustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class GetConstraintResult {
    private final @Nullable String acceptLanguage;
    /**
     * Description of the constraint.
     * 
     */
    private final String description;
    private final String id;
    /**
     * Owner of the constraint.
     * 
     */
    private final String owner;
    /**
     * Constraint parameters in JSON format.
     * 
     */
    private final String parameters;
    /**
     * Portfolio identifier.
     * 
     */
    private final String portfolioId;
    /**
     * Product identifier.
     * 
     */
    private final String productId;
    /**
     * Constraint status.
     * 
     */
    private final String status;
    /**
     * Type of constraint. Valid values are `LAUNCH`, `NOTIFICATION`, `RESOURCE_UPDATE`, `STACKSET`, and `TEMPLATE`.
     * 
     */
    private final String type;

    @OutputCustomType.Constructor({"acceptLanguage","description","id","owner","parameters","portfolioId","productId","status","type"})
    private GetConstraintResult(
        @Nullable String acceptLanguage,
        String description,
        String id,
        String owner,
        String parameters,
        String portfolioId,
        String productId,
        String status,
        String type) {
        this.acceptLanguage = acceptLanguage;
        this.description = Objects.requireNonNull(description);
        this.id = Objects.requireNonNull(id);
        this.owner = Objects.requireNonNull(owner);
        this.parameters = Objects.requireNonNull(parameters);
        this.portfolioId = Objects.requireNonNull(portfolioId);
        this.productId = Objects.requireNonNull(productId);
        this.status = Objects.requireNonNull(status);
        this.type = Objects.requireNonNull(type);
    }

    public Optional<String> getAcceptLanguage() {
        return Optional.ofNullable(this.acceptLanguage);
    }
    /**
     * Description of the constraint.
     * 
    */
    public String getDescription() {
        return this.description;
    }
    public String getId() {
        return this.id;
    }
    /**
     * Owner of the constraint.
     * 
    */
    public String getOwner() {
        return this.owner;
    }
    /**
     * Constraint parameters in JSON format.
     * 
    */
    public String getParameters() {
        return this.parameters;
    }
    /**
     * Portfolio identifier.
     * 
    */
    public String getPortfolioId() {
        return this.portfolioId;
    }
    /**
     * Product identifier.
     * 
    */
    public String getProductId() {
        return this.productId;
    }
    /**
     * Constraint status.
     * 
    */
    public String getStatus() {
        return this.status;
    }
    /**
     * Type of constraint. Valid values are `LAUNCH`, `NOTIFICATION`, `RESOURCE_UPDATE`, `STACKSET`, and `TEMPLATE`.
     * 
    */
    public String getType() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetConstraintResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String acceptLanguage;
        private String description;
        private String id;
        private String owner;
        private String parameters;
        private String portfolioId;
        private String productId;
        private String status;
        private String type;

        public Builder() {
    	      // Empty
        }

        public Builder(GetConstraintResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.acceptLanguage = defaults.acceptLanguage;
    	      this.description = defaults.description;
    	      this.id = defaults.id;
    	      this.owner = defaults.owner;
    	      this.parameters = defaults.parameters;
    	      this.portfolioId = defaults.portfolioId;
    	      this.productId = defaults.productId;
    	      this.status = defaults.status;
    	      this.type = defaults.type;
        }

        public Builder setAcceptLanguage(@Nullable String acceptLanguage) {
            this.acceptLanguage = acceptLanguage;
            return this;
        }

        public Builder setDescription(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }

        public Builder setId(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }

        public Builder setOwner(String owner) {
            this.owner = Objects.requireNonNull(owner);
            return this;
        }

        public Builder setParameters(String parameters) {
            this.parameters = Objects.requireNonNull(parameters);
            return this;
        }

        public Builder setPortfolioId(String portfolioId) {
            this.portfolioId = Objects.requireNonNull(portfolioId);
            return this;
        }

        public Builder setProductId(String productId) {
            this.productId = Objects.requireNonNull(productId);
            return this;
        }

        public Builder setStatus(String status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }

        public Builder setType(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public GetConstraintResult build() {
            return new GetConstraintResult(acceptLanguage, description, id, owner, parameters, portfolioId, productId, status, type);
        }
    }
}
