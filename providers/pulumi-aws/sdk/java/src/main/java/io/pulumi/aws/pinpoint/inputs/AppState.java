// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.pinpoint.inputs;

import io.pulumi.aws.pinpoint.inputs.AppCampaignHookGetArgs;
import io.pulumi.aws.pinpoint.inputs.AppLimitsGetArgs;
import io.pulumi.aws.pinpoint.inputs.AppQuietTimeGetArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class AppState extends io.pulumi.resources.ResourceArgs {

    public static final AppState Empty = new AppState();

    /**
     * The Application ID of the Pinpoint App.
     * 
     */
    @InputImport(name="applicationId")
      private final @Nullable Output<String> applicationId;

    public Output<String> getApplicationId() {
        return this.applicationId == null ? Output.empty() : this.applicationId;
    }

    /**
     * Amazon Resource Name (ARN) of the PinPoint Application
     * 
     */
    @InputImport(name="arn")
      private final @Nullable Output<String> arn;

    public Output<String> getArn() {
        return this.arn == null ? Output.empty() : this.arn;
    }

    /**
     * Specifies settings for invoking an AWS Lambda function that customizes a segment for a campaign
     * 
     */
    @InputImport(name="campaignHook")
      private final @Nullable Output<AppCampaignHookGetArgs> campaignHook;

    public Output<AppCampaignHookGetArgs> getCampaignHook() {
        return this.campaignHook == null ? Output.empty() : this.campaignHook;
    }

    /**
     * The default campaign limits for the app. These limits apply to each campaign for the app, unless the campaign overrides the default with limits of its own
     * 
     */
    @InputImport(name="limits")
      private final @Nullable Output<AppLimitsGetArgs> limits;

    public Output<AppLimitsGetArgs> getLimits() {
        return this.limits == null ? Output.empty() : this.limits;
    }

    /**
     * The application name. By default generated by this provider
     * 
     */
    @InputImport(name="name")
      private final @Nullable Output<String> name;

    public Output<String> getName() {
        return this.name == null ? Output.empty() : this.name;
    }

    /**
     * The name of the Pinpoint application. Conflicts with `name`
     * 
     */
    @InputImport(name="namePrefix")
      private final @Nullable Output<String> namePrefix;

    public Output<String> getNamePrefix() {
        return this.namePrefix == null ? Output.empty() : this.namePrefix;
    }

    /**
     * The default quiet time for the app. Each campaign for this app sends no messages during this time unless the campaign overrides the default with a quiet time of its own
     * 
     */
    @InputImport(name="quietTime")
      private final @Nullable Output<AppQuietTimeGetArgs> quietTime;

    public Output<AppQuietTimeGetArgs> getQuietTime() {
        return this.quietTime == null ? Output.empty() : this.quietTime;
    }

    /**
     * Key-value map of resource tags. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @InputImport(name="tags")
      private final @Nullable Output<Map<String,String>> tags;

    public Output<Map<String,String>> getTags() {
        return this.tags == null ? Output.empty() : this.tags;
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider .
     * 
     */
    @InputImport(name="tagsAll")
      private final @Nullable Output<Map<String,String>> tagsAll;

    public Output<Map<String,String>> getTagsAll() {
        return this.tagsAll == null ? Output.empty() : this.tagsAll;
    }

    public AppState(
        @Nullable Output<String> applicationId,
        @Nullable Output<String> arn,
        @Nullable Output<AppCampaignHookGetArgs> campaignHook,
        @Nullable Output<AppLimitsGetArgs> limits,
        @Nullable Output<String> name,
        @Nullable Output<String> namePrefix,
        @Nullable Output<AppQuietTimeGetArgs> quietTime,
        @Nullable Output<Map<String,String>> tags,
        @Nullable Output<Map<String,String>> tagsAll) {
        this.applicationId = applicationId;
        this.arn = arn;
        this.campaignHook = campaignHook;
        this.limits = limits;
        this.name = name;
        this.namePrefix = namePrefix;
        this.quietTime = quietTime;
        this.tags = tags;
        this.tagsAll = tagsAll;
    }

    private AppState() {
        this.applicationId = Output.empty();
        this.arn = Output.empty();
        this.campaignHook = Output.empty();
        this.limits = Output.empty();
        this.name = Output.empty();
        this.namePrefix = Output.empty();
        this.quietTime = Output.empty();
        this.tags = Output.empty();
        this.tagsAll = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AppState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> applicationId;
        private @Nullable Output<String> arn;
        private @Nullable Output<AppCampaignHookGetArgs> campaignHook;
        private @Nullable Output<AppLimitsGetArgs> limits;
        private @Nullable Output<String> name;
        private @Nullable Output<String> namePrefix;
        private @Nullable Output<AppQuietTimeGetArgs> quietTime;
        private @Nullable Output<Map<String,String>> tags;
        private @Nullable Output<Map<String,String>> tagsAll;

        public Builder() {
    	      // Empty
        }

        public Builder(AppState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.applicationId = defaults.applicationId;
    	      this.arn = defaults.arn;
    	      this.campaignHook = defaults.campaignHook;
    	      this.limits = defaults.limits;
    	      this.name = defaults.name;
    	      this.namePrefix = defaults.namePrefix;
    	      this.quietTime = defaults.quietTime;
    	      this.tags = defaults.tags;
    	      this.tagsAll = defaults.tagsAll;
        }

        public Builder applicationId(@Nullable Output<String> applicationId) {
            this.applicationId = applicationId;
            return this;
        }

        public Builder applicationId(@Nullable String applicationId) {
            this.applicationId = Output.ofNullable(applicationId);
            return this;
        }

        public Builder arn(@Nullable Output<String> arn) {
            this.arn = arn;
            return this;
        }

        public Builder arn(@Nullable String arn) {
            this.arn = Output.ofNullable(arn);
            return this;
        }

        public Builder campaignHook(@Nullable Output<AppCampaignHookGetArgs> campaignHook) {
            this.campaignHook = campaignHook;
            return this;
        }

        public Builder campaignHook(@Nullable AppCampaignHookGetArgs campaignHook) {
            this.campaignHook = Output.ofNullable(campaignHook);
            return this;
        }

        public Builder limits(@Nullable Output<AppLimitsGetArgs> limits) {
            this.limits = limits;
            return this;
        }

        public Builder limits(@Nullable AppLimitsGetArgs limits) {
            this.limits = Output.ofNullable(limits);
            return this;
        }

        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }

        public Builder name(@Nullable String name) {
            this.name = Output.ofNullable(name);
            return this;
        }

        public Builder namePrefix(@Nullable Output<String> namePrefix) {
            this.namePrefix = namePrefix;
            return this;
        }

        public Builder namePrefix(@Nullable String namePrefix) {
            this.namePrefix = Output.ofNullable(namePrefix);
            return this;
        }

        public Builder quietTime(@Nullable Output<AppQuietTimeGetArgs> quietTime) {
            this.quietTime = quietTime;
            return this;
        }

        public Builder quietTime(@Nullable AppQuietTimeGetArgs quietTime) {
            this.quietTime = Output.ofNullable(quietTime);
            return this;
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }

        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = Output.ofNullable(tags);
            return this;
        }

        public Builder tagsAll(@Nullable Output<Map<String,String>> tagsAll) {
            this.tagsAll = tagsAll;
            return this;
        }

        public Builder tagsAll(@Nullable Map<String,String> tagsAll) {
            this.tagsAll = Output.ofNullable(tagsAll);
            return this;
        }
        public AppState build() {
            return new AppState(applicationId, arn, campaignHook, limits, name, namePrefix, quietTime, tags, tagsAll);
        }
    }
}
