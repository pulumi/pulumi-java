// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.networkfirewall.inputs;

import io.pulumi.aws.networkfirewall.inputs.FirewallPolicyFirewallPolicyStatefulEngineOptionsArgs;
import io.pulumi.aws.networkfirewall.inputs.FirewallPolicyFirewallPolicyStatefulRuleGroupReferenceArgs;
import io.pulumi.aws.networkfirewall.inputs.FirewallPolicyFirewallPolicyStatelessCustomActionArgs;
import io.pulumi.aws.networkfirewall.inputs.FirewallPolicyFirewallPolicyStatelessRuleGroupReferenceArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class FirewallPolicyFirewallPolicyArgs extends io.pulumi.resources.ResourceArgs {

    public static final FirewallPolicyFirewallPolicyArgs Empty = new FirewallPolicyFirewallPolicyArgs();

    /**
     * Set of actions to take on a packet if it does not match any stateful rules in the policy. This can only be specified if the policy has a `stateful_engine_options` block with a `rule_order` value of `STRICT_ORDER`. You can specify one of either or neither values of `aws:drop_strict` or `aws:drop_established`, as well as any combination of `aws:alert_strict` and `aws:alert_established`.
     * 
     */
    @Import(name="statefulDefaultActions")
      private final @Nullable Output<List<String>> statefulDefaultActions;

    public Output<List<String>> getStatefulDefaultActions() {
        return this.statefulDefaultActions == null ? Output.empty() : this.statefulDefaultActions;
    }

    /**
     * A configuration block that defines options on how the policy handles stateful rules. See Stateful Engine Options below for details.
     * 
     */
    @Import(name="statefulEngineOptions")
      private final @Nullable Output<FirewallPolicyFirewallPolicyStatefulEngineOptionsArgs> statefulEngineOptions;

    public Output<FirewallPolicyFirewallPolicyStatefulEngineOptionsArgs> getStatefulEngineOptions() {
        return this.statefulEngineOptions == null ? Output.empty() : this.statefulEngineOptions;
    }

    /**
     * Set of configuration blocks containing references to the stateful rule groups that are used in the policy. See Stateful Rule Group Reference below for details.
     * 
     */
    @Import(name="statefulRuleGroupReferences")
      private final @Nullable Output<List<FirewallPolicyFirewallPolicyStatefulRuleGroupReferenceArgs>> statefulRuleGroupReferences;

    public Output<List<FirewallPolicyFirewallPolicyStatefulRuleGroupReferenceArgs>> getStatefulRuleGroupReferences() {
        return this.statefulRuleGroupReferences == null ? Output.empty() : this.statefulRuleGroupReferences;
    }

    /**
     * Set of configuration blocks describing the custom action definitions that are available for use in the firewall policy's `stateless_default_actions`. See Stateless Custom Action below for details.
     * 
     */
    @Import(name="statelessCustomActions")
      private final @Nullable Output<List<FirewallPolicyFirewallPolicyStatelessCustomActionArgs>> statelessCustomActions;

    public Output<List<FirewallPolicyFirewallPolicyStatelessCustomActionArgs>> getStatelessCustomActions() {
        return this.statelessCustomActions == null ? Output.empty() : this.statelessCustomActions;
    }

    /**
     * Set of actions to take on a packet if it does not match any of the stateless rules in the policy. You must specify one of the standard actions including: `aws:drop`, `aws:pass`, or `aws:forward_to_sfe`.
     * In addition, you can specify custom actions that are compatible with your standard action choice. If you want non-matching packets to be forwarded for stateful inspection, specify `aws:forward_to_sfe`.
     * 
     */
    @Import(name="statelessDefaultActions", required=true)
      private final Output<List<String>> statelessDefaultActions;

    public Output<List<String>> getStatelessDefaultActions() {
        return this.statelessDefaultActions;
    }

    /**
     * Set of actions to take on a fragmented packet if it does not match any of the stateless rules in the policy. You must specify one of the standard actions including: `aws:drop`, `aws:pass`, or `aws:forward_to_sfe`.
     * In addition, you can specify custom actions that are compatible with your standard action choice. If you want non-matching packets to be forwarded for stateful inspection, specify `aws:forward_to_sfe`.
     * 
     */
    @Import(name="statelessFragmentDefaultActions", required=true)
      private final Output<List<String>> statelessFragmentDefaultActions;

    public Output<List<String>> getStatelessFragmentDefaultActions() {
        return this.statelessFragmentDefaultActions;
    }

    /**
     * Set of configuration blocks containing references to the stateless rule groups that are used in the policy. See Stateless Rule Group Reference below for details.
     * 
     */
    @Import(name="statelessRuleGroupReferences")
      private final @Nullable Output<List<FirewallPolicyFirewallPolicyStatelessRuleGroupReferenceArgs>> statelessRuleGroupReferences;

    public Output<List<FirewallPolicyFirewallPolicyStatelessRuleGroupReferenceArgs>> getStatelessRuleGroupReferences() {
        return this.statelessRuleGroupReferences == null ? Output.empty() : this.statelessRuleGroupReferences;
    }

    public FirewallPolicyFirewallPolicyArgs(
        @Nullable Output<List<String>> statefulDefaultActions,
        @Nullable Output<FirewallPolicyFirewallPolicyStatefulEngineOptionsArgs> statefulEngineOptions,
        @Nullable Output<List<FirewallPolicyFirewallPolicyStatefulRuleGroupReferenceArgs>> statefulRuleGroupReferences,
        @Nullable Output<List<FirewallPolicyFirewallPolicyStatelessCustomActionArgs>> statelessCustomActions,
        Output<List<String>> statelessDefaultActions,
        Output<List<String>> statelessFragmentDefaultActions,
        @Nullable Output<List<FirewallPolicyFirewallPolicyStatelessRuleGroupReferenceArgs>> statelessRuleGroupReferences) {
        this.statefulDefaultActions = statefulDefaultActions;
        this.statefulEngineOptions = statefulEngineOptions;
        this.statefulRuleGroupReferences = statefulRuleGroupReferences;
        this.statelessCustomActions = statelessCustomActions;
        this.statelessDefaultActions = Objects.requireNonNull(statelessDefaultActions, "expected parameter 'statelessDefaultActions' to be non-null");
        this.statelessFragmentDefaultActions = Objects.requireNonNull(statelessFragmentDefaultActions, "expected parameter 'statelessFragmentDefaultActions' to be non-null");
        this.statelessRuleGroupReferences = statelessRuleGroupReferences;
    }

    private FirewallPolicyFirewallPolicyArgs() {
        this.statefulDefaultActions = Output.empty();
        this.statefulEngineOptions = Output.empty();
        this.statefulRuleGroupReferences = Output.empty();
        this.statelessCustomActions = Output.empty();
        this.statelessDefaultActions = Output.empty();
        this.statelessFragmentDefaultActions = Output.empty();
        this.statelessRuleGroupReferences = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FirewallPolicyFirewallPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<List<String>> statefulDefaultActions;
        private @Nullable Output<FirewallPolicyFirewallPolicyStatefulEngineOptionsArgs> statefulEngineOptions;
        private @Nullable Output<List<FirewallPolicyFirewallPolicyStatefulRuleGroupReferenceArgs>> statefulRuleGroupReferences;
        private @Nullable Output<List<FirewallPolicyFirewallPolicyStatelessCustomActionArgs>> statelessCustomActions;
        private Output<List<String>> statelessDefaultActions;
        private Output<List<String>> statelessFragmentDefaultActions;
        private @Nullable Output<List<FirewallPolicyFirewallPolicyStatelessRuleGroupReferenceArgs>> statelessRuleGroupReferences;

        public Builder() {
    	      // Empty
        }

        public Builder(FirewallPolicyFirewallPolicyArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.statefulDefaultActions = defaults.statefulDefaultActions;
    	      this.statefulEngineOptions = defaults.statefulEngineOptions;
    	      this.statefulRuleGroupReferences = defaults.statefulRuleGroupReferences;
    	      this.statelessCustomActions = defaults.statelessCustomActions;
    	      this.statelessDefaultActions = defaults.statelessDefaultActions;
    	      this.statelessFragmentDefaultActions = defaults.statelessFragmentDefaultActions;
    	      this.statelessRuleGroupReferences = defaults.statelessRuleGroupReferences;
        }

        public Builder statefulDefaultActions(@Nullable Output<List<String>> statefulDefaultActions) {
            this.statefulDefaultActions = statefulDefaultActions;
            return this;
        }

        public Builder statefulDefaultActions(@Nullable List<String> statefulDefaultActions) {
            this.statefulDefaultActions = Output.ofNullable(statefulDefaultActions);
            return this;
        }

        public Builder statefulEngineOptions(@Nullable Output<FirewallPolicyFirewallPolicyStatefulEngineOptionsArgs> statefulEngineOptions) {
            this.statefulEngineOptions = statefulEngineOptions;
            return this;
        }

        public Builder statefulEngineOptions(@Nullable FirewallPolicyFirewallPolicyStatefulEngineOptionsArgs statefulEngineOptions) {
            this.statefulEngineOptions = Output.ofNullable(statefulEngineOptions);
            return this;
        }

        public Builder statefulRuleGroupReferences(@Nullable Output<List<FirewallPolicyFirewallPolicyStatefulRuleGroupReferenceArgs>> statefulRuleGroupReferences) {
            this.statefulRuleGroupReferences = statefulRuleGroupReferences;
            return this;
        }

        public Builder statefulRuleGroupReferences(@Nullable List<FirewallPolicyFirewallPolicyStatefulRuleGroupReferenceArgs> statefulRuleGroupReferences) {
            this.statefulRuleGroupReferences = Output.ofNullable(statefulRuleGroupReferences);
            return this;
        }

        public Builder statelessCustomActions(@Nullable Output<List<FirewallPolicyFirewallPolicyStatelessCustomActionArgs>> statelessCustomActions) {
            this.statelessCustomActions = statelessCustomActions;
            return this;
        }

        public Builder statelessCustomActions(@Nullable List<FirewallPolicyFirewallPolicyStatelessCustomActionArgs> statelessCustomActions) {
            this.statelessCustomActions = Output.ofNullable(statelessCustomActions);
            return this;
        }

        public Builder statelessDefaultActions(Output<List<String>> statelessDefaultActions) {
            this.statelessDefaultActions = Objects.requireNonNull(statelessDefaultActions);
            return this;
        }

        public Builder statelessDefaultActions(List<String> statelessDefaultActions) {
            this.statelessDefaultActions = Output.of(Objects.requireNonNull(statelessDefaultActions));
            return this;
        }

        public Builder statelessFragmentDefaultActions(Output<List<String>> statelessFragmentDefaultActions) {
            this.statelessFragmentDefaultActions = Objects.requireNonNull(statelessFragmentDefaultActions);
            return this;
        }

        public Builder statelessFragmentDefaultActions(List<String> statelessFragmentDefaultActions) {
            this.statelessFragmentDefaultActions = Output.of(Objects.requireNonNull(statelessFragmentDefaultActions));
            return this;
        }

        public Builder statelessRuleGroupReferences(@Nullable Output<List<FirewallPolicyFirewallPolicyStatelessRuleGroupReferenceArgs>> statelessRuleGroupReferences) {
            this.statelessRuleGroupReferences = statelessRuleGroupReferences;
            return this;
        }

        public Builder statelessRuleGroupReferences(@Nullable List<FirewallPolicyFirewallPolicyStatelessRuleGroupReferenceArgs> statelessRuleGroupReferences) {
            this.statelessRuleGroupReferences = Output.ofNullable(statelessRuleGroupReferences);
            return this;
        }
        public FirewallPolicyFirewallPolicyArgs build() {
            return new FirewallPolicyFirewallPolicyArgs(statefulDefaultActions, statefulEngineOptions, statefulRuleGroupReferences, statelessCustomActions, statelessDefaultActions, statelessFragmentDefaultActions, statelessRuleGroupReferences);
        }
    }
}
