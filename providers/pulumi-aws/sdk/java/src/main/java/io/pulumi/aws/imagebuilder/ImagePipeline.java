// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.imagebuilder;

import io.pulumi.aws.Utilities;
import io.pulumi.aws.imagebuilder.ImagePipelineArgs;
import io.pulumi.aws.imagebuilder.inputs.ImagePipelineState;
import io.pulumi.aws.imagebuilder.outputs.ImagePipelineImageTestsConfiguration;
import io.pulumi.aws.imagebuilder.outputs.ImagePipelineSchedule;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Export;
import io.pulumi.core.annotations.ResourceType;
import io.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;

/**
 * Manages an Image Builder Image Pipeline.
 * 
 * ## Example Usage
 * 
 * ## Import
 * 
 * `aws_imagebuilder_image_pipeline` resources can be imported using the Amazon Resource Name (ARN), e.g.,
 * 
 * ```sh
 *  $ pulumi import aws:imagebuilder/imagePipeline:ImagePipeline example arn:aws:imagebuilder:us-east-1:123456789012:image-pipeline/example
 * ```
 * 
 */
@ResourceType(type="aws:imagebuilder/imagePipeline:ImagePipeline")
public class ImagePipeline extends io.pulumi.resources.CustomResource {
    /**
     * Amazon Resource Name (ARN) of the image pipeline.
     * 
     */
    @Export(name="arn", type=String.class, parameters={})
    private Output<String> arn;

    /**
     * @return Amazon Resource Name (ARN) of the image pipeline.
     * 
     */
    public Output<String> arn() {
        return this.arn;
    }
    /**
     * Date the image pipeline was created.
     * 
     */
    @Export(name="dateCreated", type=String.class, parameters={})
    private Output<String> dateCreated;

    /**
     * @return Date the image pipeline was created.
     * 
     */
    public Output<String> dateCreated() {
        return this.dateCreated;
    }
    /**
     * Date the image pipeline was last run.
     * 
     */
    @Export(name="dateLastRun", type=String.class, parameters={})
    private Output<String> dateLastRun;

    /**
     * @return Date the image pipeline was last run.
     * 
     */
    public Output<String> dateLastRun() {
        return this.dateLastRun;
    }
    /**
     * Date the image pipeline will run next.
     * 
     */
    @Export(name="dateNextRun", type=String.class, parameters={})
    private Output<String> dateNextRun;

    /**
     * @return Date the image pipeline will run next.
     * 
     */
    public Output<String> dateNextRun() {
        return this.dateNextRun;
    }
    /**
     * Date the image pipeline was updated.
     * 
     */
    @Export(name="dateUpdated", type=String.class, parameters={})
    private Output<String> dateUpdated;

    /**
     * @return Date the image pipeline was updated.
     * 
     */
    public Output<String> dateUpdated() {
        return this.dateUpdated;
    }
    /**
     * Description of the image pipeline.
     * 
     */
    @Export(name="description", type=String.class, parameters={})
    private Output</* @Nullable */ String> description;

    /**
     * @return Description of the image pipeline.
     * 
     */
    public Output</* @Nullable */ String> description() {
        return this.description;
    }
    /**
     * Amazon Resource Name (ARN) of the Image Builder Distribution Configuration.
     * 
     */
    @Export(name="distributionConfigurationArn", type=String.class, parameters={})
    private Output</* @Nullable */ String> distributionConfigurationArn;

    /**
     * @return Amazon Resource Name (ARN) of the Image Builder Distribution Configuration.
     * 
     */
    public Output</* @Nullable */ String> distributionConfigurationArn() {
        return this.distributionConfigurationArn;
    }
    /**
     * Whether additional information about the image being created is collected. Defaults to `true`.
     * 
     */
    @Export(name="enhancedImageMetadataEnabled", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> enhancedImageMetadataEnabled;

    /**
     * @return Whether additional information about the image being created is collected. Defaults to `true`.
     * 
     */
    public Output</* @Nullable */ Boolean> enhancedImageMetadataEnabled() {
        return this.enhancedImageMetadataEnabled;
    }
    /**
     * Amazon Resource Name (ARN) of the Image Builder Infrastructure Recipe.
     * 
     */
    @Export(name="imageRecipeArn", type=String.class, parameters={})
    private Output<String> imageRecipeArn;

    /**
     * @return Amazon Resource Name (ARN) of the Image Builder Infrastructure Recipe.
     * 
     */
    public Output<String> imageRecipeArn() {
        return this.imageRecipeArn;
    }
    /**
     * Configuration block with image tests configuration. Detailed below.
     * 
     */
    @Export(name="imageTestsConfiguration", type=ImagePipelineImageTestsConfiguration.class, parameters={})
    private Output<ImagePipelineImageTestsConfiguration> imageTestsConfiguration;

    /**
     * @return Configuration block with image tests configuration. Detailed below.
     * 
     */
    public Output<ImagePipelineImageTestsConfiguration> imageTestsConfiguration() {
        return this.imageTestsConfiguration;
    }
    /**
     * Amazon Resource Name (ARN) of the Image Builder Infrastructure Configuration.
     * 
     */
    @Export(name="infrastructureConfigurationArn", type=String.class, parameters={})
    private Output<String> infrastructureConfigurationArn;

    /**
     * @return Amazon Resource Name (ARN) of the Image Builder Infrastructure Configuration.
     * 
     */
    public Output<String> infrastructureConfigurationArn() {
        return this.infrastructureConfigurationArn;
    }
    /**
     * Name of the image pipeline.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return Name of the image pipeline.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Platform of the image pipeline.
     * 
     */
    @Export(name="platform", type=String.class, parameters={})
    private Output<String> platform;

    /**
     * @return Platform of the image pipeline.
     * 
     */
    public Output<String> platform() {
        return this.platform;
    }
    /**
     * Configuration block with schedule settings. Detailed below.
     * 
     */
    @Export(name="schedule", type=ImagePipelineSchedule.class, parameters={})
    private Output</* @Nullable */ ImagePipelineSchedule> schedule;

    /**
     * @return Configuration block with schedule settings. Detailed below.
     * 
     */
    public Output</* @Nullable */ ImagePipelineSchedule> schedule() {
        return this.schedule;
    }
    /**
     * Status of the image pipeline. Valid values are `DISABLED` and `ENABLED`. Defaults to `ENABLED`.
     * 
     */
    @Export(name="status", type=String.class, parameters={})
    private Output</* @Nullable */ String> status;

    /**
     * @return Status of the image pipeline. Valid values are `DISABLED` and `ENABLED`. Defaults to `ENABLED`.
     * 
     */
    public Output</* @Nullable */ String> status() {
        return this.status;
    }
    /**
     * Key-value map of resource tags for the image pipeline. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Export(name="tags", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return Key-value map of resource tags for the image pipeline. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Output</* @Nullable */ Map<String,String>> tags() {
        return this.tags;
    }
    /**
     * A map of tags assigned to the resource, including those inherited from the provider .
     * 
     */
    @Export(name="tagsAll", type=Map.class, parameters={String.class, String.class})
    private Output<Map<String,String>> tagsAll;

    /**
     * @return A map of tags assigned to the resource, including those inherited from the provider .
     * 
     */
    public Output<Map<String,String>> tagsAll() {
        return this.tagsAll;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ImagePipeline(String name) {
        this(name, ImagePipelineArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ImagePipeline(String name, ImagePipelineArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ImagePipeline(String name, ImagePipelineArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:imagebuilder/imagePipeline:ImagePipeline", name, args == null ? ImagePipelineArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private ImagePipeline(String name, Output<String> id, @Nullable ImagePipelineState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:imagebuilder/imagePipeline:ImagePipeline", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ImagePipeline get(String name, Output<String> id, @Nullable ImagePipelineState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new ImagePipeline(name, id, state, options);
    }
}
