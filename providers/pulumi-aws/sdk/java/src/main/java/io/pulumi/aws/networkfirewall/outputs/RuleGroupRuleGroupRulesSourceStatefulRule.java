// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.networkfirewall.outputs;

import io.pulumi.aws.networkfirewall.outputs.RuleGroupRuleGroupRulesSourceStatefulRuleHeader;
import io.pulumi.aws.networkfirewall.outputs.RuleGroupRuleGroupRulesSourceStatefulRuleRuleOption;
import io.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class RuleGroupRuleGroupRulesSourceStatefulRule {
    /**
     * Action to take with packets in a traffic flow when the flow matches the stateful rule criteria. For all actions, AWS Network Firewall performs the specified action and discontinues stateful inspection of the traffic flow. Valid values: `ALERT`, `DROP` or `PASS`.
     * 
     */
    private final String action;
    /**
     * A configuration block containing the stateful 5-tuple inspection criteria for the rule, used to inspect traffic flows. See Header below for details.
     * 
     */
    private final RuleGroupRuleGroupRulesSourceStatefulRuleHeader header;
    /**
     * Set of configuration blocks containing additional settings for a stateful rule. See Rule Option below for details.
     * 
     */
    private final List<RuleGroupRuleGroupRulesSourceStatefulRuleRuleOption> ruleOptions;

    @CustomType.Constructor
    private RuleGroupRuleGroupRulesSourceStatefulRule(
        @CustomType.Parameter("action") String action,
        @CustomType.Parameter("header") RuleGroupRuleGroupRulesSourceStatefulRuleHeader header,
        @CustomType.Parameter("ruleOptions") List<RuleGroupRuleGroupRulesSourceStatefulRuleRuleOption> ruleOptions) {
        this.action = action;
        this.header = header;
        this.ruleOptions = ruleOptions;
    }

    /**
     * Action to take with packets in a traffic flow when the flow matches the stateful rule criteria. For all actions, AWS Network Firewall performs the specified action and discontinues stateful inspection of the traffic flow. Valid values: `ALERT`, `DROP` or `PASS`.
     * 
    */
    public String getAction() {
        return this.action;
    }
    /**
     * A configuration block containing the stateful 5-tuple inspection criteria for the rule, used to inspect traffic flows. See Header below for details.
     * 
    */
    public RuleGroupRuleGroupRulesSourceStatefulRuleHeader getHeader() {
        return this.header;
    }
    /**
     * Set of configuration blocks containing additional settings for a stateful rule. See Rule Option below for details.
     * 
    */
    public List<RuleGroupRuleGroupRulesSourceStatefulRuleRuleOption> getRuleOptions() {
        return this.ruleOptions;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RuleGroupRuleGroupRulesSourceStatefulRule defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String action;
        private RuleGroupRuleGroupRulesSourceStatefulRuleHeader header;
        private List<RuleGroupRuleGroupRulesSourceStatefulRuleRuleOption> ruleOptions;

        public Builder() {
    	      // Empty
        }

        public Builder(RuleGroupRuleGroupRulesSourceStatefulRule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.action = defaults.action;
    	      this.header = defaults.header;
    	      this.ruleOptions = defaults.ruleOptions;
        }

        public Builder action(String action) {
            this.action = Objects.requireNonNull(action);
            return this;
        }
        public Builder header(RuleGroupRuleGroupRulesSourceStatefulRuleHeader header) {
            this.header = Objects.requireNonNull(header);
            return this;
        }
        public Builder ruleOptions(List<RuleGroupRuleGroupRulesSourceStatefulRuleRuleOption> ruleOptions) {
            this.ruleOptions = Objects.requireNonNull(ruleOptions);
            return this;
        }
        public Builder ruleOptions(RuleGroupRuleGroupRulesSourceStatefulRuleRuleOption... ruleOptions) {
            return ruleOptions(List.of(ruleOptions));
        }        public RuleGroupRuleGroupRulesSourceStatefulRule build() {
            return new RuleGroupRuleGroupRulesSourceStatefulRule(action, header, ruleOptions);
        }
    }
}
