// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.s3.outputs;

import io.pulumi.aws.s3.outputs.BucketReplicationConfigRuleDestinationAccessControlTranslation;
import io.pulumi.aws.s3.outputs.BucketReplicationConfigRuleDestinationEncryptionConfiguration;
import io.pulumi.aws.s3.outputs.BucketReplicationConfigRuleDestinationMetrics;
import io.pulumi.aws.s3.outputs.BucketReplicationConfigRuleDestinationReplicationTime;
import io.pulumi.core.annotations.OutputCustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class BucketReplicationConfigRuleDestination {
    /**
     * A configuration block that specifies the overrides to use for object owners on replication documented below. Specify this only in a cross-account scenario (where source and destination bucket owners are not the same), and you want to change replica ownership to the AWS account that owns the destination bucket. If this is not specified in the replication configuration, the replicas are owned by same AWS account that owns the source object. Must be used in conjunction with `account` owner override configuration.
     * 
     */
    private final @Nullable BucketReplicationConfigRuleDestinationAccessControlTranslation accessControlTranslation;
    /**
     * The Account ID to specify the replica ownership. Must be used in conjunction with `access_control_translation` override configuration.
     * 
     */
    private final @Nullable String account;
    /**
     * The ARN of the S3 bucket where you want Amazon S3 to store replicas of the objects identified by the rule.
     * 
     */
    private final String bucket;
    /**
     * A configuration block that provides information about encryption documented below. If `source_selection_criteria` is specified, you must specify this element.
     * 
     */
    private final @Nullable BucketReplicationConfigRuleDestinationEncryptionConfiguration encryptionConfiguration;
    /**
     * A configuration block that specifies replication metrics-related settings enabling replication metrics and events documented below.
     * 
     */
    private final @Nullable BucketReplicationConfigRuleDestinationMetrics metrics;
    /**
     * A configuration block that specifies S3 Replication Time Control (S3 RTC), including whether S3 RTC is enabled and the time when all objects and operations on objects must be replicated documented below. Replication Time Control must be used in conjunction with `metrics`.
     * 
     */
    private final @Nullable BucketReplicationConfigRuleDestinationReplicationTime replicationTime;
    /**
     * The [storage class](https://docs.aws.amazon.com/AmazonS3/latest/API/API_Destination.html#AmazonS3-Type-Destination-StorageClass) used to store the object. By default, Amazon S3 uses the storage class of the source object to create the object replica.
     * 
     */
    private final @Nullable String storageClass;

    @OutputCustomType.Constructor({"accessControlTranslation","account","bucket","encryptionConfiguration","metrics","replicationTime","storageClass"})
    private BucketReplicationConfigRuleDestination(
        @Nullable BucketReplicationConfigRuleDestinationAccessControlTranslation accessControlTranslation,
        @Nullable String account,
        String bucket,
        @Nullable BucketReplicationConfigRuleDestinationEncryptionConfiguration encryptionConfiguration,
        @Nullable BucketReplicationConfigRuleDestinationMetrics metrics,
        @Nullable BucketReplicationConfigRuleDestinationReplicationTime replicationTime,
        @Nullable String storageClass) {
        this.accessControlTranslation = accessControlTranslation;
        this.account = account;
        this.bucket = Objects.requireNonNull(bucket);
        this.encryptionConfiguration = encryptionConfiguration;
        this.metrics = metrics;
        this.replicationTime = replicationTime;
        this.storageClass = storageClass;
    }

    /**
     * A configuration block that specifies the overrides to use for object owners on replication documented below. Specify this only in a cross-account scenario (where source and destination bucket owners are not the same), and you want to change replica ownership to the AWS account that owns the destination bucket. If this is not specified in the replication configuration, the replicas are owned by same AWS account that owns the source object. Must be used in conjunction with `account` owner override configuration.
     * 
    */
    public Optional<BucketReplicationConfigRuleDestinationAccessControlTranslation> getAccessControlTranslation() {
        return Optional.ofNullable(this.accessControlTranslation);
    }
    /**
     * The Account ID to specify the replica ownership. Must be used in conjunction with `access_control_translation` override configuration.
     * 
    */
    public Optional<String> getAccount() {
        return Optional.ofNullable(this.account);
    }
    /**
     * The ARN of the S3 bucket where you want Amazon S3 to store replicas of the objects identified by the rule.
     * 
    */
    public String getBucket() {
        return this.bucket;
    }
    /**
     * A configuration block that provides information about encryption documented below. If `source_selection_criteria` is specified, you must specify this element.
     * 
    */
    public Optional<BucketReplicationConfigRuleDestinationEncryptionConfiguration> getEncryptionConfiguration() {
        return Optional.ofNullable(this.encryptionConfiguration);
    }
    /**
     * A configuration block that specifies replication metrics-related settings enabling replication metrics and events documented below.
     * 
    */
    public Optional<BucketReplicationConfigRuleDestinationMetrics> getMetrics() {
        return Optional.ofNullable(this.metrics);
    }
    /**
     * A configuration block that specifies S3 Replication Time Control (S3 RTC), including whether S3 RTC is enabled and the time when all objects and operations on objects must be replicated documented below. Replication Time Control must be used in conjunction with `metrics`.
     * 
    */
    public Optional<BucketReplicationConfigRuleDestinationReplicationTime> getReplicationTime() {
        return Optional.ofNullable(this.replicationTime);
    }
    /**
     * The [storage class](https://docs.aws.amazon.com/AmazonS3/latest/API/API_Destination.html#AmazonS3-Type-Destination-StorageClass) used to store the object. By default, Amazon S3 uses the storage class of the source object to create the object replica.
     * 
    */
    public Optional<String> getStorageClass() {
        return Optional.ofNullable(this.storageClass);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BucketReplicationConfigRuleDestination defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable BucketReplicationConfigRuleDestinationAccessControlTranslation accessControlTranslation;
        private @Nullable String account;
        private String bucket;
        private @Nullable BucketReplicationConfigRuleDestinationEncryptionConfiguration encryptionConfiguration;
        private @Nullable BucketReplicationConfigRuleDestinationMetrics metrics;
        private @Nullable BucketReplicationConfigRuleDestinationReplicationTime replicationTime;
        private @Nullable String storageClass;

        public Builder() {
    	      // Empty
        }

        public Builder(BucketReplicationConfigRuleDestination defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessControlTranslation = defaults.accessControlTranslation;
    	      this.account = defaults.account;
    	      this.bucket = defaults.bucket;
    	      this.encryptionConfiguration = defaults.encryptionConfiguration;
    	      this.metrics = defaults.metrics;
    	      this.replicationTime = defaults.replicationTime;
    	      this.storageClass = defaults.storageClass;
        }

        public Builder setAccessControlTranslation(@Nullable BucketReplicationConfigRuleDestinationAccessControlTranslation accessControlTranslation) {
            this.accessControlTranslation = accessControlTranslation;
            return this;
        }

        public Builder setAccount(@Nullable String account) {
            this.account = account;
            return this;
        }

        public Builder setBucket(String bucket) {
            this.bucket = Objects.requireNonNull(bucket);
            return this;
        }

        public Builder setEncryptionConfiguration(@Nullable BucketReplicationConfigRuleDestinationEncryptionConfiguration encryptionConfiguration) {
            this.encryptionConfiguration = encryptionConfiguration;
            return this;
        }

        public Builder setMetrics(@Nullable BucketReplicationConfigRuleDestinationMetrics metrics) {
            this.metrics = metrics;
            return this;
        }

        public Builder setReplicationTime(@Nullable BucketReplicationConfigRuleDestinationReplicationTime replicationTime) {
            this.replicationTime = replicationTime;
            return this;
        }

        public Builder setStorageClass(@Nullable String storageClass) {
            this.storageClass = storageClass;
            return this;
        }
        public BucketReplicationConfigRuleDestination build() {
            return new BucketReplicationConfigRuleDestination(accessControlTranslation, account, bucket, encryptionConfiguration, metrics, replicationTime, storageClass);
        }
    }
}
