// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.imagebuilder.inputs;

import io.pulumi.aws.imagebuilder.inputs.DistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class DistributionConfigurationDistributionContainerDistributionConfigurationArgs extends io.pulumi.resources.ResourceArgs {

    public static final DistributionConfigurationDistributionContainerDistributionConfigurationArgs Empty = new DistributionConfigurationDistributionContainerDistributionConfigurationArgs();

    /**
     * Set of tags that are attached to the container distribution configuration.
     * 
     */
    @Import(name="containerTags")
      private final @Nullable Output<List<String>> containerTags;

    public Output<List<String>> containerTags() {
        return this.containerTags == null ? Codegen.empty() : this.containerTags;
    }

    /**
     * Description of the container distribution configuration.
     * 
     */
    @Import(name="description")
      private final @Nullable Output<String> description;

    public Output<String> description() {
        return this.description == null ? Codegen.empty() : this.description;
    }

    /**
     * Configuration block with the destination repository for the container distribution configuration.
     * 
     */
    @Import(name="targetRepository", required=true)
      private final Output<DistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryArgs> targetRepository;

    public Output<DistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryArgs> targetRepository() {
        return this.targetRepository;
    }

    public DistributionConfigurationDistributionContainerDistributionConfigurationArgs(
        @Nullable Output<List<String>> containerTags,
        @Nullable Output<String> description,
        Output<DistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryArgs> targetRepository) {
        this.containerTags = containerTags;
        this.description = description;
        this.targetRepository = Objects.requireNonNull(targetRepository, "expected parameter 'targetRepository' to be non-null");
    }

    private DistributionConfigurationDistributionContainerDistributionConfigurationArgs() {
        this.containerTags = Codegen.empty();
        this.description = Codegen.empty();
        this.targetRepository = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DistributionConfigurationDistributionContainerDistributionConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<List<String>> containerTags;
        private @Nullable Output<String> description;
        private Output<DistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryArgs> targetRepository;

        public Builder() {
    	      // Empty
        }

        public Builder(DistributionConfigurationDistributionContainerDistributionConfigurationArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.containerTags = defaults.containerTags;
    	      this.description = defaults.description;
    	      this.targetRepository = defaults.targetRepository;
        }

        public Builder containerTags(@Nullable Output<List<String>> containerTags) {
            this.containerTags = containerTags;
            return this;
        }
        public Builder containerTags(@Nullable List<String> containerTags) {
            this.containerTags = Codegen.ofNullable(containerTags);
            return this;
        }
        public Builder containerTags(String... containerTags) {
            return containerTags(List.of(containerTags));
        }
        public Builder description(@Nullable Output<String> description) {
            this.description = description;
            return this;
        }
        public Builder description(@Nullable String description) {
            this.description = Codegen.ofNullable(description);
            return this;
        }
        public Builder targetRepository(Output<DistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryArgs> targetRepository) {
            this.targetRepository = Objects.requireNonNull(targetRepository);
            return this;
        }
        public Builder targetRepository(DistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryArgs targetRepository) {
            this.targetRepository = Output.of(Objects.requireNonNull(targetRepository));
            return this;
        }        public DistributionConfigurationDistributionContainerDistributionConfigurationArgs build() {
            return new DistributionConfigurationDistributionContainerDistributionConfigurationArgs(containerTags, description, targetRepository);
        }
    }
}
