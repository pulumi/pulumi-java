// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.wafv2.outputs;

import io.pulumi.aws.wafv2.outputs.WebAclRuleOverrideActionCount;
import io.pulumi.aws.wafv2.outputs.WebAclRuleOverrideActionNone;
import io.pulumi.core.annotations.CustomType;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class WebAclRuleOverrideAction {
    /**
     * Override the rule action setting to count (i.e., only count matches). Configured as an empty block `{}`.
     * 
     */
    private final @Nullable WebAclRuleOverrideActionCount count;
    /**
     * Don't override the rule action setting. Configured as an empty block `{}`.
     * 
     */
    private final @Nullable WebAclRuleOverrideActionNone none;

    @CustomType.Constructor
    private WebAclRuleOverrideAction(
        @CustomType.Parameter("count") @Nullable WebAclRuleOverrideActionCount count,
        @CustomType.Parameter("none") @Nullable WebAclRuleOverrideActionNone none) {
        this.count = count;
        this.none = none;
    }

    /**
     * Override the rule action setting to count (i.e., only count matches). Configured as an empty block `{}`.
     * 
    */
    public Optional<WebAclRuleOverrideActionCount> count() {
        return Optional.ofNullable(this.count);
    }
    /**
     * Don't override the rule action setting. Configured as an empty block `{}`.
     * 
    */
    public Optional<WebAclRuleOverrideActionNone> none() {
        return Optional.ofNullable(this.none);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(WebAclRuleOverrideAction defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable WebAclRuleOverrideActionCount count;
        private @Nullable WebAclRuleOverrideActionNone none;

        public Builder() {
    	      // Empty
        }

        public Builder(WebAclRuleOverrideAction defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.count = defaults.count;
    	      this.none = defaults.none;
        }

        public Builder count(@Nullable WebAclRuleOverrideActionCount count) {
            this.count = count;
            return this;
        }
        public Builder none(@Nullable WebAclRuleOverrideActionNone none) {
            this.none = none;
            return this;
        }        public WebAclRuleOverrideAction build() {
            return new WebAclRuleOverrideAction(count, none);
        }
    }
}
