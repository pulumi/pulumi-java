// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.efs.inputs;

import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetFileSystemArgs extends io.pulumi.resources.InvokeArgs {

    public static final GetFileSystemArgs Empty = new GetFileSystemArgs();

    /**
     * Restricts the list to the file system with this creation token.
     * 
     */
    @InputImport(name="creationToken")
      private final @Nullable String creationToken;

    public Optional<String> getCreationToken() {
        return this.creationToken == null ? Optional.empty() : Optional.ofNullable(this.creationToken);
    }

    /**
     * The ID that identifies the file system (e.g., fs-ccfc0d65).
     * 
     */
    @InputImport(name="fileSystemId")
      private final @Nullable String fileSystemId;

    public Optional<String> getFileSystemId() {
        return this.fileSystemId == null ? Optional.empty() : Optional.ofNullable(this.fileSystemId);
    }

    /**
     * Restricts the list to the file system with these tags.
     * 
     */
    @InputImport(name="tags")
      private final @Nullable Map<String,String> tags;

    public Map<String,String> getTags() {
        return this.tags == null ? Map.of() : this.tags;
    }

    public GetFileSystemArgs(
        @Nullable String creationToken,
        @Nullable String fileSystemId,
        @Nullable Map<String,String> tags) {
        this.creationToken = creationToken;
        this.fileSystemId = fileSystemId;
        this.tags = tags;
    }

    private GetFileSystemArgs() {
        this.creationToken = null;
        this.fileSystemId = null;
        this.tags = Map.of();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetFileSystemArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String creationToken;
        private @Nullable String fileSystemId;
        private @Nullable Map<String,String> tags;

        public Builder() {
    	      // Empty
        }

        public Builder(GetFileSystemArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.creationToken = defaults.creationToken;
    	      this.fileSystemId = defaults.fileSystemId;
    	      this.tags = defaults.tags;
        }

        public Builder setCreationToken(@Nullable String creationToken) {
            this.creationToken = creationToken;
            return this;
        }

        public Builder setFileSystemId(@Nullable String fileSystemId) {
            this.fileSystemId = fileSystemId;
            return this;
        }

        public Builder setTags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        public GetFileSystemArgs build() {
            return new GetFileSystemArgs(creationToken, fileSystemId, tags);
        }
    }
}
