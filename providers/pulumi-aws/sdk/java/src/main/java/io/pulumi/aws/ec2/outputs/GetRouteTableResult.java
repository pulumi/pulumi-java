// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.ec2.outputs;

import io.pulumi.aws.ec2.outputs.GetRouteTableAssociation;
import io.pulumi.aws.ec2.outputs.GetRouteTableFilter;
import io.pulumi.aws.ec2.outputs.GetRouteTableRoute;
import io.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class GetRouteTableResult {
    /**
     * ARN of the route table.
     * 
     */
    private final String arn;
    /**
     * List of associations with attributes detailed below.
     * 
     */
    private final List<GetRouteTableAssociation> associations;
    private final @Nullable List<GetRouteTableFilter> filters;
    /**
     * Gateway ID. Only set when associated with an Internet Gateway or Virtual Private Gateway.
     * 
     */
    private final String gatewayId;
    /**
     * The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    /**
     * ID of the AWS account that owns the route table.
     * 
     */
    private final String ownerId;
    /**
     * Route Table ID.
     * 
     */
    private final String routeTableId;
    /**
     * List of routes with attributes detailed below.
     * 
     */
    private final List<GetRouteTableRoute> routes;
    /**
     * Subnet ID. Only set when associated with a subnet.
     * 
     */
    private final String subnetId;
    private final Map<String,String> tags;
    private final String vpcId;

    @CustomType.Constructor
    private GetRouteTableResult(
        @CustomType.Parameter("arn") String arn,
        @CustomType.Parameter("associations") List<GetRouteTableAssociation> associations,
        @CustomType.Parameter("filters") @Nullable List<GetRouteTableFilter> filters,
        @CustomType.Parameter("gatewayId") String gatewayId,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("ownerId") String ownerId,
        @CustomType.Parameter("routeTableId") String routeTableId,
        @CustomType.Parameter("routes") List<GetRouteTableRoute> routes,
        @CustomType.Parameter("subnetId") String subnetId,
        @CustomType.Parameter("tags") Map<String,String> tags,
        @CustomType.Parameter("vpcId") String vpcId) {
        this.arn = arn;
        this.associations = associations;
        this.filters = filters;
        this.gatewayId = gatewayId;
        this.id = id;
        this.ownerId = ownerId;
        this.routeTableId = routeTableId;
        this.routes = routes;
        this.subnetId = subnetId;
        this.tags = tags;
        this.vpcId = vpcId;
    }

    /**
     * ARN of the route table.
     * 
    */
    public String getArn() {
        return this.arn;
    }
    /**
     * List of associations with attributes detailed below.
     * 
    */
    public List<GetRouteTableAssociation> getAssociations() {
        return this.associations;
    }
    public List<GetRouteTableFilter> getFilters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * Gateway ID. Only set when associated with an Internet Gateway or Virtual Private Gateway.
     * 
    */
    public String getGatewayId() {
        return this.gatewayId;
    }
    /**
     * The provider-assigned unique ID for this managed resource.
     * 
    */
    public String getId() {
        return this.id;
    }
    /**
     * ID of the AWS account that owns the route table.
     * 
    */
    public String getOwnerId() {
        return this.ownerId;
    }
    /**
     * Route Table ID.
     * 
    */
    public String getRouteTableId() {
        return this.routeTableId;
    }
    /**
     * List of routes with attributes detailed below.
     * 
    */
    public List<GetRouteTableRoute> getRoutes() {
        return this.routes;
    }
    /**
     * Subnet ID. Only set when associated with a subnet.
     * 
    */
    public String getSubnetId() {
        return this.subnetId;
    }
    public Map<String,String> getTags() {
        return this.tags;
    }
    public String getVpcId() {
        return this.vpcId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRouteTableResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String arn;
        private List<GetRouteTableAssociation> associations;
        private @Nullable List<GetRouteTableFilter> filters;
        private String gatewayId;
        private String id;
        private String ownerId;
        private String routeTableId;
        private List<GetRouteTableRoute> routes;
        private String subnetId;
        private Map<String,String> tags;
        private String vpcId;

        public Builder() {
    	      // Empty
        }

        public Builder(GetRouteTableResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.associations = defaults.associations;
    	      this.filters = defaults.filters;
    	      this.gatewayId = defaults.gatewayId;
    	      this.id = defaults.id;
    	      this.ownerId = defaults.ownerId;
    	      this.routeTableId = defaults.routeTableId;
    	      this.routes = defaults.routes;
    	      this.subnetId = defaults.subnetId;
    	      this.tags = defaults.tags;
    	      this.vpcId = defaults.vpcId;
        }

        public Builder arn(String arn) {
            this.arn = Objects.requireNonNull(arn);
            return this;
        }

        public Builder associations(List<GetRouteTableAssociation> associations) {
            this.associations = Objects.requireNonNull(associations);
            return this;
        }

        public Builder filters(@Nullable List<GetRouteTableFilter> filters) {
            this.filters = filters;
            return this;
        }

        public Builder gatewayId(String gatewayId) {
            this.gatewayId = Objects.requireNonNull(gatewayId);
            return this;
        }

        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }

        public Builder ownerId(String ownerId) {
            this.ownerId = Objects.requireNonNull(ownerId);
            return this;
        }

        public Builder routeTableId(String routeTableId) {
            this.routeTableId = Objects.requireNonNull(routeTableId);
            return this;
        }

        public Builder routes(List<GetRouteTableRoute> routes) {
            this.routes = Objects.requireNonNull(routes);
            return this;
        }

        public Builder subnetId(String subnetId) {
            this.subnetId = Objects.requireNonNull(subnetId);
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            this.tags = Objects.requireNonNull(tags);
            return this;
        }

        public Builder vpcId(String vpcId) {
            this.vpcId = Objects.requireNonNull(vpcId);
            return this;
        }
        public GetRouteTableResult build() {
            return new GetRouteTableResult(arn, associations, filters, gatewayId, id, ownerId, routeTableId, routes, subnetId, tags, vpcId);
        }
    }
}
