// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.ssm.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class MaintenanceWindowTaskTaskInvocationParametersLambdaParametersGetArgs extends io.pulumi.resources.ResourceArgs {

    public static final MaintenanceWindowTaskTaskInvocationParametersLambdaParametersGetArgs Empty = new MaintenanceWindowTaskTaskInvocationParametersLambdaParametersGetArgs();

    /**
     * Pass client-specific information to the Lambda function that you are invoking.
     * 
     */
    @InputImport(name="clientContext")
      private final @Nullable Input<String> clientContext;

    public Input<String> getClientContext() {
        return this.clientContext == null ? Input.empty() : this.clientContext;
    }

    /**
     * JSON to provide to your Lambda function as input.
     * 
     */
    @InputImport(name="payload")
      private final @Nullable Input<String> payload;

    public Input<String> getPayload() {
        return this.payload == null ? Input.empty() : this.payload;
    }

    /**
     * Specify a Lambda function version or alias name.
     * 
     */
    @InputImport(name="qualifier")
      private final @Nullable Input<String> qualifier;

    public Input<String> getQualifier() {
        return this.qualifier == null ? Input.empty() : this.qualifier;
    }

    public MaintenanceWindowTaskTaskInvocationParametersLambdaParametersGetArgs(
        @Nullable Input<String> clientContext,
        @Nullable Input<String> payload,
        @Nullable Input<String> qualifier) {
        this.clientContext = clientContext;
        this.payload = payload;
        this.qualifier = qualifier;
    }

    private MaintenanceWindowTaskTaskInvocationParametersLambdaParametersGetArgs() {
        this.clientContext = Input.empty();
        this.payload = Input.empty();
        this.qualifier = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MaintenanceWindowTaskTaskInvocationParametersLambdaParametersGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> clientContext;
        private @Nullable Input<String> payload;
        private @Nullable Input<String> qualifier;

        public Builder() {
    	      // Empty
        }

        public Builder(MaintenanceWindowTaskTaskInvocationParametersLambdaParametersGetArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.clientContext = defaults.clientContext;
    	      this.payload = defaults.payload;
    	      this.qualifier = defaults.qualifier;
        }

        public Builder setClientContext(@Nullable Input<String> clientContext) {
            this.clientContext = clientContext;
            return this;
        }

        public Builder setClientContext(@Nullable String clientContext) {
            this.clientContext = Input.ofNullable(clientContext);
            return this;
        }

        public Builder setPayload(@Nullable Input<String> payload) {
            this.payload = payload;
            return this;
        }

        public Builder setPayload(@Nullable String payload) {
            this.payload = Input.ofNullable(payload);
            return this;
        }

        public Builder setQualifier(@Nullable Input<String> qualifier) {
            this.qualifier = qualifier;
            return this;
        }

        public Builder setQualifier(@Nullable String qualifier) {
            this.qualifier = Input.ofNullable(qualifier);
            return this;
        }
        public MaintenanceWindowTaskTaskInvocationParametersLambdaParametersGetArgs build() {
            return new MaintenanceWindowTaskTaskInvocationParametersLambdaParametersGetArgs(clientContext, payload, qualifier);
        }
    }
}
