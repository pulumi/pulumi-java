// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.elasticloadbalancing.inputs;

import io.pulumi.core.annotations.InputImport;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;


public final class GetLoadBalancerListener extends io.pulumi.resources.InvokeArgs {

    public static final GetLoadBalancerListener Empty = new GetLoadBalancerListener();

    @InputImport(name="instancePort", required=true)
      private final Integer instancePort;

    public Integer getInstancePort() {
        return this.instancePort;
    }

    @InputImport(name="instanceProtocol", required=true)
      private final String instanceProtocol;

    public String getInstanceProtocol() {
        return this.instanceProtocol;
    }

    @InputImport(name="lbPort", required=true)
      private final Integer lbPort;

    public Integer getLbPort() {
        return this.lbPort;
    }

    @InputImport(name="lbProtocol", required=true)
      private final String lbProtocol;

    public String getLbProtocol() {
        return this.lbProtocol;
    }

    @InputImport(name="sslCertificateId", required=true)
      private final String sslCertificateId;

    public String getSslCertificateId() {
        return this.sslCertificateId;
    }

    public GetLoadBalancerListener(
        Integer instancePort,
        String instanceProtocol,
        Integer lbPort,
        String lbProtocol,
        String sslCertificateId) {
        this.instancePort = Objects.requireNonNull(instancePort, "expected parameter 'instancePort' to be non-null");
        this.instanceProtocol = Objects.requireNonNull(instanceProtocol, "expected parameter 'instanceProtocol' to be non-null");
        this.lbPort = Objects.requireNonNull(lbPort, "expected parameter 'lbPort' to be non-null");
        this.lbProtocol = Objects.requireNonNull(lbProtocol, "expected parameter 'lbProtocol' to be non-null");
        this.sslCertificateId = Objects.requireNonNull(sslCertificateId, "expected parameter 'sslCertificateId' to be non-null");
    }

    private GetLoadBalancerListener() {
        this.instancePort = null;
        this.instanceProtocol = null;
        this.lbPort = null;
        this.lbProtocol = null;
        this.sslCertificateId = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetLoadBalancerListener defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Integer instancePort;
        private String instanceProtocol;
        private Integer lbPort;
        private String lbProtocol;
        private String sslCertificateId;

        public Builder() {
    	      // Empty
        }

        public Builder(GetLoadBalancerListener defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.instancePort = defaults.instancePort;
    	      this.instanceProtocol = defaults.instanceProtocol;
    	      this.lbPort = defaults.lbPort;
    	      this.lbProtocol = defaults.lbProtocol;
    	      this.sslCertificateId = defaults.sslCertificateId;
        }

        public Builder setInstancePort(Integer instancePort) {
            this.instancePort = Objects.requireNonNull(instancePort);
            return this;
        }

        public Builder setInstanceProtocol(String instanceProtocol) {
            this.instanceProtocol = Objects.requireNonNull(instanceProtocol);
            return this;
        }

        public Builder setLbPort(Integer lbPort) {
            this.lbPort = Objects.requireNonNull(lbPort);
            return this;
        }

        public Builder setLbProtocol(String lbProtocol) {
            this.lbProtocol = Objects.requireNonNull(lbProtocol);
            return this;
        }

        public Builder setSslCertificateId(String sslCertificateId) {
            this.sslCertificateId = Objects.requireNonNull(sslCertificateId);
            return this;
        }
        public GetLoadBalancerListener build() {
            return new GetLoadBalancerListener(instancePort, instanceProtocol, lbPort, lbProtocol, sslCertificateId);
        }
    }
}
