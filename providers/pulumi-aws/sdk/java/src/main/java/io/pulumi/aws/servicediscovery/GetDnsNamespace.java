// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.servicediscovery;

import io.pulumi.aws.Utilities;
import io.pulumi.aws.servicediscovery.inputs.GetDnsNamespaceArgs;
import io.pulumi.aws.servicediscovery.outputs.GetDnsNamespaceResult;
import io.pulumi.core.TypeShape;
import io.pulumi.deployment.Deployment;
import io.pulumi.deployment.InvokeOptions;
import java.util.concurrent.CompletableFuture;
import javax.annotation.Nullable;

public class GetDnsNamespace {
    private GetDnsNamespace() {}
    public interface BuilderApplicator {
        public void apply(GetDnsNamespaceArgs.Builder a);
    }
    private static GetDnsNamespaceArgs buildArgs(BuilderApplicator argsBuilder) {
        final var builder = GetDnsNamespaceArgs.builder();
        argsBuilder.apply(builder);
        return builder.build();
    }
    /**
     * Retrieves information about a Service Discovery private or public DNS namespace.
 * 
 * ## Example Usage
 * 
     *
     * A collection of arguments for invoking getDnsNamespace.
 * 
     *
     * A collection of values returned by getDnsNamespace.
 * 
     */
    public static CompletableFuture<GetDnsNamespaceResult> invokeAsync(BuilderApplicator argsBuilder, @Nullable InvokeOptions options) {
        return invokeAsync(buildArgs(argsBuilder), Utilities.withVersion(options));
    }
    /**
         * Retrieves information about a Service Discovery private or public DNS namespace.
     * 
     * ## Example Usage
     * 
     *
         * A collection of arguments for invoking getDnsNamespace.
     * 
     *
         * A collection of values returned by getDnsNamespace.
     * 
     */
    public static CompletableFuture<GetDnsNamespaceResult> invokeAsync(GetDnsNamespaceArgs args, @Nullable InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aws:servicediscovery/getDnsNamespace:getDnsNamespace", TypeShape.of(GetDnsNamespaceResult.class), args == null ? GetDnsNamespaceArgs.Empty : args, Utilities.withVersion(options));
    }
}
