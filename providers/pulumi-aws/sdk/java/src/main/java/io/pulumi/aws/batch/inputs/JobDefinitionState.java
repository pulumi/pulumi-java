// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.batch.inputs;

import io.pulumi.aws.batch.inputs.JobDefinitionRetryStrategyGetArgs;
import io.pulumi.aws.batch.inputs.JobDefinitionTimeoutGetArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class JobDefinitionState extends io.pulumi.resources.ResourceArgs {

    public static final JobDefinitionState Empty = new JobDefinitionState();

    /**
     * The Amazon Resource Name of the job definition.
     * 
     */
    @Import(name="arn")
      private final @Nullable Output<String> arn;

    public Output<String> getArn() {
        return this.arn == null ? Output.empty() : this.arn;
    }

    /**
     * A valid [container properties](http://docs.aws.amazon.com/batch/latest/APIReference/API_RegisterJobDefinition.html)
     * provided as a single valid JSON document. This parameter is required if the `type` parameter is `container`.
     * 
     */
    @Import(name="containerProperties")
      private final @Nullable Output<String> containerProperties;

    public Output<String> getContainerProperties() {
        return this.containerProperties == null ? Output.empty() : this.containerProperties;
    }

    /**
     * Specifies the name of the job definition.
     * 
     */
    @Import(name="name")
      private final @Nullable Output<String> name;

    public Output<String> getName() {
        return this.name == null ? Output.empty() : this.name;
    }

    /**
     * Specifies the parameter substitution placeholders to set in the job definition.
     * 
     */
    @Import(name="parameters")
      private final @Nullable Output<Map<String,String>> parameters;

    public Output<Map<String,String>> getParameters() {
        return this.parameters == null ? Output.empty() : this.parameters;
    }

    /**
     * The platform capabilities required by the job definition. If no value is specified, it defaults to `EC2`. To run the job on Fargate resources, specify `FARGATE`.
     * 
     */
    @Import(name="platformCapabilities")
      private final @Nullable Output<List<String>> platformCapabilities;

    public Output<List<String>> getPlatformCapabilities() {
        return this.platformCapabilities == null ? Output.empty() : this.platformCapabilities;
    }

    /**
     * Specifies whether to propagate the tags from the job definition to the corresponding Amazon ECS task. Default is `false`.
     * 
     */
    @Import(name="propagateTags")
      private final @Nullable Output<Boolean> propagateTags;

    public Output<Boolean> getPropagateTags() {
        return this.propagateTags == null ? Output.empty() : this.propagateTags;
    }

    /**
     * Specifies the retry strategy to use for failed jobs that are submitted with this job definition.
     * Maximum number of `retry_strategy` is `1`.  Defined below.
     * 
     */
    @Import(name="retryStrategy")
      private final @Nullable Output<JobDefinitionRetryStrategyGetArgs> retryStrategy;

    public Output<JobDefinitionRetryStrategyGetArgs> getRetryStrategy() {
        return this.retryStrategy == null ? Output.empty() : this.retryStrategy;
    }

    /**
     * The revision of the job definition.
     * 
     */
    @Import(name="revision")
      private final @Nullable Output<Integer> revision;

    public Output<Integer> getRevision() {
        return this.revision == null ? Output.empty() : this.revision;
    }

    /**
     * Key-value map of resource tags. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Import(name="tags")
      private final @Nullable Output<Map<String,String>> tags;

    public Output<Map<String,String>> getTags() {
        return this.tags == null ? Output.empty() : this.tags;
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider .
     * 
     */
    @Import(name="tagsAll")
      private final @Nullable Output<Map<String,String>> tagsAll;

    public Output<Map<String,String>> getTagsAll() {
        return this.tagsAll == null ? Output.empty() : this.tagsAll;
    }

    /**
     * Specifies the timeout for jobs so that if a job runs longer, AWS Batch terminates the job. Maximum number of `timeout` is `1`. Defined below.
     * 
     */
    @Import(name="timeout")
      private final @Nullable Output<JobDefinitionTimeoutGetArgs> timeout;

    public Output<JobDefinitionTimeoutGetArgs> getTimeout() {
        return this.timeout == null ? Output.empty() : this.timeout;
    }

    /**
     * The type of job definition.  Must be `container`.
     * 
     */
    @Import(name="type")
      private final @Nullable Output<String> type;

    public Output<String> getType() {
        return this.type == null ? Output.empty() : this.type;
    }

    public JobDefinitionState(
        @Nullable Output<String> arn,
        @Nullable Output<String> containerProperties,
        @Nullable Output<String> name,
        @Nullable Output<Map<String,String>> parameters,
        @Nullable Output<List<String>> platformCapabilities,
        @Nullable Output<Boolean> propagateTags,
        @Nullable Output<JobDefinitionRetryStrategyGetArgs> retryStrategy,
        @Nullable Output<Integer> revision,
        @Nullable Output<Map<String,String>> tags,
        @Nullable Output<Map<String,String>> tagsAll,
        @Nullable Output<JobDefinitionTimeoutGetArgs> timeout,
        @Nullable Output<String> type) {
        this.arn = arn;
        this.containerProperties = containerProperties;
        this.name = name;
        this.parameters = parameters;
        this.platformCapabilities = platformCapabilities;
        this.propagateTags = propagateTags;
        this.retryStrategy = retryStrategy;
        this.revision = revision;
        this.tags = tags;
        this.tagsAll = tagsAll;
        this.timeout = timeout;
        this.type = type;
    }

    private JobDefinitionState() {
        this.arn = Output.empty();
        this.containerProperties = Output.empty();
        this.name = Output.empty();
        this.parameters = Output.empty();
        this.platformCapabilities = Output.empty();
        this.propagateTags = Output.empty();
        this.retryStrategy = Output.empty();
        this.revision = Output.empty();
        this.tags = Output.empty();
        this.tagsAll = Output.empty();
        this.timeout = Output.empty();
        this.type = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(JobDefinitionState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> arn;
        private @Nullable Output<String> containerProperties;
        private @Nullable Output<String> name;
        private @Nullable Output<Map<String,String>> parameters;
        private @Nullable Output<List<String>> platformCapabilities;
        private @Nullable Output<Boolean> propagateTags;
        private @Nullable Output<JobDefinitionRetryStrategyGetArgs> retryStrategy;
        private @Nullable Output<Integer> revision;
        private @Nullable Output<Map<String,String>> tags;
        private @Nullable Output<Map<String,String>> tagsAll;
        private @Nullable Output<JobDefinitionTimeoutGetArgs> timeout;
        private @Nullable Output<String> type;

        public Builder() {
    	      // Empty
        }

        public Builder(JobDefinitionState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.containerProperties = defaults.containerProperties;
    	      this.name = defaults.name;
    	      this.parameters = defaults.parameters;
    	      this.platformCapabilities = defaults.platformCapabilities;
    	      this.propagateTags = defaults.propagateTags;
    	      this.retryStrategy = defaults.retryStrategy;
    	      this.revision = defaults.revision;
    	      this.tags = defaults.tags;
    	      this.tagsAll = defaults.tagsAll;
    	      this.timeout = defaults.timeout;
    	      this.type = defaults.type;
        }

        public Builder arn(@Nullable Output<String> arn) {
            this.arn = arn;
            return this;
        }
        public Builder arn(@Nullable String arn) {
            this.arn = Output.ofNullable(arn);
            return this;
        }
        public Builder containerProperties(@Nullable Output<String> containerProperties) {
            this.containerProperties = containerProperties;
            return this;
        }
        public Builder containerProperties(@Nullable String containerProperties) {
            this.containerProperties = Output.ofNullable(containerProperties);
            return this;
        }
        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }
        public Builder name(@Nullable String name) {
            this.name = Output.ofNullable(name);
            return this;
        }
        public Builder parameters(@Nullable Output<Map<String,String>> parameters) {
            this.parameters = parameters;
            return this;
        }
        public Builder parameters(@Nullable Map<String,String> parameters) {
            this.parameters = Output.ofNullable(parameters);
            return this;
        }
        public Builder platformCapabilities(@Nullable Output<List<String>> platformCapabilities) {
            this.platformCapabilities = platformCapabilities;
            return this;
        }
        public Builder platformCapabilities(@Nullable List<String> platformCapabilities) {
            this.platformCapabilities = Output.ofNullable(platformCapabilities);
            return this;
        }
        public Builder platformCapabilities(String... platformCapabilities) {
            return platformCapabilities(List.of(platformCapabilities));
        }
        public Builder propagateTags(@Nullable Output<Boolean> propagateTags) {
            this.propagateTags = propagateTags;
            return this;
        }
        public Builder propagateTags(@Nullable Boolean propagateTags) {
            this.propagateTags = Output.ofNullable(propagateTags);
            return this;
        }
        public Builder retryStrategy(@Nullable Output<JobDefinitionRetryStrategyGetArgs> retryStrategy) {
            this.retryStrategy = retryStrategy;
            return this;
        }
        public Builder retryStrategy(@Nullable JobDefinitionRetryStrategyGetArgs retryStrategy) {
            this.retryStrategy = Output.ofNullable(retryStrategy);
            return this;
        }
        public Builder revision(@Nullable Output<Integer> revision) {
            this.revision = revision;
            return this;
        }
        public Builder revision(@Nullable Integer revision) {
            this.revision = Output.ofNullable(revision);
            return this;
        }
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = Output.ofNullable(tags);
            return this;
        }
        public Builder tagsAll(@Nullable Output<Map<String,String>> tagsAll) {
            this.tagsAll = tagsAll;
            return this;
        }
        public Builder tagsAll(@Nullable Map<String,String> tagsAll) {
            this.tagsAll = Output.ofNullable(tagsAll);
            return this;
        }
        public Builder timeout(@Nullable Output<JobDefinitionTimeoutGetArgs> timeout) {
            this.timeout = timeout;
            return this;
        }
        public Builder timeout(@Nullable JobDefinitionTimeoutGetArgs timeout) {
            this.timeout = Output.ofNullable(timeout);
            return this;
        }
        public Builder type(@Nullable Output<String> type) {
            this.type = type;
            return this;
        }
        public Builder type(@Nullable String type) {
            this.type = Output.ofNullable(type);
            return this;
        }        public JobDefinitionState build() {
            return new JobDefinitionState(arn, containerProperties, name, parameters, platformCapabilities, propagateTags, retryStrategy, revision, tags, tagsAll, timeout, type);
        }
    }
}
