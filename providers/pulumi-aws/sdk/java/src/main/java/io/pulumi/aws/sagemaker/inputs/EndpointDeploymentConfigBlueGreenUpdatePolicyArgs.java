// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.sagemaker.inputs;

import io.pulumi.aws.sagemaker.inputs.EndpointDeploymentConfigBlueGreenUpdatePolicyTrafficRoutingConfigurationArgs;
import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.Integer;
import java.util.Objects;
import javax.annotation.Nullable;


public final class EndpointDeploymentConfigBlueGreenUpdatePolicyArgs extends io.pulumi.resources.ResourceArgs {

    public static final EndpointDeploymentConfigBlueGreenUpdatePolicyArgs Empty = new EndpointDeploymentConfigBlueGreenUpdatePolicyArgs();

    /**
     * Maximum execution timeout for the deployment. Note that the timeout value should be larger than the total waiting time specified in `termination_wait_in_seconds` and `wait_interval_in_seconds`. Valid values are between `600` and `14400`.
     * 
     */
    @InputImport(name="maximumExecutionTimeoutInSeconds")
    private final @Nullable Input<Integer> maximumExecutionTimeoutInSeconds;

    public Input<Integer> getMaximumExecutionTimeoutInSeconds() {
        return this.maximumExecutionTimeoutInSeconds == null ? Input.empty() : this.maximumExecutionTimeoutInSeconds;
    }

    /**
     * Additional waiting time in seconds after the completion of an endpoint deployment before terminating the old endpoint fleet. Default is `0`. Valid values are between `0` and `3600`.
     * 
     */
    @InputImport(name="terminationWaitInSeconds")
    private final @Nullable Input<Integer> terminationWaitInSeconds;

    public Input<Integer> getTerminationWaitInSeconds() {
        return this.terminationWaitInSeconds == null ? Input.empty() : this.terminationWaitInSeconds;
    }

    /**
     * Defines the traffic routing strategy to shift traffic from the old fleet to the new fleet during an endpoint deployment. See Traffic Routing Configuration.
     * 
     */
    @InputImport(name="trafficRoutingConfiguration", required=true)
    private final Input<EndpointDeploymentConfigBlueGreenUpdatePolicyTrafficRoutingConfigurationArgs> trafficRoutingConfiguration;

    public Input<EndpointDeploymentConfigBlueGreenUpdatePolicyTrafficRoutingConfigurationArgs> getTrafficRoutingConfiguration() {
        return this.trafficRoutingConfiguration;
    }

    public EndpointDeploymentConfigBlueGreenUpdatePolicyArgs(
        @Nullable Input<Integer> maximumExecutionTimeoutInSeconds,
        @Nullable Input<Integer> terminationWaitInSeconds,
        Input<EndpointDeploymentConfigBlueGreenUpdatePolicyTrafficRoutingConfigurationArgs> trafficRoutingConfiguration) {
        this.maximumExecutionTimeoutInSeconds = maximumExecutionTimeoutInSeconds;
        this.terminationWaitInSeconds = terminationWaitInSeconds;
        this.trafficRoutingConfiguration = Objects.requireNonNull(trafficRoutingConfiguration, "expected parameter 'trafficRoutingConfiguration' to be non-null");
    }

    private EndpointDeploymentConfigBlueGreenUpdatePolicyArgs() {
        this.maximumExecutionTimeoutInSeconds = Input.empty();
        this.terminationWaitInSeconds = Input.empty();
        this.trafficRoutingConfiguration = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(EndpointDeploymentConfigBlueGreenUpdatePolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<Integer> maximumExecutionTimeoutInSeconds;
        private @Nullable Input<Integer> terminationWaitInSeconds;
        private Input<EndpointDeploymentConfigBlueGreenUpdatePolicyTrafficRoutingConfigurationArgs> trafficRoutingConfiguration;

        public Builder() {
    	      // Empty
        }

        public Builder(EndpointDeploymentConfigBlueGreenUpdatePolicyArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.maximumExecutionTimeoutInSeconds = defaults.maximumExecutionTimeoutInSeconds;
    	      this.terminationWaitInSeconds = defaults.terminationWaitInSeconds;
    	      this.trafficRoutingConfiguration = defaults.trafficRoutingConfiguration;
        }

        public Builder setMaximumExecutionTimeoutInSeconds(@Nullable Input<Integer> maximumExecutionTimeoutInSeconds) {
            this.maximumExecutionTimeoutInSeconds = maximumExecutionTimeoutInSeconds;
            return this;
        }

        public Builder setMaximumExecutionTimeoutInSeconds(@Nullable Integer maximumExecutionTimeoutInSeconds) {
            this.maximumExecutionTimeoutInSeconds = Input.ofNullable(maximumExecutionTimeoutInSeconds);
            return this;
        }

        public Builder setTerminationWaitInSeconds(@Nullable Input<Integer> terminationWaitInSeconds) {
            this.terminationWaitInSeconds = terminationWaitInSeconds;
            return this;
        }

        public Builder setTerminationWaitInSeconds(@Nullable Integer terminationWaitInSeconds) {
            this.terminationWaitInSeconds = Input.ofNullable(terminationWaitInSeconds);
            return this;
        }

        public Builder setTrafficRoutingConfiguration(Input<EndpointDeploymentConfigBlueGreenUpdatePolicyTrafficRoutingConfigurationArgs> trafficRoutingConfiguration) {
            this.trafficRoutingConfiguration = Objects.requireNonNull(trafficRoutingConfiguration);
            return this;
        }

        public Builder setTrafficRoutingConfiguration(EndpointDeploymentConfigBlueGreenUpdatePolicyTrafficRoutingConfigurationArgs trafficRoutingConfiguration) {
            this.trafficRoutingConfiguration = Input.of(Objects.requireNonNull(trafficRoutingConfiguration));
            return this;
        }
        public EndpointDeploymentConfigBlueGreenUpdatePolicyArgs build() {
            return new EndpointDeploymentConfigBlueGreenUpdatePolicyArgs(maximumExecutionTimeoutInSeconds, terminationWaitInSeconds, trafficRoutingConfiguration);
        }
    }
}
