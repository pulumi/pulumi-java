// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.mq.inputs;

import io.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class GetBrokerUser extends io.pulumi.resources.InvokeArgs {

    public static final GetBrokerUser Empty = new GetBrokerUser();

    @Import(name="consoleAccess", required=true)
      private final Boolean consoleAccess;

    public Boolean getConsoleAccess() {
        return this.consoleAccess;
    }

    @Import(name="groups", required=true)
      private final List<String> groups;

    public List<String> getGroups() {
        return this.groups;
    }

    @Import(name="username", required=true)
      private final String username;

    public String getUsername() {
        return this.username;
    }

    public GetBrokerUser(
        Boolean consoleAccess,
        List<String> groups,
        String username) {
        this.consoleAccess = Objects.requireNonNull(consoleAccess, "expected parameter 'consoleAccess' to be non-null");
        this.groups = Objects.requireNonNull(groups, "expected parameter 'groups' to be non-null");
        this.username = Objects.requireNonNull(username, "expected parameter 'username' to be non-null");
    }

    private GetBrokerUser() {
        this.consoleAccess = null;
        this.groups = List.of();
        this.username = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetBrokerUser defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Boolean consoleAccess;
        private List<String> groups;
        private String username;

        public Builder() {
    	      // Empty
        }

        public Builder(GetBrokerUser defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.consoleAccess = defaults.consoleAccess;
    	      this.groups = defaults.groups;
    	      this.username = defaults.username;
        }

        public Builder consoleAccess(Boolean consoleAccess) {
            this.consoleAccess = Objects.requireNonNull(consoleAccess);
            return this;
        }
        public Builder groups(List<String> groups) {
            this.groups = Objects.requireNonNull(groups);
            return this;
        }
        public Builder groups(String... groups) {
            return groups(List.of(groups));
        }
        public Builder username(String username) {
            this.username = Objects.requireNonNull(username);
            return this;
        }        public GetBrokerUser build() {
            return new GetBrokerUser(consoleAccess, groups, username);
        }
    }
}
