// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.devicefarm;

import io.pulumi.aws.Utilities;
import io.pulumi.aws.devicefarm.UploadArgs;
import io.pulumi.aws.devicefarm.inputs.UploadState;
import io.pulumi.core.Input;
import io.pulumi.core.Output;
import io.pulumi.core.internal.annotations.OutputExport;
import io.pulumi.core.internal.annotations.ResourceType;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * Provides a resource to manage AWS Device Farm Uploads.
 * 
 * > **NOTE:** AWS currently has limited regional support for Device Farm (e.g., `us-west-2`). See [AWS Device Farm endpoints and quotas](https://docs.aws.amazon.com/general/latest/gr/devicefarm.html) for information on supported regions.
 * 
 * ## Example Usage
 * 
 * ## Import
 * 
 * DeviceFarm Uploads can be imported by their arn
 * 
 * ```sh
 *  $ pulumi import aws:devicefarm/upload:Upload example arn:aws:devicefarm:us-west-2:123456789012:upload:4fa784c7-ccb4-4dbf-ba4f-02198320daa1
 * ```
 * 
 */
@ResourceType(type="aws:devicefarm/upload:Upload")
public class Upload extends io.pulumi.resources.CustomResource {
    /**
     * The Amazon Resource Name of this upload.
     * 
     */
    @OutputExport(name="arn", type=String.class, parameters={})
    private Output<String> arn;

    /**
     * @return The Amazon Resource Name of this upload.
     * 
     */
    public Output<String> getArn() {
        return this.arn;
    }
    /**
     * The upload's category.
     * 
     */
    @OutputExport(name="category", type=String.class, parameters={})
    private Output<String> category;

    /**
     * @return The upload's category.
     * 
     */
    public Output<String> getCategory() {
        return this.category;
    }
    /**
     * The upload's content type (for example, application/octet-stream).
     * 
     */
    @OutputExport(name="contentType", type=String.class, parameters={})
    private Output</* @Nullable */ String> contentType;

    /**
     * @return The upload's content type (for example, application/octet-stream).
     * 
     */
    public Output</* @Nullable */ String> getContentType() {
        return this.contentType;
    }
    /**
     * The upload's metadata. For example, for Android, this contains information that is parsed from the manifest and is displayed in the AWS Device Farm console after the associated app is uploaded.
     * 
     */
    @OutputExport(name="metadata", type=String.class, parameters={})
    private Output<String> metadata;

    /**
     * @return The upload's metadata. For example, for Android, this contains information that is parsed from the manifest and is displayed in the AWS Device Farm console after the associated app is uploaded.
     * 
     */
    public Output<String> getMetadata() {
        return this.metadata;
    }
    /**
     * The upload's file name. The name should not contain any forward slashes (/). If you are uploading an iOS app, the file name must end with the .ipa extension. If you are uploading an Android app, the file name must end with the .apk extension. For all others, the file name must end with the .zip file extension.
     * 
     */
    @OutputExport(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The upload's file name. The name should not contain any forward slashes (/). If you are uploading an iOS app, the file name must end with the .ipa extension. If you are uploading an Android app, the file name must end with the .apk extension. For all others, the file name must end with the .zip file extension.
     * 
     */
    public Output<String> getName() {
        return this.name;
    }
    /**
     * The ARN of the project for the upload.
     * 
     */
    @OutputExport(name="projectArn", type=String.class, parameters={})
    private Output<String> projectArn;

    /**
     * @return The ARN of the project for the upload.
     * 
     */
    public Output<String> getProjectArn() {
        return this.projectArn;
    }
    /**
     * The upload's upload type. See [AWS Docs](https://docs.aws.amazon.com/devicefarm/latest/APIReference/API_CreateUpload.html#API_CreateUpload_RequestSyntax) for valid list of values.
     * 
     */
    @OutputExport(name="type", type=String.class, parameters={})
    private Output<String> type;

    /**
     * @return The upload's upload type. See [AWS Docs](https://docs.aws.amazon.com/devicefarm/latest/APIReference/API_CreateUpload.html#API_CreateUpload_RequestSyntax) for valid list of values.
     * 
     */
    public Output<String> getType() {
        return this.type;
    }
    /**
     * The presigned Amazon S3 URL that was used to store a file using a PUT request.
     * 
     */
    @OutputExport(name="url", type=String.class, parameters={})
    private Output<String> url;

    /**
     * @return The presigned Amazon S3 URL that was used to store a file using a PUT request.
     * 
     */
    public Output<String> getUrl() {
        return this.url;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Upload(String name, UploadArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:devicefarm/upload:Upload", name, args == null ? UploadArgs.Empty : args, makeResourceOptions(options, Input.empty()));
    }

    private Upload(String name, Input<String> id, @Nullable UploadState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:devicefarm/upload:Upload", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Input<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .setVersion(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Upload get(String name, Input<String> id, @Nullable UploadState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new Upload(name, id, state, options);
    }
}
