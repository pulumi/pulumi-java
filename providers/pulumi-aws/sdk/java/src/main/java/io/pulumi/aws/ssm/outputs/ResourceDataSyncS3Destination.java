// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.ssm.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class ResourceDataSyncS3Destination {
    /**
     * Name of S3 bucket where the aggregated data is stored.
     * 
     */
    private final String bucketName;
    /**
     * ARN of an encryption key for a destination in Amazon S3.
     * 
     */
    private final @Nullable String kmsKeyArn;
    /**
     * Prefix for the bucket.
     * 
     */
    private final @Nullable String prefix;
    /**
     * Region with the bucket targeted by the Resource Data Sync.
     * 
     */
    private final String region;
    /**
     * A supported sync format. Only JsonSerDe is currently supported. Defaults to JsonSerDe.
     * 
     */
    private final @Nullable String syncFormat;

    @OutputCustomType.Constructor({"bucketName","kmsKeyArn","prefix","region","syncFormat"})
    private ResourceDataSyncS3Destination(
        String bucketName,
        @Nullable String kmsKeyArn,
        @Nullable String prefix,
        String region,
        @Nullable String syncFormat) {
        this.bucketName = Objects.requireNonNull(bucketName);
        this.kmsKeyArn = kmsKeyArn;
        this.prefix = prefix;
        this.region = Objects.requireNonNull(region);
        this.syncFormat = syncFormat;
    }

    /**
     * Name of S3 bucket where the aggregated data is stored.
     * 
     */
    public String getBucketName() {
        return this.bucketName;
    }
    /**
     * ARN of an encryption key for a destination in Amazon S3.
     * 
     */
    public Optional<String> getKmsKeyArn() {
        return Optional.ofNullable(this.kmsKeyArn);
    }
    /**
     * Prefix for the bucket.
     * 
     */
    public Optional<String> getPrefix() {
        return Optional.ofNullable(this.prefix);
    }
    /**
     * Region with the bucket targeted by the Resource Data Sync.
     * 
     */
    public String getRegion() {
        return this.region;
    }
    /**
     * A supported sync format. Only JsonSerDe is currently supported. Defaults to JsonSerDe.
     * 
     */
    public Optional<String> getSyncFormat() {
        return Optional.ofNullable(this.syncFormat);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ResourceDataSyncS3Destination defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String bucketName;
        private @Nullable String kmsKeyArn;
        private @Nullable String prefix;
        private String region;
        private @Nullable String syncFormat;

        public Builder() {
    	      // Empty
        }

        public Builder(ResourceDataSyncS3Destination defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bucketName = defaults.bucketName;
    	      this.kmsKeyArn = defaults.kmsKeyArn;
    	      this.prefix = defaults.prefix;
    	      this.region = defaults.region;
    	      this.syncFormat = defaults.syncFormat;
        }

        public Builder setBucketName(String bucketName) {
            this.bucketName = Objects.requireNonNull(bucketName);
            return this;
        }

        public Builder setKmsKeyArn(@Nullable String kmsKeyArn) {
            this.kmsKeyArn = kmsKeyArn;
            return this;
        }

        public Builder setPrefix(@Nullable String prefix) {
            this.prefix = prefix;
            return this;
        }

        public Builder setRegion(String region) {
            this.region = Objects.requireNonNull(region);
            return this;
        }

        public Builder setSyncFormat(@Nullable String syncFormat) {
            this.syncFormat = syncFormat;
            return this;
        }
        public ResourceDataSyncS3Destination build() {
            return new ResourceDataSyncS3Destination(bucketName, kmsKeyArn, prefix, region, syncFormat);
        }
    }
}
