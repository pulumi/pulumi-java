// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.ecs.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.util.Objects;


public final class TaskDefinitionEphemeralStorageArgs extends io.pulumi.resources.ResourceArgs {

    public static final TaskDefinitionEphemeralStorageArgs Empty = new TaskDefinitionEphemeralStorageArgs();

    /**
     * The total amount, in GiB, of ephemeral storage to set for the task. The minimum supported value is `21` GiB and the maximum supported value is `200` GiB.
     * 
     */
    @Import(name="sizeInGib", required=true)
      private final Output<Integer> sizeInGib;

    public Output<Integer> sizeInGib() {
        return this.sizeInGib;
    }

    public TaskDefinitionEphemeralStorageArgs(Output<Integer> sizeInGib) {
        this.sizeInGib = Objects.requireNonNull(sizeInGib, "expected parameter 'sizeInGib' to be non-null");
    }

    private TaskDefinitionEphemeralStorageArgs() {
        this.sizeInGib = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TaskDefinitionEphemeralStorageArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<Integer> sizeInGib;

        public Builder() {
    	      // Empty
        }

        public Builder(TaskDefinitionEphemeralStorageArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.sizeInGib = defaults.sizeInGib;
        }

        public Builder sizeInGib(Output<Integer> sizeInGib) {
            this.sizeInGib = Objects.requireNonNull(sizeInGib);
            return this;
        }
        public Builder sizeInGib(Integer sizeInGib) {
            this.sizeInGib = Output.of(Objects.requireNonNull(sizeInGib));
            return this;
        }        public TaskDefinitionEphemeralStorageArgs build() {
            return new TaskDefinitionEphemeralStorageArgs(sizeInGib);
        }
    }
}
