// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.wafv2;

import io.pulumi.aws.Utilities;
import io.pulumi.aws.wafv2.WebAclAssociationArgs;
import io.pulumi.aws.wafv2.inputs.WebAclAssociationState;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Export;
import io.pulumi.core.annotations.ResourceType;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * Creates a WAFv2 Web ACL Association.
 * 
 * > **NOTE on associating a WAFv2 Web ACL with a Cloudfront distribution:** Do not use this resource to associate a WAFv2 Web ACL with a Cloudfront Distribution. The [AWS API call backing this resource](https://docs.aws.amazon.com/waf/latest/APIReference/API_AssociateWebACL.html) notes that you should use the [`web_acl_id`][2] property on the [`cloudfront_distribution`][2] instead.
 * 
 * [1]: https://docs.aws.amazon.com/waf/latest/APIReference/API_AssociateWebACL.html
 * [2]: https://www.terraform.io/docs/providers/aws/r/cloudfront_distribution.html#web_acl_id
 * 
 * {{% examples %}}
 * ## Example Usage
 * {{% example %}}
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 * import * as crypto from "crypto";
 * 
 * const exampleRestApi = new aws.apigateway.RestApi("exampleRestApi", {body: JSON.stringify({
 *     openapi: "3.0.1",
 *     info: {
 *         title: "example",
 *         version: "1.0",
 *     },
 *     paths: {
 *         "/path1": {
 *             get: {
 *                 "x-amazon-apigateway-integration": {
 *                     httpMethod: "GET",
 *                     payloadFormatVersion: "1.0",
 *                     type: "HTTP_PROXY",
 *                     uri: "https://ip-ranges.amazonaws.com/ip-ranges.json",
 *                 },
 *             },
 *         },
 *     },
 * })});
 * const exampleDeployment = new aws.apigateway.Deployment("exampleDeployment", {
 *     restApi: exampleRestApi.id,
 *     triggers: {
 *         redeployment: exampleRestApi.body.apply(body => JSON.stringify(body)).apply(toJSON => crypto.createHash('sha1').update(toJSON).digest('hex')),
 *     },
 * });
 * const exampleStage = new aws.apigateway.Stage("exampleStage", {
 *     deployment: exampleDeployment.id,
 *     restApi: exampleRestApi.id,
 *     stageName: "example",
 * });
 * const exampleWebAcl = new aws.wafv2.WebAcl("exampleWebAcl", {
 *     scope: "REGIONAL",
 *     defaultAction: {
 *         allow: {},
 *     },
 *     visibilityConfig: {
 *         cloudwatchMetricsEnabled: false,
 *         metricName: "friendly-metric-name",
 *         sampledRequestsEnabled: false,
 *     },
 * });
 * const exampleWebAclAssociation = new aws.wafv2.WebAclAssociation("exampleWebAclAssociation", {
 *     resourceArn: exampleStage.arn,
 *     webAclArn: exampleWebAcl.arn,
 * });
 * ```
 * ```python
 * import pulumi
 * import hashlib
 * import json
 * import pulumi_aws as aws
 * 
 * example_rest_api = aws.apigateway.RestApi("exampleRestApi", body=json.dumps({
 *     "openapi": "3.0.1",
 *     "info": {
 *         "title": "example",
 *         "version": "1.0",
 *     },
 *     "paths": {
 *         "/path1": {
 *             "get": {
 *                 "x-amazon-apigateway-integration": {
 *                     "httpMethod": "GET",
 *                     "payloadFormatVersion": "1.0",
 *                     "type": "HTTP_PROXY",
 *                     "uri": "https://ip-ranges.amazonaws.com/ip-ranges.json",
 *                 },
 *             },
 *         },
 *     },
 * }))
 * example_deployment = aws.apigateway.Deployment("exampleDeployment",
 *     rest_api=example_rest_api.id,
 *     triggers={
 *         "redeployment": example_rest_api.body.apply(lambda body: json.dumps(body)).apply(lambda to_json: hashlib.sha1(to_json.encode()).hexdigest()),
 *     })
 * example_stage = aws.apigateway.Stage("exampleStage",
 *     deployment=example_deployment.id,
 *     rest_api=example_rest_api.id,
 *     stage_name="example")
 * example_web_acl = aws.wafv2.WebAcl("exampleWebAcl",
 *     scope="REGIONAL",
 *     default_action=aws.wafv2.WebAclDefaultActionArgs(
 *         allow=aws.wafv2.WebAclDefaultActionAllowArgs(),
 *     ),
 *     visibility_config=aws.wafv2.WebAclVisibilityConfigArgs(
 *         cloudwatch_metrics_enabled=False,
 *         metric_name="friendly-metric-name",
 *         sampled_requests_enabled=False,
 *     ))
 * example_web_acl_association = aws.wafv2.WebAclAssociation("exampleWebAclAssociation",
 *     resource_arn=example_stage.arn,
 *     web_acl_arn=example_web_acl.arn)
 * ```
 * ```csharp
 * using System.Collections.Generic;
 * using System.Security.Cryptography;
 * using System.Text;
 * using System.Text.Json;
 * using Pulumi;
 * using Aws = Pulumi.Aws;
 * 
 * class MyStack : Stack
 * {
 * 	private static string ComputeSHA1(string input) {
 * 		return BitConverter.ToString(
 * 			SHA1.Create().ComputeHash(Encoding.UTF8.GetBytes(input))
 * 		).Replace("-","").ToLowerInvariant());
 * 	}
 * 
 *     public MyStack()
 *     {
 *         var exampleRestApi = new Aws.ApiGateway.RestApi("exampleRestApi", new Aws.ApiGateway.RestApiArgs
 *         {
 *             Body = JsonSerializer.Serialize(new Dictionary<string, object?>
 *             {
 *                 { "openapi", "3.0.1" },
 *                 { "info", new Dictionary<string, object?>
 *                 {
 *                     { "title", "example" },
 *                     { "version", "1.0" },
 *                 } },
 *                 { "paths", new Dictionary<string, object?>
 *                 {
 *                     { "/path1", new Dictionary<string, object?>
 *                     {
 *                         { "get", new Dictionary<string, object?>
 *                         {
 *                             { "x-amazon-apigateway-integration", new Dictionary<string, object?>
 *                             {
 *                                 { "httpMethod", "GET" },
 *                                 { "payloadFormatVersion", "1.0" },
 *                                 { "type", "HTTP_PROXY" },
 *                                 { "uri", "https://ip-ranges.amazonaws.com/ip-ranges.json" },
 *                             } },
 *                         } },
 *                     } },
 *                 } },
 *             }),
 *         });
 *         var exampleDeployment = new Aws.ApiGateway.Deployment("exampleDeployment", new Aws.ApiGateway.DeploymentArgs
 *         {
 *             RestApi = exampleRestApi.Id,
 *             Triggers = 
 *             {
 *                 { "redeployment", exampleRestApi.Body.Apply(body => JsonSerializer.Serialize(body)).Apply(toJSON => ComputeSHA1(toJSON)) },
 *             },
 *         });
 *         var exampleStage = new Aws.ApiGateway.Stage("exampleStage", new Aws.ApiGateway.StageArgs
 *         {
 *             Deployment = exampleDeployment.Id,
 *             RestApi = exampleRestApi.Id,
 *             StageName = "example",
 *         });
 *         var exampleWebAcl = new Aws.WafV2.WebAcl("exampleWebAcl", new Aws.WafV2.WebAclArgs
 *         {
 *             Scope = "REGIONAL",
 *             DefaultAction = new Aws.WafV2.Inputs.WebAclDefaultActionArgs
 *             {
 *                 Allow = ,
 *             },
 *             VisibilityConfig = new Aws.WafV2.Inputs.WebAclVisibilityConfigArgs
 *             {
 *                 CloudwatchMetricsEnabled = false,
 *                 MetricName = "friendly-metric-name",
 *                 SampledRequestsEnabled = false,
 *             },
 *         });
 *         var exampleWebAclAssociation = new Aws.WafV2.WebAclAssociation("exampleWebAclAssociation", new Aws.WafV2.WebAclAssociationArgs
 *         {
 *             ResourceArn = exampleStage.Arn,
 *             WebAclArn = exampleWebAcl.Arn,
 *         });
 *     }
 * 
 * }
 * ```
 * ```go
 * package main
 * 
 * import (
 * 	"crypto/sha1"
 * 	"encoding/json"
 * 	"fmt"
 * 
 * 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/apigateway"
 * 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/wafv2"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func sha1Hash(input string) string {
 * 	hash := sha1.Sum([]byte(input))
 * 	return hex.EncodeToString(hash[:])
 * }
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		tmpJSON0, err := json.Marshal(map[string]interface{}{
 * 			"openapi": "3.0.1",
 * 			"info": map[string]interface{}{
 * 				"title":   "example",
 * 				"version": "1.0",
 * 			},
 * 			"paths": map[string]interface{}{
 * 				"/path1": map[string]interface{}{
 * 					"get": map[string]interface{}{
 * 						"x-amazon-apigateway-integration": map[string]interface{}{
 * 							"httpMethod":           "GET",
 * 							"payloadFormatVersion": "1.0",
 * 							"type":                 "HTTP_PROXY",
 * 							"uri":                  "https://ip-ranges.amazonaws.com/ip-ranges.json",
 * 						},
 * 					},
 * 				},
 * 			},
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		json0 := string(tmpJSON0)
 * 		exampleRestApi, err := apigateway.NewRestApi(ctx, "exampleRestApi", &apigateway.RestApiArgs{
 * 			Body: pulumi.String(json0),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		exampleDeployment, err := apigateway.NewDeployment(ctx, "exampleDeployment", &apigateway.DeploymentArgs{
 * 			RestApi: exampleRestApi.ID(),
 * 			Triggers: pulumi.StringMap{
 * 				"redeployment": exampleRestApi.Body.ApplyT(func(body string) (pulumi.String, error) {
 * 					var _zero pulumi.String
 * 					tmpJSON1, err := json.Marshal(body)
 * 					if err != nil {
 * 						return _zero, err
 * 					}
 * 					json1 := string(tmpJSON1)
 * 					return json1, nil
 * 				}).(pulumi.StringOutput).ApplyT(func(toJSON string) (pulumi.String, error) {
 * 					return sha1Hash(toJSON), nil
 * 				}).(pulumi.StringOutput),
 * 			},
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		exampleStage, err := apigateway.NewStage(ctx, "exampleStage", &apigateway.StageArgs{
 * 			Deployment: exampleDeployment.ID(),
 * 			RestApi:    exampleRestApi.ID(),
 * 			StageName:  pulumi.String("example"),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		exampleWebAcl, err := wafv2.NewWebAcl(ctx, "exampleWebAcl", &wafv2.WebAclArgs{
 * 			Scope: pulumi.String("REGIONAL"),
 * 			DefaultAction: &wafv2.WebAclDefaultActionArgs{
 * 				Allow: nil,
 * 			},
 * 			VisibilityConfig: &wafv2.WebAclVisibilityConfigArgs{
 * 				CloudwatchMetricsEnabled: pulumi.Bool(false),
 * 				MetricName:               pulumi.String("friendly-metric-name"),
 * 				SampledRequestsEnabled:   pulumi.Bool(false),
 * 			},
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		_, err = wafv2.NewWebAclAssociation(ctx, "exampleWebAclAssociation", &wafv2.WebAclAssociationArgs{
 * 			ResourceArn: exampleStage.Arn,
 * 			WebAclArn:   exampleWebAcl.Arn,
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * ```
 * {{% /example %}}
 * {{% /examples %}}
 * 
 * ## Import
 * 
 * WAFv2 Web ACL Association can be imported using `WEB_ACL_ARN,RESOURCE_ARN` e.g.,
 * 
 * ```sh
 *  $ pulumi import aws:wafv2/webAclAssociation:WebAclAssociation example arn:aws:wafv2:...7ce849ea,arn:aws:apigateway:...ages/name
 * ```
 * 
 *  
 */
@ResourceType(type="aws:wafv2/webAclAssociation:WebAclAssociation")
public class WebAclAssociation extends io.pulumi.resources.CustomResource {
    /**
     * The Amazon Resource Name (ARN) of the resource to associate with the web ACL. This must be an ARN of an Application Load Balancer or an Amazon API Gateway stage.
     * 
     */
    @Export(name="resourceArn", type=String.class, parameters={})
    private Output<String> resourceArn;

    /**
     * @return The Amazon Resource Name (ARN) of the resource to associate with the web ACL. This must be an ARN of an Application Load Balancer or an Amazon API Gateway stage.
     * 
     */
    public Output<String> getResourceArn() {
        return this.resourceArn;
    }
    /**
     * The Amazon Resource Name (ARN) of the Web ACL that you want to associate with the resource.
     * 
     */
    @Export(name="webAclArn", type=String.class, parameters={})
    private Output<String> webAclArn;

    /**
     * @return The Amazon Resource Name (ARN) of the Web ACL that you want to associate with the resource.
     * 
     */
    public Output<String> getWebAclArn() {
        return this.webAclArn;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public WebAclAssociation(String name) {
        this(name, WebAclAssociationArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public WebAclAssociation(String name, WebAclAssociationArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public WebAclAssociation(String name, WebAclAssociationArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:wafv2/webAclAssociation:WebAclAssociation", name, args == null ? WebAclAssociationArgs.Empty : args, makeResourceOptions(options, Output.empty()));
    }

    private WebAclAssociation(String name, Output<String> id, @Nullable WebAclAssociationState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:wafv2/webAclAssociation:WebAclAssociation", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static WebAclAssociation get(String name, Output<String> id, @Nullable WebAclAssociationState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new WebAclAssociation(name, id, state, options);
    }
}
