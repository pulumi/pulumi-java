// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.kinesis.inputs;

import io.pulumi.aws.kinesis.inputs.FirehoseDeliveryStreamHttpEndpointConfigurationCloudwatchLoggingOptionsGetArgs;
import io.pulumi.aws.kinesis.inputs.FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationGetArgs;
import io.pulumi.aws.kinesis.inputs.FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationGetArgs;
import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class FirehoseDeliveryStreamHttpEndpointConfigurationGetArgs extends io.pulumi.resources.ResourceArgs {

    public static final FirehoseDeliveryStreamHttpEndpointConfigurationGetArgs Empty = new FirehoseDeliveryStreamHttpEndpointConfigurationGetArgs();

    /**
     * The access key required for Kinesis Firehose to authenticate with the HTTP endpoint selected as the destination.
     * 
     */
    @InputImport(name="accessKey")
    private final @Nullable Input<String> accessKey;

    public Input<String> getAccessKey() {
        return this.accessKey == null ? Input.empty() : this.accessKey;
    }

    /**
     * Buffer incoming data for the specified period of time, in seconds, before delivering it to the destination. The default value is 300 (5 minutes).
     * 
     */
    @InputImport(name="bufferingInterval")
    private final @Nullable Input<Integer> bufferingInterval;

    public Input<Integer> getBufferingInterval() {
        return this.bufferingInterval == null ? Input.empty() : this.bufferingInterval;
    }

    /**
     * Buffer incoming data to the specified size, in MBs, before delivering it to the destination. The default value is 5.
     * 
     */
    @InputImport(name="bufferingSize")
    private final @Nullable Input<Integer> bufferingSize;

    public Input<Integer> getBufferingSize() {
        return this.bufferingSize == null ? Input.empty() : this.bufferingSize;
    }

    /**
     * The CloudWatch Logging Options for the delivery stream. More details are given below.
     * 
     */
    @InputImport(name="cloudwatchLoggingOptions")
    private final @Nullable Input<FirehoseDeliveryStreamHttpEndpointConfigurationCloudwatchLoggingOptionsGetArgs> cloudwatchLoggingOptions;

    public Input<FirehoseDeliveryStreamHttpEndpointConfigurationCloudwatchLoggingOptionsGetArgs> getCloudwatchLoggingOptions() {
        return this.cloudwatchLoggingOptions == null ? Input.empty() : this.cloudwatchLoggingOptions;
    }

    /**
     * The HTTP endpoint name.
     * 
     */
    @InputImport(name="name")
    private final @Nullable Input<String> name;

    public Input<String> getName() {
        return this.name == null ? Input.empty() : this.name;
    }

    /**
     * The data processing configuration.  More details are given below.
     * 
     */
    @InputImport(name="processingConfiguration")
    private final @Nullable Input<FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationGetArgs> processingConfiguration;

    public Input<FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationGetArgs> getProcessingConfiguration() {
        return this.processingConfiguration == null ? Input.empty() : this.processingConfiguration;
    }

    /**
     * The request configuration.  More details are given below.
     * 
     */
    @InputImport(name="requestConfiguration")
    private final @Nullable Input<FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationGetArgs> requestConfiguration;

    public Input<FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationGetArgs> getRequestConfiguration() {
        return this.requestConfiguration == null ? Input.empty() : this.requestConfiguration;
    }

    /**
     * Total amount of seconds Firehose spends on retries. This duration starts after the initial attempt fails, It does not include the time periods during which Firehose waits for acknowledgment from the specified destination after each attempt. Valid values between `0` and `7200`. Default is `300`.
     * 
     */
    @InputImport(name="retryDuration")
    private final @Nullable Input<Integer> retryDuration;

    public Input<Integer> getRetryDuration() {
        return this.retryDuration == null ? Input.empty() : this.retryDuration;
    }

    /**
     * Kinesis Data Firehose uses this IAM role for all the permissions that the delivery stream needs. The pattern needs to be `arn:.*`.
     * 
     */
    @InputImport(name="roleArn")
    private final @Nullable Input<String> roleArn;

    public Input<String> getRoleArn() {
        return this.roleArn == null ? Input.empty() : this.roleArn;
    }

    /**
     * Defines how documents should be delivered to Amazon S3.  Valid values are `FailedDataOnly` and `AllData`.  Default value is `FailedDataOnly`.
     * 
     */
    @InputImport(name="s3BackupMode")
    private final @Nullable Input<String> s3BackupMode;

    public Input<String> getS3BackupMode() {
        return this.s3BackupMode == null ? Input.empty() : this.s3BackupMode;
    }

    /**
     * The HTTP endpoint URL to which Kinesis Firehose sends your data.
     * 
     */
    @InputImport(name="url", required=true)
    private final Input<String> url;

    public Input<String> getUrl() {
        return this.url;
    }

    public FirehoseDeliveryStreamHttpEndpointConfigurationGetArgs(
        @Nullable Input<String> accessKey,
        @Nullable Input<Integer> bufferingInterval,
        @Nullable Input<Integer> bufferingSize,
        @Nullable Input<FirehoseDeliveryStreamHttpEndpointConfigurationCloudwatchLoggingOptionsGetArgs> cloudwatchLoggingOptions,
        @Nullable Input<String> name,
        @Nullable Input<FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationGetArgs> processingConfiguration,
        @Nullable Input<FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationGetArgs> requestConfiguration,
        @Nullable Input<Integer> retryDuration,
        @Nullable Input<String> roleArn,
        @Nullable Input<String> s3BackupMode,
        Input<String> url) {
        this.accessKey = accessKey;
        this.bufferingInterval = bufferingInterval;
        this.bufferingSize = bufferingSize;
        this.cloudwatchLoggingOptions = cloudwatchLoggingOptions;
        this.name = name;
        this.processingConfiguration = processingConfiguration;
        this.requestConfiguration = requestConfiguration;
        this.retryDuration = retryDuration;
        this.roleArn = roleArn;
        this.s3BackupMode = s3BackupMode;
        this.url = Objects.requireNonNull(url, "expected parameter 'url' to be non-null");
    }

    private FirehoseDeliveryStreamHttpEndpointConfigurationGetArgs() {
        this.accessKey = Input.empty();
        this.bufferingInterval = Input.empty();
        this.bufferingSize = Input.empty();
        this.cloudwatchLoggingOptions = Input.empty();
        this.name = Input.empty();
        this.processingConfiguration = Input.empty();
        this.requestConfiguration = Input.empty();
        this.retryDuration = Input.empty();
        this.roleArn = Input.empty();
        this.s3BackupMode = Input.empty();
        this.url = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FirehoseDeliveryStreamHttpEndpointConfigurationGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> accessKey;
        private @Nullable Input<Integer> bufferingInterval;
        private @Nullable Input<Integer> bufferingSize;
        private @Nullable Input<FirehoseDeliveryStreamHttpEndpointConfigurationCloudwatchLoggingOptionsGetArgs> cloudwatchLoggingOptions;
        private @Nullable Input<String> name;
        private @Nullable Input<FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationGetArgs> processingConfiguration;
        private @Nullable Input<FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationGetArgs> requestConfiguration;
        private @Nullable Input<Integer> retryDuration;
        private @Nullable Input<String> roleArn;
        private @Nullable Input<String> s3BackupMode;
        private Input<String> url;

        public Builder() {
    	      // Empty
        }

        public Builder(FirehoseDeliveryStreamHttpEndpointConfigurationGetArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessKey = defaults.accessKey;
    	      this.bufferingInterval = defaults.bufferingInterval;
    	      this.bufferingSize = defaults.bufferingSize;
    	      this.cloudwatchLoggingOptions = defaults.cloudwatchLoggingOptions;
    	      this.name = defaults.name;
    	      this.processingConfiguration = defaults.processingConfiguration;
    	      this.requestConfiguration = defaults.requestConfiguration;
    	      this.retryDuration = defaults.retryDuration;
    	      this.roleArn = defaults.roleArn;
    	      this.s3BackupMode = defaults.s3BackupMode;
    	      this.url = defaults.url;
        }

        public Builder setAccessKey(@Nullable Input<String> accessKey) {
            this.accessKey = accessKey;
            return this;
        }

        public Builder setAccessKey(@Nullable String accessKey) {
            this.accessKey = Input.ofNullable(accessKey);
            return this;
        }

        public Builder setBufferingInterval(@Nullable Input<Integer> bufferingInterval) {
            this.bufferingInterval = bufferingInterval;
            return this;
        }

        public Builder setBufferingInterval(@Nullable Integer bufferingInterval) {
            this.bufferingInterval = Input.ofNullable(bufferingInterval);
            return this;
        }

        public Builder setBufferingSize(@Nullable Input<Integer> bufferingSize) {
            this.bufferingSize = bufferingSize;
            return this;
        }

        public Builder setBufferingSize(@Nullable Integer bufferingSize) {
            this.bufferingSize = Input.ofNullable(bufferingSize);
            return this;
        }

        public Builder setCloudwatchLoggingOptions(@Nullable Input<FirehoseDeliveryStreamHttpEndpointConfigurationCloudwatchLoggingOptionsGetArgs> cloudwatchLoggingOptions) {
            this.cloudwatchLoggingOptions = cloudwatchLoggingOptions;
            return this;
        }

        public Builder setCloudwatchLoggingOptions(@Nullable FirehoseDeliveryStreamHttpEndpointConfigurationCloudwatchLoggingOptionsGetArgs cloudwatchLoggingOptions) {
            this.cloudwatchLoggingOptions = Input.ofNullable(cloudwatchLoggingOptions);
            return this;
        }

        public Builder setName(@Nullable Input<String> name) {
            this.name = name;
            return this;
        }

        public Builder setName(@Nullable String name) {
            this.name = Input.ofNullable(name);
            return this;
        }

        public Builder setProcessingConfiguration(@Nullable Input<FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationGetArgs> processingConfiguration) {
            this.processingConfiguration = processingConfiguration;
            return this;
        }

        public Builder setProcessingConfiguration(@Nullable FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationGetArgs processingConfiguration) {
            this.processingConfiguration = Input.ofNullable(processingConfiguration);
            return this;
        }

        public Builder setRequestConfiguration(@Nullable Input<FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationGetArgs> requestConfiguration) {
            this.requestConfiguration = requestConfiguration;
            return this;
        }

        public Builder setRequestConfiguration(@Nullable FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationGetArgs requestConfiguration) {
            this.requestConfiguration = Input.ofNullable(requestConfiguration);
            return this;
        }

        public Builder setRetryDuration(@Nullable Input<Integer> retryDuration) {
            this.retryDuration = retryDuration;
            return this;
        }

        public Builder setRetryDuration(@Nullable Integer retryDuration) {
            this.retryDuration = Input.ofNullable(retryDuration);
            return this;
        }

        public Builder setRoleArn(@Nullable Input<String> roleArn) {
            this.roleArn = roleArn;
            return this;
        }

        public Builder setRoleArn(@Nullable String roleArn) {
            this.roleArn = Input.ofNullable(roleArn);
            return this;
        }

        public Builder setS3BackupMode(@Nullable Input<String> s3BackupMode) {
            this.s3BackupMode = s3BackupMode;
            return this;
        }

        public Builder setS3BackupMode(@Nullable String s3BackupMode) {
            this.s3BackupMode = Input.ofNullable(s3BackupMode);
            return this;
        }

        public Builder setUrl(Input<String> url) {
            this.url = Objects.requireNonNull(url);
            return this;
        }

        public Builder setUrl(String url) {
            this.url = Input.of(Objects.requireNonNull(url));
            return this;
        }
        public FirehoseDeliveryStreamHttpEndpointConfigurationGetArgs build() {
            return new FirehoseDeliveryStreamHttpEndpointConfigurationGetArgs(accessKey, bufferingInterval, bufferingSize, cloudwatchLoggingOptions, name, processingConfiguration, requestConfiguration, retryDuration, roleArn, s3BackupMode, url);
        }
    }
}
