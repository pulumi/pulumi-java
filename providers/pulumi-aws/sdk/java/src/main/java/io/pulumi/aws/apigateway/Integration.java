// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.apigateway;

import io.pulumi.aws.Utilities;
import io.pulumi.aws.apigateway.IntegrationArgs;
import io.pulumi.aws.apigateway.inputs.IntegrationState;
import io.pulumi.aws.apigateway.outputs.IntegrationTlsConfig;
import io.pulumi.core.Input;
import io.pulumi.core.Output;
import io.pulumi.core.internal.annotations.OutputExport;
import io.pulumi.core.internal.annotations.ResourceType;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;

/**
 * Provides an HTTP Method Integration for an API Gateway Integration.
 * 
 * ## Example Usage
 * ## Lambda integration
 * 
 * ## VPC Link
 * 
 * ## Import
 * 
 * `aws_api_gateway_integration` can be imported using `REST-API-ID/RESOURCE-ID/HTTP-METHOD`, e.g.,
 * 
 * ```sh
 *  $ pulumi import aws:apigateway/integration:Integration example 12345abcde/67890fghij/GET
 * ```
 * 
 */
@ResourceType(type="aws:apigateway/integration:Integration")
public class Integration extends io.pulumi.resources.CustomResource {
    /**
     * A list of cache key parameters for the integration.
     * 
     */
    @OutputExport(name="cacheKeyParameters", type=List.class, parameters={String.class})
    private Output</* @Nullable */ List<String>> cacheKeyParameters;

    /**
     * @return A list of cache key parameters for the integration.
     * 
     */
    public Output</* @Nullable */ List<String>> getCacheKeyParameters() {
        return this.cacheKeyParameters;
    }
    /**
     * The integration's cache namespace.
     * 
     */
    @OutputExport(name="cacheNamespace", type=String.class, parameters={})
    private Output<String> cacheNamespace;

    /**
     * @return The integration's cache namespace.
     * 
     */
    public Output<String> getCacheNamespace() {
        return this.cacheNamespace;
    }
    /**
     * The id of the VpcLink used for the integration. **Required** if `connection_type` is `VPC_LINK`
     * 
     */
    @OutputExport(name="connectionId", type=String.class, parameters={})
    private Output</* @Nullable */ String> connectionId;

    /**
     * @return The id of the VpcLink used for the integration. **Required** if `connection_type` is `VPC_LINK`
     * 
     */
    public Output</* @Nullable */ String> getConnectionId() {
        return this.connectionId;
    }
    /**
     * The integration input's [connectionType](https://docs.aws.amazon.com/apigateway/api-reference/resource/integration/#connectionType). Valid values are `INTERNET` (default for connections through the public routable internet), and `VPC_LINK` (for private connections between API Gateway and a network load balancer in a VPC).
     * 
     */
    @OutputExport(name="connectionType", type=String.class, parameters={})
    private Output</* @Nullable */ String> connectionType;

    /**
     * @return The integration input's [connectionType](https://docs.aws.amazon.com/apigateway/api-reference/resource/integration/#connectionType). Valid values are `INTERNET` (default for connections through the public routable internet), and `VPC_LINK` (for private connections between API Gateway and a network load balancer in a VPC).
     * 
     */
    public Output</* @Nullable */ String> getConnectionType() {
        return this.connectionType;
    }
    /**
     * Specifies how to handle request payload content type conversions. Supported values are `CONVERT_TO_BINARY` and `CONVERT_TO_TEXT`. If this property is not defined, the request payload will be passed through from the method request to integration request without modification, provided that the passthroughBehaviors is configured to support payload pass-through.
     * 
     */
    @OutputExport(name="contentHandling", type=String.class, parameters={})
    private Output</* @Nullable */ String> contentHandling;

    /**
     * @return Specifies how to handle request payload content type conversions. Supported values are `CONVERT_TO_BINARY` and `CONVERT_TO_TEXT`. If this property is not defined, the request payload will be passed through from the method request to integration request without modification, provided that the passthroughBehaviors is configured to support payload pass-through.
     * 
     */
    public Output</* @Nullable */ String> getContentHandling() {
        return this.contentHandling;
    }
    /**
     * The credentials required for the integration. For `AWS` integrations, 2 options are available. To specify an IAM Role for Amazon API Gateway to assume, use the role's ARN. To require that the caller's identity be passed through from the request, specify the string `arn:aws:iam::\*:user/\*`.
     * 
     */
    @OutputExport(name="credentials", type=String.class, parameters={})
    private Output</* @Nullable */ String> credentials;

    /**
     * @return The credentials required for the integration. For `AWS` integrations, 2 options are available. To specify an IAM Role for Amazon API Gateway to assume, use the role's ARN. To require that the caller's identity be passed through from the request, specify the string `arn:aws:iam::\*:user/\*`.
     * 
     */
    public Output</* @Nullable */ String> getCredentials() {
        return this.credentials;
    }
    /**
     * The HTTP method (`GET`, `POST`, `PUT`, `DELETE`, `HEAD`, `OPTION`, `ANY`)
     * when calling the associated resource.
     * 
     */
    @OutputExport(name="httpMethod", type=String.class, parameters={})
    private Output<String> httpMethod;

    /**
     * @return The HTTP method (`GET`, `POST`, `PUT`, `DELETE`, `HEAD`, `OPTION`, `ANY`)
     * when calling the associated resource.
     * 
     */
    public Output<String> getHttpMethod() {
        return this.httpMethod;
    }
    /**
     * The integration HTTP method
     * (`GET`, `POST`, `PUT`, `DELETE`, `HEAD`, `OPTIONs`, `ANY`, `PATCH`) specifying how API Gateway will interact with the back end.
     * **Required** if `type` is `AWS`, `AWS_PROXY`, `HTTP` or `HTTP_PROXY`.
     * Not all methods are compatible with all `AWS` integrations.
     * e.g., Lambda function [can only be invoked](https://github.com/awslabs/aws-apigateway-importer/issues/9#issuecomment-129651005) via `POST`.
     * 
     */
    @OutputExport(name="integrationHttpMethod", type=String.class, parameters={})
    private Output</* @Nullable */ String> integrationHttpMethod;

    /**
     * @return The integration HTTP method
     * (`GET`, `POST`, `PUT`, `DELETE`, `HEAD`, `OPTIONs`, `ANY`, `PATCH`) specifying how API Gateway will interact with the back end.
     * **Required** if `type` is `AWS`, `AWS_PROXY`, `HTTP` or `HTTP_PROXY`.
     * Not all methods are compatible with all `AWS` integrations.
     * e.g., Lambda function [can only be invoked](https://github.com/awslabs/aws-apigateway-importer/issues/9#issuecomment-129651005) via `POST`.
     * 
     */
    public Output</* @Nullable */ String> getIntegrationHttpMethod() {
        return this.integrationHttpMethod;
    }
    /**
     * The integration passthrough behavior (`WHEN_NO_MATCH`, `WHEN_NO_TEMPLATES`, `NEVER`).  **Required** if `request_templates` is used.
     * 
     */
    @OutputExport(name="passthroughBehavior", type=String.class, parameters={})
    private Output<String> passthroughBehavior;

    /**
     * @return The integration passthrough behavior (`WHEN_NO_MATCH`, `WHEN_NO_TEMPLATES`, `NEVER`).  **Required** if `request_templates` is used.
     * 
     */
    public Output<String> getPassthroughBehavior() {
        return this.passthroughBehavior;
    }
    /**
     * A map of request query string parameters and headers that should be passed to the backend responder.
     * For example: `request_parameters = { "integration.request.header.X-Some-Other-Header" = "method.request.header.X-Some-Header" }`
     * 
     */
    @OutputExport(name="requestParameters", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> requestParameters;

    /**
     * @return A map of request query string parameters and headers that should be passed to the backend responder.
     * For example: `request_parameters = { "integration.request.header.X-Some-Other-Header" = "method.request.header.X-Some-Header" }`
     * 
     */
    public Output</* @Nullable */ Map<String,String>> getRequestParameters() {
        return this.requestParameters;
    }
    /**
     * A map of the integration's request templates.
     * 
     */
    @OutputExport(name="requestTemplates", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> requestTemplates;

    /**
     * @return A map of the integration's request templates.
     * 
     */
    public Output</* @Nullable */ Map<String,String>> getRequestTemplates() {
        return this.requestTemplates;
    }
    /**
     * The API resource ID.
     * 
     */
    @OutputExport(name="resourceId", type=String.class, parameters={})
    private Output<String> resourceId;

    /**
     * @return The API resource ID.
     * 
     */
    public Output<String> getResourceId() {
        return this.resourceId;
    }
    /**
     * The ID of the associated REST API.
     * 
     */
    @OutputExport(name="restApi", type=String.class, parameters={})
    private Output<String> restApi;

    /**
     * @return The ID of the associated REST API.
     * 
     */
    public Output<String> getRestApi() {
        return this.restApi;
    }
    /**
     * Custom timeout between 50 and 29,000 milliseconds. The default value is 29,000 milliseconds.
     * 
     */
    @OutputExport(name="timeoutMilliseconds", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> timeoutMilliseconds;

    /**
     * @return Custom timeout between 50 and 29,000 milliseconds. The default value is 29,000 milliseconds.
     * 
     */
    public Output</* @Nullable */ Integer> getTimeoutMilliseconds() {
        return this.timeoutMilliseconds;
    }
    /**
     * Configuration block specifying the TLS configuration for an integration. Defined below.
     * 
     */
    @OutputExport(name="tlsConfig", type=IntegrationTlsConfig.class, parameters={})
    private Output</* @Nullable */ IntegrationTlsConfig> tlsConfig;

    /**
     * @return Configuration block specifying the TLS configuration for an integration. Defined below.
     * 
     */
    public Output</* @Nullable */ IntegrationTlsConfig> getTlsConfig() {
        return this.tlsConfig;
    }
    /**
     * The integration input's [type](https://docs.aws.amazon.com/apigateway/api-reference/resource/integration/). Valid values are `HTTP` (for HTTP backends), `MOCK` (not calling any real backend), `AWS` (for AWS services), `AWS_PROXY` (for Lambda proxy integration) and `HTTP_PROXY` (for HTTP proxy integration). An `HTTP` or `HTTP_PROXY` integration with a `connection_type` of `VPC_LINK` is referred to as a private integration and uses a VpcLink to connect API Gateway to a network load balancer of a VPC.
     * 
     */
    @OutputExport(name="type", type=String.class, parameters={})
    private Output<String> type;

    /**
     * @return The integration input's [type](https://docs.aws.amazon.com/apigateway/api-reference/resource/integration/). Valid values are `HTTP` (for HTTP backends), `MOCK` (not calling any real backend), `AWS` (for AWS services), `AWS_PROXY` (for Lambda proxy integration) and `HTTP_PROXY` (for HTTP proxy integration). An `HTTP` or `HTTP_PROXY` integration with a `connection_type` of `VPC_LINK` is referred to as a private integration and uses a VpcLink to connect API Gateway to a network load balancer of a VPC.
     * 
     */
    public Output<String> getType() {
        return this.type;
    }
    /**
     * The input's URI. **Required** if `type` is `AWS`, `AWS_PROXY`, `HTTP` or `HTTP_PROXY`.
     * For HTTP integrations, the URI must be a fully formed, encoded HTTP(S) URL according to the RFC-3986 specification . For AWS integrations, the URI should be of the form `arn:aws:apigateway:{region}:{subdomain.service|service}:{path|action}/{service_api}`. `region`, `subdomain` and `service` are used to determine the right endpoint.
     * e.g., `arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-west-1:012345678901:function:my-func/invocations`. For private integrations, the URI parameter is not used for routing requests to your endpoint, but is used for setting the Host header and for certificate validation.
     * 
     */
    @OutputExport(name="uri", type=String.class, parameters={})
    private Output</* @Nullable */ String> uri;

    /**
     * @return The input's URI. **Required** if `type` is `AWS`, `AWS_PROXY`, `HTTP` or `HTTP_PROXY`.
     * For HTTP integrations, the URI must be a fully formed, encoded HTTP(S) URL according to the RFC-3986 specification . For AWS integrations, the URI should be of the form `arn:aws:apigateway:{region}:{subdomain.service|service}:{path|action}/{service_api}`. `region`, `subdomain` and `service` are used to determine the right endpoint.
     * e.g., `arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-west-1:012345678901:function:my-func/invocations`. For private integrations, the URI parameter is not used for routing requests to your endpoint, but is used for setting the Host header and for certificate validation.
     * 
     */
    public Output</* @Nullable */ String> getUri() {
        return this.uri;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Integration(String name, IntegrationArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:apigateway/integration:Integration", name, args == null ? IntegrationArgs.Empty : args, makeResourceOptions(options, Input.empty()));
    }

    private Integration(String name, Input<String> id, @Nullable IntegrationState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:apigateway/integration:Integration", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Input<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .setVersion(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Integration get(String name, Input<String> id, @Nullable IntegrationState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new Integration(name, id, state, options);
    }
}
