// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.apigateway.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.InputImport;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class MethodResponseState extends io.pulumi.resources.ResourceArgs {

    public static final MethodResponseState Empty = new MethodResponseState();

    /**
     * The HTTP Method (`GET`, `POST`, `PUT`, `DELETE`, `HEAD`, `OPTIONS`, `ANY`)
     * 
     */
    @InputImport(name="httpMethod")
      private final @Nullable Output<String> httpMethod;

    public Output<String> getHttpMethod() {
        return this.httpMethod == null ? Output.empty() : this.httpMethod;
    }

    /**
     * The API resource ID
     * 
     */
    @InputImport(name="resourceId")
      private final @Nullable Output<String> resourceId;

    public Output<String> getResourceId() {
        return this.resourceId == null ? Output.empty() : this.resourceId;
    }

    /**
     * A map of the API models used for the response's content type
     * 
     */
    @InputImport(name="responseModels")
      private final @Nullable Output<Map<String,String>> responseModels;

    public Output<Map<String,String>> getResponseModels() {
        return this.responseModels == null ? Output.empty() : this.responseModels;
    }

    /**
     * A map of response parameters that can be sent to the caller.
     * For example: `response_parameters = { "method.response.header.X-Some-Header" = true }`
     * would define that the header `X-Some-Header` can be provided on the response.
     * 
     */
    @InputImport(name="responseParameters")
      private final @Nullable Output<Map<String,Boolean>> responseParameters;

    public Output<Map<String,Boolean>> getResponseParameters() {
        return this.responseParameters == null ? Output.empty() : this.responseParameters;
    }

    /**
     * The ID of the associated REST API
     * 
     */
    @InputImport(name="restApi")
      private final @Nullable Output<String> restApi;

    public Output<String> getRestApi() {
        return this.restApi == null ? Output.empty() : this.restApi;
    }

    /**
     * The HTTP status code
     * 
     */
    @InputImport(name="statusCode")
      private final @Nullable Output<String> statusCode;

    public Output<String> getStatusCode() {
        return this.statusCode == null ? Output.empty() : this.statusCode;
    }

    public MethodResponseState(
        @Nullable Output<String> httpMethod,
        @Nullable Output<String> resourceId,
        @Nullable Output<Map<String,String>> responseModels,
        @Nullable Output<Map<String,Boolean>> responseParameters,
        @Nullable Output<String> restApi,
        @Nullable Output<String> statusCode) {
        this.httpMethod = httpMethod;
        this.resourceId = resourceId;
        this.responseModels = responseModels;
        this.responseParameters = responseParameters;
        this.restApi = restApi;
        this.statusCode = statusCode;
    }

    private MethodResponseState() {
        this.httpMethod = Output.empty();
        this.resourceId = Output.empty();
        this.responseModels = Output.empty();
        this.responseParameters = Output.empty();
        this.restApi = Output.empty();
        this.statusCode = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MethodResponseState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> httpMethod;
        private @Nullable Output<String> resourceId;
        private @Nullable Output<Map<String,String>> responseModels;
        private @Nullable Output<Map<String,Boolean>> responseParameters;
        private @Nullable Output<String> restApi;
        private @Nullable Output<String> statusCode;

        public Builder() {
    	      // Empty
        }

        public Builder(MethodResponseState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.httpMethod = defaults.httpMethod;
    	      this.resourceId = defaults.resourceId;
    	      this.responseModels = defaults.responseModels;
    	      this.responseParameters = defaults.responseParameters;
    	      this.restApi = defaults.restApi;
    	      this.statusCode = defaults.statusCode;
        }

        public Builder httpMethod(@Nullable Output<String> httpMethod) {
            this.httpMethod = httpMethod;
            return this;
        }

        public Builder httpMethod(@Nullable String httpMethod) {
            this.httpMethod = Output.ofNullable(httpMethod);
            return this;
        }

        public Builder resourceId(@Nullable Output<String> resourceId) {
            this.resourceId = resourceId;
            return this;
        }

        public Builder resourceId(@Nullable String resourceId) {
            this.resourceId = Output.ofNullable(resourceId);
            return this;
        }

        public Builder responseModels(@Nullable Output<Map<String,String>> responseModels) {
            this.responseModels = responseModels;
            return this;
        }

        public Builder responseModels(@Nullable Map<String,String> responseModels) {
            this.responseModels = Output.ofNullable(responseModels);
            return this;
        }

        public Builder responseParameters(@Nullable Output<Map<String,Boolean>> responseParameters) {
            this.responseParameters = responseParameters;
            return this;
        }

        public Builder responseParameters(@Nullable Map<String,Boolean> responseParameters) {
            this.responseParameters = Output.ofNullable(responseParameters);
            return this;
        }

        public Builder restApi(@Nullable Output<String> restApi) {
            this.restApi = restApi;
            return this;
        }

        public Builder statusCode(@Nullable Output<String> statusCode) {
            this.statusCode = statusCode;
            return this;
        }

        public Builder statusCode(@Nullable String statusCode) {
            this.statusCode = Output.ofNullable(statusCode);
            return this;
        }
        public MethodResponseState build() {
            return new MethodResponseState(httpMethod, resourceId, responseModels, responseParameters, restApi, statusCode);
        }
    }
}
