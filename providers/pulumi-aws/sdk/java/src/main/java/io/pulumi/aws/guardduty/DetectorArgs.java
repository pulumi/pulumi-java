// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.guardduty;

import io.pulumi.aws.guardduty.inputs.DetectorDatasourcesArgs;
import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class DetectorArgs extends io.pulumi.resources.ResourceArgs {

    public static final DetectorArgs Empty = new DetectorArgs();

    /**
     * Describes which data sources will be enabled for the detector. See Data Sources below for more details.
     * 
     */
    @InputImport(name="datasources")
    private final @Nullable Input<DetectorDatasourcesArgs> datasources;

    public Input<DetectorDatasourcesArgs> getDatasources() {
        return this.datasources == null ? Input.empty() : this.datasources;
    }

    /**
     * If true, enables [S3 Protection](https://docs.aws.amazon.com/guardduty/latest/ug/s3_detection.html). Defaults to `true`.
     * 
     */
    @InputImport(name="enable")
    private final @Nullable Input<Boolean> enable;

    public Input<Boolean> getEnable() {
        return this.enable == null ? Input.empty() : this.enable;
    }

    /**
     * Specifies the frequency of notifications sent for subsequent finding occurrences. If the detector is a GuardDuty member account, the value is determined by the GuardDuty primary account and cannot be modified, otherwise defaults to `SIX_HOURS`. For standalone and GuardDuty primary accounts, it must be configured in this provider to enable drift detection. Valid values for standalone and primary accounts: `FIFTEEN_MINUTES`, `ONE_HOUR`, `SIX_HOURS`. See [AWS Documentation](https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_findings_cloudwatch.html#guardduty_findings_cloudwatch_notification_frequency) for more information.
     * 
     */
    @InputImport(name="findingPublishingFrequency")
    private final @Nullable Input<String> findingPublishingFrequency;

    public Input<String> getFindingPublishingFrequency() {
        return this.findingPublishingFrequency == null ? Input.empty() : this.findingPublishingFrequency;
    }

    /**
     * Key-value map of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @InputImport(name="tags")
    private final @Nullable Input<Map<String,String>> tags;

    public Input<Map<String,String>> getTags() {
        return this.tags == null ? Input.empty() : this.tags;
    }

    public DetectorArgs(
        @Nullable Input<DetectorDatasourcesArgs> datasources,
        @Nullable Input<Boolean> enable,
        @Nullable Input<String> findingPublishingFrequency,
        @Nullable Input<Map<String,String>> tags) {
        this.datasources = datasources;
        this.enable = enable;
        this.findingPublishingFrequency = findingPublishingFrequency;
        this.tags = tags;
    }

    private DetectorArgs() {
        this.datasources = Input.empty();
        this.enable = Input.empty();
        this.findingPublishingFrequency = Input.empty();
        this.tags = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DetectorArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<DetectorDatasourcesArgs> datasources;
        private @Nullable Input<Boolean> enable;
        private @Nullable Input<String> findingPublishingFrequency;
        private @Nullable Input<Map<String,String>> tags;

        public Builder() {
    	      // Empty
        }

        public Builder(DetectorArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.datasources = defaults.datasources;
    	      this.enable = defaults.enable;
    	      this.findingPublishingFrequency = defaults.findingPublishingFrequency;
    	      this.tags = defaults.tags;
        }

        public Builder setDatasources(@Nullable Input<DetectorDatasourcesArgs> datasources) {
            this.datasources = datasources;
            return this;
        }

        public Builder setDatasources(@Nullable DetectorDatasourcesArgs datasources) {
            this.datasources = Input.ofNullable(datasources);
            return this;
        }

        public Builder setEnable(@Nullable Input<Boolean> enable) {
            this.enable = enable;
            return this;
        }

        public Builder setEnable(@Nullable Boolean enable) {
            this.enable = Input.ofNullable(enable);
            return this;
        }

        public Builder setFindingPublishingFrequency(@Nullable Input<String> findingPublishingFrequency) {
            this.findingPublishingFrequency = findingPublishingFrequency;
            return this;
        }

        public Builder setFindingPublishingFrequency(@Nullable String findingPublishingFrequency) {
            this.findingPublishingFrequency = Input.ofNullable(findingPublishingFrequency);
            return this;
        }

        public Builder setTags(@Nullable Input<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }

        public Builder setTags(@Nullable Map<String,String> tags) {
            this.tags = Input.ofNullable(tags);
            return this;
        }
        public DetectorArgs build() {
            return new DetectorArgs(datasources, enable, findingPublishingFrequency, tags);
        }
    }
}
