// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.budgets.inputs;

import io.pulumi.aws.budgets.inputs.BudgetActionActionThresholdGetArgs;
import io.pulumi.aws.budgets.inputs.BudgetActionDefinitionGetArgs;
import io.pulumi.aws.budgets.inputs.BudgetActionSubscriberGetArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class BudgetActionState extends io.pulumi.resources.ResourceArgs {

    public static final BudgetActionState Empty = new BudgetActionState();

    /**
     * The ID of the target account for budget. Will use current user's account_id by default if omitted.
     * 
     */
    @Import(name="accountId")
      private final @Nullable Output<String> accountId;

    public Output<String> accountId() {
        return this.accountId == null ? Codegen.empty() : this.accountId;
    }

    /**
     * The id of the budget action.
     * 
     */
    @Import(name="actionId")
      private final @Nullable Output<String> actionId;

    public Output<String> actionId() {
        return this.actionId == null ? Codegen.empty() : this.actionId;
    }

    /**
     * The trigger threshold of the action. See Action Threshold.
     * 
     */
    @Import(name="actionThreshold")
      private final @Nullable Output<BudgetActionActionThresholdGetArgs> actionThreshold;

    public Output<BudgetActionActionThresholdGetArgs> actionThreshold() {
        return this.actionThreshold == null ? Codegen.empty() : this.actionThreshold;
    }

    /**
     * The type of action. This defines the type of tasks that can be carried out by this action. This field also determines the format for definition. Valid values are `APPLY_IAM_POLICY`, `APPLY_SCP_POLICY`, and `RUN_SSM_DOCUMENTS`.
     * 
     */
    @Import(name="actionType")
      private final @Nullable Output<String> actionType;

    public Output<String> actionType() {
        return this.actionType == null ? Codegen.empty() : this.actionType;
    }

    /**
     * This specifies if the action needs manual or automatic approval. Valid values are `AUTOMATIC` and `MANUAL`.
     * 
     */
    @Import(name="approvalModel")
      private final @Nullable Output<String> approvalModel;

    public Output<String> approvalModel() {
        return this.approvalModel == null ? Codegen.empty() : this.approvalModel;
    }

    /**
     * The ARN of the budget action.
     * 
     */
    @Import(name="arn")
      private final @Nullable Output<String> arn;

    public Output<String> arn() {
        return this.arn == null ? Codegen.empty() : this.arn;
    }

    /**
     * The name of a budget.
     * 
     */
    @Import(name="budgetName")
      private final @Nullable Output<String> budgetName;

    public Output<String> budgetName() {
        return this.budgetName == null ? Codegen.empty() : this.budgetName;
    }

    /**
     * Specifies all of the type-specific parameters. See Definition.
     * 
     */
    @Import(name="definition")
      private final @Nullable Output<BudgetActionDefinitionGetArgs> definition;

    public Output<BudgetActionDefinitionGetArgs> definition() {
        return this.definition == null ? Codegen.empty() : this.definition;
    }

    /**
     * The role passed for action execution and reversion. Roles and actions must be in the same account.
     * 
     */
    @Import(name="executionRoleArn")
      private final @Nullable Output<String> executionRoleArn;

    public Output<String> executionRoleArn() {
        return this.executionRoleArn == null ? Codegen.empty() : this.executionRoleArn;
    }

    /**
     * The type of a notification. Valid values are `ACTUAL` or `FORECASTED`.
     * 
     */
    @Import(name="notificationType")
      private final @Nullable Output<String> notificationType;

    public Output<String> notificationType() {
        return this.notificationType == null ? Codegen.empty() : this.notificationType;
    }

    /**
     * The status of the budget action.
     * 
     */
    @Import(name="status")
      private final @Nullable Output<String> status;

    public Output<String> status() {
        return this.status == null ? Codegen.empty() : this.status;
    }

    /**
     * A list of subscribers. See Subscriber.
     * 
     */
    @Import(name="subscribers")
      private final @Nullable Output<List<BudgetActionSubscriberGetArgs>> subscribers;

    public Output<List<BudgetActionSubscriberGetArgs>> subscribers() {
        return this.subscribers == null ? Codegen.empty() : this.subscribers;
    }

    public BudgetActionState(
        @Nullable Output<String> accountId,
        @Nullable Output<String> actionId,
        @Nullable Output<BudgetActionActionThresholdGetArgs> actionThreshold,
        @Nullable Output<String> actionType,
        @Nullable Output<String> approvalModel,
        @Nullable Output<String> arn,
        @Nullable Output<String> budgetName,
        @Nullable Output<BudgetActionDefinitionGetArgs> definition,
        @Nullable Output<String> executionRoleArn,
        @Nullable Output<String> notificationType,
        @Nullable Output<String> status,
        @Nullable Output<List<BudgetActionSubscriberGetArgs>> subscribers) {
        this.accountId = accountId;
        this.actionId = actionId;
        this.actionThreshold = actionThreshold;
        this.actionType = actionType;
        this.approvalModel = approvalModel;
        this.arn = arn;
        this.budgetName = budgetName;
        this.definition = definition;
        this.executionRoleArn = executionRoleArn;
        this.notificationType = notificationType;
        this.status = status;
        this.subscribers = subscribers;
    }

    private BudgetActionState() {
        this.accountId = Codegen.empty();
        this.actionId = Codegen.empty();
        this.actionThreshold = Codegen.empty();
        this.actionType = Codegen.empty();
        this.approvalModel = Codegen.empty();
        this.arn = Codegen.empty();
        this.budgetName = Codegen.empty();
        this.definition = Codegen.empty();
        this.executionRoleArn = Codegen.empty();
        this.notificationType = Codegen.empty();
        this.status = Codegen.empty();
        this.subscribers = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BudgetActionState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> accountId;
        private @Nullable Output<String> actionId;
        private @Nullable Output<BudgetActionActionThresholdGetArgs> actionThreshold;
        private @Nullable Output<String> actionType;
        private @Nullable Output<String> approvalModel;
        private @Nullable Output<String> arn;
        private @Nullable Output<String> budgetName;
        private @Nullable Output<BudgetActionDefinitionGetArgs> definition;
        private @Nullable Output<String> executionRoleArn;
        private @Nullable Output<String> notificationType;
        private @Nullable Output<String> status;
        private @Nullable Output<List<BudgetActionSubscriberGetArgs>> subscribers;

        public Builder() {
    	      // Empty
        }

        public Builder(BudgetActionState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountId = defaults.accountId;
    	      this.actionId = defaults.actionId;
    	      this.actionThreshold = defaults.actionThreshold;
    	      this.actionType = defaults.actionType;
    	      this.approvalModel = defaults.approvalModel;
    	      this.arn = defaults.arn;
    	      this.budgetName = defaults.budgetName;
    	      this.definition = defaults.definition;
    	      this.executionRoleArn = defaults.executionRoleArn;
    	      this.notificationType = defaults.notificationType;
    	      this.status = defaults.status;
    	      this.subscribers = defaults.subscribers;
        }

        public Builder accountId(@Nullable Output<String> accountId) {
            this.accountId = accountId;
            return this;
        }
        public Builder accountId(@Nullable String accountId) {
            this.accountId = Codegen.ofNullable(accountId);
            return this;
        }
        public Builder actionId(@Nullable Output<String> actionId) {
            this.actionId = actionId;
            return this;
        }
        public Builder actionId(@Nullable String actionId) {
            this.actionId = Codegen.ofNullable(actionId);
            return this;
        }
        public Builder actionThreshold(@Nullable Output<BudgetActionActionThresholdGetArgs> actionThreshold) {
            this.actionThreshold = actionThreshold;
            return this;
        }
        public Builder actionThreshold(@Nullable BudgetActionActionThresholdGetArgs actionThreshold) {
            this.actionThreshold = Codegen.ofNullable(actionThreshold);
            return this;
        }
        public Builder actionType(@Nullable Output<String> actionType) {
            this.actionType = actionType;
            return this;
        }
        public Builder actionType(@Nullable String actionType) {
            this.actionType = Codegen.ofNullable(actionType);
            return this;
        }
        public Builder approvalModel(@Nullable Output<String> approvalModel) {
            this.approvalModel = approvalModel;
            return this;
        }
        public Builder approvalModel(@Nullable String approvalModel) {
            this.approvalModel = Codegen.ofNullable(approvalModel);
            return this;
        }
        public Builder arn(@Nullable Output<String> arn) {
            this.arn = arn;
            return this;
        }
        public Builder arn(@Nullable String arn) {
            this.arn = Codegen.ofNullable(arn);
            return this;
        }
        public Builder budgetName(@Nullable Output<String> budgetName) {
            this.budgetName = budgetName;
            return this;
        }
        public Builder budgetName(@Nullable String budgetName) {
            this.budgetName = Codegen.ofNullable(budgetName);
            return this;
        }
        public Builder definition(@Nullable Output<BudgetActionDefinitionGetArgs> definition) {
            this.definition = definition;
            return this;
        }
        public Builder definition(@Nullable BudgetActionDefinitionGetArgs definition) {
            this.definition = Codegen.ofNullable(definition);
            return this;
        }
        public Builder executionRoleArn(@Nullable Output<String> executionRoleArn) {
            this.executionRoleArn = executionRoleArn;
            return this;
        }
        public Builder executionRoleArn(@Nullable String executionRoleArn) {
            this.executionRoleArn = Codegen.ofNullable(executionRoleArn);
            return this;
        }
        public Builder notificationType(@Nullable Output<String> notificationType) {
            this.notificationType = notificationType;
            return this;
        }
        public Builder notificationType(@Nullable String notificationType) {
            this.notificationType = Codegen.ofNullable(notificationType);
            return this;
        }
        public Builder status(@Nullable Output<String> status) {
            this.status = status;
            return this;
        }
        public Builder status(@Nullable String status) {
            this.status = Codegen.ofNullable(status);
            return this;
        }
        public Builder subscribers(@Nullable Output<List<BudgetActionSubscriberGetArgs>> subscribers) {
            this.subscribers = subscribers;
            return this;
        }
        public Builder subscribers(@Nullable List<BudgetActionSubscriberGetArgs> subscribers) {
            this.subscribers = Codegen.ofNullable(subscribers);
            return this;
        }
        public Builder subscribers(BudgetActionSubscriberGetArgs... subscribers) {
            return subscribers(List.of(subscribers));
        }        public BudgetActionState build() {
            return new BudgetActionState(accountId, actionId, actionThreshold, actionType, approvalModel, arn, budgetName, definition, executionRoleArn, notificationType, status, subscribers);
        }
    }
}
