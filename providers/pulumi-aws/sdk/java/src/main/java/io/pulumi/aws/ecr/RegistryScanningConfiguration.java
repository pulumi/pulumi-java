// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.ecr;

import io.pulumi.aws.Utilities;
import io.pulumi.aws.ecr.RegistryScanningConfigurationArgs;
import io.pulumi.aws.ecr.inputs.RegistryScanningConfigurationState;
import io.pulumi.aws.ecr.outputs.RegistryScanningConfigurationRule;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Export;
import io.pulumi.core.annotations.ResourceType;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * Provides an Elastic Container Registry Scanning Configuration. Can't be completely deleted, instead reverts to the default `BASIC` scanning configuration without rules.
 * 
 * {{% examples %}}
 * ## Example Usage
 * {{% example %}}
 * ### Basic example
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 * 
 * const configuration = new aws.ecr.RegistryScanningConfiguration("configuration", {
 *     rules: [{
 *         repositoryFilters: [{
 *             filter: "example",
 *             filterType: "WILDCARD",
 *         }],
 *         scanFrequency: "CONTINUOUS_SCAN",
 *     }],
 *     scanType: "ENHANCED",
 * });
 * ```
 * ```python
 * import pulumi
 * import pulumi_aws as aws
 * 
 * configuration = aws.ecr.RegistryScanningConfiguration("configuration",
 *     rules=[aws.ecr.RegistryScanningConfigurationRuleArgs(
 *         repository_filters=[aws.ecr.RegistryScanningConfigurationRuleRepositoryFilterArgs(
 *             filter="example",
 *             filter_type="WILDCARD",
 *         )],
 *         scan_frequency="CONTINUOUS_SCAN",
 *     )],
 *     scan_type="ENHANCED")
 * ```
 * ```csharp
 * using Pulumi;
 * using Aws = Pulumi.Aws;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var configuration = new Aws.Ecr.RegistryScanningConfiguration("configuration", new Aws.Ecr.RegistryScanningConfigurationArgs
 *         {
 *             Rules = 
 *             {
 *                 new Aws.Ecr.Inputs.RegistryScanningConfigurationRuleArgs
 *                 {
 *                     RepositoryFilters = 
 *                     {
 *                         new Aws.Ecr.Inputs.RegistryScanningConfigurationRuleRepositoryFilterArgs
 *                         {
 *                             Filter = "example",
 *                             FilterType = "WILDCARD",
 *                         },
 *                     },
 *                     ScanFrequency = "CONTINUOUS_SCAN",
 *                 },
 *             },
 *             ScanType = "ENHANCED",
 *         });
 *     }
 * 
 * }
 * ```
 * ```go
 * package main
 * 
 * import (
 * 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/ecr"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		_, err := ecr.NewRegistryScanningConfiguration(ctx, "configuration", &ecr.RegistryScanningConfigurationArgs{
 * 			Rules: ecr.RegistryScanningConfigurationRuleArray{
 * 				&ecr.RegistryScanningConfigurationRuleArgs{
 * 					RepositoryFilters: ecr.RegistryScanningConfigurationRuleRepositoryFilterArray{
 * 						&ecr.RegistryScanningConfigurationRuleRepositoryFilterArgs{
 * 							Filter:     pulumi.String("example"),
 * 							FilterType: pulumi.String("WILDCARD"),
 * 						},
 * 					},
 * 					ScanFrequency: pulumi.String("CONTINUOUS_SCAN"),
 * 				},
 * 			},
 * 			ScanType: pulumi.String("ENHANCED"),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * ```
 * {{% /example %}}
 * {{% example %}}
 * ### Multiple rules
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 * 
 * const test = new aws.ecr.RegistryScanningConfiguration("test", {
 *     rules: [
 *         {
 *             repositoryFilters: [{
 *                 filter: "*",
 *                 filterType: "WILDCARD",
 *             }],
 *             scanFrequency: "SCAN_ON_PUSH",
 *         },
 *         {
 *             repositoryFilters: [{
 *                 filter: "example",
 *                 filterType: "WILDCARD",
 *             }],
 *             scanFrequency: "CONTINUOUS_SCAN",
 *         },
 *     ],
 *     scanType: "ENHANCED",
 * });
 * ```
 * ```python
 * import pulumi
 * import pulumi_aws as aws
 * 
 * test = aws.ecr.RegistryScanningConfiguration("test",
 *     rules=[
 *         aws.ecr.RegistryScanningConfigurationRuleArgs(
 *             repository_filters=[aws.ecr.RegistryScanningConfigurationRuleRepositoryFilterArgs(
 *                 filter="*",
 *                 filter_type="WILDCARD",
 *             )],
 *             scan_frequency="SCAN_ON_PUSH",
 *         ),
 *         aws.ecr.RegistryScanningConfigurationRuleArgs(
 *             repository_filters=[aws.ecr.RegistryScanningConfigurationRuleRepositoryFilterArgs(
 *                 filter="example",
 *                 filter_type="WILDCARD",
 *             )],
 *             scan_frequency="CONTINUOUS_SCAN",
 *         ),
 *     ],
 *     scan_type="ENHANCED")
 * ```
 * ```csharp
 * using Pulumi;
 * using Aws = Pulumi.Aws;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var test = new Aws.Ecr.RegistryScanningConfiguration("test", new Aws.Ecr.RegistryScanningConfigurationArgs
 *         {
 *             Rules = 
 *             {
 *                 new Aws.Ecr.Inputs.RegistryScanningConfigurationRuleArgs
 *                 {
 *                     RepositoryFilters = 
 *                     {
 *                         new Aws.Ecr.Inputs.RegistryScanningConfigurationRuleRepositoryFilterArgs
 *                         {
 *                             Filter = "*",
 *                             FilterType = "WILDCARD",
 *                         },
 *                     },
 *                     ScanFrequency = "SCAN_ON_PUSH",
 *                 },
 *                 new Aws.Ecr.Inputs.RegistryScanningConfigurationRuleArgs
 *                 {
 *                     RepositoryFilters = 
 *                     {
 *                         new Aws.Ecr.Inputs.RegistryScanningConfigurationRuleRepositoryFilterArgs
 *                         {
 *                             Filter = "example",
 *                             FilterType = "WILDCARD",
 *                         },
 *                     },
 *                     ScanFrequency = "CONTINUOUS_SCAN",
 *                 },
 *             },
 *             ScanType = "ENHANCED",
 *         });
 *     }
 * 
 * }
 * ```
 * ```go
 * package main
 * 
 * import (
 * 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/ecr"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		_, err := ecr.NewRegistryScanningConfiguration(ctx, "test", &ecr.RegistryScanningConfigurationArgs{
 * 			Rules: ecr.RegistryScanningConfigurationRuleArray{
 * 				&ecr.RegistryScanningConfigurationRuleArgs{
 * 					RepositoryFilters: ecr.RegistryScanningConfigurationRuleRepositoryFilterArray{
 * 						&ecr.RegistryScanningConfigurationRuleRepositoryFilterArgs{
 * 							Filter:     pulumi.String("*"),
 * 							FilterType: pulumi.String("WILDCARD"),
 * 						},
 * 					},
 * 					ScanFrequency: pulumi.String("SCAN_ON_PUSH"),
 * 				},
 * 				&ecr.RegistryScanningConfigurationRuleArgs{
 * 					RepositoryFilters: ecr.RegistryScanningConfigurationRuleRepositoryFilterArray{
 * 						&ecr.RegistryScanningConfigurationRuleRepositoryFilterArgs{
 * 							Filter:     pulumi.String("example"),
 * 							FilterType: pulumi.String("WILDCARD"),
 * 						},
 * 					},
 * 					ScanFrequency: pulumi.String("CONTINUOUS_SCAN"),
 * 				},
 * 			},
 * 			ScanType: pulumi.String("ENHANCED"),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * ```
 * {{% /example %}}
 * {{% /examples %}}
 * 
 * ## Import
 * 
 * ECR Scanning Configurations can be imported using the `registry_id`, e.g.,
 * 
 * ```sh
 *  $ pulumi import aws:ecr/registryScanningConfiguration:RegistryScanningConfiguration aws_ecr_registry_scanning_configuration 012345678901
 * ```
 * 
 *  
 */
@ResourceType(type="aws:ecr/registryScanningConfiguration:RegistryScanningConfiguration")
public class RegistryScanningConfiguration extends io.pulumi.resources.CustomResource {
    /**
     * The registry ID the scanning configuration applies to.
     * 
     */
    @Export(name="registryId", type=String.class, parameters={})
    private Output<String> registryId;

    /**
     * @return The registry ID the scanning configuration applies to.
     * 
     */
    public Output<String> getRegistryId() {
        return this.registryId;
    }
    /**
     * One or multiple blocks specifying scanning rules to determine which repository filters are used and at what frequency scanning will occur. See below for schema.
     * 
     */
    @Export(name="rules", type=List.class, parameters={RegistryScanningConfigurationRule.class})
    private Output</* @Nullable */ List<RegistryScanningConfigurationRule>> rules;

    /**
     * @return One or multiple blocks specifying scanning rules to determine which repository filters are used and at what frequency scanning will occur. See below for schema.
     * 
     */
    public Output</* @Nullable */ List<RegistryScanningConfigurationRule>> getRules() {
        return this.rules;
    }
    /**
     * the scanning type to set for the registry. Can be either `ENHANCED` or `BASIC`.
     * 
     */
    @Export(name="scanType", type=String.class, parameters={})
    private Output<String> scanType;

    /**
     * @return the scanning type to set for the registry. Can be either `ENHANCED` or `BASIC`.
     * 
     */
    public Output<String> getScanType() {
        return this.scanType;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public RegistryScanningConfiguration(String name) {
        this(name, RegistryScanningConfigurationArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public RegistryScanningConfiguration(String name, RegistryScanningConfigurationArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public RegistryScanningConfiguration(String name, RegistryScanningConfigurationArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:ecr/registryScanningConfiguration:RegistryScanningConfiguration", name, args == null ? RegistryScanningConfigurationArgs.Empty : args, makeResourceOptions(options, Output.empty()));
    }

    private RegistryScanningConfiguration(String name, Output<String> id, @Nullable RegistryScanningConfigurationState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:ecr/registryScanningConfiguration:RegistryScanningConfiguration", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static RegistryScanningConfiguration get(String name, Output<String> id, @Nullable RegistryScanningConfigurationState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new RegistryScanningConfiguration(name, id, state, options);
    }
}
