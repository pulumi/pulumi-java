// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.codepipeline.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class WebhookAuthenticationConfigurationArgs extends io.pulumi.resources.ResourceArgs {

    public static final WebhookAuthenticationConfigurationArgs Empty = new WebhookAuthenticationConfigurationArgs();

    /**
     * A valid CIDR block for `IP` filtering. Required for `IP`.
     * 
     */
    @InputImport(name="allowedIpRange")
      private final @Nullable Input<String> allowedIpRange;

    public Input<String> getAllowedIpRange() {
        return this.allowedIpRange == null ? Input.empty() : this.allowedIpRange;
    }

    /**
     * The shared secret for the GitHub repository webhook. Set this as `secret` in your `github_repository_webhook`'s `configuration` block. Required for `GITHUB_HMAC`.
     * 
     */
    @InputImport(name="secretToken")
      private final @Nullable Input<String> secretToken;

    public Input<String> getSecretToken() {
        return this.secretToken == null ? Input.empty() : this.secretToken;
    }

    public WebhookAuthenticationConfigurationArgs(
        @Nullable Input<String> allowedIpRange,
        @Nullable Input<String> secretToken) {
        this.allowedIpRange = allowedIpRange;
        this.secretToken = secretToken;
    }

    private WebhookAuthenticationConfigurationArgs() {
        this.allowedIpRange = Input.empty();
        this.secretToken = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(WebhookAuthenticationConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> allowedIpRange;
        private @Nullable Input<String> secretToken;

        public Builder() {
    	      // Empty
        }

        public Builder(WebhookAuthenticationConfigurationArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allowedIpRange = defaults.allowedIpRange;
    	      this.secretToken = defaults.secretToken;
        }

        public Builder setAllowedIpRange(@Nullable Input<String> allowedIpRange) {
            this.allowedIpRange = allowedIpRange;
            return this;
        }

        public Builder setAllowedIpRange(@Nullable String allowedIpRange) {
            this.allowedIpRange = Input.ofNullable(allowedIpRange);
            return this;
        }

        public Builder setSecretToken(@Nullable Input<String> secretToken) {
            this.secretToken = secretToken;
            return this;
        }

        public Builder setSecretToken(@Nullable String secretToken) {
            this.secretToken = Input.ofNullable(secretToken);
            return this;
        }
        public WebhookAuthenticationConfigurationArgs build() {
            return new WebhookAuthenticationConfigurationArgs(allowedIpRange, secretToken);
        }
    }
}
