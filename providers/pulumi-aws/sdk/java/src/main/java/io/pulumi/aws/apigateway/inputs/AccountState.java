// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.apigateway.inputs;

import io.pulumi.aws.apigateway.inputs.AccountThrottleSettingsGetArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class AccountState extends io.pulumi.resources.ResourceArgs {

    public static final AccountState Empty = new AccountState();

    /**
     * The ARN of an IAM role for CloudWatch (to allow logging & monitoring). See more [in AWS Docs](https://docs.aws.amazon.com/apigateway/latest/developerguide/how-to-stage-settings.html#how-to-stage-settings-console). Logging & monitoring can be enabled/disabled and otherwise tuned on the API Gateway Stage level.
     * 
     */
    @Import(name="cloudwatchRoleArn")
      private final @Nullable Output<String> cloudwatchRoleArn;

    public Output<String> getCloudwatchRoleArn() {
        return this.cloudwatchRoleArn == null ? Output.empty() : this.cloudwatchRoleArn;
    }

    /**
     * Account-Level throttle settings. See exported fields below.
     * 
     */
    @Import(name="throttleSettings")
      private final @Nullable Output<AccountThrottleSettingsGetArgs> throttleSettings;

    public Output<AccountThrottleSettingsGetArgs> getThrottleSettings() {
        return this.throttleSettings == null ? Output.empty() : this.throttleSettings;
    }

    public AccountState(
        @Nullable Output<String> cloudwatchRoleArn,
        @Nullable Output<AccountThrottleSettingsGetArgs> throttleSettings) {
        this.cloudwatchRoleArn = cloudwatchRoleArn;
        this.throttleSettings = throttleSettings;
    }

    private AccountState() {
        this.cloudwatchRoleArn = Output.empty();
        this.throttleSettings = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AccountState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> cloudwatchRoleArn;
        private @Nullable Output<AccountThrottleSettingsGetArgs> throttleSettings;

        public Builder() {
    	      // Empty
        }

        public Builder(AccountState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cloudwatchRoleArn = defaults.cloudwatchRoleArn;
    	      this.throttleSettings = defaults.throttleSettings;
        }

        public Builder cloudwatchRoleArn(@Nullable Output<String> cloudwatchRoleArn) {
            this.cloudwatchRoleArn = cloudwatchRoleArn;
            return this;
        }

        public Builder cloudwatchRoleArn(@Nullable String cloudwatchRoleArn) {
            this.cloudwatchRoleArn = Output.ofNullable(cloudwatchRoleArn);
            return this;
        }

        public Builder throttleSettings(@Nullable Output<AccountThrottleSettingsGetArgs> throttleSettings) {
            this.throttleSettings = throttleSettings;
            return this;
        }

        public Builder throttleSettings(@Nullable AccountThrottleSettingsGetArgs throttleSettings) {
            this.throttleSettings = Output.ofNullable(throttleSettings);
            return this;
        }
        public AccountState build() {
            return new AccountState(cloudwatchRoleArn, throttleSettings);
        }
    }
}
