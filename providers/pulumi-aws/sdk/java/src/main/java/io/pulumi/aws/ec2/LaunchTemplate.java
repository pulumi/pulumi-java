// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.ec2;

import io.pulumi.aws.Utilities;
import io.pulumi.aws.ec2.LaunchTemplateArgs;
import io.pulumi.aws.ec2.inputs.LaunchTemplateState;
import io.pulumi.aws.ec2.outputs.LaunchTemplateBlockDeviceMapping;
import io.pulumi.aws.ec2.outputs.LaunchTemplateCapacityReservationSpecification;
import io.pulumi.aws.ec2.outputs.LaunchTemplateCpuOptions;
import io.pulumi.aws.ec2.outputs.LaunchTemplateCreditSpecification;
import io.pulumi.aws.ec2.outputs.LaunchTemplateElasticGpuSpecification;
import io.pulumi.aws.ec2.outputs.LaunchTemplateElasticInferenceAccelerator;
import io.pulumi.aws.ec2.outputs.LaunchTemplateEnclaveOptions;
import io.pulumi.aws.ec2.outputs.LaunchTemplateHibernationOptions;
import io.pulumi.aws.ec2.outputs.LaunchTemplateIamInstanceProfile;
import io.pulumi.aws.ec2.outputs.LaunchTemplateInstanceMarketOptions;
import io.pulumi.aws.ec2.outputs.LaunchTemplateLicenseSpecification;
import io.pulumi.aws.ec2.outputs.LaunchTemplateMetadataOptions;
import io.pulumi.aws.ec2.outputs.LaunchTemplateMonitoring;
import io.pulumi.aws.ec2.outputs.LaunchTemplateNetworkInterface;
import io.pulumi.aws.ec2.outputs.LaunchTemplatePlacement;
import io.pulumi.aws.ec2.outputs.LaunchTemplateTagSpecification;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Export;
import io.pulumi.core.annotations.ResourceType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;

/**
 * Provides an EC2 launch template resource. Can be used to create instances or auto scaling groups.
 * 
 * {{% examples %}}
 * ## Example Usage
 * {{% example %}}
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 * import * from "fs";
 * 
 * const foo = new aws.ec2.LaunchTemplate("foo", {
 *     blockDeviceMappings: [{
 *         deviceName: "/dev/sda1",
 *         ebs: {
 *             volumeSize: 20,
 *         },
 *     }],
 *     capacityReservationSpecification: {
 *         capacityReservationPreference: "open",
 *     },
 *     cpuOptions: {
 *         coreCount: 4,
 *         threadsPerCore: 2,
 *     },
 *     creditSpecification: {
 *         cpuCredits: "standard",
 *     },
 *     disableApiTermination: true,
 *     ebsOptimized: true,
 *     elasticGpuSpecifications: [{
 *         type: "test",
 *     }],
 *     elasticInferenceAccelerator: {
 *         type: "eia1.medium",
 *     },
 *     iamInstanceProfile: {
 *         name: "test",
 *     },
 *     imageId: "ami-test",
 *     instanceInitiatedShutdownBehavior: "terminate",
 *     instanceMarketOptions: {
 *         marketType: "spot",
 *     },
 *     instanceType: "t2.micro",
 *     kernelId: "test",
 *     keyName: "test",
 *     licenseSpecifications: [{
 *         licenseConfigurationArn: "arn:aws:license-manager:eu-west-1:123456789012:license-configuration:lic-0123456789abcdef0123456789abcdef",
 *     }],
 *     metadataOptions: {
 *         httpEndpoint: "enabled",
 *         httpTokens: "required",
 *         httpPutResponseHopLimit: 1,
 *         instanceMetadataTags: "enabled",
 *     },
 *     monitoring: {
 *         enabled: true,
 *     },
 *     networkInterfaces: [{
 *         associatePublicIpAddress: true,
 *     }],
 *     placement: {
 *         availabilityZone: "us-west-2a",
 *     },
 *     ramDiskId: "test",
 *     vpcSecurityGroupIds: ["sg-12345678"],
 *     tagSpecifications: [{
 *         resourceType: "instance",
 *         tags: {
 *             Name: "test",
 *         },
 *     }],
 *     userData: Buffer.from(fs.readFileSync(`${path.module}/example.sh`), 'binary').toString('base64'),
 * });
 * ```
 * ```python
 * import pulumi
 * import base64
 * import pulumi_aws as aws
 * 
 * foo = aws.ec2.LaunchTemplate("foo",
 *     block_device_mappings=[aws.ec2.LaunchTemplateBlockDeviceMappingArgs(
 *         device_name="/dev/sda1",
 *         ebs=aws.ec2.LaunchTemplateBlockDeviceMappingEbsArgs(
 *             volume_size=20,
 *         ),
 *     )],
 *     capacity_reservation_specification=aws.ec2.LaunchTemplateCapacityReservationSpecificationArgs(
 *         capacity_reservation_preference="open",
 *     ),
 *     cpu_options=aws.ec2.LaunchTemplateCpuOptionsArgs(
 *         core_count=4,
 *         threads_per_core=2,
 *     ),
 *     credit_specification=aws.ec2.LaunchTemplateCreditSpecificationArgs(
 *         cpu_credits="standard",
 *     ),
 *     disable_api_termination=True,
 *     ebs_optimized="true",
 *     elastic_gpu_specifications=[aws.ec2.LaunchTemplateElasticGpuSpecificationArgs(
 *         type="test",
 *     )],
 *     elastic_inference_accelerator=aws.ec2.LaunchTemplateElasticInferenceAcceleratorArgs(
 *         type="eia1.medium",
 *     ),
 *     iam_instance_profile=aws.ec2.LaunchTemplateIamInstanceProfileArgs(
 *         name="test",
 *     ),
 *     image_id="ami-test",
 *     instance_initiated_shutdown_behavior="terminate",
 *     instance_market_options=aws.ec2.LaunchTemplateInstanceMarketOptionsArgs(
 *         market_type="spot",
 *     ),
 *     instance_type="t2.micro",
 *     kernel_id="test",
 *     key_name="test",
 *     license_specifications=[aws.ec2.LaunchTemplateLicenseSpecificationArgs(
 *         license_configuration_arn="arn:aws:license-manager:eu-west-1:123456789012:license-configuration:lic-0123456789abcdef0123456789abcdef",
 *     )],
 *     metadata_options=aws.ec2.LaunchTemplateMetadataOptionsArgs(
 *         http_endpoint="enabled",
 *         http_tokens="required",
 *         http_put_response_hop_limit=1,
 *         instance_metadata_tags="enabled",
 *     ),
 *     monitoring=aws.ec2.LaunchTemplateMonitoringArgs(
 *         enabled=True,
 *     ),
 *     network_interfaces=[aws.ec2.LaunchTemplateNetworkInterfaceArgs(
 *         associate_public_ip_address="true",
 *     )],
 *     placement=aws.ec2.LaunchTemplatePlacementArgs(
 *         availability_zone="us-west-2a",
 *     ),
 *     ram_disk_id="test",
 *     vpc_security_group_ids=["sg-12345678"],
 *     tag_specifications=[aws.ec2.LaunchTemplateTagSpecificationArgs(
 *         resource_type="instance",
 *         tags={
 *             "Name": "test",
 *         },
 *     )],
 *     user_data=(lambda path: base64.b64encode(open(path).read().encode()).decode())(f"{path['module']}/example.sh"))
 * ```
 * ```csharp
 * using System;
 * using System.IO;
 * using Pulumi;
 * using Aws = Pulumi.Aws;
 * 
 * class MyStack : Stack
 * {
 * 	private static string ReadFileBase64(string path) {
 * 		return Convert.ToBase64String(Encoding.UTF8.GetBytes(File.ReadAllText(path)))
 * 	}
 * 
 *     public MyStack()
 *     {
 *         var foo = new Aws.Ec2.LaunchTemplate("foo", new Aws.Ec2.LaunchTemplateArgs
 *         {
 *             BlockDeviceMappings = 
 *             {
 *                 new Aws.Ec2.Inputs.LaunchTemplateBlockDeviceMappingArgs
 *                 {
 *                     DeviceName = "/dev/sda1",
 *                     Ebs = new Aws.Ec2.Inputs.LaunchTemplateBlockDeviceMappingEbsArgs
 *                     {
 *                         VolumeSize = 20,
 *                     },
 *                 },
 *             },
 *             CapacityReservationSpecification = new Aws.Ec2.Inputs.LaunchTemplateCapacityReservationSpecificationArgs
 *             {
 *                 CapacityReservationPreference = "open",
 *             },
 *             CpuOptions = new Aws.Ec2.Inputs.LaunchTemplateCpuOptionsArgs
 *             {
 *                 CoreCount = 4,
 *                 ThreadsPerCore = 2,
 *             },
 *             CreditSpecification = new Aws.Ec2.Inputs.LaunchTemplateCreditSpecificationArgs
 *             {
 *                 CpuCredits = "standard",
 *             },
 *             DisableApiTermination = true,
 *             EbsOptimized = "true",
 *             ElasticGpuSpecifications = 
 *             {
 *                 new Aws.Ec2.Inputs.LaunchTemplateElasticGpuSpecificationArgs
 *                 {
 *                     Type = "test",
 *                 },
 *             },
 *             ElasticInferenceAccelerator = new Aws.Ec2.Inputs.LaunchTemplateElasticInferenceAcceleratorArgs
 *             {
 *                 Type = "eia1.medium",
 *             },
 *             IamInstanceProfile = new Aws.Ec2.Inputs.LaunchTemplateIamInstanceProfileArgs
 *             {
 *                 Name = "test",
 *             },
 *             ImageId = "ami-test",
 *             InstanceInitiatedShutdownBehavior = "terminate",
 *             InstanceMarketOptions = new Aws.Ec2.Inputs.LaunchTemplateInstanceMarketOptionsArgs
 *             {
 *                 MarketType = "spot",
 *             },
 *             InstanceType = "t2.micro",
 *             KernelId = "test",
 *             KeyName = "test",
 *             LicenseSpecifications = 
 *             {
 *                 new Aws.Ec2.Inputs.LaunchTemplateLicenseSpecificationArgs
 *                 {
 *                     LicenseConfigurationArn = "arn:aws:license-manager:eu-west-1:123456789012:license-configuration:lic-0123456789abcdef0123456789abcdef",
 *                 },
 *             },
 *             MetadataOptions = new Aws.Ec2.Inputs.LaunchTemplateMetadataOptionsArgs
 *             {
 *                 HttpEndpoint = "enabled",
 *                 HttpTokens = "required",
 *                 HttpPutResponseHopLimit = 1,
 *                 InstanceMetadataTags = "enabled",
 *             },
 *             Monitoring = new Aws.Ec2.Inputs.LaunchTemplateMonitoringArgs
 *             {
 *                 Enabled = true,
 *             },
 *             NetworkInterfaces = 
 *             {
 *                 new Aws.Ec2.Inputs.LaunchTemplateNetworkInterfaceArgs
 *                 {
 *                     AssociatePublicIpAddress = "true",
 *                 },
 *             },
 *             Placement = new Aws.Ec2.Inputs.LaunchTemplatePlacementArgs
 *             {
 *                 AvailabilityZone = "us-west-2a",
 *             },
 *             RamDiskId = "test",
 *             VpcSecurityGroupIds = 
 *             {
 *                 "sg-12345678",
 *             },
 *             TagSpecifications = 
 *             {
 *                 new Aws.Ec2.Inputs.LaunchTemplateTagSpecificationArgs
 *                 {
 *                     ResourceType = "instance",
 *                     Tags = 
 *                     {
 *                         { "Name", "test" },
 *                     },
 *                 },
 *             },
 *             UserData = ReadFileBase64($"{path.Module}/example.sh"),
 *         });
 *     }
 * 
 * }
 * ```
 * ```go
 * package main
 * 
 * import (
 * 	"encoding/base64"
 * 	"fmt"
 * 	"io/ioutil"
 * 
 * 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/ec2"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func filebase64OrPanic(path string) pulumi.StringPtrInput {
 * 	if fileData, err := ioutil.ReadFile(path); err == nil {
 * 		return pulumi.String(base64.StdEncoding.EncodeToString(fileData[:]))
 * 	} else {
 * 		panic(err.Error())
 * 	}
 * }
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		_, err := ec2.NewLaunchTemplate(ctx, "foo", &ec2.LaunchTemplateArgs{
 * 			BlockDeviceMappings: ec2.LaunchTemplateBlockDeviceMappingArray{
 * 				&ec2.LaunchTemplateBlockDeviceMappingArgs{
 * 					DeviceName: pulumi.String("/dev/sda1"),
 * 					Ebs: &ec2.LaunchTemplateBlockDeviceMappingEbsArgs{
 * 						VolumeSize: pulumi.Int(20),
 * 					},
 * 				},
 * 			},
 * 			CapacityReservationSpecification: &ec2.LaunchTemplateCapacityReservationSpecificationArgs{
 * 				CapacityReservationPreference: pulumi.String("open"),
 * 			},
 * 			CpuOptions: &ec2.LaunchTemplateCpuOptionsArgs{
 * 				CoreCount:      pulumi.Int(4),
 * 				ThreadsPerCore: pulumi.Int(2),
 * 			},
 * 			CreditSpecification: &ec2.LaunchTemplateCreditSpecificationArgs{
 * 				CpuCredits: pulumi.String("standard"),
 * 			},
 * 			DisableApiTermination: pulumi.Bool(true),
 * 			EbsOptimized:          pulumi.String("true"),
 * 			ElasticGpuSpecifications: ec2.LaunchTemplateElasticGpuSpecificationArray{
 * 				&ec2.LaunchTemplateElasticGpuSpecificationArgs{
 * 					Type: pulumi.String("test"),
 * 				},
 * 			},
 * 			ElasticInferenceAccelerator: &ec2.LaunchTemplateElasticInferenceAcceleratorArgs{
 * 				Type: pulumi.String("eia1.medium"),
 * 			},
 * 			IamInstanceProfile: &ec2.LaunchTemplateIamInstanceProfileArgs{
 * 				Name: pulumi.String("test"),
 * 			},
 * 			ImageId:                           pulumi.String("ami-test"),
 * 			InstanceInitiatedShutdownBehavior: pulumi.String("terminate"),
 * 			InstanceMarketOptions: &ec2.LaunchTemplateInstanceMarketOptionsArgs{
 * 				MarketType: pulumi.String("spot"),
 * 			},
 * 			InstanceType: pulumi.String("t2.micro"),
 * 			KernelId:     pulumi.String("test"),
 * 			KeyName:      pulumi.String("test"),
 * 			LicenseSpecifications: ec2.LaunchTemplateLicenseSpecificationArray{
 * 				&ec2.LaunchTemplateLicenseSpecificationArgs{
 * 					LicenseConfigurationArn: pulumi.String("arn:aws:license-manager:eu-west-1:123456789012:license-configuration:lic-0123456789abcdef0123456789abcdef"),
 * 				},
 * 			},
 * 			MetadataOptions: &ec2.LaunchTemplateMetadataOptionsArgs{
 * 				HttpEndpoint:            pulumi.String("enabled"),
 * 				HttpTokens:              pulumi.String("required"),
 * 				HttpPutResponseHopLimit: pulumi.Int(1),
 * 				InstanceMetadataTags:    pulumi.String("enabled"),
 * 			},
 * 			Monitoring: &ec2.LaunchTemplateMonitoringArgs{
 * 				Enabled: pulumi.Bool(true),
 * 			},
 * 			NetworkInterfaces: ec2.LaunchTemplateNetworkInterfaceArray{
 * 				&ec2.LaunchTemplateNetworkInterfaceArgs{
 * 					AssociatePublicIpAddress: pulumi.String("true"),
 * 				},
 * 			},
 * 			Placement: &ec2.LaunchTemplatePlacementArgs{
 * 				AvailabilityZone: pulumi.String("us-west-2a"),
 * 			},
 * 			RamDiskId: pulumi.String("test"),
 * 			VpcSecurityGroupIds: pulumi.StringArray{
 * 				pulumi.String("sg-12345678"),
 * 			},
 * 			TagSpecifications: ec2.LaunchTemplateTagSpecificationArray{
 * 				&ec2.LaunchTemplateTagSpecificationArgs{
 * 					ResourceType: pulumi.String("instance"),
 * 					Tags: pulumi.StringMap{
 * 						"Name": pulumi.String("test"),
 * 					},
 * 				},
 * 			},
 * 			UserData: filebase64OrPanic(fmt.Sprintf("%v%v", path.Module, "/example.sh")),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * ```
 * {{% /example %}}
 * {{% /examples %}}
 * 
 * ## Import
 * 
 * Launch Templates can be imported using the `id`, e.g.,
 * 
 * ```sh
 *  $ pulumi import aws:ec2/launchTemplate:LaunchTemplate web lt-12345678
 * ```
 * 
 *  
 */
@ResourceType(type="aws:ec2/launchTemplate:LaunchTemplate")
public class LaunchTemplate extends io.pulumi.resources.CustomResource {
    /**
     * The Amazon Resource Name (ARN) of the instance profile.
     * 
     */
    @Export(name="arn", type=String.class, parameters={})
    private Output<String> arn;

    /**
     * @return The Amazon Resource Name (ARN) of the instance profile.
     * 
     */
    public Output<String> getArn() {
        return this.arn;
    }
    /**
     * Specify volumes to attach to the instance besides the volumes specified by the AMI.
     * See Block Devices below for details.
     * 
     */
    @Export(name="blockDeviceMappings", type=List.class, parameters={LaunchTemplateBlockDeviceMapping.class})
    private Output</* @Nullable */ List<LaunchTemplateBlockDeviceMapping>> blockDeviceMappings;

    /**
     * @return Specify volumes to attach to the instance besides the volumes specified by the AMI.
     * See Block Devices below for details.
     * 
     */
    public Output</* @Nullable */ List<LaunchTemplateBlockDeviceMapping>> getBlockDeviceMappings() {
        return this.blockDeviceMappings;
    }
    /**
     * Targeting for EC2 capacity reservations. See Capacity Reservation Specification below for more details.
     * 
     */
    @Export(name="capacityReservationSpecification", type=LaunchTemplateCapacityReservationSpecification.class, parameters={})
    private Output</* @Nullable */ LaunchTemplateCapacityReservationSpecification> capacityReservationSpecification;

    /**
     * @return Targeting for EC2 capacity reservations. See Capacity Reservation Specification below for more details.
     * 
     */
    public Output</* @Nullable */ LaunchTemplateCapacityReservationSpecification> getCapacityReservationSpecification() {
        return this.capacityReservationSpecification;
    }
    /**
     * The CPU options for the instance. See CPU Options below for more details.
     * 
     */
    @Export(name="cpuOptions", type=LaunchTemplateCpuOptions.class, parameters={})
    private Output</* @Nullable */ LaunchTemplateCpuOptions> cpuOptions;

    /**
     * @return The CPU options for the instance. See CPU Options below for more details.
     * 
     */
    public Output</* @Nullable */ LaunchTemplateCpuOptions> getCpuOptions() {
        return this.cpuOptions;
    }
    /**
     * Customize the credit specification of the instance. See Credit
     * Specification below for more details.
     * 
     */
    @Export(name="creditSpecification", type=LaunchTemplateCreditSpecification.class, parameters={})
    private Output</* @Nullable */ LaunchTemplateCreditSpecification> creditSpecification;

    /**
     * @return Customize the credit specification of the instance. See Credit
     * Specification below for more details.
     * 
     */
    public Output</* @Nullable */ LaunchTemplateCreditSpecification> getCreditSpecification() {
        return this.creditSpecification;
    }
    /**
     * Default Version of the launch template.
     * 
     */
    @Export(name="defaultVersion", type=Integer.class, parameters={})
    private Output<Integer> defaultVersion;

    /**
     * @return Default Version of the launch template.
     * 
     */
    public Output<Integer> getDefaultVersion() {
        return this.defaultVersion;
    }
    /**
     * Description of the launch template.
     * 
     */
    @Export(name="description", type=String.class, parameters={})
    private Output</* @Nullable */ String> description;

    /**
     * @return Description of the launch template.
     * 
     */
    public Output</* @Nullable */ String> getDescription() {
        return this.description;
    }
    /**
     * If `true`, enables [EC2 Instance
     * Termination Protection](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#Using_ChangingDisableAPITermination)
     * 
     */
    @Export(name="disableApiTermination", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> disableApiTermination;

    /**
     * @return If `true`, enables [EC2 Instance
     * Termination Protection](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#Using_ChangingDisableAPITermination)
     * 
     */
    public Output</* @Nullable */ Boolean> getDisableApiTermination() {
        return this.disableApiTermination;
    }
    /**
     * If `true`, the launched EC2 instance will be EBS-optimized.
     * 
     */
    @Export(name="ebsOptimized", type=String.class, parameters={})
    private Output</* @Nullable */ String> ebsOptimized;

    /**
     * @return If `true`, the launched EC2 instance will be EBS-optimized.
     * 
     */
    public Output</* @Nullable */ String> getEbsOptimized() {
        return this.ebsOptimized;
    }
    /**
     * The elastic GPU to attach to the instance. See Elastic GPU
     * below for more details.
     * 
     */
    @Export(name="elasticGpuSpecifications", type=List.class, parameters={LaunchTemplateElasticGpuSpecification.class})
    private Output</* @Nullable */ List<LaunchTemplateElasticGpuSpecification>> elasticGpuSpecifications;

    /**
     * @return The elastic GPU to attach to the instance. See Elastic GPU
     * below for more details.
     * 
     */
    public Output</* @Nullable */ List<LaunchTemplateElasticGpuSpecification>> getElasticGpuSpecifications() {
        return this.elasticGpuSpecifications;
    }
    /**
     * Configuration block containing an Elastic Inference Accelerator to attach to the instance. See Elastic Inference Accelerator below for more details.
     * 
     */
    @Export(name="elasticInferenceAccelerator", type=LaunchTemplateElasticInferenceAccelerator.class, parameters={})
    private Output</* @Nullable */ LaunchTemplateElasticInferenceAccelerator> elasticInferenceAccelerator;

    /**
     * @return Configuration block containing an Elastic Inference Accelerator to attach to the instance. See Elastic Inference Accelerator below for more details.
     * 
     */
    public Output</* @Nullable */ LaunchTemplateElasticInferenceAccelerator> getElasticInferenceAccelerator() {
        return this.elasticInferenceAccelerator;
    }
    /**
     * Enable Nitro Enclaves on launched instances. See Enclave Options below for more details.
     * 
     */
    @Export(name="enclaveOptions", type=LaunchTemplateEnclaveOptions.class, parameters={})
    private Output</* @Nullable */ LaunchTemplateEnclaveOptions> enclaveOptions;

    /**
     * @return Enable Nitro Enclaves on launched instances. See Enclave Options below for more details.
     * 
     */
    public Output</* @Nullable */ LaunchTemplateEnclaveOptions> getEnclaveOptions() {
        return this.enclaveOptions;
    }
    /**
     * The hibernation options for the instance. See Hibernation Options below for more details.
     * 
     */
    @Export(name="hibernationOptions", type=LaunchTemplateHibernationOptions.class, parameters={})
    private Output</* @Nullable */ LaunchTemplateHibernationOptions> hibernationOptions;

    /**
     * @return The hibernation options for the instance. See Hibernation Options below for more details.
     * 
     */
    public Output</* @Nullable */ LaunchTemplateHibernationOptions> getHibernationOptions() {
        return this.hibernationOptions;
    }
    /**
     * The IAM Instance Profile to launch the instance with. See Instance Profile
     * below for more details.
     * 
     */
    @Export(name="iamInstanceProfile", type=LaunchTemplateIamInstanceProfile.class, parameters={})
    private Output</* @Nullable */ LaunchTemplateIamInstanceProfile> iamInstanceProfile;

    /**
     * @return The IAM Instance Profile to launch the instance with. See Instance Profile
     * below for more details.
     * 
     */
    public Output</* @Nullable */ LaunchTemplateIamInstanceProfile> getIamInstanceProfile() {
        return this.iamInstanceProfile;
    }
    /**
     * The AMI from which to launch the instance.
     * 
     */
    @Export(name="imageId", type=String.class, parameters={})
    private Output</* @Nullable */ String> imageId;

    /**
     * @return The AMI from which to launch the instance.
     * 
     */
    public Output</* @Nullable */ String> getImageId() {
        return this.imageId;
    }
    /**
     * Shutdown behavior for the instance. Can be `stop` or `terminate`.
     * (Default: `stop`).
     * 
     */
    @Export(name="instanceInitiatedShutdownBehavior", type=String.class, parameters={})
    private Output</* @Nullable */ String> instanceInitiatedShutdownBehavior;

    /**
     * @return Shutdown behavior for the instance. Can be `stop` or `terminate`.
     * (Default: `stop`).
     * 
     */
    public Output</* @Nullable */ String> getInstanceInitiatedShutdownBehavior() {
        return this.instanceInitiatedShutdownBehavior;
    }
    /**
     * The market (purchasing) option for the instance. See Market Options
     * below for details.
     * 
     */
    @Export(name="instanceMarketOptions", type=LaunchTemplateInstanceMarketOptions.class, parameters={})
    private Output</* @Nullable */ LaunchTemplateInstanceMarketOptions> instanceMarketOptions;

    /**
     * @return The market (purchasing) option for the instance. See Market Options
     * below for details.
     * 
     */
    public Output</* @Nullable */ LaunchTemplateInstanceMarketOptions> getInstanceMarketOptions() {
        return this.instanceMarketOptions;
    }
    /**
     * The type of the instance.
     * 
     */
    @Export(name="instanceType", type=String.class, parameters={})
    private Output</* @Nullable */ String> instanceType;

    /**
     * @return The type of the instance.
     * 
     */
    public Output</* @Nullable */ String> getInstanceType() {
        return this.instanceType;
    }
    /**
     * The kernel ID.
     * 
     */
    @Export(name="kernelId", type=String.class, parameters={})
    private Output</* @Nullable */ String> kernelId;

    /**
     * @return The kernel ID.
     * 
     */
    public Output</* @Nullable */ String> getKernelId() {
        return this.kernelId;
    }
    /**
     * The key name to use for the instance.
     * 
     */
    @Export(name="keyName", type=String.class, parameters={})
    private Output</* @Nullable */ String> keyName;

    /**
     * @return The key name to use for the instance.
     * 
     */
    public Output</* @Nullable */ String> getKeyName() {
        return this.keyName;
    }
    /**
     * The latest version of the launch template.
     * 
     */
    @Export(name="latestVersion", type=Integer.class, parameters={})
    private Output<Integer> latestVersion;

    /**
     * @return The latest version of the launch template.
     * 
     */
    public Output<Integer> getLatestVersion() {
        return this.latestVersion;
    }
    /**
     * A list of license specifications to associate with. See License Specification below for more details.
     * 
     */
    @Export(name="licenseSpecifications", type=List.class, parameters={LaunchTemplateLicenseSpecification.class})
    private Output</* @Nullable */ List<LaunchTemplateLicenseSpecification>> licenseSpecifications;

    /**
     * @return A list of license specifications to associate with. See License Specification below for more details.
     * 
     */
    public Output</* @Nullable */ List<LaunchTemplateLicenseSpecification>> getLicenseSpecifications() {
        return this.licenseSpecifications;
    }
    /**
     * Customize the metadata options for the instance. See Metadata Options below for more details.
     * 
     */
    @Export(name="metadataOptions", type=LaunchTemplateMetadataOptions.class, parameters={})
    private Output<LaunchTemplateMetadataOptions> metadataOptions;

    /**
     * @return Customize the metadata options for the instance. See Metadata Options below for more details.
     * 
     */
    public Output<LaunchTemplateMetadataOptions> getMetadataOptions() {
        return this.metadataOptions;
    }
    /**
     * The monitoring option for the instance. See Monitoring below for more details.
     * 
     */
    @Export(name="monitoring", type=LaunchTemplateMonitoring.class, parameters={})
    private Output</* @Nullable */ LaunchTemplateMonitoring> monitoring;

    /**
     * @return The monitoring option for the instance. See Monitoring below for more details.
     * 
     */
    public Output</* @Nullable */ LaunchTemplateMonitoring> getMonitoring() {
        return this.monitoring;
    }
    /**
     * The name of the launch template. If you leave this blank, this provider will auto-generate a unique name.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The name of the launch template. If you leave this blank, this provider will auto-generate a unique name.
     * 
     */
    public Output<String> getName() {
        return this.name;
    }
    /**
     * Creates a unique name beginning with the specified prefix. Conflicts with `name`.
     * 
     */
    @Export(name="namePrefix", type=String.class, parameters={})
    private Output<String> namePrefix;

    /**
     * @return Creates a unique name beginning with the specified prefix. Conflicts with `name`.
     * 
     */
    public Output<String> getNamePrefix() {
        return this.namePrefix;
    }
    /**
     * Customize network interfaces to be attached at instance boot time. See Network
     * Interfaces below for more details.
     * 
     */
    @Export(name="networkInterfaces", type=List.class, parameters={LaunchTemplateNetworkInterface.class})
    private Output</* @Nullable */ List<LaunchTemplateNetworkInterface>> networkInterfaces;

    /**
     * @return Customize network interfaces to be attached at instance boot time. See Network
     * Interfaces below for more details.
     * 
     */
    public Output</* @Nullable */ List<LaunchTemplateNetworkInterface>> getNetworkInterfaces() {
        return this.networkInterfaces;
    }
    /**
     * The placement of the instance. See Placement below for more details.
     * 
     */
    @Export(name="placement", type=LaunchTemplatePlacement.class, parameters={})
    private Output</* @Nullable */ LaunchTemplatePlacement> placement;

    /**
     * @return The placement of the instance. See Placement below for more details.
     * 
     */
    public Output</* @Nullable */ LaunchTemplatePlacement> getPlacement() {
        return this.placement;
    }
    /**
     * The ID of the RAM disk.
     * 
     */
    @Export(name="ramDiskId", type=String.class, parameters={})
    private Output</* @Nullable */ String> ramDiskId;

    /**
     * @return The ID of the RAM disk.
     * 
     */
    public Output</* @Nullable */ String> getRamDiskId() {
        return this.ramDiskId;
    }
    /**
     * A list of security group names to associate with. If you are creating Instances in a VPC, use
     * `vpc_security_group_ids` instead.
     * 
     */
    @Export(name="securityGroupNames", type=List.class, parameters={String.class})
    private Output</* @Nullable */ List<String>> securityGroupNames;

    /**
     * @return A list of security group names to associate with. If you are creating Instances in a VPC, use
     * `vpc_security_group_ids` instead.
     * 
     */
    public Output</* @Nullable */ List<String>> getSecurityGroupNames() {
        return this.securityGroupNames;
    }
    /**
     * The tags to apply to the resources during launch. See Tag Specifications below for more details.
     * 
     */
    @Export(name="tagSpecifications", type=List.class, parameters={LaunchTemplateTagSpecification.class})
    private Output</* @Nullable */ List<LaunchTemplateTagSpecification>> tagSpecifications;

    /**
     * @return The tags to apply to the resources during launch. See Tag Specifications below for more details.
     * 
     */
    public Output</* @Nullable */ List<LaunchTemplateTagSpecification>> getTagSpecifications() {
        return this.tagSpecifications;
    }
    /**
     * A map of tags to assign to the launch template. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Export(name="tags", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return A map of tags to assign to the launch template. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Output</* @Nullable */ Map<String,String>> getTags() {
        return this.tags;
    }
    /**
     * A map of tags assigned to the resource, including those inherited from the provider .
     * 
     */
    @Export(name="tagsAll", type=Map.class, parameters={String.class, String.class})
    private Output<Map<String,String>> tagsAll;

    /**
     * @return A map of tags assigned to the resource, including those inherited from the provider .
     * 
     */
    public Output<Map<String,String>> getTagsAll() {
        return this.tagsAll;
    }
    /**
     * Whether to update Default Version each update. Conflicts with `default_version`.
     * 
     */
    @Export(name="updateDefaultVersion", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> updateDefaultVersion;

    /**
     * @return Whether to update Default Version each update. Conflicts with `default_version`.
     * 
     */
    public Output</* @Nullable */ Boolean> getUpdateDefaultVersion() {
        return this.updateDefaultVersion;
    }
    /**
     * The Base64-encoded user data to provide when launching the instance.
     * 
     */
    @Export(name="userData", type=String.class, parameters={})
    private Output</* @Nullable */ String> userData;

    /**
     * @return The Base64-encoded user data to provide when launching the instance.
     * 
     */
    public Output</* @Nullable */ String> getUserData() {
        return this.userData;
    }
    /**
     * A list of security group IDs to associate with. Conflicts with `network_interfaces.security_groups`
     * 
     */
    @Export(name="vpcSecurityGroupIds", type=List.class, parameters={String.class})
    private Output</* @Nullable */ List<String>> vpcSecurityGroupIds;

    /**
     * @return A list of security group IDs to associate with. Conflicts with `network_interfaces.security_groups`
     * 
     */
    public Output</* @Nullable */ List<String>> getVpcSecurityGroupIds() {
        return this.vpcSecurityGroupIds;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public LaunchTemplate(String name) {
        this(name, LaunchTemplateArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public LaunchTemplate(String name, @Nullable LaunchTemplateArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public LaunchTemplate(String name, @Nullable LaunchTemplateArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:ec2/launchTemplate:LaunchTemplate", name, args == null ? LaunchTemplateArgs.Empty : args, makeResourceOptions(options, Output.empty()));
    }

    private LaunchTemplate(String name, Output<String> id, @Nullable LaunchTemplateState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:ec2/launchTemplate:LaunchTemplate", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static LaunchTemplate get(String name, Output<String> id, @Nullable LaunchTemplateState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new LaunchTemplate(name, id, state, options);
    }
}
