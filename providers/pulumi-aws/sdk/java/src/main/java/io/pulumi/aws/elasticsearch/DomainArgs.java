// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.elasticsearch;

import io.pulumi.aws.elasticsearch.inputs.DomainAdvancedSecurityOptionsArgs;
import io.pulumi.aws.elasticsearch.inputs.DomainAutoTuneOptionsArgs;
import io.pulumi.aws.elasticsearch.inputs.DomainClusterConfigArgs;
import io.pulumi.aws.elasticsearch.inputs.DomainCognitoOptionsArgs;
import io.pulumi.aws.elasticsearch.inputs.DomainDomainEndpointOptionsArgs;
import io.pulumi.aws.elasticsearch.inputs.DomainEbsOptionsArgs;
import io.pulumi.aws.elasticsearch.inputs.DomainEncryptAtRestArgs;
import io.pulumi.aws.elasticsearch.inputs.DomainLogPublishingOptionArgs;
import io.pulumi.aws.elasticsearch.inputs.DomainNodeToNodeEncryptionArgs;
import io.pulumi.aws.elasticsearch.inputs.DomainSnapshotOptionsArgs;
import io.pulumi.aws.elasticsearch.inputs.DomainVpcOptionsArgs;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class DomainArgs extends io.pulumi.resources.ResourceArgs {

    public static final DomainArgs Empty = new DomainArgs();

    /**
     * IAM policy document specifying the access policies for the domain.
     * 
     */
    @InputImport(name="accessPolicies")
      private final @Nullable Input<String> accessPolicies;

    public Input<String> getAccessPolicies() {
        return this.accessPolicies == null ? Input.empty() : this.accessPolicies;
    }

    @InputImport(name="advancedOptions")
      private final @Nullable Input<Map<String,String>> advancedOptions;

    public Input<Map<String,String>> getAdvancedOptions() {
        return this.advancedOptions == null ? Input.empty() : this.advancedOptions;
    }

    /**
     * Configuration block for [fine-grained access control](https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/fgac.html). Detailed below.
     * 
     */
    @InputImport(name="advancedSecurityOptions")
      private final @Nullable Input<DomainAdvancedSecurityOptionsArgs> advancedSecurityOptions;

    public Input<DomainAdvancedSecurityOptionsArgs> getAdvancedSecurityOptions() {
        return this.advancedSecurityOptions == null ? Input.empty() : this.advancedSecurityOptions;
    }

    /**
     * Configuration block for the Auto-Tune options of the domain. Detailed below.
     * 
     */
    @InputImport(name="autoTuneOptions")
      private final @Nullable Input<DomainAutoTuneOptionsArgs> autoTuneOptions;

    public Input<DomainAutoTuneOptionsArgs> getAutoTuneOptions() {
        return this.autoTuneOptions == null ? Input.empty() : this.autoTuneOptions;
    }

    /**
     * Configuration block for the cluster of the domain. Detailed below.
     * 
     */
    @InputImport(name="clusterConfig")
      private final @Nullable Input<DomainClusterConfigArgs> clusterConfig;

    public Input<DomainClusterConfigArgs> getClusterConfig() {
        return this.clusterConfig == null ? Input.empty() : this.clusterConfig;
    }

    /**
     * Configuration block for authenticating Kibana with Cognito. Detailed below.
     * 
     */
    @InputImport(name="cognitoOptions")
      private final @Nullable Input<DomainCognitoOptionsArgs> cognitoOptions;

    public Input<DomainCognitoOptionsArgs> getCognitoOptions() {
        return this.cognitoOptions == null ? Input.empty() : this.cognitoOptions;
    }

    /**
     * Configuration block for domain endpoint HTTP(S) related options. Detailed below.
     * 
     */
    @InputImport(name="domainEndpointOptions")
      private final @Nullable Input<DomainDomainEndpointOptionsArgs> domainEndpointOptions;

    public Input<DomainDomainEndpointOptionsArgs> getDomainEndpointOptions() {
        return this.domainEndpointOptions == null ? Input.empty() : this.domainEndpointOptions;
    }

    /**
     * Name of the domain.
     * 
     */
    @InputImport(name="domainName")
      private final @Nullable Input<String> domainName;

    public Input<String> getDomainName() {
        return this.domainName == null ? Input.empty() : this.domainName;
    }

    /**
     * Configuration block for EBS related options, may be required based on chosen [instance size](https://aws.amazon.com/elasticsearch-service/pricing/). Detailed below.
     * 
     */
    @InputImport(name="ebsOptions")
      private final @Nullable Input<DomainEbsOptionsArgs> ebsOptions;

    public Input<DomainEbsOptionsArgs> getEbsOptions() {
        return this.ebsOptions == null ? Input.empty() : this.ebsOptions;
    }

    /**
     * Version of Elasticsearch to deploy. Defaults to `1.5`.
     * 
     */
    @InputImport(name="elasticsearchVersion")
      private final @Nullable Input<String> elasticsearchVersion;

    public Input<String> getElasticsearchVersion() {
        return this.elasticsearchVersion == null ? Input.empty() : this.elasticsearchVersion;
    }

    /**
     * Configuration block for encrypt at rest options. Only available for [certain instance types](http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/aes-supported-instance-types.html). Detailed below.
     * 
     */
    @InputImport(name="encryptAtRest")
      private final @Nullable Input<DomainEncryptAtRestArgs> encryptAtRest;

    public Input<DomainEncryptAtRestArgs> getEncryptAtRest() {
        return this.encryptAtRest == null ? Input.empty() : this.encryptAtRest;
    }

    /**
     * Configuration block for publishing slow and application logs to CloudWatch Logs. This block can be declared multiple times, for each log_type, within the same resource. Detailed below.
     * 
     */
    @InputImport(name="logPublishingOptions")
      private final @Nullable Input<List<DomainLogPublishingOptionArgs>> logPublishingOptions;

    public Input<List<DomainLogPublishingOptionArgs>> getLogPublishingOptions() {
        return this.logPublishingOptions == null ? Input.empty() : this.logPublishingOptions;
    }

    /**
     * Configuration block for node-to-node encryption options. Detailed below.
     * 
     */
    @InputImport(name="nodeToNodeEncryption")
      private final @Nullable Input<DomainNodeToNodeEncryptionArgs> nodeToNodeEncryption;

    public Input<DomainNodeToNodeEncryptionArgs> getNodeToNodeEncryption() {
        return this.nodeToNodeEncryption == null ? Input.empty() : this.nodeToNodeEncryption;
    }

    /**
     * Configuration block for snapshot related options. Detailed below. DEPRECATED. For domains running Elasticsearch 5.3 and later, Amazon ES takes hourly automated snapshots, making this setting irrelevant. For domains running earlier versions of Elasticsearch, Amazon ES takes daily automated snapshots.
     * 
     */
    @InputImport(name="snapshotOptions")
      private final @Nullable Input<DomainSnapshotOptionsArgs> snapshotOptions;

    public Input<DomainSnapshotOptionsArgs> getSnapshotOptions() {
        return this.snapshotOptions == null ? Input.empty() : this.snapshotOptions;
    }

    /**
     * Map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @InputImport(name="tags")
      private final @Nullable Input<Map<String,String>> tags;

    public Input<Map<String,String>> getTags() {
        return this.tags == null ? Input.empty() : this.tags;
    }

    /**
     * Configuration block for VPC related options. Adding or removing this configuration forces a new resource ([documentation](https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-vpc.html#es-vpc-limitations)). Detailed below.
     * 
     */
    @InputImport(name="vpcOptions")
      private final @Nullable Input<DomainVpcOptionsArgs> vpcOptions;

    public Input<DomainVpcOptionsArgs> getVpcOptions() {
        return this.vpcOptions == null ? Input.empty() : this.vpcOptions;
    }

    public DomainArgs(
        @Nullable Input<String> accessPolicies,
        @Nullable Input<Map<String,String>> advancedOptions,
        @Nullable Input<DomainAdvancedSecurityOptionsArgs> advancedSecurityOptions,
        @Nullable Input<DomainAutoTuneOptionsArgs> autoTuneOptions,
        @Nullable Input<DomainClusterConfigArgs> clusterConfig,
        @Nullable Input<DomainCognitoOptionsArgs> cognitoOptions,
        @Nullable Input<DomainDomainEndpointOptionsArgs> domainEndpointOptions,
        @Nullable Input<String> domainName,
        @Nullable Input<DomainEbsOptionsArgs> ebsOptions,
        @Nullable Input<String> elasticsearchVersion,
        @Nullable Input<DomainEncryptAtRestArgs> encryptAtRest,
        @Nullable Input<List<DomainLogPublishingOptionArgs>> logPublishingOptions,
        @Nullable Input<DomainNodeToNodeEncryptionArgs> nodeToNodeEncryption,
        @Nullable Input<DomainSnapshotOptionsArgs> snapshotOptions,
        @Nullable Input<Map<String,String>> tags,
        @Nullable Input<DomainVpcOptionsArgs> vpcOptions) {
        this.accessPolicies = accessPolicies;
        this.advancedOptions = advancedOptions;
        this.advancedSecurityOptions = advancedSecurityOptions;
        this.autoTuneOptions = autoTuneOptions;
        this.clusterConfig = clusterConfig;
        this.cognitoOptions = cognitoOptions;
        this.domainEndpointOptions = domainEndpointOptions;
        this.domainName = domainName;
        this.ebsOptions = ebsOptions;
        this.elasticsearchVersion = elasticsearchVersion;
        this.encryptAtRest = encryptAtRest;
        this.logPublishingOptions = logPublishingOptions;
        this.nodeToNodeEncryption = nodeToNodeEncryption;
        this.snapshotOptions = snapshotOptions;
        this.tags = tags;
        this.vpcOptions = vpcOptions;
    }

    private DomainArgs() {
        this.accessPolicies = Input.empty();
        this.advancedOptions = Input.empty();
        this.advancedSecurityOptions = Input.empty();
        this.autoTuneOptions = Input.empty();
        this.clusterConfig = Input.empty();
        this.cognitoOptions = Input.empty();
        this.domainEndpointOptions = Input.empty();
        this.domainName = Input.empty();
        this.ebsOptions = Input.empty();
        this.elasticsearchVersion = Input.empty();
        this.encryptAtRest = Input.empty();
        this.logPublishingOptions = Input.empty();
        this.nodeToNodeEncryption = Input.empty();
        this.snapshotOptions = Input.empty();
        this.tags = Input.empty();
        this.vpcOptions = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DomainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> accessPolicies;
        private @Nullable Input<Map<String,String>> advancedOptions;
        private @Nullable Input<DomainAdvancedSecurityOptionsArgs> advancedSecurityOptions;
        private @Nullable Input<DomainAutoTuneOptionsArgs> autoTuneOptions;
        private @Nullable Input<DomainClusterConfigArgs> clusterConfig;
        private @Nullable Input<DomainCognitoOptionsArgs> cognitoOptions;
        private @Nullable Input<DomainDomainEndpointOptionsArgs> domainEndpointOptions;
        private @Nullable Input<String> domainName;
        private @Nullable Input<DomainEbsOptionsArgs> ebsOptions;
        private @Nullable Input<String> elasticsearchVersion;
        private @Nullable Input<DomainEncryptAtRestArgs> encryptAtRest;
        private @Nullable Input<List<DomainLogPublishingOptionArgs>> logPublishingOptions;
        private @Nullable Input<DomainNodeToNodeEncryptionArgs> nodeToNodeEncryption;
        private @Nullable Input<DomainSnapshotOptionsArgs> snapshotOptions;
        private @Nullable Input<Map<String,String>> tags;
        private @Nullable Input<DomainVpcOptionsArgs> vpcOptions;

        public Builder() {
    	      // Empty
        }

        public Builder(DomainArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessPolicies = defaults.accessPolicies;
    	      this.advancedOptions = defaults.advancedOptions;
    	      this.advancedSecurityOptions = defaults.advancedSecurityOptions;
    	      this.autoTuneOptions = defaults.autoTuneOptions;
    	      this.clusterConfig = defaults.clusterConfig;
    	      this.cognitoOptions = defaults.cognitoOptions;
    	      this.domainEndpointOptions = defaults.domainEndpointOptions;
    	      this.domainName = defaults.domainName;
    	      this.ebsOptions = defaults.ebsOptions;
    	      this.elasticsearchVersion = defaults.elasticsearchVersion;
    	      this.encryptAtRest = defaults.encryptAtRest;
    	      this.logPublishingOptions = defaults.logPublishingOptions;
    	      this.nodeToNodeEncryption = defaults.nodeToNodeEncryption;
    	      this.snapshotOptions = defaults.snapshotOptions;
    	      this.tags = defaults.tags;
    	      this.vpcOptions = defaults.vpcOptions;
        }

        public Builder accessPolicies(@Nullable Input<String> accessPolicies) {
            this.accessPolicies = accessPolicies;
            return this;
        }

        public Builder advancedOptions(@Nullable Input<Map<String,String>> advancedOptions) {
            this.advancedOptions = advancedOptions;
            return this;
        }

        public Builder advancedOptions(@Nullable Map<String,String> advancedOptions) {
            this.advancedOptions = Input.ofNullable(advancedOptions);
            return this;
        }

        public Builder advancedSecurityOptions(@Nullable Input<DomainAdvancedSecurityOptionsArgs> advancedSecurityOptions) {
            this.advancedSecurityOptions = advancedSecurityOptions;
            return this;
        }

        public Builder advancedSecurityOptions(@Nullable DomainAdvancedSecurityOptionsArgs advancedSecurityOptions) {
            this.advancedSecurityOptions = Input.ofNullable(advancedSecurityOptions);
            return this;
        }

        public Builder autoTuneOptions(@Nullable Input<DomainAutoTuneOptionsArgs> autoTuneOptions) {
            this.autoTuneOptions = autoTuneOptions;
            return this;
        }

        public Builder autoTuneOptions(@Nullable DomainAutoTuneOptionsArgs autoTuneOptions) {
            this.autoTuneOptions = Input.ofNullable(autoTuneOptions);
            return this;
        }

        public Builder clusterConfig(@Nullable Input<DomainClusterConfigArgs> clusterConfig) {
            this.clusterConfig = clusterConfig;
            return this;
        }

        public Builder clusterConfig(@Nullable DomainClusterConfigArgs clusterConfig) {
            this.clusterConfig = Input.ofNullable(clusterConfig);
            return this;
        }

        public Builder cognitoOptions(@Nullable Input<DomainCognitoOptionsArgs> cognitoOptions) {
            this.cognitoOptions = cognitoOptions;
            return this;
        }

        public Builder cognitoOptions(@Nullable DomainCognitoOptionsArgs cognitoOptions) {
            this.cognitoOptions = Input.ofNullable(cognitoOptions);
            return this;
        }

        public Builder domainEndpointOptions(@Nullable Input<DomainDomainEndpointOptionsArgs> domainEndpointOptions) {
            this.domainEndpointOptions = domainEndpointOptions;
            return this;
        }

        public Builder domainEndpointOptions(@Nullable DomainDomainEndpointOptionsArgs domainEndpointOptions) {
            this.domainEndpointOptions = Input.ofNullable(domainEndpointOptions);
            return this;
        }

        public Builder domainName(@Nullable Input<String> domainName) {
            this.domainName = domainName;
            return this;
        }

        public Builder domainName(@Nullable String domainName) {
            this.domainName = Input.ofNullable(domainName);
            return this;
        }

        public Builder ebsOptions(@Nullable Input<DomainEbsOptionsArgs> ebsOptions) {
            this.ebsOptions = ebsOptions;
            return this;
        }

        public Builder ebsOptions(@Nullable DomainEbsOptionsArgs ebsOptions) {
            this.ebsOptions = Input.ofNullable(ebsOptions);
            return this;
        }

        public Builder elasticsearchVersion(@Nullable Input<String> elasticsearchVersion) {
            this.elasticsearchVersion = elasticsearchVersion;
            return this;
        }

        public Builder elasticsearchVersion(@Nullable String elasticsearchVersion) {
            this.elasticsearchVersion = Input.ofNullable(elasticsearchVersion);
            return this;
        }

        public Builder encryptAtRest(@Nullable Input<DomainEncryptAtRestArgs> encryptAtRest) {
            this.encryptAtRest = encryptAtRest;
            return this;
        }

        public Builder encryptAtRest(@Nullable DomainEncryptAtRestArgs encryptAtRest) {
            this.encryptAtRest = Input.ofNullable(encryptAtRest);
            return this;
        }

        public Builder logPublishingOptions(@Nullable Input<List<DomainLogPublishingOptionArgs>> logPublishingOptions) {
            this.logPublishingOptions = logPublishingOptions;
            return this;
        }

        public Builder logPublishingOptions(@Nullable List<DomainLogPublishingOptionArgs> logPublishingOptions) {
            this.logPublishingOptions = Input.ofNullable(logPublishingOptions);
            return this;
        }

        public Builder nodeToNodeEncryption(@Nullable Input<DomainNodeToNodeEncryptionArgs> nodeToNodeEncryption) {
            this.nodeToNodeEncryption = nodeToNodeEncryption;
            return this;
        }

        public Builder nodeToNodeEncryption(@Nullable DomainNodeToNodeEncryptionArgs nodeToNodeEncryption) {
            this.nodeToNodeEncryption = Input.ofNullable(nodeToNodeEncryption);
            return this;
        }

        public Builder snapshotOptions(@Nullable Input<DomainSnapshotOptionsArgs> snapshotOptions) {
            this.snapshotOptions = snapshotOptions;
            return this;
        }

        public Builder snapshotOptions(@Nullable DomainSnapshotOptionsArgs snapshotOptions) {
            this.snapshotOptions = Input.ofNullable(snapshotOptions);
            return this;
        }

        public Builder tags(@Nullable Input<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }

        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = Input.ofNullable(tags);
            return this;
        }

        public Builder vpcOptions(@Nullable Input<DomainVpcOptionsArgs> vpcOptions) {
            this.vpcOptions = vpcOptions;
            return this;
        }

        public Builder vpcOptions(@Nullable DomainVpcOptionsArgs vpcOptions) {
            this.vpcOptions = Input.ofNullable(vpcOptions);
            return this;
        }
        public DomainArgs build() {
            return new DomainArgs(accessPolicies, advancedOptions, advancedSecurityOptions, autoTuneOptions, clusterConfig, cognitoOptions, domainEndpointOptions, domainName, ebsOptions, elasticsearchVersion, encryptAtRest, logPublishingOptions, nodeToNodeEncryption, snapshotOptions, tags, vpcOptions);
        }
    }
}
