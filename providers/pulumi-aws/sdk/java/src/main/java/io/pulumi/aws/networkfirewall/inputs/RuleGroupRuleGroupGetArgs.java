// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.networkfirewall.inputs;

import io.pulumi.aws.networkfirewall.inputs.RuleGroupRuleGroupRuleVariablesGetArgs;
import io.pulumi.aws.networkfirewall.inputs.RuleGroupRuleGroupRulesSourceGetArgs;
import io.pulumi.aws.networkfirewall.inputs.RuleGroupRuleGroupStatefulRuleOptionsGetArgs;
import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.util.Objects;
import javax.annotation.Nullable;


public final class RuleGroupRuleGroupGetArgs extends io.pulumi.resources.ResourceArgs {

    public static final RuleGroupRuleGroupGetArgs Empty = new RuleGroupRuleGroupGetArgs();

    /**
     * A configuration block that defines additional settings available to use in the rules defined in the rule group. Can only be specified for **stateful** rule groups. See Rule Variables below for details.
     * 
     */
    @InputImport(name="ruleVariables")
    private final @Nullable Input<RuleGroupRuleGroupRuleVariablesGetArgs> ruleVariables;

    public Input<RuleGroupRuleGroupRuleVariablesGetArgs> getRuleVariables() {
        return this.ruleVariables == null ? Input.empty() : this.ruleVariables;
    }

    /**
     * A configuration block that defines the stateful or stateless rules for the rule group. See Rules Source below for details.
     * 
     */
    @InputImport(name="rulesSource", required=true)
    private final Input<RuleGroupRuleGroupRulesSourceGetArgs> rulesSource;

    public Input<RuleGroupRuleGroupRulesSourceGetArgs> getRulesSource() {
        return this.rulesSource;
    }

    /**
     * A configuration block that defines stateful rule options for the rule group. See Stateful Rule Options below for details.
     * 
     */
    @InputImport(name="statefulRuleOptions")
    private final @Nullable Input<RuleGroupRuleGroupStatefulRuleOptionsGetArgs> statefulRuleOptions;

    public Input<RuleGroupRuleGroupStatefulRuleOptionsGetArgs> getStatefulRuleOptions() {
        return this.statefulRuleOptions == null ? Input.empty() : this.statefulRuleOptions;
    }

    public RuleGroupRuleGroupGetArgs(
        @Nullable Input<RuleGroupRuleGroupRuleVariablesGetArgs> ruleVariables,
        Input<RuleGroupRuleGroupRulesSourceGetArgs> rulesSource,
        @Nullable Input<RuleGroupRuleGroupStatefulRuleOptionsGetArgs> statefulRuleOptions) {
        this.ruleVariables = ruleVariables;
        this.rulesSource = Objects.requireNonNull(rulesSource, "expected parameter 'rulesSource' to be non-null");
        this.statefulRuleOptions = statefulRuleOptions;
    }

    private RuleGroupRuleGroupGetArgs() {
        this.ruleVariables = Input.empty();
        this.rulesSource = Input.empty();
        this.statefulRuleOptions = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RuleGroupRuleGroupGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<RuleGroupRuleGroupRuleVariablesGetArgs> ruleVariables;
        private Input<RuleGroupRuleGroupRulesSourceGetArgs> rulesSource;
        private @Nullable Input<RuleGroupRuleGroupStatefulRuleOptionsGetArgs> statefulRuleOptions;

        public Builder() {
    	      // Empty
        }

        public Builder(RuleGroupRuleGroupGetArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.ruleVariables = defaults.ruleVariables;
    	      this.rulesSource = defaults.rulesSource;
    	      this.statefulRuleOptions = defaults.statefulRuleOptions;
        }

        public Builder setRuleVariables(@Nullable Input<RuleGroupRuleGroupRuleVariablesGetArgs> ruleVariables) {
            this.ruleVariables = ruleVariables;
            return this;
        }

        public Builder setRuleVariables(@Nullable RuleGroupRuleGroupRuleVariablesGetArgs ruleVariables) {
            this.ruleVariables = Input.ofNullable(ruleVariables);
            return this;
        }

        public Builder setRulesSource(Input<RuleGroupRuleGroupRulesSourceGetArgs> rulesSource) {
            this.rulesSource = Objects.requireNonNull(rulesSource);
            return this;
        }

        public Builder setRulesSource(RuleGroupRuleGroupRulesSourceGetArgs rulesSource) {
            this.rulesSource = Input.of(Objects.requireNonNull(rulesSource));
            return this;
        }

        public Builder setStatefulRuleOptions(@Nullable Input<RuleGroupRuleGroupStatefulRuleOptionsGetArgs> statefulRuleOptions) {
            this.statefulRuleOptions = statefulRuleOptions;
            return this;
        }

        public Builder setStatefulRuleOptions(@Nullable RuleGroupRuleGroupStatefulRuleOptionsGetArgs statefulRuleOptions) {
            this.statefulRuleOptions = Input.ofNullable(statefulRuleOptions);
            return this;
        }
        public RuleGroupRuleGroupGetArgs build() {
            return new RuleGroupRuleGroupGetArgs(ruleVariables, rulesSource, statefulRuleOptions);
        }
    }
}
