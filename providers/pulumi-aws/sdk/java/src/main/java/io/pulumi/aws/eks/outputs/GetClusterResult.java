// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.eks.outputs;

import io.pulumi.aws.eks.outputs.GetClusterCertificateAuthority;
import io.pulumi.aws.eks.outputs.GetClusterIdentity;
import io.pulumi.aws.eks.outputs.GetClusterKubernetesNetworkConfig;
import io.pulumi.aws.eks.outputs.GetClusterVpcConfig;
import io.pulumi.core.annotations.OutputCustomType;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@OutputCustomType
public final class GetClusterResult {
    /**
     * The Amazon Resource Name (ARN) of the cluster.
     * 
     */
    private final String arn;
    /**
     * Nested attribute containing `certificate-authority-data` for your cluster.
     * 
     */
    private final GetClusterCertificateAuthority certificateAuthority;
    /**
     * The Unix epoch time stamp in seconds for when the cluster was created.
     * 
     */
    private final String createdAt;
    /**
     * The enabled control plane logs.
     * 
     */
    private final List<String> enabledClusterLogTypes;
    /**
     * The endpoint for your Kubernetes API server.
     * 
     */
    private final String endpoint;
    /**
     * The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    /**
     * Nested attribute containing identity provider information for your cluster. Only available on Kubernetes version 1.13 and 1.14 clusters created or upgraded on or after September 3, 2019. For an example using this information to enable IAM Roles for Service Accounts, see the `aws.eks.Cluster` resource documentation.
     * 
     */
    private final List<GetClusterIdentity> identities;
    /**
     * Nested list containing Kubernetes Network Configuration.
     * 
     */
    private final List<GetClusterKubernetesNetworkConfig> kubernetesNetworkConfigs;
    private final String name;
    /**
     * The platform version for the cluster.
     * 
     */
    private final String platformVersion;
    /**
     * The Amazon Resource Name (ARN) of the IAM role that provides permissions for the Kubernetes control plane to make calls to AWS API operations on your behalf.
     * 
     */
    private final String roleArn;
    /**
     * The status of the EKS cluster. One of `CREATING`, `ACTIVE`, `DELETING`, `FAILED`.
     * 
     */
    private final String status;
    /**
     * Key-value map of resource tags.
     * 
     */
    private final Map<String,String> tags;
    /**
     * The Kubernetes server version for the cluster.
     * 
     */
    private final String version;
    /**
     * Nested list containing VPC configuration for the cluster.
     * 
     */
    private final GetClusterVpcConfig vpcConfig;

    @OutputCustomType.Constructor({"arn","certificateAuthority","createdAt","enabledClusterLogTypes","endpoint","id","identities","kubernetesNetworkConfigs","name","platformVersion","roleArn","status","tags","version","vpcConfig"})
    private GetClusterResult(
        String arn,
        GetClusterCertificateAuthority certificateAuthority,
        String createdAt,
        List<String> enabledClusterLogTypes,
        String endpoint,
        String id,
        List<GetClusterIdentity> identities,
        List<GetClusterKubernetesNetworkConfig> kubernetesNetworkConfigs,
        String name,
        String platformVersion,
        String roleArn,
        String status,
        Map<String,String> tags,
        String version,
        GetClusterVpcConfig vpcConfig) {
        this.arn = Objects.requireNonNull(arn);
        this.certificateAuthority = Objects.requireNonNull(certificateAuthority);
        this.createdAt = Objects.requireNonNull(createdAt);
        this.enabledClusterLogTypes = Objects.requireNonNull(enabledClusterLogTypes);
        this.endpoint = Objects.requireNonNull(endpoint);
        this.id = Objects.requireNonNull(id);
        this.identities = Objects.requireNonNull(identities);
        this.kubernetesNetworkConfigs = Objects.requireNonNull(kubernetesNetworkConfigs);
        this.name = Objects.requireNonNull(name);
        this.platformVersion = Objects.requireNonNull(platformVersion);
        this.roleArn = Objects.requireNonNull(roleArn);
        this.status = Objects.requireNonNull(status);
        this.tags = Objects.requireNonNull(tags);
        this.version = Objects.requireNonNull(version);
        this.vpcConfig = Objects.requireNonNull(vpcConfig);
    }

    /**
     * The Amazon Resource Name (ARN) of the cluster.
     * 
    */
    public String getArn() {
        return this.arn;
    }
    /**
     * Nested attribute containing `certificate-authority-data` for your cluster.
     * 
    */
    public GetClusterCertificateAuthority getCertificateAuthority() {
        return this.certificateAuthority;
    }
    /**
     * The Unix epoch time stamp in seconds for when the cluster was created.
     * 
    */
    public String getCreatedAt() {
        return this.createdAt;
    }
    /**
     * The enabled control plane logs.
     * 
    */
    public List<String> getEnabledClusterLogTypes() {
        return this.enabledClusterLogTypes;
    }
    /**
     * The endpoint for your Kubernetes API server.
     * 
    */
    public String getEndpoint() {
        return this.endpoint;
    }
    /**
     * The provider-assigned unique ID for this managed resource.
     * 
    */
    public String getId() {
        return this.id;
    }
    /**
     * Nested attribute containing identity provider information for your cluster. Only available on Kubernetes version 1.13 and 1.14 clusters created or upgraded on or after September 3, 2019. For an example using this information to enable IAM Roles for Service Accounts, see the `aws.eks.Cluster` resource documentation.
     * 
    */
    public List<GetClusterIdentity> getIdentities() {
        return this.identities;
    }
    /**
     * Nested list containing Kubernetes Network Configuration.
     * 
    */
    public List<GetClusterKubernetesNetworkConfig> getKubernetesNetworkConfigs() {
        return this.kubernetesNetworkConfigs;
    }
    public String getName() {
        return this.name;
    }
    /**
     * The platform version for the cluster.
     * 
    */
    public String getPlatformVersion() {
        return this.platformVersion;
    }
    /**
     * The Amazon Resource Name (ARN) of the IAM role that provides permissions for the Kubernetes control plane to make calls to AWS API operations on your behalf.
     * 
    */
    public String getRoleArn() {
        return this.roleArn;
    }
    /**
     * The status of the EKS cluster. One of `CREATING`, `ACTIVE`, `DELETING`, `FAILED`.
     * 
    */
    public String getStatus() {
        return this.status;
    }
    /**
     * Key-value map of resource tags.
     * 
    */
    public Map<String,String> getTags() {
        return this.tags;
    }
    /**
     * The Kubernetes server version for the cluster.
     * 
    */
    public String getVersion() {
        return this.version;
    }
    /**
     * Nested list containing VPC configuration for the cluster.
     * 
    */
    public GetClusterVpcConfig getVpcConfig() {
        return this.vpcConfig;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetClusterResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String arn;
        private GetClusterCertificateAuthority certificateAuthority;
        private String createdAt;
        private List<String> enabledClusterLogTypes;
        private String endpoint;
        private String id;
        private List<GetClusterIdentity> identities;
        private List<GetClusterKubernetesNetworkConfig> kubernetesNetworkConfigs;
        private String name;
        private String platformVersion;
        private String roleArn;
        private String status;
        private Map<String,String> tags;
        private String version;
        private GetClusterVpcConfig vpcConfig;

        public Builder() {
    	      // Empty
        }

        public Builder(GetClusterResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.certificateAuthority = defaults.certificateAuthority;
    	      this.createdAt = defaults.createdAt;
    	      this.enabledClusterLogTypes = defaults.enabledClusterLogTypes;
    	      this.endpoint = defaults.endpoint;
    	      this.id = defaults.id;
    	      this.identities = defaults.identities;
    	      this.kubernetesNetworkConfigs = defaults.kubernetesNetworkConfigs;
    	      this.name = defaults.name;
    	      this.platformVersion = defaults.platformVersion;
    	      this.roleArn = defaults.roleArn;
    	      this.status = defaults.status;
    	      this.tags = defaults.tags;
    	      this.version = defaults.version;
    	      this.vpcConfig = defaults.vpcConfig;
        }

        public Builder setArn(String arn) {
            this.arn = Objects.requireNonNull(arn);
            return this;
        }

        public Builder setCertificateAuthority(GetClusterCertificateAuthority certificateAuthority) {
            this.certificateAuthority = Objects.requireNonNull(certificateAuthority);
            return this;
        }

        public Builder setCreatedAt(String createdAt) {
            this.createdAt = Objects.requireNonNull(createdAt);
            return this;
        }

        public Builder setEnabledClusterLogTypes(List<String> enabledClusterLogTypes) {
            this.enabledClusterLogTypes = Objects.requireNonNull(enabledClusterLogTypes);
            return this;
        }

        public Builder setEndpoint(String endpoint) {
            this.endpoint = Objects.requireNonNull(endpoint);
            return this;
        }

        public Builder setId(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }

        public Builder setIdentities(List<GetClusterIdentity> identities) {
            this.identities = Objects.requireNonNull(identities);
            return this;
        }

        public Builder setKubernetesNetworkConfigs(List<GetClusterKubernetesNetworkConfig> kubernetesNetworkConfigs) {
            this.kubernetesNetworkConfigs = Objects.requireNonNull(kubernetesNetworkConfigs);
            return this;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setPlatformVersion(String platformVersion) {
            this.platformVersion = Objects.requireNonNull(platformVersion);
            return this;
        }

        public Builder setRoleArn(String roleArn) {
            this.roleArn = Objects.requireNonNull(roleArn);
            return this;
        }

        public Builder setStatus(String status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }

        public Builder setTags(Map<String,String> tags) {
            this.tags = Objects.requireNonNull(tags);
            return this;
        }

        public Builder setVersion(String version) {
            this.version = Objects.requireNonNull(version);
            return this;
        }

        public Builder setVpcConfig(GetClusterVpcConfig vpcConfig) {
            this.vpcConfig = Objects.requireNonNull(vpcConfig);
            return this;
        }
        public GetClusterResult build() {
            return new GetClusterResult(arn, certificateAuthority, createdAt, enabledClusterLogTypes, endpoint, id, identities, kubernetesNetworkConfigs, name, platformVersion, roleArn, status, tags, version, vpcConfig);
        }
    }
}
