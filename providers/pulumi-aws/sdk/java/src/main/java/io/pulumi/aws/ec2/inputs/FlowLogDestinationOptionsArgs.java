// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.ec2.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class FlowLogDestinationOptionsArgs extends io.pulumi.resources.ResourceArgs {

    public static final FlowLogDestinationOptionsArgs Empty = new FlowLogDestinationOptionsArgs();

    /**
     * The format for the flow log. Default value: `plain-text`. Valid values: `plain-text`, `parquet`.
     * 
     */
    @Import(name="fileFormat")
      private final @Nullable Output<String> fileFormat;

    public Output<String> getFileFormat() {
        return this.fileFormat == null ? Output.empty() : this.fileFormat;
    }

    /**
     * Indicates whether to use Hive-compatible prefixes for flow logs stored in Amazon S3. Default value: `false`.
     * 
     */
    @Import(name="hiveCompatiblePartitions")
      private final @Nullable Output<Boolean> hiveCompatiblePartitions;

    public Output<Boolean> getHiveCompatiblePartitions() {
        return this.hiveCompatiblePartitions == null ? Output.empty() : this.hiveCompatiblePartitions;
    }

    /**
     * Indicates whether to partition the flow log per hour. This reduces the cost and response time for queries. Default value: `false`.
     * 
     */
    @Import(name="perHourPartition")
      private final @Nullable Output<Boolean> perHourPartition;

    public Output<Boolean> getPerHourPartition() {
        return this.perHourPartition == null ? Output.empty() : this.perHourPartition;
    }

    public FlowLogDestinationOptionsArgs(
        @Nullable Output<String> fileFormat,
        @Nullable Output<Boolean> hiveCompatiblePartitions,
        @Nullable Output<Boolean> perHourPartition) {
        this.fileFormat = fileFormat;
        this.hiveCompatiblePartitions = hiveCompatiblePartitions;
        this.perHourPartition = perHourPartition;
    }

    private FlowLogDestinationOptionsArgs() {
        this.fileFormat = Output.empty();
        this.hiveCompatiblePartitions = Output.empty();
        this.perHourPartition = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FlowLogDestinationOptionsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> fileFormat;
        private @Nullable Output<Boolean> hiveCompatiblePartitions;
        private @Nullable Output<Boolean> perHourPartition;

        public Builder() {
    	      // Empty
        }

        public Builder(FlowLogDestinationOptionsArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.fileFormat = defaults.fileFormat;
    	      this.hiveCompatiblePartitions = defaults.hiveCompatiblePartitions;
    	      this.perHourPartition = defaults.perHourPartition;
        }

        public Builder fileFormat(@Nullable Output<String> fileFormat) {
            this.fileFormat = fileFormat;
            return this;
        }
        public Builder fileFormat(@Nullable String fileFormat) {
            this.fileFormat = Output.ofNullable(fileFormat);
            return this;
        }
        public Builder hiveCompatiblePartitions(@Nullable Output<Boolean> hiveCompatiblePartitions) {
            this.hiveCompatiblePartitions = hiveCompatiblePartitions;
            return this;
        }
        public Builder hiveCompatiblePartitions(@Nullable Boolean hiveCompatiblePartitions) {
            this.hiveCompatiblePartitions = Output.ofNullable(hiveCompatiblePartitions);
            return this;
        }
        public Builder perHourPartition(@Nullable Output<Boolean> perHourPartition) {
            this.perHourPartition = perHourPartition;
            return this;
        }
        public Builder perHourPartition(@Nullable Boolean perHourPartition) {
            this.perHourPartition = Output.ofNullable(perHourPartition);
            return this;
        }        public FlowLogDestinationOptionsArgs build() {
            return new FlowLogDestinationOptionsArgs(fileFormat, hiveCompatiblePartitions, perHourPartition);
        }
    }
}
