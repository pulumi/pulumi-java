// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.cloudwatch;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class EventBusArgs extends io.pulumi.resources.ResourceArgs {

    public static final EventBusArgs Empty = new EventBusArgs();

    /**
     * The partner event source that the new event bus will be matched with. Must match `name`.
     * 
     */
    @Import(name="eventSourceName")
      private final @Nullable Output<String> eventSourceName;

    public Output<String> getEventSourceName() {
        return this.eventSourceName == null ? Output.empty() : this.eventSourceName;
    }

    /**
     * The name of the new event bus. The names of custom event buses can't contain the / character. To create a partner event bus, ensure the `name` matches the `event_source_name`.
     * 
     */
    @Import(name="name")
      private final @Nullable Output<String> name;

    public Output<String> getName() {
        return this.name == null ? Output.empty() : this.name;
    }

    /**
     * A map of tags to assign to the resource. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Import(name="tags")
      private final @Nullable Output<Map<String,String>> tags;

    public Output<Map<String,String>> getTags() {
        return this.tags == null ? Output.empty() : this.tags;
    }

    public EventBusArgs(
        @Nullable Output<String> eventSourceName,
        @Nullable Output<String> name,
        @Nullable Output<Map<String,String>> tags) {
        this.eventSourceName = eventSourceName;
        this.name = name;
        this.tags = tags;
    }

    private EventBusArgs() {
        this.eventSourceName = Output.empty();
        this.name = Output.empty();
        this.tags = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(EventBusArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> eventSourceName;
        private @Nullable Output<String> name;
        private @Nullable Output<Map<String,String>> tags;

        public Builder() {
    	      // Empty
        }

        public Builder(EventBusArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.eventSourceName = defaults.eventSourceName;
    	      this.name = defaults.name;
    	      this.tags = defaults.tags;
        }

        public Builder eventSourceName(@Nullable Output<String> eventSourceName) {
            this.eventSourceName = eventSourceName;
            return this;
        }

        public Builder eventSourceName(@Nullable String eventSourceName) {
            this.eventSourceName = Output.ofNullable(eventSourceName);
            return this;
        }

        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }

        public Builder name(@Nullable String name) {
            this.name = Output.ofNullable(name);
            return this;
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }

        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = Output.ofNullable(tags);
            return this;
        }
        public EventBusArgs build() {
            return new EventBusArgs(eventSourceName, name, tags);
        }
    }
}
