// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.iam;

import io.pulumi.aws.iam.inputs.RoleInlinePolicyArgs;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class RoleArgs extends io.pulumi.resources.ResourceArgs {

    public static final RoleArgs Empty = new RoleArgs();

    /**
     * Policy that grants an entity permission to assume the role.
     * 
     */
    @InputImport(name="assumeRolePolicy", required=true)
      private final Input<String> assumeRolePolicy;

    public Input<String> getAssumeRolePolicy() {
        return this.assumeRolePolicy;
    }

    /**
     * Description of the role.
     * 
     */
    @InputImport(name="description")
      private final @Nullable Input<String> description;

    public Input<String> getDescription() {
        return this.description == null ? Input.empty() : this.description;
    }

    /**
     * Whether to force detaching any policies the role has before destroying it. Defaults to `false`.
     * 
     */
    @InputImport(name="forceDetachPolicies")
      private final @Nullable Input<Boolean> forceDetachPolicies;

    public Input<Boolean> getForceDetachPolicies() {
        return this.forceDetachPolicies == null ? Input.empty() : this.forceDetachPolicies;
    }

    /**
     * Configuration block defining an exclusive set of IAM inline policies associated with the IAM role. See below. If no blocks are configured, this provider will not manage any inline policies in this resource. Configuring one empty block (i.e., `inline_policy {}`) will cause the provider to remove _all_ inline policies added out of band on `apply`.
     * 
     */
    @InputImport(name="inlinePolicies")
      private final @Nullable Input<List<RoleInlinePolicyArgs>> inlinePolicies;

    public Input<List<RoleInlinePolicyArgs>> getInlinePolicies() {
        return this.inlinePolicies == null ? Input.empty() : this.inlinePolicies;
    }

    /**
     * Set of exclusive IAM managed policy ARNs to attach to the IAM role. If this attribute is not configured, this provider will ignore policy attachments to this resource. When configured, the provider will align the role's managed policy attachments with this set by attaching or detaching managed policies. Configuring an empty set (i.e., `managed_policy_arns = []`) will cause the provider to remove _all_ managed policy attachments.
     * 
     */
    @InputImport(name="managedPolicyArns")
      private final @Nullable Input<List<String>> managedPolicyArns;

    public Input<List<String>> getManagedPolicyArns() {
        return this.managedPolicyArns == null ? Input.empty() : this.managedPolicyArns;
    }

    /**
     * Maximum session duration (in seconds) that you want to set for the specified role. If you do not specify a value for this setting, the default maximum of one hour is applied. This setting can have a value from 1 hour to 12 hours.
     * 
     */
    @InputImport(name="maxSessionDuration")
      private final @Nullable Input<Integer> maxSessionDuration;

    public Input<Integer> getMaxSessionDuration() {
        return this.maxSessionDuration == null ? Input.empty() : this.maxSessionDuration;
    }

    /**
     * Name of the role policy.
     * 
     */
    @InputImport(name="name")
      private final @Nullable Input<String> name;

    public Input<String> getName() {
        return this.name == null ? Input.empty() : this.name;
    }

    /**
     * Creates a unique friendly name beginning with the specified prefix. Conflicts with `name`.
     * 
     */
    @InputImport(name="namePrefix")
      private final @Nullable Input<String> namePrefix;

    public Input<String> getNamePrefix() {
        return this.namePrefix == null ? Input.empty() : this.namePrefix;
    }

    /**
     * Path to the role. See [IAM Identifiers](https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html) for more information.
     * 
     */
    @InputImport(name="path")
      private final @Nullable Input<String> path;

    public Input<String> getPath() {
        return this.path == null ? Input.empty() : this.path;
    }

    /**
     * ARN of the policy that is used to set the permissions boundary for the role.
     * 
     */
    @InputImport(name="permissionsBoundary")
      private final @Nullable Input<String> permissionsBoundary;

    public Input<String> getPermissionsBoundary() {
        return this.permissionsBoundary == null ? Input.empty() : this.permissionsBoundary;
    }

    /**
     * Key-value mapping of tags for the IAM role. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @InputImport(name="tags")
      private final @Nullable Input<Map<String,String>> tags;

    public Input<Map<String,String>> getTags() {
        return this.tags == null ? Input.empty() : this.tags;
    }

    public RoleArgs(
        Input<String> assumeRolePolicy,
        @Nullable Input<String> description,
        @Nullable Input<Boolean> forceDetachPolicies,
        @Nullable Input<List<RoleInlinePolicyArgs>> inlinePolicies,
        @Nullable Input<List<String>> managedPolicyArns,
        @Nullable Input<Integer> maxSessionDuration,
        @Nullable Input<String> name,
        @Nullable Input<String> namePrefix,
        @Nullable Input<String> path,
        @Nullable Input<String> permissionsBoundary,
        @Nullable Input<Map<String,String>> tags) {
        this.assumeRolePolicy = Objects.requireNonNull(assumeRolePolicy, "expected parameter 'assumeRolePolicy' to be non-null");
        this.description = description;
        this.forceDetachPolicies = forceDetachPolicies;
        this.inlinePolicies = inlinePolicies;
        this.managedPolicyArns = managedPolicyArns;
        this.maxSessionDuration = maxSessionDuration;
        this.name = name;
        this.namePrefix = namePrefix;
        this.path = path;
        this.permissionsBoundary = permissionsBoundary;
        this.tags = tags;
    }

    private RoleArgs() {
        this.assumeRolePolicy = Input.empty();
        this.description = Input.empty();
        this.forceDetachPolicies = Input.empty();
        this.inlinePolicies = Input.empty();
        this.managedPolicyArns = Input.empty();
        this.maxSessionDuration = Input.empty();
        this.name = Input.empty();
        this.namePrefix = Input.empty();
        this.path = Input.empty();
        this.permissionsBoundary = Input.empty();
        this.tags = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RoleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<String> assumeRolePolicy;
        private @Nullable Input<String> description;
        private @Nullable Input<Boolean> forceDetachPolicies;
        private @Nullable Input<List<RoleInlinePolicyArgs>> inlinePolicies;
        private @Nullable Input<List<String>> managedPolicyArns;
        private @Nullable Input<Integer> maxSessionDuration;
        private @Nullable Input<String> name;
        private @Nullable Input<String> namePrefix;
        private @Nullable Input<String> path;
        private @Nullable Input<String> permissionsBoundary;
        private @Nullable Input<Map<String,String>> tags;

        public Builder() {
    	      // Empty
        }

        public Builder(RoleArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.assumeRolePolicy = defaults.assumeRolePolicy;
    	      this.description = defaults.description;
    	      this.forceDetachPolicies = defaults.forceDetachPolicies;
    	      this.inlinePolicies = defaults.inlinePolicies;
    	      this.managedPolicyArns = defaults.managedPolicyArns;
    	      this.maxSessionDuration = defaults.maxSessionDuration;
    	      this.name = defaults.name;
    	      this.namePrefix = defaults.namePrefix;
    	      this.path = defaults.path;
    	      this.permissionsBoundary = defaults.permissionsBoundary;
    	      this.tags = defaults.tags;
        }

        public Builder setAssumeRolePolicy(Input<String> assumeRolePolicy) {
            this.assumeRolePolicy = Objects.requireNonNull(assumeRolePolicy);
            return this;
        }

        public Builder setDescription(@Nullable Input<String> description) {
            this.description = description;
            return this;
        }

        public Builder setDescription(@Nullable String description) {
            this.description = Input.ofNullable(description);
            return this;
        }

        public Builder setForceDetachPolicies(@Nullable Input<Boolean> forceDetachPolicies) {
            this.forceDetachPolicies = forceDetachPolicies;
            return this;
        }

        public Builder setForceDetachPolicies(@Nullable Boolean forceDetachPolicies) {
            this.forceDetachPolicies = Input.ofNullable(forceDetachPolicies);
            return this;
        }

        public Builder setInlinePolicies(@Nullable Input<List<RoleInlinePolicyArgs>> inlinePolicies) {
            this.inlinePolicies = inlinePolicies;
            return this;
        }

        public Builder setInlinePolicies(@Nullable List<RoleInlinePolicyArgs> inlinePolicies) {
            this.inlinePolicies = Input.ofNullable(inlinePolicies);
            return this;
        }

        public Builder setManagedPolicyArns(@Nullable Input<List<String>> managedPolicyArns) {
            this.managedPolicyArns = managedPolicyArns;
            return this;
        }

        public Builder setManagedPolicyArns(@Nullable List<String> managedPolicyArns) {
            this.managedPolicyArns = Input.ofNullable(managedPolicyArns);
            return this;
        }

        public Builder setMaxSessionDuration(@Nullable Input<Integer> maxSessionDuration) {
            this.maxSessionDuration = maxSessionDuration;
            return this;
        }

        public Builder setMaxSessionDuration(@Nullable Integer maxSessionDuration) {
            this.maxSessionDuration = Input.ofNullable(maxSessionDuration);
            return this;
        }

        public Builder setName(@Nullable Input<String> name) {
            this.name = name;
            return this;
        }

        public Builder setName(@Nullable String name) {
            this.name = Input.ofNullable(name);
            return this;
        }

        public Builder setNamePrefix(@Nullable Input<String> namePrefix) {
            this.namePrefix = namePrefix;
            return this;
        }

        public Builder setNamePrefix(@Nullable String namePrefix) {
            this.namePrefix = Input.ofNullable(namePrefix);
            return this;
        }

        public Builder setPath(@Nullable Input<String> path) {
            this.path = path;
            return this;
        }

        public Builder setPath(@Nullable String path) {
            this.path = Input.ofNullable(path);
            return this;
        }

        public Builder setPermissionsBoundary(@Nullable Input<String> permissionsBoundary) {
            this.permissionsBoundary = permissionsBoundary;
            return this;
        }

        public Builder setPermissionsBoundary(@Nullable String permissionsBoundary) {
            this.permissionsBoundary = Input.ofNullable(permissionsBoundary);
            return this;
        }

        public Builder setTags(@Nullable Input<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }

        public Builder setTags(@Nullable Map<String,String> tags) {
            this.tags = Input.ofNullable(tags);
            return this;
        }
        public RoleArgs build() {
            return new RoleArgs(assumeRolePolicy, description, forceDetachPolicies, inlinePolicies, managedPolicyArns, maxSessionDuration, name, namePrefix, path, permissionsBoundary, tags);
        }
    }
}
