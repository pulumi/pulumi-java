// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.signer;

import io.pulumi.aws.signer.inputs.SigningJobDestinationArgs;
import io.pulumi.aws.signer.inputs.SigningJobSourceArgs;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class SigningJobArgs extends io.pulumi.resources.ResourceArgs {

    public static final SigningJobArgs Empty = new SigningJobArgs();

    /**
     * The S3 bucket in which to save your signed object. See Destination below for details.
     * 
     */
    @InputImport(name="destination", required=true)
      private final Input<SigningJobDestinationArgs> destination;

    public Input<SigningJobDestinationArgs> getDestination() {
        return this.destination;
    }

    /**
     * Set this argument to `true` to ignore signing job failures and retrieve failed status and reason. Default `false`.
     * 
     */
    @InputImport(name="ignoreSigningJobFailure")
      private final @Nullable Input<Boolean> ignoreSigningJobFailure;

    public Input<Boolean> getIgnoreSigningJobFailure() {
        return this.ignoreSigningJobFailure == null ? Input.empty() : this.ignoreSigningJobFailure;
    }

    /**
     * The name of the profile to initiate the signing operation.
     * 
     */
    @InputImport(name="profileName", required=true)
      private final Input<String> profileName;

    public Input<String> getProfileName() {
        return this.profileName;
    }

    /**
     * The S3 bucket that contains the object to sign. See Source below for details.
     * 
     */
    @InputImport(name="source", required=true)
      private final Input<SigningJobSourceArgs> source;

    public Input<SigningJobSourceArgs> getSource() {
        return this.source;
    }

    public SigningJobArgs(
        Input<SigningJobDestinationArgs> destination,
        @Nullable Input<Boolean> ignoreSigningJobFailure,
        Input<String> profileName,
        Input<SigningJobSourceArgs> source) {
        this.destination = Objects.requireNonNull(destination, "expected parameter 'destination' to be non-null");
        this.ignoreSigningJobFailure = ignoreSigningJobFailure;
        this.profileName = Objects.requireNonNull(profileName, "expected parameter 'profileName' to be non-null");
        this.source = Objects.requireNonNull(source, "expected parameter 'source' to be non-null");
    }

    private SigningJobArgs() {
        this.destination = Input.empty();
        this.ignoreSigningJobFailure = Input.empty();
        this.profileName = Input.empty();
        this.source = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SigningJobArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<SigningJobDestinationArgs> destination;
        private @Nullable Input<Boolean> ignoreSigningJobFailure;
        private Input<String> profileName;
        private Input<SigningJobSourceArgs> source;

        public Builder() {
    	      // Empty
        }

        public Builder(SigningJobArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.destination = defaults.destination;
    	      this.ignoreSigningJobFailure = defaults.ignoreSigningJobFailure;
    	      this.profileName = defaults.profileName;
    	      this.source = defaults.source;
        }

        public Builder setDestination(Input<SigningJobDestinationArgs> destination) {
            this.destination = Objects.requireNonNull(destination);
            return this;
        }

        public Builder setDestination(SigningJobDestinationArgs destination) {
            this.destination = Input.of(Objects.requireNonNull(destination));
            return this;
        }

        public Builder setIgnoreSigningJobFailure(@Nullable Input<Boolean> ignoreSigningJobFailure) {
            this.ignoreSigningJobFailure = ignoreSigningJobFailure;
            return this;
        }

        public Builder setIgnoreSigningJobFailure(@Nullable Boolean ignoreSigningJobFailure) {
            this.ignoreSigningJobFailure = Input.ofNullable(ignoreSigningJobFailure);
            return this;
        }

        public Builder setProfileName(Input<String> profileName) {
            this.profileName = Objects.requireNonNull(profileName);
            return this;
        }

        public Builder setProfileName(String profileName) {
            this.profileName = Input.of(Objects.requireNonNull(profileName));
            return this;
        }

        public Builder setSource(Input<SigningJobSourceArgs> source) {
            this.source = Objects.requireNonNull(source);
            return this;
        }

        public Builder setSource(SigningJobSourceArgs source) {
            this.source = Input.of(Objects.requireNonNull(source));
            return this;
        }
        public SigningJobArgs build() {
            return new SigningJobArgs(destination, ignoreSigningJobFailure, profileName, source);
        }
    }
}
