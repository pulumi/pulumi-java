// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.mskconnect;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class WorkerConfigurationArgs extends io.pulumi.resources.ResourceArgs {

    public static final WorkerConfigurationArgs Empty = new WorkerConfigurationArgs();

    /**
     * A summary description of the worker configuration.
     * 
     */
    @InputImport(name="description")
      private final @Nullable Input<String> description;

    public Input<String> getDescription() {
        return this.description == null ? Input.empty() : this.description;
    }

    /**
     * The name of the worker configuration.
     * 
     */
    @InputImport(name="name")
      private final @Nullable Input<String> name;

    public Input<String> getName() {
        return this.name == null ? Input.empty() : this.name;
    }

    /**
     * Contents of connect-distributed.properties file. The value can be either base64 encoded or in raw format.
     * 
     */
    @InputImport(name="propertiesFileContent", required=true)
      private final Input<String> propertiesFileContent;

    public Input<String> getPropertiesFileContent() {
        return this.propertiesFileContent;
    }

    public WorkerConfigurationArgs(
        @Nullable Input<String> description,
        @Nullable Input<String> name,
        Input<String> propertiesFileContent) {
        this.description = description;
        this.name = name;
        this.propertiesFileContent = Objects.requireNonNull(propertiesFileContent, "expected parameter 'propertiesFileContent' to be non-null");
    }

    private WorkerConfigurationArgs() {
        this.description = Input.empty();
        this.name = Input.empty();
        this.propertiesFileContent = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(WorkerConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> description;
        private @Nullable Input<String> name;
        private Input<String> propertiesFileContent;

        public Builder() {
    	      // Empty
        }

        public Builder(WorkerConfigurationArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.name = defaults.name;
    	      this.propertiesFileContent = defaults.propertiesFileContent;
        }

        public Builder setDescription(@Nullable Input<String> description) {
            this.description = description;
            return this;
        }

        public Builder setDescription(@Nullable String description) {
            this.description = Input.ofNullable(description);
            return this;
        }

        public Builder setName(@Nullable Input<String> name) {
            this.name = name;
            return this;
        }

        public Builder setName(@Nullable String name) {
            this.name = Input.ofNullable(name);
            return this;
        }

        public Builder setPropertiesFileContent(Input<String> propertiesFileContent) {
            this.propertiesFileContent = Objects.requireNonNull(propertiesFileContent);
            return this;
        }

        public Builder setPropertiesFileContent(String propertiesFileContent) {
            this.propertiesFileContent = Input.of(Objects.requireNonNull(propertiesFileContent));
            return this;
        }
        public WorkerConfigurationArgs build() {
            return new WorkerConfigurationArgs(description, name, propertiesFileContent);
        }
    }
}
