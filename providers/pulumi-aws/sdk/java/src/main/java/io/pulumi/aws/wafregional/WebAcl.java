// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.wafregional;

import io.pulumi.aws.Utilities;
import io.pulumi.aws.wafregional.WebAclArgs;
import io.pulumi.aws.wafregional.inputs.WebAclState;
import io.pulumi.aws.wafregional.outputs.WebAclDefaultAction;
import io.pulumi.aws.wafregional.outputs.WebAclLoggingConfiguration;
import io.pulumi.aws.wafregional.outputs.WebAclRule;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Export;
import io.pulumi.core.annotations.ResourceType;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;

/**
 * Provides a WAF Regional Web ACL Resource for use with Application Load Balancer.
 * 
 * {{% examples %}}
 * ## Example Usage
 * {{% example %}}
 * ### Regular Rule
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 * 
 * const ipset = new aws.wafregional.IpSet("ipset", {ipSetDescriptors: [{
 *     type: "IPV4",
 *     value: "192.0.7.0/24",
 * }]});
 * const wafrule = new aws.wafregional.Rule("wafrule", {
 *     metricName: "tfWAFRule",
 *     predicates: [{
 *         dataId: ipset.id,
 *         negated: false,
 *         type: "IPMatch",
 *     }],
 * });
 * const wafacl = new aws.wafregional.WebAcl("wafacl", {
 *     metricName: "tfWebACL",
 *     defaultAction: {
 *         type: "ALLOW",
 *     },
 *     rules: [{
 *         action: {
 *             type: "BLOCK",
 *         },
 *         priority: 1,
 *         ruleId: wafrule.id,
 *         type: "REGULAR",
 *     }],
 * });
 * ```
 * ```python
 * import pulumi
 * import pulumi_aws as aws
 * 
 * ipset = aws.wafregional.IpSet("ipset", ip_set_descriptors=[aws.wafregional.IpSetIpSetDescriptorArgs(
 *     type="IPV4",
 *     value="192.0.7.0/24",
 * )])
 * wafrule = aws.wafregional.Rule("wafrule",
 *     metric_name="tfWAFRule",
 *     predicates=[aws.wafregional.RulePredicateArgs(
 *         data_id=ipset.id,
 *         negated=False,
 *         type="IPMatch",
 *     )])
 * wafacl = aws.wafregional.WebAcl("wafacl",
 *     metric_name="tfWebACL",
 *     default_action=aws.wafregional.WebAclDefaultActionArgs(
 *         type="ALLOW",
 *     ),
 *     rules=[aws.wafregional.WebAclRuleArgs(
 *         action=aws.wafregional.WebAclRuleActionArgs(
 *             type="BLOCK",
 *         ),
 *         priority=1,
 *         rule_id=wafrule.id,
 *         type="REGULAR",
 *     )])
 * ```
 * ```csharp
 * using Pulumi;
 * using Aws = Pulumi.Aws;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var ipset = new Aws.WafRegional.IpSet("ipset", new Aws.WafRegional.IpSetArgs
 *         {
 *             IpSetDescriptors = 
 *             {
 *                 new Aws.WafRegional.Inputs.IpSetIpSetDescriptorArgs
 *                 {
 *                     Type = "IPV4",
 *                     Value = "192.0.7.0/24",
 *                 },
 *             },
 *         });
 *         var wafrule = new Aws.WafRegional.Rule("wafrule", new Aws.WafRegional.RuleArgs
 *         {
 *             MetricName = "tfWAFRule",
 *             Predicates = 
 *             {
 *                 new Aws.WafRegional.Inputs.RulePredicateArgs
 *                 {
 *                     DataId = ipset.Id,
 *                     Negated = false,
 *                     Type = "IPMatch",
 *                 },
 *             },
 *         });
 *         var wafacl = new Aws.WafRegional.WebAcl("wafacl", new Aws.WafRegional.WebAclArgs
 *         {
 *             MetricName = "tfWebACL",
 *             DefaultAction = new Aws.WafRegional.Inputs.WebAclDefaultActionArgs
 *             {
 *                 Type = "ALLOW",
 *             },
 *             Rules = 
 *             {
 *                 new Aws.WafRegional.Inputs.WebAclRuleArgs
 *                 {
 *                     Action = new Aws.WafRegional.Inputs.WebAclRuleActionArgs
 *                     {
 *                         Type = "BLOCK",
 *                     },
 *                     Priority = 1,
 *                     RuleId = wafrule.Id,
 *                     Type = "REGULAR",
 *                 },
 *             },
 *         });
 *     }
 * 
 * }
 * ```
 * ```go
 * package main
 * 
 * import (
 * 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/wafregional"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		ipset, err := wafregional.NewIpSet(ctx, "ipset", &wafregional.IpSetArgs{
 * 			IpSetDescriptors: wafregional.IpSetIpSetDescriptorArray{
 * 				&wafregional.IpSetIpSetDescriptorArgs{
 * 					Type:  pulumi.String("IPV4"),
 * 					Value: pulumi.String("192.0.7.0/24"),
 * 				},
 * 			},
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		wafrule, err := wafregional.NewRule(ctx, "wafrule", &wafregional.RuleArgs{
 * 			MetricName: pulumi.String("tfWAFRule"),
 * 			Predicates: wafregional.RulePredicateArray{
 * 				&wafregional.RulePredicateArgs{
 * 					DataId:  ipset.ID(),
 * 					Negated: pulumi.Bool(false),
 * 					Type:    pulumi.String("IPMatch"),
 * 				},
 * 			},
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		_, err = wafregional.NewWebAcl(ctx, "wafacl", &wafregional.WebAclArgs{
 * 			MetricName: pulumi.String("tfWebACL"),
 * 			DefaultAction: &wafregional.WebAclDefaultActionArgs{
 * 				Type: pulumi.String("ALLOW"),
 * 			},
 * 			Rules: wafregional.WebAclRuleArray{
 * 				&wafregional.WebAclRuleArgs{
 * 					Action: &wafregional.WebAclRuleActionArgs{
 * 						Type: pulumi.String("BLOCK"),
 * 					},
 * 					Priority: pulumi.Int(1),
 * 					RuleId:   wafrule.ID(),
 * 					Type:     pulumi.String("REGULAR"),
 * 				},
 * 			},
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * ```
 * {{% /example %}}
 * {{% example %}}
 * ### Group Rule
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 * 
 * const example = new aws.wafregional.WebAcl("example", {
 *     metricName: "example",
 *     defaultAction: {
 *         type: "ALLOW",
 *     },
 *     rules: [{
 *         priority: 1,
 *         ruleId: aws_wafregional_rule_group.example.id,
 *         type: "GROUP",
 *         overrideAction: {
 *             type: "NONE",
 *         },
 *     }],
 * });
 * ```
 * ```python
 * import pulumi
 * import pulumi_aws as aws
 * 
 * example = aws.wafregional.WebAcl("example",
 *     metric_name="example",
 *     default_action=aws.wafregional.WebAclDefaultActionArgs(
 *         type="ALLOW",
 *     ),
 *     rules=[aws.wafregional.WebAclRuleArgs(
 *         priority=1,
 *         rule_id=aws_wafregional_rule_group["example"]["id"],
 *         type="GROUP",
 *         override_action=aws.wafregional.WebAclRuleOverrideActionArgs(
 *             type="NONE",
 *         ),
 *     )])
 * ```
 * ```csharp
 * using Pulumi;
 * using Aws = Pulumi.Aws;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var example = new Aws.WafRegional.WebAcl("example", new Aws.WafRegional.WebAclArgs
 *         {
 *             MetricName = "example",
 *             DefaultAction = new Aws.WafRegional.Inputs.WebAclDefaultActionArgs
 *             {
 *                 Type = "ALLOW",
 *             },
 *             Rules = 
 *             {
 *                 new Aws.WafRegional.Inputs.WebAclRuleArgs
 *                 {
 *                     Priority = 1,
 *                     RuleId = aws_wafregional_rule_group.Example.Id,
 *                     Type = "GROUP",
 *                     OverrideAction = new Aws.WafRegional.Inputs.WebAclRuleOverrideActionArgs
 *                     {
 *                         Type = "NONE",
 *                     },
 *                 },
 *             },
 *         });
 *     }
 * 
 * }
 * ```
 * ```go
 * package main
 * 
 * import (
 * 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/wafregional"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		_, err := wafregional.NewWebAcl(ctx, "example", &wafregional.WebAclArgs{
 * 			MetricName: pulumi.String("example"),
 * 			DefaultAction: &wafregional.WebAclDefaultActionArgs{
 * 				Type: pulumi.String("ALLOW"),
 * 			},
 * 			Rules: wafregional.WebAclRuleArray{
 * 				&wafregional.WebAclRuleArgs{
 * 					Priority: pulumi.Int(1),
 * 					RuleId:   pulumi.Any(aws_wafregional_rule_group.Example.Id),
 * 					Type:     pulumi.String("GROUP"),
 * 					OverrideAction: &wafregional.WebAclRuleOverrideActionArgs{
 * 						Type: pulumi.String("NONE"),
 * 					},
 * 				},
 * 			},
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * ```
 * {{% /example %}}
 * {{% example %}}
 * ### Logging
 * 
 * > *NOTE:* The Kinesis Firehose Delivery Stream name must begin with `aws-waf-logs-`. See the [AWS WAF Developer Guide](https://docs.aws.amazon.com/waf/latest/developerguide/logging.html) for more information about enabling WAF logging.
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 * 
 * // ... other configuration ...
 * const example = new aws.wafregional.WebAcl("example", {loggingConfiguration: {
 *     logDestination: aws_kinesis_firehose_delivery_stream.example.arn,
 *     redactedFields: {
 *         fieldToMatches: [
 *             {
 *                 type: "URI",
 *             },
 *             {
 *                 data: "referer",
 *                 type: "HEADER",
 *             },
 *         ],
 *     },
 * }});
 * ```
 * ```python
 * import pulumi
 * import pulumi_aws as aws
 * 
 * # ... other configuration ...
 * example = aws.wafregional.WebAcl("example", logging_configuration=aws.wafregional.WebAclLoggingConfigurationArgs(
 *     log_destination=aws_kinesis_firehose_delivery_stream["example"]["arn"],
 *     redacted_fields=aws.wafregional.WebAclLoggingConfigurationRedactedFieldsArgs(
 *         field_to_matches=[
 *             aws.wafregional.WebAclLoggingConfigurationRedactedFieldsFieldToMatchArgs(
 *                 type="URI",
 *             ),
 *             aws.wafregional.WebAclLoggingConfigurationRedactedFieldsFieldToMatchArgs(
 *                 data="referer",
 *                 type="HEADER",
 *             ),
 *         ],
 *     ),
 * ))
 * ```
 * ```csharp
 * using Pulumi;
 * using Aws = Pulumi.Aws;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         // ... other configuration ...
 *         var example = new Aws.WafRegional.WebAcl("example", new Aws.WafRegional.WebAclArgs
 *         {
 *             LoggingConfiguration = new Aws.WafRegional.Inputs.WebAclLoggingConfigurationArgs
 *             {
 *                 LogDestination = aws_kinesis_firehose_delivery_stream.Example.Arn,
 *                 RedactedFields = new Aws.WafRegional.Inputs.WebAclLoggingConfigurationRedactedFieldsArgs
 *                 {
 *                     FieldToMatches = 
 *                     {
 *                         new Aws.WafRegional.Inputs.WebAclLoggingConfigurationRedactedFieldsFieldToMatchArgs
 *                         {
 *                             Type = "URI",
 *                         },
 *                         new Aws.WafRegional.Inputs.WebAclLoggingConfigurationRedactedFieldsFieldToMatchArgs
 *                         {
 *                             Data = "referer",
 *                             Type = "HEADER",
 *                         },
 *                     },
 *                 },
 *             },
 *         });
 *     }
 * 
 * }
 * ```
 * ```go
 * package main
 * 
 * import (
 * 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/wafregional"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		_, err := wafregional.NewWebAcl(ctx, "example", &wafregional.WebAclArgs{
 * 			LoggingConfiguration: &wafregional.WebAclLoggingConfigurationArgs{
 * 				LogDestination: pulumi.Any(aws_kinesis_firehose_delivery_stream.Example.Arn),
 * 				RedactedFields: &wafregional.WebAclLoggingConfigurationRedactedFieldsArgs{
 * 					FieldToMatches: wafregional.WebAclLoggingConfigurationRedactedFieldsFieldToMatchArray{
 * 						&wafregional.WebAclLoggingConfigurationRedactedFieldsFieldToMatchArgs{
 * 							Type: pulumi.String("URI"),
 * 						},
 * 						&wafregional.WebAclLoggingConfigurationRedactedFieldsFieldToMatchArgs{
 * 							Data: pulumi.String("referer"),
 * 							Type: pulumi.String("HEADER"),
 * 						},
 * 					},
 * 				},
 * 			},
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * ```
 * {{% /example %}}
 * {{% /examples %}}
 * 
 * ## Import
 * 
 * WAF Regional Web ACL can be imported using the id, e.g.,
 * 
 * ```sh
 *  $ pulumi import aws:wafregional/webAcl:WebAcl wafacl a1b2c3d4-d5f6-7777-8888-9999aaaabbbbcccc
 * ```
 * 
 *  
 */
@ResourceType(type="aws:wafregional/webAcl:WebAcl")
public class WebAcl extends io.pulumi.resources.CustomResource {
    /**
     * Amazon Resource Name (ARN) of the WAF Regional WebACL.
     * 
     */
    @Export(name="arn", type=String.class, parameters={})
    private Output<String> arn;

    /**
     * @return Amazon Resource Name (ARN) of the WAF Regional WebACL.
     * 
     */
    public Output<String> getArn() {
        return this.arn;
    }
    /**
     * The action that you want AWS WAF Regional to take when a request doesn't match the criteria in any of the rules that are associated with the web ACL.
     * 
     */
    @Export(name="defaultAction", type=WebAclDefaultAction.class, parameters={})
    private Output<WebAclDefaultAction> defaultAction;

    /**
     * @return The action that you want AWS WAF Regional to take when a request doesn't match the criteria in any of the rules that are associated with the web ACL.
     * 
     */
    public Output<WebAclDefaultAction> getDefaultAction() {
        return this.defaultAction;
    }
    /**
     * Configuration block to enable WAF logging. Detailed below.
     * 
     */
    @Export(name="loggingConfiguration", type=WebAclLoggingConfiguration.class, parameters={})
    private Output</* @Nullable */ WebAclLoggingConfiguration> loggingConfiguration;

    /**
     * @return Configuration block to enable WAF logging. Detailed below.
     * 
     */
    public Output</* @Nullable */ WebAclLoggingConfiguration> getLoggingConfiguration() {
        return this.loggingConfiguration;
    }
    /**
     * The name or description for the Amazon CloudWatch metric of this web ACL.
     * 
     */
    @Export(name="metricName", type=String.class, parameters={})
    private Output<String> metricName;

    /**
     * @return The name or description for the Amazon CloudWatch metric of this web ACL.
     * 
     */
    public Output<String> getMetricName() {
        return this.metricName;
    }
    /**
     * The name or description of the web ACL.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The name or description of the web ACL.
     * 
     */
    public Output<String> getName() {
        return this.name;
    }
    /**
     * Set of configuration blocks containing rules for the web ACL. Detailed below.
     * 
     */
    @Export(name="rules", type=List.class, parameters={WebAclRule.class})
    private Output</* @Nullable */ List<WebAclRule>> rules;

    /**
     * @return Set of configuration blocks containing rules for the web ACL. Detailed below.
     * 
     */
    public Output</* @Nullable */ List<WebAclRule>> getRules() {
        return this.rules;
    }
    /**
     * Key-value map of resource tags. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Export(name="tags", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return Key-value map of resource tags. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Output</* @Nullable */ Map<String,String>> getTags() {
        return this.tags;
    }
    /**
     * A map of tags assigned to the resource, including those inherited from the provider .
     * 
     */
    @Export(name="tagsAll", type=Map.class, parameters={String.class, String.class})
    private Output<Map<String,String>> tagsAll;

    /**
     * @return A map of tags assigned to the resource, including those inherited from the provider .
     * 
     */
    public Output<Map<String,String>> getTagsAll() {
        return this.tagsAll;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public WebAcl(String name) {
        this(name, WebAclArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public WebAcl(String name, WebAclArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public WebAcl(String name, WebAclArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:wafregional/webAcl:WebAcl", name, args == null ? WebAclArgs.Empty : args, makeResourceOptions(options, Output.empty()));
    }

    private WebAcl(String name, Output<String> id, @Nullable WebAclState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:wafregional/webAcl:WebAcl", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static WebAcl get(String name, Output<String> id, @Nullable WebAclState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new WebAcl(name, id, state, options);
    }
}
