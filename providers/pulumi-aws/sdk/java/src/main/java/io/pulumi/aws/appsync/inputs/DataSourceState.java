// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.appsync.inputs;

import io.pulumi.aws.appsync.inputs.DataSourceDynamodbConfigGetArgs;
import io.pulumi.aws.appsync.inputs.DataSourceElasticsearchConfigGetArgs;
import io.pulumi.aws.appsync.inputs.DataSourceHttpConfigGetArgs;
import io.pulumi.aws.appsync.inputs.DataSourceLambdaConfigGetArgs;
import io.pulumi.aws.appsync.inputs.DataSourceRelationalDatabaseConfigGetArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class DataSourceState extends io.pulumi.resources.ResourceArgs {

    public static final DataSourceState Empty = new DataSourceState();

    /**
     * The API ID for the GraphQL API for the DataSource.
     * 
     */
    @Import(name="apiId")
      private final @Nullable Output<String> apiId;

    public Output<String> getApiId() {
        return this.apiId == null ? Codegen.empty() : this.apiId;
    }

    /**
     * The ARN
     * 
     */
    @Import(name="arn")
      private final @Nullable Output<String> arn;

    public Output<String> getArn() {
        return this.arn == null ? Codegen.empty() : this.arn;
    }

    /**
     * A description of the DataSource.
     * 
     */
    @Import(name="description")
      private final @Nullable Output<String> description;

    public Output<String> getDescription() {
        return this.description == null ? Codegen.empty() : this.description;
    }

    /**
     * DynamoDB settings. See below
     * 
     */
    @Import(name="dynamodbConfig")
      private final @Nullable Output<DataSourceDynamodbConfigGetArgs> dynamodbConfig;

    public Output<DataSourceDynamodbConfigGetArgs> getDynamodbConfig() {
        return this.dynamodbConfig == null ? Codegen.empty() : this.dynamodbConfig;
    }

    /**
     * Amazon Elasticsearch settings. See below
     * 
     */
    @Import(name="elasticsearchConfig")
      private final @Nullable Output<DataSourceElasticsearchConfigGetArgs> elasticsearchConfig;

    public Output<DataSourceElasticsearchConfigGetArgs> getElasticsearchConfig() {
        return this.elasticsearchConfig == null ? Codegen.empty() : this.elasticsearchConfig;
    }

    /**
     * HTTP settings. See below
     * 
     */
    @Import(name="httpConfig")
      private final @Nullable Output<DataSourceHttpConfigGetArgs> httpConfig;

    public Output<DataSourceHttpConfigGetArgs> getHttpConfig() {
        return this.httpConfig == null ? Codegen.empty() : this.httpConfig;
    }

    /**
     * AWS Lambda settings. See below
     * 
     */
    @Import(name="lambdaConfig")
      private final @Nullable Output<DataSourceLambdaConfigGetArgs> lambdaConfig;

    public Output<DataSourceLambdaConfigGetArgs> getLambdaConfig() {
        return this.lambdaConfig == null ? Codegen.empty() : this.lambdaConfig;
    }

    /**
     * A user-supplied name for the DataSource.
     * 
     */
    @Import(name="name")
      private final @Nullable Output<String> name;

    public Output<String> getName() {
        return this.name == null ? Codegen.empty() : this.name;
    }

    /**
     * AWS RDS settings. See Relational Database Config
     * 
     */
    @Import(name="relationalDatabaseConfig")
      private final @Nullable Output<DataSourceRelationalDatabaseConfigGetArgs> relationalDatabaseConfig;

    public Output<DataSourceRelationalDatabaseConfigGetArgs> getRelationalDatabaseConfig() {
        return this.relationalDatabaseConfig == null ? Codegen.empty() : this.relationalDatabaseConfig;
    }

    /**
     * The IAM service role ARN for the data source.
     * 
     */
    @Import(name="serviceRoleArn")
      private final @Nullable Output<String> serviceRoleArn;

    public Output<String> getServiceRoleArn() {
        return this.serviceRoleArn == null ? Codegen.empty() : this.serviceRoleArn;
    }

    /**
     * The type of the DataSource. Valid values: `AWS_LAMBDA`, `AMAZON_DYNAMODB`, `AMAZON_ELASTICSEARCH`, `HTTP`, `NONE`, `RELATIONAL_DATABASE`.
     * 
     */
    @Import(name="type")
      private final @Nullable Output<String> type;

    public Output<String> getType() {
        return this.type == null ? Codegen.empty() : this.type;
    }

    public DataSourceState(
        @Nullable Output<String> apiId,
        @Nullable Output<String> arn,
        @Nullable Output<String> description,
        @Nullable Output<DataSourceDynamodbConfigGetArgs> dynamodbConfig,
        @Nullable Output<DataSourceElasticsearchConfigGetArgs> elasticsearchConfig,
        @Nullable Output<DataSourceHttpConfigGetArgs> httpConfig,
        @Nullable Output<DataSourceLambdaConfigGetArgs> lambdaConfig,
        @Nullable Output<String> name,
        @Nullable Output<DataSourceRelationalDatabaseConfigGetArgs> relationalDatabaseConfig,
        @Nullable Output<String> serviceRoleArn,
        @Nullable Output<String> type) {
        this.apiId = apiId;
        this.arn = arn;
        this.description = description;
        this.dynamodbConfig = dynamodbConfig;
        this.elasticsearchConfig = elasticsearchConfig;
        this.httpConfig = httpConfig;
        this.lambdaConfig = lambdaConfig;
        this.name = name;
        this.relationalDatabaseConfig = relationalDatabaseConfig;
        this.serviceRoleArn = serviceRoleArn;
        this.type = type;
    }

    private DataSourceState() {
        this.apiId = Codegen.empty();
        this.arn = Codegen.empty();
        this.description = Codegen.empty();
        this.dynamodbConfig = Codegen.empty();
        this.elasticsearchConfig = Codegen.empty();
        this.httpConfig = Codegen.empty();
        this.lambdaConfig = Codegen.empty();
        this.name = Codegen.empty();
        this.relationalDatabaseConfig = Codegen.empty();
        this.serviceRoleArn = Codegen.empty();
        this.type = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DataSourceState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> apiId;
        private @Nullable Output<String> arn;
        private @Nullable Output<String> description;
        private @Nullable Output<DataSourceDynamodbConfigGetArgs> dynamodbConfig;
        private @Nullable Output<DataSourceElasticsearchConfigGetArgs> elasticsearchConfig;
        private @Nullable Output<DataSourceHttpConfigGetArgs> httpConfig;
        private @Nullable Output<DataSourceLambdaConfigGetArgs> lambdaConfig;
        private @Nullable Output<String> name;
        private @Nullable Output<DataSourceRelationalDatabaseConfigGetArgs> relationalDatabaseConfig;
        private @Nullable Output<String> serviceRoleArn;
        private @Nullable Output<String> type;

        public Builder() {
    	      // Empty
        }

        public Builder(DataSourceState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.apiId = defaults.apiId;
    	      this.arn = defaults.arn;
    	      this.description = defaults.description;
    	      this.dynamodbConfig = defaults.dynamodbConfig;
    	      this.elasticsearchConfig = defaults.elasticsearchConfig;
    	      this.httpConfig = defaults.httpConfig;
    	      this.lambdaConfig = defaults.lambdaConfig;
    	      this.name = defaults.name;
    	      this.relationalDatabaseConfig = defaults.relationalDatabaseConfig;
    	      this.serviceRoleArn = defaults.serviceRoleArn;
    	      this.type = defaults.type;
        }

        public Builder apiId(@Nullable Output<String> apiId) {
            this.apiId = apiId;
            return this;
        }
        public Builder apiId(@Nullable String apiId) {
            this.apiId = Codegen.ofNullable(apiId);
            return this;
        }
        public Builder arn(@Nullable Output<String> arn) {
            this.arn = arn;
            return this;
        }
        public Builder arn(@Nullable String arn) {
            this.arn = Codegen.ofNullable(arn);
            return this;
        }
        public Builder description(@Nullable Output<String> description) {
            this.description = description;
            return this;
        }
        public Builder description(@Nullable String description) {
            this.description = Codegen.ofNullable(description);
            return this;
        }
        public Builder dynamodbConfig(@Nullable Output<DataSourceDynamodbConfigGetArgs> dynamodbConfig) {
            this.dynamodbConfig = dynamodbConfig;
            return this;
        }
        public Builder dynamodbConfig(@Nullable DataSourceDynamodbConfigGetArgs dynamodbConfig) {
            this.dynamodbConfig = Codegen.ofNullable(dynamodbConfig);
            return this;
        }
        public Builder elasticsearchConfig(@Nullable Output<DataSourceElasticsearchConfigGetArgs> elasticsearchConfig) {
            this.elasticsearchConfig = elasticsearchConfig;
            return this;
        }
        public Builder elasticsearchConfig(@Nullable DataSourceElasticsearchConfigGetArgs elasticsearchConfig) {
            this.elasticsearchConfig = Codegen.ofNullable(elasticsearchConfig);
            return this;
        }
        public Builder httpConfig(@Nullable Output<DataSourceHttpConfigGetArgs> httpConfig) {
            this.httpConfig = httpConfig;
            return this;
        }
        public Builder httpConfig(@Nullable DataSourceHttpConfigGetArgs httpConfig) {
            this.httpConfig = Codegen.ofNullable(httpConfig);
            return this;
        }
        public Builder lambdaConfig(@Nullable Output<DataSourceLambdaConfigGetArgs> lambdaConfig) {
            this.lambdaConfig = lambdaConfig;
            return this;
        }
        public Builder lambdaConfig(@Nullable DataSourceLambdaConfigGetArgs lambdaConfig) {
            this.lambdaConfig = Codegen.ofNullable(lambdaConfig);
            return this;
        }
        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }
        public Builder name(@Nullable String name) {
            this.name = Codegen.ofNullable(name);
            return this;
        }
        public Builder relationalDatabaseConfig(@Nullable Output<DataSourceRelationalDatabaseConfigGetArgs> relationalDatabaseConfig) {
            this.relationalDatabaseConfig = relationalDatabaseConfig;
            return this;
        }
        public Builder relationalDatabaseConfig(@Nullable DataSourceRelationalDatabaseConfigGetArgs relationalDatabaseConfig) {
            this.relationalDatabaseConfig = Codegen.ofNullable(relationalDatabaseConfig);
            return this;
        }
        public Builder serviceRoleArn(@Nullable Output<String> serviceRoleArn) {
            this.serviceRoleArn = serviceRoleArn;
            return this;
        }
        public Builder serviceRoleArn(@Nullable String serviceRoleArn) {
            this.serviceRoleArn = Codegen.ofNullable(serviceRoleArn);
            return this;
        }
        public Builder type(@Nullable Output<String> type) {
            this.type = type;
            return this;
        }
        public Builder type(@Nullable String type) {
            this.type = Codegen.ofNullable(type);
            return this;
        }        public DataSourceState build() {
            return new DataSourceState(apiId, arn, description, dynamodbConfig, elasticsearchConfig, httpConfig, lambdaConfig, name, relationalDatabaseConfig, serviceRoleArn, type);
        }
    }
}
