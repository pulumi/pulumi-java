// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.ecs;

import io.pulumi.aws.ecs.inputs.ClusterConfigurationArgs;
import io.pulumi.aws.ecs.inputs.ClusterDefaultCapacityProviderStrategyArgs;
import io.pulumi.aws.ecs.inputs.ClusterSettingArgs;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ClusterArgs extends io.pulumi.resources.ResourceArgs {

    public static final ClusterArgs Empty = new ClusterArgs();

    /**
     * List of short names of one or more capacity providers to associate with the cluster. Valid values also include `FARGATE` and `FARGATE_SPOT`.
     * 
     */
    @InputImport(name="capacityProviders")
      private final @Nullable Input<List<String>> capacityProviders;

    public Input<List<String>> getCapacityProviders() {
        return this.capacityProviders == null ? Input.empty() : this.capacityProviders;
    }

    /**
     * The execute command configuration for the cluster. Detailed below.
     * 
     */
    @InputImport(name="configuration")
      private final @Nullable Input<ClusterConfigurationArgs> configuration;

    public Input<ClusterConfigurationArgs> getConfiguration() {
        return this.configuration == null ? Input.empty() : this.configuration;
    }

    /**
     * Configuration block for capacity provider strategy to use by default for the cluster. Can be one or more. Detailed below.
     * 
     */
    @InputImport(name="defaultCapacityProviderStrategies")
      private final @Nullable Input<List<ClusterDefaultCapacityProviderStrategyArgs>> defaultCapacityProviderStrategies;

    public Input<List<ClusterDefaultCapacityProviderStrategyArgs>> getDefaultCapacityProviderStrategies() {
        return this.defaultCapacityProviderStrategies == null ? Input.empty() : this.defaultCapacityProviderStrategies;
    }

    /**
     * Name of the setting to manage. Valid values: `containerInsights`.
     * 
     */
    @InputImport(name="name")
      private final @Nullable Input<String> name;

    public Input<String> getName() {
        return this.name == null ? Input.empty() : this.name;
    }

    /**
     * Configuration block(s) with cluster settings. For example, this can be used to enable CloudWatch Container Insights for a cluster. Detailed below.
     * 
     */
    @InputImport(name="settings")
      private final @Nullable Input<List<ClusterSettingArgs>> settings;

    public Input<List<ClusterSettingArgs>> getSettings() {
        return this.settings == null ? Input.empty() : this.settings;
    }

    /**
     * Key-value map of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @InputImport(name="tags")
      private final @Nullable Input<Map<String,String>> tags;

    public Input<Map<String,String>> getTags() {
        return this.tags == null ? Input.empty() : this.tags;
    }

    public ClusterArgs(
        @Nullable Input<List<String>> capacityProviders,
        @Nullable Input<ClusterConfigurationArgs> configuration,
        @Nullable Input<List<ClusterDefaultCapacityProviderStrategyArgs>> defaultCapacityProviderStrategies,
        @Nullable Input<String> name,
        @Nullable Input<List<ClusterSettingArgs>> settings,
        @Nullable Input<Map<String,String>> tags) {
        this.capacityProviders = capacityProviders;
        this.configuration = configuration;
        this.defaultCapacityProviderStrategies = defaultCapacityProviderStrategies;
        this.name = name;
        this.settings = settings;
        this.tags = tags;
    }

    private ClusterArgs() {
        this.capacityProviders = Input.empty();
        this.configuration = Input.empty();
        this.defaultCapacityProviderStrategies = Input.empty();
        this.name = Input.empty();
        this.settings = Input.empty();
        this.tags = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ClusterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<List<String>> capacityProviders;
        private @Nullable Input<ClusterConfigurationArgs> configuration;
        private @Nullable Input<List<ClusterDefaultCapacityProviderStrategyArgs>> defaultCapacityProviderStrategies;
        private @Nullable Input<String> name;
        private @Nullable Input<List<ClusterSettingArgs>> settings;
        private @Nullable Input<Map<String,String>> tags;

        public Builder() {
    	      // Empty
        }

        public Builder(ClusterArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.capacityProviders = defaults.capacityProviders;
    	      this.configuration = defaults.configuration;
    	      this.defaultCapacityProviderStrategies = defaults.defaultCapacityProviderStrategies;
    	      this.name = defaults.name;
    	      this.settings = defaults.settings;
    	      this.tags = defaults.tags;
        }

        public Builder setCapacityProviders(@Nullable Input<List<String>> capacityProviders) {
            this.capacityProviders = capacityProviders;
            return this;
        }

        public Builder setCapacityProviders(@Nullable List<String> capacityProviders) {
            this.capacityProviders = Input.ofNullable(capacityProviders);
            return this;
        }

        public Builder setConfiguration(@Nullable Input<ClusterConfigurationArgs> configuration) {
            this.configuration = configuration;
            return this;
        }

        public Builder setConfiguration(@Nullable ClusterConfigurationArgs configuration) {
            this.configuration = Input.ofNullable(configuration);
            return this;
        }

        public Builder setDefaultCapacityProviderStrategies(@Nullable Input<List<ClusterDefaultCapacityProviderStrategyArgs>> defaultCapacityProviderStrategies) {
            this.defaultCapacityProviderStrategies = defaultCapacityProviderStrategies;
            return this;
        }

        public Builder setDefaultCapacityProviderStrategies(@Nullable List<ClusterDefaultCapacityProviderStrategyArgs> defaultCapacityProviderStrategies) {
            this.defaultCapacityProviderStrategies = Input.ofNullable(defaultCapacityProviderStrategies);
            return this;
        }

        public Builder setName(@Nullable Input<String> name) {
            this.name = name;
            return this;
        }

        public Builder setName(@Nullable String name) {
            this.name = Input.ofNullable(name);
            return this;
        }

        public Builder setSettings(@Nullable Input<List<ClusterSettingArgs>> settings) {
            this.settings = settings;
            return this;
        }

        public Builder setSettings(@Nullable List<ClusterSettingArgs> settings) {
            this.settings = Input.ofNullable(settings);
            return this;
        }

        public Builder setTags(@Nullable Input<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }

        public Builder setTags(@Nullable Map<String,String> tags) {
            this.tags = Input.ofNullable(tags);
            return this;
        }
        public ClusterArgs build() {
            return new ClusterArgs(capacityProviders, configuration, defaultCapacityProviderStrategies, name, settings, tags);
        }
    }
}
