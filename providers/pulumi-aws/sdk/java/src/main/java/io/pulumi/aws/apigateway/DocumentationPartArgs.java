// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.apigateway;

import io.pulumi.aws.apigateway.inputs.DocumentationPartLocationArgs;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;


public final class DocumentationPartArgs extends io.pulumi.resources.ResourceArgs {

    public static final DocumentationPartArgs Empty = new DocumentationPartArgs();

    /**
     * The location of the targeted API entity of the to-be-created documentation part. See below.
     * 
     */
    @InputImport(name="location", required=true)
      private final Input<DocumentationPartLocationArgs> location;

    public Input<DocumentationPartLocationArgs> getLocation() {
        return this.location;
    }

    /**
     * A content map of API-specific key-value pairs describing the targeted API entity. The map must be encoded as a JSON string, e.g., "{ \"description\": \"The API does ...\" }". Only Swagger-compliant key-value pairs can be exported and, hence, published.
     * 
     */
    @InputImport(name="properties", required=true)
      private final Input<String> properties;

    public Input<String> getProperties() {
        return this.properties;
    }

    /**
     * The ID of the associated Rest API
     * 
     */
    @InputImport(name="restApiId", required=true)
      private final Input<String> restApiId;

    public Input<String> getRestApiId() {
        return this.restApiId;
    }

    public DocumentationPartArgs(
        Input<DocumentationPartLocationArgs> location,
        Input<String> properties,
        Input<String> restApiId) {
        this.location = Objects.requireNonNull(location, "expected parameter 'location' to be non-null");
        this.properties = Objects.requireNonNull(properties, "expected parameter 'properties' to be non-null");
        this.restApiId = Objects.requireNonNull(restApiId, "expected parameter 'restApiId' to be non-null");
    }

    private DocumentationPartArgs() {
        this.location = Input.empty();
        this.properties = Input.empty();
        this.restApiId = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DocumentationPartArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<DocumentationPartLocationArgs> location;
        private Input<String> properties;
        private Input<String> restApiId;

        public Builder() {
    	      // Empty
        }

        public Builder(DocumentationPartArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.location = defaults.location;
    	      this.properties = defaults.properties;
    	      this.restApiId = defaults.restApiId;
        }

        public Builder setLocation(Input<DocumentationPartLocationArgs> location) {
            this.location = Objects.requireNonNull(location);
            return this;
        }

        public Builder setLocation(DocumentationPartLocationArgs location) {
            this.location = Input.of(Objects.requireNonNull(location));
            return this;
        }

        public Builder setProperties(Input<String> properties) {
            this.properties = Objects.requireNonNull(properties);
            return this;
        }

        public Builder setProperties(String properties) {
            this.properties = Input.of(Objects.requireNonNull(properties));
            return this;
        }

        public Builder setRestApiId(Input<String> restApiId) {
            this.restApiId = Objects.requireNonNull(restApiId);
            return this;
        }

        public Builder setRestApiId(String restApiId) {
            this.restApiId = Input.of(Objects.requireNonNull(restApiId));
            return this;
        }
        public DocumentationPartArgs build() {
            return new DocumentationPartArgs(location, properties, restApiId);
        }
    }
}
