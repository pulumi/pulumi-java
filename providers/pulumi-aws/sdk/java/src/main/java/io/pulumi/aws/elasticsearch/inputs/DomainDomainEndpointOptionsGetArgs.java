// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.elasticsearch.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class DomainDomainEndpointOptionsGetArgs extends io.pulumi.resources.ResourceArgs {

    public static final DomainDomainEndpointOptionsGetArgs Empty = new DomainDomainEndpointOptionsGetArgs();

    /**
     * Fully qualified domain for your custom endpoint.
     * 
     */
    @Import(name="customEndpoint")
      private final @Nullable Output<String> customEndpoint;

    public Output<String> getCustomEndpoint() {
        return this.customEndpoint == null ? Codegen.empty() : this.customEndpoint;
    }

    /**
     * ACM certificate ARN for your custom endpoint.
     * 
     */
    @Import(name="customEndpointCertificateArn")
      private final @Nullable Output<String> customEndpointCertificateArn;

    public Output<String> getCustomEndpointCertificateArn() {
        return this.customEndpointCertificateArn == null ? Codegen.empty() : this.customEndpointCertificateArn;
    }

    /**
     * Whether to enable custom endpoint for the Elasticsearch domain.
     * 
     */
    @Import(name="customEndpointEnabled")
      private final @Nullable Output<Boolean> customEndpointEnabled;

    public Output<Boolean> getCustomEndpointEnabled() {
        return this.customEndpointEnabled == null ? Codegen.empty() : this.customEndpointEnabled;
    }

    /**
     * Whether or not to require HTTPS. Defaults to `true`.
     * 
     */
    @Import(name="enforceHttps")
      private final @Nullable Output<Boolean> enforceHttps;

    public Output<Boolean> getEnforceHttps() {
        return this.enforceHttps == null ? Codegen.empty() : this.enforceHttps;
    }

    @Import(name="tlsSecurityPolicy")
      private final @Nullable Output<String> tlsSecurityPolicy;

    public Output<String> getTlsSecurityPolicy() {
        return this.tlsSecurityPolicy == null ? Codegen.empty() : this.tlsSecurityPolicy;
    }

    public DomainDomainEndpointOptionsGetArgs(
        @Nullable Output<String> customEndpoint,
        @Nullable Output<String> customEndpointCertificateArn,
        @Nullable Output<Boolean> customEndpointEnabled,
        @Nullable Output<Boolean> enforceHttps,
        @Nullable Output<String> tlsSecurityPolicy) {
        this.customEndpoint = customEndpoint;
        this.customEndpointCertificateArn = customEndpointCertificateArn;
        this.customEndpointEnabled = customEndpointEnabled;
        this.enforceHttps = enforceHttps;
        this.tlsSecurityPolicy = tlsSecurityPolicy;
    }

    private DomainDomainEndpointOptionsGetArgs() {
        this.customEndpoint = Codegen.empty();
        this.customEndpointCertificateArn = Codegen.empty();
        this.customEndpointEnabled = Codegen.empty();
        this.enforceHttps = Codegen.empty();
        this.tlsSecurityPolicy = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DomainDomainEndpointOptionsGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> customEndpoint;
        private @Nullable Output<String> customEndpointCertificateArn;
        private @Nullable Output<Boolean> customEndpointEnabled;
        private @Nullable Output<Boolean> enforceHttps;
        private @Nullable Output<String> tlsSecurityPolicy;

        public Builder() {
    	      // Empty
        }

        public Builder(DomainDomainEndpointOptionsGetArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.customEndpoint = defaults.customEndpoint;
    	      this.customEndpointCertificateArn = defaults.customEndpointCertificateArn;
    	      this.customEndpointEnabled = defaults.customEndpointEnabled;
    	      this.enforceHttps = defaults.enforceHttps;
    	      this.tlsSecurityPolicy = defaults.tlsSecurityPolicy;
        }

        public Builder customEndpoint(@Nullable Output<String> customEndpoint) {
            this.customEndpoint = customEndpoint;
            return this;
        }
        public Builder customEndpoint(@Nullable String customEndpoint) {
            this.customEndpoint = Codegen.ofNullable(customEndpoint);
            return this;
        }
        public Builder customEndpointCertificateArn(@Nullable Output<String> customEndpointCertificateArn) {
            this.customEndpointCertificateArn = customEndpointCertificateArn;
            return this;
        }
        public Builder customEndpointCertificateArn(@Nullable String customEndpointCertificateArn) {
            this.customEndpointCertificateArn = Codegen.ofNullable(customEndpointCertificateArn);
            return this;
        }
        public Builder customEndpointEnabled(@Nullable Output<Boolean> customEndpointEnabled) {
            this.customEndpointEnabled = customEndpointEnabled;
            return this;
        }
        public Builder customEndpointEnabled(@Nullable Boolean customEndpointEnabled) {
            this.customEndpointEnabled = Codegen.ofNullable(customEndpointEnabled);
            return this;
        }
        public Builder enforceHttps(@Nullable Output<Boolean> enforceHttps) {
            this.enforceHttps = enforceHttps;
            return this;
        }
        public Builder enforceHttps(@Nullable Boolean enforceHttps) {
            this.enforceHttps = Codegen.ofNullable(enforceHttps);
            return this;
        }
        public Builder tlsSecurityPolicy(@Nullable Output<String> tlsSecurityPolicy) {
            this.tlsSecurityPolicy = tlsSecurityPolicy;
            return this;
        }
        public Builder tlsSecurityPolicy(@Nullable String tlsSecurityPolicy) {
            this.tlsSecurityPolicy = Codegen.ofNullable(tlsSecurityPolicy);
            return this;
        }        public DomainDomainEndpointOptionsGetArgs build() {
            return new DomainDomainEndpointOptionsGetArgs(customEndpoint, customEndpointCertificateArn, customEndpointEnabled, enforceHttps, tlsSecurityPolicy);
        }
    }
}
