// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.iam;

import io.pulumi.aws.Utilities;
import io.pulumi.aws.iam.UserPolicyArgs;
import io.pulumi.aws.iam.inputs.UserPolicyState;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Export;
import io.pulumi.core.annotations.ResourceType;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * Provides an IAM policy attached to a user.
 * 
 * {{% examples %}}
 * ## Example Usage
 * {{% example %}}
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 * 
 * const lbUser = new aws.iam.User("lbUser", {path: "/system/"});
 * const lbRo = new aws.iam.UserPolicy("lbRo", {
 *     user: lbUser.name,
 *     policy: JSON.stringify({
 *         Version: "2012-10-17",
 *         Statement: [{
 *             Action: ["ec2:Describe*"],
 *             Effect: "Allow",
 *             Resource: "*",
 *         }],
 *     }),
 * });
 * const lbAccessKey = new aws.iam.AccessKey("lbAccessKey", {user: lbUser.name});
 * ```
 * ```python
 * import pulumi
 * import json
 * import pulumi_aws as aws
 * 
 * lb_user = aws.iam.User("lbUser", path="/system/")
 * lb_ro = aws.iam.UserPolicy("lbRo",
 *     user=lb_user.name,
 *     policy=json.dumps({
 *         "Version": "2012-10-17",
 *         "Statement": [{
 *             "Action": ["ec2:Describe*"],
 *             "Effect": "Allow",
 *             "Resource": "*",
 *         }],
 *     }))
 * lb_access_key = aws.iam.AccessKey("lbAccessKey", user=lb_user.name)
 * ```
 * ```csharp
 * using System.Collections.Generic;
 * using System.Text.Json;
 * using Pulumi;
 * using Aws = Pulumi.Aws;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var lbUser = new Aws.Iam.User("lbUser", new Aws.Iam.UserArgs
 *         {
 *             Path = "/system/",
 *         });
 *         var lbRo = new Aws.Iam.UserPolicy("lbRo", new Aws.Iam.UserPolicyArgs
 *         {
 *             User = lbUser.Name,
 *             Policy = JsonSerializer.Serialize(new Dictionary<string, object?>
 *             {
 *                 { "Version", "2012-10-17" },
 *                 { "Statement", new[]
 *                     {
 *                         new Dictionary<string, object?>
 *                         {
 *                             { "Action", new[]
 *                                 {
 *                                     "ec2:Describe*",
 *                                 }
 *                              },
 *                             { "Effect", "Allow" },
 *                             { "Resource", "*" },
 *                         },
 *                     }
 *                  },
 *             }),
 *         });
 *         var lbAccessKey = new Aws.Iam.AccessKey("lbAccessKey", new Aws.Iam.AccessKeyArgs
 *         {
 *             User = lbUser.Name,
 *         });
 *     }
 * 
 * }
 * ```
 * ```go
 * package main
 * 
 * import (
 * 	"encoding/json"
 * 
 * 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/iam"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		lbUser, err := iam.NewUser(ctx, "lbUser", &iam.UserArgs{
 * 			Path: pulumi.String("/system/"),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		tmpJSON0, err := json.Marshal(map[string]interface{}{
 * 			"Version": "2012-10-17",
 * 			"Statement": []map[string]interface{}{
 * 				map[string]interface{}{
 * 					"Action": []string{
 * 						"ec2:Describe*",
 * 					},
 * 					"Effect":   "Allow",
 * 					"Resource": "*",
 * 				},
 * 			},
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		json0 := string(tmpJSON0)
 * 		_, err = iam.NewUserPolicy(ctx, "lbRo", &iam.UserPolicyArgs{
 * 			User:   lbUser.Name,
 * 			Policy: pulumi.String(json0),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		_, err = iam.NewAccessKey(ctx, "lbAccessKey", &iam.AccessKeyArgs{
 * 			User: lbUser.Name,
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * ```
 * {{% /example %}}
 * {{% /examples %}}
 * 
 * ## Import
 * 
 * IAM User Policies can be imported using the `user_name:user_policy_name`, e.g.,
 * 
 * ```sh
 *  $ pulumi import aws:iam/userPolicy:UserPolicy mypolicy user_of_mypolicy_name:mypolicy_name
 * ```
 * 
 *  
 */
@ResourceType(type="aws:iam/userPolicy:UserPolicy")
public class UserPolicy extends io.pulumi.resources.CustomResource {
    /**
     * The name of the policy. If omitted, this provider will assign a random, unique name.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The name of the policy. If omitted, this provider will assign a random, unique name.
     * 
     */
    public Output<String> getName() {
        return this.name;
    }
    /**
     * Creates a unique name beginning with the specified prefix. Conflicts with `name`.
     * 
     */
    @Export(name="namePrefix", type=String.class, parameters={})
    private Output</* @Nullable */ String> namePrefix;

    /**
     * @return Creates a unique name beginning with the specified prefix. Conflicts with `name`.
     * 
     */
    public Output</* @Nullable */ String> getNamePrefix() {
        return this.namePrefix;
    }
    /**
     * The policy document. This is a JSON formatted string.
     * 
     */
    @Export(name="policy", type=String.class, parameters={})
    private Output<String> policy;

    /**
     * @return The policy document. This is a JSON formatted string.
     * 
     */
    public Output<String> getPolicy() {
        return this.policy;
    }
    /**
     * IAM user to which to attach this policy.
     * 
     */
    @Export(name="user", type=String.class, parameters={})
    private Output<String> user;

    /**
     * @return IAM user to which to attach this policy.
     * 
     */
    public Output<String> getUser() {
        return this.user;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public UserPolicy(String name) {
        this(name, UserPolicyArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public UserPolicy(String name, UserPolicyArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public UserPolicy(String name, UserPolicyArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:iam/userPolicy:UserPolicy", name, args == null ? UserPolicyArgs.Empty : args, makeResourceOptions(options, Output.empty()));
    }

    private UserPolicy(String name, Output<String> id, @Nullable UserPolicyState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:iam/userPolicy:UserPolicy", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static UserPolicy get(String name, Output<String> id, @Nullable UserPolicyState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new UserPolicy(name, id, state, options);
    }
}
