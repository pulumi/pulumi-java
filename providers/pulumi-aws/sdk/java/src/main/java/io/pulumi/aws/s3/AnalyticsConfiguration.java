// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.s3;

import io.pulumi.aws.Utilities;
import io.pulumi.aws.s3.AnalyticsConfigurationArgs;
import io.pulumi.aws.s3.inputs.AnalyticsConfigurationState;
import io.pulumi.aws.s3.outputs.AnalyticsConfigurationFilter;
import io.pulumi.aws.s3.outputs.AnalyticsConfigurationStorageClassAnalysis;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Export;
import io.pulumi.core.annotations.ResourceType;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * Provides a S3 bucket [analytics configuration](https://docs.aws.amazon.com/AmazonS3/latest/dev/analytics-storage-class.html) resource.
 * 
 * {{% examples %}}
 * ## Example Usage
 * {{% example %}}
 * ### Add analytics configuration for entire S3 bucket and export results to a second S3 bucket
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 * 
 * const example = new aws.s3.Bucket("example", {});
 * const analytics = new aws.s3.Bucket("analytics", {});
 * const example_entire_bucket = new aws.s3.AnalyticsConfiguration("example-entire-bucket", {
 *     bucket: example.bucket,
 *     storageClassAnalysis: {
 *         dataExport: {
 *             destination: {
 *                 s3BucketDestination: {
 *                     bucketArn: analytics.arn,
 *                 },
 *             },
 *         },
 *     },
 * });
 * ```
 * ```python
 * import pulumi
 * import pulumi_aws as aws
 * 
 * example = aws.s3.Bucket("example")
 * analytics = aws.s3.Bucket("analytics")
 * example_entire_bucket = aws.s3.AnalyticsConfiguration("example-entire-bucket",
 *     bucket=example.bucket,
 *     storage_class_analysis=aws.s3.AnalyticsConfigurationStorageClassAnalysisArgs(
 *         data_export=aws.s3.AnalyticsConfigurationStorageClassAnalysisDataExportArgs(
 *             destination=aws.s3.AnalyticsConfigurationStorageClassAnalysisDataExportDestinationArgs(
 *                 s3_bucket_destination=aws.s3.AnalyticsConfigurationStorageClassAnalysisDataExportDestinationS3BucketDestinationArgs(
 *                     bucket_arn=analytics.arn,
 *                 ),
 *             ),
 *         ),
 *     ))
 * ```
 * ```csharp
 * using Pulumi;
 * using Aws = Pulumi.Aws;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var example = new Aws.S3.Bucket("example", new Aws.S3.BucketArgs
 *         {
 *         });
 *         var analytics = new Aws.S3.Bucket("analytics", new Aws.S3.BucketArgs
 *         {
 *         });
 *         var example_entire_bucket = new Aws.S3.AnalyticsConfiguration("example-entire-bucket", new Aws.S3.AnalyticsConfigurationArgs
 *         {
 *             Bucket = example.BucketName,
 *             StorageClassAnalysis = new Aws.S3.Inputs.AnalyticsConfigurationStorageClassAnalysisArgs
 *             {
 *                 DataExport = new Aws.S3.Inputs.AnalyticsConfigurationStorageClassAnalysisDataExportArgs
 *                 {
 *                     Destination = new Aws.S3.Inputs.AnalyticsConfigurationStorageClassAnalysisDataExportDestinationArgs
 *                     {
 *                         S3BucketDestination = new Aws.S3.Inputs.AnalyticsConfigurationStorageClassAnalysisDataExportDestinationS3BucketDestinationArgs
 *                         {
 *                             BucketArn = analytics.Arn,
 *                         },
 *                     },
 *                 },
 *             },
 *         });
 *     }
 * 
 * }
 * ```
 * ```go
 * package main
 * 
 * import (
 * 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/s3"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		example, err := s3.NewBucket(ctx, "example", nil)
 * 		if err != nil {
 * 			return err
 * 		}
 * 		analytics, err := s3.NewBucket(ctx, "analytics", nil)
 * 		if err != nil {
 * 			return err
 * 		}
 * 		_, err = s3.NewAnalyticsConfiguration(ctx, "example-entire-bucket", &s3.AnalyticsConfigurationArgs{
 * 			Bucket: example.Bucket,
 * 			StorageClassAnalysis: &s3.AnalyticsConfigurationStorageClassAnalysisArgs{
 * 				DataExport: &s3.AnalyticsConfigurationStorageClassAnalysisDataExportArgs{
 * 					Destination: &s3.AnalyticsConfigurationStorageClassAnalysisDataExportDestinationArgs{
 * 						S3BucketDestination: &s3.AnalyticsConfigurationStorageClassAnalysisDataExportDestinationS3BucketDestinationArgs{
 * 							BucketArn: analytics.Arn,
 * 						},
 * 					},
 * 				},
 * 			},
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * ```
 * {{% /example %}}
 * {{% example %}}
 * ### Add analytics configuration with S3 bucket object filter
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 * 
 * const example = new aws.s3.Bucket("example", {});
 * const example_filtered = new aws.s3.AnalyticsConfiguration("example-filtered", {
 *     bucket: example.bucket,
 *     filter: {
 *         prefix: "documents/",
 *         tags: {
 *             priority: "high",
 *             "class": "blue",
 *         },
 *     },
 * });
 * ```
 * ```python
 * import pulumi
 * import pulumi_aws as aws
 * 
 * example = aws.s3.Bucket("example")
 * example_filtered = aws.s3.AnalyticsConfiguration("example-filtered",
 *     bucket=example.bucket,
 *     filter=aws.s3.AnalyticsConfigurationFilterArgs(
 *         prefix="documents/",
 *         tags={
 *             "priority": "high",
 *             "class": "blue",
 *         },
 *     ))
 * ```
 * ```csharp
 * using Pulumi;
 * using Aws = Pulumi.Aws;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var example = new Aws.S3.Bucket("example", new Aws.S3.BucketArgs
 *         {
 *         });
 *         var example_filtered = new Aws.S3.AnalyticsConfiguration("example-filtered", new Aws.S3.AnalyticsConfigurationArgs
 *         {
 *             Bucket = example.BucketName,
 *             Filter = new Aws.S3.Inputs.AnalyticsConfigurationFilterArgs
 *             {
 *                 Prefix = "documents/",
 *                 Tags = 
 *                 {
 *                     { "priority", "high" },
 *                     { "class", "blue" },
 *                 },
 *             },
 *         });
 *     }
 * 
 * }
 * ```
 * ```go
 * package main
 * 
 * import (
 * 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/s3"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		example, err := s3.NewBucket(ctx, "example", nil)
 * 		if err != nil {
 * 			return err
 * 		}
 * 		_, err = s3.NewAnalyticsConfiguration(ctx, "example-filtered", &s3.AnalyticsConfigurationArgs{
 * 			Bucket: example.Bucket,
 * 			Filter: &s3.AnalyticsConfigurationFilterArgs{
 * 				Prefix: pulumi.String("documents/"),
 * 				Tags: pulumi.StringMap{
 * 					"priority": pulumi.String("high"),
 * 					"class":    pulumi.String("blue"),
 * 				},
 * 			},
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * ```
 * {{% /example %}}
 * {{% /examples %}}
 * 
 * ## Import
 * 
 * S3 bucket analytics configurations can be imported using `bucket:analytics`, e.g.,
 * 
 * ```sh
 *  $ pulumi import aws:s3/analyticsConfiguration:AnalyticsConfiguration my-bucket-entire-bucket my-bucket:EntireBucket
 * ```
 * 
 *  
 */
@ResourceType(type="aws:s3/analyticsConfiguration:AnalyticsConfiguration")
public class AnalyticsConfiguration extends io.pulumi.resources.CustomResource {
    /**
     * The name of the bucket this analytics configuration is associated with.
     * 
     */
    @Export(name="bucket", type=String.class, parameters={})
    private Output<String> bucket;

    /**
     * @return The name of the bucket this analytics configuration is associated with.
     * 
     */
    public Output<String> getBucket() {
        return this.bucket;
    }
    /**
     * Object filtering that accepts a prefix, tags, or a logical AND of prefix and tags (documented below).
     * 
     */
    @Export(name="filter", type=AnalyticsConfigurationFilter.class, parameters={})
    private Output</* @Nullable */ AnalyticsConfigurationFilter> filter;

    /**
     * @return Object filtering that accepts a prefix, tags, or a logical AND of prefix and tags (documented below).
     * 
     */
    public Output</* @Nullable */ AnalyticsConfigurationFilter> getFilter() {
        return this.filter;
    }
    /**
     * Unique identifier of the analytics configuration for the bucket.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return Unique identifier of the analytics configuration for the bucket.
     * 
     */
    public Output<String> getName() {
        return this.name;
    }
    /**
     * Configuration for the analytics data export (documented below).
     * 
     */
    @Export(name="storageClassAnalysis", type=AnalyticsConfigurationStorageClassAnalysis.class, parameters={})
    private Output</* @Nullable */ AnalyticsConfigurationStorageClassAnalysis> storageClassAnalysis;

    /**
     * @return Configuration for the analytics data export (documented below).
     * 
     */
    public Output</* @Nullable */ AnalyticsConfigurationStorageClassAnalysis> getStorageClassAnalysis() {
        return this.storageClassAnalysis;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public AnalyticsConfiguration(String name) {
        this(name, AnalyticsConfigurationArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public AnalyticsConfiguration(String name, AnalyticsConfigurationArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public AnalyticsConfiguration(String name, AnalyticsConfigurationArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:s3/analyticsConfiguration:AnalyticsConfiguration", name, args == null ? AnalyticsConfigurationArgs.Empty : args, makeResourceOptions(options, Output.empty()));
    }

    private AnalyticsConfiguration(String name, Output<String> id, @Nullable AnalyticsConfigurationState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:s3/analyticsConfiguration:AnalyticsConfiguration", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static AnalyticsConfiguration get(String name, Output<String> id, @Nullable AnalyticsConfigurationState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new AnalyticsConfiguration(name, id, state, options);
    }
}
