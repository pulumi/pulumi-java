// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.s3;

import io.pulumi.aws.Utilities;
import io.pulumi.aws.s3.AnalyticsConfigurationArgs;
import io.pulumi.aws.s3.inputs.AnalyticsConfigurationState;
import io.pulumi.aws.s3.outputs.AnalyticsConfigurationFilter;
import io.pulumi.aws.s3.outputs.AnalyticsConfigurationStorageClassAnalysis;
import io.pulumi.core.Input;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.OutputExport;
import io.pulumi.core.annotations.ResourceType;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * Provides a S3 bucket [analytics configuration](https://docs.aws.amazon.com/AmazonS3/latest/dev/analytics-storage-class.html) resource.
 * 
 * ## Example Usage
 * 
 * ## Import
 * 
 * S3 bucket analytics configurations can be imported using `bucket:analytics`, e.g.,
 * 
 * ```sh
 *  $ pulumi import aws:s3/analyticsConfiguration:AnalyticsConfiguration my-bucket-entire-bucket my-bucket:EntireBucket
 * ```
 * 
 */
@ResourceType(type="aws:s3/analyticsConfiguration:AnalyticsConfiguration")
public class AnalyticsConfiguration extends io.pulumi.resources.CustomResource {
    /**
     * The name of the bucket this analytics configuration is associated with.
     * 
     */
    @OutputExport(name="bucket", type=String.class, parameters={})
    private Output<String> bucket;

    /**
     * @return The name of the bucket this analytics configuration is associated with.
     * 
     */
    public Output<String> getBucket() {
        return this.bucket;
    }
    /**
     * Object filtering that accepts a prefix, tags, or a logical AND of prefix and tags (documented below).
     * 
     */
    @OutputExport(name="filter", type=AnalyticsConfigurationFilter.class, parameters={})
    private Output</* @Nullable */ AnalyticsConfigurationFilter> filter;

    /**
     * @return Object filtering that accepts a prefix, tags, or a logical AND of prefix and tags (documented below).
     * 
     */
    public Output</* @Nullable */ AnalyticsConfigurationFilter> getFilter() {
        return this.filter;
    }
    /**
     * Unique identifier of the analytics configuration for the bucket.
     * 
     */
    @OutputExport(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return Unique identifier of the analytics configuration for the bucket.
     * 
     */
    public Output<String> getName() {
        return this.name;
    }
    /**
     * Configuration for the analytics data export (documented below).
     * 
     */
    @OutputExport(name="storageClassAnalysis", type=AnalyticsConfigurationStorageClassAnalysis.class, parameters={})
    private Output</* @Nullable */ AnalyticsConfigurationStorageClassAnalysis> storageClassAnalysis;

    /**
     * @return Configuration for the analytics data export (documented below).
     * 
     */
    public Output</* @Nullable */ AnalyticsConfigurationStorageClassAnalysis> getStorageClassAnalysis() {
        return this.storageClassAnalysis;
    }

    public interface BuilderApplicator {
        public void apply(AnalyticsConfigurationArgs.Builder a);
    }
    private static io.pulumi.aws.s3.AnalyticsConfigurationArgs buildArgs(BuilderApplicator argsBuilder) {
        final var builder = io.pulumi.aws.s3.AnalyticsConfigurationArgs.builder();
        argsBuilder.apply(builder);
        return builder.build();
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param argsBuilder A function that configures a passed builder.
     */
    public AnalyticsConfiguration(String name, BuilderApplicator argsBuilder) {
        this(name, buildArgs(argsBuilder), null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public AnalyticsConfiguration(String name) {
        this(name, AnalyticsConfigurationArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public AnalyticsConfiguration(String name, AnalyticsConfigurationArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public AnalyticsConfiguration(String name, AnalyticsConfigurationArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:s3/analyticsConfiguration:AnalyticsConfiguration", name, args == null ? AnalyticsConfigurationArgs.Empty : args, makeResourceOptions(options, Input.empty()));
    }

    private AnalyticsConfiguration(String name, Input<String> id, @Nullable AnalyticsConfigurationState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:s3/analyticsConfiguration:AnalyticsConfiguration", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Input<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .setVersion(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static AnalyticsConfiguration get(String name, Input<String> id, @Nullable AnalyticsConfigurationState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new AnalyticsConfiguration(name, id, state, options);
    }
}
