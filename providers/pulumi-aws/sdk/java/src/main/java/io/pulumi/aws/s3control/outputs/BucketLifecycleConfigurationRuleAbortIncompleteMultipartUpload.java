// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.s3control.outputs;

import io.pulumi.core.annotations.OutputCustomType;
import java.lang.Integer;
import java.util.Objects;

@OutputCustomType
public final class BucketLifecycleConfigurationRuleAbortIncompleteMultipartUpload {
    /**
     * Number of days after which Amazon S3 aborts an incomplete multipart upload.
     * 
     */
    private final Integer daysAfterInitiation;

    @OutputCustomType.Constructor({"daysAfterInitiation"})
    private BucketLifecycleConfigurationRuleAbortIncompleteMultipartUpload(Integer daysAfterInitiation) {
        this.daysAfterInitiation = Objects.requireNonNull(daysAfterInitiation);
    }

    /**
     * Number of days after which Amazon S3 aborts an incomplete multipart upload.
     * 
     */
    public Integer getDaysAfterInitiation() {
        return this.daysAfterInitiation;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BucketLifecycleConfigurationRuleAbortIncompleteMultipartUpload defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Integer daysAfterInitiation;

        public Builder() {
    	      // Empty
        }

        public Builder(BucketLifecycleConfigurationRuleAbortIncompleteMultipartUpload defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.daysAfterInitiation = defaults.daysAfterInitiation;
        }

        public Builder setDaysAfterInitiation(Integer daysAfterInitiation) {
            this.daysAfterInitiation = Objects.requireNonNull(daysAfterInitiation);
            return this;
        }
        public BucketLifecycleConfigurationRuleAbortIncompleteMultipartUpload build() {
            return new BucketLifecycleConfigurationRuleAbortIncompleteMultipartUpload(daysAfterInitiation);
        }
    }
}
