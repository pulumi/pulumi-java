// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.wafv2.inputs;

import io.pulumi.aws.wafv2.inputs.WebAclRuleActionAllowArgs;
import io.pulumi.aws.wafv2.inputs.WebAclRuleActionBlockArgs;
import io.pulumi.aws.wafv2.inputs.WebAclRuleActionCountArgs;
import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.util.Objects;
import javax.annotation.Nullable;


public final class WebAclRuleActionArgs extends io.pulumi.resources.ResourceArgs {

    public static final WebAclRuleActionArgs Empty = new WebAclRuleActionArgs();

    /**
     * Instructs AWS WAF to allow the web request. See Allow below for details.
     * 
     */
    @InputImport(name="allow")
    private final @Nullable Input<WebAclRuleActionAllowArgs> allow;

    public Input<WebAclRuleActionAllowArgs> getAllow() {
        return this.allow == null ? Input.empty() : this.allow;
    }

    /**
     * Instructs AWS WAF to block the web request. See Block below for details.
     * 
     */
    @InputImport(name="block")
    private final @Nullable Input<WebAclRuleActionBlockArgs> block;

    public Input<WebAclRuleActionBlockArgs> getBlock() {
        return this.block == null ? Input.empty() : this.block;
    }

    /**
     * Instructs AWS WAF to count the web request and allow it. See Count below for details.
     * 
     */
    @InputImport(name="count")
    private final @Nullable Input<WebAclRuleActionCountArgs> count;

    public Input<WebAclRuleActionCountArgs> getCount() {
        return this.count == null ? Input.empty() : this.count;
    }

    public WebAclRuleActionArgs(
        @Nullable Input<WebAclRuleActionAllowArgs> allow,
        @Nullable Input<WebAclRuleActionBlockArgs> block,
        @Nullable Input<WebAclRuleActionCountArgs> count) {
        this.allow = allow;
        this.block = block;
        this.count = count;
    }

    private WebAclRuleActionArgs() {
        this.allow = Input.empty();
        this.block = Input.empty();
        this.count = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(WebAclRuleActionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<WebAclRuleActionAllowArgs> allow;
        private @Nullable Input<WebAclRuleActionBlockArgs> block;
        private @Nullable Input<WebAclRuleActionCountArgs> count;

        public Builder() {
    	      // Empty
        }

        public Builder(WebAclRuleActionArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allow = defaults.allow;
    	      this.block = defaults.block;
    	      this.count = defaults.count;
        }

        public Builder setAllow(@Nullable Input<WebAclRuleActionAllowArgs> allow) {
            this.allow = allow;
            return this;
        }

        public Builder setAllow(@Nullable WebAclRuleActionAllowArgs allow) {
            this.allow = Input.ofNullable(allow);
            return this;
        }

        public Builder setBlock(@Nullable Input<WebAclRuleActionBlockArgs> block) {
            this.block = block;
            return this;
        }

        public Builder setBlock(@Nullable WebAclRuleActionBlockArgs block) {
            this.block = Input.ofNullable(block);
            return this;
        }

        public Builder setCount(@Nullable Input<WebAclRuleActionCountArgs> count) {
            this.count = count;
            return this;
        }

        public Builder setCount(@Nullable WebAclRuleActionCountArgs count) {
            this.count = Input.ofNullable(count);
            return this;
        }
        public WebAclRuleActionArgs build() {
            return new WebAclRuleActionArgs(allow, block, count);
        }
    }
}
