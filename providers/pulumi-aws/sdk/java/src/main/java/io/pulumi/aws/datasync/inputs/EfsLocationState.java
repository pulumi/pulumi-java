// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.datasync.inputs;

import io.pulumi.aws.datasync.inputs.EfsLocationEc2ConfigGetArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class EfsLocationState extends io.pulumi.resources.ResourceArgs {

    public static final EfsLocationState Empty = new EfsLocationState();

    /**
     * Amazon Resource Name (ARN) of the DataSync Location.
     * 
     */
    @Import(name="arn")
      private final @Nullable Output<String> arn;

    public Output<String> arn() {
        return this.arn == null ? Codegen.empty() : this.arn;
    }

    /**
     * Configuration block containing EC2 configurations for connecting to the EFS File System.
     * 
     */
    @Import(name="ec2Config")
      private final @Nullable Output<EfsLocationEc2ConfigGetArgs> ec2Config;

    public Output<EfsLocationEc2ConfigGetArgs> ec2Config() {
        return this.ec2Config == null ? Codegen.empty() : this.ec2Config;
    }

    /**
     * Amazon Resource Name (ARN) of EFS File System.
     * 
     */
    @Import(name="efsFileSystemArn")
      private final @Nullable Output<String> efsFileSystemArn;

    public Output<String> efsFileSystemArn() {
        return this.efsFileSystemArn == null ? Codegen.empty() : this.efsFileSystemArn;
    }

    /**
     * Subdirectory to perform actions as source or destination. Default `/`.
     * 
     */
    @Import(name="subdirectory")
      private final @Nullable Output<String> subdirectory;

    public Output<String> subdirectory() {
        return this.subdirectory == null ? Codegen.empty() : this.subdirectory;
    }

    /**
     * Key-value pairs of resource tags to assign to the DataSync Location. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Import(name="tags")
      private final @Nullable Output<Map<String,String>> tags;

    public Output<Map<String,String>> tags() {
        return this.tags == null ? Codegen.empty() : this.tags;
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider .
     * 
     */
    @Import(name="tagsAll")
      private final @Nullable Output<Map<String,String>> tagsAll;

    public Output<Map<String,String>> tagsAll() {
        return this.tagsAll == null ? Codegen.empty() : this.tagsAll;
    }

    @Import(name="uri")
      private final @Nullable Output<String> uri;

    public Output<String> uri() {
        return this.uri == null ? Codegen.empty() : this.uri;
    }

    public EfsLocationState(
        @Nullable Output<String> arn,
        @Nullable Output<EfsLocationEc2ConfigGetArgs> ec2Config,
        @Nullable Output<String> efsFileSystemArn,
        @Nullable Output<String> subdirectory,
        @Nullable Output<Map<String,String>> tags,
        @Nullable Output<Map<String,String>> tagsAll,
        @Nullable Output<String> uri) {
        this.arn = arn;
        this.ec2Config = ec2Config;
        this.efsFileSystemArn = efsFileSystemArn;
        this.subdirectory = subdirectory;
        this.tags = tags;
        this.tagsAll = tagsAll;
        this.uri = uri;
    }

    private EfsLocationState() {
        this.arn = Codegen.empty();
        this.ec2Config = Codegen.empty();
        this.efsFileSystemArn = Codegen.empty();
        this.subdirectory = Codegen.empty();
        this.tags = Codegen.empty();
        this.tagsAll = Codegen.empty();
        this.uri = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(EfsLocationState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> arn;
        private @Nullable Output<EfsLocationEc2ConfigGetArgs> ec2Config;
        private @Nullable Output<String> efsFileSystemArn;
        private @Nullable Output<String> subdirectory;
        private @Nullable Output<Map<String,String>> tags;
        private @Nullable Output<Map<String,String>> tagsAll;
        private @Nullable Output<String> uri;

        public Builder() {
    	      // Empty
        }

        public Builder(EfsLocationState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.ec2Config = defaults.ec2Config;
    	      this.efsFileSystemArn = defaults.efsFileSystemArn;
    	      this.subdirectory = defaults.subdirectory;
    	      this.tags = defaults.tags;
    	      this.tagsAll = defaults.tagsAll;
    	      this.uri = defaults.uri;
        }

        public Builder arn(@Nullable Output<String> arn) {
            this.arn = arn;
            return this;
        }
        public Builder arn(@Nullable String arn) {
            this.arn = Codegen.ofNullable(arn);
            return this;
        }
        public Builder ec2Config(@Nullable Output<EfsLocationEc2ConfigGetArgs> ec2Config) {
            this.ec2Config = ec2Config;
            return this;
        }
        public Builder ec2Config(@Nullable EfsLocationEc2ConfigGetArgs ec2Config) {
            this.ec2Config = Codegen.ofNullable(ec2Config);
            return this;
        }
        public Builder efsFileSystemArn(@Nullable Output<String> efsFileSystemArn) {
            this.efsFileSystemArn = efsFileSystemArn;
            return this;
        }
        public Builder efsFileSystemArn(@Nullable String efsFileSystemArn) {
            this.efsFileSystemArn = Codegen.ofNullable(efsFileSystemArn);
            return this;
        }
        public Builder subdirectory(@Nullable Output<String> subdirectory) {
            this.subdirectory = subdirectory;
            return this;
        }
        public Builder subdirectory(@Nullable String subdirectory) {
            this.subdirectory = Codegen.ofNullable(subdirectory);
            return this;
        }
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = Codegen.ofNullable(tags);
            return this;
        }
        public Builder tagsAll(@Nullable Output<Map<String,String>> tagsAll) {
            this.tagsAll = tagsAll;
            return this;
        }
        public Builder tagsAll(@Nullable Map<String,String> tagsAll) {
            this.tagsAll = Codegen.ofNullable(tagsAll);
            return this;
        }
        public Builder uri(@Nullable Output<String> uri) {
            this.uri = uri;
            return this;
        }
        public Builder uri(@Nullable String uri) {
            this.uri = Codegen.ofNullable(uri);
            return this;
        }        public EfsLocationState build() {
            return new EfsLocationState(arn, ec2Config, efsFileSystemArn, subdirectory, tags, tagsAll, uri);
        }
    }
}
