// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.codepipeline.outputs;

import io.pulumi.core.annotations.OutputCustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class PipelineStageAction {
    /**
     * A category defines what kind of action can be taken in the stage, and constrains the provider type for the action. Possible values are `Approval`, `Build`, `Deploy`, `Invoke`, `Source` and `Test`.
     * 
     */
    private final String category;
    /**
     * A map of the action declaration's configuration. Configurations options for action types and providers can be found in the [Pipeline Structure Reference](http://docs.aws.amazon.com/codepipeline/latest/userguide/reference-pipeline-structure.html#action-requirements) and [Action Structure Reference](https://docs.aws.amazon.com/codepipeline/latest/userguide/action-reference.html) documentation.
     * 
     */
    private final @Nullable Map<String,String> configuration;
    /**
     * A list of artifact names to be worked on.
     * 
     */
    private final @Nullable List<String> inputArtifacts;
    /**
     * The action declaration's name.
     * 
     */
    private final String name;
    /**
     * The namespace all output variables will be accessed from.
     * 
     */
    private final @Nullable String namespace;
    /**
     * A list of artifact names to output. Output artifact names must be unique within a pipeline.
     * 
     */
    private final @Nullable List<String> outputArtifacts;
    /**
     * The creator of the action being called. Possible values are `AWS`, `Custom` and `ThirdParty`.
     * 
     */
    private final String owner;
    /**
     * The provider of the service being called by the action. Valid providers are determined by the action category. Provider names are listed in the [Action Structure Reference](https://docs.aws.amazon.com/codepipeline/latest/userguide/action-reference.html) documentation.
     * 
     */
    private final String provider;
    /**
     * The region in which to run the action.
     * 
     */
    private final @Nullable String region;
    /**
     * The ARN of the IAM service role that will perform the declared action. This is assumed through the roleArn for the pipeline.
     * 
     */
    private final @Nullable String roleArn;
    /**
     * The order in which actions are run.
     * 
     */
    private final @Nullable Integer runOrder;
    /**
     * A string that identifies the action type.
     * 
     */
    private final String version;

    @OutputCustomType.Constructor({"category","configuration","inputArtifacts","name","namespace","outputArtifacts","owner","provider","region","roleArn","runOrder","version"})
    private PipelineStageAction(
        String category,
        @Nullable Map<String,String> configuration,
        @Nullable List<String> inputArtifacts,
        String name,
        @Nullable String namespace,
        @Nullable List<String> outputArtifacts,
        String owner,
        String provider,
        @Nullable String region,
        @Nullable String roleArn,
        @Nullable Integer runOrder,
        String version) {
        this.category = Objects.requireNonNull(category);
        this.configuration = configuration;
        this.inputArtifacts = inputArtifacts;
        this.name = Objects.requireNonNull(name);
        this.namespace = namespace;
        this.outputArtifacts = outputArtifacts;
        this.owner = Objects.requireNonNull(owner);
        this.provider = Objects.requireNonNull(provider);
        this.region = region;
        this.roleArn = roleArn;
        this.runOrder = runOrder;
        this.version = Objects.requireNonNull(version);
    }

    /**
     * A category defines what kind of action can be taken in the stage, and constrains the provider type for the action. Possible values are `Approval`, `Build`, `Deploy`, `Invoke`, `Source` and `Test`.
     * 
     */
    public String getCategory() {
        return this.category;
    }
    /**
     * A map of the action declaration's configuration. Configurations options for action types and providers can be found in the [Pipeline Structure Reference](http://docs.aws.amazon.com/codepipeline/latest/userguide/reference-pipeline-structure.html#action-requirements) and [Action Structure Reference](https://docs.aws.amazon.com/codepipeline/latest/userguide/action-reference.html) documentation.
     * 
     */
    public Map<String,String> getConfiguration() {
        return this.configuration == null ? Map.of() : this.configuration;
    }
    /**
     * A list of artifact names to be worked on.
     * 
     */
    public List<String> getInputArtifacts() {
        return this.inputArtifacts == null ? List.of() : this.inputArtifacts;
    }
    /**
     * The action declaration's name.
     * 
     */
    public String getName() {
        return this.name;
    }
    /**
     * The namespace all output variables will be accessed from.
     * 
     */
    public Optional<String> getNamespace() {
        return Optional.ofNullable(this.namespace);
    }
    /**
     * A list of artifact names to output. Output artifact names must be unique within a pipeline.
     * 
     */
    public List<String> getOutputArtifacts() {
        return this.outputArtifacts == null ? List.of() : this.outputArtifacts;
    }
    /**
     * The creator of the action being called. Possible values are `AWS`, `Custom` and `ThirdParty`.
     * 
     */
    public String getOwner() {
        return this.owner;
    }
    /**
     * The provider of the service being called by the action. Valid providers are determined by the action category. Provider names are listed in the [Action Structure Reference](https://docs.aws.amazon.com/codepipeline/latest/userguide/action-reference.html) documentation.
     * 
     */
    public String getProvider() {
        return this.provider;
    }
    /**
     * The region in which to run the action.
     * 
     */
    public Optional<String> getRegion() {
        return Optional.ofNullable(this.region);
    }
    /**
     * The ARN of the IAM service role that will perform the declared action. This is assumed through the roleArn for the pipeline.
     * 
     */
    public Optional<String> getRoleArn() {
        return Optional.ofNullable(this.roleArn);
    }
    /**
     * The order in which actions are run.
     * 
     */
    public Optional<Integer> getRunOrder() {
        return Optional.ofNullable(this.runOrder);
    }
    /**
     * A string that identifies the action type.
     * 
     */
    public String getVersion() {
        return this.version;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PipelineStageAction defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String category;
        private @Nullable Map<String,String> configuration;
        private @Nullable List<String> inputArtifacts;
        private String name;
        private @Nullable String namespace;
        private @Nullable List<String> outputArtifacts;
        private String owner;
        private String provider;
        private @Nullable String region;
        private @Nullable String roleArn;
        private @Nullable Integer runOrder;
        private String version;

        public Builder() {
    	      // Empty
        }

        public Builder(PipelineStageAction defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.category = defaults.category;
    	      this.configuration = defaults.configuration;
    	      this.inputArtifacts = defaults.inputArtifacts;
    	      this.name = defaults.name;
    	      this.namespace = defaults.namespace;
    	      this.outputArtifacts = defaults.outputArtifacts;
    	      this.owner = defaults.owner;
    	      this.provider = defaults.provider;
    	      this.region = defaults.region;
    	      this.roleArn = defaults.roleArn;
    	      this.runOrder = defaults.runOrder;
    	      this.version = defaults.version;
        }

        public Builder setCategory(String category) {
            this.category = Objects.requireNonNull(category);
            return this;
        }

        public Builder setConfiguration(@Nullable Map<String,String> configuration) {
            this.configuration = configuration;
            return this;
        }

        public Builder setInputArtifacts(@Nullable List<String> inputArtifacts) {
            this.inputArtifacts = inputArtifacts;
            return this;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setNamespace(@Nullable String namespace) {
            this.namespace = namespace;
            return this;
        }

        public Builder setOutputArtifacts(@Nullable List<String> outputArtifacts) {
            this.outputArtifacts = outputArtifacts;
            return this;
        }

        public Builder setOwner(String owner) {
            this.owner = Objects.requireNonNull(owner);
            return this;
        }

        public Builder setProvider(String provider) {
            this.provider = Objects.requireNonNull(provider);
            return this;
        }

        public Builder setRegion(@Nullable String region) {
            this.region = region;
            return this;
        }

        public Builder setRoleArn(@Nullable String roleArn) {
            this.roleArn = roleArn;
            return this;
        }

        public Builder setRunOrder(@Nullable Integer runOrder) {
            this.runOrder = runOrder;
            return this;
        }

        public Builder setVersion(String version) {
            this.version = Objects.requireNonNull(version);
            return this;
        }
        public PipelineStageAction build() {
            return new PipelineStageAction(category, configuration, inputArtifacts, name, namespace, outputArtifacts, owner, provider, region, roleArn, runOrder, version);
        }
    }
}
