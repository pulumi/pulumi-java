// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.applicationloadbalancing;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;


public final class ListenerCertificateArgs extends io.pulumi.resources.ResourceArgs {

    public static final ListenerCertificateArgs Empty = new ListenerCertificateArgs();

    /**
     * The ARN of the certificate to attach to the listener.
     * 
     */
    @InputImport(name="certificateArn", required=true)
      private final Input<String> certificateArn;

    public Input<String> getCertificateArn() {
        return this.certificateArn;
    }

    /**
     * The ARN of the listener to which to attach the certificate.
     * 
     */
    @InputImport(name="listenerArn", required=true)
      private final Input<String> listenerArn;

    public Input<String> getListenerArn() {
        return this.listenerArn;
    }

    public ListenerCertificateArgs(
        Input<String> certificateArn,
        Input<String> listenerArn) {
        this.certificateArn = Objects.requireNonNull(certificateArn, "expected parameter 'certificateArn' to be non-null");
        this.listenerArn = Objects.requireNonNull(listenerArn, "expected parameter 'listenerArn' to be non-null");
    }

    private ListenerCertificateArgs() {
        this.certificateArn = Input.empty();
        this.listenerArn = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ListenerCertificateArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<String> certificateArn;
        private Input<String> listenerArn;

        public Builder() {
    	      // Empty
        }

        public Builder(ListenerCertificateArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.certificateArn = defaults.certificateArn;
    	      this.listenerArn = defaults.listenerArn;
        }

        public Builder certificateArn(Input<String> certificateArn) {
            this.certificateArn = Objects.requireNonNull(certificateArn);
            return this;
        }

        public Builder certificateArn(String certificateArn) {
            this.certificateArn = Input.of(Objects.requireNonNull(certificateArn));
            return this;
        }

        public Builder listenerArn(Input<String> listenerArn) {
            this.listenerArn = Objects.requireNonNull(listenerArn);
            return this;
        }

        public Builder listenerArn(String listenerArn) {
            this.listenerArn = Input.of(Objects.requireNonNull(listenerArn));
            return this;
        }
        public ListenerCertificateArgs build() {
            return new ListenerCertificateArgs(certificateArn, listenerArn);
        }
    }
}
