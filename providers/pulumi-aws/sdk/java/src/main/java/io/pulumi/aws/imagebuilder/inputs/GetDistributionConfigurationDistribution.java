// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.imagebuilder.inputs;

import io.pulumi.aws.imagebuilder.inputs.GetDistributionConfigurationDistributionAmiDistributionConfiguration;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class GetDistributionConfigurationDistribution extends io.pulumi.resources.InvokeArgs {

    public static final GetDistributionConfigurationDistribution Empty = new GetDistributionConfigurationDistribution();

    /**
     * Nested list of AMI distribution configuration.
     * 
     */
    @InputImport(name="amiDistributionConfigurations", required=true)
    private final List<GetDistributionConfigurationDistributionAmiDistributionConfiguration> amiDistributionConfigurations;

    public List<GetDistributionConfigurationDistributionAmiDistributionConfiguration> getAmiDistributionConfigurations() {
        return this.amiDistributionConfigurations;
    }

    /**
     * Set of Amazon Resource Names (ARNs) of License Manager License Configurations.
     * 
     */
    @InputImport(name="licenseConfigurationArns", required=true)
    private final List<String> licenseConfigurationArns;

    public List<String> getLicenseConfigurationArns() {
        return this.licenseConfigurationArns;
    }

    /**
     * AWS Region of distribution.
     * 
     */
    @InputImport(name="region", required=true)
    private final String region;

    public String getRegion() {
        return this.region;
    }

    public GetDistributionConfigurationDistribution(
        List<GetDistributionConfigurationDistributionAmiDistributionConfiguration> amiDistributionConfigurations,
        List<String> licenseConfigurationArns,
        String region) {
        this.amiDistributionConfigurations = Objects.requireNonNull(amiDistributionConfigurations, "expected parameter 'amiDistributionConfigurations' to be non-null");
        this.licenseConfigurationArns = Objects.requireNonNull(licenseConfigurationArns, "expected parameter 'licenseConfigurationArns' to be non-null");
        this.region = Objects.requireNonNull(region, "expected parameter 'region' to be non-null");
    }

    private GetDistributionConfigurationDistribution() {
        this.amiDistributionConfigurations = List.of();
        this.licenseConfigurationArns = List.of();
        this.region = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDistributionConfigurationDistribution defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<GetDistributionConfigurationDistributionAmiDistributionConfiguration> amiDistributionConfigurations;
        private List<String> licenseConfigurationArns;
        private String region;

        public Builder() {
    	      // Empty
        }

        public Builder(GetDistributionConfigurationDistribution defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.amiDistributionConfigurations = defaults.amiDistributionConfigurations;
    	      this.licenseConfigurationArns = defaults.licenseConfigurationArns;
    	      this.region = defaults.region;
        }

        public Builder setAmiDistributionConfigurations(List<GetDistributionConfigurationDistributionAmiDistributionConfiguration> amiDistributionConfigurations) {
            this.amiDistributionConfigurations = Objects.requireNonNull(amiDistributionConfigurations);
            return this;
        }

        public Builder setLicenseConfigurationArns(List<String> licenseConfigurationArns) {
            this.licenseConfigurationArns = Objects.requireNonNull(licenseConfigurationArns);
            return this;
        }

        public Builder setRegion(String region) {
            this.region = Objects.requireNonNull(region);
            return this;
        }
        public GetDistributionConfigurationDistribution build() {
            return new GetDistributionConfigurationDistribution(amiDistributionConfigurations, licenseConfigurationArns, region);
        }
    }
}
