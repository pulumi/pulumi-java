// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.dynamodb.outputs;

import io.pulumi.aws.dynamodb.outputs.GetTableAttribute;
import io.pulumi.aws.dynamodb.outputs.GetTableGlobalSecondaryIndex;
import io.pulumi.aws.dynamodb.outputs.GetTableLocalSecondaryIndex;
import io.pulumi.aws.dynamodb.outputs.GetTablePointInTimeRecovery;
import io.pulumi.aws.dynamodb.outputs.GetTableReplica;
import io.pulumi.aws.dynamodb.outputs.GetTableServerSideEncryption;
import io.pulumi.aws.dynamodb.outputs.GetTableTtl;
import io.pulumi.core.annotations.OutputCustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@OutputCustomType
public final class GetTableResult {
    private final String arn;
    private final List<GetTableAttribute> attributes;
    private final String billingMode;
    private final List<GetTableGlobalSecondaryIndex> globalSecondaryIndexes;
    private final String hashKey;
    /**
     * The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    private final List<GetTableLocalSecondaryIndex> localSecondaryIndexes;
    private final String name;
    private final GetTablePointInTimeRecovery pointInTimeRecovery;
    private final String rangeKey;
    private final Integer readCapacity;
    private final List<GetTableReplica> replicas;
    private final GetTableServerSideEncryption serverSideEncryption;
    private final String streamArn;
    private final Boolean streamEnabled;
    private final String streamLabel;
    private final String streamViewType;
    private final String tableClass;
    private final Map<String,String> tags;
    private final GetTableTtl ttl;
    private final Integer writeCapacity;

    @OutputCustomType.Constructor
    private GetTableResult(
        @OutputCustomType.Parameter("arn") String arn,
        @OutputCustomType.Parameter("attributes") List<GetTableAttribute> attributes,
        @OutputCustomType.Parameter("billingMode") String billingMode,
        @OutputCustomType.Parameter("globalSecondaryIndexes") List<GetTableGlobalSecondaryIndex> globalSecondaryIndexes,
        @OutputCustomType.Parameter("hashKey") String hashKey,
        @OutputCustomType.Parameter("id") String id,
        @OutputCustomType.Parameter("localSecondaryIndexes") List<GetTableLocalSecondaryIndex> localSecondaryIndexes,
        @OutputCustomType.Parameter("name") String name,
        @OutputCustomType.Parameter("pointInTimeRecovery") GetTablePointInTimeRecovery pointInTimeRecovery,
        @OutputCustomType.Parameter("rangeKey") String rangeKey,
        @OutputCustomType.Parameter("readCapacity") Integer readCapacity,
        @OutputCustomType.Parameter("replicas") List<GetTableReplica> replicas,
        @OutputCustomType.Parameter("serverSideEncryption") GetTableServerSideEncryption serverSideEncryption,
        @OutputCustomType.Parameter("streamArn") String streamArn,
        @OutputCustomType.Parameter("streamEnabled") Boolean streamEnabled,
        @OutputCustomType.Parameter("streamLabel") String streamLabel,
        @OutputCustomType.Parameter("streamViewType") String streamViewType,
        @OutputCustomType.Parameter("tableClass") String tableClass,
        @OutputCustomType.Parameter("tags") Map<String,String> tags,
        @OutputCustomType.Parameter("ttl") GetTableTtl ttl,
        @OutputCustomType.Parameter("writeCapacity") Integer writeCapacity) {
        this.arn = arn;
        this.attributes = attributes;
        this.billingMode = billingMode;
        this.globalSecondaryIndexes = globalSecondaryIndexes;
        this.hashKey = hashKey;
        this.id = id;
        this.localSecondaryIndexes = localSecondaryIndexes;
        this.name = name;
        this.pointInTimeRecovery = pointInTimeRecovery;
        this.rangeKey = rangeKey;
        this.readCapacity = readCapacity;
        this.replicas = replicas;
        this.serverSideEncryption = serverSideEncryption;
        this.streamArn = streamArn;
        this.streamEnabled = streamEnabled;
        this.streamLabel = streamLabel;
        this.streamViewType = streamViewType;
        this.tableClass = tableClass;
        this.tags = tags;
        this.ttl = ttl;
        this.writeCapacity = writeCapacity;
    }

    public String getArn() {
        return this.arn;
    }
    public List<GetTableAttribute> getAttributes() {
        return this.attributes;
    }
    public String getBillingMode() {
        return this.billingMode;
    }
    public List<GetTableGlobalSecondaryIndex> getGlobalSecondaryIndexes() {
        return this.globalSecondaryIndexes;
    }
    public String getHashKey() {
        return this.hashKey;
    }
    /**
     * The provider-assigned unique ID for this managed resource.
     * 
    */
    public String getId() {
        return this.id;
    }
    public List<GetTableLocalSecondaryIndex> getLocalSecondaryIndexes() {
        return this.localSecondaryIndexes;
    }
    public String getName() {
        return this.name;
    }
    public GetTablePointInTimeRecovery getPointInTimeRecovery() {
        return this.pointInTimeRecovery;
    }
    public String getRangeKey() {
        return this.rangeKey;
    }
    public Integer getReadCapacity() {
        return this.readCapacity;
    }
    public List<GetTableReplica> getReplicas() {
        return this.replicas;
    }
    public GetTableServerSideEncryption getServerSideEncryption() {
        return this.serverSideEncryption;
    }
    public String getStreamArn() {
        return this.streamArn;
    }
    public Boolean getStreamEnabled() {
        return this.streamEnabled;
    }
    public String getStreamLabel() {
        return this.streamLabel;
    }
    public String getStreamViewType() {
        return this.streamViewType;
    }
    public String getTableClass() {
        return this.tableClass;
    }
    public Map<String,String> getTags() {
        return this.tags;
    }
    public GetTableTtl getTtl() {
        return this.ttl;
    }
    public Integer getWriteCapacity() {
        return this.writeCapacity;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetTableResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String arn;
        private List<GetTableAttribute> attributes;
        private String billingMode;
        private List<GetTableGlobalSecondaryIndex> globalSecondaryIndexes;
        private String hashKey;
        private String id;
        private List<GetTableLocalSecondaryIndex> localSecondaryIndexes;
        private String name;
        private GetTablePointInTimeRecovery pointInTimeRecovery;
        private String rangeKey;
        private Integer readCapacity;
        private List<GetTableReplica> replicas;
        private GetTableServerSideEncryption serverSideEncryption;
        private String streamArn;
        private Boolean streamEnabled;
        private String streamLabel;
        private String streamViewType;
        private String tableClass;
        private Map<String,String> tags;
        private GetTableTtl ttl;
        private Integer writeCapacity;

        public Builder() {
    	      // Empty
        }

        public Builder(GetTableResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.attributes = defaults.attributes;
    	      this.billingMode = defaults.billingMode;
    	      this.globalSecondaryIndexes = defaults.globalSecondaryIndexes;
    	      this.hashKey = defaults.hashKey;
    	      this.id = defaults.id;
    	      this.localSecondaryIndexes = defaults.localSecondaryIndexes;
    	      this.name = defaults.name;
    	      this.pointInTimeRecovery = defaults.pointInTimeRecovery;
    	      this.rangeKey = defaults.rangeKey;
    	      this.readCapacity = defaults.readCapacity;
    	      this.replicas = defaults.replicas;
    	      this.serverSideEncryption = defaults.serverSideEncryption;
    	      this.streamArn = defaults.streamArn;
    	      this.streamEnabled = defaults.streamEnabled;
    	      this.streamLabel = defaults.streamLabel;
    	      this.streamViewType = defaults.streamViewType;
    	      this.tableClass = defaults.tableClass;
    	      this.tags = defaults.tags;
    	      this.ttl = defaults.ttl;
    	      this.writeCapacity = defaults.writeCapacity;
        }

        public Builder setArn(String arn) {
            this.arn = Objects.requireNonNull(arn);
            return this;
        }

        public Builder setAttributes(List<GetTableAttribute> attributes) {
            this.attributes = Objects.requireNonNull(attributes);
            return this;
        }

        public Builder setBillingMode(String billingMode) {
            this.billingMode = Objects.requireNonNull(billingMode);
            return this;
        }

        public Builder setGlobalSecondaryIndexes(List<GetTableGlobalSecondaryIndex> globalSecondaryIndexes) {
            this.globalSecondaryIndexes = Objects.requireNonNull(globalSecondaryIndexes);
            return this;
        }

        public Builder setHashKey(String hashKey) {
            this.hashKey = Objects.requireNonNull(hashKey);
            return this;
        }

        public Builder setId(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }

        public Builder setLocalSecondaryIndexes(List<GetTableLocalSecondaryIndex> localSecondaryIndexes) {
            this.localSecondaryIndexes = Objects.requireNonNull(localSecondaryIndexes);
            return this;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setPointInTimeRecovery(GetTablePointInTimeRecovery pointInTimeRecovery) {
            this.pointInTimeRecovery = Objects.requireNonNull(pointInTimeRecovery);
            return this;
        }

        public Builder setRangeKey(String rangeKey) {
            this.rangeKey = Objects.requireNonNull(rangeKey);
            return this;
        }

        public Builder setReadCapacity(Integer readCapacity) {
            this.readCapacity = Objects.requireNonNull(readCapacity);
            return this;
        }

        public Builder setReplicas(List<GetTableReplica> replicas) {
            this.replicas = Objects.requireNonNull(replicas);
            return this;
        }

        public Builder setServerSideEncryption(GetTableServerSideEncryption serverSideEncryption) {
            this.serverSideEncryption = Objects.requireNonNull(serverSideEncryption);
            return this;
        }

        public Builder setStreamArn(String streamArn) {
            this.streamArn = Objects.requireNonNull(streamArn);
            return this;
        }

        public Builder setStreamEnabled(Boolean streamEnabled) {
            this.streamEnabled = Objects.requireNonNull(streamEnabled);
            return this;
        }

        public Builder setStreamLabel(String streamLabel) {
            this.streamLabel = Objects.requireNonNull(streamLabel);
            return this;
        }

        public Builder setStreamViewType(String streamViewType) {
            this.streamViewType = Objects.requireNonNull(streamViewType);
            return this;
        }

        public Builder setTableClass(String tableClass) {
            this.tableClass = Objects.requireNonNull(tableClass);
            return this;
        }

        public Builder setTags(Map<String,String> tags) {
            this.tags = Objects.requireNonNull(tags);
            return this;
        }

        public Builder setTtl(GetTableTtl ttl) {
            this.ttl = Objects.requireNonNull(ttl);
            return this;
        }

        public Builder setWriteCapacity(Integer writeCapacity) {
            this.writeCapacity = Objects.requireNonNull(writeCapacity);
            return this;
        }
        public GetTableResult build() {
            return new GetTableResult(arn, attributes, billingMode, globalSecondaryIndexes, hashKey, id, localSecondaryIndexes, name, pointInTimeRecovery, rangeKey, readCapacity, replicas, serverSideEncryption, streamArn, streamEnabled, streamLabel, streamViewType, tableClass, tags, ttl, writeCapacity);
        }
    }
}
