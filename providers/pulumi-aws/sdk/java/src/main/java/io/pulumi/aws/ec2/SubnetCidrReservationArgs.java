// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.ec2;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class SubnetCidrReservationArgs extends io.pulumi.resources.ResourceArgs {

    public static final SubnetCidrReservationArgs Empty = new SubnetCidrReservationArgs();

    /**
     * The CIDR block for the reservation.
     * 
     */
    @Import(name="cidrBlock", required=true)
      private final Output<String> cidrBlock;

    public Output<String> getCidrBlock() {
        return this.cidrBlock;
    }

    /**
     * A brief description of the reservation.
     * 
     */
    @Import(name="description")
      private final @Nullable Output<String> description;

    public Output<String> getDescription() {
        return this.description == null ? Output.empty() : this.description;
    }

    /**
     * The type of reservation to create. Valid values: `explicit`, `prefix`
     * 
     */
    @Import(name="reservationType", required=true)
      private final Output<String> reservationType;

    public Output<String> getReservationType() {
        return this.reservationType;
    }

    /**
     * The ID of the subnet to create the reservation for.
     * 
     */
    @Import(name="subnetId", required=true)
      private final Output<String> subnetId;

    public Output<String> getSubnetId() {
        return this.subnetId;
    }

    public SubnetCidrReservationArgs(
        Output<String> cidrBlock,
        @Nullable Output<String> description,
        Output<String> reservationType,
        Output<String> subnetId) {
        this.cidrBlock = Objects.requireNonNull(cidrBlock, "expected parameter 'cidrBlock' to be non-null");
        this.description = description;
        this.reservationType = Objects.requireNonNull(reservationType, "expected parameter 'reservationType' to be non-null");
        this.subnetId = Objects.requireNonNull(subnetId, "expected parameter 'subnetId' to be non-null");
    }

    private SubnetCidrReservationArgs() {
        this.cidrBlock = Output.empty();
        this.description = Output.empty();
        this.reservationType = Output.empty();
        this.subnetId = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SubnetCidrReservationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> cidrBlock;
        private @Nullable Output<String> description;
        private Output<String> reservationType;
        private Output<String> subnetId;

        public Builder() {
    	      // Empty
        }

        public Builder(SubnetCidrReservationArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cidrBlock = defaults.cidrBlock;
    	      this.description = defaults.description;
    	      this.reservationType = defaults.reservationType;
    	      this.subnetId = defaults.subnetId;
        }

        public Builder cidrBlock(Output<String> cidrBlock) {
            this.cidrBlock = Objects.requireNonNull(cidrBlock);
            return this;
        }

        public Builder cidrBlock(String cidrBlock) {
            this.cidrBlock = Output.of(Objects.requireNonNull(cidrBlock));
            return this;
        }

        public Builder description(@Nullable Output<String> description) {
            this.description = description;
            return this;
        }

        public Builder description(@Nullable String description) {
            this.description = Output.ofNullable(description);
            return this;
        }

        public Builder reservationType(Output<String> reservationType) {
            this.reservationType = Objects.requireNonNull(reservationType);
            return this;
        }

        public Builder reservationType(String reservationType) {
            this.reservationType = Output.of(Objects.requireNonNull(reservationType));
            return this;
        }

        public Builder subnetId(Output<String> subnetId) {
            this.subnetId = Objects.requireNonNull(subnetId);
            return this;
        }

        public Builder subnetId(String subnetId) {
            this.subnetId = Output.of(Objects.requireNonNull(subnetId));
            return this;
        }
        public SubnetCidrReservationArgs build() {
            return new SubnetCidrReservationArgs(cidrBlock, description, reservationType, subnetId);
        }
    }
}
