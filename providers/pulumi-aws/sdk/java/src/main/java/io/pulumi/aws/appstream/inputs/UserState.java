// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.appstream.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class UserState extends io.pulumi.resources.ResourceArgs {

    public static final UserState Empty = new UserState();

    /**
     * ARN of the appstream user.
     * 
     */
    @Import(name="arn")
      private final @Nullable Output<String> arn;

    public Output<String> arn() {
        return this.arn == null ? Codegen.empty() : this.arn;
    }

    /**
     * Authentication type for the user. You must specify USERPOOL. Valid values: `API`, `SAML`, `USERPOOL`
     * 
     */
    @Import(name="authenticationType")
      private final @Nullable Output<String> authenticationType;

    public Output<String> authenticationType() {
        return this.authenticationType == null ? Codegen.empty() : this.authenticationType;
    }

    /**
     * Date and time, in UTC and extended RFC 3339 format, when the user was created.
     * 
     */
    @Import(name="createdTime")
      private final @Nullable Output<String> createdTime;

    public Output<String> createdTime() {
        return this.createdTime == null ? Codegen.empty() : this.createdTime;
    }

    /**
     * Specifies whether the user in the user pool is enabled.
     * 
     */
    @Import(name="enabled")
      private final @Nullable Output<Boolean> enabled;

    public Output<Boolean> enabled() {
        return this.enabled == null ? Codegen.empty() : this.enabled;
    }

    /**
     * First name, or given name, of the user.
     * 
     */
    @Import(name="firstName")
      private final @Nullable Output<String> firstName;

    public Output<String> firstName() {
        return this.firstName == null ? Codegen.empty() : this.firstName;
    }

    /**
     * Last name, or surname, of the user.
     * 
     */
    @Import(name="lastName")
      private final @Nullable Output<String> lastName;

    public Output<String> lastName() {
        return this.lastName == null ? Codegen.empty() : this.lastName;
    }

    /**
     * Send an email notification.
     * 
     */
    @Import(name="sendEmailNotification")
      private final @Nullable Output<Boolean> sendEmailNotification;

    public Output<Boolean> sendEmailNotification() {
        return this.sendEmailNotification == null ? Codegen.empty() : this.sendEmailNotification;
    }

    /**
     * Email address of the user.
     * 
     */
    @Import(name="userName")
      private final @Nullable Output<String> userName;

    public Output<String> userName() {
        return this.userName == null ? Codegen.empty() : this.userName;
    }

    public UserState(
        @Nullable Output<String> arn,
        @Nullable Output<String> authenticationType,
        @Nullable Output<String> createdTime,
        @Nullable Output<Boolean> enabled,
        @Nullable Output<String> firstName,
        @Nullable Output<String> lastName,
        @Nullable Output<Boolean> sendEmailNotification,
        @Nullable Output<String> userName) {
        this.arn = arn;
        this.authenticationType = authenticationType;
        this.createdTime = createdTime;
        this.enabled = enabled;
        this.firstName = firstName;
        this.lastName = lastName;
        this.sendEmailNotification = sendEmailNotification;
        this.userName = userName;
    }

    private UserState() {
        this.arn = Codegen.empty();
        this.authenticationType = Codegen.empty();
        this.createdTime = Codegen.empty();
        this.enabled = Codegen.empty();
        this.firstName = Codegen.empty();
        this.lastName = Codegen.empty();
        this.sendEmailNotification = Codegen.empty();
        this.userName = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(UserState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> arn;
        private @Nullable Output<String> authenticationType;
        private @Nullable Output<String> createdTime;
        private @Nullable Output<Boolean> enabled;
        private @Nullable Output<String> firstName;
        private @Nullable Output<String> lastName;
        private @Nullable Output<Boolean> sendEmailNotification;
        private @Nullable Output<String> userName;

        public Builder() {
    	      // Empty
        }

        public Builder(UserState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.authenticationType = defaults.authenticationType;
    	      this.createdTime = defaults.createdTime;
    	      this.enabled = defaults.enabled;
    	      this.firstName = defaults.firstName;
    	      this.lastName = defaults.lastName;
    	      this.sendEmailNotification = defaults.sendEmailNotification;
    	      this.userName = defaults.userName;
        }

        public Builder arn(@Nullable Output<String> arn) {
            this.arn = arn;
            return this;
        }
        public Builder arn(@Nullable String arn) {
            this.arn = Codegen.ofNullable(arn);
            return this;
        }
        public Builder authenticationType(@Nullable Output<String> authenticationType) {
            this.authenticationType = authenticationType;
            return this;
        }
        public Builder authenticationType(@Nullable String authenticationType) {
            this.authenticationType = Codegen.ofNullable(authenticationType);
            return this;
        }
        public Builder createdTime(@Nullable Output<String> createdTime) {
            this.createdTime = createdTime;
            return this;
        }
        public Builder createdTime(@Nullable String createdTime) {
            this.createdTime = Codegen.ofNullable(createdTime);
            return this;
        }
        public Builder enabled(@Nullable Output<Boolean> enabled) {
            this.enabled = enabled;
            return this;
        }
        public Builder enabled(@Nullable Boolean enabled) {
            this.enabled = Codegen.ofNullable(enabled);
            return this;
        }
        public Builder firstName(@Nullable Output<String> firstName) {
            this.firstName = firstName;
            return this;
        }
        public Builder firstName(@Nullable String firstName) {
            this.firstName = Codegen.ofNullable(firstName);
            return this;
        }
        public Builder lastName(@Nullable Output<String> lastName) {
            this.lastName = lastName;
            return this;
        }
        public Builder lastName(@Nullable String lastName) {
            this.lastName = Codegen.ofNullable(lastName);
            return this;
        }
        public Builder sendEmailNotification(@Nullable Output<Boolean> sendEmailNotification) {
            this.sendEmailNotification = sendEmailNotification;
            return this;
        }
        public Builder sendEmailNotification(@Nullable Boolean sendEmailNotification) {
            this.sendEmailNotification = Codegen.ofNullable(sendEmailNotification);
            return this;
        }
        public Builder userName(@Nullable Output<String> userName) {
            this.userName = userName;
            return this;
        }
        public Builder userName(@Nullable String userName) {
            this.userName = Codegen.ofNullable(userName);
            return this;
        }        public UserState build() {
            return new UserState(arn, authenticationType, createdTime, enabled, firstName, lastName, sendEmailNotification, userName);
        }
    }
}
