// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.sagemaker.inputs;

import io.pulumi.aws.sagemaker.inputs.HumanTaskUIUiTemplateGetArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class HumanTaskUIState extends io.pulumi.resources.ResourceArgs {

    public static final HumanTaskUIState Empty = new HumanTaskUIState();

    /**
     * The Amazon Resource Name (ARN) assigned by AWS to this Human Task UI.
     * 
     */
    @InputImport(name="arn")
      private final @Nullable Output<String> arn;

    public Output<String> getArn() {
        return this.arn == null ? Output.empty() : this.arn;
    }

    /**
     * The name of the Human Task UI.
     * 
     */
    @InputImport(name="humanTaskUiName")
      private final @Nullable Output<String> humanTaskUiName;

    public Output<String> getHumanTaskUiName() {
        return this.humanTaskUiName == null ? Output.empty() : this.humanTaskUiName;
    }

    /**
     * A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @InputImport(name="tags")
      private final @Nullable Output<Map<String,String>> tags;

    public Output<Map<String,String>> getTags() {
        return this.tags == null ? Output.empty() : this.tags;
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     */
    @InputImport(name="tagsAll")
      private final @Nullable Output<Map<String,String>> tagsAll;

    public Output<Map<String,String>> getTagsAll() {
        return this.tagsAll == null ? Output.empty() : this.tagsAll;
    }

    /**
     * The Liquid template for the worker user interface. See UI Template below.
     * 
     */
    @InputImport(name="uiTemplate")
      private final @Nullable Output<HumanTaskUIUiTemplateGetArgs> uiTemplate;

    public Output<HumanTaskUIUiTemplateGetArgs> getUiTemplate() {
        return this.uiTemplate == null ? Output.empty() : this.uiTemplate;
    }

    public HumanTaskUIState(
        @Nullable Output<String> arn,
        @Nullable Output<String> humanTaskUiName,
        @Nullable Output<Map<String,String>> tags,
        @Nullable Output<Map<String,String>> tagsAll,
        @Nullable Output<HumanTaskUIUiTemplateGetArgs> uiTemplate) {
        this.arn = arn;
        this.humanTaskUiName = humanTaskUiName;
        this.tags = tags;
        this.tagsAll = tagsAll;
        this.uiTemplate = uiTemplate;
    }

    private HumanTaskUIState() {
        this.arn = Output.empty();
        this.humanTaskUiName = Output.empty();
        this.tags = Output.empty();
        this.tagsAll = Output.empty();
        this.uiTemplate = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(HumanTaskUIState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> arn;
        private @Nullable Output<String> humanTaskUiName;
        private @Nullable Output<Map<String,String>> tags;
        private @Nullable Output<Map<String,String>> tagsAll;
        private @Nullable Output<HumanTaskUIUiTemplateGetArgs> uiTemplate;

        public Builder() {
    	      // Empty
        }

        public Builder(HumanTaskUIState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.humanTaskUiName = defaults.humanTaskUiName;
    	      this.tags = defaults.tags;
    	      this.tagsAll = defaults.tagsAll;
    	      this.uiTemplate = defaults.uiTemplate;
        }

        public Builder arn(@Nullable Output<String> arn) {
            this.arn = arn;
            return this;
        }

        public Builder arn(@Nullable String arn) {
            this.arn = Output.ofNullable(arn);
            return this;
        }

        public Builder humanTaskUiName(@Nullable Output<String> humanTaskUiName) {
            this.humanTaskUiName = humanTaskUiName;
            return this;
        }

        public Builder humanTaskUiName(@Nullable String humanTaskUiName) {
            this.humanTaskUiName = Output.ofNullable(humanTaskUiName);
            return this;
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }

        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = Output.ofNullable(tags);
            return this;
        }

        public Builder tagsAll(@Nullable Output<Map<String,String>> tagsAll) {
            this.tagsAll = tagsAll;
            return this;
        }

        public Builder tagsAll(@Nullable Map<String,String> tagsAll) {
            this.tagsAll = Output.ofNullable(tagsAll);
            return this;
        }

        public Builder uiTemplate(@Nullable Output<HumanTaskUIUiTemplateGetArgs> uiTemplate) {
            this.uiTemplate = uiTemplate;
            return this;
        }

        public Builder uiTemplate(@Nullable HumanTaskUIUiTemplateGetArgs uiTemplate) {
            this.uiTemplate = Output.ofNullable(uiTemplate);
            return this;
        }
        public HumanTaskUIState build() {
            return new HumanTaskUIState(arn, humanTaskUiName, tags, tagsAll, uiTemplate);
        }
    }
}
