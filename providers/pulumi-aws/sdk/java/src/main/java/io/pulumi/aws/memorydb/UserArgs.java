// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.memorydb;

import io.pulumi.aws.memorydb.inputs.UserAuthenticationModeArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class UserArgs extends io.pulumi.resources.ResourceArgs {

    public static final UserArgs Empty = new UserArgs();

    /**
     * The access permissions string used for this user.
     * 
     */
    @Import(name="accessString", required=true)
      private final Output<String> accessString;

    public Output<String> getAccessString() {
        return this.accessString;
    }

    /**
     * Denotes the user's authentication properties. Detailed below.
     * 
     */
    @Import(name="authenticationMode", required=true)
      private final Output<UserAuthenticationModeArgs> authenticationMode;

    public Output<UserAuthenticationModeArgs> getAuthenticationMode() {
        return this.authenticationMode;
    }

    /**
     * A map of tags to assign to the resource. If configured with a provider [`default_tags` configuration block](https://www.terraform.io/docs/providers/aws/index.html#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Import(name="tags")
      private final @Nullable Output<Map<String,String>> tags;

    public Output<Map<String,String>> getTags() {
        return this.tags == null ? Output.empty() : this.tags;
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider [`default_tags` configuration block](https://www.terraform.io/docs/providers/aws/index.html#default_tags-configuration-block).
     * 
     */
    @Import(name="tagsAll")
      private final @Nullable Output<Map<String,String>> tagsAll;

    public Output<Map<String,String>> getTagsAll() {
        return this.tagsAll == null ? Output.empty() : this.tagsAll;
    }

    /**
     * Name of the MemoryDB user. Up to 40 characters.
     * 
     */
    @Import(name="userName", required=true)
      private final Output<String> userName;

    public Output<String> getUserName() {
        return this.userName;
    }

    public UserArgs(
        Output<String> accessString,
        Output<UserAuthenticationModeArgs> authenticationMode,
        @Nullable Output<Map<String,String>> tags,
        @Nullable Output<Map<String,String>> tagsAll,
        Output<String> userName) {
        this.accessString = Objects.requireNonNull(accessString, "expected parameter 'accessString' to be non-null");
        this.authenticationMode = Objects.requireNonNull(authenticationMode, "expected parameter 'authenticationMode' to be non-null");
        this.tags = tags;
        this.tagsAll = tagsAll;
        this.userName = Objects.requireNonNull(userName, "expected parameter 'userName' to be non-null");
    }

    private UserArgs() {
        this.accessString = Output.empty();
        this.authenticationMode = Output.empty();
        this.tags = Output.empty();
        this.tagsAll = Output.empty();
        this.userName = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(UserArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> accessString;
        private Output<UserAuthenticationModeArgs> authenticationMode;
        private @Nullable Output<Map<String,String>> tags;
        private @Nullable Output<Map<String,String>> tagsAll;
        private Output<String> userName;

        public Builder() {
    	      // Empty
        }

        public Builder(UserArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessString = defaults.accessString;
    	      this.authenticationMode = defaults.authenticationMode;
    	      this.tags = defaults.tags;
    	      this.tagsAll = defaults.tagsAll;
    	      this.userName = defaults.userName;
        }

        public Builder accessString(Output<String> accessString) {
            this.accessString = Objects.requireNonNull(accessString);
            return this;
        }
        public Builder accessString(String accessString) {
            this.accessString = Output.of(Objects.requireNonNull(accessString));
            return this;
        }
        public Builder authenticationMode(Output<UserAuthenticationModeArgs> authenticationMode) {
            this.authenticationMode = Objects.requireNonNull(authenticationMode);
            return this;
        }
        public Builder authenticationMode(UserAuthenticationModeArgs authenticationMode) {
            this.authenticationMode = Output.of(Objects.requireNonNull(authenticationMode));
            return this;
        }
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = Output.ofNullable(tags);
            return this;
        }
        public Builder tagsAll(@Nullable Output<Map<String,String>> tagsAll) {
            this.tagsAll = tagsAll;
            return this;
        }
        public Builder tagsAll(@Nullable Map<String,String> tagsAll) {
            this.tagsAll = Output.ofNullable(tagsAll);
            return this;
        }
        public Builder userName(Output<String> userName) {
            this.userName = Objects.requireNonNull(userName);
            return this;
        }
        public Builder userName(String userName) {
            this.userName = Output.of(Objects.requireNonNull(userName));
            return this;
        }        public UserArgs build() {
            return new UserArgs(accessString, authenticationMode, tags, tagsAll, userName);
        }
    }
}
