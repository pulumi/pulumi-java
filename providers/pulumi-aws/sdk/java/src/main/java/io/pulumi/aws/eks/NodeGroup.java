// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.eks;

import io.pulumi.aws.Utilities;
import io.pulumi.aws.eks.NodeGroupArgs;
import io.pulumi.aws.eks.inputs.NodeGroupState;
import io.pulumi.aws.eks.outputs.NodeGroupLaunchTemplate;
import io.pulumi.aws.eks.outputs.NodeGroupRemoteAccess;
import io.pulumi.aws.eks.outputs.NodeGroupResource;
import io.pulumi.aws.eks.outputs.NodeGroupScalingConfig;
import io.pulumi.aws.eks.outputs.NodeGroupTaint;
import io.pulumi.aws.eks.outputs.NodeGroupUpdateConfig;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Export;
import io.pulumi.core.annotations.ResourceType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;

/**
 * Manages an EKS Node Group, which can provision and optionally update an Auto Scaling Group of Kubernetes worker nodes compatible with EKS. Additional documentation about this functionality can be found in the [EKS User Guide](https://docs.aws.amazon.com/eks/latest/userguide/managed-node-groups.html).
 * 
 * {{% examples %}}
 * ## Example Usage
 * {{% example %}}
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 * 
 * const example = new aws.eks.NodeGroup("example", {
 *     clusterName: aws_eks_cluster.example.name,
 *     nodeRoleArn: aws_iam_role.example.arn,
 *     subnetIds: aws_subnet.example.map(__item => __item.id),
 *     scalingConfig: {
 *         desiredSize: 1,
 *         maxSize: 1,
 *         minSize: 1,
 *     },
 *     updateConfig: {
 *         maxUnavailable: 2,
 *     },
 * }, {
 *     dependsOn: [
 *         aws_iam_role_policy_attachment["example-AmazonEKSWorkerNodePolicy"],
 *         aws_iam_role_policy_attachment["example-AmazonEKS_CNI_Policy"],
 *         aws_iam_role_policy_attachment["example-AmazonEC2ContainerRegistryReadOnly"],
 *     ],
 * });
 * ```
 * ```python
 * import pulumi
 * import pulumi_aws as aws
 * 
 * example = aws.eks.NodeGroup("example",
 *     cluster_name=aws_eks_cluster["example"]["name"],
 *     node_role_arn=aws_iam_role["example"]["arn"],
 *     subnet_ids=[__item["id"] for __item in aws_subnet["example"]],
 *     scaling_config=aws.eks.NodeGroupScalingConfigArgs(
 *         desired_size=1,
 *         max_size=1,
 *         min_size=1,
 *     ),
 *     update_config=aws.eks.NodeGroupUpdateConfigArgs(
 *         max_unavailable=2,
 *     ),
 *     opts=pulumi.ResourceOptions(depends_on=[
 *             aws_iam_role_policy_attachment["example-AmazonEKSWorkerNodePolicy"],
 *             aws_iam_role_policy_attachment["example-AmazonEKS_CNI_Policy"],
 *             aws_iam_role_policy_attachment["example-AmazonEC2ContainerRegistryReadOnly"],
 *         ]))
 * ```
 * ```csharp
 * using System.Linq;
 * using Pulumi;
 * using Aws = Pulumi.Aws;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var example = new Aws.Eks.NodeGroup("example", new Aws.Eks.NodeGroupArgs
 *         {
 *             ClusterName = aws_eks_cluster.Example.Name,
 *             NodeRoleArn = aws_iam_role.Example.Arn,
 *             SubnetIds = aws_subnet.Example.Select(__item => __item.Id).ToList(),
 *             ScalingConfig = new Aws.Eks.Inputs.NodeGroupScalingConfigArgs
 *             {
 *                 DesiredSize = 1,
 *                 MaxSize = 1,
 *                 MinSize = 1,
 *             },
 *             UpdateConfig = new Aws.Eks.Inputs.NodeGroupUpdateConfigArgs
 *             {
 *                 MaxUnavailable = 2,
 *             },
 *         }, new CustomResourceOptions
 *         {
 *             DependsOn = 
 *             {
 *                 aws_iam_role_policy_attachment.Example_AmazonEKSWorkerNodePolicy,
 *                 aws_iam_role_policy_attachment.Example_AmazonEKS_CNI_Policy,
 *                 aws_iam_role_policy_attachment.Example_AmazonEC2ContainerRegistryReadOnly,
 *             },
 *         });
 *     }
 * 
 * }
 * ```
 * {{% /example %}}
 * {{% example %}}
 * ### Ignoring Changes to Desired Size
 * 
 * You can utilize [ignoreChanges](https://www.pulumi.com/docs/intro/concepts/programming-model/#ignorechanges) create an EKS Node Group with an initial size of running instances, then ignore any changes to that count caused externally (e.g. Application Autoscaling).
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 * 
 * // ... other configurations ...
 * const example = new aws.eks.NodeGroup("example", {scalingConfig: {
 *     desiredSize: 2,
 * }});
 * ```
 * ```python
 * import pulumi
 * import pulumi_aws as aws
 * 
 * # ... other configurations ...
 * example = aws.eks.NodeGroup("example", scaling_config=aws.eks.NodeGroupScalingConfigArgs(
 *     desired_size=2,
 * ))
 * ```
 * ```csharp
 * using Pulumi;
 * using Aws = Pulumi.Aws;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         // ... other configurations ...
 *         var example = new Aws.Eks.NodeGroup("example", new Aws.Eks.NodeGroupArgs
 *         {
 *             ScalingConfig = new Aws.Eks.Inputs.NodeGroupScalingConfigArgs
 *             {
 *                 DesiredSize = 2,
 *             },
 *         });
 *     }
 * 
 * }
 * ```
 * ```go
 * package main
 * 
 * import (
 * 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/eks"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		_, err := eks.NewNodeGroup(ctx, "example", &eks.NodeGroupArgs{
 * 			ScalingConfig: &eks.NodeGroupScalingConfigArgs{
 * 				DesiredSize: pulumi.Int(2),
 * 			},
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * ```
 * {{% /example %}}
 * {{% example %}}
 * ### Example IAM Role for EKS Node Group
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 * 
 * const example = new aws.iam.Role("example", {assumeRolePolicy: JSON.stringify({
 *     Statement: [{
 *         Action: "sts:AssumeRole",
 *         Effect: "Allow",
 *         Principal: {
 *             Service: "ec2.amazonaws.com",
 *         },
 *     }],
 *     Version: "2012-10-17",
 * })});
 * const example_AmazonEKSWorkerNodePolicy = new aws.iam.RolePolicyAttachment("example-AmazonEKSWorkerNodePolicy", {
 *     policyArn: "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
 *     role: example.name,
 * });
 * const example_AmazonEKSCNIPolicy = new aws.iam.RolePolicyAttachment("example-AmazonEKSCNIPolicy", {
 *     policyArn: "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy",
 *     role: example.name,
 * });
 * const example_AmazonEC2ContainerRegistryReadOnly = new aws.iam.RolePolicyAttachment("example-AmazonEC2ContainerRegistryReadOnly", {
 *     policyArn: "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
 *     role: example.name,
 * });
 * ```
 * ```python
 * import pulumi
 * import json
 * import pulumi_aws as aws
 * 
 * example = aws.iam.Role("example", assume_role_policy=json.dumps({
 *     "Statement": [{
 *         "Action": "sts:AssumeRole",
 *         "Effect": "Allow",
 *         "Principal": {
 *             "Service": "ec2.amazonaws.com",
 *         },
 *     }],
 *     "Version": "2012-10-17",
 * }))
 * example__amazon_eks_worker_node_policy = aws.iam.RolePolicyAttachment("example-AmazonEKSWorkerNodePolicy",
 *     policy_arn="arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
 *     role=example.name)
 * example__amazon_ekscni_policy = aws.iam.RolePolicyAttachment("example-AmazonEKSCNIPolicy",
 *     policy_arn="arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy",
 *     role=example.name)
 * example__amazon_ec2_container_registry_read_only = aws.iam.RolePolicyAttachment("example-AmazonEC2ContainerRegistryReadOnly",
 *     policy_arn="arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
 *     role=example.name)
 * ```
 * ```csharp
 * using System.Collections.Generic;
 * using System.Text.Json;
 * using Pulumi;
 * using Aws = Pulumi.Aws;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var example = new Aws.Iam.Role("example", new Aws.Iam.RoleArgs
 *         {
 *             AssumeRolePolicy = JsonSerializer.Serialize(new Dictionary<string, object?>
 *             {
 *                 { "Statement", new[]
 *                     {
 *                         new Dictionary<string, object?>
 *                         {
 *                             { "Action", "sts:AssumeRole" },
 *                             { "Effect", "Allow" },
 *                             { "Principal", new Dictionary<string, object?>
 *                             {
 *                                 { "Service", "ec2.amazonaws.com" },
 *                             } },
 *                         },
 *                     }
 *                  },
 *                 { "Version", "2012-10-17" },
 *             }),
 *         });
 *         var example_AmazonEKSWorkerNodePolicy = new Aws.Iam.RolePolicyAttachment("example-AmazonEKSWorkerNodePolicy", new Aws.Iam.RolePolicyAttachmentArgs
 *         {
 *             PolicyArn = "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
 *             Role = example.Name,
 *         });
 *         var example_AmazonEKSCNIPolicy = new Aws.Iam.RolePolicyAttachment("example-AmazonEKSCNIPolicy", new Aws.Iam.RolePolicyAttachmentArgs
 *         {
 *             PolicyArn = "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy",
 *             Role = example.Name,
 *         });
 *         var example_AmazonEC2ContainerRegistryReadOnly = new Aws.Iam.RolePolicyAttachment("example-AmazonEC2ContainerRegistryReadOnly", new Aws.Iam.RolePolicyAttachmentArgs
 *         {
 *             PolicyArn = "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
 *             Role = example.Name,
 *         });
 *     }
 * 
 * }
 * ```
 * ```go
 * package main
 * 
 * import (
 * 	"encoding/json"
 * 
 * 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/iam"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		tmpJSON0, err := json.Marshal(map[string]interface{}{
 * 			"Statement": []map[string]interface{}{
 * 				map[string]interface{}{
 * 					"Action": "sts:AssumeRole",
 * 					"Effect": "Allow",
 * 					"Principal": map[string]interface{}{
 * 						"Service": "ec2.amazonaws.com",
 * 					},
 * 				},
 * 			},
 * 			"Version": "2012-10-17",
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		json0 := string(tmpJSON0)
 * 		example, err := iam.NewRole(ctx, "example", &iam.RoleArgs{
 * 			AssumeRolePolicy: pulumi.String(json0),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		_, err = iam.NewRolePolicyAttachment(ctx, "example-AmazonEKSWorkerNodePolicy", &iam.RolePolicyAttachmentArgs{
 * 			PolicyArn: pulumi.String("arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy"),
 * 			Role:      example.Name,
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		_, err = iam.NewRolePolicyAttachment(ctx, "example-AmazonEKSCNIPolicy", &iam.RolePolicyAttachmentArgs{
 * 			PolicyArn: pulumi.String("arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy"),
 * 			Role:      example.Name,
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		_, err = iam.NewRolePolicyAttachment(ctx, "example-AmazonEC2ContainerRegistryReadOnly", &iam.RolePolicyAttachmentArgs{
 * 			PolicyArn: pulumi.String("arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly"),
 * 			Role:      example.Name,
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * ```
 * {{% /example %}}
 * {{% /examples %}}
 * 
 * ## Import
 * 
 * EKS Node Groups can be imported using the `cluster_name` and `node_group_name` separated by a colon (`:`), e.g.,
 * 
 * ```sh
 *  $ pulumi import aws:eks/nodeGroup:NodeGroup my_node_group my_cluster:my_node_group
 * ```
 * 
 *  
 */
@ResourceType(type="aws:eks/nodeGroup:NodeGroup")
public class NodeGroup extends io.pulumi.resources.CustomResource {
    /**
     * Type of Amazon Machine Image (AMI) associated with the EKS Node Group. See the [AWS documentation](https://docs.aws.amazon.com/eks/latest/APIReference/API_Nodegroup.html#AmazonEKS-Type-Nodegroup-amiType) for valid values. This provider will only perform drift detection if a configuration value is provided.
     * 
     */
    @Export(name="amiType", type=String.class, parameters={})
    private Output<String> amiType;

    /**
     * @return Type of Amazon Machine Image (AMI) associated with the EKS Node Group. See the [AWS documentation](https://docs.aws.amazon.com/eks/latest/APIReference/API_Nodegroup.html#AmazonEKS-Type-Nodegroup-amiType) for valid values. This provider will only perform drift detection if a configuration value is provided.
     * 
     */
    public Output<String> getAmiType() {
        return this.amiType;
    }
    /**
     * Amazon Resource Name (ARN) of the EKS Node Group.
     * 
     */
    @Export(name="arn", type=String.class, parameters={})
    private Output<String> arn;

    /**
     * @return Amazon Resource Name (ARN) of the EKS Node Group.
     * 
     */
    public Output<String> getArn() {
        return this.arn;
    }
    /**
     * Type of capacity associated with the EKS Node Group. Valid values: `ON_DEMAND`, `SPOT`. This provider will only perform drift detection if a configuration value is provided.
     * 
     */
    @Export(name="capacityType", type=String.class, parameters={})
    private Output<String> capacityType;

    /**
     * @return Type of capacity associated with the EKS Node Group. Valid values: `ON_DEMAND`, `SPOT`. This provider will only perform drift detection if a configuration value is provided.
     * 
     */
    public Output<String> getCapacityType() {
        return this.capacityType;
    }
    /**
     * Name of the EKS Cluster. Must be between 1-100 characters in length. Must begin with an alphanumeric character, and must only contain alphanumeric characters, dashes and underscores (`^[0-9A-Za-z][A-Za-z0-9\-_]+$`).
     * 
     */
    @Export(name="clusterName", type=String.class, parameters={})
    private Output<String> clusterName;

    /**
     * @return Name of the EKS Cluster. Must be between 1-100 characters in length. Must begin with an alphanumeric character, and must only contain alphanumeric characters, dashes and underscores (`^[0-9A-Za-z][A-Za-z0-9\-_]+$`).
     * 
     */
    public Output<String> getClusterName() {
        return this.clusterName;
    }
    /**
     * Disk size in GiB for worker nodes. Defaults to `20`. This provider will only perform drift detection if a configuration value is provided.
     * 
     */
    @Export(name="diskSize", type=Integer.class, parameters={})
    private Output<Integer> diskSize;

    /**
     * @return Disk size in GiB for worker nodes. Defaults to `20`. This provider will only perform drift detection if a configuration value is provided.
     * 
     */
    public Output<Integer> getDiskSize() {
        return this.diskSize;
    }
    /**
     * Force version update if existing pods are unable to be drained due to a pod disruption budget issue.
     * 
     */
    @Export(name="forceUpdateVersion", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> forceUpdateVersion;

    /**
     * @return Force version update if existing pods are unable to be drained due to a pod disruption budget issue.
     * 
     */
    public Output</* @Nullable */ Boolean> getForceUpdateVersion() {
        return this.forceUpdateVersion;
    }
    /**
     * List of instance types associated with the EKS Node Group. Defaults to `["t3.medium"]`. This provider will only perform drift detection if a configuration value is provided.
     * 
     */
    @Export(name="instanceTypes", type=List.class, parameters={String.class})
    private Output<List<String>> instanceTypes;

    /**
     * @return List of instance types associated with the EKS Node Group. Defaults to `["t3.medium"]`. This provider will only perform drift detection if a configuration value is provided.
     * 
     */
    public Output<List<String>> getInstanceTypes() {
        return this.instanceTypes;
    }
    /**
     * Key-value map of Kubernetes labels. Only labels that are applied with the EKS API are managed by this argument. Other Kubernetes labels applied to the EKS Node Group will not be managed.
     * 
     */
    @Export(name="labels", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> labels;

    /**
     * @return Key-value map of Kubernetes labels. Only labels that are applied with the EKS API are managed by this argument. Other Kubernetes labels applied to the EKS Node Group will not be managed.
     * 
     */
    public Output</* @Nullable */ Map<String,String>> getLabels() {
        return this.labels;
    }
    /**
     * Configuration block with Launch Template settings. Detailed below.
     * 
     */
    @Export(name="launchTemplate", type=NodeGroupLaunchTemplate.class, parameters={})
    private Output</* @Nullable */ NodeGroupLaunchTemplate> launchTemplate;

    /**
     * @return Configuration block with Launch Template settings. Detailed below.
     * 
     */
    public Output</* @Nullable */ NodeGroupLaunchTemplate> getLaunchTemplate() {
        return this.launchTemplate;
    }
    /**
     * Name of the EKS Node Group. If omitted, this provider will assign a random, unique name. Conflicts with `node_group_name_prefix`.
     * 
     */
    @Export(name="nodeGroupName", type=String.class, parameters={})
    private Output<String> nodeGroupName;

    /**
     * @return Name of the EKS Node Group. If omitted, this provider will assign a random, unique name. Conflicts with `node_group_name_prefix`.
     * 
     */
    public Output<String> getNodeGroupName() {
        return this.nodeGroupName;
    }
    /**
     * Creates a unique name beginning with the specified prefix. Conflicts with `node_group_name`.
     * 
     */
    @Export(name="nodeGroupNamePrefix", type=String.class, parameters={})
    private Output<String> nodeGroupNamePrefix;

    /**
     * @return Creates a unique name beginning with the specified prefix. Conflicts with `node_group_name`.
     * 
     */
    public Output<String> getNodeGroupNamePrefix() {
        return this.nodeGroupNamePrefix;
    }
    /**
     * Amazon Resource Name (ARN) of the IAM Role that provides permissions for the EKS Node Group.
     * 
     */
    @Export(name="nodeRoleArn", type=String.class, parameters={})
    private Output<String> nodeRoleArn;

    /**
     * @return Amazon Resource Name (ARN) of the IAM Role that provides permissions for the EKS Node Group.
     * 
     */
    public Output<String> getNodeRoleArn() {
        return this.nodeRoleArn;
    }
    /**
     * AMI version of the EKS Node Group. Defaults to latest version for Kubernetes version.
     * 
     */
    @Export(name="releaseVersion", type=String.class, parameters={})
    private Output<String> releaseVersion;

    /**
     * @return AMI version of the EKS Node Group. Defaults to latest version for Kubernetes version.
     * 
     */
    public Output<String> getReleaseVersion() {
        return this.releaseVersion;
    }
    /**
     * Configuration block with remote access settings. Detailed below.
     * 
     */
    @Export(name="remoteAccess", type=NodeGroupRemoteAccess.class, parameters={})
    private Output</* @Nullable */ NodeGroupRemoteAccess> remoteAccess;

    /**
     * @return Configuration block with remote access settings. Detailed below.
     * 
     */
    public Output</* @Nullable */ NodeGroupRemoteAccess> getRemoteAccess() {
        return this.remoteAccess;
    }
    /**
     * List of objects containing information about underlying resources.
     * 
     */
    @Export(name="resources", type=List.class, parameters={NodeGroupResource.class})
    private Output<List<NodeGroupResource>> resources;

    /**
     * @return List of objects containing information about underlying resources.
     * 
     */
    public Output<List<NodeGroupResource>> getResources() {
        return this.resources;
    }
    /**
     * Configuration block with scaling settings. Detailed below.
     * 
     */
    @Export(name="scalingConfig", type=NodeGroupScalingConfig.class, parameters={})
    private Output<NodeGroupScalingConfig> scalingConfig;

    /**
     * @return Configuration block with scaling settings. Detailed below.
     * 
     */
    public Output<NodeGroupScalingConfig> getScalingConfig() {
        return this.scalingConfig;
    }
    /**
     * Status of the EKS Node Group.
     * 
     */
    @Export(name="status", type=String.class, parameters={})
    private Output<String> status;

    /**
     * @return Status of the EKS Node Group.
     * 
     */
    public Output<String> getStatus() {
        return this.status;
    }
    /**
     * Identifiers of EC2 Subnets to associate with the EKS Node Group. These subnets must have the following resource tag: `kubernetes.io/cluster/CLUSTER_NAME` (where `CLUSTER_NAME` is replaced with the name of the EKS Cluster).
     * 
     */
    @Export(name="subnetIds", type=List.class, parameters={String.class})
    private Output<List<String>> subnetIds;

    /**
     * @return Identifiers of EC2 Subnets to associate with the EKS Node Group. These subnets must have the following resource tag: `kubernetes.io/cluster/CLUSTER_NAME` (where `CLUSTER_NAME` is replaced with the name of the EKS Cluster).
     * 
     */
    public Output<List<String>> getSubnetIds() {
        return this.subnetIds;
    }
    /**
     * Key-value map of resource tags. If configured with a provider defaultTags present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Export(name="tags", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return Key-value map of resource tags. If configured with a provider defaultTags present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Output</* @Nullable */ Map<String,String>> getTags() {
        return this.tags;
    }
    /**
     * A map of tags assigned to the resource, including those inherited from the provider.
     * 
     */
    @Export(name="tagsAll", type=Map.class, parameters={String.class, String.class})
    private Output<Map<String,String>> tagsAll;

    /**
     * @return A map of tags assigned to the resource, including those inherited from the provider.
     * 
     */
    public Output<Map<String,String>> getTagsAll() {
        return this.tagsAll;
    }
    /**
     * The Kubernetes taints to be applied to the nodes in the node group. Maximum of 50 taints per node group. Detailed below.
     * 
     */
    @Export(name="taints", type=List.class, parameters={NodeGroupTaint.class})
    private Output</* @Nullable */ List<NodeGroupTaint>> taints;

    /**
     * @return The Kubernetes taints to be applied to the nodes in the node group. Maximum of 50 taints per node group. Detailed below.
     * 
     */
    public Output</* @Nullable */ List<NodeGroupTaint>> getTaints() {
        return this.taints;
    }
    @Export(name="updateConfig", type=NodeGroupUpdateConfig.class, parameters={})
    private Output<NodeGroupUpdateConfig> updateConfig;

    public Output<NodeGroupUpdateConfig> getUpdateConfig() {
        return this.updateConfig;
    }
    /**
     * EC2 Launch Template version number. While the API accepts values like `$Default` and `$Latest`, the API will convert the value to the associated version number (e.g. `1`) on read and This provider will show a difference on next plan. Using the `default_version` or `latest_version` attribute of the `aws.ec2.LaunchTemplate` resource or data source is recommended for this argument.
     * 
     */
    @Export(name="version", type=String.class, parameters={})
    private Output<String> version;

    /**
     * @return EC2 Launch Template version number. While the API accepts values like `$Default` and `$Latest`, the API will convert the value to the associated version number (e.g. `1`) on read and This provider will show a difference on next plan. Using the `default_version` or `latest_version` attribute of the `aws.ec2.LaunchTemplate` resource or data source is recommended for this argument.
     * 
     */
    public Output<String> getVersion() {
        return this.version;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public NodeGroup(String name) {
        this(name, NodeGroupArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public NodeGroup(String name, NodeGroupArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public NodeGroup(String name, NodeGroupArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:eks/nodeGroup:NodeGroup", name, args == null ? NodeGroupArgs.Empty : args, makeResourceOptions(options, Output.empty()));
    }

    private NodeGroup(String name, Output<String> id, @Nullable NodeGroupState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:eks/nodeGroup:NodeGroup", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static NodeGroup get(String name, Output<String> id, @Nullable NodeGroupState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new NodeGroup(name, id, state, options);
    }
}
