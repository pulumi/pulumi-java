// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.wafv2;

import io.pulumi.aws.wafv2.inputs.WebAclLoggingConfigurationLoggingFilterArgs;
import io.pulumi.aws.wafv2.inputs.WebAclLoggingConfigurationRedactedFieldArgs;
import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class WebAclLoggingConfigurationArgs extends io.pulumi.resources.ResourceArgs {

    public static final WebAclLoggingConfigurationArgs Empty = new WebAclLoggingConfigurationArgs();

    /**
     * The Amazon Kinesis Data Firehose, Cloudwatch Log log group, or S3 bucket Amazon Resource Names (ARNs) that you want to associate with the web ACL.
     * 
     */
    @InputImport(name="logDestinationConfigs", required=true)
    private final Input<List<String>> logDestinationConfigs;

    public Input<List<String>> getLogDestinationConfigs() {
        return this.logDestinationConfigs;
    }

    /**
     * A configuration block that specifies which web requests are kept in the logs and which are dropped. You can filter on the rule action and on the web request labels that were applied by matching rules during web ACL evaluation. See Logging Filter below for more details.
     * 
     */
    @InputImport(name="loggingFilter")
    private final @Nullable Input<WebAclLoggingConfigurationLoggingFilterArgs> loggingFilter;

    public Input<WebAclLoggingConfigurationLoggingFilterArgs> getLoggingFilter() {
        return this.loggingFilter == null ? Input.empty() : this.loggingFilter;
    }

    /**
     * The parts of the request that you want to keep out of the logs. Up to 100 `redacted_fields` blocks are supported. See Redacted Fields below for more details.
     * 
     */
    @InputImport(name="redactedFields")
    private final @Nullable Input<List<WebAclLoggingConfigurationRedactedFieldArgs>> redactedFields;

    public Input<List<WebAclLoggingConfigurationRedactedFieldArgs>> getRedactedFields() {
        return this.redactedFields == null ? Input.empty() : this.redactedFields;
    }

    /**
     * The Amazon Resource Name (ARN) of the web ACL that you want to associate with `log_destination_configs`.
     * 
     */
    @InputImport(name="resourceArn", required=true)
    private final Input<String> resourceArn;

    public Input<String> getResourceArn() {
        return this.resourceArn;
    }

    public WebAclLoggingConfigurationArgs(
        Input<List<String>> logDestinationConfigs,
        @Nullable Input<WebAclLoggingConfigurationLoggingFilterArgs> loggingFilter,
        @Nullable Input<List<WebAclLoggingConfigurationRedactedFieldArgs>> redactedFields,
        Input<String> resourceArn) {
        this.logDestinationConfigs = Objects.requireNonNull(logDestinationConfigs, "expected parameter 'logDestinationConfigs' to be non-null");
        this.loggingFilter = loggingFilter;
        this.redactedFields = redactedFields;
        this.resourceArn = Objects.requireNonNull(resourceArn, "expected parameter 'resourceArn' to be non-null");
    }

    private WebAclLoggingConfigurationArgs() {
        this.logDestinationConfigs = Input.empty();
        this.loggingFilter = Input.empty();
        this.redactedFields = Input.empty();
        this.resourceArn = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(WebAclLoggingConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<List<String>> logDestinationConfigs;
        private @Nullable Input<WebAclLoggingConfigurationLoggingFilterArgs> loggingFilter;
        private @Nullable Input<List<WebAclLoggingConfigurationRedactedFieldArgs>> redactedFields;
        private Input<String> resourceArn;

        public Builder() {
    	      // Empty
        }

        public Builder(WebAclLoggingConfigurationArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.logDestinationConfigs = defaults.logDestinationConfigs;
    	      this.loggingFilter = defaults.loggingFilter;
    	      this.redactedFields = defaults.redactedFields;
    	      this.resourceArn = defaults.resourceArn;
        }

        public Builder setLogDestinationConfigs(Input<List<String>> logDestinationConfigs) {
            this.logDestinationConfigs = Objects.requireNonNull(logDestinationConfigs);
            return this;
        }

        public Builder setLogDestinationConfigs(List<String> logDestinationConfigs) {
            this.logDestinationConfigs = Input.of(Objects.requireNonNull(logDestinationConfigs));
            return this;
        }

        public Builder setLoggingFilter(@Nullable Input<WebAclLoggingConfigurationLoggingFilterArgs> loggingFilter) {
            this.loggingFilter = loggingFilter;
            return this;
        }

        public Builder setLoggingFilter(@Nullable WebAclLoggingConfigurationLoggingFilterArgs loggingFilter) {
            this.loggingFilter = Input.ofNullable(loggingFilter);
            return this;
        }

        public Builder setRedactedFields(@Nullable Input<List<WebAclLoggingConfigurationRedactedFieldArgs>> redactedFields) {
            this.redactedFields = redactedFields;
            return this;
        }

        public Builder setRedactedFields(@Nullable List<WebAclLoggingConfigurationRedactedFieldArgs> redactedFields) {
            this.redactedFields = Input.ofNullable(redactedFields);
            return this;
        }

        public Builder setResourceArn(Input<String> resourceArn) {
            this.resourceArn = Objects.requireNonNull(resourceArn);
            return this;
        }

        public Builder setResourceArn(String resourceArn) {
            this.resourceArn = Input.of(Objects.requireNonNull(resourceArn));
            return this;
        }
        public WebAclLoggingConfigurationArgs build() {
            return new WebAclLoggingConfigurationArgs(logDestinationConfigs, loggingFilter, redactedFields, resourceArn);
        }
    }
}
