// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.imagebuilder;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ComponentArgs extends io.pulumi.resources.ResourceArgs {

    public static final ComponentArgs Empty = new ComponentArgs();

    /**
     * Change description of the component.
     * 
     */
    @Import(name="changeDescription")
      private final @Nullable Output<String> changeDescription;

    public Output<String> getChangeDescription() {
        return this.changeDescription == null ? Output.empty() : this.changeDescription;
    }

    /**
     * Inline YAML string with data of the component. Exactly one of `data` and `uri` can be specified. the provider will only perform drift detection of its value when present in a configuration.
     * 
     */
    @Import(name="data")
      private final @Nullable Output<String> data;

    public Output<String> getData() {
        return this.data == null ? Output.empty() : this.data;
    }

    /**
     * Description of the component.
     * 
     */
    @Import(name="description")
      private final @Nullable Output<String> description;

    public Output<String> getDescription() {
        return this.description == null ? Output.empty() : this.description;
    }

    /**
     * Amazon Resource Name (ARN) of the Key Management Service (KMS) Key used to encrypt the component.
     * 
     */
    @Import(name="kmsKeyId")
      private final @Nullable Output<String> kmsKeyId;

    public Output<String> getKmsKeyId() {
        return this.kmsKeyId == null ? Output.empty() : this.kmsKeyId;
    }

    /**
     * Name of the component.
     * 
     */
    @Import(name="name")
      private final @Nullable Output<String> name;

    public Output<String> getName() {
        return this.name == null ? Output.empty() : this.name;
    }

    /**
     * Platform of the component.
     * 
     */
    @Import(name="platform", required=true)
      private final Output<String> platform;

    public Output<String> getPlatform() {
        return this.platform;
    }

    /**
     * Set of Operating Systems (OS) supported by the component.
     * 
     */
    @Import(name="supportedOsVersions")
      private final @Nullable Output<List<String>> supportedOsVersions;

    public Output<List<String>> getSupportedOsVersions() {
        return this.supportedOsVersions == null ? Output.empty() : this.supportedOsVersions;
    }

    /**
     * Key-value map of resource tags for the component. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Import(name="tags")
      private final @Nullable Output<Map<String,String>> tags;

    public Output<Map<String,String>> getTags() {
        return this.tags == null ? Output.empty() : this.tags;
    }

    /**
     * S3 URI with data of the component. Exactly one of `data` and `uri` can be specified.
     * 
     */
    @Import(name="uri")
      private final @Nullable Output<String> uri;

    public Output<String> getUri() {
        return this.uri == null ? Output.empty() : this.uri;
    }

    /**
     * Version of the component.
     * 
     */
    @Import(name="version", required=true)
      private final Output<String> version;

    public Output<String> getVersion() {
        return this.version;
    }

    public ComponentArgs(
        @Nullable Output<String> changeDescription,
        @Nullable Output<String> data,
        @Nullable Output<String> description,
        @Nullable Output<String> kmsKeyId,
        @Nullable Output<String> name,
        Output<String> platform,
        @Nullable Output<List<String>> supportedOsVersions,
        @Nullable Output<Map<String,String>> tags,
        @Nullable Output<String> uri,
        Output<String> version) {
        this.changeDescription = changeDescription;
        this.data = data;
        this.description = description;
        this.kmsKeyId = kmsKeyId;
        this.name = name;
        this.platform = Objects.requireNonNull(platform, "expected parameter 'platform' to be non-null");
        this.supportedOsVersions = supportedOsVersions;
        this.tags = tags;
        this.uri = uri;
        this.version = Objects.requireNonNull(version, "expected parameter 'version' to be non-null");
    }

    private ComponentArgs() {
        this.changeDescription = Output.empty();
        this.data = Output.empty();
        this.description = Output.empty();
        this.kmsKeyId = Output.empty();
        this.name = Output.empty();
        this.platform = Output.empty();
        this.supportedOsVersions = Output.empty();
        this.tags = Output.empty();
        this.uri = Output.empty();
        this.version = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ComponentArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> changeDescription;
        private @Nullable Output<String> data;
        private @Nullable Output<String> description;
        private @Nullable Output<String> kmsKeyId;
        private @Nullable Output<String> name;
        private Output<String> platform;
        private @Nullable Output<List<String>> supportedOsVersions;
        private @Nullable Output<Map<String,String>> tags;
        private @Nullable Output<String> uri;
        private Output<String> version;

        public Builder() {
    	      // Empty
        }

        public Builder(ComponentArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.changeDescription = defaults.changeDescription;
    	      this.data = defaults.data;
    	      this.description = defaults.description;
    	      this.kmsKeyId = defaults.kmsKeyId;
    	      this.name = defaults.name;
    	      this.platform = defaults.platform;
    	      this.supportedOsVersions = defaults.supportedOsVersions;
    	      this.tags = defaults.tags;
    	      this.uri = defaults.uri;
    	      this.version = defaults.version;
        }

        public Builder changeDescription(@Nullable Output<String> changeDescription) {
            this.changeDescription = changeDescription;
            return this;
        }

        public Builder changeDescription(@Nullable String changeDescription) {
            this.changeDescription = Output.ofNullable(changeDescription);
            return this;
        }

        public Builder data(@Nullable Output<String> data) {
            this.data = data;
            return this;
        }

        public Builder data(@Nullable String data) {
            this.data = Output.ofNullable(data);
            return this;
        }

        public Builder description(@Nullable Output<String> description) {
            this.description = description;
            return this;
        }

        public Builder description(@Nullable String description) {
            this.description = Output.ofNullable(description);
            return this;
        }

        public Builder kmsKeyId(@Nullable Output<String> kmsKeyId) {
            this.kmsKeyId = kmsKeyId;
            return this;
        }

        public Builder kmsKeyId(@Nullable String kmsKeyId) {
            this.kmsKeyId = Output.ofNullable(kmsKeyId);
            return this;
        }

        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }

        public Builder name(@Nullable String name) {
            this.name = Output.ofNullable(name);
            return this;
        }

        public Builder platform(Output<String> platform) {
            this.platform = Objects.requireNonNull(platform);
            return this;
        }

        public Builder platform(String platform) {
            this.platform = Output.of(Objects.requireNonNull(platform));
            return this;
        }

        public Builder supportedOsVersions(@Nullable Output<List<String>> supportedOsVersions) {
            this.supportedOsVersions = supportedOsVersions;
            return this;
        }

        public Builder supportedOsVersions(@Nullable List<String> supportedOsVersions) {
            this.supportedOsVersions = Output.ofNullable(supportedOsVersions);
            return this;
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }

        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = Output.ofNullable(tags);
            return this;
        }

        public Builder uri(@Nullable Output<String> uri) {
            this.uri = uri;
            return this;
        }

        public Builder uri(@Nullable String uri) {
            this.uri = Output.ofNullable(uri);
            return this;
        }

        public Builder version(Output<String> version) {
            this.version = Objects.requireNonNull(version);
            return this;
        }

        public Builder version(String version) {
            this.version = Output.of(Objects.requireNonNull(version));
            return this;
        }
        public ComponentArgs build() {
            return new ComponentArgs(changeDescription, data, description, kmsKeyId, name, platform, supportedOsVersions, tags, uri, version);
        }
    }
}
