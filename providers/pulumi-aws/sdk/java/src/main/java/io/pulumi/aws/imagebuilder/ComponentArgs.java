// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.imagebuilder;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ComponentArgs extends io.pulumi.resources.ResourceArgs {

    public static final ComponentArgs Empty = new ComponentArgs();

    /**
     * Change description of the component.
     * 
     */
    @InputImport(name="changeDescription")
    private final @Nullable Input<String> changeDescription;

    public Input<String> getChangeDescription() {
        return this.changeDescription == null ? Input.empty() : this.changeDescription;
    }

    /**
     * Inline YAML string with data of the component. Exactly one of `data` and `uri` can be specified. the provider will only perform drift detection of its value when present in a configuration.
     * 
     */
    @InputImport(name="data")
    private final @Nullable Input<String> data;

    public Input<String> getData() {
        return this.data == null ? Input.empty() : this.data;
    }

    /**
     * Description of the component.
     * 
     */
    @InputImport(name="description")
    private final @Nullable Input<String> description;

    public Input<String> getDescription() {
        return this.description == null ? Input.empty() : this.description;
    }

    /**
     * Amazon Resource Name (ARN) of the Key Management Service (KMS) Key used to encrypt the component.
     * 
     */
    @InputImport(name="kmsKeyId")
    private final @Nullable Input<String> kmsKeyId;

    public Input<String> getKmsKeyId() {
        return this.kmsKeyId == null ? Input.empty() : this.kmsKeyId;
    }

    /**
     * Name of the component.
     * 
     */
    @InputImport(name="name")
    private final @Nullable Input<String> name;

    public Input<String> getName() {
        return this.name == null ? Input.empty() : this.name;
    }

    /**
     * Platform of the component.
     * 
     */
    @InputImport(name="platform", required=true)
    private final Input<String> platform;

    public Input<String> getPlatform() {
        return this.platform;
    }

    /**
     * Set of Operating Systems (OS) supported by the component.
     * 
     */
    @InputImport(name="supportedOsVersions")
    private final @Nullable Input<List<String>> supportedOsVersions;

    public Input<List<String>> getSupportedOsVersions() {
        return this.supportedOsVersions == null ? Input.empty() : this.supportedOsVersions;
    }

    /**
     * Key-value map of resource tags for the component. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @InputImport(name="tags")
    private final @Nullable Input<Map<String,String>> tags;

    public Input<Map<String,String>> getTags() {
        return this.tags == null ? Input.empty() : this.tags;
    }

    /**
     * S3 URI with data of the component. Exactly one of `data` and `uri` can be specified.
     * 
     */
    @InputImport(name="uri")
    private final @Nullable Input<String> uri;

    public Input<String> getUri() {
        return this.uri == null ? Input.empty() : this.uri;
    }

    /**
     * Version of the component.
     * 
     */
    @InputImport(name="version", required=true)
    private final Input<String> version;

    public Input<String> getVersion() {
        return this.version;
    }

    public ComponentArgs(
        @Nullable Input<String> changeDescription,
        @Nullable Input<String> data,
        @Nullable Input<String> description,
        @Nullable Input<String> kmsKeyId,
        @Nullable Input<String> name,
        Input<String> platform,
        @Nullable Input<List<String>> supportedOsVersions,
        @Nullable Input<Map<String,String>> tags,
        @Nullable Input<String> uri,
        Input<String> version) {
        this.changeDescription = changeDescription;
        this.data = data;
        this.description = description;
        this.kmsKeyId = kmsKeyId;
        this.name = name;
        this.platform = Objects.requireNonNull(platform, "expected parameter 'platform' to be non-null");
        this.supportedOsVersions = supportedOsVersions;
        this.tags = tags;
        this.uri = uri;
        this.version = Objects.requireNonNull(version, "expected parameter 'version' to be non-null");
    }

    private ComponentArgs() {
        this.changeDescription = Input.empty();
        this.data = Input.empty();
        this.description = Input.empty();
        this.kmsKeyId = Input.empty();
        this.name = Input.empty();
        this.platform = Input.empty();
        this.supportedOsVersions = Input.empty();
        this.tags = Input.empty();
        this.uri = Input.empty();
        this.version = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ComponentArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> changeDescription;
        private @Nullable Input<String> data;
        private @Nullable Input<String> description;
        private @Nullable Input<String> kmsKeyId;
        private @Nullable Input<String> name;
        private Input<String> platform;
        private @Nullable Input<List<String>> supportedOsVersions;
        private @Nullable Input<Map<String,String>> tags;
        private @Nullable Input<String> uri;
        private Input<String> version;

        public Builder() {
    	      // Empty
        }

        public Builder(ComponentArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.changeDescription = defaults.changeDescription;
    	      this.data = defaults.data;
    	      this.description = defaults.description;
    	      this.kmsKeyId = defaults.kmsKeyId;
    	      this.name = defaults.name;
    	      this.platform = defaults.platform;
    	      this.supportedOsVersions = defaults.supportedOsVersions;
    	      this.tags = defaults.tags;
    	      this.uri = defaults.uri;
    	      this.version = defaults.version;
        }

        public Builder setChangeDescription(@Nullable Input<String> changeDescription) {
            this.changeDescription = changeDescription;
            return this;
        }

        public Builder setChangeDescription(@Nullable String changeDescription) {
            this.changeDescription = Input.ofNullable(changeDescription);
            return this;
        }

        public Builder setData(@Nullable Input<String> data) {
            this.data = data;
            return this;
        }

        public Builder setData(@Nullable String data) {
            this.data = Input.ofNullable(data);
            return this;
        }

        public Builder setDescription(@Nullable Input<String> description) {
            this.description = description;
            return this;
        }

        public Builder setDescription(@Nullable String description) {
            this.description = Input.ofNullable(description);
            return this;
        }

        public Builder setKmsKeyId(@Nullable Input<String> kmsKeyId) {
            this.kmsKeyId = kmsKeyId;
            return this;
        }

        public Builder setKmsKeyId(@Nullable String kmsKeyId) {
            this.kmsKeyId = Input.ofNullable(kmsKeyId);
            return this;
        }

        public Builder setName(@Nullable Input<String> name) {
            this.name = name;
            return this;
        }

        public Builder setName(@Nullable String name) {
            this.name = Input.ofNullable(name);
            return this;
        }

        public Builder setPlatform(Input<String> platform) {
            this.platform = Objects.requireNonNull(platform);
            return this;
        }

        public Builder setPlatform(String platform) {
            this.platform = Input.of(Objects.requireNonNull(platform));
            return this;
        }

        public Builder setSupportedOsVersions(@Nullable Input<List<String>> supportedOsVersions) {
            this.supportedOsVersions = supportedOsVersions;
            return this;
        }

        public Builder setSupportedOsVersions(@Nullable List<String> supportedOsVersions) {
            this.supportedOsVersions = Input.ofNullable(supportedOsVersions);
            return this;
        }

        public Builder setTags(@Nullable Input<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }

        public Builder setTags(@Nullable Map<String,String> tags) {
            this.tags = Input.ofNullable(tags);
            return this;
        }

        public Builder setUri(@Nullable Input<String> uri) {
            this.uri = uri;
            return this;
        }

        public Builder setUri(@Nullable String uri) {
            this.uri = Input.ofNullable(uri);
            return this;
        }

        public Builder setVersion(Input<String> version) {
            this.version = Objects.requireNonNull(version);
            return this;
        }

        public Builder setVersion(String version) {
            this.version = Input.of(Objects.requireNonNull(version));
            return this;
        }
        public ComponentArgs build() {
            return new ComponentArgs(changeDescription, data, description, kmsKeyId, name, platform, supportedOsVersions, tags, uri, version);
        }
    }
}
