// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.appsync;

import io.pulumi.aws.Utilities;
import io.pulumi.aws.appsync.FunctionArgs;
import io.pulumi.aws.appsync.inputs.FunctionState;
import io.pulumi.aws.appsync.outputs.FunctionSyncConfig;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Export;
import io.pulumi.core.annotations.ResourceType;
import java.lang.Integer;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * Provides an AppSync Function.
 * 
 * {{% examples %}}
 * ## Example Usage
 * {{% example %}}
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 * 
 * const exampleGraphQLApi = new aws.appsync.GraphQLApi("exampleGraphQLApi", {
 *     authenticationType: "API_KEY",
 *     schema: `type Mutation {
 *   putPost(id: ID!, title: String!): Post
 * }
 * 
 * type Post {
 *   id: ID!
 *   title: String!
 * }
 * 
 * type Query {
 *   singlePost(id: ID!): Post
 * }
 * 
 * schema {
 *   query: Query
 *   mutation: Mutation
 * }
 * `,
 * });
 * const exampleDataSource = new aws.appsync.DataSource("exampleDataSource", {
 *     apiId: exampleGraphQLApi.id,
 *     name: "example",
 *     type: "HTTP",
 *     httpConfig: {
 *         endpoint: "http://example.com",
 *     },
 * });
 * const exampleFunction = new aws.appsync.Function("exampleFunction", {
 *     apiId: exampleGraphQLApi.id,
 *     dataSource: exampleDataSource.name,
 *     name: "example",
 *     requestMappingTemplate: `{
 *     "version": "2018-05-29",
 *     "method": "GET",
 *     "resourcePath": "/",
 *     "params":{
 *         "headers": $utils.http.copyheaders($ctx.request.headers)
 *     }
 * }
 * `,
 *     responseMappingTemplate: `#if($ctx.result.statusCode == 200)
 *     $ctx.result.body
 * #else
 *     $utils.appendError($ctx.result.body, $ctx.result.statusCode)
 * #end
 * `,
 * });
 * ```
 * ```python
 * import pulumi
 * import pulumi_aws as aws
 * 
 * example_graph_ql_api = aws.appsync.GraphQLApi("exampleGraphQLApi",
 *     authentication_type="API_KEY",
 *     schema="""type Mutation {
 *   putPost(id: ID!, title: String!): Post
 * }
 * 
 * type Post {
 *   id: ID!
 *   title: String!
 * }
 * 
 * type Query {
 *   singlePost(id: ID!): Post
 * }
 * 
 * schema {
 *   query: Query
 *   mutation: Mutation
 * }
 * """)
 * example_data_source = aws.appsync.DataSource("exampleDataSource",
 *     api_id=example_graph_ql_api.id,
 *     name="example",
 *     type="HTTP",
 *     http_config=aws.appsync.DataSourceHttpConfigArgs(
 *         endpoint="http://example.com",
 *     ))
 * example_function = aws.appsync.Function("exampleFunction",
 *     api_id=example_graph_ql_api.id,
 *     data_source=example_data_source.name,
 *     name="example",
 *     request_mapping_template="""{
 *     "version": "2018-05-29",
 *     "method": "GET",
 *     "resourcePath": "/",
 *     "params":{
 *         "headers": $utils.http.copyheaders($ctx.request.headers)
 *     }
 * }
 * """,
 *     response_mapping_template="""#if($ctx.result.statusCode == 200)
 *     $ctx.result.body
 * #else
 *     $utils.appendError($ctx.result.body, $ctx.result.statusCode)
 * #end
 * """)
 * ```
 * ```csharp
 * using Pulumi;
 * using Aws = Pulumi.Aws;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var exampleGraphQLApi = new Aws.AppSync.GraphQLApi("exampleGraphQLApi", new Aws.AppSync.GraphQLApiArgs
 *         {
 *             AuthenticationType = "API_KEY",
 *             Schema = @"type Mutation {
 *   putPost(id: ID!, title: String!): Post
 * }
 * 
 * type Post {
 *   id: ID!
 *   title: String!
 * }
 * 
 * type Query {
 *   singlePost(id: ID!): Post
 * }
 * 
 * schema {
 *   query: Query
 *   mutation: Mutation
 * }
 * ",
 *         });
 *         var exampleDataSource = new Aws.AppSync.DataSource("exampleDataSource", new Aws.AppSync.DataSourceArgs
 *         {
 *             ApiId = exampleGraphQLApi.Id,
 *             Name = "example",
 *             Type = "HTTP",
 *             HttpConfig = new Aws.AppSync.Inputs.DataSourceHttpConfigArgs
 *             {
 *                 Endpoint = "http://example.com",
 *             },
 *         });
 *         var exampleFunction = new Aws.AppSync.Function("exampleFunction", new Aws.AppSync.FunctionArgs
 *         {
 *             ApiId = exampleGraphQLApi.Id,
 *             DataSource = exampleDataSource.Name,
 *             Name = "example",
 *             RequestMappingTemplate = @"{
 *     ""version"": ""2018-05-29"",
 *     ""method"": ""GET"",
 *     ""resourcePath"": ""/"",
 *     ""params"":{
 *         ""headers"": $utils.http.copyheaders($ctx.request.headers)
 *     }
 * }
 * ",
 *             ResponseMappingTemplate = @"#if($ctx.result.statusCode == 200)
 *     $ctx.result.body
 * #else
 *     $utils.appendError($ctx.result.body, $ctx.result.statusCode)
 * #end
 * ",
 *         });
 *     }
 * 
 * }
 * ```
 * ```go
 * package main
 * 
 * import (
 * 	"fmt"
 * 
 * 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/appsync"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		exampleGraphQLApi, err := appsync.NewGraphQLApi(ctx, "exampleGraphQLApi", &appsync.GraphQLApiArgs{
 * 			AuthenticationType: pulumi.String("API_KEY"),
 * 			Schema:             pulumi.String(fmt.Sprintf("%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v", "type Mutation {\n", "  putPost(id: ID!, title: String!): Post\n", "}\n", "\n", "type Post {\n", "  id: ID!\n", "  title: String!\n", "}\n", "\n", "type Query {\n", "  singlePost(id: ID!): Post\n", "}\n", "\n", "schema {\n", "  query: Query\n", "  mutation: Mutation\n", "}\n")),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		exampleDataSource, err := appsync.NewDataSource(ctx, "exampleDataSource", &appsync.DataSourceArgs{
 * 			ApiId: exampleGraphQLApi.ID(),
 * 			Name:  pulumi.String("example"),
 * 			Type:  pulumi.String("HTTP"),
 * 			HttpConfig: &appsync.DataSourceHttpConfigArgs{
 * 				Endpoint: pulumi.String("http://example.com"),
 * 			},
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		_, err = appsync.NewFunction(ctx, "exampleFunction", &appsync.FunctionArgs{
 * 			ApiId:                   exampleGraphQLApi.ID(),
 * 			DataSource:              exampleDataSource.Name,
 * 			Name:                    pulumi.String("example"),
 * 			RequestMappingTemplate:  pulumi.String(fmt.Sprintf("%v%v%v%v%v%v%v%v%v%v%v%v", "{\n", "    \"version\": \"2018-05-29\",\n", "    \"method\": \"GET\",\n", "    \"resourcePath\": \"/\",\n", "    \"params\":{\n", "        \"headers\": ", "$", "utils.http.copyheaders(", "$", "ctx.request.headers)\n", "    }\n", "}\n")),
 * 			ResponseMappingTemplate: pulumi.String(fmt.Sprintf("%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v", "#if(", "$", "ctx.result.statusCode == 200)\n", "    ", "$", "ctx.result.body\n", "#else\n", "    ", "$", "utils.appendError(", "$", "ctx.result.body, ", "$", "ctx.result.statusCode)\n", "#end\n")),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * ```
 * {{% /example %}}
 * {{% /examples %}}
 * 
 * ## Import
 * 
 * `aws_appsync_function` can be imported using the AppSync API ID and Function ID separated by `-`, e.g.,
 * 
 * ```sh
 *  $ pulumi import aws:appsync/function:Function example xxxxx-yyyyy
 * ```
 * 
 *  
 */
@ResourceType(type="aws:appsync/function:Function")
public class Function extends io.pulumi.resources.CustomResource {
    /**
     * The ID of the associated AppSync API.
     * 
     */
    @Export(name="apiId", type=String.class, parameters={})
    private Output<String> apiId;

    /**
     * @return The ID of the associated AppSync API.
     * 
     */
    public Output<String> getApiId() {
        return this.apiId;
    }
    /**
     * The ARN of the Function object.
     * 
     */
    @Export(name="arn", type=String.class, parameters={})
    private Output<String> arn;

    /**
     * @return The ARN of the Function object.
     * 
     */
    public Output<String> getArn() {
        return this.arn;
    }
    /**
     * The Function DataSource name.
     * 
     */
    @Export(name="dataSource", type=String.class, parameters={})
    private Output<String> dataSource;

    /**
     * @return The Function DataSource name.
     * 
     */
    public Output<String> getDataSource() {
        return this.dataSource;
    }
    /**
     * The Function description.
     * 
     */
    @Export(name="description", type=String.class, parameters={})
    private Output</* @Nullable */ String> description;

    /**
     * @return The Function description.
     * 
     */
    public Output</* @Nullable */ String> getDescription() {
        return this.description;
    }
    /**
     * A unique ID representing the Function object.
     * 
     */
    @Export(name="functionId", type=String.class, parameters={})
    private Output<String> functionId;

    /**
     * @return A unique ID representing the Function object.
     * 
     */
    public Output<String> getFunctionId() {
        return this.functionId;
    }
    /**
     * The version of the request mapping template. Currently the supported value is `2018-05-29`.
     * 
     */
    @Export(name="functionVersion", type=String.class, parameters={})
    private Output</* @Nullable */ String> functionVersion;

    /**
     * @return The version of the request mapping template. Currently the supported value is `2018-05-29`.
     * 
     */
    public Output</* @Nullable */ String> getFunctionVersion() {
        return this.functionVersion;
    }
    /**
     * The maximum batching size for a resolver. Valid values are between `0` and `2000`.
     * 
     */
    @Export(name="maxBatchSize", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> maxBatchSize;

    /**
     * @return The maximum batching size for a resolver. Valid values are between `0` and `2000`.
     * 
     */
    public Output</* @Nullable */ Integer> getMaxBatchSize() {
        return this.maxBatchSize;
    }
    /**
     * The Function name. The function name does not have to be unique.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The Function name. The function name does not have to be unique.
     * 
     */
    public Output<String> getName() {
        return this.name;
    }
    /**
     * The Function request mapping template. Functions support only the 2018-05-29 version of the request mapping template.
     * 
     */
    @Export(name="requestMappingTemplate", type=String.class, parameters={})
    private Output<String> requestMappingTemplate;

    /**
     * @return The Function request mapping template. Functions support only the 2018-05-29 version of the request mapping template.
     * 
     */
    public Output<String> getRequestMappingTemplate() {
        return this.requestMappingTemplate;
    }
    /**
     * The Function response mapping template.
     * 
     */
    @Export(name="responseMappingTemplate", type=String.class, parameters={})
    private Output<String> responseMappingTemplate;

    /**
     * @return The Function response mapping template.
     * 
     */
    public Output<String> getResponseMappingTemplate() {
        return this.responseMappingTemplate;
    }
    /**
     * Describes a Sync configuration for a resolver. See Sync Config.
     * 
     */
    @Export(name="syncConfig", type=FunctionSyncConfig.class, parameters={})
    private Output</* @Nullable */ FunctionSyncConfig> syncConfig;

    /**
     * @return Describes a Sync configuration for a resolver. See Sync Config.
     * 
     */
    public Output</* @Nullable */ FunctionSyncConfig> getSyncConfig() {
        return this.syncConfig;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Function(String name) {
        this(name, FunctionArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Function(String name, FunctionArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Function(String name, FunctionArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:appsync/function:Function", name, args == null ? FunctionArgs.Empty : args, makeResourceOptions(options, Output.empty()));
    }

    private Function(String name, Output<String> id, @Nullable FunctionState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:appsync/function:Function", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Function get(String name, Output<String> id, @Nullable FunctionState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new Function(name, id, state, options);
    }
}
