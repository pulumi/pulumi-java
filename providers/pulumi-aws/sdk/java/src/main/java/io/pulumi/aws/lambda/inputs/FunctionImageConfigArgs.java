// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.lambda.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class FunctionImageConfigArgs extends io.pulumi.resources.ResourceArgs {

    public static final FunctionImageConfigArgs Empty = new FunctionImageConfigArgs();

    /**
     * Parameters that you want to pass in with `entry_point`.
     * 
     */
    @InputImport(name="commands")
      private final @Nullable Output<List<String>> commands;

    public Output<List<String>> getCommands() {
        return this.commands == null ? Output.empty() : this.commands;
    }

    /**
     * Entry point to your application, which is typically the location of the runtime executable.
     * 
     */
    @InputImport(name="entryPoints")
      private final @Nullable Output<List<String>> entryPoints;

    public Output<List<String>> getEntryPoints() {
        return this.entryPoints == null ? Output.empty() : this.entryPoints;
    }

    /**
     * Working directory.
     * 
     */
    @InputImport(name="workingDirectory")
      private final @Nullable Output<String> workingDirectory;

    public Output<String> getWorkingDirectory() {
        return this.workingDirectory == null ? Output.empty() : this.workingDirectory;
    }

    public FunctionImageConfigArgs(
        @Nullable Output<List<String>> commands,
        @Nullable Output<List<String>> entryPoints,
        @Nullable Output<String> workingDirectory) {
        this.commands = commands;
        this.entryPoints = entryPoints;
        this.workingDirectory = workingDirectory;
    }

    private FunctionImageConfigArgs() {
        this.commands = Output.empty();
        this.entryPoints = Output.empty();
        this.workingDirectory = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FunctionImageConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<List<String>> commands;
        private @Nullable Output<List<String>> entryPoints;
        private @Nullable Output<String> workingDirectory;

        public Builder() {
    	      // Empty
        }

        public Builder(FunctionImageConfigArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.commands = defaults.commands;
    	      this.entryPoints = defaults.entryPoints;
    	      this.workingDirectory = defaults.workingDirectory;
        }

        public Builder commands(@Nullable Output<List<String>> commands) {
            this.commands = commands;
            return this;
        }

        public Builder commands(@Nullable List<String> commands) {
            this.commands = Output.ofNullable(commands);
            return this;
        }

        public Builder entryPoints(@Nullable Output<List<String>> entryPoints) {
            this.entryPoints = entryPoints;
            return this;
        }

        public Builder entryPoints(@Nullable List<String> entryPoints) {
            this.entryPoints = Output.ofNullable(entryPoints);
            return this;
        }

        public Builder workingDirectory(@Nullable Output<String> workingDirectory) {
            this.workingDirectory = workingDirectory;
            return this;
        }

        public Builder workingDirectory(@Nullable String workingDirectory) {
            this.workingDirectory = Output.ofNullable(workingDirectory);
            return this;
        }
        public FunctionImageConfigArgs build() {
            return new FunctionImageConfigArgs(commands, entryPoints, workingDirectory);
        }
    }
}
