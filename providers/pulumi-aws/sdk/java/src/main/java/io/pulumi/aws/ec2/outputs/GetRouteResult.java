// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.ec2.outputs;

import io.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetRouteResult {
    private final String carrierGatewayId;
    private final String destinationCidrBlock;
    private final String destinationIpv6CidrBlock;
    private final String destinationPrefixListId;
    private final String egressOnlyGatewayId;
    private final String gatewayId;
    /**
     * The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    private final String instanceId;
    private final String localGatewayId;
    private final String natGatewayId;
    private final String networkInterfaceId;
    private final String routeTableId;
    private final String transitGatewayId;
    private final String vpcPeeringConnectionId;

    @CustomType.Constructor
    private GetRouteResult(
        @CustomType.Parameter("carrierGatewayId") String carrierGatewayId,
        @CustomType.Parameter("destinationCidrBlock") String destinationCidrBlock,
        @CustomType.Parameter("destinationIpv6CidrBlock") String destinationIpv6CidrBlock,
        @CustomType.Parameter("destinationPrefixListId") String destinationPrefixListId,
        @CustomType.Parameter("egressOnlyGatewayId") String egressOnlyGatewayId,
        @CustomType.Parameter("gatewayId") String gatewayId,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("instanceId") String instanceId,
        @CustomType.Parameter("localGatewayId") String localGatewayId,
        @CustomType.Parameter("natGatewayId") String natGatewayId,
        @CustomType.Parameter("networkInterfaceId") String networkInterfaceId,
        @CustomType.Parameter("routeTableId") String routeTableId,
        @CustomType.Parameter("transitGatewayId") String transitGatewayId,
        @CustomType.Parameter("vpcPeeringConnectionId") String vpcPeeringConnectionId) {
        this.carrierGatewayId = carrierGatewayId;
        this.destinationCidrBlock = destinationCidrBlock;
        this.destinationIpv6CidrBlock = destinationIpv6CidrBlock;
        this.destinationPrefixListId = destinationPrefixListId;
        this.egressOnlyGatewayId = egressOnlyGatewayId;
        this.gatewayId = gatewayId;
        this.id = id;
        this.instanceId = instanceId;
        this.localGatewayId = localGatewayId;
        this.natGatewayId = natGatewayId;
        this.networkInterfaceId = networkInterfaceId;
        this.routeTableId = routeTableId;
        this.transitGatewayId = transitGatewayId;
        this.vpcPeeringConnectionId = vpcPeeringConnectionId;
    }

    public String getCarrierGatewayId() {
        return this.carrierGatewayId;
    }
    public String getDestinationCidrBlock() {
        return this.destinationCidrBlock;
    }
    public String getDestinationIpv6CidrBlock() {
        return this.destinationIpv6CidrBlock;
    }
    public String getDestinationPrefixListId() {
        return this.destinationPrefixListId;
    }
    public String getEgressOnlyGatewayId() {
        return this.egressOnlyGatewayId;
    }
    public String getGatewayId() {
        return this.gatewayId;
    }
    /**
     * The provider-assigned unique ID for this managed resource.
     * 
    */
    public String getId() {
        return this.id;
    }
    public String getInstanceId() {
        return this.instanceId;
    }
    public String getLocalGatewayId() {
        return this.localGatewayId;
    }
    public String getNatGatewayId() {
        return this.natGatewayId;
    }
    public String getNetworkInterfaceId() {
        return this.networkInterfaceId;
    }
    public String getRouteTableId() {
        return this.routeTableId;
    }
    public String getTransitGatewayId() {
        return this.transitGatewayId;
    }
    public String getVpcPeeringConnectionId() {
        return this.vpcPeeringConnectionId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRouteResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String carrierGatewayId;
        private String destinationCidrBlock;
        private String destinationIpv6CidrBlock;
        private String destinationPrefixListId;
        private String egressOnlyGatewayId;
        private String gatewayId;
        private String id;
        private String instanceId;
        private String localGatewayId;
        private String natGatewayId;
        private String networkInterfaceId;
        private String routeTableId;
        private String transitGatewayId;
        private String vpcPeeringConnectionId;

        public Builder() {
    	      // Empty
        }

        public Builder(GetRouteResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.carrierGatewayId = defaults.carrierGatewayId;
    	      this.destinationCidrBlock = defaults.destinationCidrBlock;
    	      this.destinationIpv6CidrBlock = defaults.destinationIpv6CidrBlock;
    	      this.destinationPrefixListId = defaults.destinationPrefixListId;
    	      this.egressOnlyGatewayId = defaults.egressOnlyGatewayId;
    	      this.gatewayId = defaults.gatewayId;
    	      this.id = defaults.id;
    	      this.instanceId = defaults.instanceId;
    	      this.localGatewayId = defaults.localGatewayId;
    	      this.natGatewayId = defaults.natGatewayId;
    	      this.networkInterfaceId = defaults.networkInterfaceId;
    	      this.routeTableId = defaults.routeTableId;
    	      this.transitGatewayId = defaults.transitGatewayId;
    	      this.vpcPeeringConnectionId = defaults.vpcPeeringConnectionId;
        }

        public Builder carrierGatewayId(String carrierGatewayId) {
            this.carrierGatewayId = Objects.requireNonNull(carrierGatewayId);
            return this;
        }

        public Builder destinationCidrBlock(String destinationCidrBlock) {
            this.destinationCidrBlock = Objects.requireNonNull(destinationCidrBlock);
            return this;
        }

        public Builder destinationIpv6CidrBlock(String destinationIpv6CidrBlock) {
            this.destinationIpv6CidrBlock = Objects.requireNonNull(destinationIpv6CidrBlock);
            return this;
        }

        public Builder destinationPrefixListId(String destinationPrefixListId) {
            this.destinationPrefixListId = Objects.requireNonNull(destinationPrefixListId);
            return this;
        }

        public Builder egressOnlyGatewayId(String egressOnlyGatewayId) {
            this.egressOnlyGatewayId = Objects.requireNonNull(egressOnlyGatewayId);
            return this;
        }

        public Builder gatewayId(String gatewayId) {
            this.gatewayId = Objects.requireNonNull(gatewayId);
            return this;
        }

        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }

        public Builder instanceId(String instanceId) {
            this.instanceId = Objects.requireNonNull(instanceId);
            return this;
        }

        public Builder localGatewayId(String localGatewayId) {
            this.localGatewayId = Objects.requireNonNull(localGatewayId);
            return this;
        }

        public Builder natGatewayId(String natGatewayId) {
            this.natGatewayId = Objects.requireNonNull(natGatewayId);
            return this;
        }

        public Builder networkInterfaceId(String networkInterfaceId) {
            this.networkInterfaceId = Objects.requireNonNull(networkInterfaceId);
            return this;
        }

        public Builder routeTableId(String routeTableId) {
            this.routeTableId = Objects.requireNonNull(routeTableId);
            return this;
        }

        public Builder transitGatewayId(String transitGatewayId) {
            this.transitGatewayId = Objects.requireNonNull(transitGatewayId);
            return this;
        }

        public Builder vpcPeeringConnectionId(String vpcPeeringConnectionId) {
            this.vpcPeeringConnectionId = Objects.requireNonNull(vpcPeeringConnectionId);
            return this;
        }
        public GetRouteResult build() {
            return new GetRouteResult(carrierGatewayId, destinationCidrBlock, destinationIpv6CidrBlock, destinationPrefixListId, egressOnlyGatewayId, gatewayId, id, instanceId, localGatewayId, natGatewayId, networkInterfaceId, routeTableId, transitGatewayId, vpcPeeringConnectionId);
        }
    }
}
