// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.acm.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class CertificateOptionsGetArgs extends io.pulumi.resources.ResourceArgs {

    public static final CertificateOptionsGetArgs Empty = new CertificateOptionsGetArgs();

    /**
     * Specifies whether certificate details should be added to a certificate transparency log. Valid values are `ENABLED` or `DISABLED`. See https://docs.aws.amazon.com/acm/latest/userguide/acm-concepts.html#concept-transparency for more details.
     * 
     */
    @Import(name="certificateTransparencyLoggingPreference")
      private final @Nullable Output<String> certificateTransparencyLoggingPreference;

    public Output<String> certificateTransparencyLoggingPreference() {
        return this.certificateTransparencyLoggingPreference == null ? Codegen.empty() : this.certificateTransparencyLoggingPreference;
    }

    public CertificateOptionsGetArgs(@Nullable Output<String> certificateTransparencyLoggingPreference) {
        this.certificateTransparencyLoggingPreference = certificateTransparencyLoggingPreference;
    }

    private CertificateOptionsGetArgs() {
        this.certificateTransparencyLoggingPreference = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CertificateOptionsGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> certificateTransparencyLoggingPreference;

        public Builder() {
    	      // Empty
        }

        public Builder(CertificateOptionsGetArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.certificateTransparencyLoggingPreference = defaults.certificateTransparencyLoggingPreference;
        }

        public Builder certificateTransparencyLoggingPreference(@Nullable Output<String> certificateTransparencyLoggingPreference) {
            this.certificateTransparencyLoggingPreference = certificateTransparencyLoggingPreference;
            return this;
        }
        public Builder certificateTransparencyLoggingPreference(@Nullable String certificateTransparencyLoggingPreference) {
            this.certificateTransparencyLoggingPreference = Codegen.ofNullable(certificateTransparencyLoggingPreference);
            return this;
        }        public CertificateOptionsGetArgs build() {
            return new CertificateOptionsGetArgs(certificateTransparencyLoggingPreference);
        }
    }
}
