// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.shield;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ProtectionGroupArgs extends io.pulumi.resources.ResourceArgs {

    public static final ProtectionGroupArgs Empty = new ProtectionGroupArgs();

    /**
     * Defines how AWS Shield combines resource data for the group in order to detect, mitigate, and report events.
     * 
     */
    @Import(name="aggregation", required=true)
      private final Output<String> aggregation;

    public Output<String> getAggregation() {
        return this.aggregation;
    }

    /**
     * The Amazon Resource Names (ARNs) of the resources to include in the protection group. You must set this when you set `pattern` to ARBITRARY and you must not set it for any other `pattern` setting.
     * 
     */
    @Import(name="members")
      private final @Nullable Output<List<String>> members;

    public Output<List<String>> getMembers() {
        return this.members == null ? Output.empty() : this.members;
    }

    /**
     * The criteria to use to choose the protected resources for inclusion in the group.
     * 
     */
    @Import(name="pattern", required=true)
      private final Output<String> pattern;

    public Output<String> getPattern() {
        return this.pattern;
    }

    /**
     * The name of the protection group.
     * 
     */
    @Import(name="protectionGroupId", required=true)
      private final Output<String> protectionGroupId;

    public Output<String> getProtectionGroupId() {
        return this.protectionGroupId;
    }

    /**
     * The resource type to include in the protection group. You must set this when you set `pattern` to BY_RESOURCE_TYPE and you must not set it for any other `pattern` setting.
     * 
     */
    @Import(name="resourceType")
      private final @Nullable Output<String> resourceType;

    public Output<String> getPropResourceType() {
        return this.resourceType == null ? Output.empty() : this.resourceType;
    }

    /**
     * Key-value map of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Import(name="tags")
      private final @Nullable Output<Map<String,String>> tags;

    public Output<Map<String,String>> getTags() {
        return this.tags == null ? Output.empty() : this.tags;
    }

    public ProtectionGroupArgs(
        Output<String> aggregation,
        @Nullable Output<List<String>> members,
        Output<String> pattern,
        Output<String> protectionGroupId,
        @Nullable Output<String> resourceType,
        @Nullable Output<Map<String,String>> tags) {
        this.aggregation = Objects.requireNonNull(aggregation, "expected parameter 'aggregation' to be non-null");
        this.members = members;
        this.pattern = Objects.requireNonNull(pattern, "expected parameter 'pattern' to be non-null");
        this.protectionGroupId = Objects.requireNonNull(protectionGroupId, "expected parameter 'protectionGroupId' to be non-null");
        this.resourceType = resourceType;
        this.tags = tags;
    }

    private ProtectionGroupArgs() {
        this.aggregation = Output.empty();
        this.members = Output.empty();
        this.pattern = Output.empty();
        this.protectionGroupId = Output.empty();
        this.resourceType = Output.empty();
        this.tags = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ProtectionGroupArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> aggregation;
        private @Nullable Output<List<String>> members;
        private Output<String> pattern;
        private Output<String> protectionGroupId;
        private @Nullable Output<String> resourceType;
        private @Nullable Output<Map<String,String>> tags;

        public Builder() {
    	      // Empty
        }

        public Builder(ProtectionGroupArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.aggregation = defaults.aggregation;
    	      this.members = defaults.members;
    	      this.pattern = defaults.pattern;
    	      this.protectionGroupId = defaults.protectionGroupId;
    	      this.resourceType = defaults.resourceType;
    	      this.tags = defaults.tags;
        }

        public Builder aggregation(Output<String> aggregation) {
            this.aggregation = Objects.requireNonNull(aggregation);
            return this;
        }
        public Builder aggregation(String aggregation) {
            this.aggregation = Output.of(Objects.requireNonNull(aggregation));
            return this;
        }
        public Builder members(@Nullable Output<List<String>> members) {
            this.members = members;
            return this;
        }
        public Builder members(@Nullable List<String> members) {
            this.members = Output.ofNullable(members);
            return this;
        }
        public Builder members(String... members) {
            return members(List.of(members));
        }
        public Builder pattern(Output<String> pattern) {
            this.pattern = Objects.requireNonNull(pattern);
            return this;
        }
        public Builder pattern(String pattern) {
            this.pattern = Output.of(Objects.requireNonNull(pattern));
            return this;
        }
        public Builder protectionGroupId(Output<String> protectionGroupId) {
            this.protectionGroupId = Objects.requireNonNull(protectionGroupId);
            return this;
        }
        public Builder protectionGroupId(String protectionGroupId) {
            this.protectionGroupId = Output.of(Objects.requireNonNull(protectionGroupId));
            return this;
        }
        public Builder resourceType(@Nullable Output<String> resourceType) {
            this.resourceType = resourceType;
            return this;
        }
        public Builder resourceType(@Nullable String resourceType) {
            this.resourceType = Output.ofNullable(resourceType);
            return this;
        }
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = Output.ofNullable(tags);
            return this;
        }        public ProtectionGroupArgs build() {
            return new ProtectionGroupArgs(aggregation, members, pattern, protectionGroupId, resourceType, tags);
        }
    }
}
