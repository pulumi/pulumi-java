// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.apigateway.inputs;

import io.pulumi.aws.apigateway.inputs.UsagePlanApiStageThrottleArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class UsagePlanApiStageArgs extends io.pulumi.resources.ResourceArgs {

    public static final UsagePlanApiStageArgs Empty = new UsagePlanApiStageArgs();

    /**
     * API Id of the associated API stage in a usage plan.
     * 
     */
    @InputImport(name="apiId", required=true)
      private final Output<String> apiId;

    public Output<String> getApiId() {
        return this.apiId;
    }

    /**
     * API stage name of the associated API stage in a usage plan.
     * 
     */
    @InputImport(name="stage", required=true)
      private final Output<String> stage;

    public Output<String> getStage() {
        return this.stage;
    }

    /**
     * The throttling limits of the usage plan.
     * 
     */
    @InputImport(name="throttles")
      private final @Nullable Output<List<UsagePlanApiStageThrottleArgs>> throttles;

    public Output<List<UsagePlanApiStageThrottleArgs>> getThrottles() {
        return this.throttles == null ? Output.empty() : this.throttles;
    }

    public UsagePlanApiStageArgs(
        Output<String> apiId,
        Output<String> stage,
        @Nullable Output<List<UsagePlanApiStageThrottleArgs>> throttles) {
        this.apiId = Objects.requireNonNull(apiId, "expected parameter 'apiId' to be non-null");
        this.stage = Objects.requireNonNull(stage, "expected parameter 'stage' to be non-null");
        this.throttles = throttles;
    }

    private UsagePlanApiStageArgs() {
        this.apiId = Output.empty();
        this.stage = Output.empty();
        this.throttles = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(UsagePlanApiStageArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> apiId;
        private Output<String> stage;
        private @Nullable Output<List<UsagePlanApiStageThrottleArgs>> throttles;

        public Builder() {
    	      // Empty
        }

        public Builder(UsagePlanApiStageArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.apiId = defaults.apiId;
    	      this.stage = defaults.stage;
    	      this.throttles = defaults.throttles;
        }

        public Builder apiId(Output<String> apiId) {
            this.apiId = Objects.requireNonNull(apiId);
            return this;
        }

        public Builder apiId(String apiId) {
            this.apiId = Output.of(Objects.requireNonNull(apiId));
            return this;
        }

        public Builder stage(Output<String> stage) {
            this.stage = Objects.requireNonNull(stage);
            return this;
        }

        public Builder stage(String stage) {
            this.stage = Output.of(Objects.requireNonNull(stage));
            return this;
        }

        public Builder throttles(@Nullable Output<List<UsagePlanApiStageThrottleArgs>> throttles) {
            this.throttles = throttles;
            return this;
        }

        public Builder throttles(@Nullable List<UsagePlanApiStageThrottleArgs> throttles) {
            this.throttles = Output.ofNullable(throttles);
            return this;
        }
        public UsagePlanApiStageArgs build() {
            return new UsagePlanApiStageArgs(apiId, stage, throttles);
        }
    }
}
