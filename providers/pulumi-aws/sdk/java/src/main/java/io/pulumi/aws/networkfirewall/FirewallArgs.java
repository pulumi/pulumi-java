// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.networkfirewall;

import io.pulumi.aws.networkfirewall.inputs.FirewallSubnetMappingArgs;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class FirewallArgs extends io.pulumi.resources.ResourceArgs {

    public static final FirewallArgs Empty = new FirewallArgs();

    /**
     * A boolean flag indicating whether it is possible to delete the firewall. Defaults to `false`.
     * 
     */
    @InputImport(name="deleteProtection")
      private final @Nullable Input<Boolean> deleteProtection;

    public Input<Boolean> getDeleteProtection() {
        return this.deleteProtection == null ? Input.empty() : this.deleteProtection;
    }

    /**
     * A friendly description of the firewall.
     * 
     */
    @InputImport(name="description")
      private final @Nullable Input<String> description;

    public Input<String> getDescription() {
        return this.description == null ? Input.empty() : this.description;
    }

    /**
     * The Amazon Resource Name (ARN) of the VPC Firewall policy.
     * 
     */
    @InputImport(name="firewallPolicyArn", required=true)
      private final Input<String> firewallPolicyArn;

    public Input<String> getFirewallPolicyArn() {
        return this.firewallPolicyArn;
    }

    /**
     * A boolean flag indicating whether it is possible to change the associated firewall policy. Defaults to `false`.
     * 
     */
    @InputImport(name="firewallPolicyChangeProtection")
      private final @Nullable Input<Boolean> firewallPolicyChangeProtection;

    public Input<Boolean> getFirewallPolicyChangeProtection() {
        return this.firewallPolicyChangeProtection == null ? Input.empty() : this.firewallPolicyChangeProtection;
    }

    /**
     * A friendly name of the firewall.
     * 
     */
    @InputImport(name="name")
      private final @Nullable Input<String> name;

    public Input<String> getName() {
        return this.name == null ? Input.empty() : this.name;
    }

    /**
     * A boolean flag indicating whether it is possible to change the associated subnet(s). Defaults to `false`.
     * 
     */
    @InputImport(name="subnetChangeProtection")
      private final @Nullable Input<Boolean> subnetChangeProtection;

    public Input<Boolean> getSubnetChangeProtection() {
        return this.subnetChangeProtection == null ? Input.empty() : this.subnetChangeProtection;
    }

    /**
     * Set of configuration blocks describing the public subnets. Each subnet must belong to a different Availability Zone in the VPC. AWS Network Firewall creates a firewall endpoint in each subnet. See Subnet Mapping below for details.
     * 
     */
    @InputImport(name="subnetMappings", required=true)
      private final Input<List<FirewallSubnetMappingArgs>> subnetMappings;

    public Input<List<FirewallSubnetMappingArgs>> getSubnetMappings() {
        return this.subnetMappings;
    }

    /**
     * Map of resource tags to associate with the resource. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @InputImport(name="tags")
      private final @Nullable Input<Map<String,String>> tags;

    public Input<Map<String,String>> getTags() {
        return this.tags == null ? Input.empty() : this.tags;
    }

    /**
     * The unique identifier of the VPC where AWS Network Firewall should create the firewall.
     * 
     */
    @InputImport(name="vpcId", required=true)
      private final Input<String> vpcId;

    public Input<String> getVpcId() {
        return this.vpcId;
    }

    public FirewallArgs(
        @Nullable Input<Boolean> deleteProtection,
        @Nullable Input<String> description,
        Input<String> firewallPolicyArn,
        @Nullable Input<Boolean> firewallPolicyChangeProtection,
        @Nullable Input<String> name,
        @Nullable Input<Boolean> subnetChangeProtection,
        Input<List<FirewallSubnetMappingArgs>> subnetMappings,
        @Nullable Input<Map<String,String>> tags,
        Input<String> vpcId) {
        this.deleteProtection = deleteProtection;
        this.description = description;
        this.firewallPolicyArn = Objects.requireNonNull(firewallPolicyArn, "expected parameter 'firewallPolicyArn' to be non-null");
        this.firewallPolicyChangeProtection = firewallPolicyChangeProtection;
        this.name = name;
        this.subnetChangeProtection = subnetChangeProtection;
        this.subnetMappings = Objects.requireNonNull(subnetMappings, "expected parameter 'subnetMappings' to be non-null");
        this.tags = tags;
        this.vpcId = Objects.requireNonNull(vpcId, "expected parameter 'vpcId' to be non-null");
    }

    private FirewallArgs() {
        this.deleteProtection = Input.empty();
        this.description = Input.empty();
        this.firewallPolicyArn = Input.empty();
        this.firewallPolicyChangeProtection = Input.empty();
        this.name = Input.empty();
        this.subnetChangeProtection = Input.empty();
        this.subnetMappings = Input.empty();
        this.tags = Input.empty();
        this.vpcId = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FirewallArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<Boolean> deleteProtection;
        private @Nullable Input<String> description;
        private Input<String> firewallPolicyArn;
        private @Nullable Input<Boolean> firewallPolicyChangeProtection;
        private @Nullable Input<String> name;
        private @Nullable Input<Boolean> subnetChangeProtection;
        private Input<List<FirewallSubnetMappingArgs>> subnetMappings;
        private @Nullable Input<Map<String,String>> tags;
        private Input<String> vpcId;

        public Builder() {
    	      // Empty
        }

        public Builder(FirewallArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.deleteProtection = defaults.deleteProtection;
    	      this.description = defaults.description;
    	      this.firewallPolicyArn = defaults.firewallPolicyArn;
    	      this.firewallPolicyChangeProtection = defaults.firewallPolicyChangeProtection;
    	      this.name = defaults.name;
    	      this.subnetChangeProtection = defaults.subnetChangeProtection;
    	      this.subnetMappings = defaults.subnetMappings;
    	      this.tags = defaults.tags;
    	      this.vpcId = defaults.vpcId;
        }

        public Builder deleteProtection(@Nullable Input<Boolean> deleteProtection) {
            this.deleteProtection = deleteProtection;
            return this;
        }

        public Builder deleteProtection(@Nullable Boolean deleteProtection) {
            this.deleteProtection = Input.ofNullable(deleteProtection);
            return this;
        }

        public Builder description(@Nullable Input<String> description) {
            this.description = description;
            return this;
        }

        public Builder description(@Nullable String description) {
            this.description = Input.ofNullable(description);
            return this;
        }

        public Builder firewallPolicyArn(Input<String> firewallPolicyArn) {
            this.firewallPolicyArn = Objects.requireNonNull(firewallPolicyArn);
            return this;
        }

        public Builder firewallPolicyArn(String firewallPolicyArn) {
            this.firewallPolicyArn = Input.of(Objects.requireNonNull(firewallPolicyArn));
            return this;
        }

        public Builder firewallPolicyChangeProtection(@Nullable Input<Boolean> firewallPolicyChangeProtection) {
            this.firewallPolicyChangeProtection = firewallPolicyChangeProtection;
            return this;
        }

        public Builder firewallPolicyChangeProtection(@Nullable Boolean firewallPolicyChangeProtection) {
            this.firewallPolicyChangeProtection = Input.ofNullable(firewallPolicyChangeProtection);
            return this;
        }

        public Builder name(@Nullable Input<String> name) {
            this.name = name;
            return this;
        }

        public Builder name(@Nullable String name) {
            this.name = Input.ofNullable(name);
            return this;
        }

        public Builder subnetChangeProtection(@Nullable Input<Boolean> subnetChangeProtection) {
            this.subnetChangeProtection = subnetChangeProtection;
            return this;
        }

        public Builder subnetChangeProtection(@Nullable Boolean subnetChangeProtection) {
            this.subnetChangeProtection = Input.ofNullable(subnetChangeProtection);
            return this;
        }

        public Builder subnetMappings(Input<List<FirewallSubnetMappingArgs>> subnetMappings) {
            this.subnetMappings = Objects.requireNonNull(subnetMappings);
            return this;
        }

        public Builder subnetMappings(List<FirewallSubnetMappingArgs> subnetMappings) {
            this.subnetMappings = Input.of(Objects.requireNonNull(subnetMappings));
            return this;
        }

        public Builder tags(@Nullable Input<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }

        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = Input.ofNullable(tags);
            return this;
        }

        public Builder vpcId(Input<String> vpcId) {
            this.vpcId = Objects.requireNonNull(vpcId);
            return this;
        }

        public Builder vpcId(String vpcId) {
            this.vpcId = Input.of(Objects.requireNonNull(vpcId));
            return this;
        }
        public FirewallArgs build() {
            return new FirewallArgs(deleteProtection, description, firewallPolicyArn, firewallPolicyChangeProtection, name, subnetChangeProtection, subnetMappings, tags, vpcId);
        }
    }
}
