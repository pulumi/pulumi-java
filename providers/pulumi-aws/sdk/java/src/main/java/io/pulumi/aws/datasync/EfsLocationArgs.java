// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.datasync;

import io.pulumi.aws.datasync.inputs.EfsLocationEc2ConfigArgs;
import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class EfsLocationArgs extends io.pulumi.resources.ResourceArgs {

    public static final EfsLocationArgs Empty = new EfsLocationArgs();

    /**
     * Configuration block containing EC2 configurations for connecting to the EFS File System.
     * 
     */
    @InputImport(name="ec2Config", required=true)
    private final Input<EfsLocationEc2ConfigArgs> ec2Config;

    public Input<EfsLocationEc2ConfigArgs> getEc2Config() {
        return this.ec2Config;
    }

    /**
     * Amazon Resource Name (ARN) of EFS File System.
     * 
     */
    @InputImport(name="efsFileSystemArn", required=true)
    private final Input<String> efsFileSystemArn;

    public Input<String> getEfsFileSystemArn() {
        return this.efsFileSystemArn;
    }

    /**
     * Subdirectory to perform actions as source or destination. Default `/`.
     * 
     */
    @InputImport(name="subdirectory")
    private final @Nullable Input<String> subdirectory;

    public Input<String> getSubdirectory() {
        return this.subdirectory == null ? Input.empty() : this.subdirectory;
    }

    /**
     * Key-value pairs of resource tags to assign to the DataSync Location. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @InputImport(name="tags")
    private final @Nullable Input<Map<String,String>> tags;

    public Input<Map<String,String>> getTags() {
        return this.tags == null ? Input.empty() : this.tags;
    }

    public EfsLocationArgs(
        Input<EfsLocationEc2ConfigArgs> ec2Config,
        Input<String> efsFileSystemArn,
        @Nullable Input<String> subdirectory,
        @Nullable Input<Map<String,String>> tags) {
        this.ec2Config = Objects.requireNonNull(ec2Config, "expected parameter 'ec2Config' to be non-null");
        this.efsFileSystemArn = Objects.requireNonNull(efsFileSystemArn, "expected parameter 'efsFileSystemArn' to be non-null");
        this.subdirectory = subdirectory;
        this.tags = tags;
    }

    private EfsLocationArgs() {
        this.ec2Config = Input.empty();
        this.efsFileSystemArn = Input.empty();
        this.subdirectory = Input.empty();
        this.tags = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(EfsLocationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<EfsLocationEc2ConfigArgs> ec2Config;
        private Input<String> efsFileSystemArn;
        private @Nullable Input<String> subdirectory;
        private @Nullable Input<Map<String,String>> tags;

        public Builder() {
    	      // Empty
        }

        public Builder(EfsLocationArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.ec2Config = defaults.ec2Config;
    	      this.efsFileSystemArn = defaults.efsFileSystemArn;
    	      this.subdirectory = defaults.subdirectory;
    	      this.tags = defaults.tags;
        }

        public Builder setEc2Config(Input<EfsLocationEc2ConfigArgs> ec2Config) {
            this.ec2Config = Objects.requireNonNull(ec2Config);
            return this;
        }

        public Builder setEc2Config(EfsLocationEc2ConfigArgs ec2Config) {
            this.ec2Config = Input.of(Objects.requireNonNull(ec2Config));
            return this;
        }

        public Builder setEfsFileSystemArn(Input<String> efsFileSystemArn) {
            this.efsFileSystemArn = Objects.requireNonNull(efsFileSystemArn);
            return this;
        }

        public Builder setEfsFileSystemArn(String efsFileSystemArn) {
            this.efsFileSystemArn = Input.of(Objects.requireNonNull(efsFileSystemArn));
            return this;
        }

        public Builder setSubdirectory(@Nullable Input<String> subdirectory) {
            this.subdirectory = subdirectory;
            return this;
        }

        public Builder setSubdirectory(@Nullable String subdirectory) {
            this.subdirectory = Input.ofNullable(subdirectory);
            return this;
        }

        public Builder setTags(@Nullable Input<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }

        public Builder setTags(@Nullable Map<String,String> tags) {
            this.tags = Input.ofNullable(tags);
            return this;
        }
        public EfsLocationArgs build() {
            return new EfsLocationArgs(ec2Config, efsFileSystemArn, subdirectory, tags);
        }
    }
}
