// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.ssm;

import io.pulumi.aws.Utilities;
import io.pulumi.aws.ssm.ResourceDataSyncArgs;
import io.pulumi.aws.ssm.inputs.ResourceDataSyncState;
import io.pulumi.aws.ssm.outputs.ResourceDataSyncS3Destination;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Export;
import io.pulumi.core.annotations.ResourceType;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * Provides a SSM resource data sync.
 * 
 * {{% examples %}}
 * ## Example Usage
 * {{% example %}}
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 * 
 * const hogeBucket = new aws.s3.Bucket("hogeBucket", {});
 * const hogeBucketPolicy = new aws.s3.BucketPolicy("hogeBucketPolicy", {
 *     bucket: hogeBucket.bucket,
 *     policy: `{
 *     "Version": "2012-10-17",
 *     "Statement": [
 *         {
 *             "Sid": "SSMBucketPermissionsCheck",
 *             "Effect": "Allow",
 *             "Principal": {
 *                 "Service": "ssm.amazonaws.com"
 *             },
 *             "Action": "s3:GetBucketAcl",
 *             "Resource": "arn:aws:s3:::tf-test-bucket-1234"
 *         },
 *         {
 *             "Sid": " SSMBucketDelivery",
 *             "Effect": "Allow",
 *             "Principal": {
 *                 "Service": "ssm.amazonaws.com"
 *             },
 *             "Action": "s3:PutObject",
 *             "Resource": ["arn:aws:s3:::tf-test-bucket-1234/*"],
 *             "Condition": {
 *                 "StringEquals": {
 *                     "s3:x-amz-acl": "bucket-owner-full-control"
 *                 }
 *             }
 *         }
 *     ]
 * }
 * `,
 * });
 * const foo = new aws.ssm.ResourceDataSync("foo", {s3Destination: {
 *     bucketName: hogeBucket.bucket,
 *     region: hogeBucket.region,
 * }});
 * ```
 * ```python
 * import pulumi
 * import pulumi_aws as aws
 * 
 * hoge_bucket = aws.s3.Bucket("hogeBucket")
 * hoge_bucket_policy = aws.s3.BucketPolicy("hogeBucketPolicy",
 *     bucket=hoge_bucket.bucket,
 *     policy="""{
 *     "Version": "2012-10-17",
 *     "Statement": [
 *         {
 *             "Sid": "SSMBucketPermissionsCheck",
 *             "Effect": "Allow",
 *             "Principal": {
 *                 "Service": "ssm.amazonaws.com"
 *             },
 *             "Action": "s3:GetBucketAcl",
 *             "Resource": "arn:aws:s3:::tf-test-bucket-1234"
 *         },
 *         {
 *             "Sid": " SSMBucketDelivery",
 *             "Effect": "Allow",
 *             "Principal": {
 *                 "Service": "ssm.amazonaws.com"
 *             },
 *             "Action": "s3:PutObject",
 *             "Resource": ["arn:aws:s3:::tf-test-bucket-1234/*"],
 *             "Condition": {
 *                 "StringEquals": {
 *                     "s3:x-amz-acl": "bucket-owner-full-control"
 *                 }
 *             }
 *         }
 *     ]
 * }
 * """)
 * foo = aws.ssm.ResourceDataSync("foo", s3_destination=aws.ssm.ResourceDataSyncS3DestinationArgs(
 *     bucket_name=hoge_bucket.bucket,
 *     region=hoge_bucket.region,
 * ))
 * ```
 * ```csharp
 * using Pulumi;
 * using Aws = Pulumi.Aws;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var hogeBucket = new Aws.S3.Bucket("hogeBucket", new Aws.S3.BucketArgs
 *         {
 *         });
 *         var hogeBucketPolicy = new Aws.S3.BucketPolicy("hogeBucketPolicy", new Aws.S3.BucketPolicyArgs
 *         {
 *             Bucket = hogeBucket.BucketName,
 *             Policy = @"{
 *     ""Version"": ""2012-10-17"",
 *     ""Statement"": [
 *         {
 *             ""Sid"": ""SSMBucketPermissionsCheck"",
 *             ""Effect"": ""Allow"",
 *             ""Principal"": {
 *                 ""Service"": ""ssm.amazonaws.com""
 *             },
 *             ""Action"": ""s3:GetBucketAcl"",
 *             ""Resource"": ""arn:aws:s3:::tf-test-bucket-1234""
 *         },
 *         {
 *             ""Sid"": "" SSMBucketDelivery"",
 *             ""Effect"": ""Allow"",
 *             ""Principal"": {
 *                 ""Service"": ""ssm.amazonaws.com""
 *             },
 *             ""Action"": ""s3:PutObject"",
 *             ""Resource"": [""arn:aws:s3:::tf-test-bucket-1234/*""],
 *             ""Condition"": {
 *                 ""StringEquals"": {
 *                     ""s3:x-amz-acl"": ""bucket-owner-full-control""
 *                 }
 *             }
 *         }
 *     ]
 * }
 * ",
 *         });
 *         var foo = new Aws.Ssm.ResourceDataSync("foo", new Aws.Ssm.ResourceDataSyncArgs
 *         {
 *             S3Destination = new Aws.Ssm.Inputs.ResourceDataSyncS3DestinationArgs
 *             {
 *                 BucketName = hogeBucket.BucketName,
 *                 Region = hogeBucket.Region,
 *             },
 *         });
 *     }
 * 
 * }
 * ```
 * ```go
 * package main
 * 
 * import (
 * 	"fmt"
 * 
 * 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/s3"
 * 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/ssm"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		hogeBucket, err := s3.NewBucket(ctx, "hogeBucket", nil)
 * 		if err != nil {
 * 			return err
 * 		}
 * 		_, err = s3.NewBucketPolicy(ctx, "hogeBucketPolicy", &s3.BucketPolicyArgs{
 * 			Bucket: hogeBucket.Bucket,
 * 			Policy: pulumi.Any(fmt.Sprintf("%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v", "{\n", "    \"Version\": \"2012-10-17\",\n", "    \"Statement\": [\n", "        {\n", "            \"Sid\": \"SSMBucketPermissionsCheck\",\n", "            \"Effect\": \"Allow\",\n", "            \"Principal\": {\n", "                \"Service\": \"ssm.amazonaws.com\"\n", "            },\n", "            \"Action\": \"s3:GetBucketAcl\",\n", "            \"Resource\": \"arn:aws:s3:::tf-test-bucket-1234\"\n", "        },\n", "        {\n", "            \"Sid\": \" SSMBucketDelivery\",\n", "            \"Effect\": \"Allow\",\n", "            \"Principal\": {\n", "                \"Service\": \"ssm.amazonaws.com\"\n", "            },\n", "            \"Action\": \"s3:PutObject\",\n", "            \"Resource\": [\"arn:aws:s3:::tf-test-bucket-1234/*\"],\n", "            \"Condition\": {\n", "                \"StringEquals\": {\n", "                    \"s3:x-amz-acl\": \"bucket-owner-full-control\"\n", "                }\n", "            }\n", "        }\n", "    ]\n", "}\n")),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		_, err = ssm.NewResourceDataSync(ctx, "foo", &ssm.ResourceDataSyncArgs{
 * 			S3Destination: &ssm.ResourceDataSyncS3DestinationArgs{
 * 				BucketName: hogeBucket.Bucket,
 * 				Region:     hogeBucket.Region,
 * 			},
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * ```
 * {{% /example %}}
 * {{% /examples %}}
 * 
 * ## Import
 * 
 * SSM resource data sync can be imported using the `name`, e.g.,
 * 
 * ```sh
 *  $ pulumi import aws:ssm/resourceDataSync:ResourceDataSync example example-name
 * ```
 * 
 *  
 */
@ResourceType(type="aws:ssm/resourceDataSync:ResourceDataSync")
public class ResourceDataSync extends io.pulumi.resources.CustomResource {
    /**
     * Name for the configuration.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return Name for the configuration.
     * 
     */
    public Output<String> getName() {
        return this.name;
    }
    /**
     * Amazon S3 configuration details for the sync.
     * 
     */
    @Export(name="s3Destination", type=ResourceDataSyncS3Destination.class, parameters={})
    private Output<ResourceDataSyncS3Destination> s3Destination;

    /**
     * @return Amazon S3 configuration details for the sync.
     * 
     */
    public Output<ResourceDataSyncS3Destination> getS3Destination() {
        return this.s3Destination;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ResourceDataSync(String name) {
        this(name, ResourceDataSyncArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ResourceDataSync(String name, ResourceDataSyncArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ResourceDataSync(String name, ResourceDataSyncArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:ssm/resourceDataSync:ResourceDataSync", name, args == null ? ResourceDataSyncArgs.Empty : args, makeResourceOptions(options, Output.empty()));
    }

    private ResourceDataSync(String name, Output<String> id, @Nullable ResourceDataSyncState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:ssm/resourceDataSync:ResourceDataSync", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ResourceDataSync get(String name, Output<String> id, @Nullable ResourceDataSyncState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new ResourceDataSync(name, id, state, options);
    }
}
