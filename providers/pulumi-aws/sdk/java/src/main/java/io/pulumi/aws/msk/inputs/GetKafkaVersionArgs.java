// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.msk.inputs;

import io.pulumi.core.internal.annotations.InputImport;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetKafkaVersionArgs extends io.pulumi.resources.InvokeArgs {

    public static final GetKafkaVersionArgs Empty = new GetKafkaVersionArgs();

    /**
     * Ordered list of preferred Kafka versions. The first match in this list will be returned. Either `preferred_versions` or `version` must be set.
     * 
     */
    @InputImport(name="preferredVersions")
    private final @Nullable List<String> preferredVersions;

    public List<String> getPreferredVersions() {
        return this.preferredVersions == null ? List.of() : this.preferredVersions;
    }

    /**
     * Version of MSK Kafka. For example 2.4.1.1 or "2.2.1" etc. Either `preferred_versions` or `version` must be set.
     * 
     */
    @InputImport(name="version")
    private final @Nullable String version;

    public Optional<String> getVersion() {
        return this.version == null ? Optional.empty() : Optional.ofNullable(this.version);
    }

    public GetKafkaVersionArgs(
        @Nullable List<String> preferredVersions,
        @Nullable String version) {
        this.preferredVersions = preferredVersions;
        this.version = version;
    }

    private GetKafkaVersionArgs() {
        this.preferredVersions = List.of();
        this.version = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetKafkaVersionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable List<String> preferredVersions;
        private @Nullable String version;

        public Builder() {
    	      // Empty
        }

        public Builder(GetKafkaVersionArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.preferredVersions = defaults.preferredVersions;
    	      this.version = defaults.version;
        }

        public Builder setPreferredVersions(@Nullable List<String> preferredVersions) {
            this.preferredVersions = preferredVersions;
            return this;
        }

        public Builder setVersion(@Nullable String version) {
            this.version = version;
            return this;
        }
        public GetKafkaVersionArgs build() {
            return new GetKafkaVersionArgs(preferredVersions, version);
        }
    }
}
