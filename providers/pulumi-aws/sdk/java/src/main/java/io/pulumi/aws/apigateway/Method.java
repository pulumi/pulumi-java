// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.apigateway;

import io.pulumi.aws.Utilities;
import io.pulumi.aws.apigateway.MethodArgs;
import io.pulumi.aws.apigateway.inputs.MethodState;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Export;
import io.pulumi.core.annotations.ResourceType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;

/**
 * Provides a HTTP Method for an API Gateway Resource.
 * 
 * {{% examples %}}
 * ## Example Usage
 * {{% example %}}
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 * 
 * const myDemoAPI = new aws.apigateway.RestApi("myDemoAPI", {description: "This is my API for demonstration purposes"});
 * const myDemoResource = new aws.apigateway.Resource("myDemoResource", {
 *     restApi: myDemoAPI.id,
 *     parentId: myDemoAPI.rootResourceId,
 *     pathPart: "mydemoresource",
 * });
 * const myDemoMethod = new aws.apigateway.Method("myDemoMethod", {
 *     restApi: myDemoAPI.id,
 *     resourceId: myDemoResource.id,
 *     httpMethod: "GET",
 *     authorization: "NONE",
 * });
 * ```
 * ```python
 * import pulumi
 * import pulumi_aws as aws
 * 
 * my_demo_api = aws.apigateway.RestApi("myDemoAPI", description="This is my API for demonstration purposes")
 * my_demo_resource = aws.apigateway.Resource("myDemoResource",
 *     rest_api=my_demo_api.id,
 *     parent_id=my_demo_api.root_resource_id,
 *     path_part="mydemoresource")
 * my_demo_method = aws.apigateway.Method("myDemoMethod",
 *     rest_api=my_demo_api.id,
 *     resource_id=my_demo_resource.id,
 *     http_method="GET",
 *     authorization="NONE")
 * ```
 * ```csharp
 * using Pulumi;
 * using Aws = Pulumi.Aws;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var myDemoAPI = new Aws.ApiGateway.RestApi("myDemoAPI", new Aws.ApiGateway.RestApiArgs
 *         {
 *             Description = "This is my API for demonstration purposes",
 *         });
 *         var myDemoResource = new Aws.ApiGateway.Resource("myDemoResource", new Aws.ApiGateway.ResourceArgs
 *         {
 *             RestApi = myDemoAPI.Id,
 *             ParentId = myDemoAPI.RootResourceId,
 *             PathPart = "mydemoresource",
 *         });
 *         var myDemoMethod = new Aws.ApiGateway.Method("myDemoMethod", new Aws.ApiGateway.MethodArgs
 *         {
 *             RestApi = myDemoAPI.Id,
 *             ResourceId = myDemoResource.Id,
 *             HttpMethod = "GET",
 *             Authorization = "NONE",
 *         });
 *     }
 * 
 * }
 * ```
 * ```go
 * package main
 * 
 * import (
 * 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/apigateway"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		myDemoAPI, err := apigateway.NewRestApi(ctx, "myDemoAPI", &apigateway.RestApiArgs{
 * 			Description: pulumi.String("This is my API for demonstration purposes"),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		myDemoResource, err := apigateway.NewResource(ctx, "myDemoResource", &apigateway.ResourceArgs{
 * 			RestApi:  myDemoAPI.ID(),
 * 			ParentId: myDemoAPI.RootResourceId,
 * 			PathPart: pulumi.String("mydemoresource"),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		_, err = apigateway.NewMethod(ctx, "myDemoMethod", &apigateway.MethodArgs{
 * 			RestApi:       myDemoAPI.ID(),
 * 			ResourceId:    myDemoResource.ID(),
 * 			HttpMethod:    pulumi.String("GET"),
 * 			Authorization: pulumi.String("NONE"),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * ```
 * {{% /example %}}
 * {{% /examples %}}
 * ## Usage with Cognito User Pool Authorizer
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 * 
 * const config = new pulumi.Config();
 * const cognitoUserPoolName = config.requireObject("cognitoUserPoolName");
 * const thisUserPools = aws.cognito.getUserPools({
 *     name: cognitoUserPoolName,
 * });
 * const thisRestApi = new aws.apigateway.RestApi("thisRestApi", {});
 * const thisResource = new aws.apigateway.Resource("thisResource", {
 *     restApi: thisRestApi.id,
 *     parentId: thisRestApi.rootResourceId,
 *     pathPart: "{proxy+}",
 * });
 * const thisAuthorizer = new aws.apigateway.Authorizer("thisAuthorizer", {
 *     type: "COGNITO_USER_POOLS",
 *     restApi: thisRestApi.id,
 *     providerArns: thisUserPools.then(thisUserPools => thisUserPools.arns),
 * });
 * const any = new aws.apigateway.Method("any", {
 *     restApi: thisRestApi.id,
 *     resourceId: thisResource.id,
 *     httpMethod: "ANY",
 *     authorization: "COGNITO_USER_POOLS",
 *     authorizerId: thisAuthorizer.id,
 *     requestParameters: {
 *         "method.request.path.proxy": true,
 *     },
 * });
 * ```
 * ```python
 * import pulumi
 * import pulumi_aws as aws
 * 
 * config = pulumi.Config()
 * cognito_user_pool_name = config.require_object("cognitoUserPoolName")
 * this_user_pools = aws.cognito.get_user_pools(name=cognito_user_pool_name)
 * this_rest_api = aws.apigateway.RestApi("thisRestApi")
 * this_resource = aws.apigateway.Resource("thisResource",
 *     rest_api=this_rest_api.id,
 *     parent_id=this_rest_api.root_resource_id,
 *     path_part="{proxy+}")
 * this_authorizer = aws.apigateway.Authorizer("thisAuthorizer",
 *     type="COGNITO_USER_POOLS",
 *     rest_api=this_rest_api.id,
 *     provider_arns=this_user_pools.arns)
 * any = aws.apigateway.Method("any",
 *     rest_api=this_rest_api.id,
 *     resource_id=this_resource.id,
 *     http_method="ANY",
 *     authorization="COGNITO_USER_POOLS",
 *     authorizer_id=this_authorizer.id,
 *     request_parameters={
 *         "method.request.path.proxy": True,
 *     })
 * ```
 * ```csharp
 * using Pulumi;
 * using Aws = Pulumi.Aws;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var config = new Config();
 *         var cognitoUserPoolName = config.RequireObject<dynamic>("cognitoUserPoolName");
 *         var thisUserPools = Output.Create(Aws.Cognito.GetUserPools.InvokeAsync(new Aws.Cognito.GetUserPoolsArgs
 *         {
 *             Name = cognitoUserPoolName,
 *         }));
 *         var thisRestApi = new Aws.ApiGateway.RestApi("thisRestApi", new Aws.ApiGateway.RestApiArgs
 *         {
 *         });
 *         var thisResource = new Aws.ApiGateway.Resource("thisResource", new Aws.ApiGateway.ResourceArgs
 *         {
 *             RestApi = thisRestApi.Id,
 *             ParentId = thisRestApi.RootResourceId,
 *             PathPart = "{proxy+}",
 *         });
 *         var thisAuthorizer = new Aws.ApiGateway.Authorizer("thisAuthorizer", new Aws.ApiGateway.AuthorizerArgs
 *         {
 *             Type = "COGNITO_USER_POOLS",
 *             RestApi = thisRestApi.Id,
 *             ProviderArns = thisUserPools.Apply(thisUserPools => thisUserPools.Arns),
 *         });
 *         var any = new Aws.ApiGateway.Method("any", new Aws.ApiGateway.MethodArgs
 *         {
 *             RestApi = thisRestApi.Id,
 *             ResourceId = thisResource.Id,
 *             HttpMethod = "ANY",
 *             Authorization = "COGNITO_USER_POOLS",
 *             AuthorizerId = thisAuthorizer.Id,
 *             RequestParameters = 
 *             {
 *                 { "method.request.path.proxy", true },
 *             },
 *         });
 *     }
 * 
 * }
 * ```
 * ```go
 * package main
 * 
 * import (
 * 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/apigateway"
 * 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/cognito"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		cfg := config.New(ctx, "")
 * 		cognitoUserPoolName := cfg.RequireObject("cognitoUserPoolName")
 * 		thisUserPools, err := cognito.GetUserPools(ctx, &cognito.GetUserPoolsArgs{
 * 			Name: cognitoUserPoolName,
 * 		}, nil)
 * 		if err != nil {
 * 			return err
 * 		}
 * 		thisRestApi, err := apigateway.NewRestApi(ctx, "thisRestApi", nil)
 * 		if err != nil {
 * 			return err
 * 		}
 * 		thisResource, err := apigateway.NewResource(ctx, "thisResource", &apigateway.ResourceArgs{
 * 			RestApi:  thisRestApi.ID(),
 * 			ParentId: thisRestApi.RootResourceId,
 * 			PathPart: pulumi.String("{proxy+}"),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		thisAuthorizer, err := apigateway.NewAuthorizer(ctx, "thisAuthorizer", &apigateway.AuthorizerArgs{
 * 			Type:         pulumi.String("COGNITO_USER_POOLS"),
 * 			RestApi:      thisRestApi.ID(),
 * 			ProviderArns: interface{}(thisUserPools.Arns),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		_, err = apigateway.NewMethod(ctx, "any", &apigateway.MethodArgs{
 * 			RestApi:       thisRestApi.ID(),
 * 			ResourceId:    thisResource.ID(),
 * 			HttpMethod:    pulumi.String("ANY"),
 * 			Authorization: pulumi.String("COGNITO_USER_POOLS"),
 * 			AuthorizerId:  thisAuthorizer.ID(),
 * 			RequestParameters: pulumi.BoolMap{
 * 				"method.request.path.proxy": pulumi.Bool(true),
 * 			},
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * ```
 * 
 * 
 * ## Import
 * 
 * `aws_api_gateway_method` can be imported using `REST-API-ID/RESOURCE-ID/HTTP-METHOD`, e.g.,
 * 
 * ```sh
 *  $ pulumi import aws:apigateway/method:Method example 12345abcde/67890fghij/GET
 * ```
 * 
 *  
 */
@ResourceType(type="aws:apigateway/method:Method")
public class Method extends io.pulumi.resources.CustomResource {
    /**
     * Specify if the method requires an API key
     * 
     */
    @Export(name="apiKeyRequired", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> apiKeyRequired;

    /**
     * @return Specify if the method requires an API key
     * 
     */
    public Output</* @Nullable */ Boolean> getApiKeyRequired() {
        return this.apiKeyRequired;
    }
    /**
     * The type of authorization used for the method (`NONE`, `CUSTOM`, `AWS_IAM`, `COGNITO_USER_POOLS`)
     * 
     */
    @Export(name="authorization", type=String.class, parameters={})
    private Output<String> authorization;

    /**
     * @return The type of authorization used for the method (`NONE`, `CUSTOM`, `AWS_IAM`, `COGNITO_USER_POOLS`)
     * 
     */
    public Output<String> getAuthorization() {
        return this.authorization;
    }
    /**
     * The authorization scopes used when the authorization is `COGNITO_USER_POOLS`
     * 
     */
    @Export(name="authorizationScopes", type=List.class, parameters={String.class})
    private Output</* @Nullable */ List<String>> authorizationScopes;

    /**
     * @return The authorization scopes used when the authorization is `COGNITO_USER_POOLS`
     * 
     */
    public Output</* @Nullable */ List<String>> getAuthorizationScopes() {
        return this.authorizationScopes;
    }
    /**
     * The authorizer id to be used when the authorization is `CUSTOM` or `COGNITO_USER_POOLS`
     * 
     */
    @Export(name="authorizerId", type=String.class, parameters={})
    private Output</* @Nullable */ String> authorizerId;

    /**
     * @return The authorizer id to be used when the authorization is `CUSTOM` or `COGNITO_USER_POOLS`
     * 
     */
    public Output</* @Nullable */ String> getAuthorizerId() {
        return this.authorizerId;
    }
    /**
     * The HTTP Method (`GET`, `POST`, `PUT`, `DELETE`, `HEAD`, `OPTIONS`, `ANY`)
     * 
     */
    @Export(name="httpMethod", type=String.class, parameters={})
    private Output<String> httpMethod;

    /**
     * @return The HTTP Method (`GET`, `POST`, `PUT`, `DELETE`, `HEAD`, `OPTIONS`, `ANY`)
     * 
     */
    public Output<String> getHttpMethod() {
        return this.httpMethod;
    }
    /**
     * The function name that will be given to the method when generating an SDK through API Gateway. If omitted, API Gateway will generate a function name based on the resource path and HTTP verb.
     * 
     */
    @Export(name="operationName", type=String.class, parameters={})
    private Output</* @Nullable */ String> operationName;

    /**
     * @return The function name that will be given to the method when generating an SDK through API Gateway. If omitted, API Gateway will generate a function name based on the resource path and HTTP verb.
     * 
     */
    public Output</* @Nullable */ String> getOperationName() {
        return this.operationName;
    }
    /**
     * A map of the API models used for the request's content type
     * where key is the content type (e.g., `application/json`)
     * and value is either `Error`, `Empty` (built-in models) or `aws.apigateway.Model`'s `name`.
     * 
     */
    @Export(name="requestModels", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> requestModels;

    /**
     * @return A map of the API models used for the request's content type
     * where key is the content type (e.g., `application/json`)
     * and value is either `Error`, `Empty` (built-in models) or `aws.apigateway.Model`'s `name`.
     * 
     */
    public Output</* @Nullable */ Map<String,String>> getRequestModels() {
        return this.requestModels;
    }
    /**
     * A map of request parameters (from the path, query string and headers) that should be passed to the integration. The boolean value indicates whether the parameter is required (`true`) or optional (`false`).
     * For example: `request_parameters = {"method.request.header.X-Some-Header" = true "method.request.querystring.some-query-param" = true}` would define that the header `X-Some-Header` and the query string `some-query-param` must be provided in the request.
     * 
     */
    @Export(name="requestParameters", type=Map.class, parameters={String.class, Boolean.class})
    private Output</* @Nullable */ Map<String,Boolean>> requestParameters;

    /**
     * @return A map of request parameters (from the path, query string and headers) that should be passed to the integration. The boolean value indicates whether the parameter is required (`true`) or optional (`false`).
     * For example: `request_parameters = {"method.request.header.X-Some-Header" = true "method.request.querystring.some-query-param" = true}` would define that the header `X-Some-Header` and the query string `some-query-param` must be provided in the request.
     * 
     */
    public Output</* @Nullable */ Map<String,Boolean>> getRequestParameters() {
        return this.requestParameters;
    }
    /**
     * The ID of a `aws.apigateway.RequestValidator`
     * 
     */
    @Export(name="requestValidatorId", type=String.class, parameters={})
    private Output</* @Nullable */ String> requestValidatorId;

    /**
     * @return The ID of a `aws.apigateway.RequestValidator`
     * 
     */
    public Output</* @Nullable */ String> getRequestValidatorId() {
        return this.requestValidatorId;
    }
    /**
     * The API resource ID
     * 
     */
    @Export(name="resourceId", type=String.class, parameters={})
    private Output<String> resourceId;

    /**
     * @return The API resource ID
     * 
     */
    public Output<String> getResourceId() {
        return this.resourceId;
    }
    /**
     * The ID of the associated REST API
     * 
     */
    @Export(name="restApi", type=String.class, parameters={})
    private Output<String> restApi;

    /**
     * @return The ID of the associated REST API
     * 
     */
    public Output<String> getRestApi() {
        return this.restApi;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Method(String name) {
        this(name, MethodArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Method(String name, MethodArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Method(String name, MethodArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:apigateway/method:Method", name, args == null ? MethodArgs.Empty : args, makeResourceOptions(options, Output.empty()));
    }

    private Method(String name, Output<String> id, @Nullable MethodState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:apigateway/method:Method", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Method get(String name, Output<String> id, @Nullable MethodState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new Method(name, id, state, options);
    }
}
