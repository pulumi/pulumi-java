// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.appautoscaling.inputs;

import io.pulumi.aws.appautoscaling.inputs.PolicyStepScalingPolicyConfigurationStepAdjustmentGetArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.InputImport;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class PolicyStepScalingPolicyConfigurationGetArgs extends io.pulumi.resources.ResourceArgs {

    public static final PolicyStepScalingPolicyConfigurationGetArgs Empty = new PolicyStepScalingPolicyConfigurationGetArgs();

    /**
     * Specifies whether the adjustment is an absolute number or a percentage of the current capacity. Valid values are `ChangeInCapacity`, `ExactCapacity`, and `PercentChangeInCapacity`.
     * 
     */
    @InputImport(name="adjustmentType")
      private final @Nullable Output<String> adjustmentType;

    public Output<String> getAdjustmentType() {
        return this.adjustmentType == null ? Output.empty() : this.adjustmentType;
    }

    /**
     * The amount of time, in seconds, after a scaling activity completes and before the next scaling activity can start.
     * 
     */
    @InputImport(name="cooldown")
      private final @Nullable Output<Integer> cooldown;

    public Output<Integer> getCooldown() {
        return this.cooldown == null ? Output.empty() : this.cooldown;
    }

    /**
     * The aggregation type for the policy's metrics. Valid values are "Minimum", "Maximum", and "Average". Without a value, AWS will treat the aggregation type as "Average".
     * 
     */
    @InputImport(name="metricAggregationType")
      private final @Nullable Output<String> metricAggregationType;

    public Output<String> getMetricAggregationType() {
        return this.metricAggregationType == null ? Output.empty() : this.metricAggregationType;
    }

    /**
     * The minimum number to adjust your scalable dimension as a result of a scaling activity. If the adjustment type is PercentChangeInCapacity, the scaling policy changes the scalable dimension of the scalable target by this amount.
     * 
     */
    @InputImport(name="minAdjustmentMagnitude")
      private final @Nullable Output<Integer> minAdjustmentMagnitude;

    public Output<Integer> getMinAdjustmentMagnitude() {
        return this.minAdjustmentMagnitude == null ? Output.empty() : this.minAdjustmentMagnitude;
    }

    /**
     * A set of adjustments that manage scaling. These have the following structure:
     * 
     */
    @InputImport(name="stepAdjustments")
      private final @Nullable Output<List<PolicyStepScalingPolicyConfigurationStepAdjustmentGetArgs>> stepAdjustments;

    public Output<List<PolicyStepScalingPolicyConfigurationStepAdjustmentGetArgs>> getStepAdjustments() {
        return this.stepAdjustments == null ? Output.empty() : this.stepAdjustments;
    }

    public PolicyStepScalingPolicyConfigurationGetArgs(
        @Nullable Output<String> adjustmentType,
        @Nullable Output<Integer> cooldown,
        @Nullable Output<String> metricAggregationType,
        @Nullable Output<Integer> minAdjustmentMagnitude,
        @Nullable Output<List<PolicyStepScalingPolicyConfigurationStepAdjustmentGetArgs>> stepAdjustments) {
        this.adjustmentType = adjustmentType;
        this.cooldown = cooldown;
        this.metricAggregationType = metricAggregationType;
        this.minAdjustmentMagnitude = minAdjustmentMagnitude;
        this.stepAdjustments = stepAdjustments;
    }

    private PolicyStepScalingPolicyConfigurationGetArgs() {
        this.adjustmentType = Output.empty();
        this.cooldown = Output.empty();
        this.metricAggregationType = Output.empty();
        this.minAdjustmentMagnitude = Output.empty();
        this.stepAdjustments = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PolicyStepScalingPolicyConfigurationGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> adjustmentType;
        private @Nullable Output<Integer> cooldown;
        private @Nullable Output<String> metricAggregationType;
        private @Nullable Output<Integer> minAdjustmentMagnitude;
        private @Nullable Output<List<PolicyStepScalingPolicyConfigurationStepAdjustmentGetArgs>> stepAdjustments;

        public Builder() {
    	      // Empty
        }

        public Builder(PolicyStepScalingPolicyConfigurationGetArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.adjustmentType = defaults.adjustmentType;
    	      this.cooldown = defaults.cooldown;
    	      this.metricAggregationType = defaults.metricAggregationType;
    	      this.minAdjustmentMagnitude = defaults.minAdjustmentMagnitude;
    	      this.stepAdjustments = defaults.stepAdjustments;
        }

        public Builder adjustmentType(@Nullable Output<String> adjustmentType) {
            this.adjustmentType = adjustmentType;
            return this;
        }

        public Builder adjustmentType(@Nullable String adjustmentType) {
            this.adjustmentType = Output.ofNullable(adjustmentType);
            return this;
        }

        public Builder cooldown(@Nullable Output<Integer> cooldown) {
            this.cooldown = cooldown;
            return this;
        }

        public Builder cooldown(@Nullable Integer cooldown) {
            this.cooldown = Output.ofNullable(cooldown);
            return this;
        }

        public Builder metricAggregationType(@Nullable Output<String> metricAggregationType) {
            this.metricAggregationType = metricAggregationType;
            return this;
        }

        public Builder metricAggregationType(@Nullable String metricAggregationType) {
            this.metricAggregationType = Output.ofNullable(metricAggregationType);
            return this;
        }

        public Builder minAdjustmentMagnitude(@Nullable Output<Integer> minAdjustmentMagnitude) {
            this.minAdjustmentMagnitude = minAdjustmentMagnitude;
            return this;
        }

        public Builder minAdjustmentMagnitude(@Nullable Integer minAdjustmentMagnitude) {
            this.minAdjustmentMagnitude = Output.ofNullable(minAdjustmentMagnitude);
            return this;
        }

        public Builder stepAdjustments(@Nullable Output<List<PolicyStepScalingPolicyConfigurationStepAdjustmentGetArgs>> stepAdjustments) {
            this.stepAdjustments = stepAdjustments;
            return this;
        }

        public Builder stepAdjustments(@Nullable List<PolicyStepScalingPolicyConfigurationStepAdjustmentGetArgs> stepAdjustments) {
            this.stepAdjustments = Output.ofNullable(stepAdjustments);
            return this;
        }
        public PolicyStepScalingPolicyConfigurationGetArgs build() {
            return new PolicyStepScalingPolicyConfigurationGetArgs(adjustmentType, cooldown, metricAggregationType, minAdjustmentMagnitude, stepAdjustments);
        }
    }
}
