// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.cloudformation.inputs;

import io.pulumi.core.internal.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetCloudFormationTypeArgs extends io.pulumi.resources.InvokeArgs {

    public static final GetCloudFormationTypeArgs Empty = new GetCloudFormationTypeArgs();

    /**
     * Amazon Resource Name (ARN) of the CloudFormation Type. For example, `arn:aws:cloudformation:us-west-2::type/resource/AWS-EC2-VPC`.
     * 
     */
    @InputImport(name="arn")
    private final @Nullable String arn;

    public Optional<String> getArn() {
        return this.arn == null ? Optional.empty() : Optional.ofNullable(this.arn);
    }

    /**
     * CloudFormation Registry Type. For example, `RESOURCE`.
     * 
     */
    @InputImport(name="type")
    private final @Nullable String type;

    public Optional<String> getType() {
        return this.type == null ? Optional.empty() : Optional.ofNullable(this.type);
    }

    /**
     * CloudFormation Type name. For example, `AWS::EC2::VPC`.
     * 
     */
    @InputImport(name="typeName")
    private final @Nullable String typeName;

    public Optional<String> getTypeName() {
        return this.typeName == null ? Optional.empty() : Optional.ofNullable(this.typeName);
    }

    /**
     * Identifier of the CloudFormation Type version.
     * 
     */
    @InputImport(name="versionId")
    private final @Nullable String versionId;

    public Optional<String> getVersionId() {
        return this.versionId == null ? Optional.empty() : Optional.ofNullable(this.versionId);
    }

    public GetCloudFormationTypeArgs(
        @Nullable String arn,
        @Nullable String type,
        @Nullable String typeName,
        @Nullable String versionId) {
        this.arn = arn;
        this.type = type;
        this.typeName = typeName;
        this.versionId = versionId;
    }

    private GetCloudFormationTypeArgs() {
        this.arn = null;
        this.type = null;
        this.typeName = null;
        this.versionId = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCloudFormationTypeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String arn;
        private @Nullable String type;
        private @Nullable String typeName;
        private @Nullable String versionId;

        public Builder() {
    	      // Empty
        }

        public Builder(GetCloudFormationTypeArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.type = defaults.type;
    	      this.typeName = defaults.typeName;
    	      this.versionId = defaults.versionId;
        }

        public Builder setArn(@Nullable String arn) {
            this.arn = arn;
            return this;
        }

        public Builder setType(@Nullable String type) {
            this.type = type;
            return this;
        }

        public Builder setTypeName(@Nullable String typeName) {
            this.typeName = typeName;
            return this;
        }

        public Builder setVersionId(@Nullable String versionId) {
            this.versionId = versionId;
            return this;
        }
        public GetCloudFormationTypeArgs build() {
            return new GetCloudFormationTypeArgs(arn, type, typeName, versionId);
        }
    }
}
