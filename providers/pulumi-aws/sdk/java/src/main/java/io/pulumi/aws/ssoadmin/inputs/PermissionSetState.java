// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.ssoadmin.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class PermissionSetState extends io.pulumi.resources.ResourceArgs {

    public static final PermissionSetState Empty = new PermissionSetState();

    /**
     * The Amazon Resource Name (ARN) of the Permission Set.
     * 
     */
    @Import(name="arn")
      private final @Nullable Output<String> arn;

    public Output<String> getArn() {
        return this.arn == null ? Codegen.empty() : this.arn;
    }

    /**
     * The date the Permission Set was created in [RFC3339 format](https://tools.ietf.org/html/rfc3339#section-5.8).
     * 
     */
    @Import(name="createdDate")
      private final @Nullable Output<String> createdDate;

    public Output<String> getCreatedDate() {
        return this.createdDate == null ? Codegen.empty() : this.createdDate;
    }

    /**
     * The description of the Permission Set.
     * 
     */
    @Import(name="description")
      private final @Nullable Output<String> description;

    public Output<String> getDescription() {
        return this.description == null ? Codegen.empty() : this.description;
    }

    /**
     * The Amazon Resource Name (ARN) of the SSO Instance under which the operation will be executed.
     * 
     */
    @Import(name="instanceArn")
      private final @Nullable Output<String> instanceArn;

    public Output<String> getInstanceArn() {
        return this.instanceArn == null ? Codegen.empty() : this.instanceArn;
    }

    /**
     * The name of the Permission Set.
     * 
     */
    @Import(name="name")
      private final @Nullable Output<String> name;

    public Output<String> getName() {
        return this.name == null ? Codegen.empty() : this.name;
    }

    /**
     * The relay state URL used to redirect users within the application during the federation authentication process.
     * 
     */
    @Import(name="relayState")
      private final @Nullable Output<String> relayState;

    public Output<String> getRelayState() {
        return this.relayState == null ? Codegen.empty() : this.relayState;
    }

    /**
     * The length of time that the application user sessions are valid in the ISO-8601 standard. Default: `PT1H`.
     * 
     */
    @Import(name="sessionDuration")
      private final @Nullable Output<String> sessionDuration;

    public Output<String> getSessionDuration() {
        return this.sessionDuration == null ? Codegen.empty() : this.sessionDuration;
    }

    /**
     * Key-value map of resource tags. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Import(name="tags")
      private final @Nullable Output<Map<String,String>> tags;

    public Output<Map<String,String>> getTags() {
        return this.tags == null ? Codegen.empty() : this.tags;
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider .
     * 
     */
    @Import(name="tagsAll")
      private final @Nullable Output<Map<String,String>> tagsAll;

    public Output<Map<String,String>> getTagsAll() {
        return this.tagsAll == null ? Codegen.empty() : this.tagsAll;
    }

    public PermissionSetState(
        @Nullable Output<String> arn,
        @Nullable Output<String> createdDate,
        @Nullable Output<String> description,
        @Nullable Output<String> instanceArn,
        @Nullable Output<String> name,
        @Nullable Output<String> relayState,
        @Nullable Output<String> sessionDuration,
        @Nullable Output<Map<String,String>> tags,
        @Nullable Output<Map<String,String>> tagsAll) {
        this.arn = arn;
        this.createdDate = createdDate;
        this.description = description;
        this.instanceArn = instanceArn;
        this.name = name;
        this.relayState = relayState;
        this.sessionDuration = sessionDuration;
        this.tags = tags;
        this.tagsAll = tagsAll;
    }

    private PermissionSetState() {
        this.arn = Codegen.empty();
        this.createdDate = Codegen.empty();
        this.description = Codegen.empty();
        this.instanceArn = Codegen.empty();
        this.name = Codegen.empty();
        this.relayState = Codegen.empty();
        this.sessionDuration = Codegen.empty();
        this.tags = Codegen.empty();
        this.tagsAll = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PermissionSetState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> arn;
        private @Nullable Output<String> createdDate;
        private @Nullable Output<String> description;
        private @Nullable Output<String> instanceArn;
        private @Nullable Output<String> name;
        private @Nullable Output<String> relayState;
        private @Nullable Output<String> sessionDuration;
        private @Nullable Output<Map<String,String>> tags;
        private @Nullable Output<Map<String,String>> tagsAll;

        public Builder() {
    	      // Empty
        }

        public Builder(PermissionSetState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.createdDate = defaults.createdDate;
    	      this.description = defaults.description;
    	      this.instanceArn = defaults.instanceArn;
    	      this.name = defaults.name;
    	      this.relayState = defaults.relayState;
    	      this.sessionDuration = defaults.sessionDuration;
    	      this.tags = defaults.tags;
    	      this.tagsAll = defaults.tagsAll;
        }

        public Builder arn(@Nullable Output<String> arn) {
            this.arn = arn;
            return this;
        }
        public Builder arn(@Nullable String arn) {
            this.arn = Codegen.ofNullable(arn);
            return this;
        }
        public Builder createdDate(@Nullable Output<String> createdDate) {
            this.createdDate = createdDate;
            return this;
        }
        public Builder createdDate(@Nullable String createdDate) {
            this.createdDate = Codegen.ofNullable(createdDate);
            return this;
        }
        public Builder description(@Nullable Output<String> description) {
            this.description = description;
            return this;
        }
        public Builder description(@Nullable String description) {
            this.description = Codegen.ofNullable(description);
            return this;
        }
        public Builder instanceArn(@Nullable Output<String> instanceArn) {
            this.instanceArn = instanceArn;
            return this;
        }
        public Builder instanceArn(@Nullable String instanceArn) {
            this.instanceArn = Codegen.ofNullable(instanceArn);
            return this;
        }
        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }
        public Builder name(@Nullable String name) {
            this.name = Codegen.ofNullable(name);
            return this;
        }
        public Builder relayState(@Nullable Output<String> relayState) {
            this.relayState = relayState;
            return this;
        }
        public Builder relayState(@Nullable String relayState) {
            this.relayState = Codegen.ofNullable(relayState);
            return this;
        }
        public Builder sessionDuration(@Nullable Output<String> sessionDuration) {
            this.sessionDuration = sessionDuration;
            return this;
        }
        public Builder sessionDuration(@Nullable String sessionDuration) {
            this.sessionDuration = Codegen.ofNullable(sessionDuration);
            return this;
        }
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = Codegen.ofNullable(tags);
            return this;
        }
        public Builder tagsAll(@Nullable Output<Map<String,String>> tagsAll) {
            this.tagsAll = tagsAll;
            return this;
        }
        public Builder tagsAll(@Nullable Map<String,String> tagsAll) {
            this.tagsAll = Codegen.ofNullable(tagsAll);
            return this;
        }        public PermissionSetState build() {
            return new PermissionSetState(arn, createdDate, description, instanceArn, name, relayState, sessionDuration, tags, tagsAll);
        }
    }
}
