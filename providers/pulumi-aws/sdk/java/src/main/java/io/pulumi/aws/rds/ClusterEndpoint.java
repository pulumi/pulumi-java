// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.rds;

import io.pulumi.aws.Utilities;
import io.pulumi.aws.rds.ClusterEndpointArgs;
import io.pulumi.aws.rds.inputs.ClusterEndpointState;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Export;
import io.pulumi.core.annotations.ResourceType;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;

/**
 * Manages an RDS Aurora Cluster Endpoint.
 * You can refer to the [User Guide](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Aurora.Overview.Endpoints.html#Aurora.Endpoints.Cluster).
 * 
 * 
 * {{% examples %}}
 * ## Example Usage
 * {{% example %}}
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 * 
 * const _default = new aws.rds.Cluster("default", {
 *     clusterIdentifier: "aurora-cluster-demo",
 *     availabilityZones: [
 *         "us-west-2a",
 *         "us-west-2b",
 *         "us-west-2c",
 *     ],
 *     databaseName: "mydb",
 *     masterUsername: "foo",
 *     masterPassword: "bar",
 *     backupRetentionPeriod: 5,
 *     preferredBackupWindow: "07:00-09:00",
 * });
 * const test1 = new aws.rds.ClusterInstance("test1", {
 *     applyImmediately: true,
 *     clusterIdentifier: _default.id,
 *     identifier: "test1",
 *     instanceClass: "db.t2.small",
 *     engine: _default.engine,
 *     engineVersion: _default.engineVersion,
 * });
 * const test2 = new aws.rds.ClusterInstance("test2", {
 *     applyImmediately: true,
 *     clusterIdentifier: _default.id,
 *     identifier: "test2",
 *     instanceClass: "db.t2.small",
 *     engine: _default.engine,
 *     engineVersion: _default.engineVersion,
 * });
 * const test3 = new aws.rds.ClusterInstance("test3", {
 *     applyImmediately: true,
 *     clusterIdentifier: _default.id,
 *     identifier: "test3",
 *     instanceClass: "db.t2.small",
 *     engine: _default.engine,
 *     engineVersion: _default.engineVersion,
 * });
 * const eligible = new aws.rds.ClusterEndpoint("eligible", {
 *     clusterIdentifier: _default.id,
 *     clusterEndpointIdentifier: "reader",
 *     customEndpointType: "READER",
 *     excludedMembers: [
 *         test1.id,
 *         test2.id,
 *     ],
 * });
 * const static = new aws.rds.ClusterEndpoint("static", {
 *     clusterIdentifier: _default.id,
 *     clusterEndpointIdentifier: "static",
 *     customEndpointType: "READER",
 *     staticMembers: [
 *         test1.id,
 *         test3.id,
 *     ],
 * });
 * ```
 * ```python
 * import pulumi
 * import pulumi_aws as aws
 * 
 * default = aws.rds.Cluster("default",
 *     cluster_identifier="aurora-cluster-demo",
 *     availability_zones=[
 *         "us-west-2a",
 *         "us-west-2b",
 *         "us-west-2c",
 *     ],
 *     database_name="mydb",
 *     master_username="foo",
 *     master_password="bar",
 *     backup_retention_period=5,
 *     preferred_backup_window="07:00-09:00")
 * test1 = aws.rds.ClusterInstance("test1",
 *     apply_immediately=True,
 *     cluster_identifier=default.id,
 *     identifier="test1",
 *     instance_class="db.t2.small",
 *     engine=default.engine,
 *     engine_version=default.engine_version)
 * test2 = aws.rds.ClusterInstance("test2",
 *     apply_immediately=True,
 *     cluster_identifier=default.id,
 *     identifier="test2",
 *     instance_class="db.t2.small",
 *     engine=default.engine,
 *     engine_version=default.engine_version)
 * test3 = aws.rds.ClusterInstance("test3",
 *     apply_immediately=True,
 *     cluster_identifier=default.id,
 *     identifier="test3",
 *     instance_class="db.t2.small",
 *     engine=default.engine,
 *     engine_version=default.engine_version)
 * eligible = aws.rds.ClusterEndpoint("eligible",
 *     cluster_identifier=default.id,
 *     cluster_endpoint_identifier="reader",
 *     custom_endpoint_type="READER",
 *     excluded_members=[
 *         test1.id,
 *         test2.id,
 *     ])
 * static = aws.rds.ClusterEndpoint("static",
 *     cluster_identifier=default.id,
 *     cluster_endpoint_identifier="static",
 *     custom_endpoint_type="READER",
 *     static_members=[
 *         test1.id,
 *         test3.id,
 *     ])
 * ```
 * ```csharp
 * using Pulumi;
 * using Aws = Pulumi.Aws;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var @default = new Aws.Rds.Cluster("default", new Aws.Rds.ClusterArgs
 *         {
 *             ClusterIdentifier = "aurora-cluster-demo",
 *             AvailabilityZones = 
 *             {
 *                 "us-west-2a",
 *                 "us-west-2b",
 *                 "us-west-2c",
 *             },
 *             DatabaseName = "mydb",
 *             MasterUsername = "foo",
 *             MasterPassword = "bar",
 *             BackupRetentionPeriod = 5,
 *             PreferredBackupWindow = "07:00-09:00",
 *         });
 *         var test1 = new Aws.Rds.ClusterInstance("test1", new Aws.Rds.ClusterInstanceArgs
 *         {
 *             ApplyImmediately = true,
 *             ClusterIdentifier = @default.Id,
 *             Identifier = "test1",
 *             InstanceClass = "db.t2.small",
 *             Engine = @default.Engine,
 *             EngineVersion = @default.EngineVersion,
 *         });
 *         var test2 = new Aws.Rds.ClusterInstance("test2", new Aws.Rds.ClusterInstanceArgs
 *         {
 *             ApplyImmediately = true,
 *             ClusterIdentifier = @default.Id,
 *             Identifier = "test2",
 *             InstanceClass = "db.t2.small",
 *             Engine = @default.Engine,
 *             EngineVersion = @default.EngineVersion,
 *         });
 *         var test3 = new Aws.Rds.ClusterInstance("test3", new Aws.Rds.ClusterInstanceArgs
 *         {
 *             ApplyImmediately = true,
 *             ClusterIdentifier = @default.Id,
 *             Identifier = "test3",
 *             InstanceClass = "db.t2.small",
 *             Engine = @default.Engine,
 *             EngineVersion = @default.EngineVersion,
 *         });
 *         var eligible = new Aws.Rds.ClusterEndpoint("eligible", new Aws.Rds.ClusterEndpointArgs
 *         {
 *             ClusterIdentifier = @default.Id,
 *             ClusterEndpointIdentifier = "reader",
 *             CustomEndpointType = "READER",
 *             ExcludedMembers = 
 *             {
 *                 test1.Id,
 *                 test2.Id,
 *             },
 *         });
 *         var @static = new Aws.Rds.ClusterEndpoint("static", new Aws.Rds.ClusterEndpointArgs
 *         {
 *             ClusterIdentifier = @default.Id,
 *             ClusterEndpointIdentifier = "static",
 *             CustomEndpointType = "READER",
 *             StaticMembers = 
 *             {
 *                 test1.Id,
 *                 test3.Id,
 *             },
 *         });
 *     }
 * 
 * }
 * ```
 * ```go
 * package main
 * 
 * import (
 * 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/rds"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		_, err := rds.NewCluster(ctx, "default", &rds.ClusterArgs{
 * 			ClusterIdentifier: pulumi.String("aurora-cluster-demo"),
 * 			AvailabilityZones: pulumi.StringArray{
 * 				pulumi.String("us-west-2a"),
 * 				pulumi.String("us-west-2b"),
 * 				pulumi.String("us-west-2c"),
 * 			},
 * 			DatabaseName:          pulumi.String("mydb"),
 * 			MasterUsername:        pulumi.String("foo"),
 * 			MasterPassword:        pulumi.String("bar"),
 * 			BackupRetentionPeriod: pulumi.Int(5),
 * 			PreferredBackupWindow: pulumi.String("07:00-09:00"),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		test1, err := rds.NewClusterInstance(ctx, "test1", &rds.ClusterInstanceArgs{
 * 			ApplyImmediately:  pulumi.Bool(true),
 * 			ClusterIdentifier: _default.ID(),
 * 			Identifier:        pulumi.String("test1"),
 * 			InstanceClass:     pulumi.String("db.t2.small"),
 * 			Engine:            _default.Engine,
 * 			EngineVersion:     _default.EngineVersion,
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		test2, err := rds.NewClusterInstance(ctx, "test2", &rds.ClusterInstanceArgs{
 * 			ApplyImmediately:  pulumi.Bool(true),
 * 			ClusterIdentifier: _default.ID(),
 * 			Identifier:        pulumi.String("test2"),
 * 			InstanceClass:     pulumi.String("db.t2.small"),
 * 			Engine:            _default.Engine,
 * 			EngineVersion:     _default.EngineVersion,
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		test3, err := rds.NewClusterInstance(ctx, "test3", &rds.ClusterInstanceArgs{
 * 			ApplyImmediately:  pulumi.Bool(true),
 * 			ClusterIdentifier: _default.ID(),
 * 			Identifier:        pulumi.String("test3"),
 * 			InstanceClass:     pulumi.String("db.t2.small"),
 * 			Engine:            _default.Engine,
 * 			EngineVersion:     _default.EngineVersion,
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		_, err = rds.NewClusterEndpoint(ctx, "eligible", &rds.ClusterEndpointArgs{
 * 			ClusterIdentifier:         _default.ID(),
 * 			ClusterEndpointIdentifier: pulumi.String("reader"),
 * 			CustomEndpointType:        pulumi.String("READER"),
 * 			ExcludedMembers: pulumi.StringArray{
 * 				test1.ID(),
 * 				test2.ID(),
 * 			},
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		_, err = rds.NewClusterEndpoint(ctx, "static", &rds.ClusterEndpointArgs{
 * 			ClusterIdentifier:         _default.ID(),
 * 			ClusterEndpointIdentifier: pulumi.String("static"),
 * 			CustomEndpointType:        pulumi.String("READER"),
 * 			StaticMembers: pulumi.StringArray{
 * 				test1.ID(),
 * 				test3.ID(),
 * 			},
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * ```
 * {{% /example %}}
 * {{% /examples %}}
 * 
 * ## Import
 * 
 * RDS Clusters Endpoint can be imported using the `cluster_endpoint_identifier`, e.g.,
 * 
 * ```sh
 *  $ pulumi import aws:rds/clusterEndpoint:ClusterEndpoint custom_reader aurora-prod-cluster-custom-reader
 * ```
 * 
 *  [1]https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Aurora.Overview.Endpoints.html#Aurora.Endpoints.Cluster 
 */
@ResourceType(type="aws:rds/clusterEndpoint:ClusterEndpoint")
public class ClusterEndpoint extends io.pulumi.resources.CustomResource {
    /**
     * Amazon Resource Name (ARN) of cluster
     * 
     */
    @Export(name="arn", type=String.class, parameters={})
    private Output<String> arn;

    /**
     * @return Amazon Resource Name (ARN) of cluster
     * 
     */
    public Output<String> getArn() {
        return this.arn;
    }
    /**
     * The identifier to use for the new endpoint. This parameter is stored as a lowercase string.
     * 
     */
    @Export(name="clusterEndpointIdentifier", type=String.class, parameters={})
    private Output<String> clusterEndpointIdentifier;

    /**
     * @return The identifier to use for the new endpoint. This parameter is stored as a lowercase string.
     * 
     */
    public Output<String> getClusterEndpointIdentifier() {
        return this.clusterEndpointIdentifier;
    }
    /**
     * The cluster identifier.
     * 
     */
    @Export(name="clusterIdentifier", type=String.class, parameters={})
    private Output<String> clusterIdentifier;

    /**
     * @return The cluster identifier.
     * 
     */
    public Output<String> getClusterIdentifier() {
        return this.clusterIdentifier;
    }
    /**
     * The type of the endpoint. One of: READER , ANY .
     * 
     */
    @Export(name="customEndpointType", type=String.class, parameters={})
    private Output<String> customEndpointType;

    /**
     * @return The type of the endpoint. One of: READER , ANY .
     * 
     */
    public Output<String> getCustomEndpointType() {
        return this.customEndpointType;
    }
    /**
     * A custom endpoint for the Aurora cluster
     * 
     */
    @Export(name="endpoint", type=String.class, parameters={})
    private Output<String> endpoint;

    /**
     * @return A custom endpoint for the Aurora cluster
     * 
     */
    public Output<String> getEndpoint() {
        return this.endpoint;
    }
    /**
     * List of DB instance identifiers that aren't part of the custom endpoint group. All other eligible instances are reachable through the custom endpoint. Only relevant if the list of static members is empty. Conflicts with `static_members`.
     * 
     */
    @Export(name="excludedMembers", type=List.class, parameters={String.class})
    private Output</* @Nullable */ List<String>> excludedMembers;

    /**
     * @return List of DB instance identifiers that aren't part of the custom endpoint group. All other eligible instances are reachable through the custom endpoint. Only relevant if the list of static members is empty. Conflicts with `static_members`.
     * 
     */
    public Output</* @Nullable */ List<String>> getExcludedMembers() {
        return this.excludedMembers;
    }
    /**
     * List of DB instance identifiers that are part of the custom endpoint group. Conflicts with `excluded_members`.
     * 
     */
    @Export(name="staticMembers", type=List.class, parameters={String.class})
    private Output</* @Nullable */ List<String>> staticMembers;

    /**
     * @return List of DB instance identifiers that are part of the custom endpoint group. Conflicts with `excluded_members`.
     * 
     */
    public Output</* @Nullable */ List<String>> getStaticMembers() {
        return this.staticMembers;
    }
    /**
     * Key-value map of resource tags. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Export(name="tags", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return Key-value map of resource tags. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Output</* @Nullable */ Map<String,String>> getTags() {
        return this.tags;
    }
    /**
     * A map of tags assigned to the resource, including those inherited from the provider .
     * 
     */
    @Export(name="tagsAll", type=Map.class, parameters={String.class, String.class})
    private Output<Map<String,String>> tagsAll;

    /**
     * @return A map of tags assigned to the resource, including those inherited from the provider .
     * 
     */
    public Output<Map<String,String>> getTagsAll() {
        return this.tagsAll;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ClusterEndpoint(String name) {
        this(name, ClusterEndpointArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ClusterEndpoint(String name, ClusterEndpointArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ClusterEndpoint(String name, ClusterEndpointArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:rds/clusterEndpoint:ClusterEndpoint", name, args == null ? ClusterEndpointArgs.Empty : args, makeResourceOptions(options, Output.empty()));
    }

    private ClusterEndpoint(String name, Output<String> id, @Nullable ClusterEndpointState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:rds/clusterEndpoint:ClusterEndpoint", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ClusterEndpoint get(String name, Output<String> id, @Nullable ClusterEndpointState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new ClusterEndpoint(name, id, state, options);
    }
}
