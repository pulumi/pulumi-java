// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.ec2transitgateway;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class PeeringAttachmentArgs extends io.pulumi.resources.ResourceArgs {

    public static final PeeringAttachmentArgs Empty = new PeeringAttachmentArgs();

    /**
     * Account ID of EC2 Transit Gateway to peer with. Defaults to the account ID the current provider is currently connected to.
     * 
     */
    @InputImport(name="peerAccountId")
      private final @Nullable Output<String> peerAccountId;

    public Output<String> getPeerAccountId() {
        return this.peerAccountId == null ? Output.empty() : this.peerAccountId;
    }

    /**
     * Region of EC2 Transit Gateway to peer with.
     * 
     */
    @InputImport(name="peerRegion", required=true)
      private final Output<String> peerRegion;

    public Output<String> getPeerRegion() {
        return this.peerRegion;
    }

    /**
     * Identifier of EC2 Transit Gateway to peer with.
     * 
     */
    @InputImport(name="peerTransitGatewayId", required=true)
      private final Output<String> peerTransitGatewayId;

    public Output<String> getPeerTransitGatewayId() {
        return this.peerTransitGatewayId;
    }

    /**
     * Key-value tags for the EC2 Transit Gateway Peering Attachment. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @InputImport(name="tags")
      private final @Nullable Output<Map<String,String>> tags;

    public Output<Map<String,String>> getTags() {
        return this.tags == null ? Output.empty() : this.tags;
    }

    /**
     * Identifier of EC2 Transit Gateway.
     * 
     */
    @InputImport(name="transitGatewayId", required=true)
      private final Output<String> transitGatewayId;

    public Output<String> getTransitGatewayId() {
        return this.transitGatewayId;
    }

    public PeeringAttachmentArgs(
        @Nullable Output<String> peerAccountId,
        Output<String> peerRegion,
        Output<String> peerTransitGatewayId,
        @Nullable Output<Map<String,String>> tags,
        Output<String> transitGatewayId) {
        this.peerAccountId = peerAccountId;
        this.peerRegion = Objects.requireNonNull(peerRegion, "expected parameter 'peerRegion' to be non-null");
        this.peerTransitGatewayId = Objects.requireNonNull(peerTransitGatewayId, "expected parameter 'peerTransitGatewayId' to be non-null");
        this.tags = tags;
        this.transitGatewayId = Objects.requireNonNull(transitGatewayId, "expected parameter 'transitGatewayId' to be non-null");
    }

    private PeeringAttachmentArgs() {
        this.peerAccountId = Output.empty();
        this.peerRegion = Output.empty();
        this.peerTransitGatewayId = Output.empty();
        this.tags = Output.empty();
        this.transitGatewayId = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PeeringAttachmentArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> peerAccountId;
        private Output<String> peerRegion;
        private Output<String> peerTransitGatewayId;
        private @Nullable Output<Map<String,String>> tags;
        private Output<String> transitGatewayId;

        public Builder() {
    	      // Empty
        }

        public Builder(PeeringAttachmentArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.peerAccountId = defaults.peerAccountId;
    	      this.peerRegion = defaults.peerRegion;
    	      this.peerTransitGatewayId = defaults.peerTransitGatewayId;
    	      this.tags = defaults.tags;
    	      this.transitGatewayId = defaults.transitGatewayId;
        }

        public Builder peerAccountId(@Nullable Output<String> peerAccountId) {
            this.peerAccountId = peerAccountId;
            return this;
        }

        public Builder peerAccountId(@Nullable String peerAccountId) {
            this.peerAccountId = Output.ofNullable(peerAccountId);
            return this;
        }

        public Builder peerRegion(Output<String> peerRegion) {
            this.peerRegion = Objects.requireNonNull(peerRegion);
            return this;
        }

        public Builder peerRegion(String peerRegion) {
            this.peerRegion = Output.of(Objects.requireNonNull(peerRegion));
            return this;
        }

        public Builder peerTransitGatewayId(Output<String> peerTransitGatewayId) {
            this.peerTransitGatewayId = Objects.requireNonNull(peerTransitGatewayId);
            return this;
        }

        public Builder peerTransitGatewayId(String peerTransitGatewayId) {
            this.peerTransitGatewayId = Output.of(Objects.requireNonNull(peerTransitGatewayId));
            return this;
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }

        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = Output.ofNullable(tags);
            return this;
        }

        public Builder transitGatewayId(Output<String> transitGatewayId) {
            this.transitGatewayId = Objects.requireNonNull(transitGatewayId);
            return this;
        }

        public Builder transitGatewayId(String transitGatewayId) {
            this.transitGatewayId = Output.of(Objects.requireNonNull(transitGatewayId));
            return this;
        }
        public PeeringAttachmentArgs build() {
            return new PeeringAttachmentArgs(peerAccountId, peerRegion, peerTransitGatewayId, tags, transitGatewayId);
        }
    }
}
