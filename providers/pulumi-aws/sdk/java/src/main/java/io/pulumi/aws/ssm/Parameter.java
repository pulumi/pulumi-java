// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.ssm;

import io.pulumi.aws.Utilities;
import io.pulumi.aws.ssm.ParameterArgs;
import io.pulumi.aws.ssm.inputs.ParameterState;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Export;
import io.pulumi.core.annotations.ResourceType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;

/**
 * Provides an SSM Parameter resource.
 * 
 * {{% examples %}}
 * ## Example Usage
 * {{% example %}}
 * 
 * To store a basic string parameter:
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 * 
 * const foo = new aws.ssm.Parameter("foo", {
 *     type: "String",
 *     value: "bar",
 * });
 * ```
 * ```python
 * import pulumi
 * import pulumi_aws as aws
 * 
 * foo = aws.ssm.Parameter("foo",
 *     type="String",
 *     value="bar")
 * ```
 * ```csharp
 * using Pulumi;
 * using Aws = Pulumi.Aws;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var foo = new Aws.Ssm.Parameter("foo", new Aws.Ssm.ParameterArgs
 *         {
 *             Type = "String",
 *             Value = "bar",
 *         });
 *     }
 * 
 * }
 * ```
 * ```go
 * package main
 * 
 * import (
 * 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/ssm"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		_, err := ssm.NewParameter(ctx, "foo", &ssm.ParameterArgs{
 * 			Type:  pulumi.String("String"),
 * 			Value: pulumi.String("bar"),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * ```
 * 
 * To store an encrypted string using the default SSM KMS key:
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 * 
 * const _default = new aws.rds.Instance("default", {
 *     allocatedStorage: 10,
 *     storageType: "gp2",
 *     engine: "mysql",
 *     engineVersion: "5.7.16",
 *     instanceClass: "db.t2.micro",
 *     name: "mydb",
 *     username: "foo",
 *     password: _var.database_master_password,
 *     dbSubnetGroupName: "my_database_subnet_group",
 *     parameterGroupName: "default.mysql5.7",
 * });
 * const secret = new aws.ssm.Parameter("secret", {
 *     description: "The parameter description",
 *     type: "SecureString",
 *     value: _var.database_master_password,
 *     tags: {
 *         environment: "production",
 *     },
 * });
 * ```
 * ```python
 * import pulumi
 * import pulumi_aws as aws
 * 
 * default = aws.rds.Instance("default",
 *     allocated_storage=10,
 *     storage_type="gp2",
 *     engine="mysql",
 *     engine_version="5.7.16",
 *     instance_class="db.t2.micro",
 *     name="mydb",
 *     username="foo",
 *     password=var["database_master_password"],
 *     db_subnet_group_name="my_database_subnet_group",
 *     parameter_group_name="default.mysql5.7")
 * secret = aws.ssm.Parameter("secret",
 *     description="The parameter description",
 *     type="SecureString",
 *     value=var["database_master_password"],
 *     tags={
 *         "environment": "production",
 *     })
 * ```
 * ```csharp
 * using Pulumi;
 * using Aws = Pulumi.Aws;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var @default = new Aws.Rds.Instance("default", new Aws.Rds.InstanceArgs
 *         {
 *             AllocatedStorage = 10,
 *             StorageType = "gp2",
 *             Engine = "mysql",
 *             EngineVersion = "5.7.16",
 *             InstanceClass = "db.t2.micro",
 *             Name = "mydb",
 *             Username = "foo",
 *             Password = @var.Database_master_password,
 *             DbSubnetGroupName = "my_database_subnet_group",
 *             ParameterGroupName = "default.mysql5.7",
 *         });
 *         var secret = new Aws.Ssm.Parameter("secret", new Aws.Ssm.ParameterArgs
 *         {
 *             Description = "The parameter description",
 *             Type = "SecureString",
 *             Value = @var.Database_master_password,
 *             Tags = 
 *             {
 *                 { "environment", "production" },
 *             },
 *         });
 *     }
 * 
 * }
 * ```
 * ```go
 * package main
 * 
 * import (
 * 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/rds"
 * 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/ssm"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		_, err := rds.NewInstance(ctx, "default", &rds.InstanceArgs{
 * 			AllocatedStorage:   pulumi.Int(10),
 * 			StorageType:        pulumi.String("gp2"),
 * 			Engine:             pulumi.String("mysql"),
 * 			EngineVersion:      pulumi.String("5.7.16"),
 * 			InstanceClass:      pulumi.String("db.t2.micro"),
 * 			Name:               pulumi.String("mydb"),
 * 			Username:           pulumi.String("foo"),
 * 			Password:           pulumi.Any(_var.Database_master_password),
 * 			DbSubnetGroupName:  pulumi.String("my_database_subnet_group"),
 * 			ParameterGroupName: pulumi.String("default.mysql5.7"),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		_, err = ssm.NewParameter(ctx, "secret", &ssm.ParameterArgs{
 * 			Description: pulumi.String("The parameter description"),
 * 			Type:        pulumi.String("SecureString"),
 * 			Value:       pulumi.Any(_var.Database_master_password),
 * 			Tags: pulumi.StringMap{
 * 				"environment": pulumi.String("production"),
 * 			},
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * ```
 * {{% /example %}}
 * {{% /examples %}}
 * 
 * ## Import
 * 
 * SSM Parameters can be imported using the `parameter store name`, e.g.,
 * 
 * ```sh
 *  $ pulumi import aws:ssm/parameter:Parameter my_param /my_path/my_paramname
 * ```
 * 
 *  
 */
@ResourceType(type="aws:ssm/parameter:Parameter")
public class Parameter extends io.pulumi.resources.CustomResource {
    /**
     * A regular expression used to validate the parameter value.
     * 
     */
    @Export(name="allowedPattern", type=String.class, parameters={})
    private Output</* @Nullable */ String> allowedPattern;

    /**
     * @return A regular expression used to validate the parameter value.
     * 
     */
    public Output</* @Nullable */ String> getAllowedPattern() {
        return this.allowedPattern;
    }
    /**
     * The ARN of the parameter.
     * 
     */
    @Export(name="arn", type=String.class, parameters={})
    private Output<String> arn;

    /**
     * @return The ARN of the parameter.
     * 
     */
    public Output<String> getArn() {
        return this.arn;
    }
    /**
     * The data_type of the parameter. Valid values: text and aws:ec2:image for AMI format, see the [Native parameter support for Amazon Machine Image IDs
     * ](https://docs.aws.amazon.com/systems-manager/latest/userguide/parameter-store-ec2-aliases.html)
     * 
     */
    @Export(name="dataType", type=String.class, parameters={})
    private Output<String> dataType;

    /**
     * @return The data_type of the parameter. Valid values: text and aws:ec2:image for AMI format, see the [Native parameter support for Amazon Machine Image IDs
     * ](https://docs.aws.amazon.com/systems-manager/latest/userguide/parameter-store-ec2-aliases.html)
     * 
     */
    public Output<String> getDataType() {
        return this.dataType;
    }
    /**
     * The description of the parameter.
     * 
     */
    @Export(name="description", type=String.class, parameters={})
    private Output</* @Nullable */ String> description;

    /**
     * @return The description of the parameter.
     * 
     */
    public Output</* @Nullable */ String> getDescription() {
        return this.description;
    }
    /**
     * The KMS key id or arn for encrypting a SecureString.
     * 
     */
    @Export(name="keyId", type=String.class, parameters={})
    private Output<String> keyId;

    /**
     * @return The KMS key id or arn for encrypting a SecureString.
     * 
     */
    public Output<String> getKeyId() {
        return this.keyId;
    }
    /**
     * The name of the parameter. If the name contains a path (e.g., any forward slashes (`/`)), it must be fully qualified with a leading forward slash (`/`). For additional requirements and constraints, see the [AWS SSM User Guide](https://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-parameter-name-constraints.html).
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The name of the parameter. If the name contains a path (e.g., any forward slashes (`/`)), it must be fully qualified with a leading forward slash (`/`). For additional requirements and constraints, see the [AWS SSM User Guide](https://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-parameter-name-constraints.html).
     * 
     */
    public Output<String> getName() {
        return this.name;
    }
    /**
     * Overwrite an existing parameter. If not specified, will default to `false` if the resource has not been created by this provider to avoid overwrite of existing resource and will default to `true` otherwise (lifecycle rules should then be used to manage the update behavior).
     * 
     */
    @Export(name="overwrite", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> overwrite;

    /**
     * @return Overwrite an existing parameter. If not specified, will default to `false` if the resource has not been created by this provider to avoid overwrite of existing resource and will default to `true` otherwise (lifecycle rules should then be used to manage the update behavior).
     * 
     */
    public Output</* @Nullable */ Boolean> getOverwrite() {
        return this.overwrite;
    }
    /**
     * A map of tags to assign to the object. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Export(name="tags", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return A map of tags to assign to the object. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Output</* @Nullable */ Map<String,String>> getTags() {
        return this.tags;
    }
    /**
     * A map of tags assigned to the resource, including those inherited from the provider .
     * 
     */
    @Export(name="tagsAll", type=Map.class, parameters={String.class, String.class})
    private Output<Map<String,String>> tagsAll;

    /**
     * @return A map of tags assigned to the resource, including those inherited from the provider .
     * 
     */
    public Output<Map<String,String>> getTagsAll() {
        return this.tagsAll;
    }
    /**
     * The tier of the parameter. If not specified, will default to `Standard`. Valid tiers are `Standard`, `Advanced`, and `Intelligent-Tiering`. For more information on parameter tiers, see the [AWS SSM Parameter tier comparison and guide](https://docs.aws.amazon.com/systems-manager/latest/userguide/parameter-store-advanced-parameters.html).
     * 
     */
    @Export(name="tier", type=String.class, parameters={})
    private Output</* @Nullable */ String> tier;

    /**
     * @return The tier of the parameter. If not specified, will default to `Standard`. Valid tiers are `Standard`, `Advanced`, and `Intelligent-Tiering`. For more information on parameter tiers, see the [AWS SSM Parameter tier comparison and guide](https://docs.aws.amazon.com/systems-manager/latest/userguide/parameter-store-advanced-parameters.html).
     * 
     */
    public Output</* @Nullable */ String> getTier() {
        return this.tier;
    }
    /**
     * The type of the parameter. Valid types are `String`, `StringList` and `SecureString`.
     * 
     */
    @Export(name="type", type=String.class, parameters={})
    private Output<String> type;

    /**
     * @return The type of the parameter. Valid types are `String`, `StringList` and `SecureString`.
     * 
     */
    public Output<String> getType() {
        return this.type;
    }
    /**
     * The value of the parameter.
     * 
     */
    @Export(name="value", type=String.class, parameters={})
    private Output<String> value;

    /**
     * @return The value of the parameter.
     * 
     */
    public Output<String> getValue() {
        return this.value;
    }
    /**
     * The version of the parameter.
     * 
     */
    @Export(name="version", type=Integer.class, parameters={})
    private Output<Integer> version;

    /**
     * @return The version of the parameter.
     * 
     */
    public Output<Integer> getVersion() {
        return this.version;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Parameter(String name) {
        this(name, ParameterArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Parameter(String name, ParameterArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Parameter(String name, ParameterArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:ssm/parameter:Parameter", name, args == null ? ParameterArgs.Empty : args, makeResourceOptions(options, Output.empty()));
    }

    private Parameter(String name, Output<String> id, @Nullable ParameterState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:ssm/parameter:Parameter", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Parameter get(String name, Output<String> id, @Nullable ParameterState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new Parameter(name, id, state, options);
    }
}
