// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.dms.inputs;

import io.pulumi.aws.dms.inputs.EndpointElasticsearchSettingsGetArgs;
import io.pulumi.aws.dms.inputs.EndpointKafkaSettingsGetArgs;
import io.pulumi.aws.dms.inputs.EndpointKinesisSettingsGetArgs;
import io.pulumi.aws.dms.inputs.EndpointMongodbSettingsGetArgs;
import io.pulumi.aws.dms.inputs.EndpointS3SettingsGetArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class EndpointState extends io.pulumi.resources.ResourceArgs {

    public static final EndpointState Empty = new EndpointState();

    /**
     * The Amazon Resource Name (ARN) for the certificate.
     * 
     */
    @Import(name="certificateArn")
      private final @Nullable Output<String> certificateArn;

    public Output<String> certificateArn() {
        return this.certificateArn == null ? Codegen.empty() : this.certificateArn;
    }

    /**
     * The name of the endpoint database.
     * 
     */
    @Import(name="databaseName")
      private final @Nullable Output<String> databaseName;

    public Output<String> databaseName() {
        return this.databaseName == null ? Codegen.empty() : this.databaseName;
    }

    /**
     * Configuration block with Elasticsearch settings. Detailed below.
     * 
     */
    @Import(name="elasticsearchSettings")
      private final @Nullable Output<EndpointElasticsearchSettingsGetArgs> elasticsearchSettings;

    public Output<EndpointElasticsearchSettingsGetArgs> elasticsearchSettings() {
        return this.elasticsearchSettings == null ? Codegen.empty() : this.elasticsearchSettings;
    }

    /**
     * The Amazon Resource Name (ARN) for the endpoint.
     * 
     */
    @Import(name="endpointArn")
      private final @Nullable Output<String> endpointArn;

    public Output<String> endpointArn() {
        return this.endpointArn == null ? Codegen.empty() : this.endpointArn;
    }

    /**
     * The database endpoint identifier.
     * 
     */
    @Import(name="endpointId")
      private final @Nullable Output<String> endpointId;

    public Output<String> endpointId() {
        return this.endpointId == null ? Codegen.empty() : this.endpointId;
    }

    /**
     * The type of endpoint. Can be one of `source | target`.
     * 
     */
    @Import(name="endpointType")
      private final @Nullable Output<String> endpointType;

    public Output<String> endpointType() {
        return this.endpointType == null ? Codegen.empty() : this.endpointType;
    }

    /**
     * The type of engine for the endpoint. Can be one of `aurora | aurora-postgresql| azuredb | db2 | docdb | dynamodb | elasticsearch | kafka | kinesis | mariadb | mongodb | mysql | oracle | postgres | redshift | s3 | sqlserver | sybase`.
     * 
     */
    @Import(name="engineName")
      private final @Nullable Output<String> engineName;

    public Output<String> engineName() {
        return this.engineName == null ? Codegen.empty() : this.engineName;
    }

    /**
     * Additional attributes associated with the connection. For available attributes see [Using Extra Connection Attributes with AWS Database Migration Service](https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Source.PostgreSQL.html#CHAP_Source.PostgreSQL.ConnectionAttrib).
     * 
     */
    @Import(name="extraConnectionAttributes")
      private final @Nullable Output<String> extraConnectionAttributes;

    public Output<String> extraConnectionAttributes() {
        return this.extraConnectionAttributes == null ? Codegen.empty() : this.extraConnectionAttributes;
    }

    /**
     * Configuration block with Kafka settings. Detailed below.
     * 
     */
    @Import(name="kafkaSettings")
      private final @Nullable Output<EndpointKafkaSettingsGetArgs> kafkaSettings;

    public Output<EndpointKafkaSettingsGetArgs> kafkaSettings() {
        return this.kafkaSettings == null ? Codegen.empty() : this.kafkaSettings;
    }

    /**
     * Configuration block with Kinesis settings. Detailed below.
     * 
     */
    @Import(name="kinesisSettings")
      private final @Nullable Output<EndpointKinesisSettingsGetArgs> kinesisSettings;

    public Output<EndpointKinesisSettingsGetArgs> kinesisSettings() {
        return this.kinesisSettings == null ? Codegen.empty() : this.kinesisSettings;
    }

    /**
     * The Amazon Resource Name (ARN) for the KMS key that will be used to encrypt the connection parameters. If you do not specify a value for `kms_key_arn`, then AWS DMS will use your default encryption key. AWS KMS creates the default encryption key for your AWS account. Your AWS account has a different default encryption key for each AWS region.
     * 
     */
    @Import(name="kmsKeyArn")
      private final @Nullable Output<String> kmsKeyArn;

    public Output<String> kmsKeyArn() {
        return this.kmsKeyArn == null ? Codegen.empty() : this.kmsKeyArn;
    }

    /**
     * Configuration block with MongoDB settings. Detailed below.
     * 
     */
    @Import(name="mongodbSettings")
      private final @Nullable Output<EndpointMongodbSettingsGetArgs> mongodbSettings;

    public Output<EndpointMongodbSettingsGetArgs> mongodbSettings() {
        return this.mongodbSettings == null ? Codegen.empty() : this.mongodbSettings;
    }

    /**
     * The password to be used to login to the endpoint database.
     * 
     */
    @Import(name="password")
      private final @Nullable Output<String> password;

    public Output<String> password() {
        return this.password == null ? Codegen.empty() : this.password;
    }

    /**
     * The port used by the endpoint database.
     * 
     */
    @Import(name="port")
      private final @Nullable Output<Integer> port;

    public Output<Integer> port() {
        return this.port == null ? Codegen.empty() : this.port;
    }

    /**
     * Configuration block with S3 settings. Detailed below.
     * 
     */
    @Import(name="s3Settings")
      private final @Nullable Output<EndpointS3SettingsGetArgs> s3Settings;

    public Output<EndpointS3SettingsGetArgs> s3Settings() {
        return this.s3Settings == null ? Codegen.empty() : this.s3Settings;
    }

    /**
     * Amazon Resource Name (ARN) of the IAM role that specifies AWS DMS as the trusted entity and has the required permissions to access the value in SecretsManagerSecret.
     * 
     */
    @Import(name="secretsManagerAccessRoleArn")
      private final @Nullable Output<String> secretsManagerAccessRoleArn;

    public Output<String> secretsManagerAccessRoleArn() {
        return this.secretsManagerAccessRoleArn == null ? Codegen.empty() : this.secretsManagerAccessRoleArn;
    }

    /**
     * The full ARN, partial ARN, or friendly name of the SecretsManagerSecret that contains the endpoint connection details. Supported only for `engine_name` as `oracle` and `postgres`.
     * 
     */
    @Import(name="secretsManagerArn")
      private final @Nullable Output<String> secretsManagerArn;

    public Output<String> secretsManagerArn() {
        return this.secretsManagerArn == null ? Codegen.empty() : this.secretsManagerArn;
    }

    /**
     * The host name of the server.
     * 
     */
    @Import(name="serverName")
      private final @Nullable Output<String> serverName;

    public Output<String> serverName() {
        return this.serverName == null ? Codegen.empty() : this.serverName;
    }

    /**
     * The Amazon Resource Name (ARN) used by the service access IAM role for dynamodb endpoints.
     * 
     */
    @Import(name="serviceAccessRole")
      private final @Nullable Output<String> serviceAccessRole;

    public Output<String> serviceAccessRole() {
        return this.serviceAccessRole == null ? Codegen.empty() : this.serviceAccessRole;
    }

    /**
     * The SSL mode to use for the connection. Can be one of `none | require | verify-ca | verify-full`
     * 
     */
    @Import(name="sslMode")
      private final @Nullable Output<String> sslMode;

    public Output<String> sslMode() {
        return this.sslMode == null ? Codegen.empty() : this.sslMode;
    }

    /**
     * A map of tags to assign to the resource. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Import(name="tags")
      private final @Nullable Output<Map<String,String>> tags;

    public Output<Map<String,String>> tags() {
        return this.tags == null ? Codegen.empty() : this.tags;
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider .
     * 
     */
    @Import(name="tagsAll")
      private final @Nullable Output<Map<String,String>> tagsAll;

    public Output<Map<String,String>> tagsAll() {
        return this.tagsAll == null ? Codegen.empty() : this.tagsAll;
    }

    /**
     * The user name to be used to login to the endpoint database.
     * 
     */
    @Import(name="username")
      private final @Nullable Output<String> username;

    public Output<String> username() {
        return this.username == null ? Codegen.empty() : this.username;
    }

    public EndpointState(
        @Nullable Output<String> certificateArn,
        @Nullable Output<String> databaseName,
        @Nullable Output<EndpointElasticsearchSettingsGetArgs> elasticsearchSettings,
        @Nullable Output<String> endpointArn,
        @Nullable Output<String> endpointId,
        @Nullable Output<String> endpointType,
        @Nullable Output<String> engineName,
        @Nullable Output<String> extraConnectionAttributes,
        @Nullable Output<EndpointKafkaSettingsGetArgs> kafkaSettings,
        @Nullable Output<EndpointKinesisSettingsGetArgs> kinesisSettings,
        @Nullable Output<String> kmsKeyArn,
        @Nullable Output<EndpointMongodbSettingsGetArgs> mongodbSettings,
        @Nullable Output<String> password,
        @Nullable Output<Integer> port,
        @Nullable Output<EndpointS3SettingsGetArgs> s3Settings,
        @Nullable Output<String> secretsManagerAccessRoleArn,
        @Nullable Output<String> secretsManagerArn,
        @Nullable Output<String> serverName,
        @Nullable Output<String> serviceAccessRole,
        @Nullable Output<String> sslMode,
        @Nullable Output<Map<String,String>> tags,
        @Nullable Output<Map<String,String>> tagsAll,
        @Nullable Output<String> username) {
        this.certificateArn = certificateArn;
        this.databaseName = databaseName;
        this.elasticsearchSettings = elasticsearchSettings;
        this.endpointArn = endpointArn;
        this.endpointId = endpointId;
        this.endpointType = endpointType;
        this.engineName = engineName;
        this.extraConnectionAttributes = extraConnectionAttributes;
        this.kafkaSettings = kafkaSettings;
        this.kinesisSettings = kinesisSettings;
        this.kmsKeyArn = kmsKeyArn;
        this.mongodbSettings = mongodbSettings;
        this.password = password;
        this.port = port;
        this.s3Settings = s3Settings;
        this.secretsManagerAccessRoleArn = secretsManagerAccessRoleArn;
        this.secretsManagerArn = secretsManagerArn;
        this.serverName = serverName;
        this.serviceAccessRole = serviceAccessRole;
        this.sslMode = sslMode;
        this.tags = tags;
        this.tagsAll = tagsAll;
        this.username = username;
    }

    private EndpointState() {
        this.certificateArn = Codegen.empty();
        this.databaseName = Codegen.empty();
        this.elasticsearchSettings = Codegen.empty();
        this.endpointArn = Codegen.empty();
        this.endpointId = Codegen.empty();
        this.endpointType = Codegen.empty();
        this.engineName = Codegen.empty();
        this.extraConnectionAttributes = Codegen.empty();
        this.kafkaSettings = Codegen.empty();
        this.kinesisSettings = Codegen.empty();
        this.kmsKeyArn = Codegen.empty();
        this.mongodbSettings = Codegen.empty();
        this.password = Codegen.empty();
        this.port = Codegen.empty();
        this.s3Settings = Codegen.empty();
        this.secretsManagerAccessRoleArn = Codegen.empty();
        this.secretsManagerArn = Codegen.empty();
        this.serverName = Codegen.empty();
        this.serviceAccessRole = Codegen.empty();
        this.sslMode = Codegen.empty();
        this.tags = Codegen.empty();
        this.tagsAll = Codegen.empty();
        this.username = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(EndpointState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> certificateArn;
        private @Nullable Output<String> databaseName;
        private @Nullable Output<EndpointElasticsearchSettingsGetArgs> elasticsearchSettings;
        private @Nullable Output<String> endpointArn;
        private @Nullable Output<String> endpointId;
        private @Nullable Output<String> endpointType;
        private @Nullable Output<String> engineName;
        private @Nullable Output<String> extraConnectionAttributes;
        private @Nullable Output<EndpointKafkaSettingsGetArgs> kafkaSettings;
        private @Nullable Output<EndpointKinesisSettingsGetArgs> kinesisSettings;
        private @Nullable Output<String> kmsKeyArn;
        private @Nullable Output<EndpointMongodbSettingsGetArgs> mongodbSettings;
        private @Nullable Output<String> password;
        private @Nullable Output<Integer> port;
        private @Nullable Output<EndpointS3SettingsGetArgs> s3Settings;
        private @Nullable Output<String> secretsManagerAccessRoleArn;
        private @Nullable Output<String> secretsManagerArn;
        private @Nullable Output<String> serverName;
        private @Nullable Output<String> serviceAccessRole;
        private @Nullable Output<String> sslMode;
        private @Nullable Output<Map<String,String>> tags;
        private @Nullable Output<Map<String,String>> tagsAll;
        private @Nullable Output<String> username;

        public Builder() {
    	      // Empty
        }

        public Builder(EndpointState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.certificateArn = defaults.certificateArn;
    	      this.databaseName = defaults.databaseName;
    	      this.elasticsearchSettings = defaults.elasticsearchSettings;
    	      this.endpointArn = defaults.endpointArn;
    	      this.endpointId = defaults.endpointId;
    	      this.endpointType = defaults.endpointType;
    	      this.engineName = defaults.engineName;
    	      this.extraConnectionAttributes = defaults.extraConnectionAttributes;
    	      this.kafkaSettings = defaults.kafkaSettings;
    	      this.kinesisSettings = defaults.kinesisSettings;
    	      this.kmsKeyArn = defaults.kmsKeyArn;
    	      this.mongodbSettings = defaults.mongodbSettings;
    	      this.password = defaults.password;
    	      this.port = defaults.port;
    	      this.s3Settings = defaults.s3Settings;
    	      this.secretsManagerAccessRoleArn = defaults.secretsManagerAccessRoleArn;
    	      this.secretsManagerArn = defaults.secretsManagerArn;
    	      this.serverName = defaults.serverName;
    	      this.serviceAccessRole = defaults.serviceAccessRole;
    	      this.sslMode = defaults.sslMode;
    	      this.tags = defaults.tags;
    	      this.tagsAll = defaults.tagsAll;
    	      this.username = defaults.username;
        }

        public Builder certificateArn(@Nullable Output<String> certificateArn) {
            this.certificateArn = certificateArn;
            return this;
        }
        public Builder certificateArn(@Nullable String certificateArn) {
            this.certificateArn = Codegen.ofNullable(certificateArn);
            return this;
        }
        public Builder databaseName(@Nullable Output<String> databaseName) {
            this.databaseName = databaseName;
            return this;
        }
        public Builder databaseName(@Nullable String databaseName) {
            this.databaseName = Codegen.ofNullable(databaseName);
            return this;
        }
        public Builder elasticsearchSettings(@Nullable Output<EndpointElasticsearchSettingsGetArgs> elasticsearchSettings) {
            this.elasticsearchSettings = elasticsearchSettings;
            return this;
        }
        public Builder elasticsearchSettings(@Nullable EndpointElasticsearchSettingsGetArgs elasticsearchSettings) {
            this.elasticsearchSettings = Codegen.ofNullable(elasticsearchSettings);
            return this;
        }
        public Builder endpointArn(@Nullable Output<String> endpointArn) {
            this.endpointArn = endpointArn;
            return this;
        }
        public Builder endpointArn(@Nullable String endpointArn) {
            this.endpointArn = Codegen.ofNullable(endpointArn);
            return this;
        }
        public Builder endpointId(@Nullable Output<String> endpointId) {
            this.endpointId = endpointId;
            return this;
        }
        public Builder endpointId(@Nullable String endpointId) {
            this.endpointId = Codegen.ofNullable(endpointId);
            return this;
        }
        public Builder endpointType(@Nullable Output<String> endpointType) {
            this.endpointType = endpointType;
            return this;
        }
        public Builder endpointType(@Nullable String endpointType) {
            this.endpointType = Codegen.ofNullable(endpointType);
            return this;
        }
        public Builder engineName(@Nullable Output<String> engineName) {
            this.engineName = engineName;
            return this;
        }
        public Builder engineName(@Nullable String engineName) {
            this.engineName = Codegen.ofNullable(engineName);
            return this;
        }
        public Builder extraConnectionAttributes(@Nullable Output<String> extraConnectionAttributes) {
            this.extraConnectionAttributes = extraConnectionAttributes;
            return this;
        }
        public Builder extraConnectionAttributes(@Nullable String extraConnectionAttributes) {
            this.extraConnectionAttributes = Codegen.ofNullable(extraConnectionAttributes);
            return this;
        }
        public Builder kafkaSettings(@Nullable Output<EndpointKafkaSettingsGetArgs> kafkaSettings) {
            this.kafkaSettings = kafkaSettings;
            return this;
        }
        public Builder kafkaSettings(@Nullable EndpointKafkaSettingsGetArgs kafkaSettings) {
            this.kafkaSettings = Codegen.ofNullable(kafkaSettings);
            return this;
        }
        public Builder kinesisSettings(@Nullable Output<EndpointKinesisSettingsGetArgs> kinesisSettings) {
            this.kinesisSettings = kinesisSettings;
            return this;
        }
        public Builder kinesisSettings(@Nullable EndpointKinesisSettingsGetArgs kinesisSettings) {
            this.kinesisSettings = Codegen.ofNullable(kinesisSettings);
            return this;
        }
        public Builder kmsKeyArn(@Nullable Output<String> kmsKeyArn) {
            this.kmsKeyArn = kmsKeyArn;
            return this;
        }
        public Builder kmsKeyArn(@Nullable String kmsKeyArn) {
            this.kmsKeyArn = Codegen.ofNullable(kmsKeyArn);
            return this;
        }
        public Builder mongodbSettings(@Nullable Output<EndpointMongodbSettingsGetArgs> mongodbSettings) {
            this.mongodbSettings = mongodbSettings;
            return this;
        }
        public Builder mongodbSettings(@Nullable EndpointMongodbSettingsGetArgs mongodbSettings) {
            this.mongodbSettings = Codegen.ofNullable(mongodbSettings);
            return this;
        }
        public Builder password(@Nullable Output<String> password) {
            this.password = password;
            return this;
        }
        public Builder password(@Nullable String password) {
            this.password = Codegen.ofNullable(password);
            return this;
        }
        public Builder port(@Nullable Output<Integer> port) {
            this.port = port;
            return this;
        }
        public Builder port(@Nullable Integer port) {
            this.port = Codegen.ofNullable(port);
            return this;
        }
        public Builder s3Settings(@Nullable Output<EndpointS3SettingsGetArgs> s3Settings) {
            this.s3Settings = s3Settings;
            return this;
        }
        public Builder s3Settings(@Nullable EndpointS3SettingsGetArgs s3Settings) {
            this.s3Settings = Codegen.ofNullable(s3Settings);
            return this;
        }
        public Builder secretsManagerAccessRoleArn(@Nullable Output<String> secretsManagerAccessRoleArn) {
            this.secretsManagerAccessRoleArn = secretsManagerAccessRoleArn;
            return this;
        }
        public Builder secretsManagerAccessRoleArn(@Nullable String secretsManagerAccessRoleArn) {
            this.secretsManagerAccessRoleArn = Codegen.ofNullable(secretsManagerAccessRoleArn);
            return this;
        }
        public Builder secretsManagerArn(@Nullable Output<String> secretsManagerArn) {
            this.secretsManagerArn = secretsManagerArn;
            return this;
        }
        public Builder secretsManagerArn(@Nullable String secretsManagerArn) {
            this.secretsManagerArn = Codegen.ofNullable(secretsManagerArn);
            return this;
        }
        public Builder serverName(@Nullable Output<String> serverName) {
            this.serverName = serverName;
            return this;
        }
        public Builder serverName(@Nullable String serverName) {
            this.serverName = Codegen.ofNullable(serverName);
            return this;
        }
        public Builder serviceAccessRole(@Nullable Output<String> serviceAccessRole) {
            this.serviceAccessRole = serviceAccessRole;
            return this;
        }
        public Builder serviceAccessRole(@Nullable String serviceAccessRole) {
            this.serviceAccessRole = Codegen.ofNullable(serviceAccessRole);
            return this;
        }
        public Builder sslMode(@Nullable Output<String> sslMode) {
            this.sslMode = sslMode;
            return this;
        }
        public Builder sslMode(@Nullable String sslMode) {
            this.sslMode = Codegen.ofNullable(sslMode);
            return this;
        }
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = Codegen.ofNullable(tags);
            return this;
        }
        public Builder tagsAll(@Nullable Output<Map<String,String>> tagsAll) {
            this.tagsAll = tagsAll;
            return this;
        }
        public Builder tagsAll(@Nullable Map<String,String> tagsAll) {
            this.tagsAll = Codegen.ofNullable(tagsAll);
            return this;
        }
        public Builder username(@Nullable Output<String> username) {
            this.username = username;
            return this;
        }
        public Builder username(@Nullable String username) {
            this.username = Codegen.ofNullable(username);
            return this;
        }        public EndpointState build() {
            return new EndpointState(certificateArn, databaseName, elasticsearchSettings, endpointArn, endpointId, endpointType, engineName, extraConnectionAttributes, kafkaSettings, kinesisSettings, kmsKeyArn, mongodbSettings, password, port, s3Settings, secretsManagerAccessRoleArn, secretsManagerArn, serverName, serviceAccessRole, sslMode, tags, tagsAll, username);
        }
    }
}
