// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.cfg;

import io.pulumi.aws.Utilities;
import io.pulumi.aws.cfg.RemediationConfigurationArgs;
import io.pulumi.aws.cfg.inputs.RemediationConfigurationState;
import io.pulumi.aws.cfg.outputs.RemediationConfigurationExecutionControls;
import io.pulumi.aws.cfg.outputs.RemediationConfigurationParameter;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Export;
import io.pulumi.core.annotations.ResourceType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * Provides an AWS Config Remediation Configuration.
 * 
 * > **Note:** Config Remediation Configuration requires an existing Config Rule to be present.
 * 
 * {{% examples %}}
 * ## Example Usage
 * {{% example %}}
 * 
 * AWS managed rules can be used by setting the source owner to `AWS` and the source identifier to the name of the managed rule. More information about AWS managed rules can be found in the [AWS Config Developer Guide](https://docs.aws.amazon.com/config/latest/developerguide/evaluate-config_use-managed-rules.html).
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 * 
 * const thisRule = new aws.cfg.Rule("thisRule", {source: {
 *     owner: "AWS",
 *     sourceIdentifier: "S3_BUCKET_VERSIONING_ENABLED",
 * }});
 * const thisRemediationConfiguration = new aws.cfg.RemediationConfiguration("thisRemediationConfiguration", {
 *     configRuleName: thisRule.name,
 *     resourceType: "AWS::S3::Bucket",
 *     targetType: "SSM_DOCUMENT",
 *     targetId: "AWS-EnableS3BucketEncryption",
 *     targetVersion: "1",
 *     parameters: [
 *         {
 *             name: "AutomationAssumeRole",
 *             staticValue: "arn:aws:iam::875924563244:role/security_config",
 *         },
 *         {
 *             name: "BucketName",
 *             resourceValue: "RESOURCE_ID",
 *         },
 *         {
 *             name: "SSEAlgorithm",
 *             staticValue: "AES256",
 *         },
 *     ],
 *     automatic: true,
 *     maximumAutomaticAttempts: 10,
 *     retryAttemptSeconds: 600,
 *     executionControls: {
 *         ssmControls: {
 *             concurrentExecutionRatePercentage: 25,
 *             errorPercentage: 20,
 *         },
 *     },
 * });
 * ```
 * ```python
 * import pulumi
 * import pulumi_aws as aws
 * 
 * this_rule = aws.cfg.Rule("thisRule", source=aws.cfg.RuleSourceArgs(
 *     owner="AWS",
 *     source_identifier="S3_BUCKET_VERSIONING_ENABLED",
 * ))
 * this_remediation_configuration = aws.cfg.RemediationConfiguration("thisRemediationConfiguration",
 *     config_rule_name=this_rule.name,
 *     resource_type="AWS::S3::Bucket",
 *     target_type="SSM_DOCUMENT",
 *     target_id="AWS-EnableS3BucketEncryption",
 *     target_version="1",
 *     parameters=[
 *         aws.cfg.RemediationConfigurationParameterArgs(
 *             name="AutomationAssumeRole",
 *             static_value="arn:aws:iam::875924563244:role/security_config",
 *         ),
 *         aws.cfg.RemediationConfigurationParameterArgs(
 *             name="BucketName",
 *             resource_value="RESOURCE_ID",
 *         ),
 *         aws.cfg.RemediationConfigurationParameterArgs(
 *             name="SSEAlgorithm",
 *             static_value="AES256",
 *         ),
 *     ],
 *     automatic=True,
 *     maximum_automatic_attempts=10,
 *     retry_attempt_seconds=600,
 *     execution_controls=aws.cfg.RemediationConfigurationExecutionControlsArgs(
 *         ssm_controls=aws.cfg.RemediationConfigurationExecutionControlsSsmControlsArgs(
 *             concurrent_execution_rate_percentage=25,
 *             error_percentage=20,
 *         ),
 *     ))
 * ```
 * ```csharp
 * using Pulumi;
 * using Aws = Pulumi.Aws;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var thisRule = new Aws.Cfg.Rule("thisRule", new Aws.Cfg.RuleArgs
 *         {
 *             Source = new Aws.Cfg.Inputs.RuleSourceArgs
 *             {
 *                 Owner = "AWS",
 *                 SourceIdentifier = "S3_BUCKET_VERSIONING_ENABLED",
 *             },
 *         });
 *         var thisRemediationConfiguration = new Aws.Cfg.RemediationConfiguration("thisRemediationConfiguration", new Aws.Cfg.RemediationConfigurationArgs
 *         {
 *             ConfigRuleName = thisRule.Name,
 *             ResourceType = "AWS::S3::Bucket",
 *             TargetType = "SSM_DOCUMENT",
 *             TargetId = "AWS-EnableS3BucketEncryption",
 *             TargetVersion = "1",
 *             Parameters = 
 *             {
 *                 new Aws.Cfg.Inputs.RemediationConfigurationParameterArgs
 *                 {
 *                     Name = "AutomationAssumeRole",
 *                     StaticValue = "arn:aws:iam::875924563244:role/security_config",
 *                 },
 *                 new Aws.Cfg.Inputs.RemediationConfigurationParameterArgs
 *                 {
 *                     Name = "BucketName",
 *                     ResourceValue = "RESOURCE_ID",
 *                 },
 *                 new Aws.Cfg.Inputs.RemediationConfigurationParameterArgs
 *                 {
 *                     Name = "SSEAlgorithm",
 *                     StaticValue = "AES256",
 *                 },
 *             },
 *             Automatic = true,
 *             MaximumAutomaticAttempts = 10,
 *             RetryAttemptSeconds = 600,
 *             ExecutionControls = new Aws.Cfg.Inputs.RemediationConfigurationExecutionControlsArgs
 *             {
 *                 SsmControls = new Aws.Cfg.Inputs.RemediationConfigurationExecutionControlsSsmControlsArgs
 *                 {
 *                     ConcurrentExecutionRatePercentage = 25,
 *                     ErrorPercentage = 20,
 *                 },
 *             },
 *         });
 *     }
 * 
 * }
 * ```
 * ```go
 * package main
 * 
 * import (
 * 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/cfg"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		thisRule, err := cfg.NewRule(ctx, "thisRule", &cfg.RuleArgs{
 * 			Source: &cfg.RuleSourceArgs{
 * 				Owner:            pulumi.String("AWS"),
 * 				SourceIdentifier: pulumi.String("S3_BUCKET_VERSIONING_ENABLED"),
 * 			},
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		_, err = cfg.NewRemediationConfiguration(ctx, "thisRemediationConfiguration", &cfg.RemediationConfigurationArgs{
 * 			ConfigRuleName: thisRule.Name,
 * 			ResourceType:   pulumi.String("AWS::S3::Bucket"),
 * 			TargetType:     pulumi.String("SSM_DOCUMENT"),
 * 			TargetId:       pulumi.String("AWS-EnableS3BucketEncryption"),
 * 			TargetVersion:  pulumi.String("1"),
 * 			Parameters: cfg.RemediationConfigurationParameterArray{
 * 				&cfg.RemediationConfigurationParameterArgs{
 * 					Name:        pulumi.String("AutomationAssumeRole"),
 * 					StaticValue: pulumi.String("arn:aws:iam::875924563244:role/security_config"),
 * 				},
 * 				&cfg.RemediationConfigurationParameterArgs{
 * 					Name:          pulumi.String("BucketName"),
 * 					ResourceValue: pulumi.String("RESOURCE_ID"),
 * 				},
 * 				&cfg.RemediationConfigurationParameterArgs{
 * 					Name:        pulumi.String("SSEAlgorithm"),
 * 					StaticValue: pulumi.String("AES256"),
 * 				},
 * 			},
 * 			Automatic:                pulumi.Bool(true),
 * 			MaximumAutomaticAttempts: pulumi.Int(10),
 * 			RetryAttemptSeconds:      pulumi.Int(600),
 * 			ExecutionControls: &cfg.RemediationConfigurationExecutionControlsArgs{
 * 				SsmControls: &cfg.RemediationConfigurationExecutionControlsSsmControlsArgs{
 * 					ConcurrentExecutionRatePercentage: pulumi.Int(25),
 * 					ErrorPercentage:                   pulumi.Int(20),
 * 				},
 * 			},
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * ```
 * {{% /example %}}
 * {{% /examples %}}
 * 
 * ## Import
 * 
 * Remediation Configurations can be imported using the name config_rule_name, e.g.,
 * 
 * ```sh
 *  $ pulumi import aws:cfg/remediationConfiguration:RemediationConfiguration this example
 * ```
 * 
 *  
 */
@ResourceType(type="aws:cfg/remediationConfiguration:RemediationConfiguration")
public class RemediationConfiguration extends io.pulumi.resources.CustomResource {
    /**
     * ARN of the Config Remediation Configuration.
     * 
     */
    @Export(name="arn", type=String.class, parameters={})
    private Output<String> arn;

    /**
     * @return ARN of the Config Remediation Configuration.
     * 
     */
    public Output<String> getArn() {
        return this.arn;
    }
    /**
     * Remediation is triggered automatically if `true`.
     * 
     */
    @Export(name="automatic", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> automatic;

    /**
     * @return Remediation is triggered automatically if `true`.
     * 
     */
    public Output</* @Nullable */ Boolean> getAutomatic() {
        return this.automatic;
    }
    /**
     * Name of the AWS Config rule.
     * 
     */
    @Export(name="configRuleName", type=String.class, parameters={})
    private Output<String> configRuleName;

    /**
     * @return Name of the AWS Config rule.
     * 
     */
    public Output<String> getConfigRuleName() {
        return this.configRuleName;
    }
    /**
     * Configuration block for execution controls. See below.
     * 
     */
    @Export(name="executionControls", type=RemediationConfigurationExecutionControls.class, parameters={})
    private Output</* @Nullable */ RemediationConfigurationExecutionControls> executionControls;

    /**
     * @return Configuration block for execution controls. See below.
     * 
     */
    public Output</* @Nullable */ RemediationConfigurationExecutionControls> getExecutionControls() {
        return this.executionControls;
    }
    /**
     * Maximum number of failed attempts for auto-remediation. If you do not select a number, the default is 5.
     * 
     */
    @Export(name="maximumAutomaticAttempts", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> maximumAutomaticAttempts;

    /**
     * @return Maximum number of failed attempts for auto-remediation. If you do not select a number, the default is 5.
     * 
     */
    public Output</* @Nullable */ Integer> getMaximumAutomaticAttempts() {
        return this.maximumAutomaticAttempts;
    }
    /**
     * Can be specified multiple times for each parameter. Each parameter block supports arguments below.
     * 
     */
    @Export(name="parameters", type=List.class, parameters={RemediationConfigurationParameter.class})
    private Output</* @Nullable */ List<RemediationConfigurationParameter>> parameters;

    /**
     * @return Can be specified multiple times for each parameter. Each parameter block supports arguments below.
     * 
     */
    public Output</* @Nullable */ List<RemediationConfigurationParameter>> getParameters() {
        return this.parameters;
    }
    /**
     * Type of resource.
     * 
     */
    @Export(name="resourceType", type=String.class, parameters={})
    private Output</* @Nullable */ String> resourceType;

    /**
     * @return Type of resource.
     * 
     */
    public Output</* @Nullable */ String> getPropResourceType() {
        return this.resourceType;
    }
    /**
     * Maximum time in seconds that AWS Config runs auto-remediation. If you do not select a number, the default is 60 seconds.
     * 
     */
    @Export(name="retryAttemptSeconds", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> retryAttemptSeconds;

    /**
     * @return Maximum time in seconds that AWS Config runs auto-remediation. If you do not select a number, the default is 60 seconds.
     * 
     */
    public Output</* @Nullable */ Integer> getRetryAttemptSeconds() {
        return this.retryAttemptSeconds;
    }
    /**
     * Target ID is the name of the public document.
     * 
     */
    @Export(name="targetId", type=String.class, parameters={})
    private Output<String> targetId;

    /**
     * @return Target ID is the name of the public document.
     * 
     */
    public Output<String> getTargetId() {
        return this.targetId;
    }
    /**
     * Type of the target. Target executes remediation. For example, SSM document.
     * 
     */
    @Export(name="targetType", type=String.class, parameters={})
    private Output<String> targetType;

    /**
     * @return Type of the target. Target executes remediation. For example, SSM document.
     * 
     */
    public Output<String> getTargetType() {
        return this.targetType;
    }
    /**
     * Version of the target. For example, version of the SSM document
     * 
     */
    @Export(name="targetVersion", type=String.class, parameters={})
    private Output</* @Nullable */ String> targetVersion;

    /**
     * @return Version of the target. For example, version of the SSM document
     * 
     */
    public Output</* @Nullable */ String> getTargetVersion() {
        return this.targetVersion;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public RemediationConfiguration(String name) {
        this(name, RemediationConfigurationArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public RemediationConfiguration(String name, RemediationConfigurationArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public RemediationConfiguration(String name, RemediationConfigurationArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:cfg/remediationConfiguration:RemediationConfiguration", name, args == null ? RemediationConfigurationArgs.Empty : args, makeResourceOptions(options, Output.empty()));
    }

    private RemediationConfiguration(String name, Output<String> id, @Nullable RemediationConfigurationState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:cfg/remediationConfiguration:RemediationConfiguration", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static RemediationConfiguration get(String name, Output<String> id, @Nullable RemediationConfigurationState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new RemediationConfiguration(name, id, state, options);
    }
}
