// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.lambda.inputs;

import io.pulumi.aws.lambda.inputs.AliasRoutingConfigGetArgs;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class AliasState extends io.pulumi.resources.ResourceArgs {

    public static final AliasState Empty = new AliasState();

    /**
     * The Amazon Resource Name (ARN) identifying your Lambda function alias.
     * 
     */
    @InputImport(name="arn")
      private final @Nullable Input<String> arn;

    public Input<String> getArn() {
        return this.arn == null ? Input.empty() : this.arn;
    }

    /**
     * Description of the alias.
     * 
     */
    @InputImport(name="description")
      private final @Nullable Input<String> description;

    public Input<String> getDescription() {
        return this.description == null ? Input.empty() : this.description;
    }

    /**
     * Lambda Function name or ARN.
     * 
     */
    @InputImport(name="functionName")
      private final @Nullable Input<String> functionName;

    public Input<String> getFunctionName() {
        return this.functionName == null ? Input.empty() : this.functionName;
    }

    /**
     * Lambda function version for which you are creating the alias. Pattern: `(\$LATEST|[0-9]+)`.
     * 
     */
    @InputImport(name="functionVersion")
      private final @Nullable Input<String> functionVersion;

    public Input<String> getFunctionVersion() {
        return this.functionVersion == null ? Input.empty() : this.functionVersion;
    }

    /**
     * The ARN to be used for invoking Lambda Function from API Gateway - to be used in `aws.apigateway.Integration`'s `uri`
     * 
     */
    @InputImport(name="invokeArn")
      private final @Nullable Input<String> invokeArn;

    public Input<String> getInvokeArn() {
        return this.invokeArn == null ? Input.empty() : this.invokeArn;
    }

    /**
     * Name for the alias you are creating. Pattern: `(?!^[0-9]+$)([a-zA-Z0-9-_]+)`
     * 
     */
    @InputImport(name="name")
      private final @Nullable Input<String> name;

    public Input<String> getName() {
        return this.name == null ? Input.empty() : this.name;
    }

    /**
     * The Lambda alias' route configuration settings. Fields documented below
     * 
     */
    @InputImport(name="routingConfig")
      private final @Nullable Input<AliasRoutingConfigGetArgs> routingConfig;

    public Input<AliasRoutingConfigGetArgs> getRoutingConfig() {
        return this.routingConfig == null ? Input.empty() : this.routingConfig;
    }

    public AliasState(
        @Nullable Input<String> arn,
        @Nullable Input<String> description,
        @Nullable Input<String> functionName,
        @Nullable Input<String> functionVersion,
        @Nullable Input<String> invokeArn,
        @Nullable Input<String> name,
        @Nullable Input<AliasRoutingConfigGetArgs> routingConfig) {
        this.arn = arn;
        this.description = description;
        this.functionName = functionName;
        this.functionVersion = functionVersion;
        this.invokeArn = invokeArn;
        this.name = name;
        this.routingConfig = routingConfig;
    }

    private AliasState() {
        this.arn = Input.empty();
        this.description = Input.empty();
        this.functionName = Input.empty();
        this.functionVersion = Input.empty();
        this.invokeArn = Input.empty();
        this.name = Input.empty();
        this.routingConfig = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AliasState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> arn;
        private @Nullable Input<String> description;
        private @Nullable Input<String> functionName;
        private @Nullable Input<String> functionVersion;
        private @Nullable Input<String> invokeArn;
        private @Nullable Input<String> name;
        private @Nullable Input<AliasRoutingConfigGetArgs> routingConfig;

        public Builder() {
    	      // Empty
        }

        public Builder(AliasState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.description = defaults.description;
    	      this.functionName = defaults.functionName;
    	      this.functionVersion = defaults.functionVersion;
    	      this.invokeArn = defaults.invokeArn;
    	      this.name = defaults.name;
    	      this.routingConfig = defaults.routingConfig;
        }

        public Builder arn(@Nullable Input<String> arn) {
            this.arn = arn;
            return this;
        }

        public Builder arn(@Nullable String arn) {
            this.arn = Input.ofNullable(arn);
            return this;
        }

        public Builder description(@Nullable Input<String> description) {
            this.description = description;
            return this;
        }

        public Builder description(@Nullable String description) {
            this.description = Input.ofNullable(description);
            return this;
        }

        public Builder functionName(@Nullable Input<String> functionName) {
            this.functionName = functionName;
            return this;
        }

        public Builder functionName(@Nullable String functionName) {
            this.functionName = Input.ofNullable(functionName);
            return this;
        }

        public Builder functionVersion(@Nullable Input<String> functionVersion) {
            this.functionVersion = functionVersion;
            return this;
        }

        public Builder functionVersion(@Nullable String functionVersion) {
            this.functionVersion = Input.ofNullable(functionVersion);
            return this;
        }

        public Builder invokeArn(@Nullable Input<String> invokeArn) {
            this.invokeArn = invokeArn;
            return this;
        }

        public Builder invokeArn(@Nullable String invokeArn) {
            this.invokeArn = Input.ofNullable(invokeArn);
            return this;
        }

        public Builder name(@Nullable Input<String> name) {
            this.name = name;
            return this;
        }

        public Builder name(@Nullable String name) {
            this.name = Input.ofNullable(name);
            return this;
        }

        public Builder routingConfig(@Nullable Input<AliasRoutingConfigGetArgs> routingConfig) {
            this.routingConfig = routingConfig;
            return this;
        }

        public Builder routingConfig(@Nullable AliasRoutingConfigGetArgs routingConfig) {
            this.routingConfig = Input.ofNullable(routingConfig);
            return this;
        }
        public AliasState build() {
            return new AliasState(arn, description, functionName, functionVersion, invokeArn, name, routingConfig);
        }
    }
}
