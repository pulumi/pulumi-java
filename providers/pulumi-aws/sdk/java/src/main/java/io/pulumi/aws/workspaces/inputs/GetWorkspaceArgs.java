// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.workspaces.inputs;

import io.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetWorkspaceArgs extends io.pulumi.resources.InvokeArgs {

    public static final GetWorkspaceArgs Empty = new GetWorkspaceArgs();

    /**
     * The ID of the directory for the WorkSpace. You have to specify `user_name` along with `directory_id`. You cannot combine this parameter with `workspace_id`.
     * 
     */
    @Import(name="directoryId")
      private final @Nullable String directoryId;

    public Optional<String> getDirectoryId() {
        return this.directoryId == null ? Optional.empty() : Optional.ofNullable(this.directoryId);
    }

    /**
     * The tags for the WorkSpace.
     * 
     */
    @Import(name="tags")
      private final @Nullable Map<String,String> tags;

    public Map<String,String> getTags() {
        return this.tags == null ? Map.of() : this.tags;
    }

    /**
     * The user name of the user for the WorkSpace. This user name must exist in the directory for the WorkSpace. You cannot combine this parameter with `workspace_id`.
     * 
     */
    @Import(name="userName")
      private final @Nullable String userName;

    public Optional<String> getUserName() {
        return this.userName == null ? Optional.empty() : Optional.ofNullable(this.userName);
    }

    /**
     * The ID of the WorkSpace. You cannot combine this parameter with `directory_id`.
     * 
     */
    @Import(name="workspaceId")
      private final @Nullable String workspaceId;

    public Optional<String> getWorkspaceId() {
        return this.workspaceId == null ? Optional.empty() : Optional.ofNullable(this.workspaceId);
    }

    public GetWorkspaceArgs(
        @Nullable String directoryId,
        @Nullable Map<String,String> tags,
        @Nullable String userName,
        @Nullable String workspaceId) {
        this.directoryId = directoryId;
        this.tags = tags;
        this.userName = userName;
        this.workspaceId = workspaceId;
    }

    private GetWorkspaceArgs() {
        this.directoryId = null;
        this.tags = Map.of();
        this.userName = null;
        this.workspaceId = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetWorkspaceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String directoryId;
        private @Nullable Map<String,String> tags;
        private @Nullable String userName;
        private @Nullable String workspaceId;

        public Builder() {
    	      // Empty
        }

        public Builder(GetWorkspaceArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.directoryId = defaults.directoryId;
    	      this.tags = defaults.tags;
    	      this.userName = defaults.userName;
    	      this.workspaceId = defaults.workspaceId;
        }

        public Builder directoryId(@Nullable String directoryId) {
            this.directoryId = directoryId;
            return this;
        }
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        public Builder userName(@Nullable String userName) {
            this.userName = userName;
            return this;
        }
        public Builder workspaceId(@Nullable String workspaceId) {
            this.workspaceId = workspaceId;
            return this;
        }        public GetWorkspaceArgs build() {
            return new GetWorkspaceArgs(directoryId, tags, userName, workspaceId);
        }
    }
}
