// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.appautoscaling;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class TargetArgs extends io.pulumi.resources.ResourceArgs {

    public static final TargetArgs Empty = new TargetArgs();

    /**
     * The max capacity of the scalable target.
     * 
     */
    @InputImport(name="maxCapacity", required=true)
      private final Input<Integer> maxCapacity;

    public Input<Integer> getMaxCapacity() {
        return this.maxCapacity;
    }

    /**
     * The min capacity of the scalable target.
     * 
     */
    @InputImport(name="minCapacity", required=true)
      private final Input<Integer> minCapacity;

    public Input<Integer> getMinCapacity() {
        return this.minCapacity;
    }

    /**
     * The resource type and unique identifier string for the resource associated with the scaling policy. Documentation can be found in the `ResourceId` parameter at: [AWS Application Auto Scaling API Reference](https://docs.aws.amazon.com/autoscaling/application/APIReference/API_RegisterScalableTarget.html#API_RegisterScalableTarget_RequestParameters)
     * 
     */
    @InputImport(name="resourceId", required=true)
      private final Input<String> resourceId;

    public Input<String> getResourceId() {
        return this.resourceId;
    }

    /**
     * The ARN of the IAM role that allows Application AutoScaling to modify your scalable target on your behalf. This defaults to an IAM Service-Linked Role for most services and custom IAM Roles are ignored by the API for those namespaces. See the [AWS Application Auto Scaling documentation](https://docs.aws.amazon.com/autoscaling/application/userguide/security_iam_service-with-iam.html#security_iam_service-with-iam-roles) for more information about how this service interacts with IAM.
     * 
     */
    @InputImport(name="roleArn")
      private final @Nullable Input<String> roleArn;

    public Input<String> getRoleArn() {
        return this.roleArn == null ? Input.empty() : this.roleArn;
    }

    /**
     * The scalable dimension of the scalable target. Documentation can be found in the `ScalableDimension` parameter at: [AWS Application Auto Scaling API Reference](https://docs.aws.amazon.com/autoscaling/application/APIReference/API_RegisterScalableTarget.html#API_RegisterScalableTarget_RequestParameters)
     * 
     */
    @InputImport(name="scalableDimension", required=true)
      private final Input<String> scalableDimension;

    public Input<String> getScalableDimension() {
        return this.scalableDimension;
    }

    /**
     * The AWS service namespace of the scalable target. Documentation can be found in the `ServiceNamespace` parameter at: [AWS Application Auto Scaling API Reference](https://docs.aws.amazon.com/autoscaling/application/APIReference/API_RegisterScalableTarget.html#API_RegisterScalableTarget_RequestParameters)
     * 
     */
    @InputImport(name="serviceNamespace", required=true)
      private final Input<String> serviceNamespace;

    public Input<String> getServiceNamespace() {
        return this.serviceNamespace;
    }

    public TargetArgs(
        Input<Integer> maxCapacity,
        Input<Integer> minCapacity,
        Input<String> resourceId,
        @Nullable Input<String> roleArn,
        Input<String> scalableDimension,
        Input<String> serviceNamespace) {
        this.maxCapacity = Objects.requireNonNull(maxCapacity, "expected parameter 'maxCapacity' to be non-null");
        this.minCapacity = Objects.requireNonNull(minCapacity, "expected parameter 'minCapacity' to be non-null");
        this.resourceId = Objects.requireNonNull(resourceId, "expected parameter 'resourceId' to be non-null");
        this.roleArn = roleArn;
        this.scalableDimension = Objects.requireNonNull(scalableDimension, "expected parameter 'scalableDimension' to be non-null");
        this.serviceNamespace = Objects.requireNonNull(serviceNamespace, "expected parameter 'serviceNamespace' to be non-null");
    }

    private TargetArgs() {
        this.maxCapacity = Input.empty();
        this.minCapacity = Input.empty();
        this.resourceId = Input.empty();
        this.roleArn = Input.empty();
        this.scalableDimension = Input.empty();
        this.serviceNamespace = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TargetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<Integer> maxCapacity;
        private Input<Integer> minCapacity;
        private Input<String> resourceId;
        private @Nullable Input<String> roleArn;
        private Input<String> scalableDimension;
        private Input<String> serviceNamespace;

        public Builder() {
    	      // Empty
        }

        public Builder(TargetArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.maxCapacity = defaults.maxCapacity;
    	      this.minCapacity = defaults.minCapacity;
    	      this.resourceId = defaults.resourceId;
    	      this.roleArn = defaults.roleArn;
    	      this.scalableDimension = defaults.scalableDimension;
    	      this.serviceNamespace = defaults.serviceNamespace;
        }

        public Builder maxCapacity(Input<Integer> maxCapacity) {
            this.maxCapacity = Objects.requireNonNull(maxCapacity);
            return this;
        }

        public Builder maxCapacity(Integer maxCapacity) {
            this.maxCapacity = Input.of(Objects.requireNonNull(maxCapacity));
            return this;
        }

        public Builder minCapacity(Input<Integer> minCapacity) {
            this.minCapacity = Objects.requireNonNull(minCapacity);
            return this;
        }

        public Builder minCapacity(Integer minCapacity) {
            this.minCapacity = Input.of(Objects.requireNonNull(minCapacity));
            return this;
        }

        public Builder resourceId(Input<String> resourceId) {
            this.resourceId = Objects.requireNonNull(resourceId);
            return this;
        }

        public Builder resourceId(String resourceId) {
            this.resourceId = Input.of(Objects.requireNonNull(resourceId));
            return this;
        }

        public Builder roleArn(@Nullable Input<String> roleArn) {
            this.roleArn = roleArn;
            return this;
        }

        public Builder roleArn(@Nullable String roleArn) {
            this.roleArn = Input.ofNullable(roleArn);
            return this;
        }

        public Builder scalableDimension(Input<String> scalableDimension) {
            this.scalableDimension = Objects.requireNonNull(scalableDimension);
            return this;
        }

        public Builder scalableDimension(String scalableDimension) {
            this.scalableDimension = Input.of(Objects.requireNonNull(scalableDimension));
            return this;
        }

        public Builder serviceNamespace(Input<String> serviceNamespace) {
            this.serviceNamespace = Objects.requireNonNull(serviceNamespace);
            return this;
        }

        public Builder serviceNamespace(String serviceNamespace) {
            this.serviceNamespace = Input.of(Objects.requireNonNull(serviceNamespace));
            return this;
        }
        public TargetArgs build() {
            return new TargetArgs(maxCapacity, minCapacity, resourceId, roleArn, scalableDimension, serviceNamespace);
        }
    }
}
