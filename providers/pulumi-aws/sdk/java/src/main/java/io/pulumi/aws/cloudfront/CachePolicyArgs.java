// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.cloudfront;

import io.pulumi.aws.cloudfront.inputs.CachePolicyParametersInCacheKeyAndForwardedToOriginArgs;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class CachePolicyArgs extends io.pulumi.resources.ResourceArgs {

    public static final CachePolicyArgs Empty = new CachePolicyArgs();

    /**
     * A comment to describe the cache policy.
     * 
     */
    @InputImport(name="comment")
      private final @Nullable Input<String> comment;

    public Input<String> getComment() {
        return this.comment == null ? Input.empty() : this.comment;
    }

    /**
     * The default amount of time, in seconds, that you want objects to stay in the CloudFront cache before CloudFront sends another request to the origin to see if the object has been updated.
     * 
     */
    @InputImport(name="defaultTtl")
      private final @Nullable Input<Integer> defaultTtl;

    public Input<Integer> getDefaultTtl() {
        return this.defaultTtl == null ? Input.empty() : this.defaultTtl;
    }

    /**
     * The maximum amount of time, in seconds, that objects stay in the CloudFront cache before CloudFront sends another request to the origin to see if the object has been updated.
     * 
     */
    @InputImport(name="maxTtl")
      private final @Nullable Input<Integer> maxTtl;

    public Input<Integer> getMaxTtl() {
        return this.maxTtl == null ? Input.empty() : this.maxTtl;
    }

    /**
     * The minimum amount of time, in seconds, that you want objects to stay in the CloudFront cache before CloudFront sends another request to the origin to see if the object has been updated.
     * 
     */
    @InputImport(name="minTtl")
      private final @Nullable Input<Integer> minTtl;

    public Input<Integer> getMinTtl() {
        return this.minTtl == null ? Input.empty() : this.minTtl;
    }

    /**
     * A unique name to identify the cache policy.
     * 
     */
    @InputImport(name="name")
      private final @Nullable Input<String> name;

    public Input<String> getName() {
        return this.name == null ? Input.empty() : this.name;
    }

    /**
     * The HTTP headers, cookies, and URL query strings to include in the cache key. See Parameters In Cache Key And Forwarded To Origin for more information.
     * 
     */
    @InputImport(name="parametersInCacheKeyAndForwardedToOrigin", required=true)
      private final Input<CachePolicyParametersInCacheKeyAndForwardedToOriginArgs> parametersInCacheKeyAndForwardedToOrigin;

    public Input<CachePolicyParametersInCacheKeyAndForwardedToOriginArgs> getParametersInCacheKeyAndForwardedToOrigin() {
        return this.parametersInCacheKeyAndForwardedToOrigin;
    }

    public CachePolicyArgs(
        @Nullable Input<String> comment,
        @Nullable Input<Integer> defaultTtl,
        @Nullable Input<Integer> maxTtl,
        @Nullable Input<Integer> minTtl,
        @Nullable Input<String> name,
        Input<CachePolicyParametersInCacheKeyAndForwardedToOriginArgs> parametersInCacheKeyAndForwardedToOrigin) {
        this.comment = comment;
        this.defaultTtl = defaultTtl;
        this.maxTtl = maxTtl;
        this.minTtl = minTtl;
        this.name = name;
        this.parametersInCacheKeyAndForwardedToOrigin = Objects.requireNonNull(parametersInCacheKeyAndForwardedToOrigin, "expected parameter 'parametersInCacheKeyAndForwardedToOrigin' to be non-null");
    }

    private CachePolicyArgs() {
        this.comment = Input.empty();
        this.defaultTtl = Input.empty();
        this.maxTtl = Input.empty();
        this.minTtl = Input.empty();
        this.name = Input.empty();
        this.parametersInCacheKeyAndForwardedToOrigin = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CachePolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> comment;
        private @Nullable Input<Integer> defaultTtl;
        private @Nullable Input<Integer> maxTtl;
        private @Nullable Input<Integer> minTtl;
        private @Nullable Input<String> name;
        private Input<CachePolicyParametersInCacheKeyAndForwardedToOriginArgs> parametersInCacheKeyAndForwardedToOrigin;

        public Builder() {
    	      // Empty
        }

        public Builder(CachePolicyArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.comment = defaults.comment;
    	      this.defaultTtl = defaults.defaultTtl;
    	      this.maxTtl = defaults.maxTtl;
    	      this.minTtl = defaults.minTtl;
    	      this.name = defaults.name;
    	      this.parametersInCacheKeyAndForwardedToOrigin = defaults.parametersInCacheKeyAndForwardedToOrigin;
        }

        public Builder setComment(@Nullable Input<String> comment) {
            this.comment = comment;
            return this;
        }

        public Builder setComment(@Nullable String comment) {
            this.comment = Input.ofNullable(comment);
            return this;
        }

        public Builder setDefaultTtl(@Nullable Input<Integer> defaultTtl) {
            this.defaultTtl = defaultTtl;
            return this;
        }

        public Builder setDefaultTtl(@Nullable Integer defaultTtl) {
            this.defaultTtl = Input.ofNullable(defaultTtl);
            return this;
        }

        public Builder setMaxTtl(@Nullable Input<Integer> maxTtl) {
            this.maxTtl = maxTtl;
            return this;
        }

        public Builder setMaxTtl(@Nullable Integer maxTtl) {
            this.maxTtl = Input.ofNullable(maxTtl);
            return this;
        }

        public Builder setMinTtl(@Nullable Input<Integer> minTtl) {
            this.minTtl = minTtl;
            return this;
        }

        public Builder setMinTtl(@Nullable Integer minTtl) {
            this.minTtl = Input.ofNullable(minTtl);
            return this;
        }

        public Builder setName(@Nullable Input<String> name) {
            this.name = name;
            return this;
        }

        public Builder setName(@Nullable String name) {
            this.name = Input.ofNullable(name);
            return this;
        }

        public Builder setParametersInCacheKeyAndForwardedToOrigin(Input<CachePolicyParametersInCacheKeyAndForwardedToOriginArgs> parametersInCacheKeyAndForwardedToOrigin) {
            this.parametersInCacheKeyAndForwardedToOrigin = Objects.requireNonNull(parametersInCacheKeyAndForwardedToOrigin);
            return this;
        }

        public Builder setParametersInCacheKeyAndForwardedToOrigin(CachePolicyParametersInCacheKeyAndForwardedToOriginArgs parametersInCacheKeyAndForwardedToOrigin) {
            this.parametersInCacheKeyAndForwardedToOrigin = Input.of(Objects.requireNonNull(parametersInCacheKeyAndForwardedToOrigin));
            return this;
        }
        public CachePolicyArgs build() {
            return new CachePolicyArgs(comment, defaultTtl, maxTtl, minTtl, name, parametersInCacheKeyAndForwardedToOrigin);
        }
    }
}
