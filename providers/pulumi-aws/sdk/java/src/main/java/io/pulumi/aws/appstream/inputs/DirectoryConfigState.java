// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.appstream.inputs;

import io.pulumi.aws.appstream.inputs.DirectoryConfigServiceAccountCredentialsGetArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class DirectoryConfigState extends io.pulumi.resources.ResourceArgs {

    public static final DirectoryConfigState Empty = new DirectoryConfigState();

    /**
     * Date and time, in UTC and extended RFC 3339 format, when the directory config was created.
     * 
     */
    @Import(name="createdTime")
      private final @Nullable Output<String> createdTime;

    public Output<String> createdTime() {
        return this.createdTime == null ? Codegen.empty() : this.createdTime;
    }

    /**
     * Fully qualified name of the directory.
     * 
     */
    @Import(name="directoryName")
      private final @Nullable Output<String> directoryName;

    public Output<String> directoryName() {
        return this.directoryName == null ? Codegen.empty() : this.directoryName;
    }

    /**
     * Distinguished names of the organizational units for computer accounts.
     * 
     */
    @Import(name="organizationalUnitDistinguishedNames")
      private final @Nullable Output<List<String>> organizationalUnitDistinguishedNames;

    public Output<List<String>> organizationalUnitDistinguishedNames() {
        return this.organizationalUnitDistinguishedNames == null ? Codegen.empty() : this.organizationalUnitDistinguishedNames;
    }

    /**
     * Configuration block for the name of the directory and organizational unit (OU) to use to join the directory config to a Microsoft Active Directory domain. See `service_account_credentials` below.
     * 
     */
    @Import(name="serviceAccountCredentials")
      private final @Nullable Output<DirectoryConfigServiceAccountCredentialsGetArgs> serviceAccountCredentials;

    public Output<DirectoryConfigServiceAccountCredentialsGetArgs> serviceAccountCredentials() {
        return this.serviceAccountCredentials == null ? Codegen.empty() : this.serviceAccountCredentials;
    }

    public DirectoryConfigState(
        @Nullable Output<String> createdTime,
        @Nullable Output<String> directoryName,
        @Nullable Output<List<String>> organizationalUnitDistinguishedNames,
        @Nullable Output<DirectoryConfigServiceAccountCredentialsGetArgs> serviceAccountCredentials) {
        this.createdTime = createdTime;
        this.directoryName = directoryName;
        this.organizationalUnitDistinguishedNames = organizationalUnitDistinguishedNames;
        this.serviceAccountCredentials = serviceAccountCredentials;
    }

    private DirectoryConfigState() {
        this.createdTime = Codegen.empty();
        this.directoryName = Codegen.empty();
        this.organizationalUnitDistinguishedNames = Codegen.empty();
        this.serviceAccountCredentials = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DirectoryConfigState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> createdTime;
        private @Nullable Output<String> directoryName;
        private @Nullable Output<List<String>> organizationalUnitDistinguishedNames;
        private @Nullable Output<DirectoryConfigServiceAccountCredentialsGetArgs> serviceAccountCredentials;

        public Builder() {
    	      // Empty
        }

        public Builder(DirectoryConfigState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.createdTime = defaults.createdTime;
    	      this.directoryName = defaults.directoryName;
    	      this.organizationalUnitDistinguishedNames = defaults.organizationalUnitDistinguishedNames;
    	      this.serviceAccountCredentials = defaults.serviceAccountCredentials;
        }

        public Builder createdTime(@Nullable Output<String> createdTime) {
            this.createdTime = createdTime;
            return this;
        }
        public Builder createdTime(@Nullable String createdTime) {
            this.createdTime = Codegen.ofNullable(createdTime);
            return this;
        }
        public Builder directoryName(@Nullable Output<String> directoryName) {
            this.directoryName = directoryName;
            return this;
        }
        public Builder directoryName(@Nullable String directoryName) {
            this.directoryName = Codegen.ofNullable(directoryName);
            return this;
        }
        public Builder organizationalUnitDistinguishedNames(@Nullable Output<List<String>> organizationalUnitDistinguishedNames) {
            this.organizationalUnitDistinguishedNames = organizationalUnitDistinguishedNames;
            return this;
        }
        public Builder organizationalUnitDistinguishedNames(@Nullable List<String> organizationalUnitDistinguishedNames) {
            this.organizationalUnitDistinguishedNames = Codegen.ofNullable(organizationalUnitDistinguishedNames);
            return this;
        }
        public Builder organizationalUnitDistinguishedNames(String... organizationalUnitDistinguishedNames) {
            return organizationalUnitDistinguishedNames(List.of(organizationalUnitDistinguishedNames));
        }
        public Builder serviceAccountCredentials(@Nullable Output<DirectoryConfigServiceAccountCredentialsGetArgs> serviceAccountCredentials) {
            this.serviceAccountCredentials = serviceAccountCredentials;
            return this;
        }
        public Builder serviceAccountCredentials(@Nullable DirectoryConfigServiceAccountCredentialsGetArgs serviceAccountCredentials) {
            this.serviceAccountCredentials = Codegen.ofNullable(serviceAccountCredentials);
            return this;
        }        public DirectoryConfigState build() {
            return new DirectoryConfigState(createdTime, directoryName, organizationalUnitDistinguishedNames, serviceAccountCredentials);
        }
    }
}
