// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.apigateway.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class UsagePlanKeyState extends io.pulumi.resources.ResourceArgs {

    public static final UsagePlanKeyState Empty = new UsagePlanKeyState();

    /**
     * The identifier of the API key resource.
     * 
     */
    @InputImport(name="keyId")
      private final @Nullable Input<String> keyId;

    public Input<String> getKeyId() {
        return this.keyId == null ? Input.empty() : this.keyId;
    }

    /**
     * The type of the API key resource. Currently, the valid key type is API_KEY.
     * 
     */
    @InputImport(name="keyType")
      private final @Nullable Input<String> keyType;

    public Input<String> getKeyType() {
        return this.keyType == null ? Input.empty() : this.keyType;
    }

    /**
     * The name of a usage plan key.
     * 
     */
    @InputImport(name="name")
      private final @Nullable Input<String> name;

    public Input<String> getName() {
        return this.name == null ? Input.empty() : this.name;
    }

    /**
     * The Id of the usage plan resource representing to associate the key to.
     * 
     */
    @InputImport(name="usagePlanId")
      private final @Nullable Input<String> usagePlanId;

    public Input<String> getUsagePlanId() {
        return this.usagePlanId == null ? Input.empty() : this.usagePlanId;
    }

    /**
     * The value of a usage plan key.
     * 
     */
    @InputImport(name="value")
      private final @Nullable Input<String> value;

    public Input<String> getValue() {
        return this.value == null ? Input.empty() : this.value;
    }

    public UsagePlanKeyState(
        @Nullable Input<String> keyId,
        @Nullable Input<String> keyType,
        @Nullable Input<String> name,
        @Nullable Input<String> usagePlanId,
        @Nullable Input<String> value) {
        this.keyId = keyId;
        this.keyType = keyType;
        this.name = name;
        this.usagePlanId = usagePlanId;
        this.value = value;
    }

    private UsagePlanKeyState() {
        this.keyId = Input.empty();
        this.keyType = Input.empty();
        this.name = Input.empty();
        this.usagePlanId = Input.empty();
        this.value = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(UsagePlanKeyState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> keyId;
        private @Nullable Input<String> keyType;
        private @Nullable Input<String> name;
        private @Nullable Input<String> usagePlanId;
        private @Nullable Input<String> value;

        public Builder() {
    	      // Empty
        }

        public Builder(UsagePlanKeyState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.keyId = defaults.keyId;
    	      this.keyType = defaults.keyType;
    	      this.name = defaults.name;
    	      this.usagePlanId = defaults.usagePlanId;
    	      this.value = defaults.value;
        }

        public Builder setKeyId(@Nullable Input<String> keyId) {
            this.keyId = keyId;
            return this;
        }

        public Builder setKeyId(@Nullable String keyId) {
            this.keyId = Input.ofNullable(keyId);
            return this;
        }

        public Builder setKeyType(@Nullable Input<String> keyType) {
            this.keyType = keyType;
            return this;
        }

        public Builder setKeyType(@Nullable String keyType) {
            this.keyType = Input.ofNullable(keyType);
            return this;
        }

        public Builder setName(@Nullable Input<String> name) {
            this.name = name;
            return this;
        }

        public Builder setName(@Nullable String name) {
            this.name = Input.ofNullable(name);
            return this;
        }

        public Builder setUsagePlanId(@Nullable Input<String> usagePlanId) {
            this.usagePlanId = usagePlanId;
            return this;
        }

        public Builder setUsagePlanId(@Nullable String usagePlanId) {
            this.usagePlanId = Input.ofNullable(usagePlanId);
            return this;
        }

        public Builder setValue(@Nullable Input<String> value) {
            this.value = value;
            return this;
        }

        public Builder setValue(@Nullable String value) {
            this.value = Input.ofNullable(value);
            return this;
        }
        public UsagePlanKeyState build() {
            return new UsagePlanKeyState(keyId, keyType, name, usagePlanId, value);
        }
    }
}
