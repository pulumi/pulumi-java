// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.appconfig.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class HostedConfigurationVersionState extends io.pulumi.resources.ResourceArgs {

    public static final HostedConfigurationVersionState Empty = new HostedConfigurationVersionState();

    /**
     * The application ID.
     * 
     */
    @Import(name="applicationId")
      private final @Nullable Output<String> applicationId;

    public Output<String> applicationId() {
        return this.applicationId == null ? Codegen.empty() : this.applicationId;
    }

    /**
     * The Amazon Resource Name (ARN) of the AppConfig  hosted configuration version.
     * 
     */
    @Import(name="arn")
      private final @Nullable Output<String> arn;

    public Output<String> arn() {
        return this.arn == null ? Codegen.empty() : this.arn;
    }

    /**
     * The configuration profile ID.
     * 
     */
    @Import(name="configurationProfileId")
      private final @Nullable Output<String> configurationProfileId;

    public Output<String> configurationProfileId() {
        return this.configurationProfileId == null ? Codegen.empty() : this.configurationProfileId;
    }

    /**
     * The content of the configuration or the configuration data.
     * 
     */
    @Import(name="content")
      private final @Nullable Output<String> content;

    public Output<String> content() {
        return this.content == null ? Codegen.empty() : this.content;
    }

    /**
     * A standard MIME type describing the format of the configuration content. For more information, see [Content-Type](https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.17).
     * 
     */
    @Import(name="contentType")
      private final @Nullable Output<String> contentType;

    public Output<String> contentType() {
        return this.contentType == null ? Codegen.empty() : this.contentType;
    }

    /**
     * A description of the configuration.
     * 
     */
    @Import(name="description")
      private final @Nullable Output<String> description;

    public Output<String> description() {
        return this.description == null ? Codegen.empty() : this.description;
    }

    /**
     * The version number of the hosted configuration.
     * 
     */
    @Import(name="versionNumber")
      private final @Nullable Output<Integer> versionNumber;

    public Output<Integer> versionNumber() {
        return this.versionNumber == null ? Codegen.empty() : this.versionNumber;
    }

    public HostedConfigurationVersionState(
        @Nullable Output<String> applicationId,
        @Nullable Output<String> arn,
        @Nullable Output<String> configurationProfileId,
        @Nullable Output<String> content,
        @Nullable Output<String> contentType,
        @Nullable Output<String> description,
        @Nullable Output<Integer> versionNumber) {
        this.applicationId = applicationId;
        this.arn = arn;
        this.configurationProfileId = configurationProfileId;
        this.content = content;
        this.contentType = contentType;
        this.description = description;
        this.versionNumber = versionNumber;
    }

    private HostedConfigurationVersionState() {
        this.applicationId = Codegen.empty();
        this.arn = Codegen.empty();
        this.configurationProfileId = Codegen.empty();
        this.content = Codegen.empty();
        this.contentType = Codegen.empty();
        this.description = Codegen.empty();
        this.versionNumber = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(HostedConfigurationVersionState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> applicationId;
        private @Nullable Output<String> arn;
        private @Nullable Output<String> configurationProfileId;
        private @Nullable Output<String> content;
        private @Nullable Output<String> contentType;
        private @Nullable Output<String> description;
        private @Nullable Output<Integer> versionNumber;

        public Builder() {
    	      // Empty
        }

        public Builder(HostedConfigurationVersionState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.applicationId = defaults.applicationId;
    	      this.arn = defaults.arn;
    	      this.configurationProfileId = defaults.configurationProfileId;
    	      this.content = defaults.content;
    	      this.contentType = defaults.contentType;
    	      this.description = defaults.description;
    	      this.versionNumber = defaults.versionNumber;
        }

        public Builder applicationId(@Nullable Output<String> applicationId) {
            this.applicationId = applicationId;
            return this;
        }
        public Builder applicationId(@Nullable String applicationId) {
            this.applicationId = Codegen.ofNullable(applicationId);
            return this;
        }
        public Builder arn(@Nullable Output<String> arn) {
            this.arn = arn;
            return this;
        }
        public Builder arn(@Nullable String arn) {
            this.arn = Codegen.ofNullable(arn);
            return this;
        }
        public Builder configurationProfileId(@Nullable Output<String> configurationProfileId) {
            this.configurationProfileId = configurationProfileId;
            return this;
        }
        public Builder configurationProfileId(@Nullable String configurationProfileId) {
            this.configurationProfileId = Codegen.ofNullable(configurationProfileId);
            return this;
        }
        public Builder content(@Nullable Output<String> content) {
            this.content = content;
            return this;
        }
        public Builder content(@Nullable String content) {
            this.content = Codegen.ofNullable(content);
            return this;
        }
        public Builder contentType(@Nullable Output<String> contentType) {
            this.contentType = contentType;
            return this;
        }
        public Builder contentType(@Nullable String contentType) {
            this.contentType = Codegen.ofNullable(contentType);
            return this;
        }
        public Builder description(@Nullable Output<String> description) {
            this.description = description;
            return this;
        }
        public Builder description(@Nullable String description) {
            this.description = Codegen.ofNullable(description);
            return this;
        }
        public Builder versionNumber(@Nullable Output<Integer> versionNumber) {
            this.versionNumber = versionNumber;
            return this;
        }
        public Builder versionNumber(@Nullable Integer versionNumber) {
            this.versionNumber = Codegen.ofNullable(versionNumber);
            return this;
        }        public HostedConfigurationVersionState build() {
            return new HostedConfigurationVersionState(applicationId, arn, configurationProfileId, content, contentType, description, versionNumber);
        }
    }
}
