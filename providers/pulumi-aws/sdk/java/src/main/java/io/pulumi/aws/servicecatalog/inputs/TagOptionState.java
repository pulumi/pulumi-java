// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.servicecatalog.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class TagOptionState extends io.pulumi.resources.ResourceArgs {

    public static final TagOptionState Empty = new TagOptionState();

    /**
     * Whether tag option is active. Default is `true`.
     * 
     */
    @InputImport(name="active")
      private final @Nullable Input<Boolean> active;

    public Input<Boolean> getActive() {
        return this.active == null ? Input.empty() : this.active;
    }

    /**
     * Tag option key.
     * 
     */
    @InputImport(name="key")
      private final @Nullable Input<String> key;

    public Input<String> getKey() {
        return this.key == null ? Input.empty() : this.key;
    }

    @InputImport(name="owner")
      private final @Nullable Input<String> owner;

    public Input<String> getOwner() {
        return this.owner == null ? Input.empty() : this.owner;
    }

    /**
     * Tag option value.
     * 
     */
    @InputImport(name="value")
      private final @Nullable Input<String> value;

    public Input<String> getValue() {
        return this.value == null ? Input.empty() : this.value;
    }

    public TagOptionState(
        @Nullable Input<Boolean> active,
        @Nullable Input<String> key,
        @Nullable Input<String> owner,
        @Nullable Input<String> value) {
        this.active = active;
        this.key = key;
        this.owner = owner;
        this.value = value;
    }

    private TagOptionState() {
        this.active = Input.empty();
        this.key = Input.empty();
        this.owner = Input.empty();
        this.value = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TagOptionState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<Boolean> active;
        private @Nullable Input<String> key;
        private @Nullable Input<String> owner;
        private @Nullable Input<String> value;

        public Builder() {
    	      // Empty
        }

        public Builder(TagOptionState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.active = defaults.active;
    	      this.key = defaults.key;
    	      this.owner = defaults.owner;
    	      this.value = defaults.value;
        }

        public Builder active(@Nullable Input<Boolean> active) {
            this.active = active;
            return this;
        }

        public Builder active(@Nullable Boolean active) {
            this.active = Input.ofNullable(active);
            return this;
        }

        public Builder key(@Nullable Input<String> key) {
            this.key = key;
            return this;
        }

        public Builder key(@Nullable String key) {
            this.key = Input.ofNullable(key);
            return this;
        }

        public Builder owner(@Nullable Input<String> owner) {
            this.owner = owner;
            return this;
        }

        public Builder owner(@Nullable String owner) {
            this.owner = Input.ofNullable(owner);
            return this;
        }

        public Builder value(@Nullable Input<String> value) {
            this.value = value;
            return this;
        }

        public Builder value(@Nullable String value) {
            this.value = Input.ofNullable(value);
            return this;
        }
        public TagOptionState build() {
            return new TagOptionState(active, key, owner, value);
        }
    }
}
