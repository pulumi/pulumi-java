// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.sagemaker;

import io.pulumi.aws.sagemaker.inputs.FlowDefinitionHumanLoopActivationConfigArgs;
import io.pulumi.aws.sagemaker.inputs.FlowDefinitionHumanLoopConfigArgs;
import io.pulumi.aws.sagemaker.inputs.FlowDefinitionHumanLoopRequestSourceArgs;
import io.pulumi.aws.sagemaker.inputs.FlowDefinitionOutputConfigArgs;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class FlowDefinitionArgs extends io.pulumi.resources.ResourceArgs {

    public static final FlowDefinitionArgs Empty = new FlowDefinitionArgs();

    /**
     * The name of your flow definition.
     * 
     */
    @InputImport(name="flowDefinitionName", required=true)
      private final Input<String> flowDefinitionName;

    public Input<String> getFlowDefinitionName() {
        return this.flowDefinitionName;
    }

    /**
     * An object containing information about the events that trigger a human workflow. See Human Loop Activation Config details below.
     * 
     */
    @InputImport(name="humanLoopActivationConfig")
      private final @Nullable Input<FlowDefinitionHumanLoopActivationConfigArgs> humanLoopActivationConfig;

    public Input<FlowDefinitionHumanLoopActivationConfigArgs> getHumanLoopActivationConfig() {
        return this.humanLoopActivationConfig == null ? Input.empty() : this.humanLoopActivationConfig;
    }

    /**
     * An object containing information about the tasks the human reviewers will perform. See Human Loop Config details below.
     * 
     */
    @InputImport(name="humanLoopConfig", required=true)
      private final Input<FlowDefinitionHumanLoopConfigArgs> humanLoopConfig;

    public Input<FlowDefinitionHumanLoopConfigArgs> getHumanLoopConfig() {
        return this.humanLoopConfig;
    }

    /**
     * Container for configuring the source of human task requests. Use to specify if Amazon Rekognition or Amazon Textract is used as an integration source. See Human Loop Request Source details below.
     * 
     */
    @InputImport(name="humanLoopRequestSource")
      private final @Nullable Input<FlowDefinitionHumanLoopRequestSourceArgs> humanLoopRequestSource;

    public Input<FlowDefinitionHumanLoopRequestSourceArgs> getHumanLoopRequestSource() {
        return this.humanLoopRequestSource == null ? Input.empty() : this.humanLoopRequestSource;
    }

    /**
     * An object containing information about where the human review results will be uploaded. See Output Config details below.
     * 
     */
    @InputImport(name="outputConfig", required=true)
      private final Input<FlowDefinitionOutputConfigArgs> outputConfig;

    public Input<FlowDefinitionOutputConfigArgs> getOutputConfig() {
        return this.outputConfig;
    }

    /**
     * The Amazon Resource Name (ARN) of the role needed to call other services on your behalf.
     * 
     */
    @InputImport(name="roleArn", required=true)
      private final Input<String> roleArn;

    public Input<String> getRoleArn() {
        return this.roleArn;
    }

    /**
     * A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @InputImport(name="tags")
      private final @Nullable Input<Map<String,String>> tags;

    public Input<Map<String,String>> getTags() {
        return this.tags == null ? Input.empty() : this.tags;
    }

    public FlowDefinitionArgs(
        Input<String> flowDefinitionName,
        @Nullable Input<FlowDefinitionHumanLoopActivationConfigArgs> humanLoopActivationConfig,
        Input<FlowDefinitionHumanLoopConfigArgs> humanLoopConfig,
        @Nullable Input<FlowDefinitionHumanLoopRequestSourceArgs> humanLoopRequestSource,
        Input<FlowDefinitionOutputConfigArgs> outputConfig,
        Input<String> roleArn,
        @Nullable Input<Map<String,String>> tags) {
        this.flowDefinitionName = Objects.requireNonNull(flowDefinitionName, "expected parameter 'flowDefinitionName' to be non-null");
        this.humanLoopActivationConfig = humanLoopActivationConfig;
        this.humanLoopConfig = Objects.requireNonNull(humanLoopConfig, "expected parameter 'humanLoopConfig' to be non-null");
        this.humanLoopRequestSource = humanLoopRequestSource;
        this.outputConfig = Objects.requireNonNull(outputConfig, "expected parameter 'outputConfig' to be non-null");
        this.roleArn = Objects.requireNonNull(roleArn, "expected parameter 'roleArn' to be non-null");
        this.tags = tags;
    }

    private FlowDefinitionArgs() {
        this.flowDefinitionName = Input.empty();
        this.humanLoopActivationConfig = Input.empty();
        this.humanLoopConfig = Input.empty();
        this.humanLoopRequestSource = Input.empty();
        this.outputConfig = Input.empty();
        this.roleArn = Input.empty();
        this.tags = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FlowDefinitionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<String> flowDefinitionName;
        private @Nullable Input<FlowDefinitionHumanLoopActivationConfigArgs> humanLoopActivationConfig;
        private Input<FlowDefinitionHumanLoopConfigArgs> humanLoopConfig;
        private @Nullable Input<FlowDefinitionHumanLoopRequestSourceArgs> humanLoopRequestSource;
        private Input<FlowDefinitionOutputConfigArgs> outputConfig;
        private Input<String> roleArn;
        private @Nullable Input<Map<String,String>> tags;

        public Builder() {
    	      // Empty
        }

        public Builder(FlowDefinitionArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.flowDefinitionName = defaults.flowDefinitionName;
    	      this.humanLoopActivationConfig = defaults.humanLoopActivationConfig;
    	      this.humanLoopConfig = defaults.humanLoopConfig;
    	      this.humanLoopRequestSource = defaults.humanLoopRequestSource;
    	      this.outputConfig = defaults.outputConfig;
    	      this.roleArn = defaults.roleArn;
    	      this.tags = defaults.tags;
        }

        public Builder setFlowDefinitionName(Input<String> flowDefinitionName) {
            this.flowDefinitionName = Objects.requireNonNull(flowDefinitionName);
            return this;
        }

        public Builder setFlowDefinitionName(String flowDefinitionName) {
            this.flowDefinitionName = Input.of(Objects.requireNonNull(flowDefinitionName));
            return this;
        }

        public Builder setHumanLoopActivationConfig(@Nullable Input<FlowDefinitionHumanLoopActivationConfigArgs> humanLoopActivationConfig) {
            this.humanLoopActivationConfig = humanLoopActivationConfig;
            return this;
        }

        public Builder setHumanLoopActivationConfig(@Nullable FlowDefinitionHumanLoopActivationConfigArgs humanLoopActivationConfig) {
            this.humanLoopActivationConfig = Input.ofNullable(humanLoopActivationConfig);
            return this;
        }

        public Builder setHumanLoopConfig(Input<FlowDefinitionHumanLoopConfigArgs> humanLoopConfig) {
            this.humanLoopConfig = Objects.requireNonNull(humanLoopConfig);
            return this;
        }

        public Builder setHumanLoopConfig(FlowDefinitionHumanLoopConfigArgs humanLoopConfig) {
            this.humanLoopConfig = Input.of(Objects.requireNonNull(humanLoopConfig));
            return this;
        }

        public Builder setHumanLoopRequestSource(@Nullable Input<FlowDefinitionHumanLoopRequestSourceArgs> humanLoopRequestSource) {
            this.humanLoopRequestSource = humanLoopRequestSource;
            return this;
        }

        public Builder setHumanLoopRequestSource(@Nullable FlowDefinitionHumanLoopRequestSourceArgs humanLoopRequestSource) {
            this.humanLoopRequestSource = Input.ofNullable(humanLoopRequestSource);
            return this;
        }

        public Builder setOutputConfig(Input<FlowDefinitionOutputConfigArgs> outputConfig) {
            this.outputConfig = Objects.requireNonNull(outputConfig);
            return this;
        }

        public Builder setOutputConfig(FlowDefinitionOutputConfigArgs outputConfig) {
            this.outputConfig = Input.of(Objects.requireNonNull(outputConfig));
            return this;
        }

        public Builder setRoleArn(Input<String> roleArn) {
            this.roleArn = Objects.requireNonNull(roleArn);
            return this;
        }

        public Builder setRoleArn(String roleArn) {
            this.roleArn = Input.of(Objects.requireNonNull(roleArn));
            return this;
        }

        public Builder setTags(@Nullable Input<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }

        public Builder setTags(@Nullable Map<String,String> tags) {
            this.tags = Input.ofNullable(tags);
            return this;
        }
        public FlowDefinitionArgs build() {
            return new FlowDefinitionArgs(flowDefinitionName, humanLoopActivationConfig, humanLoopConfig, humanLoopRequestSource, outputConfig, roleArn, tags);
        }
    }
}
