// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.elasticsearch.outputs;

import io.pulumi.aws.elasticsearch.outputs.GetDomainClusterConfigZoneAwarenessConfig;
import io.pulumi.core.annotations.OutputCustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class GetDomainClusterConfig {
    /**
     * Number of dedicated master nodes in the cluster.
     * 
     */
    private final Integer dedicatedMasterCount;
    /**
     * Indicates whether dedicated master nodes are enabled for the cluster.
     * 
     */
    private final Boolean dedicatedMasterEnabled;
    /**
     * Instance type of the dedicated master nodes in the cluster.
     * 
     */
    private final String dedicatedMasterType;
    /**
     * Number of instances in the cluster.
     * 
     */
    private final Integer instanceCount;
    /**
     * Instance type of data nodes in the cluster.
     * 
     */
    private final String instanceType;
    /**
     * The number of warm nodes in the cluster.
     * 
     */
    private final Integer warmCount;
    /**
     * Indicates warm storage is enabled.
     * 
     */
    private final @Nullable Boolean warmEnabled;
    /**
     * The instance type for the Elasticsearch cluster's warm nodes.
     * 
     */
    private final String warmType;
    /**
     * Configuration block containing zone awareness settings.
     * 
     */
    private final List<GetDomainClusterConfigZoneAwarenessConfig> zoneAwarenessConfigs;
    /**
     * Indicates whether zone awareness is enabled.
     * 
     */
    private final Boolean zoneAwarenessEnabled;

    @OutputCustomType.Constructor
    private GetDomainClusterConfig(
        @OutputCustomType.Parameter("dedicatedMasterCount") Integer dedicatedMasterCount,
        @OutputCustomType.Parameter("dedicatedMasterEnabled") Boolean dedicatedMasterEnabled,
        @OutputCustomType.Parameter("dedicatedMasterType") String dedicatedMasterType,
        @OutputCustomType.Parameter("instanceCount") Integer instanceCount,
        @OutputCustomType.Parameter("instanceType") String instanceType,
        @OutputCustomType.Parameter("warmCount") Integer warmCount,
        @OutputCustomType.Parameter("warmEnabled") @Nullable Boolean warmEnabled,
        @OutputCustomType.Parameter("warmType") String warmType,
        @OutputCustomType.Parameter("zoneAwarenessConfigs") List<GetDomainClusterConfigZoneAwarenessConfig> zoneAwarenessConfigs,
        @OutputCustomType.Parameter("zoneAwarenessEnabled") Boolean zoneAwarenessEnabled) {
        this.dedicatedMasterCount = dedicatedMasterCount;
        this.dedicatedMasterEnabled = dedicatedMasterEnabled;
        this.dedicatedMasterType = dedicatedMasterType;
        this.instanceCount = instanceCount;
        this.instanceType = instanceType;
        this.warmCount = warmCount;
        this.warmEnabled = warmEnabled;
        this.warmType = warmType;
        this.zoneAwarenessConfigs = zoneAwarenessConfigs;
        this.zoneAwarenessEnabled = zoneAwarenessEnabled;
    }

    /**
     * Number of dedicated master nodes in the cluster.
     * 
    */
    public Integer getDedicatedMasterCount() {
        return this.dedicatedMasterCount;
    }
    /**
     * Indicates whether dedicated master nodes are enabled for the cluster.
     * 
    */
    public Boolean getDedicatedMasterEnabled() {
        return this.dedicatedMasterEnabled;
    }
    /**
     * Instance type of the dedicated master nodes in the cluster.
     * 
    */
    public String getDedicatedMasterType() {
        return this.dedicatedMasterType;
    }
    /**
     * Number of instances in the cluster.
     * 
    */
    public Integer getInstanceCount() {
        return this.instanceCount;
    }
    /**
     * Instance type of data nodes in the cluster.
     * 
    */
    public String getInstanceType() {
        return this.instanceType;
    }
    /**
     * The number of warm nodes in the cluster.
     * 
    */
    public Integer getWarmCount() {
        return this.warmCount;
    }
    /**
     * Indicates warm storage is enabled.
     * 
    */
    public Optional<Boolean> getWarmEnabled() {
        return Optional.ofNullable(this.warmEnabled);
    }
    /**
     * The instance type for the Elasticsearch cluster's warm nodes.
     * 
    */
    public String getWarmType() {
        return this.warmType;
    }
    /**
     * Configuration block containing zone awareness settings.
     * 
    */
    public List<GetDomainClusterConfigZoneAwarenessConfig> getZoneAwarenessConfigs() {
        return this.zoneAwarenessConfigs;
    }
    /**
     * Indicates whether zone awareness is enabled.
     * 
    */
    public Boolean getZoneAwarenessEnabled() {
        return this.zoneAwarenessEnabled;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDomainClusterConfig defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Integer dedicatedMasterCount;
        private Boolean dedicatedMasterEnabled;
        private String dedicatedMasterType;
        private Integer instanceCount;
        private String instanceType;
        private Integer warmCount;
        private @Nullable Boolean warmEnabled;
        private String warmType;
        private List<GetDomainClusterConfigZoneAwarenessConfig> zoneAwarenessConfigs;
        private Boolean zoneAwarenessEnabled;

        public Builder() {
    	      // Empty
        }

        public Builder(GetDomainClusterConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dedicatedMasterCount = defaults.dedicatedMasterCount;
    	      this.dedicatedMasterEnabled = defaults.dedicatedMasterEnabled;
    	      this.dedicatedMasterType = defaults.dedicatedMasterType;
    	      this.instanceCount = defaults.instanceCount;
    	      this.instanceType = defaults.instanceType;
    	      this.warmCount = defaults.warmCount;
    	      this.warmEnabled = defaults.warmEnabled;
    	      this.warmType = defaults.warmType;
    	      this.zoneAwarenessConfigs = defaults.zoneAwarenessConfigs;
    	      this.zoneAwarenessEnabled = defaults.zoneAwarenessEnabled;
        }

        public Builder setDedicatedMasterCount(Integer dedicatedMasterCount) {
            this.dedicatedMasterCount = Objects.requireNonNull(dedicatedMasterCount);
            return this;
        }

        public Builder setDedicatedMasterEnabled(Boolean dedicatedMasterEnabled) {
            this.dedicatedMasterEnabled = Objects.requireNonNull(dedicatedMasterEnabled);
            return this;
        }

        public Builder setDedicatedMasterType(String dedicatedMasterType) {
            this.dedicatedMasterType = Objects.requireNonNull(dedicatedMasterType);
            return this;
        }

        public Builder setInstanceCount(Integer instanceCount) {
            this.instanceCount = Objects.requireNonNull(instanceCount);
            return this;
        }

        public Builder setInstanceType(String instanceType) {
            this.instanceType = Objects.requireNonNull(instanceType);
            return this;
        }

        public Builder setWarmCount(Integer warmCount) {
            this.warmCount = Objects.requireNonNull(warmCount);
            return this;
        }

        public Builder setWarmEnabled(@Nullable Boolean warmEnabled) {
            this.warmEnabled = warmEnabled;
            return this;
        }

        public Builder setWarmType(String warmType) {
            this.warmType = Objects.requireNonNull(warmType);
            return this;
        }

        public Builder setZoneAwarenessConfigs(List<GetDomainClusterConfigZoneAwarenessConfig> zoneAwarenessConfigs) {
            this.zoneAwarenessConfigs = Objects.requireNonNull(zoneAwarenessConfigs);
            return this;
        }

        public Builder setZoneAwarenessEnabled(Boolean zoneAwarenessEnabled) {
            this.zoneAwarenessEnabled = Objects.requireNonNull(zoneAwarenessEnabled);
            return this;
        }
        public GetDomainClusterConfig build() {
            return new GetDomainClusterConfig(dedicatedMasterCount, dedicatedMasterEnabled, dedicatedMasterType, instanceCount, instanceType, warmCount, warmEnabled, warmType, zoneAwarenessConfigs, zoneAwarenessEnabled);
        }
    }
}
