// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.sagemaker.outputs;

import io.pulumi.core.annotations.OutputCustomType;
import java.lang.String;
import java.util.Objects;

@OutputCustomType
public final class WorkforceOidcConfig {
    /**
     * The OIDC IdP authorization endpoint used to configure your private workforce.
     * 
     */
    private final String authorizationEndpoint;
    /**
     * The OIDC IdP client ID used to configure your private workforce.
     * 
     */
    private final String clientId;
    /**
     * The OIDC IdP client secret used to configure your private workforce.
     * 
     */
    private final String clientSecret;
    /**
     * The OIDC IdP issuer used to configure your private workforce.
     * 
     */
    private final String issuer;
    /**
     * The OIDC IdP JSON Web Key Set (Jwks) URI used to configure your private workforce.
     * 
     */
    private final String jwksUri;
    /**
     * The OIDC IdP logout endpoint used to configure your private workforce.
     * 
     */
    private final String logoutEndpoint;
    /**
     * The OIDC IdP token endpoint used to configure your private workforce.
     * 
     */
    private final String tokenEndpoint;
    /**
     * The OIDC IdP user information endpoint used to configure your private workforce.
     * 
     */
    private final String userInfoEndpoint;

    @OutputCustomType.Constructor({"authorizationEndpoint","clientId","clientSecret","issuer","jwksUri","logoutEndpoint","tokenEndpoint","userInfoEndpoint"})
    private WorkforceOidcConfig(
        String authorizationEndpoint,
        String clientId,
        String clientSecret,
        String issuer,
        String jwksUri,
        String logoutEndpoint,
        String tokenEndpoint,
        String userInfoEndpoint) {
        this.authorizationEndpoint = authorizationEndpoint;
        this.clientId = clientId;
        this.clientSecret = clientSecret;
        this.issuer = issuer;
        this.jwksUri = jwksUri;
        this.logoutEndpoint = logoutEndpoint;
        this.tokenEndpoint = tokenEndpoint;
        this.userInfoEndpoint = userInfoEndpoint;
    }

    /**
     * The OIDC IdP authorization endpoint used to configure your private workforce.
     * 
    */
    public String getAuthorizationEndpoint() {
        return this.authorizationEndpoint;
    }
    /**
     * The OIDC IdP client ID used to configure your private workforce.
     * 
    */
    public String getClientId() {
        return this.clientId;
    }
    /**
     * The OIDC IdP client secret used to configure your private workforce.
     * 
    */
    public String getClientSecret() {
        return this.clientSecret;
    }
    /**
     * The OIDC IdP issuer used to configure your private workforce.
     * 
    */
    public String getIssuer() {
        return this.issuer;
    }
    /**
     * The OIDC IdP JSON Web Key Set (Jwks) URI used to configure your private workforce.
     * 
    */
    public String getJwksUri() {
        return this.jwksUri;
    }
    /**
     * The OIDC IdP logout endpoint used to configure your private workforce.
     * 
    */
    public String getLogoutEndpoint() {
        return this.logoutEndpoint;
    }
    /**
     * The OIDC IdP token endpoint used to configure your private workforce.
     * 
    */
    public String getTokenEndpoint() {
        return this.tokenEndpoint;
    }
    /**
     * The OIDC IdP user information endpoint used to configure your private workforce.
     * 
    */
    public String getUserInfoEndpoint() {
        return this.userInfoEndpoint;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(WorkforceOidcConfig defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String authorizationEndpoint;
        private String clientId;
        private String clientSecret;
        private String issuer;
        private String jwksUri;
        private String logoutEndpoint;
        private String tokenEndpoint;
        private String userInfoEndpoint;

        public Builder() {
    	      // Empty
        }

        public Builder(WorkforceOidcConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.authorizationEndpoint = defaults.authorizationEndpoint;
    	      this.clientId = defaults.clientId;
    	      this.clientSecret = defaults.clientSecret;
    	      this.issuer = defaults.issuer;
    	      this.jwksUri = defaults.jwksUri;
    	      this.logoutEndpoint = defaults.logoutEndpoint;
    	      this.tokenEndpoint = defaults.tokenEndpoint;
    	      this.userInfoEndpoint = defaults.userInfoEndpoint;
        }

        public Builder setAuthorizationEndpoint(String authorizationEndpoint) {
            this.authorizationEndpoint = Objects.requireNonNull(authorizationEndpoint);
            return this;
        }

        public Builder setClientId(String clientId) {
            this.clientId = Objects.requireNonNull(clientId);
            return this;
        }

        public Builder setClientSecret(String clientSecret) {
            this.clientSecret = Objects.requireNonNull(clientSecret);
            return this;
        }

        public Builder setIssuer(String issuer) {
            this.issuer = Objects.requireNonNull(issuer);
            return this;
        }

        public Builder setJwksUri(String jwksUri) {
            this.jwksUri = Objects.requireNonNull(jwksUri);
            return this;
        }

        public Builder setLogoutEndpoint(String logoutEndpoint) {
            this.logoutEndpoint = Objects.requireNonNull(logoutEndpoint);
            return this;
        }

        public Builder setTokenEndpoint(String tokenEndpoint) {
            this.tokenEndpoint = Objects.requireNonNull(tokenEndpoint);
            return this;
        }

        public Builder setUserInfoEndpoint(String userInfoEndpoint) {
            this.userInfoEndpoint = Objects.requireNonNull(userInfoEndpoint);
            return this;
        }
        public WorkforceOidcConfig build() {
            return new WorkforceOidcConfig(authorizationEndpoint, clientId, clientSecret, issuer, jwksUri, logoutEndpoint, tokenEndpoint, userInfoEndpoint);
        }
    }
}
