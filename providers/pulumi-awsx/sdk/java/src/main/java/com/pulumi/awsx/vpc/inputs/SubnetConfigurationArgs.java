// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsx.vpc.inputs;

import com.pulumi.awsx.vpc.enums.SubnetType;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;


/**
 * Configuration for a VPC subnet.
 * 
 */
public final class SubnetConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final SubnetConfigurationArgs Empty = new SubnetConfigurationArgs();

    /**
     * The bitmask for the subnet&#39;s CIDR block.
     * 
     */
    @Import(name="cidrMask", required=true)
    private Integer cidrMask;

    /**
     * @return The bitmask for the subnet&#39;s CIDR block.
     * 
     */
    public Integer cidrMask() {
        return this.cidrMask;
    }

    /**
     * The subnet&#39;s name. Will be templated upon creation.
     * 
     */
    @Import(name="name", required=true)
    private String name;

    /**
     * @return The subnet&#39;s name. Will be templated upon creation.
     * 
     */
    public String name() {
        return this.name;
    }

    /**
     * The type of subnet.
     * 
     */
    @Import(name="type", required=true)
    private SubnetType type;

    /**
     * @return The type of subnet.
     * 
     */
    public SubnetType type() {
        return this.type;
    }

    private SubnetConfigurationArgs() {}

    private SubnetConfigurationArgs(SubnetConfigurationArgs $) {
        this.cidrMask = $.cidrMask;
        this.name = $.name;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SubnetConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SubnetConfigurationArgs $;

        public Builder() {
            $ = new SubnetConfigurationArgs();
        }

        public Builder(SubnetConfigurationArgs defaults) {
            $ = new SubnetConfigurationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param cidrMask The bitmask for the subnet&#39;s CIDR block.
         * 
         * @return builder
         * 
         */
        public Builder cidrMask(Integer cidrMask) {
            $.cidrMask = cidrMask;
            return this;
        }

        /**
         * @param name The subnet&#39;s name. Will be templated upon creation.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            $.name = name;
            return this;
        }

        /**
         * @param type The type of subnet.
         * 
         * @return builder
         * 
         */
        public Builder type(SubnetType type) {
            $.type = type;
            return this;
        }

        public SubnetConfigurationArgs build() {
            $.cidrMask = Objects.requireNonNull($.cidrMask, "expected parameter 'cidrMask' to be non-null");
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            $.type = Objects.requireNonNull($.type, "expected parameter 'type' to be non-null");
            return $;
        }
    }

}
