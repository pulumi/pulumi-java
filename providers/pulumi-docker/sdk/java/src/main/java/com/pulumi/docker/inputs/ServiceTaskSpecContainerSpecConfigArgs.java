// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.docker.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ServiceTaskSpecContainerSpecConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final ServiceTaskSpecContainerSpecConfigArgs Empty = new ServiceTaskSpecContainerSpecConfigArgs();

    @Import(name="configId", required=true)
      private final Output<String> configId;

    public Output<String> configId() {
        return this.configId;
    }

    @Import(name="configName")
      private final @Nullable Output<String> configName;

    public Output<String> configName() {
        return this.configName == null ? Codegen.empty() : this.configName;
    }

    @Import(name="fileGid")
      private final @Nullable Output<String> fileGid;

    public Output<String> fileGid() {
        return this.fileGid == null ? Codegen.empty() : this.fileGid;
    }

    @Import(name="fileMode")
      private final @Nullable Output<Integer> fileMode;

    public Output<Integer> fileMode() {
        return this.fileMode == null ? Codegen.empty() : this.fileMode;
    }

    @Import(name="fileName", required=true)
      private final Output<String> fileName;

    public Output<String> fileName() {
        return this.fileName;
    }

    @Import(name="fileUid")
      private final @Nullable Output<String> fileUid;

    public Output<String> fileUid() {
        return this.fileUid == null ? Codegen.empty() : this.fileUid;
    }

    public ServiceTaskSpecContainerSpecConfigArgs(
        Output<String> configId,
        @Nullable Output<String> configName,
        @Nullable Output<String> fileGid,
        @Nullable Output<Integer> fileMode,
        Output<String> fileName,
        @Nullable Output<String> fileUid) {
        this.configId = Objects.requireNonNull(configId, "expected parameter 'configId' to be non-null");
        this.configName = configName;
        this.fileGid = fileGid;
        this.fileMode = fileMode;
        this.fileName = Objects.requireNonNull(fileName, "expected parameter 'fileName' to be non-null");
        this.fileUid = fileUid;
    }

    private ServiceTaskSpecContainerSpecConfigArgs() {
        this.configId = Codegen.empty();
        this.configName = Codegen.empty();
        this.fileGid = Codegen.empty();
        this.fileMode = Codegen.empty();
        this.fileName = Codegen.empty();
        this.fileUid = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ServiceTaskSpecContainerSpecConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> configId;
        private @Nullable Output<String> configName;
        private @Nullable Output<String> fileGid;
        private @Nullable Output<Integer> fileMode;
        private Output<String> fileName;
        private @Nullable Output<String> fileUid;

        public Builder() {
    	      // Empty
        }

        public Builder(ServiceTaskSpecContainerSpecConfigArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.configId = defaults.configId;
    	      this.configName = defaults.configName;
    	      this.fileGid = defaults.fileGid;
    	      this.fileMode = defaults.fileMode;
    	      this.fileName = defaults.fileName;
    	      this.fileUid = defaults.fileUid;
        }

        public Builder configId(Output<String> configId) {
            this.configId = Objects.requireNonNull(configId);
            return this;
        }
        public Builder configId(String configId) {
            this.configId = Output.of(Objects.requireNonNull(configId));
            return this;
        }
        public Builder configName(@Nullable Output<String> configName) {
            this.configName = configName;
            return this;
        }
        public Builder configName(@Nullable String configName) {
            this.configName = Codegen.ofNullable(configName);
            return this;
        }
        public Builder fileGid(@Nullable Output<String> fileGid) {
            this.fileGid = fileGid;
            return this;
        }
        public Builder fileGid(@Nullable String fileGid) {
            this.fileGid = Codegen.ofNullable(fileGid);
            return this;
        }
        public Builder fileMode(@Nullable Output<Integer> fileMode) {
            this.fileMode = fileMode;
            return this;
        }
        public Builder fileMode(@Nullable Integer fileMode) {
            this.fileMode = Codegen.ofNullable(fileMode);
            return this;
        }
        public Builder fileName(Output<String> fileName) {
            this.fileName = Objects.requireNonNull(fileName);
            return this;
        }
        public Builder fileName(String fileName) {
            this.fileName = Output.of(Objects.requireNonNull(fileName));
            return this;
        }
        public Builder fileUid(@Nullable Output<String> fileUid) {
            this.fileUid = fileUid;
            return this;
        }
        public Builder fileUid(@Nullable String fileUid) {
            this.fileUid = Codegen.ofNullable(fileUid);
            return this;
        }        public ServiceTaskSpecContainerSpecConfigArgs build() {
            return new ServiceTaskSpecContainerSpecConfigArgs(configId, configName, fileGid, fileMode, fileName, fileUid);
        }
    }
}
