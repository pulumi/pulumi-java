// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.docker.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import com.pulumi.docker.inputs.ContainerMountBindOptionsGetArgs;
import com.pulumi.docker.inputs.ContainerMountTmpfsOptionsGetArgs;
import com.pulumi.docker.inputs.ContainerMountVolumeOptionsGetArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ContainerMountGetArgs extends com.pulumi.resources.ResourceArgs {

    public static final ContainerMountGetArgs Empty = new ContainerMountGetArgs();

    @Import(name="bindOptions")
      private final @Nullable Output<ContainerMountBindOptionsGetArgs> bindOptions;

    public Output<ContainerMountBindOptionsGetArgs> bindOptions() {
        return this.bindOptions == null ? Codegen.empty() : this.bindOptions;
    }

    @Import(name="readOnly")
      private final @Nullable Output<Boolean> readOnly;

    public Output<Boolean> readOnly() {
        return this.readOnly == null ? Codegen.empty() : this.readOnly;
    }

    @Import(name="source")
      private final @Nullable Output<String> source;

    public Output<String> source() {
        return this.source == null ? Codegen.empty() : this.source;
    }

    @Import(name="target", required=true)
      private final Output<String> target;

    public Output<String> target() {
        return this.target;
    }

    @Import(name="tmpfsOptions")
      private final @Nullable Output<ContainerMountTmpfsOptionsGetArgs> tmpfsOptions;

    public Output<ContainerMountTmpfsOptionsGetArgs> tmpfsOptions() {
        return this.tmpfsOptions == null ? Codegen.empty() : this.tmpfsOptions;
    }

    @Import(name="type", required=true)
      private final Output<String> type;

    public Output<String> type() {
        return this.type;
    }

    @Import(name="volumeOptions")
      private final @Nullable Output<ContainerMountVolumeOptionsGetArgs> volumeOptions;

    public Output<ContainerMountVolumeOptionsGetArgs> volumeOptions() {
        return this.volumeOptions == null ? Codegen.empty() : this.volumeOptions;
    }

    public ContainerMountGetArgs(
        @Nullable Output<ContainerMountBindOptionsGetArgs> bindOptions,
        @Nullable Output<Boolean> readOnly,
        @Nullable Output<String> source,
        Output<String> target,
        @Nullable Output<ContainerMountTmpfsOptionsGetArgs> tmpfsOptions,
        Output<String> type,
        @Nullable Output<ContainerMountVolumeOptionsGetArgs> volumeOptions) {
        this.bindOptions = bindOptions;
        this.readOnly = readOnly;
        this.source = source;
        this.target = Objects.requireNonNull(target, "expected parameter 'target' to be non-null");
        this.tmpfsOptions = tmpfsOptions;
        this.type = Objects.requireNonNull(type, "expected parameter 'type' to be non-null");
        this.volumeOptions = volumeOptions;
    }

    private ContainerMountGetArgs() {
        this.bindOptions = Codegen.empty();
        this.readOnly = Codegen.empty();
        this.source = Codegen.empty();
        this.target = Codegen.empty();
        this.tmpfsOptions = Codegen.empty();
        this.type = Codegen.empty();
        this.volumeOptions = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ContainerMountGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<ContainerMountBindOptionsGetArgs> bindOptions;
        private @Nullable Output<Boolean> readOnly;
        private @Nullable Output<String> source;
        private Output<String> target;
        private @Nullable Output<ContainerMountTmpfsOptionsGetArgs> tmpfsOptions;
        private Output<String> type;
        private @Nullable Output<ContainerMountVolumeOptionsGetArgs> volumeOptions;

        public Builder() {
    	      // Empty
        }

        public Builder(ContainerMountGetArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bindOptions = defaults.bindOptions;
    	      this.readOnly = defaults.readOnly;
    	      this.source = defaults.source;
    	      this.target = defaults.target;
    	      this.tmpfsOptions = defaults.tmpfsOptions;
    	      this.type = defaults.type;
    	      this.volumeOptions = defaults.volumeOptions;
        }

        public Builder bindOptions(@Nullable Output<ContainerMountBindOptionsGetArgs> bindOptions) {
            this.bindOptions = bindOptions;
            return this;
        }
        public Builder bindOptions(@Nullable ContainerMountBindOptionsGetArgs bindOptions) {
            this.bindOptions = Codegen.ofNullable(bindOptions);
            return this;
        }
        public Builder readOnly(@Nullable Output<Boolean> readOnly) {
            this.readOnly = readOnly;
            return this;
        }
        public Builder readOnly(@Nullable Boolean readOnly) {
            this.readOnly = Codegen.ofNullable(readOnly);
            return this;
        }
        public Builder source(@Nullable Output<String> source) {
            this.source = source;
            return this;
        }
        public Builder source(@Nullable String source) {
            this.source = Codegen.ofNullable(source);
            return this;
        }
        public Builder target(Output<String> target) {
            this.target = Objects.requireNonNull(target);
            return this;
        }
        public Builder target(String target) {
            this.target = Output.of(Objects.requireNonNull(target));
            return this;
        }
        public Builder tmpfsOptions(@Nullable Output<ContainerMountTmpfsOptionsGetArgs> tmpfsOptions) {
            this.tmpfsOptions = tmpfsOptions;
            return this;
        }
        public Builder tmpfsOptions(@Nullable ContainerMountTmpfsOptionsGetArgs tmpfsOptions) {
            this.tmpfsOptions = Codegen.ofNullable(tmpfsOptions);
            return this;
        }
        public Builder type(Output<String> type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public Builder type(String type) {
            this.type = Output.of(Objects.requireNonNull(type));
            return this;
        }
        public Builder volumeOptions(@Nullable Output<ContainerMountVolumeOptionsGetArgs> volumeOptions) {
            this.volumeOptions = volumeOptions;
            return this;
        }
        public Builder volumeOptions(@Nullable ContainerMountVolumeOptionsGetArgs volumeOptions) {
            this.volumeOptions = Codegen.ofNullable(volumeOptions);
            return this;
        }        public ContainerMountGetArgs build() {
            return new ContainerMountGetArgs(bindOptions, readOnly, source, target, tmpfsOptions, type, volumeOptions);
        }
    }
}
