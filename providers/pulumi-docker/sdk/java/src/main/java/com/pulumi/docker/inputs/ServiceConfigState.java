// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.docker.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ServiceConfigState extends com.pulumi.resources.ResourceArgs {

    public static final ServiceConfigState Empty = new ServiceConfigState();

    /**
     * Base64-url-safe-encoded config data
     * 
     */
    @Import(name="data")
    private @Nullable Output<String> data;

    public Optional<Output<String>> data() {
        return Optional.ofNullable(this.data);
    }

    /**
     * User-defined name of the config
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    private ServiceConfigState() {}

    private ServiceConfigState(ServiceConfigState $) {
        this.data = $.data;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServiceConfigState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServiceConfigState $;

        public Builder() {
            $ = new ServiceConfigState();
        }

        public Builder(ServiceConfigState defaults) {
            $ = new ServiceConfigState(Objects.requireNonNull(defaults));
        }

        public Builder data(@Nullable Output<String> data) {
            $.data = data;
            return this;
        }

        public Builder data(String data) {
            return data(Output.of(data));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public ServiceConfigState build() {
            return $;
        }
    }

}
