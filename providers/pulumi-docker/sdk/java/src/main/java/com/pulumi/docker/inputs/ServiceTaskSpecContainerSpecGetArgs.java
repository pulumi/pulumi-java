// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.docker.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import com.pulumi.docker.inputs.ServiceTaskSpecContainerSpecConfigGetArgs;
import com.pulumi.docker.inputs.ServiceTaskSpecContainerSpecDnsConfigGetArgs;
import com.pulumi.docker.inputs.ServiceTaskSpecContainerSpecHealthcheckGetArgs;
import com.pulumi.docker.inputs.ServiceTaskSpecContainerSpecHostGetArgs;
import com.pulumi.docker.inputs.ServiceTaskSpecContainerSpecLabelGetArgs;
import com.pulumi.docker.inputs.ServiceTaskSpecContainerSpecMountGetArgs;
import com.pulumi.docker.inputs.ServiceTaskSpecContainerSpecPrivilegesGetArgs;
import com.pulumi.docker.inputs.ServiceTaskSpecContainerSpecSecretGetArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ServiceTaskSpecContainerSpecGetArgs extends com.pulumi.resources.ResourceArgs {

    public static final ServiceTaskSpecContainerSpecGetArgs Empty = new ServiceTaskSpecContainerSpecGetArgs();

    @Import(name="args")
      private final @Nullable Output<List<String>> args;

    public Output<List<String>> args() {
        return this.args == null ? Codegen.empty() : this.args;
    }

    @Import(name="commands")
      private final @Nullable Output<List<String>> commands;

    public Output<List<String>> commands() {
        return this.commands == null ? Codegen.empty() : this.commands;
    }

    @Import(name="configs")
      private final @Nullable Output<List<ServiceTaskSpecContainerSpecConfigGetArgs>> configs;

    public Output<List<ServiceTaskSpecContainerSpecConfigGetArgs>> configs() {
        return this.configs == null ? Codegen.empty() : this.configs;
    }

    @Import(name="dir")
      private final @Nullable Output<String> dir;

    public Output<String> dir() {
        return this.dir == null ? Codegen.empty() : this.dir;
    }

    @Import(name="dnsConfig")
      private final @Nullable Output<ServiceTaskSpecContainerSpecDnsConfigGetArgs> dnsConfig;

    public Output<ServiceTaskSpecContainerSpecDnsConfigGetArgs> dnsConfig() {
        return this.dnsConfig == null ? Codegen.empty() : this.dnsConfig;
    }

    @Import(name="env")
      private final @Nullable Output<Map<String,String>> env;

    public Output<Map<String,String>> env() {
        return this.env == null ? Codegen.empty() : this.env;
    }

    @Import(name="groups")
      private final @Nullable Output<List<String>> groups;

    public Output<List<String>> groups() {
        return this.groups == null ? Codegen.empty() : this.groups;
    }

    @Import(name="healthcheck")
      private final @Nullable Output<ServiceTaskSpecContainerSpecHealthcheckGetArgs> healthcheck;

    public Output<ServiceTaskSpecContainerSpecHealthcheckGetArgs> healthcheck() {
        return this.healthcheck == null ? Codegen.empty() : this.healthcheck;
    }

    @Import(name="hostname")
      private final @Nullable Output<String> hostname;

    public Output<String> hostname() {
        return this.hostname == null ? Codegen.empty() : this.hostname;
    }

    @Import(name="hosts")
      private final @Nullable Output<List<ServiceTaskSpecContainerSpecHostGetArgs>> hosts;

    public Output<List<ServiceTaskSpecContainerSpecHostGetArgs>> hosts() {
        return this.hosts == null ? Codegen.empty() : this.hosts;
    }

    @Import(name="image", required=true)
      private final Output<String> image;

    public Output<String> image() {
        return this.image;
    }

    @Import(name="isolation")
      private final @Nullable Output<String> isolation;

    public Output<String> isolation() {
        return this.isolation == null ? Codegen.empty() : this.isolation;
    }

    @Import(name="labels")
      private final @Nullable Output<List<ServiceTaskSpecContainerSpecLabelGetArgs>> labels;

    public Output<List<ServiceTaskSpecContainerSpecLabelGetArgs>> labels() {
        return this.labels == null ? Codegen.empty() : this.labels;
    }

    @Import(name="mounts")
      private final @Nullable Output<List<ServiceTaskSpecContainerSpecMountGetArgs>> mounts;

    public Output<List<ServiceTaskSpecContainerSpecMountGetArgs>> mounts() {
        return this.mounts == null ? Codegen.empty() : this.mounts;
    }

    @Import(name="privileges")
      private final @Nullable Output<ServiceTaskSpecContainerSpecPrivilegesGetArgs> privileges;

    public Output<ServiceTaskSpecContainerSpecPrivilegesGetArgs> privileges() {
        return this.privileges == null ? Codegen.empty() : this.privileges;
    }

    @Import(name="readOnly")
      private final @Nullable Output<Boolean> readOnly;

    public Output<Boolean> readOnly() {
        return this.readOnly == null ? Codegen.empty() : this.readOnly;
    }

    @Import(name="secrets")
      private final @Nullable Output<List<ServiceTaskSpecContainerSpecSecretGetArgs>> secrets;

    public Output<List<ServiceTaskSpecContainerSpecSecretGetArgs>> secrets() {
        return this.secrets == null ? Codegen.empty() : this.secrets;
    }

    @Import(name="stopGracePeriod")
      private final @Nullable Output<String> stopGracePeriod;

    public Output<String> stopGracePeriod() {
        return this.stopGracePeriod == null ? Codegen.empty() : this.stopGracePeriod;
    }

    @Import(name="stopSignal")
      private final @Nullable Output<String> stopSignal;

    public Output<String> stopSignal() {
        return this.stopSignal == null ? Codegen.empty() : this.stopSignal;
    }

    @Import(name="user")
      private final @Nullable Output<String> user;

    public Output<String> user() {
        return this.user == null ? Codegen.empty() : this.user;
    }

    public ServiceTaskSpecContainerSpecGetArgs(
        @Nullable Output<List<String>> args,
        @Nullable Output<List<String>> commands,
        @Nullable Output<List<ServiceTaskSpecContainerSpecConfigGetArgs>> configs,
        @Nullable Output<String> dir,
        @Nullable Output<ServiceTaskSpecContainerSpecDnsConfigGetArgs> dnsConfig,
        @Nullable Output<Map<String,String>> env,
        @Nullable Output<List<String>> groups,
        @Nullable Output<ServiceTaskSpecContainerSpecHealthcheckGetArgs> healthcheck,
        @Nullable Output<String> hostname,
        @Nullable Output<List<ServiceTaskSpecContainerSpecHostGetArgs>> hosts,
        Output<String> image,
        @Nullable Output<String> isolation,
        @Nullable Output<List<ServiceTaskSpecContainerSpecLabelGetArgs>> labels,
        @Nullable Output<List<ServiceTaskSpecContainerSpecMountGetArgs>> mounts,
        @Nullable Output<ServiceTaskSpecContainerSpecPrivilegesGetArgs> privileges,
        @Nullable Output<Boolean> readOnly,
        @Nullable Output<List<ServiceTaskSpecContainerSpecSecretGetArgs>> secrets,
        @Nullable Output<String> stopGracePeriod,
        @Nullable Output<String> stopSignal,
        @Nullable Output<String> user) {
        this.args = args;
        this.commands = commands;
        this.configs = configs;
        this.dir = dir;
        this.dnsConfig = dnsConfig;
        this.env = env;
        this.groups = groups;
        this.healthcheck = healthcheck;
        this.hostname = hostname;
        this.hosts = hosts;
        this.image = Objects.requireNonNull(image, "expected parameter 'image' to be non-null");
        this.isolation = isolation;
        this.labels = labels;
        this.mounts = mounts;
        this.privileges = privileges;
        this.readOnly = readOnly;
        this.secrets = secrets;
        this.stopGracePeriod = stopGracePeriod;
        this.stopSignal = stopSignal;
        this.user = user;
    }

    private ServiceTaskSpecContainerSpecGetArgs() {
        this.args = Codegen.empty();
        this.commands = Codegen.empty();
        this.configs = Codegen.empty();
        this.dir = Codegen.empty();
        this.dnsConfig = Codegen.empty();
        this.env = Codegen.empty();
        this.groups = Codegen.empty();
        this.healthcheck = Codegen.empty();
        this.hostname = Codegen.empty();
        this.hosts = Codegen.empty();
        this.image = Codegen.empty();
        this.isolation = Codegen.empty();
        this.labels = Codegen.empty();
        this.mounts = Codegen.empty();
        this.privileges = Codegen.empty();
        this.readOnly = Codegen.empty();
        this.secrets = Codegen.empty();
        this.stopGracePeriod = Codegen.empty();
        this.stopSignal = Codegen.empty();
        this.user = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ServiceTaskSpecContainerSpecGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<List<String>> args;
        private @Nullable Output<List<String>> commands;
        private @Nullable Output<List<ServiceTaskSpecContainerSpecConfigGetArgs>> configs;
        private @Nullable Output<String> dir;
        private @Nullable Output<ServiceTaskSpecContainerSpecDnsConfigGetArgs> dnsConfig;
        private @Nullable Output<Map<String,String>> env;
        private @Nullable Output<List<String>> groups;
        private @Nullable Output<ServiceTaskSpecContainerSpecHealthcheckGetArgs> healthcheck;
        private @Nullable Output<String> hostname;
        private @Nullable Output<List<ServiceTaskSpecContainerSpecHostGetArgs>> hosts;
        private Output<String> image;
        private @Nullable Output<String> isolation;
        private @Nullable Output<List<ServiceTaskSpecContainerSpecLabelGetArgs>> labels;
        private @Nullable Output<List<ServiceTaskSpecContainerSpecMountGetArgs>> mounts;
        private @Nullable Output<ServiceTaskSpecContainerSpecPrivilegesGetArgs> privileges;
        private @Nullable Output<Boolean> readOnly;
        private @Nullable Output<List<ServiceTaskSpecContainerSpecSecretGetArgs>> secrets;
        private @Nullable Output<String> stopGracePeriod;
        private @Nullable Output<String> stopSignal;
        private @Nullable Output<String> user;

        public Builder() {
    	      // Empty
        }

        public Builder(ServiceTaskSpecContainerSpecGetArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.args = defaults.args;
    	      this.commands = defaults.commands;
    	      this.configs = defaults.configs;
    	      this.dir = defaults.dir;
    	      this.dnsConfig = defaults.dnsConfig;
    	      this.env = defaults.env;
    	      this.groups = defaults.groups;
    	      this.healthcheck = defaults.healthcheck;
    	      this.hostname = defaults.hostname;
    	      this.hosts = defaults.hosts;
    	      this.image = defaults.image;
    	      this.isolation = defaults.isolation;
    	      this.labels = defaults.labels;
    	      this.mounts = defaults.mounts;
    	      this.privileges = defaults.privileges;
    	      this.readOnly = defaults.readOnly;
    	      this.secrets = defaults.secrets;
    	      this.stopGracePeriod = defaults.stopGracePeriod;
    	      this.stopSignal = defaults.stopSignal;
    	      this.user = defaults.user;
        }

        public Builder args(@Nullable Output<List<String>> args) {
            this.args = args;
            return this;
        }
        public Builder args(@Nullable List<String> args) {
            this.args = Codegen.ofNullable(args);
            return this;
        }
        public Builder args(String... args) {
            return args(List.of(args));
        }
        public Builder commands(@Nullable Output<List<String>> commands) {
            this.commands = commands;
            return this;
        }
        public Builder commands(@Nullable List<String> commands) {
            this.commands = Codegen.ofNullable(commands);
            return this;
        }
        public Builder commands(String... commands) {
            return commands(List.of(commands));
        }
        public Builder configs(@Nullable Output<List<ServiceTaskSpecContainerSpecConfigGetArgs>> configs) {
            this.configs = configs;
            return this;
        }
        public Builder configs(@Nullable List<ServiceTaskSpecContainerSpecConfigGetArgs> configs) {
            this.configs = Codegen.ofNullable(configs);
            return this;
        }
        public Builder configs(ServiceTaskSpecContainerSpecConfigGetArgs... configs) {
            return configs(List.of(configs));
        }
        public Builder dir(@Nullable Output<String> dir) {
            this.dir = dir;
            return this;
        }
        public Builder dir(@Nullable String dir) {
            this.dir = Codegen.ofNullable(dir);
            return this;
        }
        public Builder dnsConfig(@Nullable Output<ServiceTaskSpecContainerSpecDnsConfigGetArgs> dnsConfig) {
            this.dnsConfig = dnsConfig;
            return this;
        }
        public Builder dnsConfig(@Nullable ServiceTaskSpecContainerSpecDnsConfigGetArgs dnsConfig) {
            this.dnsConfig = Codegen.ofNullable(dnsConfig);
            return this;
        }
        public Builder env(@Nullable Output<Map<String,String>> env) {
            this.env = env;
            return this;
        }
        public Builder env(@Nullable Map<String,String> env) {
            this.env = Codegen.ofNullable(env);
            return this;
        }
        public Builder groups(@Nullable Output<List<String>> groups) {
            this.groups = groups;
            return this;
        }
        public Builder groups(@Nullable List<String> groups) {
            this.groups = Codegen.ofNullable(groups);
            return this;
        }
        public Builder groups(String... groups) {
            return groups(List.of(groups));
        }
        public Builder healthcheck(@Nullable Output<ServiceTaskSpecContainerSpecHealthcheckGetArgs> healthcheck) {
            this.healthcheck = healthcheck;
            return this;
        }
        public Builder healthcheck(@Nullable ServiceTaskSpecContainerSpecHealthcheckGetArgs healthcheck) {
            this.healthcheck = Codegen.ofNullable(healthcheck);
            return this;
        }
        public Builder hostname(@Nullable Output<String> hostname) {
            this.hostname = hostname;
            return this;
        }
        public Builder hostname(@Nullable String hostname) {
            this.hostname = Codegen.ofNullable(hostname);
            return this;
        }
        public Builder hosts(@Nullable Output<List<ServiceTaskSpecContainerSpecHostGetArgs>> hosts) {
            this.hosts = hosts;
            return this;
        }
        public Builder hosts(@Nullable List<ServiceTaskSpecContainerSpecHostGetArgs> hosts) {
            this.hosts = Codegen.ofNullable(hosts);
            return this;
        }
        public Builder hosts(ServiceTaskSpecContainerSpecHostGetArgs... hosts) {
            return hosts(List.of(hosts));
        }
        public Builder image(Output<String> image) {
            this.image = Objects.requireNonNull(image);
            return this;
        }
        public Builder image(String image) {
            this.image = Output.of(Objects.requireNonNull(image));
            return this;
        }
        public Builder isolation(@Nullable Output<String> isolation) {
            this.isolation = isolation;
            return this;
        }
        public Builder isolation(@Nullable String isolation) {
            this.isolation = Codegen.ofNullable(isolation);
            return this;
        }
        public Builder labels(@Nullable Output<List<ServiceTaskSpecContainerSpecLabelGetArgs>> labels) {
            this.labels = labels;
            return this;
        }
        public Builder labels(@Nullable List<ServiceTaskSpecContainerSpecLabelGetArgs> labels) {
            this.labels = Codegen.ofNullable(labels);
            return this;
        }
        public Builder labels(ServiceTaskSpecContainerSpecLabelGetArgs... labels) {
            return labels(List.of(labels));
        }
        public Builder mounts(@Nullable Output<List<ServiceTaskSpecContainerSpecMountGetArgs>> mounts) {
            this.mounts = mounts;
            return this;
        }
        public Builder mounts(@Nullable List<ServiceTaskSpecContainerSpecMountGetArgs> mounts) {
            this.mounts = Codegen.ofNullable(mounts);
            return this;
        }
        public Builder mounts(ServiceTaskSpecContainerSpecMountGetArgs... mounts) {
            return mounts(List.of(mounts));
        }
        public Builder privileges(@Nullable Output<ServiceTaskSpecContainerSpecPrivilegesGetArgs> privileges) {
            this.privileges = privileges;
            return this;
        }
        public Builder privileges(@Nullable ServiceTaskSpecContainerSpecPrivilegesGetArgs privileges) {
            this.privileges = Codegen.ofNullable(privileges);
            return this;
        }
        public Builder readOnly(@Nullable Output<Boolean> readOnly) {
            this.readOnly = readOnly;
            return this;
        }
        public Builder readOnly(@Nullable Boolean readOnly) {
            this.readOnly = Codegen.ofNullable(readOnly);
            return this;
        }
        public Builder secrets(@Nullable Output<List<ServiceTaskSpecContainerSpecSecretGetArgs>> secrets) {
            this.secrets = secrets;
            return this;
        }
        public Builder secrets(@Nullable List<ServiceTaskSpecContainerSpecSecretGetArgs> secrets) {
            this.secrets = Codegen.ofNullable(secrets);
            return this;
        }
        public Builder secrets(ServiceTaskSpecContainerSpecSecretGetArgs... secrets) {
            return secrets(List.of(secrets));
        }
        public Builder stopGracePeriod(@Nullable Output<String> stopGracePeriod) {
            this.stopGracePeriod = stopGracePeriod;
            return this;
        }
        public Builder stopGracePeriod(@Nullable String stopGracePeriod) {
            this.stopGracePeriod = Codegen.ofNullable(stopGracePeriod);
            return this;
        }
        public Builder stopSignal(@Nullable Output<String> stopSignal) {
            this.stopSignal = stopSignal;
            return this;
        }
        public Builder stopSignal(@Nullable String stopSignal) {
            this.stopSignal = Codegen.ofNullable(stopSignal);
            return this;
        }
        public Builder user(@Nullable Output<String> user) {
            this.user = user;
            return this;
        }
        public Builder user(@Nullable String user) {
            this.user = Codegen.ofNullable(user);
            return this;
        }        public ServiceTaskSpecContainerSpecGetArgs build() {
            return new ServiceTaskSpecContainerSpecGetArgs(args, commands, configs, dir, dnsConfig, env, groups, healthcheck, hostname, hosts, image, isolation, labels, mounts, privileges, readOnly, secrets, stopGracePeriod, stopSignal, user);
        }
    }
}
