// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.docker.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.docker.inputs.ServiceAuthGetArgs;
import com.pulumi.docker.inputs.ServiceConvergeConfigGetArgs;
import com.pulumi.docker.inputs.ServiceEndpointSpecGetArgs;
import com.pulumi.docker.inputs.ServiceLabelGetArgs;
import com.pulumi.docker.inputs.ServiceModeGetArgs;
import com.pulumi.docker.inputs.ServiceRollbackConfigGetArgs;
import com.pulumi.docker.inputs.ServiceTaskSpecGetArgs;
import com.pulumi.docker.inputs.ServiceUpdateConfigGetArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ServiceState extends com.pulumi.resources.ResourceArgs {

    public static final ServiceState Empty = new ServiceState();

    /**
     * Configuration for the authentication for pulling the images of the service
     * 
     */
    @Import(name="auth")
    private @Nullable Output<ServiceAuthGetArgs> auth;

    public Optional<Output<ServiceAuthGetArgs>> auth() {
        return Optional.ofNullable(this.auth);
    }

    /**
     * A configuration to ensure that a service converges aka reaches the desired that of all task up and running
     * 
     */
    @Import(name="convergeConfig")
    private @Nullable Output<ServiceConvergeConfigGetArgs> convergeConfig;

    public Optional<Output<ServiceConvergeConfigGetArgs>> convergeConfig() {
        return Optional.ofNullable(this.convergeConfig);
    }

    /**
     * Properties that can be configured to access and load balance a service
     * 
     */
    @Import(name="endpointSpec")
    private @Nullable Output<ServiceEndpointSpecGetArgs> endpointSpec;

    public Optional<Output<ServiceEndpointSpecGetArgs>> endpointSpec() {
        return Optional.ofNullable(this.endpointSpec);
    }

    /**
     * User-defined key/value metadata
     * 
     */
    @Import(name="labels")
    private @Nullable Output<List<ServiceLabelGetArgs>> labels;

    public Optional<Output<List<ServiceLabelGetArgs>>> labels() {
        return Optional.ofNullable(this.labels);
    }

    /**
     * Scheduling mode for the service
     * 
     */
    @Import(name="mode")
    private @Nullable Output<ServiceModeGetArgs> mode;

    public Optional<Output<ServiceModeGetArgs>> mode() {
        return Optional.ofNullable(this.mode);
    }

    /**
     * Name of the service
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Specification for the rollback strategy of the service
     * 
     */
    @Import(name="rollbackConfig")
    private @Nullable Output<ServiceRollbackConfigGetArgs> rollbackConfig;

    public Optional<Output<ServiceRollbackConfigGetArgs>> rollbackConfig() {
        return Optional.ofNullable(this.rollbackConfig);
    }

    /**
     * User modifiable task configuration
     * 
     */
    @Import(name="taskSpec")
    private @Nullable Output<ServiceTaskSpecGetArgs> taskSpec;

    public Optional<Output<ServiceTaskSpecGetArgs>> taskSpec() {
        return Optional.ofNullable(this.taskSpec);
    }

    /**
     * Specification for the update strategy of the service
     * 
     */
    @Import(name="updateConfig")
    private @Nullable Output<ServiceUpdateConfigGetArgs> updateConfig;

    public Optional<Output<ServiceUpdateConfigGetArgs>> updateConfig() {
        return Optional.ofNullable(this.updateConfig);
    }

    private ServiceState() {}

    private ServiceState(ServiceState $) {
        this.auth = $.auth;
        this.convergeConfig = $.convergeConfig;
        this.endpointSpec = $.endpointSpec;
        this.labels = $.labels;
        this.mode = $.mode;
        this.name = $.name;
        this.rollbackConfig = $.rollbackConfig;
        this.taskSpec = $.taskSpec;
        this.updateConfig = $.updateConfig;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServiceState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServiceState $;

        public Builder() {
            $ = new ServiceState();
        }

        public Builder(ServiceState defaults) {
            $ = new ServiceState(Objects.requireNonNull(defaults));
        }

        public Builder auth(@Nullable Output<ServiceAuthGetArgs> auth) {
            $.auth = auth;
            return this;
        }

        public Builder auth(ServiceAuthGetArgs auth) {
            return auth(Output.of(auth));
        }

        public Builder convergeConfig(@Nullable Output<ServiceConvergeConfigGetArgs> convergeConfig) {
            $.convergeConfig = convergeConfig;
            return this;
        }

        public Builder convergeConfig(ServiceConvergeConfigGetArgs convergeConfig) {
            return convergeConfig(Output.of(convergeConfig));
        }

        public Builder endpointSpec(@Nullable Output<ServiceEndpointSpecGetArgs> endpointSpec) {
            $.endpointSpec = endpointSpec;
            return this;
        }

        public Builder endpointSpec(ServiceEndpointSpecGetArgs endpointSpec) {
            return endpointSpec(Output.of(endpointSpec));
        }

        public Builder labels(@Nullable Output<List<ServiceLabelGetArgs>> labels) {
            $.labels = labels;
            return this;
        }

        public Builder labels(List<ServiceLabelGetArgs> labels) {
            return labels(Output.of(labels));
        }

        public Builder labels(ServiceLabelGetArgs... labels) {
            return labels(List.of(labels));
        }

        public Builder mode(@Nullable Output<ServiceModeGetArgs> mode) {
            $.mode = mode;
            return this;
        }

        public Builder mode(ServiceModeGetArgs mode) {
            return mode(Output.of(mode));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder rollbackConfig(@Nullable Output<ServiceRollbackConfigGetArgs> rollbackConfig) {
            $.rollbackConfig = rollbackConfig;
            return this;
        }

        public Builder rollbackConfig(ServiceRollbackConfigGetArgs rollbackConfig) {
            return rollbackConfig(Output.of(rollbackConfig));
        }

        public Builder taskSpec(@Nullable Output<ServiceTaskSpecGetArgs> taskSpec) {
            $.taskSpec = taskSpec;
            return this;
        }

        public Builder taskSpec(ServiceTaskSpecGetArgs taskSpec) {
            return taskSpec(Output.of(taskSpec));
        }

        public Builder updateConfig(@Nullable Output<ServiceUpdateConfigGetArgs> updateConfig) {
            $.updateConfig = updateConfig;
            return this;
        }

        public Builder updateConfig(ServiceUpdateConfigGetArgs updateConfig) {
            return updateConfig(Output.of(updateConfig));
        }

        public ServiceState build() {
            return $;
        }
    }

}
