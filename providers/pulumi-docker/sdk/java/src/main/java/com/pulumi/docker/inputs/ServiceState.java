// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.docker.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import com.pulumi.docker.inputs.ServiceAuthGetArgs;
import com.pulumi.docker.inputs.ServiceConvergeConfigGetArgs;
import com.pulumi.docker.inputs.ServiceEndpointSpecGetArgs;
import com.pulumi.docker.inputs.ServiceLabelGetArgs;
import com.pulumi.docker.inputs.ServiceModeGetArgs;
import com.pulumi.docker.inputs.ServiceRollbackConfigGetArgs;
import com.pulumi.docker.inputs.ServiceTaskSpecGetArgs;
import com.pulumi.docker.inputs.ServiceUpdateConfigGetArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ServiceState extends com.pulumi.resources.ResourceArgs {

    public static final ServiceState Empty = new ServiceState();

    /**
     * Configuration for the authentication for pulling the images of the service
     * 
     */
    @Import(name="auth")
      private final @Nullable Output<ServiceAuthGetArgs> auth;

    public Output<ServiceAuthGetArgs> auth() {
        return this.auth == null ? Codegen.empty() : this.auth;
    }

    /**
     * A configuration to ensure that a service converges aka reaches the desired that of all task up and running
     * 
     */
    @Import(name="convergeConfig")
      private final @Nullable Output<ServiceConvergeConfigGetArgs> convergeConfig;

    public Output<ServiceConvergeConfigGetArgs> convergeConfig() {
        return this.convergeConfig == null ? Codegen.empty() : this.convergeConfig;
    }

    /**
     * Properties that can be configured to access and load balance a service
     * 
     */
    @Import(name="endpointSpec")
      private final @Nullable Output<ServiceEndpointSpecGetArgs> endpointSpec;

    public Output<ServiceEndpointSpecGetArgs> endpointSpec() {
        return this.endpointSpec == null ? Codegen.empty() : this.endpointSpec;
    }

    /**
     * User-defined key/value metadata
     * 
     */
    @Import(name="labels")
      private final @Nullable Output<List<ServiceLabelGetArgs>> labels;

    public Output<List<ServiceLabelGetArgs>> labels() {
        return this.labels == null ? Codegen.empty() : this.labels;
    }

    /**
     * Scheduling mode for the service
     * 
     */
    @Import(name="mode")
      private final @Nullable Output<ServiceModeGetArgs> mode;

    public Output<ServiceModeGetArgs> mode() {
        return this.mode == null ? Codegen.empty() : this.mode;
    }

    /**
     * Name of the service
     * 
     */
    @Import(name="name")
      private final @Nullable Output<String> name;

    public Output<String> name() {
        return this.name == null ? Codegen.empty() : this.name;
    }

    /**
     * Specification for the rollback strategy of the service
     * 
     */
    @Import(name="rollbackConfig")
      private final @Nullable Output<ServiceRollbackConfigGetArgs> rollbackConfig;

    public Output<ServiceRollbackConfigGetArgs> rollbackConfig() {
        return this.rollbackConfig == null ? Codegen.empty() : this.rollbackConfig;
    }

    /**
     * User modifiable task configuration
     * 
     */
    @Import(name="taskSpec")
      private final @Nullable Output<ServiceTaskSpecGetArgs> taskSpec;

    public Output<ServiceTaskSpecGetArgs> taskSpec() {
        return this.taskSpec == null ? Codegen.empty() : this.taskSpec;
    }

    /**
     * Specification for the update strategy of the service
     * 
     */
    @Import(name="updateConfig")
      private final @Nullable Output<ServiceUpdateConfigGetArgs> updateConfig;

    public Output<ServiceUpdateConfigGetArgs> updateConfig() {
        return this.updateConfig == null ? Codegen.empty() : this.updateConfig;
    }

    public ServiceState(
        @Nullable Output<ServiceAuthGetArgs> auth,
        @Nullable Output<ServiceConvergeConfigGetArgs> convergeConfig,
        @Nullable Output<ServiceEndpointSpecGetArgs> endpointSpec,
        @Nullable Output<List<ServiceLabelGetArgs>> labels,
        @Nullable Output<ServiceModeGetArgs> mode,
        @Nullable Output<String> name,
        @Nullable Output<ServiceRollbackConfigGetArgs> rollbackConfig,
        @Nullable Output<ServiceTaskSpecGetArgs> taskSpec,
        @Nullable Output<ServiceUpdateConfigGetArgs> updateConfig) {
        this.auth = auth;
        this.convergeConfig = convergeConfig;
        this.endpointSpec = endpointSpec;
        this.labels = labels;
        this.mode = mode;
        this.name = name;
        this.rollbackConfig = rollbackConfig;
        this.taskSpec = taskSpec;
        this.updateConfig = updateConfig;
    }

    private ServiceState() {
        this.auth = Codegen.empty();
        this.convergeConfig = Codegen.empty();
        this.endpointSpec = Codegen.empty();
        this.labels = Codegen.empty();
        this.mode = Codegen.empty();
        this.name = Codegen.empty();
        this.rollbackConfig = Codegen.empty();
        this.taskSpec = Codegen.empty();
        this.updateConfig = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ServiceState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<ServiceAuthGetArgs> auth;
        private @Nullable Output<ServiceConvergeConfigGetArgs> convergeConfig;
        private @Nullable Output<ServiceEndpointSpecGetArgs> endpointSpec;
        private @Nullable Output<List<ServiceLabelGetArgs>> labels;
        private @Nullable Output<ServiceModeGetArgs> mode;
        private @Nullable Output<String> name;
        private @Nullable Output<ServiceRollbackConfigGetArgs> rollbackConfig;
        private @Nullable Output<ServiceTaskSpecGetArgs> taskSpec;
        private @Nullable Output<ServiceUpdateConfigGetArgs> updateConfig;

        public Builder() {
    	      // Empty
        }

        public Builder(ServiceState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.auth = defaults.auth;
    	      this.convergeConfig = defaults.convergeConfig;
    	      this.endpointSpec = defaults.endpointSpec;
    	      this.labels = defaults.labels;
    	      this.mode = defaults.mode;
    	      this.name = defaults.name;
    	      this.rollbackConfig = defaults.rollbackConfig;
    	      this.taskSpec = defaults.taskSpec;
    	      this.updateConfig = defaults.updateConfig;
        }

        public Builder auth(@Nullable Output<ServiceAuthGetArgs> auth) {
            this.auth = auth;
            return this;
        }
        public Builder auth(@Nullable ServiceAuthGetArgs auth) {
            this.auth = Codegen.ofNullable(auth);
            return this;
        }
        public Builder convergeConfig(@Nullable Output<ServiceConvergeConfigGetArgs> convergeConfig) {
            this.convergeConfig = convergeConfig;
            return this;
        }
        public Builder convergeConfig(@Nullable ServiceConvergeConfigGetArgs convergeConfig) {
            this.convergeConfig = Codegen.ofNullable(convergeConfig);
            return this;
        }
        public Builder endpointSpec(@Nullable Output<ServiceEndpointSpecGetArgs> endpointSpec) {
            this.endpointSpec = endpointSpec;
            return this;
        }
        public Builder endpointSpec(@Nullable ServiceEndpointSpecGetArgs endpointSpec) {
            this.endpointSpec = Codegen.ofNullable(endpointSpec);
            return this;
        }
        public Builder labels(@Nullable Output<List<ServiceLabelGetArgs>> labels) {
            this.labels = labels;
            return this;
        }
        public Builder labels(@Nullable List<ServiceLabelGetArgs> labels) {
            this.labels = Codegen.ofNullable(labels);
            return this;
        }
        public Builder labels(ServiceLabelGetArgs... labels) {
            return labels(List.of(labels));
        }
        public Builder mode(@Nullable Output<ServiceModeGetArgs> mode) {
            this.mode = mode;
            return this;
        }
        public Builder mode(@Nullable ServiceModeGetArgs mode) {
            this.mode = Codegen.ofNullable(mode);
            return this;
        }
        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }
        public Builder name(@Nullable String name) {
            this.name = Codegen.ofNullable(name);
            return this;
        }
        public Builder rollbackConfig(@Nullable Output<ServiceRollbackConfigGetArgs> rollbackConfig) {
            this.rollbackConfig = rollbackConfig;
            return this;
        }
        public Builder rollbackConfig(@Nullable ServiceRollbackConfigGetArgs rollbackConfig) {
            this.rollbackConfig = Codegen.ofNullable(rollbackConfig);
            return this;
        }
        public Builder taskSpec(@Nullable Output<ServiceTaskSpecGetArgs> taskSpec) {
            this.taskSpec = taskSpec;
            return this;
        }
        public Builder taskSpec(@Nullable ServiceTaskSpecGetArgs taskSpec) {
            this.taskSpec = Codegen.ofNullable(taskSpec);
            return this;
        }
        public Builder updateConfig(@Nullable Output<ServiceUpdateConfigGetArgs> updateConfig) {
            this.updateConfig = updateConfig;
            return this;
        }
        public Builder updateConfig(@Nullable ServiceUpdateConfigGetArgs updateConfig) {
            this.updateConfig = Codegen.ofNullable(updateConfig);
            return this;
        }        public ServiceState build() {
            return new ServiceState(auth, convergeConfig, endpointSpec, labels, mode, name, rollbackConfig, taskSpec, updateConfig);
        }
    }
}
