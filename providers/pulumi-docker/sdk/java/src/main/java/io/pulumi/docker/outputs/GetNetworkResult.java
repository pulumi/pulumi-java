// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.docker.outputs;

import io.pulumi.core.annotations.OutputCustomType;
import io.pulumi.docker.outputs.GetNetworkIpamConfig;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@OutputCustomType
public final class GetNetworkResult {
    private final String driver;
    private final String id;
    private final Boolean internal;
    private final List<GetNetworkIpamConfig> ipamConfigs;
    private final String name;
    private final Map<String,Object> options;
    private final String scope;

    @OutputCustomType.Constructor
    private GetNetworkResult(
        @OutputCustomType.Parameter("driver") String driver,
        @OutputCustomType.Parameter("id") String id,
        @OutputCustomType.Parameter("internal") Boolean internal,
        @OutputCustomType.Parameter("ipamConfigs") List<GetNetworkIpamConfig> ipamConfigs,
        @OutputCustomType.Parameter("name") String name,
        @OutputCustomType.Parameter("options") Map<String,Object> options,
        @OutputCustomType.Parameter("scope") String scope) {
        this.driver = driver;
        this.id = id;
        this.internal = internal;
        this.ipamConfigs = ipamConfigs;
        this.name = name;
        this.options = options;
        this.scope = scope;
    }

    public String getDriver() {
        return this.driver;
    }
    public String getId() {
        return this.id;
    }
    public Boolean getInternal() {
        return this.internal;
    }
    public List<GetNetworkIpamConfig> getIpamConfigs() {
        return this.ipamConfigs;
    }
    public String getName() {
        return this.name;
    }
    public Map<String,Object> getOptions() {
        return this.options;
    }
    public String getScope() {
        return this.scope;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetNetworkResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String driver;
        private String id;
        private Boolean internal;
        private List<GetNetworkIpamConfig> ipamConfigs;
        private String name;
        private Map<String,Object> options;
        private String scope;

        public Builder() {
    	      // Empty
        }

        public Builder(GetNetworkResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.driver = defaults.driver;
    	      this.id = defaults.id;
    	      this.internal = defaults.internal;
    	      this.ipamConfigs = defaults.ipamConfigs;
    	      this.name = defaults.name;
    	      this.options = defaults.options;
    	      this.scope = defaults.scope;
        }

        public Builder driver(String driver) {
            this.driver = Objects.requireNonNull(driver);
            return this;
        }

        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }

        public Builder internal(Boolean internal) {
            this.internal = Objects.requireNonNull(internal);
            return this;
        }

        public Builder ipamConfigs(List<GetNetworkIpamConfig> ipamConfigs) {
            this.ipamConfigs = Objects.requireNonNull(ipamConfigs);
            return this;
        }

        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder options(Map<String,Object> options) {
            this.options = Objects.requireNonNull(options);
            return this;
        }

        public Builder scope(String scope) {
            this.scope = Objects.requireNonNull(scope);
            return this;
        }
        public GetNetworkResult build() {
            return new GetNetworkResult(driver, id, internal, ipamConfigs, name, options, scope);
        }
    }
}
