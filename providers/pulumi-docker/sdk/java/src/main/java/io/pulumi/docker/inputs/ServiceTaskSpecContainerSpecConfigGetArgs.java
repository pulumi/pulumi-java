// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.docker.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ServiceTaskSpecContainerSpecConfigGetArgs extends io.pulumi.resources.ResourceArgs {

    public static final ServiceTaskSpecContainerSpecConfigGetArgs Empty = new ServiceTaskSpecContainerSpecConfigGetArgs();

    @InputImport(name="configId", required=true)
      private final Input<String> configId;

    public Input<String> getConfigId() {
        return this.configId;
    }

    @InputImport(name="configName")
      private final @Nullable Input<String> configName;

    public Input<String> getConfigName() {
        return this.configName == null ? Input.empty() : this.configName;
    }

    @InputImport(name="fileGid")
      private final @Nullable Input<String> fileGid;

    public Input<String> getFileGid() {
        return this.fileGid == null ? Input.empty() : this.fileGid;
    }

    @InputImport(name="fileMode")
      private final @Nullable Input<Integer> fileMode;

    public Input<Integer> getFileMode() {
        return this.fileMode == null ? Input.empty() : this.fileMode;
    }

    @InputImport(name="fileName", required=true)
      private final Input<String> fileName;

    public Input<String> getFileName() {
        return this.fileName;
    }

    @InputImport(name="fileUid")
      private final @Nullable Input<String> fileUid;

    public Input<String> getFileUid() {
        return this.fileUid == null ? Input.empty() : this.fileUid;
    }

    public ServiceTaskSpecContainerSpecConfigGetArgs(
        Input<String> configId,
        @Nullable Input<String> configName,
        @Nullable Input<String> fileGid,
        @Nullable Input<Integer> fileMode,
        Input<String> fileName,
        @Nullable Input<String> fileUid) {
        this.configId = Objects.requireNonNull(configId, "expected parameter 'configId' to be non-null");
        this.configName = configName;
        this.fileGid = fileGid;
        this.fileMode = fileMode;
        this.fileName = Objects.requireNonNull(fileName, "expected parameter 'fileName' to be non-null");
        this.fileUid = fileUid;
    }

    private ServiceTaskSpecContainerSpecConfigGetArgs() {
        this.configId = Input.empty();
        this.configName = Input.empty();
        this.fileGid = Input.empty();
        this.fileMode = Input.empty();
        this.fileName = Input.empty();
        this.fileUid = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ServiceTaskSpecContainerSpecConfigGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<String> configId;
        private @Nullable Input<String> configName;
        private @Nullable Input<String> fileGid;
        private @Nullable Input<Integer> fileMode;
        private Input<String> fileName;
        private @Nullable Input<String> fileUid;

        public Builder() {
    	      // Empty
        }

        public Builder(ServiceTaskSpecContainerSpecConfigGetArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.configId = defaults.configId;
    	      this.configName = defaults.configName;
    	      this.fileGid = defaults.fileGid;
    	      this.fileMode = defaults.fileMode;
    	      this.fileName = defaults.fileName;
    	      this.fileUid = defaults.fileUid;
        }

        public Builder configId(Input<String> configId) {
            this.configId = Objects.requireNonNull(configId);
            return this;
        }

        public Builder configId(String configId) {
            this.configId = Input.of(Objects.requireNonNull(configId));
            return this;
        }

        public Builder configName(@Nullable Input<String> configName) {
            this.configName = configName;
            return this;
        }

        public Builder configName(@Nullable String configName) {
            this.configName = Input.ofNullable(configName);
            return this;
        }

        public Builder fileGid(@Nullable Input<String> fileGid) {
            this.fileGid = fileGid;
            return this;
        }

        public Builder fileGid(@Nullable String fileGid) {
            this.fileGid = Input.ofNullable(fileGid);
            return this;
        }

        public Builder fileMode(@Nullable Input<Integer> fileMode) {
            this.fileMode = fileMode;
            return this;
        }

        public Builder fileMode(@Nullable Integer fileMode) {
            this.fileMode = Input.ofNullable(fileMode);
            return this;
        }

        public Builder fileName(Input<String> fileName) {
            this.fileName = Objects.requireNonNull(fileName);
            return this;
        }

        public Builder fileName(String fileName) {
            this.fileName = Input.of(Objects.requireNonNull(fileName));
            return this;
        }

        public Builder fileUid(@Nullable Input<String> fileUid) {
            this.fileUid = fileUid;
            return this;
        }

        public Builder fileUid(@Nullable String fileUid) {
            this.fileUid = Input.ofNullable(fileUid);
            return this;
        }
        public ServiceTaskSpecContainerSpecConfigGetArgs build() {
            return new ServiceTaskSpecContainerSpecConfigGetArgs(configId, configName, fileGid, fileMode, fileName, fileUid);
        }
    }
}
