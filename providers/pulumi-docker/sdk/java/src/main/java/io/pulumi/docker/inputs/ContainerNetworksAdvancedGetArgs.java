// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.docker.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ContainerNetworksAdvancedGetArgs extends io.pulumi.resources.ResourceArgs {

    public static final ContainerNetworksAdvancedGetArgs Empty = new ContainerNetworksAdvancedGetArgs();

    @InputImport(name="aliases")
      private final @Nullable Input<List<String>> aliases;

    public Input<List<String>> getAliases() {
        return this.aliases == null ? Input.empty() : this.aliases;
    }

    @InputImport(name="ipv4Address")
      private final @Nullable Input<String> ipv4Address;

    public Input<String> getIpv4Address() {
        return this.ipv4Address == null ? Input.empty() : this.ipv4Address;
    }

    @InputImport(name="ipv6Address")
      private final @Nullable Input<String> ipv6Address;

    public Input<String> getIpv6Address() {
        return this.ipv6Address == null ? Input.empty() : this.ipv6Address;
    }

    @InputImport(name="name", required=true)
      private final Input<String> name;

    public Input<String> getName() {
        return this.name;
    }

    public ContainerNetworksAdvancedGetArgs(
        @Nullable Input<List<String>> aliases,
        @Nullable Input<String> ipv4Address,
        @Nullable Input<String> ipv6Address,
        Input<String> name) {
        this.aliases = aliases;
        this.ipv4Address = ipv4Address;
        this.ipv6Address = ipv6Address;
        this.name = Objects.requireNonNull(name, "expected parameter 'name' to be non-null");
    }

    private ContainerNetworksAdvancedGetArgs() {
        this.aliases = Input.empty();
        this.ipv4Address = Input.empty();
        this.ipv6Address = Input.empty();
        this.name = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ContainerNetworksAdvancedGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<List<String>> aliases;
        private @Nullable Input<String> ipv4Address;
        private @Nullable Input<String> ipv6Address;
        private Input<String> name;

        public Builder() {
    	      // Empty
        }

        public Builder(ContainerNetworksAdvancedGetArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.aliases = defaults.aliases;
    	      this.ipv4Address = defaults.ipv4Address;
    	      this.ipv6Address = defaults.ipv6Address;
    	      this.name = defaults.name;
        }

        public Builder aliases(@Nullable Input<List<String>> aliases) {
            this.aliases = aliases;
            return this;
        }

        public Builder aliases(@Nullable List<String> aliases) {
            this.aliases = Input.ofNullable(aliases);
            return this;
        }

        public Builder ipv4Address(@Nullable Input<String> ipv4Address) {
            this.ipv4Address = ipv4Address;
            return this;
        }

        public Builder ipv4Address(@Nullable String ipv4Address) {
            this.ipv4Address = Input.ofNullable(ipv4Address);
            return this;
        }

        public Builder ipv6Address(@Nullable Input<String> ipv6Address) {
            this.ipv6Address = ipv6Address;
            return this;
        }

        public Builder ipv6Address(@Nullable String ipv6Address) {
            this.ipv6Address = Input.ofNullable(ipv6Address);
            return this;
        }

        public Builder name(Input<String> name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder name(String name) {
            this.name = Input.of(Objects.requireNonNull(name));
            return this;
        }
        public ContainerNetworksAdvancedGetArgs build() {
            return new ContainerNetworksAdvancedGetArgs(aliases, ipv4Address, ipv6Address, name);
        }
    }
}
