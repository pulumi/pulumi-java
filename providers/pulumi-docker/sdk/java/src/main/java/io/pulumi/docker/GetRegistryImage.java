// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.docker;

import io.pulumi.core.TypeShape;
import io.pulumi.deployment.Deployment;
import io.pulumi.deployment.InvokeOptions;
import io.pulumi.docker.Utilities;
import io.pulumi.docker.inputs.GetRegistryImageArgs;
import io.pulumi.docker.outputs.GetRegistryImageResult;
import java.util.concurrent.CompletableFuture;
import javax.annotation.Nullable;

public class GetRegistryImage {
/**
 * Reads the image metadata from a Docker Registry. Used in conjunction with the docker.RemoteImage resource to keep an image up to date on the latest available version of the tag.
 * 
 * ## Example Usage
 * ## Schema
 * 
 * ### Required
 * 
 * - **name** (String) The name of the Docker image, including any tags. e.g. `alpine:latest`
 * 
 * ### Optional
 * 
 * - **id** (String) The ID of this resource.
 * - **insecure_skip_verify** (Boolean) If `true`, the verification of TLS certificates of the server/registry is disabled. Defaults to `false`
 * 
 * ### Read-Only
 * 
 * - **sha256_digest** (String) The content digest of the image, as stored in the registry.
 * 
 *
 * A collection of arguments for invoking getRegistryImage.
 * 
 *
 * A collection of values returned by getRegistryImage.
 * 
 */
    public static CompletableFuture<GetRegistryImageResult> invokeAsync(GetRegistryImageArgs args, @Nullable InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("docker:index/getRegistryImage:getRegistryImage", TypeShape.of(GetRegistryImageResult.class), args == null ? GetRegistryImageArgs.Empty : args, Utilities.withVersion(options));
    }
}
