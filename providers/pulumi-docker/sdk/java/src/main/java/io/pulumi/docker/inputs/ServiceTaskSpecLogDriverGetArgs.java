// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.docker.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ServiceTaskSpecLogDriverGetArgs extends io.pulumi.resources.ResourceArgs {

    public static final ServiceTaskSpecLogDriverGetArgs Empty = new ServiceTaskSpecLogDriverGetArgs();

    @Import(name="name", required=true)
      private final Output<String> name;

    public Output<String> name() {
        return this.name;
    }

    @Import(name="options")
      private final @Nullable Output<Map<String,String>> options;

    public Output<Map<String,String>> options() {
        return this.options == null ? Codegen.empty() : this.options;
    }

    public ServiceTaskSpecLogDriverGetArgs(
        Output<String> name,
        @Nullable Output<Map<String,String>> options) {
        this.name = Objects.requireNonNull(name, "expected parameter 'name' to be non-null");
        this.options = options;
    }

    private ServiceTaskSpecLogDriverGetArgs() {
        this.name = Codegen.empty();
        this.options = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ServiceTaskSpecLogDriverGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> name;
        private @Nullable Output<Map<String,String>> options;

        public Builder() {
    	      // Empty
        }

        public Builder(ServiceTaskSpecLogDriverGetArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.name = defaults.name;
    	      this.options = defaults.options;
        }

        public Builder name(Output<String> name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder name(String name) {
            this.name = Output.of(Objects.requireNonNull(name));
            return this;
        }
        public Builder options(@Nullable Output<Map<String,String>> options) {
            this.options = options;
            return this;
        }
        public Builder options(@Nullable Map<String,String> options) {
            this.options = Codegen.ofNullable(options);
            return this;
        }        public ServiceTaskSpecLogDriverGetArgs build() {
            return new ServiceTaskSpecLogDriverGetArgs(name, options);
        }
    }
}
