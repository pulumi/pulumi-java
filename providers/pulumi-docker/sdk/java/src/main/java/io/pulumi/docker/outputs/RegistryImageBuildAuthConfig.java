// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.docker.outputs;

import io.pulumi.core.annotations.OutputCustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class RegistryImageBuildAuthConfig {
    private final @Nullable String auth;
    private final @Nullable String email;
    private final String hostName;
    private final @Nullable String identityToken;
    private final @Nullable String password;
    private final @Nullable String registryToken;
    private final @Nullable String serverAddress;
    private final @Nullable String userName;

    @OutputCustomType.Constructor
    private RegistryImageBuildAuthConfig(
        @OutputCustomType.Parameter("auth") @Nullable String auth,
        @OutputCustomType.Parameter("email") @Nullable String email,
        @OutputCustomType.Parameter("hostName") String hostName,
        @OutputCustomType.Parameter("identityToken") @Nullable String identityToken,
        @OutputCustomType.Parameter("password") @Nullable String password,
        @OutputCustomType.Parameter("registryToken") @Nullable String registryToken,
        @OutputCustomType.Parameter("serverAddress") @Nullable String serverAddress,
        @OutputCustomType.Parameter("userName") @Nullable String userName) {
        this.auth = auth;
        this.email = email;
        this.hostName = hostName;
        this.identityToken = identityToken;
        this.password = password;
        this.registryToken = registryToken;
        this.serverAddress = serverAddress;
        this.userName = userName;
    }

    public Optional<String> getAuth() {
        return Optional.ofNullable(this.auth);
    }
    public Optional<String> getEmail() {
        return Optional.ofNullable(this.email);
    }
    public String getHostName() {
        return this.hostName;
    }
    public Optional<String> getIdentityToken() {
        return Optional.ofNullable(this.identityToken);
    }
    public Optional<String> getPassword() {
        return Optional.ofNullable(this.password);
    }
    public Optional<String> getRegistryToken() {
        return Optional.ofNullable(this.registryToken);
    }
    public Optional<String> getServerAddress() {
        return Optional.ofNullable(this.serverAddress);
    }
    public Optional<String> getUserName() {
        return Optional.ofNullable(this.userName);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RegistryImageBuildAuthConfig defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String auth;
        private @Nullable String email;
        private String hostName;
        private @Nullable String identityToken;
        private @Nullable String password;
        private @Nullable String registryToken;
        private @Nullable String serverAddress;
        private @Nullable String userName;

        public Builder() {
    	      // Empty
        }

        public Builder(RegistryImageBuildAuthConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.auth = defaults.auth;
    	      this.email = defaults.email;
    	      this.hostName = defaults.hostName;
    	      this.identityToken = defaults.identityToken;
    	      this.password = defaults.password;
    	      this.registryToken = defaults.registryToken;
    	      this.serverAddress = defaults.serverAddress;
    	      this.userName = defaults.userName;
        }

        public Builder setAuth(@Nullable String auth) {
            this.auth = auth;
            return this;
        }

        public Builder setEmail(@Nullable String email) {
            this.email = email;
            return this;
        }

        public Builder setHostName(String hostName) {
            this.hostName = Objects.requireNonNull(hostName);
            return this;
        }

        public Builder setIdentityToken(@Nullable String identityToken) {
            this.identityToken = identityToken;
            return this;
        }

        public Builder setPassword(@Nullable String password) {
            this.password = password;
            return this;
        }

        public Builder setRegistryToken(@Nullable String registryToken) {
            this.registryToken = registryToken;
            return this;
        }

        public Builder setServerAddress(@Nullable String serverAddress) {
            this.serverAddress = serverAddress;
            return this;
        }

        public Builder setUserName(@Nullable String userName) {
            this.userName = userName;
            return this;
        }
        public RegistryImageBuildAuthConfig build() {
            return new RegistryImageBuildAuthConfig(auth, email, hostName, identityToken, password, registryToken, serverAddress, userName);
        }
    }
}
