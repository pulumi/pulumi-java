// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.docker.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ContainerVolumeArgs extends io.pulumi.resources.ResourceArgs {

    public static final ContainerVolumeArgs Empty = new ContainerVolumeArgs();

    @Import(name="containerPath")
      private final @Nullable Output<String> containerPath;

    public Output<String> getContainerPath() {
        return this.containerPath == null ? Output.empty() : this.containerPath;
    }

    @Import(name="fromContainer")
      private final @Nullable Output<String> fromContainer;

    public Output<String> getFromContainer() {
        return this.fromContainer == null ? Output.empty() : this.fromContainer;
    }

    @Import(name="hostPath")
      private final @Nullable Output<String> hostPath;

    public Output<String> getHostPath() {
        return this.hostPath == null ? Output.empty() : this.hostPath;
    }

    @Import(name="readOnly")
      private final @Nullable Output<Boolean> readOnly;

    public Output<Boolean> getReadOnly() {
        return this.readOnly == null ? Output.empty() : this.readOnly;
    }

    @Import(name="volumeName")
      private final @Nullable Output<String> volumeName;

    public Output<String> getVolumeName() {
        return this.volumeName == null ? Output.empty() : this.volumeName;
    }

    public ContainerVolumeArgs(
        @Nullable Output<String> containerPath,
        @Nullable Output<String> fromContainer,
        @Nullable Output<String> hostPath,
        @Nullable Output<Boolean> readOnly,
        @Nullable Output<String> volumeName) {
        this.containerPath = containerPath;
        this.fromContainer = fromContainer;
        this.hostPath = hostPath;
        this.readOnly = readOnly;
        this.volumeName = volumeName;
    }

    private ContainerVolumeArgs() {
        this.containerPath = Output.empty();
        this.fromContainer = Output.empty();
        this.hostPath = Output.empty();
        this.readOnly = Output.empty();
        this.volumeName = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ContainerVolumeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> containerPath;
        private @Nullable Output<String> fromContainer;
        private @Nullable Output<String> hostPath;
        private @Nullable Output<Boolean> readOnly;
        private @Nullable Output<String> volumeName;

        public Builder() {
    	      // Empty
        }

        public Builder(ContainerVolumeArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.containerPath = defaults.containerPath;
    	      this.fromContainer = defaults.fromContainer;
    	      this.hostPath = defaults.hostPath;
    	      this.readOnly = defaults.readOnly;
    	      this.volumeName = defaults.volumeName;
        }

        public Builder containerPath(@Nullable Output<String> containerPath) {
            this.containerPath = containerPath;
            return this;
        }
        public Builder containerPath(@Nullable String containerPath) {
            this.containerPath = Output.ofNullable(containerPath);
            return this;
        }
        public Builder fromContainer(@Nullable Output<String> fromContainer) {
            this.fromContainer = fromContainer;
            return this;
        }
        public Builder fromContainer(@Nullable String fromContainer) {
            this.fromContainer = Output.ofNullable(fromContainer);
            return this;
        }
        public Builder hostPath(@Nullable Output<String> hostPath) {
            this.hostPath = hostPath;
            return this;
        }
        public Builder hostPath(@Nullable String hostPath) {
            this.hostPath = Output.ofNullable(hostPath);
            return this;
        }
        public Builder readOnly(@Nullable Output<Boolean> readOnly) {
            this.readOnly = readOnly;
            return this;
        }
        public Builder readOnly(@Nullable Boolean readOnly) {
            this.readOnly = Output.ofNullable(readOnly);
            return this;
        }
        public Builder volumeName(@Nullable Output<String> volumeName) {
            this.volumeName = volumeName;
            return this;
        }
        public Builder volumeName(@Nullable String volumeName) {
            this.volumeName = Output.ofNullable(volumeName);
            return this;
        }        public ContainerVolumeArgs build() {
            return new ContainerVolumeArgs(containerPath, fromContainer, hostPath, readOnly, volumeName);
        }
    }
}
