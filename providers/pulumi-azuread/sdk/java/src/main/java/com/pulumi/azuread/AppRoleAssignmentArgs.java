// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azuread;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;


public final class AppRoleAssignmentArgs extends com.pulumi.resources.ResourceArgs {

    public static final AppRoleAssignmentArgs Empty = new AppRoleAssignmentArgs();

    /**
     * The ID of the app role to be assigned. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="appRoleId", required=true)
      private final Output<String> appRoleId;

    public Output<String> appRoleId() {
        return this.appRoleId;
    }

    /**
     * The object ID of the user, group or service principal to be assigned this app role. Supported object types are Users, Groups or Service Principals. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="principalObjectId", required=true)
      private final Output<String> principalObjectId;

    public Output<String> principalObjectId() {
        return this.principalObjectId;
    }

    /**
     * The object ID of the service principal representing the resource. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="resourceObjectId", required=true)
      private final Output<String> resourceObjectId;

    public Output<String> resourceObjectId() {
        return this.resourceObjectId;
    }

    public AppRoleAssignmentArgs(
        Output<String> appRoleId,
        Output<String> principalObjectId,
        Output<String> resourceObjectId) {
        this.appRoleId = Objects.requireNonNull(appRoleId, "expected parameter 'appRoleId' to be non-null");
        this.principalObjectId = Objects.requireNonNull(principalObjectId, "expected parameter 'principalObjectId' to be non-null");
        this.resourceObjectId = Objects.requireNonNull(resourceObjectId, "expected parameter 'resourceObjectId' to be non-null");
    }

    private AppRoleAssignmentArgs() {
        this.appRoleId = Codegen.empty();
        this.principalObjectId = Codegen.empty();
        this.resourceObjectId = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AppRoleAssignmentArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> appRoleId;
        private Output<String> principalObjectId;
        private Output<String> resourceObjectId;

        public Builder() {
    	      // Empty
        }

        public Builder(AppRoleAssignmentArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.appRoleId = defaults.appRoleId;
    	      this.principalObjectId = defaults.principalObjectId;
    	      this.resourceObjectId = defaults.resourceObjectId;
        }

        public Builder appRoleId(Output<String> appRoleId) {
            this.appRoleId = Objects.requireNonNull(appRoleId);
            return this;
        }
        public Builder appRoleId(String appRoleId) {
            this.appRoleId = Output.of(Objects.requireNonNull(appRoleId));
            return this;
        }
        public Builder principalObjectId(Output<String> principalObjectId) {
            this.principalObjectId = Objects.requireNonNull(principalObjectId);
            return this;
        }
        public Builder principalObjectId(String principalObjectId) {
            this.principalObjectId = Output.of(Objects.requireNonNull(principalObjectId));
            return this;
        }
        public Builder resourceObjectId(Output<String> resourceObjectId) {
            this.resourceObjectId = Objects.requireNonNull(resourceObjectId);
            return this;
        }
        public Builder resourceObjectId(String resourceObjectId) {
            this.resourceObjectId = Output.of(Objects.requireNonNull(resourceObjectId));
            return this;
        }        public AppRoleAssignmentArgs build() {
            return new AppRoleAssignmentArgs(appRoleId, principalObjectId, resourceObjectId);
        }
    }
}
