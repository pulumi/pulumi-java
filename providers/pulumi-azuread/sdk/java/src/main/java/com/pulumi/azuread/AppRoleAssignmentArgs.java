// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azuread;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class AppRoleAssignmentArgs extends com.pulumi.resources.ResourceArgs {

    public static final AppRoleAssignmentArgs Empty = new AppRoleAssignmentArgs();

    /**
     * The ID of the app role to be assigned. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="appRoleId", required=true)
    private Output<String> appRoleId;

    /**
     * @return The ID of the app role to be assigned. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> appRoleId() {
        return this.appRoleId;
    }

    /**
     * The object ID of the user, group or service principal to be assigned this app role. Supported object types are Users, Groups or Service Principals. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="principalObjectId", required=true)
    private Output<String> principalObjectId;

    /**
     * @return The object ID of the user, group or service principal to be assigned this app role. Supported object types are Users, Groups or Service Principals. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> principalObjectId() {
        return this.principalObjectId;
    }

    /**
     * The object ID of the service principal representing the resource. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="resourceObjectId", required=true)
    private Output<String> resourceObjectId;

    /**
     * @return The object ID of the service principal representing the resource. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> resourceObjectId() {
        return this.resourceObjectId;
    }

    private AppRoleAssignmentArgs() {}

    private AppRoleAssignmentArgs(AppRoleAssignmentArgs $) {
        this.appRoleId = $.appRoleId;
        this.principalObjectId = $.principalObjectId;
        this.resourceObjectId = $.resourceObjectId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AppRoleAssignmentArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AppRoleAssignmentArgs $;

        public Builder() {
            $ = new AppRoleAssignmentArgs();
        }

        public Builder(AppRoleAssignmentArgs defaults) {
            $ = new AppRoleAssignmentArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param appRoleId The ID of the app role to be assigned. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder appRoleId(Output<String> appRoleId) {
            $.appRoleId = appRoleId;
            return this;
        }

        /**
         * @param appRoleId The ID of the app role to be assigned. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder appRoleId(String appRoleId) {
            return appRoleId(Output.of(appRoleId));
        }

        /**
         * @param principalObjectId The object ID of the user, group or service principal to be assigned this app role. Supported object types are Users, Groups or Service Principals. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder principalObjectId(Output<String> principalObjectId) {
            $.principalObjectId = principalObjectId;
            return this;
        }

        /**
         * @param principalObjectId The object ID of the user, group or service principal to be assigned this app role. Supported object types are Users, Groups or Service Principals. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder principalObjectId(String principalObjectId) {
            return principalObjectId(Output.of(principalObjectId));
        }

        /**
         * @param resourceObjectId The object ID of the service principal representing the resource. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceObjectId(Output<String> resourceObjectId) {
            $.resourceObjectId = resourceObjectId;
            return this;
        }

        /**
         * @param resourceObjectId The object ID of the service principal representing the resource. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceObjectId(String resourceObjectId) {
            return resourceObjectId(Output.of(resourceObjectId));
        }

        public AppRoleAssignmentArgs build() {
            $.appRoleId = Objects.requireNonNull($.appRoleId, "expected parameter 'appRoleId' to be non-null");
            $.principalObjectId = Objects.requireNonNull($.principalObjectId, "expected parameter 'principalObjectId' to be non-null");
            $.resourceObjectId = Objects.requireNonNull($.resourceObjectId, "expected parameter 'resourceObjectId' to be non-null");
            return $;
        }
    }

}
