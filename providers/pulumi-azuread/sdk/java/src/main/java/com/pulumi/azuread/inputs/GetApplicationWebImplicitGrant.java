// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azuread.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.util.Objects;


public final class GetApplicationWebImplicitGrant extends com.pulumi.resources.InvokeArgs {

    public static final GetApplicationWebImplicitGrant Empty = new GetApplicationWebImplicitGrant();

    /**
     * Whether this web application can request an access token using OAuth 2.0 implicit flow.
     * 
     */
    @Import(name="accessTokenIssuanceEnabled", required=true)
      private final Boolean accessTokenIssuanceEnabled;

    public Boolean accessTokenIssuanceEnabled() {
        return this.accessTokenIssuanceEnabled;
    }

    /**
     * Whether this web application can request an ID token using OAuth 2.0 implicit flow.
     * 
     */
    @Import(name="idTokenIssuanceEnabled", required=true)
      private final Boolean idTokenIssuanceEnabled;

    public Boolean idTokenIssuanceEnabled() {
        return this.idTokenIssuanceEnabled;
    }

    public GetApplicationWebImplicitGrant(
        Boolean accessTokenIssuanceEnabled,
        Boolean idTokenIssuanceEnabled) {
        this.accessTokenIssuanceEnabled = Objects.requireNonNull(accessTokenIssuanceEnabled, "expected parameter 'accessTokenIssuanceEnabled' to be non-null");
        this.idTokenIssuanceEnabled = Objects.requireNonNull(idTokenIssuanceEnabled, "expected parameter 'idTokenIssuanceEnabled' to be non-null");
    }

    private GetApplicationWebImplicitGrant() {
        this.accessTokenIssuanceEnabled = null;
        this.idTokenIssuanceEnabled = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetApplicationWebImplicitGrant defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Boolean accessTokenIssuanceEnabled;
        private Boolean idTokenIssuanceEnabled;

        public Builder() {
    	      // Empty
        }

        public Builder(GetApplicationWebImplicitGrant defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessTokenIssuanceEnabled = defaults.accessTokenIssuanceEnabled;
    	      this.idTokenIssuanceEnabled = defaults.idTokenIssuanceEnabled;
        }

        public Builder accessTokenIssuanceEnabled(Boolean accessTokenIssuanceEnabled) {
            this.accessTokenIssuanceEnabled = Objects.requireNonNull(accessTokenIssuanceEnabled);
            return this;
        }
        public Builder idTokenIssuanceEnabled(Boolean idTokenIssuanceEnabled) {
            this.idTokenIssuanceEnabled = Objects.requireNonNull(idTokenIssuanceEnabled);
            return this;
        }        public GetApplicationWebImplicitGrant build() {
            return new GetApplicationWebImplicitGrant(accessTokenIssuanceEnabled, idTokenIssuanceEnabled);
        }
    }
}
