// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azuread;

import com.pulumi.azuread.ApplicationArgs;
import com.pulumi.azuread.Utilities;
import com.pulumi.azuread.inputs.ApplicationState;
import com.pulumi.azuread.outputs.ApplicationApi;
import com.pulumi.azuread.outputs.ApplicationAppRole;
import com.pulumi.azuread.outputs.ApplicationFeatureTag;
import com.pulumi.azuread.outputs.ApplicationOptionalClaims;
import com.pulumi.azuread.outputs.ApplicationPublicClient;
import com.pulumi.azuread.outputs.ApplicationRequiredResourceAccess;
import com.pulumi.azuread.outputs.ApplicationSinglePageApplication;
import com.pulumi.azuread.outputs.ApplicationWeb;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * ## Example Usage
 * 
 * ## Import
 * 
 * Applications can be imported using their object ID, e.g.
 * 
 * ```sh
 *  $ pulumi import azuread:index/application:Application test 00000000-0000-0000-0000-000000000000
 * ```
 * 
 */
@ResourceType(type="azuread:index/application:Application")
public class Application extends com.pulumi.resources.CustomResource {
    /**
     * An `api` block as documented below, which configures API related settings for this application.
     * 
     */
    @Export(name="api", type=ApplicationApi.class, parameters={})
    private Output</* @Nullable */ ApplicationApi> api;

    /**
     * @return An `api` block as documented below, which configures API related settings for this application.
     * 
     */
    public Output<Optional<ApplicationApi>> api() {
        return Codegen.optional(this.api);
    }
    /**
     * A mapping of app role values to app role IDs, intended to be useful when referencing app roles in other resources in your configuration.
     * 
     */
    @Export(name="appRoleIds", type=Map.class, parameters={String.class, String.class})
    private Output<Map<String,String>> appRoleIds;

    /**
     * @return A mapping of app role values to app role IDs, intended to be useful when referencing app roles in other resources in your configuration.
     * 
     */
    public Output<Map<String,String>> appRoleIds() {
        return this.appRoleIds;
    }
    /**
     * A collection of `app_role` blocks as documented below. For more information see [official documentation on Application Roles](https://docs.microsoft.com/en-us/azure/architecture/multitenant-identity/app-roles).
     * 
     */
    @Export(name="appRoles", type=List.class, parameters={ApplicationAppRole.class})
    private Output</* @Nullable */ List<ApplicationAppRole>> appRoles;

    /**
     * @return A collection of `app_role` blocks as documented below. For more information see [official documentation on Application Roles](https://docs.microsoft.com/en-us/azure/architecture/multitenant-identity/app-roles).
     * 
     */
    public Output<Optional<List<ApplicationAppRole>>> appRoles() {
        return Codegen.optional(this.appRoles);
    }
    /**
     * The Application ID (also called Client ID).
     * 
     */
    @Export(name="applicationId", type=String.class, parameters={})
    private Output<String> applicationId;

    /**
     * @return The Application ID (also called Client ID).
     * 
     */
    public Output<String> applicationId() {
        return this.applicationId;
    }
    /**
     * Specifies whether this application supports device authentication without a user. Defaults to `false`.
     * 
     */
    @Export(name="deviceOnlyAuthEnabled", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> deviceOnlyAuthEnabled;

    /**
     * @return Specifies whether this application supports device authentication without a user. Defaults to `false`.
     * 
     */
    public Output<Optional<Boolean>> deviceOnlyAuthEnabled() {
        return Codegen.optional(this.deviceOnlyAuthEnabled);
    }
    /**
     * Whether Microsoft has disabled the registered application. If the application is disabled, this will be a string indicating the status/reason, e.g. `DisabledDueToViolationOfServicesAgreement`
     * 
     */
    @Export(name="disabledByMicrosoft", type=String.class, parameters={})
    private Output<String> disabledByMicrosoft;

    /**
     * @return Whether Microsoft has disabled the registered application. If the application is disabled, this will be a string indicating the status/reason, e.g. `DisabledDueToViolationOfServicesAgreement`
     * 
     */
    public Output<String> disabledByMicrosoft() {
        return this.disabledByMicrosoft;
    }
    /**
     * The display name for the application.
     * 
     */
    @Export(name="displayName", type=String.class, parameters={})
    private Output<String> displayName;

    /**
     * @return The display name for the application.
     * 
     */
    public Output<String> displayName() {
        return this.displayName;
    }
    /**
     * Specifies whether the application is a public client. Appropriate for apps using token grant flows that don&#39;t use a redirect URI. Defaults to `false`.
     * 
     */
    @Export(name="fallbackPublicClientEnabled", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> fallbackPublicClientEnabled;

    /**
     * @return Specifies whether the application is a public client. Appropriate for apps using token grant flows that don&#39;t use a redirect URI. Defaults to `false`.
     * 
     */
    public Output<Optional<Boolean>> fallbackPublicClientEnabled() {
        return Codegen.optional(this.fallbackPublicClientEnabled);
    }
    /**
     * A `feature_tags` block as described below. Cannot be used together with the `tags` property.
     * 
     */
    @Export(name="featureTags", type=List.class, parameters={ApplicationFeatureTag.class})
    private Output<List<ApplicationFeatureTag>> featureTags;

    /**
     * @return A `feature_tags` block as described below. Cannot be used together with the `tags` property.
     * 
     */
    public Output<List<ApplicationFeatureTag>> featureTags() {
        return this.featureTags;
    }
    /**
     * Configures the `groups` claim issued in a user or OAuth 2.0 access token that the app expects. Possible values are `None`, `SecurityGroup`, `DirectoryRole`, `ApplicationGroup` or `All`.
     * 
     */
    @Export(name="groupMembershipClaims", type=List.class, parameters={String.class})
    private Output</* @Nullable */ List<String>> groupMembershipClaims;

    /**
     * @return Configures the `groups` claim issued in a user or OAuth 2.0 access token that the app expects. Possible values are `None`, `SecurityGroup`, `DirectoryRole`, `ApplicationGroup` or `All`.
     * 
     */
    public Output<Optional<List<String>>> groupMembershipClaims() {
        return Codegen.optional(this.groupMembershipClaims);
    }
    /**
     * A set of user-defined URI(s) that uniquely identify an application within its Azure AD tenant, or within a verified custom domain if the application is multi-tenant.
     * 
     */
    @Export(name="identifierUris", type=List.class, parameters={String.class})
    private Output</* @Nullable */ List<String>> identifierUris;

    /**
     * @return A set of user-defined URI(s) that uniquely identify an application within its Azure AD tenant, or within a verified custom domain if the application is multi-tenant.
     * 
     */
    public Output<Optional<List<String>>> identifierUris() {
        return Codegen.optional(this.identifierUris);
    }
    /**
     * A logo image to upload for the application, as a raw base64-encoded string. The image should be in gif, jpeg or png format. Note that once an image has been uploaded, it is not possible to remove it without replacing it with another image.
     * 
     */
    @Export(name="logoImage", type=String.class, parameters={})
    private Output</* @Nullable */ String> logoImage;

    /**
     * @return A logo image to upload for the application, as a raw base64-encoded string. The image should be in gif, jpeg or png format. Note that once an image has been uploaded, it is not possible to remove it without replacing it with another image.
     * 
     */
    public Output<Optional<String>> logoImage() {
        return Codegen.optional(this.logoImage);
    }
    /**
     * CDN URL to the application&#39;s logo, as uploaded with the `logo_image` property.
     * 
     */
    @Export(name="logoUrl", type=String.class, parameters={})
    private Output<String> logoUrl;

    /**
     * @return CDN URL to the application&#39;s logo, as uploaded with the `logo_image` property.
     * 
     */
    public Output<String> logoUrl() {
        return this.logoUrl;
    }
    /**
     * URL of the application&#39;s marketing page.
     * 
     */
    @Export(name="marketingUrl", type=String.class, parameters={})
    private Output</* @Nullable */ String> marketingUrl;

    /**
     * @return URL of the application&#39;s marketing page.
     * 
     */
    public Output<Optional<String>> marketingUrl() {
        return Codegen.optional(this.marketingUrl);
    }
    /**
     * A mapping of OAuth2.0 permission scope values to scope IDs, intended to be useful when referencing permission scopes in other resources in your configuration.
     * 
     */
    @Export(name="oauth2PermissionScopeIds", type=Map.class, parameters={String.class, String.class})
    private Output<Map<String,String>> oauth2PermissionScopeIds;

    /**
     * @return A mapping of OAuth2.0 permission scope values to scope IDs, intended to be useful when referencing permission scopes in other resources in your configuration.
     * 
     */
    public Output<Map<String,String>> oauth2PermissionScopeIds() {
        return this.oauth2PermissionScopeIds;
    }
    /**
     * Specifies whether, as part of OAuth 2.0 token requests, Azure AD allows POST requests, as opposed to GET requests. Defaults to `false`, which specifies that only GET requests are allowed.
     * 
     */
    @Export(name="oauth2PostResponseRequired", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> oauth2PostResponseRequired;

    /**
     * @return Specifies whether, as part of OAuth 2.0 token requests, Azure AD allows POST requests, as opposed to GET requests. Defaults to `false`, which specifies that only GET requests are allowed.
     * 
     */
    public Output<Optional<Boolean>> oauth2PostResponseRequired() {
        return Codegen.optional(this.oauth2PostResponseRequired);
    }
    /**
     * The application&#39;s object ID.
     * 
     */
    @Export(name="objectId", type=String.class, parameters={})
    private Output<String> objectId;

    /**
     * @return The application&#39;s object ID.
     * 
     */
    public Output<String> objectId() {
        return this.objectId;
    }
    /**
     * An `optional_claims` block as documented below.
     * 
     */
    @Export(name="optionalClaims", type=ApplicationOptionalClaims.class, parameters={})
    private Output</* @Nullable */ ApplicationOptionalClaims> optionalClaims;

    /**
     * @return An `optional_claims` block as documented below.
     * 
     */
    public Output<Optional<ApplicationOptionalClaims>> optionalClaims() {
        return Codegen.optional(this.optionalClaims);
    }
    /**
     * A set of object IDs of principals that will be granted ownership of the application. Supported object types are users or service principals. By default, no owners are assigned.
     * 
     */
    @Export(name="owners", type=List.class, parameters={String.class})
    private Output</* @Nullable */ List<String>> owners;

    /**
     * @return A set of object IDs of principals that will be granted ownership of the application. Supported object types are users or service principals. By default, no owners are assigned.
     * 
     */
    public Output<Optional<List<String>>> owners() {
        return Codegen.optional(this.owners);
    }
    /**
     * If `true`, will return an error if an existing application is found with the same name. Defaults to `false`.
     * 
     */
    @Export(name="preventDuplicateNames", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> preventDuplicateNames;

    /**
     * @return If `true`, will return an error if an existing application is found with the same name. Defaults to `false`.
     * 
     */
    public Output<Optional<Boolean>> preventDuplicateNames() {
        return Codegen.optional(this.preventDuplicateNames);
    }
    /**
     * URL of the application&#39;s privacy statement.
     * 
     */
    @Export(name="privacyStatementUrl", type=String.class, parameters={})
    private Output</* @Nullable */ String> privacyStatementUrl;

    /**
     * @return URL of the application&#39;s privacy statement.
     * 
     */
    public Output<Optional<String>> privacyStatementUrl() {
        return Codegen.optional(this.privacyStatementUrl);
    }
    /**
     * A `public_client` block as documented below, which configures non-web app or non-web API application settings, for example mobile or other public clients such as an installed application running on a desktop device.
     * 
     */
    @Export(name="publicClient", type=ApplicationPublicClient.class, parameters={})
    private Output</* @Nullable */ ApplicationPublicClient> publicClient;

    /**
     * @return A `public_client` block as documented below, which configures non-web app or non-web API application settings, for example mobile or other public clients such as an installed application running on a desktop device.
     * 
     */
    public Output<Optional<ApplicationPublicClient>> publicClient() {
        return Codegen.optional(this.publicClient);
    }
    /**
     * The verified publisher domain for the application.
     * 
     */
    @Export(name="publisherDomain", type=String.class, parameters={})
    private Output<String> publisherDomain;

    /**
     * @return The verified publisher domain for the application.
     * 
     */
    public Output<String> publisherDomain() {
        return this.publisherDomain;
    }
    /**
     * A collection of `required_resource_access` blocks as documented below.
     * 
     */
    @Export(name="requiredResourceAccesses", type=List.class, parameters={ApplicationRequiredResourceAccess.class})
    private Output</* @Nullable */ List<ApplicationRequiredResourceAccess>> requiredResourceAccesses;

    /**
     * @return A collection of `required_resource_access` blocks as documented below.
     * 
     */
    public Output<Optional<List<ApplicationRequiredResourceAccess>>> requiredResourceAccesses() {
        return Codegen.optional(this.requiredResourceAccesses);
    }
    /**
     * The Microsoft account types that are supported for the current application. Must be one of `AzureADMyOrg`, `AzureADMultipleOrgs`, `AzureADandPersonalMicrosoftAccount` or `PersonalMicrosoftAccount`. Defaults to `AzureADMyOrg`.
     * 
     */
    @Export(name="signInAudience", type=String.class, parameters={})
    private Output</* @Nullable */ String> signInAudience;

    /**
     * @return The Microsoft account types that are supported for the current application. Must be one of `AzureADMyOrg`, `AzureADMultipleOrgs`, `AzureADandPersonalMicrosoftAccount` or `PersonalMicrosoftAccount`. Defaults to `AzureADMyOrg`.
     * 
     */
    public Output<Optional<String>> signInAudience() {
        return Codegen.optional(this.signInAudience);
    }
    /**
     * A `single_page_application` block as documented below, which configures single-page application (SPA) related settings for this application.
     * 
     */
    @Export(name="singlePageApplication", type=ApplicationSinglePageApplication.class, parameters={})
    private Output</* @Nullable */ ApplicationSinglePageApplication> singlePageApplication;

    /**
     * @return A `single_page_application` block as documented below, which configures single-page application (SPA) related settings for this application.
     * 
     */
    public Output<Optional<ApplicationSinglePageApplication>> singlePageApplication() {
        return Codegen.optional(this.singlePageApplication);
    }
    /**
     * URL of the application&#39;s support page.
     * 
     */
    @Export(name="supportUrl", type=String.class, parameters={})
    private Output</* @Nullable */ String> supportUrl;

    /**
     * @return URL of the application&#39;s support page.
     * 
     */
    public Output<Optional<String>> supportUrl() {
        return Codegen.optional(this.supportUrl);
    }
    /**
     * A set of tags to apply to the application. Cannot be used together with the `feature_tags` block.
     * 
     */
    @Export(name="tags", type=List.class, parameters={String.class})
    private Output<List<String>> tags;

    /**
     * @return A set of tags to apply to the application. Cannot be used together with the `feature_tags` block.
     * 
     */
    public Output<List<String>> tags() {
        return this.tags;
    }
    /**
     * Unique ID for a templated application in the Azure AD App Gallery, from which to create the application. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="templateId", type=String.class, parameters={})
    private Output<String> templateId;

    /**
     * @return Unique ID for a templated application in the Azure AD App Gallery, from which to create the application. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> templateId() {
        return this.templateId;
    }
    /**
     * URL of the application&#39;s terms of service statement.
     * 
     */
    @Export(name="termsOfServiceUrl", type=String.class, parameters={})
    private Output</* @Nullable */ String> termsOfServiceUrl;

    /**
     * @return URL of the application&#39;s terms of service statement.
     * 
     */
    public Output<Optional<String>> termsOfServiceUrl() {
        return Codegen.optional(this.termsOfServiceUrl);
    }
    /**
     * A `web` block as documented below, which configures web related settings for this application.
     * 
     */
    @Export(name="web", type=ApplicationWeb.class, parameters={})
    private Output</* @Nullable */ ApplicationWeb> web;

    /**
     * @return A `web` block as documented below, which configures web related settings for this application.
     * 
     */
    public Output<Optional<ApplicationWeb>> web() {
        return Codegen.optional(this.web);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Application(String name) {
        this(name, ApplicationArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Application(String name, ApplicationArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Application(String name, ApplicationArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azuread:index/application:Application", name, args == null ? ApplicationArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Application(String name, Output<String> id, @Nullable ApplicationState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azuread:index/application:Application", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Application get(String name, Output<String> id, @Nullable ApplicationState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Application(name, id, state, options);
    }
}
