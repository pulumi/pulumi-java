// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azuread.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetApplicationArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetApplicationArgs Empty = new GetApplicationArgs();

    /**
     * Specifies the Application ID (also called Client ID).
     * 
     */
    @Import(name="applicationId")
      private final @Nullable String applicationId;

    public Optional<String> applicationId() {
        return this.applicationId == null ? Optional.empty() : Optional.ofNullable(this.applicationId);
    }

    /**
     * Specifies the display name of the application.
     * 
     */
    @Import(name="displayName")
      private final @Nullable String displayName;

    public Optional<String> displayName() {
        return this.displayName == null ? Optional.empty() : Optional.ofNullable(this.displayName);
    }

    /**
     * Specifies the Object ID of the application.
     * 
     */
    @Import(name="objectId")
      private final @Nullable String objectId;

    public Optional<String> objectId() {
        return this.objectId == null ? Optional.empty() : Optional.ofNullable(this.objectId);
    }

    public GetApplicationArgs(
        @Nullable String applicationId,
        @Nullable String displayName,
        @Nullable String objectId) {
        this.applicationId = applicationId;
        this.displayName = displayName;
        this.objectId = objectId;
    }

    private GetApplicationArgs() {
        this.applicationId = null;
        this.displayName = null;
        this.objectId = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetApplicationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String applicationId;
        private @Nullable String displayName;
        private @Nullable String objectId;

        public Builder() {
    	      // Empty
        }

        public Builder(GetApplicationArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.applicationId = defaults.applicationId;
    	      this.displayName = defaults.displayName;
    	      this.objectId = defaults.objectId;
        }

        public Builder applicationId(@Nullable String applicationId) {
            this.applicationId = applicationId;
            return this;
        }
        public Builder displayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }
        public Builder objectId(@Nullable String objectId) {
            this.objectId = objectId;
            return this;
        }        public GetApplicationArgs build() {
            return new GetApplicationArgs(applicationId, displayName, objectId);
        }
    }
}
