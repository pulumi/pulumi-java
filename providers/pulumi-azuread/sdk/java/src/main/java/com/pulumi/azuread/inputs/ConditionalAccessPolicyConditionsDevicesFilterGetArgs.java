// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azuread.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;


public final class ConditionalAccessPolicyConditionsDevicesFilterGetArgs extends com.pulumi.resources.ResourceArgs {

    public static final ConditionalAccessPolicyConditionsDevicesFilterGetArgs Empty = new ConditionalAccessPolicyConditionsDevicesFilterGetArgs();

    /**
     * Whether to include in, or exclude from, matching devices from the policy. Supported values are `include` or `exclude`.
     * 
     */
    @Import(name="mode", required=true)
      private final Output<String> mode;

    public Output<String> mode() {
        return this.mode;
    }

    /**
     * Condition filter to match devices. For more information, see [official documentation](https://docs.microsoft.com/en-us/azure/active-directory/conditional-access/concept-condition-filters-for-devices#supported-operators-and-device-properties-for-filters).
     * 
     */
    @Import(name="rule", required=true)
      private final Output<String> rule;

    public Output<String> rule() {
        return this.rule;
    }

    public ConditionalAccessPolicyConditionsDevicesFilterGetArgs(
        Output<String> mode,
        Output<String> rule) {
        this.mode = Objects.requireNonNull(mode, "expected parameter 'mode' to be non-null");
        this.rule = Objects.requireNonNull(rule, "expected parameter 'rule' to be non-null");
    }

    private ConditionalAccessPolicyConditionsDevicesFilterGetArgs() {
        this.mode = Codegen.empty();
        this.rule = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ConditionalAccessPolicyConditionsDevicesFilterGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> mode;
        private Output<String> rule;

        public Builder() {
    	      // Empty
        }

        public Builder(ConditionalAccessPolicyConditionsDevicesFilterGetArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.mode = defaults.mode;
    	      this.rule = defaults.rule;
        }

        public Builder mode(Output<String> mode) {
            this.mode = Objects.requireNonNull(mode);
            return this;
        }
        public Builder mode(String mode) {
            this.mode = Output.of(Objects.requireNonNull(mode));
            return this;
        }
        public Builder rule(Output<String> rule) {
            this.rule = Objects.requireNonNull(rule);
            return this;
        }
        public Builder rule(String rule) {
            this.rule = Output.of(Objects.requireNonNull(rule));
            return this;
        }        public ConditionalAccessPolicyConditionsDevicesFilterGetArgs build() {
            return new ConditionalAccessPolicyConditionsDevicesFilterGetArgs(mode, rule);
        }
    }
}
