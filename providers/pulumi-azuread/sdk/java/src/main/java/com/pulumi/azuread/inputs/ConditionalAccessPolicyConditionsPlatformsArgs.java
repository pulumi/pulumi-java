// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azuread.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ConditionalAccessPolicyConditionsPlatformsArgs extends com.pulumi.resources.ResourceArgs {

    public static final ConditionalAccessPolicyConditionsPlatformsArgs Empty = new ConditionalAccessPolicyConditionsPlatformsArgs();

    /**
     * A list of platforms explicitly excluded from the policy. Possible values are: `all`, `android`, `iOS`, `linux`, `macOS`, `windows`, `windowsPhone` or `unknownFutureValue`.
     * 
     */
    @Import(name="excludedPlatforms")
    private @Nullable Output<List<String>> excludedPlatforms;

    /**
     * @return A list of platforms explicitly excluded from the policy. Possible values are: `all`, `android`, `iOS`, `linux`, `macOS`, `windows`, `windowsPhone` or `unknownFutureValue`.
     * 
     */
    public Optional<Output<List<String>>> excludedPlatforms() {
        return Optional.ofNullable(this.excludedPlatforms);
    }

    /**
     * A list of platforms the policy applies to, unless explicitly excluded. Possible values are: `all`, `android`, `iOS`, `linux`, `macOS`, `windows`, `windowsPhone` or `unknownFutureValue`.
     * 
     */
    @Import(name="includedPlatforms", required=true)
    private Output<List<String>> includedPlatforms;

    /**
     * @return A list of platforms the policy applies to, unless explicitly excluded. Possible values are: `all`, `android`, `iOS`, `linux`, `macOS`, `windows`, `windowsPhone` or `unknownFutureValue`.
     * 
     */
    public Output<List<String>> includedPlatforms() {
        return this.includedPlatforms;
    }

    private ConditionalAccessPolicyConditionsPlatformsArgs() {}

    private ConditionalAccessPolicyConditionsPlatformsArgs(ConditionalAccessPolicyConditionsPlatformsArgs $) {
        this.excludedPlatforms = $.excludedPlatforms;
        this.includedPlatforms = $.includedPlatforms;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ConditionalAccessPolicyConditionsPlatformsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ConditionalAccessPolicyConditionsPlatformsArgs $;

        public Builder() {
            $ = new ConditionalAccessPolicyConditionsPlatformsArgs();
        }

        public Builder(ConditionalAccessPolicyConditionsPlatformsArgs defaults) {
            $ = new ConditionalAccessPolicyConditionsPlatformsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param excludedPlatforms A list of platforms explicitly excluded from the policy. Possible values are: `all`, `android`, `iOS`, `linux`, `macOS`, `windows`, `windowsPhone` or `unknownFutureValue`.
         * 
         * @return builder
         * 
         */
        public Builder excludedPlatforms(@Nullable Output<List<String>> excludedPlatforms) {
            $.excludedPlatforms = excludedPlatforms;
            return this;
        }

        /**
         * @param excludedPlatforms A list of platforms explicitly excluded from the policy. Possible values are: `all`, `android`, `iOS`, `linux`, `macOS`, `windows`, `windowsPhone` or `unknownFutureValue`.
         * 
         * @return builder
         * 
         */
        public Builder excludedPlatforms(List<String> excludedPlatforms) {
            return excludedPlatforms(Output.of(excludedPlatforms));
        }

        /**
         * @param excludedPlatforms A list of platforms explicitly excluded from the policy. Possible values are: `all`, `android`, `iOS`, `linux`, `macOS`, `windows`, `windowsPhone` or `unknownFutureValue`.
         * 
         * @return builder
         * 
         */
        public Builder excludedPlatforms(String... excludedPlatforms) {
            return excludedPlatforms(List.of(excludedPlatforms));
        }

        /**
         * @param includedPlatforms A list of platforms the policy applies to, unless explicitly excluded. Possible values are: `all`, `android`, `iOS`, `linux`, `macOS`, `windows`, `windowsPhone` or `unknownFutureValue`.
         * 
         * @return builder
         * 
         */
        public Builder includedPlatforms(Output<List<String>> includedPlatforms) {
            $.includedPlatforms = includedPlatforms;
            return this;
        }

        /**
         * @param includedPlatforms A list of platforms the policy applies to, unless explicitly excluded. Possible values are: `all`, `android`, `iOS`, `linux`, `macOS`, `windows`, `windowsPhone` or `unknownFutureValue`.
         * 
         * @return builder
         * 
         */
        public Builder includedPlatforms(List<String> includedPlatforms) {
            return includedPlatforms(Output.of(includedPlatforms));
        }

        /**
         * @param includedPlatforms A list of platforms the policy applies to, unless explicitly excluded. Possible values are: `all`, `android`, `iOS`, `linux`, `macOS`, `windows`, `windowsPhone` or `unknownFutureValue`.
         * 
         * @return builder
         * 
         */
        public Builder includedPlatforms(String... includedPlatforms) {
            return includedPlatforms(List.of(includedPlatforms));
        }

        public ConditionalAccessPolicyConditionsPlatformsArgs build() {
            $.includedPlatforms = Objects.requireNonNull($.includedPlatforms, "expected parameter 'includedPlatforms' to be non-null");
            return $;
        }
    }

}
