// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azuread.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetGroupsPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetGroupsPlainArgs Empty = new GetGroupsPlainArgs();

    /**
     * A common display name prefix to match when returning groups.
     * 
     */
    @Import(name="displayNamePrefix")
    private @Nullable String displayNamePrefix;

    /**
     * @return A common display name prefix to match when returning groups.
     * 
     */
    public Optional<String> displayNamePrefix() {
        return Optional.ofNullable(this.displayNamePrefix);
    }

    /**
     * The display names of the groups.
     * 
     */
    @Import(name="displayNames")
    private @Nullable List<String> displayNames;

    /**
     * @return The display names of the groups.
     * 
     */
    public Optional<List<String>> displayNames() {
        return Optional.ofNullable(this.displayNames);
    }

    /**
     * Ignore missing groups and return groups that were found. The data source will still fail if no groups are found. Cannot be specified with `return_all`. Defaults to `false`.
     * 
     */
    @Import(name="ignoreMissing")
    private @Nullable Boolean ignoreMissing;

    /**
     * @return Ignore missing groups and return groups that were found. The data source will still fail if no groups are found. Cannot be specified with `return_all`. Defaults to `false`.
     * 
     */
    public Optional<Boolean> ignoreMissing() {
        return Optional.ofNullable(this.ignoreMissing);
    }

    /**
     * Whether the returned groups should be mail-enabled. By itself this does not exclude security-enabled groups. Setting this to `true` ensures all groups are mail-enabled, and setting to `false` ensures that all groups are _not_ mail-enabled. To ignore this filter, omit the property or set it to null. Cannot be specified together with `object_ids`.
     * 
     */
    @Import(name="mailEnabled")
    private @Nullable Boolean mailEnabled;

    /**
     * @return Whether the returned groups should be mail-enabled. By itself this does not exclude security-enabled groups. Setting this to `true` ensures all groups are mail-enabled, and setting to `false` ensures that all groups are _not_ mail-enabled. To ignore this filter, omit the property or set it to null. Cannot be specified together with `object_ids`.
     * 
     */
    public Optional<Boolean> mailEnabled() {
        return Optional.ofNullable(this.mailEnabled);
    }

    /**
     * The object IDs of the groups.
     * 
     */
    @Import(name="objectIds")
    private @Nullable List<String> objectIds;

    /**
     * @return The object IDs of the groups.
     * 
     */
    public Optional<List<String>> objectIds() {
        return Optional.ofNullable(this.objectIds);
    }

    /**
     * A flag to denote if all groups should be fetched and returned. Cannot be specified wth `ignore_missing`. Defaults to `false`.
     * 
     */
    @Import(name="returnAll")
    private @Nullable Boolean returnAll;

    /**
     * @return A flag to denote if all groups should be fetched and returned. Cannot be specified wth `ignore_missing`. Defaults to `false`.
     * 
     */
    public Optional<Boolean> returnAll() {
        return Optional.ofNullable(this.returnAll);
    }

    /**
     * Whether the returned groups should be security-enabled. By itself this does not exclude mail-enabled groups. Setting this to `true` ensures all groups are security-enabled, and setting to `false` ensures that all groups are _not_ security-enabled. To ignore this filter, omit the property or set it to null. Cannot be specified together with `object_ids`.
     * 
     */
    @Import(name="securityEnabled")
    private @Nullable Boolean securityEnabled;

    /**
     * @return Whether the returned groups should be security-enabled. By itself this does not exclude mail-enabled groups. Setting this to `true` ensures all groups are security-enabled, and setting to `false` ensures that all groups are _not_ security-enabled. To ignore this filter, omit the property or set it to null. Cannot be specified together with `object_ids`.
     * 
     */
    public Optional<Boolean> securityEnabled() {
        return Optional.ofNullable(this.securityEnabled);
    }

    private GetGroupsPlainArgs() {}

    private GetGroupsPlainArgs(GetGroupsPlainArgs $) {
        this.displayNamePrefix = $.displayNamePrefix;
        this.displayNames = $.displayNames;
        this.ignoreMissing = $.ignoreMissing;
        this.mailEnabled = $.mailEnabled;
        this.objectIds = $.objectIds;
        this.returnAll = $.returnAll;
        this.securityEnabled = $.securityEnabled;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetGroupsPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetGroupsPlainArgs $;

        public Builder() {
            $ = new GetGroupsPlainArgs();
        }

        public Builder(GetGroupsPlainArgs defaults) {
            $ = new GetGroupsPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param displayNamePrefix A common display name prefix to match when returning groups.
         * 
         * @return builder
         * 
         */
        public Builder displayNamePrefix(@Nullable String displayNamePrefix) {
            $.displayNamePrefix = displayNamePrefix;
            return this;
        }

        /**
         * @param displayNames The display names of the groups.
         * 
         * @return builder
         * 
         */
        public Builder displayNames(@Nullable List<String> displayNames) {
            $.displayNames = displayNames;
            return this;
        }

        /**
         * @param displayNames The display names of the groups.
         * 
         * @return builder
         * 
         */
        public Builder displayNames(String... displayNames) {
            return displayNames(List.of(displayNames));
        }

        /**
         * @param ignoreMissing Ignore missing groups and return groups that were found. The data source will still fail if no groups are found. Cannot be specified with `return_all`. Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder ignoreMissing(@Nullable Boolean ignoreMissing) {
            $.ignoreMissing = ignoreMissing;
            return this;
        }

        /**
         * @param mailEnabled Whether the returned groups should be mail-enabled. By itself this does not exclude security-enabled groups. Setting this to `true` ensures all groups are mail-enabled, and setting to `false` ensures that all groups are _not_ mail-enabled. To ignore this filter, omit the property or set it to null. Cannot be specified together with `object_ids`.
         * 
         * @return builder
         * 
         */
        public Builder mailEnabled(@Nullable Boolean mailEnabled) {
            $.mailEnabled = mailEnabled;
            return this;
        }

        /**
         * @param objectIds The object IDs of the groups.
         * 
         * @return builder
         * 
         */
        public Builder objectIds(@Nullable List<String> objectIds) {
            $.objectIds = objectIds;
            return this;
        }

        /**
         * @param objectIds The object IDs of the groups.
         * 
         * @return builder
         * 
         */
        public Builder objectIds(String... objectIds) {
            return objectIds(List.of(objectIds));
        }

        /**
         * @param returnAll A flag to denote if all groups should be fetched and returned. Cannot be specified wth `ignore_missing`. Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder returnAll(@Nullable Boolean returnAll) {
            $.returnAll = returnAll;
            return this;
        }

        /**
         * @param securityEnabled Whether the returned groups should be security-enabled. By itself this does not exclude mail-enabled groups. Setting this to `true` ensures all groups are security-enabled, and setting to `false` ensures that all groups are _not_ security-enabled. To ignore this filter, omit the property or set it to null. Cannot be specified together with `object_ids`.
         * 
         * @return builder
         * 
         */
        public Builder securityEnabled(@Nullable Boolean securityEnabled) {
            $.securityEnabled = securityEnabled;
            return this;
        }

        public GetGroupsPlainArgs build() {
            return $;
        }
    }

}
