// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azuread;

import com.pulumi.azuread.inputs.NamedLocationCountryArgs;
import com.pulumi.azuread.inputs.NamedLocationIpArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class NamedLocationArgs extends com.pulumi.resources.ResourceArgs {

    public static final NamedLocationArgs Empty = new NamedLocationArgs();

    /**
     * A `country` block as documented below, which configures a country-based named location.
     * 
     */
    @Import(name="country")
      private final @Nullable Output<NamedLocationCountryArgs> country;

    public Output<NamedLocationCountryArgs> country() {
        return this.country == null ? Codegen.empty() : this.country;
    }

    /**
     * The friendly name for this named location.
     * 
     */
    @Import(name="displayName", required=true)
      private final Output<String> displayName;

    public Output<String> displayName() {
        return this.displayName;
    }

    /**
     * An `ip` block as documented below, which configures an IP-based named location.
     * 
     */
    @Import(name="ip")
      private final @Nullable Output<NamedLocationIpArgs> ip;

    public Output<NamedLocationIpArgs> ip() {
        return this.ip == null ? Codegen.empty() : this.ip;
    }

    public NamedLocationArgs(
        @Nullable Output<NamedLocationCountryArgs> country,
        Output<String> displayName,
        @Nullable Output<NamedLocationIpArgs> ip) {
        this.country = country;
        this.displayName = Objects.requireNonNull(displayName, "expected parameter 'displayName' to be non-null");
        this.ip = ip;
    }

    private NamedLocationArgs() {
        this.country = Codegen.empty();
        this.displayName = Codegen.empty();
        this.ip = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(NamedLocationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<NamedLocationCountryArgs> country;
        private Output<String> displayName;
        private @Nullable Output<NamedLocationIpArgs> ip;

        public Builder() {
    	      // Empty
        }

        public Builder(NamedLocationArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.country = defaults.country;
    	      this.displayName = defaults.displayName;
    	      this.ip = defaults.ip;
        }

        public Builder country(@Nullable Output<NamedLocationCountryArgs> country) {
            this.country = country;
            return this;
        }
        public Builder country(@Nullable NamedLocationCountryArgs country) {
            this.country = Codegen.ofNullable(country);
            return this;
        }
        public Builder displayName(Output<String> displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }
        public Builder displayName(String displayName) {
            this.displayName = Output.of(Objects.requireNonNull(displayName));
            return this;
        }
        public Builder ip(@Nullable Output<NamedLocationIpArgs> ip) {
            this.ip = ip;
            return this;
        }
        public Builder ip(@Nullable NamedLocationIpArgs ip) {
            this.ip = Codegen.ofNullable(ip);
            return this;
        }        public NamedLocationArgs build() {
            return new NamedLocationArgs(country, displayName, ip);
        }
    }
}
