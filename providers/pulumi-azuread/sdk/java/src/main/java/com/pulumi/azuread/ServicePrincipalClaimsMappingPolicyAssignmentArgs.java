// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azuread;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;


public final class ServicePrincipalClaimsMappingPolicyAssignmentArgs extends com.pulumi.resources.ResourceArgs {

    public static final ServicePrincipalClaimsMappingPolicyAssignmentArgs Empty = new ServicePrincipalClaimsMappingPolicyAssignmentArgs();

    /**
     * The ID of the claims mapping policy to assign.
     * 
     */
    @Import(name="claimsMappingPolicyId", required=true)
      private final Output<String> claimsMappingPolicyId;

    public Output<String> claimsMappingPolicyId() {
        return this.claimsMappingPolicyId;
    }

    /**
     * The object ID of the service principal for the policy assignment.
     * 
     */
    @Import(name="servicePrincipalId", required=true)
      private final Output<String> servicePrincipalId;

    public Output<String> servicePrincipalId() {
        return this.servicePrincipalId;
    }

    public ServicePrincipalClaimsMappingPolicyAssignmentArgs(
        Output<String> claimsMappingPolicyId,
        Output<String> servicePrincipalId) {
        this.claimsMappingPolicyId = Objects.requireNonNull(claimsMappingPolicyId, "expected parameter 'claimsMappingPolicyId' to be non-null");
        this.servicePrincipalId = Objects.requireNonNull(servicePrincipalId, "expected parameter 'servicePrincipalId' to be non-null");
    }

    private ServicePrincipalClaimsMappingPolicyAssignmentArgs() {
        this.claimsMappingPolicyId = Codegen.empty();
        this.servicePrincipalId = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ServicePrincipalClaimsMappingPolicyAssignmentArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> claimsMappingPolicyId;
        private Output<String> servicePrincipalId;

        public Builder() {
    	      // Empty
        }

        public Builder(ServicePrincipalClaimsMappingPolicyAssignmentArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.claimsMappingPolicyId = defaults.claimsMappingPolicyId;
    	      this.servicePrincipalId = defaults.servicePrincipalId;
        }

        public Builder claimsMappingPolicyId(Output<String> claimsMappingPolicyId) {
            this.claimsMappingPolicyId = Objects.requireNonNull(claimsMappingPolicyId);
            return this;
        }
        public Builder claimsMappingPolicyId(String claimsMappingPolicyId) {
            this.claimsMappingPolicyId = Output.of(Objects.requireNonNull(claimsMappingPolicyId));
            return this;
        }
        public Builder servicePrincipalId(Output<String> servicePrincipalId) {
            this.servicePrincipalId = Objects.requireNonNull(servicePrincipalId);
            return this;
        }
        public Builder servicePrincipalId(String servicePrincipalId) {
            this.servicePrincipalId = Output.of(Objects.requireNonNull(servicePrincipalId));
            return this;
        }        public ServicePrincipalClaimsMappingPolicyAssignmentArgs build() {
            return new ServicePrincipalClaimsMappingPolicyAssignmentArgs(claimsMappingPolicyId, servicePrincipalId);
        }
    }
}
