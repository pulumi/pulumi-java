// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azuread.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ApplicationAppRoleGetArgs extends com.pulumi.resources.ResourceArgs {

    public static final ApplicationAppRoleGetArgs Empty = new ApplicationAppRoleGetArgs();

    /**
     * Specifies whether this app role definition can be assigned to users and groups by setting to `User`, or to other applications (that are accessing this application in a standalone scenario) by setting to `Application`, or to both.
     * 
     */
    @Import(name="allowedMemberTypes", required=true)
      private final Output<List<String>> allowedMemberTypes;

    public Output<List<String>> allowedMemberTypes() {
        return this.allowedMemberTypes;
    }

    /**
     * Description of the app role that appears when the role is being assigned and, if the role functions as an application permissions, during the consent experiences.
     * 
     */
    @Import(name="description", required=true)
      private final Output<String> description;

    public Output<String> description() {
        return this.description;
    }

    /**
     * Display name for the app role that appears during app role assignment and in consent experiences.
     * 
     */
    @Import(name="displayName", required=true)
      private final Output<String> displayName;

    public Output<String> displayName() {
        return this.displayName;
    }

    /**
     * Determines if the app role is enabled. Defaults to `true`.
     * 
     */
    @Import(name="enabled")
      private final @Nullable Output<Boolean> enabled;

    public Output<Boolean> enabled() {
        return this.enabled == null ? Codegen.empty() : this.enabled;
    }

    /**
     * The unique identifier of the app role. Must be a valid UUID.
     * 
     */
    @Import(name="id", required=true)
      private final Output<String> id;

    public Output<String> id() {
        return this.id;
    }

    /**
     * The value that is used for the `roles` claim in ID tokens and OAuth 2.0 access tokens that are authenticating an assigned service or user principal.
     * 
     */
    @Import(name="value")
      private final @Nullable Output<String> value;

    public Output<String> value() {
        return this.value == null ? Codegen.empty() : this.value;
    }

    public ApplicationAppRoleGetArgs(
        Output<List<String>> allowedMemberTypes,
        Output<String> description,
        Output<String> displayName,
        @Nullable Output<Boolean> enabled,
        Output<String> id,
        @Nullable Output<String> value) {
        this.allowedMemberTypes = Objects.requireNonNull(allowedMemberTypes, "expected parameter 'allowedMemberTypes' to be non-null");
        this.description = Objects.requireNonNull(description, "expected parameter 'description' to be non-null");
        this.displayName = Objects.requireNonNull(displayName, "expected parameter 'displayName' to be non-null");
        this.enabled = enabled;
        this.id = Objects.requireNonNull(id, "expected parameter 'id' to be non-null");
        this.value = value;
    }

    private ApplicationAppRoleGetArgs() {
        this.allowedMemberTypes = Codegen.empty();
        this.description = Codegen.empty();
        this.displayName = Codegen.empty();
        this.enabled = Codegen.empty();
        this.id = Codegen.empty();
        this.value = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ApplicationAppRoleGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<List<String>> allowedMemberTypes;
        private Output<String> description;
        private Output<String> displayName;
        private @Nullable Output<Boolean> enabled;
        private Output<String> id;
        private @Nullable Output<String> value;

        public Builder() {
    	      // Empty
        }

        public Builder(ApplicationAppRoleGetArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allowedMemberTypes = defaults.allowedMemberTypes;
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.enabled = defaults.enabled;
    	      this.id = defaults.id;
    	      this.value = defaults.value;
        }

        public Builder allowedMemberTypes(Output<List<String>> allowedMemberTypes) {
            this.allowedMemberTypes = Objects.requireNonNull(allowedMemberTypes);
            return this;
        }
        public Builder allowedMemberTypes(List<String> allowedMemberTypes) {
            this.allowedMemberTypes = Output.of(Objects.requireNonNull(allowedMemberTypes));
            return this;
        }
        public Builder allowedMemberTypes(String... allowedMemberTypes) {
            return allowedMemberTypes(List.of(allowedMemberTypes));
        }
        public Builder description(Output<String> description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        public Builder description(String description) {
            this.description = Output.of(Objects.requireNonNull(description));
            return this;
        }
        public Builder displayName(Output<String> displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }
        public Builder displayName(String displayName) {
            this.displayName = Output.of(Objects.requireNonNull(displayName));
            return this;
        }
        public Builder enabled(@Nullable Output<Boolean> enabled) {
            this.enabled = enabled;
            return this;
        }
        public Builder enabled(@Nullable Boolean enabled) {
            this.enabled = Codegen.ofNullable(enabled);
            return this;
        }
        public Builder id(Output<String> id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder id(String id) {
            this.id = Output.of(Objects.requireNonNull(id));
            return this;
        }
        public Builder value(@Nullable Output<String> value) {
            this.value = value;
            return this;
        }
        public Builder value(@Nullable String value) {
            this.value = Codegen.ofNullable(value);
            return this;
        }        public ApplicationAppRoleGetArgs build() {
            return new ApplicationAppRoleGetArgs(allowedMemberTypes, description, displayName, enabled, id, value);
        }
    }
}
