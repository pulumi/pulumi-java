// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azuread;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ProviderArgs extends com.pulumi.resources.ResourceArgs {

    public static final ProviderArgs Empty = new ProviderArgs();

    /**
     * Base64 encoded PKCS#12 certificate bundle to use when authenticating as a Service Principal using a Client Certificate
     * 
     */
    @Import(name="clientCertificate")
      private final @Nullable Output<String> clientCertificate;

    public Output<String> clientCertificate() {
        return this.clientCertificate == null ? Codegen.empty() : this.clientCertificate;
    }

    /**
     * The password to decrypt the Client Certificate. For use when authenticating as a Service Principal using a Client
     * Certificate
     * 
     */
    @Import(name="clientCertificatePassword")
      private final @Nullable Output<String> clientCertificatePassword;

    public Output<String> clientCertificatePassword() {
        return this.clientCertificatePassword == null ? Codegen.empty() : this.clientCertificatePassword;
    }

    /**
     * The path to the Client Certificate associated with the Service Principal for use when authenticating as a Service
     * Principal using a Client Certificate
     * 
     */
    @Import(name="clientCertificatePath")
      private final @Nullable Output<String> clientCertificatePath;

    public Output<String> clientCertificatePath() {
        return this.clientCertificatePath == null ? Codegen.empty() : this.clientCertificatePath;
    }

    /**
     * The Client ID which should be used for service principal authentication
     * 
     */
    @Import(name="clientId")
      private final @Nullable Output<String> clientId;

    public Output<String> clientId() {
        return this.clientId == null ? Codegen.empty() : this.clientId;
    }

    /**
     * The application password to use when authenticating as a Service Principal using a Client Secret
     * 
     */
    @Import(name="clientSecret")
      private final @Nullable Output<String> clientSecret;

    public Output<String> clientSecret() {
        return this.clientSecret == null ? Codegen.empty() : this.clientSecret;
    }

    /**
     * Disable the Terraform Partner ID, which is used if a custom `partner_id` isn't specified
     * 
     */
    @Import(name="disableTerraformPartnerId", json=true)
      private final @Nullable Output<Boolean> disableTerraformPartnerId;

    public Output<Boolean> disableTerraformPartnerId() {
        return this.disableTerraformPartnerId == null ? Codegen.empty() : this.disableTerraformPartnerId;
    }

    /**
     * The cloud environment which should be used. Possible values are: `global` (also `public`), `usgovernmentl4` (also
     * `usgovernment`), `usgovernmentl5` (also `dod`), and `china`. Defaults to `global`
     * 
     */
    @Import(name="environment")
      private final @Nullable Output<String> environment;

    public Output<String> environment() {
        return this.environment == null ? Codegen.empty() : this.environment;
    }

    /**
     * The path to a custom endpoint for Managed Identity - in most circumstances this should be detected automatically
     * 
     */
    @Import(name="msiEndpoint")
      private final @Nullable Output<String> msiEndpoint;

    public Output<String> msiEndpoint() {
        return this.msiEndpoint == null ? Codegen.empty() : this.msiEndpoint;
    }

    /**
     * A GUID/UUID that is registered with Microsoft to facilitate partner resource usage attribution
     * 
     */
    @Import(name="partnerId")
      private final @Nullable Output<String> partnerId;

    public Output<String> partnerId() {
        return this.partnerId == null ? Codegen.empty() : this.partnerId;
    }

    /**
     * The Tenant ID which should be used. Works with all authentication methods except Managed Identity
     * 
     */
    @Import(name="tenantId")
      private final @Nullable Output<String> tenantId;

    public Output<String> tenantId() {
        return this.tenantId == null ? Codegen.empty() : this.tenantId;
    }

    /**
     * Allow Azure CLI to be used for Authentication
     * 
     */
    @Import(name="useCli", json=true)
      private final @Nullable Output<Boolean> useCli;

    public Output<Boolean> useCli() {
        return this.useCli == null ? Codegen.empty() : this.useCli;
    }

    /**
     * Allow Managed Identity to be used for Authentication
     * 
     */
    @Import(name="useMsi", json=true)
      private final @Nullable Output<Boolean> useMsi;

    public Output<Boolean> useMsi() {
        return this.useMsi == null ? Codegen.empty() : this.useMsi;
    }

    public ProviderArgs(
        @Nullable Output<String> clientCertificate,
        @Nullable Output<String> clientCertificatePassword,
        @Nullable Output<String> clientCertificatePath,
        @Nullable Output<String> clientId,
        @Nullable Output<String> clientSecret,
        @Nullable Output<Boolean> disableTerraformPartnerId,
        @Nullable Output<String> environment,
        @Nullable Output<String> msiEndpoint,
        @Nullable Output<String> partnerId,
        @Nullable Output<String> tenantId,
        @Nullable Output<Boolean> useCli,
        @Nullable Output<Boolean> useMsi) {
        this.clientCertificate = clientCertificate;
        this.clientCertificatePassword = clientCertificatePassword;
        this.clientCertificatePath = clientCertificatePath;
        this.clientId = clientId;
        this.clientSecret = clientSecret;
        this.disableTerraformPartnerId = disableTerraformPartnerId;
        this.environment = Codegen.stringProp("environment").output().arg(environment).env("ARM_ENVIRONMENT").def("public").getNullable();
        this.msiEndpoint = Codegen.stringProp("msiEndpoint").output().arg(msiEndpoint).env("ARM_MSI_ENDPOINT").getNullable();
        this.partnerId = partnerId;
        this.tenantId = tenantId;
        this.useCli = useCli;
        this.useMsi = Codegen.booleanProp("useMsi").output().arg(useMsi).env("ARM_USE_MSI").def(false).getNullable();
    }

    private ProviderArgs() {
        this.clientCertificate = Codegen.empty();
        this.clientCertificatePassword = Codegen.empty();
        this.clientCertificatePath = Codegen.empty();
        this.clientId = Codegen.empty();
        this.clientSecret = Codegen.empty();
        this.disableTerraformPartnerId = Codegen.empty();
        this.environment = Codegen.empty();
        this.msiEndpoint = Codegen.empty();
        this.partnerId = Codegen.empty();
        this.tenantId = Codegen.empty();
        this.useCli = Codegen.empty();
        this.useMsi = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ProviderArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> clientCertificate;
        private @Nullable Output<String> clientCertificatePassword;
        private @Nullable Output<String> clientCertificatePath;
        private @Nullable Output<String> clientId;
        private @Nullable Output<String> clientSecret;
        private @Nullable Output<Boolean> disableTerraformPartnerId;
        private @Nullable Output<String> environment;
        private @Nullable Output<String> msiEndpoint;
        private @Nullable Output<String> partnerId;
        private @Nullable Output<String> tenantId;
        private @Nullable Output<Boolean> useCli;
        private @Nullable Output<Boolean> useMsi;

        public Builder() {
    	      // Empty
        }

        public Builder(ProviderArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.clientCertificate = defaults.clientCertificate;
    	      this.clientCertificatePassword = defaults.clientCertificatePassword;
    	      this.clientCertificatePath = defaults.clientCertificatePath;
    	      this.clientId = defaults.clientId;
    	      this.clientSecret = defaults.clientSecret;
    	      this.disableTerraformPartnerId = defaults.disableTerraformPartnerId;
    	      this.environment = defaults.environment;
    	      this.msiEndpoint = defaults.msiEndpoint;
    	      this.partnerId = defaults.partnerId;
    	      this.tenantId = defaults.tenantId;
    	      this.useCli = defaults.useCli;
    	      this.useMsi = defaults.useMsi;
        }

        public Builder clientCertificate(@Nullable Output<String> clientCertificate) {
            this.clientCertificate = clientCertificate;
            return this;
        }
        public Builder clientCertificate(@Nullable String clientCertificate) {
            this.clientCertificate = Codegen.ofNullable(clientCertificate);
            return this;
        }
        public Builder clientCertificatePassword(@Nullable Output<String> clientCertificatePassword) {
            this.clientCertificatePassword = clientCertificatePassword;
            return this;
        }
        public Builder clientCertificatePassword(@Nullable String clientCertificatePassword) {
            this.clientCertificatePassword = Codegen.ofNullable(clientCertificatePassword);
            return this;
        }
        public Builder clientCertificatePath(@Nullable Output<String> clientCertificatePath) {
            this.clientCertificatePath = clientCertificatePath;
            return this;
        }
        public Builder clientCertificatePath(@Nullable String clientCertificatePath) {
            this.clientCertificatePath = Codegen.ofNullable(clientCertificatePath);
            return this;
        }
        public Builder clientId(@Nullable Output<String> clientId) {
            this.clientId = clientId;
            return this;
        }
        public Builder clientId(@Nullable String clientId) {
            this.clientId = Codegen.ofNullable(clientId);
            return this;
        }
        public Builder clientSecret(@Nullable Output<String> clientSecret) {
            this.clientSecret = clientSecret;
            return this;
        }
        public Builder clientSecret(@Nullable String clientSecret) {
            this.clientSecret = Codegen.ofNullable(clientSecret);
            return this;
        }
        public Builder disableTerraformPartnerId(@Nullable Output<Boolean> disableTerraformPartnerId) {
            this.disableTerraformPartnerId = disableTerraformPartnerId;
            return this;
        }
        public Builder disableTerraformPartnerId(@Nullable Boolean disableTerraformPartnerId) {
            this.disableTerraformPartnerId = Codegen.ofNullable(disableTerraformPartnerId);
            return this;
        }
        public Builder environment(@Nullable Output<String> environment) {
            this.environment = environment;
            return this;
        }
        public Builder environment(@Nullable String environment) {
            this.environment = Codegen.ofNullable(environment);
            return this;
        }
        public Builder msiEndpoint(@Nullable Output<String> msiEndpoint) {
            this.msiEndpoint = msiEndpoint;
            return this;
        }
        public Builder msiEndpoint(@Nullable String msiEndpoint) {
            this.msiEndpoint = Codegen.ofNullable(msiEndpoint);
            return this;
        }
        public Builder partnerId(@Nullable Output<String> partnerId) {
            this.partnerId = partnerId;
            return this;
        }
        public Builder partnerId(@Nullable String partnerId) {
            this.partnerId = Codegen.ofNullable(partnerId);
            return this;
        }
        public Builder tenantId(@Nullable Output<String> tenantId) {
            this.tenantId = tenantId;
            return this;
        }
        public Builder tenantId(@Nullable String tenantId) {
            this.tenantId = Codegen.ofNullable(tenantId);
            return this;
        }
        public Builder useCli(@Nullable Output<Boolean> useCli) {
            this.useCli = useCli;
            return this;
        }
        public Builder useCli(@Nullable Boolean useCli) {
            this.useCli = Codegen.ofNullable(useCli);
            return this;
        }
        public Builder useMsi(@Nullable Output<Boolean> useMsi) {
            this.useMsi = useMsi;
            return this;
        }
        public Builder useMsi(@Nullable Boolean useMsi) {
            this.useMsi = Codegen.ofNullable(useMsi);
            return this;
        }        public ProviderArgs build() {
            return new ProviderArgs(clientCertificate, clientCertificatePassword, clientCertificatePath, clientId, clientSecret, disableTerraformPartnerId, environment, msiEndpoint, partnerId, tenantId, useCli, useMsi);
        }
    }
}
