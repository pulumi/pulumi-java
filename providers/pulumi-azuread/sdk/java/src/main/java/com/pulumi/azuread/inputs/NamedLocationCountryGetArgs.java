// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azuread.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class NamedLocationCountryGetArgs extends com.pulumi.resources.ResourceArgs {

    public static final NamedLocationCountryGetArgs Empty = new NamedLocationCountryGetArgs();

    /**
     * List of countries and/or regions in two-letter format specified by ISO 3166-2.
     * 
     */
    @Import(name="countriesAndRegions", required=true)
      private final Output<List<String>> countriesAndRegions;

    public Output<List<String>> countriesAndRegions() {
        return this.countriesAndRegions;
    }

    /**
     * Whether IP addresses that don't map to a country or region should be included in the named location. Defaults to `false`.
     * 
     */
    @Import(name="includeUnknownCountriesAndRegions")
      private final @Nullable Output<Boolean> includeUnknownCountriesAndRegions;

    public Output<Boolean> includeUnknownCountriesAndRegions() {
        return this.includeUnknownCountriesAndRegions == null ? Codegen.empty() : this.includeUnknownCountriesAndRegions;
    }

    public NamedLocationCountryGetArgs(
        Output<List<String>> countriesAndRegions,
        @Nullable Output<Boolean> includeUnknownCountriesAndRegions) {
        this.countriesAndRegions = Objects.requireNonNull(countriesAndRegions, "expected parameter 'countriesAndRegions' to be non-null");
        this.includeUnknownCountriesAndRegions = includeUnknownCountriesAndRegions;
    }

    private NamedLocationCountryGetArgs() {
        this.countriesAndRegions = Codegen.empty();
        this.includeUnknownCountriesAndRegions = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(NamedLocationCountryGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<List<String>> countriesAndRegions;
        private @Nullable Output<Boolean> includeUnknownCountriesAndRegions;

        public Builder() {
    	      // Empty
        }

        public Builder(NamedLocationCountryGetArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.countriesAndRegions = defaults.countriesAndRegions;
    	      this.includeUnknownCountriesAndRegions = defaults.includeUnknownCountriesAndRegions;
        }

        public Builder countriesAndRegions(Output<List<String>> countriesAndRegions) {
            this.countriesAndRegions = Objects.requireNonNull(countriesAndRegions);
            return this;
        }
        public Builder countriesAndRegions(List<String> countriesAndRegions) {
            this.countriesAndRegions = Output.of(Objects.requireNonNull(countriesAndRegions));
            return this;
        }
        public Builder countriesAndRegions(String... countriesAndRegions) {
            return countriesAndRegions(List.of(countriesAndRegions));
        }
        public Builder includeUnknownCountriesAndRegions(@Nullable Output<Boolean> includeUnknownCountriesAndRegions) {
            this.includeUnknownCountriesAndRegions = includeUnknownCountriesAndRegions;
            return this;
        }
        public Builder includeUnknownCountriesAndRegions(@Nullable Boolean includeUnknownCountriesAndRegions) {
            this.includeUnknownCountriesAndRegions = Codegen.ofNullable(includeUnknownCountriesAndRegions);
            return this;
        }        public NamedLocationCountryGetArgs build() {
            return new NamedLocationCountryGetArgs(countriesAndRegions, includeUnknownCountriesAndRegions);
        }
    }
}
