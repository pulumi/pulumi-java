// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azuread.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class GetApplicationTemplateArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetApplicationTemplateArgs Empty = new GetApplicationTemplateArgs();

    /**
     * Specifies the display name of the templated application.
     * 
     */
    @Import(name="displayName")
    private Output</* @Nullable */ String> displayName;

    /**
     * @return Specifies the display name of the templated application.
     * 
     */
    public Output</* @Nullable */ String> displayName() {
        return this.displayName;
    }

    /**
     * Specifies the ID of the templated application.
     * 
     */
    @Import(name="templateId")
    private Output</* @Nullable */ String> templateId;

    /**
     * @return Specifies the ID of the templated application.
     * 
     */
    public Output</* @Nullable */ String> templateId() {
        return this.templateId;
    }

    private GetApplicationTemplateArgs() {}

    private GetApplicationTemplateArgs(GetApplicationTemplateArgs $) {
        this.displayName = $.displayName;
        this.templateId = $.templateId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetApplicationTemplateArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetApplicationTemplateArgs $;

        public Builder() {
            $ = new GetApplicationTemplateArgs();
        }

        public Builder(GetApplicationTemplateArgs defaults) {
            $ = new GetApplicationTemplateArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param displayName Specifies the display name of the templated application.
         * 
         * @return builder
         * 
         */
        public Builder displayName(Output</* @Nullable */ String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName Specifies the display name of the templated application.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param templateId Specifies the ID of the templated application.
         * 
         * @return builder
         * 
         */
        public Builder templateId(Output</* @Nullable */ String> templateId) {
            $.templateId = templateId;
            return this;
        }

        /**
         * @param templateId Specifies the ID of the templated application.
         * 
         * @return builder
         * 
         */
        public Builder templateId(@Nullable String templateId) {
            return templateId(Output.of(templateId));
        }

        public GetApplicationTemplateArgs build() {
            return $;
        }
    }

}
