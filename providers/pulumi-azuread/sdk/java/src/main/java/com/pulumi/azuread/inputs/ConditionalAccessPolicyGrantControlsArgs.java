// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azuread.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ConditionalAccessPolicyGrantControlsArgs extends com.pulumi.resources.ResourceArgs {

    public static final ConditionalAccessPolicyGrantControlsArgs Empty = new ConditionalAccessPolicyGrantControlsArgs();

    /**
     * List of built-in controls required by the policy. Possible values are: `block`, `mfa`, `approvedApplication`, `compliantApplication`, `compliantDevice`, `domainJoinedDevice`, `passwordChange` or `unknownFutureValue`.
     * 
     */
    @Import(name="builtInControls", required=true)
    private Output<List<String>> builtInControls;

    /**
     * @return List of built-in controls required by the policy. Possible values are: `block`, `mfa`, `approvedApplication`, `compliantApplication`, `compliantDevice`, `domainJoinedDevice`, `passwordChange` or `unknownFutureValue`.
     * 
     */
    public Output<List<String>> builtInControls() {
        return this.builtInControls;
    }

    /**
     * List of custom controls IDs required by the policy.
     * 
     */
    @Import(name="customAuthenticationFactors")
    private @Nullable Output<List<String>> customAuthenticationFactors;

    /**
     * @return List of custom controls IDs required by the policy.
     * 
     */
    public Optional<Output<List<String>>> customAuthenticationFactors() {
        return Optional.ofNullable(this.customAuthenticationFactors);
    }

    /**
     * Defines the relationship of the grant controls. Possible values are: `AND`, `OR`.
     * 
     */
    @Import(name="operator", required=true)
    private Output<String> operator;

    /**
     * @return Defines the relationship of the grant controls. Possible values are: `AND`, `OR`.
     * 
     */
    public Output<String> operator() {
        return this.operator;
    }

    /**
     * List of terms of use IDs required by the policy.
     * 
     */
    @Import(name="termsOfUses")
    private @Nullable Output<List<String>> termsOfUses;

    /**
     * @return List of terms of use IDs required by the policy.
     * 
     */
    public Optional<Output<List<String>>> termsOfUses() {
        return Optional.ofNullable(this.termsOfUses);
    }

    private ConditionalAccessPolicyGrantControlsArgs() {}

    private ConditionalAccessPolicyGrantControlsArgs(ConditionalAccessPolicyGrantControlsArgs $) {
        this.builtInControls = $.builtInControls;
        this.customAuthenticationFactors = $.customAuthenticationFactors;
        this.operator = $.operator;
        this.termsOfUses = $.termsOfUses;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ConditionalAccessPolicyGrantControlsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ConditionalAccessPolicyGrantControlsArgs $;

        public Builder() {
            $ = new ConditionalAccessPolicyGrantControlsArgs();
        }

        public Builder(ConditionalAccessPolicyGrantControlsArgs defaults) {
            $ = new ConditionalAccessPolicyGrantControlsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param builtInControls List of built-in controls required by the policy. Possible values are: `block`, `mfa`, `approvedApplication`, `compliantApplication`, `compliantDevice`, `domainJoinedDevice`, `passwordChange` or `unknownFutureValue`.
         * 
         * @return builder
         * 
         */
        public Builder builtInControls(Output<List<String>> builtInControls) {
            $.builtInControls = builtInControls;
            return this;
        }

        /**
         * @param builtInControls List of built-in controls required by the policy. Possible values are: `block`, `mfa`, `approvedApplication`, `compliantApplication`, `compliantDevice`, `domainJoinedDevice`, `passwordChange` or `unknownFutureValue`.
         * 
         * @return builder
         * 
         */
        public Builder builtInControls(List<String> builtInControls) {
            return builtInControls(Output.of(builtInControls));
        }

        /**
         * @param builtInControls List of built-in controls required by the policy. Possible values are: `block`, `mfa`, `approvedApplication`, `compliantApplication`, `compliantDevice`, `domainJoinedDevice`, `passwordChange` or `unknownFutureValue`.
         * 
         * @return builder
         * 
         */
        public Builder builtInControls(String... builtInControls) {
            return builtInControls(List.of(builtInControls));
        }

        /**
         * @param customAuthenticationFactors List of custom controls IDs required by the policy.
         * 
         * @return builder
         * 
         */
        public Builder customAuthenticationFactors(@Nullable Output<List<String>> customAuthenticationFactors) {
            $.customAuthenticationFactors = customAuthenticationFactors;
            return this;
        }

        /**
         * @param customAuthenticationFactors List of custom controls IDs required by the policy.
         * 
         * @return builder
         * 
         */
        public Builder customAuthenticationFactors(List<String> customAuthenticationFactors) {
            return customAuthenticationFactors(Output.of(customAuthenticationFactors));
        }

        /**
         * @param customAuthenticationFactors List of custom controls IDs required by the policy.
         * 
         * @return builder
         * 
         */
        public Builder customAuthenticationFactors(String... customAuthenticationFactors) {
            return customAuthenticationFactors(List.of(customAuthenticationFactors));
        }

        /**
         * @param operator Defines the relationship of the grant controls. Possible values are: `AND`, `OR`.
         * 
         * @return builder
         * 
         */
        public Builder operator(Output<String> operator) {
            $.operator = operator;
            return this;
        }

        /**
         * @param operator Defines the relationship of the grant controls. Possible values are: `AND`, `OR`.
         * 
         * @return builder
         * 
         */
        public Builder operator(String operator) {
            return operator(Output.of(operator));
        }

        /**
         * @param termsOfUses List of terms of use IDs required by the policy.
         * 
         * @return builder
         * 
         */
        public Builder termsOfUses(@Nullable Output<List<String>> termsOfUses) {
            $.termsOfUses = termsOfUses;
            return this;
        }

        /**
         * @param termsOfUses List of terms of use IDs required by the policy.
         * 
         * @return builder
         * 
         */
        public Builder termsOfUses(List<String> termsOfUses) {
            return termsOfUses(Output.of(termsOfUses));
        }

        /**
         * @param termsOfUses List of terms of use IDs required by the policy.
         * 
         * @return builder
         * 
         */
        public Builder termsOfUses(String... termsOfUses) {
            return termsOfUses(List.of(termsOfUses));
        }

        public ConditionalAccessPolicyGrantControlsArgs build() {
            $.builtInControls = Objects.requireNonNull($.builtInControls, "expected parameter 'builtInControls' to be non-null");
            $.operator = Objects.requireNonNull($.operator, "expected parameter 'operator' to be non-null");
            return $;
        }
    }

}
