// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azuread.inputs;

import com.pulumi.azuread.inputs.ApplicationRequiredResourceAccessResourceAccessArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class ApplicationRequiredResourceAccessArgs extends com.pulumi.resources.ResourceArgs {

    public static final ApplicationRequiredResourceAccessArgs Empty = new ApplicationRequiredResourceAccessArgs();

    /**
     * A collection of `resource_access` blocks as documented below, describing OAuth2.0 permission scopes and app roles that the application requires from the specified resource.
     * 
     */
    @Import(name="resourceAccesses", required=true)
    private Output<List<ApplicationRequiredResourceAccessResourceAccessArgs>> resourceAccesses;

    /**
     * @return A collection of `resource_access` blocks as documented below, describing OAuth2.0 permission scopes and app roles that the application requires from the specified resource.
     * 
     */
    public Output<List<ApplicationRequiredResourceAccessResourceAccessArgs>> resourceAccesses() {
        return this.resourceAccesses;
    }

    /**
     * The unique identifier for the resource that the application requires access to. This should be the Application ID of the target application.
     * 
     */
    @Import(name="resourceAppId", required=true)
    private Output<String> resourceAppId;

    /**
     * @return The unique identifier for the resource that the application requires access to. This should be the Application ID of the target application.
     * 
     */
    public Output<String> resourceAppId() {
        return this.resourceAppId;
    }

    private ApplicationRequiredResourceAccessArgs() {}

    private ApplicationRequiredResourceAccessArgs(ApplicationRequiredResourceAccessArgs $) {
        this.resourceAccesses = $.resourceAccesses;
        this.resourceAppId = $.resourceAppId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ApplicationRequiredResourceAccessArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApplicationRequiredResourceAccessArgs $;

        public Builder() {
            $ = new ApplicationRequiredResourceAccessArgs();
        }

        public Builder(ApplicationRequiredResourceAccessArgs defaults) {
            $ = new ApplicationRequiredResourceAccessArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param resourceAccesses A collection of `resource_access` blocks as documented below, describing OAuth2.0 permission scopes and app roles that the application requires from the specified resource.
         * 
         * @return builder
         * 
         */
        public Builder resourceAccesses(Output<List<ApplicationRequiredResourceAccessResourceAccessArgs>> resourceAccesses) {
            $.resourceAccesses = resourceAccesses;
            return this;
        }

        /**
         * @param resourceAccesses A collection of `resource_access` blocks as documented below, describing OAuth2.0 permission scopes and app roles that the application requires from the specified resource.
         * 
         * @return builder
         * 
         */
        public Builder resourceAccesses(List<ApplicationRequiredResourceAccessResourceAccessArgs> resourceAccesses) {
            return resourceAccesses(Output.of(resourceAccesses));
        }

        /**
         * @param resourceAccesses A collection of `resource_access` blocks as documented below, describing OAuth2.0 permission scopes and app roles that the application requires from the specified resource.
         * 
         * @return builder
         * 
         */
        public Builder resourceAccesses(ApplicationRequiredResourceAccessResourceAccessArgs... resourceAccesses) {
            return resourceAccesses(List.of(resourceAccesses));
        }

        /**
         * @param resourceAppId The unique identifier for the resource that the application requires access to. This should be the Application ID of the target application.
         * 
         * @return builder
         * 
         */
        public Builder resourceAppId(Output<String> resourceAppId) {
            $.resourceAppId = resourceAppId;
            return this;
        }

        /**
         * @param resourceAppId The unique identifier for the resource that the application requires access to. This should be the Application ID of the target application.
         * 
         * @return builder
         * 
         */
        public Builder resourceAppId(String resourceAppId) {
            return resourceAppId(Output.of(resourceAppId));
        }

        public ApplicationRequiredResourceAccessArgs build() {
            $.resourceAccesses = Objects.requireNonNull($.resourceAccesses, "expected parameter 'resourceAccesses' to be non-null");
            $.resourceAppId = Objects.requireNonNull($.resourceAppId, "expected parameter 'resourceAppId' to be non-null");
            return $;
        }
    }

}
