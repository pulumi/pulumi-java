// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azuread.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ApplicationWebImplicitGrantArgs extends com.pulumi.resources.ResourceArgs {

    public static final ApplicationWebImplicitGrantArgs Empty = new ApplicationWebImplicitGrantArgs();

    /**
     * Whether this web application can request an access token using OAuth 2.0 implicit flow.
     * 
     */
    @Import(name="accessTokenIssuanceEnabled")
    private @Nullable Output<Boolean> accessTokenIssuanceEnabled;

    /**
     * @return Whether this web application can request an access token using OAuth 2.0 implicit flow.
     * 
     */
    public Optional<Output<Boolean>> accessTokenIssuanceEnabled() {
        return Optional.ofNullable(this.accessTokenIssuanceEnabled);
    }

    /**
     * Whether this web application can request an ID token using OAuth 2.0 implicit flow.
     * 
     */
    @Import(name="idTokenIssuanceEnabled")
    private @Nullable Output<Boolean> idTokenIssuanceEnabled;

    /**
     * @return Whether this web application can request an ID token using OAuth 2.0 implicit flow.
     * 
     */
    public Optional<Output<Boolean>> idTokenIssuanceEnabled() {
        return Optional.ofNullable(this.idTokenIssuanceEnabled);
    }

    private ApplicationWebImplicitGrantArgs() {}

    private ApplicationWebImplicitGrantArgs(ApplicationWebImplicitGrantArgs $) {
        this.accessTokenIssuanceEnabled = $.accessTokenIssuanceEnabled;
        this.idTokenIssuanceEnabled = $.idTokenIssuanceEnabled;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ApplicationWebImplicitGrantArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApplicationWebImplicitGrantArgs $;

        public Builder() {
            $ = new ApplicationWebImplicitGrantArgs();
        }

        public Builder(ApplicationWebImplicitGrantArgs defaults) {
            $ = new ApplicationWebImplicitGrantArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accessTokenIssuanceEnabled Whether this web application can request an access token using OAuth 2.0 implicit flow.
         * 
         * @return builder
         * 
         */
        public Builder accessTokenIssuanceEnabled(@Nullable Output<Boolean> accessTokenIssuanceEnabled) {
            $.accessTokenIssuanceEnabled = accessTokenIssuanceEnabled;
            return this;
        }

        /**
         * @param accessTokenIssuanceEnabled Whether this web application can request an access token using OAuth 2.0 implicit flow.
         * 
         * @return builder
         * 
         */
        public Builder accessTokenIssuanceEnabled(Boolean accessTokenIssuanceEnabled) {
            return accessTokenIssuanceEnabled(Output.of(accessTokenIssuanceEnabled));
        }

        /**
         * @param idTokenIssuanceEnabled Whether this web application can request an ID token using OAuth 2.0 implicit flow.
         * 
         * @return builder
         * 
         */
        public Builder idTokenIssuanceEnabled(@Nullable Output<Boolean> idTokenIssuanceEnabled) {
            $.idTokenIssuanceEnabled = idTokenIssuanceEnabled;
            return this;
        }

        /**
         * @param idTokenIssuanceEnabled Whether this web application can request an ID token using OAuth 2.0 implicit flow.
         * 
         * @return builder
         * 
         */
        public Builder idTokenIssuanceEnabled(Boolean idTokenIssuanceEnabled) {
            return idTokenIssuanceEnabled(Output.of(idTokenIssuanceEnabled));
        }

        public ApplicationWebImplicitGrantArgs build() {
            return $;
        }
    }

}
