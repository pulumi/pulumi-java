// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azuread.inputs;

import com.pulumi.azuread.inputs.GetApplicationRequiredResourceAccessResourceAccess;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class GetApplicationRequiredResourceAccess extends com.pulumi.resources.InvokeArgs {

    public static final GetApplicationRequiredResourceAccess Empty = new GetApplicationRequiredResourceAccess();

    /**
     * A collection of `resource_access` blocks as documented below, describing OAuth2.0 permission scopes and app roles that the application requires from the specified resource.
     * 
     */
    @Import(name="resourceAccesses", required=true)
      private final List<GetApplicationRequiredResourceAccessResourceAccess> resourceAccesses;

    public List<GetApplicationRequiredResourceAccessResourceAccess> resourceAccesses() {
        return this.resourceAccesses;
    }

    /**
     * The unique identifier for the resource that the application requires access to. This is the Application ID of the target application.
     * 
     */
    @Import(name="resourceAppId", required=true)
      private final String resourceAppId;

    public String resourceAppId() {
        return this.resourceAppId;
    }

    public GetApplicationRequiredResourceAccess(
        List<GetApplicationRequiredResourceAccessResourceAccess> resourceAccesses,
        String resourceAppId) {
        this.resourceAccesses = Objects.requireNonNull(resourceAccesses, "expected parameter 'resourceAccesses' to be non-null");
        this.resourceAppId = Objects.requireNonNull(resourceAppId, "expected parameter 'resourceAppId' to be non-null");
    }

    private GetApplicationRequiredResourceAccess() {
        this.resourceAccesses = List.of();
        this.resourceAppId = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetApplicationRequiredResourceAccess defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<GetApplicationRequiredResourceAccessResourceAccess> resourceAccesses;
        private String resourceAppId;

        public Builder() {
    	      // Empty
        }

        public Builder(GetApplicationRequiredResourceAccess defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.resourceAccesses = defaults.resourceAccesses;
    	      this.resourceAppId = defaults.resourceAppId;
        }

        public Builder resourceAccesses(List<GetApplicationRequiredResourceAccessResourceAccess> resourceAccesses) {
            this.resourceAccesses = Objects.requireNonNull(resourceAccesses);
            return this;
        }
        public Builder resourceAccesses(GetApplicationRequiredResourceAccessResourceAccess... resourceAccesses) {
            return resourceAccesses(List.of(resourceAccesses));
        }
        public Builder resourceAppId(String resourceAppId) {
            this.resourceAppId = Objects.requireNonNull(resourceAppId);
            return this;
        }        public GetApplicationRequiredResourceAccess build() {
            return new GetApplicationRequiredResourceAccess(resourceAccesses, resourceAppId);
        }
    }
}
