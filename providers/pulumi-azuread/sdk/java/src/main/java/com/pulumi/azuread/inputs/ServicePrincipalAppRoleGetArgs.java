// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azuread.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ServicePrincipalAppRoleGetArgs extends com.pulumi.resources.ResourceArgs {

    public static final ServicePrincipalAppRoleGetArgs Empty = new ServicePrincipalAppRoleGetArgs();

    /**
     * Specifies whether this app role definition can be assigned to users and groups, or to other applications (that are accessing this application in a standalone scenario). Possible values are: `User` and `Application`, or both.
     * 
     */
    @Import(name="allowedMemberTypes")
      private final @Nullable Output<List<String>> allowedMemberTypes;

    public Output<List<String>> allowedMemberTypes() {
        return this.allowedMemberTypes == null ? Codegen.empty() : this.allowedMemberTypes;
    }

    /**
     * A description of the service principal provided for internal end-users.
     * 
     */
    @Import(name="description")
      private final @Nullable Output<String> description;

    public Output<String> description() {
        return this.description == null ? Codegen.empty() : this.description;
    }

    /**
     * Display name for the app role that appears during app role assignment and in consent experiences.
     * 
     */
    @Import(name="displayName")
      private final @Nullable Output<String> displayName;

    public Output<String> displayName() {
        return this.displayName == null ? Codegen.empty() : this.displayName;
    }

    /**
     * Specifies whether the permission scope is enabled.
     * 
     */
    @Import(name="enabled")
      private final @Nullable Output<Boolean> enabled;

    public Output<Boolean> enabled() {
        return this.enabled == null ? Codegen.empty() : this.enabled;
    }

    /**
     * The unique identifier of the delegated permission.
     * 
     */
    @Import(name="id")
      private final @Nullable Output<String> id;

    public Output<String> id() {
        return this.id == null ? Codegen.empty() : this.id;
    }

    /**
     * The value that is used for the `scp` claim in OAuth 2.0 access tokens.
     * 
     */
    @Import(name="value")
      private final @Nullable Output<String> value;

    public Output<String> value() {
        return this.value == null ? Codegen.empty() : this.value;
    }

    public ServicePrincipalAppRoleGetArgs(
        @Nullable Output<List<String>> allowedMemberTypes,
        @Nullable Output<String> description,
        @Nullable Output<String> displayName,
        @Nullable Output<Boolean> enabled,
        @Nullable Output<String> id,
        @Nullable Output<String> value) {
        this.allowedMemberTypes = allowedMemberTypes;
        this.description = description;
        this.displayName = displayName;
        this.enabled = enabled;
        this.id = id;
        this.value = value;
    }

    private ServicePrincipalAppRoleGetArgs() {
        this.allowedMemberTypes = Codegen.empty();
        this.description = Codegen.empty();
        this.displayName = Codegen.empty();
        this.enabled = Codegen.empty();
        this.id = Codegen.empty();
        this.value = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ServicePrincipalAppRoleGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<List<String>> allowedMemberTypes;
        private @Nullable Output<String> description;
        private @Nullable Output<String> displayName;
        private @Nullable Output<Boolean> enabled;
        private @Nullable Output<String> id;
        private @Nullable Output<String> value;

        public Builder() {
    	      // Empty
        }

        public Builder(ServicePrincipalAppRoleGetArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allowedMemberTypes = defaults.allowedMemberTypes;
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.enabled = defaults.enabled;
    	      this.id = defaults.id;
    	      this.value = defaults.value;
        }

        public Builder allowedMemberTypes(@Nullable Output<List<String>> allowedMemberTypes) {
            this.allowedMemberTypes = allowedMemberTypes;
            return this;
        }
        public Builder allowedMemberTypes(@Nullable List<String> allowedMemberTypes) {
            this.allowedMemberTypes = Codegen.ofNullable(allowedMemberTypes);
            return this;
        }
        public Builder allowedMemberTypes(String... allowedMemberTypes) {
            return allowedMemberTypes(List.of(allowedMemberTypes));
        }
        public Builder description(@Nullable Output<String> description) {
            this.description = description;
            return this;
        }
        public Builder description(@Nullable String description) {
            this.description = Codegen.ofNullable(description);
            return this;
        }
        public Builder displayName(@Nullable Output<String> displayName) {
            this.displayName = displayName;
            return this;
        }
        public Builder displayName(@Nullable String displayName) {
            this.displayName = Codegen.ofNullable(displayName);
            return this;
        }
        public Builder enabled(@Nullable Output<Boolean> enabled) {
            this.enabled = enabled;
            return this;
        }
        public Builder enabled(@Nullable Boolean enabled) {
            this.enabled = Codegen.ofNullable(enabled);
            return this;
        }
        public Builder id(@Nullable Output<String> id) {
            this.id = id;
            return this;
        }
        public Builder id(@Nullable String id) {
            this.id = Codegen.ofNullable(id);
            return this;
        }
        public Builder value(@Nullable Output<String> value) {
            this.value = value;
            return this;
        }
        public Builder value(@Nullable String value) {
            this.value = Codegen.ofNullable(value);
            return this;
        }        public ServicePrincipalAppRoleGetArgs build() {
            return new ServicePrincipalAppRoleGetArgs(allowedMemberTypes, description, displayName, enabled, id, value);
        }
    }
}
