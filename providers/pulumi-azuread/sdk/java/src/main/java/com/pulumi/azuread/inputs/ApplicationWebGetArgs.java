// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azuread.inputs;

import com.pulumi.azuread.inputs.ApplicationWebImplicitGrantGetArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ApplicationWebGetArgs extends com.pulumi.resources.ResourceArgs {

    public static final ApplicationWebGetArgs Empty = new ApplicationWebGetArgs();

    /**
     * Home page or landing page of the application.
     * 
     */
    @Import(name="homepageUrl")
      private final @Nullable Output<String> homepageUrl;

    public Output<String> homepageUrl() {
        return this.homepageUrl == null ? Codegen.empty() : this.homepageUrl;
    }

    /**
     * An `implicit_grant` block as documented above.
     * 
     */
    @Import(name="implicitGrant")
      private final @Nullable Output<ApplicationWebImplicitGrantGetArgs> implicitGrant;

    public Output<ApplicationWebImplicitGrantGetArgs> implicitGrant() {
        return this.implicitGrant == null ? Codegen.empty() : this.implicitGrant;
    }

    /**
     * The URL that will be used by Microsoft's authorization service to sign out a user using front-channel, back-channel or SAML logout protocols.
     * 
     */
    @Import(name="logoutUrl")
      private final @Nullable Output<String> logoutUrl;

    public Output<String> logoutUrl() {
        return this.logoutUrl == null ? Codegen.empty() : this.logoutUrl;
    }

    /**
     * A set of URLs where user tokens are sent for sign-in, or the redirect URIs where OAuth 2.0 authorization codes and access tokens are sent. Must be a valid `http` URL or a URN.
     * 
     */
    @Import(name="redirectUris")
      private final @Nullable Output<List<String>> redirectUris;

    public Output<List<String>> redirectUris() {
        return this.redirectUris == null ? Codegen.empty() : this.redirectUris;
    }

    public ApplicationWebGetArgs(
        @Nullable Output<String> homepageUrl,
        @Nullable Output<ApplicationWebImplicitGrantGetArgs> implicitGrant,
        @Nullable Output<String> logoutUrl,
        @Nullable Output<List<String>> redirectUris) {
        this.homepageUrl = homepageUrl;
        this.implicitGrant = implicitGrant;
        this.logoutUrl = logoutUrl;
        this.redirectUris = redirectUris;
    }

    private ApplicationWebGetArgs() {
        this.homepageUrl = Codegen.empty();
        this.implicitGrant = Codegen.empty();
        this.logoutUrl = Codegen.empty();
        this.redirectUris = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ApplicationWebGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> homepageUrl;
        private @Nullable Output<ApplicationWebImplicitGrantGetArgs> implicitGrant;
        private @Nullable Output<String> logoutUrl;
        private @Nullable Output<List<String>> redirectUris;

        public Builder() {
    	      // Empty
        }

        public Builder(ApplicationWebGetArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.homepageUrl = defaults.homepageUrl;
    	      this.implicitGrant = defaults.implicitGrant;
    	      this.logoutUrl = defaults.logoutUrl;
    	      this.redirectUris = defaults.redirectUris;
        }

        public Builder homepageUrl(@Nullable Output<String> homepageUrl) {
            this.homepageUrl = homepageUrl;
            return this;
        }
        public Builder homepageUrl(@Nullable String homepageUrl) {
            this.homepageUrl = Codegen.ofNullable(homepageUrl);
            return this;
        }
        public Builder implicitGrant(@Nullable Output<ApplicationWebImplicitGrantGetArgs> implicitGrant) {
            this.implicitGrant = implicitGrant;
            return this;
        }
        public Builder implicitGrant(@Nullable ApplicationWebImplicitGrantGetArgs implicitGrant) {
            this.implicitGrant = Codegen.ofNullable(implicitGrant);
            return this;
        }
        public Builder logoutUrl(@Nullable Output<String> logoutUrl) {
            this.logoutUrl = logoutUrl;
            return this;
        }
        public Builder logoutUrl(@Nullable String logoutUrl) {
            this.logoutUrl = Codegen.ofNullable(logoutUrl);
            return this;
        }
        public Builder redirectUris(@Nullable Output<List<String>> redirectUris) {
            this.redirectUris = redirectUris;
            return this;
        }
        public Builder redirectUris(@Nullable List<String> redirectUris) {
            this.redirectUris = Codegen.ofNullable(redirectUris);
            return this;
        }
        public Builder redirectUris(String... redirectUris) {
            return redirectUris(List.of(redirectUris));
        }        public ApplicationWebGetArgs build() {
            return new ApplicationWebGetArgs(homepageUrl, implicitGrant, logoutUrl, redirectUris);
        }
    }
}
