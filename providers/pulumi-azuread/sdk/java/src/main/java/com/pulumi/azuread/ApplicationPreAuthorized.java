// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azuread;

import com.pulumi.azuread.ApplicationPreAuthorizedArgs;
import com.pulumi.azuread.Utilities;
import com.pulumi.azuread.inputs.ApplicationPreAuthorizedState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import java.util.*;
 * import java.io.*;
 * import java.nio.*;
 * import com.pulumi.*;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var authorized = new Application(&#34;authorized&#34;, ApplicationArgs.builder()        
 *             .displayName(&#34;example-authorized-app&#34;)
 *             .build());
 * 
 *         var authorizer = new Application(&#34;authorizer&#34;, ApplicationArgs.builder()        
 *             .displayName(&#34;example-authorizing-app&#34;)
 *             .api(ApplicationApi.builder()
 *                 .oauth2PermissionScopes(                
 *                     ApplicationApiOauth2PermissionScope.builder()
 *                         .adminConsentDescription(&#34;Administer the application&#34;)
 *                         .adminConsentDisplayName(&#34;Administer&#34;)
 *                         .enabled(true)
 *                         .id(&#34;ced9c4c3-c273-4f0f-ac71-a20377b90f9c&#34;)
 *                         .type(&#34;Admin&#34;)
 *                         .value(&#34;administer&#34;)
 *                         .build(),
 *                     ApplicationApiOauth2PermissionScope.builder()
 *                         .adminConsentDescription(&#34;Access the application&#34;)
 *                         .adminConsentDisplayName(&#34;Access&#34;)
 *                         .enabled(true)
 *                         .id(&#34;2d5e07ca-664d-4d9b-ad61-ec07fd215213&#34;)
 *                         .type(&#34;User&#34;)
 *                         .userConsentDescription(&#34;Access the application&#34;)
 *                         .userConsentDisplayName(&#34;Access&#34;)
 *                         .value(&#34;user_impersonation&#34;)
 *                         .build())
 *                 .build())
 *             .build());
 * 
 *         var example = new ApplicationPreAuthorized(&#34;example&#34;, ApplicationPreAuthorizedArgs.builder()        
 *             .applicationObjectId(authorizer.getObjectId())
 *             .authorizedAppId(authorized.getApplicationId())
 *             .permissionIds(            
 *                 &#34;ced9c4c3-c273-4f0f-ac71-a20377b90f9c&#34;,
 *                 &#34;2d5e07ca-664d-4d9b-ad61-ec07fd215213&#34;)
 *             .build());
 * 
 *         }
 * }
 * ```
 * 
 * ## Import
 * 
 * Pre-authorized applications can be imported using the object ID of the authorizing application and the application ID of the application being authorized, e.g.
 * 
 * ```sh
 *  $ pulumi import azuread:index/applicationPreAuthorized:ApplicationPreAuthorized example 00000000-0000-0000-0000-000000000000/preAuthorizedApplication/11111111-1111-1111-1111-111111111111
 * ```
 * 
 *  -&gt; This ID format is unique to Terraform and is composed of the authorizing application&#39;s object ID, the string &#34;preAuthorizedApplication&#34; and the authorized application&#39;s application ID (client ID) in the format `{ObjectId}/preAuthorizedApplication/{ApplicationId}`.
 * 
 */
@ResourceType(type="azuread:index/applicationPreAuthorized:ApplicationPreAuthorized")
public class ApplicationPreAuthorized extends com.pulumi.resources.CustomResource {
    /**
     * The object ID of the application for which permissions are being authorized. Changing this field forces a new resource to be created.
     * 
     */
    @Export(name="applicationObjectId", type=String.class, parameters={})
    private Output<String> applicationObjectId;

    /**
     * @return The object ID of the application for which permissions are being authorized. Changing this field forces a new resource to be created.
     * 
     */
    public Output<String> applicationObjectId() {
        return this.applicationObjectId;
    }
    /**
     * The application ID of the pre-authorized application
     * 
     */
    @Export(name="authorizedAppId", type=String.class, parameters={})
    private Output<String> authorizedAppId;

    /**
     * @return The application ID of the pre-authorized application
     * 
     */
    public Output<String> authorizedAppId() {
        return this.authorizedAppId;
    }
    /**
     * A set of permission scope IDs required by the authorized application.
     * 
     */
    @Export(name="permissionIds", type=List.class, parameters={String.class})
    private Output<List<String>> permissionIds;

    /**
     * @return A set of permission scope IDs required by the authorized application.
     * 
     */
    public Output<List<String>> permissionIds() {
        return this.permissionIds;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ApplicationPreAuthorized(String name) {
        this(name, ApplicationPreAuthorizedArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ApplicationPreAuthorized(String name, ApplicationPreAuthorizedArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ApplicationPreAuthorized(String name, ApplicationPreAuthorizedArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azuread:index/applicationPreAuthorized:ApplicationPreAuthorized", name, args == null ? ApplicationPreAuthorizedArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private ApplicationPreAuthorized(String name, Output<String> id, @Nullable ApplicationPreAuthorizedState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azuread:index/applicationPreAuthorized:ApplicationPreAuthorized", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ApplicationPreAuthorized get(String name, Output<String> id, @Nullable ApplicationPreAuthorizedState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ApplicationPreAuthorized(name, id, state, options);
    }
}
