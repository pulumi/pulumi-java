// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azuread.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetGroupsArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetGroupsArgs Empty = new GetGroupsArgs();

    /**
     * A common display name prefix to match when returning groups.
     * 
     */
    @Import(name="displayNamePrefix")
      private final @Nullable String displayNamePrefix;

    public Optional<String> displayNamePrefix() {
        return this.displayNamePrefix == null ? Optional.empty() : Optional.ofNullable(this.displayNamePrefix);
    }

    /**
     * The display names of the groups.
     * 
     */
    @Import(name="displayNames")
      private final @Nullable List<String> displayNames;

    public List<String> displayNames() {
        return this.displayNames == null ? List.of() : this.displayNames;
    }

    /**
     * Whether the returned groups should be mail-enabled. By itself this does not exclude security-enabled groups. Setting this to `true` ensures all groups are mail-enabled, and setting to `false` ensures that all groups are _not_ mail-enabled. To ignore this filter, omit the property or set it to null. Cannot be specified together with `object_ids`.
     * 
     */
    @Import(name="mailEnabled")
      private final @Nullable Boolean mailEnabled;

    public Optional<Boolean> mailEnabled() {
        return this.mailEnabled == null ? Optional.empty() : Optional.ofNullable(this.mailEnabled);
    }

    /**
     * The object IDs of the groups.
     * 
     */
    @Import(name="objectIds")
      private final @Nullable List<String> objectIds;

    public List<String> objectIds() {
        return this.objectIds == null ? List.of() : this.objectIds;
    }

    /**
     * A flag to denote if all groups should be fetched and returned.
     * 
     */
    @Import(name="returnAll")
      private final @Nullable Boolean returnAll;

    public Optional<Boolean> returnAll() {
        return this.returnAll == null ? Optional.empty() : Optional.ofNullable(this.returnAll);
    }

    /**
     * Whether the returned groups should be security-enabled. By itself this does not exclude mail-enabled groups. Setting this to `true` ensures all groups are security-enabled, and setting to `false` ensures that all groups are _not_ security-enabled. To ignore this filter, omit the property or set it to null. Cannot be specified together with `object_ids`.
     * 
     */
    @Import(name="securityEnabled")
      private final @Nullable Boolean securityEnabled;

    public Optional<Boolean> securityEnabled() {
        return this.securityEnabled == null ? Optional.empty() : Optional.ofNullable(this.securityEnabled);
    }

    public GetGroupsArgs(
        @Nullable String displayNamePrefix,
        @Nullable List<String> displayNames,
        @Nullable Boolean mailEnabled,
        @Nullable List<String> objectIds,
        @Nullable Boolean returnAll,
        @Nullable Boolean securityEnabled) {
        this.displayNamePrefix = displayNamePrefix;
        this.displayNames = displayNames;
        this.mailEnabled = mailEnabled;
        this.objectIds = objectIds;
        this.returnAll = returnAll;
        this.securityEnabled = securityEnabled;
    }

    private GetGroupsArgs() {
        this.displayNamePrefix = null;
        this.displayNames = List.of();
        this.mailEnabled = null;
        this.objectIds = List.of();
        this.returnAll = null;
        this.securityEnabled = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetGroupsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String displayNamePrefix;
        private @Nullable List<String> displayNames;
        private @Nullable Boolean mailEnabled;
        private @Nullable List<String> objectIds;
        private @Nullable Boolean returnAll;
        private @Nullable Boolean securityEnabled;

        public Builder() {
    	      // Empty
        }

        public Builder(GetGroupsArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.displayNamePrefix = defaults.displayNamePrefix;
    	      this.displayNames = defaults.displayNames;
    	      this.mailEnabled = defaults.mailEnabled;
    	      this.objectIds = defaults.objectIds;
    	      this.returnAll = defaults.returnAll;
    	      this.securityEnabled = defaults.securityEnabled;
        }

        public Builder displayNamePrefix(@Nullable String displayNamePrefix) {
            this.displayNamePrefix = displayNamePrefix;
            return this;
        }
        public Builder displayNames(@Nullable List<String> displayNames) {
            this.displayNames = displayNames;
            return this;
        }
        public Builder displayNames(String... displayNames) {
            return displayNames(List.of(displayNames));
        }
        public Builder mailEnabled(@Nullable Boolean mailEnabled) {
            this.mailEnabled = mailEnabled;
            return this;
        }
        public Builder objectIds(@Nullable List<String> objectIds) {
            this.objectIds = objectIds;
            return this;
        }
        public Builder objectIds(String... objectIds) {
            return objectIds(List.of(objectIds));
        }
        public Builder returnAll(@Nullable Boolean returnAll) {
            this.returnAll = returnAll;
            return this;
        }
        public Builder securityEnabled(@Nullable Boolean securityEnabled) {
            this.securityEnabled = securityEnabled;
            return this;
        }        public GetGroupsArgs build() {
            return new GetGroupsArgs(displayNamePrefix, displayNames, mailEnabled, objectIds, returnAll, securityEnabled);
        }
    }
}
