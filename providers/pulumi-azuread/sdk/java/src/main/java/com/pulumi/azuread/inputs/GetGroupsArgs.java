// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azuread.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class GetGroupsArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetGroupsArgs Empty = new GetGroupsArgs();

    /**
     * A common display name prefix to match when returning groups.
     * 
     */
    @Import(name="displayNamePrefix")
    private Output</* @Nullable */ String> displayNamePrefix;

    /**
     * @return A common display name prefix to match when returning groups.
     * 
     */
    public Output</* @Nullable */ String> displayNamePrefix() {
        return this.displayNamePrefix;
    }

    /**
     * The display names of the groups.
     * 
     */
    @Import(name="displayNames")
    private Output</* @Nullable */ List<String>> displayNames;

    /**
     * @return The display names of the groups.
     * 
     */
    public Output</* @Nullable */ List<String>> displayNames() {
        return this.displayNames;
    }

    /**
     * Ignore missing groups and return groups that were found. The data source will still fail if no groups are found. Cannot be specified with `return_all`. Defaults to `false`.
     * 
     */
    @Import(name="ignoreMissing")
    private Output</* @Nullable */ Boolean> ignoreMissing;

    /**
     * @return Ignore missing groups and return groups that were found. The data source will still fail if no groups are found. Cannot be specified with `return_all`. Defaults to `false`.
     * 
     */
    public Output</* @Nullable */ Boolean> ignoreMissing() {
        return this.ignoreMissing;
    }

    /**
     * Whether the returned groups should be mail-enabled. By itself this does not exclude security-enabled groups. Setting this to `true` ensures all groups are mail-enabled, and setting to `false` ensures that all groups are _not_ mail-enabled. To ignore this filter, omit the property or set it to null. Cannot be specified together with `object_ids`.
     * 
     */
    @Import(name="mailEnabled")
    private Output</* @Nullable */ Boolean> mailEnabled;

    /**
     * @return Whether the returned groups should be mail-enabled. By itself this does not exclude security-enabled groups. Setting this to `true` ensures all groups are mail-enabled, and setting to `false` ensures that all groups are _not_ mail-enabled. To ignore this filter, omit the property or set it to null. Cannot be specified together with `object_ids`.
     * 
     */
    public Output</* @Nullable */ Boolean> mailEnabled() {
        return this.mailEnabled;
    }

    /**
     * The object IDs of the groups.
     * 
     */
    @Import(name="objectIds")
    private Output</* @Nullable */ List<String>> objectIds;

    /**
     * @return The object IDs of the groups.
     * 
     */
    public Output</* @Nullable */ List<String>> objectIds() {
        return this.objectIds;
    }

    /**
     * A flag to denote if all groups should be fetched and returned. Cannot be specified wth `ignore_missing`. Defaults to `false`.
     * 
     */
    @Import(name="returnAll")
    private Output</* @Nullable */ Boolean> returnAll;

    /**
     * @return A flag to denote if all groups should be fetched and returned. Cannot be specified wth `ignore_missing`. Defaults to `false`.
     * 
     */
    public Output</* @Nullable */ Boolean> returnAll() {
        return this.returnAll;
    }

    /**
     * Whether the returned groups should be security-enabled. By itself this does not exclude mail-enabled groups. Setting this to `true` ensures all groups are security-enabled, and setting to `false` ensures that all groups are _not_ security-enabled. To ignore this filter, omit the property or set it to null. Cannot be specified together with `object_ids`.
     * 
     */
    @Import(name="securityEnabled")
    private Output</* @Nullable */ Boolean> securityEnabled;

    /**
     * @return Whether the returned groups should be security-enabled. By itself this does not exclude mail-enabled groups. Setting this to `true` ensures all groups are security-enabled, and setting to `false` ensures that all groups are _not_ security-enabled. To ignore this filter, omit the property or set it to null. Cannot be specified together with `object_ids`.
     * 
     */
    public Output</* @Nullable */ Boolean> securityEnabled() {
        return this.securityEnabled;
    }

    private GetGroupsArgs() {}

    private GetGroupsArgs(GetGroupsArgs $) {
        this.displayNamePrefix = $.displayNamePrefix;
        this.displayNames = $.displayNames;
        this.ignoreMissing = $.ignoreMissing;
        this.mailEnabled = $.mailEnabled;
        this.objectIds = $.objectIds;
        this.returnAll = $.returnAll;
        this.securityEnabled = $.securityEnabled;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetGroupsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetGroupsArgs $;

        public Builder() {
            $ = new GetGroupsArgs();
        }

        public Builder(GetGroupsArgs defaults) {
            $ = new GetGroupsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param displayNamePrefix A common display name prefix to match when returning groups.
         * 
         * @return builder
         * 
         */
        public Builder displayNamePrefix(Output</* @Nullable */ String> displayNamePrefix) {
            $.displayNamePrefix = displayNamePrefix;
            return this;
        }

        /**
         * @param displayNamePrefix A common display name prefix to match when returning groups.
         * 
         * @return builder
         * 
         */
        public Builder displayNamePrefix(@Nullable String displayNamePrefix) {
            return displayNamePrefix(Output.of(displayNamePrefix));
        }

        /**
         * @param displayNames The display names of the groups.
         * 
         * @return builder
         * 
         */
        public Builder displayNames(Output</* @Nullable */ List<String>> displayNames) {
            $.displayNames = displayNames;
            return this;
        }

        /**
         * @param displayNames The display names of the groups.
         * 
         * @return builder
         * 
         */
        public Builder displayNames(@Nullable List<String> displayNames) {
            return displayNames(Output.of(displayNames));
        }

        /**
         * @param displayNames The display names of the groups.
         * 
         * @return builder
         * 
         */
        public Builder displayNames(String... displayNames) {
            return displayNames(List.of(displayNames));
        }

        /**
         * @param ignoreMissing Ignore missing groups and return groups that were found. The data source will still fail if no groups are found. Cannot be specified with `return_all`. Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder ignoreMissing(Output</* @Nullable */ Boolean> ignoreMissing) {
            $.ignoreMissing = ignoreMissing;
            return this;
        }

        /**
         * @param ignoreMissing Ignore missing groups and return groups that were found. The data source will still fail if no groups are found. Cannot be specified with `return_all`. Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder ignoreMissing(@Nullable Boolean ignoreMissing) {
            return ignoreMissing(Output.of(ignoreMissing));
        }

        /**
         * @param mailEnabled Whether the returned groups should be mail-enabled. By itself this does not exclude security-enabled groups. Setting this to `true` ensures all groups are mail-enabled, and setting to `false` ensures that all groups are _not_ mail-enabled. To ignore this filter, omit the property or set it to null. Cannot be specified together with `object_ids`.
         * 
         * @return builder
         * 
         */
        public Builder mailEnabled(Output</* @Nullable */ Boolean> mailEnabled) {
            $.mailEnabled = mailEnabled;
            return this;
        }

        /**
         * @param mailEnabled Whether the returned groups should be mail-enabled. By itself this does not exclude security-enabled groups. Setting this to `true` ensures all groups are mail-enabled, and setting to `false` ensures that all groups are _not_ mail-enabled. To ignore this filter, omit the property or set it to null. Cannot be specified together with `object_ids`.
         * 
         * @return builder
         * 
         */
        public Builder mailEnabled(@Nullable Boolean mailEnabled) {
            return mailEnabled(Output.of(mailEnabled));
        }

        /**
         * @param objectIds The object IDs of the groups.
         * 
         * @return builder
         * 
         */
        public Builder objectIds(Output</* @Nullable */ List<String>> objectIds) {
            $.objectIds = objectIds;
            return this;
        }

        /**
         * @param objectIds The object IDs of the groups.
         * 
         * @return builder
         * 
         */
        public Builder objectIds(@Nullable List<String> objectIds) {
            return objectIds(Output.of(objectIds));
        }

        /**
         * @param objectIds The object IDs of the groups.
         * 
         * @return builder
         * 
         */
        public Builder objectIds(String... objectIds) {
            return objectIds(List.of(objectIds));
        }

        /**
         * @param returnAll A flag to denote if all groups should be fetched and returned. Cannot be specified wth `ignore_missing`. Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder returnAll(Output</* @Nullable */ Boolean> returnAll) {
            $.returnAll = returnAll;
            return this;
        }

        /**
         * @param returnAll A flag to denote if all groups should be fetched and returned. Cannot be specified wth `ignore_missing`. Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder returnAll(@Nullable Boolean returnAll) {
            return returnAll(Output.of(returnAll));
        }

        /**
         * @param securityEnabled Whether the returned groups should be security-enabled. By itself this does not exclude mail-enabled groups. Setting this to `true` ensures all groups are security-enabled, and setting to `false` ensures that all groups are _not_ security-enabled. To ignore this filter, omit the property or set it to null. Cannot be specified together with `object_ids`.
         * 
         * @return builder
         * 
         */
        public Builder securityEnabled(Output</* @Nullable */ Boolean> securityEnabled) {
            $.securityEnabled = securityEnabled;
            return this;
        }

        /**
         * @param securityEnabled Whether the returned groups should be security-enabled. By itself this does not exclude mail-enabled groups. Setting this to `true` ensures all groups are security-enabled, and setting to `false` ensures that all groups are _not_ security-enabled. To ignore this filter, omit the property or set it to null. Cannot be specified together with `object_ids`.
         * 
         * @return builder
         * 
         */
        public Builder securityEnabled(@Nullable Boolean securityEnabled) {
            return securityEnabled(Output.of(securityEnabled));
        }

        public GetGroupsArgs build() {
            return $;
        }
    }

}
