// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azuread.inputs;

import com.pulumi.azuread.inputs.GroupDynamicMembershipGetArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class GroupState extends com.pulumi.resources.ResourceArgs {

    public static final GroupState Empty = new GroupState();

    /**
     * Indicates whether this group can be assigned to an Azure Active Directory role. Can only be `true` for security-enabled groups. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="assignableToRole")
      private final @Nullable Output<Boolean> assignableToRole;

    public Output<Boolean> assignableToRole() {
        return this.assignableToRole == null ? Codegen.empty() : this.assignableToRole;
    }

    /**
     * Indicates whether new members added to the group will be auto-subscribed to receive email notifications. Can only be set for Unified groups.
     * 
     */
    @Import(name="autoSubscribeNewMembers")
      private final @Nullable Output<Boolean> autoSubscribeNewMembers;

    public Output<Boolean> autoSubscribeNewMembers() {
        return this.autoSubscribeNewMembers == null ? Codegen.empty() : this.autoSubscribeNewMembers;
    }

    /**
     * A set of behaviors for a Microsoft 365 group. Possible values are `AllowOnlyMembersToPost`, `HideGroupInOutlook`, `SubscribeNewGroupMembers` and `WelcomeEmailDisabled`. See [official documentation](https://docs.microsoft.com/en-us/graph/group-set-options) for more details. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="behaviors")
      private final @Nullable Output<List<String>> behaviors;

    public Output<List<String>> behaviors() {
        return this.behaviors == null ? Codegen.empty() : this.behaviors;
    }

    /**
     * The description for the group.
     * 
     */
    @Import(name="description")
      private final @Nullable Output<String> description;

    public Output<String> description() {
        return this.description == null ? Codegen.empty() : this.description;
    }

    /**
     * The display name for the group.
     * 
     */
    @Import(name="displayName")
      private final @Nullable Output<String> displayName;

    public Output<String> displayName() {
        return this.displayName == null ? Codegen.empty() : this.displayName;
    }

    /**
     * A `dynamic_membership` block as documented below. Required when `types` contains `DynamicMembership`. Cannot be used with the `members` property.
     * 
     */
    @Import(name="dynamicMembership")
      private final @Nullable Output<GroupDynamicMembershipGetArgs> dynamicMembership;

    public Output<GroupDynamicMembershipGetArgs> dynamicMembership() {
        return this.dynamicMembership == null ? Codegen.empty() : this.dynamicMembership;
    }

    /**
     * Indicates whether people external to the organization can send messages to the group. Can only be set for Unified groups.
     * 
     */
    @Import(name="externalSendersAllowed")
      private final @Nullable Output<Boolean> externalSendersAllowed;

    public Output<Boolean> externalSendersAllowed() {
        return this.externalSendersAllowed == null ? Codegen.empty() : this.externalSendersAllowed;
    }

    /**
     * Indicates whether the group is displayed in certain parts of the Outlook user interface: in the Address Book, in address lists for selecting message recipients, and in the Browse Groups dialog for searching groups. Can only be set for Unified groups.
     * 
     */
    @Import(name="hideFromAddressLists")
      private final @Nullable Output<Boolean> hideFromAddressLists;

    public Output<Boolean> hideFromAddressLists() {
        return this.hideFromAddressLists == null ? Codegen.empty() : this.hideFromAddressLists;
    }

    /**
     * Indicates whether the group is displayed in Outlook clients, such as Outlook for Windows and Outlook on the web. Can only be set for Unified groups.
     * 
     */
    @Import(name="hideFromOutlookClients")
      private final @Nullable Output<Boolean> hideFromOutlookClients;

    public Output<Boolean> hideFromOutlookClients() {
        return this.hideFromOutlookClients == null ? Codegen.empty() : this.hideFromOutlookClients;
    }

    /**
     * The SMTP address for the group.
     * 
     */
    @Import(name="mail")
      private final @Nullable Output<String> mail;

    public Output<String> mail() {
        return this.mail == null ? Codegen.empty() : this.mail;
    }

    /**
     * Whether the group is a mail enabled, with a shared group mailbox. At least one of `mail_enabled` or `security_enabled` must be specified. Only Microsoft 365 groups can be mail enabled (see the `types` property).
     * 
     */
    @Import(name="mailEnabled")
      private final @Nullable Output<Boolean> mailEnabled;

    public Output<Boolean> mailEnabled() {
        return this.mailEnabled == null ? Codegen.empty() : this.mailEnabled;
    }

    /**
     * The mail alias for the group, unique in the organisation. Required for mail-enabled groups. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="mailNickname")
      private final @Nullable Output<String> mailNickname;

    public Output<String> mailNickname() {
        return this.mailNickname == null ? Codegen.empty() : this.mailNickname;
    }

    /**
     * A set of members who should be present in this group. Supported object types are Users, Groups or Service Principals. Cannot be used with the `dynamic_membership` block.
     * 
     */
    @Import(name="members")
      private final @Nullable Output<List<String>> members;

    public Output<List<String>> members() {
        return this.members == null ? Codegen.empty() : this.members;
    }

    /**
     * The object ID of the group.
     * 
     */
    @Import(name="objectId")
      private final @Nullable Output<String> objectId;

    public Output<String> objectId() {
        return this.objectId == null ? Codegen.empty() : this.objectId;
    }

    /**
     * The on-premises FQDN, also called dnsDomainName, synchronised from the on-premises directory when Azure AD Connect is used.
     * 
     */
    @Import(name="onpremisesDomainName")
      private final @Nullable Output<String> onpremisesDomainName;

    public Output<String> onpremisesDomainName() {
        return this.onpremisesDomainName == null ? Codegen.empty() : this.onpremisesDomainName;
    }

    /**
     * The on-premises NetBIOS name, synchronised from the on-premises directory when Azure AD Connect is used.
     * 
     */
    @Import(name="onpremisesNetbiosName")
      private final @Nullable Output<String> onpremisesNetbiosName;

    public Output<String> onpremisesNetbiosName() {
        return this.onpremisesNetbiosName == null ? Codegen.empty() : this.onpremisesNetbiosName;
    }

    /**
     * The on-premises SAM account name, synchronised from the on-premises directory when Azure AD Connect is used.
     * 
     */
    @Import(name="onpremisesSamAccountName")
      private final @Nullable Output<String> onpremisesSamAccountName;

    public Output<String> onpremisesSamAccountName() {
        return this.onpremisesSamAccountName == null ? Codegen.empty() : this.onpremisesSamAccountName;
    }

    /**
     * The on-premises security identifier (SID), synchronised from the on-premises directory when Azure AD Connect is used.
     * 
     */
    @Import(name="onpremisesSecurityIdentifier")
      private final @Nullable Output<String> onpremisesSecurityIdentifier;

    public Output<String> onpremisesSecurityIdentifier() {
        return this.onpremisesSecurityIdentifier == null ? Codegen.empty() : this.onpremisesSecurityIdentifier;
    }

    /**
     * Whether this group is synchronised from an on-premises directory (`true`), no longer synchronised (`false`), or has never been synchronised (`null`).
     * 
     */
    @Import(name="onpremisesSyncEnabled")
      private final @Nullable Output<Boolean> onpremisesSyncEnabled;

    public Output<Boolean> onpremisesSyncEnabled() {
        return this.onpremisesSyncEnabled == null ? Codegen.empty() : this.onpremisesSyncEnabled;
    }

    /**
     * A set of owners who own this group. Supported object types are Users or Service Principals
     * 
     */
    @Import(name="owners")
      private final @Nullable Output<List<String>> owners;

    public Output<List<String>> owners() {
        return this.owners == null ? Codegen.empty() : this.owners;
    }

    /**
     * The preferred language for a Microsoft 365 group, in ISO 639-1 notation.
     * 
     */
    @Import(name="preferredLanguage")
      private final @Nullable Output<String> preferredLanguage;

    public Output<String> preferredLanguage() {
        return this.preferredLanguage == null ? Codegen.empty() : this.preferredLanguage;
    }

    /**
     * If `true`, will return an error if an existing group is found with the same name. Defaults to `false`.
     * 
     */
    @Import(name="preventDuplicateNames")
      private final @Nullable Output<Boolean> preventDuplicateNames;

    public Output<Boolean> preventDuplicateNames() {
        return this.preventDuplicateNames == null ? Codegen.empty() : this.preventDuplicateNames;
    }

    /**
     * A set of provisioning options for a Microsoft 365 group. The only supported value is `Team`. See [official documentation](https://docs.microsoft.com/en-us/graph/group-set-options) for details. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="provisioningOptions")
      private final @Nullable Output<List<String>> provisioningOptions;

    public Output<List<String>> provisioningOptions() {
        return this.provisioningOptions == null ? Codegen.empty() : this.provisioningOptions;
    }

    /**
     * List of email addresses for the group that direct to the same group mailbox.
     * 
     */
    @Import(name="proxyAddresses")
      private final @Nullable Output<List<String>> proxyAddresses;

    public Output<List<String>> proxyAddresses() {
        return this.proxyAddresses == null ? Codegen.empty() : this.proxyAddresses;
    }

    /**
     * Whether the group is a security group for controlling access to in-app resources. At least one of `security_enabled` or `mail_enabled` must be specified. A Microsoft 365 group can be security enabled _and_ mail enabled (see the `types` property).
     * 
     */
    @Import(name="securityEnabled")
      private final @Nullable Output<Boolean> securityEnabled;

    public Output<Boolean> securityEnabled() {
        return this.securityEnabled == null ? Codegen.empty() : this.securityEnabled;
    }

    /**
     * The colour theme for a Microsoft 365 group. Possible values are `Blue`, `Green`, `Orange`, `Pink`, `Purple`, `Red` or `Teal`. By default, no theme is set.
     * 
     */
    @Import(name="theme")
      private final @Nullable Output<String> theme;

    public Output<String> theme() {
        return this.theme == null ? Codegen.empty() : this.theme;
    }

    /**
     * A set of group types to configure for the group. Supported values are `DynamicMembership`, which denotes a group with dynamic membership, and `Unified`, which specifies a Microsoft 365 group. Required when `mail_enabled` is true. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="types")
      private final @Nullable Output<List<String>> types;

    public Output<List<String>> types() {
        return this.types == null ? Codegen.empty() : this.types;
    }

    /**
     * The group join policy and group content visibility. Possible values are `Private`, `Public`, or `Hiddenmembership`. Only Microsoft 365 groups can have `Hiddenmembership` visibility and this value must be set when the group is created. By default, security groups will receive `Private` visibility and Microsoft 365 groups will receive `Public` visibility.
     * 
     */
    @Import(name="visibility")
      private final @Nullable Output<String> visibility;

    public Output<String> visibility() {
        return this.visibility == null ? Codegen.empty() : this.visibility;
    }

    public GroupState(
        @Nullable Output<Boolean> assignableToRole,
        @Nullable Output<Boolean> autoSubscribeNewMembers,
        @Nullable Output<List<String>> behaviors,
        @Nullable Output<String> description,
        @Nullable Output<String> displayName,
        @Nullable Output<GroupDynamicMembershipGetArgs> dynamicMembership,
        @Nullable Output<Boolean> externalSendersAllowed,
        @Nullable Output<Boolean> hideFromAddressLists,
        @Nullable Output<Boolean> hideFromOutlookClients,
        @Nullable Output<String> mail,
        @Nullable Output<Boolean> mailEnabled,
        @Nullable Output<String> mailNickname,
        @Nullable Output<List<String>> members,
        @Nullable Output<String> objectId,
        @Nullable Output<String> onpremisesDomainName,
        @Nullable Output<String> onpremisesNetbiosName,
        @Nullable Output<String> onpremisesSamAccountName,
        @Nullable Output<String> onpremisesSecurityIdentifier,
        @Nullable Output<Boolean> onpremisesSyncEnabled,
        @Nullable Output<List<String>> owners,
        @Nullable Output<String> preferredLanguage,
        @Nullable Output<Boolean> preventDuplicateNames,
        @Nullable Output<List<String>> provisioningOptions,
        @Nullable Output<List<String>> proxyAddresses,
        @Nullable Output<Boolean> securityEnabled,
        @Nullable Output<String> theme,
        @Nullable Output<List<String>> types,
        @Nullable Output<String> visibility) {
        this.assignableToRole = assignableToRole;
        this.autoSubscribeNewMembers = autoSubscribeNewMembers;
        this.behaviors = behaviors;
        this.description = description;
        this.displayName = displayName;
        this.dynamicMembership = dynamicMembership;
        this.externalSendersAllowed = externalSendersAllowed;
        this.hideFromAddressLists = hideFromAddressLists;
        this.hideFromOutlookClients = hideFromOutlookClients;
        this.mail = mail;
        this.mailEnabled = mailEnabled;
        this.mailNickname = mailNickname;
        this.members = members;
        this.objectId = objectId;
        this.onpremisesDomainName = onpremisesDomainName;
        this.onpremisesNetbiosName = onpremisesNetbiosName;
        this.onpremisesSamAccountName = onpremisesSamAccountName;
        this.onpremisesSecurityIdentifier = onpremisesSecurityIdentifier;
        this.onpremisesSyncEnabled = onpremisesSyncEnabled;
        this.owners = owners;
        this.preferredLanguage = preferredLanguage;
        this.preventDuplicateNames = preventDuplicateNames;
        this.provisioningOptions = provisioningOptions;
        this.proxyAddresses = proxyAddresses;
        this.securityEnabled = securityEnabled;
        this.theme = theme;
        this.types = types;
        this.visibility = visibility;
    }

    private GroupState() {
        this.assignableToRole = Codegen.empty();
        this.autoSubscribeNewMembers = Codegen.empty();
        this.behaviors = Codegen.empty();
        this.description = Codegen.empty();
        this.displayName = Codegen.empty();
        this.dynamicMembership = Codegen.empty();
        this.externalSendersAllowed = Codegen.empty();
        this.hideFromAddressLists = Codegen.empty();
        this.hideFromOutlookClients = Codegen.empty();
        this.mail = Codegen.empty();
        this.mailEnabled = Codegen.empty();
        this.mailNickname = Codegen.empty();
        this.members = Codegen.empty();
        this.objectId = Codegen.empty();
        this.onpremisesDomainName = Codegen.empty();
        this.onpremisesNetbiosName = Codegen.empty();
        this.onpremisesSamAccountName = Codegen.empty();
        this.onpremisesSecurityIdentifier = Codegen.empty();
        this.onpremisesSyncEnabled = Codegen.empty();
        this.owners = Codegen.empty();
        this.preferredLanguage = Codegen.empty();
        this.preventDuplicateNames = Codegen.empty();
        this.provisioningOptions = Codegen.empty();
        this.proxyAddresses = Codegen.empty();
        this.securityEnabled = Codegen.empty();
        this.theme = Codegen.empty();
        this.types = Codegen.empty();
        this.visibility = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GroupState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<Boolean> assignableToRole;
        private @Nullable Output<Boolean> autoSubscribeNewMembers;
        private @Nullable Output<List<String>> behaviors;
        private @Nullable Output<String> description;
        private @Nullable Output<String> displayName;
        private @Nullable Output<GroupDynamicMembershipGetArgs> dynamicMembership;
        private @Nullable Output<Boolean> externalSendersAllowed;
        private @Nullable Output<Boolean> hideFromAddressLists;
        private @Nullable Output<Boolean> hideFromOutlookClients;
        private @Nullable Output<String> mail;
        private @Nullable Output<Boolean> mailEnabled;
        private @Nullable Output<String> mailNickname;
        private @Nullable Output<List<String>> members;
        private @Nullable Output<String> objectId;
        private @Nullable Output<String> onpremisesDomainName;
        private @Nullable Output<String> onpremisesNetbiosName;
        private @Nullable Output<String> onpremisesSamAccountName;
        private @Nullable Output<String> onpremisesSecurityIdentifier;
        private @Nullable Output<Boolean> onpremisesSyncEnabled;
        private @Nullable Output<List<String>> owners;
        private @Nullable Output<String> preferredLanguage;
        private @Nullable Output<Boolean> preventDuplicateNames;
        private @Nullable Output<List<String>> provisioningOptions;
        private @Nullable Output<List<String>> proxyAddresses;
        private @Nullable Output<Boolean> securityEnabled;
        private @Nullable Output<String> theme;
        private @Nullable Output<List<String>> types;
        private @Nullable Output<String> visibility;

        public Builder() {
    	      // Empty
        }

        public Builder(GroupState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.assignableToRole = defaults.assignableToRole;
    	      this.autoSubscribeNewMembers = defaults.autoSubscribeNewMembers;
    	      this.behaviors = defaults.behaviors;
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.dynamicMembership = defaults.dynamicMembership;
    	      this.externalSendersAllowed = defaults.externalSendersAllowed;
    	      this.hideFromAddressLists = defaults.hideFromAddressLists;
    	      this.hideFromOutlookClients = defaults.hideFromOutlookClients;
    	      this.mail = defaults.mail;
    	      this.mailEnabled = defaults.mailEnabled;
    	      this.mailNickname = defaults.mailNickname;
    	      this.members = defaults.members;
    	      this.objectId = defaults.objectId;
    	      this.onpremisesDomainName = defaults.onpremisesDomainName;
    	      this.onpremisesNetbiosName = defaults.onpremisesNetbiosName;
    	      this.onpremisesSamAccountName = defaults.onpremisesSamAccountName;
    	      this.onpremisesSecurityIdentifier = defaults.onpremisesSecurityIdentifier;
    	      this.onpremisesSyncEnabled = defaults.onpremisesSyncEnabled;
    	      this.owners = defaults.owners;
    	      this.preferredLanguage = defaults.preferredLanguage;
    	      this.preventDuplicateNames = defaults.preventDuplicateNames;
    	      this.provisioningOptions = defaults.provisioningOptions;
    	      this.proxyAddresses = defaults.proxyAddresses;
    	      this.securityEnabled = defaults.securityEnabled;
    	      this.theme = defaults.theme;
    	      this.types = defaults.types;
    	      this.visibility = defaults.visibility;
        }

        public Builder assignableToRole(@Nullable Output<Boolean> assignableToRole) {
            this.assignableToRole = assignableToRole;
            return this;
        }
        public Builder assignableToRole(@Nullable Boolean assignableToRole) {
            this.assignableToRole = Codegen.ofNullable(assignableToRole);
            return this;
        }
        public Builder autoSubscribeNewMembers(@Nullable Output<Boolean> autoSubscribeNewMembers) {
            this.autoSubscribeNewMembers = autoSubscribeNewMembers;
            return this;
        }
        public Builder autoSubscribeNewMembers(@Nullable Boolean autoSubscribeNewMembers) {
            this.autoSubscribeNewMembers = Codegen.ofNullable(autoSubscribeNewMembers);
            return this;
        }
        public Builder behaviors(@Nullable Output<List<String>> behaviors) {
            this.behaviors = behaviors;
            return this;
        }
        public Builder behaviors(@Nullable List<String> behaviors) {
            this.behaviors = Codegen.ofNullable(behaviors);
            return this;
        }
        public Builder behaviors(String... behaviors) {
            return behaviors(List.of(behaviors));
        }
        public Builder description(@Nullable Output<String> description) {
            this.description = description;
            return this;
        }
        public Builder description(@Nullable String description) {
            this.description = Codegen.ofNullable(description);
            return this;
        }
        public Builder displayName(@Nullable Output<String> displayName) {
            this.displayName = displayName;
            return this;
        }
        public Builder displayName(@Nullable String displayName) {
            this.displayName = Codegen.ofNullable(displayName);
            return this;
        }
        public Builder dynamicMembership(@Nullable Output<GroupDynamicMembershipGetArgs> dynamicMembership) {
            this.dynamicMembership = dynamicMembership;
            return this;
        }
        public Builder dynamicMembership(@Nullable GroupDynamicMembershipGetArgs dynamicMembership) {
            this.dynamicMembership = Codegen.ofNullable(dynamicMembership);
            return this;
        }
        public Builder externalSendersAllowed(@Nullable Output<Boolean> externalSendersAllowed) {
            this.externalSendersAllowed = externalSendersAllowed;
            return this;
        }
        public Builder externalSendersAllowed(@Nullable Boolean externalSendersAllowed) {
            this.externalSendersAllowed = Codegen.ofNullable(externalSendersAllowed);
            return this;
        }
        public Builder hideFromAddressLists(@Nullable Output<Boolean> hideFromAddressLists) {
            this.hideFromAddressLists = hideFromAddressLists;
            return this;
        }
        public Builder hideFromAddressLists(@Nullable Boolean hideFromAddressLists) {
            this.hideFromAddressLists = Codegen.ofNullable(hideFromAddressLists);
            return this;
        }
        public Builder hideFromOutlookClients(@Nullable Output<Boolean> hideFromOutlookClients) {
            this.hideFromOutlookClients = hideFromOutlookClients;
            return this;
        }
        public Builder hideFromOutlookClients(@Nullable Boolean hideFromOutlookClients) {
            this.hideFromOutlookClients = Codegen.ofNullable(hideFromOutlookClients);
            return this;
        }
        public Builder mail(@Nullable Output<String> mail) {
            this.mail = mail;
            return this;
        }
        public Builder mail(@Nullable String mail) {
            this.mail = Codegen.ofNullable(mail);
            return this;
        }
        public Builder mailEnabled(@Nullable Output<Boolean> mailEnabled) {
            this.mailEnabled = mailEnabled;
            return this;
        }
        public Builder mailEnabled(@Nullable Boolean mailEnabled) {
            this.mailEnabled = Codegen.ofNullable(mailEnabled);
            return this;
        }
        public Builder mailNickname(@Nullable Output<String> mailNickname) {
            this.mailNickname = mailNickname;
            return this;
        }
        public Builder mailNickname(@Nullable String mailNickname) {
            this.mailNickname = Codegen.ofNullable(mailNickname);
            return this;
        }
        public Builder members(@Nullable Output<List<String>> members) {
            this.members = members;
            return this;
        }
        public Builder members(@Nullable List<String> members) {
            this.members = Codegen.ofNullable(members);
            return this;
        }
        public Builder members(String... members) {
            return members(List.of(members));
        }
        public Builder objectId(@Nullable Output<String> objectId) {
            this.objectId = objectId;
            return this;
        }
        public Builder objectId(@Nullable String objectId) {
            this.objectId = Codegen.ofNullable(objectId);
            return this;
        }
        public Builder onpremisesDomainName(@Nullable Output<String> onpremisesDomainName) {
            this.onpremisesDomainName = onpremisesDomainName;
            return this;
        }
        public Builder onpremisesDomainName(@Nullable String onpremisesDomainName) {
            this.onpremisesDomainName = Codegen.ofNullable(onpremisesDomainName);
            return this;
        }
        public Builder onpremisesNetbiosName(@Nullable Output<String> onpremisesNetbiosName) {
            this.onpremisesNetbiosName = onpremisesNetbiosName;
            return this;
        }
        public Builder onpremisesNetbiosName(@Nullable String onpremisesNetbiosName) {
            this.onpremisesNetbiosName = Codegen.ofNullable(onpremisesNetbiosName);
            return this;
        }
        public Builder onpremisesSamAccountName(@Nullable Output<String> onpremisesSamAccountName) {
            this.onpremisesSamAccountName = onpremisesSamAccountName;
            return this;
        }
        public Builder onpremisesSamAccountName(@Nullable String onpremisesSamAccountName) {
            this.onpremisesSamAccountName = Codegen.ofNullable(onpremisesSamAccountName);
            return this;
        }
        public Builder onpremisesSecurityIdentifier(@Nullable Output<String> onpremisesSecurityIdentifier) {
            this.onpremisesSecurityIdentifier = onpremisesSecurityIdentifier;
            return this;
        }
        public Builder onpremisesSecurityIdentifier(@Nullable String onpremisesSecurityIdentifier) {
            this.onpremisesSecurityIdentifier = Codegen.ofNullable(onpremisesSecurityIdentifier);
            return this;
        }
        public Builder onpremisesSyncEnabled(@Nullable Output<Boolean> onpremisesSyncEnabled) {
            this.onpremisesSyncEnabled = onpremisesSyncEnabled;
            return this;
        }
        public Builder onpremisesSyncEnabled(@Nullable Boolean onpremisesSyncEnabled) {
            this.onpremisesSyncEnabled = Codegen.ofNullable(onpremisesSyncEnabled);
            return this;
        }
        public Builder owners(@Nullable Output<List<String>> owners) {
            this.owners = owners;
            return this;
        }
        public Builder owners(@Nullable List<String> owners) {
            this.owners = Codegen.ofNullable(owners);
            return this;
        }
        public Builder owners(String... owners) {
            return owners(List.of(owners));
        }
        public Builder preferredLanguage(@Nullable Output<String> preferredLanguage) {
            this.preferredLanguage = preferredLanguage;
            return this;
        }
        public Builder preferredLanguage(@Nullable String preferredLanguage) {
            this.preferredLanguage = Codegen.ofNullable(preferredLanguage);
            return this;
        }
        public Builder preventDuplicateNames(@Nullable Output<Boolean> preventDuplicateNames) {
            this.preventDuplicateNames = preventDuplicateNames;
            return this;
        }
        public Builder preventDuplicateNames(@Nullable Boolean preventDuplicateNames) {
            this.preventDuplicateNames = Codegen.ofNullable(preventDuplicateNames);
            return this;
        }
        public Builder provisioningOptions(@Nullable Output<List<String>> provisioningOptions) {
            this.provisioningOptions = provisioningOptions;
            return this;
        }
        public Builder provisioningOptions(@Nullable List<String> provisioningOptions) {
            this.provisioningOptions = Codegen.ofNullable(provisioningOptions);
            return this;
        }
        public Builder provisioningOptions(String... provisioningOptions) {
            return provisioningOptions(List.of(provisioningOptions));
        }
        public Builder proxyAddresses(@Nullable Output<List<String>> proxyAddresses) {
            this.proxyAddresses = proxyAddresses;
            return this;
        }
        public Builder proxyAddresses(@Nullable List<String> proxyAddresses) {
            this.proxyAddresses = Codegen.ofNullable(proxyAddresses);
            return this;
        }
        public Builder proxyAddresses(String... proxyAddresses) {
            return proxyAddresses(List.of(proxyAddresses));
        }
        public Builder securityEnabled(@Nullable Output<Boolean> securityEnabled) {
            this.securityEnabled = securityEnabled;
            return this;
        }
        public Builder securityEnabled(@Nullable Boolean securityEnabled) {
            this.securityEnabled = Codegen.ofNullable(securityEnabled);
            return this;
        }
        public Builder theme(@Nullable Output<String> theme) {
            this.theme = theme;
            return this;
        }
        public Builder theme(@Nullable String theme) {
            this.theme = Codegen.ofNullable(theme);
            return this;
        }
        public Builder types(@Nullable Output<List<String>> types) {
            this.types = types;
            return this;
        }
        public Builder types(@Nullable List<String> types) {
            this.types = Codegen.ofNullable(types);
            return this;
        }
        public Builder types(String... types) {
            return types(List.of(types));
        }
        public Builder visibility(@Nullable Output<String> visibility) {
            this.visibility = visibility;
            return this;
        }
        public Builder visibility(@Nullable String visibility) {
            this.visibility = Codegen.ofNullable(visibility);
            return this;
        }        public GroupState build() {
            return new GroupState(assignableToRole, autoSubscribeNewMembers, behaviors, description, displayName, dynamicMembership, externalSendersAllowed, hideFromAddressLists, hideFromOutlookClients, mail, mailEnabled, mailNickname, members, objectId, onpremisesDomainName, onpremisesNetbiosName, onpremisesSamAccountName, onpremisesSecurityIdentifier, onpremisesSyncEnabled, owners, preferredLanguage, preventDuplicateNames, provisioningOptions, proxyAddresses, securityEnabled, theme, types, visibility);
        }
    }
}
