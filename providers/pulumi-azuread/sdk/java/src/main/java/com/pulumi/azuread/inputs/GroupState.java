// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azuread.inputs;

import com.pulumi.azuread.inputs.GroupDynamicMembershipArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GroupState extends com.pulumi.resources.ResourceArgs {

    public static final GroupState Empty = new GroupState();

    /**
     * Indicates whether this group can be assigned to an Azure Active Directory role. Can only be `true` for security-enabled groups. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="assignableToRole")
    private @Nullable Output<Boolean> assignableToRole;

    /**
     * @return Indicates whether this group can be assigned to an Azure Active Directory role. Can only be `true` for security-enabled groups. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<Boolean>> assignableToRole() {
        return Optional.ofNullable(this.assignableToRole);
    }

    /**
     * Indicates whether new members added to the group will be auto-subscribed to receive email notifications. Can only be set for Unified groups.
     * 
     */
    @Import(name="autoSubscribeNewMembers")
    private @Nullable Output<Boolean> autoSubscribeNewMembers;

    /**
     * @return Indicates whether new members added to the group will be auto-subscribed to receive email notifications. Can only be set for Unified groups.
     * 
     */
    public Optional<Output<Boolean>> autoSubscribeNewMembers() {
        return Optional.ofNullable(this.autoSubscribeNewMembers);
    }

    /**
     * A set of behaviors for a Microsoft 365 group. Possible values are `AllowOnlyMembersToPost`, `HideGroupInOutlook`, `SubscribeMembersToCalendarEventsDisabled`, `SubscribeNewGroupMembers` and `WelcomeEmailDisabled`. See [official documentation](https://docs.microsoft.com/en-us/graph/group-set-options) for more details. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="behaviors")
    private @Nullable Output<List<String>> behaviors;

    /**
     * @return A set of behaviors for a Microsoft 365 group. Possible values are `AllowOnlyMembersToPost`, `HideGroupInOutlook`, `SubscribeMembersToCalendarEventsDisabled`, `SubscribeNewGroupMembers` and `WelcomeEmailDisabled`. See [official documentation](https://docs.microsoft.com/en-us/graph/group-set-options) for more details. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<List<String>>> behaviors() {
        return Optional.ofNullable(this.behaviors);
    }

    /**
     * The description for the group.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The description for the group.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The display name for the group.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return The display name for the group.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * A `dynamic_membership` block as documented below. Required when `types` contains `DynamicMembership`. Cannot be used with the `members` property.
     * 
     */
    @Import(name="dynamicMembership")
    private @Nullable Output<GroupDynamicMembershipArgs> dynamicMembership;

    /**
     * @return A `dynamic_membership` block as documented below. Required when `types` contains `DynamicMembership`. Cannot be used with the `members` property.
     * 
     */
    public Optional<Output<GroupDynamicMembershipArgs>> dynamicMembership() {
        return Optional.ofNullable(this.dynamicMembership);
    }

    /**
     * Indicates whether people external to the organization can send messages to the group. Can only be set for Unified groups.
     * 
     */
    @Import(name="externalSendersAllowed")
    private @Nullable Output<Boolean> externalSendersAllowed;

    /**
     * @return Indicates whether people external to the organization can send messages to the group. Can only be set for Unified groups.
     * 
     */
    public Optional<Output<Boolean>> externalSendersAllowed() {
        return Optional.ofNullable(this.externalSendersAllowed);
    }

    /**
     * Indicates whether the group is displayed in certain parts of the Outlook user interface: in the Address Book, in address lists for selecting message recipients, and in the Browse Groups dialog for searching groups. Can only be set for Unified groups.
     * 
     */
    @Import(name="hideFromAddressLists")
    private @Nullable Output<Boolean> hideFromAddressLists;

    /**
     * @return Indicates whether the group is displayed in certain parts of the Outlook user interface: in the Address Book, in address lists for selecting message recipients, and in the Browse Groups dialog for searching groups. Can only be set for Unified groups.
     * 
     */
    public Optional<Output<Boolean>> hideFromAddressLists() {
        return Optional.ofNullable(this.hideFromAddressLists);
    }

    /**
     * Indicates whether the group is displayed in Outlook clients, such as Outlook for Windows and Outlook on the web. Can only be set for Unified groups.
     * 
     */
    @Import(name="hideFromOutlookClients")
    private @Nullable Output<Boolean> hideFromOutlookClients;

    /**
     * @return Indicates whether the group is displayed in Outlook clients, such as Outlook for Windows and Outlook on the web. Can only be set for Unified groups.
     * 
     */
    public Optional<Output<Boolean>> hideFromOutlookClients() {
        return Optional.ofNullable(this.hideFromOutlookClients);
    }

    /**
     * The SMTP address for the group.
     * 
     */
    @Import(name="mail")
    private @Nullable Output<String> mail;

    /**
     * @return The SMTP address for the group.
     * 
     */
    public Optional<Output<String>> mail() {
        return Optional.ofNullable(this.mail);
    }

    /**
     * Whether the group is a mail enabled, with a shared group mailbox. At least one of `mail_enabled` or `security_enabled` must be specified. Only Microsoft 365 groups can be mail enabled (see the `types` property).
     * 
     */
    @Import(name="mailEnabled")
    private @Nullable Output<Boolean> mailEnabled;

    /**
     * @return Whether the group is a mail enabled, with a shared group mailbox. At least one of `mail_enabled` or `security_enabled` must be specified. Only Microsoft 365 groups can be mail enabled (see the `types` property).
     * 
     */
    public Optional<Output<Boolean>> mailEnabled() {
        return Optional.ofNullable(this.mailEnabled);
    }

    /**
     * The mail alias for the group, unique in the organisation. Required for mail-enabled groups. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="mailNickname")
    private @Nullable Output<String> mailNickname;

    /**
     * @return The mail alias for the group, unique in the organisation. Required for mail-enabled groups. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> mailNickname() {
        return Optional.ofNullable(this.mailNickname);
    }

    /**
     * A set of members who should be present in this group. Supported object types are Users, Groups or Service Principals. Cannot be used with the `dynamic_membership` block.
     * 
     */
    @Import(name="members")
    private @Nullable Output<List<String>> members;

    /**
     * @return A set of members who should be present in this group. Supported object types are Users, Groups or Service Principals. Cannot be used with the `dynamic_membership` block.
     * 
     */
    public Optional<Output<List<String>>> members() {
        return Optional.ofNullable(this.members);
    }

    /**
     * The object ID of the group.
     * 
     */
    @Import(name="objectId")
    private @Nullable Output<String> objectId;

    /**
     * @return The object ID of the group.
     * 
     */
    public Optional<Output<String>> objectId() {
        return Optional.ofNullable(this.objectId);
    }

    /**
     * The on-premises FQDN, also called dnsDomainName, synchronised from the on-premises directory when Azure AD Connect is used.
     * 
     */
    @Import(name="onpremisesDomainName")
    private @Nullable Output<String> onpremisesDomainName;

    /**
     * @return The on-premises FQDN, also called dnsDomainName, synchronised from the on-premises directory when Azure AD Connect is used.
     * 
     */
    public Optional<Output<String>> onpremisesDomainName() {
        return Optional.ofNullable(this.onpremisesDomainName);
    }

    /**
     * The on-premises NetBIOS name, synchronised from the on-premises directory when Azure AD Connect is used.
     * 
     */
    @Import(name="onpremisesNetbiosName")
    private @Nullable Output<String> onpremisesNetbiosName;

    /**
     * @return The on-premises NetBIOS name, synchronised from the on-premises directory when Azure AD Connect is used.
     * 
     */
    public Optional<Output<String>> onpremisesNetbiosName() {
        return Optional.ofNullable(this.onpremisesNetbiosName);
    }

    /**
     * The on-premises SAM account name, synchronised from the on-premises directory when Azure AD Connect is used.
     * 
     */
    @Import(name="onpremisesSamAccountName")
    private @Nullable Output<String> onpremisesSamAccountName;

    /**
     * @return The on-premises SAM account name, synchronised from the on-premises directory when Azure AD Connect is used.
     * 
     */
    public Optional<Output<String>> onpremisesSamAccountName() {
        return Optional.ofNullable(this.onpremisesSamAccountName);
    }

    /**
     * The on-premises security identifier (SID), synchronised from the on-premises directory when Azure AD Connect is used.
     * 
     */
    @Import(name="onpremisesSecurityIdentifier")
    private @Nullable Output<String> onpremisesSecurityIdentifier;

    /**
     * @return The on-premises security identifier (SID), synchronised from the on-premises directory when Azure AD Connect is used.
     * 
     */
    public Optional<Output<String>> onpremisesSecurityIdentifier() {
        return Optional.ofNullable(this.onpremisesSecurityIdentifier);
    }

    /**
     * Whether this group is synchronised from an on-premises directory (`true`), no longer synchronised (`false`), or has never been synchronised (`null`).
     * 
     */
    @Import(name="onpremisesSyncEnabled")
    private @Nullable Output<Boolean> onpremisesSyncEnabled;

    /**
     * @return Whether this group is synchronised from an on-premises directory (`true`), no longer synchronised (`false`), or has never been synchronised (`null`).
     * 
     */
    public Optional<Output<Boolean>> onpremisesSyncEnabled() {
        return Optional.ofNullable(this.onpremisesSyncEnabled);
    }

    /**
     * A set of owners who own this group. Supported object types are Users or Service Principals
     * 
     */
    @Import(name="owners")
    private @Nullable Output<List<String>> owners;

    /**
     * @return A set of owners who own this group. Supported object types are Users or Service Principals
     * 
     */
    public Optional<Output<List<String>>> owners() {
        return Optional.ofNullable(this.owners);
    }

    /**
     * The preferred language for a Microsoft 365 group, in ISO 639-1 notation.
     * 
     */
    @Import(name="preferredLanguage")
    private @Nullable Output<String> preferredLanguage;

    /**
     * @return The preferred language for a Microsoft 365 group, in ISO 639-1 notation.
     * 
     */
    public Optional<Output<String>> preferredLanguage() {
        return Optional.ofNullable(this.preferredLanguage);
    }

    /**
     * If `true`, will return an error if an existing group is found with the same name. Defaults to `false`.
     * 
     */
    @Import(name="preventDuplicateNames")
    private @Nullable Output<Boolean> preventDuplicateNames;

    /**
     * @return If `true`, will return an error if an existing group is found with the same name. Defaults to `false`.
     * 
     */
    public Optional<Output<Boolean>> preventDuplicateNames() {
        return Optional.ofNullable(this.preventDuplicateNames);
    }

    /**
     * A set of provisioning options for a Microsoft 365 group. The only supported value is `Team`. See [official documentation](https://docs.microsoft.com/en-us/graph/group-set-options) for details. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="provisioningOptions")
    private @Nullable Output<List<String>> provisioningOptions;

    /**
     * @return A set of provisioning options for a Microsoft 365 group. The only supported value is `Team`. See [official documentation](https://docs.microsoft.com/en-us/graph/group-set-options) for details. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<List<String>>> provisioningOptions() {
        return Optional.ofNullable(this.provisioningOptions);
    }

    /**
     * List of email addresses for the group that direct to the same group mailbox.
     * 
     */
    @Import(name="proxyAddresses")
    private @Nullable Output<List<String>> proxyAddresses;

    /**
     * @return List of email addresses for the group that direct to the same group mailbox.
     * 
     */
    public Optional<Output<List<String>>> proxyAddresses() {
        return Optional.ofNullable(this.proxyAddresses);
    }

    /**
     * Whether the group is a security group for controlling access to in-app resources. At least one of `security_enabled` or `mail_enabled` must be specified. A Microsoft 365 group can be security enabled _and_ mail enabled (see the `types` property).
     * 
     */
    @Import(name="securityEnabled")
    private @Nullable Output<Boolean> securityEnabled;

    /**
     * @return Whether the group is a security group for controlling access to in-app resources. At least one of `security_enabled` or `mail_enabled` must be specified. A Microsoft 365 group can be security enabled _and_ mail enabled (see the `types` property).
     * 
     */
    public Optional<Output<Boolean>> securityEnabled() {
        return Optional.ofNullable(this.securityEnabled);
    }

    /**
     * The colour theme for a Microsoft 365 group. Possible values are `Blue`, `Green`, `Orange`, `Pink`, `Purple`, `Red` or `Teal`. By default, no theme is set.
     * 
     */
    @Import(name="theme")
    private @Nullable Output<String> theme;

    /**
     * @return The colour theme for a Microsoft 365 group. Possible values are `Blue`, `Green`, `Orange`, `Pink`, `Purple`, `Red` or `Teal`. By default, no theme is set.
     * 
     */
    public Optional<Output<String>> theme() {
        return Optional.ofNullable(this.theme);
    }

    /**
     * A set of group types to configure for the group. Supported values are `DynamicMembership`, which denotes a group with dynamic membership, and `Unified`, which specifies a Microsoft 365 group. Required when `mail_enabled` is true. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="types")
    private @Nullable Output<List<String>> types;

    /**
     * @return A set of group types to configure for the group. Supported values are `DynamicMembership`, which denotes a group with dynamic membership, and `Unified`, which specifies a Microsoft 365 group. Required when `mail_enabled` is true. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<List<String>>> types() {
        return Optional.ofNullable(this.types);
    }

    /**
     * The group join policy and group content visibility. Possible values are `Private`, `Public`, or `Hiddenmembership`. Only Microsoft 365 groups can have `Hiddenmembership` visibility and this value must be set when the group is created. By default, security groups will receive `Private` visibility and Microsoft 365 groups will receive `Public` visibility.
     * 
     */
    @Import(name="visibility")
    private @Nullable Output<String> visibility;

    /**
     * @return The group join policy and group content visibility. Possible values are `Private`, `Public`, or `Hiddenmembership`. Only Microsoft 365 groups can have `Hiddenmembership` visibility and this value must be set when the group is created. By default, security groups will receive `Private` visibility and Microsoft 365 groups will receive `Public` visibility.
     * 
     */
    public Optional<Output<String>> visibility() {
        return Optional.ofNullable(this.visibility);
    }

    private GroupState() {}

    private GroupState(GroupState $) {
        this.assignableToRole = $.assignableToRole;
        this.autoSubscribeNewMembers = $.autoSubscribeNewMembers;
        this.behaviors = $.behaviors;
        this.description = $.description;
        this.displayName = $.displayName;
        this.dynamicMembership = $.dynamicMembership;
        this.externalSendersAllowed = $.externalSendersAllowed;
        this.hideFromAddressLists = $.hideFromAddressLists;
        this.hideFromOutlookClients = $.hideFromOutlookClients;
        this.mail = $.mail;
        this.mailEnabled = $.mailEnabled;
        this.mailNickname = $.mailNickname;
        this.members = $.members;
        this.objectId = $.objectId;
        this.onpremisesDomainName = $.onpremisesDomainName;
        this.onpremisesNetbiosName = $.onpremisesNetbiosName;
        this.onpremisesSamAccountName = $.onpremisesSamAccountName;
        this.onpremisesSecurityIdentifier = $.onpremisesSecurityIdentifier;
        this.onpremisesSyncEnabled = $.onpremisesSyncEnabled;
        this.owners = $.owners;
        this.preferredLanguage = $.preferredLanguage;
        this.preventDuplicateNames = $.preventDuplicateNames;
        this.provisioningOptions = $.provisioningOptions;
        this.proxyAddresses = $.proxyAddresses;
        this.securityEnabled = $.securityEnabled;
        this.theme = $.theme;
        this.types = $.types;
        this.visibility = $.visibility;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GroupState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GroupState $;

        public Builder() {
            $ = new GroupState();
        }

        public Builder(GroupState defaults) {
            $ = new GroupState(Objects.requireNonNull(defaults));
        }

        /**
         * @param assignableToRole Indicates whether this group can be assigned to an Azure Active Directory role. Can only be `true` for security-enabled groups. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder assignableToRole(@Nullable Output<Boolean> assignableToRole) {
            $.assignableToRole = assignableToRole;
            return this;
        }

        /**
         * @param assignableToRole Indicates whether this group can be assigned to an Azure Active Directory role. Can only be `true` for security-enabled groups. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder assignableToRole(Boolean assignableToRole) {
            return assignableToRole(Output.of(assignableToRole));
        }

        /**
         * @param autoSubscribeNewMembers Indicates whether new members added to the group will be auto-subscribed to receive email notifications. Can only be set for Unified groups.
         * 
         * @return builder
         * 
         */
        public Builder autoSubscribeNewMembers(@Nullable Output<Boolean> autoSubscribeNewMembers) {
            $.autoSubscribeNewMembers = autoSubscribeNewMembers;
            return this;
        }

        /**
         * @param autoSubscribeNewMembers Indicates whether new members added to the group will be auto-subscribed to receive email notifications. Can only be set for Unified groups.
         * 
         * @return builder
         * 
         */
        public Builder autoSubscribeNewMembers(Boolean autoSubscribeNewMembers) {
            return autoSubscribeNewMembers(Output.of(autoSubscribeNewMembers));
        }

        /**
         * @param behaviors A set of behaviors for a Microsoft 365 group. Possible values are `AllowOnlyMembersToPost`, `HideGroupInOutlook`, `SubscribeMembersToCalendarEventsDisabled`, `SubscribeNewGroupMembers` and `WelcomeEmailDisabled`. See [official documentation](https://docs.microsoft.com/en-us/graph/group-set-options) for more details. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder behaviors(@Nullable Output<List<String>> behaviors) {
            $.behaviors = behaviors;
            return this;
        }

        /**
         * @param behaviors A set of behaviors for a Microsoft 365 group. Possible values are `AllowOnlyMembersToPost`, `HideGroupInOutlook`, `SubscribeMembersToCalendarEventsDisabled`, `SubscribeNewGroupMembers` and `WelcomeEmailDisabled`. See [official documentation](https://docs.microsoft.com/en-us/graph/group-set-options) for more details. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder behaviors(List<String> behaviors) {
            return behaviors(Output.of(behaviors));
        }

        /**
         * @param behaviors A set of behaviors for a Microsoft 365 group. Possible values are `AllowOnlyMembersToPost`, `HideGroupInOutlook`, `SubscribeMembersToCalendarEventsDisabled`, `SubscribeNewGroupMembers` and `WelcomeEmailDisabled`. See [official documentation](https://docs.microsoft.com/en-us/graph/group-set-options) for more details. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder behaviors(String... behaviors) {
            return behaviors(List.of(behaviors));
        }

        /**
         * @param description The description for the group.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description for the group.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param displayName The display name for the group.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName The display name for the group.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param dynamicMembership A `dynamic_membership` block as documented below. Required when `types` contains `DynamicMembership`. Cannot be used with the `members` property.
         * 
         * @return builder
         * 
         */
        public Builder dynamicMembership(@Nullable Output<GroupDynamicMembershipArgs> dynamicMembership) {
            $.dynamicMembership = dynamicMembership;
            return this;
        }

        /**
         * @param dynamicMembership A `dynamic_membership` block as documented below. Required when `types` contains `DynamicMembership`. Cannot be used with the `members` property.
         * 
         * @return builder
         * 
         */
        public Builder dynamicMembership(GroupDynamicMembershipArgs dynamicMembership) {
            return dynamicMembership(Output.of(dynamicMembership));
        }

        /**
         * @param externalSendersAllowed Indicates whether people external to the organization can send messages to the group. Can only be set for Unified groups.
         * 
         * @return builder
         * 
         */
        public Builder externalSendersAllowed(@Nullable Output<Boolean> externalSendersAllowed) {
            $.externalSendersAllowed = externalSendersAllowed;
            return this;
        }

        /**
         * @param externalSendersAllowed Indicates whether people external to the organization can send messages to the group. Can only be set for Unified groups.
         * 
         * @return builder
         * 
         */
        public Builder externalSendersAllowed(Boolean externalSendersAllowed) {
            return externalSendersAllowed(Output.of(externalSendersAllowed));
        }

        /**
         * @param hideFromAddressLists Indicates whether the group is displayed in certain parts of the Outlook user interface: in the Address Book, in address lists for selecting message recipients, and in the Browse Groups dialog for searching groups. Can only be set for Unified groups.
         * 
         * @return builder
         * 
         */
        public Builder hideFromAddressLists(@Nullable Output<Boolean> hideFromAddressLists) {
            $.hideFromAddressLists = hideFromAddressLists;
            return this;
        }

        /**
         * @param hideFromAddressLists Indicates whether the group is displayed in certain parts of the Outlook user interface: in the Address Book, in address lists for selecting message recipients, and in the Browse Groups dialog for searching groups. Can only be set for Unified groups.
         * 
         * @return builder
         * 
         */
        public Builder hideFromAddressLists(Boolean hideFromAddressLists) {
            return hideFromAddressLists(Output.of(hideFromAddressLists));
        }

        /**
         * @param hideFromOutlookClients Indicates whether the group is displayed in Outlook clients, such as Outlook for Windows and Outlook on the web. Can only be set for Unified groups.
         * 
         * @return builder
         * 
         */
        public Builder hideFromOutlookClients(@Nullable Output<Boolean> hideFromOutlookClients) {
            $.hideFromOutlookClients = hideFromOutlookClients;
            return this;
        }

        /**
         * @param hideFromOutlookClients Indicates whether the group is displayed in Outlook clients, such as Outlook for Windows and Outlook on the web. Can only be set for Unified groups.
         * 
         * @return builder
         * 
         */
        public Builder hideFromOutlookClients(Boolean hideFromOutlookClients) {
            return hideFromOutlookClients(Output.of(hideFromOutlookClients));
        }

        /**
         * @param mail The SMTP address for the group.
         * 
         * @return builder
         * 
         */
        public Builder mail(@Nullable Output<String> mail) {
            $.mail = mail;
            return this;
        }

        /**
         * @param mail The SMTP address for the group.
         * 
         * @return builder
         * 
         */
        public Builder mail(String mail) {
            return mail(Output.of(mail));
        }

        /**
         * @param mailEnabled Whether the group is a mail enabled, with a shared group mailbox. At least one of `mail_enabled` or `security_enabled` must be specified. Only Microsoft 365 groups can be mail enabled (see the `types` property).
         * 
         * @return builder
         * 
         */
        public Builder mailEnabled(@Nullable Output<Boolean> mailEnabled) {
            $.mailEnabled = mailEnabled;
            return this;
        }

        /**
         * @param mailEnabled Whether the group is a mail enabled, with a shared group mailbox. At least one of `mail_enabled` or `security_enabled` must be specified. Only Microsoft 365 groups can be mail enabled (see the `types` property).
         * 
         * @return builder
         * 
         */
        public Builder mailEnabled(Boolean mailEnabled) {
            return mailEnabled(Output.of(mailEnabled));
        }

        /**
         * @param mailNickname The mail alias for the group, unique in the organisation. Required for mail-enabled groups. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder mailNickname(@Nullable Output<String> mailNickname) {
            $.mailNickname = mailNickname;
            return this;
        }

        /**
         * @param mailNickname The mail alias for the group, unique in the organisation. Required for mail-enabled groups. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder mailNickname(String mailNickname) {
            return mailNickname(Output.of(mailNickname));
        }

        /**
         * @param members A set of members who should be present in this group. Supported object types are Users, Groups or Service Principals. Cannot be used with the `dynamic_membership` block.
         * 
         * @return builder
         * 
         */
        public Builder members(@Nullable Output<List<String>> members) {
            $.members = members;
            return this;
        }

        /**
         * @param members A set of members who should be present in this group. Supported object types are Users, Groups or Service Principals. Cannot be used with the `dynamic_membership` block.
         * 
         * @return builder
         * 
         */
        public Builder members(List<String> members) {
            return members(Output.of(members));
        }

        /**
         * @param members A set of members who should be present in this group. Supported object types are Users, Groups or Service Principals. Cannot be used with the `dynamic_membership` block.
         * 
         * @return builder
         * 
         */
        public Builder members(String... members) {
            return members(List.of(members));
        }

        /**
         * @param objectId The object ID of the group.
         * 
         * @return builder
         * 
         */
        public Builder objectId(@Nullable Output<String> objectId) {
            $.objectId = objectId;
            return this;
        }

        /**
         * @param objectId The object ID of the group.
         * 
         * @return builder
         * 
         */
        public Builder objectId(String objectId) {
            return objectId(Output.of(objectId));
        }

        /**
         * @param onpremisesDomainName The on-premises FQDN, also called dnsDomainName, synchronised from the on-premises directory when Azure AD Connect is used.
         * 
         * @return builder
         * 
         */
        public Builder onpremisesDomainName(@Nullable Output<String> onpremisesDomainName) {
            $.onpremisesDomainName = onpremisesDomainName;
            return this;
        }

        /**
         * @param onpremisesDomainName The on-premises FQDN, also called dnsDomainName, synchronised from the on-premises directory when Azure AD Connect is used.
         * 
         * @return builder
         * 
         */
        public Builder onpremisesDomainName(String onpremisesDomainName) {
            return onpremisesDomainName(Output.of(onpremisesDomainName));
        }

        /**
         * @param onpremisesNetbiosName The on-premises NetBIOS name, synchronised from the on-premises directory when Azure AD Connect is used.
         * 
         * @return builder
         * 
         */
        public Builder onpremisesNetbiosName(@Nullable Output<String> onpremisesNetbiosName) {
            $.onpremisesNetbiosName = onpremisesNetbiosName;
            return this;
        }

        /**
         * @param onpremisesNetbiosName The on-premises NetBIOS name, synchronised from the on-premises directory when Azure AD Connect is used.
         * 
         * @return builder
         * 
         */
        public Builder onpremisesNetbiosName(String onpremisesNetbiosName) {
            return onpremisesNetbiosName(Output.of(onpremisesNetbiosName));
        }

        /**
         * @param onpremisesSamAccountName The on-premises SAM account name, synchronised from the on-premises directory when Azure AD Connect is used.
         * 
         * @return builder
         * 
         */
        public Builder onpremisesSamAccountName(@Nullable Output<String> onpremisesSamAccountName) {
            $.onpremisesSamAccountName = onpremisesSamAccountName;
            return this;
        }

        /**
         * @param onpremisesSamAccountName The on-premises SAM account name, synchronised from the on-premises directory when Azure AD Connect is used.
         * 
         * @return builder
         * 
         */
        public Builder onpremisesSamAccountName(String onpremisesSamAccountName) {
            return onpremisesSamAccountName(Output.of(onpremisesSamAccountName));
        }

        /**
         * @param onpremisesSecurityIdentifier The on-premises security identifier (SID), synchronised from the on-premises directory when Azure AD Connect is used.
         * 
         * @return builder
         * 
         */
        public Builder onpremisesSecurityIdentifier(@Nullable Output<String> onpremisesSecurityIdentifier) {
            $.onpremisesSecurityIdentifier = onpremisesSecurityIdentifier;
            return this;
        }

        /**
         * @param onpremisesSecurityIdentifier The on-premises security identifier (SID), synchronised from the on-premises directory when Azure AD Connect is used.
         * 
         * @return builder
         * 
         */
        public Builder onpremisesSecurityIdentifier(String onpremisesSecurityIdentifier) {
            return onpremisesSecurityIdentifier(Output.of(onpremisesSecurityIdentifier));
        }

        /**
         * @param onpremisesSyncEnabled Whether this group is synchronised from an on-premises directory (`true`), no longer synchronised (`false`), or has never been synchronised (`null`).
         * 
         * @return builder
         * 
         */
        public Builder onpremisesSyncEnabled(@Nullable Output<Boolean> onpremisesSyncEnabled) {
            $.onpremisesSyncEnabled = onpremisesSyncEnabled;
            return this;
        }

        /**
         * @param onpremisesSyncEnabled Whether this group is synchronised from an on-premises directory (`true`), no longer synchronised (`false`), or has never been synchronised (`null`).
         * 
         * @return builder
         * 
         */
        public Builder onpremisesSyncEnabled(Boolean onpremisesSyncEnabled) {
            return onpremisesSyncEnabled(Output.of(onpremisesSyncEnabled));
        }

        /**
         * @param owners A set of owners who own this group. Supported object types are Users or Service Principals
         * 
         * @return builder
         * 
         */
        public Builder owners(@Nullable Output<List<String>> owners) {
            $.owners = owners;
            return this;
        }

        /**
         * @param owners A set of owners who own this group. Supported object types are Users or Service Principals
         * 
         * @return builder
         * 
         */
        public Builder owners(List<String> owners) {
            return owners(Output.of(owners));
        }

        /**
         * @param owners A set of owners who own this group. Supported object types are Users or Service Principals
         * 
         * @return builder
         * 
         */
        public Builder owners(String... owners) {
            return owners(List.of(owners));
        }

        /**
         * @param preferredLanguage The preferred language for a Microsoft 365 group, in ISO 639-1 notation.
         * 
         * @return builder
         * 
         */
        public Builder preferredLanguage(@Nullable Output<String> preferredLanguage) {
            $.preferredLanguage = preferredLanguage;
            return this;
        }

        /**
         * @param preferredLanguage The preferred language for a Microsoft 365 group, in ISO 639-1 notation.
         * 
         * @return builder
         * 
         */
        public Builder preferredLanguage(String preferredLanguage) {
            return preferredLanguage(Output.of(preferredLanguage));
        }

        /**
         * @param preventDuplicateNames If `true`, will return an error if an existing group is found with the same name. Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder preventDuplicateNames(@Nullable Output<Boolean> preventDuplicateNames) {
            $.preventDuplicateNames = preventDuplicateNames;
            return this;
        }

        /**
         * @param preventDuplicateNames If `true`, will return an error if an existing group is found with the same name. Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder preventDuplicateNames(Boolean preventDuplicateNames) {
            return preventDuplicateNames(Output.of(preventDuplicateNames));
        }

        /**
         * @param provisioningOptions A set of provisioning options for a Microsoft 365 group. The only supported value is `Team`. See [official documentation](https://docs.microsoft.com/en-us/graph/group-set-options) for details. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder provisioningOptions(@Nullable Output<List<String>> provisioningOptions) {
            $.provisioningOptions = provisioningOptions;
            return this;
        }

        /**
         * @param provisioningOptions A set of provisioning options for a Microsoft 365 group. The only supported value is `Team`. See [official documentation](https://docs.microsoft.com/en-us/graph/group-set-options) for details. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder provisioningOptions(List<String> provisioningOptions) {
            return provisioningOptions(Output.of(provisioningOptions));
        }

        /**
         * @param provisioningOptions A set of provisioning options for a Microsoft 365 group. The only supported value is `Team`. See [official documentation](https://docs.microsoft.com/en-us/graph/group-set-options) for details. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder provisioningOptions(String... provisioningOptions) {
            return provisioningOptions(List.of(provisioningOptions));
        }

        /**
         * @param proxyAddresses List of email addresses for the group that direct to the same group mailbox.
         * 
         * @return builder
         * 
         */
        public Builder proxyAddresses(@Nullable Output<List<String>> proxyAddresses) {
            $.proxyAddresses = proxyAddresses;
            return this;
        }

        /**
         * @param proxyAddresses List of email addresses for the group that direct to the same group mailbox.
         * 
         * @return builder
         * 
         */
        public Builder proxyAddresses(List<String> proxyAddresses) {
            return proxyAddresses(Output.of(proxyAddresses));
        }

        /**
         * @param proxyAddresses List of email addresses for the group that direct to the same group mailbox.
         * 
         * @return builder
         * 
         */
        public Builder proxyAddresses(String... proxyAddresses) {
            return proxyAddresses(List.of(proxyAddresses));
        }

        /**
         * @param securityEnabled Whether the group is a security group for controlling access to in-app resources. At least one of `security_enabled` or `mail_enabled` must be specified. A Microsoft 365 group can be security enabled _and_ mail enabled (see the `types` property).
         * 
         * @return builder
         * 
         */
        public Builder securityEnabled(@Nullable Output<Boolean> securityEnabled) {
            $.securityEnabled = securityEnabled;
            return this;
        }

        /**
         * @param securityEnabled Whether the group is a security group for controlling access to in-app resources. At least one of `security_enabled` or `mail_enabled` must be specified. A Microsoft 365 group can be security enabled _and_ mail enabled (see the `types` property).
         * 
         * @return builder
         * 
         */
        public Builder securityEnabled(Boolean securityEnabled) {
            return securityEnabled(Output.of(securityEnabled));
        }

        /**
         * @param theme The colour theme for a Microsoft 365 group. Possible values are `Blue`, `Green`, `Orange`, `Pink`, `Purple`, `Red` or `Teal`. By default, no theme is set.
         * 
         * @return builder
         * 
         */
        public Builder theme(@Nullable Output<String> theme) {
            $.theme = theme;
            return this;
        }

        /**
         * @param theme The colour theme for a Microsoft 365 group. Possible values are `Blue`, `Green`, `Orange`, `Pink`, `Purple`, `Red` or `Teal`. By default, no theme is set.
         * 
         * @return builder
         * 
         */
        public Builder theme(String theme) {
            return theme(Output.of(theme));
        }

        /**
         * @param types A set of group types to configure for the group. Supported values are `DynamicMembership`, which denotes a group with dynamic membership, and `Unified`, which specifies a Microsoft 365 group. Required when `mail_enabled` is true. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder types(@Nullable Output<List<String>> types) {
            $.types = types;
            return this;
        }

        /**
         * @param types A set of group types to configure for the group. Supported values are `DynamicMembership`, which denotes a group with dynamic membership, and `Unified`, which specifies a Microsoft 365 group. Required when `mail_enabled` is true. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder types(List<String> types) {
            return types(Output.of(types));
        }

        /**
         * @param types A set of group types to configure for the group. Supported values are `DynamicMembership`, which denotes a group with dynamic membership, and `Unified`, which specifies a Microsoft 365 group. Required when `mail_enabled` is true. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder types(String... types) {
            return types(List.of(types));
        }

        /**
         * @param visibility The group join policy and group content visibility. Possible values are `Private`, `Public`, or `Hiddenmembership`. Only Microsoft 365 groups can have `Hiddenmembership` visibility and this value must be set when the group is created. By default, security groups will receive `Private` visibility and Microsoft 365 groups will receive `Public` visibility.
         * 
         * @return builder
         * 
         */
        public Builder visibility(@Nullable Output<String> visibility) {
            $.visibility = visibility;
            return this;
        }

        /**
         * @param visibility The group join policy and group content visibility. Possible values are `Private`, `Public`, or `Hiddenmembership`. Only Microsoft 365 groups can have `Hiddenmembership` visibility and this value must be set when the group is created. By default, security groups will receive `Private` visibility and Microsoft 365 groups will receive `Public` visibility.
         * 
         * @return builder
         * 
         */
        public Builder visibility(String visibility) {
            return visibility(Output.of(visibility));
        }

        public GroupState build() {
            return $;
        }
    }

}
