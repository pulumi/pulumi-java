// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azuread;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GroupMemberArgs extends com.pulumi.resources.ResourceArgs {

    public static final GroupMemberArgs Empty = new GroupMemberArgs();

    /**
     * The object ID of the group you want to add the member to. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="groupObjectId", required=true)
    private Output<String> groupObjectId;

    /**
     * @return The object ID of the group you want to add the member to. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> groupObjectId() {
        return this.groupObjectId;
    }

    /**
     * The object ID of the principal you want to add as a member to the group. Supported object types are Users, Groups or Service Principals. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="memberObjectId", required=true)
    private Output<String> memberObjectId;

    /**
     * @return The object ID of the principal you want to add as a member to the group. Supported object types are Users, Groups or Service Principals. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> memberObjectId() {
        return this.memberObjectId;
    }

    private GroupMemberArgs() {}

    private GroupMemberArgs(GroupMemberArgs $) {
        this.groupObjectId = $.groupObjectId;
        this.memberObjectId = $.memberObjectId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GroupMemberArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GroupMemberArgs $;

        public Builder() {
            $ = new GroupMemberArgs();
        }

        public Builder(GroupMemberArgs defaults) {
            $ = new GroupMemberArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param groupObjectId The object ID of the group you want to add the member to. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder groupObjectId(Output<String> groupObjectId) {
            $.groupObjectId = groupObjectId;
            return this;
        }

        /**
         * @param groupObjectId The object ID of the group you want to add the member to. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder groupObjectId(String groupObjectId) {
            return groupObjectId(Output.of(groupObjectId));
        }

        /**
         * @param memberObjectId The object ID of the principal you want to add as a member to the group. Supported object types are Users, Groups or Service Principals. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder memberObjectId(Output<String> memberObjectId) {
            $.memberObjectId = memberObjectId;
            return this;
        }

        /**
         * @param memberObjectId The object ID of the principal you want to add as a member to the group. Supported object types are Users, Groups or Service Principals. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder memberObjectId(String memberObjectId) {
            return memberObjectId(Output.of(memberObjectId));
        }

        public GroupMemberArgs build() {
            $.groupObjectId = Objects.requireNonNull($.groupObjectId, "expected parameter 'groupObjectId' to be non-null");
            $.memberObjectId = Objects.requireNonNull($.memberObjectId, "expected parameter 'memberObjectId' to be non-null");
            return $;
        }
    }

}
