// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azuread;

import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.Optional;

public final class Config {

    private static final com.pulumi.Config config = com.pulumi.Config.of("azuread");
/**
 * Base64 encoded PKCS#12 certificate bundle to use when authenticating as a Service Principal using a Client Certificate
 * 
 */
    public Optional<String> clientCertificate() {
        return Codegen.stringProp("clientCertificate").config(config).get();
    }
/**
 * The password to decrypt the Client Certificate. For use when authenticating as a Service Principal using a Client
 * Certificate
 * 
 */
    public Optional<String> clientCertificatePassword() {
        return Codegen.stringProp("clientCertificatePassword").config(config).get();
    }
/**
 * The path to the Client Certificate associated with the Service Principal for use when authenticating as a Service
 * Principal using a Client Certificate
 * 
 */
    public Optional<String> clientCertificatePath() {
        return Codegen.stringProp("clientCertificatePath").config(config).get();
    }
/**
 * The Client ID which should be used for service principal authentication
 * 
 */
    public Optional<String> clientId() {
        return Codegen.stringProp("clientId").config(config).get();
    }
/**
 * The application password to use when authenticating as a Service Principal using a Client Secret
 * 
 */
    public Optional<String> clientSecret() {
        return Codegen.stringProp("clientSecret").config(config).get();
    }
/**
 * Disable the Terraform Partner ID, which is used if a custom `partner_id` isn&#39;t specified
 * 
 */
    public Optional<Boolean> disableTerraformPartnerId() {
        return Codegen.booleanProp("disableTerraformPartnerId").config(config).get();
    }
/**
 * The cloud environment which should be used. Possible values are: `global` (also `public`), `usgovernmentl4` (also
 * `usgovernment`), `usgovernmentl5` (also `dod`), and `china`. Defaults to `global`
 * 
 */
    public String environment() {
        return Codegen.stringProp("environment").config(config).env("ARM_ENVIRONMENT").def("public").require();
    }
/**
 * The path to a custom endpoint for Managed Identity - in most circumstances this should be detected automatically
 * 
 */
    public Optional<String> msiEndpoint() {
        return Codegen.stringProp("msiEndpoint").config(config).env("ARM_MSI_ENDPOINT").get();
    }
/**
 * A GUID/UUID that is registered with Microsoft to facilitate partner resource usage attribution
 * 
 */
    public Optional<String> partnerId() {
        return Codegen.stringProp("partnerId").config(config).get();
    }
/**
 * The Tenant ID which should be used. Works with all authentication methods except Managed Identity
 * 
 */
    public Optional<String> tenantId() {
        return Codegen.stringProp("tenantId").config(config).get();
    }
/**
 * Allow Azure CLI to be used for Authentication
 * 
 */
    public Optional<Boolean> useCli() {
        return Codegen.booleanProp("useCli").config(config).get();
    }
/**
 * Allow Managed Identity to be used for Authentication
 * 
 */
    public Optional<Boolean> useMsi() {
        return Codegen.booleanProp("useMsi").config(config).env("ARM_USE_MSI").def(false).get();
    }
}
