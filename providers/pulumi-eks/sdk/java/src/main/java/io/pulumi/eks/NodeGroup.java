// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.eks;

import io.pulumi.aws.cloudformation.Stack;
import io.pulumi.aws.ec2.SecurityGroup;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Export;
import io.pulumi.core.annotations.ResourceType;
import io.pulumi.core.internal.Codegen;
import io.pulumi.eks.NodeGroupArgs;
import io.pulumi.eks.Utilities;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * NodeGroup is a component that wraps the AWS EC2 instances that provide compute capacity for an EKS cluster.
 * 
 */
@ResourceType(type="eks:index:NodeGroup")
public class NodeGroup extends io.pulumi.resources.ComponentResource {
    /**
     * The AutoScalingGroup name for the Node group.
     * 
     */
    @Export(name="autoScalingGroupName", type=String.class, parameters={})
    private Output<String> autoScalingGroupName;

    /**
     * @return The AutoScalingGroup name for the Node group.
     * 
     */
    public Output<String> getAutoScalingGroupName() {
        return this.autoScalingGroupName;
    }
    /**
     * The CloudFormation Stack which defines the Node AutoScalingGroup.
     * 
     */
    @Export(name="cfnStack", type=Stack.class, parameters={})
    private Output<Stack> cfnStack;

    /**
     * @return The CloudFormation Stack which defines the Node AutoScalingGroup.
     * 
     */
    public Output<Stack> getCfnStack() {
        return this.cfnStack;
    }
    /**
     * The additional security groups for the node group that captures user-specific rules.
     * 
     */
    @Export(name="extraNodeSecurityGroups", type=List.class, parameters={SecurityGroup.class})
    private Output<List<SecurityGroup>> extraNodeSecurityGroups;

    /**
     * @return The additional security groups for the node group that captures user-specific rules.
     * 
     */
    public Output<List<SecurityGroup>> getExtraNodeSecurityGroups() {
        return this.extraNodeSecurityGroups;
    }
    /**
     * The security group for the node group to communicate with the cluster.
     * 
     */
    @Export(name="nodeSecurityGroup", type=SecurityGroup.class, parameters={})
    private Output<SecurityGroup> nodeSecurityGroup;

    /**
     * @return The security group for the node group to communicate with the cluster.
     * 
     */
    public Output<SecurityGroup> getNodeSecurityGroup() {
        return this.nodeSecurityGroup;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public NodeGroup(String name) {
        this(name, NodeGroupArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public NodeGroup(String name, NodeGroupArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public NodeGroup(String name, NodeGroupArgs args, @Nullable io.pulumi.resources.ComponentResourceOptions options) {
        super("eks:index:NodeGroup", name, args == null ? NodeGroupArgs.Empty : args, makeResourceOptions(options, Codegen.empty()), true);
    }

    private static io.pulumi.resources.ComponentResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.ComponentResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.ComponentResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return io.pulumi.resources.ComponentResourceOptions.merge(defaultOptions, options, id);
    }

}
