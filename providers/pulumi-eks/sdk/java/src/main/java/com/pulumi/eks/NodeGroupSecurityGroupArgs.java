// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.eks;

import com.pulumi.aws.ec2.SecurityGroup;
import com.pulumi.aws.eks.Cluster;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class NodeGroupSecurityGroupArgs extends com.pulumi.resources.ResourceArgs {

    public static final NodeGroupSecurityGroupArgs Empty = new NodeGroupSecurityGroupArgs();

    /**
     * The security group associated with the EKS cluster.
     * 
     */
    @Import(name="clusterSecurityGroup", required=true)
    private Output<SecurityGroup> clusterSecurityGroup;

    public Output<SecurityGroup> clusterSecurityGroup() {
        return this.clusterSecurityGroup;
    }

    /**
     * The EKS cluster associated with the worker node group
     * 
     */
    @Import(name="eksCluster", required=true)
    private Output<Cluster> eksCluster;

    public Output<Cluster> eksCluster() {
        return this.eksCluster;
    }

    /**
     * Key-value mapping of tags to apply to this security group.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * The VPC in which to create the worker node group.
     * 
     */
    @Import(name="vpcId", required=true)
    private Output<String> vpcId;

    public Output<String> vpcId() {
        return this.vpcId;
    }

    private NodeGroupSecurityGroupArgs() {}

    private NodeGroupSecurityGroupArgs(NodeGroupSecurityGroupArgs $) {
        this.clusterSecurityGroup = $.clusterSecurityGroup;
        this.eksCluster = $.eksCluster;
        this.tags = $.tags;
        this.vpcId = $.vpcId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NodeGroupSecurityGroupArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NodeGroupSecurityGroupArgs $;

        public Builder() {
            $ = new NodeGroupSecurityGroupArgs();
        }

        public Builder(NodeGroupSecurityGroupArgs defaults) {
            $ = new NodeGroupSecurityGroupArgs(Objects.requireNonNull(defaults));
        }

        public Builder clusterSecurityGroup(Output<SecurityGroup> clusterSecurityGroup) {
            $.clusterSecurityGroup = clusterSecurityGroup;
            return this;
        }

        public Builder clusterSecurityGroup(SecurityGroup clusterSecurityGroup) {
            return clusterSecurityGroup(Output.of(clusterSecurityGroup));
        }

        public Builder eksCluster(Output<Cluster> eksCluster) {
            $.eksCluster = eksCluster;
            return this;
        }

        public Builder eksCluster(Cluster eksCluster) {
            return eksCluster(Output.of(eksCluster));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public Builder vpcId(Output<String> vpcId) {
            $.vpcId = vpcId;
            return this;
        }

        public Builder vpcId(String vpcId) {
            return vpcId(Output.of(vpcId));
        }

        public NodeGroupSecurityGroupArgs build() {
            $.clusterSecurityGroup = Objects.requireNonNull($.clusterSecurityGroup, "expected parameter 'clusterSecurityGroup' to be non-null");
            $.eksCluster = Objects.requireNonNull($.eksCluster, "expected parameter 'eksCluster' to be non-null");
            $.vpcId = Objects.requireNonNull($.vpcId, "expected parameter 'vpcId' to be non-null");
            return $;
        }
    }

}
