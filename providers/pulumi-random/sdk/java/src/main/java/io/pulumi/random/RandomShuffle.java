// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.random;

import io.pulumi.core.Input;
import io.pulumi.core.Output;
import io.pulumi.core.internal.annotations.OutputExport;
import io.pulumi.core.internal.annotations.ResourceType;
import io.pulumi.random.RandomShuffleArgs;
import io.pulumi.random.Utilities;
import io.pulumi.random.inputs.RandomShuffleState;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;

@ResourceType(type="random:index/randomShuffle:RandomShuffle")
public class RandomShuffle extends io.pulumi.resources.CustomResource {
    @OutputExport(name="inputs", type=List.class, parameters={String.class})
    private Output<List<String>> inputs;

    public Output<List<String>> getInputs() {
        return this.inputs;
    }
    @OutputExport(name="keepers", type=Map.class, parameters={String.class, Object.class})
    private Output</* @Nullable */ Map<String,Object>> keepers;

    public Output</* @Nullable */ Map<String,Object>> getKeepers() {
        return this.keepers;
    }
    @OutputExport(name="resultCount", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> resultCount;

    public Output</* @Nullable */ Integer> getResultCount() {
        return this.resultCount;
    }
    @OutputExport(name="results", type=List.class, parameters={String.class})
    private Output<List<String>> results;

    public Output<List<String>> getResults() {
        return this.results;
    }
    @OutputExport(name="seed", type=String.class, parameters={})
    private Output</* @Nullable */ String> seed;

    public Output</* @Nullable */ String> getSeed() {
        return this.seed;
    }

    public RandomShuffle(String name, RandomShuffleArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("random:index/randomShuffle:RandomShuffle", name, args == null ? RandomShuffleArgs.Empty : args, makeResourceOptions(options, Input.empty()));
    }

    private RandomShuffle(String name, Input<String> id, @Nullable RandomShuffleState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("random:index/randomShuffle:RandomShuffle", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Input<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .setVersion(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    public static RandomShuffle get(String name, Input<String> id, @Nullable RandomShuffleState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new RandomShuffle(name, id, state, options);
    }
}
