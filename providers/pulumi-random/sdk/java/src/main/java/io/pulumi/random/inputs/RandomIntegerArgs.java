// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.random.inputs;

import javax.annotation.Nullable;
import java.util.Objects;
import java.util.Optional;
import java.util.Map;
import java.util.List;
import java.util.concurrent.CompletableFuture;
import io.pulumi.core.*;
import io.pulumi.core.internal.annotations.*;
import io.pulumi.random.Utilities;


public final class RandomIntegerArgs extends io.pulumi.resources.ResourceArgs {

    public static final RandomIntegerArgs Empty = new RandomIntegerArgs();

    @InputImport(name="keepers")
    private final @Nullable Input<Map<String,Object>> keepers;

    public Input<Map<String,Object>> getKeepers() {
        return this.keepers == null ? Input.empty() : this.keepers;
    }

    @InputImport(name="max", required=true)
    private final Input<Integer> max;

    public Input<Integer> getMax() {
        return this.max;
    }

    @InputImport(name="min", required=true)
    private final Input<Integer> min;

    public Input<Integer> getMin() {
        return this.min;
    }

    @InputImport(name="seed")
    private final @Nullable Input<String> seed;

    public Input<String> getSeed() {
        return this.seed == null ? Input.empty() : this.seed;
    }

    public RandomIntegerArgs(
        @Nullable Input<Map<String,Object>> keepers,
        Input<Integer> max,
        Input<Integer> min,
        @Nullable Input<String> seed) {
        this.keepers = keepers;
        this.max = Objects.requireNonNull(max, "expected parameter 'max' to be non-null");
        this.min = Objects.requireNonNull(min, "expected parameter 'min' to be non-null");
        this.seed = seed;
    }

    private RandomIntegerArgs() {
        this.keepers = Input.empty();
        this.max = Input.empty();
        this.min = Input.empty();
        this.seed = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RandomIntegerArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<Map<String,Object>> keepers;
        private Input<Integer> max;
        private Input<Integer> min;
        private @Nullable Input<String> seed;

        public Builder() {
    	      // Empty
        }

        public Builder(RandomIntegerArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.keepers = defaults.keepers;
    	      this.max = defaults.max;
    	      this.min = defaults.min;
    	      this.seed = defaults.seed;
        }

        public Builder setKeepers(@Nullable Input<Map<String,Object>> keepers) {
            this.keepers = keepers;
            return this;
        }

        public Builder setKeepers(@Nullable Map<String,Object> keepers) {
            this.keepers = Input.ofNullable(keepers);
            return this;
        }

        public Builder setMax(Input<Integer> max) {
            this.max = Objects.requireNonNull(max);
            return this;
        }

        public Builder setMax(Integer max) {
            this.max = Input.of(Objects.requireNonNull(max));
            return this;
        }

        public Builder setMin(Input<Integer> min) {
            this.min = Objects.requireNonNull(min);
            return this;
        }

        public Builder setMin(Integer min) {
            this.min = Input.of(Objects.requireNonNull(min));
            return this;
        }

        public Builder setSeed(@Nullable Input<String> seed) {
            this.seed = seed;
            return this;
        }

        public Builder setSeed(@Nullable String seed) {
            this.seed = Input.ofNullable(seed);
            return this;
        }

        public RandomIntegerArgs build() {
            return new RandomIntegerArgs(keepers, max, min, seed);
        }
    }
}
