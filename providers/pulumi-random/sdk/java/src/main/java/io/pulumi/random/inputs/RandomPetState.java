// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.random.inputs;

import javax.annotation.Nullable;
import java.util.Objects;
import java.util.Optional;
import java.util.Map;
import java.util.List;
import java.util.concurrent.CompletableFuture;
import io.pulumi.core.*;
import io.pulumi.core.internal.annotations.*;
import io.pulumi.random.Utilities;


public final class RandomPetState extends io.pulumi.resources.ResourceArgs {

    public static final RandomPetState Empty = new RandomPetState();

    @InputImport(name="keepers")
    private final @Nullable Input<Map<String,Object>> keepers;

    public Input<Map<String,Object>> getKeepers() {
        return this.keepers == null ? Input.empty() : this.keepers;
    }

    @InputImport(name="length")
    private final @Nullable Input<Integer> length;

    public Input<Integer> getLength() {
        return this.length == null ? Input.empty() : this.length;
    }

    @InputImport(name="prefix")
    private final @Nullable Input<String> prefix;

    public Input<String> getPrefix() {
        return this.prefix == null ? Input.empty() : this.prefix;
    }

    @InputImport(name="separator")
    private final @Nullable Input<String> separator;

    public Input<String> getSeparator() {
        return this.separator == null ? Input.empty() : this.separator;
    }

    public RandomPetState(
        @Nullable Input<Map<String,Object>> keepers,
        @Nullable Input<Integer> length,
        @Nullable Input<String> prefix,
        @Nullable Input<String> separator) {
        this.keepers = keepers;
        this.length = length;
        this.prefix = prefix;
        this.separator = separator;
    }

    private RandomPetState() {
        this.keepers = Input.empty();
        this.length = Input.empty();
        this.prefix = Input.empty();
        this.separator = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RandomPetState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<Map<String,Object>> keepers;
        private @Nullable Input<Integer> length;
        private @Nullable Input<String> prefix;
        private @Nullable Input<String> separator;

        public Builder() {
    	      // Empty
        }

        public Builder(RandomPetState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.keepers = defaults.keepers;
    	      this.length = defaults.length;
    	      this.prefix = defaults.prefix;
    	      this.separator = defaults.separator;
        }

        public Builder setKeepers(@Nullable Input<Map<String,Object>> keepers) {
            this.keepers = keepers;
            return this;
        }

        public Builder setKeepers(@Nullable Map<String,Object> keepers) {
            this.keepers = Input.ofNullable(keepers);
            return this;
        }

        public Builder setLength(@Nullable Input<Integer> length) {
            this.length = length;
            return this;
        }

        public Builder setLength(@Nullable Integer length) {
            this.length = Input.ofNullable(length);
            return this;
        }

        public Builder setPrefix(@Nullable Input<String> prefix) {
            this.prefix = prefix;
            return this;
        }

        public Builder setPrefix(@Nullable String prefix) {
            this.prefix = Input.ofNullable(prefix);
            return this;
        }

        public Builder setSeparator(@Nullable Input<String> separator) {
            this.separator = separator;
            return this;
        }

        public Builder setSeparator(@Nullable String separator) {
            this.separator = Input.ofNullable(separator);
            return this;
        }

        public RandomPetState build() {
            return new RandomPetState(keepers, length, prefix, separator);
        }
    }
}
