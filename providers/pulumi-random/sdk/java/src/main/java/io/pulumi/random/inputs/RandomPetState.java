// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.random.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class RandomPetState extends io.pulumi.resources.ResourceArgs {

    public static final RandomPetState Empty = new RandomPetState();

    /**
     * Arbitrary map of values that, when changed, will trigger recreation of resource. See the main provider documentation for more information.
     * 
     */
    @Import(name="keepers")
      private final @Nullable Output<Map<String,Object>> keepers;

    public Output<Map<String,Object>> keepers() {
        return this.keepers == null ? Codegen.empty() : this.keepers;
    }

    /**
     * The length (in words) of the pet name.
     * 
     */
    @Import(name="length")
      private final @Nullable Output<Integer> length;

    public Output<Integer> length() {
        return this.length == null ? Codegen.empty() : this.length;
    }

    /**
     * A string to prefix the name with.
     * 
     */
    @Import(name="prefix")
      private final @Nullable Output<String> prefix;

    public Output<String> prefix() {
        return this.prefix == null ? Codegen.empty() : this.prefix;
    }

    /**
     * The character to separate words in the pet name.
     * 
     */
    @Import(name="separator")
      private final @Nullable Output<String> separator;

    public Output<String> separator() {
        return this.separator == null ? Codegen.empty() : this.separator;
    }

    public RandomPetState(
        @Nullable Output<Map<String,Object>> keepers,
        @Nullable Output<Integer> length,
        @Nullable Output<String> prefix,
        @Nullable Output<String> separator) {
        this.keepers = keepers;
        this.length = length;
        this.prefix = prefix;
        this.separator = separator;
    }

    private RandomPetState() {
        this.keepers = Codegen.empty();
        this.length = Codegen.empty();
        this.prefix = Codegen.empty();
        this.separator = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RandomPetState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<Map<String,Object>> keepers;
        private @Nullable Output<Integer> length;
        private @Nullable Output<String> prefix;
        private @Nullable Output<String> separator;

        public Builder() {
    	      // Empty
        }

        public Builder(RandomPetState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.keepers = defaults.keepers;
    	      this.length = defaults.length;
    	      this.prefix = defaults.prefix;
    	      this.separator = defaults.separator;
        }

        public Builder keepers(@Nullable Output<Map<String,Object>> keepers) {
            this.keepers = keepers;
            return this;
        }
        public Builder keepers(@Nullable Map<String,Object> keepers) {
            this.keepers = Codegen.ofNullable(keepers);
            return this;
        }
        public Builder length(@Nullable Output<Integer> length) {
            this.length = length;
            return this;
        }
        public Builder length(@Nullable Integer length) {
            this.length = Codegen.ofNullable(length);
            return this;
        }
        public Builder prefix(@Nullable Output<String> prefix) {
            this.prefix = prefix;
            return this;
        }
        public Builder prefix(@Nullable String prefix) {
            this.prefix = Codegen.ofNullable(prefix);
            return this;
        }
        public Builder separator(@Nullable Output<String> separator) {
            this.separator = separator;
            return this;
        }
        public Builder separator(@Nullable String separator) {
            this.separator = Codegen.ofNullable(separator);
            return this;
        }        public RandomPetState build() {
            return new RandomPetState(keepers, length, prefix, separator);
        }
    }
}
