// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.random.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RandomIdState extends com.pulumi.resources.ResourceArgs {

    public static final RandomIdState Empty = new RandomIdState();

    /**
     * The generated id presented in base64 without additional transformations.
     * 
     */
    @Import(name="b64Std")
    private @Nullable Output<String> b64Std;

    public Optional<Output<String>> b64Std() {
        return Optional.ofNullable(this.b64Std);
    }

    /**
     * The generated id presented in base64, using the URL-friendly character set: case-sensitive letters, digits and the characters `_` and `-`.
     * 
     */
    @Import(name="b64Url")
    private @Nullable Output<String> b64Url;

    public Optional<Output<String>> b64Url() {
        return Optional.ofNullable(this.b64Url);
    }

    /**
     * The number of random bytes to produce. The minimum value is 1, which produces eight bits of randomness.
     * 
     */
    @Import(name="byteLength")
    private @Nullable Output<Integer> byteLength;

    public Optional<Output<Integer>> byteLength() {
        return Optional.ofNullable(this.byteLength);
    }

    /**
     * The generated id presented in non-padded decimal digits.
     * 
     */
    @Import(name="dec")
    private @Nullable Output<String> dec;

    public Optional<Output<String>> dec() {
        return Optional.ofNullable(this.dec);
    }

    /**
     * The generated id presented in padded hexadecimal digits. This result will always be twice as long as the requested byte length.
     * 
     */
    @Import(name="hex")
    private @Nullable Output<String> hex;

    public Optional<Output<String>> hex() {
        return Optional.ofNullable(this.hex);
    }

    /**
     * Arbitrary map of values that, when changed, will trigger recreation of resource. See the main provider documentation for more information.
     * 
     */
    @Import(name="keepers")
    private @Nullable Output<Map<String,Object>> keepers;

    public Optional<Output<Map<String,Object>>> keepers() {
        return Optional.ofNullable(this.keepers);
    }

    /**
     * Arbitrary string to prefix the output value with. This string is supplied as-is, meaning it is not guaranteed to be URL-safe or base64 encoded.
     * 
     */
    @Import(name="prefix")
    private @Nullable Output<String> prefix;

    public Optional<Output<String>> prefix() {
        return Optional.ofNullable(this.prefix);
    }

    private RandomIdState() {}

    private RandomIdState(RandomIdState $) {
        this.b64Std = $.b64Std;
        this.b64Url = $.b64Url;
        this.byteLength = $.byteLength;
        this.dec = $.dec;
        this.hex = $.hex;
        this.keepers = $.keepers;
        this.prefix = $.prefix;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RandomIdState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RandomIdState $;

        public Builder() {
            $ = new RandomIdState();
        }

        public Builder(RandomIdState defaults) {
            $ = new RandomIdState(Objects.requireNonNull(defaults));
        }

        public Builder b64Std(@Nullable Output<String> b64Std) {
            $.b64Std = b64Std;
            return this;
        }

        public Builder b64Std(String b64Std) {
            return b64Std(Output.of(b64Std));
        }

        public Builder b64Url(@Nullable Output<String> b64Url) {
            $.b64Url = b64Url;
            return this;
        }

        public Builder b64Url(String b64Url) {
            return b64Url(Output.of(b64Url));
        }

        public Builder byteLength(@Nullable Output<Integer> byteLength) {
            $.byteLength = byteLength;
            return this;
        }

        public Builder byteLength(Integer byteLength) {
            return byteLength(Output.of(byteLength));
        }

        public Builder dec(@Nullable Output<String> dec) {
            $.dec = dec;
            return this;
        }

        public Builder dec(String dec) {
            return dec(Output.of(dec));
        }

        public Builder hex(@Nullable Output<String> hex) {
            $.hex = hex;
            return this;
        }

        public Builder hex(String hex) {
            return hex(Output.of(hex));
        }

        public Builder keepers(@Nullable Output<Map<String,Object>> keepers) {
            $.keepers = keepers;
            return this;
        }

        public Builder keepers(Map<String,Object> keepers) {
            return keepers(Output.of(keepers));
        }

        public Builder prefix(@Nullable Output<String> prefix) {
            $.prefix = prefix;
            return this;
        }

        public Builder prefix(String prefix) {
            return prefix(Output.of(prefix));
        }

        public RandomIdState build() {
            return $;
        }
    }

}
