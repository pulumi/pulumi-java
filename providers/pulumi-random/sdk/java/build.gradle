/* *** WARNING: this file was generated from an overlay template build.gradle, do not edit. *** */

plugins {
    id("java-library")
    id("maven-publish")
}

version = System.getenv("PULUMI_RANDOM_PROVIDER_SDK_VERSION") ?: "4.3.1";

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(11)
    }
}

compileJava {
    options.fork = true
    options.forkOptions.jvmArgs.addAll(["-Xmx4g"])
}

var gprUser = project.findProperty("gpr.user")  ?: System.getenv("GPR_USER")
var gprToken = project.findProperty("gpr.token") ?: System.getenv("GPR_TOKEN")

repositories {
    mavenLocal()
    maven { // The google mirror is less flaky than mavenCentral()
        url("https://maven-central.storage-download.googleapis.com/maven2/")
    }
    mavenCentral()

    if (gprUser) {
        repositories {
            maven {
                url = uri("https://maven.pkg.github.com/pulumi/pulumi-java")
                credentials {
                    username = gprUser
                    password = gprToken
                }
            }
        }
    }
}

var prerelease = version.contains("+")

var defaultPulumiJavaSdkVersion = "0.0.1";

var pulumiJavaSdkVersion = prerelease
    ? (System.getenv("PULUMI_JAVA_SDK_VERSION") ?: defaultPulumiJavaSdkVersion)
    : defaultPulumiJavaSdkVersion;

dependencies {
    implementation("com.google.code.findbugs:jsr305:3.0.2")
    api("com.google.guava:guava:30.1-jre") // FIXME: do we really want to expose this dep?
    api("com.google.code.gson:gson:2.8.6") // make sure we don't clash with grpc deps

    implementation("com.google.protobuf:protobuf-java:3.12.0") // make sure we don't clash with grpc deps
    implementation("com.google.protobuf:protobuf-java-util:3.12.0") // make sure we don't clash with grpc deps

    implementation("com.pulumi:pulumi:$pulumiJavaSdkVersion")

    def junitVersion = "5.7.2"
    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testImplementation("org.junit.jupiter:junit-jupiter-params:${junitVersion}")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
    testImplementation("org.assertj:assertj-core:3.20.2")
    testImplementation("org.mockito:mockito-core:3.12.4")
}

test {
    useJUnitPlatform()
    testLogging {
        showStandardStreams = true
        exceptionFormat = 'full'

        // set options for log level LIFECYCLE
        events = ['failed']

        info {
            events = ['failed', 'skipped']
        }

        debug {
            events = ['started', 'skipped', 'failed']
        }
    }
}

publishing {
    publications {
        // Publish to GitHub Packages like this:
        //
        // gradle publish
        //
        // https://docs.github.com/en/packages/working-with-a-github-packages-registry/working-with-the-gradle-registry
        gpr(MavenPublication) {
            groupId = "com.pulumi"
            artifactId = "random"
            version = version
            from components.java
        }
    }

    // https://docs.github.com/en/packages/working-with-a-github-packages-registry/working-with-the-gradle-registry
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/pulumi/pulumi-jvm")
            credentials {
                username = gprUser
                password = gprToken
            }
        }
    }
}

javadoc {
    if (JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}
