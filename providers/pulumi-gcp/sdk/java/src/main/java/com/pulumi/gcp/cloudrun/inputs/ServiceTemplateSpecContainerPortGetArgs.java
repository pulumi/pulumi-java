// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.cloudrun.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ServiceTemplateSpecContainerPortGetArgs extends com.pulumi.resources.ResourceArgs {

    public static final ServiceTemplateSpecContainerPortGetArgs Empty = new ServiceTemplateSpecContainerPortGetArgs();

    /**
     * Port number.
     * 
     */
    @Import(name="containerPort", required=true)
    private Output<Integer> containerPort;

    /**
     * @return Port number.
     * 
     */
    public Output<Integer> containerPort() {
        return this.containerPort;
    }

    /**
     * Volume&#39;s name.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Volume&#39;s name.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Protocol used on port. Defaults to TCP.
     * 
     */
    @Import(name="protocol")
    private @Nullable Output<String> protocol;

    /**
     * @return Protocol used on port. Defaults to TCP.
     * 
     */
    public Optional<Output<String>> protocol() {
        return Optional.ofNullable(this.protocol);
    }

    private ServiceTemplateSpecContainerPortGetArgs() {}

    private ServiceTemplateSpecContainerPortGetArgs(ServiceTemplateSpecContainerPortGetArgs $) {
        this.containerPort = $.containerPort;
        this.name = $.name;
        this.protocol = $.protocol;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServiceTemplateSpecContainerPortGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServiceTemplateSpecContainerPortGetArgs $;

        public Builder() {
            $ = new ServiceTemplateSpecContainerPortGetArgs();
        }

        public Builder(ServiceTemplateSpecContainerPortGetArgs defaults) {
            $ = new ServiceTemplateSpecContainerPortGetArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param containerPort Port number.
         * 
         * @return builder
         * 
         */
        public Builder containerPort(Output<Integer> containerPort) {
            $.containerPort = containerPort;
            return this;
        }

        /**
         * @param containerPort Port number.
         * 
         * @return builder
         * 
         */
        public Builder containerPort(Integer containerPort) {
            return containerPort(Output.of(containerPort));
        }

        /**
         * @param name Volume&#39;s name.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Volume&#39;s name.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param protocol Protocol used on port. Defaults to TCP.
         * 
         * @return builder
         * 
         */
        public Builder protocol(@Nullable Output<String> protocol) {
            $.protocol = protocol;
            return this;
        }

        /**
         * @param protocol Protocol used on port. Defaults to TCP.
         * 
         * @return builder
         * 
         */
        public Builder protocol(String protocol) {
            return protocol(Output.of(protocol));
        }

        public ServiceTemplateSpecContainerPortGetArgs build() {
            $.containerPort = Objects.requireNonNull($.containerPort, "expected parameter 'containerPort' to be non-null");
            return $;
        }
    }

}
