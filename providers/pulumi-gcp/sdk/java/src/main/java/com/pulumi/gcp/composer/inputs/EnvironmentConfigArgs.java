// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.composer.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import com.pulumi.gcp.composer.inputs.EnvironmentConfigDatabaseConfigArgs;
import com.pulumi.gcp.composer.inputs.EnvironmentConfigEncryptionConfigArgs;
import com.pulumi.gcp.composer.inputs.EnvironmentConfigMaintenanceWindowArgs;
import com.pulumi.gcp.composer.inputs.EnvironmentConfigMasterAuthorizedNetworksConfigArgs;
import com.pulumi.gcp.composer.inputs.EnvironmentConfigNodeConfigArgs;
import com.pulumi.gcp.composer.inputs.EnvironmentConfigPrivateEnvironmentConfigArgs;
import com.pulumi.gcp.composer.inputs.EnvironmentConfigSoftwareConfigArgs;
import com.pulumi.gcp.composer.inputs.EnvironmentConfigWebServerConfigArgs;
import com.pulumi.gcp.composer.inputs.EnvironmentConfigWebServerNetworkAccessControlArgs;
import com.pulumi.gcp.composer.inputs.EnvironmentConfigWorkloadsConfigArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class EnvironmentConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final EnvironmentConfigArgs Empty = new EnvironmentConfigArgs();

    @Import(name="airflowUri")
      private final @Nullable Output<String> airflowUri;

    public Output<String> airflowUri() {
        return this.airflowUri == null ? Codegen.empty() : this.airflowUri;
    }

    @Import(name="dagGcsPrefix")
      private final @Nullable Output<String> dagGcsPrefix;

    public Output<String> dagGcsPrefix() {
        return this.dagGcsPrefix == null ? Codegen.empty() : this.dagGcsPrefix;
    }

    @Import(name="databaseConfig")
      private final @Nullable Output<EnvironmentConfigDatabaseConfigArgs> databaseConfig;

    public Output<EnvironmentConfigDatabaseConfigArgs> databaseConfig() {
        return this.databaseConfig == null ? Codegen.empty() : this.databaseConfig;
    }

    @Import(name="encryptionConfig")
      private final @Nullable Output<EnvironmentConfigEncryptionConfigArgs> encryptionConfig;

    public Output<EnvironmentConfigEncryptionConfigArgs> encryptionConfig() {
        return this.encryptionConfig == null ? Codegen.empty() : this.encryptionConfig;
    }

    @Import(name="environmentSize")
      private final @Nullable Output<String> environmentSize;

    public Output<String> environmentSize() {
        return this.environmentSize == null ? Codegen.empty() : this.environmentSize;
    }

    @Import(name="gkeCluster")
      private final @Nullable Output<String> gkeCluster;

    public Output<String> gkeCluster() {
        return this.gkeCluster == null ? Codegen.empty() : this.gkeCluster;
    }

    @Import(name="maintenanceWindow")
      private final @Nullable Output<EnvironmentConfigMaintenanceWindowArgs> maintenanceWindow;

    public Output<EnvironmentConfigMaintenanceWindowArgs> maintenanceWindow() {
        return this.maintenanceWindow == null ? Codegen.empty() : this.maintenanceWindow;
    }

    @Import(name="masterAuthorizedNetworksConfig")
      private final @Nullable Output<EnvironmentConfigMasterAuthorizedNetworksConfigArgs> masterAuthorizedNetworksConfig;

    public Output<EnvironmentConfigMasterAuthorizedNetworksConfigArgs> masterAuthorizedNetworksConfig() {
        return this.masterAuthorizedNetworksConfig == null ? Codegen.empty() : this.masterAuthorizedNetworksConfig;
    }

    @Import(name="nodeConfig")
      private final @Nullable Output<EnvironmentConfigNodeConfigArgs> nodeConfig;

    public Output<EnvironmentConfigNodeConfigArgs> nodeConfig() {
        return this.nodeConfig == null ? Codegen.empty() : this.nodeConfig;
    }

    @Import(name="nodeCount")
      private final @Nullable Output<Integer> nodeCount;

    public Output<Integer> nodeCount() {
        return this.nodeCount == null ? Codegen.empty() : this.nodeCount;
    }

    @Import(name="privateEnvironmentConfig")
      private final @Nullable Output<EnvironmentConfigPrivateEnvironmentConfigArgs> privateEnvironmentConfig;

    public Output<EnvironmentConfigPrivateEnvironmentConfigArgs> privateEnvironmentConfig() {
        return this.privateEnvironmentConfig == null ? Codegen.empty() : this.privateEnvironmentConfig;
    }

    @Import(name="softwareConfig")
      private final @Nullable Output<EnvironmentConfigSoftwareConfigArgs> softwareConfig;

    public Output<EnvironmentConfigSoftwareConfigArgs> softwareConfig() {
        return this.softwareConfig == null ? Codegen.empty() : this.softwareConfig;
    }

    @Import(name="webServerConfig")
      private final @Nullable Output<EnvironmentConfigWebServerConfigArgs> webServerConfig;

    public Output<EnvironmentConfigWebServerConfigArgs> webServerConfig() {
        return this.webServerConfig == null ? Codegen.empty() : this.webServerConfig;
    }

    @Import(name="webServerNetworkAccessControl")
      private final @Nullable Output<EnvironmentConfigWebServerNetworkAccessControlArgs> webServerNetworkAccessControl;

    public Output<EnvironmentConfigWebServerNetworkAccessControlArgs> webServerNetworkAccessControl() {
        return this.webServerNetworkAccessControl == null ? Codegen.empty() : this.webServerNetworkAccessControl;
    }

    @Import(name="workloadsConfig")
      private final @Nullable Output<EnvironmentConfigWorkloadsConfigArgs> workloadsConfig;

    public Output<EnvironmentConfigWorkloadsConfigArgs> workloadsConfig() {
        return this.workloadsConfig == null ? Codegen.empty() : this.workloadsConfig;
    }

    public EnvironmentConfigArgs(
        @Nullable Output<String> airflowUri,
        @Nullable Output<String> dagGcsPrefix,
        @Nullable Output<EnvironmentConfigDatabaseConfigArgs> databaseConfig,
        @Nullable Output<EnvironmentConfigEncryptionConfigArgs> encryptionConfig,
        @Nullable Output<String> environmentSize,
        @Nullable Output<String> gkeCluster,
        @Nullable Output<EnvironmentConfigMaintenanceWindowArgs> maintenanceWindow,
        @Nullable Output<EnvironmentConfigMasterAuthorizedNetworksConfigArgs> masterAuthorizedNetworksConfig,
        @Nullable Output<EnvironmentConfigNodeConfigArgs> nodeConfig,
        @Nullable Output<Integer> nodeCount,
        @Nullable Output<EnvironmentConfigPrivateEnvironmentConfigArgs> privateEnvironmentConfig,
        @Nullable Output<EnvironmentConfigSoftwareConfigArgs> softwareConfig,
        @Nullable Output<EnvironmentConfigWebServerConfigArgs> webServerConfig,
        @Nullable Output<EnvironmentConfigWebServerNetworkAccessControlArgs> webServerNetworkAccessControl,
        @Nullable Output<EnvironmentConfigWorkloadsConfigArgs> workloadsConfig) {
        this.airflowUri = airflowUri;
        this.dagGcsPrefix = dagGcsPrefix;
        this.databaseConfig = databaseConfig;
        this.encryptionConfig = encryptionConfig;
        this.environmentSize = environmentSize;
        this.gkeCluster = gkeCluster;
        this.maintenanceWindow = maintenanceWindow;
        this.masterAuthorizedNetworksConfig = masterAuthorizedNetworksConfig;
        this.nodeConfig = nodeConfig;
        this.nodeCount = nodeCount;
        this.privateEnvironmentConfig = privateEnvironmentConfig;
        this.softwareConfig = softwareConfig;
        this.webServerConfig = webServerConfig;
        this.webServerNetworkAccessControl = webServerNetworkAccessControl;
        this.workloadsConfig = workloadsConfig;
    }

    private EnvironmentConfigArgs() {
        this.airflowUri = Codegen.empty();
        this.dagGcsPrefix = Codegen.empty();
        this.databaseConfig = Codegen.empty();
        this.encryptionConfig = Codegen.empty();
        this.environmentSize = Codegen.empty();
        this.gkeCluster = Codegen.empty();
        this.maintenanceWindow = Codegen.empty();
        this.masterAuthorizedNetworksConfig = Codegen.empty();
        this.nodeConfig = Codegen.empty();
        this.nodeCount = Codegen.empty();
        this.privateEnvironmentConfig = Codegen.empty();
        this.softwareConfig = Codegen.empty();
        this.webServerConfig = Codegen.empty();
        this.webServerNetworkAccessControl = Codegen.empty();
        this.workloadsConfig = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(EnvironmentConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> airflowUri;
        private @Nullable Output<String> dagGcsPrefix;
        private @Nullable Output<EnvironmentConfigDatabaseConfigArgs> databaseConfig;
        private @Nullable Output<EnvironmentConfigEncryptionConfigArgs> encryptionConfig;
        private @Nullable Output<String> environmentSize;
        private @Nullable Output<String> gkeCluster;
        private @Nullable Output<EnvironmentConfigMaintenanceWindowArgs> maintenanceWindow;
        private @Nullable Output<EnvironmentConfigMasterAuthorizedNetworksConfigArgs> masterAuthorizedNetworksConfig;
        private @Nullable Output<EnvironmentConfigNodeConfigArgs> nodeConfig;
        private @Nullable Output<Integer> nodeCount;
        private @Nullable Output<EnvironmentConfigPrivateEnvironmentConfigArgs> privateEnvironmentConfig;
        private @Nullable Output<EnvironmentConfigSoftwareConfigArgs> softwareConfig;
        private @Nullable Output<EnvironmentConfigWebServerConfigArgs> webServerConfig;
        private @Nullable Output<EnvironmentConfigWebServerNetworkAccessControlArgs> webServerNetworkAccessControl;
        private @Nullable Output<EnvironmentConfigWorkloadsConfigArgs> workloadsConfig;

        public Builder() {
    	      // Empty
        }

        public Builder(EnvironmentConfigArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.airflowUri = defaults.airflowUri;
    	      this.dagGcsPrefix = defaults.dagGcsPrefix;
    	      this.databaseConfig = defaults.databaseConfig;
    	      this.encryptionConfig = defaults.encryptionConfig;
    	      this.environmentSize = defaults.environmentSize;
    	      this.gkeCluster = defaults.gkeCluster;
    	      this.maintenanceWindow = defaults.maintenanceWindow;
    	      this.masterAuthorizedNetworksConfig = defaults.masterAuthorizedNetworksConfig;
    	      this.nodeConfig = defaults.nodeConfig;
    	      this.nodeCount = defaults.nodeCount;
    	      this.privateEnvironmentConfig = defaults.privateEnvironmentConfig;
    	      this.softwareConfig = defaults.softwareConfig;
    	      this.webServerConfig = defaults.webServerConfig;
    	      this.webServerNetworkAccessControl = defaults.webServerNetworkAccessControl;
    	      this.workloadsConfig = defaults.workloadsConfig;
        }

        public Builder airflowUri(@Nullable Output<String> airflowUri) {
            this.airflowUri = airflowUri;
            return this;
        }
        public Builder airflowUri(@Nullable String airflowUri) {
            this.airflowUri = Codegen.ofNullable(airflowUri);
            return this;
        }
        public Builder dagGcsPrefix(@Nullable Output<String> dagGcsPrefix) {
            this.dagGcsPrefix = dagGcsPrefix;
            return this;
        }
        public Builder dagGcsPrefix(@Nullable String dagGcsPrefix) {
            this.dagGcsPrefix = Codegen.ofNullable(dagGcsPrefix);
            return this;
        }
        public Builder databaseConfig(@Nullable Output<EnvironmentConfigDatabaseConfigArgs> databaseConfig) {
            this.databaseConfig = databaseConfig;
            return this;
        }
        public Builder databaseConfig(@Nullable EnvironmentConfigDatabaseConfigArgs databaseConfig) {
            this.databaseConfig = Codegen.ofNullable(databaseConfig);
            return this;
        }
        public Builder encryptionConfig(@Nullable Output<EnvironmentConfigEncryptionConfigArgs> encryptionConfig) {
            this.encryptionConfig = encryptionConfig;
            return this;
        }
        public Builder encryptionConfig(@Nullable EnvironmentConfigEncryptionConfigArgs encryptionConfig) {
            this.encryptionConfig = Codegen.ofNullable(encryptionConfig);
            return this;
        }
        public Builder environmentSize(@Nullable Output<String> environmentSize) {
            this.environmentSize = environmentSize;
            return this;
        }
        public Builder environmentSize(@Nullable String environmentSize) {
            this.environmentSize = Codegen.ofNullable(environmentSize);
            return this;
        }
        public Builder gkeCluster(@Nullable Output<String> gkeCluster) {
            this.gkeCluster = gkeCluster;
            return this;
        }
        public Builder gkeCluster(@Nullable String gkeCluster) {
            this.gkeCluster = Codegen.ofNullable(gkeCluster);
            return this;
        }
        public Builder maintenanceWindow(@Nullable Output<EnvironmentConfigMaintenanceWindowArgs> maintenanceWindow) {
            this.maintenanceWindow = maintenanceWindow;
            return this;
        }
        public Builder maintenanceWindow(@Nullable EnvironmentConfigMaintenanceWindowArgs maintenanceWindow) {
            this.maintenanceWindow = Codegen.ofNullable(maintenanceWindow);
            return this;
        }
        public Builder masterAuthorizedNetworksConfig(@Nullable Output<EnvironmentConfigMasterAuthorizedNetworksConfigArgs> masterAuthorizedNetworksConfig) {
            this.masterAuthorizedNetworksConfig = masterAuthorizedNetworksConfig;
            return this;
        }
        public Builder masterAuthorizedNetworksConfig(@Nullable EnvironmentConfigMasterAuthorizedNetworksConfigArgs masterAuthorizedNetworksConfig) {
            this.masterAuthorizedNetworksConfig = Codegen.ofNullable(masterAuthorizedNetworksConfig);
            return this;
        }
        public Builder nodeConfig(@Nullable Output<EnvironmentConfigNodeConfigArgs> nodeConfig) {
            this.nodeConfig = nodeConfig;
            return this;
        }
        public Builder nodeConfig(@Nullable EnvironmentConfigNodeConfigArgs nodeConfig) {
            this.nodeConfig = Codegen.ofNullable(nodeConfig);
            return this;
        }
        public Builder nodeCount(@Nullable Output<Integer> nodeCount) {
            this.nodeCount = nodeCount;
            return this;
        }
        public Builder nodeCount(@Nullable Integer nodeCount) {
            this.nodeCount = Codegen.ofNullable(nodeCount);
            return this;
        }
        public Builder privateEnvironmentConfig(@Nullable Output<EnvironmentConfigPrivateEnvironmentConfigArgs> privateEnvironmentConfig) {
            this.privateEnvironmentConfig = privateEnvironmentConfig;
            return this;
        }
        public Builder privateEnvironmentConfig(@Nullable EnvironmentConfigPrivateEnvironmentConfigArgs privateEnvironmentConfig) {
            this.privateEnvironmentConfig = Codegen.ofNullable(privateEnvironmentConfig);
            return this;
        }
        public Builder softwareConfig(@Nullable Output<EnvironmentConfigSoftwareConfigArgs> softwareConfig) {
            this.softwareConfig = softwareConfig;
            return this;
        }
        public Builder softwareConfig(@Nullable EnvironmentConfigSoftwareConfigArgs softwareConfig) {
            this.softwareConfig = Codegen.ofNullable(softwareConfig);
            return this;
        }
        public Builder webServerConfig(@Nullable Output<EnvironmentConfigWebServerConfigArgs> webServerConfig) {
            this.webServerConfig = webServerConfig;
            return this;
        }
        public Builder webServerConfig(@Nullable EnvironmentConfigWebServerConfigArgs webServerConfig) {
            this.webServerConfig = Codegen.ofNullable(webServerConfig);
            return this;
        }
        public Builder webServerNetworkAccessControl(@Nullable Output<EnvironmentConfigWebServerNetworkAccessControlArgs> webServerNetworkAccessControl) {
            this.webServerNetworkAccessControl = webServerNetworkAccessControl;
            return this;
        }
        public Builder webServerNetworkAccessControl(@Nullable EnvironmentConfigWebServerNetworkAccessControlArgs webServerNetworkAccessControl) {
            this.webServerNetworkAccessControl = Codegen.ofNullable(webServerNetworkAccessControl);
            return this;
        }
        public Builder workloadsConfig(@Nullable Output<EnvironmentConfigWorkloadsConfigArgs> workloadsConfig) {
            this.workloadsConfig = workloadsConfig;
            return this;
        }
        public Builder workloadsConfig(@Nullable EnvironmentConfigWorkloadsConfigArgs workloadsConfig) {
            this.workloadsConfig = Codegen.ofNullable(workloadsConfig);
            return this;
        }        public EnvironmentConfigArgs build() {
            return new EnvironmentConfigArgs(airflowUri, dagGcsPrefix, databaseConfig, encryptionConfig, environmentSize, gkeCluster, maintenanceWindow, masterAuthorizedNetworksConfig, nodeConfig, nodeCount, privateEnvironmentConfig, softwareConfig, webServerConfig, webServerNetworkAccessControl, workloadsConfig);
        }
    }
}
