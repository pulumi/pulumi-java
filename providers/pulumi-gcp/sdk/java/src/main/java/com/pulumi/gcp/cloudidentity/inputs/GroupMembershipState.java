// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.cloudidentity.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.cloudidentity.inputs.GroupMembershipMemberKeyGetArgs;
import com.pulumi.gcp.cloudidentity.inputs.GroupMembershipPreferredMemberKeyGetArgs;
import com.pulumi.gcp.cloudidentity.inputs.GroupMembershipRoleGetArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GroupMembershipState extends com.pulumi.resources.ResourceArgs {

    public static final GroupMembershipState Empty = new GroupMembershipState();

    /**
     * The time when the Membership was created.
     * 
     */
    @Import(name="createTime")
    private @Nullable Output<String> createTime;

    public Optional<Output<String>> createTime() {
        return Optional.ofNullable(this.createTime);
    }

    /**
     * The name of the Group to create this membership in.
     * 
     */
    @Import(name="group")
    private @Nullable Output<String> group;

    public Optional<Output<String>> group() {
        return Optional.ofNullable(this.group);
    }

    /**
     * EntityKey of the member.
     * Structure is documented below.
     * 
     */
    @Import(name="memberKey")
    private @Nullable Output<GroupMembershipMemberKeyGetArgs> memberKey;

    public Optional<Output<GroupMembershipMemberKeyGetArgs>> memberKey() {
        return Optional.ofNullable(this.memberKey);
    }

    /**
     * The name of the MembershipRole. Must be one of OWNER, MANAGER, MEMBER.
     * Possible values are `OWNER`, `MANAGER`, and `MEMBER`.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * EntityKey of the member.
     * Structure is documented below.
     * 
     */
    @Import(name="preferredMemberKey")
    private @Nullable Output<GroupMembershipPreferredMemberKeyGetArgs> preferredMemberKey;

    public Optional<Output<GroupMembershipPreferredMemberKeyGetArgs>> preferredMemberKey() {
        return Optional.ofNullable(this.preferredMemberKey);
    }

    /**
     * The MembershipRoles that apply to the Membership.
     * Must not contain duplicate MembershipRoles with the same name.
     * Structure is documented below.
     * 
     */
    @Import(name="roles")
    private @Nullable Output<List<GroupMembershipRoleGetArgs>> roles;

    public Optional<Output<List<GroupMembershipRoleGetArgs>>> roles() {
        return Optional.ofNullable(this.roles);
    }

    /**
     * The type of the membership.
     * 
     */
    @Import(name="type")
    private @Nullable Output<String> type;

    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    /**
     * The time when the Membership was last updated.
     * 
     */
    @Import(name="updateTime")
    private @Nullable Output<String> updateTime;

    public Optional<Output<String>> updateTime() {
        return Optional.ofNullable(this.updateTime);
    }

    private GroupMembershipState() {}

    private GroupMembershipState(GroupMembershipState $) {
        this.createTime = $.createTime;
        this.group = $.group;
        this.memberKey = $.memberKey;
        this.name = $.name;
        this.preferredMemberKey = $.preferredMemberKey;
        this.roles = $.roles;
        this.type = $.type;
        this.updateTime = $.updateTime;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GroupMembershipState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GroupMembershipState $;

        public Builder() {
            $ = new GroupMembershipState();
        }

        public Builder(GroupMembershipState defaults) {
            $ = new GroupMembershipState(Objects.requireNonNull(defaults));
        }

        public Builder createTime(@Nullable Output<String> createTime) {
            $.createTime = createTime;
            return this;
        }

        public Builder createTime(String createTime) {
            return createTime(Output.of(createTime));
        }

        public Builder group(@Nullable Output<String> group) {
            $.group = group;
            return this;
        }

        public Builder group(String group) {
            return group(Output.of(group));
        }

        public Builder memberKey(@Nullable Output<GroupMembershipMemberKeyGetArgs> memberKey) {
            $.memberKey = memberKey;
            return this;
        }

        public Builder memberKey(GroupMembershipMemberKeyGetArgs memberKey) {
            return memberKey(Output.of(memberKey));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder preferredMemberKey(@Nullable Output<GroupMembershipPreferredMemberKeyGetArgs> preferredMemberKey) {
            $.preferredMemberKey = preferredMemberKey;
            return this;
        }

        public Builder preferredMemberKey(GroupMembershipPreferredMemberKeyGetArgs preferredMemberKey) {
            return preferredMemberKey(Output.of(preferredMemberKey));
        }

        public Builder roles(@Nullable Output<List<GroupMembershipRoleGetArgs>> roles) {
            $.roles = roles;
            return this;
        }

        public Builder roles(List<GroupMembershipRoleGetArgs> roles) {
            return roles(Output.of(roles));
        }

        public Builder roles(GroupMembershipRoleGetArgs... roles) {
            return roles(List.of(roles));
        }

        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        public Builder type(String type) {
            return type(Output.of(type));
        }

        public Builder updateTime(@Nullable Output<String> updateTime) {
            $.updateTime = updateTime;
            return this;
        }

        public Builder updateTime(String updateTime) {
            return updateTime(Output.of(updateTime));
        }

        public GroupMembershipState build() {
            return $;
        }
    }

}
