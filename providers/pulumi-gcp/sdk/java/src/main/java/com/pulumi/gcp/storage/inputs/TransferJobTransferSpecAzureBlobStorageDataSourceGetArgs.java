// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.storage.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.storage.inputs.TransferJobTransferSpecAzureBlobStorageDataSourceAzureCredentialsGetArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TransferJobTransferSpecAzureBlobStorageDataSourceGetArgs extends com.pulumi.resources.ResourceArgs {

    public static final TransferJobTransferSpecAzureBlobStorageDataSourceGetArgs Empty = new TransferJobTransferSpecAzureBlobStorageDataSourceGetArgs();

    /**
     * Credentials used to authenticate API requests to Azure block.
     * 
     */
    @Import(name="azureCredentials", required=true)
    private Output<TransferJobTransferSpecAzureBlobStorageDataSourceAzureCredentialsGetArgs> azureCredentials;

    public Output<TransferJobTransferSpecAzureBlobStorageDataSourceAzureCredentialsGetArgs> azureCredentials() {
        return this.azureCredentials;
    }

    /**
     * The container to transfer from the Azure Storage account.`
     * 
     */
    @Import(name="container", required=true)
    private Output<String> container;

    public Output<String> container() {
        return this.container;
    }

    /**
     * Root path to transfer objects. Must be an empty string or full path name that ends with a &#39;/&#39;. This field is treated as an object prefix. As such, it should generally not begin with a &#39;/&#39;.
     * 
     */
    @Import(name="path")
    private @Nullable Output<String> path;

    public Optional<Output<String>> path() {
        return Optional.ofNullable(this.path);
    }

    /**
     * The name of the Azure Storage account.
     * 
     */
    @Import(name="storageAccount", required=true)
    private Output<String> storageAccount;

    public Output<String> storageAccount() {
        return this.storageAccount;
    }

    private TransferJobTransferSpecAzureBlobStorageDataSourceGetArgs() {}

    private TransferJobTransferSpecAzureBlobStorageDataSourceGetArgs(TransferJobTransferSpecAzureBlobStorageDataSourceGetArgs $) {
        this.azureCredentials = $.azureCredentials;
        this.container = $.container;
        this.path = $.path;
        this.storageAccount = $.storageAccount;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TransferJobTransferSpecAzureBlobStorageDataSourceGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TransferJobTransferSpecAzureBlobStorageDataSourceGetArgs $;

        public Builder() {
            $ = new TransferJobTransferSpecAzureBlobStorageDataSourceGetArgs();
        }

        public Builder(TransferJobTransferSpecAzureBlobStorageDataSourceGetArgs defaults) {
            $ = new TransferJobTransferSpecAzureBlobStorageDataSourceGetArgs(Objects.requireNonNull(defaults));
        }

        public Builder azureCredentials(Output<TransferJobTransferSpecAzureBlobStorageDataSourceAzureCredentialsGetArgs> azureCredentials) {
            $.azureCredentials = azureCredentials;
            return this;
        }

        public Builder azureCredentials(TransferJobTransferSpecAzureBlobStorageDataSourceAzureCredentialsGetArgs azureCredentials) {
            return azureCredentials(Output.of(azureCredentials));
        }

        public Builder container(Output<String> container) {
            $.container = container;
            return this;
        }

        public Builder container(String container) {
            return container(Output.of(container));
        }

        public Builder path(@Nullable Output<String> path) {
            $.path = path;
            return this;
        }

        public Builder path(String path) {
            return path(Output.of(path));
        }

        public Builder storageAccount(Output<String> storageAccount) {
            $.storageAccount = storageAccount;
            return this;
        }

        public Builder storageAccount(String storageAccount) {
            return storageAccount(Output.of(storageAccount));
        }

        public TransferJobTransferSpecAzureBlobStorageDataSourceGetArgs build() {
            $.azureCredentials = Objects.requireNonNull($.azureCredentials, "expected parameter 'azureCredentials' to be non-null");
            $.container = Objects.requireNonNull($.container, "expected parameter 'container' to be non-null");
            $.storageAccount = Objects.requireNonNull($.storageAccount, "expected parameter 'storageAccount' to be non-null");
            return $;
        }
    }

}
