// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.cloudfunctions.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GetFunctionSourceRepository extends com.pulumi.resources.InvokeArgs {

    public static final GetFunctionSourceRepository Empty = new GetFunctionSourceRepository();

    @Import(name="deployedUrl", required=true)
    private String deployedUrl;

    public String deployedUrl() {
        return this.deployedUrl;
    }

    /**
     * The URL pointing to the hosted repository where the function is defined.
     * 
     */
    @Import(name="url", required=true)
    private String url;

    public String url() {
        return this.url;
    }

    private GetFunctionSourceRepository() {}

    private GetFunctionSourceRepository(GetFunctionSourceRepository $) {
        this.deployedUrl = $.deployedUrl;
        this.url = $.url;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetFunctionSourceRepository defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetFunctionSourceRepository $;

        public Builder() {
            $ = new GetFunctionSourceRepository();
        }

        public Builder(GetFunctionSourceRepository defaults) {
            $ = new GetFunctionSourceRepository(Objects.requireNonNull(defaults));
        }

        public Builder deployedUrl(String deployedUrl) {
            $.deployedUrl = deployedUrl;
            return this;
        }

        public Builder url(String url) {
            $.url = url;
            return this;
        }

        public GetFunctionSourceRepository build() {
            $.deployedUrl = Objects.requireNonNull($.deployedUrl, "expected parameter 'deployedUrl' to be non-null");
            $.url = Objects.requireNonNull($.url, "expected parameter 'url' to be non-null");
            return $;
        }
    }

}
