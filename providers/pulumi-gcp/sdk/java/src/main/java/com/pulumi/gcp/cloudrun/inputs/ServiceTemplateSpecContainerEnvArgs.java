// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.cloudrun.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import com.pulumi.gcp.cloudrun.inputs.ServiceTemplateSpecContainerEnvValueFromArgs;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ServiceTemplateSpecContainerEnvArgs extends com.pulumi.resources.ResourceArgs {

    public static final ServiceTemplateSpecContainerEnvArgs Empty = new ServiceTemplateSpecContainerEnvArgs();

    /**
     * Volume's name.
     * 
     */
    @Import(name="name")
      private final @Nullable Output<String> name;

    public Output<String> name() {
        return this.name == null ? Codegen.empty() : this.name;
    }

    /**
     * Variable references $(VAR_NAME) are expanded
     * using the previous defined environment variables in the container and
     * any route environment variables. If a variable cannot be resolved,
     * the reference in the input string will be unchanged. The $(VAR_NAME)
     * syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped
     * references will never be expanded, regardless of whether the variable
     * exists or not.
     * Defaults to "".
     * 
     */
    @Import(name="value")
      private final @Nullable Output<String> value;

    public Output<String> value() {
        return this.value == null ? Codegen.empty() : this.value;
    }

    /**
     * Source for the environment variable's value. Only supports secret_key_ref.
     * Structure is documented below.
     * 
     */
    @Import(name="valueFrom")
      private final @Nullable Output<ServiceTemplateSpecContainerEnvValueFromArgs> valueFrom;

    public Output<ServiceTemplateSpecContainerEnvValueFromArgs> valueFrom() {
        return this.valueFrom == null ? Codegen.empty() : this.valueFrom;
    }

    public ServiceTemplateSpecContainerEnvArgs(
        @Nullable Output<String> name,
        @Nullable Output<String> value,
        @Nullable Output<ServiceTemplateSpecContainerEnvValueFromArgs> valueFrom) {
        this.name = name;
        this.value = value;
        this.valueFrom = valueFrom;
    }

    private ServiceTemplateSpecContainerEnvArgs() {
        this.name = Codegen.empty();
        this.value = Codegen.empty();
        this.valueFrom = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ServiceTemplateSpecContainerEnvArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> name;
        private @Nullable Output<String> value;
        private @Nullable Output<ServiceTemplateSpecContainerEnvValueFromArgs> valueFrom;

        public Builder() {
    	      // Empty
        }

        public Builder(ServiceTemplateSpecContainerEnvArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.name = defaults.name;
    	      this.value = defaults.value;
    	      this.valueFrom = defaults.valueFrom;
        }

        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }
        public Builder name(@Nullable String name) {
            this.name = Codegen.ofNullable(name);
            return this;
        }
        public Builder value(@Nullable Output<String> value) {
            this.value = value;
            return this;
        }
        public Builder value(@Nullable String value) {
            this.value = Codegen.ofNullable(value);
            return this;
        }
        public Builder valueFrom(@Nullable Output<ServiceTemplateSpecContainerEnvValueFromArgs> valueFrom) {
            this.valueFrom = valueFrom;
            return this;
        }
        public Builder valueFrom(@Nullable ServiceTemplateSpecContainerEnvValueFromArgs valueFrom) {
            this.valueFrom = Codegen.ofNullable(valueFrom);
            return this;
        }        public ServiceTemplateSpecContainerEnvArgs build() {
            return new ServiceTemplateSpecContainerEnvArgs(name, value, valueFrom);
        }
    }
}
