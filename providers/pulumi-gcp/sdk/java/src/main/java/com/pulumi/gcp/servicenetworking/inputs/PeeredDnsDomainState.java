// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.servicenetworking.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PeeredDnsDomainState extends com.pulumi.resources.ResourceArgs {

    public static final PeeredDnsDomainState Empty = new PeeredDnsDomainState();

    /**
     * The DNS domain suffix of the peered DNS domain. Make sure to suffix with a `.` (dot).
     * 
     */
    @Import(name="dnsSuffix")
    private @Nullable Output<String> dnsSuffix;

    public Optional<Output<String>> dnsSuffix() {
        return Optional.ofNullable(this.dnsSuffix);
    }

    /**
     * Internal name used for the peered DNS domain.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The network in the consumer project.
     * 
     */
    @Import(name="network")
    private @Nullable Output<String> network;

    public Optional<Output<String>> network() {
        return Optional.ofNullable(this.network);
    }

    /**
     * an identifier for the resource with format `services/{{service}}/projects/{{project}}/global/networks/{{network}}`
     * 
     */
    @Import(name="parent")
    private @Nullable Output<String> parent;

    public Optional<Output<String>> parent() {
        return Optional.ofNullable(this.parent);
    }

    /**
     * The producer project number. If not provided, the provider project is used.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * Private service connection between service and consumer network, defaults to `servicenetworking.googleapis.com`
     * 
     */
    @Import(name="service")
    private @Nullable Output<String> service;

    public Optional<Output<String>> service() {
        return Optional.ofNullable(this.service);
    }

    private PeeredDnsDomainState() {}

    private PeeredDnsDomainState(PeeredDnsDomainState $) {
        this.dnsSuffix = $.dnsSuffix;
        this.name = $.name;
        this.network = $.network;
        this.parent = $.parent;
        this.project = $.project;
        this.service = $.service;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PeeredDnsDomainState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PeeredDnsDomainState $;

        public Builder() {
            $ = new PeeredDnsDomainState();
        }

        public Builder(PeeredDnsDomainState defaults) {
            $ = new PeeredDnsDomainState(Objects.requireNonNull(defaults));
        }

        public Builder dnsSuffix(@Nullable Output<String> dnsSuffix) {
            $.dnsSuffix = dnsSuffix;
            return this;
        }

        public Builder dnsSuffix(String dnsSuffix) {
            return dnsSuffix(Output.of(dnsSuffix));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder network(@Nullable Output<String> network) {
            $.network = network;
            return this;
        }

        public Builder network(String network) {
            return network(Output.of(network));
        }

        public Builder parent(@Nullable Output<String> parent) {
            $.parent = parent;
            return this;
        }

        public Builder parent(String parent) {
            return parent(Output.of(parent));
        }

        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        public Builder project(String project) {
            return project(Output.of(project));
        }

        public Builder service(@Nullable Output<String> service) {
            $.service = service;
            return this;
        }

        public Builder service(String service) {
            return service(Output.of(service));
        }

        public PeeredDnsDomainState build() {
            return $;
        }
    }

}
