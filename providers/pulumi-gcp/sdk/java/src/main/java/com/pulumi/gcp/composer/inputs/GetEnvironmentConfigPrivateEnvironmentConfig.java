// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.composer.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;


public final class GetEnvironmentConfigPrivateEnvironmentConfig extends com.pulumi.resources.InvokeArgs {

    public static final GetEnvironmentConfigPrivateEnvironmentConfig Empty = new GetEnvironmentConfigPrivateEnvironmentConfig();

    @Import(name="cloudComposerConnectionSubnetwork", required=true)
    private String cloudComposerConnectionSubnetwork;

    public String cloudComposerConnectionSubnetwork() {
        return this.cloudComposerConnectionSubnetwork;
    }

    @Import(name="cloudComposerNetworkIpv4CidrBlock", required=true)
    private String cloudComposerNetworkIpv4CidrBlock;

    public String cloudComposerNetworkIpv4CidrBlock() {
        return this.cloudComposerNetworkIpv4CidrBlock;
    }

    @Import(name="cloudSqlIpv4CidrBlock", required=true)
    private String cloudSqlIpv4CidrBlock;

    public String cloudSqlIpv4CidrBlock() {
        return this.cloudSqlIpv4CidrBlock;
    }

    @Import(name="enablePrivateEndpoint", required=true)
    private Boolean enablePrivateEndpoint;

    public Boolean enablePrivateEndpoint() {
        return this.enablePrivateEndpoint;
    }

    @Import(name="enablePrivatelyUsedPublicIps", required=true)
    private Boolean enablePrivatelyUsedPublicIps;

    public Boolean enablePrivatelyUsedPublicIps() {
        return this.enablePrivatelyUsedPublicIps;
    }

    @Import(name="masterIpv4CidrBlock", required=true)
    private String masterIpv4CidrBlock;

    public String masterIpv4CidrBlock() {
        return this.masterIpv4CidrBlock;
    }

    @Import(name="webServerIpv4CidrBlock", required=true)
    private String webServerIpv4CidrBlock;

    public String webServerIpv4CidrBlock() {
        return this.webServerIpv4CidrBlock;
    }

    private GetEnvironmentConfigPrivateEnvironmentConfig() {}

    private GetEnvironmentConfigPrivateEnvironmentConfig(GetEnvironmentConfigPrivateEnvironmentConfig $) {
        this.cloudComposerConnectionSubnetwork = $.cloudComposerConnectionSubnetwork;
        this.cloudComposerNetworkIpv4CidrBlock = $.cloudComposerNetworkIpv4CidrBlock;
        this.cloudSqlIpv4CidrBlock = $.cloudSqlIpv4CidrBlock;
        this.enablePrivateEndpoint = $.enablePrivateEndpoint;
        this.enablePrivatelyUsedPublicIps = $.enablePrivatelyUsedPublicIps;
        this.masterIpv4CidrBlock = $.masterIpv4CidrBlock;
        this.webServerIpv4CidrBlock = $.webServerIpv4CidrBlock;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetEnvironmentConfigPrivateEnvironmentConfig defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetEnvironmentConfigPrivateEnvironmentConfig $;

        public Builder() {
            $ = new GetEnvironmentConfigPrivateEnvironmentConfig();
        }

        public Builder(GetEnvironmentConfigPrivateEnvironmentConfig defaults) {
            $ = new GetEnvironmentConfigPrivateEnvironmentConfig(Objects.requireNonNull(defaults));
        }

        public Builder cloudComposerConnectionSubnetwork(String cloudComposerConnectionSubnetwork) {
            $.cloudComposerConnectionSubnetwork = cloudComposerConnectionSubnetwork;
            return this;
        }

        public Builder cloudComposerNetworkIpv4CidrBlock(String cloudComposerNetworkIpv4CidrBlock) {
            $.cloudComposerNetworkIpv4CidrBlock = cloudComposerNetworkIpv4CidrBlock;
            return this;
        }

        public Builder cloudSqlIpv4CidrBlock(String cloudSqlIpv4CidrBlock) {
            $.cloudSqlIpv4CidrBlock = cloudSqlIpv4CidrBlock;
            return this;
        }

        public Builder enablePrivateEndpoint(Boolean enablePrivateEndpoint) {
            $.enablePrivateEndpoint = enablePrivateEndpoint;
            return this;
        }

        public Builder enablePrivatelyUsedPublicIps(Boolean enablePrivatelyUsedPublicIps) {
            $.enablePrivatelyUsedPublicIps = enablePrivatelyUsedPublicIps;
            return this;
        }

        public Builder masterIpv4CidrBlock(String masterIpv4CidrBlock) {
            $.masterIpv4CidrBlock = masterIpv4CidrBlock;
            return this;
        }

        public Builder webServerIpv4CidrBlock(String webServerIpv4CidrBlock) {
            $.webServerIpv4CidrBlock = webServerIpv4CidrBlock;
            return this;
        }

        public GetEnvironmentConfigPrivateEnvironmentConfig build() {
            $.cloudComposerConnectionSubnetwork = Objects.requireNonNull($.cloudComposerConnectionSubnetwork, "expected parameter 'cloudComposerConnectionSubnetwork' to be non-null");
            $.cloudComposerNetworkIpv4CidrBlock = Objects.requireNonNull($.cloudComposerNetworkIpv4CidrBlock, "expected parameter 'cloudComposerNetworkIpv4CidrBlock' to be non-null");
            $.cloudSqlIpv4CidrBlock = Objects.requireNonNull($.cloudSqlIpv4CidrBlock, "expected parameter 'cloudSqlIpv4CidrBlock' to be non-null");
            $.enablePrivateEndpoint = Objects.requireNonNull($.enablePrivateEndpoint, "expected parameter 'enablePrivateEndpoint' to be non-null");
            $.enablePrivatelyUsedPublicIps = Objects.requireNonNull($.enablePrivatelyUsedPublicIps, "expected parameter 'enablePrivatelyUsedPublicIps' to be non-null");
            $.masterIpv4CidrBlock = Objects.requireNonNull($.masterIpv4CidrBlock, "expected parameter 'masterIpv4CidrBlock' to be non-null");
            $.webServerIpv4CidrBlock = Objects.requireNonNull($.webServerIpv4CidrBlock, "expected parameter 'webServerIpv4CidrBlock' to be non-null");
            return $;
        }
    }

}
