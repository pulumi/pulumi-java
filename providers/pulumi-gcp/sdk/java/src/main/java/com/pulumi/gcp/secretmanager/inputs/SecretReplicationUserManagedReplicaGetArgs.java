// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.secretmanager.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.secretmanager.inputs.SecretReplicationUserManagedReplicaCustomerManagedEncryptionGetArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SecretReplicationUserManagedReplicaGetArgs extends com.pulumi.resources.ResourceArgs {

    public static final SecretReplicationUserManagedReplicaGetArgs Empty = new SecretReplicationUserManagedReplicaGetArgs();

    /**
     * Customer Managed Encryption for the secret.
     * Structure is documented below.
     * 
     */
    @Import(name="customerManagedEncryption")
    private @Nullable Output<SecretReplicationUserManagedReplicaCustomerManagedEncryptionGetArgs> customerManagedEncryption;

    public Optional<Output<SecretReplicationUserManagedReplicaCustomerManagedEncryptionGetArgs>> customerManagedEncryption() {
        return Optional.ofNullable(this.customerManagedEncryption);
    }

    /**
     * The canonical IDs of the location to replicate data. For example: &#34;us-east1&#34;.
     * 
     */
    @Import(name="location", required=true)
    private Output<String> location;

    public Output<String> location() {
        return this.location;
    }

    private SecretReplicationUserManagedReplicaGetArgs() {}

    private SecretReplicationUserManagedReplicaGetArgs(SecretReplicationUserManagedReplicaGetArgs $) {
        this.customerManagedEncryption = $.customerManagedEncryption;
        this.location = $.location;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SecretReplicationUserManagedReplicaGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SecretReplicationUserManagedReplicaGetArgs $;

        public Builder() {
            $ = new SecretReplicationUserManagedReplicaGetArgs();
        }

        public Builder(SecretReplicationUserManagedReplicaGetArgs defaults) {
            $ = new SecretReplicationUserManagedReplicaGetArgs(Objects.requireNonNull(defaults));
        }

        public Builder customerManagedEncryption(@Nullable Output<SecretReplicationUserManagedReplicaCustomerManagedEncryptionGetArgs> customerManagedEncryption) {
            $.customerManagedEncryption = customerManagedEncryption;
            return this;
        }

        public Builder customerManagedEncryption(SecretReplicationUserManagedReplicaCustomerManagedEncryptionGetArgs customerManagedEncryption) {
            return customerManagedEncryption(Output.of(customerManagedEncryption));
        }

        public Builder location(Output<String> location) {
            $.location = location;
            return this;
        }

        public Builder location(String location) {
            return location(Output.of(location));
        }

        public SecretReplicationUserManagedReplicaGetArgs build() {
            $.location = Objects.requireNonNull($.location, "expected parameter 'location' to be non-null");
            return $;
        }
    }

}
