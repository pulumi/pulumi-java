// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.identityplatform.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.identityplatform.inputs.TenantInboundSamlConfigSpConfigSpCertificateGetArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TenantInboundSamlConfigSpConfigGetArgs extends com.pulumi.resources.ResourceArgs {

    public static final TenantInboundSamlConfigSpConfigGetArgs Empty = new TenantInboundSamlConfigSpConfigGetArgs();

    /**
     * Callback URI where responses from IDP are handled. Must start with `https://`.
     * 
     */
    @Import(name="callbackUri", required=true)
    private Output<String> callbackUri;

    public Output<String> callbackUri() {
        return this.callbackUri;
    }

    /**
     * - 
     * The IDP&#39;s certificate data to verify the signature in the SAMLResponse issued by the IDP.
     * Structure is documented below.
     * 
     */
    @Import(name="spCertificates")
    private @Nullable Output<List<TenantInboundSamlConfigSpConfigSpCertificateGetArgs>> spCertificates;

    public Optional<Output<List<TenantInboundSamlConfigSpConfigSpCertificateGetArgs>>> spCertificates() {
        return Optional.ofNullable(this.spCertificates);
    }

    /**
     * Unique identifier for all SAML entities.
     * 
     */
    @Import(name="spEntityId", required=true)
    private Output<String> spEntityId;

    public Output<String> spEntityId() {
        return this.spEntityId;
    }

    private TenantInboundSamlConfigSpConfigGetArgs() {}

    private TenantInboundSamlConfigSpConfigGetArgs(TenantInboundSamlConfigSpConfigGetArgs $) {
        this.callbackUri = $.callbackUri;
        this.spCertificates = $.spCertificates;
        this.spEntityId = $.spEntityId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TenantInboundSamlConfigSpConfigGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TenantInboundSamlConfigSpConfigGetArgs $;

        public Builder() {
            $ = new TenantInboundSamlConfigSpConfigGetArgs();
        }

        public Builder(TenantInboundSamlConfigSpConfigGetArgs defaults) {
            $ = new TenantInboundSamlConfigSpConfigGetArgs(Objects.requireNonNull(defaults));
        }

        public Builder callbackUri(Output<String> callbackUri) {
            $.callbackUri = callbackUri;
            return this;
        }

        public Builder callbackUri(String callbackUri) {
            return callbackUri(Output.of(callbackUri));
        }

        public Builder spCertificates(@Nullable Output<List<TenantInboundSamlConfigSpConfigSpCertificateGetArgs>> spCertificates) {
            $.spCertificates = spCertificates;
            return this;
        }

        public Builder spCertificates(List<TenantInboundSamlConfigSpConfigSpCertificateGetArgs> spCertificates) {
            return spCertificates(Output.of(spCertificates));
        }

        public Builder spCertificates(TenantInboundSamlConfigSpConfigSpCertificateGetArgs... spCertificates) {
            return spCertificates(List.of(spCertificates));
        }

        public Builder spEntityId(Output<String> spEntityId) {
            $.spEntityId = spEntityId;
            return this;
        }

        public Builder spEntityId(String spEntityId) {
            return spEntityId(Output.of(spEntityId));
        }

        public TenantInboundSamlConfigSpConfigGetArgs build() {
            $.callbackUri = Objects.requireNonNull($.callbackUri, "expected parameter 'callbackUri' to be non-null");
            $.spEntityId = Objects.requireNonNull($.spEntityId, "expected parameter 'spEntityId' to be non-null");
            return $;
        }
    }

}
