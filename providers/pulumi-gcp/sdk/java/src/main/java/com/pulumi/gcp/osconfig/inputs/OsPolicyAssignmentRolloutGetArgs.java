// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.osconfig.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.osconfig.inputs.OsPolicyAssignmentRolloutDisruptionBudgetGetArgs;
import java.lang.String;
import java.util.Objects;


public final class OsPolicyAssignmentRolloutGetArgs extends com.pulumi.resources.ResourceArgs {

    public static final OsPolicyAssignmentRolloutGetArgs Empty = new OsPolicyAssignmentRolloutGetArgs();

    /**
     * Required. The maximum number (or percentage) of VMs per zone to disrupt at any given moment.
     * 
     */
    @Import(name="disruptionBudget", required=true)
    private Output<OsPolicyAssignmentRolloutDisruptionBudgetGetArgs> disruptionBudget;

    public Output<OsPolicyAssignmentRolloutDisruptionBudgetGetArgs> disruptionBudget() {
        return this.disruptionBudget;
    }

    /**
     * Required. This determines the minimum duration of time to wait after the configuration changes are applied through the current rollout. A VM continues to count towards the `disruption_budget` at least until this duration of time has passed after configuration changes are applied.
     * 
     */
    @Import(name="minWaitDuration", required=true)
    private Output<String> minWaitDuration;

    public Output<String> minWaitDuration() {
        return this.minWaitDuration;
    }

    private OsPolicyAssignmentRolloutGetArgs() {}

    private OsPolicyAssignmentRolloutGetArgs(OsPolicyAssignmentRolloutGetArgs $) {
        this.disruptionBudget = $.disruptionBudget;
        this.minWaitDuration = $.minWaitDuration;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OsPolicyAssignmentRolloutGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OsPolicyAssignmentRolloutGetArgs $;

        public Builder() {
            $ = new OsPolicyAssignmentRolloutGetArgs();
        }

        public Builder(OsPolicyAssignmentRolloutGetArgs defaults) {
            $ = new OsPolicyAssignmentRolloutGetArgs(Objects.requireNonNull(defaults));
        }

        public Builder disruptionBudget(Output<OsPolicyAssignmentRolloutDisruptionBudgetGetArgs> disruptionBudget) {
            $.disruptionBudget = disruptionBudget;
            return this;
        }

        public Builder disruptionBudget(OsPolicyAssignmentRolloutDisruptionBudgetGetArgs disruptionBudget) {
            return disruptionBudget(Output.of(disruptionBudget));
        }

        public Builder minWaitDuration(Output<String> minWaitDuration) {
            $.minWaitDuration = minWaitDuration;
            return this;
        }

        public Builder minWaitDuration(String minWaitDuration) {
            return minWaitDuration(Output.of(minWaitDuration));
        }

        public OsPolicyAssignmentRolloutGetArgs build() {
            $.disruptionBudget = Objects.requireNonNull($.disruptionBudget, "expected parameter 'disruptionBudget' to be non-null");
            $.minWaitDuration = Objects.requireNonNull($.minWaitDuration, "expected parameter 'minWaitDuration' to be non-null");
            return $;
        }
    }

}
