// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ResourcePolicyGroupPlacementPolicyArgs extends com.pulumi.resources.ResourceArgs {

    public static final ResourcePolicyGroupPlacementPolicyArgs Empty = new ResourcePolicyGroupPlacementPolicyArgs();

    /**
     * The number of availability domains instances will be spread across. If two instances are in different
     * availability domain, they will not be put in the same low latency network
     * 
     */
    @Import(name="availabilityDomainCount")
      private final @Nullable Output<Integer> availabilityDomainCount;

    public Output<Integer> availabilityDomainCount() {
        return this.availabilityDomainCount == null ? Codegen.empty() : this.availabilityDomainCount;
    }

    /**
     * Collocation specifies whether to place VMs inside the same availability domain on the same low-latency network.
     * Specify `COLLOCATED` to enable collocation. Can only be specified with `vm_count`. If compute instances are created
     * with a COLLOCATED policy, then exactly `vm_count` instances must be created at the same time with the resource policy
     * attached.
     * Possible values are `COLLOCATED`.
     * 
     */
    @Import(name="collocation")
      private final @Nullable Output<String> collocation;

    public Output<String> collocation() {
        return this.collocation == null ? Codegen.empty() : this.collocation;
    }

    /**
     * Number of vms in this placement group.
     * 
     */
    @Import(name="vmCount")
      private final @Nullable Output<Integer> vmCount;

    public Output<Integer> vmCount() {
        return this.vmCount == null ? Codegen.empty() : this.vmCount;
    }

    public ResourcePolicyGroupPlacementPolicyArgs(
        @Nullable Output<Integer> availabilityDomainCount,
        @Nullable Output<String> collocation,
        @Nullable Output<Integer> vmCount) {
        this.availabilityDomainCount = availabilityDomainCount;
        this.collocation = collocation;
        this.vmCount = vmCount;
    }

    private ResourcePolicyGroupPlacementPolicyArgs() {
        this.availabilityDomainCount = Codegen.empty();
        this.collocation = Codegen.empty();
        this.vmCount = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ResourcePolicyGroupPlacementPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<Integer> availabilityDomainCount;
        private @Nullable Output<String> collocation;
        private @Nullable Output<Integer> vmCount;

        public Builder() {
    	      // Empty
        }

        public Builder(ResourcePolicyGroupPlacementPolicyArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.availabilityDomainCount = defaults.availabilityDomainCount;
    	      this.collocation = defaults.collocation;
    	      this.vmCount = defaults.vmCount;
        }

        public Builder availabilityDomainCount(@Nullable Output<Integer> availabilityDomainCount) {
            this.availabilityDomainCount = availabilityDomainCount;
            return this;
        }
        public Builder availabilityDomainCount(@Nullable Integer availabilityDomainCount) {
            this.availabilityDomainCount = Codegen.ofNullable(availabilityDomainCount);
            return this;
        }
        public Builder collocation(@Nullable Output<String> collocation) {
            this.collocation = collocation;
            return this;
        }
        public Builder collocation(@Nullable String collocation) {
            this.collocation = Codegen.ofNullable(collocation);
            return this;
        }
        public Builder vmCount(@Nullable Output<Integer> vmCount) {
            this.vmCount = vmCount;
            return this;
        }
        public Builder vmCount(@Nullable Integer vmCount) {
            this.vmCount = Codegen.ofNullable(vmCount);
            return this;
        }        public ResourcePolicyGroupPlacementPolicyArgs build() {
            return new ResourcePolicyGroupPlacementPolicyArgs(availabilityDomainCount, collocation, vmCount);
        }
    }
}
