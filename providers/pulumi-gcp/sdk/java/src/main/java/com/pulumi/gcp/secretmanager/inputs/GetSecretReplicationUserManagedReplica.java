// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.secretmanager.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.secretmanager.inputs.GetSecretReplicationUserManagedReplicaCustomerManagedEncryption;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class GetSecretReplicationUserManagedReplica extends com.pulumi.resources.InvokeArgs {

    public static final GetSecretReplicationUserManagedReplica Empty = new GetSecretReplicationUserManagedReplica();

    @Import(name="customerManagedEncryptions", required=true)
    private List<GetSecretReplicationUserManagedReplicaCustomerManagedEncryption> customerManagedEncryptions;

    public List<GetSecretReplicationUserManagedReplicaCustomerManagedEncryption> customerManagedEncryptions() {
        return this.customerManagedEncryptions;
    }

    @Import(name="location", required=true)
    private String location;

    public String location() {
        return this.location;
    }

    private GetSecretReplicationUserManagedReplica() {}

    private GetSecretReplicationUserManagedReplica(GetSecretReplicationUserManagedReplica $) {
        this.customerManagedEncryptions = $.customerManagedEncryptions;
        this.location = $.location;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetSecretReplicationUserManagedReplica defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetSecretReplicationUserManagedReplica $;

        public Builder() {
            $ = new GetSecretReplicationUserManagedReplica();
        }

        public Builder(GetSecretReplicationUserManagedReplica defaults) {
            $ = new GetSecretReplicationUserManagedReplica(Objects.requireNonNull(defaults));
        }

        public Builder customerManagedEncryptions(List<GetSecretReplicationUserManagedReplicaCustomerManagedEncryption> customerManagedEncryptions) {
            $.customerManagedEncryptions = customerManagedEncryptions;
            return this;
        }

        public Builder customerManagedEncryptions(GetSecretReplicationUserManagedReplicaCustomerManagedEncryption... customerManagedEncryptions) {
            return customerManagedEncryptions(List.of(customerManagedEncryptions));
        }

        public Builder location(String location) {
            $.location = location;
            return this;
        }

        public GetSecretReplicationUserManagedReplica build() {
            $.customerManagedEncryptions = Objects.requireNonNull($.customerManagedEncryptions, "expected parameter 'customerManagedEncryptions' to be non-null");
            $.location = Objects.requireNonNull($.location, "expected parameter 'location' to be non-null");
            return $;
        }
    }

}
