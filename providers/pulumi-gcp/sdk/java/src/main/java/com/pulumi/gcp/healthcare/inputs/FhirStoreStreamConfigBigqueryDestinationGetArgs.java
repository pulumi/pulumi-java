// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.healthcare.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.healthcare.inputs.FhirStoreStreamConfigBigqueryDestinationSchemaConfigGetArgs;
import java.lang.String;
import java.util.Objects;


public final class FhirStoreStreamConfigBigqueryDestinationGetArgs extends com.pulumi.resources.ResourceArgs {

    public static final FhirStoreStreamConfigBigqueryDestinationGetArgs Empty = new FhirStoreStreamConfigBigqueryDestinationGetArgs();

    /**
     * BigQuery URI to a dataset, up to 2000 characters long, in the format bq://projectId.bqDatasetId
     * 
     */
    @Import(name="datasetUri", required=true)
    private Output<String> datasetUri;

    public Output<String> datasetUri() {
        return this.datasetUri;
    }

    /**
     * The configuration for the exported BigQuery schema.
     * Structure is documented below.
     * 
     */
    @Import(name="schemaConfig", required=true)
    private Output<FhirStoreStreamConfigBigqueryDestinationSchemaConfigGetArgs> schemaConfig;

    public Output<FhirStoreStreamConfigBigqueryDestinationSchemaConfigGetArgs> schemaConfig() {
        return this.schemaConfig;
    }

    private FhirStoreStreamConfigBigqueryDestinationGetArgs() {}

    private FhirStoreStreamConfigBigqueryDestinationGetArgs(FhirStoreStreamConfigBigqueryDestinationGetArgs $) {
        this.datasetUri = $.datasetUri;
        this.schemaConfig = $.schemaConfig;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FhirStoreStreamConfigBigqueryDestinationGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FhirStoreStreamConfigBigqueryDestinationGetArgs $;

        public Builder() {
            $ = new FhirStoreStreamConfigBigqueryDestinationGetArgs();
        }

        public Builder(FhirStoreStreamConfigBigqueryDestinationGetArgs defaults) {
            $ = new FhirStoreStreamConfigBigqueryDestinationGetArgs(Objects.requireNonNull(defaults));
        }

        public Builder datasetUri(Output<String> datasetUri) {
            $.datasetUri = datasetUri;
            return this;
        }

        public Builder datasetUri(String datasetUri) {
            return datasetUri(Output.of(datasetUri));
        }

        public Builder schemaConfig(Output<FhirStoreStreamConfigBigqueryDestinationSchemaConfigGetArgs> schemaConfig) {
            $.schemaConfig = schemaConfig;
            return this;
        }

        public Builder schemaConfig(FhirStoreStreamConfigBigqueryDestinationSchemaConfigGetArgs schemaConfig) {
            return schemaConfig(Output.of(schemaConfig));
        }

        public FhirStoreStreamConfigBigqueryDestinationGetArgs build() {
            $.datasetUri = Objects.requireNonNull($.datasetUri, "expected parameter 'datasetUri' to be non-null");
            $.schemaConfig = Objects.requireNonNull($.schemaConfig, "expected parameter 'schemaConfig' to be non-null");
            return $;
        }
    }

}
