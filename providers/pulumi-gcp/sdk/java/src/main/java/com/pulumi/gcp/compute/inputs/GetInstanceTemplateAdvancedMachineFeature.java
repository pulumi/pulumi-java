// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.util.Objects;


public final class GetInstanceTemplateAdvancedMachineFeature extends com.pulumi.resources.InvokeArgs {

    public static final GetInstanceTemplateAdvancedMachineFeature Empty = new GetInstanceTemplateAdvancedMachineFeature();

    @Import(name="enableNestedVirtualization", required=true)
      private final Boolean enableNestedVirtualization;

    public Boolean enableNestedVirtualization() {
        return this.enableNestedVirtualization;
    }

    @Import(name="threadsPerCore", required=true)
      private final Integer threadsPerCore;

    public Integer threadsPerCore() {
        return this.threadsPerCore;
    }

    public GetInstanceTemplateAdvancedMachineFeature(
        Boolean enableNestedVirtualization,
        Integer threadsPerCore) {
        this.enableNestedVirtualization = Objects.requireNonNull(enableNestedVirtualization, "expected parameter 'enableNestedVirtualization' to be non-null");
        this.threadsPerCore = Objects.requireNonNull(threadsPerCore, "expected parameter 'threadsPerCore' to be non-null");
    }

    private GetInstanceTemplateAdvancedMachineFeature() {
        this.enableNestedVirtualization = null;
        this.threadsPerCore = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetInstanceTemplateAdvancedMachineFeature defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Boolean enableNestedVirtualization;
        private Integer threadsPerCore;

        public Builder() {
    	      // Empty
        }

        public Builder(GetInstanceTemplateAdvancedMachineFeature defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.enableNestedVirtualization = defaults.enableNestedVirtualization;
    	      this.threadsPerCore = defaults.threadsPerCore;
        }

        public Builder enableNestedVirtualization(Boolean enableNestedVirtualization) {
            this.enableNestedVirtualization = Objects.requireNonNull(enableNestedVirtualization);
            return this;
        }
        public Builder threadsPerCore(Integer threadsPerCore) {
            this.threadsPerCore = Objects.requireNonNull(threadsPerCore);
            return this;
        }        public GetInstanceTemplateAdvancedMachineFeature build() {
            return new GetInstanceTemplateAdvancedMachineFeature(enableNestedVirtualization, threadsPerCore);
        }
    }
}
