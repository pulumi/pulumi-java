// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.compute.inputs.InstanceTemplateAdvancedMachineFeaturesGetArgs;
import com.pulumi.gcp.compute.inputs.InstanceTemplateConfidentialInstanceConfigGetArgs;
import com.pulumi.gcp.compute.inputs.InstanceTemplateDiskGetArgs;
import com.pulumi.gcp.compute.inputs.InstanceTemplateGuestAcceleratorGetArgs;
import com.pulumi.gcp.compute.inputs.InstanceTemplateNetworkInterfaceGetArgs;
import com.pulumi.gcp.compute.inputs.InstanceTemplateNetworkPerformanceConfigGetArgs;
import com.pulumi.gcp.compute.inputs.InstanceTemplateReservationAffinityGetArgs;
import com.pulumi.gcp.compute.inputs.InstanceTemplateSchedulingGetArgs;
import com.pulumi.gcp.compute.inputs.InstanceTemplateServiceAccountGetArgs;
import com.pulumi.gcp.compute.inputs.InstanceTemplateShieldedInstanceConfigGetArgs;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class InstanceTemplateState extends com.pulumi.resources.ResourceArgs {

    public static final InstanceTemplateState Empty = new InstanceTemplateState();

    /**
     * Configure Nested Virtualisation and Simultaneous Hyper Threading on this VM. Structure is documented below
     * 
     */
    @Import(name="advancedMachineFeatures")
    private @Nullable Output<InstanceTemplateAdvancedMachineFeaturesGetArgs> advancedMachineFeatures;

    public Optional<Output<InstanceTemplateAdvancedMachineFeaturesGetArgs>> advancedMachineFeatures() {
        return Optional.ofNullable(this.advancedMachineFeatures);
    }

    /**
     * Whether to allow sending and receiving of
     * packets with non-matching source or destination IPs. This defaults to false.
     * 
     */
    @Import(name="canIpForward")
    private @Nullable Output<Boolean> canIpForward;

    public Optional<Output<Boolean>> canIpForward() {
        return Optional.ofNullable(this.canIpForward);
    }

    /**
     * Enable [Confidential Mode](https://cloud.google.com/compute/confidential-vm/docs/about-cvm) on this VM. Structure is documented below
     * 
     */
    @Import(name="confidentialInstanceConfig")
    private @Nullable Output<InstanceTemplateConfidentialInstanceConfigGetArgs> confidentialInstanceConfig;

    public Optional<Output<InstanceTemplateConfidentialInstanceConfigGetArgs>> confidentialInstanceConfig() {
        return Optional.ofNullable(this.confidentialInstanceConfig);
    }

    /**
     * A brief description of this resource.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Disks to attach to instances created from this template.
     * This can be specified multiple times for multiple disks. Structure is
     * documented below.
     * 
     */
    @Import(name="disks")
    private @Nullable Output<List<InstanceTemplateDiskGetArgs>> disks;

    public Optional<Output<List<InstanceTemplateDiskGetArgs>>> disks() {
        return Optional.ofNullable(this.disks);
    }

    /**
     * ) Enable [Virtual Displays](https://cloud.google.com/compute/docs/instances/enable-instance-virtual-display#verify_display_driver) on this instance.
     * **Note**: `allow_stopping_for_update` must be set to true in order to update this field.
     * 
     */
    @Import(name="enableDisplay")
    private @Nullable Output<Boolean> enableDisplay;

    public Optional<Output<Boolean>> enableDisplay() {
        return Optional.ofNullable(this.enableDisplay);
    }

    /**
     * List of the type and count of accelerator cards attached to the instance. Structure documented below.
     * 
     */
    @Import(name="guestAccelerators")
    private @Nullable Output<List<InstanceTemplateGuestAcceleratorGetArgs>> guestAccelerators;

    public Optional<Output<List<InstanceTemplateGuestAcceleratorGetArgs>>> guestAccelerators() {
        return Optional.ofNullable(this.guestAccelerators);
    }

    /**
     * A brief description to use for instances
     * created from this template.
     * 
     */
    @Import(name="instanceDescription")
    private @Nullable Output<String> instanceDescription;

    public Optional<Output<String>> instanceDescription() {
        return Optional.ofNullable(this.instanceDescription);
    }

    /**
     * A set of ket/value label pairs to assign to disk created from
     * this template
     * 
     */
    @Import(name="labels")
    private @Nullable Output<Map<String,String>> labels;

    public Optional<Output<Map<String,String>>> labels() {
        return Optional.ofNullable(this.labels);
    }

    /**
     * The machine type to create.
     * 
     */
    @Import(name="machineType")
    private @Nullable Output<String> machineType;

    public Optional<Output<String>> machineType() {
        return Optional.ofNullable(this.machineType);
    }

    /**
     * Metadata key/value pairs to make available from
     * within instances created from this template.
     * 
     */
    @Import(name="metadata")
    private @Nullable Output<Map<String,Object>> metadata;

    public Optional<Output<Map<String,Object>>> metadata() {
        return Optional.ofNullable(this.metadata);
    }

    /**
     * The unique fingerprint of the metadata.
     * 
     */
    @Import(name="metadataFingerprint")
    private @Nullable Output<String> metadataFingerprint;

    public Optional<Output<String>> metadataFingerprint() {
        return Optional.ofNullable(this.metadataFingerprint);
    }

    /**
     * An alternative to using the
     * startup-script metadata key, mostly to match the compute_instance resource.
     * This replaces the startup-script metadata key on the created instance and
     * thus the two mechanisms are not allowed to be used simultaneously.
     * 
     */
    @Import(name="metadataStartupScript")
    private @Nullable Output<String> metadataStartupScript;

    public Optional<Output<String>> metadataStartupScript() {
        return Optional.ofNullable(this.metadataStartupScript);
    }

    /**
     * Specifies a minimum CPU platform. Applicable values are the friendly names of CPU platforms, such as
     * `Intel Haswell` or `Intel Skylake`. See the complete list [here](https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform).
     * 
     */
    @Import(name="minCpuPlatform")
    private @Nullable Output<String> minCpuPlatform;

    public Optional<Output<String>> minCpuPlatform() {
        return Optional.ofNullable(this.minCpuPlatform);
    }

    /**
     * The name of the instance template. If you leave
     * this blank, the provider will auto-generate a unique name.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Creates a unique name beginning with the specified
     * prefix. Conflicts with `name`.
     * 
     */
    @Import(name="namePrefix")
    private @Nullable Output<String> namePrefix;

    public Optional<Output<String>> namePrefix() {
        return Optional.ofNullable(this.namePrefix);
    }

    /**
     * Networks to attach to instances created from
     * this template. This can be specified multiple times for multiple networks.
     * Structure is documented below.
     * 
     */
    @Import(name="networkInterfaces")
    private @Nullable Output<List<InstanceTemplateNetworkInterfaceGetArgs>> networkInterfaces;

    public Optional<Output<List<InstanceTemplateNetworkInterfaceGetArgs>>> networkInterfaces() {
        return Optional.ofNullable(this.networkInterfaces);
    }

    /**
     * Configures network performance settings for the instance created from the
     * template. Structure is documented below. **Note**: `machine_type`
     * must be a [supported type](https://cloud.google.com/compute/docs/networking/configure-vm-with-high-bandwidth-configuration),
     * the `image` used must include the [`GVNIC`](https://cloud.google.com/compute/docs/networking/using-gvnic#create-instance-gvnic-image)
     * in `guest-os-features`, and `network_interface.0.nic-type` must be `GVNIC`
     * in order for this setting to take effect.
     * 
     */
    @Import(name="networkPerformanceConfig")
    private @Nullable Output<InstanceTemplateNetworkPerformanceConfigGetArgs> networkPerformanceConfig;

    public Optional<Output<InstanceTemplateNetworkPerformanceConfigGetArgs>> networkPerformanceConfig() {
        return Optional.ofNullable(this.networkPerformanceConfig);
    }

    /**
     * The ID of the project in which the resource belongs. If it
     * is not provided, the provider project is used.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * An instance template is a global resource that is not
     * bound to a zone or a region. However, you can still specify some regional
     * resources in an instance template, which restricts the template to the
     * region where that resource resides. For example, a custom `subnetwork`
     * resource is tied to a specific region. Defaults to the region of the
     * Provider if no value is given.
     * 
     */
    @Import(name="region")
    private @Nullable Output<String> region;

    public Optional<Output<String>> region() {
        return Optional.ofNullable(this.region);
    }

    /**
     * Specifies the reservations that this instance can consume from.
     * Structure is documented below.
     * 
     */
    @Import(name="reservationAffinity")
    private @Nullable Output<InstanceTemplateReservationAffinityGetArgs> reservationAffinity;

    public Optional<Output<InstanceTemplateReservationAffinityGetArgs>> reservationAffinity() {
        return Optional.ofNullable(this.reservationAffinity);
    }

    /**
     * The scheduling strategy to use. More details about
     * this configuration option are detailed below.
     * 
     */
    @Import(name="scheduling")
    private @Nullable Output<InstanceTemplateSchedulingGetArgs> scheduling;

    public Optional<Output<InstanceTemplateSchedulingGetArgs>> scheduling() {
        return Optional.ofNullable(this.scheduling);
    }

    /**
     * The URI of the created resource.
     * 
     */
    @Import(name="selfLink")
    private @Nullable Output<String> selfLink;

    public Optional<Output<String>> selfLink() {
        return Optional.ofNullable(this.selfLink);
    }

    /**
     * Service account to attach to the instance. Structure is documented below.
     * 
     */
    @Import(name="serviceAccount")
    private @Nullable Output<InstanceTemplateServiceAccountGetArgs> serviceAccount;

    public Optional<Output<InstanceTemplateServiceAccountGetArgs>> serviceAccount() {
        return Optional.ofNullable(this.serviceAccount);
    }

    /**
     * Enable [Shielded VM](https://cloud.google.com/security/shielded-cloud/shielded-vm) on this instance. Shielded VM provides verifiable integrity to prevent against malware and rootkits. Defaults to disabled. Structure is documented below.
     * **Note**: `shielded_instance_config` can only be used with boot images with shielded vm support. See the complete list [here](https://cloud.google.com/compute/docs/images#shielded-images).
     * 
     */
    @Import(name="shieldedInstanceConfig")
    private @Nullable Output<InstanceTemplateShieldedInstanceConfigGetArgs> shieldedInstanceConfig;

    public Optional<Output<InstanceTemplateShieldedInstanceConfigGetArgs>> shieldedInstanceConfig() {
        return Optional.ofNullable(this.shieldedInstanceConfig);
    }

    /**
     * Tags to attach to the instance.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<List<String>> tags;

    public Optional<Output<List<String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * The unique fingerprint of the tags.
     * 
     */
    @Import(name="tagsFingerprint")
    private @Nullable Output<String> tagsFingerprint;

    public Optional<Output<String>> tagsFingerprint() {
        return Optional.ofNullable(this.tagsFingerprint);
    }

    private InstanceTemplateState() {}

    private InstanceTemplateState(InstanceTemplateState $) {
        this.advancedMachineFeatures = $.advancedMachineFeatures;
        this.canIpForward = $.canIpForward;
        this.confidentialInstanceConfig = $.confidentialInstanceConfig;
        this.description = $.description;
        this.disks = $.disks;
        this.enableDisplay = $.enableDisplay;
        this.guestAccelerators = $.guestAccelerators;
        this.instanceDescription = $.instanceDescription;
        this.labels = $.labels;
        this.machineType = $.machineType;
        this.metadata = $.metadata;
        this.metadataFingerprint = $.metadataFingerprint;
        this.metadataStartupScript = $.metadataStartupScript;
        this.minCpuPlatform = $.minCpuPlatform;
        this.name = $.name;
        this.namePrefix = $.namePrefix;
        this.networkInterfaces = $.networkInterfaces;
        this.networkPerformanceConfig = $.networkPerformanceConfig;
        this.project = $.project;
        this.region = $.region;
        this.reservationAffinity = $.reservationAffinity;
        this.scheduling = $.scheduling;
        this.selfLink = $.selfLink;
        this.serviceAccount = $.serviceAccount;
        this.shieldedInstanceConfig = $.shieldedInstanceConfig;
        this.tags = $.tags;
        this.tagsFingerprint = $.tagsFingerprint;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InstanceTemplateState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InstanceTemplateState $;

        public Builder() {
            $ = new InstanceTemplateState();
        }

        public Builder(InstanceTemplateState defaults) {
            $ = new InstanceTemplateState(Objects.requireNonNull(defaults));
        }

        public Builder advancedMachineFeatures(@Nullable Output<InstanceTemplateAdvancedMachineFeaturesGetArgs> advancedMachineFeatures) {
            $.advancedMachineFeatures = advancedMachineFeatures;
            return this;
        }

        public Builder advancedMachineFeatures(InstanceTemplateAdvancedMachineFeaturesGetArgs advancedMachineFeatures) {
            return advancedMachineFeatures(Output.of(advancedMachineFeatures));
        }

        public Builder canIpForward(@Nullable Output<Boolean> canIpForward) {
            $.canIpForward = canIpForward;
            return this;
        }

        public Builder canIpForward(Boolean canIpForward) {
            return canIpForward(Output.of(canIpForward));
        }

        public Builder confidentialInstanceConfig(@Nullable Output<InstanceTemplateConfidentialInstanceConfigGetArgs> confidentialInstanceConfig) {
            $.confidentialInstanceConfig = confidentialInstanceConfig;
            return this;
        }

        public Builder confidentialInstanceConfig(InstanceTemplateConfidentialInstanceConfigGetArgs confidentialInstanceConfig) {
            return confidentialInstanceConfig(Output.of(confidentialInstanceConfig));
        }

        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        public Builder description(String description) {
            return description(Output.of(description));
        }

        public Builder disks(@Nullable Output<List<InstanceTemplateDiskGetArgs>> disks) {
            $.disks = disks;
            return this;
        }

        public Builder disks(List<InstanceTemplateDiskGetArgs> disks) {
            return disks(Output.of(disks));
        }

        public Builder disks(InstanceTemplateDiskGetArgs... disks) {
            return disks(List.of(disks));
        }

        public Builder enableDisplay(@Nullable Output<Boolean> enableDisplay) {
            $.enableDisplay = enableDisplay;
            return this;
        }

        public Builder enableDisplay(Boolean enableDisplay) {
            return enableDisplay(Output.of(enableDisplay));
        }

        public Builder guestAccelerators(@Nullable Output<List<InstanceTemplateGuestAcceleratorGetArgs>> guestAccelerators) {
            $.guestAccelerators = guestAccelerators;
            return this;
        }

        public Builder guestAccelerators(List<InstanceTemplateGuestAcceleratorGetArgs> guestAccelerators) {
            return guestAccelerators(Output.of(guestAccelerators));
        }

        public Builder guestAccelerators(InstanceTemplateGuestAcceleratorGetArgs... guestAccelerators) {
            return guestAccelerators(List.of(guestAccelerators));
        }

        public Builder instanceDescription(@Nullable Output<String> instanceDescription) {
            $.instanceDescription = instanceDescription;
            return this;
        }

        public Builder instanceDescription(String instanceDescription) {
            return instanceDescription(Output.of(instanceDescription));
        }

        public Builder labels(@Nullable Output<Map<String,String>> labels) {
            $.labels = labels;
            return this;
        }

        public Builder labels(Map<String,String> labels) {
            return labels(Output.of(labels));
        }

        public Builder machineType(@Nullable Output<String> machineType) {
            $.machineType = machineType;
            return this;
        }

        public Builder machineType(String machineType) {
            return machineType(Output.of(machineType));
        }

        public Builder metadata(@Nullable Output<Map<String,Object>> metadata) {
            $.metadata = metadata;
            return this;
        }

        public Builder metadata(Map<String,Object> metadata) {
            return metadata(Output.of(metadata));
        }

        public Builder metadataFingerprint(@Nullable Output<String> metadataFingerprint) {
            $.metadataFingerprint = metadataFingerprint;
            return this;
        }

        public Builder metadataFingerprint(String metadataFingerprint) {
            return metadataFingerprint(Output.of(metadataFingerprint));
        }

        public Builder metadataStartupScript(@Nullable Output<String> metadataStartupScript) {
            $.metadataStartupScript = metadataStartupScript;
            return this;
        }

        public Builder metadataStartupScript(String metadataStartupScript) {
            return metadataStartupScript(Output.of(metadataStartupScript));
        }

        public Builder minCpuPlatform(@Nullable Output<String> minCpuPlatform) {
            $.minCpuPlatform = minCpuPlatform;
            return this;
        }

        public Builder minCpuPlatform(String minCpuPlatform) {
            return minCpuPlatform(Output.of(minCpuPlatform));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder namePrefix(@Nullable Output<String> namePrefix) {
            $.namePrefix = namePrefix;
            return this;
        }

        public Builder namePrefix(String namePrefix) {
            return namePrefix(Output.of(namePrefix));
        }

        public Builder networkInterfaces(@Nullable Output<List<InstanceTemplateNetworkInterfaceGetArgs>> networkInterfaces) {
            $.networkInterfaces = networkInterfaces;
            return this;
        }

        public Builder networkInterfaces(List<InstanceTemplateNetworkInterfaceGetArgs> networkInterfaces) {
            return networkInterfaces(Output.of(networkInterfaces));
        }

        public Builder networkInterfaces(InstanceTemplateNetworkInterfaceGetArgs... networkInterfaces) {
            return networkInterfaces(List.of(networkInterfaces));
        }

        public Builder networkPerformanceConfig(@Nullable Output<InstanceTemplateNetworkPerformanceConfigGetArgs> networkPerformanceConfig) {
            $.networkPerformanceConfig = networkPerformanceConfig;
            return this;
        }

        public Builder networkPerformanceConfig(InstanceTemplateNetworkPerformanceConfigGetArgs networkPerformanceConfig) {
            return networkPerformanceConfig(Output.of(networkPerformanceConfig));
        }

        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        public Builder project(String project) {
            return project(Output.of(project));
        }

        public Builder region(@Nullable Output<String> region) {
            $.region = region;
            return this;
        }

        public Builder region(String region) {
            return region(Output.of(region));
        }

        public Builder reservationAffinity(@Nullable Output<InstanceTemplateReservationAffinityGetArgs> reservationAffinity) {
            $.reservationAffinity = reservationAffinity;
            return this;
        }

        public Builder reservationAffinity(InstanceTemplateReservationAffinityGetArgs reservationAffinity) {
            return reservationAffinity(Output.of(reservationAffinity));
        }

        public Builder scheduling(@Nullable Output<InstanceTemplateSchedulingGetArgs> scheduling) {
            $.scheduling = scheduling;
            return this;
        }

        public Builder scheduling(InstanceTemplateSchedulingGetArgs scheduling) {
            return scheduling(Output.of(scheduling));
        }

        public Builder selfLink(@Nullable Output<String> selfLink) {
            $.selfLink = selfLink;
            return this;
        }

        public Builder selfLink(String selfLink) {
            return selfLink(Output.of(selfLink));
        }

        public Builder serviceAccount(@Nullable Output<InstanceTemplateServiceAccountGetArgs> serviceAccount) {
            $.serviceAccount = serviceAccount;
            return this;
        }

        public Builder serviceAccount(InstanceTemplateServiceAccountGetArgs serviceAccount) {
            return serviceAccount(Output.of(serviceAccount));
        }

        public Builder shieldedInstanceConfig(@Nullable Output<InstanceTemplateShieldedInstanceConfigGetArgs> shieldedInstanceConfig) {
            $.shieldedInstanceConfig = shieldedInstanceConfig;
            return this;
        }

        public Builder shieldedInstanceConfig(InstanceTemplateShieldedInstanceConfigGetArgs shieldedInstanceConfig) {
            return shieldedInstanceConfig(Output.of(shieldedInstanceConfig));
        }

        public Builder tags(@Nullable Output<List<String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(List<String> tags) {
            return tags(Output.of(tags));
        }

        public Builder tags(String... tags) {
            return tags(List.of(tags));
        }

        public Builder tagsFingerprint(@Nullable Output<String> tagsFingerprint) {
            $.tagsFingerprint = tagsFingerprint;
            return this;
        }

        public Builder tagsFingerprint(String tagsFingerprint) {
            return tagsFingerprint(Output.of(tagsFingerprint));
        }

        public InstanceTemplateState build() {
            return $;
        }
    }

}
