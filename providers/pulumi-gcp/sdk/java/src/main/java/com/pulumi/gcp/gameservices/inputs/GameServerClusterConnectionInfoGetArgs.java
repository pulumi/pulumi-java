// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.gameservices.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.gameservices.inputs.GameServerClusterConnectionInfoGkeClusterReferenceGetArgs;
import java.lang.String;
import java.util.Objects;


public final class GameServerClusterConnectionInfoGetArgs extends com.pulumi.resources.ResourceArgs {

    public static final GameServerClusterConnectionInfoGetArgs Empty = new GameServerClusterConnectionInfoGetArgs();

    /**
     * Reference of the GKE cluster where the game servers are installed.
     * Structure is documented below.
     * 
     */
    @Import(name="gkeClusterReference", required=true)
    private Output<GameServerClusterConnectionInfoGkeClusterReferenceGetArgs> gkeClusterReference;

    /**
     * @return Reference of the GKE cluster where the game servers are installed.
     * Structure is documented below.
     * 
     */
    public Output<GameServerClusterConnectionInfoGkeClusterReferenceGetArgs> gkeClusterReference() {
        return this.gkeClusterReference;
    }

    /**
     * Namespace designated on the game server cluster where the game server
     * instances will be created. The namespace existence will be validated
     * during creation.
     * 
     */
    @Import(name="namespace", required=true)
    private Output<String> namespace;

    /**
     * @return Namespace designated on the game server cluster where the game server
     * instances will be created. The namespace existence will be validated
     * during creation.
     * 
     */
    public Output<String> namespace() {
        return this.namespace;
    }

    private GameServerClusterConnectionInfoGetArgs() {}

    private GameServerClusterConnectionInfoGetArgs(GameServerClusterConnectionInfoGetArgs $) {
        this.gkeClusterReference = $.gkeClusterReference;
        this.namespace = $.namespace;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GameServerClusterConnectionInfoGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GameServerClusterConnectionInfoGetArgs $;

        public Builder() {
            $ = new GameServerClusterConnectionInfoGetArgs();
        }

        public Builder(GameServerClusterConnectionInfoGetArgs defaults) {
            $ = new GameServerClusterConnectionInfoGetArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param gkeClusterReference Reference of the GKE cluster where the game servers are installed.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder gkeClusterReference(Output<GameServerClusterConnectionInfoGkeClusterReferenceGetArgs> gkeClusterReference) {
            $.gkeClusterReference = gkeClusterReference;
            return this;
        }

        /**
         * @param gkeClusterReference Reference of the GKE cluster where the game servers are installed.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder gkeClusterReference(GameServerClusterConnectionInfoGkeClusterReferenceGetArgs gkeClusterReference) {
            return gkeClusterReference(Output.of(gkeClusterReference));
        }

        /**
         * @param namespace Namespace designated on the game server cluster where the game server
         * instances will be created. The namespace existence will be validated
         * during creation.
         * 
         * @return builder
         * 
         */
        public Builder namespace(Output<String> namespace) {
            $.namespace = namespace;
            return this;
        }

        /**
         * @param namespace Namespace designated on the game server cluster where the game server
         * instances will be created. The namespace existence will be validated
         * during creation.
         * 
         * @return builder
         * 
         */
        public Builder namespace(String namespace) {
            return namespace(Output.of(namespace));
        }

        public GameServerClusterConnectionInfoGetArgs build() {
            $.gkeClusterReference = Objects.requireNonNull($.gkeClusterReference, "expected parameter 'gkeClusterReference' to be non-null");
            $.namespace = Objects.requireNonNull($.namespace, "expected parameter 'namespace' to be non-null");
            return $;
        }
    }

}
