// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class MachineImageIamPolicyArgs extends com.pulumi.resources.ResourceArgs {

    public static final MachineImageIamPolicyArgs Empty = new MachineImageIamPolicyArgs();

    /**
     * Used to find the parent resource to bind the IAM policy to
     * 
     */
    @Import(name="machineImage", required=true)
    private Output<String> machineImage;

    public Output<String> machineImage() {
        return this.machineImage;
    }

    /**
     * The policy data generated by
     * a `gcp.organizations.getIAMPolicy` data source.
     * 
     */
    @Import(name="policyData", required=true)
    private Output<String> policyData;

    public Output<String> policyData() {
        return this.policyData;
    }

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    private MachineImageIamPolicyArgs() {}

    private MachineImageIamPolicyArgs(MachineImageIamPolicyArgs $) {
        this.machineImage = $.machineImage;
        this.policyData = $.policyData;
        this.project = $.project;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MachineImageIamPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MachineImageIamPolicyArgs $;

        public Builder() {
            $ = new MachineImageIamPolicyArgs();
        }

        public Builder(MachineImageIamPolicyArgs defaults) {
            $ = new MachineImageIamPolicyArgs(Objects.requireNonNull(defaults));
        }

        public Builder machineImage(Output<String> machineImage) {
            $.machineImage = machineImage;
            return this;
        }

        public Builder machineImage(String machineImage) {
            return machineImage(Output.of(machineImage));
        }

        public Builder policyData(Output<String> policyData) {
            $.policyData = policyData;
            return this;
        }

        public Builder policyData(String policyData) {
            return policyData(Output.of(policyData));
        }

        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        public Builder project(String project) {
            return project(Output.of(project));
        }

        public MachineImageIamPolicyArgs build() {
            $.machineImage = Objects.requireNonNull($.machineImage, "expected parameter 'machineImage' to be non-null");
            $.policyData = Objects.requireNonNull($.policyData, "expected parameter 'policyData' to be non-null");
            return $;
        }
    }

}
