// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.accesscontextmanager.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.accesscontextmanager.inputs.AccessLevelBasicGetArgs;
import com.pulumi.gcp.accesscontextmanager.inputs.AccessLevelCustomGetArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AccessLevelState extends com.pulumi.resources.ResourceArgs {

    public static final AccessLevelState Empty = new AccessLevelState();

    /**
     * A set of predefined conditions for the access level and a combining function.
     * Structure is documented below.
     * 
     */
    @Import(name="basic")
    private @Nullable Output<AccessLevelBasicGetArgs> basic;

    public Optional<Output<AccessLevelBasicGetArgs>> basic() {
        return Optional.ofNullable(this.basic);
    }

    /**
     * Custom access level conditions are set using the Cloud Common Expression Language to represent the necessary conditions for the level to apply to a request.
     * See CEL spec at: https://github.com/google/cel-spec.
     * Structure is documented below.
     * 
     */
    @Import(name="custom")
    private @Nullable Output<AccessLevelCustomGetArgs> custom;

    public Optional<Output<AccessLevelCustomGetArgs>> custom() {
        return Optional.ofNullable(this.custom);
    }

    /**
     * Description of the expression
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Resource name for the Access Level. The short_name component must begin
     * with a letter and only include alphanumeric and &#39;_&#39;.
     * Format: accessPolicies/{policy_id}/accessLevels/{short_name}
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The AccessPolicy this AccessLevel lives in.
     * Format: accessPolicies/{policy_id}
     * 
     */
    @Import(name="parent")
    private @Nullable Output<String> parent;

    public Optional<Output<String>> parent() {
        return Optional.ofNullable(this.parent);
    }

    /**
     * Title for the expression, i.e. a short string describing its purpose.
     * 
     */
    @Import(name="title")
    private @Nullable Output<String> title;

    public Optional<Output<String>> title() {
        return Optional.ofNullable(this.title);
    }

    private AccessLevelState() {}

    private AccessLevelState(AccessLevelState $) {
        this.basic = $.basic;
        this.custom = $.custom;
        this.description = $.description;
        this.name = $.name;
        this.parent = $.parent;
        this.title = $.title;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AccessLevelState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AccessLevelState $;

        public Builder() {
            $ = new AccessLevelState();
        }

        public Builder(AccessLevelState defaults) {
            $ = new AccessLevelState(Objects.requireNonNull(defaults));
        }

        public Builder basic(@Nullable Output<AccessLevelBasicGetArgs> basic) {
            $.basic = basic;
            return this;
        }

        public Builder basic(AccessLevelBasicGetArgs basic) {
            return basic(Output.of(basic));
        }

        public Builder custom(@Nullable Output<AccessLevelCustomGetArgs> custom) {
            $.custom = custom;
            return this;
        }

        public Builder custom(AccessLevelCustomGetArgs custom) {
            return custom(Output.of(custom));
        }

        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        public Builder description(String description) {
            return description(Output.of(description));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder parent(@Nullable Output<String> parent) {
            $.parent = parent;
            return this;
        }

        public Builder parent(String parent) {
            return parent(Output.of(parent));
        }

        public Builder title(@Nullable Output<String> title) {
            $.title = title;
            return this;
        }

        public Builder title(String title) {
            return title(Output.of(title));
        }

        public AccessLevelState build() {
            return $;
        }
    }

}
