// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class NetworkPeeringRoutesConfigState extends com.pulumi.resources.ResourceArgs {

    public static final NetworkPeeringRoutesConfigState Empty = new NetworkPeeringRoutesConfigState();

    /**
     * Whether to export the custom routes to the peer network.
     * 
     */
    @Import(name="exportCustomRoutes")
    private @Nullable Output<Boolean> exportCustomRoutes;

    public Optional<Output<Boolean>> exportCustomRoutes() {
        return Optional.ofNullable(this.exportCustomRoutes);
    }

    /**
     * Whether to import the custom routes to the peer network.
     * 
     */
    @Import(name="importCustomRoutes")
    private @Nullable Output<Boolean> importCustomRoutes;

    public Optional<Output<Boolean>> importCustomRoutes() {
        return Optional.ofNullable(this.importCustomRoutes);
    }

    /**
     * The name of the primary network for the peering.
     * 
     */
    @Import(name="network")
    private @Nullable Output<String> network;

    public Optional<Output<String>> network() {
        return Optional.ofNullable(this.network);
    }

    /**
     * Name of the peering.
     * 
     */
    @Import(name="peering")
    private @Nullable Output<String> peering;

    public Optional<Output<String>> peering() {
        return Optional.ofNullable(this.peering);
    }

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    private NetworkPeeringRoutesConfigState() {}

    private NetworkPeeringRoutesConfigState(NetworkPeeringRoutesConfigState $) {
        this.exportCustomRoutes = $.exportCustomRoutes;
        this.importCustomRoutes = $.importCustomRoutes;
        this.network = $.network;
        this.peering = $.peering;
        this.project = $.project;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NetworkPeeringRoutesConfigState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NetworkPeeringRoutesConfigState $;

        public Builder() {
            $ = new NetworkPeeringRoutesConfigState();
        }

        public Builder(NetworkPeeringRoutesConfigState defaults) {
            $ = new NetworkPeeringRoutesConfigState(Objects.requireNonNull(defaults));
        }

        public Builder exportCustomRoutes(@Nullable Output<Boolean> exportCustomRoutes) {
            $.exportCustomRoutes = exportCustomRoutes;
            return this;
        }

        public Builder exportCustomRoutes(Boolean exportCustomRoutes) {
            return exportCustomRoutes(Output.of(exportCustomRoutes));
        }

        public Builder importCustomRoutes(@Nullable Output<Boolean> importCustomRoutes) {
            $.importCustomRoutes = importCustomRoutes;
            return this;
        }

        public Builder importCustomRoutes(Boolean importCustomRoutes) {
            return importCustomRoutes(Output.of(importCustomRoutes));
        }

        public Builder network(@Nullable Output<String> network) {
            $.network = network;
            return this;
        }

        public Builder network(String network) {
            return network(Output.of(network));
        }

        public Builder peering(@Nullable Output<String> peering) {
            $.peering = peering;
            return this;
        }

        public Builder peering(String peering) {
            return peering(Output.of(peering));
        }

        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        public Builder project(String project) {
            return project(Output.of(project));
        }

        public NetworkPeeringRoutesConfigState build() {
            return $;
        }
    }

}
