// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.pubsub.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class LiteSubscriptionDeliveryConfigGetArgs extends com.pulumi.resources.ResourceArgs {

    public static final LiteSubscriptionDeliveryConfigGetArgs Empty = new LiteSubscriptionDeliveryConfigGetArgs();

    /**
     * When this subscription should send messages to subscribers relative to messages persistence in storage.
     * Possible values are `DELIVER_IMMEDIATELY`, `DELIVER_AFTER_STORED`, and `DELIVERY_REQUIREMENT_UNSPECIFIED`.
     * 
     */
    @Import(name="deliveryRequirement", required=true)
    private Output<String> deliveryRequirement;

    /**
     * @return When this subscription should send messages to subscribers relative to messages persistence in storage.
     * Possible values are `DELIVER_IMMEDIATELY`, `DELIVER_AFTER_STORED`, and `DELIVERY_REQUIREMENT_UNSPECIFIED`.
     * 
     */
    public Output<String> deliveryRequirement() {
        return this.deliveryRequirement;
    }

    private LiteSubscriptionDeliveryConfigGetArgs() {}

    private LiteSubscriptionDeliveryConfigGetArgs(LiteSubscriptionDeliveryConfigGetArgs $) {
        this.deliveryRequirement = $.deliveryRequirement;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LiteSubscriptionDeliveryConfigGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LiteSubscriptionDeliveryConfigGetArgs $;

        public Builder() {
            $ = new LiteSubscriptionDeliveryConfigGetArgs();
        }

        public Builder(LiteSubscriptionDeliveryConfigGetArgs defaults) {
            $ = new LiteSubscriptionDeliveryConfigGetArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param deliveryRequirement When this subscription should send messages to subscribers relative to messages persistence in storage.
         * Possible values are `DELIVER_IMMEDIATELY`, `DELIVER_AFTER_STORED`, and `DELIVERY_REQUIREMENT_UNSPECIFIED`.
         * 
         * @return builder
         * 
         */
        public Builder deliveryRequirement(Output<String> deliveryRequirement) {
            $.deliveryRequirement = deliveryRequirement;
            return this;
        }

        /**
         * @param deliveryRequirement When this subscription should send messages to subscribers relative to messages persistence in storage.
         * Possible values are `DELIVER_IMMEDIATELY`, `DELIVER_AFTER_STORED`, and `DELIVERY_REQUIREMENT_UNSPECIFIED`.
         * 
         * @return builder
         * 
         */
        public Builder deliveryRequirement(String deliveryRequirement) {
            return deliveryRequirement(Output.of(deliveryRequirement));
        }

        public LiteSubscriptionDeliveryConfigGetArgs build() {
            $.deliveryRequirement = Objects.requireNonNull($.deliveryRequirement, "expected parameter 'deliveryRequirement' to be non-null");
            return $;
        }
    }

}
