// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.compute.inputs.ReservationSpecificReservationInstancePropertiesGetArgs;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ReservationSpecificReservationGetArgs extends com.pulumi.resources.ResourceArgs {

    public static final ReservationSpecificReservationGetArgs Empty = new ReservationSpecificReservationGetArgs();

    /**
     * The number of resources that are allocated.
     * 
     */
    @Import(name="count", required=true)
    private Output<Integer> count;

    /**
     * @return The number of resources that are allocated.
     * 
     */
    public Output<Integer> count() {
        return this.count;
    }

    /**
     * - 
     * How many instances are in use.
     * 
     */
    @Import(name="inUseCount")
    private @Nullable Output<Integer> inUseCount;

    /**
     * @return -
     * How many instances are in use.
     * 
     */
    public Optional<Output<Integer>> inUseCount() {
        return Optional.ofNullable(this.inUseCount);
    }

    /**
     * The instance properties for the reservation.
     * Structure is documented below.
     * 
     */
    @Import(name="instanceProperties", required=true)
    private Output<ReservationSpecificReservationInstancePropertiesGetArgs> instanceProperties;

    /**
     * @return The instance properties for the reservation.
     * Structure is documented below.
     * 
     */
    public Output<ReservationSpecificReservationInstancePropertiesGetArgs> instanceProperties() {
        return this.instanceProperties;
    }

    private ReservationSpecificReservationGetArgs() {}

    private ReservationSpecificReservationGetArgs(ReservationSpecificReservationGetArgs $) {
        this.count = $.count;
        this.inUseCount = $.inUseCount;
        this.instanceProperties = $.instanceProperties;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ReservationSpecificReservationGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ReservationSpecificReservationGetArgs $;

        public Builder() {
            $ = new ReservationSpecificReservationGetArgs();
        }

        public Builder(ReservationSpecificReservationGetArgs defaults) {
            $ = new ReservationSpecificReservationGetArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param count The number of resources that are allocated.
         * 
         * @return builder
         * 
         */
        public Builder count(Output<Integer> count) {
            $.count = count;
            return this;
        }

        /**
         * @param count The number of resources that are allocated.
         * 
         * @return builder
         * 
         */
        public Builder count(Integer count) {
            return count(Output.of(count));
        }

        /**
         * @param inUseCount -
         * How many instances are in use.
         * 
         * @return builder
         * 
         */
        public Builder inUseCount(@Nullable Output<Integer> inUseCount) {
            $.inUseCount = inUseCount;
            return this;
        }

        /**
         * @param inUseCount -
         * How many instances are in use.
         * 
         * @return builder
         * 
         */
        public Builder inUseCount(Integer inUseCount) {
            return inUseCount(Output.of(inUseCount));
        }

        /**
         * @param instanceProperties The instance properties for the reservation.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder instanceProperties(Output<ReservationSpecificReservationInstancePropertiesGetArgs> instanceProperties) {
            $.instanceProperties = instanceProperties;
            return this;
        }

        /**
         * @param instanceProperties The instance properties for the reservation.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder instanceProperties(ReservationSpecificReservationInstancePropertiesGetArgs instanceProperties) {
            return instanceProperties(Output.of(instanceProperties));
        }

        public ReservationSpecificReservationGetArgs build() {
            $.count = Objects.requireNonNull($.count, "expected parameter 'count' to be non-null");
            $.instanceProperties = Objects.requireNonNull($.instanceProperties, "expected parameter 'instanceProperties' to be non-null");
            return $;
        }
    }

}
