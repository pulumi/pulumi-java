// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.storage.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class GetProjectServiceAccountArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetProjectServiceAccountArgs Empty = new GetProjectServiceAccountArgs();

    /**
     * The project the unique service account was created for. If it is not provided, the provider project is used.
     * 
     */
    @Import(name="project")
    private Output</* @Nullable */ String> project;

    /**
     * @return The project the unique service account was created for. If it is not provided, the provider project is used.
     * 
     */
    public Output</* @Nullable */ String> project() {
        return this.project;
    }

    /**
     * The project the lookup originates from. This field is used if you are making the request
     * from a different account than the one you are finding the service account for.
     * 
     */
    @Import(name="userProject")
    private Output</* @Nullable */ String> userProject;

    /**
     * @return The project the lookup originates from. This field is used if you are making the request
     * from a different account than the one you are finding the service account for.
     * 
     */
    public Output</* @Nullable */ String> userProject() {
        return this.userProject;
    }

    private GetProjectServiceAccountArgs() {}

    private GetProjectServiceAccountArgs(GetProjectServiceAccountArgs $) {
        this.project = $.project;
        this.userProject = $.userProject;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetProjectServiceAccountArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetProjectServiceAccountArgs $;

        public Builder() {
            $ = new GetProjectServiceAccountArgs();
        }

        public Builder(GetProjectServiceAccountArgs defaults) {
            $ = new GetProjectServiceAccountArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param project The project the unique service account was created for. If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(Output</* @Nullable */ String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The project the unique service account was created for. If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable String project) {
            return project(Output.of(project));
        }

        /**
         * @param userProject The project the lookup originates from. This field is used if you are making the request
         * from a different account than the one you are finding the service account for.
         * 
         * @return builder
         * 
         */
        public Builder userProject(Output</* @Nullable */ String> userProject) {
            $.userProject = userProject;
            return this;
        }

        /**
         * @param userProject The project the lookup originates from. This field is used if you are making the request
         * from a different account than the one you are finding the service account for.
         * 
         * @return builder
         * 
         */
        public Builder userProject(@Nullable String userProject) {
            return userProject(Output.of(userProject));
        }

        public GetProjectServiceAccountArgs build() {
            return $;
        }
    }

}
