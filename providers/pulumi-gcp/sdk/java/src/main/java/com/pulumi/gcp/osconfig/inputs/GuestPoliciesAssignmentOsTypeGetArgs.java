// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.osconfig.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GuestPoliciesAssignmentOsTypeGetArgs extends com.pulumi.resources.ResourceArgs {

    public static final GuestPoliciesAssignmentOsTypeGetArgs Empty = new GuestPoliciesAssignmentOsTypeGetArgs();

    /**
     * Targets VM instances with OS Inventory enabled and having the following OS architecture.
     * 
     */
    @Import(name="osArchitecture")
    private @Nullable Output<String> osArchitecture;

    public Optional<Output<String>> osArchitecture() {
        return Optional.ofNullable(this.osArchitecture);
    }

    /**
     * Targets VM instances with OS Inventory enabled and having the following OS short name, for example &#34;debian&#34; or &#34;windows&#34;.
     * 
     */
    @Import(name="osShortName")
    private @Nullable Output<String> osShortName;

    public Optional<Output<String>> osShortName() {
        return Optional.ofNullable(this.osShortName);
    }

    /**
     * Targets VM instances with OS Inventory enabled and having the following following OS version.
     * 
     */
    @Import(name="osVersion")
    private @Nullable Output<String> osVersion;

    public Optional<Output<String>> osVersion() {
        return Optional.ofNullable(this.osVersion);
    }

    private GuestPoliciesAssignmentOsTypeGetArgs() {}

    private GuestPoliciesAssignmentOsTypeGetArgs(GuestPoliciesAssignmentOsTypeGetArgs $) {
        this.osArchitecture = $.osArchitecture;
        this.osShortName = $.osShortName;
        this.osVersion = $.osVersion;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GuestPoliciesAssignmentOsTypeGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GuestPoliciesAssignmentOsTypeGetArgs $;

        public Builder() {
            $ = new GuestPoliciesAssignmentOsTypeGetArgs();
        }

        public Builder(GuestPoliciesAssignmentOsTypeGetArgs defaults) {
            $ = new GuestPoliciesAssignmentOsTypeGetArgs(Objects.requireNonNull(defaults));
        }

        public Builder osArchitecture(@Nullable Output<String> osArchitecture) {
            $.osArchitecture = osArchitecture;
            return this;
        }

        public Builder osArchitecture(String osArchitecture) {
            return osArchitecture(Output.of(osArchitecture));
        }

        public Builder osShortName(@Nullable Output<String> osShortName) {
            $.osShortName = osShortName;
            return this;
        }

        public Builder osShortName(String osShortName) {
            return osShortName(Output.of(osShortName));
        }

        public Builder osVersion(@Nullable Output<String> osVersion) {
            $.osVersion = osVersion;
            return this;
        }

        public Builder osVersion(String osVersion) {
            return osVersion(Output.of(osVersion));
        }

        public GuestPoliciesAssignmentOsTypeGetArgs build() {
            return $;
        }
    }

}
