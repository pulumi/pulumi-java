// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.cloudidentity;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import com.pulumi.gcp.cloudidentity.inputs.GroupMembershipMemberKeyArgs;
import com.pulumi.gcp.cloudidentity.inputs.GroupMembershipPreferredMemberKeyArgs;
import com.pulumi.gcp.cloudidentity.inputs.GroupMembershipRoleArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class GroupMembershipArgs extends com.pulumi.resources.ResourceArgs {

    public static final GroupMembershipArgs Empty = new GroupMembershipArgs();

    /**
     * The name of the Group to create this membership in.
     * 
     */
    @Import(name="group", required=true)
      private final Output<String> group;

    public Output<String> group() {
        return this.group;
    }

    /**
     * EntityKey of the member.
     * Structure is documented below.
     * 
     */
    @Import(name="memberKey")
      private final @Nullable Output<GroupMembershipMemberKeyArgs> memberKey;

    public Output<GroupMembershipMemberKeyArgs> memberKey() {
        return this.memberKey == null ? Codegen.empty() : this.memberKey;
    }

    /**
     * EntityKey of the member.
     * Structure is documented below.
     * 
     */
    @Import(name="preferredMemberKey")
      private final @Nullable Output<GroupMembershipPreferredMemberKeyArgs> preferredMemberKey;

    public Output<GroupMembershipPreferredMemberKeyArgs> preferredMemberKey() {
        return this.preferredMemberKey == null ? Codegen.empty() : this.preferredMemberKey;
    }

    /**
     * The MembershipRoles that apply to the Membership.
     * Must not contain duplicate MembershipRoles with the same name.
     * Structure is documented below.
     * 
     */
    @Import(name="roles", required=true)
      private final Output<List<GroupMembershipRoleArgs>> roles;

    public Output<List<GroupMembershipRoleArgs>> roles() {
        return this.roles;
    }

    public GroupMembershipArgs(
        Output<String> group,
        @Nullable Output<GroupMembershipMemberKeyArgs> memberKey,
        @Nullable Output<GroupMembershipPreferredMemberKeyArgs> preferredMemberKey,
        Output<List<GroupMembershipRoleArgs>> roles) {
        this.group = Objects.requireNonNull(group, "expected parameter 'group' to be non-null");
        this.memberKey = memberKey;
        this.preferredMemberKey = preferredMemberKey;
        this.roles = Objects.requireNonNull(roles, "expected parameter 'roles' to be non-null");
    }

    private GroupMembershipArgs() {
        this.group = Codegen.empty();
        this.memberKey = Codegen.empty();
        this.preferredMemberKey = Codegen.empty();
        this.roles = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GroupMembershipArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> group;
        private @Nullable Output<GroupMembershipMemberKeyArgs> memberKey;
        private @Nullable Output<GroupMembershipPreferredMemberKeyArgs> preferredMemberKey;
        private Output<List<GroupMembershipRoleArgs>> roles;

        public Builder() {
    	      // Empty
        }

        public Builder(GroupMembershipArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.group = defaults.group;
    	      this.memberKey = defaults.memberKey;
    	      this.preferredMemberKey = defaults.preferredMemberKey;
    	      this.roles = defaults.roles;
        }

        public Builder group(Output<String> group) {
            this.group = Objects.requireNonNull(group);
            return this;
        }
        public Builder group(String group) {
            this.group = Output.of(Objects.requireNonNull(group));
            return this;
        }
        public Builder memberKey(@Nullable Output<GroupMembershipMemberKeyArgs> memberKey) {
            this.memberKey = memberKey;
            return this;
        }
        public Builder memberKey(@Nullable GroupMembershipMemberKeyArgs memberKey) {
            this.memberKey = Codegen.ofNullable(memberKey);
            return this;
        }
        public Builder preferredMemberKey(@Nullable Output<GroupMembershipPreferredMemberKeyArgs> preferredMemberKey) {
            this.preferredMemberKey = preferredMemberKey;
            return this;
        }
        public Builder preferredMemberKey(@Nullable GroupMembershipPreferredMemberKeyArgs preferredMemberKey) {
            this.preferredMemberKey = Codegen.ofNullable(preferredMemberKey);
            return this;
        }
        public Builder roles(Output<List<GroupMembershipRoleArgs>> roles) {
            this.roles = Objects.requireNonNull(roles);
            return this;
        }
        public Builder roles(List<GroupMembershipRoleArgs> roles) {
            this.roles = Output.of(Objects.requireNonNull(roles));
            return this;
        }
        public Builder roles(GroupMembershipRoleArgs... roles) {
            return roles(List.of(roles));
        }        public GroupMembershipArgs build() {
            return new GroupMembershipArgs(group, memberKey, preferredMemberKey, roles);
        }
    }
}
