// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.container.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.util.Objects;


public final class ClusterNodePoolUpgradeSettingsGetArgs extends com.pulumi.resources.ResourceArgs {

    public static final ClusterNodePoolUpgradeSettingsGetArgs Empty = new ClusterNodePoolUpgradeSettingsGetArgs();

    @Import(name="maxSurge", required=true)
    private Output<Integer> maxSurge;

    public Output<Integer> maxSurge() {
        return this.maxSurge;
    }

    @Import(name="maxUnavailable", required=true)
    private Output<Integer> maxUnavailable;

    public Output<Integer> maxUnavailable() {
        return this.maxUnavailable;
    }

    private ClusterNodePoolUpgradeSettingsGetArgs() {}

    private ClusterNodePoolUpgradeSettingsGetArgs(ClusterNodePoolUpgradeSettingsGetArgs $) {
        this.maxSurge = $.maxSurge;
        this.maxUnavailable = $.maxUnavailable;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClusterNodePoolUpgradeSettingsGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClusterNodePoolUpgradeSettingsGetArgs $;

        public Builder() {
            $ = new ClusterNodePoolUpgradeSettingsGetArgs();
        }

        public Builder(ClusterNodePoolUpgradeSettingsGetArgs defaults) {
            $ = new ClusterNodePoolUpgradeSettingsGetArgs(Objects.requireNonNull(defaults));
        }

        public Builder maxSurge(Output<Integer> maxSurge) {
            $.maxSurge = maxSurge;
            return this;
        }

        public Builder maxSurge(Integer maxSurge) {
            return maxSurge(Output.of(maxSurge));
        }

        public Builder maxUnavailable(Output<Integer> maxUnavailable) {
            $.maxUnavailable = maxUnavailable;
            return this;
        }

        public Builder maxUnavailable(Integer maxUnavailable) {
            return maxUnavailable(Output.of(maxUnavailable));
        }

        public ClusterNodePoolUpgradeSettingsGetArgs build() {
            $.maxSurge = Objects.requireNonNull($.maxSurge, "expected parameter 'maxSurge' to be non-null");
            $.maxUnavailable = Objects.requireNonNull($.maxUnavailable, "expected parameter 'maxUnavailable' to be non-null");
            return $;
        }
    }

}
