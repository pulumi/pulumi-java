// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.dataproc.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.dataproc.inputs.ClusterClusterConfigGceClusterConfigShieldedInstanceConfigGetArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ClusterClusterConfigGceClusterConfigGetArgs extends com.pulumi.resources.ResourceArgs {

    public static final ClusterClusterConfigGceClusterConfigGetArgs Empty = new ClusterClusterConfigGceClusterConfigGetArgs();

    /**
     * By default, clusters are not restricted to internal IP addresses,
     * and will have ephemeral external IP addresses assigned to each instance. If set to true, all
     * instances in the cluster will only have internal IP addresses. Note: Private Google Access
     * (also known as `privateIpGoogleAccess`) must be enabled on the subnetwork that the cluster
     * will be launched in.
     * 
     */
    @Import(name="internalIpOnly")
    private @Nullable Output<Boolean> internalIpOnly;

    public Optional<Output<Boolean>> internalIpOnly() {
        return Optional.ofNullable(this.internalIpOnly);
    }

    /**
     * A map of the Compute Engine metadata entries to add to all instances
     * (see [Project and instance metadata](https://cloud.google.com/compute/docs/storing-retrieving-metadata#project_and_instance_metadata)).
     * 
     */
    @Import(name="metadata")
    private @Nullable Output<Map<String,String>> metadata;

    public Optional<Output<Map<String,String>>> metadata() {
        return Optional.ofNullable(this.metadata);
    }

    /**
     * The name or self_link of the Google Compute Engine
     * network to the cluster will be part of. Conflicts with `subnetwork`.
     * If neither is specified, this defaults to the &#34;default&#34; network.
     * 
     */
    @Import(name="network")
    private @Nullable Output<String> network;

    public Optional<Output<String>> network() {
        return Optional.ofNullable(this.network);
    }

    /**
     * The service account to be used by the Node VMs.
     * If not specified, the &#34;default&#34; service account is used.
     * 
     */
    @Import(name="serviceAccount")
    private @Nullable Output<String> serviceAccount;

    public Optional<Output<String>> serviceAccount() {
        return Optional.ofNullable(this.serviceAccount);
    }

    /**
     * The set of Google API scopes
     * to be made available on all of the node VMs under the `service_account`
     * specified. Both OAuth2 URLs and gcloud
     * short names are supported. To allow full access to all Cloud APIs, use the
     * `cloud-platform` scope. See a complete list of scopes [here](https://cloud.google.com/sdk/gcloud/reference/alpha/compute/instances/set-scopes#--scopes).
     * 
     */
    @Import(name="serviceAccountScopes")
    private @Nullable Output<List<String>> serviceAccountScopes;

    public Optional<Output<List<String>>> serviceAccountScopes() {
        return Optional.ofNullable(this.serviceAccountScopes);
    }

    /**
     * Shielded Instance Config for clusters using [Compute Engine Shielded VMs](https://cloud.google.com/security/shielded-cloud/shielded-vm).
     * 
     */
    @Import(name="shieldedInstanceConfig")
    private @Nullable Output<ClusterClusterConfigGceClusterConfigShieldedInstanceConfigGetArgs> shieldedInstanceConfig;

    public Optional<Output<ClusterClusterConfigGceClusterConfigShieldedInstanceConfigGetArgs>> shieldedInstanceConfig() {
        return Optional.ofNullable(this.shieldedInstanceConfig);
    }

    /**
     * The name or self_link of the Google Compute Engine
     * subnetwork the cluster will be part of. Conflicts with `network`.
     * 
     */
    @Import(name="subnetwork")
    private @Nullable Output<String> subnetwork;

    public Optional<Output<String>> subnetwork() {
        return Optional.ofNullable(this.subnetwork);
    }

    /**
     * The list of instance tags applied to instances in the cluster.
     * Tags are used to identify valid sources or targets for network firewalls.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<List<String>> tags;

    public Optional<Output<List<String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * The GCP zone where your data is stored and used (i.e. where
     * the master and the worker nodes will be created in). If `region` is set to &#39;global&#39; (default)
     * then `zone` is mandatory, otherwise GCP is able to make use of [Auto Zone Placement](https://cloud.google.com/dataproc/docs/concepts/auto-zone)
     * to determine this automatically for you.
     * Note: This setting additionally determines and restricts
     * which computing resources are available for use with other configs such as
     * `cluster_config.master_config.machine_type` and `cluster_config.worker_config.machine_type`.
     * 
     */
    @Import(name="zone")
    private @Nullable Output<String> zone;

    public Optional<Output<String>> zone() {
        return Optional.ofNullable(this.zone);
    }

    private ClusterClusterConfigGceClusterConfigGetArgs() {}

    private ClusterClusterConfigGceClusterConfigGetArgs(ClusterClusterConfigGceClusterConfigGetArgs $) {
        this.internalIpOnly = $.internalIpOnly;
        this.metadata = $.metadata;
        this.network = $.network;
        this.serviceAccount = $.serviceAccount;
        this.serviceAccountScopes = $.serviceAccountScopes;
        this.shieldedInstanceConfig = $.shieldedInstanceConfig;
        this.subnetwork = $.subnetwork;
        this.tags = $.tags;
        this.zone = $.zone;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClusterClusterConfigGceClusterConfigGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClusterClusterConfigGceClusterConfigGetArgs $;

        public Builder() {
            $ = new ClusterClusterConfigGceClusterConfigGetArgs();
        }

        public Builder(ClusterClusterConfigGceClusterConfigGetArgs defaults) {
            $ = new ClusterClusterConfigGceClusterConfigGetArgs(Objects.requireNonNull(defaults));
        }

        public Builder internalIpOnly(@Nullable Output<Boolean> internalIpOnly) {
            $.internalIpOnly = internalIpOnly;
            return this;
        }

        public Builder internalIpOnly(Boolean internalIpOnly) {
            return internalIpOnly(Output.of(internalIpOnly));
        }

        public Builder metadata(@Nullable Output<Map<String,String>> metadata) {
            $.metadata = metadata;
            return this;
        }

        public Builder metadata(Map<String,String> metadata) {
            return metadata(Output.of(metadata));
        }

        public Builder network(@Nullable Output<String> network) {
            $.network = network;
            return this;
        }

        public Builder network(String network) {
            return network(Output.of(network));
        }

        public Builder serviceAccount(@Nullable Output<String> serviceAccount) {
            $.serviceAccount = serviceAccount;
            return this;
        }

        public Builder serviceAccount(String serviceAccount) {
            return serviceAccount(Output.of(serviceAccount));
        }

        public Builder serviceAccountScopes(@Nullable Output<List<String>> serviceAccountScopes) {
            $.serviceAccountScopes = serviceAccountScopes;
            return this;
        }

        public Builder serviceAccountScopes(List<String> serviceAccountScopes) {
            return serviceAccountScopes(Output.of(serviceAccountScopes));
        }

        public Builder serviceAccountScopes(String... serviceAccountScopes) {
            return serviceAccountScopes(List.of(serviceAccountScopes));
        }

        public Builder shieldedInstanceConfig(@Nullable Output<ClusterClusterConfigGceClusterConfigShieldedInstanceConfigGetArgs> shieldedInstanceConfig) {
            $.shieldedInstanceConfig = shieldedInstanceConfig;
            return this;
        }

        public Builder shieldedInstanceConfig(ClusterClusterConfigGceClusterConfigShieldedInstanceConfigGetArgs shieldedInstanceConfig) {
            return shieldedInstanceConfig(Output.of(shieldedInstanceConfig));
        }

        public Builder subnetwork(@Nullable Output<String> subnetwork) {
            $.subnetwork = subnetwork;
            return this;
        }

        public Builder subnetwork(String subnetwork) {
            return subnetwork(Output.of(subnetwork));
        }

        public Builder tags(@Nullable Output<List<String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(List<String> tags) {
            return tags(Output.of(tags));
        }

        public Builder tags(String... tags) {
            return tags(List.of(tags));
        }

        public Builder zone(@Nullable Output<String> zone) {
            $.zone = zone;
            return this;
        }

        public Builder zone(String zone) {
            return zone(Output.of(zone));
        }

        public ClusterClusterConfigGceClusterConfigGetArgs build() {
            return $;
        }
    }

}
