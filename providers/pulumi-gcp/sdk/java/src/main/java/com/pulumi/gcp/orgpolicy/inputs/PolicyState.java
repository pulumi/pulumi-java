// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.orgpolicy.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import com.pulumi.gcp.orgpolicy.inputs.PolicySpecGetArgs;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class PolicyState extends com.pulumi.resources.ResourceArgs {

    public static final PolicyState Empty = new PolicyState();

    /**
     * Immutable. The resource name of the Policy. Must be one of the following forms, where constraint_name is the name of the constraint which this Policy configures: * `projects/{project_number}/policies/{constraint_name}` * `folders/{folder_id}/policies/{constraint_name}` * `organizations/{organization_id}/policies/{constraint_name}` For example, "projects/123/policies/compute.disableSerialPortAccess". Note: `projects/{project_id}/policies/{constraint_name}` is also an acceptable name for API requests, but responses will return the name using the equivalent project number.
     * 
     */
    @Import(name="name")
      private final @Nullable Output<String> name;

    public Output<String> name() {
        return this.name == null ? Codegen.empty() : this.name;
    }

    /**
     * The parent of the resource.
     * 
     */
    @Import(name="parent")
      private final @Nullable Output<String> parent;

    public Output<String> parent() {
        return this.parent == null ? Codegen.empty() : this.parent;
    }

    /**
     * Basic information about the Organization Policy.
     * 
     */
    @Import(name="spec")
      private final @Nullable Output<PolicySpecGetArgs> spec;

    public Output<PolicySpecGetArgs> spec() {
        return this.spec == null ? Codegen.empty() : this.spec;
    }

    public PolicyState(
        @Nullable Output<String> name,
        @Nullable Output<String> parent,
        @Nullable Output<PolicySpecGetArgs> spec) {
        this.name = name;
        this.parent = parent;
        this.spec = spec;
    }

    private PolicyState() {
        this.name = Codegen.empty();
        this.parent = Codegen.empty();
        this.spec = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PolicyState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> name;
        private @Nullable Output<String> parent;
        private @Nullable Output<PolicySpecGetArgs> spec;

        public Builder() {
    	      // Empty
        }

        public Builder(PolicyState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.name = defaults.name;
    	      this.parent = defaults.parent;
    	      this.spec = defaults.spec;
        }

        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }
        public Builder name(@Nullable String name) {
            this.name = Codegen.ofNullable(name);
            return this;
        }
        public Builder parent(@Nullable Output<String> parent) {
            this.parent = parent;
            return this;
        }
        public Builder parent(@Nullable String parent) {
            this.parent = Codegen.ofNullable(parent);
            return this;
        }
        public Builder spec(@Nullable Output<PolicySpecGetArgs> spec) {
            this.spec = spec;
            return this;
        }
        public Builder spec(@Nullable PolicySpecGetArgs spec) {
            this.spec = Codegen.ofNullable(spec);
            return this;
        }        public PolicyState build() {
            return new PolicyState(name, parent, spec);
        }
    }
}
