// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.healthcare.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.healthcare.inputs.Hl7StoreIamBindingConditionGetArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class Hl7StoreIamBindingState extends com.pulumi.resources.ResourceArgs {

    public static final Hl7StoreIamBindingState Empty = new Hl7StoreIamBindingState();

    @Import(name="condition")
    private @Nullable Output<Hl7StoreIamBindingConditionGetArgs> condition;

    public Optional<Output<Hl7StoreIamBindingConditionGetArgs>> condition() {
        return Optional.ofNullable(this.condition);
    }

    /**
     * (Computed) The etag of the HL7v2 store&#39;s IAM policy.
     * 
     */
    @Import(name="etag")
    private @Nullable Output<String> etag;

    public Optional<Output<String>> etag() {
        return Optional.ofNullable(this.etag);
    }

    /**
     * The HL7v2 store ID, in the form
     * `{project_id}/{location_name}/{dataset_name}/{hl7_v2_store_name}` or
     * `{location_name}/{dataset_name}/{hl7_v2_store_name}`. In the second form, the provider&#39;s
     * project setting will be used as a fallback.
     * 
     */
    @Import(name="hl7V2StoreId")
    private @Nullable Output<String> hl7V2StoreId;

    public Optional<Output<String>> hl7V2StoreId() {
        return Optional.ofNullable(this.hl7V2StoreId);
    }

    @Import(name="members")
    private @Nullable Output<List<String>> members;

    public Optional<Output<List<String>>> members() {
        return Optional.ofNullable(this.members);
    }

    /**
     * The role that should be applied. Only one
     * `gcp.healthcare.Hl7StoreIamBinding` can be used per role. Note that custom roles must be of the format
     * `[projects|organizations]/{parent-name}/roles/{role-name}`.
     * 
     */
    @Import(name="role")
    private @Nullable Output<String> role;

    public Optional<Output<String>> role() {
        return Optional.ofNullable(this.role);
    }

    private Hl7StoreIamBindingState() {}

    private Hl7StoreIamBindingState(Hl7StoreIamBindingState $) {
        this.condition = $.condition;
        this.etag = $.etag;
        this.hl7V2StoreId = $.hl7V2StoreId;
        this.members = $.members;
        this.role = $.role;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(Hl7StoreIamBindingState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Hl7StoreIamBindingState $;

        public Builder() {
            $ = new Hl7StoreIamBindingState();
        }

        public Builder(Hl7StoreIamBindingState defaults) {
            $ = new Hl7StoreIamBindingState(Objects.requireNonNull(defaults));
        }

        public Builder condition(@Nullable Output<Hl7StoreIamBindingConditionGetArgs> condition) {
            $.condition = condition;
            return this;
        }

        public Builder condition(Hl7StoreIamBindingConditionGetArgs condition) {
            return condition(Output.of(condition));
        }

        public Builder etag(@Nullable Output<String> etag) {
            $.etag = etag;
            return this;
        }

        public Builder etag(String etag) {
            return etag(Output.of(etag));
        }

        public Builder hl7V2StoreId(@Nullable Output<String> hl7V2StoreId) {
            $.hl7V2StoreId = hl7V2StoreId;
            return this;
        }

        public Builder hl7V2StoreId(String hl7V2StoreId) {
            return hl7V2StoreId(Output.of(hl7V2StoreId));
        }

        public Builder members(@Nullable Output<List<String>> members) {
            $.members = members;
            return this;
        }

        public Builder members(List<String> members) {
            return members(Output.of(members));
        }

        public Builder members(String... members) {
            return members(List.of(members));
        }

        public Builder role(@Nullable Output<String> role) {
            $.role = role;
            return this;
        }

        public Builder role(String role) {
            return role(Output.of(role));
        }

        public Hl7StoreIamBindingState build() {
            return $;
        }
    }

}
