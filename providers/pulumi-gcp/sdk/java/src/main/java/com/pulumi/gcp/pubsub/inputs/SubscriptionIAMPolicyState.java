// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.pubsub.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SubscriptionIAMPolicyState extends com.pulumi.resources.ResourceArgs {

    public static final SubscriptionIAMPolicyState Empty = new SubscriptionIAMPolicyState();

    /**
     * (Computed) The etag of the subscription&#39;s IAM policy.
     * 
     */
    @Import(name="etag")
    private @Nullable Output<String> etag;

    public Optional<Output<String>> etag() {
        return Optional.ofNullable(this.etag);
    }

    /**
     * The policy data generated by
     * a `gcp.organizations.getIAMPolicy` data source.
     * 
     */
    @Import(name="policyData")
    private @Nullable Output<String> policyData;

    public Optional<Output<String>> policyData() {
        return Optional.ofNullable(this.policyData);
    }

    /**
     * The project in which the resource belongs. If it
     * is not provided, the provider project is used.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * The subscription name or id to bind to attach IAM policy to.
     * 
     */
    @Import(name="subscription")
    private @Nullable Output<String> subscription;

    public Optional<Output<String>> subscription() {
        return Optional.ofNullable(this.subscription);
    }

    private SubscriptionIAMPolicyState() {}

    private SubscriptionIAMPolicyState(SubscriptionIAMPolicyState $) {
        this.etag = $.etag;
        this.policyData = $.policyData;
        this.project = $.project;
        this.subscription = $.subscription;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SubscriptionIAMPolicyState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SubscriptionIAMPolicyState $;

        public Builder() {
            $ = new SubscriptionIAMPolicyState();
        }

        public Builder(SubscriptionIAMPolicyState defaults) {
            $ = new SubscriptionIAMPolicyState(Objects.requireNonNull(defaults));
        }

        public Builder etag(@Nullable Output<String> etag) {
            $.etag = etag;
            return this;
        }

        public Builder etag(String etag) {
            return etag(Output.of(etag));
        }

        public Builder policyData(@Nullable Output<String> policyData) {
            $.policyData = policyData;
            return this;
        }

        public Builder policyData(String policyData) {
            return policyData(Output.of(policyData));
        }

        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        public Builder project(String project) {
            return project(Output.of(project));
        }

        public Builder subscription(@Nullable Output<String> subscription) {
            $.subscription = subscription;
            return this;
        }

        public Builder subscription(String subscription) {
            return subscription(Output.of(subscription));
        }

        public SubscriptionIAMPolicyState build() {
            return $;
        }
    }

}
