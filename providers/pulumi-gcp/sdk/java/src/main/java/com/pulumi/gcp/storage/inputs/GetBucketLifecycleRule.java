// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.storage.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.storage.inputs.GetBucketLifecycleRuleAction;
import com.pulumi.gcp.storage.inputs.GetBucketLifecycleRuleCondition;
import java.util.List;
import java.util.Objects;


public final class GetBucketLifecycleRule extends com.pulumi.resources.InvokeArgs {

    public static final GetBucketLifecycleRule Empty = new GetBucketLifecycleRule();

    @Import(name="actions", required=true)
    private List<GetBucketLifecycleRuleAction> actions;

    public List<GetBucketLifecycleRuleAction> actions() {
        return this.actions;
    }

    @Import(name="conditions", required=true)
    private List<GetBucketLifecycleRuleCondition> conditions;

    public List<GetBucketLifecycleRuleCondition> conditions() {
        return this.conditions;
    }

    private GetBucketLifecycleRule() {}

    private GetBucketLifecycleRule(GetBucketLifecycleRule $) {
        this.actions = $.actions;
        this.conditions = $.conditions;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetBucketLifecycleRule defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetBucketLifecycleRule $;

        public Builder() {
            $ = new GetBucketLifecycleRule();
        }

        public Builder(GetBucketLifecycleRule defaults) {
            $ = new GetBucketLifecycleRule(Objects.requireNonNull(defaults));
        }

        public Builder actions(List<GetBucketLifecycleRuleAction> actions) {
            $.actions = actions;
            return this;
        }

        public Builder actions(GetBucketLifecycleRuleAction... actions) {
            return actions(List.of(actions));
        }

        public Builder conditions(List<GetBucketLifecycleRuleCondition> conditions) {
            $.conditions = conditions;
            return this;
        }

        public Builder conditions(GetBucketLifecycleRuleCondition... conditions) {
            return conditions(List.of(conditions));
        }

        public GetBucketLifecycleRule build() {
            $.actions = Objects.requireNonNull($.actions, "expected parameter 'actions' to be non-null");
            $.conditions = Objects.requireNonNull($.conditions, "expected parameter 'conditions' to be non-null");
            return $;
        }
    }

}
