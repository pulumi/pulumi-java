// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.identityplatform.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class TenantState extends com.pulumi.resources.ResourceArgs {

    public static final TenantState Empty = new TenantState();

    /**
     * Whether to allow email/password user authentication.
     * 
     */
    @Import(name="allowPasswordSignup")
      private final @Nullable Output<Boolean> allowPasswordSignup;

    public Output<Boolean> allowPasswordSignup() {
        return this.allowPasswordSignup == null ? Codegen.empty() : this.allowPasswordSignup;
    }

    /**
     * Whether authentication is disabled for the tenant. If true, the users under
     * the disabled tenant are not allowed to sign-in. Admins of the disabled tenant
     * are not able to manage its users.
     * 
     */
    @Import(name="disableAuth")
      private final @Nullable Output<Boolean> disableAuth;

    public Output<Boolean> disableAuth() {
        return this.disableAuth == null ? Codegen.empty() : this.disableAuth;
    }

    /**
     * Human friendly display name of the tenant.
     * 
     */
    @Import(name="displayName")
      private final @Nullable Output<String> displayName;

    public Output<String> displayName() {
        return this.displayName == null ? Codegen.empty() : this.displayName;
    }

    /**
     * Whether to enable email link user authentication.
     * 
     */
    @Import(name="enableEmailLinkSignin")
      private final @Nullable Output<Boolean> enableEmailLinkSignin;

    public Output<Boolean> enableEmailLinkSignin() {
        return this.enableEmailLinkSignin == null ? Codegen.empty() : this.enableEmailLinkSignin;
    }

    /**
     * The name of the tenant that is generated by the server
     * 
     */
    @Import(name="name")
      private final @Nullable Output<String> name;

    public Output<String> name() {
        return this.name == null ? Codegen.empty() : this.name;
    }

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Import(name="project")
      private final @Nullable Output<String> project;

    public Output<String> project() {
        return this.project == null ? Codegen.empty() : this.project;
    }

    public TenantState(
        @Nullable Output<Boolean> allowPasswordSignup,
        @Nullable Output<Boolean> disableAuth,
        @Nullable Output<String> displayName,
        @Nullable Output<Boolean> enableEmailLinkSignin,
        @Nullable Output<String> name,
        @Nullable Output<String> project) {
        this.allowPasswordSignup = allowPasswordSignup;
        this.disableAuth = disableAuth;
        this.displayName = displayName;
        this.enableEmailLinkSignin = enableEmailLinkSignin;
        this.name = name;
        this.project = project;
    }

    private TenantState() {
        this.allowPasswordSignup = Codegen.empty();
        this.disableAuth = Codegen.empty();
        this.displayName = Codegen.empty();
        this.enableEmailLinkSignin = Codegen.empty();
        this.name = Codegen.empty();
        this.project = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TenantState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<Boolean> allowPasswordSignup;
        private @Nullable Output<Boolean> disableAuth;
        private @Nullable Output<String> displayName;
        private @Nullable Output<Boolean> enableEmailLinkSignin;
        private @Nullable Output<String> name;
        private @Nullable Output<String> project;

        public Builder() {
    	      // Empty
        }

        public Builder(TenantState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allowPasswordSignup = defaults.allowPasswordSignup;
    	      this.disableAuth = defaults.disableAuth;
    	      this.displayName = defaults.displayName;
    	      this.enableEmailLinkSignin = defaults.enableEmailLinkSignin;
    	      this.name = defaults.name;
    	      this.project = defaults.project;
        }

        public Builder allowPasswordSignup(@Nullable Output<Boolean> allowPasswordSignup) {
            this.allowPasswordSignup = allowPasswordSignup;
            return this;
        }
        public Builder allowPasswordSignup(@Nullable Boolean allowPasswordSignup) {
            this.allowPasswordSignup = Codegen.ofNullable(allowPasswordSignup);
            return this;
        }
        public Builder disableAuth(@Nullable Output<Boolean> disableAuth) {
            this.disableAuth = disableAuth;
            return this;
        }
        public Builder disableAuth(@Nullable Boolean disableAuth) {
            this.disableAuth = Codegen.ofNullable(disableAuth);
            return this;
        }
        public Builder displayName(@Nullable Output<String> displayName) {
            this.displayName = displayName;
            return this;
        }
        public Builder displayName(@Nullable String displayName) {
            this.displayName = Codegen.ofNullable(displayName);
            return this;
        }
        public Builder enableEmailLinkSignin(@Nullable Output<Boolean> enableEmailLinkSignin) {
            this.enableEmailLinkSignin = enableEmailLinkSignin;
            return this;
        }
        public Builder enableEmailLinkSignin(@Nullable Boolean enableEmailLinkSignin) {
            this.enableEmailLinkSignin = Codegen.ofNullable(enableEmailLinkSignin);
            return this;
        }
        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }
        public Builder name(@Nullable String name) {
            this.name = Codegen.ofNullable(name);
            return this;
        }
        public Builder project(@Nullable Output<String> project) {
            this.project = project;
            return this;
        }
        public Builder project(@Nullable String project) {
            this.project = Codegen.ofNullable(project);
            return this;
        }        public TenantState build() {
            return new TenantState(allowPasswordSignup, disableAuth, displayName, enableEmailLinkSignin, name, project);
        }
    }
}
