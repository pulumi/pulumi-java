// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.networkservices.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.networkservices.inputs.EdgeCacheServiceRoutingHostRuleGetArgs;
import com.pulumi.gcp.networkservices.inputs.EdgeCacheServiceRoutingPathMatcherGetArgs;
import java.util.List;
import java.util.Objects;


public final class EdgeCacheServiceRoutingGetArgs extends com.pulumi.resources.ResourceArgs {

    public static final EdgeCacheServiceRoutingGetArgs Empty = new EdgeCacheServiceRoutingGetArgs();

    /**
     * The list of hostRules to match against. These rules define which hostnames the EdgeCacheService will match against, and which route configurations apply.
     * Structure is documented below.
     * 
     */
    @Import(name="hostRules", required=true)
    private Output<List<EdgeCacheServiceRoutingHostRuleGetArgs>> hostRules;

    /**
     * @return The list of hostRules to match against. These rules define which hostnames the EdgeCacheService will match against, and which route configurations apply.
     * Structure is documented below.
     * 
     */
    public Output<List<EdgeCacheServiceRoutingHostRuleGetArgs>> hostRules() {
        return this.hostRules;
    }

    /**
     * The name of the pathMatcher associated with this hostRule.
     * 
     */
    @Import(name="pathMatchers", required=true)
    private Output<List<EdgeCacheServiceRoutingPathMatcherGetArgs>> pathMatchers;

    /**
     * @return The name of the pathMatcher associated with this hostRule.
     * 
     */
    public Output<List<EdgeCacheServiceRoutingPathMatcherGetArgs>> pathMatchers() {
        return this.pathMatchers;
    }

    private EdgeCacheServiceRoutingGetArgs() {}

    private EdgeCacheServiceRoutingGetArgs(EdgeCacheServiceRoutingGetArgs $) {
        this.hostRules = $.hostRules;
        this.pathMatchers = $.pathMatchers;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EdgeCacheServiceRoutingGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EdgeCacheServiceRoutingGetArgs $;

        public Builder() {
            $ = new EdgeCacheServiceRoutingGetArgs();
        }

        public Builder(EdgeCacheServiceRoutingGetArgs defaults) {
            $ = new EdgeCacheServiceRoutingGetArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param hostRules The list of hostRules to match against. These rules define which hostnames the EdgeCacheService will match against, and which route configurations apply.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder hostRules(Output<List<EdgeCacheServiceRoutingHostRuleGetArgs>> hostRules) {
            $.hostRules = hostRules;
            return this;
        }

        /**
         * @param hostRules The list of hostRules to match against. These rules define which hostnames the EdgeCacheService will match against, and which route configurations apply.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder hostRules(List<EdgeCacheServiceRoutingHostRuleGetArgs> hostRules) {
            return hostRules(Output.of(hostRules));
        }

        /**
         * @param hostRules The list of hostRules to match against. These rules define which hostnames the EdgeCacheService will match against, and which route configurations apply.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder hostRules(EdgeCacheServiceRoutingHostRuleGetArgs... hostRules) {
            return hostRules(List.of(hostRules));
        }

        /**
         * @param pathMatchers The name of the pathMatcher associated with this hostRule.
         * 
         * @return builder
         * 
         */
        public Builder pathMatchers(Output<List<EdgeCacheServiceRoutingPathMatcherGetArgs>> pathMatchers) {
            $.pathMatchers = pathMatchers;
            return this;
        }

        /**
         * @param pathMatchers The name of the pathMatcher associated with this hostRule.
         * 
         * @return builder
         * 
         */
        public Builder pathMatchers(List<EdgeCacheServiceRoutingPathMatcherGetArgs> pathMatchers) {
            return pathMatchers(Output.of(pathMatchers));
        }

        /**
         * @param pathMatchers The name of the pathMatcher associated with this hostRule.
         * 
         * @return builder
         * 
         */
        public Builder pathMatchers(EdgeCacheServiceRoutingPathMatcherGetArgs... pathMatchers) {
            return pathMatchers(List.of(pathMatchers));
        }

        public EdgeCacheServiceRoutingGetArgs build() {
            $.hostRules = Objects.requireNonNull($.hostRules, "expected parameter 'hostRules' to be non-null");
            $.pathMatchers = Objects.requireNonNull($.pathMatchers, "expected parameter 'pathMatchers' to be non-null");
            return $;
        }
    }

}
