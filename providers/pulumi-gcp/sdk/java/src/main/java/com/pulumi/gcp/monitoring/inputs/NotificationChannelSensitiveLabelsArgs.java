// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.monitoring.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class NotificationChannelSensitiveLabelsArgs extends com.pulumi.resources.ResourceArgs {

    public static final NotificationChannelSensitiveLabelsArgs Empty = new NotificationChannelSensitiveLabelsArgs();

    /**
     * An authorization token for a notification channel. Channel types that support this field include: slack
     * **Note**: This property is sensitive and will not be displayed in the plan.
     * 
     */
    @Import(name="authToken")
    private @Nullable Output<String> authToken;

    public Optional<Output<String>> authToken() {
        return Optional.ofNullable(this.authToken);
    }

    /**
     * An password for a notification channel. Channel types that support this field include: webhook_basicauth
     * **Note**: This property is sensitive and will not be displayed in the plan.
     * 
     */
    @Import(name="password")
    private @Nullable Output<String> password;

    public Optional<Output<String>> password() {
        return Optional.ofNullable(this.password);
    }

    /**
     * An servicekey token for a notification channel. Channel types that support this field include: pagerduty
     * **Note**: This property is sensitive and will not be displayed in the plan.
     * 
     */
    @Import(name="serviceKey")
    private @Nullable Output<String> serviceKey;

    public Optional<Output<String>> serviceKey() {
        return Optional.ofNullable(this.serviceKey);
    }

    private NotificationChannelSensitiveLabelsArgs() {}

    private NotificationChannelSensitiveLabelsArgs(NotificationChannelSensitiveLabelsArgs $) {
        this.authToken = $.authToken;
        this.password = $.password;
        this.serviceKey = $.serviceKey;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NotificationChannelSensitiveLabelsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NotificationChannelSensitiveLabelsArgs $;

        public Builder() {
            $ = new NotificationChannelSensitiveLabelsArgs();
        }

        public Builder(NotificationChannelSensitiveLabelsArgs defaults) {
            $ = new NotificationChannelSensitiveLabelsArgs(Objects.requireNonNull(defaults));
        }

        public Builder authToken(@Nullable Output<String> authToken) {
            $.authToken = authToken;
            return this;
        }

        public Builder authToken(String authToken) {
            return authToken(Output.of(authToken));
        }

        public Builder password(@Nullable Output<String> password) {
            $.password = password;
            return this;
        }

        public Builder password(String password) {
            return password(Output.of(password));
        }

        public Builder serviceKey(@Nullable Output<String> serviceKey) {
            $.serviceKey = serviceKey;
            return this;
        }

        public Builder serviceKey(String serviceKey) {
            return serviceKey(Output.of(serviceKey));
        }

        public NotificationChannelSensitiveLabelsArgs build() {
            return $;
        }
    }

}
