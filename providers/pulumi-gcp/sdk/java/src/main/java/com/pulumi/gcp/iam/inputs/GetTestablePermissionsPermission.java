// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.iam.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;


public final class GetTestablePermissionsPermission extends com.pulumi.resources.InvokeArgs {

    public static final GetTestablePermissionsPermission Empty = new GetTestablePermissionsPermission();

    /**
     * Whether the corresponding API has been enabled for the resource.
     * 
     */
    @Import(name="apiDisabled", required=true)
    private Boolean apiDisabled;

    /**
     * @return Whether the corresponding API has been enabled for the resource.
     * 
     */
    public Boolean apiDisabled() {
        return this.apiDisabled;
    }

    /**
     * The level of support for custom roles. Can be one of `&#34;NOT_SUPPORTED&#34;`, `&#34;SUPPORTED&#34;`, `&#34;TESTING&#34;`. Default is `&#34;SUPPORTED&#34;`
     * 
     */
    @Import(name="customSupportLevel", required=true)
    private String customSupportLevel;

    /**
     * @return The level of support for custom roles. Can be one of `&#34;NOT_SUPPORTED&#34;`, `&#34;SUPPORTED&#34;`, `&#34;TESTING&#34;`. Default is `&#34;SUPPORTED&#34;`
     * 
     */
    public String customSupportLevel() {
        return this.customSupportLevel;
    }

    /**
     * Name of the permission.
     * 
     */
    @Import(name="name", required=true)
    private String name;

    /**
     * @return Name of the permission.
     * 
     */
    public String name() {
        return this.name;
    }

    /**
     * Release stage of the permission.
     * 
     */
    @Import(name="stage", required=true)
    private String stage;

    /**
     * @return Release stage of the permission.
     * 
     */
    public String stage() {
        return this.stage;
    }

    /**
     * Human readable title of the permission.
     * 
     */
    @Import(name="title", required=true)
    private String title;

    /**
     * @return Human readable title of the permission.
     * 
     */
    public String title() {
        return this.title;
    }

    private GetTestablePermissionsPermission() {}

    private GetTestablePermissionsPermission(GetTestablePermissionsPermission $) {
        this.apiDisabled = $.apiDisabled;
        this.customSupportLevel = $.customSupportLevel;
        this.name = $.name;
        this.stage = $.stage;
        this.title = $.title;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetTestablePermissionsPermission defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetTestablePermissionsPermission $;

        public Builder() {
            $ = new GetTestablePermissionsPermission();
        }

        public Builder(GetTestablePermissionsPermission defaults) {
            $ = new GetTestablePermissionsPermission(Objects.requireNonNull(defaults));
        }

        /**
         * @param apiDisabled Whether the corresponding API has been enabled for the resource.
         * 
         * @return builder
         * 
         */
        public Builder apiDisabled(Boolean apiDisabled) {
            $.apiDisabled = apiDisabled;
            return this;
        }

        /**
         * @param customSupportLevel The level of support for custom roles. Can be one of `&#34;NOT_SUPPORTED&#34;`, `&#34;SUPPORTED&#34;`, `&#34;TESTING&#34;`. Default is `&#34;SUPPORTED&#34;`
         * 
         * @return builder
         * 
         */
        public Builder customSupportLevel(String customSupportLevel) {
            $.customSupportLevel = customSupportLevel;
            return this;
        }

        /**
         * @param name Name of the permission.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            $.name = name;
            return this;
        }

        /**
         * @param stage Release stage of the permission.
         * 
         * @return builder
         * 
         */
        public Builder stage(String stage) {
            $.stage = stage;
            return this;
        }

        /**
         * @param title Human readable title of the permission.
         * 
         * @return builder
         * 
         */
        public Builder title(String title) {
            $.title = title;
            return this;
        }

        public GetTestablePermissionsPermission build() {
            $.apiDisabled = Objects.requireNonNull($.apiDisabled, "expected parameter 'apiDisabled' to be non-null");
            $.customSupportLevel = Objects.requireNonNull($.customSupportLevel, "expected parameter 'customSupportLevel' to be non-null");
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            $.stage = Objects.requireNonNull($.stage, "expected parameter 'stage' to be non-null");
            $.title = Objects.requireNonNull($.title, "expected parameter 'title' to be non-null");
            return $;
        }
    }

}
