// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.iam.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;


public final class GetTestablePermissionsPermission extends com.pulumi.resources.InvokeArgs {

    public static final GetTestablePermissionsPermission Empty = new GetTestablePermissionsPermission();

    /**
     * Whether the corresponding API has been enabled for the resource.
     * 
     */
    @Import(name="apiDisabled", required=true)
      private final Boolean apiDisabled;

    public Boolean apiDisabled() {
        return this.apiDisabled;
    }

    /**
     * The level of support for custom roles. Can be one of `&#34;NOT_SUPPORTED&#34;`, `&#34;SUPPORTED&#34;`, `&#34;TESTING&#34;`. Default is `&#34;SUPPORTED&#34;`
     * 
     */
    @Import(name="customSupportLevel", required=true)
      private final String customSupportLevel;

    public String customSupportLevel() {
        return this.customSupportLevel;
    }

    /**
     * Name of the permission.
     * 
     */
    @Import(name="name", required=true)
      private final String name;

    public String name() {
        return this.name;
    }

    /**
     * Release stage of the permission.
     * 
     */
    @Import(name="stage", required=true)
      private final String stage;

    public String stage() {
        return this.stage;
    }

    /**
     * Human readable title of the permission.
     * 
     */
    @Import(name="title", required=true)
      private final String title;

    public String title() {
        return this.title;
    }

    public GetTestablePermissionsPermission(
        Boolean apiDisabled,
        String customSupportLevel,
        String name,
        String stage,
        String title) {
        this.apiDisabled = Objects.requireNonNull(apiDisabled, "expected parameter 'apiDisabled' to be non-null");
        this.customSupportLevel = Objects.requireNonNull(customSupportLevel, "expected parameter 'customSupportLevel' to be non-null");
        this.name = Objects.requireNonNull(name, "expected parameter 'name' to be non-null");
        this.stage = Objects.requireNonNull(stage, "expected parameter 'stage' to be non-null");
        this.title = Objects.requireNonNull(title, "expected parameter 'title' to be non-null");
    }

    private GetTestablePermissionsPermission() {
        this.apiDisabled = null;
        this.customSupportLevel = null;
        this.name = null;
        this.stage = null;
        this.title = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetTestablePermissionsPermission defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Boolean apiDisabled;
        private String customSupportLevel;
        private String name;
        private String stage;
        private String title;

        public Builder() {
    	      // Empty
        }

        public Builder(GetTestablePermissionsPermission defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.apiDisabled = defaults.apiDisabled;
    	      this.customSupportLevel = defaults.customSupportLevel;
    	      this.name = defaults.name;
    	      this.stage = defaults.stage;
    	      this.title = defaults.title;
        }

        public Builder apiDisabled(Boolean apiDisabled) {
            this.apiDisabled = Objects.requireNonNull(apiDisabled);
            return this;
        }
        public Builder customSupportLevel(String customSupportLevel) {
            this.customSupportLevel = Objects.requireNonNull(customSupportLevel);
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder stage(String stage) {
            this.stage = Objects.requireNonNull(stage);
            return this;
        }
        public Builder title(String title) {
            this.title = Objects.requireNonNull(title);
            return this;
        }        public GetTestablePermissionsPermission build() {
            return new GetTestablePermissionsPermission(apiDisabled, customSupportLevel, name, stage, title);
        }
    }
}
