// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.composer.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.composer.inputs.GetEnvironmentConfigNodeConfigIpAllocationPolicy;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class GetEnvironmentConfigNodeConfig extends com.pulumi.resources.InvokeArgs {

    public static final GetEnvironmentConfigNodeConfig Empty = new GetEnvironmentConfigNodeConfig();

    @Import(name="diskSizeGb", required=true)
    private Integer diskSizeGb;

    public Integer diskSizeGb() {
        return this.diskSizeGb;
    }

    @Import(name="enableIpMasqAgent", required=true)
    private Boolean enableIpMasqAgent;

    public Boolean enableIpMasqAgent() {
        return this.enableIpMasqAgent;
    }

    @Import(name="ipAllocationPolicies", required=true)
    private List<GetEnvironmentConfigNodeConfigIpAllocationPolicy> ipAllocationPolicies;

    public List<GetEnvironmentConfigNodeConfigIpAllocationPolicy> ipAllocationPolicies() {
        return this.ipAllocationPolicies;
    }

    @Import(name="machineType", required=true)
    private String machineType;

    public String machineType() {
        return this.machineType;
    }

    @Import(name="maxPodsPerNode", required=true)
    private Integer maxPodsPerNode;

    public Integer maxPodsPerNode() {
        return this.maxPodsPerNode;
    }

    @Import(name="network", required=true)
    private String network;

    public String network() {
        return this.network;
    }

    @Import(name="oauthScopes", required=true)
    private List<String> oauthScopes;

    public List<String> oauthScopes() {
        return this.oauthScopes;
    }

    @Import(name="serviceAccount", required=true)
    private String serviceAccount;

    public String serviceAccount() {
        return this.serviceAccount;
    }

    @Import(name="subnetwork", required=true)
    private String subnetwork;

    public String subnetwork() {
        return this.subnetwork;
    }

    @Import(name="tags", required=true)
    private List<String> tags;

    public List<String> tags() {
        return this.tags;
    }

    @Import(name="zone", required=true)
    private String zone;

    public String zone() {
        return this.zone;
    }

    private GetEnvironmentConfigNodeConfig() {}

    private GetEnvironmentConfigNodeConfig(GetEnvironmentConfigNodeConfig $) {
        this.diskSizeGb = $.diskSizeGb;
        this.enableIpMasqAgent = $.enableIpMasqAgent;
        this.ipAllocationPolicies = $.ipAllocationPolicies;
        this.machineType = $.machineType;
        this.maxPodsPerNode = $.maxPodsPerNode;
        this.network = $.network;
        this.oauthScopes = $.oauthScopes;
        this.serviceAccount = $.serviceAccount;
        this.subnetwork = $.subnetwork;
        this.tags = $.tags;
        this.zone = $.zone;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetEnvironmentConfigNodeConfig defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetEnvironmentConfigNodeConfig $;

        public Builder() {
            $ = new GetEnvironmentConfigNodeConfig();
        }

        public Builder(GetEnvironmentConfigNodeConfig defaults) {
            $ = new GetEnvironmentConfigNodeConfig(Objects.requireNonNull(defaults));
        }

        public Builder diskSizeGb(Integer diskSizeGb) {
            $.diskSizeGb = diskSizeGb;
            return this;
        }

        public Builder enableIpMasqAgent(Boolean enableIpMasqAgent) {
            $.enableIpMasqAgent = enableIpMasqAgent;
            return this;
        }

        public Builder ipAllocationPolicies(List<GetEnvironmentConfigNodeConfigIpAllocationPolicy> ipAllocationPolicies) {
            $.ipAllocationPolicies = ipAllocationPolicies;
            return this;
        }

        public Builder ipAllocationPolicies(GetEnvironmentConfigNodeConfigIpAllocationPolicy... ipAllocationPolicies) {
            return ipAllocationPolicies(List.of(ipAllocationPolicies));
        }

        public Builder machineType(String machineType) {
            $.machineType = machineType;
            return this;
        }

        public Builder maxPodsPerNode(Integer maxPodsPerNode) {
            $.maxPodsPerNode = maxPodsPerNode;
            return this;
        }

        public Builder network(String network) {
            $.network = network;
            return this;
        }

        public Builder oauthScopes(List<String> oauthScopes) {
            $.oauthScopes = oauthScopes;
            return this;
        }

        public Builder oauthScopes(String... oauthScopes) {
            return oauthScopes(List.of(oauthScopes));
        }

        public Builder serviceAccount(String serviceAccount) {
            $.serviceAccount = serviceAccount;
            return this;
        }

        public Builder subnetwork(String subnetwork) {
            $.subnetwork = subnetwork;
            return this;
        }

        public Builder tags(List<String> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(String... tags) {
            return tags(List.of(tags));
        }

        public Builder zone(String zone) {
            $.zone = zone;
            return this;
        }

        public GetEnvironmentConfigNodeConfig build() {
            $.diskSizeGb = Objects.requireNonNull($.diskSizeGb, "expected parameter 'diskSizeGb' to be non-null");
            $.enableIpMasqAgent = Objects.requireNonNull($.enableIpMasqAgent, "expected parameter 'enableIpMasqAgent' to be non-null");
            $.ipAllocationPolicies = Objects.requireNonNull($.ipAllocationPolicies, "expected parameter 'ipAllocationPolicies' to be non-null");
            $.machineType = Objects.requireNonNull($.machineType, "expected parameter 'machineType' to be non-null");
            $.maxPodsPerNode = Objects.requireNonNull($.maxPodsPerNode, "expected parameter 'maxPodsPerNode' to be non-null");
            $.network = Objects.requireNonNull($.network, "expected parameter 'network' to be non-null");
            $.oauthScopes = Objects.requireNonNull($.oauthScopes, "expected parameter 'oauthScopes' to be non-null");
            $.serviceAccount = Objects.requireNonNull($.serviceAccount, "expected parameter 'serviceAccount' to be non-null");
            $.subnetwork = Objects.requireNonNull($.subnetwork, "expected parameter 'subnetwork' to be non-null");
            $.tags = Objects.requireNonNull($.tags, "expected parameter 'tags' to be non-null");
            $.zone = Objects.requireNonNull($.zone, "expected parameter 'zone' to be non-null");
            return $;
        }
    }

}
