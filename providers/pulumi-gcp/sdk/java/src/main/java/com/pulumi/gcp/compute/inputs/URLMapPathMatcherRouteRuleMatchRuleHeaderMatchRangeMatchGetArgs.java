// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.util.Objects;


public final class URLMapPathMatcherRouteRuleMatchRuleHeaderMatchRangeMatchGetArgs extends com.pulumi.resources.ResourceArgs {

    public static final URLMapPathMatcherRouteRuleMatchRuleHeaderMatchRangeMatchGetArgs Empty = new URLMapPathMatcherRouteRuleMatchRuleHeaderMatchRangeMatchGetArgs();

    /**
     * The end of the range (exclusive).
     * 
     */
    @Import(name="rangeEnd", required=true)
    private Output<Integer> rangeEnd;

    /**
     * @return The end of the range (exclusive).
     * 
     */
    public Output<Integer> rangeEnd() {
        return this.rangeEnd;
    }

    /**
     * The start of the range (inclusive).
     * 
     */
    @Import(name="rangeStart", required=true)
    private Output<Integer> rangeStart;

    /**
     * @return The start of the range (inclusive).
     * 
     */
    public Output<Integer> rangeStart() {
        return this.rangeStart;
    }

    private URLMapPathMatcherRouteRuleMatchRuleHeaderMatchRangeMatchGetArgs() {}

    private URLMapPathMatcherRouteRuleMatchRuleHeaderMatchRangeMatchGetArgs(URLMapPathMatcherRouteRuleMatchRuleHeaderMatchRangeMatchGetArgs $) {
        this.rangeEnd = $.rangeEnd;
        this.rangeStart = $.rangeStart;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(URLMapPathMatcherRouteRuleMatchRuleHeaderMatchRangeMatchGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private URLMapPathMatcherRouteRuleMatchRuleHeaderMatchRangeMatchGetArgs $;

        public Builder() {
            $ = new URLMapPathMatcherRouteRuleMatchRuleHeaderMatchRangeMatchGetArgs();
        }

        public Builder(URLMapPathMatcherRouteRuleMatchRuleHeaderMatchRangeMatchGetArgs defaults) {
            $ = new URLMapPathMatcherRouteRuleMatchRuleHeaderMatchRangeMatchGetArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param rangeEnd The end of the range (exclusive).
         * 
         * @return builder
         * 
         */
        public Builder rangeEnd(Output<Integer> rangeEnd) {
            $.rangeEnd = rangeEnd;
            return this;
        }

        /**
         * @param rangeEnd The end of the range (exclusive).
         * 
         * @return builder
         * 
         */
        public Builder rangeEnd(Integer rangeEnd) {
            return rangeEnd(Output.of(rangeEnd));
        }

        /**
         * @param rangeStart The start of the range (inclusive).
         * 
         * @return builder
         * 
         */
        public Builder rangeStart(Output<Integer> rangeStart) {
            $.rangeStart = rangeStart;
            return this;
        }

        /**
         * @param rangeStart The start of the range (inclusive).
         * 
         * @return builder
         * 
         */
        public Builder rangeStart(Integer rangeStart) {
            return rangeStart(Output.of(rangeStart));
        }

        public URLMapPathMatcherRouteRuleMatchRuleHeaderMatchRangeMatchGetArgs build() {
            $.rangeEnd = Objects.requireNonNull($.rangeEnd, "expected parameter 'rangeEnd' to be non-null");
            $.rangeStart = Objects.requireNonNull($.rangeStart, "expected parameter 'rangeStart' to be non-null");
            return $;
        }
    }

}
