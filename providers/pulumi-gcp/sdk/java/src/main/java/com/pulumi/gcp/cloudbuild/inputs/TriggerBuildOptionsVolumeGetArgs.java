// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.cloudbuild.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TriggerBuildOptionsVolumeGetArgs extends com.pulumi.resources.ResourceArgs {

    public static final TriggerBuildOptionsVolumeGetArgs Empty = new TriggerBuildOptionsVolumeGetArgs();

    /**
     * Name of the volume to mount.
     * Volume names must be unique per build step and must be valid names for Docker volumes.
     * Each named volume must be used by at least two build steps.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Path at which to mount the volume.
     * Paths must be absolute and cannot conflict with other volume paths on the same
     * build step or with certain reserved volume paths.
     * 
     */
    @Import(name="path")
    private @Nullable Output<String> path;

    public Optional<Output<String>> path() {
        return Optional.ofNullable(this.path);
    }

    private TriggerBuildOptionsVolumeGetArgs() {}

    private TriggerBuildOptionsVolumeGetArgs(TriggerBuildOptionsVolumeGetArgs $) {
        this.name = $.name;
        this.path = $.path;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TriggerBuildOptionsVolumeGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TriggerBuildOptionsVolumeGetArgs $;

        public Builder() {
            $ = new TriggerBuildOptionsVolumeGetArgs();
        }

        public Builder(TriggerBuildOptionsVolumeGetArgs defaults) {
            $ = new TriggerBuildOptionsVolumeGetArgs(Objects.requireNonNull(defaults));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder path(@Nullable Output<String> path) {
            $.path = path;
            return this;
        }

        public Builder path(String path) {
            return path(Output.of(path));
        }

        public TriggerBuildOptionsVolumeGetArgs build() {
            return $;
        }
    }

}
