// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.bigquery.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.util.Objects;


public final class DataTransferConfigEmailPreferencesGetArgs extends com.pulumi.resources.ResourceArgs {

    public static final DataTransferConfigEmailPreferencesGetArgs Empty = new DataTransferConfigEmailPreferencesGetArgs();

    /**
     * If true, email notifications will be sent on transfer run failures.
     * 
     */
    @Import(name="enableFailureEmail", required=true)
      private final Output<Boolean> enableFailureEmail;

    public Output<Boolean> enableFailureEmail() {
        return this.enableFailureEmail;
    }

    public DataTransferConfigEmailPreferencesGetArgs(Output<Boolean> enableFailureEmail) {
        this.enableFailureEmail = Objects.requireNonNull(enableFailureEmail, "expected parameter 'enableFailureEmail' to be non-null");
    }

    private DataTransferConfigEmailPreferencesGetArgs() {
        this.enableFailureEmail = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DataTransferConfigEmailPreferencesGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<Boolean> enableFailureEmail;

        public Builder() {
    	      // Empty
        }

        public Builder(DataTransferConfigEmailPreferencesGetArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.enableFailureEmail = defaults.enableFailureEmail;
        }

        public Builder enableFailureEmail(Output<Boolean> enableFailureEmail) {
            this.enableFailureEmail = Objects.requireNonNull(enableFailureEmail);
            return this;
        }
        public Builder enableFailureEmail(Boolean enableFailureEmail) {
            this.enableFailureEmail = Output.of(Objects.requireNonNull(enableFailureEmail));
            return this;
        }        public DataTransferConfigEmailPreferencesGetArgs build() {
            return new DataTransferConfigEmailPreferencesGetArgs(enableFailureEmail);
        }
    }
}
