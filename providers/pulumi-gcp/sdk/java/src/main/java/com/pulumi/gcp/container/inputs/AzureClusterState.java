// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.container.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.container.inputs.AzureClusterAuthorizationGetArgs;
import com.pulumi.gcp.container.inputs.AzureClusterControlPlaneGetArgs;
import com.pulumi.gcp.container.inputs.AzureClusterFleetGetArgs;
import com.pulumi.gcp.container.inputs.AzureClusterNetworkingGetArgs;
import com.pulumi.gcp.container.inputs.AzureClusterWorkloadIdentityConfigGetArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AzureClusterState extends com.pulumi.resources.ResourceArgs {

    public static final AzureClusterState Empty = new AzureClusterState();

    /**
     * Optional. Annotations on the cluster. This field has the same restrictions as Kubernetes annotations. The total size of all keys and values combined is limited to 256k. Keys can have 2 segments: prefix (optional) and name (required), separated by a slash (/). Prefix must be a DNS subdomain. Name must be 63 characters or less, begin and end with alphanumerics, with dashes (-), underscores (_), dots (.), and alphanumerics between.
     * 
     */
    @Import(name="annotations")
    private @Nullable Output<Map<String,String>> annotations;

    public Optional<Output<Map<String,String>>> annotations() {
        return Optional.ofNullable(this.annotations);
    }

    /**
     * Required. Configuration related to the cluster RBAC settings.
     * 
     */
    @Import(name="authorization")
    private @Nullable Output<AzureClusterAuthorizationGetArgs> authorization;

    public Optional<Output<AzureClusterAuthorizationGetArgs>> authorization() {
        return Optional.ofNullable(this.authorization);
    }

    /**
     * Required. The Azure region where the cluster runs. Each Google Cloud region supports a subset of nearby Azure regions. You can call to list all supported Azure regions within a given Google Cloud region.
     * 
     */
    @Import(name="azureRegion")
    private @Nullable Output<String> azureRegion;

    public Optional<Output<String>> azureRegion() {
        return Optional.ofNullable(this.azureRegion);
    }

    /**
     * Required. Name of the AzureClient. The `AzureClient` resource must reside on the same GCP project and region as the `AzureCluster`. `AzureClient` names are formatted as `projects/&lt;project-number&gt;/locations/&lt;region&gt;/azureClients/&lt;client-id&gt;`. See Resource Names (https:cloud.google.com/apis/design/resource_names) for more details on Google Cloud resource names.
     * 
     */
    @Import(name="client")
    private @Nullable Output<String> client;

    public Optional<Output<String>> client() {
        return Optional.ofNullable(this.client);
    }

    /**
     * Required. Configuration related to the cluster control plane.
     * 
     */
    @Import(name="controlPlane")
    private @Nullable Output<AzureClusterControlPlaneGetArgs> controlPlane;

    public Optional<Output<AzureClusterControlPlaneGetArgs>> controlPlane() {
        return Optional.ofNullable(this.controlPlane);
    }

    /**
     * Output only. The time at which this cluster was created.
     * 
     */
    @Import(name="createTime")
    private @Nullable Output<String> createTime;

    public Optional<Output<String>> createTime() {
        return Optional.ofNullable(this.createTime);
    }

    /**
     * Optional. A human readable description of this cluster. Cannot be longer than 255 UTF-8 encoded bytes.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Output only. The endpoint of the cluster&#39;s API server.
     * 
     */
    @Import(name="endpoint")
    private @Nullable Output<String> endpoint;

    public Optional<Output<String>> endpoint() {
        return Optional.ofNullable(this.endpoint);
    }

    /**
     * Allows clients to perform consistent read-modify-writes through optimistic concurrency control. May be sent on update
     * and delete requests to ensure the client has an up-to-date value before proceeding.
     * 
     */
    @Import(name="etag")
    private @Nullable Output<String> etag;

    public Optional<Output<String>> etag() {
        return Optional.ofNullable(this.etag);
    }

    /**
     * Fleet configuration.
     * 
     */
    @Import(name="fleet")
    private @Nullable Output<AzureClusterFleetGetArgs> fleet;

    public Optional<Output<AzureClusterFleetGetArgs>> fleet() {
        return Optional.ofNullable(this.fleet);
    }

    /**
     * The location for the resource
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * The name of this resource.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Required. Cluster-wide networking configuration.
     * 
     */
    @Import(name="networking")
    private @Nullable Output<AzureClusterNetworkingGetArgs> networking;

    public Optional<Output<AzureClusterNetworkingGetArgs>> networking() {
        return Optional.ofNullable(this.networking);
    }

    /**
     * The project for the resource
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * Output only. If set, there are currently changes in flight to the cluster.
     * 
     */
    @Import(name="reconciling")
    private @Nullable Output<Boolean> reconciling;

    public Optional<Output<Boolean>> reconciling() {
        return Optional.ofNullable(this.reconciling);
    }

    /**
     * The ARM ID the of the resource group containing proxy keyvault. Resource group ids are formatted as `/subscriptions/&lt;subscription-id&gt;/resourceGroups/&lt;resource-group-name&gt;`
     * 
     */
    @Import(name="resourceGroupId")
    private @Nullable Output<String> resourceGroupId;

    public Optional<Output<String>> resourceGroupId() {
        return Optional.ofNullable(this.resourceGroupId);
    }

    /**
     * Output only. The current state of the cluster. Possible values: STATE_UNSPECIFIED, PROVISIONING, RUNNING, RECONCILING,
     * STOPPING, ERROR, DEGRADED
     * 
     */
    @Import(name="state")
    private @Nullable Output<String> state;

    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    /**
     * Output only. A globally unique identifier for the cluster.
     * 
     */
    @Import(name="uid")
    private @Nullable Output<String> uid;

    public Optional<Output<String>> uid() {
        return Optional.ofNullable(this.uid);
    }

    /**
     * Output only. The time at which this cluster was last updated.
     * 
     */
    @Import(name="updateTime")
    private @Nullable Output<String> updateTime;

    public Optional<Output<String>> updateTime() {
        return Optional.ofNullable(this.updateTime);
    }

    /**
     * Output only. Workload Identity settings.
     * 
     */
    @Import(name="workloadIdentityConfigs")
    private @Nullable Output<List<AzureClusterWorkloadIdentityConfigGetArgs>> workloadIdentityConfigs;

    public Optional<Output<List<AzureClusterWorkloadIdentityConfigGetArgs>>> workloadIdentityConfigs() {
        return Optional.ofNullable(this.workloadIdentityConfigs);
    }

    private AzureClusterState() {}

    private AzureClusterState(AzureClusterState $) {
        this.annotations = $.annotations;
        this.authorization = $.authorization;
        this.azureRegion = $.azureRegion;
        this.client = $.client;
        this.controlPlane = $.controlPlane;
        this.createTime = $.createTime;
        this.description = $.description;
        this.endpoint = $.endpoint;
        this.etag = $.etag;
        this.fleet = $.fleet;
        this.location = $.location;
        this.name = $.name;
        this.networking = $.networking;
        this.project = $.project;
        this.reconciling = $.reconciling;
        this.resourceGroupId = $.resourceGroupId;
        this.state = $.state;
        this.uid = $.uid;
        this.updateTime = $.updateTime;
        this.workloadIdentityConfigs = $.workloadIdentityConfigs;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AzureClusterState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AzureClusterState $;

        public Builder() {
            $ = new AzureClusterState();
        }

        public Builder(AzureClusterState defaults) {
            $ = new AzureClusterState(Objects.requireNonNull(defaults));
        }

        public Builder annotations(@Nullable Output<Map<String,String>> annotations) {
            $.annotations = annotations;
            return this;
        }

        public Builder annotations(Map<String,String> annotations) {
            return annotations(Output.of(annotations));
        }

        public Builder authorization(@Nullable Output<AzureClusterAuthorizationGetArgs> authorization) {
            $.authorization = authorization;
            return this;
        }

        public Builder authorization(AzureClusterAuthorizationGetArgs authorization) {
            return authorization(Output.of(authorization));
        }

        public Builder azureRegion(@Nullable Output<String> azureRegion) {
            $.azureRegion = azureRegion;
            return this;
        }

        public Builder azureRegion(String azureRegion) {
            return azureRegion(Output.of(azureRegion));
        }

        public Builder client(@Nullable Output<String> client) {
            $.client = client;
            return this;
        }

        public Builder client(String client) {
            return client(Output.of(client));
        }

        public Builder controlPlane(@Nullable Output<AzureClusterControlPlaneGetArgs> controlPlane) {
            $.controlPlane = controlPlane;
            return this;
        }

        public Builder controlPlane(AzureClusterControlPlaneGetArgs controlPlane) {
            return controlPlane(Output.of(controlPlane));
        }

        public Builder createTime(@Nullable Output<String> createTime) {
            $.createTime = createTime;
            return this;
        }

        public Builder createTime(String createTime) {
            return createTime(Output.of(createTime));
        }

        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        public Builder description(String description) {
            return description(Output.of(description));
        }

        public Builder endpoint(@Nullable Output<String> endpoint) {
            $.endpoint = endpoint;
            return this;
        }

        public Builder endpoint(String endpoint) {
            return endpoint(Output.of(endpoint));
        }

        public Builder etag(@Nullable Output<String> etag) {
            $.etag = etag;
            return this;
        }

        public Builder etag(String etag) {
            return etag(Output.of(etag));
        }

        public Builder fleet(@Nullable Output<AzureClusterFleetGetArgs> fleet) {
            $.fleet = fleet;
            return this;
        }

        public Builder fleet(AzureClusterFleetGetArgs fleet) {
            return fleet(Output.of(fleet));
        }

        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        public Builder location(String location) {
            return location(Output.of(location));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder networking(@Nullable Output<AzureClusterNetworkingGetArgs> networking) {
            $.networking = networking;
            return this;
        }

        public Builder networking(AzureClusterNetworkingGetArgs networking) {
            return networking(Output.of(networking));
        }

        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        public Builder project(String project) {
            return project(Output.of(project));
        }

        public Builder reconciling(@Nullable Output<Boolean> reconciling) {
            $.reconciling = reconciling;
            return this;
        }

        public Builder reconciling(Boolean reconciling) {
            return reconciling(Output.of(reconciling));
        }

        public Builder resourceGroupId(@Nullable Output<String> resourceGroupId) {
            $.resourceGroupId = resourceGroupId;
            return this;
        }

        public Builder resourceGroupId(String resourceGroupId) {
            return resourceGroupId(Output.of(resourceGroupId));
        }

        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        public Builder state(String state) {
            return state(Output.of(state));
        }

        public Builder uid(@Nullable Output<String> uid) {
            $.uid = uid;
            return this;
        }

        public Builder uid(String uid) {
            return uid(Output.of(uid));
        }

        public Builder updateTime(@Nullable Output<String> updateTime) {
            $.updateTime = updateTime;
            return this;
        }

        public Builder updateTime(String updateTime) {
            return updateTime(Output.of(updateTime));
        }

        public Builder workloadIdentityConfigs(@Nullable Output<List<AzureClusterWorkloadIdentityConfigGetArgs>> workloadIdentityConfigs) {
            $.workloadIdentityConfigs = workloadIdentityConfigs;
            return this;
        }

        public Builder workloadIdentityConfigs(List<AzureClusterWorkloadIdentityConfigGetArgs> workloadIdentityConfigs) {
            return workloadIdentityConfigs(Output.of(workloadIdentityConfigs));
        }

        public Builder workloadIdentityConfigs(AzureClusterWorkloadIdentityConfigGetArgs... workloadIdentityConfigs) {
            return workloadIdentityConfigs(List.of(workloadIdentityConfigs));
        }

        public AzureClusterState build() {
            return $;
        }
    }

}
