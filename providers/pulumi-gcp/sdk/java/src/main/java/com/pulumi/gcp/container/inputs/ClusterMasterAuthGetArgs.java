// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.container.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.container.inputs.ClusterMasterAuthClientCertificateConfigGetArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ClusterMasterAuthGetArgs extends com.pulumi.resources.ResourceArgs {

    public static final ClusterMasterAuthGetArgs Empty = new ClusterMasterAuthGetArgs();

    @Import(name="clientCertificate")
    private @Nullable Output<String> clientCertificate;

    public Optional<Output<String>> clientCertificate() {
        return Optional.ofNullable(this.clientCertificate);
    }

    /**
     * Whether client certificate authorization is enabled for this cluster.  For example:
     * 
     */
    @Import(name="clientCertificateConfig", required=true)
    private Output<ClusterMasterAuthClientCertificateConfigGetArgs> clientCertificateConfig;

    public Output<ClusterMasterAuthClientCertificateConfigGetArgs> clientCertificateConfig() {
        return this.clientCertificateConfig;
    }

    @Import(name="clientKey")
    private @Nullable Output<String> clientKey;

    public Optional<Output<String>> clientKey() {
        return Optional.ofNullable(this.clientKey);
    }

    @Import(name="clusterCaCertificate")
    private @Nullable Output<String> clusterCaCertificate;

    public Optional<Output<String>> clusterCaCertificate() {
        return Optional.ofNullable(this.clusterCaCertificate);
    }

    private ClusterMasterAuthGetArgs() {}

    private ClusterMasterAuthGetArgs(ClusterMasterAuthGetArgs $) {
        this.clientCertificate = $.clientCertificate;
        this.clientCertificateConfig = $.clientCertificateConfig;
        this.clientKey = $.clientKey;
        this.clusterCaCertificate = $.clusterCaCertificate;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClusterMasterAuthGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClusterMasterAuthGetArgs $;

        public Builder() {
            $ = new ClusterMasterAuthGetArgs();
        }

        public Builder(ClusterMasterAuthGetArgs defaults) {
            $ = new ClusterMasterAuthGetArgs(Objects.requireNonNull(defaults));
        }

        public Builder clientCertificate(@Nullable Output<String> clientCertificate) {
            $.clientCertificate = clientCertificate;
            return this;
        }

        public Builder clientCertificate(String clientCertificate) {
            return clientCertificate(Output.of(clientCertificate));
        }

        public Builder clientCertificateConfig(Output<ClusterMasterAuthClientCertificateConfigGetArgs> clientCertificateConfig) {
            $.clientCertificateConfig = clientCertificateConfig;
            return this;
        }

        public Builder clientCertificateConfig(ClusterMasterAuthClientCertificateConfigGetArgs clientCertificateConfig) {
            return clientCertificateConfig(Output.of(clientCertificateConfig));
        }

        public Builder clientKey(@Nullable Output<String> clientKey) {
            $.clientKey = clientKey;
            return this;
        }

        public Builder clientKey(String clientKey) {
            return clientKey(Output.of(clientKey));
        }

        public Builder clusterCaCertificate(@Nullable Output<String> clusterCaCertificate) {
            $.clusterCaCertificate = clusterCaCertificate;
            return this;
        }

        public Builder clusterCaCertificate(String clusterCaCertificate) {
            return clusterCaCertificate(Output.of(clusterCaCertificate));
        }

        public ClusterMasterAuthGetArgs build() {
            $.clientCertificateConfig = Objects.requireNonNull($.clientCertificateConfig, "expected parameter 'clientCertificateConfig' to be non-null");
            return $;
        }
    }

}
