// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.certificateauthority.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.certificateauthority.inputs.CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameGetArgs;
import com.pulumi.gcp.certificateauthority.inputs.CertificateCertificateDescriptionSubjectDescriptionSubjectGetArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CertificateCertificateDescriptionSubjectDescriptionGetArgs extends com.pulumi.resources.ResourceArgs {

    public static final CertificateCertificateDescriptionSubjectDescriptionGetArgs Empty = new CertificateCertificateDescriptionSubjectDescriptionGetArgs();

    @Import(name="hexSerialNumber")
    private @Nullable Output<String> hexSerialNumber;

    public Optional<Output<String>> hexSerialNumber() {
        return Optional.ofNullable(this.hexSerialNumber);
    }

    /**
     * The desired lifetime of the CA certificate. Used to create the &#34;notBeforeTime&#34; and
     * &#34;notAfterTime&#34; fields inside an X.509 certificate. A duration in seconds with up to nine
     * fractional digits, terminated by &#39;s&#39;. Example: &#34;3.5s&#34;.
     * 
     */
    @Import(name="lifetime")
    private @Nullable Output<String> lifetime;

    /**
     * @return The desired lifetime of the CA certificate. Used to create the &#34;notBeforeTime&#34; and
     * &#34;notAfterTime&#34; fields inside an X.509 certificate. A duration in seconds with up to nine
     * fractional digits, terminated by &#39;s&#39;. Example: &#34;3.5s&#34;.
     * 
     */
    public Optional<Output<String>> lifetime() {
        return Optional.ofNullable(this.lifetime);
    }

    @Import(name="notAfterTime")
    private @Nullable Output<String> notAfterTime;

    public Optional<Output<String>> notAfterTime() {
        return Optional.ofNullable(this.notAfterTime);
    }

    @Import(name="notBeforeTime")
    private @Nullable Output<String> notBeforeTime;

    public Optional<Output<String>> notBeforeTime() {
        return Optional.ofNullable(this.notBeforeTime);
    }

    /**
     * The subject alternative name fields.
     * Structure is documented below.
     * 
     */
    @Import(name="subjectAltNames")
    private @Nullable Output<List<CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameGetArgs>> subjectAltNames;

    /**
     * @return The subject alternative name fields.
     * Structure is documented below.
     * 
     */
    public Optional<Output<List<CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameGetArgs>>> subjectAltNames() {
        return Optional.ofNullable(this.subjectAltNames);
    }

    /**
     * Contains distinguished name fields such as the location and organization.
     * Structure is documented below.
     * 
     */
    @Import(name="subjects")
    private @Nullable Output<List<CertificateCertificateDescriptionSubjectDescriptionSubjectGetArgs>> subjects;

    /**
     * @return Contains distinguished name fields such as the location and organization.
     * Structure is documented below.
     * 
     */
    public Optional<Output<List<CertificateCertificateDescriptionSubjectDescriptionSubjectGetArgs>>> subjects() {
        return Optional.ofNullable(this.subjects);
    }

    private CertificateCertificateDescriptionSubjectDescriptionGetArgs() {}

    private CertificateCertificateDescriptionSubjectDescriptionGetArgs(CertificateCertificateDescriptionSubjectDescriptionGetArgs $) {
        this.hexSerialNumber = $.hexSerialNumber;
        this.lifetime = $.lifetime;
        this.notAfterTime = $.notAfterTime;
        this.notBeforeTime = $.notBeforeTime;
        this.subjectAltNames = $.subjectAltNames;
        this.subjects = $.subjects;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CertificateCertificateDescriptionSubjectDescriptionGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CertificateCertificateDescriptionSubjectDescriptionGetArgs $;

        public Builder() {
            $ = new CertificateCertificateDescriptionSubjectDescriptionGetArgs();
        }

        public Builder(CertificateCertificateDescriptionSubjectDescriptionGetArgs defaults) {
            $ = new CertificateCertificateDescriptionSubjectDescriptionGetArgs(Objects.requireNonNull(defaults));
        }

        public Builder hexSerialNumber(@Nullable Output<String> hexSerialNumber) {
            $.hexSerialNumber = hexSerialNumber;
            return this;
        }

        public Builder hexSerialNumber(String hexSerialNumber) {
            return hexSerialNumber(Output.of(hexSerialNumber));
        }

        /**
         * @param lifetime The desired lifetime of the CA certificate. Used to create the &#34;notBeforeTime&#34; and
         * &#34;notAfterTime&#34; fields inside an X.509 certificate. A duration in seconds with up to nine
         * fractional digits, terminated by &#39;s&#39;. Example: &#34;3.5s&#34;.
         * 
         * @return builder
         * 
         */
        public Builder lifetime(@Nullable Output<String> lifetime) {
            $.lifetime = lifetime;
            return this;
        }

        /**
         * @param lifetime The desired lifetime of the CA certificate. Used to create the &#34;notBeforeTime&#34; and
         * &#34;notAfterTime&#34; fields inside an X.509 certificate. A duration in seconds with up to nine
         * fractional digits, terminated by &#39;s&#39;. Example: &#34;3.5s&#34;.
         * 
         * @return builder
         * 
         */
        public Builder lifetime(String lifetime) {
            return lifetime(Output.of(lifetime));
        }

        public Builder notAfterTime(@Nullable Output<String> notAfterTime) {
            $.notAfterTime = notAfterTime;
            return this;
        }

        public Builder notAfterTime(String notAfterTime) {
            return notAfterTime(Output.of(notAfterTime));
        }

        public Builder notBeforeTime(@Nullable Output<String> notBeforeTime) {
            $.notBeforeTime = notBeforeTime;
            return this;
        }

        public Builder notBeforeTime(String notBeforeTime) {
            return notBeforeTime(Output.of(notBeforeTime));
        }

        /**
         * @param subjectAltNames The subject alternative name fields.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder subjectAltNames(@Nullable Output<List<CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameGetArgs>> subjectAltNames) {
            $.subjectAltNames = subjectAltNames;
            return this;
        }

        /**
         * @param subjectAltNames The subject alternative name fields.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder subjectAltNames(List<CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameGetArgs> subjectAltNames) {
            return subjectAltNames(Output.of(subjectAltNames));
        }

        /**
         * @param subjectAltNames The subject alternative name fields.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder subjectAltNames(CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameGetArgs... subjectAltNames) {
            return subjectAltNames(List.of(subjectAltNames));
        }

        /**
         * @param subjects Contains distinguished name fields such as the location and organization.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder subjects(@Nullable Output<List<CertificateCertificateDescriptionSubjectDescriptionSubjectGetArgs>> subjects) {
            $.subjects = subjects;
            return this;
        }

        /**
         * @param subjects Contains distinguished name fields such as the location and organization.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder subjects(List<CertificateCertificateDescriptionSubjectDescriptionSubjectGetArgs> subjects) {
            return subjects(Output.of(subjects));
        }

        /**
         * @param subjects Contains distinguished name fields such as the location and organization.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder subjects(CertificateCertificateDescriptionSubjectDescriptionSubjectGetArgs... subjects) {
            return subjects(List.of(subjects));
        }

        public CertificateCertificateDescriptionSubjectDescriptionGetArgs build() {
            return $;
        }
    }

}
