// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.appengine.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;


public final class FlexibleAppVersionHandlerScriptArgs extends com.pulumi.resources.ResourceArgs {

    public static final FlexibleAppVersionHandlerScriptArgs Empty = new FlexibleAppVersionHandlerScriptArgs();

    /**
     * Path to the script from the application root directory.
     * 
     */
    @Import(name="scriptPath", required=true)
      private final Output<String> scriptPath;

    public Output<String> scriptPath() {
        return this.scriptPath;
    }

    public FlexibleAppVersionHandlerScriptArgs(Output<String> scriptPath) {
        this.scriptPath = Objects.requireNonNull(scriptPath, "expected parameter 'scriptPath' to be non-null");
    }

    private FlexibleAppVersionHandlerScriptArgs() {
        this.scriptPath = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FlexibleAppVersionHandlerScriptArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> scriptPath;

        public Builder() {
    	      // Empty
        }

        public Builder(FlexibleAppVersionHandlerScriptArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.scriptPath = defaults.scriptPath;
        }

        public Builder scriptPath(Output<String> scriptPath) {
            this.scriptPath = Objects.requireNonNull(scriptPath);
            return this;
        }
        public Builder scriptPath(String scriptPath) {
            this.scriptPath = Output.of(Objects.requireNonNull(scriptPath));
            return this;
        }        public FlexibleAppVersionHandlerScriptArgs build() {
            return new FlexibleAppVersionHandlerScriptArgs(scriptPath);
        }
    }
}
