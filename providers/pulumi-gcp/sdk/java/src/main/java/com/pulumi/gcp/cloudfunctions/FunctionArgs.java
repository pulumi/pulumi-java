// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.cloudfunctions;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.cloudfunctions.inputs.FunctionEventTriggerArgs;
import com.pulumi.gcp.cloudfunctions.inputs.FunctionSourceRepositoryArgs;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FunctionArgs extends com.pulumi.resources.ResourceArgs {

    public static final FunctionArgs Empty = new FunctionArgs();

    /**
     * Memory (in MB), available to the function. Default value is `256`. Possible values include `128`, `256`, `512`, `1024`, etc.
     * 
     */
    @Import(name="availableMemoryMb")
    private @Nullable Output<Integer> availableMemoryMb;

    public Optional<Output<Integer>> availableMemoryMb() {
        return Optional.ofNullable(this.availableMemoryMb);
    }

    /**
     * A set of key/value environment variable pairs available during build time.
     * 
     */
    @Import(name="buildEnvironmentVariables")
    private @Nullable Output<Map<String,Object>> buildEnvironmentVariables;

    public Optional<Output<Map<String,Object>>> buildEnvironmentVariables() {
        return Optional.ofNullable(this.buildEnvironmentVariables);
    }

    /**
     * Description of the function.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Name of the function that will be executed when the Google Cloud Function is triggered.
     * 
     */
    @Import(name="entryPoint")
    private @Nullable Output<String> entryPoint;

    public Optional<Output<String>> entryPoint() {
        return Optional.ofNullable(this.entryPoint);
    }

    /**
     * A set of key/value environment variable pairs to assign to the function.
     * 
     */
    @Import(name="environmentVariables")
    private @Nullable Output<Map<String,Object>> environmentVariables;

    public Optional<Output<Map<String,Object>>> environmentVariables() {
        return Optional.ofNullable(this.environmentVariables);
    }

    /**
     * A source that fires events in response to a condition in another service. Structure is documented below. Cannot be used with `trigger_http`.
     * 
     */
    @Import(name="eventTrigger")
    private @Nullable Output<FunctionEventTriggerArgs> eventTrigger;

    public Optional<Output<FunctionEventTriggerArgs>> eventTrigger() {
        return Optional.ofNullable(this.eventTrigger);
    }

    /**
     * URL which triggers function execution. Returned only if `trigger_http` is used.
     * 
     */
    @Import(name="httpsTriggerUrl")
    private @Nullable Output<String> httpsTriggerUrl;

    public Optional<Output<String>> httpsTriggerUrl() {
        return Optional.ofNullable(this.httpsTriggerUrl);
    }

    /**
     * String value that controls what traffic can reach the function. Allowed values are `ALLOW_ALL`, `ALLOW_INTERNAL_AND_GCLB` and `ALLOW_INTERNAL_ONLY`. Check [ingress documentation](https://cloud.google.com/functions/docs/networking/network-settings#ingress_settings) to see the impact of each settings value. Changes to this field will recreate the cloud function.
     * 
     */
    @Import(name="ingressSettings")
    private @Nullable Output<String> ingressSettings;

    public Optional<Output<String>> ingressSettings() {
        return Optional.ofNullable(this.ingressSettings);
    }

    /**
     * A set of key/value label pairs to assign to the function. Label keys must follow the requirements at https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements.
     * 
     */
    @Import(name="labels")
    private @Nullable Output<Map<String,Object>> labels;

    public Optional<Output<Map<String,Object>>> labels() {
        return Optional.ofNullable(this.labels);
    }

    /**
     * The limit on the maximum number of function instances that may coexist at a given time.
     * 
     */
    @Import(name="maxInstances")
    private @Nullable Output<Integer> maxInstances;

    public Optional<Output<Integer>> maxInstances() {
        return Optional.ofNullable(this.maxInstances);
    }

    /**
     * The limit on the minimum number of function instances that may coexist at a given time.
     * 
     */
    @Import(name="minInstances")
    private @Nullable Output<Integer> minInstances;

    public Optional<Output<Integer>> minInstances() {
        return Optional.ofNullable(this.minInstances);
    }

    /**
     * A user-defined name of the function. Function names must be unique globally.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Project of the function. If it is not provided, the provider project is used.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * Region of function. If it is not provided, the provider region is used.
     * 
     */
    @Import(name="region")
    private @Nullable Output<String> region;

    public Optional<Output<String>> region() {
        return Optional.ofNullable(this.region);
    }

    /**
     * The runtime in which the function is going to run.
     * Eg. `&#34;nodejs10&#34;`, `&#34;nodejs12&#34;`, `&#34;nodejs14&#34;`, `&#34;python37&#34;`, `&#34;python38&#34;`, `&#34;python39&#34;`, `&#34;dotnet3&#34;`, `&#34;go113&#34;`, `&#34;java11&#34;`, `&#34;ruby27&#34;`, etc. Check the [official doc](https://cloud.google.com/functions/docs/concepts/exec#runtimes) for the up-to-date list.
     * 
     */
    @Import(name="runtime", required=true)
    private Output<String> runtime;

    public Output<String> runtime() {
        return this.runtime;
    }

    /**
     * If provided, the self-provided service account to run the function with.
     * 
     */
    @Import(name="serviceAccountEmail")
    private @Nullable Output<String> serviceAccountEmail;

    public Optional<Output<String>> serviceAccountEmail() {
        return Optional.ofNullable(this.serviceAccountEmail);
    }

    /**
     * The GCS bucket containing the zip archive which contains the function.
     * 
     */
    @Import(name="sourceArchiveBucket")
    private @Nullable Output<String> sourceArchiveBucket;

    public Optional<Output<String>> sourceArchiveBucket() {
        return Optional.ofNullable(this.sourceArchiveBucket);
    }

    /**
     * The source archive object (file) in archive bucket.
     * 
     */
    @Import(name="sourceArchiveObject")
    private @Nullable Output<String> sourceArchiveObject;

    public Optional<Output<String>> sourceArchiveObject() {
        return Optional.ofNullable(this.sourceArchiveObject);
    }

    /**
     * Represents parameters related to source repository where a function is hosted.
     * Cannot be set alongside `source_archive_bucket` or `source_archive_object`. Structure is documented below.
     * 
     */
    @Import(name="sourceRepository")
    private @Nullable Output<FunctionSourceRepositoryArgs> sourceRepository;

    public Optional<Output<FunctionSourceRepositoryArgs>> sourceRepository() {
        return Optional.ofNullable(this.sourceRepository);
    }

    /**
     * Timeout (in seconds) for the function. Default value is 60 seconds. Cannot be more than 540 seconds.
     * 
     */
    @Import(name="timeout")
    private @Nullable Output<Integer> timeout;

    public Optional<Output<Integer>> timeout() {
        return Optional.ofNullable(this.timeout);
    }

    /**
     * Boolean variable. Any HTTP request (of a supported type) to the endpoint will trigger function execution. Supported HTTP request types are: POST, PUT, GET, DELETE, and OPTIONS. Endpoint is returned as `https_trigger_url`. Cannot be used with `event_trigger`.
     * 
     */
    @Import(name="triggerHttp")
    private @Nullable Output<Boolean> triggerHttp;

    public Optional<Output<Boolean>> triggerHttp() {
        return Optional.ofNullable(this.triggerHttp);
    }

    /**
     * The VPC Network Connector that this cloud function can connect to. It should be set up as fully-qualified URI. The format of this field is `projects/*{@literal /}locations/*{@literal /}connectors/*`.
     * 
     */
    @Import(name="vpcConnector")
    private @Nullable Output<String> vpcConnector;

    public Optional<Output<String>> vpcConnector() {
        return Optional.ofNullable(this.vpcConnector);
    }

    /**
     * The egress settings for the connector, controlling what traffic is diverted through it. Allowed values are `ALL_TRAFFIC` and `PRIVATE_RANGES_ONLY`. Defaults to `PRIVATE_RANGES_ONLY`. If unset, this field preserves the previously set value.
     * 
     */
    @Import(name="vpcConnectorEgressSettings")
    private @Nullable Output<String> vpcConnectorEgressSettings;

    public Optional<Output<String>> vpcConnectorEgressSettings() {
        return Optional.ofNullable(this.vpcConnectorEgressSettings);
    }

    private FunctionArgs() {}

    private FunctionArgs(FunctionArgs $) {
        this.availableMemoryMb = $.availableMemoryMb;
        this.buildEnvironmentVariables = $.buildEnvironmentVariables;
        this.description = $.description;
        this.entryPoint = $.entryPoint;
        this.environmentVariables = $.environmentVariables;
        this.eventTrigger = $.eventTrigger;
        this.httpsTriggerUrl = $.httpsTriggerUrl;
        this.ingressSettings = $.ingressSettings;
        this.labels = $.labels;
        this.maxInstances = $.maxInstances;
        this.minInstances = $.minInstances;
        this.name = $.name;
        this.project = $.project;
        this.region = $.region;
        this.runtime = $.runtime;
        this.serviceAccountEmail = $.serviceAccountEmail;
        this.sourceArchiveBucket = $.sourceArchiveBucket;
        this.sourceArchiveObject = $.sourceArchiveObject;
        this.sourceRepository = $.sourceRepository;
        this.timeout = $.timeout;
        this.triggerHttp = $.triggerHttp;
        this.vpcConnector = $.vpcConnector;
        this.vpcConnectorEgressSettings = $.vpcConnectorEgressSettings;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FunctionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FunctionArgs $;

        public Builder() {
            $ = new FunctionArgs();
        }

        public Builder(FunctionArgs defaults) {
            $ = new FunctionArgs(Objects.requireNonNull(defaults));
        }

        public Builder availableMemoryMb(@Nullable Output<Integer> availableMemoryMb) {
            $.availableMemoryMb = availableMemoryMb;
            return this;
        }

        public Builder availableMemoryMb(Integer availableMemoryMb) {
            return availableMemoryMb(Output.of(availableMemoryMb));
        }

        public Builder buildEnvironmentVariables(@Nullable Output<Map<String,Object>> buildEnvironmentVariables) {
            $.buildEnvironmentVariables = buildEnvironmentVariables;
            return this;
        }

        public Builder buildEnvironmentVariables(Map<String,Object> buildEnvironmentVariables) {
            return buildEnvironmentVariables(Output.of(buildEnvironmentVariables));
        }

        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        public Builder description(String description) {
            return description(Output.of(description));
        }

        public Builder entryPoint(@Nullable Output<String> entryPoint) {
            $.entryPoint = entryPoint;
            return this;
        }

        public Builder entryPoint(String entryPoint) {
            return entryPoint(Output.of(entryPoint));
        }

        public Builder environmentVariables(@Nullable Output<Map<String,Object>> environmentVariables) {
            $.environmentVariables = environmentVariables;
            return this;
        }

        public Builder environmentVariables(Map<String,Object> environmentVariables) {
            return environmentVariables(Output.of(environmentVariables));
        }

        public Builder eventTrigger(@Nullable Output<FunctionEventTriggerArgs> eventTrigger) {
            $.eventTrigger = eventTrigger;
            return this;
        }

        public Builder eventTrigger(FunctionEventTriggerArgs eventTrigger) {
            return eventTrigger(Output.of(eventTrigger));
        }

        public Builder httpsTriggerUrl(@Nullable Output<String> httpsTriggerUrl) {
            $.httpsTriggerUrl = httpsTriggerUrl;
            return this;
        }

        public Builder httpsTriggerUrl(String httpsTriggerUrl) {
            return httpsTriggerUrl(Output.of(httpsTriggerUrl));
        }

        public Builder ingressSettings(@Nullable Output<String> ingressSettings) {
            $.ingressSettings = ingressSettings;
            return this;
        }

        public Builder ingressSettings(String ingressSettings) {
            return ingressSettings(Output.of(ingressSettings));
        }

        public Builder labels(@Nullable Output<Map<String,Object>> labels) {
            $.labels = labels;
            return this;
        }

        public Builder labels(Map<String,Object> labels) {
            return labels(Output.of(labels));
        }

        public Builder maxInstances(@Nullable Output<Integer> maxInstances) {
            $.maxInstances = maxInstances;
            return this;
        }

        public Builder maxInstances(Integer maxInstances) {
            return maxInstances(Output.of(maxInstances));
        }

        public Builder minInstances(@Nullable Output<Integer> minInstances) {
            $.minInstances = minInstances;
            return this;
        }

        public Builder minInstances(Integer minInstances) {
            return minInstances(Output.of(minInstances));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        public Builder project(String project) {
            return project(Output.of(project));
        }

        public Builder region(@Nullable Output<String> region) {
            $.region = region;
            return this;
        }

        public Builder region(String region) {
            return region(Output.of(region));
        }

        public Builder runtime(Output<String> runtime) {
            $.runtime = runtime;
            return this;
        }

        public Builder runtime(String runtime) {
            return runtime(Output.of(runtime));
        }

        public Builder serviceAccountEmail(@Nullable Output<String> serviceAccountEmail) {
            $.serviceAccountEmail = serviceAccountEmail;
            return this;
        }

        public Builder serviceAccountEmail(String serviceAccountEmail) {
            return serviceAccountEmail(Output.of(serviceAccountEmail));
        }

        public Builder sourceArchiveBucket(@Nullable Output<String> sourceArchiveBucket) {
            $.sourceArchiveBucket = sourceArchiveBucket;
            return this;
        }

        public Builder sourceArchiveBucket(String sourceArchiveBucket) {
            return sourceArchiveBucket(Output.of(sourceArchiveBucket));
        }

        public Builder sourceArchiveObject(@Nullable Output<String> sourceArchiveObject) {
            $.sourceArchiveObject = sourceArchiveObject;
            return this;
        }

        public Builder sourceArchiveObject(String sourceArchiveObject) {
            return sourceArchiveObject(Output.of(sourceArchiveObject));
        }

        public Builder sourceRepository(@Nullable Output<FunctionSourceRepositoryArgs> sourceRepository) {
            $.sourceRepository = sourceRepository;
            return this;
        }

        public Builder sourceRepository(FunctionSourceRepositoryArgs sourceRepository) {
            return sourceRepository(Output.of(sourceRepository));
        }

        public Builder timeout(@Nullable Output<Integer> timeout) {
            $.timeout = timeout;
            return this;
        }

        public Builder timeout(Integer timeout) {
            return timeout(Output.of(timeout));
        }

        public Builder triggerHttp(@Nullable Output<Boolean> triggerHttp) {
            $.triggerHttp = triggerHttp;
            return this;
        }

        public Builder triggerHttp(Boolean triggerHttp) {
            return triggerHttp(Output.of(triggerHttp));
        }

        public Builder vpcConnector(@Nullable Output<String> vpcConnector) {
            $.vpcConnector = vpcConnector;
            return this;
        }

        public Builder vpcConnector(String vpcConnector) {
            return vpcConnector(Output.of(vpcConnector));
        }

        public Builder vpcConnectorEgressSettings(@Nullable Output<String> vpcConnectorEgressSettings) {
            $.vpcConnectorEgressSettings = vpcConnectorEgressSettings;
            return this;
        }

        public Builder vpcConnectorEgressSettings(String vpcConnectorEgressSettings) {
            return vpcConnectorEgressSettings(Output.of(vpcConnectorEgressSettings));
        }

        public FunctionArgs build() {
            $.runtime = Objects.requireNonNull($.runtime, "expected parameter 'runtime' to be non-null");
            return $;
        }
    }

}
