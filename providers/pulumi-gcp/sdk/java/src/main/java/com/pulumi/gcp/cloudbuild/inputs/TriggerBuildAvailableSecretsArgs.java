// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.cloudbuild.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import com.pulumi.gcp.cloudbuild.inputs.TriggerBuildAvailableSecretsSecretManagerArgs;
import java.util.List;
import java.util.Objects;


public final class TriggerBuildAvailableSecretsArgs extends com.pulumi.resources.ResourceArgs {

    public static final TriggerBuildAvailableSecretsArgs Empty = new TriggerBuildAvailableSecretsArgs();

    /**
     * Pairs a secret environment variable with a SecretVersion in Secret Manager.
     * Structure is documented below.
     * 
     */
    @Import(name="secretManagers", required=true)
      private final Output<List<TriggerBuildAvailableSecretsSecretManagerArgs>> secretManagers;

    public Output<List<TriggerBuildAvailableSecretsSecretManagerArgs>> secretManagers() {
        return this.secretManagers;
    }

    public TriggerBuildAvailableSecretsArgs(Output<List<TriggerBuildAvailableSecretsSecretManagerArgs>> secretManagers) {
        this.secretManagers = Objects.requireNonNull(secretManagers, "expected parameter 'secretManagers' to be non-null");
    }

    private TriggerBuildAvailableSecretsArgs() {
        this.secretManagers = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TriggerBuildAvailableSecretsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<List<TriggerBuildAvailableSecretsSecretManagerArgs>> secretManagers;

        public Builder() {
    	      // Empty
        }

        public Builder(TriggerBuildAvailableSecretsArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.secretManagers = defaults.secretManagers;
        }

        public Builder secretManagers(Output<List<TriggerBuildAvailableSecretsSecretManagerArgs>> secretManagers) {
            this.secretManagers = Objects.requireNonNull(secretManagers);
            return this;
        }
        public Builder secretManagers(List<TriggerBuildAvailableSecretsSecretManagerArgs> secretManagers) {
            this.secretManagers = Output.of(Objects.requireNonNull(secretManagers));
            return this;
        }
        public Builder secretManagers(TriggerBuildAvailableSecretsSecretManagerArgs... secretManagers) {
            return secretManagers(List.of(secretManagers));
        }        public TriggerBuildAvailableSecretsArgs build() {
            return new TriggerBuildAvailableSecretsArgs(secretManagers);
        }
    }
}
