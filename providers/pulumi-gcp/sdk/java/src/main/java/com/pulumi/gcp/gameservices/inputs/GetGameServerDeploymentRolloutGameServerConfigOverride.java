// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.gameservices.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.gameservices.inputs.GetGameServerDeploymentRolloutGameServerConfigOverrideRealmsSelector;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class GetGameServerDeploymentRolloutGameServerConfigOverride extends com.pulumi.resources.InvokeArgs {

    public static final GetGameServerDeploymentRolloutGameServerConfigOverride Empty = new GetGameServerDeploymentRolloutGameServerConfigOverride();

    @Import(name="configVersion", required=true)
    private String configVersion;

    public String configVersion() {
        return this.configVersion;
    }

    @Import(name="realmsSelectors", required=true)
    private List<GetGameServerDeploymentRolloutGameServerConfigOverrideRealmsSelector> realmsSelectors;

    public List<GetGameServerDeploymentRolloutGameServerConfigOverrideRealmsSelector> realmsSelectors() {
        return this.realmsSelectors;
    }

    private GetGameServerDeploymentRolloutGameServerConfigOverride() {}

    private GetGameServerDeploymentRolloutGameServerConfigOverride(GetGameServerDeploymentRolloutGameServerConfigOverride $) {
        this.configVersion = $.configVersion;
        this.realmsSelectors = $.realmsSelectors;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetGameServerDeploymentRolloutGameServerConfigOverride defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetGameServerDeploymentRolloutGameServerConfigOverride $;

        public Builder() {
            $ = new GetGameServerDeploymentRolloutGameServerConfigOverride();
        }

        public Builder(GetGameServerDeploymentRolloutGameServerConfigOverride defaults) {
            $ = new GetGameServerDeploymentRolloutGameServerConfigOverride(Objects.requireNonNull(defaults));
        }

        public Builder configVersion(String configVersion) {
            $.configVersion = configVersion;
            return this;
        }

        public Builder realmsSelectors(List<GetGameServerDeploymentRolloutGameServerConfigOverrideRealmsSelector> realmsSelectors) {
            $.realmsSelectors = realmsSelectors;
            return this;
        }

        public Builder realmsSelectors(GetGameServerDeploymentRolloutGameServerConfigOverrideRealmsSelector... realmsSelectors) {
            return realmsSelectors(List.of(realmsSelectors));
        }

        public GetGameServerDeploymentRolloutGameServerConfigOverride build() {
            $.configVersion = Objects.requireNonNull($.configVersion, "expected parameter 'configVersion' to be non-null");
            $.realmsSelectors = Objects.requireNonNull($.realmsSelectors, "expected parameter 'realmsSelectors' to be non-null");
            return $;
        }
    }

}
