// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.composer.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Double;
import java.lang.Integer;
import java.util.Objects;


public final class GetEnvironmentConfigWorkloadsConfigWorker extends com.pulumi.resources.InvokeArgs {

    public static final GetEnvironmentConfigWorkloadsConfigWorker Empty = new GetEnvironmentConfigWorkloadsConfigWorker();

    @Import(name="cpu", required=true)
    private Double cpu;

    public Double cpu() {
        return this.cpu;
    }

    @Import(name="maxCount", required=true)
    private Integer maxCount;

    public Integer maxCount() {
        return this.maxCount;
    }

    @Import(name="memoryGb", required=true)
    private Double memoryGb;

    public Double memoryGb() {
        return this.memoryGb;
    }

    @Import(name="minCount", required=true)
    private Integer minCount;

    public Integer minCount() {
        return this.minCount;
    }

    @Import(name="storageGb", required=true)
    private Double storageGb;

    public Double storageGb() {
        return this.storageGb;
    }

    private GetEnvironmentConfigWorkloadsConfigWorker() {}

    private GetEnvironmentConfigWorkloadsConfigWorker(GetEnvironmentConfigWorkloadsConfigWorker $) {
        this.cpu = $.cpu;
        this.maxCount = $.maxCount;
        this.memoryGb = $.memoryGb;
        this.minCount = $.minCount;
        this.storageGb = $.storageGb;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetEnvironmentConfigWorkloadsConfigWorker defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetEnvironmentConfigWorkloadsConfigWorker $;

        public Builder() {
            $ = new GetEnvironmentConfigWorkloadsConfigWorker();
        }

        public Builder(GetEnvironmentConfigWorkloadsConfigWorker defaults) {
            $ = new GetEnvironmentConfigWorkloadsConfigWorker(Objects.requireNonNull(defaults));
        }

        public Builder cpu(Double cpu) {
            $.cpu = cpu;
            return this;
        }

        public Builder maxCount(Integer maxCount) {
            $.maxCount = maxCount;
            return this;
        }

        public Builder memoryGb(Double memoryGb) {
            $.memoryGb = memoryGb;
            return this;
        }

        public Builder minCount(Integer minCount) {
            $.minCount = minCount;
            return this;
        }

        public Builder storageGb(Double storageGb) {
            $.storageGb = storageGb;
            return this;
        }

        public GetEnvironmentConfigWorkloadsConfigWorker build() {
            $.cpu = Objects.requireNonNull($.cpu, "expected parameter 'cpu' to be non-null");
            $.maxCount = Objects.requireNonNull($.maxCount, "expected parameter 'maxCount' to be non-null");
            $.memoryGb = Objects.requireNonNull($.memoryGb, "expected parameter 'memoryGb' to be non-null");
            $.minCount = Objects.requireNonNull($.minCount, "expected parameter 'minCount' to be non-null");
            $.storageGb = Objects.requireNonNull($.storageGb, "expected parameter 'storageGb' to be non-null");
            return $;
        }
    }

}
