// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.containeranalysis.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class NoteAttestationAuthorityHintGetArgs extends com.pulumi.resources.ResourceArgs {

    public static final NoteAttestationAuthorityHintGetArgs Empty = new NoteAttestationAuthorityHintGetArgs();

    /**
     * The human readable name of this Attestation Authority, for
     * example &#34;qa&#34;.
     * 
     */
    @Import(name="humanReadableName", required=true)
    private Output<String> humanReadableName;

    public Output<String> humanReadableName() {
        return this.humanReadableName;
    }

    private NoteAttestationAuthorityHintGetArgs() {}

    private NoteAttestationAuthorityHintGetArgs(NoteAttestationAuthorityHintGetArgs $) {
        this.humanReadableName = $.humanReadableName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NoteAttestationAuthorityHintGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NoteAttestationAuthorityHintGetArgs $;

        public Builder() {
            $ = new NoteAttestationAuthorityHintGetArgs();
        }

        public Builder(NoteAttestationAuthorityHintGetArgs defaults) {
            $ = new NoteAttestationAuthorityHintGetArgs(Objects.requireNonNull(defaults));
        }

        public Builder humanReadableName(Output<String> humanReadableName) {
            $.humanReadableName = humanReadableName;
            return this;
        }

        public Builder humanReadableName(String humanReadableName) {
            return humanReadableName(Output.of(humanReadableName));
        }

        public NoteAttestationAuthorityHintGetArgs build() {
            $.humanReadableName = Objects.requireNonNull($.humanReadableName, "expected parameter 'humanReadableName' to be non-null");
            return $;
        }
    }

}
