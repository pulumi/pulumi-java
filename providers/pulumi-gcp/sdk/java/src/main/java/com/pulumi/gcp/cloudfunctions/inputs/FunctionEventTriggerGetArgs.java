// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.cloudfunctions.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import com.pulumi.gcp.cloudfunctions.inputs.FunctionEventTriggerFailurePolicyGetArgs;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class FunctionEventTriggerGetArgs extends com.pulumi.resources.ResourceArgs {

    public static final FunctionEventTriggerGetArgs Empty = new FunctionEventTriggerGetArgs();

    /**
     * The type of event to observe. For example: `"google.storage.object.finalize"`.
     * See the documentation on [calling Cloud Functions](https://cloud.google.com/functions/docs/calling/) for a
     * full reference of accepted triggers.
     * 
     */
    @Import(name="eventType", required=true)
      private final Output<String> eventType;

    public Output<String> eventType() {
        return this.eventType;
    }

    /**
     * Specifies policy for failed executions. Structure is documented below.
     * 
     */
    @Import(name="failurePolicy")
      private final @Nullable Output<FunctionEventTriggerFailurePolicyGetArgs> failurePolicy;

    public Output<FunctionEventTriggerFailurePolicyGetArgs> failurePolicy() {
        return this.failurePolicy == null ? Codegen.empty() : this.failurePolicy;
    }

    /**
     * Required. The name or partial URI of the resource from
     * which to observe events. For example, `"myBucket"` or `"projects/my-project/topics/my-topic"`
     * 
     */
    @Import(name="resource", required=true)
      private final Output<String> resource;

    public Output<String> resource() {
        return this.resource;
    }

    public FunctionEventTriggerGetArgs(
        Output<String> eventType,
        @Nullable Output<FunctionEventTriggerFailurePolicyGetArgs> failurePolicy,
        Output<String> resource) {
        this.eventType = Objects.requireNonNull(eventType, "expected parameter 'eventType' to be non-null");
        this.failurePolicy = failurePolicy;
        this.resource = Objects.requireNonNull(resource, "expected parameter 'resource' to be non-null");
    }

    private FunctionEventTriggerGetArgs() {
        this.eventType = Codegen.empty();
        this.failurePolicy = Codegen.empty();
        this.resource = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FunctionEventTriggerGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> eventType;
        private @Nullable Output<FunctionEventTriggerFailurePolicyGetArgs> failurePolicy;
        private Output<String> resource;

        public Builder() {
    	      // Empty
        }

        public Builder(FunctionEventTriggerGetArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.eventType = defaults.eventType;
    	      this.failurePolicy = defaults.failurePolicy;
    	      this.resource = defaults.resource;
        }

        public Builder eventType(Output<String> eventType) {
            this.eventType = Objects.requireNonNull(eventType);
            return this;
        }
        public Builder eventType(String eventType) {
            this.eventType = Output.of(Objects.requireNonNull(eventType));
            return this;
        }
        public Builder failurePolicy(@Nullable Output<FunctionEventTriggerFailurePolicyGetArgs> failurePolicy) {
            this.failurePolicy = failurePolicy;
            return this;
        }
        public Builder failurePolicy(@Nullable FunctionEventTriggerFailurePolicyGetArgs failurePolicy) {
            this.failurePolicy = Codegen.ofNullable(failurePolicy);
            return this;
        }
        public Builder resource(Output<String> resource) {
            this.resource = Objects.requireNonNull(resource);
            return this;
        }
        public Builder resource(String resource) {
            this.resource = Output.of(Objects.requireNonNull(resource));
            return this;
        }        public FunctionEventTriggerGetArgs build() {
            return new FunctionEventTriggerGetArgs(eventType, failurePolicy, resource);
        }
    }
}
