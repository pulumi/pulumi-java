// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.healthcare.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.healthcare.inputs.DicomStoreStreamConfigBigqueryDestinationGetArgs;
import java.util.Objects;


public final class DicomStoreStreamConfigGetArgs extends com.pulumi.resources.ResourceArgs {

    public static final DicomStoreStreamConfigGetArgs Empty = new DicomStoreStreamConfigGetArgs();

    /**
     * BigQueryDestination to include a fully qualified BigQuery table URI where DICOM instance metadata will be streamed.
     * Structure is documented below.
     * 
     */
    @Import(name="bigqueryDestination", required=true)
    private Output<DicomStoreStreamConfigBigqueryDestinationGetArgs> bigqueryDestination;

    public Output<DicomStoreStreamConfigBigqueryDestinationGetArgs> bigqueryDestination() {
        return this.bigqueryDestination;
    }

    private DicomStoreStreamConfigGetArgs() {}

    private DicomStoreStreamConfigGetArgs(DicomStoreStreamConfigGetArgs $) {
        this.bigqueryDestination = $.bigqueryDestination;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DicomStoreStreamConfigGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DicomStoreStreamConfigGetArgs $;

        public Builder() {
            $ = new DicomStoreStreamConfigGetArgs();
        }

        public Builder(DicomStoreStreamConfigGetArgs defaults) {
            $ = new DicomStoreStreamConfigGetArgs(Objects.requireNonNull(defaults));
        }

        public Builder bigqueryDestination(Output<DicomStoreStreamConfigBigqueryDestinationGetArgs> bigqueryDestination) {
            $.bigqueryDestination = bigqueryDestination;
            return this;
        }

        public Builder bigqueryDestination(DicomStoreStreamConfigBigqueryDestinationGetArgs bigqueryDestination) {
            return bigqueryDestination(Output.of(bigqueryDestination));
        }

        public DicomStoreStreamConfigGetArgs build() {
            $.bigqueryDestination = Objects.requireNonNull($.bigqueryDestination, "expected parameter 'bigqueryDestination' to be non-null");
            return $;
        }
    }

}
