// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.projects.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.projects.inputs.GetOrganizationPolicyListPolicyAllow;
import com.pulumi.gcp.projects.inputs.GetOrganizationPolicyListPolicyDeny;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class GetOrganizationPolicyListPolicy extends com.pulumi.resources.InvokeArgs {

    public static final GetOrganizationPolicyListPolicy Empty = new GetOrganizationPolicyListPolicy();

    @Import(name="allows", required=true)
    private List<GetOrganizationPolicyListPolicyAllow> allows;

    public List<GetOrganizationPolicyListPolicyAllow> allows() {
        return this.allows;
    }

    @Import(name="denies", required=true)
    private List<GetOrganizationPolicyListPolicyDeny> denies;

    public List<GetOrganizationPolicyListPolicyDeny> denies() {
        return this.denies;
    }

    @Import(name="inheritFromParent", required=true)
    private Boolean inheritFromParent;

    public Boolean inheritFromParent() {
        return this.inheritFromParent;
    }

    @Import(name="suggestedValue", required=true)
    private String suggestedValue;

    public String suggestedValue() {
        return this.suggestedValue;
    }

    private GetOrganizationPolicyListPolicy() {}

    private GetOrganizationPolicyListPolicy(GetOrganizationPolicyListPolicy $) {
        this.allows = $.allows;
        this.denies = $.denies;
        this.inheritFromParent = $.inheritFromParent;
        this.suggestedValue = $.suggestedValue;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetOrganizationPolicyListPolicy defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetOrganizationPolicyListPolicy $;

        public Builder() {
            $ = new GetOrganizationPolicyListPolicy();
        }

        public Builder(GetOrganizationPolicyListPolicy defaults) {
            $ = new GetOrganizationPolicyListPolicy(Objects.requireNonNull(defaults));
        }

        public Builder allows(List<GetOrganizationPolicyListPolicyAllow> allows) {
            $.allows = allows;
            return this;
        }

        public Builder allows(GetOrganizationPolicyListPolicyAllow... allows) {
            return allows(List.of(allows));
        }

        public Builder denies(List<GetOrganizationPolicyListPolicyDeny> denies) {
            $.denies = denies;
            return this;
        }

        public Builder denies(GetOrganizationPolicyListPolicyDeny... denies) {
            return denies(List.of(denies));
        }

        public Builder inheritFromParent(Boolean inheritFromParent) {
            $.inheritFromParent = inheritFromParent;
            return this;
        }

        public Builder suggestedValue(String suggestedValue) {
            $.suggestedValue = suggestedValue;
            return this;
        }

        public GetOrganizationPolicyListPolicy build() {
            $.allows = Objects.requireNonNull($.allows, "expected parameter 'allows' to be non-null");
            $.denies = Objects.requireNonNull($.denies, "expected parameter 'denies' to be non-null");
            $.inheritFromParent = Objects.requireNonNull($.inheritFromParent, "expected parameter 'inheritFromParent' to be non-null");
            $.suggestedValue = Objects.requireNonNull($.suggestedValue, "expected parameter 'suggestedValue' to be non-null");
            return $;
        }
    }

}
