// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class GetInstanceServiceAccount extends com.pulumi.resources.InvokeArgs {

    public static final GetInstanceServiceAccount Empty = new GetInstanceServiceAccount();

    /**
     * The service account e-mail address.
     * 
     */
    @Import(name="email", required=true)
    private String email;

    /**
     * @return The service account e-mail address.
     * 
     */
    public String email() {
        return this.email;
    }

    /**
     * A list of service scopes.
     * 
     */
    @Import(name="scopes", required=true)
    private List<String> scopes;

    /**
     * @return A list of service scopes.
     * 
     */
    public List<String> scopes() {
        return this.scopes;
    }

    private GetInstanceServiceAccount() {}

    private GetInstanceServiceAccount(GetInstanceServiceAccount $) {
        this.email = $.email;
        this.scopes = $.scopes;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetInstanceServiceAccount defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetInstanceServiceAccount $;

        public Builder() {
            $ = new GetInstanceServiceAccount();
        }

        public Builder(GetInstanceServiceAccount defaults) {
            $ = new GetInstanceServiceAccount(Objects.requireNonNull(defaults));
        }

        /**
         * @param email The service account e-mail address.
         * 
         * @return builder
         * 
         */
        public Builder email(String email) {
            $.email = email;
            return this;
        }

        /**
         * @param scopes A list of service scopes.
         * 
         * @return builder
         * 
         */
        public Builder scopes(List<String> scopes) {
            $.scopes = scopes;
            return this;
        }

        /**
         * @param scopes A list of service scopes.
         * 
         * @return builder
         * 
         */
        public Builder scopes(String... scopes) {
            return scopes(List.of(scopes));
        }

        public GetInstanceServiceAccount build() {
            $.email = Objects.requireNonNull($.email, "expected parameter 'email' to be non-null");
            $.scopes = Objects.requireNonNull($.scopes, "expected parameter 'scopes' to be non-null");
            return $;
        }
    }

}
