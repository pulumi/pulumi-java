// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.osconfig.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.osconfig.inputs.OsPolicyAssignmentInstanceFilterExclusionLabelGetArgs;
import com.pulumi.gcp.osconfig.inputs.OsPolicyAssignmentInstanceFilterInclusionLabelGetArgs;
import com.pulumi.gcp.osconfig.inputs.OsPolicyAssignmentInstanceFilterInventoryGetArgs;
import java.lang.Boolean;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class OsPolicyAssignmentInstanceFilterGetArgs extends com.pulumi.resources.ResourceArgs {

    public static final OsPolicyAssignmentInstanceFilterGetArgs Empty = new OsPolicyAssignmentInstanceFilterGetArgs();

    /**
     * Target all VMs in the project. If true, no other criteria is permitted.
     * 
     */
    @Import(name="all")
    private @Nullable Output<Boolean> all;

    public Optional<Output<Boolean>> all() {
        return Optional.ofNullable(this.all);
    }

    /**
     * List of label sets used for VM exclusion. If the list has more than one label set, the VM is excluded if any of the label sets are applicable for the VM.
     * 
     */
    @Import(name="exclusionLabels")
    private @Nullable Output<List<OsPolicyAssignmentInstanceFilterExclusionLabelGetArgs>> exclusionLabels;

    public Optional<Output<List<OsPolicyAssignmentInstanceFilterExclusionLabelGetArgs>>> exclusionLabels() {
        return Optional.ofNullable(this.exclusionLabels);
    }

    /**
     * List of label sets used for VM inclusion. If the list has more than one `LabelSet`, the VM is included if any of the label sets are applicable for the VM.
     * 
     */
    @Import(name="inclusionLabels")
    private @Nullable Output<List<OsPolicyAssignmentInstanceFilterInclusionLabelGetArgs>> inclusionLabels;

    public Optional<Output<List<OsPolicyAssignmentInstanceFilterInclusionLabelGetArgs>>> inclusionLabels() {
        return Optional.ofNullable(this.inclusionLabels);
    }

    /**
     * List of inventories to select VMs. A VM is selected if its inventory data matches at least one of the following inventories.
     * 
     */
    @Import(name="inventories")
    private @Nullable Output<List<OsPolicyAssignmentInstanceFilterInventoryGetArgs>> inventories;

    public Optional<Output<List<OsPolicyAssignmentInstanceFilterInventoryGetArgs>>> inventories() {
        return Optional.ofNullable(this.inventories);
    }

    private OsPolicyAssignmentInstanceFilterGetArgs() {}

    private OsPolicyAssignmentInstanceFilterGetArgs(OsPolicyAssignmentInstanceFilterGetArgs $) {
        this.all = $.all;
        this.exclusionLabels = $.exclusionLabels;
        this.inclusionLabels = $.inclusionLabels;
        this.inventories = $.inventories;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OsPolicyAssignmentInstanceFilterGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OsPolicyAssignmentInstanceFilterGetArgs $;

        public Builder() {
            $ = new OsPolicyAssignmentInstanceFilterGetArgs();
        }

        public Builder(OsPolicyAssignmentInstanceFilterGetArgs defaults) {
            $ = new OsPolicyAssignmentInstanceFilterGetArgs(Objects.requireNonNull(defaults));
        }

        public Builder all(@Nullable Output<Boolean> all) {
            $.all = all;
            return this;
        }

        public Builder all(Boolean all) {
            return all(Output.of(all));
        }

        public Builder exclusionLabels(@Nullable Output<List<OsPolicyAssignmentInstanceFilterExclusionLabelGetArgs>> exclusionLabels) {
            $.exclusionLabels = exclusionLabels;
            return this;
        }

        public Builder exclusionLabels(List<OsPolicyAssignmentInstanceFilterExclusionLabelGetArgs> exclusionLabels) {
            return exclusionLabels(Output.of(exclusionLabels));
        }

        public Builder exclusionLabels(OsPolicyAssignmentInstanceFilterExclusionLabelGetArgs... exclusionLabels) {
            return exclusionLabels(List.of(exclusionLabels));
        }

        public Builder inclusionLabels(@Nullable Output<List<OsPolicyAssignmentInstanceFilterInclusionLabelGetArgs>> inclusionLabels) {
            $.inclusionLabels = inclusionLabels;
            return this;
        }

        public Builder inclusionLabels(List<OsPolicyAssignmentInstanceFilterInclusionLabelGetArgs> inclusionLabels) {
            return inclusionLabels(Output.of(inclusionLabels));
        }

        public Builder inclusionLabels(OsPolicyAssignmentInstanceFilterInclusionLabelGetArgs... inclusionLabels) {
            return inclusionLabels(List.of(inclusionLabels));
        }

        public Builder inventories(@Nullable Output<List<OsPolicyAssignmentInstanceFilterInventoryGetArgs>> inventories) {
            $.inventories = inventories;
            return this;
        }

        public Builder inventories(List<OsPolicyAssignmentInstanceFilterInventoryGetArgs> inventories) {
            return inventories(Output.of(inventories));
        }

        public Builder inventories(OsPolicyAssignmentInstanceFilterInventoryGetArgs... inventories) {
            return inventories(List.of(inventories));
        }

        public OsPolicyAssignmentInstanceFilterGetArgs build() {
            return $;
        }
    }

}
