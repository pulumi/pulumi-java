// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.composer.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class GetImageVersionsArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetImageVersionsArgs Empty = new GetImageVersionsArgs();

    /**
     * The ID of the project to list versions in.
     * If it is not provided, the provider project is used.
     * 
     */
    @Import(name="project")
    private Output</* @Nullable */ String> project;

    /**
     * @return The ID of the project to list versions in.
     * If it is not provided, the provider project is used.
     * 
     */
    public Output</* @Nullable */ String> project() {
        return this.project;
    }

    /**
     * The location to list versions in.
     * If it is not provider, the provider region is used.
     * 
     */
    @Import(name="region")
    private Output</* @Nullable */ String> region;

    /**
     * @return The location to list versions in.
     * If it is not provider, the provider region is used.
     * 
     */
    public Output</* @Nullable */ String> region() {
        return this.region;
    }

    private GetImageVersionsArgs() {}

    private GetImageVersionsArgs(GetImageVersionsArgs $) {
        this.project = $.project;
        this.region = $.region;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetImageVersionsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetImageVersionsArgs $;

        public Builder() {
            $ = new GetImageVersionsArgs();
        }

        public Builder(GetImageVersionsArgs defaults) {
            $ = new GetImageVersionsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param project The ID of the project to list versions in.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(Output</* @Nullable */ String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The ID of the project to list versions in.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable String project) {
            return project(Output.of(project));
        }

        /**
         * @param region The location to list versions in.
         * If it is not provider, the provider region is used.
         * 
         * @return builder
         * 
         */
        public Builder region(Output</* @Nullable */ String> region) {
            $.region = region;
            return this;
        }

        /**
         * @param region The location to list versions in.
         * If it is not provider, the provider region is used.
         * 
         * @return builder
         * 
         */
        public Builder region(@Nullable String region) {
            return region(Output.of(region));
        }

        public GetImageVersionsArgs build() {
            return $;
        }
    }

}
