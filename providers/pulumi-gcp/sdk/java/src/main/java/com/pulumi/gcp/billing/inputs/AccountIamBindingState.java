// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.billing.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.billing.inputs.AccountIamBindingConditionArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AccountIamBindingState extends com.pulumi.resources.ResourceArgs {

    public static final AccountIamBindingState Empty = new AccountIamBindingState();

    @Import(name="billingAccountId")
    private @Nullable Output<String> billingAccountId;

    public Optional<Output<String>> billingAccountId() {
        return Optional.ofNullable(this.billingAccountId);
    }

    @Import(name="condition")
    private @Nullable Output<AccountIamBindingConditionArgs> condition;

    public Optional<Output<AccountIamBindingConditionArgs>> condition() {
        return Optional.ofNullable(this.condition);
    }

    @Import(name="etag")
    private @Nullable Output<String> etag;

    public Optional<Output<String>> etag() {
        return Optional.ofNullable(this.etag);
    }

    @Import(name="members")
    private @Nullable Output<List<String>> members;

    public Optional<Output<List<String>>> members() {
        return Optional.ofNullable(this.members);
    }

    @Import(name="role")
    private @Nullable Output<String> role;

    public Optional<Output<String>> role() {
        return Optional.ofNullable(this.role);
    }

    private AccountIamBindingState() {}

    private AccountIamBindingState(AccountIamBindingState $) {
        this.billingAccountId = $.billingAccountId;
        this.condition = $.condition;
        this.etag = $.etag;
        this.members = $.members;
        this.role = $.role;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AccountIamBindingState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AccountIamBindingState $;

        public Builder() {
            $ = new AccountIamBindingState();
        }

        public Builder(AccountIamBindingState defaults) {
            $ = new AccountIamBindingState(Objects.requireNonNull(defaults));
        }

        public Builder billingAccountId(@Nullable Output<String> billingAccountId) {
            $.billingAccountId = billingAccountId;
            return this;
        }

        public Builder billingAccountId(String billingAccountId) {
            return billingAccountId(Output.of(billingAccountId));
        }

        public Builder condition(@Nullable Output<AccountIamBindingConditionArgs> condition) {
            $.condition = condition;
            return this;
        }

        public Builder condition(AccountIamBindingConditionArgs condition) {
            return condition(Output.of(condition));
        }

        public Builder etag(@Nullable Output<String> etag) {
            $.etag = etag;
            return this;
        }

        public Builder etag(String etag) {
            return etag(Output.of(etag));
        }

        public Builder members(@Nullable Output<List<String>> members) {
            $.members = members;
            return this;
        }

        public Builder members(List<String> members) {
            return members(Output.of(members));
        }

        public Builder members(String... members) {
            return members(List.of(members));
        }

        public Builder role(@Nullable Output<String> role) {
            $.role = role;
            return this;
        }

        public Builder role(String role) {
            return role(Output.of(role));
        }

        public AccountIamBindingState build() {
            return $;
        }
    }

}
