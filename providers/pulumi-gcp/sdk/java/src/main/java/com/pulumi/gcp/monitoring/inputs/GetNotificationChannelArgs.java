// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.monitoring.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetNotificationChannelArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetNotificationChannelArgs Empty = new GetNotificationChannelArgs();

    /**
     * The display name for this notification channel.
     * 
     */
    @Import(name="displayName")
    private @Nullable String displayName;

    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * Labels (corresponding to the
     * NotificationChannelDescriptor schema) to filter the notification channels by.
     * 
     */
    @Import(name="labels")
    private @Nullable Map<String,String> labels;

    public Optional<Map<String,String>> labels() {
        return Optional.ofNullable(this.labels);
    }

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Import(name="project")
    private @Nullable String project;

    public Optional<String> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * The type of the notification channel.
     * 
     */
    @Import(name="type")
    private @Nullable String type;

    public Optional<String> type() {
        return Optional.ofNullable(this.type);
    }

    /**
     * User-provided key-value labels to filter by.
     * 
     */
    @Import(name="userLabels")
    private @Nullable Map<String,String> userLabels;

    public Optional<Map<String,String>> userLabels() {
        return Optional.ofNullable(this.userLabels);
    }

    private GetNotificationChannelArgs() {}

    private GetNotificationChannelArgs(GetNotificationChannelArgs $) {
        this.displayName = $.displayName;
        this.labels = $.labels;
        this.project = $.project;
        this.type = $.type;
        this.userLabels = $.userLabels;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetNotificationChannelArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetNotificationChannelArgs $;

        public Builder() {
            $ = new GetNotificationChannelArgs();
        }

        public Builder(GetNotificationChannelArgs defaults) {
            $ = new GetNotificationChannelArgs(Objects.requireNonNull(defaults));
        }

        public Builder displayName(@Nullable String displayName) {
            $.displayName = displayName;
            return this;
        }

        public Builder labels(@Nullable Map<String,String> labels) {
            $.labels = labels;
            return this;
        }

        public Builder project(@Nullable String project) {
            $.project = project;
            return this;
        }

        public Builder type(@Nullable String type) {
            $.type = type;
            return this;
        }

        public Builder userLabels(@Nullable Map<String,String> userLabels) {
            $.userLabels = userLabels;
            return this;
        }

        public GetNotificationChannelArgs build() {
            return $;
        }
    }

}
