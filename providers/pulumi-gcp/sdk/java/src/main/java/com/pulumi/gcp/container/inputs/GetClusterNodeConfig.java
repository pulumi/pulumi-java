// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.container.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.container.inputs.GetClusterNodeConfigEphemeralStorageConfig;
import com.pulumi.gcp.container.inputs.GetClusterNodeConfigGcfsConfig;
import com.pulumi.gcp.container.inputs.GetClusterNodeConfigGuestAccelerator;
import com.pulumi.gcp.container.inputs.GetClusterNodeConfigKubeletConfig;
import com.pulumi.gcp.container.inputs.GetClusterNodeConfigLinuxNodeConfig;
import com.pulumi.gcp.container.inputs.GetClusterNodeConfigSandboxConfig;
import com.pulumi.gcp.container.inputs.GetClusterNodeConfigShieldedInstanceConfig;
import com.pulumi.gcp.container.inputs.GetClusterNodeConfigTaint;
import com.pulumi.gcp.container.inputs.GetClusterNodeConfigWorkloadMetadataConfig;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;


public final class GetClusterNodeConfig extends com.pulumi.resources.InvokeArgs {

    public static final GetClusterNodeConfig Empty = new GetClusterNodeConfig();

    @Import(name="bootDiskKmsKey", required=true)
    private String bootDiskKmsKey;

    public String bootDiskKmsKey() {
        return this.bootDiskKmsKey;
    }

    @Import(name="diskSizeGb", required=true)
    private Integer diskSizeGb;

    public Integer diskSizeGb() {
        return this.diskSizeGb;
    }

    @Import(name="diskType", required=true)
    private String diskType;

    public String diskType() {
        return this.diskType;
    }

    @Import(name="ephemeralStorageConfigs", required=true)
    private List<GetClusterNodeConfigEphemeralStorageConfig> ephemeralStorageConfigs;

    public List<GetClusterNodeConfigEphemeralStorageConfig> ephemeralStorageConfigs() {
        return this.ephemeralStorageConfigs;
    }

    @Import(name="gcfsConfigs", required=true)
    private List<GetClusterNodeConfigGcfsConfig> gcfsConfigs;

    public List<GetClusterNodeConfigGcfsConfig> gcfsConfigs() {
        return this.gcfsConfigs;
    }

    @Import(name="guestAccelerators", required=true)
    private List<GetClusterNodeConfigGuestAccelerator> guestAccelerators;

    public List<GetClusterNodeConfigGuestAccelerator> guestAccelerators() {
        return this.guestAccelerators;
    }

    @Import(name="imageType", required=true)
    private String imageType;

    public String imageType() {
        return this.imageType;
    }

    @Import(name="kubeletConfigs", required=true)
    private List<GetClusterNodeConfigKubeletConfig> kubeletConfigs;

    public List<GetClusterNodeConfigKubeletConfig> kubeletConfigs() {
        return this.kubeletConfigs;
    }

    @Import(name="labels", required=true)
    private Map<String,String> labels;

    public Map<String,String> labels() {
        return this.labels;
    }

    @Import(name="linuxNodeConfigs", required=true)
    private List<GetClusterNodeConfigLinuxNodeConfig> linuxNodeConfigs;

    public List<GetClusterNodeConfigLinuxNodeConfig> linuxNodeConfigs() {
        return this.linuxNodeConfigs;
    }

    @Import(name="localSsdCount", required=true)
    private Integer localSsdCount;

    public Integer localSsdCount() {
        return this.localSsdCount;
    }

    @Import(name="machineType", required=true)
    private String machineType;

    public String machineType() {
        return this.machineType;
    }

    @Import(name="metadata", required=true)
    private Map<String,String> metadata;

    public Map<String,String> metadata() {
        return this.metadata;
    }

    @Import(name="minCpuPlatform", required=true)
    private String minCpuPlatform;

    public String minCpuPlatform() {
        return this.minCpuPlatform;
    }

    @Import(name="nodeGroup", required=true)
    private String nodeGroup;

    public String nodeGroup() {
        return this.nodeGroup;
    }

    @Import(name="oauthScopes", required=true)
    private List<String> oauthScopes;

    public List<String> oauthScopes() {
        return this.oauthScopes;
    }

    @Import(name="preemptible", required=true)
    private Boolean preemptible;

    public Boolean preemptible() {
        return this.preemptible;
    }

    @Import(name="sandboxConfigs", required=true)
    private List<GetClusterNodeConfigSandboxConfig> sandboxConfigs;

    public List<GetClusterNodeConfigSandboxConfig> sandboxConfigs() {
        return this.sandboxConfigs;
    }

    @Import(name="serviceAccount", required=true)
    private String serviceAccount;

    public String serviceAccount() {
        return this.serviceAccount;
    }

    @Import(name="shieldedInstanceConfigs", required=true)
    private List<GetClusterNodeConfigShieldedInstanceConfig> shieldedInstanceConfigs;

    public List<GetClusterNodeConfigShieldedInstanceConfig> shieldedInstanceConfigs() {
        return this.shieldedInstanceConfigs;
    }

    @Import(name="spot", required=true)
    private Boolean spot;

    public Boolean spot() {
        return this.spot;
    }

    @Import(name="tags", required=true)
    private List<String> tags;

    public List<String> tags() {
        return this.tags;
    }

    @Import(name="taints", required=true)
    private List<GetClusterNodeConfigTaint> taints;

    public List<GetClusterNodeConfigTaint> taints() {
        return this.taints;
    }

    @Import(name="workloadMetadataConfigs", required=true)
    private List<GetClusterNodeConfigWorkloadMetadataConfig> workloadMetadataConfigs;

    public List<GetClusterNodeConfigWorkloadMetadataConfig> workloadMetadataConfigs() {
        return this.workloadMetadataConfigs;
    }

    private GetClusterNodeConfig() {}

    private GetClusterNodeConfig(GetClusterNodeConfig $) {
        this.bootDiskKmsKey = $.bootDiskKmsKey;
        this.diskSizeGb = $.diskSizeGb;
        this.diskType = $.diskType;
        this.ephemeralStorageConfigs = $.ephemeralStorageConfigs;
        this.gcfsConfigs = $.gcfsConfigs;
        this.guestAccelerators = $.guestAccelerators;
        this.imageType = $.imageType;
        this.kubeletConfigs = $.kubeletConfigs;
        this.labels = $.labels;
        this.linuxNodeConfigs = $.linuxNodeConfigs;
        this.localSsdCount = $.localSsdCount;
        this.machineType = $.machineType;
        this.metadata = $.metadata;
        this.minCpuPlatform = $.minCpuPlatform;
        this.nodeGroup = $.nodeGroup;
        this.oauthScopes = $.oauthScopes;
        this.preemptible = $.preemptible;
        this.sandboxConfigs = $.sandboxConfigs;
        this.serviceAccount = $.serviceAccount;
        this.shieldedInstanceConfigs = $.shieldedInstanceConfigs;
        this.spot = $.spot;
        this.tags = $.tags;
        this.taints = $.taints;
        this.workloadMetadataConfigs = $.workloadMetadataConfigs;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetClusterNodeConfig defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetClusterNodeConfig $;

        public Builder() {
            $ = new GetClusterNodeConfig();
        }

        public Builder(GetClusterNodeConfig defaults) {
            $ = new GetClusterNodeConfig(Objects.requireNonNull(defaults));
        }

        public Builder bootDiskKmsKey(String bootDiskKmsKey) {
            $.bootDiskKmsKey = bootDiskKmsKey;
            return this;
        }

        public Builder diskSizeGb(Integer diskSizeGb) {
            $.diskSizeGb = diskSizeGb;
            return this;
        }

        public Builder diskType(String diskType) {
            $.diskType = diskType;
            return this;
        }

        public Builder ephemeralStorageConfigs(List<GetClusterNodeConfigEphemeralStorageConfig> ephemeralStorageConfigs) {
            $.ephemeralStorageConfigs = ephemeralStorageConfigs;
            return this;
        }

        public Builder ephemeralStorageConfigs(GetClusterNodeConfigEphemeralStorageConfig... ephemeralStorageConfigs) {
            return ephemeralStorageConfigs(List.of(ephemeralStorageConfigs));
        }

        public Builder gcfsConfigs(List<GetClusterNodeConfigGcfsConfig> gcfsConfigs) {
            $.gcfsConfigs = gcfsConfigs;
            return this;
        }

        public Builder gcfsConfigs(GetClusterNodeConfigGcfsConfig... gcfsConfigs) {
            return gcfsConfigs(List.of(gcfsConfigs));
        }

        public Builder guestAccelerators(List<GetClusterNodeConfigGuestAccelerator> guestAccelerators) {
            $.guestAccelerators = guestAccelerators;
            return this;
        }

        public Builder guestAccelerators(GetClusterNodeConfigGuestAccelerator... guestAccelerators) {
            return guestAccelerators(List.of(guestAccelerators));
        }

        public Builder imageType(String imageType) {
            $.imageType = imageType;
            return this;
        }

        public Builder kubeletConfigs(List<GetClusterNodeConfigKubeletConfig> kubeletConfigs) {
            $.kubeletConfigs = kubeletConfigs;
            return this;
        }

        public Builder kubeletConfigs(GetClusterNodeConfigKubeletConfig... kubeletConfigs) {
            return kubeletConfigs(List.of(kubeletConfigs));
        }

        public Builder labels(Map<String,String> labels) {
            $.labels = labels;
            return this;
        }

        public Builder linuxNodeConfigs(List<GetClusterNodeConfigLinuxNodeConfig> linuxNodeConfigs) {
            $.linuxNodeConfigs = linuxNodeConfigs;
            return this;
        }

        public Builder linuxNodeConfigs(GetClusterNodeConfigLinuxNodeConfig... linuxNodeConfigs) {
            return linuxNodeConfigs(List.of(linuxNodeConfigs));
        }

        public Builder localSsdCount(Integer localSsdCount) {
            $.localSsdCount = localSsdCount;
            return this;
        }

        public Builder machineType(String machineType) {
            $.machineType = machineType;
            return this;
        }

        public Builder metadata(Map<String,String> metadata) {
            $.metadata = metadata;
            return this;
        }

        public Builder minCpuPlatform(String minCpuPlatform) {
            $.minCpuPlatform = minCpuPlatform;
            return this;
        }

        public Builder nodeGroup(String nodeGroup) {
            $.nodeGroup = nodeGroup;
            return this;
        }

        public Builder oauthScopes(List<String> oauthScopes) {
            $.oauthScopes = oauthScopes;
            return this;
        }

        public Builder oauthScopes(String... oauthScopes) {
            return oauthScopes(List.of(oauthScopes));
        }

        public Builder preemptible(Boolean preemptible) {
            $.preemptible = preemptible;
            return this;
        }

        public Builder sandboxConfigs(List<GetClusterNodeConfigSandboxConfig> sandboxConfigs) {
            $.sandboxConfigs = sandboxConfigs;
            return this;
        }

        public Builder sandboxConfigs(GetClusterNodeConfigSandboxConfig... sandboxConfigs) {
            return sandboxConfigs(List.of(sandboxConfigs));
        }

        public Builder serviceAccount(String serviceAccount) {
            $.serviceAccount = serviceAccount;
            return this;
        }

        public Builder shieldedInstanceConfigs(List<GetClusterNodeConfigShieldedInstanceConfig> shieldedInstanceConfigs) {
            $.shieldedInstanceConfigs = shieldedInstanceConfigs;
            return this;
        }

        public Builder shieldedInstanceConfigs(GetClusterNodeConfigShieldedInstanceConfig... shieldedInstanceConfigs) {
            return shieldedInstanceConfigs(List.of(shieldedInstanceConfigs));
        }

        public Builder spot(Boolean spot) {
            $.spot = spot;
            return this;
        }

        public Builder tags(List<String> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(String... tags) {
            return tags(List.of(tags));
        }

        public Builder taints(List<GetClusterNodeConfigTaint> taints) {
            $.taints = taints;
            return this;
        }

        public Builder taints(GetClusterNodeConfigTaint... taints) {
            return taints(List.of(taints));
        }

        public Builder workloadMetadataConfigs(List<GetClusterNodeConfigWorkloadMetadataConfig> workloadMetadataConfigs) {
            $.workloadMetadataConfigs = workloadMetadataConfigs;
            return this;
        }

        public Builder workloadMetadataConfigs(GetClusterNodeConfigWorkloadMetadataConfig... workloadMetadataConfigs) {
            return workloadMetadataConfigs(List.of(workloadMetadataConfigs));
        }

        public GetClusterNodeConfig build() {
            $.bootDiskKmsKey = Objects.requireNonNull($.bootDiskKmsKey, "expected parameter 'bootDiskKmsKey' to be non-null");
            $.diskSizeGb = Objects.requireNonNull($.diskSizeGb, "expected parameter 'diskSizeGb' to be non-null");
            $.diskType = Objects.requireNonNull($.diskType, "expected parameter 'diskType' to be non-null");
            $.ephemeralStorageConfigs = Objects.requireNonNull($.ephemeralStorageConfigs, "expected parameter 'ephemeralStorageConfigs' to be non-null");
            $.gcfsConfigs = Objects.requireNonNull($.gcfsConfigs, "expected parameter 'gcfsConfigs' to be non-null");
            $.guestAccelerators = Objects.requireNonNull($.guestAccelerators, "expected parameter 'guestAccelerators' to be non-null");
            $.imageType = Objects.requireNonNull($.imageType, "expected parameter 'imageType' to be non-null");
            $.kubeletConfigs = Objects.requireNonNull($.kubeletConfigs, "expected parameter 'kubeletConfigs' to be non-null");
            $.labels = Objects.requireNonNull($.labels, "expected parameter 'labels' to be non-null");
            $.linuxNodeConfigs = Objects.requireNonNull($.linuxNodeConfigs, "expected parameter 'linuxNodeConfigs' to be non-null");
            $.localSsdCount = Objects.requireNonNull($.localSsdCount, "expected parameter 'localSsdCount' to be non-null");
            $.machineType = Objects.requireNonNull($.machineType, "expected parameter 'machineType' to be non-null");
            $.metadata = Objects.requireNonNull($.metadata, "expected parameter 'metadata' to be non-null");
            $.minCpuPlatform = Objects.requireNonNull($.minCpuPlatform, "expected parameter 'minCpuPlatform' to be non-null");
            $.nodeGroup = Objects.requireNonNull($.nodeGroup, "expected parameter 'nodeGroup' to be non-null");
            $.oauthScopes = Objects.requireNonNull($.oauthScopes, "expected parameter 'oauthScopes' to be non-null");
            $.preemptible = Objects.requireNonNull($.preemptible, "expected parameter 'preemptible' to be non-null");
            $.sandboxConfigs = Objects.requireNonNull($.sandboxConfigs, "expected parameter 'sandboxConfigs' to be non-null");
            $.serviceAccount = Objects.requireNonNull($.serviceAccount, "expected parameter 'serviceAccount' to be non-null");
            $.shieldedInstanceConfigs = Objects.requireNonNull($.shieldedInstanceConfigs, "expected parameter 'shieldedInstanceConfigs' to be non-null");
            $.spot = Objects.requireNonNull($.spot, "expected parameter 'spot' to be non-null");
            $.tags = Objects.requireNonNull($.tags, "expected parameter 'tags' to be non-null");
            $.taints = Objects.requireNonNull($.taints, "expected parameter 'taints' to be non-null");
            $.workloadMetadataConfigs = Objects.requireNonNull($.workloadMetadataConfigs, "expected parameter 'workloadMetadataConfigs' to be non-null");
            return $;
        }
    }

}
