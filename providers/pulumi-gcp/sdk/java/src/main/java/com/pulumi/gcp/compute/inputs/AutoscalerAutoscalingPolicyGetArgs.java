// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.compute.inputs.AutoscalerAutoscalingPolicyCpuUtilizationGetArgs;
import com.pulumi.gcp.compute.inputs.AutoscalerAutoscalingPolicyLoadBalancingUtilizationGetArgs;
import com.pulumi.gcp.compute.inputs.AutoscalerAutoscalingPolicyMetricGetArgs;
import com.pulumi.gcp.compute.inputs.AutoscalerAutoscalingPolicyScaleDownControlGetArgs;
import com.pulumi.gcp.compute.inputs.AutoscalerAutoscalingPolicyScaleInControlGetArgs;
import com.pulumi.gcp.compute.inputs.AutoscalerAutoscalingPolicyScalingScheduleGetArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AutoscalerAutoscalingPolicyGetArgs extends com.pulumi.resources.ResourceArgs {

    public static final AutoscalerAutoscalingPolicyGetArgs Empty = new AutoscalerAutoscalingPolicyGetArgs();

    /**
     * The number of seconds that the autoscaler should wait before it
     * starts collecting information from a new instance. This prevents
     * the autoscaler from collecting information when the instance is
     * initializing, during which the collected usage would not be
     * reliable. The default time autoscaler waits is 60 seconds.
     * Virtual machine initialization times might vary because of
     * numerous factors. We recommend that you test how long an
     * instance may take to initialize. To do this, create an instance
     * and time the startup process.
     * 
     */
    @Import(name="cooldownPeriod")
    private @Nullable Output<Integer> cooldownPeriod;

    public Optional<Output<Integer>> cooldownPeriod() {
        return Optional.ofNullable(this.cooldownPeriod);
    }

    /**
     * Defines the CPU utilization policy that allows the autoscaler to
     * scale based on the average CPU utilization of a managed instance
     * group.
     * Structure is documented below.
     * 
     */
    @Import(name="cpuUtilization")
    private @Nullable Output<AutoscalerAutoscalingPolicyCpuUtilizationGetArgs> cpuUtilization;

    public Optional<Output<AutoscalerAutoscalingPolicyCpuUtilizationGetArgs>> cpuUtilization() {
        return Optional.ofNullable(this.cpuUtilization);
    }

    /**
     * Configuration parameters of autoscaling based on a load balancer.
     * Structure is documented below.
     * 
     */
    @Import(name="loadBalancingUtilization")
    private @Nullable Output<AutoscalerAutoscalingPolicyLoadBalancingUtilizationGetArgs> loadBalancingUtilization;

    public Optional<Output<AutoscalerAutoscalingPolicyLoadBalancingUtilizationGetArgs>> loadBalancingUtilization() {
        return Optional.ofNullable(this.loadBalancingUtilization);
    }

    /**
     * The maximum number of instances that the autoscaler can scale up
     * to. This is required when creating or updating an autoscaler. The
     * maximum number of replicas should not be lower than minimal number
     * of replicas.
     * 
     */
    @Import(name="maxReplicas", required=true)
    private Output<Integer> maxReplicas;

    public Output<Integer> maxReplicas() {
        return this.maxReplicas;
    }

    /**
     * Configuration parameters of autoscaling based on a custom metric.
     * Structure is documented below.
     * 
     */
    @Import(name="metrics")
    private @Nullable Output<List<AutoscalerAutoscalingPolicyMetricGetArgs>> metrics;

    public Optional<Output<List<AutoscalerAutoscalingPolicyMetricGetArgs>>> metrics() {
        return Optional.ofNullable(this.metrics);
    }

    /**
     * The minimum number of replicas that the autoscaler can scale down
     * to. This cannot be less than 0. If not provided, autoscaler will
     * choose a default value depending on maximum number of instances
     * allowed.
     * 
     */
    @Import(name="minReplicas", required=true)
    private Output<Integer> minReplicas;

    public Output<Integer> minReplicas() {
        return this.minReplicas;
    }

    /**
     * Defines operating mode for this policy.
     * Default value is `ON`.
     * Possible values are `OFF`, `ONLY_UP`, and `ON`.
     * 
     */
    @Import(name="mode")
    private @Nullable Output<String> mode;

    public Optional<Output<String>> mode() {
        return Optional.ofNullable(this.mode);
    }

    /**
     * Defines scale down controls to reduce the risk of response latency
     * and outages due to abrupt scale-in events
     * Structure is documented below.
     * 
     */
    @Import(name="scaleDownControl")
    private @Nullable Output<AutoscalerAutoscalingPolicyScaleDownControlGetArgs> scaleDownControl;

    public Optional<Output<AutoscalerAutoscalingPolicyScaleDownControlGetArgs>> scaleDownControl() {
        return Optional.ofNullable(this.scaleDownControl);
    }

    /**
     * Defines scale in controls to reduce the risk of response latency
     * and outages due to abrupt scale-in events
     * Structure is documented below.
     * 
     */
    @Import(name="scaleInControl")
    private @Nullable Output<AutoscalerAutoscalingPolicyScaleInControlGetArgs> scaleInControl;

    public Optional<Output<AutoscalerAutoscalingPolicyScaleInControlGetArgs>> scaleInControl() {
        return Optional.ofNullable(this.scaleInControl);
    }

    /**
     * Scaling schedules defined for an autoscaler. Multiple schedules can be set on an autoscaler and they can overlap.
     * Structure is documented below.
     * 
     */
    @Import(name="scalingSchedules")
    private @Nullable Output<List<AutoscalerAutoscalingPolicyScalingScheduleGetArgs>> scalingSchedules;

    public Optional<Output<List<AutoscalerAutoscalingPolicyScalingScheduleGetArgs>>> scalingSchedules() {
        return Optional.ofNullable(this.scalingSchedules);
    }

    private AutoscalerAutoscalingPolicyGetArgs() {}

    private AutoscalerAutoscalingPolicyGetArgs(AutoscalerAutoscalingPolicyGetArgs $) {
        this.cooldownPeriod = $.cooldownPeriod;
        this.cpuUtilization = $.cpuUtilization;
        this.loadBalancingUtilization = $.loadBalancingUtilization;
        this.maxReplicas = $.maxReplicas;
        this.metrics = $.metrics;
        this.minReplicas = $.minReplicas;
        this.mode = $.mode;
        this.scaleDownControl = $.scaleDownControl;
        this.scaleInControl = $.scaleInControl;
        this.scalingSchedules = $.scalingSchedules;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AutoscalerAutoscalingPolicyGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AutoscalerAutoscalingPolicyGetArgs $;

        public Builder() {
            $ = new AutoscalerAutoscalingPolicyGetArgs();
        }

        public Builder(AutoscalerAutoscalingPolicyGetArgs defaults) {
            $ = new AutoscalerAutoscalingPolicyGetArgs(Objects.requireNonNull(defaults));
        }

        public Builder cooldownPeriod(@Nullable Output<Integer> cooldownPeriod) {
            $.cooldownPeriod = cooldownPeriod;
            return this;
        }

        public Builder cooldownPeriod(Integer cooldownPeriod) {
            return cooldownPeriod(Output.of(cooldownPeriod));
        }

        public Builder cpuUtilization(@Nullable Output<AutoscalerAutoscalingPolicyCpuUtilizationGetArgs> cpuUtilization) {
            $.cpuUtilization = cpuUtilization;
            return this;
        }

        public Builder cpuUtilization(AutoscalerAutoscalingPolicyCpuUtilizationGetArgs cpuUtilization) {
            return cpuUtilization(Output.of(cpuUtilization));
        }

        public Builder loadBalancingUtilization(@Nullable Output<AutoscalerAutoscalingPolicyLoadBalancingUtilizationGetArgs> loadBalancingUtilization) {
            $.loadBalancingUtilization = loadBalancingUtilization;
            return this;
        }

        public Builder loadBalancingUtilization(AutoscalerAutoscalingPolicyLoadBalancingUtilizationGetArgs loadBalancingUtilization) {
            return loadBalancingUtilization(Output.of(loadBalancingUtilization));
        }

        public Builder maxReplicas(Output<Integer> maxReplicas) {
            $.maxReplicas = maxReplicas;
            return this;
        }

        public Builder maxReplicas(Integer maxReplicas) {
            return maxReplicas(Output.of(maxReplicas));
        }

        public Builder metrics(@Nullable Output<List<AutoscalerAutoscalingPolicyMetricGetArgs>> metrics) {
            $.metrics = metrics;
            return this;
        }

        public Builder metrics(List<AutoscalerAutoscalingPolicyMetricGetArgs> metrics) {
            return metrics(Output.of(metrics));
        }

        public Builder metrics(AutoscalerAutoscalingPolicyMetricGetArgs... metrics) {
            return metrics(List.of(metrics));
        }

        public Builder minReplicas(Output<Integer> minReplicas) {
            $.minReplicas = minReplicas;
            return this;
        }

        public Builder minReplicas(Integer minReplicas) {
            return minReplicas(Output.of(minReplicas));
        }

        public Builder mode(@Nullable Output<String> mode) {
            $.mode = mode;
            return this;
        }

        public Builder mode(String mode) {
            return mode(Output.of(mode));
        }

        public Builder scaleDownControl(@Nullable Output<AutoscalerAutoscalingPolicyScaleDownControlGetArgs> scaleDownControl) {
            $.scaleDownControl = scaleDownControl;
            return this;
        }

        public Builder scaleDownControl(AutoscalerAutoscalingPolicyScaleDownControlGetArgs scaleDownControl) {
            return scaleDownControl(Output.of(scaleDownControl));
        }

        public Builder scaleInControl(@Nullable Output<AutoscalerAutoscalingPolicyScaleInControlGetArgs> scaleInControl) {
            $.scaleInControl = scaleInControl;
            return this;
        }

        public Builder scaleInControl(AutoscalerAutoscalingPolicyScaleInControlGetArgs scaleInControl) {
            return scaleInControl(Output.of(scaleInControl));
        }

        public Builder scalingSchedules(@Nullable Output<List<AutoscalerAutoscalingPolicyScalingScheduleGetArgs>> scalingSchedules) {
            $.scalingSchedules = scalingSchedules;
            return this;
        }

        public Builder scalingSchedules(List<AutoscalerAutoscalingPolicyScalingScheduleGetArgs> scalingSchedules) {
            return scalingSchedules(Output.of(scalingSchedules));
        }

        public Builder scalingSchedules(AutoscalerAutoscalingPolicyScalingScheduleGetArgs... scalingSchedules) {
            return scalingSchedules(List.of(scalingSchedules));
        }

        public AutoscalerAutoscalingPolicyGetArgs build() {
            $.maxReplicas = Objects.requireNonNull($.maxReplicas, "expected parameter 'maxReplicas' to be non-null");
            $.minReplicas = Objects.requireNonNull($.minReplicas, "expected parameter 'minReplicas' to be non-null");
            return $;
        }
    }

}
