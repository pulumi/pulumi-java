// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.compute.inputs.GetBackendServiceConsistentHashHttpCooky;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class GetBackendServiceConsistentHash extends com.pulumi.resources.InvokeArgs {

    public static final GetBackendServiceConsistentHash Empty = new GetBackendServiceConsistentHash();

    @Import(name="httpCookies", required=true)
    private List<GetBackendServiceConsistentHashHttpCooky> httpCookies;

    public List<GetBackendServiceConsistentHashHttpCooky> httpCookies() {
        return this.httpCookies;
    }

    @Import(name="httpHeaderName", required=true)
    private String httpHeaderName;

    public String httpHeaderName() {
        return this.httpHeaderName;
    }

    @Import(name="minimumRingSize", required=true)
    private Integer minimumRingSize;

    public Integer minimumRingSize() {
        return this.minimumRingSize;
    }

    private GetBackendServiceConsistentHash() {}

    private GetBackendServiceConsistentHash(GetBackendServiceConsistentHash $) {
        this.httpCookies = $.httpCookies;
        this.httpHeaderName = $.httpHeaderName;
        this.minimumRingSize = $.minimumRingSize;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetBackendServiceConsistentHash defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetBackendServiceConsistentHash $;

        public Builder() {
            $ = new GetBackendServiceConsistentHash();
        }

        public Builder(GetBackendServiceConsistentHash defaults) {
            $ = new GetBackendServiceConsistentHash(Objects.requireNonNull(defaults));
        }

        public Builder httpCookies(List<GetBackendServiceConsistentHashHttpCooky> httpCookies) {
            $.httpCookies = httpCookies;
            return this;
        }

        public Builder httpCookies(GetBackendServiceConsistentHashHttpCooky... httpCookies) {
            return httpCookies(List.of(httpCookies));
        }

        public Builder httpHeaderName(String httpHeaderName) {
            $.httpHeaderName = httpHeaderName;
            return this;
        }

        public Builder minimumRingSize(Integer minimumRingSize) {
            $.minimumRingSize = minimumRingSize;
            return this;
        }

        public GetBackendServiceConsistentHash build() {
            $.httpCookies = Objects.requireNonNull($.httpCookies, "expected parameter 'httpCookies' to be non-null");
            $.httpHeaderName = Objects.requireNonNull($.httpHeaderName, "expected parameter 'httpHeaderName' to be non-null");
            $.minimumRingSize = Objects.requireNonNull($.minimumRingSize, "expected parameter 'minimumRingSize' to be non-null");
            return $;
        }
    }

}
