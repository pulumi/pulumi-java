// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.serviceAccount.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class GetAccountKeyArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetAccountKeyArgs Empty = new GetAccountKeyArgs();

    /**
     * The name of the service account key. This must have format
     * `projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}/keys/{KEYID}`, where `{ACCOUNT}`
     * is the email address or unique id of the service account.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return The name of the service account key. This must have format
     * `projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}/keys/{KEYID}`, where `{ACCOUNT}`
     * is the email address or unique id of the service account.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     * The ID of the project that the service account will be created in.
     * Defaults to the provider project configuration.
     * 
     */
    @Import(name="project")
    private Output</* @Nullable */ String> project;

    /**
     * @return The ID of the project that the service account will be created in.
     * Defaults to the provider project configuration.
     * 
     */
    public Output</* @Nullable */ String> project() {
        return this.project;
    }

    /**
     * The output format of the public key requested. TYPE_X509_PEM_FILE is the default output format.
     * 
     */
    @Import(name="publicKeyType")
    private Output</* @Nullable */ String> publicKeyType;

    /**
     * @return The output format of the public key requested. TYPE_X509_PEM_FILE is the default output format.
     * 
     */
    public Output</* @Nullable */ String> publicKeyType() {
        return this.publicKeyType;
    }

    private GetAccountKeyArgs() {}

    private GetAccountKeyArgs(GetAccountKeyArgs $) {
        this.name = $.name;
        this.project = $.project;
        this.publicKeyType = $.publicKeyType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetAccountKeyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetAccountKeyArgs $;

        public Builder() {
            $ = new GetAccountKeyArgs();
        }

        public Builder(GetAccountKeyArgs defaults) {
            $ = new GetAccountKeyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param name The name of the service account key. This must have format
         * `projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}/keys/{KEYID}`, where `{ACCOUNT}`
         * is the email address or unique id of the service account.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the service account key. This must have format
         * `projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}/keys/{KEYID}`, where `{ACCOUNT}`
         * is the email address or unique id of the service account.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param project The ID of the project that the service account will be created in.
         * Defaults to the provider project configuration.
         * 
         * @return builder
         * 
         */
        public Builder project(Output</* @Nullable */ String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The ID of the project that the service account will be created in.
         * Defaults to the provider project configuration.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable String project) {
            return project(Output.of(project));
        }

        /**
         * @param publicKeyType The output format of the public key requested. TYPE_X509_PEM_FILE is the default output format.
         * 
         * @return builder
         * 
         */
        public Builder publicKeyType(Output</* @Nullable */ String> publicKeyType) {
            $.publicKeyType = publicKeyType;
            return this;
        }

        /**
         * @param publicKeyType The output format of the public key requested. TYPE_X509_PEM_FILE is the default output format.
         * 
         * @return builder
         * 
         */
        public Builder publicKeyType(@Nullable String publicKeyType) {
            return publicKeyType(Output.of(publicKeyType));
        }

        public GetAccountKeyArgs build() {
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            return $;
        }
    }

}
