// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.dataproc.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.dataproc.inputs.WorkflowTemplatePlacementClusterSelectorGetArgs;
import com.pulumi.gcp.dataproc.inputs.WorkflowTemplatePlacementManagedClusterGetArgs;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class WorkflowTemplatePlacementGetArgs extends com.pulumi.resources.ResourceArgs {

    public static final WorkflowTemplatePlacementGetArgs Empty = new WorkflowTemplatePlacementGetArgs();

    /**
     * Optional. A selector that chooses target cluster for jobs based on metadata. The selector is evaluated at the time each job is submitted.
     * 
     */
    @Import(name="clusterSelector")
    private @Nullable Output<WorkflowTemplatePlacementClusterSelectorGetArgs> clusterSelector;

    public Optional<Output<WorkflowTemplatePlacementClusterSelectorGetArgs>> clusterSelector() {
        return Optional.ofNullable(this.clusterSelector);
    }

    /**
     * A cluster that is managed by the workflow.
     * 
     */
    @Import(name="managedCluster")
    private @Nullable Output<WorkflowTemplatePlacementManagedClusterGetArgs> managedCluster;

    public Optional<Output<WorkflowTemplatePlacementManagedClusterGetArgs>> managedCluster() {
        return Optional.ofNullable(this.managedCluster);
    }

    private WorkflowTemplatePlacementGetArgs() {}

    private WorkflowTemplatePlacementGetArgs(WorkflowTemplatePlacementGetArgs $) {
        this.clusterSelector = $.clusterSelector;
        this.managedCluster = $.managedCluster;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WorkflowTemplatePlacementGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WorkflowTemplatePlacementGetArgs $;

        public Builder() {
            $ = new WorkflowTemplatePlacementGetArgs();
        }

        public Builder(WorkflowTemplatePlacementGetArgs defaults) {
            $ = new WorkflowTemplatePlacementGetArgs(Objects.requireNonNull(defaults));
        }

        public Builder clusterSelector(@Nullable Output<WorkflowTemplatePlacementClusterSelectorGetArgs> clusterSelector) {
            $.clusterSelector = clusterSelector;
            return this;
        }

        public Builder clusterSelector(WorkflowTemplatePlacementClusterSelectorGetArgs clusterSelector) {
            return clusterSelector(Output.of(clusterSelector));
        }

        public Builder managedCluster(@Nullable Output<WorkflowTemplatePlacementManagedClusterGetArgs> managedCluster) {
            $.managedCluster = managedCluster;
            return this;
        }

        public Builder managedCluster(WorkflowTemplatePlacementManagedClusterGetArgs managedCluster) {
            return managedCluster(Output.of(managedCluster));
        }

        public WorkflowTemplatePlacementGetArgs build() {
            return $;
        }
    }

}
