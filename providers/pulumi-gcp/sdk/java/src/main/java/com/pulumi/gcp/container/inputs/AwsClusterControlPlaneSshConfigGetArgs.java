// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.container.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class AwsClusterControlPlaneSshConfigGetArgs extends com.pulumi.resources.ResourceArgs {

    public static final AwsClusterControlPlaneSshConfigGetArgs Empty = new AwsClusterControlPlaneSshConfigGetArgs();

    /**
     * Required. The name of the EC2 key pair used to login into cluster machines.
     * 
     */
    @Import(name="ec2KeyPair", required=true)
    private Output<String> ec2KeyPair;

    public Output<String> ec2KeyPair() {
        return this.ec2KeyPair;
    }

    private AwsClusterControlPlaneSshConfigGetArgs() {}

    private AwsClusterControlPlaneSshConfigGetArgs(AwsClusterControlPlaneSshConfigGetArgs $) {
        this.ec2KeyPair = $.ec2KeyPair;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AwsClusterControlPlaneSshConfigGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AwsClusterControlPlaneSshConfigGetArgs $;

        public Builder() {
            $ = new AwsClusterControlPlaneSshConfigGetArgs();
        }

        public Builder(AwsClusterControlPlaneSshConfigGetArgs defaults) {
            $ = new AwsClusterControlPlaneSshConfigGetArgs(Objects.requireNonNull(defaults));
        }

        public Builder ec2KeyPair(Output<String> ec2KeyPair) {
            $.ec2KeyPair = ec2KeyPair;
            return this;
        }

        public Builder ec2KeyPair(String ec2KeyPair) {
            return ec2KeyPair(Output.of(ec2KeyPair));
        }

        public AwsClusterControlPlaneSshConfigGetArgs build() {
            $.ec2KeyPair = Objects.requireNonNull($.ec2KeyPair, "expected parameter 'ec2KeyPair' to be non-null");
            return $;
        }
    }

}
