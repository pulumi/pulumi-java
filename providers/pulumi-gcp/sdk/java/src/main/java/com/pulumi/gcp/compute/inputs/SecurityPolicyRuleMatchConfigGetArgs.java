// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class SecurityPolicyRuleMatchConfigGetArgs extends com.pulumi.resources.ResourceArgs {

    public static final SecurityPolicyRuleMatchConfigGetArgs Empty = new SecurityPolicyRuleMatchConfigGetArgs();

    /**
     * Set of IP addresses or ranges (IPV4 or IPV6) in CIDR notation
     * to match against inbound traffic. There is a limit of 10 IP ranges per rule. A value of &#39;\*&#39; matches all IPs
     * (can be used to override the default behavior).
     * 
     */
    @Import(name="srcIpRanges", required=true)
    private Output<List<String>> srcIpRanges;

    public Output<List<String>> srcIpRanges() {
        return this.srcIpRanges;
    }

    private SecurityPolicyRuleMatchConfigGetArgs() {}

    private SecurityPolicyRuleMatchConfigGetArgs(SecurityPolicyRuleMatchConfigGetArgs $) {
        this.srcIpRanges = $.srcIpRanges;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SecurityPolicyRuleMatchConfigGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SecurityPolicyRuleMatchConfigGetArgs $;

        public Builder() {
            $ = new SecurityPolicyRuleMatchConfigGetArgs();
        }

        public Builder(SecurityPolicyRuleMatchConfigGetArgs defaults) {
            $ = new SecurityPolicyRuleMatchConfigGetArgs(Objects.requireNonNull(defaults));
        }

        public Builder srcIpRanges(Output<List<String>> srcIpRanges) {
            $.srcIpRanges = srcIpRanges;
            return this;
        }

        public Builder srcIpRanges(List<String> srcIpRanges) {
            return srcIpRanges(Output.of(srcIpRanges));
        }

        public Builder srcIpRanges(String... srcIpRanges) {
            return srcIpRanges(List.of(srcIpRanges));
        }

        public SecurityPolicyRuleMatchConfigGetArgs build() {
            $.srcIpRanges = Objects.requireNonNull($.srcIpRanges, "expected parameter 'srcIpRanges' to be non-null");
            return $;
        }
    }

}
