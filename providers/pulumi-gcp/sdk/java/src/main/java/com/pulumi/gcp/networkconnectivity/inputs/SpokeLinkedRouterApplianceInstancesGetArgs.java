// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.networkconnectivity.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.networkconnectivity.inputs.SpokeLinkedRouterApplianceInstancesInstanceGetArgs;
import java.lang.Boolean;
import java.util.List;
import java.util.Objects;


public final class SpokeLinkedRouterApplianceInstancesGetArgs extends com.pulumi.resources.ResourceArgs {

    public static final SpokeLinkedRouterApplianceInstancesGetArgs Empty = new SpokeLinkedRouterApplianceInstancesGetArgs();

    /**
     * The list of router appliance instances
     * 
     */
    @Import(name="instances", required=true)
    private Output<List<SpokeLinkedRouterApplianceInstancesInstanceGetArgs>> instances;

    public Output<List<SpokeLinkedRouterApplianceInstancesInstanceGetArgs>> instances() {
        return this.instances;
    }

    /**
     * A value that controls whether site-to-site data transfer is enabled for these resources. Note that data transfer is available only in supported locations.
     * 
     */
    @Import(name="siteToSiteDataTransfer", required=true)
    private Output<Boolean> siteToSiteDataTransfer;

    public Output<Boolean> siteToSiteDataTransfer() {
        return this.siteToSiteDataTransfer;
    }

    private SpokeLinkedRouterApplianceInstancesGetArgs() {}

    private SpokeLinkedRouterApplianceInstancesGetArgs(SpokeLinkedRouterApplianceInstancesGetArgs $) {
        this.instances = $.instances;
        this.siteToSiteDataTransfer = $.siteToSiteDataTransfer;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SpokeLinkedRouterApplianceInstancesGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SpokeLinkedRouterApplianceInstancesGetArgs $;

        public Builder() {
            $ = new SpokeLinkedRouterApplianceInstancesGetArgs();
        }

        public Builder(SpokeLinkedRouterApplianceInstancesGetArgs defaults) {
            $ = new SpokeLinkedRouterApplianceInstancesGetArgs(Objects.requireNonNull(defaults));
        }

        public Builder instances(Output<List<SpokeLinkedRouterApplianceInstancesInstanceGetArgs>> instances) {
            $.instances = instances;
            return this;
        }

        public Builder instances(List<SpokeLinkedRouterApplianceInstancesInstanceGetArgs> instances) {
            return instances(Output.of(instances));
        }

        public Builder instances(SpokeLinkedRouterApplianceInstancesInstanceGetArgs... instances) {
            return instances(List.of(instances));
        }

        public Builder siteToSiteDataTransfer(Output<Boolean> siteToSiteDataTransfer) {
            $.siteToSiteDataTransfer = siteToSiteDataTransfer;
            return this;
        }

        public Builder siteToSiteDataTransfer(Boolean siteToSiteDataTransfer) {
            return siteToSiteDataTransfer(Output.of(siteToSiteDataTransfer));
        }

        public SpokeLinkedRouterApplianceInstancesGetArgs build() {
            $.instances = Objects.requireNonNull($.instances, "expected parameter 'instances' to be non-null");
            $.siteToSiteDataTransfer = Objects.requireNonNull($.siteToSiteDataTransfer, "expected parameter 'siteToSiteDataTransfer' to be non-null");
            return $;
        }
    }

}
