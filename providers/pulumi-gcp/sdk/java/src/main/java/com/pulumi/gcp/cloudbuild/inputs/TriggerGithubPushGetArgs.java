// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.cloudbuild.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class TriggerGithubPushGetArgs extends com.pulumi.resources.ResourceArgs {

    public static final TriggerGithubPushGetArgs Empty = new TriggerGithubPushGetArgs();

    /**
     * Regex of branches to match.  Specify only one of branch or tag.
     * 
     */
    @Import(name="branch")
      private final @Nullable Output<String> branch;

    public Output<String> branch() {
        return this.branch == null ? Codegen.empty() : this.branch;
    }

    /**
     * Only trigger a build if the revision regex does NOT match the revision regex.
     * 
     */
    @Import(name="invertRegex")
      private final @Nullable Output<Boolean> invertRegex;

    public Output<Boolean> invertRegex() {
        return this.invertRegex == null ? Codegen.empty() : this.invertRegex;
    }

    /**
     * Regex of tags to match.  Specify only one of branch or tag.
     * 
     */
    @Import(name="tag")
      private final @Nullable Output<String> tag;

    public Output<String> tag() {
        return this.tag == null ? Codegen.empty() : this.tag;
    }

    public TriggerGithubPushGetArgs(
        @Nullable Output<String> branch,
        @Nullable Output<Boolean> invertRegex,
        @Nullable Output<String> tag) {
        this.branch = branch;
        this.invertRegex = invertRegex;
        this.tag = tag;
    }

    private TriggerGithubPushGetArgs() {
        this.branch = Codegen.empty();
        this.invertRegex = Codegen.empty();
        this.tag = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TriggerGithubPushGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> branch;
        private @Nullable Output<Boolean> invertRegex;
        private @Nullable Output<String> tag;

        public Builder() {
    	      // Empty
        }

        public Builder(TriggerGithubPushGetArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.branch = defaults.branch;
    	      this.invertRegex = defaults.invertRegex;
    	      this.tag = defaults.tag;
        }

        public Builder branch(@Nullable Output<String> branch) {
            this.branch = branch;
            return this;
        }
        public Builder branch(@Nullable String branch) {
            this.branch = Codegen.ofNullable(branch);
            return this;
        }
        public Builder invertRegex(@Nullable Output<Boolean> invertRegex) {
            this.invertRegex = invertRegex;
            return this;
        }
        public Builder invertRegex(@Nullable Boolean invertRegex) {
            this.invertRegex = Codegen.ofNullable(invertRegex);
            return this;
        }
        public Builder tag(@Nullable Output<String> tag) {
            this.tag = tag;
            return this;
        }
        public Builder tag(@Nullable String tag) {
            this.tag = Codegen.ofNullable(tag);
            return this;
        }        public TriggerGithubPushGetArgs build() {
            return new TriggerGithubPushGetArgs(branch, invertRegex, tag);
        }
    }
}
