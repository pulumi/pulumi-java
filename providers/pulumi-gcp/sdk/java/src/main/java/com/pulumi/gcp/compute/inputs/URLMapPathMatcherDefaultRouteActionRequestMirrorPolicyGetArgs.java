// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class URLMapPathMatcherDefaultRouteActionRequestMirrorPolicyGetArgs extends com.pulumi.resources.ResourceArgs {

    public static final URLMapPathMatcherDefaultRouteActionRequestMirrorPolicyGetArgs Empty = new URLMapPathMatcherDefaultRouteActionRequestMirrorPolicyGetArgs();

    /**
     * The full or partial URL to the BackendService resource being mirrored to.
     * 
     */
    @Import(name="backendService", required=true)
    private Output<String> backendService;

    public Output<String> backendService() {
        return this.backendService;
    }

    private URLMapPathMatcherDefaultRouteActionRequestMirrorPolicyGetArgs() {}

    private URLMapPathMatcherDefaultRouteActionRequestMirrorPolicyGetArgs(URLMapPathMatcherDefaultRouteActionRequestMirrorPolicyGetArgs $) {
        this.backendService = $.backendService;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(URLMapPathMatcherDefaultRouteActionRequestMirrorPolicyGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private URLMapPathMatcherDefaultRouteActionRequestMirrorPolicyGetArgs $;

        public Builder() {
            $ = new URLMapPathMatcherDefaultRouteActionRequestMirrorPolicyGetArgs();
        }

        public Builder(URLMapPathMatcherDefaultRouteActionRequestMirrorPolicyGetArgs defaults) {
            $ = new URLMapPathMatcherDefaultRouteActionRequestMirrorPolicyGetArgs(Objects.requireNonNull(defaults));
        }

        public Builder backendService(Output<String> backendService) {
            $.backendService = backendService;
            return this;
        }

        public Builder backendService(String backendService) {
            return backendService(Output.of(backendService));
        }

        public URLMapPathMatcherDefaultRouteActionRequestMirrorPolicyGetArgs build() {
            $.backendService = Objects.requireNonNull($.backendService, "expected parameter 'backendService' to be non-null");
            return $;
        }
    }

}
