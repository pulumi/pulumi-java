// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.cloudidentity.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.cloudidentity.inputs.GetGroupMembershipsMembershipMemberKey;
import com.pulumi.gcp.cloudidentity.inputs.GetGroupMembershipsMembershipPreferredMemberKey;
import com.pulumi.gcp.cloudidentity.inputs.GetGroupMembershipsMembershipRole;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class GetGroupMembershipsMembership extends com.pulumi.resources.InvokeArgs {

    public static final GetGroupMembershipsMembership Empty = new GetGroupMembershipsMembership();

    @Import(name="createTime", required=true)
    private String createTime;

    public String createTime() {
        return this.createTime;
    }

    /**
     * The parent Group resource under which to lookup the Membership names. Must be of the form groups/{group_id}.
     * 
     */
    @Import(name="group", required=true)
    private String group;

    /**
     * @return The parent Group resource under which to lookup the Membership names. Must be of the form groups/{group_id}.
     * 
     */
    public String group() {
        return this.group;
    }

    @Import(name="memberKeys", required=true)
    private List<GetGroupMembershipsMembershipMemberKey> memberKeys;

    public List<GetGroupMembershipsMembershipMemberKey> memberKeys() {
        return this.memberKeys;
    }

    /**
     * The name of the MembershipRole. One of OWNER, MANAGER, MEMBER.
     * 
     */
    @Import(name="name", required=true)
    private String name;

    /**
     * @return The name of the MembershipRole. One of OWNER, MANAGER, MEMBER.
     * 
     */
    public String name() {
        return this.name;
    }

    @Import(name="preferredMemberKeys", required=true)
    private List<GetGroupMembershipsMembershipPreferredMemberKey> preferredMemberKeys;

    public List<GetGroupMembershipsMembershipPreferredMemberKey> preferredMemberKeys() {
        return this.preferredMemberKeys;
    }

    /**
     * The MembershipRoles that apply to the Membership. Structure is documented below.
     * 
     */
    @Import(name="roles", required=true)
    private List<GetGroupMembershipsMembershipRole> roles;

    /**
     * @return The MembershipRoles that apply to the Membership. Structure is documented below.
     * 
     */
    public List<GetGroupMembershipsMembershipRole> roles() {
        return this.roles;
    }

    @Import(name="type", required=true)
    private String type;

    public String type() {
        return this.type;
    }

    @Import(name="updateTime", required=true)
    private String updateTime;

    public String updateTime() {
        return this.updateTime;
    }

    private GetGroupMembershipsMembership() {}

    private GetGroupMembershipsMembership(GetGroupMembershipsMembership $) {
        this.createTime = $.createTime;
        this.group = $.group;
        this.memberKeys = $.memberKeys;
        this.name = $.name;
        this.preferredMemberKeys = $.preferredMemberKeys;
        this.roles = $.roles;
        this.type = $.type;
        this.updateTime = $.updateTime;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetGroupMembershipsMembership defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetGroupMembershipsMembership $;

        public Builder() {
            $ = new GetGroupMembershipsMembership();
        }

        public Builder(GetGroupMembershipsMembership defaults) {
            $ = new GetGroupMembershipsMembership(Objects.requireNonNull(defaults));
        }

        public Builder createTime(String createTime) {
            $.createTime = createTime;
            return this;
        }

        /**
         * @param group The parent Group resource under which to lookup the Membership names. Must be of the form groups/{group_id}.
         * 
         * @return builder
         * 
         */
        public Builder group(String group) {
            $.group = group;
            return this;
        }

        public Builder memberKeys(List<GetGroupMembershipsMembershipMemberKey> memberKeys) {
            $.memberKeys = memberKeys;
            return this;
        }

        public Builder memberKeys(GetGroupMembershipsMembershipMemberKey... memberKeys) {
            return memberKeys(List.of(memberKeys));
        }

        /**
         * @param name The name of the MembershipRole. One of OWNER, MANAGER, MEMBER.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            $.name = name;
            return this;
        }

        public Builder preferredMemberKeys(List<GetGroupMembershipsMembershipPreferredMemberKey> preferredMemberKeys) {
            $.preferredMemberKeys = preferredMemberKeys;
            return this;
        }

        public Builder preferredMemberKeys(GetGroupMembershipsMembershipPreferredMemberKey... preferredMemberKeys) {
            return preferredMemberKeys(List.of(preferredMemberKeys));
        }

        /**
         * @param roles The MembershipRoles that apply to the Membership. Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder roles(List<GetGroupMembershipsMembershipRole> roles) {
            $.roles = roles;
            return this;
        }

        /**
         * @param roles The MembershipRoles that apply to the Membership. Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder roles(GetGroupMembershipsMembershipRole... roles) {
            return roles(List.of(roles));
        }

        public Builder type(String type) {
            $.type = type;
            return this;
        }

        public Builder updateTime(String updateTime) {
            $.updateTime = updateTime;
            return this;
        }

        public GetGroupMembershipsMembership build() {
            $.createTime = Objects.requireNonNull($.createTime, "expected parameter 'createTime' to be non-null");
            $.group = Objects.requireNonNull($.group, "expected parameter 'group' to be non-null");
            $.memberKeys = Objects.requireNonNull($.memberKeys, "expected parameter 'memberKeys' to be non-null");
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            $.preferredMemberKeys = Objects.requireNonNull($.preferredMemberKeys, "expected parameter 'preferredMemberKeys' to be non-null");
            $.roles = Objects.requireNonNull($.roles, "expected parameter 'roles' to be non-null");
            $.type = Objects.requireNonNull($.type, "expected parameter 'type' to be non-null");
            $.updateTime = Objects.requireNonNull($.updateTime, "expected parameter 'updateTime' to be non-null");
            return $;
        }
    }

}
