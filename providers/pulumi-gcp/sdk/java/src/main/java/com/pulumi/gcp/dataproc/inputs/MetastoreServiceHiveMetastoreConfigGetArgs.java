// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.dataproc.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.dataproc.inputs.MetastoreServiceHiveMetastoreConfigKerberosConfigGetArgs;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class MetastoreServiceHiveMetastoreConfigGetArgs extends com.pulumi.resources.ResourceArgs {

    public static final MetastoreServiceHiveMetastoreConfigGetArgs Empty = new MetastoreServiceHiveMetastoreConfigGetArgs();

    /**
     * A mapping of Hive metastore configuration key-value pairs to apply to the Hive metastore (configured in hive-site.xml).
     * The mappings override system defaults (some keys cannot be overridden)
     * 
     */
    @Import(name="configOverrides")
    private @Nullable Output<Map<String,String>> configOverrides;

    public Optional<Output<Map<String,String>>> configOverrides() {
        return Optional.ofNullable(this.configOverrides);
    }

    /**
     * Information used to configure the Hive metastore service as a service principal in a Kerberos realm.
     * Structure is documented below.
     * 
     */
    @Import(name="kerberosConfig")
    private @Nullable Output<MetastoreServiceHiveMetastoreConfigKerberosConfigGetArgs> kerberosConfig;

    public Optional<Output<MetastoreServiceHiveMetastoreConfigKerberosConfigGetArgs>> kerberosConfig() {
        return Optional.ofNullable(this.kerberosConfig);
    }

    /**
     * The Hive metastore schema version.
     * 
     */
    @Import(name="version", required=true)
    private Output<String> version;

    public Output<String> version() {
        return this.version;
    }

    private MetastoreServiceHiveMetastoreConfigGetArgs() {}

    private MetastoreServiceHiveMetastoreConfigGetArgs(MetastoreServiceHiveMetastoreConfigGetArgs $) {
        this.configOverrides = $.configOverrides;
        this.kerberosConfig = $.kerberosConfig;
        this.version = $.version;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MetastoreServiceHiveMetastoreConfigGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MetastoreServiceHiveMetastoreConfigGetArgs $;

        public Builder() {
            $ = new MetastoreServiceHiveMetastoreConfigGetArgs();
        }

        public Builder(MetastoreServiceHiveMetastoreConfigGetArgs defaults) {
            $ = new MetastoreServiceHiveMetastoreConfigGetArgs(Objects.requireNonNull(defaults));
        }

        public Builder configOverrides(@Nullable Output<Map<String,String>> configOverrides) {
            $.configOverrides = configOverrides;
            return this;
        }

        public Builder configOverrides(Map<String,String> configOverrides) {
            return configOverrides(Output.of(configOverrides));
        }

        public Builder kerberosConfig(@Nullable Output<MetastoreServiceHiveMetastoreConfigKerberosConfigGetArgs> kerberosConfig) {
            $.kerberosConfig = kerberosConfig;
            return this;
        }

        public Builder kerberosConfig(MetastoreServiceHiveMetastoreConfigKerberosConfigGetArgs kerberosConfig) {
            return kerberosConfig(Output.of(kerberosConfig));
        }

        public Builder version(Output<String> version) {
            $.version = version;
            return this;
        }

        public Builder version(String version) {
            return version(Output.of(version));
        }

        public MetastoreServiceHiveMetastoreConfigGetArgs build() {
            $.version = Objects.requireNonNull($.version, "expected parameter 'version' to be non-null");
            return $;
        }
    }

}
