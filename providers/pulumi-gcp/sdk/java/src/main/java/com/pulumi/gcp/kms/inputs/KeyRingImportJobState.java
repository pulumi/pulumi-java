// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.kms.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.kms.inputs.KeyRingImportJobAttestationGetArgs;
import com.pulumi.gcp.kms.inputs.KeyRingImportJobPublicKeyGetArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class KeyRingImportJobState extends com.pulumi.resources.ResourceArgs {

    public static final KeyRingImportJobState Empty = new KeyRingImportJobState();

    /**
     * Statement that was generated and signed by the key creator (for example, an HSM) at key creation time. Use this
     * statement to verify attributes of the key as stored on the HSM, independently of Google. Only present if the chosen
     * ImportMethod is one with a protection level of HSM.
     * 
     */
    @Import(name="attestations")
    private @Nullable Output<List<KeyRingImportJobAttestationGetArgs>> attestations;

    public Optional<Output<List<KeyRingImportJobAttestationGetArgs>>> attestations() {
        return Optional.ofNullable(this.attestations);
    }

    /**
     * The time at which this resource is scheduled for expiration and can no longer be used. This is in RFC3339 text format.
     * 
     */
    @Import(name="expireTime")
    private @Nullable Output<String> expireTime;

    public Optional<Output<String>> expireTime() {
        return Optional.ofNullable(this.expireTime);
    }

    /**
     * It must be unique within a KeyRing and match the regular expression [a-zA-Z0-9_-]{1,63}
     * 
     */
    @Import(name="importJobId")
    private @Nullable Output<String> importJobId;

    public Optional<Output<String>> importJobId() {
        return Optional.ofNullable(this.importJobId);
    }

    /**
     * The wrapping method to be used for incoming key material.
     * Possible values are `RSA_OAEP_3072_SHA1_AES_256` and `RSA_OAEP_4096_SHA1_AES_256`.
     * 
     */
    @Import(name="importMethod")
    private @Nullable Output<String> importMethod;

    public Optional<Output<String>> importMethod() {
        return Optional.ofNullable(this.importMethod);
    }

    /**
     * The KeyRing that this import job belongs to.
     * Format: `&#39;projects/{{project}}/locations/{{location}}/keyRings/{{keyRing}}&#39;`.
     * 
     */
    @Import(name="keyRing")
    private @Nullable Output<String> keyRing;

    public Optional<Output<String>> keyRing() {
        return Optional.ofNullable(this.keyRing);
    }

    /**
     * The resource name for this ImportJob in the format projects/*{@literal /}locations/*{@literal /}keyRings/*{@literal /}importJobs/*.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The protection level of the ImportJob. This must match the protectionLevel of the
     * versionTemplate on the CryptoKey you attempt to import into.
     * Possible values are `SOFTWARE`, `HSM`, and `EXTERNAL`.
     * 
     */
    @Import(name="protectionLevel")
    private @Nullable Output<String> protectionLevel;

    public Optional<Output<String>> protectionLevel() {
        return Optional.ofNullable(this.protectionLevel);
    }

    /**
     * The public key with which to wrap key material prior to import. Only returned if state is &#39;ACTIVE&#39;.
     * 
     */
    @Import(name="publicKeys")
    private @Nullable Output<List<KeyRingImportJobPublicKeyGetArgs>> publicKeys;

    public Optional<Output<List<KeyRingImportJobPublicKeyGetArgs>>> publicKeys() {
        return Optional.ofNullable(this.publicKeys);
    }

    /**
     * The current state of the ImportJob, indicating if it can be used.
     * 
     */
    @Import(name="state")
    private @Nullable Output<String> state;

    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    private KeyRingImportJobState() {}

    private KeyRingImportJobState(KeyRingImportJobState $) {
        this.attestations = $.attestations;
        this.expireTime = $.expireTime;
        this.importJobId = $.importJobId;
        this.importMethod = $.importMethod;
        this.keyRing = $.keyRing;
        this.name = $.name;
        this.protectionLevel = $.protectionLevel;
        this.publicKeys = $.publicKeys;
        this.state = $.state;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(KeyRingImportJobState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private KeyRingImportJobState $;

        public Builder() {
            $ = new KeyRingImportJobState();
        }

        public Builder(KeyRingImportJobState defaults) {
            $ = new KeyRingImportJobState(Objects.requireNonNull(defaults));
        }

        public Builder attestations(@Nullable Output<List<KeyRingImportJobAttestationGetArgs>> attestations) {
            $.attestations = attestations;
            return this;
        }

        public Builder attestations(List<KeyRingImportJobAttestationGetArgs> attestations) {
            return attestations(Output.of(attestations));
        }

        public Builder attestations(KeyRingImportJobAttestationGetArgs... attestations) {
            return attestations(List.of(attestations));
        }

        public Builder expireTime(@Nullable Output<String> expireTime) {
            $.expireTime = expireTime;
            return this;
        }

        public Builder expireTime(String expireTime) {
            return expireTime(Output.of(expireTime));
        }

        public Builder importJobId(@Nullable Output<String> importJobId) {
            $.importJobId = importJobId;
            return this;
        }

        public Builder importJobId(String importJobId) {
            return importJobId(Output.of(importJobId));
        }

        public Builder importMethod(@Nullable Output<String> importMethod) {
            $.importMethod = importMethod;
            return this;
        }

        public Builder importMethod(String importMethod) {
            return importMethod(Output.of(importMethod));
        }

        public Builder keyRing(@Nullable Output<String> keyRing) {
            $.keyRing = keyRing;
            return this;
        }

        public Builder keyRing(String keyRing) {
            return keyRing(Output.of(keyRing));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder protectionLevel(@Nullable Output<String> protectionLevel) {
            $.protectionLevel = protectionLevel;
            return this;
        }

        public Builder protectionLevel(String protectionLevel) {
            return protectionLevel(Output.of(protectionLevel));
        }

        public Builder publicKeys(@Nullable Output<List<KeyRingImportJobPublicKeyGetArgs>> publicKeys) {
            $.publicKeys = publicKeys;
            return this;
        }

        public Builder publicKeys(List<KeyRingImportJobPublicKeyGetArgs> publicKeys) {
            return publicKeys(Output.of(publicKeys));
        }

        public Builder publicKeys(KeyRingImportJobPublicKeyGetArgs... publicKeys) {
            return publicKeys(List.of(publicKeys));
        }

        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        public Builder state(String state) {
            return state(Output.of(state));
        }

        public KeyRingImportJobState build() {
            return $;
        }
    }

}
