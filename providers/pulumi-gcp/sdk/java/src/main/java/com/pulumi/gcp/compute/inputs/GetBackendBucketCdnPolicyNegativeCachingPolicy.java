// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.util.Objects;


public final class GetBackendBucketCdnPolicyNegativeCachingPolicy extends com.pulumi.resources.InvokeArgs {

    public static final GetBackendBucketCdnPolicyNegativeCachingPolicy Empty = new GetBackendBucketCdnPolicyNegativeCachingPolicy();

    @Import(name="code", required=true)
      private final Integer code;

    public Integer code() {
        return this.code;
    }

    @Import(name="ttl", required=true)
      private final Integer ttl;

    public Integer ttl() {
        return this.ttl;
    }

    public GetBackendBucketCdnPolicyNegativeCachingPolicy(
        Integer code,
        Integer ttl) {
        this.code = Objects.requireNonNull(code, "expected parameter 'code' to be non-null");
        this.ttl = Objects.requireNonNull(ttl, "expected parameter 'ttl' to be non-null");
    }

    private GetBackendBucketCdnPolicyNegativeCachingPolicy() {
        this.code = null;
        this.ttl = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetBackendBucketCdnPolicyNegativeCachingPolicy defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Integer code;
        private Integer ttl;

        public Builder() {
    	      // Empty
        }

        public Builder(GetBackendBucketCdnPolicyNegativeCachingPolicy defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.code = defaults.code;
    	      this.ttl = defaults.ttl;
        }

        public Builder code(Integer code) {
            this.code = Objects.requireNonNull(code);
            return this;
        }
        public Builder ttl(Integer ttl) {
            this.ttl = Objects.requireNonNull(ttl);
            return this;
        }        public GetBackendBucketCdnPolicyNegativeCachingPolicy build() {
            return new GetBackendBucketCdnPolicyNegativeCachingPolicy(code, ttl);
        }
    }
}
