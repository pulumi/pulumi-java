// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RegionNetworkEndpointGroupCloudRunGetArgs extends com.pulumi.resources.ResourceArgs {

    public static final RegionNetworkEndpointGroupCloudRunGetArgs Empty = new RegionNetworkEndpointGroupCloudRunGetArgs();

    /**
     * Optional serving service.
     * The service name must be 1-63 characters long, and comply with RFC1035.
     * Example value: &#34;default&#34;, &#34;my-service&#34;.
     * 
     */
    @Import(name="service")
    private @Nullable Output<String> service;

    /**
     * @return Optional serving service.
     * The service name must be 1-63 characters long, and comply with RFC1035.
     * Example value: &#34;default&#34;, &#34;my-service&#34;.
     * 
     */
    public Optional<Output<String>> service() {
        return Optional.ofNullable(this.service);
    }

    /**
     * Cloud Run tag represents the &#34;named-revision&#34; to provide
     * additional fine-grained traffic routing information.
     * The tag must be 1-63 characters long, and comply with RFC1035.
     * Example value: &#34;revision-0010&#34;.
     * 
     */
    @Import(name="tag")
    private @Nullable Output<String> tag;

    /**
     * @return Cloud Run tag represents the &#34;named-revision&#34; to provide
     * additional fine-grained traffic routing information.
     * The tag must be 1-63 characters long, and comply with RFC1035.
     * Example value: &#34;revision-0010&#34;.
     * 
     */
    public Optional<Output<String>> tag() {
        return Optional.ofNullable(this.tag);
    }

    /**
     * A template to parse function field from a request URL. URL mask allows
     * for routing to multiple Cloud Functions without having to create
     * multiple Network Endpoint Groups and backend services.
     * For example, request URLs &#34;mydomain.com/function1&#34; and &#34;mydomain.com/function2&#34;
     * can be backed by the same Serverless NEG with URL mask &#34;/&#34;. The URL mask
     * will parse them to { function = &#34;function1&#34; } and { function = &#34;function2&#34; } respectively.
     * 
     */
    @Import(name="urlMask")
    private @Nullable Output<String> urlMask;

    /**
     * @return A template to parse function field from a request URL. URL mask allows
     * for routing to multiple Cloud Functions without having to create
     * multiple Network Endpoint Groups and backend services.
     * For example, request URLs &#34;mydomain.com/function1&#34; and &#34;mydomain.com/function2&#34;
     * can be backed by the same Serverless NEG with URL mask &#34;/&#34;. The URL mask
     * will parse them to { function = &#34;function1&#34; } and { function = &#34;function2&#34; } respectively.
     * 
     */
    public Optional<Output<String>> urlMask() {
        return Optional.ofNullable(this.urlMask);
    }

    private RegionNetworkEndpointGroupCloudRunGetArgs() {}

    private RegionNetworkEndpointGroupCloudRunGetArgs(RegionNetworkEndpointGroupCloudRunGetArgs $) {
        this.service = $.service;
        this.tag = $.tag;
        this.urlMask = $.urlMask;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RegionNetworkEndpointGroupCloudRunGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RegionNetworkEndpointGroupCloudRunGetArgs $;

        public Builder() {
            $ = new RegionNetworkEndpointGroupCloudRunGetArgs();
        }

        public Builder(RegionNetworkEndpointGroupCloudRunGetArgs defaults) {
            $ = new RegionNetworkEndpointGroupCloudRunGetArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param service Optional serving service.
         * The service name must be 1-63 characters long, and comply with RFC1035.
         * Example value: &#34;default&#34;, &#34;my-service&#34;.
         * 
         * @return builder
         * 
         */
        public Builder service(@Nullable Output<String> service) {
            $.service = service;
            return this;
        }

        /**
         * @param service Optional serving service.
         * The service name must be 1-63 characters long, and comply with RFC1035.
         * Example value: &#34;default&#34;, &#34;my-service&#34;.
         * 
         * @return builder
         * 
         */
        public Builder service(String service) {
            return service(Output.of(service));
        }

        /**
         * @param tag Cloud Run tag represents the &#34;named-revision&#34; to provide
         * additional fine-grained traffic routing information.
         * The tag must be 1-63 characters long, and comply with RFC1035.
         * Example value: &#34;revision-0010&#34;.
         * 
         * @return builder
         * 
         */
        public Builder tag(@Nullable Output<String> tag) {
            $.tag = tag;
            return this;
        }

        /**
         * @param tag Cloud Run tag represents the &#34;named-revision&#34; to provide
         * additional fine-grained traffic routing information.
         * The tag must be 1-63 characters long, and comply with RFC1035.
         * Example value: &#34;revision-0010&#34;.
         * 
         * @return builder
         * 
         */
        public Builder tag(String tag) {
            return tag(Output.of(tag));
        }

        /**
         * @param urlMask A template to parse function field from a request URL. URL mask allows
         * for routing to multiple Cloud Functions without having to create
         * multiple Network Endpoint Groups and backend services.
         * For example, request URLs &#34;mydomain.com/function1&#34; and &#34;mydomain.com/function2&#34;
         * can be backed by the same Serverless NEG with URL mask &#34;/&#34;. The URL mask
         * will parse them to { function = &#34;function1&#34; } and { function = &#34;function2&#34; } respectively.
         * 
         * @return builder
         * 
         */
        public Builder urlMask(@Nullable Output<String> urlMask) {
            $.urlMask = urlMask;
            return this;
        }

        /**
         * @param urlMask A template to parse function field from a request URL. URL mask allows
         * for routing to multiple Cloud Functions without having to create
         * multiple Network Endpoint Groups and backend services.
         * For example, request URLs &#34;mydomain.com/function1&#34; and &#34;mydomain.com/function2&#34;
         * can be backed by the same Serverless NEG with URL mask &#34;/&#34;. The URL mask
         * will parse them to { function = &#34;function1&#34; } and { function = &#34;function2&#34; } respectively.
         * 
         * @return builder
         * 
         */
        public Builder urlMask(String urlMask) {
            return urlMask(Output.of(urlMask));
        }

        public RegionNetworkEndpointGroupCloudRunGetArgs build() {
            return $;
        }
    }

}
