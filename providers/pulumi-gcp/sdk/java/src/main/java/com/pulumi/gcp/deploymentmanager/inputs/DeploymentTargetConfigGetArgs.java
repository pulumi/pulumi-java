// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.deploymentmanager.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class DeploymentTargetConfigGetArgs extends com.pulumi.resources.ResourceArgs {

    public static final DeploymentTargetConfigGetArgs Empty = new DeploymentTargetConfigGetArgs();

    /**
     * The full contents of the template that you want to import.
     * 
     */
    @Import(name="content", required=true)
    private Output<String> content;

    /**
     * @return The full contents of the template that you want to import.
     * 
     */
    public Output<String> content() {
        return this.content;
    }

    private DeploymentTargetConfigGetArgs() {}

    private DeploymentTargetConfigGetArgs(DeploymentTargetConfigGetArgs $) {
        this.content = $.content;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DeploymentTargetConfigGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DeploymentTargetConfigGetArgs $;

        public Builder() {
            $ = new DeploymentTargetConfigGetArgs();
        }

        public Builder(DeploymentTargetConfigGetArgs defaults) {
            $ = new DeploymentTargetConfigGetArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param content The full contents of the template that you want to import.
         * 
         * @return builder
         * 
         */
        public Builder content(Output<String> content) {
            $.content = content;
            return this;
        }

        /**
         * @param content The full contents of the template that you want to import.
         * 
         * @return builder
         * 
         */
        public Builder content(String content) {
            return content(Output.of(content));
        }

        public DeploymentTargetConfigGetArgs build() {
            $.content = Objects.requireNonNull($.content, "expected parameter 'content' to be non-null");
            return $;
        }
    }

}
