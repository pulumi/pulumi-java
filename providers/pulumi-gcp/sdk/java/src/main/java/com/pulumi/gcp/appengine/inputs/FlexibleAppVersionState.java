// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.appengine.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import com.pulumi.gcp.appengine.inputs.FlexibleAppVersionApiConfigGetArgs;
import com.pulumi.gcp.appengine.inputs.FlexibleAppVersionAutomaticScalingGetArgs;
import com.pulumi.gcp.appengine.inputs.FlexibleAppVersionDeploymentGetArgs;
import com.pulumi.gcp.appengine.inputs.FlexibleAppVersionEndpointsApiServiceGetArgs;
import com.pulumi.gcp.appengine.inputs.FlexibleAppVersionEntrypointGetArgs;
import com.pulumi.gcp.appengine.inputs.FlexibleAppVersionHandlerGetArgs;
import com.pulumi.gcp.appengine.inputs.FlexibleAppVersionLivenessCheckGetArgs;
import com.pulumi.gcp.appengine.inputs.FlexibleAppVersionManualScalingGetArgs;
import com.pulumi.gcp.appengine.inputs.FlexibleAppVersionNetworkGetArgs;
import com.pulumi.gcp.appengine.inputs.FlexibleAppVersionReadinessCheckGetArgs;
import com.pulumi.gcp.appengine.inputs.FlexibleAppVersionResourcesGetArgs;
import com.pulumi.gcp.appengine.inputs.FlexibleAppVersionVpcAccessConnectorGetArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class FlexibleAppVersionState extends com.pulumi.resources.ResourceArgs {

    public static final FlexibleAppVersionState Empty = new FlexibleAppVersionState();

    /**
     * Serving configuration for Google Cloud Endpoints.
     * Structure is documented below.
     * 
     */
    @Import(name="apiConfig")
      private final @Nullable Output<FlexibleAppVersionApiConfigGetArgs> apiConfig;

    public Output<FlexibleAppVersionApiConfigGetArgs> apiConfig() {
        return this.apiConfig == null ? Codegen.empty() : this.apiConfig;
    }

    /**
     * Automatic scaling is based on request rate, response latencies, and other application metrics.
     * Structure is documented below.
     * 
     */
    @Import(name="automaticScaling")
      private final @Nullable Output<FlexibleAppVersionAutomaticScalingGetArgs> automaticScaling;

    public Output<FlexibleAppVersionAutomaticScalingGetArgs> automaticScaling() {
        return this.automaticScaling == null ? Codegen.empty() : this.automaticScaling;
    }

    /**
     * Metadata settings that are supplied to this version to enable beta runtime features.
     * 
     */
    @Import(name="betaSettings")
      private final @Nullable Output<Map<String,String>> betaSettings;

    public Output<Map<String,String>> betaSettings() {
        return this.betaSettings == null ? Codegen.empty() : this.betaSettings;
    }

    /**
     * Duration that static files should be cached by web proxies and browsers.
     * Only applicable if the corresponding StaticFilesHandler does not specify its own expiration time.
     * 
     */
    @Import(name="defaultExpiration")
      private final @Nullable Output<String> defaultExpiration;

    public Output<String> defaultExpiration() {
        return this.defaultExpiration == null ? Codegen.empty() : this.defaultExpiration;
    }

    /**
     * If set to `true`, the service will be deleted if it is the last version.
     * 
     */
    @Import(name="deleteServiceOnDestroy")
      private final @Nullable Output<Boolean> deleteServiceOnDestroy;

    public Output<Boolean> deleteServiceOnDestroy() {
        return this.deleteServiceOnDestroy == null ? Codegen.empty() : this.deleteServiceOnDestroy;
    }

    /**
     * Code and application artifacts that make up this version.
     * Structure is documented below.
     * 
     */
    @Import(name="deployment")
      private final @Nullable Output<FlexibleAppVersionDeploymentGetArgs> deployment;

    public Output<FlexibleAppVersionDeploymentGetArgs> deployment() {
        return this.deployment == null ? Codegen.empty() : this.deployment;
    }

    /**
     * Code and application artifacts that make up this version.
     * Structure is documented below.
     * 
     */
    @Import(name="endpointsApiService")
      private final @Nullable Output<FlexibleAppVersionEndpointsApiServiceGetArgs> endpointsApiService;

    public Output<FlexibleAppVersionEndpointsApiServiceGetArgs> endpointsApiService() {
        return this.endpointsApiService == null ? Codegen.empty() : this.endpointsApiService;
    }

    /**
     * The entrypoint for the application.
     * Structure is documented below.
     * 
     */
    @Import(name="entrypoint")
      private final @Nullable Output<FlexibleAppVersionEntrypointGetArgs> entrypoint;

    public Output<FlexibleAppVersionEntrypointGetArgs> entrypoint() {
        return this.entrypoint == null ? Codegen.empty() : this.entrypoint;
    }

    /**
     * Environment variables available to the application.  As these are not returned in the API request, the provider will not detect any changes made outside of the config.
     * 
     */
    @Import(name="envVariables")
      private final @Nullable Output<Map<String,String>> envVariables;

    public Output<Map<String,String>> envVariables() {
        return this.envVariables == null ? Codegen.empty() : this.envVariables;
    }

    /**
     * An ordered list of URL-matching patterns that should be applied to incoming requests.
     * The first matching URL handles the request and other request handlers are not attempted.
     * Structure is documented below.
     * 
     */
    @Import(name="handlers")
      private final @Nullable Output<List<FlexibleAppVersionHandlerGetArgs>> handlers;

    public Output<List<FlexibleAppVersionHandlerGetArgs>> handlers() {
        return this.handlers == null ? Codegen.empty() : this.handlers;
    }

    /**
     * A list of the types of messages that this application is able to receive.
     * Each value may be one of `INBOUND_SERVICE_MAIL`, `INBOUND_SERVICE_MAIL_BOUNCE`, `INBOUND_SERVICE_XMPP_ERROR`, `INBOUND_SERVICE_XMPP_MESSAGE`, `INBOUND_SERVICE_XMPP_SUBSCRIBE`, `INBOUND_SERVICE_XMPP_PRESENCE`, `INBOUND_SERVICE_CHANNEL_PRESENCE`, and `INBOUND_SERVICE_WARMUP`.
     * 
     */
    @Import(name="inboundServices")
      private final @Nullable Output<List<String>> inboundServices;

    public Output<List<String>> inboundServices() {
        return this.inboundServices == null ? Codegen.empty() : this.inboundServices;
    }

    /**
     * Instance class that is used to run this version. Valid values are
     * AutomaticScaling: F1, F2, F4, F4_1G
     * ManualScaling: B1, B2, B4, B8, B4_1G
     * Defaults to F1 for AutomaticScaling and B1 for ManualScaling.
     * 
     */
    @Import(name="instanceClass")
      private final @Nullable Output<String> instanceClass;

    public Output<String> instanceClass() {
        return this.instanceClass == null ? Codegen.empty() : this.instanceClass;
    }

    /**
     * Health checking configuration for VM instances. Unhealthy instances are killed and replaced with new instances.
     * Structure is documented below.
     * 
     */
    @Import(name="livenessCheck")
      private final @Nullable Output<FlexibleAppVersionLivenessCheckGetArgs> livenessCheck;

    public Output<FlexibleAppVersionLivenessCheckGetArgs> livenessCheck() {
        return this.livenessCheck == null ? Codegen.empty() : this.livenessCheck;
    }

    /**
     * A service with manual scaling runs continuously, allowing you to perform complex initialization and rely on the state of its memory over time.
     * Structure is documented below.
     * 
     */
    @Import(name="manualScaling")
      private final @Nullable Output<FlexibleAppVersionManualScalingGetArgs> manualScaling;

    public Output<FlexibleAppVersionManualScalingGetArgs> manualScaling() {
        return this.manualScaling == null ? Codegen.empty() : this.manualScaling;
    }

    /**
     * Full Serverless VPC Access Connector name e.g. /projects/my-project/locations/us-central1/connectors/c1.
     * 
     */
    @Import(name="name")
      private final @Nullable Output<String> name;

    public Output<String> name() {
        return this.name == null ? Codegen.empty() : this.name;
    }

    /**
     * Extra network settings
     * Structure is documented below.
     * 
     */
    @Import(name="network")
      private final @Nullable Output<FlexibleAppVersionNetworkGetArgs> network;

    public Output<FlexibleAppVersionNetworkGetArgs> network() {
        return this.network == null ? Codegen.empty() : this.network;
    }

    /**
     * Files that match this pattern will not be built into this version. Only applicable for Go runtimes.
     * 
     */
    @Import(name="nobuildFilesRegex")
      private final @Nullable Output<String> nobuildFilesRegex;

    public Output<String> nobuildFilesRegex() {
        return this.nobuildFilesRegex == null ? Codegen.empty() : this.nobuildFilesRegex;
    }

    /**
     * If set to `true`, the application version will not be deleted.
     * 
     */
    @Import(name="noopOnDestroy")
      private final @Nullable Output<Boolean> noopOnDestroy;

    public Output<Boolean> noopOnDestroy() {
        return this.noopOnDestroy == null ? Codegen.empty() : this.noopOnDestroy;
    }

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Import(name="project")
      private final @Nullable Output<String> project;

    public Output<String> project() {
        return this.project == null ? Codegen.empty() : this.project;
    }

    /**
     * Configures readiness health checking for instances. Unhealthy instances are not put into the backend traffic rotation.
     * Structure is documented below.
     * 
     */
    @Import(name="readinessCheck")
      private final @Nullable Output<FlexibleAppVersionReadinessCheckGetArgs> readinessCheck;

    public Output<FlexibleAppVersionReadinessCheckGetArgs> readinessCheck() {
        return this.readinessCheck == null ? Codegen.empty() : this.readinessCheck;
    }

    /**
     * Machine resources for a version.
     * Structure is documented below.
     * 
     */
    @Import(name="resources")
      private final @Nullable Output<FlexibleAppVersionResourcesGetArgs> resources;

    public Output<FlexibleAppVersionResourcesGetArgs> resources() {
        return this.resources == null ? Codegen.empty() : this.resources;
    }

    /**
     * Desired runtime. Example python27.
     * 
     */
    @Import(name="runtime")
      private final @Nullable Output<String> runtime;

    public Output<String> runtime() {
        return this.runtime == null ? Codegen.empty() : this.runtime;
    }

    /**
     * The version of the API in the given runtime environment.
     * Please see the app.yaml reference for valid values at `https://cloud.google.com/appengine/docs/standard/&lt;language&gt;/config/appref`\
     * Substitute `&lt;language&gt;` with `python`, `java`, `php`, `ruby`, `go` or `nodejs`.
     * 
     */
    @Import(name="runtimeApiVersion")
      private final @Nullable Output<String> runtimeApiVersion;

    public Output<String> runtimeApiVersion() {
        return this.runtimeApiVersion == null ? Codegen.empty() : this.runtimeApiVersion;
    }

    /**
     * The channel of the runtime to use. Only available for some runtimes.
     * 
     */
    @Import(name="runtimeChannel")
      private final @Nullable Output<String> runtimeChannel;

    public Output<String> runtimeChannel() {
        return this.runtimeChannel == null ? Codegen.empty() : this.runtimeChannel;
    }

    /**
     * The path or name of the app&#39;s main executable.
     * 
     */
    @Import(name="runtimeMainExecutablePath")
      private final @Nullable Output<String> runtimeMainExecutablePath;

    public Output<String> runtimeMainExecutablePath() {
        return this.runtimeMainExecutablePath == null ? Codegen.empty() : this.runtimeMainExecutablePath;
    }

    /**
     * AppEngine service resource. Can contain numbers, letters, and hyphens.
     * 
     */
    @Import(name="service")
      private final @Nullable Output<String> service;

    public Output<String> service() {
        return this.service == null ? Codegen.empty() : this.service;
    }

    /**
     * Current serving status of this version. Only the versions with a SERVING status create instances and can be billed.
     * Default value is `SERVING`.
     * Possible values are `SERVING` and `STOPPED`.
     * 
     */
    @Import(name="servingStatus")
      private final @Nullable Output<String> servingStatus;

    public Output<String> servingStatus() {
        return this.servingStatus == null ? Codegen.empty() : this.servingStatus;
    }

    /**
     * Relative name of the version within the service. For example, `v1`. Version names can contain only lowercase letters, numbers, or hyphens.
     * Reserved names,&#34;default&#34;, &#34;latest&#34;, and any name with the prefix &#34;ah-&#34;.
     * 
     */
    @Import(name="versionId")
      private final @Nullable Output<String> versionId;

    public Output<String> versionId() {
        return this.versionId == null ? Codegen.empty() : this.versionId;
    }

    /**
     * Enables VPC connectivity for standard apps.
     * Structure is documented below.
     * 
     */
    @Import(name="vpcAccessConnector")
      private final @Nullable Output<FlexibleAppVersionVpcAccessConnectorGetArgs> vpcAccessConnector;

    public Output<FlexibleAppVersionVpcAccessConnectorGetArgs> vpcAccessConnector() {
        return this.vpcAccessConnector == null ? Codegen.empty() : this.vpcAccessConnector;
    }

    public FlexibleAppVersionState(
        @Nullable Output<FlexibleAppVersionApiConfigGetArgs> apiConfig,
        @Nullable Output<FlexibleAppVersionAutomaticScalingGetArgs> automaticScaling,
        @Nullable Output<Map<String,String>> betaSettings,
        @Nullable Output<String> defaultExpiration,
        @Nullable Output<Boolean> deleteServiceOnDestroy,
        @Nullable Output<FlexibleAppVersionDeploymentGetArgs> deployment,
        @Nullable Output<FlexibleAppVersionEndpointsApiServiceGetArgs> endpointsApiService,
        @Nullable Output<FlexibleAppVersionEntrypointGetArgs> entrypoint,
        @Nullable Output<Map<String,String>> envVariables,
        @Nullable Output<List<FlexibleAppVersionHandlerGetArgs>> handlers,
        @Nullable Output<List<String>> inboundServices,
        @Nullable Output<String> instanceClass,
        @Nullable Output<FlexibleAppVersionLivenessCheckGetArgs> livenessCheck,
        @Nullable Output<FlexibleAppVersionManualScalingGetArgs> manualScaling,
        @Nullable Output<String> name,
        @Nullable Output<FlexibleAppVersionNetworkGetArgs> network,
        @Nullable Output<String> nobuildFilesRegex,
        @Nullable Output<Boolean> noopOnDestroy,
        @Nullable Output<String> project,
        @Nullable Output<FlexibleAppVersionReadinessCheckGetArgs> readinessCheck,
        @Nullable Output<FlexibleAppVersionResourcesGetArgs> resources,
        @Nullable Output<String> runtime,
        @Nullable Output<String> runtimeApiVersion,
        @Nullable Output<String> runtimeChannel,
        @Nullable Output<String> runtimeMainExecutablePath,
        @Nullable Output<String> service,
        @Nullable Output<String> servingStatus,
        @Nullable Output<String> versionId,
        @Nullable Output<FlexibleAppVersionVpcAccessConnectorGetArgs> vpcAccessConnector) {
        this.apiConfig = apiConfig;
        this.automaticScaling = automaticScaling;
        this.betaSettings = betaSettings;
        this.defaultExpiration = defaultExpiration;
        this.deleteServiceOnDestroy = deleteServiceOnDestroy;
        this.deployment = deployment;
        this.endpointsApiService = endpointsApiService;
        this.entrypoint = entrypoint;
        this.envVariables = envVariables;
        this.handlers = handlers;
        this.inboundServices = inboundServices;
        this.instanceClass = instanceClass;
        this.livenessCheck = livenessCheck;
        this.manualScaling = manualScaling;
        this.name = name;
        this.network = network;
        this.nobuildFilesRegex = nobuildFilesRegex;
        this.noopOnDestroy = noopOnDestroy;
        this.project = project;
        this.readinessCheck = readinessCheck;
        this.resources = resources;
        this.runtime = runtime;
        this.runtimeApiVersion = runtimeApiVersion;
        this.runtimeChannel = runtimeChannel;
        this.runtimeMainExecutablePath = runtimeMainExecutablePath;
        this.service = service;
        this.servingStatus = servingStatus;
        this.versionId = versionId;
        this.vpcAccessConnector = vpcAccessConnector;
    }

    private FlexibleAppVersionState() {
        this.apiConfig = Codegen.empty();
        this.automaticScaling = Codegen.empty();
        this.betaSettings = Codegen.empty();
        this.defaultExpiration = Codegen.empty();
        this.deleteServiceOnDestroy = Codegen.empty();
        this.deployment = Codegen.empty();
        this.endpointsApiService = Codegen.empty();
        this.entrypoint = Codegen.empty();
        this.envVariables = Codegen.empty();
        this.handlers = Codegen.empty();
        this.inboundServices = Codegen.empty();
        this.instanceClass = Codegen.empty();
        this.livenessCheck = Codegen.empty();
        this.manualScaling = Codegen.empty();
        this.name = Codegen.empty();
        this.network = Codegen.empty();
        this.nobuildFilesRegex = Codegen.empty();
        this.noopOnDestroy = Codegen.empty();
        this.project = Codegen.empty();
        this.readinessCheck = Codegen.empty();
        this.resources = Codegen.empty();
        this.runtime = Codegen.empty();
        this.runtimeApiVersion = Codegen.empty();
        this.runtimeChannel = Codegen.empty();
        this.runtimeMainExecutablePath = Codegen.empty();
        this.service = Codegen.empty();
        this.servingStatus = Codegen.empty();
        this.versionId = Codegen.empty();
        this.vpcAccessConnector = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FlexibleAppVersionState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<FlexibleAppVersionApiConfigGetArgs> apiConfig;
        private @Nullable Output<FlexibleAppVersionAutomaticScalingGetArgs> automaticScaling;
        private @Nullable Output<Map<String,String>> betaSettings;
        private @Nullable Output<String> defaultExpiration;
        private @Nullable Output<Boolean> deleteServiceOnDestroy;
        private @Nullable Output<FlexibleAppVersionDeploymentGetArgs> deployment;
        private @Nullable Output<FlexibleAppVersionEndpointsApiServiceGetArgs> endpointsApiService;
        private @Nullable Output<FlexibleAppVersionEntrypointGetArgs> entrypoint;
        private @Nullable Output<Map<String,String>> envVariables;
        private @Nullable Output<List<FlexibleAppVersionHandlerGetArgs>> handlers;
        private @Nullable Output<List<String>> inboundServices;
        private @Nullable Output<String> instanceClass;
        private @Nullable Output<FlexibleAppVersionLivenessCheckGetArgs> livenessCheck;
        private @Nullable Output<FlexibleAppVersionManualScalingGetArgs> manualScaling;
        private @Nullable Output<String> name;
        private @Nullable Output<FlexibleAppVersionNetworkGetArgs> network;
        private @Nullable Output<String> nobuildFilesRegex;
        private @Nullable Output<Boolean> noopOnDestroy;
        private @Nullable Output<String> project;
        private @Nullable Output<FlexibleAppVersionReadinessCheckGetArgs> readinessCheck;
        private @Nullable Output<FlexibleAppVersionResourcesGetArgs> resources;
        private @Nullable Output<String> runtime;
        private @Nullable Output<String> runtimeApiVersion;
        private @Nullable Output<String> runtimeChannel;
        private @Nullable Output<String> runtimeMainExecutablePath;
        private @Nullable Output<String> service;
        private @Nullable Output<String> servingStatus;
        private @Nullable Output<String> versionId;
        private @Nullable Output<FlexibleAppVersionVpcAccessConnectorGetArgs> vpcAccessConnector;

        public Builder() {
    	      // Empty
        }

        public Builder(FlexibleAppVersionState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.apiConfig = defaults.apiConfig;
    	      this.automaticScaling = defaults.automaticScaling;
    	      this.betaSettings = defaults.betaSettings;
    	      this.defaultExpiration = defaults.defaultExpiration;
    	      this.deleteServiceOnDestroy = defaults.deleteServiceOnDestroy;
    	      this.deployment = defaults.deployment;
    	      this.endpointsApiService = defaults.endpointsApiService;
    	      this.entrypoint = defaults.entrypoint;
    	      this.envVariables = defaults.envVariables;
    	      this.handlers = defaults.handlers;
    	      this.inboundServices = defaults.inboundServices;
    	      this.instanceClass = defaults.instanceClass;
    	      this.livenessCheck = defaults.livenessCheck;
    	      this.manualScaling = defaults.manualScaling;
    	      this.name = defaults.name;
    	      this.network = defaults.network;
    	      this.nobuildFilesRegex = defaults.nobuildFilesRegex;
    	      this.noopOnDestroy = defaults.noopOnDestroy;
    	      this.project = defaults.project;
    	      this.readinessCheck = defaults.readinessCheck;
    	      this.resources = defaults.resources;
    	      this.runtime = defaults.runtime;
    	      this.runtimeApiVersion = defaults.runtimeApiVersion;
    	      this.runtimeChannel = defaults.runtimeChannel;
    	      this.runtimeMainExecutablePath = defaults.runtimeMainExecutablePath;
    	      this.service = defaults.service;
    	      this.servingStatus = defaults.servingStatus;
    	      this.versionId = defaults.versionId;
    	      this.vpcAccessConnector = defaults.vpcAccessConnector;
        }

        public Builder apiConfig(@Nullable Output<FlexibleAppVersionApiConfigGetArgs> apiConfig) {
            this.apiConfig = apiConfig;
            return this;
        }
        public Builder apiConfig(@Nullable FlexibleAppVersionApiConfigGetArgs apiConfig) {
            this.apiConfig = Codegen.ofNullable(apiConfig);
            return this;
        }
        public Builder automaticScaling(@Nullable Output<FlexibleAppVersionAutomaticScalingGetArgs> automaticScaling) {
            this.automaticScaling = automaticScaling;
            return this;
        }
        public Builder automaticScaling(@Nullable FlexibleAppVersionAutomaticScalingGetArgs automaticScaling) {
            this.automaticScaling = Codegen.ofNullable(automaticScaling);
            return this;
        }
        public Builder betaSettings(@Nullable Output<Map<String,String>> betaSettings) {
            this.betaSettings = betaSettings;
            return this;
        }
        public Builder betaSettings(@Nullable Map<String,String> betaSettings) {
            this.betaSettings = Codegen.ofNullable(betaSettings);
            return this;
        }
        public Builder defaultExpiration(@Nullable Output<String> defaultExpiration) {
            this.defaultExpiration = defaultExpiration;
            return this;
        }
        public Builder defaultExpiration(@Nullable String defaultExpiration) {
            this.defaultExpiration = Codegen.ofNullable(defaultExpiration);
            return this;
        }
        public Builder deleteServiceOnDestroy(@Nullable Output<Boolean> deleteServiceOnDestroy) {
            this.deleteServiceOnDestroy = deleteServiceOnDestroy;
            return this;
        }
        public Builder deleteServiceOnDestroy(@Nullable Boolean deleteServiceOnDestroy) {
            this.deleteServiceOnDestroy = Codegen.ofNullable(deleteServiceOnDestroy);
            return this;
        }
        public Builder deployment(@Nullable Output<FlexibleAppVersionDeploymentGetArgs> deployment) {
            this.deployment = deployment;
            return this;
        }
        public Builder deployment(@Nullable FlexibleAppVersionDeploymentGetArgs deployment) {
            this.deployment = Codegen.ofNullable(deployment);
            return this;
        }
        public Builder endpointsApiService(@Nullable Output<FlexibleAppVersionEndpointsApiServiceGetArgs> endpointsApiService) {
            this.endpointsApiService = endpointsApiService;
            return this;
        }
        public Builder endpointsApiService(@Nullable FlexibleAppVersionEndpointsApiServiceGetArgs endpointsApiService) {
            this.endpointsApiService = Codegen.ofNullable(endpointsApiService);
            return this;
        }
        public Builder entrypoint(@Nullable Output<FlexibleAppVersionEntrypointGetArgs> entrypoint) {
            this.entrypoint = entrypoint;
            return this;
        }
        public Builder entrypoint(@Nullable FlexibleAppVersionEntrypointGetArgs entrypoint) {
            this.entrypoint = Codegen.ofNullable(entrypoint);
            return this;
        }
        public Builder envVariables(@Nullable Output<Map<String,String>> envVariables) {
            this.envVariables = envVariables;
            return this;
        }
        public Builder envVariables(@Nullable Map<String,String> envVariables) {
            this.envVariables = Codegen.ofNullable(envVariables);
            return this;
        }
        public Builder handlers(@Nullable Output<List<FlexibleAppVersionHandlerGetArgs>> handlers) {
            this.handlers = handlers;
            return this;
        }
        public Builder handlers(@Nullable List<FlexibleAppVersionHandlerGetArgs> handlers) {
            this.handlers = Codegen.ofNullable(handlers);
            return this;
        }
        public Builder handlers(FlexibleAppVersionHandlerGetArgs... handlers) {
            return handlers(List.of(handlers));
        }
        public Builder inboundServices(@Nullable Output<List<String>> inboundServices) {
            this.inboundServices = inboundServices;
            return this;
        }
        public Builder inboundServices(@Nullable List<String> inboundServices) {
            this.inboundServices = Codegen.ofNullable(inboundServices);
            return this;
        }
        public Builder inboundServices(String... inboundServices) {
            return inboundServices(List.of(inboundServices));
        }
        public Builder instanceClass(@Nullable Output<String> instanceClass) {
            this.instanceClass = instanceClass;
            return this;
        }
        public Builder instanceClass(@Nullable String instanceClass) {
            this.instanceClass = Codegen.ofNullable(instanceClass);
            return this;
        }
        public Builder livenessCheck(@Nullable Output<FlexibleAppVersionLivenessCheckGetArgs> livenessCheck) {
            this.livenessCheck = livenessCheck;
            return this;
        }
        public Builder livenessCheck(@Nullable FlexibleAppVersionLivenessCheckGetArgs livenessCheck) {
            this.livenessCheck = Codegen.ofNullable(livenessCheck);
            return this;
        }
        public Builder manualScaling(@Nullable Output<FlexibleAppVersionManualScalingGetArgs> manualScaling) {
            this.manualScaling = manualScaling;
            return this;
        }
        public Builder manualScaling(@Nullable FlexibleAppVersionManualScalingGetArgs manualScaling) {
            this.manualScaling = Codegen.ofNullable(manualScaling);
            return this;
        }
        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }
        public Builder name(@Nullable String name) {
            this.name = Codegen.ofNullable(name);
            return this;
        }
        public Builder network(@Nullable Output<FlexibleAppVersionNetworkGetArgs> network) {
            this.network = network;
            return this;
        }
        public Builder network(@Nullable FlexibleAppVersionNetworkGetArgs network) {
            this.network = Codegen.ofNullable(network);
            return this;
        }
        public Builder nobuildFilesRegex(@Nullable Output<String> nobuildFilesRegex) {
            this.nobuildFilesRegex = nobuildFilesRegex;
            return this;
        }
        public Builder nobuildFilesRegex(@Nullable String nobuildFilesRegex) {
            this.nobuildFilesRegex = Codegen.ofNullable(nobuildFilesRegex);
            return this;
        }
        public Builder noopOnDestroy(@Nullable Output<Boolean> noopOnDestroy) {
            this.noopOnDestroy = noopOnDestroy;
            return this;
        }
        public Builder noopOnDestroy(@Nullable Boolean noopOnDestroy) {
            this.noopOnDestroy = Codegen.ofNullable(noopOnDestroy);
            return this;
        }
        public Builder project(@Nullable Output<String> project) {
            this.project = project;
            return this;
        }
        public Builder project(@Nullable String project) {
            this.project = Codegen.ofNullable(project);
            return this;
        }
        public Builder readinessCheck(@Nullable Output<FlexibleAppVersionReadinessCheckGetArgs> readinessCheck) {
            this.readinessCheck = readinessCheck;
            return this;
        }
        public Builder readinessCheck(@Nullable FlexibleAppVersionReadinessCheckGetArgs readinessCheck) {
            this.readinessCheck = Codegen.ofNullable(readinessCheck);
            return this;
        }
        public Builder resources(@Nullable Output<FlexibleAppVersionResourcesGetArgs> resources) {
            this.resources = resources;
            return this;
        }
        public Builder resources(@Nullable FlexibleAppVersionResourcesGetArgs resources) {
            this.resources = Codegen.ofNullable(resources);
            return this;
        }
        public Builder runtime(@Nullable Output<String> runtime) {
            this.runtime = runtime;
            return this;
        }
        public Builder runtime(@Nullable String runtime) {
            this.runtime = Codegen.ofNullable(runtime);
            return this;
        }
        public Builder runtimeApiVersion(@Nullable Output<String> runtimeApiVersion) {
            this.runtimeApiVersion = runtimeApiVersion;
            return this;
        }
        public Builder runtimeApiVersion(@Nullable String runtimeApiVersion) {
            this.runtimeApiVersion = Codegen.ofNullable(runtimeApiVersion);
            return this;
        }
        public Builder runtimeChannel(@Nullable Output<String> runtimeChannel) {
            this.runtimeChannel = runtimeChannel;
            return this;
        }
        public Builder runtimeChannel(@Nullable String runtimeChannel) {
            this.runtimeChannel = Codegen.ofNullable(runtimeChannel);
            return this;
        }
        public Builder runtimeMainExecutablePath(@Nullable Output<String> runtimeMainExecutablePath) {
            this.runtimeMainExecutablePath = runtimeMainExecutablePath;
            return this;
        }
        public Builder runtimeMainExecutablePath(@Nullable String runtimeMainExecutablePath) {
            this.runtimeMainExecutablePath = Codegen.ofNullable(runtimeMainExecutablePath);
            return this;
        }
        public Builder service(@Nullable Output<String> service) {
            this.service = service;
            return this;
        }
        public Builder service(@Nullable String service) {
            this.service = Codegen.ofNullable(service);
            return this;
        }
        public Builder servingStatus(@Nullable Output<String> servingStatus) {
            this.servingStatus = servingStatus;
            return this;
        }
        public Builder servingStatus(@Nullable String servingStatus) {
            this.servingStatus = Codegen.ofNullable(servingStatus);
            return this;
        }
        public Builder versionId(@Nullable Output<String> versionId) {
            this.versionId = versionId;
            return this;
        }
        public Builder versionId(@Nullable String versionId) {
            this.versionId = Codegen.ofNullable(versionId);
            return this;
        }
        public Builder vpcAccessConnector(@Nullable Output<FlexibleAppVersionVpcAccessConnectorGetArgs> vpcAccessConnector) {
            this.vpcAccessConnector = vpcAccessConnector;
            return this;
        }
        public Builder vpcAccessConnector(@Nullable FlexibleAppVersionVpcAccessConnectorGetArgs vpcAccessConnector) {
            this.vpcAccessConnector = Codegen.ofNullable(vpcAccessConnector);
            return this;
        }        public FlexibleAppVersionState build() {
            return new FlexibleAppVersionState(apiConfig, automaticScaling, betaSettings, defaultExpiration, deleteServiceOnDestroy, deployment, endpointsApiService, entrypoint, envVariables, handlers, inboundServices, instanceClass, livenessCheck, manualScaling, name, network, nobuildFilesRegex, noopOnDestroy, project, readinessCheck, resources, runtime, runtimeApiVersion, runtimeChannel, runtimeMainExecutablePath, service, servingStatus, versionId, vpcAccessConnector);
        }
    }
}
