// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.dataproc.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;


public final class MetastoreServiceMaintenanceWindowGetArgs extends com.pulumi.resources.ResourceArgs {

    public static final MetastoreServiceMaintenanceWindowGetArgs Empty = new MetastoreServiceMaintenanceWindowGetArgs();

    /**
     * The day of week, when the window starts.
     * Possible values are `MONDAY`, `TUESDAY`, `WEDNESDAY`, `THURSDAY`, `FRIDAY`, `SATURDAY`, and `SUNDAY`.
     * 
     */
    @Import(name="dayOfWeek", required=true)
    private Output<String> dayOfWeek;

    public Output<String> dayOfWeek() {
        return this.dayOfWeek;
    }

    /**
     * The hour of day (0-23) when the window starts.
     * 
     */
    @Import(name="hourOfDay", required=true)
    private Output<Integer> hourOfDay;

    public Output<Integer> hourOfDay() {
        return this.hourOfDay;
    }

    private MetastoreServiceMaintenanceWindowGetArgs() {}

    private MetastoreServiceMaintenanceWindowGetArgs(MetastoreServiceMaintenanceWindowGetArgs $) {
        this.dayOfWeek = $.dayOfWeek;
        this.hourOfDay = $.hourOfDay;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MetastoreServiceMaintenanceWindowGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MetastoreServiceMaintenanceWindowGetArgs $;

        public Builder() {
            $ = new MetastoreServiceMaintenanceWindowGetArgs();
        }

        public Builder(MetastoreServiceMaintenanceWindowGetArgs defaults) {
            $ = new MetastoreServiceMaintenanceWindowGetArgs(Objects.requireNonNull(defaults));
        }

        public Builder dayOfWeek(Output<String> dayOfWeek) {
            $.dayOfWeek = dayOfWeek;
            return this;
        }

        public Builder dayOfWeek(String dayOfWeek) {
            return dayOfWeek(Output.of(dayOfWeek));
        }

        public Builder hourOfDay(Output<Integer> hourOfDay) {
            $.hourOfDay = hourOfDay;
            return this;
        }

        public Builder hourOfDay(Integer hourOfDay) {
            return hourOfDay(Output.of(hourOfDay));
        }

        public MetastoreServiceMaintenanceWindowGetArgs build() {
            $.dayOfWeek = Objects.requireNonNull($.dayOfWeek, "expected parameter 'dayOfWeek' to be non-null");
            $.hourOfDay = Objects.requireNonNull($.hourOfDay, "expected parameter 'hourOfDay' to be non-null");
            return $;
        }
    }

}
