// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.container.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import com.pulumi.gcp.container.inputs.ClusterResourceUsageExportConfigBigqueryDestinationArgs;
import java.lang.Boolean;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ClusterResourceUsageExportConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final ClusterResourceUsageExportConfigArgs Empty = new ClusterResourceUsageExportConfigArgs();

    /**
     * Parameters for using BigQuery as the destination of resource usage export.
     * 
     */
    @Import(name="bigqueryDestination", required=true)
      private final Output<ClusterResourceUsageExportConfigBigqueryDestinationArgs> bigqueryDestination;

    public Output<ClusterResourceUsageExportConfigBigqueryDestinationArgs> bigqueryDestination() {
        return this.bigqueryDestination;
    }

    /**
     * Whether to enable network egress metering for this cluster. If enabled, a daemonset will be created
     * in the cluster to meter network egress traffic.
     * 
     */
    @Import(name="enableNetworkEgressMetering")
      private final @Nullable Output<Boolean> enableNetworkEgressMetering;

    public Output<Boolean> enableNetworkEgressMetering() {
        return this.enableNetworkEgressMetering == null ? Codegen.empty() : this.enableNetworkEgressMetering;
    }

    /**
     * Whether to enable resource
     * consumption metering on this cluster. When enabled, a table will be created in
     * the resource export BigQuery dataset to store resource consumption data. The
     * resulting table can be joined with the resource usage table or with BigQuery
     * billing export. Defaults to `true`.
     * 
     */
    @Import(name="enableResourceConsumptionMetering")
      private final @Nullable Output<Boolean> enableResourceConsumptionMetering;

    public Output<Boolean> enableResourceConsumptionMetering() {
        return this.enableResourceConsumptionMetering == null ? Codegen.empty() : this.enableResourceConsumptionMetering;
    }

    public ClusterResourceUsageExportConfigArgs(
        Output<ClusterResourceUsageExportConfigBigqueryDestinationArgs> bigqueryDestination,
        @Nullable Output<Boolean> enableNetworkEgressMetering,
        @Nullable Output<Boolean> enableResourceConsumptionMetering) {
        this.bigqueryDestination = Objects.requireNonNull(bigqueryDestination, "expected parameter 'bigqueryDestination' to be non-null");
        this.enableNetworkEgressMetering = enableNetworkEgressMetering;
        this.enableResourceConsumptionMetering = enableResourceConsumptionMetering;
    }

    private ClusterResourceUsageExportConfigArgs() {
        this.bigqueryDestination = Codegen.empty();
        this.enableNetworkEgressMetering = Codegen.empty();
        this.enableResourceConsumptionMetering = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ClusterResourceUsageExportConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<ClusterResourceUsageExportConfigBigqueryDestinationArgs> bigqueryDestination;
        private @Nullable Output<Boolean> enableNetworkEgressMetering;
        private @Nullable Output<Boolean> enableResourceConsumptionMetering;

        public Builder() {
    	      // Empty
        }

        public Builder(ClusterResourceUsageExportConfigArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bigqueryDestination = defaults.bigqueryDestination;
    	      this.enableNetworkEgressMetering = defaults.enableNetworkEgressMetering;
    	      this.enableResourceConsumptionMetering = defaults.enableResourceConsumptionMetering;
        }

        public Builder bigqueryDestination(Output<ClusterResourceUsageExportConfigBigqueryDestinationArgs> bigqueryDestination) {
            this.bigqueryDestination = Objects.requireNonNull(bigqueryDestination);
            return this;
        }
        public Builder bigqueryDestination(ClusterResourceUsageExportConfigBigqueryDestinationArgs bigqueryDestination) {
            this.bigqueryDestination = Output.of(Objects.requireNonNull(bigqueryDestination));
            return this;
        }
        public Builder enableNetworkEgressMetering(@Nullable Output<Boolean> enableNetworkEgressMetering) {
            this.enableNetworkEgressMetering = enableNetworkEgressMetering;
            return this;
        }
        public Builder enableNetworkEgressMetering(@Nullable Boolean enableNetworkEgressMetering) {
            this.enableNetworkEgressMetering = Codegen.ofNullable(enableNetworkEgressMetering);
            return this;
        }
        public Builder enableResourceConsumptionMetering(@Nullable Output<Boolean> enableResourceConsumptionMetering) {
            this.enableResourceConsumptionMetering = enableResourceConsumptionMetering;
            return this;
        }
        public Builder enableResourceConsumptionMetering(@Nullable Boolean enableResourceConsumptionMetering) {
            this.enableResourceConsumptionMetering = Codegen.ofNullable(enableResourceConsumptionMetering);
            return this;
        }        public ClusterResourceUsageExportConfigArgs build() {
            return new ClusterResourceUsageExportConfigArgs(bigqueryDestination, enableNetworkEgressMetering, enableResourceConsumptionMetering);
        }
    }
}
