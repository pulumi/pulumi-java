// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.secretmanager.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.secretmanager.inputs.SecretReplicationUserManagedReplicaGetArgs;
import java.util.List;
import java.util.Objects;


public final class SecretReplicationUserManagedGetArgs extends com.pulumi.resources.ResourceArgs {

    public static final SecretReplicationUserManagedGetArgs Empty = new SecretReplicationUserManagedGetArgs();

    /**
     * The list of Replicas for this Secret. Cannot be empty.
     * Structure is documented below.
     * 
     */
    @Import(name="replicas", required=true)
    private Output<List<SecretReplicationUserManagedReplicaGetArgs>> replicas;

    public Output<List<SecretReplicationUserManagedReplicaGetArgs>> replicas() {
        return this.replicas;
    }

    private SecretReplicationUserManagedGetArgs() {}

    private SecretReplicationUserManagedGetArgs(SecretReplicationUserManagedGetArgs $) {
        this.replicas = $.replicas;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SecretReplicationUserManagedGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SecretReplicationUserManagedGetArgs $;

        public Builder() {
            $ = new SecretReplicationUserManagedGetArgs();
        }

        public Builder(SecretReplicationUserManagedGetArgs defaults) {
            $ = new SecretReplicationUserManagedGetArgs(Objects.requireNonNull(defaults));
        }

        public Builder replicas(Output<List<SecretReplicationUserManagedReplicaGetArgs>> replicas) {
            $.replicas = replicas;
            return this;
        }

        public Builder replicas(List<SecretReplicationUserManagedReplicaGetArgs> replicas) {
            return replicas(Output.of(replicas));
        }

        public Builder replicas(SecretReplicationUserManagedReplicaGetArgs... replicas) {
            return replicas(List.of(replicas));
        }

        public SecretReplicationUserManagedGetArgs build() {
            $.replicas = Objects.requireNonNull($.replicas, "expected parameter 'replicas' to be non-null");
            return $;
        }
    }

}
