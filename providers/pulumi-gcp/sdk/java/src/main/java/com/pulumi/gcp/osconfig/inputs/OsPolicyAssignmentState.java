// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.osconfig.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.osconfig.inputs.OsPolicyAssignmentInstanceFilterGetArgs;
import com.pulumi.gcp.osconfig.inputs.OsPolicyAssignmentOsPolicyGetArgs;
import com.pulumi.gcp.osconfig.inputs.OsPolicyAssignmentRolloutGetArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class OsPolicyAssignmentState extends com.pulumi.resources.ResourceArgs {

    public static final OsPolicyAssignmentState Empty = new OsPolicyAssignmentState();

    /**
     * Output only. Indicates that this revision has been successfully rolled out in this zone and new VMs will be assigned OS
     * policies from this revision. For a given OS policy assignment, there is only one revision with a value of `true` for
     * this field.
     * 
     */
    @Import(name="baseline")
    private @Nullable Output<Boolean> baseline;

    public Optional<Output<Boolean>> baseline() {
        return Optional.ofNullable(this.baseline);
    }

    /**
     * Output only. Indicates that this revision deletes the OS policy assignment.
     * 
     */
    @Import(name="deleted")
    private @Nullable Output<Boolean> deleted;

    public Optional<Output<Boolean>> deleted() {
        return Optional.ofNullable(this.deleted);
    }

    /**
     * OS policy assignment description. Length of the description is limited to 1024 characters.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The etag for this OS policy assignment. If this is provided on update, it must match the server&#39;s etag.
     * 
     */
    @Import(name="etag")
    private @Nullable Output<String> etag;

    public Optional<Output<String>> etag() {
        return Optional.ofNullable(this.etag);
    }

    /**
     * Required. Filter to select VMs.
     * 
     */
    @Import(name="instanceFilter")
    private @Nullable Output<OsPolicyAssignmentInstanceFilterGetArgs> instanceFilter;

    public Optional<Output<OsPolicyAssignmentInstanceFilterGetArgs>> instanceFilter() {
        return Optional.ofNullable(this.instanceFilter);
    }

    /**
     * The location for the resource
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * Required. The name of the repository.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Required. List of OS policies to be applied to the VMs.
     * 
     */
    @Import(name="osPolicies")
    private @Nullable Output<List<OsPolicyAssignmentOsPolicyGetArgs>> osPolicies;

    public Optional<Output<List<OsPolicyAssignmentOsPolicyGetArgs>>> osPolicies() {
        return Optional.ofNullable(this.osPolicies);
    }

    /**
     * The project for the resource
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * Output only. Indicates that reconciliation is in progress for the revision. This value is `true` when the
     * `rollout_state` is one of: * IN_PROGRESS * CANCELLING
     * 
     */
    @Import(name="reconciling")
    private @Nullable Output<Boolean> reconciling;

    public Optional<Output<Boolean>> reconciling() {
        return Optional.ofNullable(this.reconciling);
    }

    /**
     * Output only. The timestamp that the revision was created.
     * 
     */
    @Import(name="revisionCreateTime")
    private @Nullable Output<String> revisionCreateTime;

    public Optional<Output<String>> revisionCreateTime() {
        return Optional.ofNullable(this.revisionCreateTime);
    }

    /**
     * Output only. The assignment revision ID A new revision is committed whenever a rollout is triggered for a OS policy
     * assignment
     * 
     */
    @Import(name="revisionId")
    private @Nullable Output<String> revisionId;

    public Optional<Output<String>> revisionId() {
        return Optional.ofNullable(this.revisionId);
    }

    /**
     * Required. Rollout to deploy the OS policy assignment. A rollout is triggered in the following situations: 1) OSPolicyAssignment is created. 2) OSPolicyAssignment is updated and the update contains changes to one of the following fields: - instance_filter - os_policies 3) OSPolicyAssignment is deleted.
     * 
     */
    @Import(name="rollout")
    private @Nullable Output<OsPolicyAssignmentRolloutGetArgs> rollout;

    public Optional<Output<OsPolicyAssignmentRolloutGetArgs>> rollout() {
        return Optional.ofNullable(this.rollout);
    }

    /**
     * Output only. OS policy assignment rollout state Possible values: ROLLOUT_STATE_UNSPECIFIED, IN_PROGRESS, CANCELLING,
     * CANCELLED, SUCCEEDED
     * 
     */
    @Import(name="rolloutState")
    private @Nullable Output<String> rolloutState;

    public Optional<Output<String>> rolloutState() {
        return Optional.ofNullable(this.rolloutState);
    }

    /**
     * Output only. Server generated unique id for the OS policy assignment resource.
     * 
     */
    @Import(name="uid")
    private @Nullable Output<String> uid;

    public Optional<Output<String>> uid() {
        return Optional.ofNullable(this.uid);
    }

    private OsPolicyAssignmentState() {}

    private OsPolicyAssignmentState(OsPolicyAssignmentState $) {
        this.baseline = $.baseline;
        this.deleted = $.deleted;
        this.description = $.description;
        this.etag = $.etag;
        this.instanceFilter = $.instanceFilter;
        this.location = $.location;
        this.name = $.name;
        this.osPolicies = $.osPolicies;
        this.project = $.project;
        this.reconciling = $.reconciling;
        this.revisionCreateTime = $.revisionCreateTime;
        this.revisionId = $.revisionId;
        this.rollout = $.rollout;
        this.rolloutState = $.rolloutState;
        this.uid = $.uid;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OsPolicyAssignmentState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OsPolicyAssignmentState $;

        public Builder() {
            $ = new OsPolicyAssignmentState();
        }

        public Builder(OsPolicyAssignmentState defaults) {
            $ = new OsPolicyAssignmentState(Objects.requireNonNull(defaults));
        }

        public Builder baseline(@Nullable Output<Boolean> baseline) {
            $.baseline = baseline;
            return this;
        }

        public Builder baseline(Boolean baseline) {
            return baseline(Output.of(baseline));
        }

        public Builder deleted(@Nullable Output<Boolean> deleted) {
            $.deleted = deleted;
            return this;
        }

        public Builder deleted(Boolean deleted) {
            return deleted(Output.of(deleted));
        }

        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        public Builder description(String description) {
            return description(Output.of(description));
        }

        public Builder etag(@Nullable Output<String> etag) {
            $.etag = etag;
            return this;
        }

        public Builder etag(String etag) {
            return etag(Output.of(etag));
        }

        public Builder instanceFilter(@Nullable Output<OsPolicyAssignmentInstanceFilterGetArgs> instanceFilter) {
            $.instanceFilter = instanceFilter;
            return this;
        }

        public Builder instanceFilter(OsPolicyAssignmentInstanceFilterGetArgs instanceFilter) {
            return instanceFilter(Output.of(instanceFilter));
        }

        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        public Builder location(String location) {
            return location(Output.of(location));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder osPolicies(@Nullable Output<List<OsPolicyAssignmentOsPolicyGetArgs>> osPolicies) {
            $.osPolicies = osPolicies;
            return this;
        }

        public Builder osPolicies(List<OsPolicyAssignmentOsPolicyGetArgs> osPolicies) {
            return osPolicies(Output.of(osPolicies));
        }

        public Builder osPolicies(OsPolicyAssignmentOsPolicyGetArgs... osPolicies) {
            return osPolicies(List.of(osPolicies));
        }

        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        public Builder project(String project) {
            return project(Output.of(project));
        }

        public Builder reconciling(@Nullable Output<Boolean> reconciling) {
            $.reconciling = reconciling;
            return this;
        }

        public Builder reconciling(Boolean reconciling) {
            return reconciling(Output.of(reconciling));
        }

        public Builder revisionCreateTime(@Nullable Output<String> revisionCreateTime) {
            $.revisionCreateTime = revisionCreateTime;
            return this;
        }

        public Builder revisionCreateTime(String revisionCreateTime) {
            return revisionCreateTime(Output.of(revisionCreateTime));
        }

        public Builder revisionId(@Nullable Output<String> revisionId) {
            $.revisionId = revisionId;
            return this;
        }

        public Builder revisionId(String revisionId) {
            return revisionId(Output.of(revisionId));
        }

        public Builder rollout(@Nullable Output<OsPolicyAssignmentRolloutGetArgs> rollout) {
            $.rollout = rollout;
            return this;
        }

        public Builder rollout(OsPolicyAssignmentRolloutGetArgs rollout) {
            return rollout(Output.of(rollout));
        }

        public Builder rolloutState(@Nullable Output<String> rolloutState) {
            $.rolloutState = rolloutState;
            return this;
        }

        public Builder rolloutState(String rolloutState) {
            return rolloutState(Output.of(rolloutState));
        }

        public Builder uid(@Nullable Output<String> uid) {
            $.uid = uid;
            return this;
        }

        public Builder uid(String uid) {
            return uid(Output.of(uid));
        }

        public OsPolicyAssignmentState build() {
            return $;
        }
    }

}
