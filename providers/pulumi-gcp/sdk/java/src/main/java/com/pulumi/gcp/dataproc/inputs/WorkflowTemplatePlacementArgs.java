// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.dataproc.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import com.pulumi.gcp.dataproc.inputs.WorkflowTemplatePlacementClusterSelectorArgs;
import com.pulumi.gcp.dataproc.inputs.WorkflowTemplatePlacementManagedClusterArgs;
import java.util.Objects;
import javax.annotation.Nullable;


public final class WorkflowTemplatePlacementArgs extends com.pulumi.resources.ResourceArgs {

    public static final WorkflowTemplatePlacementArgs Empty = new WorkflowTemplatePlacementArgs();

    /**
     * Optional. A selector that chooses target cluster for jobs based on metadata. The selector is evaluated at the time each job is submitted.
     * 
     */
    @Import(name="clusterSelector")
      private final @Nullable Output<WorkflowTemplatePlacementClusterSelectorArgs> clusterSelector;

    public Output<WorkflowTemplatePlacementClusterSelectorArgs> clusterSelector() {
        return this.clusterSelector == null ? Codegen.empty() : this.clusterSelector;
    }

    /**
     * A cluster that is managed by the workflow.
     * 
     */
    @Import(name="managedCluster")
      private final @Nullable Output<WorkflowTemplatePlacementManagedClusterArgs> managedCluster;

    public Output<WorkflowTemplatePlacementManagedClusterArgs> managedCluster() {
        return this.managedCluster == null ? Codegen.empty() : this.managedCluster;
    }

    public WorkflowTemplatePlacementArgs(
        @Nullable Output<WorkflowTemplatePlacementClusterSelectorArgs> clusterSelector,
        @Nullable Output<WorkflowTemplatePlacementManagedClusterArgs> managedCluster) {
        this.clusterSelector = clusterSelector;
        this.managedCluster = managedCluster;
    }

    private WorkflowTemplatePlacementArgs() {
        this.clusterSelector = Codegen.empty();
        this.managedCluster = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(WorkflowTemplatePlacementArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<WorkflowTemplatePlacementClusterSelectorArgs> clusterSelector;
        private @Nullable Output<WorkflowTemplatePlacementManagedClusterArgs> managedCluster;

        public Builder() {
    	      // Empty
        }

        public Builder(WorkflowTemplatePlacementArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.clusterSelector = defaults.clusterSelector;
    	      this.managedCluster = defaults.managedCluster;
        }

        public Builder clusterSelector(@Nullable Output<WorkflowTemplatePlacementClusterSelectorArgs> clusterSelector) {
            this.clusterSelector = clusterSelector;
            return this;
        }
        public Builder clusterSelector(@Nullable WorkflowTemplatePlacementClusterSelectorArgs clusterSelector) {
            this.clusterSelector = Codegen.ofNullable(clusterSelector);
            return this;
        }
        public Builder managedCluster(@Nullable Output<WorkflowTemplatePlacementManagedClusterArgs> managedCluster) {
            this.managedCluster = managedCluster;
            return this;
        }
        public Builder managedCluster(@Nullable WorkflowTemplatePlacementManagedClusterArgs managedCluster) {
            this.managedCluster = Codegen.ofNullable(managedCluster);
            return this;
        }        public WorkflowTemplatePlacementArgs build() {
            return new WorkflowTemplatePlacementArgs(clusterSelector, managedCluster);
        }
    }
}
