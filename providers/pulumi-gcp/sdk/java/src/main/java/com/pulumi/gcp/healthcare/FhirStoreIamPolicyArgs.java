// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.healthcare;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;


public final class FhirStoreIamPolicyArgs extends com.pulumi.resources.ResourceArgs {

    public static final FhirStoreIamPolicyArgs Empty = new FhirStoreIamPolicyArgs();

    /**
     * The FHIR store ID, in the form
     * `{project_id}/{location_name}/{dataset_name}/{fhir_store_name}` or
     * `{location_name}/{dataset_name}/{fhir_store_name}`. In the second form, the provider&#39;s
     * project setting will be used as a fallback.
     * 
     */
    @Import(name="fhirStoreId", required=true)
      private final Output<String> fhirStoreId;

    public Output<String> fhirStoreId() {
        return this.fhirStoreId;
    }

    /**
     * The policy data generated by
     * a `gcp.organizations.getIAMPolicy` data source.
     * 
     */
    @Import(name="policyData", required=true)
      private final Output<String> policyData;

    public Output<String> policyData() {
        return this.policyData;
    }

    public FhirStoreIamPolicyArgs(
        Output<String> fhirStoreId,
        Output<String> policyData) {
        this.fhirStoreId = Objects.requireNonNull(fhirStoreId, "expected parameter 'fhirStoreId' to be non-null");
        this.policyData = Objects.requireNonNull(policyData, "expected parameter 'policyData' to be non-null");
    }

    private FhirStoreIamPolicyArgs() {
        this.fhirStoreId = Codegen.empty();
        this.policyData = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FhirStoreIamPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> fhirStoreId;
        private Output<String> policyData;

        public Builder() {
    	      // Empty
        }

        public Builder(FhirStoreIamPolicyArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.fhirStoreId = defaults.fhirStoreId;
    	      this.policyData = defaults.policyData;
        }

        public Builder fhirStoreId(Output<String> fhirStoreId) {
            this.fhirStoreId = Objects.requireNonNull(fhirStoreId);
            return this;
        }
        public Builder fhirStoreId(String fhirStoreId) {
            this.fhirStoreId = Output.of(Objects.requireNonNull(fhirStoreId));
            return this;
        }
        public Builder policyData(Output<String> policyData) {
            this.policyData = Objects.requireNonNull(policyData);
            return this;
        }
        public Builder policyData(String policyData) {
            this.policyData = Output.of(Objects.requireNonNull(policyData));
            return this;
        }        public FhirStoreIamPolicyArgs build() {
            return new FhirStoreIamPolicyArgs(fhirStoreId, policyData);
        }
    }
}
