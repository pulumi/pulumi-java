// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class InstanceScratchDiskGetArgs extends com.pulumi.resources.ResourceArgs {

    public static final InstanceScratchDiskGetArgs Empty = new InstanceScratchDiskGetArgs();

    /**
     * The disk interface to use for attaching this disk; either SCSI or NVME.
     * 
     */
    @Import(name="interface", required=true)
    private Output<String> interface_;

    /**
     * @return The disk interface to use for attaching this disk; either SCSI or NVME.
     * 
     */
    public Output<String> interface_() {
        return this.interface_;
    }

    private InstanceScratchDiskGetArgs() {}

    private InstanceScratchDiskGetArgs(InstanceScratchDiskGetArgs $) {
        this.interface_ = $.interface_;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InstanceScratchDiskGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InstanceScratchDiskGetArgs $;

        public Builder() {
            $ = new InstanceScratchDiskGetArgs();
        }

        public Builder(InstanceScratchDiskGetArgs defaults) {
            $ = new InstanceScratchDiskGetArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param interface_ The disk interface to use for attaching this disk; either SCSI or NVME.
         * 
         * @return builder
         * 
         */
        public Builder interface_(Output<String> interface_) {
            $.interface_ = interface_;
            return this;
        }

        /**
         * @param interface_ The disk interface to use for attaching this disk; either SCSI or NVME.
         * 
         * @return builder
         * 
         */
        public Builder interface_(String interface_) {
            return interface_(Output.of(interface_));
        }

        public InstanceScratchDiskGetArgs build() {
            $.interface_ = Objects.requireNonNull($.interface_, "expected parameter 'interface' to be non-null");
            return $;
        }
    }

}
