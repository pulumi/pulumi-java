// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.container.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class GetAwsVersionsArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetAwsVersionsArgs Empty = new GetAwsVersionsArgs();

    /**
     * The location to list versions for.
     * 
     */
    @Import(name="location")
    private Output</* @Nullable */ String> location;

    /**
     * @return The location to list versions for.
     * 
     */
    public Output</* @Nullable */ String> location() {
        return this.location;
    }

    /**
     * ID of the project to list available cluster versions for. Should match the project the cluster will be deployed to.
     * Defaults to the project that the provider is authenticated with.
     * 
     */
    @Import(name="project")
    private Output</* @Nullable */ String> project;

    /**
     * @return ID of the project to list available cluster versions for. Should match the project the cluster will be deployed to.
     * Defaults to the project that the provider is authenticated with.
     * 
     */
    public Output</* @Nullable */ String> project() {
        return this.project;
    }

    private GetAwsVersionsArgs() {}

    private GetAwsVersionsArgs(GetAwsVersionsArgs $) {
        this.location = $.location;
        this.project = $.project;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetAwsVersionsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetAwsVersionsArgs $;

        public Builder() {
            $ = new GetAwsVersionsArgs();
        }

        public Builder(GetAwsVersionsArgs defaults) {
            $ = new GetAwsVersionsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param location The location to list versions for.
         * 
         * @return builder
         * 
         */
        public Builder location(Output</* @Nullable */ String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location The location to list versions for.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable String location) {
            return location(Output.of(location));
        }

        /**
         * @param project ID of the project to list available cluster versions for. Should match the project the cluster will be deployed to.
         * Defaults to the project that the provider is authenticated with.
         * 
         * @return builder
         * 
         */
        public Builder project(Output</* @Nullable */ String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project ID of the project to list available cluster versions for. Should match the project the cluster will be deployed to.
         * Defaults to the project that the provider is authenticated with.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable String project) {
            return project(Output.of(project));
        }

        public GetAwsVersionsArgs build() {
            return $;
        }
    }

}
