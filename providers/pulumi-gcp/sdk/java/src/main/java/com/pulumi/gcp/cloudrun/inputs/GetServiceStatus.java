// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.cloudrun.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.cloudrun.inputs.GetServiceStatusCondition;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class GetServiceStatus extends com.pulumi.resources.InvokeArgs {

    public static final GetServiceStatus Empty = new GetServiceStatus();

    @Import(name="conditions", required=true)
    private List<GetServiceStatusCondition> conditions;

    public List<GetServiceStatusCondition> conditions() {
        return this.conditions;
    }

    @Import(name="latestCreatedRevisionName", required=true)
    private String latestCreatedRevisionName;

    public String latestCreatedRevisionName() {
        return this.latestCreatedRevisionName;
    }

    @Import(name="latestReadyRevisionName", required=true)
    private String latestReadyRevisionName;

    public String latestReadyRevisionName() {
        return this.latestReadyRevisionName;
    }

    @Import(name="observedGeneration", required=true)
    private Integer observedGeneration;

    public Integer observedGeneration() {
        return this.observedGeneration;
    }

    @Import(name="url", required=true)
    private String url;

    public String url() {
        return this.url;
    }

    private GetServiceStatus() {}

    private GetServiceStatus(GetServiceStatus $) {
        this.conditions = $.conditions;
        this.latestCreatedRevisionName = $.latestCreatedRevisionName;
        this.latestReadyRevisionName = $.latestReadyRevisionName;
        this.observedGeneration = $.observedGeneration;
        this.url = $.url;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetServiceStatus defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetServiceStatus $;

        public Builder() {
            $ = new GetServiceStatus();
        }

        public Builder(GetServiceStatus defaults) {
            $ = new GetServiceStatus(Objects.requireNonNull(defaults));
        }

        public Builder conditions(List<GetServiceStatusCondition> conditions) {
            $.conditions = conditions;
            return this;
        }

        public Builder conditions(GetServiceStatusCondition... conditions) {
            return conditions(List.of(conditions));
        }

        public Builder latestCreatedRevisionName(String latestCreatedRevisionName) {
            $.latestCreatedRevisionName = latestCreatedRevisionName;
            return this;
        }

        public Builder latestReadyRevisionName(String latestReadyRevisionName) {
            $.latestReadyRevisionName = latestReadyRevisionName;
            return this;
        }

        public Builder observedGeneration(Integer observedGeneration) {
            $.observedGeneration = observedGeneration;
            return this;
        }

        public Builder url(String url) {
            $.url = url;
            return this;
        }

        public GetServiceStatus build() {
            $.conditions = Objects.requireNonNull($.conditions, "expected parameter 'conditions' to be non-null");
            $.latestCreatedRevisionName = Objects.requireNonNull($.latestCreatedRevisionName, "expected parameter 'latestCreatedRevisionName' to be non-null");
            $.latestReadyRevisionName = Objects.requireNonNull($.latestReadyRevisionName, "expected parameter 'latestReadyRevisionName' to be non-null");
            $.observedGeneration = Objects.requireNonNull($.observedGeneration, "expected parameter 'observedGeneration' to be non-null");
            $.url = Objects.requireNonNull($.url, "expected parameter 'url' to be non-null");
            return $;
        }
    }

}
