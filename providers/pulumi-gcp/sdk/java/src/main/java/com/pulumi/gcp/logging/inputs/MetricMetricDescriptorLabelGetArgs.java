// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.logging.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class MetricMetricDescriptorLabelGetArgs extends com.pulumi.resources.ResourceArgs {

    public static final MetricMetricDescriptorLabelGetArgs Empty = new MetricMetricDescriptorLabelGetArgs();

    /**
     * A description of this metric, which is used in documentation. The maximum length of the
     * description is 8000 characters.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The label key.
     * 
     */
    @Import(name="key", required=true)
    private Output<String> key;

    public Output<String> key() {
        return this.key;
    }

    /**
     * The type of data that can be assigned to the label.
     * Default value is `STRING`.
     * Possible values are `BOOL`, `INT64`, and `STRING`.
     * 
     */
    @Import(name="valueType")
    private @Nullable Output<String> valueType;

    public Optional<Output<String>> valueType() {
        return Optional.ofNullable(this.valueType);
    }

    private MetricMetricDescriptorLabelGetArgs() {}

    private MetricMetricDescriptorLabelGetArgs(MetricMetricDescriptorLabelGetArgs $) {
        this.description = $.description;
        this.key = $.key;
        this.valueType = $.valueType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MetricMetricDescriptorLabelGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MetricMetricDescriptorLabelGetArgs $;

        public Builder() {
            $ = new MetricMetricDescriptorLabelGetArgs();
        }

        public Builder(MetricMetricDescriptorLabelGetArgs defaults) {
            $ = new MetricMetricDescriptorLabelGetArgs(Objects.requireNonNull(defaults));
        }

        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        public Builder description(String description) {
            return description(Output.of(description));
        }

        public Builder key(Output<String> key) {
            $.key = key;
            return this;
        }

        public Builder key(String key) {
            return key(Output.of(key));
        }

        public Builder valueType(@Nullable Output<String> valueType) {
            $.valueType = valueType;
            return this;
        }

        public Builder valueType(String valueType) {
            return valueType(Output.of(valueType));
        }

        public MetricMetricDescriptorLabelGetArgs build() {
            $.key = Objects.requireNonNull($.key, "expected parameter 'key' to be non-null");
            return $;
        }
    }

}
