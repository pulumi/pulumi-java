// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.projects.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class IAMAuditConfigAuditLogConfigGetArgs extends com.pulumi.resources.ResourceArgs {

    public static final IAMAuditConfigAuditLogConfigGetArgs Empty = new IAMAuditConfigAuditLogConfigGetArgs();

    /**
     * Identities that do not cause logging for this type of permission.  The format is the same as that for `members`.
     * 
     */
    @Import(name="exemptedMembers")
      private final @Nullable Output<List<String>> exemptedMembers;

    public Output<List<String>> exemptedMembers() {
        return this.exemptedMembers == null ? Codegen.empty() : this.exemptedMembers;
    }

    /**
     * Permission type for which logging is to be configured.  Must be one of `DATA_READ`, `DATA_WRITE`, or `ADMIN_READ`.
     * 
     */
    @Import(name="logType", required=true)
      private final Output<String> logType;

    public Output<String> logType() {
        return this.logType;
    }

    public IAMAuditConfigAuditLogConfigGetArgs(
        @Nullable Output<List<String>> exemptedMembers,
        Output<String> logType) {
        this.exemptedMembers = exemptedMembers;
        this.logType = Objects.requireNonNull(logType, "expected parameter 'logType' to be non-null");
    }

    private IAMAuditConfigAuditLogConfigGetArgs() {
        this.exemptedMembers = Codegen.empty();
        this.logType = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(IAMAuditConfigAuditLogConfigGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<List<String>> exemptedMembers;
        private Output<String> logType;

        public Builder() {
    	      // Empty
        }

        public Builder(IAMAuditConfigAuditLogConfigGetArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.exemptedMembers = defaults.exemptedMembers;
    	      this.logType = defaults.logType;
        }

        public Builder exemptedMembers(@Nullable Output<List<String>> exemptedMembers) {
            this.exemptedMembers = exemptedMembers;
            return this;
        }
        public Builder exemptedMembers(@Nullable List<String> exemptedMembers) {
            this.exemptedMembers = Codegen.ofNullable(exemptedMembers);
            return this;
        }
        public Builder exemptedMembers(String... exemptedMembers) {
            return exemptedMembers(List.of(exemptedMembers));
        }
        public Builder logType(Output<String> logType) {
            this.logType = Objects.requireNonNull(logType);
            return this;
        }
        public Builder logType(String logType) {
            this.logType = Output.of(Objects.requireNonNull(logType));
            return this;
        }        public IAMAuditConfigAuditLogConfigGetArgs build() {
            return new IAMAuditConfigAuditLogConfigGetArgs(exemptedMembers, logType);
        }
    }
}
