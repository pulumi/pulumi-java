// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.bigtable.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.util.Objects;


public final class GCPolicyMaxVersionArgs extends com.pulumi.resources.ResourceArgs {

    public static final GCPolicyMaxVersionArgs Empty = new GCPolicyMaxVersionArgs();

    /**
     * Number of version before applying the GC policy.
     * 
     */
    @Import(name="number", required=true)
      private final Output<Integer> number;

    public Output<Integer> number() {
        return this.number;
    }

    public GCPolicyMaxVersionArgs(Output<Integer> number) {
        this.number = Objects.requireNonNull(number, "expected parameter 'number' to be non-null");
    }

    private GCPolicyMaxVersionArgs() {
        this.number = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GCPolicyMaxVersionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<Integer> number;

        public Builder() {
    	      // Empty
        }

        public Builder(GCPolicyMaxVersionArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.number = defaults.number;
        }

        public Builder number(Output<Integer> number) {
            this.number = Objects.requireNonNull(number);
            return this;
        }
        public Builder number(Integer number) {
            this.number = Output.of(Objects.requireNonNull(number));
            return this;
        }        public GCPolicyMaxVersionArgs build() {
            return new GCPolicyMaxVersionArgs(number);
        }
    }
}
