// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.cloudrun.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.cloudrun.inputs.GetServiceTemplateMetadata;
import com.pulumi.gcp.cloudrun.inputs.GetServiceTemplateSpec;
import java.util.List;
import java.util.Objects;


public final class GetServiceTemplate extends com.pulumi.resources.InvokeArgs {

    public static final GetServiceTemplate Empty = new GetServiceTemplate();

    @Import(name="metadatas", required=true)
    private List<GetServiceTemplateMetadata> metadatas;

    public List<GetServiceTemplateMetadata> metadatas() {
        return this.metadatas;
    }

    @Import(name="specs", required=true)
    private List<GetServiceTemplateSpec> specs;

    public List<GetServiceTemplateSpec> specs() {
        return this.specs;
    }

    private GetServiceTemplate() {}

    private GetServiceTemplate(GetServiceTemplate $) {
        this.metadatas = $.metadatas;
        this.specs = $.specs;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetServiceTemplate defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetServiceTemplate $;

        public Builder() {
            $ = new GetServiceTemplate();
        }

        public Builder(GetServiceTemplate defaults) {
            $ = new GetServiceTemplate(Objects.requireNonNull(defaults));
        }

        public Builder metadatas(List<GetServiceTemplateMetadata> metadatas) {
            $.metadatas = metadatas;
            return this;
        }

        public Builder metadatas(GetServiceTemplateMetadata... metadatas) {
            return metadatas(List.of(metadatas));
        }

        public Builder specs(List<GetServiceTemplateSpec> specs) {
            $.specs = specs;
            return this;
        }

        public Builder specs(GetServiceTemplateSpec... specs) {
            return specs(List.of(specs));
        }

        public GetServiceTemplate build() {
            $.metadatas = Objects.requireNonNull($.metadatas, "expected parameter 'metadatas' to be non-null");
            $.specs = Objects.requireNonNull($.specs, "expected parameter 'specs' to be non-null");
            return $;
        }
    }

}
