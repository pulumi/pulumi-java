// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.binaryauthorization;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.binaryauthorization.inputs.AttestorAttestationAuthorityNoteArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AttestorArgs extends com.pulumi.resources.ResourceArgs {

    public static final AttestorArgs Empty = new AttestorArgs();

    /**
     * A Container Analysis ATTESTATION_AUTHORITY Note, created by the user.
     * Structure is documented below.
     * 
     */
    @Import(name="attestationAuthorityNote", required=true)
    private Output<AttestorAttestationAuthorityNoteArgs> attestationAuthorityNote;

    public Output<AttestorAttestationAuthorityNoteArgs> attestationAuthorityNote() {
        return this.attestationAuthorityNote;
    }

    /**
     * A descriptive comment. This field may be updated. The field may be
     * displayed in chooser dialogs.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The resource name.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    private AttestorArgs() {}

    private AttestorArgs(AttestorArgs $) {
        this.attestationAuthorityNote = $.attestationAuthorityNote;
        this.description = $.description;
        this.name = $.name;
        this.project = $.project;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AttestorArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AttestorArgs $;

        public Builder() {
            $ = new AttestorArgs();
        }

        public Builder(AttestorArgs defaults) {
            $ = new AttestorArgs(Objects.requireNonNull(defaults));
        }

        public Builder attestationAuthorityNote(Output<AttestorAttestationAuthorityNoteArgs> attestationAuthorityNote) {
            $.attestationAuthorityNote = attestationAuthorityNote;
            return this;
        }

        public Builder attestationAuthorityNote(AttestorAttestationAuthorityNoteArgs attestationAuthorityNote) {
            return attestationAuthorityNote(Output.of(attestationAuthorityNote));
        }

        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        public Builder description(String description) {
            return description(Output.of(description));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        public Builder project(String project) {
            return project(Output.of(project));
        }

        public AttestorArgs build() {
            $.attestationAuthorityNote = Objects.requireNonNull($.attestationAuthorityNote, "expected parameter 'attestationAuthorityNote' to be non-null");
            return $;
        }
    }

}
