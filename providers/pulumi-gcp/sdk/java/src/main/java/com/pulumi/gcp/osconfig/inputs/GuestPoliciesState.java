// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.osconfig.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import com.pulumi.gcp.osconfig.inputs.GuestPoliciesAssignmentGetArgs;
import com.pulumi.gcp.osconfig.inputs.GuestPoliciesPackageGetArgs;
import com.pulumi.gcp.osconfig.inputs.GuestPoliciesPackageRepositoryGetArgs;
import com.pulumi.gcp.osconfig.inputs.GuestPoliciesRecipeGetArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class GuestPoliciesState extends com.pulumi.resources.ResourceArgs {

    public static final GuestPoliciesState Empty = new GuestPoliciesState();

    /**
     * Specifies the VM instances that are assigned to this policy. This allows you to target sets
     * or groups of VM instances by different parameters such as labels, names, OS, or zones.
     * If left empty, all VM instances underneath this policy are targeted.
     * At the same level in the resource hierarchy (that is within a project), the service prevents
     * the creation of multiple policies that conflict with each other.
     * For more information, see how the service
     * [handles assignment conflicts](https://cloud.google.com/compute/docs/os-config-management/create-guest-policy#handle-conflicts).
     * Structure is documented below.
     * 
     */
    @Import(name="assignment")
      private final @Nullable Output<GuestPoliciesAssignmentGetArgs> assignment;

    public Output<GuestPoliciesAssignmentGetArgs> assignment() {
        return this.assignment == null ? Codegen.empty() : this.assignment;
    }

    /**
     * Time this guest policy was created. A timestamp in RFC3339 UTC "Zulu" format, accurate to nanoseconds. Example:
     * "2014-10-02T15:01:23.045123456Z".
     * 
     */
    @Import(name="createTime")
      private final @Nullable Output<String> createTime;

    public Output<String> createTime() {
        return this.createTime == null ? Codegen.empty() : this.createTime;
    }

    /**
     * Description of the guest policy. Length of the description is limited to 1024 characters.
     * 
     */
    @Import(name="description")
      private final @Nullable Output<String> description;

    public Output<String> description() {
        return this.description == null ? Codegen.empty() : this.description;
    }

    /**
     * The etag for this guest policy. If this is provided on update, it must match the server's etag.
     * 
     */
    @Import(name="etag")
      private final @Nullable Output<String> etag;

    public Output<String> etag() {
        return this.etag == null ? Codegen.empty() : this.etag;
    }

    /**
     * The logical name of the guest policy in the project with the following restrictions:
     * * Must contain only lowercase letters, numbers, and hyphens.
     * * Must start with a letter.
     * * Must be between 1-63 characters.
     * * Must end with a number or a letter.
     * * Must be unique within the project.
     * 
     */
    @Import(name="guestPolicyId")
      private final @Nullable Output<String> guestPolicyId;

    public Output<String> guestPolicyId() {
        return this.guestPolicyId == null ? Codegen.empty() : this.guestPolicyId;
    }

    /**
     * Unique identifier for the recipe. Only one recipe with a given name is installed on an instance.
     * Names are also used to identify resources which helps to determine whether guest policies have conflicts.
     * This means that requests to create multiple recipes with the same name and version are rejected since they
     * could potentially have conflicting assignments.
     * 
     */
    @Import(name="name")
      private final @Nullable Output<String> name;

    public Output<String> name() {
        return this.name == null ? Codegen.empty() : this.name;
    }

    /**
     * A list of package repositories to configure on the VM instance.
     * This is done before any other configs are applied so they can use these repos.
     * Package repositories are only configured if the corresponding package manager(s) are available.
     * Structure is documented below.
     * 
     */
    @Import(name="packageRepositories")
      private final @Nullable Output<List<GuestPoliciesPackageRepositoryGetArgs>> packageRepositories;

    public Output<List<GuestPoliciesPackageRepositoryGetArgs>> packageRepositories() {
        return this.packageRepositories == null ? Codegen.empty() : this.packageRepositories;
    }

    /**
     * The software packages to be managed by this policy.
     * Structure is documented below.
     * 
     */
    @Import(name="packages")
      private final @Nullable Output<List<GuestPoliciesPackageGetArgs>> packages;

    public Output<List<GuestPoliciesPackageGetArgs>> packages() {
        return this.packages == null ? Codegen.empty() : this.packages;
    }

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Import(name="project")
      private final @Nullable Output<String> project;

    public Output<String> project() {
        return this.project == null ? Codegen.empty() : this.project;
    }

    /**
     * A list of Recipes to install on the VM instance.
     * Structure is documented below.
     * 
     */
    @Import(name="recipes")
      private final @Nullable Output<List<GuestPoliciesRecipeGetArgs>> recipes;

    public Output<List<GuestPoliciesRecipeGetArgs>> recipes() {
        return this.recipes == null ? Codegen.empty() : this.recipes;
    }

    /**
     * Last time this guest policy was updated. A timestamp in RFC3339 UTC "Zulu" format, accurate to nanoseconds. Example:
     * "2014-10-02T15:01:23.045123456Z".
     * 
     */
    @Import(name="updateTime")
      private final @Nullable Output<String> updateTime;

    public Output<String> updateTime() {
        return this.updateTime == null ? Codegen.empty() : this.updateTime;
    }

    public GuestPoliciesState(
        @Nullable Output<GuestPoliciesAssignmentGetArgs> assignment,
        @Nullable Output<String> createTime,
        @Nullable Output<String> description,
        @Nullable Output<String> etag,
        @Nullable Output<String> guestPolicyId,
        @Nullable Output<String> name,
        @Nullable Output<List<GuestPoliciesPackageRepositoryGetArgs>> packageRepositories,
        @Nullable Output<List<GuestPoliciesPackageGetArgs>> packages,
        @Nullable Output<String> project,
        @Nullable Output<List<GuestPoliciesRecipeGetArgs>> recipes,
        @Nullable Output<String> updateTime) {
        this.assignment = assignment;
        this.createTime = createTime;
        this.description = description;
        this.etag = etag;
        this.guestPolicyId = guestPolicyId;
        this.name = name;
        this.packageRepositories = packageRepositories;
        this.packages = packages;
        this.project = project;
        this.recipes = recipes;
        this.updateTime = updateTime;
    }

    private GuestPoliciesState() {
        this.assignment = Codegen.empty();
        this.createTime = Codegen.empty();
        this.description = Codegen.empty();
        this.etag = Codegen.empty();
        this.guestPolicyId = Codegen.empty();
        this.name = Codegen.empty();
        this.packageRepositories = Codegen.empty();
        this.packages = Codegen.empty();
        this.project = Codegen.empty();
        this.recipes = Codegen.empty();
        this.updateTime = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GuestPoliciesState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<GuestPoliciesAssignmentGetArgs> assignment;
        private @Nullable Output<String> createTime;
        private @Nullable Output<String> description;
        private @Nullable Output<String> etag;
        private @Nullable Output<String> guestPolicyId;
        private @Nullable Output<String> name;
        private @Nullable Output<List<GuestPoliciesPackageRepositoryGetArgs>> packageRepositories;
        private @Nullable Output<List<GuestPoliciesPackageGetArgs>> packages;
        private @Nullable Output<String> project;
        private @Nullable Output<List<GuestPoliciesRecipeGetArgs>> recipes;
        private @Nullable Output<String> updateTime;

        public Builder() {
    	      // Empty
        }

        public Builder(GuestPoliciesState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.assignment = defaults.assignment;
    	      this.createTime = defaults.createTime;
    	      this.description = defaults.description;
    	      this.etag = defaults.etag;
    	      this.guestPolicyId = defaults.guestPolicyId;
    	      this.name = defaults.name;
    	      this.packageRepositories = defaults.packageRepositories;
    	      this.packages = defaults.packages;
    	      this.project = defaults.project;
    	      this.recipes = defaults.recipes;
    	      this.updateTime = defaults.updateTime;
        }

        public Builder assignment(@Nullable Output<GuestPoliciesAssignmentGetArgs> assignment) {
            this.assignment = assignment;
            return this;
        }
        public Builder assignment(@Nullable GuestPoliciesAssignmentGetArgs assignment) {
            this.assignment = Codegen.ofNullable(assignment);
            return this;
        }
        public Builder createTime(@Nullable Output<String> createTime) {
            this.createTime = createTime;
            return this;
        }
        public Builder createTime(@Nullable String createTime) {
            this.createTime = Codegen.ofNullable(createTime);
            return this;
        }
        public Builder description(@Nullable Output<String> description) {
            this.description = description;
            return this;
        }
        public Builder description(@Nullable String description) {
            this.description = Codegen.ofNullable(description);
            return this;
        }
        public Builder etag(@Nullable Output<String> etag) {
            this.etag = etag;
            return this;
        }
        public Builder etag(@Nullable String etag) {
            this.etag = Codegen.ofNullable(etag);
            return this;
        }
        public Builder guestPolicyId(@Nullable Output<String> guestPolicyId) {
            this.guestPolicyId = guestPolicyId;
            return this;
        }
        public Builder guestPolicyId(@Nullable String guestPolicyId) {
            this.guestPolicyId = Codegen.ofNullable(guestPolicyId);
            return this;
        }
        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }
        public Builder name(@Nullable String name) {
            this.name = Codegen.ofNullable(name);
            return this;
        }
        public Builder packageRepositories(@Nullable Output<List<GuestPoliciesPackageRepositoryGetArgs>> packageRepositories) {
            this.packageRepositories = packageRepositories;
            return this;
        }
        public Builder packageRepositories(@Nullable List<GuestPoliciesPackageRepositoryGetArgs> packageRepositories) {
            this.packageRepositories = Codegen.ofNullable(packageRepositories);
            return this;
        }
        public Builder packageRepositories(GuestPoliciesPackageRepositoryGetArgs... packageRepositories) {
            return packageRepositories(List.of(packageRepositories));
        }
        public Builder packages(@Nullable Output<List<GuestPoliciesPackageGetArgs>> packages) {
            this.packages = packages;
            return this;
        }
        public Builder packages(@Nullable List<GuestPoliciesPackageGetArgs> packages) {
            this.packages = Codegen.ofNullable(packages);
            return this;
        }
        public Builder packages(GuestPoliciesPackageGetArgs... packages) {
            return packages(List.of(packages));
        }
        public Builder project(@Nullable Output<String> project) {
            this.project = project;
            return this;
        }
        public Builder project(@Nullable String project) {
            this.project = Codegen.ofNullable(project);
            return this;
        }
        public Builder recipes(@Nullable Output<List<GuestPoliciesRecipeGetArgs>> recipes) {
            this.recipes = recipes;
            return this;
        }
        public Builder recipes(@Nullable List<GuestPoliciesRecipeGetArgs> recipes) {
            this.recipes = Codegen.ofNullable(recipes);
            return this;
        }
        public Builder recipes(GuestPoliciesRecipeGetArgs... recipes) {
            return recipes(List.of(recipes));
        }
        public Builder updateTime(@Nullable Output<String> updateTime) {
            this.updateTime = updateTime;
            return this;
        }
        public Builder updateTime(@Nullable String updateTime) {
            this.updateTime = Codegen.ofNullable(updateTime);
            return this;
        }        public GuestPoliciesState build() {
            return new GuestPoliciesState(assignment, createTime, description, etag, guestPolicyId, name, packageRepositories, packages, project, recipes, updateTime);
        }
    }
}
