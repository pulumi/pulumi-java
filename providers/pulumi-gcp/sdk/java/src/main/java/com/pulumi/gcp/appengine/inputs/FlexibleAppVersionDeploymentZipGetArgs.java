// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.appengine.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FlexibleAppVersionDeploymentZipGetArgs extends com.pulumi.resources.ResourceArgs {

    public static final FlexibleAppVersionDeploymentZipGetArgs Empty = new FlexibleAppVersionDeploymentZipGetArgs();

    /**
     * files count
     * 
     */
    @Import(name="filesCount")
    private @Nullable Output<Integer> filesCount;

    public Optional<Output<Integer>> filesCount() {
        return Optional.ofNullable(this.filesCount);
    }

    /**
     * Source URL
     * 
     */
    @Import(name="sourceUrl", required=true)
    private Output<String> sourceUrl;

    public Output<String> sourceUrl() {
        return this.sourceUrl;
    }

    private FlexibleAppVersionDeploymentZipGetArgs() {}

    private FlexibleAppVersionDeploymentZipGetArgs(FlexibleAppVersionDeploymentZipGetArgs $) {
        this.filesCount = $.filesCount;
        this.sourceUrl = $.sourceUrl;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FlexibleAppVersionDeploymentZipGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FlexibleAppVersionDeploymentZipGetArgs $;

        public Builder() {
            $ = new FlexibleAppVersionDeploymentZipGetArgs();
        }

        public Builder(FlexibleAppVersionDeploymentZipGetArgs defaults) {
            $ = new FlexibleAppVersionDeploymentZipGetArgs(Objects.requireNonNull(defaults));
        }

        public Builder filesCount(@Nullable Output<Integer> filesCount) {
            $.filesCount = filesCount;
            return this;
        }

        public Builder filesCount(Integer filesCount) {
            return filesCount(Output.of(filesCount));
        }

        public Builder sourceUrl(Output<String> sourceUrl) {
            $.sourceUrl = sourceUrl;
            return this;
        }

        public Builder sourceUrl(String sourceUrl) {
            return sourceUrl(Output.of(sourceUrl));
        }

        public FlexibleAppVersionDeploymentZipGetArgs build() {
            $.sourceUrl = Objects.requireNonNull($.sourceUrl, "expected parameter 'sourceUrl' to be non-null");
            return $;
        }
    }

}
