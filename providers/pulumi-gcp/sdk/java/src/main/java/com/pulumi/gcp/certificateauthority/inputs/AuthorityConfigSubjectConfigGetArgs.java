// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.certificateauthority.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.certificateauthority.inputs.AuthorityConfigSubjectConfigSubjectAltNameGetArgs;
import com.pulumi.gcp.certificateauthority.inputs.AuthorityConfigSubjectConfigSubjectGetArgs;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AuthorityConfigSubjectConfigGetArgs extends com.pulumi.resources.ResourceArgs {

    public static final AuthorityConfigSubjectConfigGetArgs Empty = new AuthorityConfigSubjectConfigGetArgs();

    /**
     * Contains distinguished name fields such as the location and organization.
     * Structure is documented below.
     * 
     */
    @Import(name="subject", required=true)
    private Output<AuthorityConfigSubjectConfigSubjectGetArgs> subject;

    public Output<AuthorityConfigSubjectConfigSubjectGetArgs> subject() {
        return this.subject;
    }

    /**
     * The subject alternative name fields.
     * Structure is documented below.
     * 
     */
    @Import(name="subjectAltName")
    private @Nullable Output<AuthorityConfigSubjectConfigSubjectAltNameGetArgs> subjectAltName;

    public Optional<Output<AuthorityConfigSubjectConfigSubjectAltNameGetArgs>> subjectAltName() {
        return Optional.ofNullable(this.subjectAltName);
    }

    private AuthorityConfigSubjectConfigGetArgs() {}

    private AuthorityConfigSubjectConfigGetArgs(AuthorityConfigSubjectConfigGetArgs $) {
        this.subject = $.subject;
        this.subjectAltName = $.subjectAltName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AuthorityConfigSubjectConfigGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AuthorityConfigSubjectConfigGetArgs $;

        public Builder() {
            $ = new AuthorityConfigSubjectConfigGetArgs();
        }

        public Builder(AuthorityConfigSubjectConfigGetArgs defaults) {
            $ = new AuthorityConfigSubjectConfigGetArgs(Objects.requireNonNull(defaults));
        }

        public Builder subject(Output<AuthorityConfigSubjectConfigSubjectGetArgs> subject) {
            $.subject = subject;
            return this;
        }

        public Builder subject(AuthorityConfigSubjectConfigSubjectGetArgs subject) {
            return subject(Output.of(subject));
        }

        public Builder subjectAltName(@Nullable Output<AuthorityConfigSubjectConfigSubjectAltNameGetArgs> subjectAltName) {
            $.subjectAltName = subjectAltName;
            return this;
        }

        public Builder subjectAltName(AuthorityConfigSubjectConfigSubjectAltNameGetArgs subjectAltName) {
            return subjectAltName(Output.of(subjectAltName));
        }

        public AuthorityConfigSubjectConfigGetArgs build() {
            $.subject = Objects.requireNonNull($.subject, "expected parameter 'subject' to be non-null");
            return $;
        }
    }

}
