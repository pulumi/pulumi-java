// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;


public final class GetInstanceGuestAccelerator extends com.pulumi.resources.InvokeArgs {

    public static final GetInstanceGuestAccelerator Empty = new GetInstanceGuestAccelerator();

    /**
     * The number of the guest accelerator cards exposed to this instance.
     * 
     */
    @Import(name="count", required=true)
    private Integer count;

    public Integer count() {
        return this.count;
    }

    /**
     * The accelerator type resource exposed to this instance. E.g. `nvidia-tesla-k80`.
     * 
     */
    @Import(name="type", required=true)
    private String type;

    public String type() {
        return this.type;
    }

    private GetInstanceGuestAccelerator() {}

    private GetInstanceGuestAccelerator(GetInstanceGuestAccelerator $) {
        this.count = $.count;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetInstanceGuestAccelerator defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetInstanceGuestAccelerator $;

        public Builder() {
            $ = new GetInstanceGuestAccelerator();
        }

        public Builder(GetInstanceGuestAccelerator defaults) {
            $ = new GetInstanceGuestAccelerator(Objects.requireNonNull(defaults));
        }

        public Builder count(Integer count) {
            $.count = count;
            return this;
        }

        public Builder type(String type) {
            $.type = type;
            return this;
        }

        public GetInstanceGuestAccelerator build() {
            $.count = Objects.requireNonNull($.count, "expected parameter 'count' to be non-null");
            $.type = Objects.requireNonNull($.type, "expected parameter 'type' to be non-null");
            return $;
        }
    }

}
