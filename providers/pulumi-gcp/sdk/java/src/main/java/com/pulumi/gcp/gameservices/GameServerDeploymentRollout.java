// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.gameservices;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.gcp.Utilities;
import com.pulumi.gcp.gameservices.GameServerDeploymentRolloutArgs;
import com.pulumi.gcp.gameservices.inputs.GameServerDeploymentRolloutState;
import com.pulumi.gcp.gameservices.outputs.GameServerDeploymentRolloutGameServerConfigOverride;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * This represents the rollout state. This is part of the game server
 * deployment.
 * 
 * To get more information about GameServerDeploymentRollout, see:
 * 
 * * [API documentation](https://cloud.google.com/game-servers/docs/reference/rest/v1beta/GameServerDeploymentRollout)
 * * How-to Guides
 *     * [Official Documentation](https://cloud.google.com/game-servers/docs)
 * 
 * ## Example Usage
 * 
 * ## Import
 * 
 * GameServerDeploymentRollout can be imported using any of these accepted formats
 * 
 * ```sh
 *  $ pulumi import gcp:gameservices/gameServerDeploymentRollout:GameServerDeploymentRollout default projects/{{project}}/locations/global/gameServerDeployments/{{deployment_id}}/rollout
 * ```
 * 
 * ```sh
 *  $ pulumi import gcp:gameservices/gameServerDeploymentRollout:GameServerDeploymentRollout default {{project}}/{{deployment_id}}
 * ```
 * 
 * ```sh
 *  $ pulumi import gcp:gameservices/gameServerDeploymentRollout:GameServerDeploymentRollout default {{deployment_id}}
 * ```
 * 
 */
@ResourceType(type="gcp:gameservices/gameServerDeploymentRollout:GameServerDeploymentRollout")
public class GameServerDeploymentRollout extends com.pulumi.resources.CustomResource {
    /**
     * This field points to the game server config that is
     * applied by default to all realms and clusters. For example,
     * `projects/my-project/locations/global/gameServerDeployments/my-game/configs/my-config`.
     * 
     */
    @Export(name="defaultGameServerConfig", type=String.class, parameters={})
    private Output<String> defaultGameServerConfig;

    /**
     * @return This field points to the game server config that is
     * applied by default to all realms and clusters. For example,
     * `projects/my-project/locations/global/gameServerDeployments/my-game/configs/my-config`.
     * 
     */
    public Output<String> defaultGameServerConfig() {
        return this.defaultGameServerConfig;
    }
    /**
     * The deployment to rollout the new config to. Only 1 rollout must be associated with each deployment.
     * 
     */
    @Export(name="deploymentId", type=String.class, parameters={})
    private Output<String> deploymentId;

    /**
     * @return The deployment to rollout the new config to. Only 1 rollout must be associated with each deployment.
     * 
     */
    public Output<String> deploymentId() {
        return this.deploymentId;
    }
    /**
     * The game_server_config_overrides contains the per game server config
     * overrides. The overrides are processed in the order they are listed. As
     * soon as a match is found for a cluster, the rest of the list is not
     * processed.
     * Structure is documented below.
     * 
     */
    @Export(name="gameServerConfigOverrides", type=List.class, parameters={GameServerDeploymentRolloutGameServerConfigOverride.class})
    private Output</* @Nullable */ List<GameServerDeploymentRolloutGameServerConfigOverride>> gameServerConfigOverrides;

    /**
     * @return The game_server_config_overrides contains the per game server config
     * overrides. The overrides are processed in the order they are listed. As
     * soon as a match is found for a cluster, the rest of the list is not
     * processed.
     * Structure is documented below.
     * 
     */
    public Output<Optional<List<GameServerDeploymentRolloutGameServerConfigOverride>>> gameServerConfigOverrides() {
        return Codegen.optional(this.gameServerConfigOverrides);
    }
    /**
     * The resource id of the game server deployment eg:
     * &#39;projects/my-project/locations/global/gameServerDeployments/my-deployment/rollout&#39;.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The resource id of the game server deployment eg:
     * &#39;projects/my-project/locations/global/gameServerDeployments/my-deployment/rollout&#39;.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Export(name="project", type=String.class, parameters={})
    private Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Output<String> project() {
        return this.project;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public GameServerDeploymentRollout(String name) {
        this(name, GameServerDeploymentRolloutArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public GameServerDeploymentRollout(String name, GameServerDeploymentRolloutArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public GameServerDeploymentRollout(String name, GameServerDeploymentRolloutArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:gameservices/gameServerDeploymentRollout:GameServerDeploymentRollout", name, args == null ? GameServerDeploymentRolloutArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private GameServerDeploymentRollout(String name, Output<String> id, @Nullable GameServerDeploymentRolloutState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:gameservices/gameServerDeploymentRollout:GameServerDeploymentRollout", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static GameServerDeploymentRollout get(String name, Output<String> id, @Nullable GameServerDeploymentRolloutState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new GameServerDeploymentRollout(name, id, state, options);
    }
}
