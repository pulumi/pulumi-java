// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.container.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.container.inputs.AzureNodePoolConfigRootVolumeGetArgs;
import com.pulumi.gcp.container.inputs.AzureNodePoolConfigSshConfigGetArgs;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AzureNodePoolConfigGetArgs extends com.pulumi.resources.ResourceArgs {

    public static final AzureNodePoolConfigGetArgs Empty = new AzureNodePoolConfigGetArgs();

    /**
     * Optional. Configuration related to the root volume provisioned for each node pool machine. When unspecified, it defaults to a 32-GiB Azure Disk.
     * 
     */
    @Import(name="rootVolume")
    private @Nullable Output<AzureNodePoolConfigRootVolumeGetArgs> rootVolume;

    public Optional<Output<AzureNodePoolConfigRootVolumeGetArgs>> rootVolume() {
        return Optional.ofNullable(this.rootVolume);
    }

    /**
     * Required. SSH configuration for how to access the node pool machines.
     * 
     */
    @Import(name="sshConfig", required=true)
    private Output<AzureNodePoolConfigSshConfigGetArgs> sshConfig;

    public Output<AzureNodePoolConfigSshConfigGetArgs> sshConfig() {
        return this.sshConfig;
    }

    /**
     * Optional. A set of tags to apply to all underlying Azure resources for this node pool. This currently only includes Virtual Machine Scale Sets. Specify at most 50 pairs containing alphanumerics, spaces, and symbols (.+-=_:@/). Keys can be up to 127 Unicode characters. Values can be up to 255 Unicode characters.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * Optional. The Azure VM size name. Example: `Standard_DS2_v2`. See (/anthos/clusters/docs/azure/reference/supported-vms) for options. When unspecified, it defaults to `Standard_DS2_v2`.
     * 
     */
    @Import(name="vmSize")
    private @Nullable Output<String> vmSize;

    public Optional<Output<String>> vmSize() {
        return Optional.ofNullable(this.vmSize);
    }

    private AzureNodePoolConfigGetArgs() {}

    private AzureNodePoolConfigGetArgs(AzureNodePoolConfigGetArgs $) {
        this.rootVolume = $.rootVolume;
        this.sshConfig = $.sshConfig;
        this.tags = $.tags;
        this.vmSize = $.vmSize;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AzureNodePoolConfigGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AzureNodePoolConfigGetArgs $;

        public Builder() {
            $ = new AzureNodePoolConfigGetArgs();
        }

        public Builder(AzureNodePoolConfigGetArgs defaults) {
            $ = new AzureNodePoolConfigGetArgs(Objects.requireNonNull(defaults));
        }

        public Builder rootVolume(@Nullable Output<AzureNodePoolConfigRootVolumeGetArgs> rootVolume) {
            $.rootVolume = rootVolume;
            return this;
        }

        public Builder rootVolume(AzureNodePoolConfigRootVolumeGetArgs rootVolume) {
            return rootVolume(Output.of(rootVolume));
        }

        public Builder sshConfig(Output<AzureNodePoolConfigSshConfigGetArgs> sshConfig) {
            $.sshConfig = sshConfig;
            return this;
        }

        public Builder sshConfig(AzureNodePoolConfigSshConfigGetArgs sshConfig) {
            return sshConfig(Output.of(sshConfig));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public Builder vmSize(@Nullable Output<String> vmSize) {
            $.vmSize = vmSize;
            return this;
        }

        public Builder vmSize(String vmSize) {
            return vmSize(Output.of(vmSize));
        }

        public AzureNodePoolConfigGetArgs build() {
            $.sshConfig = Objects.requireNonNull($.sshConfig, "expected parameter 'sshConfig' to be non-null");
            return $;
        }
    }

}
