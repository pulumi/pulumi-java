// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.composer.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.composer.inputs.GetEnvironmentConfigDatabaseConfig;
import com.pulumi.gcp.composer.inputs.GetEnvironmentConfigEncryptionConfig;
import com.pulumi.gcp.composer.inputs.GetEnvironmentConfigMaintenanceWindow;
import com.pulumi.gcp.composer.inputs.GetEnvironmentConfigMasterAuthorizedNetworksConfig;
import com.pulumi.gcp.composer.inputs.GetEnvironmentConfigNodeConfig;
import com.pulumi.gcp.composer.inputs.GetEnvironmentConfigPrivateEnvironmentConfig;
import com.pulumi.gcp.composer.inputs.GetEnvironmentConfigSoftwareConfig;
import com.pulumi.gcp.composer.inputs.GetEnvironmentConfigWebServerConfig;
import com.pulumi.gcp.composer.inputs.GetEnvironmentConfigWebServerNetworkAccessControl;
import com.pulumi.gcp.composer.inputs.GetEnvironmentConfigWorkloadsConfig;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class GetEnvironmentConfig extends com.pulumi.resources.InvokeArgs {

    public static final GetEnvironmentConfig Empty = new GetEnvironmentConfig();

    @Import(name="airflowUri", required=true)
    private String airflowUri;

    public String airflowUri() {
        return this.airflowUri;
    }

    @Import(name="dagGcsPrefix", required=true)
    private String dagGcsPrefix;

    public String dagGcsPrefix() {
        return this.dagGcsPrefix;
    }

    @Import(name="databaseConfigs", required=true)
    private List<GetEnvironmentConfigDatabaseConfig> databaseConfigs;

    public List<GetEnvironmentConfigDatabaseConfig> databaseConfigs() {
        return this.databaseConfigs;
    }

    @Import(name="encryptionConfigs", required=true)
    private List<GetEnvironmentConfigEncryptionConfig> encryptionConfigs;

    public List<GetEnvironmentConfigEncryptionConfig> encryptionConfigs() {
        return this.encryptionConfigs;
    }

    @Import(name="environmentSize", required=true)
    private String environmentSize;

    public String environmentSize() {
        return this.environmentSize;
    }

    @Import(name="gkeCluster", required=true)
    private String gkeCluster;

    public String gkeCluster() {
        return this.gkeCluster;
    }

    @Import(name="maintenanceWindows", required=true)
    private List<GetEnvironmentConfigMaintenanceWindow> maintenanceWindows;

    public List<GetEnvironmentConfigMaintenanceWindow> maintenanceWindows() {
        return this.maintenanceWindows;
    }

    @Import(name="masterAuthorizedNetworksConfigs", required=true)
    private List<GetEnvironmentConfigMasterAuthorizedNetworksConfig> masterAuthorizedNetworksConfigs;

    public List<GetEnvironmentConfigMasterAuthorizedNetworksConfig> masterAuthorizedNetworksConfigs() {
        return this.masterAuthorizedNetworksConfigs;
    }

    @Import(name="nodeConfigs", required=true)
    private List<GetEnvironmentConfigNodeConfig> nodeConfigs;

    public List<GetEnvironmentConfigNodeConfig> nodeConfigs() {
        return this.nodeConfigs;
    }

    @Import(name="nodeCount", required=true)
    private Integer nodeCount;

    public Integer nodeCount() {
        return this.nodeCount;
    }

    @Import(name="privateEnvironmentConfigs", required=true)
    private List<GetEnvironmentConfigPrivateEnvironmentConfig> privateEnvironmentConfigs;

    public List<GetEnvironmentConfigPrivateEnvironmentConfig> privateEnvironmentConfigs() {
        return this.privateEnvironmentConfigs;
    }

    @Import(name="softwareConfigs", required=true)
    private List<GetEnvironmentConfigSoftwareConfig> softwareConfigs;

    public List<GetEnvironmentConfigSoftwareConfig> softwareConfigs() {
        return this.softwareConfigs;
    }

    @Import(name="webServerConfigs", required=true)
    private List<GetEnvironmentConfigWebServerConfig> webServerConfigs;

    public List<GetEnvironmentConfigWebServerConfig> webServerConfigs() {
        return this.webServerConfigs;
    }

    @Import(name="webServerNetworkAccessControls", required=true)
    private List<GetEnvironmentConfigWebServerNetworkAccessControl> webServerNetworkAccessControls;

    public List<GetEnvironmentConfigWebServerNetworkAccessControl> webServerNetworkAccessControls() {
        return this.webServerNetworkAccessControls;
    }

    @Import(name="workloadsConfigs", required=true)
    private List<GetEnvironmentConfigWorkloadsConfig> workloadsConfigs;

    public List<GetEnvironmentConfigWorkloadsConfig> workloadsConfigs() {
        return this.workloadsConfigs;
    }

    private GetEnvironmentConfig() {}

    private GetEnvironmentConfig(GetEnvironmentConfig $) {
        this.airflowUri = $.airflowUri;
        this.dagGcsPrefix = $.dagGcsPrefix;
        this.databaseConfigs = $.databaseConfigs;
        this.encryptionConfigs = $.encryptionConfigs;
        this.environmentSize = $.environmentSize;
        this.gkeCluster = $.gkeCluster;
        this.maintenanceWindows = $.maintenanceWindows;
        this.masterAuthorizedNetworksConfigs = $.masterAuthorizedNetworksConfigs;
        this.nodeConfigs = $.nodeConfigs;
        this.nodeCount = $.nodeCount;
        this.privateEnvironmentConfigs = $.privateEnvironmentConfigs;
        this.softwareConfigs = $.softwareConfigs;
        this.webServerConfigs = $.webServerConfigs;
        this.webServerNetworkAccessControls = $.webServerNetworkAccessControls;
        this.workloadsConfigs = $.workloadsConfigs;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetEnvironmentConfig defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetEnvironmentConfig $;

        public Builder() {
            $ = new GetEnvironmentConfig();
        }

        public Builder(GetEnvironmentConfig defaults) {
            $ = new GetEnvironmentConfig(Objects.requireNonNull(defaults));
        }

        public Builder airflowUri(String airflowUri) {
            $.airflowUri = airflowUri;
            return this;
        }

        public Builder dagGcsPrefix(String dagGcsPrefix) {
            $.dagGcsPrefix = dagGcsPrefix;
            return this;
        }

        public Builder databaseConfigs(List<GetEnvironmentConfigDatabaseConfig> databaseConfigs) {
            $.databaseConfigs = databaseConfigs;
            return this;
        }

        public Builder databaseConfigs(GetEnvironmentConfigDatabaseConfig... databaseConfigs) {
            return databaseConfigs(List.of(databaseConfigs));
        }

        public Builder encryptionConfigs(List<GetEnvironmentConfigEncryptionConfig> encryptionConfigs) {
            $.encryptionConfigs = encryptionConfigs;
            return this;
        }

        public Builder encryptionConfigs(GetEnvironmentConfigEncryptionConfig... encryptionConfigs) {
            return encryptionConfigs(List.of(encryptionConfigs));
        }

        public Builder environmentSize(String environmentSize) {
            $.environmentSize = environmentSize;
            return this;
        }

        public Builder gkeCluster(String gkeCluster) {
            $.gkeCluster = gkeCluster;
            return this;
        }

        public Builder maintenanceWindows(List<GetEnvironmentConfigMaintenanceWindow> maintenanceWindows) {
            $.maintenanceWindows = maintenanceWindows;
            return this;
        }

        public Builder maintenanceWindows(GetEnvironmentConfigMaintenanceWindow... maintenanceWindows) {
            return maintenanceWindows(List.of(maintenanceWindows));
        }

        public Builder masterAuthorizedNetworksConfigs(List<GetEnvironmentConfigMasterAuthorizedNetworksConfig> masterAuthorizedNetworksConfigs) {
            $.masterAuthorizedNetworksConfigs = masterAuthorizedNetworksConfigs;
            return this;
        }

        public Builder masterAuthorizedNetworksConfigs(GetEnvironmentConfigMasterAuthorizedNetworksConfig... masterAuthorizedNetworksConfigs) {
            return masterAuthorizedNetworksConfigs(List.of(masterAuthorizedNetworksConfigs));
        }

        public Builder nodeConfigs(List<GetEnvironmentConfigNodeConfig> nodeConfigs) {
            $.nodeConfigs = nodeConfigs;
            return this;
        }

        public Builder nodeConfigs(GetEnvironmentConfigNodeConfig... nodeConfigs) {
            return nodeConfigs(List.of(nodeConfigs));
        }

        public Builder nodeCount(Integer nodeCount) {
            $.nodeCount = nodeCount;
            return this;
        }

        public Builder privateEnvironmentConfigs(List<GetEnvironmentConfigPrivateEnvironmentConfig> privateEnvironmentConfigs) {
            $.privateEnvironmentConfigs = privateEnvironmentConfigs;
            return this;
        }

        public Builder privateEnvironmentConfigs(GetEnvironmentConfigPrivateEnvironmentConfig... privateEnvironmentConfigs) {
            return privateEnvironmentConfigs(List.of(privateEnvironmentConfigs));
        }

        public Builder softwareConfigs(List<GetEnvironmentConfigSoftwareConfig> softwareConfigs) {
            $.softwareConfigs = softwareConfigs;
            return this;
        }

        public Builder softwareConfigs(GetEnvironmentConfigSoftwareConfig... softwareConfigs) {
            return softwareConfigs(List.of(softwareConfigs));
        }

        public Builder webServerConfigs(List<GetEnvironmentConfigWebServerConfig> webServerConfigs) {
            $.webServerConfigs = webServerConfigs;
            return this;
        }

        public Builder webServerConfigs(GetEnvironmentConfigWebServerConfig... webServerConfigs) {
            return webServerConfigs(List.of(webServerConfigs));
        }

        public Builder webServerNetworkAccessControls(List<GetEnvironmentConfigWebServerNetworkAccessControl> webServerNetworkAccessControls) {
            $.webServerNetworkAccessControls = webServerNetworkAccessControls;
            return this;
        }

        public Builder webServerNetworkAccessControls(GetEnvironmentConfigWebServerNetworkAccessControl... webServerNetworkAccessControls) {
            return webServerNetworkAccessControls(List.of(webServerNetworkAccessControls));
        }

        public Builder workloadsConfigs(List<GetEnvironmentConfigWorkloadsConfig> workloadsConfigs) {
            $.workloadsConfigs = workloadsConfigs;
            return this;
        }

        public Builder workloadsConfigs(GetEnvironmentConfigWorkloadsConfig... workloadsConfigs) {
            return workloadsConfigs(List.of(workloadsConfigs));
        }

        public GetEnvironmentConfig build() {
            $.airflowUri = Objects.requireNonNull($.airflowUri, "expected parameter 'airflowUri' to be non-null");
            $.dagGcsPrefix = Objects.requireNonNull($.dagGcsPrefix, "expected parameter 'dagGcsPrefix' to be non-null");
            $.databaseConfigs = Objects.requireNonNull($.databaseConfigs, "expected parameter 'databaseConfigs' to be non-null");
            $.encryptionConfigs = Objects.requireNonNull($.encryptionConfigs, "expected parameter 'encryptionConfigs' to be non-null");
            $.environmentSize = Objects.requireNonNull($.environmentSize, "expected parameter 'environmentSize' to be non-null");
            $.gkeCluster = Objects.requireNonNull($.gkeCluster, "expected parameter 'gkeCluster' to be non-null");
            $.maintenanceWindows = Objects.requireNonNull($.maintenanceWindows, "expected parameter 'maintenanceWindows' to be non-null");
            $.masterAuthorizedNetworksConfigs = Objects.requireNonNull($.masterAuthorizedNetworksConfigs, "expected parameter 'masterAuthorizedNetworksConfigs' to be non-null");
            $.nodeConfigs = Objects.requireNonNull($.nodeConfigs, "expected parameter 'nodeConfigs' to be non-null");
            $.nodeCount = Objects.requireNonNull($.nodeCount, "expected parameter 'nodeCount' to be non-null");
            $.privateEnvironmentConfigs = Objects.requireNonNull($.privateEnvironmentConfigs, "expected parameter 'privateEnvironmentConfigs' to be non-null");
            $.softwareConfigs = Objects.requireNonNull($.softwareConfigs, "expected parameter 'softwareConfigs' to be non-null");
            $.webServerConfigs = Objects.requireNonNull($.webServerConfigs, "expected parameter 'webServerConfigs' to be non-null");
            $.webServerNetworkAccessControls = Objects.requireNonNull($.webServerNetworkAccessControls, "expected parameter 'webServerNetworkAccessControls' to be non-null");
            $.workloadsConfigs = Objects.requireNonNull($.workloadsConfigs, "expected parameter 'workloadsConfigs' to be non-null");
            return $;
        }
    }

}
