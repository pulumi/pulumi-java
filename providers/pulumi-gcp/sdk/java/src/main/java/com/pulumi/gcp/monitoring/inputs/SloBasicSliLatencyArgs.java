// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.monitoring.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;


public final class SloBasicSliLatencyArgs extends com.pulumi.resources.ResourceArgs {

    public static final SloBasicSliLatencyArgs Empty = new SloBasicSliLatencyArgs();

    /**
     * A duration string, e.g. 10s.
     * Good service is defined to be the count of requests made to
     * this service that return in no more than threshold.
     * 
     */
    @Import(name="threshold", required=true)
      private final Output<String> threshold;

    public Output<String> threshold() {
        return this.threshold;
    }

    public SloBasicSliLatencyArgs(Output<String> threshold) {
        this.threshold = Objects.requireNonNull(threshold, "expected parameter 'threshold' to be non-null");
    }

    private SloBasicSliLatencyArgs() {
        this.threshold = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SloBasicSliLatencyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> threshold;

        public Builder() {
    	      // Empty
        }

        public Builder(SloBasicSliLatencyArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.threshold = defaults.threshold;
        }

        public Builder threshold(Output<String> threshold) {
            this.threshold = Objects.requireNonNull(threshold);
            return this;
        }
        public Builder threshold(String threshold) {
            this.threshold = Output.of(Objects.requireNonNull(threshold));
            return this;
        }        public SloBasicSliLatencyArgs build() {
            return new SloBasicSliLatencyArgs(threshold);
        }
    }
}
