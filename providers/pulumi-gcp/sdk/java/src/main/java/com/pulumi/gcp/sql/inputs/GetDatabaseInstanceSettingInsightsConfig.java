// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.sql.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.util.Objects;


public final class GetDatabaseInstanceSettingInsightsConfig extends com.pulumi.resources.InvokeArgs {

    public static final GetDatabaseInstanceSettingInsightsConfig Empty = new GetDatabaseInstanceSettingInsightsConfig();

    @Import(name="queryInsightsEnabled", required=true)
    private Boolean queryInsightsEnabled;

    public Boolean queryInsightsEnabled() {
        return this.queryInsightsEnabled;
    }

    @Import(name="queryStringLength", required=true)
    private Integer queryStringLength;

    public Integer queryStringLength() {
        return this.queryStringLength;
    }

    @Import(name="recordApplicationTags", required=true)
    private Boolean recordApplicationTags;

    public Boolean recordApplicationTags() {
        return this.recordApplicationTags;
    }

    @Import(name="recordClientAddress", required=true)
    private Boolean recordClientAddress;

    public Boolean recordClientAddress() {
        return this.recordClientAddress;
    }

    private GetDatabaseInstanceSettingInsightsConfig() {}

    private GetDatabaseInstanceSettingInsightsConfig(GetDatabaseInstanceSettingInsightsConfig $) {
        this.queryInsightsEnabled = $.queryInsightsEnabled;
        this.queryStringLength = $.queryStringLength;
        this.recordApplicationTags = $.recordApplicationTags;
        this.recordClientAddress = $.recordClientAddress;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetDatabaseInstanceSettingInsightsConfig defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetDatabaseInstanceSettingInsightsConfig $;

        public Builder() {
            $ = new GetDatabaseInstanceSettingInsightsConfig();
        }

        public Builder(GetDatabaseInstanceSettingInsightsConfig defaults) {
            $ = new GetDatabaseInstanceSettingInsightsConfig(Objects.requireNonNull(defaults));
        }

        public Builder queryInsightsEnabled(Boolean queryInsightsEnabled) {
            $.queryInsightsEnabled = queryInsightsEnabled;
            return this;
        }

        public Builder queryStringLength(Integer queryStringLength) {
            $.queryStringLength = queryStringLength;
            return this;
        }

        public Builder recordApplicationTags(Boolean recordApplicationTags) {
            $.recordApplicationTags = recordApplicationTags;
            return this;
        }

        public Builder recordClientAddress(Boolean recordClientAddress) {
            $.recordClientAddress = recordClientAddress;
            return this;
        }

        public GetDatabaseInstanceSettingInsightsConfig build() {
            $.queryInsightsEnabled = Objects.requireNonNull($.queryInsightsEnabled, "expected parameter 'queryInsightsEnabled' to be non-null");
            $.queryStringLength = Objects.requireNonNull($.queryStringLength, "expected parameter 'queryStringLength' to be non-null");
            $.recordApplicationTags = Objects.requireNonNull($.recordApplicationTags, "expected parameter 'recordApplicationTags' to be non-null");
            $.recordClientAddress = Objects.requireNonNull($.recordClientAddress, "expected parameter 'recordClientAddress' to be non-null");
            return $;
        }
    }

}
