// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.compute.inputs.GetBackendServiceCdnPolicyCacheKeyPolicy;
import com.pulumi.gcp.compute.inputs.GetBackendServiceCdnPolicyNegativeCachingPolicy;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class GetBackendServiceCdnPolicy extends com.pulumi.resources.InvokeArgs {

    public static final GetBackendServiceCdnPolicy Empty = new GetBackendServiceCdnPolicy();

    @Import(name="cacheKeyPolicies", required=true)
    private List<GetBackendServiceCdnPolicyCacheKeyPolicy> cacheKeyPolicies;

    public List<GetBackendServiceCdnPolicyCacheKeyPolicy> cacheKeyPolicies() {
        return this.cacheKeyPolicies;
    }

    @Import(name="cacheMode", required=true)
    private String cacheMode;

    public String cacheMode() {
        return this.cacheMode;
    }

    @Import(name="clientTtl", required=true)
    private Integer clientTtl;

    public Integer clientTtl() {
        return this.clientTtl;
    }

    @Import(name="defaultTtl", required=true)
    private Integer defaultTtl;

    public Integer defaultTtl() {
        return this.defaultTtl;
    }

    @Import(name="maxTtl", required=true)
    private Integer maxTtl;

    public Integer maxTtl() {
        return this.maxTtl;
    }

    @Import(name="negativeCaching", required=true)
    private Boolean negativeCaching;

    public Boolean negativeCaching() {
        return this.negativeCaching;
    }

    @Import(name="negativeCachingPolicies", required=true)
    private List<GetBackendServiceCdnPolicyNegativeCachingPolicy> negativeCachingPolicies;

    public List<GetBackendServiceCdnPolicyNegativeCachingPolicy> negativeCachingPolicies() {
        return this.negativeCachingPolicies;
    }

    @Import(name="serveWhileStale", required=true)
    private Integer serveWhileStale;

    public Integer serveWhileStale() {
        return this.serveWhileStale;
    }

    @Import(name="signedUrlCacheMaxAgeSec", required=true)
    private Integer signedUrlCacheMaxAgeSec;

    public Integer signedUrlCacheMaxAgeSec() {
        return this.signedUrlCacheMaxAgeSec;
    }

    private GetBackendServiceCdnPolicy() {}

    private GetBackendServiceCdnPolicy(GetBackendServiceCdnPolicy $) {
        this.cacheKeyPolicies = $.cacheKeyPolicies;
        this.cacheMode = $.cacheMode;
        this.clientTtl = $.clientTtl;
        this.defaultTtl = $.defaultTtl;
        this.maxTtl = $.maxTtl;
        this.negativeCaching = $.negativeCaching;
        this.negativeCachingPolicies = $.negativeCachingPolicies;
        this.serveWhileStale = $.serveWhileStale;
        this.signedUrlCacheMaxAgeSec = $.signedUrlCacheMaxAgeSec;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetBackendServiceCdnPolicy defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetBackendServiceCdnPolicy $;

        public Builder() {
            $ = new GetBackendServiceCdnPolicy();
        }

        public Builder(GetBackendServiceCdnPolicy defaults) {
            $ = new GetBackendServiceCdnPolicy(Objects.requireNonNull(defaults));
        }

        public Builder cacheKeyPolicies(List<GetBackendServiceCdnPolicyCacheKeyPolicy> cacheKeyPolicies) {
            $.cacheKeyPolicies = cacheKeyPolicies;
            return this;
        }

        public Builder cacheKeyPolicies(GetBackendServiceCdnPolicyCacheKeyPolicy... cacheKeyPolicies) {
            return cacheKeyPolicies(List.of(cacheKeyPolicies));
        }

        public Builder cacheMode(String cacheMode) {
            $.cacheMode = cacheMode;
            return this;
        }

        public Builder clientTtl(Integer clientTtl) {
            $.clientTtl = clientTtl;
            return this;
        }

        public Builder defaultTtl(Integer defaultTtl) {
            $.defaultTtl = defaultTtl;
            return this;
        }

        public Builder maxTtl(Integer maxTtl) {
            $.maxTtl = maxTtl;
            return this;
        }

        public Builder negativeCaching(Boolean negativeCaching) {
            $.negativeCaching = negativeCaching;
            return this;
        }

        public Builder negativeCachingPolicies(List<GetBackendServiceCdnPolicyNegativeCachingPolicy> negativeCachingPolicies) {
            $.negativeCachingPolicies = negativeCachingPolicies;
            return this;
        }

        public Builder negativeCachingPolicies(GetBackendServiceCdnPolicyNegativeCachingPolicy... negativeCachingPolicies) {
            return negativeCachingPolicies(List.of(negativeCachingPolicies));
        }

        public Builder serveWhileStale(Integer serveWhileStale) {
            $.serveWhileStale = serveWhileStale;
            return this;
        }

        public Builder signedUrlCacheMaxAgeSec(Integer signedUrlCacheMaxAgeSec) {
            $.signedUrlCacheMaxAgeSec = signedUrlCacheMaxAgeSec;
            return this;
        }

        public GetBackendServiceCdnPolicy build() {
            $.cacheKeyPolicies = Objects.requireNonNull($.cacheKeyPolicies, "expected parameter 'cacheKeyPolicies' to be non-null");
            $.cacheMode = Objects.requireNonNull($.cacheMode, "expected parameter 'cacheMode' to be non-null");
            $.clientTtl = Objects.requireNonNull($.clientTtl, "expected parameter 'clientTtl' to be non-null");
            $.defaultTtl = Objects.requireNonNull($.defaultTtl, "expected parameter 'defaultTtl' to be non-null");
            $.maxTtl = Objects.requireNonNull($.maxTtl, "expected parameter 'maxTtl' to be non-null");
            $.negativeCaching = Objects.requireNonNull($.negativeCaching, "expected parameter 'negativeCaching' to be non-null");
            $.negativeCachingPolicies = Objects.requireNonNull($.negativeCachingPolicies, "expected parameter 'negativeCachingPolicies' to be non-null");
            $.serveWhileStale = Objects.requireNonNull($.serveWhileStale, "expected parameter 'serveWhileStale' to be non-null");
            $.signedUrlCacheMaxAgeSec = Objects.requireNonNull($.signedUrlCacheMaxAgeSec, "expected parameter 'signedUrlCacheMaxAgeSec' to be non-null");
            return $;
        }
    }

}
