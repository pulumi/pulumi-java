// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.notebooks.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class EnvironmentVmImageGetArgs extends com.pulumi.resources.ResourceArgs {

    public static final EnvironmentVmImageGetArgs Empty = new EnvironmentVmImageGetArgs();

    /**
     * Use this VM image family to find the image; the newest image in this family will be used.
     * 
     */
    @Import(name="imageFamily")
    private @Nullable Output<String> imageFamily;

    public Optional<Output<String>> imageFamily() {
        return Optional.ofNullable(this.imageFamily);
    }

    /**
     * Use VM image name to find the image.
     * 
     */
    @Import(name="imageName")
    private @Nullable Output<String> imageName;

    public Optional<Output<String>> imageName() {
        return Optional.ofNullable(this.imageName);
    }

    /**
     * The name of the Google Cloud project that this VM image belongs to.
     * Format: projects/{project_id}
     * 
     */
    @Import(name="project", required=true)
    private Output<String> project;

    public Output<String> project() {
        return this.project;
    }

    private EnvironmentVmImageGetArgs() {}

    private EnvironmentVmImageGetArgs(EnvironmentVmImageGetArgs $) {
        this.imageFamily = $.imageFamily;
        this.imageName = $.imageName;
        this.project = $.project;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EnvironmentVmImageGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EnvironmentVmImageGetArgs $;

        public Builder() {
            $ = new EnvironmentVmImageGetArgs();
        }

        public Builder(EnvironmentVmImageGetArgs defaults) {
            $ = new EnvironmentVmImageGetArgs(Objects.requireNonNull(defaults));
        }

        public Builder imageFamily(@Nullable Output<String> imageFamily) {
            $.imageFamily = imageFamily;
            return this;
        }

        public Builder imageFamily(String imageFamily) {
            return imageFamily(Output.of(imageFamily));
        }

        public Builder imageName(@Nullable Output<String> imageName) {
            $.imageName = imageName;
            return this;
        }

        public Builder imageName(String imageName) {
            return imageName(Output.of(imageName));
        }

        public Builder project(Output<String> project) {
            $.project = project;
            return this;
        }

        public Builder project(String project) {
            return project(Output.of(project));
        }

        public EnvironmentVmImageGetArgs build() {
            $.project = Objects.requireNonNull($.project, "expected parameter 'project' to be non-null");
            return $;
        }
    }

}
