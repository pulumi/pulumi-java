// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.organizations.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class GetBillingAccountArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetBillingAccountArgs Empty = new GetBillingAccountArgs();

    /**
     * The name of the billing account in the form `{billing_account_id}` or `billingAccounts/{billing_account_id}`.
     * 
     */
    @Import(name="billingAccount")
    private Output</* @Nullable */ String> billingAccount;

    /**
     * @return The name of the billing account in the form `{billing_account_id}` or `billingAccounts/{billing_account_id}`.
     * 
     */
    public Output</* @Nullable */ String> billingAccount() {
        return this.billingAccount;
    }

    /**
     * The display name of the billing account.
     * 
     */
    @Import(name="displayName")
    private Output</* @Nullable */ String> displayName;

    /**
     * @return The display name of the billing account.
     * 
     */
    public Output</* @Nullable */ String> displayName() {
        return this.displayName;
    }

    /**
     * `true` if the billing account is open, `false` if the billing account is closed.
     * 
     */
    @Import(name="open")
    private Output</* @Nullable */ Boolean> open;

    /**
     * @return `true` if the billing account is open, `false` if the billing account is closed.
     * 
     */
    public Output</* @Nullable */ Boolean> open() {
        return this.open;
    }

    private GetBillingAccountArgs() {}

    private GetBillingAccountArgs(GetBillingAccountArgs $) {
        this.billingAccount = $.billingAccount;
        this.displayName = $.displayName;
        this.open = $.open;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetBillingAccountArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetBillingAccountArgs $;

        public Builder() {
            $ = new GetBillingAccountArgs();
        }

        public Builder(GetBillingAccountArgs defaults) {
            $ = new GetBillingAccountArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param billingAccount The name of the billing account in the form `{billing_account_id}` or `billingAccounts/{billing_account_id}`.
         * 
         * @return builder
         * 
         */
        public Builder billingAccount(Output</* @Nullable */ String> billingAccount) {
            $.billingAccount = billingAccount;
            return this;
        }

        /**
         * @param billingAccount The name of the billing account in the form `{billing_account_id}` or `billingAccounts/{billing_account_id}`.
         * 
         * @return builder
         * 
         */
        public Builder billingAccount(@Nullable String billingAccount) {
            return billingAccount(Output.of(billingAccount));
        }

        /**
         * @param displayName The display name of the billing account.
         * 
         * @return builder
         * 
         */
        public Builder displayName(Output</* @Nullable */ String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName The display name of the billing account.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param open `true` if the billing account is open, `false` if the billing account is closed.
         * 
         * @return builder
         * 
         */
        public Builder open(Output</* @Nullable */ Boolean> open) {
            $.open = open;
            return this;
        }

        /**
         * @param open `true` if the billing account is open, `false` if the billing account is closed.
         * 
         * @return builder
         * 
         */
        public Builder open(@Nullable Boolean open) {
            return open(Output.of(open));
        }

        public GetBillingAccountArgs build() {
            return $;
        }
    }

}
