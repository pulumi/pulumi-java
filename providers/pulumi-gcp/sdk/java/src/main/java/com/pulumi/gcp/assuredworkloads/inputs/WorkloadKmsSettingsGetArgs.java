// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.assuredworkloads.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;


public final class WorkloadKmsSettingsGetArgs extends com.pulumi.resources.ResourceArgs {

    public static final WorkloadKmsSettingsGetArgs Empty = new WorkloadKmsSettingsGetArgs();

    /**
     * Required. Input only. Immutable. The time at which the Key Management Service will automatically create a new version of the crypto key and mark it as the primary.
     * 
     */
    @Import(name="nextRotationTime", required=true)
      private final Output<String> nextRotationTime;

    public Output<String> nextRotationTime() {
        return this.nextRotationTime;
    }

    /**
     * Required. Input only. Immutable. will be advanced by this period when the Key Management Service automatically rotates a key. Must be at least 24 hours and at most 876,000 hours.
     * 
     */
    @Import(name="rotationPeriod", required=true)
      private final Output<String> rotationPeriod;

    public Output<String> rotationPeriod() {
        return this.rotationPeriod;
    }

    public WorkloadKmsSettingsGetArgs(
        Output<String> nextRotationTime,
        Output<String> rotationPeriod) {
        this.nextRotationTime = Objects.requireNonNull(nextRotationTime, "expected parameter 'nextRotationTime' to be non-null");
        this.rotationPeriod = Objects.requireNonNull(rotationPeriod, "expected parameter 'rotationPeriod' to be non-null");
    }

    private WorkloadKmsSettingsGetArgs() {
        this.nextRotationTime = Codegen.empty();
        this.rotationPeriod = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(WorkloadKmsSettingsGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> nextRotationTime;
        private Output<String> rotationPeriod;

        public Builder() {
    	      // Empty
        }

        public Builder(WorkloadKmsSettingsGetArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.nextRotationTime = defaults.nextRotationTime;
    	      this.rotationPeriod = defaults.rotationPeriod;
        }

        public Builder nextRotationTime(Output<String> nextRotationTime) {
            this.nextRotationTime = Objects.requireNonNull(nextRotationTime);
            return this;
        }
        public Builder nextRotationTime(String nextRotationTime) {
            this.nextRotationTime = Output.of(Objects.requireNonNull(nextRotationTime));
            return this;
        }
        public Builder rotationPeriod(Output<String> rotationPeriod) {
            this.rotationPeriod = Objects.requireNonNull(rotationPeriod);
            return this;
        }
        public Builder rotationPeriod(String rotationPeriod) {
            this.rotationPeriod = Output.of(Objects.requireNonNull(rotationPeriod));
            return this;
        }        public WorkloadKmsSettingsGetArgs build() {
            return new WorkloadKmsSettingsGetArgs(nextRotationTime, rotationPeriod);
        }
    }
}
