// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RouterPeerBfdGetArgs extends com.pulumi.resources.ResourceArgs {

    public static final RouterPeerBfdGetArgs Empty = new RouterPeerBfdGetArgs();

    /**
     * The minimum interval, in milliseconds, between BFD control packets
     * received from the peer router. The actual value is negotiated
     * between the two routers and is equal to the greater of this value
     * and the transmit interval of the other router. If set, this value
     * must be between 1000 and 30000.
     * 
     */
    @Import(name="minReceiveInterval")
    private @Nullable Output<Integer> minReceiveInterval;

    public Optional<Output<Integer>> minReceiveInterval() {
        return Optional.ofNullable(this.minReceiveInterval);
    }

    /**
     * The minimum interval, in milliseconds, between BFD control packets
     * transmitted to the peer router. The actual value is negotiated
     * between the two routers and is equal to the greater of this value
     * and the corresponding receive interval of the other router. If set,
     * this value must be between 1000 and 30000.
     * 
     */
    @Import(name="minTransmitInterval")
    private @Nullable Output<Integer> minTransmitInterval;

    public Optional<Output<Integer>> minTransmitInterval() {
        return Optional.ofNullable(this.minTransmitInterval);
    }

    /**
     * The number of consecutive BFD packets that must be missed before
     * BFD declares that a peer is unavailable. If set, the value must
     * be a value between 5 and 16.
     * 
     */
    @Import(name="multiplier")
    private @Nullable Output<Integer> multiplier;

    public Optional<Output<Integer>> multiplier() {
        return Optional.ofNullable(this.multiplier);
    }

    /**
     * The BFD session initialization mode for this BGP peer.
     * If set to `ACTIVE`, the Cloud Router will initiate the BFD session
     * for this BGP peer. If set to `PASSIVE`, the Cloud Router will wait
     * for the peer router to initiate the BFD session for this BGP peer.
     * If set to `DISABLED`, BFD is disabled for this BGP peer.
     * Possible values are `ACTIVE`, `DISABLED`, and `PASSIVE`.
     * 
     */
    @Import(name="sessionInitializationMode", required=true)
    private Output<String> sessionInitializationMode;

    public Output<String> sessionInitializationMode() {
        return this.sessionInitializationMode;
    }

    private RouterPeerBfdGetArgs() {}

    private RouterPeerBfdGetArgs(RouterPeerBfdGetArgs $) {
        this.minReceiveInterval = $.minReceiveInterval;
        this.minTransmitInterval = $.minTransmitInterval;
        this.multiplier = $.multiplier;
        this.sessionInitializationMode = $.sessionInitializationMode;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RouterPeerBfdGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RouterPeerBfdGetArgs $;

        public Builder() {
            $ = new RouterPeerBfdGetArgs();
        }

        public Builder(RouterPeerBfdGetArgs defaults) {
            $ = new RouterPeerBfdGetArgs(Objects.requireNonNull(defaults));
        }

        public Builder minReceiveInterval(@Nullable Output<Integer> minReceiveInterval) {
            $.minReceiveInterval = minReceiveInterval;
            return this;
        }

        public Builder minReceiveInterval(Integer minReceiveInterval) {
            return minReceiveInterval(Output.of(minReceiveInterval));
        }

        public Builder minTransmitInterval(@Nullable Output<Integer> minTransmitInterval) {
            $.minTransmitInterval = minTransmitInterval;
            return this;
        }

        public Builder minTransmitInterval(Integer minTransmitInterval) {
            return minTransmitInterval(Output.of(minTransmitInterval));
        }

        public Builder multiplier(@Nullable Output<Integer> multiplier) {
            $.multiplier = multiplier;
            return this;
        }

        public Builder multiplier(Integer multiplier) {
            return multiplier(Output.of(multiplier));
        }

        public Builder sessionInitializationMode(Output<String> sessionInitializationMode) {
            $.sessionInitializationMode = sessionInitializationMode;
            return this;
        }

        public Builder sessionInitializationMode(String sessionInitializationMode) {
            return sessionInitializationMode(Output.of(sessionInitializationMode));
        }

        public RouterPeerBfdGetArgs build() {
            $.sessionInitializationMode = Objects.requireNonNull($.sessionInitializationMode, "expected parameter 'sessionInitializationMode' to be non-null");
            return $;
        }
    }

}
