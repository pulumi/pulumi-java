// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.osconfig.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import com.pulumi.gcp.osconfig.inputs.PatchDeploymentRecurringScheduleMonthlyGetArgs;
import com.pulumi.gcp.osconfig.inputs.PatchDeploymentRecurringScheduleTimeOfDayGetArgs;
import com.pulumi.gcp.osconfig.inputs.PatchDeploymentRecurringScheduleTimeZoneGetArgs;
import com.pulumi.gcp.osconfig.inputs.PatchDeploymentRecurringScheduleWeeklyGetArgs;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class PatchDeploymentRecurringScheduleGetArgs extends com.pulumi.resources.ResourceArgs {

    public static final PatchDeploymentRecurringScheduleGetArgs Empty = new PatchDeploymentRecurringScheduleGetArgs();

    /**
     * The end time at which a recurring patch deployment schedule is no longer active.
     * A timestamp in RFC3339 UTC &#34;Zulu&#34; format, accurate to nanoseconds. Example: &#34;2014-10-02T15:01:23.045123456Z&#34;.
     * 
     */
    @Import(name="endTime")
      private final @Nullable Output<String> endTime;

    public Output<String> endTime() {
        return this.endTime == null ? Codegen.empty() : this.endTime;
    }

    /**
     * - 
     * The time the last patch job ran successfully.
     * A timestamp in RFC3339 UTC &#34;Zulu&#34; format, accurate to nanoseconds. Example: &#34;2014-10-02T15:01:23.045123456Z&#34;.
     * 
     */
    @Import(name="lastExecuteTime")
      private final @Nullable Output<String> lastExecuteTime;

    public Output<String> lastExecuteTime() {
        return this.lastExecuteTime == null ? Codegen.empty() : this.lastExecuteTime;
    }

    /**
     * Schedule with monthly executions.
     * Structure is documented below.
     * 
     */
    @Import(name="monthly")
      private final @Nullable Output<PatchDeploymentRecurringScheduleMonthlyGetArgs> monthly;

    public Output<PatchDeploymentRecurringScheduleMonthlyGetArgs> monthly() {
        return this.monthly == null ? Codegen.empty() : this.monthly;
    }

    /**
     * - 
     * The time the next patch job is scheduled to run.
     * A timestamp in RFC3339 UTC &#34;Zulu&#34; format, accurate to nanoseconds. Example: &#34;2014-10-02T15:01:23.045123456Z&#34;.
     * 
     */
    @Import(name="nextExecuteTime")
      private final @Nullable Output<String> nextExecuteTime;

    public Output<String> nextExecuteTime() {
        return this.nextExecuteTime == null ? Codegen.empty() : this.nextExecuteTime;
    }

    /**
     * The time that the recurring schedule becomes effective. Defaults to createTime of the patch deployment.
     * A timestamp in RFC3339 UTC &#34;Zulu&#34; format, accurate to nanoseconds. Example: &#34;2014-10-02T15:01:23.045123456Z&#34;.
     * 
     */
    @Import(name="startTime")
      private final @Nullable Output<String> startTime;

    public Output<String> startTime() {
        return this.startTime == null ? Codegen.empty() : this.startTime;
    }

    /**
     * Time of the day to run a recurring deployment.
     * Structure is documented below.
     * 
     */
    @Import(name="timeOfDay", required=true)
      private final Output<PatchDeploymentRecurringScheduleTimeOfDayGetArgs> timeOfDay;

    public Output<PatchDeploymentRecurringScheduleTimeOfDayGetArgs> timeOfDay() {
        return this.timeOfDay;
    }

    /**
     * Defines the time zone that timeOfDay is relative to. The rules for daylight saving time are
     * determined by the chosen time zone.
     * Structure is documented below.
     * 
     */
    @Import(name="timeZone", required=true)
      private final Output<PatchDeploymentRecurringScheduleTimeZoneGetArgs> timeZone;

    public Output<PatchDeploymentRecurringScheduleTimeZoneGetArgs> timeZone() {
        return this.timeZone;
    }

    /**
     * Schedule with weekly executions.
     * Structure is documented below.
     * 
     */
    @Import(name="weekly")
      private final @Nullable Output<PatchDeploymentRecurringScheduleWeeklyGetArgs> weekly;

    public Output<PatchDeploymentRecurringScheduleWeeklyGetArgs> weekly() {
        return this.weekly == null ? Codegen.empty() : this.weekly;
    }

    public PatchDeploymentRecurringScheduleGetArgs(
        @Nullable Output<String> endTime,
        @Nullable Output<String> lastExecuteTime,
        @Nullable Output<PatchDeploymentRecurringScheduleMonthlyGetArgs> monthly,
        @Nullable Output<String> nextExecuteTime,
        @Nullable Output<String> startTime,
        Output<PatchDeploymentRecurringScheduleTimeOfDayGetArgs> timeOfDay,
        Output<PatchDeploymentRecurringScheduleTimeZoneGetArgs> timeZone,
        @Nullable Output<PatchDeploymentRecurringScheduleWeeklyGetArgs> weekly) {
        this.endTime = endTime;
        this.lastExecuteTime = lastExecuteTime;
        this.monthly = monthly;
        this.nextExecuteTime = nextExecuteTime;
        this.startTime = startTime;
        this.timeOfDay = Objects.requireNonNull(timeOfDay, "expected parameter 'timeOfDay' to be non-null");
        this.timeZone = Objects.requireNonNull(timeZone, "expected parameter 'timeZone' to be non-null");
        this.weekly = weekly;
    }

    private PatchDeploymentRecurringScheduleGetArgs() {
        this.endTime = Codegen.empty();
        this.lastExecuteTime = Codegen.empty();
        this.monthly = Codegen.empty();
        this.nextExecuteTime = Codegen.empty();
        this.startTime = Codegen.empty();
        this.timeOfDay = Codegen.empty();
        this.timeZone = Codegen.empty();
        this.weekly = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PatchDeploymentRecurringScheduleGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> endTime;
        private @Nullable Output<String> lastExecuteTime;
        private @Nullable Output<PatchDeploymentRecurringScheduleMonthlyGetArgs> monthly;
        private @Nullable Output<String> nextExecuteTime;
        private @Nullable Output<String> startTime;
        private Output<PatchDeploymentRecurringScheduleTimeOfDayGetArgs> timeOfDay;
        private Output<PatchDeploymentRecurringScheduleTimeZoneGetArgs> timeZone;
        private @Nullable Output<PatchDeploymentRecurringScheduleWeeklyGetArgs> weekly;

        public Builder() {
    	      // Empty
        }

        public Builder(PatchDeploymentRecurringScheduleGetArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.endTime = defaults.endTime;
    	      this.lastExecuteTime = defaults.lastExecuteTime;
    	      this.monthly = defaults.monthly;
    	      this.nextExecuteTime = defaults.nextExecuteTime;
    	      this.startTime = defaults.startTime;
    	      this.timeOfDay = defaults.timeOfDay;
    	      this.timeZone = defaults.timeZone;
    	      this.weekly = defaults.weekly;
        }

        public Builder endTime(@Nullable Output<String> endTime) {
            this.endTime = endTime;
            return this;
        }
        public Builder endTime(@Nullable String endTime) {
            this.endTime = Codegen.ofNullable(endTime);
            return this;
        }
        public Builder lastExecuteTime(@Nullable Output<String> lastExecuteTime) {
            this.lastExecuteTime = lastExecuteTime;
            return this;
        }
        public Builder lastExecuteTime(@Nullable String lastExecuteTime) {
            this.lastExecuteTime = Codegen.ofNullable(lastExecuteTime);
            return this;
        }
        public Builder monthly(@Nullable Output<PatchDeploymentRecurringScheduleMonthlyGetArgs> monthly) {
            this.monthly = monthly;
            return this;
        }
        public Builder monthly(@Nullable PatchDeploymentRecurringScheduleMonthlyGetArgs monthly) {
            this.monthly = Codegen.ofNullable(monthly);
            return this;
        }
        public Builder nextExecuteTime(@Nullable Output<String> nextExecuteTime) {
            this.nextExecuteTime = nextExecuteTime;
            return this;
        }
        public Builder nextExecuteTime(@Nullable String nextExecuteTime) {
            this.nextExecuteTime = Codegen.ofNullable(nextExecuteTime);
            return this;
        }
        public Builder startTime(@Nullable Output<String> startTime) {
            this.startTime = startTime;
            return this;
        }
        public Builder startTime(@Nullable String startTime) {
            this.startTime = Codegen.ofNullable(startTime);
            return this;
        }
        public Builder timeOfDay(Output<PatchDeploymentRecurringScheduleTimeOfDayGetArgs> timeOfDay) {
            this.timeOfDay = Objects.requireNonNull(timeOfDay);
            return this;
        }
        public Builder timeOfDay(PatchDeploymentRecurringScheduleTimeOfDayGetArgs timeOfDay) {
            this.timeOfDay = Output.of(Objects.requireNonNull(timeOfDay));
            return this;
        }
        public Builder timeZone(Output<PatchDeploymentRecurringScheduleTimeZoneGetArgs> timeZone) {
            this.timeZone = Objects.requireNonNull(timeZone);
            return this;
        }
        public Builder timeZone(PatchDeploymentRecurringScheduleTimeZoneGetArgs timeZone) {
            this.timeZone = Output.of(Objects.requireNonNull(timeZone));
            return this;
        }
        public Builder weekly(@Nullable Output<PatchDeploymentRecurringScheduleWeeklyGetArgs> weekly) {
            this.weekly = weekly;
            return this;
        }
        public Builder weekly(@Nullable PatchDeploymentRecurringScheduleWeeklyGetArgs weekly) {
            this.weekly = Codegen.ofNullable(weekly);
            return this;
        }        public PatchDeploymentRecurringScheduleGetArgs build() {
            return new PatchDeploymentRecurringScheduleGetArgs(endTime, lastExecuteTime, monthly, nextExecuteTime, startTime, timeOfDay, timeZone, weekly);
        }
    }
}
