// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.container.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.gcp.container.outputs.ClusterAddonsConfigCloudrunConfig;
import com.pulumi.gcp.container.outputs.ClusterAddonsConfigConfigConnectorConfig;
import com.pulumi.gcp.container.outputs.ClusterAddonsConfigDnsCacheConfig;
import com.pulumi.gcp.container.outputs.ClusterAddonsConfigGcePersistentDiskCsiDriverConfig;
import com.pulumi.gcp.container.outputs.ClusterAddonsConfigGcpFilestoreCsiDriverConfig;
import com.pulumi.gcp.container.outputs.ClusterAddonsConfigHorizontalPodAutoscaling;
import com.pulumi.gcp.container.outputs.ClusterAddonsConfigHttpLoadBalancing;
import com.pulumi.gcp.container.outputs.ClusterAddonsConfigIstioConfig;
import com.pulumi.gcp.container.outputs.ClusterAddonsConfigKalmConfig;
import com.pulumi.gcp.container.outputs.ClusterAddonsConfigNetworkPolicyConfig;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ClusterAddonsConfig {
    /**
     * . Structure is documented below.
     * 
     */
    private final @Nullable ClusterAddonsConfigCloudrunConfig cloudrunConfig;
    /**
     * .
     * The status of the ConfigConnector addon. It is disabled by default; Set `enabled = true` to enable.
     * 
     */
    private final @Nullable ClusterAddonsConfigConfigConnectorConfig configConnectorConfig;
    /**
     * .
     * The status of the NodeLocal DNSCache addon. It is disabled by default.
     * Set `enabled = true` to enable.
     * 
     */
    private final @Nullable ClusterAddonsConfigDnsCacheConfig dnsCacheConfig;
    /**
     * .
     * Whether this cluster should enable the Google Compute Engine Persistent Disk Container Storage Interface (CSI) Driver. Defaults to disabled; set `enabled = true` to enable.
     * 
     */
    private final @Nullable ClusterAddonsConfigGcePersistentDiskCsiDriverConfig gcePersistentDiskCsiDriverConfig;
    /**
     * The status of the Filestore CSI driver addon,
     * which allows the usage of filestore instance as volumes.
     * It is disbaled by default; set `enabled = true` to enable.
     * 
     */
    private final @Nullable ClusterAddonsConfigGcpFilestoreCsiDriverConfig gcpFilestoreCsiDriverConfig;
    /**
     * The status of the Horizontal Pod Autoscaling
     * addon, which increases or decreases the number of replica pods a replication controller
     * has based on the resource usage of the existing pods.
     * It is enabled by default;
     * set `disabled = true` to disable.
     * 
     */
    private final @Nullable ClusterAddonsConfigHorizontalPodAutoscaling horizontalPodAutoscaling;
    /**
     * The status of the HTTP (L7) load balancing
     * controller addon, which makes it easy to set up HTTP load balancers for services in a
     * cluster. It is enabled by default; set `disabled = true` to disable.
     * 
     */
    private final @Nullable ClusterAddonsConfigHttpLoadBalancing httpLoadBalancing;
    /**
     * .
     * Structure is documented below.
     * 
     */
    private final @Nullable ClusterAddonsConfigIstioConfig istioConfig;
    /**
     * .
     * Configuration for the KALM addon, which manages the lifecycle of k8s. It is disabled by default; Set `enabled = true` to enable.
     * 
     */
    private final @Nullable ClusterAddonsConfigKalmConfig kalmConfig;
    /**
     * Whether we should enable the network policy addon
     * for the master.  This must be enabled in order to enable network policy for the nodes.
     * To enable this, you must also define a `network_policy` block,
     * otherwise nothing will happen.
     * It can only be disabled if the nodes already do not have network policies enabled.
     * Defaults to disabled; set `disabled = false` to enable.
     * 
     */
    private final @Nullable ClusterAddonsConfigNetworkPolicyConfig networkPolicyConfig;

    @CustomType.Constructor
    private ClusterAddonsConfig(
        @CustomType.Parameter("cloudrunConfig") @Nullable ClusterAddonsConfigCloudrunConfig cloudrunConfig,
        @CustomType.Parameter("configConnectorConfig") @Nullable ClusterAddonsConfigConfigConnectorConfig configConnectorConfig,
        @CustomType.Parameter("dnsCacheConfig") @Nullable ClusterAddonsConfigDnsCacheConfig dnsCacheConfig,
        @CustomType.Parameter("gcePersistentDiskCsiDriverConfig") @Nullable ClusterAddonsConfigGcePersistentDiskCsiDriverConfig gcePersistentDiskCsiDriverConfig,
        @CustomType.Parameter("gcpFilestoreCsiDriverConfig") @Nullable ClusterAddonsConfigGcpFilestoreCsiDriverConfig gcpFilestoreCsiDriverConfig,
        @CustomType.Parameter("horizontalPodAutoscaling") @Nullable ClusterAddonsConfigHorizontalPodAutoscaling horizontalPodAutoscaling,
        @CustomType.Parameter("httpLoadBalancing") @Nullable ClusterAddonsConfigHttpLoadBalancing httpLoadBalancing,
        @CustomType.Parameter("istioConfig") @Nullable ClusterAddonsConfigIstioConfig istioConfig,
        @CustomType.Parameter("kalmConfig") @Nullable ClusterAddonsConfigKalmConfig kalmConfig,
        @CustomType.Parameter("networkPolicyConfig") @Nullable ClusterAddonsConfigNetworkPolicyConfig networkPolicyConfig) {
        this.cloudrunConfig = cloudrunConfig;
        this.configConnectorConfig = configConnectorConfig;
        this.dnsCacheConfig = dnsCacheConfig;
        this.gcePersistentDiskCsiDriverConfig = gcePersistentDiskCsiDriverConfig;
        this.gcpFilestoreCsiDriverConfig = gcpFilestoreCsiDriverConfig;
        this.horizontalPodAutoscaling = horizontalPodAutoscaling;
        this.httpLoadBalancing = httpLoadBalancing;
        this.istioConfig = istioConfig;
        this.kalmConfig = kalmConfig;
        this.networkPolicyConfig = networkPolicyConfig;
    }

    /**
     * . Structure is documented below.
     * 
    */
    public Optional<ClusterAddonsConfigCloudrunConfig> cloudrunConfig() {
        return Optional.ofNullable(this.cloudrunConfig);
    }
    /**
     * .
     * The status of the ConfigConnector addon. It is disabled by default; Set `enabled = true` to enable.
     * 
    */
    public Optional<ClusterAddonsConfigConfigConnectorConfig> configConnectorConfig() {
        return Optional.ofNullable(this.configConnectorConfig);
    }
    /**
     * .
     * The status of the NodeLocal DNSCache addon. It is disabled by default.
     * Set `enabled = true` to enable.
     * 
    */
    public Optional<ClusterAddonsConfigDnsCacheConfig> dnsCacheConfig() {
        return Optional.ofNullable(this.dnsCacheConfig);
    }
    /**
     * .
     * Whether this cluster should enable the Google Compute Engine Persistent Disk Container Storage Interface (CSI) Driver. Defaults to disabled; set `enabled = true` to enable.
     * 
    */
    public Optional<ClusterAddonsConfigGcePersistentDiskCsiDriverConfig> gcePersistentDiskCsiDriverConfig() {
        return Optional.ofNullable(this.gcePersistentDiskCsiDriverConfig);
    }
    /**
     * The status of the Filestore CSI driver addon,
     * which allows the usage of filestore instance as volumes.
     * It is disbaled by default; set `enabled = true` to enable.
     * 
    */
    public Optional<ClusterAddonsConfigGcpFilestoreCsiDriverConfig> gcpFilestoreCsiDriverConfig() {
        return Optional.ofNullable(this.gcpFilestoreCsiDriverConfig);
    }
    /**
     * The status of the Horizontal Pod Autoscaling
     * addon, which increases or decreases the number of replica pods a replication controller
     * has based on the resource usage of the existing pods.
     * It is enabled by default;
     * set `disabled = true` to disable.
     * 
    */
    public Optional<ClusterAddonsConfigHorizontalPodAutoscaling> horizontalPodAutoscaling() {
        return Optional.ofNullable(this.horizontalPodAutoscaling);
    }
    /**
     * The status of the HTTP (L7) load balancing
     * controller addon, which makes it easy to set up HTTP load balancers for services in a
     * cluster. It is enabled by default; set `disabled = true` to disable.
     * 
    */
    public Optional<ClusterAddonsConfigHttpLoadBalancing> httpLoadBalancing() {
        return Optional.ofNullable(this.httpLoadBalancing);
    }
    /**
     * .
     * Structure is documented below.
     * 
    */
    public Optional<ClusterAddonsConfigIstioConfig> istioConfig() {
        return Optional.ofNullable(this.istioConfig);
    }
    /**
     * .
     * Configuration for the KALM addon, which manages the lifecycle of k8s. It is disabled by default; Set `enabled = true` to enable.
     * 
    */
    public Optional<ClusterAddonsConfigKalmConfig> kalmConfig() {
        return Optional.ofNullable(this.kalmConfig);
    }
    /**
     * Whether we should enable the network policy addon
     * for the master.  This must be enabled in order to enable network policy for the nodes.
     * To enable this, you must also define a `network_policy` block,
     * otherwise nothing will happen.
     * It can only be disabled if the nodes already do not have network policies enabled.
     * Defaults to disabled; set `disabled = false` to enable.
     * 
    */
    public Optional<ClusterAddonsConfigNetworkPolicyConfig> networkPolicyConfig() {
        return Optional.ofNullable(this.networkPolicyConfig);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ClusterAddonsConfig defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable ClusterAddonsConfigCloudrunConfig cloudrunConfig;
        private @Nullable ClusterAddonsConfigConfigConnectorConfig configConnectorConfig;
        private @Nullable ClusterAddonsConfigDnsCacheConfig dnsCacheConfig;
        private @Nullable ClusterAddonsConfigGcePersistentDiskCsiDriverConfig gcePersistentDiskCsiDriverConfig;
        private @Nullable ClusterAddonsConfigGcpFilestoreCsiDriverConfig gcpFilestoreCsiDriverConfig;
        private @Nullable ClusterAddonsConfigHorizontalPodAutoscaling horizontalPodAutoscaling;
        private @Nullable ClusterAddonsConfigHttpLoadBalancing httpLoadBalancing;
        private @Nullable ClusterAddonsConfigIstioConfig istioConfig;
        private @Nullable ClusterAddonsConfigKalmConfig kalmConfig;
        private @Nullable ClusterAddonsConfigNetworkPolicyConfig networkPolicyConfig;

        public Builder() {
    	      // Empty
        }

        public Builder(ClusterAddonsConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cloudrunConfig = defaults.cloudrunConfig;
    	      this.configConnectorConfig = defaults.configConnectorConfig;
    	      this.dnsCacheConfig = defaults.dnsCacheConfig;
    	      this.gcePersistentDiskCsiDriverConfig = defaults.gcePersistentDiskCsiDriverConfig;
    	      this.gcpFilestoreCsiDriverConfig = defaults.gcpFilestoreCsiDriverConfig;
    	      this.horizontalPodAutoscaling = defaults.horizontalPodAutoscaling;
    	      this.httpLoadBalancing = defaults.httpLoadBalancing;
    	      this.istioConfig = defaults.istioConfig;
    	      this.kalmConfig = defaults.kalmConfig;
    	      this.networkPolicyConfig = defaults.networkPolicyConfig;
        }

        public Builder cloudrunConfig(@Nullable ClusterAddonsConfigCloudrunConfig cloudrunConfig) {
            this.cloudrunConfig = cloudrunConfig;
            return this;
        }
        public Builder configConnectorConfig(@Nullable ClusterAddonsConfigConfigConnectorConfig configConnectorConfig) {
            this.configConnectorConfig = configConnectorConfig;
            return this;
        }
        public Builder dnsCacheConfig(@Nullable ClusterAddonsConfigDnsCacheConfig dnsCacheConfig) {
            this.dnsCacheConfig = dnsCacheConfig;
            return this;
        }
        public Builder gcePersistentDiskCsiDriverConfig(@Nullable ClusterAddonsConfigGcePersistentDiskCsiDriverConfig gcePersistentDiskCsiDriverConfig) {
            this.gcePersistentDiskCsiDriverConfig = gcePersistentDiskCsiDriverConfig;
            return this;
        }
        public Builder gcpFilestoreCsiDriverConfig(@Nullable ClusterAddonsConfigGcpFilestoreCsiDriverConfig gcpFilestoreCsiDriverConfig) {
            this.gcpFilestoreCsiDriverConfig = gcpFilestoreCsiDriverConfig;
            return this;
        }
        public Builder horizontalPodAutoscaling(@Nullable ClusterAddonsConfigHorizontalPodAutoscaling horizontalPodAutoscaling) {
            this.horizontalPodAutoscaling = horizontalPodAutoscaling;
            return this;
        }
        public Builder httpLoadBalancing(@Nullable ClusterAddonsConfigHttpLoadBalancing httpLoadBalancing) {
            this.httpLoadBalancing = httpLoadBalancing;
            return this;
        }
        public Builder istioConfig(@Nullable ClusterAddonsConfigIstioConfig istioConfig) {
            this.istioConfig = istioConfig;
            return this;
        }
        public Builder kalmConfig(@Nullable ClusterAddonsConfigKalmConfig kalmConfig) {
            this.kalmConfig = kalmConfig;
            return this;
        }
        public Builder networkPolicyConfig(@Nullable ClusterAddonsConfigNetworkPolicyConfig networkPolicyConfig) {
            this.networkPolicyConfig = networkPolicyConfig;
            return this;
        }        public ClusterAddonsConfig build() {
            return new ClusterAddonsConfig(cloudrunConfig, configConnectorConfig, dnsCacheConfig, gcePersistentDiskCsiDriverConfig, gcpFilestoreCsiDriverConfig, horizontalPodAutoscaling, httpLoadBalancing, istioConfig, kalmConfig, networkPolicyConfig);
        }
    }
}
