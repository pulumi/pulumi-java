// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import com.pulumi.gcp.compute.inputs.SecurityPolicyAdaptiveProtectionConfigGetArgs;
import com.pulumi.gcp.compute.inputs.SecurityPolicyRuleGetArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class SecurityPolicyState extends com.pulumi.resources.ResourceArgs {

    public static final SecurityPolicyState Empty = new SecurityPolicyState();

    /**
     * Configuration for [Google Cloud Armor Adaptive Protection](https://cloud.google.com/armor/docs/adaptive-protection-overview?hl=en). Structure is documented below.
     * 
     */
    @Import(name="adaptiveProtectionConfig")
      private final @Nullable Output<SecurityPolicyAdaptiveProtectionConfigGetArgs> adaptiveProtectionConfig;

    public Output<SecurityPolicyAdaptiveProtectionConfigGetArgs> adaptiveProtectionConfig() {
        return this.adaptiveProtectionConfig == null ? Codegen.empty() : this.adaptiveProtectionConfig;
    }

    /**
     * An optional description of this rule. Max size is 64.
     * 
     */
    @Import(name="description")
      private final @Nullable Output<String> description;

    public Output<String> description() {
        return this.description == null ? Codegen.empty() : this.description;
    }

    /**
     * Fingerprint of this resource.
     * 
     */
    @Import(name="fingerprint")
      private final @Nullable Output<String> fingerprint;

    public Output<String> fingerprint() {
        return this.fingerprint == null ? Codegen.empty() : this.fingerprint;
    }

    /**
     * The name of the security policy.
     * 
     */
    @Import(name="name")
      private final @Nullable Output<String> name;

    public Output<String> name() {
        return this.name == null ? Codegen.empty() : this.name;
    }

    /**
     * The project in which the resource belongs. If it
     * is not provided, the provider project is used.
     * 
     */
    @Import(name="project")
      private final @Nullable Output<String> project;

    public Output<String> project() {
        return this.project == null ? Codegen.empty() : this.project;
    }

    /**
     * The set of rules that belong to this policy. There must always be a default
     * rule (rule with priority 2147483647 and match "\*"). If no rules are provided when creating a
     * security policy, a default rule with action "allow" will be added. Structure is documented below.
     * 
     */
    @Import(name="rules")
      private final @Nullable Output<List<SecurityPolicyRuleGetArgs>> rules;

    public Output<List<SecurityPolicyRuleGetArgs>> rules() {
        return this.rules == null ? Codegen.empty() : this.rules;
    }

    /**
     * The URI of the created resourc
     * 
     */
    @Import(name="selfLink")
      private final @Nullable Output<String> selfLink;

    public Output<String> selfLink() {
        return this.selfLink == null ? Codegen.empty() : this.selfLink;
    }

    public SecurityPolicyState(
        @Nullable Output<SecurityPolicyAdaptiveProtectionConfigGetArgs> adaptiveProtectionConfig,
        @Nullable Output<String> description,
        @Nullable Output<String> fingerprint,
        @Nullable Output<String> name,
        @Nullable Output<String> project,
        @Nullable Output<List<SecurityPolicyRuleGetArgs>> rules,
        @Nullable Output<String> selfLink) {
        this.adaptiveProtectionConfig = adaptiveProtectionConfig;
        this.description = description;
        this.fingerprint = fingerprint;
        this.name = name;
        this.project = project;
        this.rules = rules;
        this.selfLink = selfLink;
    }

    private SecurityPolicyState() {
        this.adaptiveProtectionConfig = Codegen.empty();
        this.description = Codegen.empty();
        this.fingerprint = Codegen.empty();
        this.name = Codegen.empty();
        this.project = Codegen.empty();
        this.rules = Codegen.empty();
        this.selfLink = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SecurityPolicyState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<SecurityPolicyAdaptiveProtectionConfigGetArgs> adaptiveProtectionConfig;
        private @Nullable Output<String> description;
        private @Nullable Output<String> fingerprint;
        private @Nullable Output<String> name;
        private @Nullable Output<String> project;
        private @Nullable Output<List<SecurityPolicyRuleGetArgs>> rules;
        private @Nullable Output<String> selfLink;

        public Builder() {
    	      // Empty
        }

        public Builder(SecurityPolicyState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.adaptiveProtectionConfig = defaults.adaptiveProtectionConfig;
    	      this.description = defaults.description;
    	      this.fingerprint = defaults.fingerprint;
    	      this.name = defaults.name;
    	      this.project = defaults.project;
    	      this.rules = defaults.rules;
    	      this.selfLink = defaults.selfLink;
        }

        public Builder adaptiveProtectionConfig(@Nullable Output<SecurityPolicyAdaptiveProtectionConfigGetArgs> adaptiveProtectionConfig) {
            this.adaptiveProtectionConfig = adaptiveProtectionConfig;
            return this;
        }
        public Builder adaptiveProtectionConfig(@Nullable SecurityPolicyAdaptiveProtectionConfigGetArgs adaptiveProtectionConfig) {
            this.adaptiveProtectionConfig = Codegen.ofNullable(adaptiveProtectionConfig);
            return this;
        }
        public Builder description(@Nullable Output<String> description) {
            this.description = description;
            return this;
        }
        public Builder description(@Nullable String description) {
            this.description = Codegen.ofNullable(description);
            return this;
        }
        public Builder fingerprint(@Nullable Output<String> fingerprint) {
            this.fingerprint = fingerprint;
            return this;
        }
        public Builder fingerprint(@Nullable String fingerprint) {
            this.fingerprint = Codegen.ofNullable(fingerprint);
            return this;
        }
        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }
        public Builder name(@Nullable String name) {
            this.name = Codegen.ofNullable(name);
            return this;
        }
        public Builder project(@Nullable Output<String> project) {
            this.project = project;
            return this;
        }
        public Builder project(@Nullable String project) {
            this.project = Codegen.ofNullable(project);
            return this;
        }
        public Builder rules(@Nullable Output<List<SecurityPolicyRuleGetArgs>> rules) {
            this.rules = rules;
            return this;
        }
        public Builder rules(@Nullable List<SecurityPolicyRuleGetArgs> rules) {
            this.rules = Codegen.ofNullable(rules);
            return this;
        }
        public Builder rules(SecurityPolicyRuleGetArgs... rules) {
            return rules(List.of(rules));
        }
        public Builder selfLink(@Nullable Output<String> selfLink) {
            this.selfLink = selfLink;
            return this;
        }
        public Builder selfLink(@Nullable String selfLink) {
            this.selfLink = Codegen.ofNullable(selfLink);
            return this;
        }        public SecurityPolicyState build() {
            return new SecurityPolicyState(adaptiveProtectionConfig, description, fingerprint, name, project, rules, selfLink);
        }
    }
}
