// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.servicenetworking;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PeeredDnsDomainArgs extends com.pulumi.resources.ResourceArgs {

    public static final PeeredDnsDomainArgs Empty = new PeeredDnsDomainArgs();

    /**
     * The DNS domain suffix of the peered DNS domain. Make sure to suffix with a `.` (dot).
     * 
     */
    @Import(name="dnsSuffix", required=true)
    private Output<String> dnsSuffix;

    public Output<String> dnsSuffix() {
        return this.dnsSuffix;
    }

    /**
     * Internal name used for the peered DNS domain.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The network in the consumer project.
     * 
     */
    @Import(name="network", required=true)
    private Output<String> network;

    public Output<String> network() {
        return this.network;
    }

    /**
     * The producer project number. If not provided, the provider project is used.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * Private service connection between service and consumer network, defaults to `servicenetworking.googleapis.com`
     * 
     */
    @Import(name="service")
    private @Nullable Output<String> service;

    public Optional<Output<String>> service() {
        return Optional.ofNullable(this.service);
    }

    private PeeredDnsDomainArgs() {}

    private PeeredDnsDomainArgs(PeeredDnsDomainArgs $) {
        this.dnsSuffix = $.dnsSuffix;
        this.name = $.name;
        this.network = $.network;
        this.project = $.project;
        this.service = $.service;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PeeredDnsDomainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PeeredDnsDomainArgs $;

        public Builder() {
            $ = new PeeredDnsDomainArgs();
        }

        public Builder(PeeredDnsDomainArgs defaults) {
            $ = new PeeredDnsDomainArgs(Objects.requireNonNull(defaults));
        }

        public Builder dnsSuffix(Output<String> dnsSuffix) {
            $.dnsSuffix = dnsSuffix;
            return this;
        }

        public Builder dnsSuffix(String dnsSuffix) {
            return dnsSuffix(Output.of(dnsSuffix));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder network(Output<String> network) {
            $.network = network;
            return this;
        }

        public Builder network(String network) {
            return network(Output.of(network));
        }

        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        public Builder project(String project) {
            return project(Output.of(project));
        }

        public Builder service(@Nullable Output<String> service) {
            $.service = service;
            return this;
        }

        public Builder service(String service) {
            return service(Output.of(service));
        }

        public PeeredDnsDomainArgs build() {
            $.dnsSuffix = Objects.requireNonNull($.dnsSuffix, "expected parameter 'dnsSuffix' to be non-null");
            $.network = Objects.requireNonNull($.network, "expected parameter 'network' to be non-null");
            return $;
        }
    }

}
