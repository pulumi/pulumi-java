// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import com.pulumi.gcp.compute.inputs.URLMapDefaultRouteActionFaultInjectionPolicyAbortArgs;
import com.pulumi.gcp.compute.inputs.URLMapDefaultRouteActionFaultInjectionPolicyDelayArgs;
import java.util.Objects;
import javax.annotation.Nullable;


public final class URLMapDefaultRouteActionFaultInjectionPolicyArgs extends com.pulumi.resources.ResourceArgs {

    public static final URLMapDefaultRouteActionFaultInjectionPolicyArgs Empty = new URLMapDefaultRouteActionFaultInjectionPolicyArgs();

    /**
     * The specification for how client requests are aborted as part of fault injection.
     * Structure is documented below.
     * 
     */
    @Import(name="abort")
      private final @Nullable Output<URLMapDefaultRouteActionFaultInjectionPolicyAbortArgs> abort;

    public Output<URLMapDefaultRouteActionFaultInjectionPolicyAbortArgs> abort() {
        return this.abort == null ? Codegen.empty() : this.abort;
    }

    /**
     * The specification for how client requests are delayed as part of fault injection, before being sent to a backend service.
     * Structure is documented below.
     * 
     */
    @Import(name="delay")
      private final @Nullable Output<URLMapDefaultRouteActionFaultInjectionPolicyDelayArgs> delay;

    public Output<URLMapDefaultRouteActionFaultInjectionPolicyDelayArgs> delay() {
        return this.delay == null ? Codegen.empty() : this.delay;
    }

    public URLMapDefaultRouteActionFaultInjectionPolicyArgs(
        @Nullable Output<URLMapDefaultRouteActionFaultInjectionPolicyAbortArgs> abort,
        @Nullable Output<URLMapDefaultRouteActionFaultInjectionPolicyDelayArgs> delay) {
        this.abort = abort;
        this.delay = delay;
    }

    private URLMapDefaultRouteActionFaultInjectionPolicyArgs() {
        this.abort = Codegen.empty();
        this.delay = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(URLMapDefaultRouteActionFaultInjectionPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<URLMapDefaultRouteActionFaultInjectionPolicyAbortArgs> abort;
        private @Nullable Output<URLMapDefaultRouteActionFaultInjectionPolicyDelayArgs> delay;

        public Builder() {
    	      // Empty
        }

        public Builder(URLMapDefaultRouteActionFaultInjectionPolicyArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.abort = defaults.abort;
    	      this.delay = defaults.delay;
        }

        public Builder abort(@Nullable Output<URLMapDefaultRouteActionFaultInjectionPolicyAbortArgs> abort) {
            this.abort = abort;
            return this;
        }
        public Builder abort(@Nullable URLMapDefaultRouteActionFaultInjectionPolicyAbortArgs abort) {
            this.abort = Codegen.ofNullable(abort);
            return this;
        }
        public Builder delay(@Nullable Output<URLMapDefaultRouteActionFaultInjectionPolicyDelayArgs> delay) {
            this.delay = delay;
            return this;
        }
        public Builder delay(@Nullable URLMapDefaultRouteActionFaultInjectionPolicyDelayArgs delay) {
            this.delay = Codegen.ofNullable(delay);
            return this;
        }        public URLMapDefaultRouteActionFaultInjectionPolicyArgs build() {
            return new URLMapDefaultRouteActionFaultInjectionPolicyArgs(abort, delay);
        }
    }
}
