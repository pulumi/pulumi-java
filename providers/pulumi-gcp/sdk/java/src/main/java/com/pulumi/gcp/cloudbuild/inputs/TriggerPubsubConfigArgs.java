// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.cloudbuild.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class TriggerPubsubConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final TriggerPubsubConfigArgs Empty = new TriggerPubsubConfigArgs();

    /**
     * Service account that will make the push request.
     * 
     */
    @Import(name="serviceAccountEmail")
      private final @Nullable Output<String> serviceAccountEmail;

    public Output<String> serviceAccountEmail() {
        return this.serviceAccountEmail == null ? Codegen.empty() : this.serviceAccountEmail;
    }

    /**
     * - 
     * Potential issues with the underlying Pub/Sub subscription configuration.
     * Only populated on get requests.
     * 
     */
    @Import(name="state")
      private final @Nullable Output<String> state;

    public Output<String> state() {
        return this.state == null ? Codegen.empty() : this.state;
    }

    /**
     * - 
     * Output only. Name of the subscription.
     * 
     */
    @Import(name="subscription")
      private final @Nullable Output<String> subscription;

    public Output<String> subscription() {
        return this.subscription == null ? Codegen.empty() : this.subscription;
    }

    /**
     * The name of the topic from which this subscription is receiving messages.
     * 
     */
    @Import(name="topic", required=true)
      private final Output<String> topic;

    public Output<String> topic() {
        return this.topic;
    }

    public TriggerPubsubConfigArgs(
        @Nullable Output<String> serviceAccountEmail,
        @Nullable Output<String> state,
        @Nullable Output<String> subscription,
        Output<String> topic) {
        this.serviceAccountEmail = serviceAccountEmail;
        this.state = state;
        this.subscription = subscription;
        this.topic = Objects.requireNonNull(topic, "expected parameter 'topic' to be non-null");
    }

    private TriggerPubsubConfigArgs() {
        this.serviceAccountEmail = Codegen.empty();
        this.state = Codegen.empty();
        this.subscription = Codegen.empty();
        this.topic = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TriggerPubsubConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> serviceAccountEmail;
        private @Nullable Output<String> state;
        private @Nullable Output<String> subscription;
        private Output<String> topic;

        public Builder() {
    	      // Empty
        }

        public Builder(TriggerPubsubConfigArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.serviceAccountEmail = defaults.serviceAccountEmail;
    	      this.state = defaults.state;
    	      this.subscription = defaults.subscription;
    	      this.topic = defaults.topic;
        }

        public Builder serviceAccountEmail(@Nullable Output<String> serviceAccountEmail) {
            this.serviceAccountEmail = serviceAccountEmail;
            return this;
        }
        public Builder serviceAccountEmail(@Nullable String serviceAccountEmail) {
            this.serviceAccountEmail = Codegen.ofNullable(serviceAccountEmail);
            return this;
        }
        public Builder state(@Nullable Output<String> state) {
            this.state = state;
            return this;
        }
        public Builder state(@Nullable String state) {
            this.state = Codegen.ofNullable(state);
            return this;
        }
        public Builder subscription(@Nullable Output<String> subscription) {
            this.subscription = subscription;
            return this;
        }
        public Builder subscription(@Nullable String subscription) {
            this.subscription = Codegen.ofNullable(subscription);
            return this;
        }
        public Builder topic(Output<String> topic) {
            this.topic = Objects.requireNonNull(topic);
            return this;
        }
        public Builder topic(String topic) {
            this.topic = Output.of(Objects.requireNonNull(topic));
            return this;
        }        public TriggerPubsubConfigArgs build() {
            return new TriggerPubsubConfigArgs(serviceAccountEmail, state, subscription, topic);
        }
    }
}
