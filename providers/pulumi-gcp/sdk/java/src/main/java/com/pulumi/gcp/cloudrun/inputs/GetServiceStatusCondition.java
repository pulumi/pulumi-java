// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.cloudrun.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GetServiceStatusCondition extends com.pulumi.resources.InvokeArgs {

    public static final GetServiceStatusCondition Empty = new GetServiceStatusCondition();

    @Import(name="message", required=true)
    private String message;

    public String message() {
        return this.message;
    }

    @Import(name="reason", required=true)
    private String reason;

    public String reason() {
        return this.reason;
    }

    @Import(name="status", required=true)
    private String status;

    public String status() {
        return this.status;
    }

    @Import(name="type", required=true)
    private String type;

    public String type() {
        return this.type;
    }

    private GetServiceStatusCondition() {}

    private GetServiceStatusCondition(GetServiceStatusCondition $) {
        this.message = $.message;
        this.reason = $.reason;
        this.status = $.status;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetServiceStatusCondition defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetServiceStatusCondition $;

        public Builder() {
            $ = new GetServiceStatusCondition();
        }

        public Builder(GetServiceStatusCondition defaults) {
            $ = new GetServiceStatusCondition(Objects.requireNonNull(defaults));
        }

        public Builder message(String message) {
            $.message = message;
            return this;
        }

        public Builder reason(String reason) {
            $.reason = reason;
            return this;
        }

        public Builder status(String status) {
            $.status = status;
            return this;
        }

        public Builder type(String type) {
            $.type = type;
            return this;
        }

        public GetServiceStatusCondition build() {
            $.message = Objects.requireNonNull($.message, "expected parameter 'message' to be non-null");
            $.reason = Objects.requireNonNull($.reason, "expected parameter 'reason' to be non-null");
            $.status = Objects.requireNonNull($.status, "expected parameter 'status' to be non-null");
            $.type = Objects.requireNonNull($.type, "expected parameter 'type' to be non-null");
            return $;
        }
    }

}
