// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.diagflow.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class CxEnvironmentVersionConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final CxEnvironmentVersionConfigArgs Empty = new CxEnvironmentVersionConfigArgs();

    /**
     * Format: projects/{{project}}/locations/{{location}}/agents/{{agent}}/flows/{{flow}}/versions/{{version}}.
     * 
     */
    @Import(name="version", required=true)
    private Output<String> version;

    public Output<String> version() {
        return this.version;
    }

    private CxEnvironmentVersionConfigArgs() {}

    private CxEnvironmentVersionConfigArgs(CxEnvironmentVersionConfigArgs $) {
        this.version = $.version;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CxEnvironmentVersionConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CxEnvironmentVersionConfigArgs $;

        public Builder() {
            $ = new CxEnvironmentVersionConfigArgs();
        }

        public Builder(CxEnvironmentVersionConfigArgs defaults) {
            $ = new CxEnvironmentVersionConfigArgs(Objects.requireNonNull(defaults));
        }

        public Builder version(Output<String> version) {
            $.version = version;
            return this;
        }

        public Builder version(String version) {
            return version(Output.of(version));
        }

        public CxEnvironmentVersionConfigArgs build() {
            $.version = Objects.requireNonNull($.version, "expected parameter 'version' to be non-null");
            return $;
        }
    }

}
