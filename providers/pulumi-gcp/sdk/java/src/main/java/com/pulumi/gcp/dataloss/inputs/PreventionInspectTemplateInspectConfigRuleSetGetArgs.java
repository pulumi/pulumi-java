// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.dataloss.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.dataloss.inputs.PreventionInspectTemplateInspectConfigRuleSetInfoTypeGetArgs;
import com.pulumi.gcp.dataloss.inputs.PreventionInspectTemplateInspectConfigRuleSetRuleGetArgs;
import java.util.List;
import java.util.Objects;


public final class PreventionInspectTemplateInspectConfigRuleSetGetArgs extends com.pulumi.resources.ResourceArgs {

    public static final PreventionInspectTemplateInspectConfigRuleSetGetArgs Empty = new PreventionInspectTemplateInspectConfigRuleSetGetArgs();

    /**
     * If a finding is matched by any of the infoType detectors listed here, the finding will be excluded from the scan results.
     * Structure is documented below.
     * 
     */
    @Import(name="infoTypes", required=true)
    private Output<List<PreventionInspectTemplateInspectConfigRuleSetInfoTypeGetArgs>> infoTypes;

    public Output<List<PreventionInspectTemplateInspectConfigRuleSetInfoTypeGetArgs>> infoTypes() {
        return this.infoTypes;
    }

    /**
     * Set of rules to be applied to infoTypes. The rules are applied in order.
     * Structure is documented below.
     * 
     */
    @Import(name="rules", required=true)
    private Output<List<PreventionInspectTemplateInspectConfigRuleSetRuleGetArgs>> rules;

    public Output<List<PreventionInspectTemplateInspectConfigRuleSetRuleGetArgs>> rules() {
        return this.rules;
    }

    private PreventionInspectTemplateInspectConfigRuleSetGetArgs() {}

    private PreventionInspectTemplateInspectConfigRuleSetGetArgs(PreventionInspectTemplateInspectConfigRuleSetGetArgs $) {
        this.infoTypes = $.infoTypes;
        this.rules = $.rules;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PreventionInspectTemplateInspectConfigRuleSetGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PreventionInspectTemplateInspectConfigRuleSetGetArgs $;

        public Builder() {
            $ = new PreventionInspectTemplateInspectConfigRuleSetGetArgs();
        }

        public Builder(PreventionInspectTemplateInspectConfigRuleSetGetArgs defaults) {
            $ = new PreventionInspectTemplateInspectConfigRuleSetGetArgs(Objects.requireNonNull(defaults));
        }

        public Builder infoTypes(Output<List<PreventionInspectTemplateInspectConfigRuleSetInfoTypeGetArgs>> infoTypes) {
            $.infoTypes = infoTypes;
            return this;
        }

        public Builder infoTypes(List<PreventionInspectTemplateInspectConfigRuleSetInfoTypeGetArgs> infoTypes) {
            return infoTypes(Output.of(infoTypes));
        }

        public Builder infoTypes(PreventionInspectTemplateInspectConfigRuleSetInfoTypeGetArgs... infoTypes) {
            return infoTypes(List.of(infoTypes));
        }

        public Builder rules(Output<List<PreventionInspectTemplateInspectConfigRuleSetRuleGetArgs>> rules) {
            $.rules = rules;
            return this;
        }

        public Builder rules(List<PreventionInspectTemplateInspectConfigRuleSetRuleGetArgs> rules) {
            return rules(Output.of(rules));
        }

        public Builder rules(PreventionInspectTemplateInspectConfigRuleSetRuleGetArgs... rules) {
            return rules(List.of(rules));
        }

        public PreventionInspectTemplateInspectConfigRuleSetGetArgs build() {
            $.infoTypes = Objects.requireNonNull($.infoTypes, "expected parameter 'infoTypes' to be non-null");
            $.rules = Objects.requireNonNull($.rules, "expected parameter 'rules' to be non-null");
            return $;
        }
    }

}
