// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.dataloss.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import com.pulumi.gcp.dataloss.inputs.PreventionJobTriggerInspectJobActionSaveFindingsOutputConfigTableArgs;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class PreventionJobTriggerInspectJobActionSaveFindingsOutputConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final PreventionJobTriggerInspectJobActionSaveFindingsOutputConfigArgs Empty = new PreventionJobTriggerInspectJobActionSaveFindingsOutputConfigArgs();

    /**
     * Schema used for writing the findings for Inspect jobs. This field is only used for
     * Inspect and must be unspecified for Risk jobs. Columns are derived from the Finding
     * object. If appending to an existing table, any columns from the predefined schema
     * that are missing will be added. No columns in the existing table will be deleted.
     * If unspecified, then all available columns will be used for a new table or an (existing)
     * table with no schema, and no changes will be made to an existing table that has a schema.
     * Only for use with external storage.
     * Possible values are `BASIC_COLUMNS`, `GCS_COLUMNS`, `DATASTORE_COLUMNS`, `BIG_QUERY_COLUMNS`, and `ALL_COLUMNS`.
     * 
     */
    @Import(name="outputSchema")
      private final @Nullable Output<String> outputSchema;

    public Output<String> outputSchema() {
        return this.outputSchema == null ? Codegen.empty() : this.outputSchema;
    }

    /**
     * Information on the location of the target BigQuery Table.
     * Structure is documented below.
     * 
     */
    @Import(name="table", required=true)
      private final Output<PreventionJobTriggerInspectJobActionSaveFindingsOutputConfigTableArgs> table;

    public Output<PreventionJobTriggerInspectJobActionSaveFindingsOutputConfigTableArgs> table() {
        return this.table;
    }

    public PreventionJobTriggerInspectJobActionSaveFindingsOutputConfigArgs(
        @Nullable Output<String> outputSchema,
        Output<PreventionJobTriggerInspectJobActionSaveFindingsOutputConfigTableArgs> table) {
        this.outputSchema = outputSchema;
        this.table = Objects.requireNonNull(table, "expected parameter 'table' to be non-null");
    }

    private PreventionJobTriggerInspectJobActionSaveFindingsOutputConfigArgs() {
        this.outputSchema = Codegen.empty();
        this.table = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PreventionJobTriggerInspectJobActionSaveFindingsOutputConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> outputSchema;
        private Output<PreventionJobTriggerInspectJobActionSaveFindingsOutputConfigTableArgs> table;

        public Builder() {
    	      // Empty
        }

        public Builder(PreventionJobTriggerInspectJobActionSaveFindingsOutputConfigArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.outputSchema = defaults.outputSchema;
    	      this.table = defaults.table;
        }

        public Builder outputSchema(@Nullable Output<String> outputSchema) {
            this.outputSchema = outputSchema;
            return this;
        }
        public Builder outputSchema(@Nullable String outputSchema) {
            this.outputSchema = Codegen.ofNullable(outputSchema);
            return this;
        }
        public Builder table(Output<PreventionJobTriggerInspectJobActionSaveFindingsOutputConfigTableArgs> table) {
            this.table = Objects.requireNonNull(table);
            return this;
        }
        public Builder table(PreventionJobTriggerInspectJobActionSaveFindingsOutputConfigTableArgs table) {
            this.table = Output.of(Objects.requireNonNull(table));
            return this;
        }        public PreventionJobTriggerInspectJobActionSaveFindingsOutputConfigArgs build() {
            return new PreventionJobTriggerInspectJobActionSaveFindingsOutputConfigArgs(outputSchema, table);
        }
    }
}
