// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.securitycenter.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SourceState extends com.pulumi.resources.ResourceArgs {

    public static final SourceState Empty = new SourceState();

    /**
     * The description of the source (max of 1024 characters).
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The source’s display name. A source’s display name must be unique
     * amongst its siblings, for example, two sources with the same parent
     * can&#39;t share the same display name. The display name must start and end
     * with a letter or digit, may contain letters, digits, spaces, hyphens,
     * and underscores, and can be no longer than 32 characters.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * The resource name of this source, in the format &#39;organizations/{{organization}}/sources/{{source}}&#39;.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The organization whose Cloud Security Command Center the Source
     * lives in.
     * 
     */
    @Import(name="organization")
    private @Nullable Output<String> organization;

    public Optional<Output<String>> organization() {
        return Optional.ofNullable(this.organization);
    }

    private SourceState() {}

    private SourceState(SourceState $) {
        this.description = $.description;
        this.displayName = $.displayName;
        this.name = $.name;
        this.organization = $.organization;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SourceState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SourceState $;

        public Builder() {
            $ = new SourceState();
        }

        public Builder(SourceState defaults) {
            $ = new SourceState(Objects.requireNonNull(defaults));
        }

        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        public Builder description(String description) {
            return description(Output.of(description));
        }

        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder organization(@Nullable Output<String> organization) {
            $.organization = organization;
            return this;
        }

        public Builder organization(String organization) {
            return organization(Output.of(organization));
        }

        public SourceState build() {
            return $;
        }
    }

}
