// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.certificateauthority.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class CertificateConfigPublicKeyGetArgs extends com.pulumi.resources.ResourceArgs {

    public static final CertificateConfigPublicKeyGetArgs Empty = new CertificateConfigPublicKeyGetArgs();

    /**
     * The format of the public key. Currently, only PEM format is supported.
     * Possible values are `KEY_TYPE_UNSPECIFIED` and `PEM`.
     * 
     */
    @Import(name="format", required=true)
      private final Output<String> format;

    public Output<String> format() {
        return this.format;
    }

    /**
     * Required. A public key. When this is specified in a request, the padding and encoding can be any of the options described by the respective &#39;KeyType&#39; value. When this is generated by the service, it will always be an RFC 5280 SubjectPublicKeyInfo structure containing an algorithm identifier and a key. A base64-encoded string.
     * 
     */
    @Import(name="key")
      private final @Nullable Output<String> key;

    public Output<String> key() {
        return this.key == null ? Codegen.empty() : this.key;
    }

    public CertificateConfigPublicKeyGetArgs(
        Output<String> format,
        @Nullable Output<String> key) {
        this.format = Objects.requireNonNull(format, "expected parameter 'format' to be non-null");
        this.key = key;
    }

    private CertificateConfigPublicKeyGetArgs() {
        this.format = Codegen.empty();
        this.key = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CertificateConfigPublicKeyGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> format;
        private @Nullable Output<String> key;

        public Builder() {
    	      // Empty
        }

        public Builder(CertificateConfigPublicKeyGetArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.format = defaults.format;
    	      this.key = defaults.key;
        }

        public Builder format(Output<String> format) {
            this.format = Objects.requireNonNull(format);
            return this;
        }
        public Builder format(String format) {
            this.format = Output.of(Objects.requireNonNull(format));
            return this;
        }
        public Builder key(@Nullable Output<String> key) {
            this.key = key;
            return this;
        }
        public Builder key(@Nullable String key) {
            this.key = Codegen.ofNullable(key);
            return this;
        }        public CertificateConfigPublicKeyGetArgs build() {
            return new CertificateConfigPublicKeyGetArgs(format, key);
        }
    }
}
