// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.gkehub.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FeatureMembershipConfigmanagementConfigSyncGitArgs extends com.pulumi.resources.ResourceArgs {

    public static final FeatureMembershipConfigmanagementConfigSyncGitArgs Empty = new FeatureMembershipConfigmanagementConfigSyncGitArgs();

    @Import(name="gcpServiceAccountEmail")
    private @Nullable Output<String> gcpServiceAccountEmail;

    public Optional<Output<String>> gcpServiceAccountEmail() {
        return Optional.ofNullable(this.gcpServiceAccountEmail);
    }

    /**
     * URL for the HTTPS proxy to be used when communicating with the Git repo.
     * 
     */
    @Import(name="httpsProxy")
    private @Nullable Output<String> httpsProxy;

    public Optional<Output<String>> httpsProxy() {
        return Optional.ofNullable(this.httpsProxy);
    }

    /**
     * The path within the Git repository that represents the top level of the repo to sync. Default: the root directory of the repository.
     * 
     */
    @Import(name="policyDir")
    private @Nullable Output<String> policyDir;

    public Optional<Output<String>> policyDir() {
        return Optional.ofNullable(this.policyDir);
    }

    /**
     * Type of secret configured for access to the Git repo.
     * 
     */
    @Import(name="secretType")
    private @Nullable Output<String> secretType;

    public Optional<Output<String>> secretType() {
        return Optional.ofNullable(this.secretType);
    }

    /**
     * The branch of the repository to sync from. Default: master.
     * 
     */
    @Import(name="syncBranch")
    private @Nullable Output<String> syncBranch;

    public Optional<Output<String>> syncBranch() {
        return Optional.ofNullable(this.syncBranch);
    }

    /**
     * The URL of the Git repository to use as the source of truth.
     * 
     */
    @Import(name="syncRepo")
    private @Nullable Output<String> syncRepo;

    public Optional<Output<String>> syncRepo() {
        return Optional.ofNullable(this.syncRepo);
    }

    /**
     * Git revision (tag or hash) to check out. Default HEAD.
     * 
     */
    @Import(name="syncRev")
    private @Nullable Output<String> syncRev;

    public Optional<Output<String>> syncRev() {
        return Optional.ofNullable(this.syncRev);
    }

    /**
     * Period in seconds between consecutive syncs. Default: 15.
     * 
     */
    @Import(name="syncWaitSecs")
    private @Nullable Output<String> syncWaitSecs;

    public Optional<Output<String>> syncWaitSecs() {
        return Optional.ofNullable(this.syncWaitSecs);
    }

    private FeatureMembershipConfigmanagementConfigSyncGitArgs() {}

    private FeatureMembershipConfigmanagementConfigSyncGitArgs(FeatureMembershipConfigmanagementConfigSyncGitArgs $) {
        this.gcpServiceAccountEmail = $.gcpServiceAccountEmail;
        this.httpsProxy = $.httpsProxy;
        this.policyDir = $.policyDir;
        this.secretType = $.secretType;
        this.syncBranch = $.syncBranch;
        this.syncRepo = $.syncRepo;
        this.syncRev = $.syncRev;
        this.syncWaitSecs = $.syncWaitSecs;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FeatureMembershipConfigmanagementConfigSyncGitArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FeatureMembershipConfigmanagementConfigSyncGitArgs $;

        public Builder() {
            $ = new FeatureMembershipConfigmanagementConfigSyncGitArgs();
        }

        public Builder(FeatureMembershipConfigmanagementConfigSyncGitArgs defaults) {
            $ = new FeatureMembershipConfigmanagementConfigSyncGitArgs(Objects.requireNonNull(defaults));
        }

        public Builder gcpServiceAccountEmail(@Nullable Output<String> gcpServiceAccountEmail) {
            $.gcpServiceAccountEmail = gcpServiceAccountEmail;
            return this;
        }

        public Builder gcpServiceAccountEmail(String gcpServiceAccountEmail) {
            return gcpServiceAccountEmail(Output.of(gcpServiceAccountEmail));
        }

        public Builder httpsProxy(@Nullable Output<String> httpsProxy) {
            $.httpsProxy = httpsProxy;
            return this;
        }

        public Builder httpsProxy(String httpsProxy) {
            return httpsProxy(Output.of(httpsProxy));
        }

        public Builder policyDir(@Nullable Output<String> policyDir) {
            $.policyDir = policyDir;
            return this;
        }

        public Builder policyDir(String policyDir) {
            return policyDir(Output.of(policyDir));
        }

        public Builder secretType(@Nullable Output<String> secretType) {
            $.secretType = secretType;
            return this;
        }

        public Builder secretType(String secretType) {
            return secretType(Output.of(secretType));
        }

        public Builder syncBranch(@Nullable Output<String> syncBranch) {
            $.syncBranch = syncBranch;
            return this;
        }

        public Builder syncBranch(String syncBranch) {
            return syncBranch(Output.of(syncBranch));
        }

        public Builder syncRepo(@Nullable Output<String> syncRepo) {
            $.syncRepo = syncRepo;
            return this;
        }

        public Builder syncRepo(String syncRepo) {
            return syncRepo(Output.of(syncRepo));
        }

        public Builder syncRev(@Nullable Output<String> syncRev) {
            $.syncRev = syncRev;
            return this;
        }

        public Builder syncRev(String syncRev) {
            return syncRev(Output.of(syncRev));
        }

        public Builder syncWaitSecs(@Nullable Output<String> syncWaitSecs) {
            $.syncWaitSecs = syncWaitSecs;
            return this;
        }

        public Builder syncWaitSecs(String syncWaitSecs) {
            return syncWaitSecs(Output.of(syncWaitSecs));
        }

        public FeatureMembershipConfigmanagementConfigSyncGitArgs build() {
            return $;
        }
    }

}
