// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.sql.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DatabaseInstanceCloneGetArgs extends com.pulumi.resources.ResourceArgs {

    public static final DatabaseInstanceCloneGetArgs Empty = new DatabaseInstanceCloneGetArgs();

    /**
     * The timestamp of the point in time that should be restored.
     * 
     */
    @Import(name="pointInTime")
    private @Nullable Output<String> pointInTime;

    /**
     * @return The timestamp of the point in time that should be restored.
     * 
     */
    public Optional<Output<String>> pointInTime() {
        return Optional.ofNullable(this.pointInTime);
    }

    /**
     * Name of the source instance which will be cloned.
     * 
     */
    @Import(name="sourceInstanceName", required=true)
    private Output<String> sourceInstanceName;

    /**
     * @return Name of the source instance which will be cloned.
     * 
     */
    public Output<String> sourceInstanceName() {
        return this.sourceInstanceName;
    }

    private DatabaseInstanceCloneGetArgs() {}

    private DatabaseInstanceCloneGetArgs(DatabaseInstanceCloneGetArgs $) {
        this.pointInTime = $.pointInTime;
        this.sourceInstanceName = $.sourceInstanceName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DatabaseInstanceCloneGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DatabaseInstanceCloneGetArgs $;

        public Builder() {
            $ = new DatabaseInstanceCloneGetArgs();
        }

        public Builder(DatabaseInstanceCloneGetArgs defaults) {
            $ = new DatabaseInstanceCloneGetArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param pointInTime The timestamp of the point in time that should be restored.
         * 
         * @return builder
         * 
         */
        public Builder pointInTime(@Nullable Output<String> pointInTime) {
            $.pointInTime = pointInTime;
            return this;
        }

        /**
         * @param pointInTime The timestamp of the point in time that should be restored.
         * 
         * @return builder
         * 
         */
        public Builder pointInTime(String pointInTime) {
            return pointInTime(Output.of(pointInTime));
        }

        /**
         * @param sourceInstanceName Name of the source instance which will be cloned.
         * 
         * @return builder
         * 
         */
        public Builder sourceInstanceName(Output<String> sourceInstanceName) {
            $.sourceInstanceName = sourceInstanceName;
            return this;
        }

        /**
         * @param sourceInstanceName Name of the source instance which will be cloned.
         * 
         * @return builder
         * 
         */
        public Builder sourceInstanceName(String sourceInstanceName) {
            return sourceInstanceName(Output.of(sourceInstanceName));
        }

        public DatabaseInstanceCloneGetArgs build() {
            $.sourceInstanceName = Objects.requireNonNull($.sourceInstanceName, "expected parameter 'sourceInstanceName' to be non-null");
            return $;
        }
    }

}
