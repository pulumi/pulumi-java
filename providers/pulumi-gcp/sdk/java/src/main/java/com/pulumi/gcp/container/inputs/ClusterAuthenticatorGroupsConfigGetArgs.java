// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.container.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class ClusterAuthenticatorGroupsConfigGetArgs extends com.pulumi.resources.ResourceArgs {

    public static final ClusterAuthenticatorGroupsConfigGetArgs Empty = new ClusterAuthenticatorGroupsConfigGetArgs();

    /**
     * The name of the RBAC security group for use with Google security groups in Kubernetes RBAC. Group name must be in format `gke-security-groups@yourdomain.com`.
     * 
     */
    @Import(name="securityGroup", required=true)
    private Output<String> securityGroup;

    public Output<String> securityGroup() {
        return this.securityGroup;
    }

    private ClusterAuthenticatorGroupsConfigGetArgs() {}

    private ClusterAuthenticatorGroupsConfigGetArgs(ClusterAuthenticatorGroupsConfigGetArgs $) {
        this.securityGroup = $.securityGroup;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClusterAuthenticatorGroupsConfigGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClusterAuthenticatorGroupsConfigGetArgs $;

        public Builder() {
            $ = new ClusterAuthenticatorGroupsConfigGetArgs();
        }

        public Builder(ClusterAuthenticatorGroupsConfigGetArgs defaults) {
            $ = new ClusterAuthenticatorGroupsConfigGetArgs(Objects.requireNonNull(defaults));
        }

        public Builder securityGroup(Output<String> securityGroup) {
            $.securityGroup = securityGroup;
            return this;
        }

        public Builder securityGroup(String securityGroup) {
            return securityGroup(Output.of(securityGroup));
        }

        public ClusterAuthenticatorGroupsConfigGetArgs build() {
            $.securityGroup = Objects.requireNonNull($.securityGroup, "expected parameter 'securityGroup' to be non-null");
            return $;
        }
    }

}
