// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.certificateauthority.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.util.Objects;


public final class CaPoolPublishingOptionsGetArgs extends com.pulumi.resources.ResourceArgs {

    public static final CaPoolPublishingOptionsGetArgs Empty = new CaPoolPublishingOptionsGetArgs();

    /**
     * When true, publishes each CertificateAuthority&#39;s CA certificate and includes its URL in the &#34;Authority Information Access&#34;
     * X.509 extension in all issued Certificates. If this is false, the CA certificate will not be published and the corresponding
     * X.509 extension will not be written in issued certificates.
     * 
     */
    @Import(name="publishCaCert", required=true)
    private Output<Boolean> publishCaCert;

    /**
     * @return When true, publishes each CertificateAuthority&#39;s CA certificate and includes its URL in the &#34;Authority Information Access&#34;
     * X.509 extension in all issued Certificates. If this is false, the CA certificate will not be published and the corresponding
     * X.509 extension will not be written in issued certificates.
     * 
     */
    public Output<Boolean> publishCaCert() {
        return this.publishCaCert;
    }

    /**
     * When true, publishes each CertificateAuthority&#39;s CRL and includes its URL in the &#34;CRL Distribution Points&#34; X.509 extension
     * in all issued Certificates. If this is false, CRLs will not be published and the corresponding X.509 extension will not
     * be written in issued certificates. CRLs will expire 7 days from their creation. However, we will rebuild daily. CRLs are
     * also rebuilt shortly after a certificate is revoked.
     * 
     */
    @Import(name="publishCrl", required=true)
    private Output<Boolean> publishCrl;

    /**
     * @return When true, publishes each CertificateAuthority&#39;s CRL and includes its URL in the &#34;CRL Distribution Points&#34; X.509 extension
     * in all issued Certificates. If this is false, CRLs will not be published and the corresponding X.509 extension will not
     * be written in issued certificates. CRLs will expire 7 days from their creation. However, we will rebuild daily. CRLs are
     * also rebuilt shortly after a certificate is revoked.
     * 
     */
    public Output<Boolean> publishCrl() {
        return this.publishCrl;
    }

    private CaPoolPublishingOptionsGetArgs() {}

    private CaPoolPublishingOptionsGetArgs(CaPoolPublishingOptionsGetArgs $) {
        this.publishCaCert = $.publishCaCert;
        this.publishCrl = $.publishCrl;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CaPoolPublishingOptionsGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CaPoolPublishingOptionsGetArgs $;

        public Builder() {
            $ = new CaPoolPublishingOptionsGetArgs();
        }

        public Builder(CaPoolPublishingOptionsGetArgs defaults) {
            $ = new CaPoolPublishingOptionsGetArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param publishCaCert When true, publishes each CertificateAuthority&#39;s CA certificate and includes its URL in the &#34;Authority Information Access&#34;
         * X.509 extension in all issued Certificates. If this is false, the CA certificate will not be published and the corresponding
         * X.509 extension will not be written in issued certificates.
         * 
         * @return builder
         * 
         */
        public Builder publishCaCert(Output<Boolean> publishCaCert) {
            $.publishCaCert = publishCaCert;
            return this;
        }

        /**
         * @param publishCaCert When true, publishes each CertificateAuthority&#39;s CA certificate and includes its URL in the &#34;Authority Information Access&#34;
         * X.509 extension in all issued Certificates. If this is false, the CA certificate will not be published and the corresponding
         * X.509 extension will not be written in issued certificates.
         * 
         * @return builder
         * 
         */
        public Builder publishCaCert(Boolean publishCaCert) {
            return publishCaCert(Output.of(publishCaCert));
        }

        /**
         * @param publishCrl When true, publishes each CertificateAuthority&#39;s CRL and includes its URL in the &#34;CRL Distribution Points&#34; X.509 extension
         * in all issued Certificates. If this is false, CRLs will not be published and the corresponding X.509 extension will not
         * be written in issued certificates. CRLs will expire 7 days from their creation. However, we will rebuild daily. CRLs are
         * also rebuilt shortly after a certificate is revoked.
         * 
         * @return builder
         * 
         */
        public Builder publishCrl(Output<Boolean> publishCrl) {
            $.publishCrl = publishCrl;
            return this;
        }

        /**
         * @param publishCrl When true, publishes each CertificateAuthority&#39;s CRL and includes its URL in the &#34;CRL Distribution Points&#34; X.509 extension
         * in all issued Certificates. If this is false, CRLs will not be published and the corresponding X.509 extension will not
         * be written in issued certificates. CRLs will expire 7 days from their creation. However, we will rebuild daily. CRLs are
         * also rebuilt shortly after a certificate is revoked.
         * 
         * @return builder
         * 
         */
        public Builder publishCrl(Boolean publishCrl) {
            return publishCrl(Output.of(publishCrl));
        }

        public CaPoolPublishingOptionsGetArgs build() {
            $.publishCaCert = Objects.requireNonNull($.publishCaCert, "expected parameter 'publishCaCert' to be non-null");
            $.publishCrl = Objects.requireNonNull($.publishCrl, "expected parameter 'publishCrl' to be non-null");
            return $;
        }
    }

}
