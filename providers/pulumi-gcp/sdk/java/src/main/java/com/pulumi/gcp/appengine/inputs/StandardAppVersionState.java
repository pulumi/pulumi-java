// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.appengine.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.appengine.inputs.StandardAppVersionAutomaticScalingGetArgs;
import com.pulumi.gcp.appengine.inputs.StandardAppVersionBasicScalingGetArgs;
import com.pulumi.gcp.appengine.inputs.StandardAppVersionDeploymentGetArgs;
import com.pulumi.gcp.appengine.inputs.StandardAppVersionEntrypointGetArgs;
import com.pulumi.gcp.appengine.inputs.StandardAppVersionHandlerGetArgs;
import com.pulumi.gcp.appengine.inputs.StandardAppVersionLibraryGetArgs;
import com.pulumi.gcp.appengine.inputs.StandardAppVersionManualScalingGetArgs;
import com.pulumi.gcp.appengine.inputs.StandardAppVersionVpcAccessConnectorGetArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class StandardAppVersionState extends com.pulumi.resources.ResourceArgs {

    public static final StandardAppVersionState Empty = new StandardAppVersionState();

    /**
     * Automatic scaling is based on request rate, response latencies, and other application metrics.
     * Structure is documented below.
     * 
     */
    @Import(name="automaticScaling")
    private @Nullable Output<StandardAppVersionAutomaticScalingGetArgs> automaticScaling;

    public Optional<Output<StandardAppVersionAutomaticScalingGetArgs>> automaticScaling() {
        return Optional.ofNullable(this.automaticScaling);
    }

    /**
     * Basic scaling creates instances when your application receives requests. Each instance will be shut down when the application becomes idle. Basic scaling is ideal for work that is intermittent or driven by user activity.
     * Structure is documented below.
     * 
     */
    @Import(name="basicScaling")
    private @Nullable Output<StandardAppVersionBasicScalingGetArgs> basicScaling;

    public Optional<Output<StandardAppVersionBasicScalingGetArgs>> basicScaling() {
        return Optional.ofNullable(this.basicScaling);
    }

    /**
     * If set to `true`, the service will be deleted if it is the last version.
     * 
     */
    @Import(name="deleteServiceOnDestroy")
    private @Nullable Output<Boolean> deleteServiceOnDestroy;

    public Optional<Output<Boolean>> deleteServiceOnDestroy() {
        return Optional.ofNullable(this.deleteServiceOnDestroy);
    }

    /**
     * Code and application artifacts that make up this version.
     * Structure is documented below.
     * 
     */
    @Import(name="deployment")
    private @Nullable Output<StandardAppVersionDeploymentGetArgs> deployment;

    public Optional<Output<StandardAppVersionDeploymentGetArgs>> deployment() {
        return Optional.ofNullable(this.deployment);
    }

    /**
     * The entrypoint for the application.
     * Structure is documented below.
     * 
     */
    @Import(name="entrypoint")
    private @Nullable Output<StandardAppVersionEntrypointGetArgs> entrypoint;

    public Optional<Output<StandardAppVersionEntrypointGetArgs>> entrypoint() {
        return Optional.ofNullable(this.entrypoint);
    }

    /**
     * Environment variables available to the application.
     * 
     */
    @Import(name="envVariables")
    private @Nullable Output<Map<String,String>> envVariables;

    public Optional<Output<Map<String,String>>> envVariables() {
        return Optional.ofNullable(this.envVariables);
    }

    /**
     * An ordered list of URL-matching patterns that should be applied to incoming requests.
     * The first matching URL handles the request and other request handlers are not attempted.
     * Structure is documented below.
     * 
     */
    @Import(name="handlers")
    private @Nullable Output<List<StandardAppVersionHandlerGetArgs>> handlers;

    public Optional<Output<List<StandardAppVersionHandlerGetArgs>>> handlers() {
        return Optional.ofNullable(this.handlers);
    }

    /**
     * A list of the types of messages that this application is able to receive.
     * Each value may be one of `INBOUND_SERVICE_MAIL`, `INBOUND_SERVICE_MAIL_BOUNCE`, `INBOUND_SERVICE_XMPP_ERROR`, `INBOUND_SERVICE_XMPP_MESSAGE`, `INBOUND_SERVICE_XMPP_SUBSCRIBE`, `INBOUND_SERVICE_XMPP_PRESENCE`, `INBOUND_SERVICE_CHANNEL_PRESENCE`, and `INBOUND_SERVICE_WARMUP`.
     * 
     */
    @Import(name="inboundServices")
    private @Nullable Output<List<String>> inboundServices;

    public Optional<Output<List<String>>> inboundServices() {
        return Optional.ofNullable(this.inboundServices);
    }

    /**
     * Instance class that is used to run this version. Valid values are
     * AutomaticScaling: F1, F2, F4, F4_1G
     * BasicScaling or ManualScaling: B1, B2, B4, B4_1G, B8
     * Defaults to F1 for AutomaticScaling and B2 for ManualScaling and BasicScaling. If no scaling is specified, AutomaticScaling is chosen.
     * 
     */
    @Import(name="instanceClass")
    private @Nullable Output<String> instanceClass;

    public Optional<Output<String>> instanceClass() {
        return Optional.ofNullable(this.instanceClass);
    }

    /**
     * Configuration for third-party Python runtime libraries that are required by the application.
     * Structure is documented below.
     * 
     */
    @Import(name="libraries")
    private @Nullable Output<List<StandardAppVersionLibraryGetArgs>> libraries;

    public Optional<Output<List<StandardAppVersionLibraryGetArgs>>> libraries() {
        return Optional.ofNullable(this.libraries);
    }

    /**
     * A service with manual scaling runs continuously, allowing you to perform complex initialization and rely on the state of its memory over time.
     * Structure is documented below.
     * 
     */
    @Import(name="manualScaling")
    private @Nullable Output<StandardAppVersionManualScalingGetArgs> manualScaling;

    public Optional<Output<StandardAppVersionManualScalingGetArgs>> manualScaling() {
        return Optional.ofNullable(this.manualScaling);
    }

    /**
     * Full Serverless VPC Access Connector name e.g. /projects/my-project/locations/us-central1/connectors/c1.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * If set to `true`, the application version will not be deleted.
     * 
     */
    @Import(name="noopOnDestroy")
    private @Nullable Output<Boolean> noopOnDestroy;

    public Optional<Output<Boolean>> noopOnDestroy() {
        return Optional.ofNullable(this.noopOnDestroy);
    }

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * Desired runtime. Example python27.
     * 
     */
    @Import(name="runtime")
    private @Nullable Output<String> runtime;

    public Optional<Output<String>> runtime() {
        return Optional.ofNullable(this.runtime);
    }

    /**
     * The version of the API in the given runtime environment.
     * Please see the app.yaml reference for valid values at `https://cloud.google.com/appengine/docs/standard/&lt;language&gt;/config/appref`\
     * Substitute `&lt;language&gt;` with `python`, `java`, `php`, `ruby`, `go` or `nodejs`.
     * 
     */
    @Import(name="runtimeApiVersion")
    private @Nullable Output<String> runtimeApiVersion;

    public Optional<Output<String>> runtimeApiVersion() {
        return Optional.ofNullable(this.runtimeApiVersion);
    }

    /**
     * AppEngine service resource
     * 
     */
    @Import(name="service")
    private @Nullable Output<String> service;

    public Optional<Output<String>> service() {
        return Optional.ofNullable(this.service);
    }

    /**
     * Whether multiple requests can be dispatched to this version at once.
     * 
     */
    @Import(name="threadsafe")
    private @Nullable Output<Boolean> threadsafe;

    public Optional<Output<Boolean>> threadsafe() {
        return Optional.ofNullable(this.threadsafe);
    }

    /**
     * Relative name of the version within the service. For example, `v1`. Version names can contain only lowercase letters, numbers, or hyphens. Reserved names,&#34;default&#34;, &#34;latest&#34;, and any name with the prefix &#34;ah-&#34;.
     * 
     */
    @Import(name="versionId")
    private @Nullable Output<String> versionId;

    public Optional<Output<String>> versionId() {
        return Optional.ofNullable(this.versionId);
    }

    /**
     * Enables VPC connectivity for standard apps.
     * Structure is documented below.
     * 
     */
    @Import(name="vpcAccessConnector")
    private @Nullable Output<StandardAppVersionVpcAccessConnectorGetArgs> vpcAccessConnector;

    public Optional<Output<StandardAppVersionVpcAccessConnectorGetArgs>> vpcAccessConnector() {
        return Optional.ofNullable(this.vpcAccessConnector);
    }

    private StandardAppVersionState() {}

    private StandardAppVersionState(StandardAppVersionState $) {
        this.automaticScaling = $.automaticScaling;
        this.basicScaling = $.basicScaling;
        this.deleteServiceOnDestroy = $.deleteServiceOnDestroy;
        this.deployment = $.deployment;
        this.entrypoint = $.entrypoint;
        this.envVariables = $.envVariables;
        this.handlers = $.handlers;
        this.inboundServices = $.inboundServices;
        this.instanceClass = $.instanceClass;
        this.libraries = $.libraries;
        this.manualScaling = $.manualScaling;
        this.name = $.name;
        this.noopOnDestroy = $.noopOnDestroy;
        this.project = $.project;
        this.runtime = $.runtime;
        this.runtimeApiVersion = $.runtimeApiVersion;
        this.service = $.service;
        this.threadsafe = $.threadsafe;
        this.versionId = $.versionId;
        this.vpcAccessConnector = $.vpcAccessConnector;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(StandardAppVersionState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private StandardAppVersionState $;

        public Builder() {
            $ = new StandardAppVersionState();
        }

        public Builder(StandardAppVersionState defaults) {
            $ = new StandardAppVersionState(Objects.requireNonNull(defaults));
        }

        public Builder automaticScaling(@Nullable Output<StandardAppVersionAutomaticScalingGetArgs> automaticScaling) {
            $.automaticScaling = automaticScaling;
            return this;
        }

        public Builder automaticScaling(StandardAppVersionAutomaticScalingGetArgs automaticScaling) {
            return automaticScaling(Output.of(automaticScaling));
        }

        public Builder basicScaling(@Nullable Output<StandardAppVersionBasicScalingGetArgs> basicScaling) {
            $.basicScaling = basicScaling;
            return this;
        }

        public Builder basicScaling(StandardAppVersionBasicScalingGetArgs basicScaling) {
            return basicScaling(Output.of(basicScaling));
        }

        public Builder deleteServiceOnDestroy(@Nullable Output<Boolean> deleteServiceOnDestroy) {
            $.deleteServiceOnDestroy = deleteServiceOnDestroy;
            return this;
        }

        public Builder deleteServiceOnDestroy(Boolean deleteServiceOnDestroy) {
            return deleteServiceOnDestroy(Output.of(deleteServiceOnDestroy));
        }

        public Builder deployment(@Nullable Output<StandardAppVersionDeploymentGetArgs> deployment) {
            $.deployment = deployment;
            return this;
        }

        public Builder deployment(StandardAppVersionDeploymentGetArgs deployment) {
            return deployment(Output.of(deployment));
        }

        public Builder entrypoint(@Nullable Output<StandardAppVersionEntrypointGetArgs> entrypoint) {
            $.entrypoint = entrypoint;
            return this;
        }

        public Builder entrypoint(StandardAppVersionEntrypointGetArgs entrypoint) {
            return entrypoint(Output.of(entrypoint));
        }

        public Builder envVariables(@Nullable Output<Map<String,String>> envVariables) {
            $.envVariables = envVariables;
            return this;
        }

        public Builder envVariables(Map<String,String> envVariables) {
            return envVariables(Output.of(envVariables));
        }

        public Builder handlers(@Nullable Output<List<StandardAppVersionHandlerGetArgs>> handlers) {
            $.handlers = handlers;
            return this;
        }

        public Builder handlers(List<StandardAppVersionHandlerGetArgs> handlers) {
            return handlers(Output.of(handlers));
        }

        public Builder handlers(StandardAppVersionHandlerGetArgs... handlers) {
            return handlers(List.of(handlers));
        }

        public Builder inboundServices(@Nullable Output<List<String>> inboundServices) {
            $.inboundServices = inboundServices;
            return this;
        }

        public Builder inboundServices(List<String> inboundServices) {
            return inboundServices(Output.of(inboundServices));
        }

        public Builder inboundServices(String... inboundServices) {
            return inboundServices(List.of(inboundServices));
        }

        public Builder instanceClass(@Nullable Output<String> instanceClass) {
            $.instanceClass = instanceClass;
            return this;
        }

        public Builder instanceClass(String instanceClass) {
            return instanceClass(Output.of(instanceClass));
        }

        public Builder libraries(@Nullable Output<List<StandardAppVersionLibraryGetArgs>> libraries) {
            $.libraries = libraries;
            return this;
        }

        public Builder libraries(List<StandardAppVersionLibraryGetArgs> libraries) {
            return libraries(Output.of(libraries));
        }

        public Builder libraries(StandardAppVersionLibraryGetArgs... libraries) {
            return libraries(List.of(libraries));
        }

        public Builder manualScaling(@Nullable Output<StandardAppVersionManualScalingGetArgs> manualScaling) {
            $.manualScaling = manualScaling;
            return this;
        }

        public Builder manualScaling(StandardAppVersionManualScalingGetArgs manualScaling) {
            return manualScaling(Output.of(manualScaling));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder noopOnDestroy(@Nullable Output<Boolean> noopOnDestroy) {
            $.noopOnDestroy = noopOnDestroy;
            return this;
        }

        public Builder noopOnDestroy(Boolean noopOnDestroy) {
            return noopOnDestroy(Output.of(noopOnDestroy));
        }

        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        public Builder project(String project) {
            return project(Output.of(project));
        }

        public Builder runtime(@Nullable Output<String> runtime) {
            $.runtime = runtime;
            return this;
        }

        public Builder runtime(String runtime) {
            return runtime(Output.of(runtime));
        }

        public Builder runtimeApiVersion(@Nullable Output<String> runtimeApiVersion) {
            $.runtimeApiVersion = runtimeApiVersion;
            return this;
        }

        public Builder runtimeApiVersion(String runtimeApiVersion) {
            return runtimeApiVersion(Output.of(runtimeApiVersion));
        }

        public Builder service(@Nullable Output<String> service) {
            $.service = service;
            return this;
        }

        public Builder service(String service) {
            return service(Output.of(service));
        }

        public Builder threadsafe(@Nullable Output<Boolean> threadsafe) {
            $.threadsafe = threadsafe;
            return this;
        }

        public Builder threadsafe(Boolean threadsafe) {
            return threadsafe(Output.of(threadsafe));
        }

        public Builder versionId(@Nullable Output<String> versionId) {
            $.versionId = versionId;
            return this;
        }

        public Builder versionId(String versionId) {
            return versionId(Output.of(versionId));
        }

        public Builder vpcAccessConnector(@Nullable Output<StandardAppVersionVpcAccessConnectorGetArgs> vpcAccessConnector) {
            $.vpcAccessConnector = vpcAccessConnector;
            return this;
        }

        public Builder vpcAccessConnector(StandardAppVersionVpcAccessConnectorGetArgs vpcAccessConnector) {
            return vpcAccessConnector(Output.of(vpcAccessConnector));
        }

        public StandardAppVersionState build() {
            return $;
        }
    }

}
