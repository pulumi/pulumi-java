// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class GetInstanceTemplateSchedulingNodeAffinity extends com.pulumi.resources.InvokeArgs {

    public static final GetInstanceTemplateSchedulingNodeAffinity Empty = new GetInstanceTemplateSchedulingNodeAffinity();

    /**
     * The key for the node affinity label.
     * 
     */
    @Import(name="key", required=true)
    private String key;

    /**
     * @return The key for the node affinity label.
     * 
     */
    public String key() {
        return this.key;
    }

    /**
     * The operator. Can be `IN` for node-affinities
     * or `NOT_IN` for anti-affinities.
     * 
     */
    @Import(name="operator", required=true)
    private String operator;

    /**
     * @return The operator. Can be `IN` for node-affinities
     * or `NOT_IN` for anti-affinities.
     * 
     */
    public String operator() {
        return this.operator;
    }

    @Import(name="values", required=true)
    private List<String> values;

    public List<String> values() {
        return this.values;
    }

    private GetInstanceTemplateSchedulingNodeAffinity() {}

    private GetInstanceTemplateSchedulingNodeAffinity(GetInstanceTemplateSchedulingNodeAffinity $) {
        this.key = $.key;
        this.operator = $.operator;
        this.values = $.values;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetInstanceTemplateSchedulingNodeAffinity defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetInstanceTemplateSchedulingNodeAffinity $;

        public Builder() {
            $ = new GetInstanceTemplateSchedulingNodeAffinity();
        }

        public Builder(GetInstanceTemplateSchedulingNodeAffinity defaults) {
            $ = new GetInstanceTemplateSchedulingNodeAffinity(Objects.requireNonNull(defaults));
        }

        /**
         * @param key The key for the node affinity label.
         * 
         * @return builder
         * 
         */
        public Builder key(String key) {
            $.key = key;
            return this;
        }

        /**
         * @param operator The operator. Can be `IN` for node-affinities
         * or `NOT_IN` for anti-affinities.
         * 
         * @return builder
         * 
         */
        public Builder operator(String operator) {
            $.operator = operator;
            return this;
        }

        public Builder values(List<String> values) {
            $.values = values;
            return this;
        }

        public Builder values(String... values) {
            return values(List.of(values));
        }

        public GetInstanceTemplateSchedulingNodeAffinity build() {
            $.key = Objects.requireNonNull($.key, "expected parameter 'key' to be non-null");
            $.operator = Objects.requireNonNull($.operator, "expected parameter 'operator' to be non-null");
            $.values = Objects.requireNonNull($.values, "expected parameter 'values' to be non-null");
            return $;
        }
    }

}
