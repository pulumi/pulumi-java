// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.container.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.container.inputs.GetClusterMaintenancePolicyDailyMaintenanceWindow;
import com.pulumi.gcp.container.inputs.GetClusterMaintenancePolicyMaintenanceExclusion;
import com.pulumi.gcp.container.inputs.GetClusterMaintenancePolicyRecurringWindow;
import java.util.List;
import java.util.Objects;


public final class GetClusterMaintenancePolicy extends com.pulumi.resources.InvokeArgs {

    public static final GetClusterMaintenancePolicy Empty = new GetClusterMaintenancePolicy();

    @Import(name="dailyMaintenanceWindows", required=true)
    private List<GetClusterMaintenancePolicyDailyMaintenanceWindow> dailyMaintenanceWindows;

    public List<GetClusterMaintenancePolicyDailyMaintenanceWindow> dailyMaintenanceWindows() {
        return this.dailyMaintenanceWindows;
    }

    @Import(name="maintenanceExclusions", required=true)
    private List<GetClusterMaintenancePolicyMaintenanceExclusion> maintenanceExclusions;

    public List<GetClusterMaintenancePolicyMaintenanceExclusion> maintenanceExclusions() {
        return this.maintenanceExclusions;
    }

    @Import(name="recurringWindows", required=true)
    private List<GetClusterMaintenancePolicyRecurringWindow> recurringWindows;

    public List<GetClusterMaintenancePolicyRecurringWindow> recurringWindows() {
        return this.recurringWindows;
    }

    private GetClusterMaintenancePolicy() {}

    private GetClusterMaintenancePolicy(GetClusterMaintenancePolicy $) {
        this.dailyMaintenanceWindows = $.dailyMaintenanceWindows;
        this.maintenanceExclusions = $.maintenanceExclusions;
        this.recurringWindows = $.recurringWindows;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetClusterMaintenancePolicy defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetClusterMaintenancePolicy $;

        public Builder() {
            $ = new GetClusterMaintenancePolicy();
        }

        public Builder(GetClusterMaintenancePolicy defaults) {
            $ = new GetClusterMaintenancePolicy(Objects.requireNonNull(defaults));
        }

        public Builder dailyMaintenanceWindows(List<GetClusterMaintenancePolicyDailyMaintenanceWindow> dailyMaintenanceWindows) {
            $.dailyMaintenanceWindows = dailyMaintenanceWindows;
            return this;
        }

        public Builder dailyMaintenanceWindows(GetClusterMaintenancePolicyDailyMaintenanceWindow... dailyMaintenanceWindows) {
            return dailyMaintenanceWindows(List.of(dailyMaintenanceWindows));
        }

        public Builder maintenanceExclusions(List<GetClusterMaintenancePolicyMaintenanceExclusion> maintenanceExclusions) {
            $.maintenanceExclusions = maintenanceExclusions;
            return this;
        }

        public Builder maintenanceExclusions(GetClusterMaintenancePolicyMaintenanceExclusion... maintenanceExclusions) {
            return maintenanceExclusions(List.of(maintenanceExclusions));
        }

        public Builder recurringWindows(List<GetClusterMaintenancePolicyRecurringWindow> recurringWindows) {
            $.recurringWindows = recurringWindows;
            return this;
        }

        public Builder recurringWindows(GetClusterMaintenancePolicyRecurringWindow... recurringWindows) {
            return recurringWindows(List.of(recurringWindows));
        }

        public GetClusterMaintenancePolicy build() {
            $.dailyMaintenanceWindows = Objects.requireNonNull($.dailyMaintenanceWindows, "expected parameter 'dailyMaintenanceWindows' to be non-null");
            $.maintenanceExclusions = Objects.requireNonNull($.maintenanceExclusions, "expected parameter 'maintenanceExclusions' to be non-null");
            $.recurringWindows = Objects.requireNonNull($.recurringWindows, "expected parameter 'recurringWindows' to be non-null");
            return $;
        }
    }

}
