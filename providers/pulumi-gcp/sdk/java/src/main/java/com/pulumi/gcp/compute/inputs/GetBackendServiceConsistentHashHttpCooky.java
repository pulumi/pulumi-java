// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.compute.inputs.GetBackendServiceConsistentHashHttpCookyTtl;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class GetBackendServiceConsistentHashHttpCooky extends com.pulumi.resources.InvokeArgs {

    public static final GetBackendServiceConsistentHashHttpCooky Empty = new GetBackendServiceConsistentHashHttpCooky();

    /**
     * The name of the Backend Service.
     * 
     */
    @Import(name="name", required=true)
    private String name;

    public String name() {
        return this.name;
    }

    @Import(name="path", required=true)
    private String path;

    public String path() {
        return this.path;
    }

    @Import(name="ttls", required=true)
    private List<GetBackendServiceConsistentHashHttpCookyTtl> ttls;

    public List<GetBackendServiceConsistentHashHttpCookyTtl> ttls() {
        return this.ttls;
    }

    private GetBackendServiceConsistentHashHttpCooky() {}

    private GetBackendServiceConsistentHashHttpCooky(GetBackendServiceConsistentHashHttpCooky $) {
        this.name = $.name;
        this.path = $.path;
        this.ttls = $.ttls;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetBackendServiceConsistentHashHttpCooky defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetBackendServiceConsistentHashHttpCooky $;

        public Builder() {
            $ = new GetBackendServiceConsistentHashHttpCooky();
        }

        public Builder(GetBackendServiceConsistentHashHttpCooky defaults) {
            $ = new GetBackendServiceConsistentHashHttpCooky(Objects.requireNonNull(defaults));
        }

        public Builder name(String name) {
            $.name = name;
            return this;
        }

        public Builder path(String path) {
            $.path = path;
            return this;
        }

        public Builder ttls(List<GetBackendServiceConsistentHashHttpCookyTtl> ttls) {
            $.ttls = ttls;
            return this;
        }

        public Builder ttls(GetBackendServiceConsistentHashHttpCookyTtl... ttls) {
            return ttls(List.of(ttls));
        }

        public GetBackendServiceConsistentHashHttpCooky build() {
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            $.path = Objects.requireNonNull($.path, "expected parameter 'path' to be non-null");
            $.ttls = Objects.requireNonNull($.ttls, "expected parameter 'ttls' to be non-null");
            return $;
        }
    }

}
