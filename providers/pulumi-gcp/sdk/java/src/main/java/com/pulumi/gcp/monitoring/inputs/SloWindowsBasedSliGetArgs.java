// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.monitoring.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.monitoring.inputs.SloWindowsBasedSliGoodTotalRatioThresholdGetArgs;
import com.pulumi.gcp.monitoring.inputs.SloWindowsBasedSliMetricMeanInRangeGetArgs;
import com.pulumi.gcp.monitoring.inputs.SloWindowsBasedSliMetricSumInRangeGetArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SloWindowsBasedSliGetArgs extends com.pulumi.resources.ResourceArgs {

    public static final SloWindowsBasedSliGetArgs Empty = new SloWindowsBasedSliGetArgs();

    /**
     * A TimeSeries [monitoring filter](https://cloud.google.com/monitoring/api/v3/filters)
     * with ValueType = BOOL. The window is good if any true values
     * appear in the window. One of `good_bad_metric_filter`,
     * `good_total_ratio_threshold`, `metric_mean_in_range`,
     * `metric_sum_in_range` must be set for `windows_based_sli`.
     * 
     */
    @Import(name="goodBadMetricFilter")
    private @Nullable Output<String> goodBadMetricFilter;

    public Optional<Output<String>> goodBadMetricFilter() {
        return Optional.ofNullable(this.goodBadMetricFilter);
    }

    /**
     * Criterion that describes a window as good if its performance is
     * high enough. One of `good_bad_metric_filter`,
     * `good_total_ratio_threshold`, `metric_mean_in_range`,
     * `metric_sum_in_range` must be set for `windows_based_sli`.
     * Structure is documented below.
     * 
     */
    @Import(name="goodTotalRatioThreshold")
    private @Nullable Output<SloWindowsBasedSliGoodTotalRatioThresholdGetArgs> goodTotalRatioThreshold;

    public Optional<Output<SloWindowsBasedSliGoodTotalRatioThresholdGetArgs>> goodTotalRatioThreshold() {
        return Optional.ofNullable(this.goodTotalRatioThreshold);
    }

    /**
     * Criterion that describes a window as good if the metric&#39;s value
     * is in a good range, *averaged* across returned streams.
     * One of `good_bad_metric_filter`,
     * `good_total_ratio_threshold`, `metric_mean_in_range`,
     * `metric_sum_in_range` must be set for `windows_based_sli`.
     * Average value X of `time_series` should satisfy
     * `range.min &lt;= X &lt;= range.max` for a good window.
     * Structure is documented below.
     * 
     */
    @Import(name="metricMeanInRange")
    private @Nullable Output<SloWindowsBasedSliMetricMeanInRangeGetArgs> metricMeanInRange;

    public Optional<Output<SloWindowsBasedSliMetricMeanInRangeGetArgs>> metricMeanInRange() {
        return Optional.ofNullable(this.metricMeanInRange);
    }

    /**
     * Criterion that describes a window as good if the metric&#39;s value
     * is in a good range, *summed* across returned streams.
     * Summed value `X` of `time_series` should satisfy
     * `range.min &lt;= X &lt;= range.max` for a good window.
     * One of `good_bad_metric_filter`,
     * `good_total_ratio_threshold`, `metric_mean_in_range`,
     * `metric_sum_in_range` must be set for `windows_based_sli`.
     * Structure is documented below.
     * 
     */
    @Import(name="metricSumInRange")
    private @Nullable Output<SloWindowsBasedSliMetricSumInRangeGetArgs> metricSumInRange;

    public Optional<Output<SloWindowsBasedSliMetricSumInRangeGetArgs>> metricSumInRange() {
        return Optional.ofNullable(this.metricSumInRange);
    }

    /**
     * Duration over which window quality is evaluated, given as a
     * duration string &#34;{X}s&#34; representing X seconds. Must be an
     * integer fraction of a day and at least 60s.
     * 
     */
    @Import(name="windowPeriod")
    private @Nullable Output<String> windowPeriod;

    public Optional<Output<String>> windowPeriod() {
        return Optional.ofNullable(this.windowPeriod);
    }

    private SloWindowsBasedSliGetArgs() {}

    private SloWindowsBasedSliGetArgs(SloWindowsBasedSliGetArgs $) {
        this.goodBadMetricFilter = $.goodBadMetricFilter;
        this.goodTotalRatioThreshold = $.goodTotalRatioThreshold;
        this.metricMeanInRange = $.metricMeanInRange;
        this.metricSumInRange = $.metricSumInRange;
        this.windowPeriod = $.windowPeriod;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SloWindowsBasedSliGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SloWindowsBasedSliGetArgs $;

        public Builder() {
            $ = new SloWindowsBasedSliGetArgs();
        }

        public Builder(SloWindowsBasedSliGetArgs defaults) {
            $ = new SloWindowsBasedSliGetArgs(Objects.requireNonNull(defaults));
        }

        public Builder goodBadMetricFilter(@Nullable Output<String> goodBadMetricFilter) {
            $.goodBadMetricFilter = goodBadMetricFilter;
            return this;
        }

        public Builder goodBadMetricFilter(String goodBadMetricFilter) {
            return goodBadMetricFilter(Output.of(goodBadMetricFilter));
        }

        public Builder goodTotalRatioThreshold(@Nullable Output<SloWindowsBasedSliGoodTotalRatioThresholdGetArgs> goodTotalRatioThreshold) {
            $.goodTotalRatioThreshold = goodTotalRatioThreshold;
            return this;
        }

        public Builder goodTotalRatioThreshold(SloWindowsBasedSliGoodTotalRatioThresholdGetArgs goodTotalRatioThreshold) {
            return goodTotalRatioThreshold(Output.of(goodTotalRatioThreshold));
        }

        public Builder metricMeanInRange(@Nullable Output<SloWindowsBasedSliMetricMeanInRangeGetArgs> metricMeanInRange) {
            $.metricMeanInRange = metricMeanInRange;
            return this;
        }

        public Builder metricMeanInRange(SloWindowsBasedSliMetricMeanInRangeGetArgs metricMeanInRange) {
            return metricMeanInRange(Output.of(metricMeanInRange));
        }

        public Builder metricSumInRange(@Nullable Output<SloWindowsBasedSliMetricSumInRangeGetArgs> metricSumInRange) {
            $.metricSumInRange = metricSumInRange;
            return this;
        }

        public Builder metricSumInRange(SloWindowsBasedSliMetricSumInRangeGetArgs metricSumInRange) {
            return metricSumInRange(Output.of(metricSumInRange));
        }

        public Builder windowPeriod(@Nullable Output<String> windowPeriod) {
            $.windowPeriod = windowPeriod;
            return this;
        }

        public Builder windowPeriod(String windowPeriod) {
            return windowPeriod(Output.of(windowPeriod));
        }

        public SloWindowsBasedSliGetArgs build() {
            return $;
        }
    }

}
