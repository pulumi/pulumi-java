// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.recaptcha;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.recaptcha.inputs.EnterpriseKeyAndroidSettingsArgs;
import com.pulumi.gcp.recaptcha.inputs.EnterpriseKeyIosSettingsArgs;
import com.pulumi.gcp.recaptcha.inputs.EnterpriseKeyTestingOptionsArgs;
import com.pulumi.gcp.recaptcha.inputs.EnterpriseKeyWebSettingsArgs;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class EnterpriseKeyArgs extends com.pulumi.resources.ResourceArgs {

    public static final EnterpriseKeyArgs Empty = new EnterpriseKeyArgs();

    /**
     * Settings for keys that can be used by Android apps.
     * 
     */
    @Import(name="androidSettings")
    private @Nullable Output<EnterpriseKeyAndroidSettingsArgs> androidSettings;

    public Optional<Output<EnterpriseKeyAndroidSettingsArgs>> androidSettings() {
        return Optional.ofNullable(this.androidSettings);
    }

    /**
     * Human-readable display name of this key. Modifiable by user.
     * 
     */
    @Import(name="displayName", required=true)
    private Output<String> displayName;

    public Output<String> displayName() {
        return this.displayName;
    }

    /**
     * Settings for keys that can be used by iOS apps.
     * 
     */
    @Import(name="iosSettings")
    private @Nullable Output<EnterpriseKeyIosSettingsArgs> iosSettings;

    public Optional<Output<EnterpriseKeyIosSettingsArgs>> iosSettings() {
        return Optional.ofNullable(this.iosSettings);
    }

    /**
     * See [Creating and managing labels](https://cloud.google.com/recaptcha-enterprise/docs/labels).
     * 
     */
    @Import(name="labels")
    private @Nullable Output<Map<String,String>> labels;

    public Optional<Output<Map<String,String>>> labels() {
        return Optional.ofNullable(this.labels);
    }

    /**
     * The project for the resource
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * Options for user acceptance testing.
     * 
     */
    @Import(name="testingOptions")
    private @Nullable Output<EnterpriseKeyTestingOptionsArgs> testingOptions;

    public Optional<Output<EnterpriseKeyTestingOptionsArgs>> testingOptions() {
        return Optional.ofNullable(this.testingOptions);
    }

    /**
     * Settings for keys that can be used by websites.
     * 
     */
    @Import(name="webSettings")
    private @Nullable Output<EnterpriseKeyWebSettingsArgs> webSettings;

    public Optional<Output<EnterpriseKeyWebSettingsArgs>> webSettings() {
        return Optional.ofNullable(this.webSettings);
    }

    private EnterpriseKeyArgs() {}

    private EnterpriseKeyArgs(EnterpriseKeyArgs $) {
        this.androidSettings = $.androidSettings;
        this.displayName = $.displayName;
        this.iosSettings = $.iosSettings;
        this.labels = $.labels;
        this.project = $.project;
        this.testingOptions = $.testingOptions;
        this.webSettings = $.webSettings;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EnterpriseKeyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EnterpriseKeyArgs $;

        public Builder() {
            $ = new EnterpriseKeyArgs();
        }

        public Builder(EnterpriseKeyArgs defaults) {
            $ = new EnterpriseKeyArgs(Objects.requireNonNull(defaults));
        }

        public Builder androidSettings(@Nullable Output<EnterpriseKeyAndroidSettingsArgs> androidSettings) {
            $.androidSettings = androidSettings;
            return this;
        }

        public Builder androidSettings(EnterpriseKeyAndroidSettingsArgs androidSettings) {
            return androidSettings(Output.of(androidSettings));
        }

        public Builder displayName(Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        public Builder iosSettings(@Nullable Output<EnterpriseKeyIosSettingsArgs> iosSettings) {
            $.iosSettings = iosSettings;
            return this;
        }

        public Builder iosSettings(EnterpriseKeyIosSettingsArgs iosSettings) {
            return iosSettings(Output.of(iosSettings));
        }

        public Builder labels(@Nullable Output<Map<String,String>> labels) {
            $.labels = labels;
            return this;
        }

        public Builder labels(Map<String,String> labels) {
            return labels(Output.of(labels));
        }

        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        public Builder project(String project) {
            return project(Output.of(project));
        }

        public Builder testingOptions(@Nullable Output<EnterpriseKeyTestingOptionsArgs> testingOptions) {
            $.testingOptions = testingOptions;
            return this;
        }

        public Builder testingOptions(EnterpriseKeyTestingOptionsArgs testingOptions) {
            return testingOptions(Output.of(testingOptions));
        }

        public Builder webSettings(@Nullable Output<EnterpriseKeyWebSettingsArgs> webSettings) {
            $.webSettings = webSettings;
            return this;
        }

        public Builder webSettings(EnterpriseKeyWebSettingsArgs webSettings) {
            return webSettings(Output.of(webSettings));
        }

        public EnterpriseKeyArgs build() {
            $.displayName = Objects.requireNonNull($.displayName, "expected parameter 'displayName' to be non-null");
            return $;
        }
    }

}
