// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.cloudidentity.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.cloudidentity.inputs.GetGroupsGroupGroupKey;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;


public final class GetGroupsGroup extends com.pulumi.resources.InvokeArgs {

    public static final GetGroupsGroup Empty = new GetGroupsGroup();

    @Import(name="createTime", required=true)
    private String createTime;

    public String createTime() {
        return this.createTime;
    }

    @Import(name="description", required=true)
    private String description;

    public String description() {
        return this.description;
    }

    @Import(name="displayName", required=true)
    private String displayName;

    public String displayName() {
        return this.displayName;
    }

    @Import(name="groupKeys", required=true)
    private List<GetGroupsGroupGroupKey> groupKeys;

    public List<GetGroupsGroupGroupKey> groupKeys() {
        return this.groupKeys;
    }

    @Import(name="initialGroupConfig", required=true)
    private String initialGroupConfig;

    public String initialGroupConfig() {
        return this.initialGroupConfig;
    }

    @Import(name="labels", required=true)
    private Map<String,String> labels;

    public Map<String,String> labels() {
        return this.labels;
    }

    @Import(name="name", required=true)
    private String name;

    public String name() {
        return this.name;
    }

    /**
     * The parent resource under which to list all Groups. Must be of the form identitysources/{identity_source_id} for external- identity-mapped groups or customers/{customer_id} for Google Groups.
     * 
     */
    @Import(name="parent", required=true)
    private String parent;

    /**
     * @return The parent resource under which to list all Groups. Must be of the form identitysources/{identity_source_id} for external- identity-mapped groups or customers/{customer_id} for Google Groups.
     * 
     */
    public String parent() {
        return this.parent;
    }

    @Import(name="updateTime", required=true)
    private String updateTime;

    public String updateTime() {
        return this.updateTime;
    }

    private GetGroupsGroup() {}

    private GetGroupsGroup(GetGroupsGroup $) {
        this.createTime = $.createTime;
        this.description = $.description;
        this.displayName = $.displayName;
        this.groupKeys = $.groupKeys;
        this.initialGroupConfig = $.initialGroupConfig;
        this.labels = $.labels;
        this.name = $.name;
        this.parent = $.parent;
        this.updateTime = $.updateTime;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetGroupsGroup defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetGroupsGroup $;

        public Builder() {
            $ = new GetGroupsGroup();
        }

        public Builder(GetGroupsGroup defaults) {
            $ = new GetGroupsGroup(Objects.requireNonNull(defaults));
        }

        public Builder createTime(String createTime) {
            $.createTime = createTime;
            return this;
        }

        public Builder description(String description) {
            $.description = description;
            return this;
        }

        public Builder displayName(String displayName) {
            $.displayName = displayName;
            return this;
        }

        public Builder groupKeys(List<GetGroupsGroupGroupKey> groupKeys) {
            $.groupKeys = groupKeys;
            return this;
        }

        public Builder groupKeys(GetGroupsGroupGroupKey... groupKeys) {
            return groupKeys(List.of(groupKeys));
        }

        public Builder initialGroupConfig(String initialGroupConfig) {
            $.initialGroupConfig = initialGroupConfig;
            return this;
        }

        public Builder labels(Map<String,String> labels) {
            $.labels = labels;
            return this;
        }

        public Builder name(String name) {
            $.name = name;
            return this;
        }

        /**
         * @param parent The parent resource under which to list all Groups. Must be of the form identitysources/{identity_source_id} for external- identity-mapped groups or customers/{customer_id} for Google Groups.
         * 
         * @return builder
         * 
         */
        public Builder parent(String parent) {
            $.parent = parent;
            return this;
        }

        public Builder updateTime(String updateTime) {
            $.updateTime = updateTime;
            return this;
        }

        public GetGroupsGroup build() {
            $.createTime = Objects.requireNonNull($.createTime, "expected parameter 'createTime' to be non-null");
            $.description = Objects.requireNonNull($.description, "expected parameter 'description' to be non-null");
            $.displayName = Objects.requireNonNull($.displayName, "expected parameter 'displayName' to be non-null");
            $.groupKeys = Objects.requireNonNull($.groupKeys, "expected parameter 'groupKeys' to be non-null");
            $.initialGroupConfig = Objects.requireNonNull($.initialGroupConfig, "expected parameter 'initialGroupConfig' to be non-null");
            $.labels = Objects.requireNonNull($.labels, "expected parameter 'labels' to be non-null");
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            $.parent = Objects.requireNonNull($.parent, "expected parameter 'parent' to be non-null");
            $.updateTime = Objects.requireNonNull($.updateTime, "expected parameter 'updateTime' to be non-null");
            return $;
        }
    }

}
