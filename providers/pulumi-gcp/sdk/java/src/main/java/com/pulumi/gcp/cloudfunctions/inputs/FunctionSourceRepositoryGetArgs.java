// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.cloudfunctions.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FunctionSourceRepositoryGetArgs extends com.pulumi.resources.ResourceArgs {

    public static final FunctionSourceRepositoryGetArgs Empty = new FunctionSourceRepositoryGetArgs();

    @Import(name="deployedUrl")
    private @Nullable Output<String> deployedUrl;

    public Optional<Output<String>> deployedUrl() {
        return Optional.ofNullable(this.deployedUrl);
    }

    /**
     * The URL pointing to the hosted repository where the function is defined. There are supported Cloud Source Repository URLs in the following formats:
     * 
     */
    @Import(name="url", required=true)
    private Output<String> url;

    public Output<String> url() {
        return this.url;
    }

    private FunctionSourceRepositoryGetArgs() {}

    private FunctionSourceRepositoryGetArgs(FunctionSourceRepositoryGetArgs $) {
        this.deployedUrl = $.deployedUrl;
        this.url = $.url;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FunctionSourceRepositoryGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FunctionSourceRepositoryGetArgs $;

        public Builder() {
            $ = new FunctionSourceRepositoryGetArgs();
        }

        public Builder(FunctionSourceRepositoryGetArgs defaults) {
            $ = new FunctionSourceRepositoryGetArgs(Objects.requireNonNull(defaults));
        }

        public Builder deployedUrl(@Nullable Output<String> deployedUrl) {
            $.deployedUrl = deployedUrl;
            return this;
        }

        public Builder deployedUrl(String deployedUrl) {
            return deployedUrl(Output.of(deployedUrl));
        }

        public Builder url(Output<String> url) {
            $.url = url;
            return this;
        }

        public Builder url(String url) {
            return url(Output.of(url));
        }

        public FunctionSourceRepositoryGetArgs build() {
            $.url = Objects.requireNonNull($.url, "expected parameter 'url' to be non-null");
            return $;
        }
    }

}
