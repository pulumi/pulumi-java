// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.cloudbuild.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TriggerPubsubConfigGetArgs extends com.pulumi.resources.ResourceArgs {

    public static final TriggerPubsubConfigGetArgs Empty = new TriggerPubsubConfigGetArgs();

    /**
     * Service account that will make the push request.
     * 
     */
    @Import(name="serviceAccountEmail")
    private @Nullable Output<String> serviceAccountEmail;

    public Optional<Output<String>> serviceAccountEmail() {
        return Optional.ofNullable(this.serviceAccountEmail);
    }

    /**
     * - 
     * Potential issues with the underlying Pub/Sub subscription configuration.
     * Only populated on get requests.
     * 
     */
    @Import(name="state")
    private @Nullable Output<String> state;

    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    /**
     * - 
     * Output only. Name of the subscription.
     * 
     */
    @Import(name="subscription")
    private @Nullable Output<String> subscription;

    public Optional<Output<String>> subscription() {
        return Optional.ofNullable(this.subscription);
    }

    /**
     * The name of the topic from which this subscription is receiving messages.
     * 
     */
    @Import(name="topic", required=true)
    private Output<String> topic;

    public Output<String> topic() {
        return this.topic;
    }

    private TriggerPubsubConfigGetArgs() {}

    private TriggerPubsubConfigGetArgs(TriggerPubsubConfigGetArgs $) {
        this.serviceAccountEmail = $.serviceAccountEmail;
        this.state = $.state;
        this.subscription = $.subscription;
        this.topic = $.topic;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TriggerPubsubConfigGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TriggerPubsubConfigGetArgs $;

        public Builder() {
            $ = new TriggerPubsubConfigGetArgs();
        }

        public Builder(TriggerPubsubConfigGetArgs defaults) {
            $ = new TriggerPubsubConfigGetArgs(Objects.requireNonNull(defaults));
        }

        public Builder serviceAccountEmail(@Nullable Output<String> serviceAccountEmail) {
            $.serviceAccountEmail = serviceAccountEmail;
            return this;
        }

        public Builder serviceAccountEmail(String serviceAccountEmail) {
            return serviceAccountEmail(Output.of(serviceAccountEmail));
        }

        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        public Builder state(String state) {
            return state(Output.of(state));
        }

        public Builder subscription(@Nullable Output<String> subscription) {
            $.subscription = subscription;
            return this;
        }

        public Builder subscription(String subscription) {
            return subscription(Output.of(subscription));
        }

        public Builder topic(Output<String> topic) {
            $.topic = topic;
            return this;
        }

        public Builder topic(String topic) {
            return topic(Output.of(topic));
        }

        public TriggerPubsubConfigGetArgs build() {
            $.topic = Objects.requireNonNull($.topic, "expected parameter 'topic' to be non-null");
            return $;
        }
    }

}
