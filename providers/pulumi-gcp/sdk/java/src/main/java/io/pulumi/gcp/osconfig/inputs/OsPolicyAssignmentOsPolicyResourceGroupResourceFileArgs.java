// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.osconfig.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import io.pulumi.gcp.osconfig.inputs.OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileArgs;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class OsPolicyAssignmentOsPolicyResourceGroupResourceFileArgs extends io.pulumi.resources.ResourceArgs {

    public static final OsPolicyAssignmentOsPolicyResourceGroupResourceFileArgs Empty = new OsPolicyAssignmentOsPolicyResourceGroupResourceFileArgs();

    /**
     * A a file with this content. The size of the content is limited to 1024 characters.
     * 
     */
    @InputImport(name="content")
    private final @Nullable Input<String> content;

    public Input<String> getContent() {
        return this.content == null ? Input.empty() : this.content;
    }

    /**
     * A remote or local source.
     * 
     */
    @InputImport(name="file")
    private final @Nullable Input<OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileArgs> file;

    public Input<OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileArgs> getFile() {
        return this.file == null ? Input.empty() : this.file;
    }

    /**
     * Required. The absolute path of the file within the VM.
     * 
     */
    @InputImport(name="path", required=true)
    private final Input<String> path;

    public Input<String> getPath() {
        return this.path;
    }

    /**
     * - 
     * Consists of three octal digits which represent, in order, the permissions of the owner, group, and other users for the file (similarly to the numeric mode used in the linux chmod utility). Each digit represents a three bit number with the 4 bit corresponding to the read permissions, the 2 bit corresponds to the write bit, and the one bit corresponds to the execute permission. Default behavior is 755. Below are some examples of permissions and their associated values: read, write, and execute: 7 read and execute: 5 read and write: 6 read only: 4
     * 
     */
    @InputImport(name="permissions")
    private final @Nullable Input<String> permissions;

    public Input<String> getPermissions() {
        return this.permissions == null ? Input.empty() : this.permissions;
    }

    /**
     * Required. Desired state of the file. Possible values: OS_POLICY_COMPLIANCE_STATE_UNSPECIFIED, COMPLIANT, NON_COMPLIANT, UNKNOWN, NO_OS_POLICIES_APPLICABLE
     * 
     */
    @InputImport(name="state", required=true)
    private final Input<String> state;

    public Input<String> getState() {
        return this.state;
    }

    public OsPolicyAssignmentOsPolicyResourceGroupResourceFileArgs(
        @Nullable Input<String> content,
        @Nullable Input<OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileArgs> file,
        Input<String> path,
        @Nullable Input<String> permissions,
        Input<String> state) {
        this.content = content;
        this.file = file;
        this.path = Objects.requireNonNull(path, "expected parameter 'path' to be non-null");
        this.permissions = permissions;
        this.state = Objects.requireNonNull(state, "expected parameter 'state' to be non-null");
    }

    private OsPolicyAssignmentOsPolicyResourceGroupResourceFileArgs() {
        this.content = Input.empty();
        this.file = Input.empty();
        this.path = Input.empty();
        this.permissions = Input.empty();
        this.state = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(OsPolicyAssignmentOsPolicyResourceGroupResourceFileArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> content;
        private @Nullable Input<OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileArgs> file;
        private Input<String> path;
        private @Nullable Input<String> permissions;
        private Input<String> state;

        public Builder() {
    	      // Empty
        }

        public Builder(OsPolicyAssignmentOsPolicyResourceGroupResourceFileArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.content = defaults.content;
    	      this.file = defaults.file;
    	      this.path = defaults.path;
    	      this.permissions = defaults.permissions;
    	      this.state = defaults.state;
        }

        public Builder setContent(@Nullable Input<String> content) {
            this.content = content;
            return this;
        }

        public Builder setContent(@Nullable String content) {
            this.content = Input.ofNullable(content);
            return this;
        }

        public Builder setFile(@Nullable Input<OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileArgs> file) {
            this.file = file;
            return this;
        }

        public Builder setFile(@Nullable OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileArgs file) {
            this.file = Input.ofNullable(file);
            return this;
        }

        public Builder setPath(Input<String> path) {
            this.path = Objects.requireNonNull(path);
            return this;
        }

        public Builder setPath(String path) {
            this.path = Input.of(Objects.requireNonNull(path));
            return this;
        }

        public Builder setPermissions(@Nullable Input<String> permissions) {
            this.permissions = permissions;
            return this;
        }

        public Builder setPermissions(@Nullable String permissions) {
            this.permissions = Input.ofNullable(permissions);
            return this;
        }

        public Builder setState(Input<String> state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }

        public Builder setState(String state) {
            this.state = Input.of(Objects.requireNonNull(state));
            return this;
        }

        public OsPolicyAssignmentOsPolicyResourceGroupResourceFileArgs build() {
            return new OsPolicyAssignmentOsPolicyResourceGroupResourceFileArgs(content, file, path, permissions, state);
        }
    }
}
