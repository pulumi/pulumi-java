// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.dataloss.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import io.pulumi.gcp.dataloss.outputs.PreventionInspectTemplateInspectConfigLimitsMaxFindingsPerInfoTypeInfoType;
import java.lang.Integer;
import java.util.Objects;

@OutputCustomType
public final class PreventionInspectTemplateInspectConfigLimitsMaxFindingsPerInfoType {
    private final PreventionInspectTemplateInspectConfigLimitsMaxFindingsPerInfoTypeInfoType infoType;
    private final Integer maxFindings;

    @OutputCustomType.Constructor({"infoType","maxFindings"})
    private PreventionInspectTemplateInspectConfigLimitsMaxFindingsPerInfoType(
        PreventionInspectTemplateInspectConfigLimitsMaxFindingsPerInfoTypeInfoType infoType,
        Integer maxFindings) {
        this.infoType = Objects.requireNonNull(infoType);
        this.maxFindings = Objects.requireNonNull(maxFindings);
    }

    public PreventionInspectTemplateInspectConfigLimitsMaxFindingsPerInfoTypeInfoType getInfoType() {
        return this.infoType;
    }
    public Integer getMaxFindings() {
        return this.maxFindings;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PreventionInspectTemplateInspectConfigLimitsMaxFindingsPerInfoType defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PreventionInspectTemplateInspectConfigLimitsMaxFindingsPerInfoTypeInfoType infoType;
        private Integer maxFindings;

        public Builder() {
    	      // Empty
        }

        public Builder(PreventionInspectTemplateInspectConfigLimitsMaxFindingsPerInfoType defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.infoType = defaults.infoType;
    	      this.maxFindings = defaults.maxFindings;
        }

        public Builder setInfoType(PreventionInspectTemplateInspectConfigLimitsMaxFindingsPerInfoTypeInfoType infoType) {
            this.infoType = Objects.requireNonNull(infoType);
            return this;
        }

        public Builder setMaxFindings(Integer maxFindings) {
            this.maxFindings = Objects.requireNonNull(maxFindings);
            return this;
        }

        public PreventionInspectTemplateInspectConfigLimitsMaxFindingsPerInfoType build() {
            return new PreventionInspectTemplateInspectConfigLimitsMaxFindingsPerInfoType(infoType, maxFindings);
        }
    }
}
