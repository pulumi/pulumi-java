// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.networkconnectivity.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import io.pulumi.gcp.networkconnectivity.inputs.SpokeLinkedInterconnectAttachmentsGetArgs;
import io.pulumi.gcp.networkconnectivity.inputs.SpokeLinkedRouterApplianceInstancesGetArgs;
import io.pulumi.gcp.networkconnectivity.inputs.SpokeLinkedVpnTunnelsGetArgs;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class SpokeState extends io.pulumi.resources.ResourceArgs {

    public static final SpokeState Empty = new SpokeState();

    /**
     * Output only. The time the spoke was created.
     * 
     */
    @Import(name="createTime")
      private final @Nullable Output<String> createTime;

    public Output<String> getCreateTime() {
        return this.createTime == null ? Codegen.empty() : this.createTime;
    }

    /**
     * An optional description of the spoke.
     * 
     */
    @Import(name="description")
      private final @Nullable Output<String> description;

    public Output<String> getDescription() {
        return this.description == null ? Codegen.empty() : this.description;
    }

    /**
     * Immutable. The URI of the hub that this spoke is attached to.
     * 
     */
    @Import(name="hub")
      private final @Nullable Output<String> hub;

    public Output<String> getHub() {
        return this.hub == null ? Codegen.empty() : this.hub;
    }

    /**
     * Optional labels in key:value format. For more information about labels, see [Requirements for labels](https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements).
     * 
     */
    @Import(name="labels")
      private final @Nullable Output<Map<String,String>> labels;

    public Output<Map<String,String>> getLabels() {
        return this.labels == null ? Codegen.empty() : this.labels;
    }

    /**
     * A collection of VLAN attachment resources. These resources should be redundant attachments that all advertise the same prefixes to Google Cloud. Alternatively, in active/passive configurations, all attachments should be capable of advertising the same prefixes.
     * 
     */
    @Import(name="linkedInterconnectAttachments")
      private final @Nullable Output<SpokeLinkedInterconnectAttachmentsGetArgs> linkedInterconnectAttachments;

    public Output<SpokeLinkedInterconnectAttachmentsGetArgs> getLinkedInterconnectAttachments() {
        return this.linkedInterconnectAttachments == null ? Codegen.empty() : this.linkedInterconnectAttachments;
    }

    /**
     * The URIs of linked Router appliance resources
     * 
     */
    @Import(name="linkedRouterApplianceInstances")
      private final @Nullable Output<SpokeLinkedRouterApplianceInstancesGetArgs> linkedRouterApplianceInstances;

    public Output<SpokeLinkedRouterApplianceInstancesGetArgs> getLinkedRouterApplianceInstances() {
        return this.linkedRouterApplianceInstances == null ? Codegen.empty() : this.linkedRouterApplianceInstances;
    }

    /**
     * The URIs of linked VPN tunnel resources
     * 
     */
    @Import(name="linkedVpnTunnels")
      private final @Nullable Output<SpokeLinkedVpnTunnelsGetArgs> linkedVpnTunnels;

    public Output<SpokeLinkedVpnTunnelsGetArgs> getLinkedVpnTunnels() {
        return this.linkedVpnTunnels == null ? Codegen.empty() : this.linkedVpnTunnels;
    }

    /**
     * The location for the resource
     * 
     */
    @Import(name="location")
      private final @Nullable Output<String> location;

    public Output<String> getLocation() {
        return this.location == null ? Codegen.empty() : this.location;
    }

    /**
     * Immutable. The name of the spoke. Spoke names must be unique.
     * 
     */
    @Import(name="name")
      private final @Nullable Output<String> name;

    public Output<String> getName() {
        return this.name == null ? Codegen.empty() : this.name;
    }

    /**
     * The project for the resource
     * 
     */
    @Import(name="project")
      private final @Nullable Output<String> project;

    public Output<String> getProject() {
        return this.project == null ? Codegen.empty() : this.project;
    }

    /**
     * Output only. The current lifecycle state of this spoke. Possible values: STATE_UNSPECIFIED, CREATING, ACTIVE, DELETING
     * 
     */
    @Import(name="state")
      private final @Nullable Output<String> state;

    public Output<String> getState() {
        return this.state == null ? Codegen.empty() : this.state;
    }

    /**
     * Output only. The Google-generated UUID for the spoke. This value is unique across all spoke resources. If a spoke is
     * deleted and another with the same name is created, the new spoke is assigned a different unique_id.
     * 
     */
    @Import(name="uniqueId")
      private final @Nullable Output<String> uniqueId;

    public Output<String> getUniqueId() {
        return this.uniqueId == null ? Codegen.empty() : this.uniqueId;
    }

    /**
     * Output only. The time the spoke was last updated.
     * 
     */
    @Import(name="updateTime")
      private final @Nullable Output<String> updateTime;

    public Output<String> getUpdateTime() {
        return this.updateTime == null ? Codegen.empty() : this.updateTime;
    }

    public SpokeState(
        @Nullable Output<String> createTime,
        @Nullable Output<String> description,
        @Nullable Output<String> hub,
        @Nullable Output<Map<String,String>> labels,
        @Nullable Output<SpokeLinkedInterconnectAttachmentsGetArgs> linkedInterconnectAttachments,
        @Nullable Output<SpokeLinkedRouterApplianceInstancesGetArgs> linkedRouterApplianceInstances,
        @Nullable Output<SpokeLinkedVpnTunnelsGetArgs> linkedVpnTunnels,
        @Nullable Output<String> location,
        @Nullable Output<String> name,
        @Nullable Output<String> project,
        @Nullable Output<String> state,
        @Nullable Output<String> uniqueId,
        @Nullable Output<String> updateTime) {
        this.createTime = createTime;
        this.description = description;
        this.hub = hub;
        this.labels = labels;
        this.linkedInterconnectAttachments = linkedInterconnectAttachments;
        this.linkedRouterApplianceInstances = linkedRouterApplianceInstances;
        this.linkedVpnTunnels = linkedVpnTunnels;
        this.location = location;
        this.name = name;
        this.project = project;
        this.state = state;
        this.uniqueId = uniqueId;
        this.updateTime = updateTime;
    }

    private SpokeState() {
        this.createTime = Codegen.empty();
        this.description = Codegen.empty();
        this.hub = Codegen.empty();
        this.labels = Codegen.empty();
        this.linkedInterconnectAttachments = Codegen.empty();
        this.linkedRouterApplianceInstances = Codegen.empty();
        this.linkedVpnTunnels = Codegen.empty();
        this.location = Codegen.empty();
        this.name = Codegen.empty();
        this.project = Codegen.empty();
        this.state = Codegen.empty();
        this.uniqueId = Codegen.empty();
        this.updateTime = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SpokeState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> createTime;
        private @Nullable Output<String> description;
        private @Nullable Output<String> hub;
        private @Nullable Output<Map<String,String>> labels;
        private @Nullable Output<SpokeLinkedInterconnectAttachmentsGetArgs> linkedInterconnectAttachments;
        private @Nullable Output<SpokeLinkedRouterApplianceInstancesGetArgs> linkedRouterApplianceInstances;
        private @Nullable Output<SpokeLinkedVpnTunnelsGetArgs> linkedVpnTunnels;
        private @Nullable Output<String> location;
        private @Nullable Output<String> name;
        private @Nullable Output<String> project;
        private @Nullable Output<String> state;
        private @Nullable Output<String> uniqueId;
        private @Nullable Output<String> updateTime;

        public Builder() {
    	      // Empty
        }

        public Builder(SpokeState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.createTime = defaults.createTime;
    	      this.description = defaults.description;
    	      this.hub = defaults.hub;
    	      this.labels = defaults.labels;
    	      this.linkedInterconnectAttachments = defaults.linkedInterconnectAttachments;
    	      this.linkedRouterApplianceInstances = defaults.linkedRouterApplianceInstances;
    	      this.linkedVpnTunnels = defaults.linkedVpnTunnels;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.project = defaults.project;
    	      this.state = defaults.state;
    	      this.uniqueId = defaults.uniqueId;
    	      this.updateTime = defaults.updateTime;
        }

        public Builder createTime(@Nullable Output<String> createTime) {
            this.createTime = createTime;
            return this;
        }
        public Builder createTime(@Nullable String createTime) {
            this.createTime = Codegen.ofNullable(createTime);
            return this;
        }
        public Builder description(@Nullable Output<String> description) {
            this.description = description;
            return this;
        }
        public Builder description(@Nullable String description) {
            this.description = Codegen.ofNullable(description);
            return this;
        }
        public Builder hub(@Nullable Output<String> hub) {
            this.hub = hub;
            return this;
        }
        public Builder hub(@Nullable String hub) {
            this.hub = Codegen.ofNullable(hub);
            return this;
        }
        public Builder labels(@Nullable Output<Map<String,String>> labels) {
            this.labels = labels;
            return this;
        }
        public Builder labels(@Nullable Map<String,String> labels) {
            this.labels = Codegen.ofNullable(labels);
            return this;
        }
        public Builder linkedInterconnectAttachments(@Nullable Output<SpokeLinkedInterconnectAttachmentsGetArgs> linkedInterconnectAttachments) {
            this.linkedInterconnectAttachments = linkedInterconnectAttachments;
            return this;
        }
        public Builder linkedInterconnectAttachments(@Nullable SpokeLinkedInterconnectAttachmentsGetArgs linkedInterconnectAttachments) {
            this.linkedInterconnectAttachments = Codegen.ofNullable(linkedInterconnectAttachments);
            return this;
        }
        public Builder linkedRouterApplianceInstances(@Nullable Output<SpokeLinkedRouterApplianceInstancesGetArgs> linkedRouterApplianceInstances) {
            this.linkedRouterApplianceInstances = linkedRouterApplianceInstances;
            return this;
        }
        public Builder linkedRouterApplianceInstances(@Nullable SpokeLinkedRouterApplianceInstancesGetArgs linkedRouterApplianceInstances) {
            this.linkedRouterApplianceInstances = Codegen.ofNullable(linkedRouterApplianceInstances);
            return this;
        }
        public Builder linkedVpnTunnels(@Nullable Output<SpokeLinkedVpnTunnelsGetArgs> linkedVpnTunnels) {
            this.linkedVpnTunnels = linkedVpnTunnels;
            return this;
        }
        public Builder linkedVpnTunnels(@Nullable SpokeLinkedVpnTunnelsGetArgs linkedVpnTunnels) {
            this.linkedVpnTunnels = Codegen.ofNullable(linkedVpnTunnels);
            return this;
        }
        public Builder location(@Nullable Output<String> location) {
            this.location = location;
            return this;
        }
        public Builder location(@Nullable String location) {
            this.location = Codegen.ofNullable(location);
            return this;
        }
        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }
        public Builder name(@Nullable String name) {
            this.name = Codegen.ofNullable(name);
            return this;
        }
        public Builder project(@Nullable Output<String> project) {
            this.project = project;
            return this;
        }
        public Builder project(@Nullable String project) {
            this.project = Codegen.ofNullable(project);
            return this;
        }
        public Builder state(@Nullable Output<String> state) {
            this.state = state;
            return this;
        }
        public Builder state(@Nullable String state) {
            this.state = Codegen.ofNullable(state);
            return this;
        }
        public Builder uniqueId(@Nullable Output<String> uniqueId) {
            this.uniqueId = uniqueId;
            return this;
        }
        public Builder uniqueId(@Nullable String uniqueId) {
            this.uniqueId = Codegen.ofNullable(uniqueId);
            return this;
        }
        public Builder updateTime(@Nullable Output<String> updateTime) {
            this.updateTime = updateTime;
            return this;
        }
        public Builder updateTime(@Nullable String updateTime) {
            this.updateTime = Codegen.ofNullable(updateTime);
            return this;
        }        public SpokeState build() {
            return new SpokeState(createTime, description, hub, labels, linkedInterconnectAttachments, linkedRouterApplianceInstances, linkedVpnTunnels, location, name, project, state, uniqueId, updateTime);
        }
    }
}
