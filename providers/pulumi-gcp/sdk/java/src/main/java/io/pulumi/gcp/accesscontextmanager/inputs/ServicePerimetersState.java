// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.accesscontextmanager.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import io.pulumi.gcp.accesscontextmanager.inputs.ServicePerimetersServicePerimeterGetArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ServicePerimetersState extends io.pulumi.resources.ResourceArgs {

    public static final ServicePerimetersState Empty = new ServicePerimetersState();

    /**
     * The AccessPolicy this ServicePerimeter lives in.
     * Format: accessPolicies/{policy_id}
     * 
     */
    @Import(name="parent")
      private final @Nullable Output<String> parent;

    public Output<String> parent() {
        return this.parent == null ? Codegen.empty() : this.parent;
    }

    /**
     * The desired Service Perimeters that should replace all existing Service Perimeters in the Access Policy.
     * Structure is documented below.
     * 
     */
    @Import(name="servicePerimeters")
      private final @Nullable Output<List<ServicePerimetersServicePerimeterGetArgs>> servicePerimeters;

    public Output<List<ServicePerimetersServicePerimeterGetArgs>> servicePerimeters() {
        return this.servicePerimeters == null ? Codegen.empty() : this.servicePerimeters;
    }

    public ServicePerimetersState(
        @Nullable Output<String> parent,
        @Nullable Output<List<ServicePerimetersServicePerimeterGetArgs>> servicePerimeters) {
        this.parent = parent;
        this.servicePerimeters = servicePerimeters;
    }

    private ServicePerimetersState() {
        this.parent = Codegen.empty();
        this.servicePerimeters = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ServicePerimetersState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> parent;
        private @Nullable Output<List<ServicePerimetersServicePerimeterGetArgs>> servicePerimeters;

        public Builder() {
    	      // Empty
        }

        public Builder(ServicePerimetersState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.parent = defaults.parent;
    	      this.servicePerimeters = defaults.servicePerimeters;
        }

        public Builder parent(@Nullable Output<String> parent) {
            this.parent = parent;
            return this;
        }
        public Builder parent(@Nullable String parent) {
            this.parent = Codegen.ofNullable(parent);
            return this;
        }
        public Builder servicePerimeters(@Nullable Output<List<ServicePerimetersServicePerimeterGetArgs>> servicePerimeters) {
            this.servicePerimeters = servicePerimeters;
            return this;
        }
        public Builder servicePerimeters(@Nullable List<ServicePerimetersServicePerimeterGetArgs> servicePerimeters) {
            this.servicePerimeters = Codegen.ofNullable(servicePerimeters);
            return this;
        }
        public Builder servicePerimeters(ServicePerimetersServicePerimeterGetArgs... servicePerimeters) {
            return servicePerimeters(List.of(servicePerimeters));
        }        public ServicePerimetersState build() {
            return new ServicePerimetersState(parent, servicePerimeters);
        }
    }
}
