// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.cloudbuild.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import io.pulumi.gcp.cloudbuild.outputs.TriggerBuildStepVolume;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class TriggerBuildStep {
    private final @Nullable List<String> args;
    private final @Nullable String dir;
    private final @Nullable String entrypoint;
    private final @Nullable List<String> envs;
    private final @Nullable String id;
    private final String name;
    private final @Nullable List<String> secretEnvs;
    private final @Nullable String timeout;
    private final @Nullable String timing;
    private final @Nullable List<TriggerBuildStepVolume> volumes;
    private final @Nullable List<String> waitFors;

    @OutputCustomType.Constructor({"args","dir","entrypoint","envs","id","name","secretEnvs","timeout","timing","volumes","waitFors"})
    private TriggerBuildStep(
        @Nullable List<String> args,
        @Nullable String dir,
        @Nullable String entrypoint,
        @Nullable List<String> envs,
        @Nullable String id,
        String name,
        @Nullable List<String> secretEnvs,
        @Nullable String timeout,
        @Nullable String timing,
        @Nullable List<TriggerBuildStepVolume> volumes,
        @Nullable List<String> waitFors) {
        this.args = args;
        this.dir = dir;
        this.entrypoint = entrypoint;
        this.envs = envs;
        this.id = id;
        this.name = Objects.requireNonNull(name);
        this.secretEnvs = secretEnvs;
        this.timeout = timeout;
        this.timing = timing;
        this.volumes = volumes;
        this.waitFors = waitFors;
    }

    public List<String> getArgs() {
        return this.args == null ? List.of() : this.args;
    }
    public Optional<String> getDir() {
        return Optional.ofNullable(this.dir);
    }
    public Optional<String> getEntrypoint() {
        return Optional.ofNullable(this.entrypoint);
    }
    public List<String> getEnvs() {
        return this.envs == null ? List.of() : this.envs;
    }
    public Optional<String> getId() {
        return Optional.ofNullable(this.id);
    }
    public String getName() {
        return this.name;
    }
    public List<String> getSecretEnvs() {
        return this.secretEnvs == null ? List.of() : this.secretEnvs;
    }
    public Optional<String> getTimeout() {
        return Optional.ofNullable(this.timeout);
    }
    public Optional<String> getTiming() {
        return Optional.ofNullable(this.timing);
    }
    public List<TriggerBuildStepVolume> getVolumes() {
        return this.volumes == null ? List.of() : this.volumes;
    }
    public List<String> getWaitFors() {
        return this.waitFors == null ? List.of() : this.waitFors;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TriggerBuildStep defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable List<String> args;
        private @Nullable String dir;
        private @Nullable String entrypoint;
        private @Nullable List<String> envs;
        private @Nullable String id;
        private String name;
        private @Nullable List<String> secretEnvs;
        private @Nullable String timeout;
        private @Nullable String timing;
        private @Nullable List<TriggerBuildStepVolume> volumes;
        private @Nullable List<String> waitFors;

        public Builder() {
    	      // Empty
        }

        public Builder(TriggerBuildStep defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.args = defaults.args;
    	      this.dir = defaults.dir;
    	      this.entrypoint = defaults.entrypoint;
    	      this.envs = defaults.envs;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.secretEnvs = defaults.secretEnvs;
    	      this.timeout = defaults.timeout;
    	      this.timing = defaults.timing;
    	      this.volumes = defaults.volumes;
    	      this.waitFors = defaults.waitFors;
        }

        public Builder setArgs(@Nullable List<String> args) {
            this.args = args;
            return this;
        }

        public Builder setDir(@Nullable String dir) {
            this.dir = dir;
            return this;
        }

        public Builder setEntrypoint(@Nullable String entrypoint) {
            this.entrypoint = entrypoint;
            return this;
        }

        public Builder setEnvs(@Nullable List<String> envs) {
            this.envs = envs;
            return this;
        }

        public Builder setId(@Nullable String id) {
            this.id = id;
            return this;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setSecretEnvs(@Nullable List<String> secretEnvs) {
            this.secretEnvs = secretEnvs;
            return this;
        }

        public Builder setTimeout(@Nullable String timeout) {
            this.timeout = timeout;
            return this;
        }

        public Builder setTiming(@Nullable String timing) {
            this.timing = timing;
            return this;
        }

        public Builder setVolumes(@Nullable List<TriggerBuildStepVolume> volumes) {
            this.volumes = volumes;
            return this;
        }

        public Builder setWaitFors(@Nullable List<String> waitFors) {
            this.waitFors = waitFors;
            return this;
        }

        public TriggerBuildStep build() {
            return new TriggerBuildStep(args, dir, entrypoint, envs, id, name, secretEnvs, timeout, timing, volumes, waitFors);
        }
    }
}
