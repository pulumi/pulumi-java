// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.appengine;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import io.pulumi.gcp.appengine.inputs.FlexibleAppVersionApiConfigArgs;
import io.pulumi.gcp.appengine.inputs.FlexibleAppVersionAutomaticScalingArgs;
import io.pulumi.gcp.appengine.inputs.FlexibleAppVersionDeploymentArgs;
import io.pulumi.gcp.appengine.inputs.FlexibleAppVersionEndpointsApiServiceArgs;
import io.pulumi.gcp.appengine.inputs.FlexibleAppVersionEntrypointArgs;
import io.pulumi.gcp.appengine.inputs.FlexibleAppVersionHandlerArgs;
import io.pulumi.gcp.appengine.inputs.FlexibleAppVersionLivenessCheckArgs;
import io.pulumi.gcp.appengine.inputs.FlexibleAppVersionManualScalingArgs;
import io.pulumi.gcp.appengine.inputs.FlexibleAppVersionNetworkArgs;
import io.pulumi.gcp.appengine.inputs.FlexibleAppVersionReadinessCheckArgs;
import io.pulumi.gcp.appengine.inputs.FlexibleAppVersionResourcesArgs;
import io.pulumi.gcp.appengine.inputs.FlexibleAppVersionVpcAccessConnectorArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class FlexibleAppVersionArgs extends io.pulumi.resources.ResourceArgs {

    public static final FlexibleAppVersionArgs Empty = new FlexibleAppVersionArgs();

    /**
     * Serving configuration for Google Cloud Endpoints.
     * Structure is documented below.
     * 
     */
    @InputImport(name="apiConfig")
      private final @Nullable Input<FlexibleAppVersionApiConfigArgs> apiConfig;

    public Input<FlexibleAppVersionApiConfigArgs> getApiConfig() {
        return this.apiConfig == null ? Input.empty() : this.apiConfig;
    }

    /**
     * Automatic scaling is based on request rate, response latencies, and other application metrics.
     * Structure is documented below.
     * 
     */
    @InputImport(name="automaticScaling")
      private final @Nullable Input<FlexibleAppVersionAutomaticScalingArgs> automaticScaling;

    public Input<FlexibleAppVersionAutomaticScalingArgs> getAutomaticScaling() {
        return this.automaticScaling == null ? Input.empty() : this.automaticScaling;
    }

    /**
     * Metadata settings that are supplied to this version to enable beta runtime features.
     * 
     */
    @InputImport(name="betaSettings")
      private final @Nullable Input<Map<String,String>> betaSettings;

    public Input<Map<String,String>> getBetaSettings() {
        return this.betaSettings == null ? Input.empty() : this.betaSettings;
    }

    /**
     * Duration that static files should be cached by web proxies and browsers.
     * Only applicable if the corresponding StaticFilesHandler does not specify its own expiration time.
     * 
     */
    @InputImport(name="defaultExpiration")
      private final @Nullable Input<String> defaultExpiration;

    public Input<String> getDefaultExpiration() {
        return this.defaultExpiration == null ? Input.empty() : this.defaultExpiration;
    }

    /**
     * If set to `true`, the service will be deleted if it is the last version.
     * 
     */
    @InputImport(name="deleteServiceOnDestroy")
      private final @Nullable Input<Boolean> deleteServiceOnDestroy;

    public Input<Boolean> getDeleteServiceOnDestroy() {
        return this.deleteServiceOnDestroy == null ? Input.empty() : this.deleteServiceOnDestroy;
    }

    /**
     * Code and application artifacts that make up this version.
     * Structure is documented below.
     * 
     */
    @InputImport(name="deployment")
      private final @Nullable Input<FlexibleAppVersionDeploymentArgs> deployment;

    public Input<FlexibleAppVersionDeploymentArgs> getDeployment() {
        return this.deployment == null ? Input.empty() : this.deployment;
    }

    /**
     * Code and application artifacts that make up this version.
     * Structure is documented below.
     * 
     */
    @InputImport(name="endpointsApiService")
      private final @Nullable Input<FlexibleAppVersionEndpointsApiServiceArgs> endpointsApiService;

    public Input<FlexibleAppVersionEndpointsApiServiceArgs> getEndpointsApiService() {
        return this.endpointsApiService == null ? Input.empty() : this.endpointsApiService;
    }

    /**
     * The entrypoint for the application.
     * Structure is documented below.
     * 
     */
    @InputImport(name="entrypoint")
      private final @Nullable Input<FlexibleAppVersionEntrypointArgs> entrypoint;

    public Input<FlexibleAppVersionEntrypointArgs> getEntrypoint() {
        return this.entrypoint == null ? Input.empty() : this.entrypoint;
    }

    /**
     * Environment variables available to the application.  As these are not returned in the API request, the provider will not detect any changes made outside of the config.
     * 
     */
    @InputImport(name="envVariables")
      private final @Nullable Input<Map<String,String>> envVariables;

    public Input<Map<String,String>> getEnvVariables() {
        return this.envVariables == null ? Input.empty() : this.envVariables;
    }

    /**
     * An ordered list of URL-matching patterns that should be applied to incoming requests.
     * The first matching URL handles the request and other request handlers are not attempted.
     * Structure is documented below.
     * 
     */
    @InputImport(name="handlers")
      private final @Nullable Input<List<FlexibleAppVersionHandlerArgs>> handlers;

    public Input<List<FlexibleAppVersionHandlerArgs>> getHandlers() {
        return this.handlers == null ? Input.empty() : this.handlers;
    }

    /**
     * A list of the types of messages that this application is able to receive.
     * Each value may be one of `INBOUND_SERVICE_MAIL`, `INBOUND_SERVICE_MAIL_BOUNCE`, `INBOUND_SERVICE_XMPP_ERROR`, `INBOUND_SERVICE_XMPP_MESSAGE`, `INBOUND_SERVICE_XMPP_SUBSCRIBE`, `INBOUND_SERVICE_XMPP_PRESENCE`, `INBOUND_SERVICE_CHANNEL_PRESENCE`, and `INBOUND_SERVICE_WARMUP`.
     * 
     */
    @InputImport(name="inboundServices")
      private final @Nullable Input<List<String>> inboundServices;

    public Input<List<String>> getInboundServices() {
        return this.inboundServices == null ? Input.empty() : this.inboundServices;
    }

    /**
     * Instance class that is used to run this version. Valid values are
     * AutomaticScaling: F1, F2, F4, F4_1G
     * ManualScaling: B1, B2, B4, B8, B4_1G
     * Defaults to F1 for AutomaticScaling and B1 for ManualScaling.
     * 
     */
    @InputImport(name="instanceClass")
      private final @Nullable Input<String> instanceClass;

    public Input<String> getInstanceClass() {
        return this.instanceClass == null ? Input.empty() : this.instanceClass;
    }

    /**
     * Health checking configuration for VM instances. Unhealthy instances are killed and replaced with new instances.
     * Structure is documented below.
     * 
     */
    @InputImport(name="livenessCheck", required=true)
      private final Input<FlexibleAppVersionLivenessCheckArgs> livenessCheck;

    public Input<FlexibleAppVersionLivenessCheckArgs> getLivenessCheck() {
        return this.livenessCheck;
    }

    /**
     * A service with manual scaling runs continuously, allowing you to perform complex initialization and rely on the state of its memory over time.
     * Structure is documented below.
     * 
     */
    @InputImport(name="manualScaling")
      private final @Nullable Input<FlexibleAppVersionManualScalingArgs> manualScaling;

    public Input<FlexibleAppVersionManualScalingArgs> getManualScaling() {
        return this.manualScaling == null ? Input.empty() : this.manualScaling;
    }

    /**
     * Extra network settings
     * Structure is documented below.
     * 
     */
    @InputImport(name="network")
      private final @Nullable Input<FlexibleAppVersionNetworkArgs> network;

    public Input<FlexibleAppVersionNetworkArgs> getNetwork() {
        return this.network == null ? Input.empty() : this.network;
    }

    /**
     * Files that match this pattern will not be built into this version. Only applicable for Go runtimes.
     * 
     */
    @InputImport(name="nobuildFilesRegex")
      private final @Nullable Input<String> nobuildFilesRegex;

    public Input<String> getNobuildFilesRegex() {
        return this.nobuildFilesRegex == null ? Input.empty() : this.nobuildFilesRegex;
    }

    /**
     * If set to `true`, the application version will not be deleted.
     * 
     */
    @InputImport(name="noopOnDestroy")
      private final @Nullable Input<Boolean> noopOnDestroy;

    public Input<Boolean> getNoopOnDestroy() {
        return this.noopOnDestroy == null ? Input.empty() : this.noopOnDestroy;
    }

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @InputImport(name="project")
      private final @Nullable Input<String> project;

    public Input<String> getProject() {
        return this.project == null ? Input.empty() : this.project;
    }

    /**
     * Configures readiness health checking for instances. Unhealthy instances are not put into the backend traffic rotation.
     * Structure is documented below.
     * 
     */
    @InputImport(name="readinessCheck", required=true)
      private final Input<FlexibleAppVersionReadinessCheckArgs> readinessCheck;

    public Input<FlexibleAppVersionReadinessCheckArgs> getReadinessCheck() {
        return this.readinessCheck;
    }

    /**
     * Machine resources for a version.
     * Structure is documented below.
     * 
     */
    @InputImport(name="resources")
      private final @Nullable Input<FlexibleAppVersionResourcesArgs> resources;

    public Input<FlexibleAppVersionResourcesArgs> getResources() {
        return this.resources == null ? Input.empty() : this.resources;
    }

    /**
     * Desired runtime. Example python27.
     * 
     */
    @InputImport(name="runtime", required=true)
      private final Input<String> runtime;

    public Input<String> getRuntime() {
        return this.runtime;
    }

    /**
     * The version of the API in the given runtime environment.
     * Please see the app.yaml reference for valid values at `https://cloud.google.com/appengine/docs/standard/<language>/config/appref`\
     * Substitute `<language>` with `python`, `java`, `php`, `ruby`, `go` or `nodejs`.
     * 
     */
    @InputImport(name="runtimeApiVersion")
      private final @Nullable Input<String> runtimeApiVersion;

    public Input<String> getRuntimeApiVersion() {
        return this.runtimeApiVersion == null ? Input.empty() : this.runtimeApiVersion;
    }

    /**
     * The channel of the runtime to use. Only available for some runtimes.
     * 
     */
    @InputImport(name="runtimeChannel")
      private final @Nullable Input<String> runtimeChannel;

    public Input<String> getRuntimeChannel() {
        return this.runtimeChannel == null ? Input.empty() : this.runtimeChannel;
    }

    /**
     * The path or name of the app's main executable.
     * 
     */
    @InputImport(name="runtimeMainExecutablePath")
      private final @Nullable Input<String> runtimeMainExecutablePath;

    public Input<String> getRuntimeMainExecutablePath() {
        return this.runtimeMainExecutablePath == null ? Input.empty() : this.runtimeMainExecutablePath;
    }

    /**
     * AppEngine service resource. Can contain numbers, letters, and hyphens.
     * 
     */
    @InputImport(name="service", required=true)
      private final Input<String> service;

    public Input<String> getService() {
        return this.service;
    }

    /**
     * Current serving status of this version. Only the versions with a SERVING status create instances and can be billed.
     * Default value is `SERVING`.
     * Possible values are `SERVING` and `STOPPED`.
     * 
     */
    @InputImport(name="servingStatus")
      private final @Nullable Input<String> servingStatus;

    public Input<String> getServingStatus() {
        return this.servingStatus == null ? Input.empty() : this.servingStatus;
    }

    /**
     * Relative name of the version within the service. For example, `v1`. Version names can contain only lowercase letters, numbers, or hyphens.
     * Reserved names,"default", "latest", and any name with the prefix "ah-".
     * 
     */
    @InputImport(name="versionId")
      private final @Nullable Input<String> versionId;

    public Input<String> getVersionId() {
        return this.versionId == null ? Input.empty() : this.versionId;
    }

    /**
     * Enables VPC connectivity for standard apps.
     * Structure is documented below.
     * 
     */
    @InputImport(name="vpcAccessConnector")
      private final @Nullable Input<FlexibleAppVersionVpcAccessConnectorArgs> vpcAccessConnector;

    public Input<FlexibleAppVersionVpcAccessConnectorArgs> getVpcAccessConnector() {
        return this.vpcAccessConnector == null ? Input.empty() : this.vpcAccessConnector;
    }

    public FlexibleAppVersionArgs(
        @Nullable Input<FlexibleAppVersionApiConfigArgs> apiConfig,
        @Nullable Input<FlexibleAppVersionAutomaticScalingArgs> automaticScaling,
        @Nullable Input<Map<String,String>> betaSettings,
        @Nullable Input<String> defaultExpiration,
        @Nullable Input<Boolean> deleteServiceOnDestroy,
        @Nullable Input<FlexibleAppVersionDeploymentArgs> deployment,
        @Nullable Input<FlexibleAppVersionEndpointsApiServiceArgs> endpointsApiService,
        @Nullable Input<FlexibleAppVersionEntrypointArgs> entrypoint,
        @Nullable Input<Map<String,String>> envVariables,
        @Nullable Input<List<FlexibleAppVersionHandlerArgs>> handlers,
        @Nullable Input<List<String>> inboundServices,
        @Nullable Input<String> instanceClass,
        Input<FlexibleAppVersionLivenessCheckArgs> livenessCheck,
        @Nullable Input<FlexibleAppVersionManualScalingArgs> manualScaling,
        @Nullable Input<FlexibleAppVersionNetworkArgs> network,
        @Nullable Input<String> nobuildFilesRegex,
        @Nullable Input<Boolean> noopOnDestroy,
        @Nullable Input<String> project,
        Input<FlexibleAppVersionReadinessCheckArgs> readinessCheck,
        @Nullable Input<FlexibleAppVersionResourcesArgs> resources,
        Input<String> runtime,
        @Nullable Input<String> runtimeApiVersion,
        @Nullable Input<String> runtimeChannel,
        @Nullable Input<String> runtimeMainExecutablePath,
        Input<String> service,
        @Nullable Input<String> servingStatus,
        @Nullable Input<String> versionId,
        @Nullable Input<FlexibleAppVersionVpcAccessConnectorArgs> vpcAccessConnector) {
        this.apiConfig = apiConfig;
        this.automaticScaling = automaticScaling;
        this.betaSettings = betaSettings;
        this.defaultExpiration = defaultExpiration;
        this.deleteServiceOnDestroy = deleteServiceOnDestroy;
        this.deployment = deployment;
        this.endpointsApiService = endpointsApiService;
        this.entrypoint = entrypoint;
        this.envVariables = envVariables;
        this.handlers = handlers;
        this.inboundServices = inboundServices;
        this.instanceClass = instanceClass;
        this.livenessCheck = Objects.requireNonNull(livenessCheck, "expected parameter 'livenessCheck' to be non-null");
        this.manualScaling = manualScaling;
        this.network = network;
        this.nobuildFilesRegex = nobuildFilesRegex;
        this.noopOnDestroy = noopOnDestroy;
        this.project = project;
        this.readinessCheck = Objects.requireNonNull(readinessCheck, "expected parameter 'readinessCheck' to be non-null");
        this.resources = resources;
        this.runtime = Objects.requireNonNull(runtime, "expected parameter 'runtime' to be non-null");
        this.runtimeApiVersion = runtimeApiVersion;
        this.runtimeChannel = runtimeChannel;
        this.runtimeMainExecutablePath = runtimeMainExecutablePath;
        this.service = Objects.requireNonNull(service, "expected parameter 'service' to be non-null");
        this.servingStatus = servingStatus;
        this.versionId = versionId;
        this.vpcAccessConnector = vpcAccessConnector;
    }

    private FlexibleAppVersionArgs() {
        this.apiConfig = Input.empty();
        this.automaticScaling = Input.empty();
        this.betaSettings = Input.empty();
        this.defaultExpiration = Input.empty();
        this.deleteServiceOnDestroy = Input.empty();
        this.deployment = Input.empty();
        this.endpointsApiService = Input.empty();
        this.entrypoint = Input.empty();
        this.envVariables = Input.empty();
        this.handlers = Input.empty();
        this.inboundServices = Input.empty();
        this.instanceClass = Input.empty();
        this.livenessCheck = Input.empty();
        this.manualScaling = Input.empty();
        this.network = Input.empty();
        this.nobuildFilesRegex = Input.empty();
        this.noopOnDestroy = Input.empty();
        this.project = Input.empty();
        this.readinessCheck = Input.empty();
        this.resources = Input.empty();
        this.runtime = Input.empty();
        this.runtimeApiVersion = Input.empty();
        this.runtimeChannel = Input.empty();
        this.runtimeMainExecutablePath = Input.empty();
        this.service = Input.empty();
        this.servingStatus = Input.empty();
        this.versionId = Input.empty();
        this.vpcAccessConnector = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FlexibleAppVersionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<FlexibleAppVersionApiConfigArgs> apiConfig;
        private @Nullable Input<FlexibleAppVersionAutomaticScalingArgs> automaticScaling;
        private @Nullable Input<Map<String,String>> betaSettings;
        private @Nullable Input<String> defaultExpiration;
        private @Nullable Input<Boolean> deleteServiceOnDestroy;
        private @Nullable Input<FlexibleAppVersionDeploymentArgs> deployment;
        private @Nullable Input<FlexibleAppVersionEndpointsApiServiceArgs> endpointsApiService;
        private @Nullable Input<FlexibleAppVersionEntrypointArgs> entrypoint;
        private @Nullable Input<Map<String,String>> envVariables;
        private @Nullable Input<List<FlexibleAppVersionHandlerArgs>> handlers;
        private @Nullable Input<List<String>> inboundServices;
        private @Nullable Input<String> instanceClass;
        private Input<FlexibleAppVersionLivenessCheckArgs> livenessCheck;
        private @Nullable Input<FlexibleAppVersionManualScalingArgs> manualScaling;
        private @Nullable Input<FlexibleAppVersionNetworkArgs> network;
        private @Nullable Input<String> nobuildFilesRegex;
        private @Nullable Input<Boolean> noopOnDestroy;
        private @Nullable Input<String> project;
        private Input<FlexibleAppVersionReadinessCheckArgs> readinessCheck;
        private @Nullable Input<FlexibleAppVersionResourcesArgs> resources;
        private Input<String> runtime;
        private @Nullable Input<String> runtimeApiVersion;
        private @Nullable Input<String> runtimeChannel;
        private @Nullable Input<String> runtimeMainExecutablePath;
        private Input<String> service;
        private @Nullable Input<String> servingStatus;
        private @Nullable Input<String> versionId;
        private @Nullable Input<FlexibleAppVersionVpcAccessConnectorArgs> vpcAccessConnector;

        public Builder() {
    	      // Empty
        }

        public Builder(FlexibleAppVersionArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.apiConfig = defaults.apiConfig;
    	      this.automaticScaling = defaults.automaticScaling;
    	      this.betaSettings = defaults.betaSettings;
    	      this.defaultExpiration = defaults.defaultExpiration;
    	      this.deleteServiceOnDestroy = defaults.deleteServiceOnDestroy;
    	      this.deployment = defaults.deployment;
    	      this.endpointsApiService = defaults.endpointsApiService;
    	      this.entrypoint = defaults.entrypoint;
    	      this.envVariables = defaults.envVariables;
    	      this.handlers = defaults.handlers;
    	      this.inboundServices = defaults.inboundServices;
    	      this.instanceClass = defaults.instanceClass;
    	      this.livenessCheck = defaults.livenessCheck;
    	      this.manualScaling = defaults.manualScaling;
    	      this.network = defaults.network;
    	      this.nobuildFilesRegex = defaults.nobuildFilesRegex;
    	      this.noopOnDestroy = defaults.noopOnDestroy;
    	      this.project = defaults.project;
    	      this.readinessCheck = defaults.readinessCheck;
    	      this.resources = defaults.resources;
    	      this.runtime = defaults.runtime;
    	      this.runtimeApiVersion = defaults.runtimeApiVersion;
    	      this.runtimeChannel = defaults.runtimeChannel;
    	      this.runtimeMainExecutablePath = defaults.runtimeMainExecutablePath;
    	      this.service = defaults.service;
    	      this.servingStatus = defaults.servingStatus;
    	      this.versionId = defaults.versionId;
    	      this.vpcAccessConnector = defaults.vpcAccessConnector;
        }

        public Builder apiConfig(@Nullable Input<FlexibleAppVersionApiConfigArgs> apiConfig) {
            this.apiConfig = apiConfig;
            return this;
        }

        public Builder apiConfig(@Nullable FlexibleAppVersionApiConfigArgs apiConfig) {
            this.apiConfig = Input.ofNullable(apiConfig);
            return this;
        }

        public Builder automaticScaling(@Nullable Input<FlexibleAppVersionAutomaticScalingArgs> automaticScaling) {
            this.automaticScaling = automaticScaling;
            return this;
        }

        public Builder automaticScaling(@Nullable FlexibleAppVersionAutomaticScalingArgs automaticScaling) {
            this.automaticScaling = Input.ofNullable(automaticScaling);
            return this;
        }

        public Builder betaSettings(@Nullable Input<Map<String,String>> betaSettings) {
            this.betaSettings = betaSettings;
            return this;
        }

        public Builder betaSettings(@Nullable Map<String,String> betaSettings) {
            this.betaSettings = Input.ofNullable(betaSettings);
            return this;
        }

        public Builder defaultExpiration(@Nullable Input<String> defaultExpiration) {
            this.defaultExpiration = defaultExpiration;
            return this;
        }

        public Builder defaultExpiration(@Nullable String defaultExpiration) {
            this.defaultExpiration = Input.ofNullable(defaultExpiration);
            return this;
        }

        public Builder deleteServiceOnDestroy(@Nullable Input<Boolean> deleteServiceOnDestroy) {
            this.deleteServiceOnDestroy = deleteServiceOnDestroy;
            return this;
        }

        public Builder deleteServiceOnDestroy(@Nullable Boolean deleteServiceOnDestroy) {
            this.deleteServiceOnDestroy = Input.ofNullable(deleteServiceOnDestroy);
            return this;
        }

        public Builder deployment(@Nullable Input<FlexibleAppVersionDeploymentArgs> deployment) {
            this.deployment = deployment;
            return this;
        }

        public Builder deployment(@Nullable FlexibleAppVersionDeploymentArgs deployment) {
            this.deployment = Input.ofNullable(deployment);
            return this;
        }

        public Builder endpointsApiService(@Nullable Input<FlexibleAppVersionEndpointsApiServiceArgs> endpointsApiService) {
            this.endpointsApiService = endpointsApiService;
            return this;
        }

        public Builder endpointsApiService(@Nullable FlexibleAppVersionEndpointsApiServiceArgs endpointsApiService) {
            this.endpointsApiService = Input.ofNullable(endpointsApiService);
            return this;
        }

        public Builder entrypoint(@Nullable Input<FlexibleAppVersionEntrypointArgs> entrypoint) {
            this.entrypoint = entrypoint;
            return this;
        }

        public Builder entrypoint(@Nullable FlexibleAppVersionEntrypointArgs entrypoint) {
            this.entrypoint = Input.ofNullable(entrypoint);
            return this;
        }

        public Builder envVariables(@Nullable Input<Map<String,String>> envVariables) {
            this.envVariables = envVariables;
            return this;
        }

        public Builder envVariables(@Nullable Map<String,String> envVariables) {
            this.envVariables = Input.ofNullable(envVariables);
            return this;
        }

        public Builder handlers(@Nullable Input<List<FlexibleAppVersionHandlerArgs>> handlers) {
            this.handlers = handlers;
            return this;
        }

        public Builder handlers(@Nullable List<FlexibleAppVersionHandlerArgs> handlers) {
            this.handlers = Input.ofNullable(handlers);
            return this;
        }

        public Builder inboundServices(@Nullable Input<List<String>> inboundServices) {
            this.inboundServices = inboundServices;
            return this;
        }

        public Builder inboundServices(@Nullable List<String> inboundServices) {
            this.inboundServices = Input.ofNullable(inboundServices);
            return this;
        }

        public Builder instanceClass(@Nullable Input<String> instanceClass) {
            this.instanceClass = instanceClass;
            return this;
        }

        public Builder instanceClass(@Nullable String instanceClass) {
            this.instanceClass = Input.ofNullable(instanceClass);
            return this;
        }

        public Builder livenessCheck(Input<FlexibleAppVersionLivenessCheckArgs> livenessCheck) {
            this.livenessCheck = Objects.requireNonNull(livenessCheck);
            return this;
        }

        public Builder livenessCheck(FlexibleAppVersionLivenessCheckArgs livenessCheck) {
            this.livenessCheck = Input.of(Objects.requireNonNull(livenessCheck));
            return this;
        }

        public Builder manualScaling(@Nullable Input<FlexibleAppVersionManualScalingArgs> manualScaling) {
            this.manualScaling = manualScaling;
            return this;
        }

        public Builder manualScaling(@Nullable FlexibleAppVersionManualScalingArgs manualScaling) {
            this.manualScaling = Input.ofNullable(manualScaling);
            return this;
        }

        public Builder network(@Nullable Input<FlexibleAppVersionNetworkArgs> network) {
            this.network = network;
            return this;
        }

        public Builder network(@Nullable FlexibleAppVersionNetworkArgs network) {
            this.network = Input.ofNullable(network);
            return this;
        }

        public Builder nobuildFilesRegex(@Nullable Input<String> nobuildFilesRegex) {
            this.nobuildFilesRegex = nobuildFilesRegex;
            return this;
        }

        public Builder nobuildFilesRegex(@Nullable String nobuildFilesRegex) {
            this.nobuildFilesRegex = Input.ofNullable(nobuildFilesRegex);
            return this;
        }

        public Builder noopOnDestroy(@Nullable Input<Boolean> noopOnDestroy) {
            this.noopOnDestroy = noopOnDestroy;
            return this;
        }

        public Builder noopOnDestroy(@Nullable Boolean noopOnDestroy) {
            this.noopOnDestroy = Input.ofNullable(noopOnDestroy);
            return this;
        }

        public Builder project(@Nullable Input<String> project) {
            this.project = project;
            return this;
        }

        public Builder project(@Nullable String project) {
            this.project = Input.ofNullable(project);
            return this;
        }

        public Builder readinessCheck(Input<FlexibleAppVersionReadinessCheckArgs> readinessCheck) {
            this.readinessCheck = Objects.requireNonNull(readinessCheck);
            return this;
        }

        public Builder readinessCheck(FlexibleAppVersionReadinessCheckArgs readinessCheck) {
            this.readinessCheck = Input.of(Objects.requireNonNull(readinessCheck));
            return this;
        }

        public Builder resources(@Nullable Input<FlexibleAppVersionResourcesArgs> resources) {
            this.resources = resources;
            return this;
        }

        public Builder resources(@Nullable FlexibleAppVersionResourcesArgs resources) {
            this.resources = Input.ofNullable(resources);
            return this;
        }

        public Builder runtime(Input<String> runtime) {
            this.runtime = Objects.requireNonNull(runtime);
            return this;
        }

        public Builder runtime(String runtime) {
            this.runtime = Input.of(Objects.requireNonNull(runtime));
            return this;
        }

        public Builder runtimeApiVersion(@Nullable Input<String> runtimeApiVersion) {
            this.runtimeApiVersion = runtimeApiVersion;
            return this;
        }

        public Builder runtimeApiVersion(@Nullable String runtimeApiVersion) {
            this.runtimeApiVersion = Input.ofNullable(runtimeApiVersion);
            return this;
        }

        public Builder runtimeChannel(@Nullable Input<String> runtimeChannel) {
            this.runtimeChannel = runtimeChannel;
            return this;
        }

        public Builder runtimeChannel(@Nullable String runtimeChannel) {
            this.runtimeChannel = Input.ofNullable(runtimeChannel);
            return this;
        }

        public Builder runtimeMainExecutablePath(@Nullable Input<String> runtimeMainExecutablePath) {
            this.runtimeMainExecutablePath = runtimeMainExecutablePath;
            return this;
        }

        public Builder runtimeMainExecutablePath(@Nullable String runtimeMainExecutablePath) {
            this.runtimeMainExecutablePath = Input.ofNullable(runtimeMainExecutablePath);
            return this;
        }

        public Builder service(Input<String> service) {
            this.service = Objects.requireNonNull(service);
            return this;
        }

        public Builder service(String service) {
            this.service = Input.of(Objects.requireNonNull(service));
            return this;
        }

        public Builder servingStatus(@Nullable Input<String> servingStatus) {
            this.servingStatus = servingStatus;
            return this;
        }

        public Builder servingStatus(@Nullable String servingStatus) {
            this.servingStatus = Input.ofNullable(servingStatus);
            return this;
        }

        public Builder versionId(@Nullable Input<String> versionId) {
            this.versionId = versionId;
            return this;
        }

        public Builder versionId(@Nullable String versionId) {
            this.versionId = Input.ofNullable(versionId);
            return this;
        }

        public Builder vpcAccessConnector(@Nullable Input<FlexibleAppVersionVpcAccessConnectorArgs> vpcAccessConnector) {
            this.vpcAccessConnector = vpcAccessConnector;
            return this;
        }

        public Builder vpcAccessConnector(@Nullable FlexibleAppVersionVpcAccessConnectorArgs vpcAccessConnector) {
            this.vpcAccessConnector = Input.ofNullable(vpcAccessConnector);
            return this;
        }
        public FlexibleAppVersionArgs build() {
            return new FlexibleAppVersionArgs(apiConfig, automaticScaling, betaSettings, defaultExpiration, deleteServiceOnDestroy, deployment, endpointsApiService, entrypoint, envVariables, handlers, inboundServices, instanceClass, livenessCheck, manualScaling, network, nobuildFilesRegex, noopOnDestroy, project, readinessCheck, resources, runtime, runtimeApiVersion, runtimeChannel, runtimeMainExecutablePath, service, servingStatus, versionId, vpcAccessConnector);
        }
    }
}
