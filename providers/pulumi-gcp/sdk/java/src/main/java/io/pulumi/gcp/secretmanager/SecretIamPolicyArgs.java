// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.secretmanager;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class SecretIamPolicyArgs extends io.pulumi.resources.ResourceArgs {

    public static final SecretIamPolicyArgs Empty = new SecretIamPolicyArgs();

    /**
     * The policy data generated by
     * a `gcp.organizations.getIAMPolicy` data source.
     * 
     */
    @Import(name="policyData", required=true)
      private final Output<String> policyData;

    public Output<String> getPolicyData() {
        return this.policyData;
    }

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
     * 
     */
    @Import(name="project")
      private final @Nullable Output<String> project;

    public Output<String> getProject() {
        return this.project == null ? Codegen.empty() : this.project;
    }

    @Import(name="secretId", required=true)
      private final Output<String> secretId;

    public Output<String> getSecretId() {
        return this.secretId;
    }

    public SecretIamPolicyArgs(
        Output<String> policyData,
        @Nullable Output<String> project,
        Output<String> secretId) {
        this.policyData = Objects.requireNonNull(policyData, "expected parameter 'policyData' to be non-null");
        this.project = project;
        this.secretId = Objects.requireNonNull(secretId, "expected parameter 'secretId' to be non-null");
    }

    private SecretIamPolicyArgs() {
        this.policyData = Codegen.empty();
        this.project = Codegen.empty();
        this.secretId = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SecretIamPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> policyData;
        private @Nullable Output<String> project;
        private Output<String> secretId;

        public Builder() {
    	      // Empty
        }

        public Builder(SecretIamPolicyArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.policyData = defaults.policyData;
    	      this.project = defaults.project;
    	      this.secretId = defaults.secretId;
        }

        public Builder policyData(Output<String> policyData) {
            this.policyData = Objects.requireNonNull(policyData);
            return this;
        }
        public Builder policyData(String policyData) {
            this.policyData = Output.of(Objects.requireNonNull(policyData));
            return this;
        }
        public Builder project(@Nullable Output<String> project) {
            this.project = project;
            return this;
        }
        public Builder project(@Nullable String project) {
            this.project = Codegen.ofNullable(project);
            return this;
        }
        public Builder secretId(Output<String> secretId) {
            this.secretId = Objects.requireNonNull(secretId);
            return this;
        }
        public Builder secretId(String secretId) {
            this.secretId = Output.of(Objects.requireNonNull(secretId));
            return this;
        }        public SecretIamPolicyArgs build() {
            return new SecretIamPolicyArgs(policyData, project, secretId);
        }
    }
}
