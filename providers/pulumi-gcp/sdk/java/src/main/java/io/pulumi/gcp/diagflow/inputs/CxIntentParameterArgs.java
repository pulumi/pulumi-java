// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.diagflow.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class CxIntentParameterArgs extends io.pulumi.resources.ResourceArgs {

    public static final CxIntentParameterArgs Empty = new CxIntentParameterArgs();

    /**
     * The entity type of the parameter.
     * Format: projects/-/locations/-/agents/-/entityTypes/<System Entity Type ID> for system entity types (for example, projects/-/locations/-/agents/-/entityTypes/sys.date), or projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>/entityTypes/<Entity Type ID> for developer entity types.
     * 
     */
    @InputImport(name="entityType", required=true)
      private final Input<String> entityType;

    public Input<String> getEntityType() {
        return this.entityType;
    }

    /**
     * The unique identifier of the parameter. This field is used by training phrases to annotate their parts.
     * 
     */
    @InputImport(name="id", required=true)
      private final Input<String> id;

    public Input<String> getId() {
        return this.id;
    }

    /**
     * Indicates whether the parameter represents a list of values.
     * 
     */
    @InputImport(name="isList")
      private final @Nullable Input<Boolean> isList;

    public Input<Boolean> getIsList() {
        return this.isList == null ? Input.empty() : this.isList;
    }

    /**
     * Indicates whether the parameter content should be redacted in log. If redaction is enabled, the parameter content will be replaced by parameter name during logging.
     * Note: the parameter content is subject to redaction if either parameter level redaction or entity type level redaction is enabled.
     * 
     */
    @InputImport(name="redact")
      private final @Nullable Input<Boolean> redact;

    public Input<Boolean> getRedact() {
        return this.redact == null ? Input.empty() : this.redact;
    }

    public CxIntentParameterArgs(
        Input<String> entityType,
        Input<String> id,
        @Nullable Input<Boolean> isList,
        @Nullable Input<Boolean> redact) {
        this.entityType = Objects.requireNonNull(entityType, "expected parameter 'entityType' to be non-null");
        this.id = Objects.requireNonNull(id, "expected parameter 'id' to be non-null");
        this.isList = isList;
        this.redact = redact;
    }

    private CxIntentParameterArgs() {
        this.entityType = Input.empty();
        this.id = Input.empty();
        this.isList = Input.empty();
        this.redact = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CxIntentParameterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<String> entityType;
        private Input<String> id;
        private @Nullable Input<Boolean> isList;
        private @Nullable Input<Boolean> redact;

        public Builder() {
    	      // Empty
        }

        public Builder(CxIntentParameterArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.entityType = defaults.entityType;
    	      this.id = defaults.id;
    	      this.isList = defaults.isList;
    	      this.redact = defaults.redact;
        }

        public Builder setEntityType(Input<String> entityType) {
            this.entityType = Objects.requireNonNull(entityType);
            return this;
        }

        public Builder setEntityType(String entityType) {
            this.entityType = Input.of(Objects.requireNonNull(entityType));
            return this;
        }

        public Builder setId(Input<String> id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }

        public Builder setId(String id) {
            this.id = Input.of(Objects.requireNonNull(id));
            return this;
        }

        public Builder setIsList(@Nullable Input<Boolean> isList) {
            this.isList = isList;
            return this;
        }

        public Builder setIsList(@Nullable Boolean isList) {
            this.isList = Input.ofNullable(isList);
            return this;
        }

        public Builder setRedact(@Nullable Input<Boolean> redact) {
            this.redact = redact;
            return this;
        }

        public Builder setRedact(@Nullable Boolean redact) {
            this.redact = Input.ofNullable(redact);
            return this;
        }
        public CxIntentParameterArgs build() {
            return new CxIntentParameterArgs(entityType, id, isList, redact);
        }
    }
}
