// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.endpoints;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Export;
import io.pulumi.core.annotations.ResourceType;
import io.pulumi.gcp.Utilities;
import io.pulumi.gcp.endpoints.ServiceArgs;
import io.pulumi.gcp.endpoints.inputs.ServiceState;
import io.pulumi.gcp.endpoints.outputs.ServiceApi;
import io.pulumi.gcp.endpoints.outputs.ServiceEndpoint;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * This resource creates and rolls out a Cloud Endpoints service using OpenAPI or gRPC.  View the relevant docs for [OpenAPI](https://cloud.google.com/endpoints/docs/openapi/) and [gRPC](https://cloud.google.com/endpoints/docs/grpc/).
 * 
 * {{% examples %}}
 * ## Example Usage
 * {{% example %}}
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 * import * from "fs";
 * 
 * const openapiService = new gcp.endpoints.Service("openapiService", {
 *     serviceName: "api-name.endpoints.project-id.cloud.goog",
 *     project: "project-id",
 *     openapiConfig: fs.readFileSync("openapi_spec.yml"),
 * });
 * const grpcService = new gcp.endpoints.Service("grpcService", {
 *     serviceName: "api-name.endpoints.project-id.cloud.goog",
 *     project: "project-id",
 *     grpcConfig: fs.readFileSync("service_spec.yml"),
 *     protocOutputBase64: Buffer.from(fs.readFileSync("compiled_descriptor_file.pb"), 'binary').toString('base64'),
 * });
 * ```
 * ```python
 * import pulumi
 * import base64
 * import pulumi_gcp as gcp
 * 
 * openapi_service = gcp.endpoints.Service("openapiService",
 *     service_name="api-name.endpoints.project-id.cloud.goog",
 *     project="project-id",
 *     openapi_config=(lambda path: open(path).read())("openapi_spec.yml"))
 * grpc_service = gcp.endpoints.Service("grpcService",
 *     service_name="api-name.endpoints.project-id.cloud.goog",
 *     project="project-id",
 *     grpc_config=(lambda path: open(path).read())("service_spec.yml"),
 *     protoc_output_base64=(lambda path: base64.b64encode(open(path).read().encode()).decode())("compiled_descriptor_file.pb"))
 * ```
 * ```csharp
 * using System;
 * using System.IO;
 * using Pulumi;
 * using Gcp = Pulumi.Gcp;
 * 
 * class MyStack : Stack
 * {
 * 	private static string ReadFileBase64(string path) {
 * 		return Convert.ToBase64String(Encoding.UTF8.GetBytes(File.ReadAllText(path)))
 * 	}
 * 
 *     public MyStack()
 *     {
 *         var openapiService = new Gcp.Endpoints.Service("openapiService", new Gcp.Endpoints.ServiceArgs
 *         {
 *             ServiceName = "api-name.endpoints.project-id.cloud.goog",
 *             Project = "project-id",
 *             OpenapiConfig = File.ReadAllText("openapi_spec.yml"),
 *         });
 *         var grpcService = new Gcp.Endpoints.Service("grpcService", new Gcp.Endpoints.ServiceArgs
 *         {
 *             ServiceName = "api-name.endpoints.project-id.cloud.goog",
 *             Project = "project-id",
 *             GrpcConfig = File.ReadAllText("service_spec.yml"),
 *             ProtocOutputBase64 = ReadFileBase64("compiled_descriptor_file.pb"),
 *         });
 *     }
 * 
 * }
 * ```
 * ```go
 * package main
 * 
 * import (
 * 	"encoding/base64"
 * 	"io/ioutil"
 * 
 * 	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/endpoints"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func filebase64OrPanic(path string) pulumi.StringPtrInput {
 * 	if fileData, err := ioutil.ReadFile(path); err == nil {
 * 		return pulumi.String(base64.StdEncoding.EncodeToString(fileData[:]))
 * 	} else {
 * 		panic(err.Error())
 * 	}
 * }
 * 
 * func readFileOrPanic(path string) pulumi.StringPtrInput {
 * 	data, err := ioutil.ReadFile(path)
 * 	if err != nil {
 * 		panic(err.Error())
 * 	}
 * 	return pulumi.String(string(data))
 * }
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		_, err := endpoints.NewService(ctx, "openapiService", &endpoints.ServiceArgs{
 * 			ServiceName:   pulumi.String("api-name.endpoints.project-id.cloud.goog"),
 * 			Project:       pulumi.String("project-id"),
 * 			OpenapiConfig: readFileOrPanic("openapi_spec.yml"),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		_, err = endpoints.NewService(ctx, "grpcService", &endpoints.ServiceArgs{
 * 			ServiceName:        pulumi.String("api-name.endpoints.project-id.cloud.goog"),
 * 			Project:            pulumi.String("project-id"),
 * 			GrpcConfig:         readFileOrPanic("service_spec.yml"),
 * 			ProtocOutputBase64: filebase64OrPanic("compiled_descriptor_file.pb"),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * ```
 * 
 * The example in `examples/endpoints_on_compute_engine` shows the API from the quickstart running on a Compute Engine VM and reachable through Cloud Endpoints, which may also be useful.
 * {{% /example %}}
 * {{% /examples %}}
 * 
 * ## Import
 * 
 * This resource does not support import. 
 */
@ResourceType(type="gcp:endpoints/service:Service")
public class Service extends io.pulumi.resources.CustomResource {
    /**
     * A list of API objects.
     * 
     */
    @Export(name="apis", type=List.class, parameters={ServiceApi.class})
    private Output<List<ServiceApi>> apis;

    /**
     * @return A list of API objects.
     * 
     */
    public Output<List<ServiceApi>> getApis() {
        return this.apis;
    }
    /**
     * The autogenerated ID for the configuration that is rolled out as part of the creation of this resource. Must be provided
     * to compute engine instances as a tag.
     * 
     */
    @Export(name="configId", type=String.class, parameters={})
    private Output<String> configId;

    /**
     * @return The autogenerated ID for the configuration that is rolled out as part of the creation of this resource. Must be provided
     * to compute engine instances as a tag.
     * 
     */
    public Output<String> getConfigId() {
        return this.configId;
    }
    /**
     * The address at which the service can be found - usually the same as the service name.
     * 
     */
    @Export(name="dnsAddress", type=String.class, parameters={})
    private Output<String> dnsAddress;

    /**
     * @return The address at which the service can be found - usually the same as the service name.
     * 
     */
    public Output<String> getDnsAddress() {
        return this.dnsAddress;
    }
    /**
     * A list of Endpoint objects.
     * 
     */
    @Export(name="endpoints", type=List.class, parameters={ServiceEndpoint.class})
    private Output<List<ServiceEndpoint>> endpoints;

    /**
     * @return A list of Endpoint objects.
     * 
     */
    public Output<List<ServiceEndpoint>> getEndpoints() {
        return this.endpoints;
    }
    /**
     * The full text of the Service Config YAML file (Example located here). If provided, must also provide
     * protoc_output_base64. open_api config must not be provided.
     * 
     */
    @Export(name="grpcConfig", type=String.class, parameters={})
    private Output</* @Nullable */ String> grpcConfig;

    /**
     * @return The full text of the Service Config YAML file (Example located here). If provided, must also provide
     * protoc_output_base64. open_api config must not be provided.
     * 
     */
    public Output</* @Nullable */ String> getGrpcConfig() {
        return this.grpcConfig;
    }
    /**
     * The full text of the OpenAPI YAML configuration as described here. Either this, or both of grpc_config and
     * protoc_output_base64 must be specified.
     * 
     */
    @Export(name="openapiConfig", type=String.class, parameters={})
    private Output</* @Nullable */ String> openapiConfig;

    /**
     * @return The full text of the OpenAPI YAML configuration as described here. Either this, or both of grpc_config and
     * protoc_output_base64 must be specified.
     * 
     */
    public Output</* @Nullable */ String> getOpenapiConfig() {
        return this.openapiConfig;
    }
    /**
     * The project ID that the service belongs to. If not provided, provider project is used.
     * 
     */
    @Export(name="project", type=String.class, parameters={})
    private Output<String> project;

    /**
     * @return The project ID that the service belongs to. If not provided, provider project is used.
     * 
     */
    public Output<String> getProject() {
        return this.project;
    }
    /**
     * The full contents of the Service Descriptor File generated by protoc. This should be a compiled .pb file,
     * base64-encoded.
     * 
     */
    @Export(name="protocOutputBase64", type=String.class, parameters={})
    private Output</* @Nullable */ String> protocOutputBase64;

    /**
     * @return The full contents of the Service Descriptor File generated by protoc. This should be a compiled .pb file,
     * base64-encoded.
     * 
     */
    public Output</* @Nullable */ String> getProtocOutputBase64() {
        return this.protocOutputBase64;
    }
    /**
     * The name of the service. Usually of the form $apiname.endpoints.$projectid.cloud.goog.
     * 
     */
    @Export(name="serviceName", type=String.class, parameters={})
    private Output<String> serviceName;

    /**
     * @return The name of the service. Usually of the form $apiname.endpoints.$projectid.cloud.goog.
     * 
     */
    public Output<String> getServiceName() {
        return this.serviceName;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Service(String name) {
        this(name, ServiceArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Service(String name, ServiceArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Service(String name, ServiceArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("gcp:endpoints/service:Service", name, args == null ? ServiceArgs.Empty : args, makeResourceOptions(options, Output.empty()));
    }

    private Service(String name, Output<String> id, @Nullable ServiceState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("gcp:endpoints/service:Service", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Service get(String name, Output<String> id, @Nullable ServiceState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new Service(name, id, state, options);
    }
}
