// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.compute.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import io.pulumi.gcp.compute.inputs.ResourcePolicySnapshotSchedulePolicyRetentionPolicyArgs;
import io.pulumi.gcp.compute.inputs.ResourcePolicySnapshotSchedulePolicyScheduleArgs;
import io.pulumi.gcp.compute.inputs.ResourcePolicySnapshotSchedulePolicySnapshotPropertiesArgs;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ResourcePolicySnapshotSchedulePolicyArgs extends io.pulumi.resources.ResourceArgs {

    public static final ResourcePolicySnapshotSchedulePolicyArgs Empty = new ResourcePolicySnapshotSchedulePolicyArgs();

    /**
     * Retention policy applied to snapshots created by this resource policy.
     * Structure is documented below.
     * 
     */
    @Import(name="retentionPolicy")
      private final @Nullable Output<ResourcePolicySnapshotSchedulePolicyRetentionPolicyArgs> retentionPolicy;

    public Output<ResourcePolicySnapshotSchedulePolicyRetentionPolicyArgs> retentionPolicy() {
        return this.retentionPolicy == null ? Codegen.empty() : this.retentionPolicy;
    }

    /**
     * Specifies the frequency for the operation, using the unix-cron format.
     * 
     */
    @Import(name="schedule", required=true)
      private final Output<ResourcePolicySnapshotSchedulePolicyScheduleArgs> schedule;

    public Output<ResourcePolicySnapshotSchedulePolicyScheduleArgs> schedule() {
        return this.schedule;
    }

    /**
     * Properties with which the snapshots are created, such as labels.
     * Structure is documented below.
     * 
     */
    @Import(name="snapshotProperties")
      private final @Nullable Output<ResourcePolicySnapshotSchedulePolicySnapshotPropertiesArgs> snapshotProperties;

    public Output<ResourcePolicySnapshotSchedulePolicySnapshotPropertiesArgs> snapshotProperties() {
        return this.snapshotProperties == null ? Codegen.empty() : this.snapshotProperties;
    }

    public ResourcePolicySnapshotSchedulePolicyArgs(
        @Nullable Output<ResourcePolicySnapshotSchedulePolicyRetentionPolicyArgs> retentionPolicy,
        Output<ResourcePolicySnapshotSchedulePolicyScheduleArgs> schedule,
        @Nullable Output<ResourcePolicySnapshotSchedulePolicySnapshotPropertiesArgs> snapshotProperties) {
        this.retentionPolicy = retentionPolicy;
        this.schedule = Objects.requireNonNull(schedule, "expected parameter 'schedule' to be non-null");
        this.snapshotProperties = snapshotProperties;
    }

    private ResourcePolicySnapshotSchedulePolicyArgs() {
        this.retentionPolicy = Codegen.empty();
        this.schedule = Codegen.empty();
        this.snapshotProperties = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ResourcePolicySnapshotSchedulePolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<ResourcePolicySnapshotSchedulePolicyRetentionPolicyArgs> retentionPolicy;
        private Output<ResourcePolicySnapshotSchedulePolicyScheduleArgs> schedule;
        private @Nullable Output<ResourcePolicySnapshotSchedulePolicySnapshotPropertiesArgs> snapshotProperties;

        public Builder() {
    	      // Empty
        }

        public Builder(ResourcePolicySnapshotSchedulePolicyArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.retentionPolicy = defaults.retentionPolicy;
    	      this.schedule = defaults.schedule;
    	      this.snapshotProperties = defaults.snapshotProperties;
        }

        public Builder retentionPolicy(@Nullable Output<ResourcePolicySnapshotSchedulePolicyRetentionPolicyArgs> retentionPolicy) {
            this.retentionPolicy = retentionPolicy;
            return this;
        }
        public Builder retentionPolicy(@Nullable ResourcePolicySnapshotSchedulePolicyRetentionPolicyArgs retentionPolicy) {
            this.retentionPolicy = Codegen.ofNullable(retentionPolicy);
            return this;
        }
        public Builder schedule(Output<ResourcePolicySnapshotSchedulePolicyScheduleArgs> schedule) {
            this.schedule = Objects.requireNonNull(schedule);
            return this;
        }
        public Builder schedule(ResourcePolicySnapshotSchedulePolicyScheduleArgs schedule) {
            this.schedule = Output.of(Objects.requireNonNull(schedule));
            return this;
        }
        public Builder snapshotProperties(@Nullable Output<ResourcePolicySnapshotSchedulePolicySnapshotPropertiesArgs> snapshotProperties) {
            this.snapshotProperties = snapshotProperties;
            return this;
        }
        public Builder snapshotProperties(@Nullable ResourcePolicySnapshotSchedulePolicySnapshotPropertiesArgs snapshotProperties) {
            this.snapshotProperties = Codegen.ofNullable(snapshotProperties);
            return this;
        }        public ResourcePolicySnapshotSchedulePolicyArgs build() {
            return new ResourcePolicySnapshotSchedulePolicyArgs(retentionPolicy, schedule, snapshotProperties);
        }
    }
}
