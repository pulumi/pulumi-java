// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.compute;

import io.pulumi.core.Input;
import io.pulumi.core.Output;
import io.pulumi.core.internal.annotations.OutputExport;
import io.pulumi.core.internal.annotations.ResourceType;
import io.pulumi.gcp.Utilities;
import io.pulumi.gcp.compute.InstanceGroupManagerArgs;
import io.pulumi.gcp.compute.inputs.InstanceGroupManagerState;
import io.pulumi.gcp.compute.outputs.InstanceGroupManagerAutoHealingPolicies;
import io.pulumi.gcp.compute.outputs.InstanceGroupManagerNamedPort;
import io.pulumi.gcp.compute.outputs.InstanceGroupManagerStatefulDisk;
import io.pulumi.gcp.compute.outputs.InstanceGroupManagerStatus;
import io.pulumi.gcp.compute.outputs.InstanceGroupManagerUpdatePolicy;
import io.pulumi.gcp.compute.outputs.InstanceGroupManagerVersion;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

@ResourceType(type="gcp:compute/instanceGroupManager:InstanceGroupManager")
public class InstanceGroupManager extends io.pulumi.resources.CustomResource {
    @OutputExport(name="autoHealingPolicies", type=InstanceGroupManagerAutoHealingPolicies.class, parameters={})
    private Output</* @Nullable */ InstanceGroupManagerAutoHealingPolicies> autoHealingPolicies;

    public Output</* @Nullable */ InstanceGroupManagerAutoHealingPolicies> getAutoHealingPolicies() {
        return this.autoHealingPolicies;
    }
    @OutputExport(name="baseInstanceName", type=String.class, parameters={})
    private Output<String> baseInstanceName;

    public Output<String> getBaseInstanceName() {
        return this.baseInstanceName;
    }
    @OutputExport(name="description", type=String.class, parameters={})
    private Output</* @Nullable */ String> description;

    public Output</* @Nullable */ String> getDescription() {
        return this.description;
    }
    @OutputExport(name="fingerprint", type=String.class, parameters={})
    private Output<String> fingerprint;

    public Output<String> getFingerprint() {
        return this.fingerprint;
    }
    @OutputExport(name="instanceGroup", type=String.class, parameters={})
    private Output<String> instanceGroup;

    public Output<String> getInstanceGroup() {
        return this.instanceGroup;
    }
    @OutputExport(name="name", type=String.class, parameters={})
    private Output<String> name;

    public Output<String> getName() {
        return this.name;
    }
    @OutputExport(name="namedPorts", type=List.class, parameters={InstanceGroupManagerNamedPort.class})
    private Output</* @Nullable */ List<InstanceGroupManagerNamedPort>> namedPorts;

    public Output</* @Nullable */ List<InstanceGroupManagerNamedPort>> getNamedPorts() {
        return this.namedPorts;
    }
    @OutputExport(name="operation", type=String.class, parameters={})
    private Output<String> operation;

    public Output<String> getOperation() {
        return this.operation;
    }
    @OutputExport(name="project", type=String.class, parameters={})
    private Output<String> project;

    public Output<String> getProject() {
        return this.project;
    }
    @OutputExport(name="selfLink", type=String.class, parameters={})
    private Output<String> selfLink;

    public Output<String> getSelfLink() {
        return this.selfLink;
    }
    @OutputExport(name="statefulDisks", type=List.class, parameters={InstanceGroupManagerStatefulDisk.class})
    private Output</* @Nullable */ List<InstanceGroupManagerStatefulDisk>> statefulDisks;

    public Output</* @Nullable */ List<InstanceGroupManagerStatefulDisk>> getStatefulDisks() {
        return this.statefulDisks;
    }
    @OutputExport(name="statuses", type=List.class, parameters={InstanceGroupManagerStatus.class})
    private Output<List<InstanceGroupManagerStatus>> statuses;

    public Output<List<InstanceGroupManagerStatus>> getStatuses() {
        return this.statuses;
    }
    @OutputExport(name="targetPools", type=List.class, parameters={String.class})
    private Output</* @Nullable */ List<String>> targetPools;

    public Output</* @Nullable */ List<String>> getTargetPools() {
        return this.targetPools;
    }
    @OutputExport(name="targetSize", type=Integer.class, parameters={})
    private Output<Integer> targetSize;

    public Output<Integer> getTargetSize() {
        return this.targetSize;
    }
    @OutputExport(name="updatePolicy", type=InstanceGroupManagerUpdatePolicy.class, parameters={})
    private Output<InstanceGroupManagerUpdatePolicy> updatePolicy;

    public Output<InstanceGroupManagerUpdatePolicy> getUpdatePolicy() {
        return this.updatePolicy;
    }
    @OutputExport(name="versions", type=List.class, parameters={InstanceGroupManagerVersion.class})
    private Output<List<InstanceGroupManagerVersion>> versions;

    public Output<List<InstanceGroupManagerVersion>> getVersions() {
        return this.versions;
    }
    @OutputExport(name="waitForInstances", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> waitForInstances;

    public Output</* @Nullable */ Boolean> getWaitForInstances() {
        return this.waitForInstances;
    }
    @OutputExport(name="waitForInstancesStatus", type=String.class, parameters={})
    private Output</* @Nullable */ String> waitForInstancesStatus;

    public Output</* @Nullable */ String> getWaitForInstancesStatus() {
        return this.waitForInstancesStatus;
    }
    @OutputExport(name="zone", type=String.class, parameters={})
    private Output<String> zone;

    public Output<String> getZone() {
        return this.zone;
    }

    public InstanceGroupManager(String name, InstanceGroupManagerArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("gcp:compute/instanceGroupManager:InstanceGroupManager", name, args == null ? InstanceGroupManagerArgs.Empty : args, makeResourceOptions(options, Input.empty()));
    }

    private InstanceGroupManager(String name, Input<String> id, @Nullable InstanceGroupManagerState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("gcp:compute/instanceGroupManager:InstanceGroupManager", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Input<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .setVersion(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    public static InstanceGroupManager get(String name, Input<String> id, @Nullable InstanceGroupManagerState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new InstanceGroupManager(name, id, state, options);
    }
}
