// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.networkservices;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import io.pulumi.gcp.networkservices.inputs.EdgeCacheServiceLogConfigArgs;
import io.pulumi.gcp.networkservices.inputs.EdgeCacheServiceRoutingArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class EdgeCacheServiceArgs extends io.pulumi.resources.ResourceArgs {

    public static final EdgeCacheServiceArgs Empty = new EdgeCacheServiceArgs();

    @InputImport(name="description")
    private final @Nullable Input<String> description;

    public Input<String> getDescription() {
        return this.description == null ? Input.empty() : this.description;
    }

    @InputImport(name="disableQuic")
    private final @Nullable Input<Boolean> disableQuic;

    public Input<Boolean> getDisableQuic() {
        return this.disableQuic == null ? Input.empty() : this.disableQuic;
    }

    @InputImport(name="edgeSecurityPolicy")
    private final @Nullable Input<String> edgeSecurityPolicy;

    public Input<String> getEdgeSecurityPolicy() {
        return this.edgeSecurityPolicy == null ? Input.empty() : this.edgeSecurityPolicy;
    }

    @InputImport(name="edgeSslCertificates")
    private final @Nullable Input<List<String>> edgeSslCertificates;

    public Input<List<String>> getEdgeSslCertificates() {
        return this.edgeSslCertificates == null ? Input.empty() : this.edgeSslCertificates;
    }

    @InputImport(name="labels")
    private final @Nullable Input<Map<String,String>> labels;

    public Input<Map<String,String>> getLabels() {
        return this.labels == null ? Input.empty() : this.labels;
    }

    @InputImport(name="logConfig")
    private final @Nullable Input<EdgeCacheServiceLogConfigArgs> logConfig;

    public Input<EdgeCacheServiceLogConfigArgs> getLogConfig() {
        return this.logConfig == null ? Input.empty() : this.logConfig;
    }

    @InputImport(name="name")
    private final @Nullable Input<String> name;

    public Input<String> getName() {
        return this.name == null ? Input.empty() : this.name;
    }

    @InputImport(name="project")
    private final @Nullable Input<String> project;

    public Input<String> getProject() {
        return this.project == null ? Input.empty() : this.project;
    }

    @InputImport(name="requireTls")
    private final @Nullable Input<Boolean> requireTls;

    public Input<Boolean> getRequireTls() {
        return this.requireTls == null ? Input.empty() : this.requireTls;
    }

    @InputImport(name="routing", required=true)
    private final Input<EdgeCacheServiceRoutingArgs> routing;

    public Input<EdgeCacheServiceRoutingArgs> getRouting() {
        return this.routing;
    }

    @InputImport(name="sslPolicy")
    private final @Nullable Input<String> sslPolicy;

    public Input<String> getSslPolicy() {
        return this.sslPolicy == null ? Input.empty() : this.sslPolicy;
    }

    public EdgeCacheServiceArgs(
        @Nullable Input<String> description,
        @Nullable Input<Boolean> disableQuic,
        @Nullable Input<String> edgeSecurityPolicy,
        @Nullable Input<List<String>> edgeSslCertificates,
        @Nullable Input<Map<String,String>> labels,
        @Nullable Input<EdgeCacheServiceLogConfigArgs> logConfig,
        @Nullable Input<String> name,
        @Nullable Input<String> project,
        @Nullable Input<Boolean> requireTls,
        Input<EdgeCacheServiceRoutingArgs> routing,
        @Nullable Input<String> sslPolicy) {
        this.description = description;
        this.disableQuic = disableQuic;
        this.edgeSecurityPolicy = edgeSecurityPolicy;
        this.edgeSslCertificates = edgeSslCertificates;
        this.labels = labels;
        this.logConfig = logConfig;
        this.name = name;
        this.project = project;
        this.requireTls = requireTls;
        this.routing = Objects.requireNonNull(routing, "expected parameter 'routing' to be non-null");
        this.sslPolicy = sslPolicy;
    }

    private EdgeCacheServiceArgs() {
        this.description = Input.empty();
        this.disableQuic = Input.empty();
        this.edgeSecurityPolicy = Input.empty();
        this.edgeSslCertificates = Input.empty();
        this.labels = Input.empty();
        this.logConfig = Input.empty();
        this.name = Input.empty();
        this.project = Input.empty();
        this.requireTls = Input.empty();
        this.routing = Input.empty();
        this.sslPolicy = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(EdgeCacheServiceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> description;
        private @Nullable Input<Boolean> disableQuic;
        private @Nullable Input<String> edgeSecurityPolicy;
        private @Nullable Input<List<String>> edgeSslCertificates;
        private @Nullable Input<Map<String,String>> labels;
        private @Nullable Input<EdgeCacheServiceLogConfigArgs> logConfig;
        private @Nullable Input<String> name;
        private @Nullable Input<String> project;
        private @Nullable Input<Boolean> requireTls;
        private Input<EdgeCacheServiceRoutingArgs> routing;
        private @Nullable Input<String> sslPolicy;

        public Builder() {
    	      // Empty
        }

        public Builder(EdgeCacheServiceArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.disableQuic = defaults.disableQuic;
    	      this.edgeSecurityPolicy = defaults.edgeSecurityPolicy;
    	      this.edgeSslCertificates = defaults.edgeSslCertificates;
    	      this.labels = defaults.labels;
    	      this.logConfig = defaults.logConfig;
    	      this.name = defaults.name;
    	      this.project = defaults.project;
    	      this.requireTls = defaults.requireTls;
    	      this.routing = defaults.routing;
    	      this.sslPolicy = defaults.sslPolicy;
        }

        public Builder setDescription(@Nullable Input<String> description) {
            this.description = description;
            return this;
        }

        public Builder setDescription(@Nullable String description) {
            this.description = Input.ofNullable(description);
            return this;
        }

        public Builder setDisableQuic(@Nullable Input<Boolean> disableQuic) {
            this.disableQuic = disableQuic;
            return this;
        }

        public Builder setDisableQuic(@Nullable Boolean disableQuic) {
            this.disableQuic = Input.ofNullable(disableQuic);
            return this;
        }

        public Builder setEdgeSecurityPolicy(@Nullable Input<String> edgeSecurityPolicy) {
            this.edgeSecurityPolicy = edgeSecurityPolicy;
            return this;
        }

        public Builder setEdgeSecurityPolicy(@Nullable String edgeSecurityPolicy) {
            this.edgeSecurityPolicy = Input.ofNullable(edgeSecurityPolicy);
            return this;
        }

        public Builder setEdgeSslCertificates(@Nullable Input<List<String>> edgeSslCertificates) {
            this.edgeSslCertificates = edgeSslCertificates;
            return this;
        }

        public Builder setEdgeSslCertificates(@Nullable List<String> edgeSslCertificates) {
            this.edgeSslCertificates = Input.ofNullable(edgeSslCertificates);
            return this;
        }

        public Builder setLabels(@Nullable Input<Map<String,String>> labels) {
            this.labels = labels;
            return this;
        }

        public Builder setLabels(@Nullable Map<String,String> labels) {
            this.labels = Input.ofNullable(labels);
            return this;
        }

        public Builder setLogConfig(@Nullable Input<EdgeCacheServiceLogConfigArgs> logConfig) {
            this.logConfig = logConfig;
            return this;
        }

        public Builder setLogConfig(@Nullable EdgeCacheServiceLogConfigArgs logConfig) {
            this.logConfig = Input.ofNullable(logConfig);
            return this;
        }

        public Builder setName(@Nullable Input<String> name) {
            this.name = name;
            return this;
        }

        public Builder setName(@Nullable String name) {
            this.name = Input.ofNullable(name);
            return this;
        }

        public Builder setProject(@Nullable Input<String> project) {
            this.project = project;
            return this;
        }

        public Builder setProject(@Nullable String project) {
            this.project = Input.ofNullable(project);
            return this;
        }

        public Builder setRequireTls(@Nullable Input<Boolean> requireTls) {
            this.requireTls = requireTls;
            return this;
        }

        public Builder setRequireTls(@Nullable Boolean requireTls) {
            this.requireTls = Input.ofNullable(requireTls);
            return this;
        }

        public Builder setRouting(Input<EdgeCacheServiceRoutingArgs> routing) {
            this.routing = Objects.requireNonNull(routing);
            return this;
        }

        public Builder setRouting(EdgeCacheServiceRoutingArgs routing) {
            this.routing = Input.of(Objects.requireNonNull(routing));
            return this;
        }

        public Builder setSslPolicy(@Nullable Input<String> sslPolicy) {
            this.sslPolicy = sslPolicy;
            return this;
        }

        public Builder setSslPolicy(@Nullable String sslPolicy) {
            this.sslPolicy = Input.ofNullable(sslPolicy);
            return this;
        }

        public EdgeCacheServiceArgs build() {
            return new EdgeCacheServiceArgs(description, disableQuic, edgeSecurityPolicy, edgeSslCertificates, labels, logConfig, name, project, requireTls, routing, sslPolicy);
        }
    }
}
