// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.pubsub;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Export;
import io.pulumi.core.annotations.ResourceType;
import io.pulumi.gcp.Utilities;
import io.pulumi.gcp.pubsub.SchemaArgs;
import io.pulumi.gcp.pubsub.inputs.SchemaState;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * A schema is a format that messages must follow,
 * creating a contract between publisher and subscriber that Pub/Sub will enforce.
 * 
 * 
 * To get more information about Schema, see:
 * 
 * * [API documentation](https://cloud.google.com/pubsub/docs/reference/rest/v1/projects.schemas)
 * * How-to Guides
 *     * [Creating and managing schemas](https://cloud.google.com/pubsub/docs/schemas)
 * 
 * {{% examples %}}
 * ## Example Usage
 * {{% example %}}
 * ### Pubsub Schema Basic
 * 
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 * 
 * const example = new gcp.pubsub.Schema("example", {
 *     definition: `{
 *   "type" : "record",
 *   "name" : "Avro",
 *   "fields" : [
 *     {
 *       "name" : "StringField",
 *       "type" : "string"
 *     },
 *     {
 *       "name" : "IntField",
 *       "type" : "int"
 *     }
 *   ]
 * }
 * `,
 *     type: "AVRO",
 * });
 * ```
 * ```python
 * import pulumi
 * import pulumi_gcp as gcp
 * 
 * example = gcp.pubsub.Schema("example",
 *     definition="""{
 *   "type" : "record",
 *   "name" : "Avro",
 *   "fields" : [
 *     {
 *       "name" : "StringField",
 *       "type" : "string"
 *     },
 *     {
 *       "name" : "IntField",
 *       "type" : "int"
 *     }
 *   ]
 * }
 * 
 * """,
 *     type="AVRO")
 * ```
 * ```csharp
 * using Pulumi;
 * using Gcp = Pulumi.Gcp;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var example = new Gcp.PubSub.Schema("example", new Gcp.PubSub.SchemaArgs
 *         {
 *             Definition = @"{
 *   ""type"" : ""record"",
 *   ""name"" : ""Avro"",
 *   ""fields"" : [
 *     {
 *       ""name"" : ""StringField"",
 *       ""type"" : ""string""
 *     },
 *     {
 *       ""name"" : ""IntField"",
 *       ""type"" : ""int""
 *     }
 *   ]
 * }
 * 
 * ",
 *             Type = "AVRO",
 *         });
 *     }
 * 
 * }
 * ```
 * ```go
 * package main
 * 
 * import (
 * 	"fmt"
 * 
 * 	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/pubsub"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		_, err := pubsub.NewSchema(ctx, "example", &pubsub.SchemaArgs{
 * 			Definition: pulumi.String(fmt.Sprintf("%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v", "{\n", "  \"type\" : \"record\",\n", "  \"name\" : \"Avro\",\n", "  \"fields\" : [\n", "    {\n", "      \"name\" : \"StringField\",\n", "      \"type\" : \"string\"\n", "    },\n", "    {\n", "      \"name\" : \"IntField\",\n", "      \"type\" : \"int\"\n", "    }\n", "  ]\n", "}\n", "\n")),
 * 			Type:       pulumi.String("AVRO"),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * ```
 * {{% /example %}}
 * {{% example %}}
 * ### Pubsub Schema Protobuf
 * 
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 * 
 * const exampleSchema = new gcp.pubsub.Schema("exampleSchema", {
 *     type: "PROTOCOL_BUFFER",
 *     definition: `syntax = "proto3";
 * message Results {
 * string message_request = 1;
 * string message_response = 2;
 * string timestamp_request = 3;
 * string timestamp_response = 4;
 * }`,
 * });
 * const exampleTopic = new gcp.pubsub.Topic("exampleTopic", {schemaSettings: {
 *     schema: "projects/my-project-name/schemas/example",
 *     encoding: "JSON",
 * }}, {
 *     dependsOn: [exampleSchema],
 * });
 * ```
 * ```python
 * import pulumi
 * import pulumi_gcp as gcp
 * 
 * example_schema = gcp.pubsub.Schema("exampleSchema",
 *     type="PROTOCOL_BUFFER",
 *     definition="""syntax = "proto3";
 * message Results {
 * string message_request = 1;
 * string message_response = 2;
 * string timestamp_request = 3;
 * string timestamp_response = 4;
 * }""")
 * example_topic = gcp.pubsub.Topic("exampleTopic", schema_settings=gcp.pubsub.TopicSchemaSettingsArgs(
 *     schema="projects/my-project-name/schemas/example",
 *     encoding="JSON",
 * ),
 * opts=pulumi.ResourceOptions(depends_on=[example_schema]))
 * ```
 * ```csharp
 * using Pulumi;
 * using Gcp = Pulumi.Gcp;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var exampleSchema = new Gcp.PubSub.Schema("exampleSchema", new Gcp.PubSub.SchemaArgs
 *         {
 *             Type = "PROTOCOL_BUFFER",
 *             Definition = @"syntax = ""proto3"";
 * message Results {
 * string message_request = 1;
 * string message_response = 2;
 * string timestamp_request = 3;
 * string timestamp_response = 4;
 * }",
 *         });
 *         var exampleTopic = new Gcp.PubSub.Topic("exampleTopic", new Gcp.PubSub.TopicArgs
 *         {
 *             SchemaSettings = new Gcp.PubSub.Inputs.TopicSchemaSettingsArgs
 *             {
 *                 Schema = "projects/my-project-name/schemas/example",
 *                 Encoding = "JSON",
 *             },
 *         }, new CustomResourceOptions
 *         {
 *             DependsOn = 
 *             {
 *                 exampleSchema,
 *             },
 *         });
 *     }
 * 
 * }
 * ```
 * ```go
 * package main
 * 
 * import (
 * 	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/pubsub"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		exampleSchema, err := pubsub.NewSchema(ctx, "exampleSchema", &pubsub.SchemaArgs{
 * 			Type:       pulumi.String("PROTOCOL_BUFFER"),
 * 			Definition: pulumi.String("syntax = \"proto3\";\nmessage Results {\nstring message_request = 1;\nstring message_response = 2;\nstring timestamp_request = 3;\nstring timestamp_response = 4;\n}"),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		_, err = pubsub.NewTopic(ctx, "exampleTopic", &pubsub.TopicArgs{
 * 			SchemaSettings: &pubsub.TopicSchemaSettingsArgs{
 * 				Schema:   pulumi.String("projects/my-project-name/schemas/example"),
 * 				Encoding: pulumi.String("JSON"),
 * 			},
 * 		}, pulumi.DependsOn([]pulumi.Resource{
 * 			exampleSchema,
 * 		}))
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * ```
 * {{% /example %}}
 * {{% /examples %}}
 * 
 * ## Import
 * 
 * Schema can be imported using any of these accepted formats
 * 
 * ```sh
 *  $ pulumi import gcp:pubsub/schema:Schema default projects/{{project}}/schemas/{{name}}
 * ```
 * 
 * 
 * 
 * ```sh
 *  $ pulumi import gcp:pubsub/schema:Schema default {{project}}/{{name}}
 * ```
 * 
 * 
 * 
 * ```sh
 *  $ pulumi import gcp:pubsub/schema:Schema default {{name}}
 * ```
 * 
 *  
 */
@ResourceType(type="gcp:pubsub/schema:Schema")
public class Schema extends io.pulumi.resources.CustomResource {
    /**
     * The definition of the schema.
     * This should contain a string representing the full definition of the schema
     * that is a valid schema definition of the type specified in type.
     * 
     */
    @Export(name="definition", type=String.class, parameters={})
    private Output</* @Nullable */ String> definition;

    /**
     * @return The definition of the schema.
     * This should contain a string representing the full definition of the schema
     * that is a valid schema definition of the type specified in type.
     * 
     */
    public Output</* @Nullable */ String> getDefinition() {
        return this.definition;
    }
    /**
     * The ID to use for the schema, which will become the final component of the schema's resource name.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The ID to use for the schema, which will become the final component of the schema's resource name.
     * 
     */
    public Output<String> getName() {
        return this.name;
    }
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Export(name="project", type=String.class, parameters={})
    private Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Output<String> getProject() {
        return this.project;
    }
    /**
     * The type of the schema definition
     * Default value is `TYPE_UNSPECIFIED`.
     * Possible values are `TYPE_UNSPECIFIED`, `PROTOCOL_BUFFER`, and `AVRO`.
     * 
     */
    @Export(name="type", type=String.class, parameters={})
    private Output</* @Nullable */ String> type;

    /**
     * @return The type of the schema definition
     * Default value is `TYPE_UNSPECIFIED`.
     * Possible values are `TYPE_UNSPECIFIED`, `PROTOCOL_BUFFER`, and `AVRO`.
     * 
     */
    public Output</* @Nullable */ String> getType() {
        return this.type;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Schema(String name) {
        this(name, SchemaArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Schema(String name, @Nullable SchemaArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Schema(String name, @Nullable SchemaArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("gcp:pubsub/schema:Schema", name, args == null ? SchemaArgs.Empty : args, makeResourceOptions(options, Output.empty()));
    }

    private Schema(String name, Output<String> id, @Nullable SchemaState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("gcp:pubsub/schema:Schema", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Schema get(String name, Output<String> id, @Nullable SchemaState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new Schema(name, id, state, options);
    }
}
