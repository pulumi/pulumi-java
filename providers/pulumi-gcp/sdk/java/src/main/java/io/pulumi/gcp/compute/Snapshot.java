// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.compute;

import io.pulumi.core.Input;
import io.pulumi.core.Output;
import io.pulumi.core.internal.annotations.OutputExport;
import io.pulumi.core.internal.annotations.ResourceType;
import io.pulumi.gcp.Utilities;
import io.pulumi.gcp.compute.SnapshotArgs;
import io.pulumi.gcp.compute.inputs.SnapshotState;
import io.pulumi.gcp.compute.outputs.SnapshotSnapshotEncryptionKey;
import io.pulumi.gcp.compute.outputs.SnapshotSourceDiskEncryptionKey;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;

@ResourceType(type="gcp:compute/snapshot:Snapshot")
public class Snapshot extends io.pulumi.resources.CustomResource {
    @OutputExport(name="creationTimestamp", type=String.class, parameters={})
    private Output<String> creationTimestamp;

    public Output<String> getCreationTimestamp() {
        return this.creationTimestamp;
    }
    @OutputExport(name="description", type=String.class, parameters={})
    private Output</* @Nullable */ String> description;

    public Output</* @Nullable */ String> getDescription() {
        return this.description;
    }
    @OutputExport(name="diskSizeGb", type=Integer.class, parameters={})
    private Output<Integer> diskSizeGb;

    public Output<Integer> getDiskSizeGb() {
        return this.diskSizeGb;
    }
    @OutputExport(name="labelFingerprint", type=String.class, parameters={})
    private Output<String> labelFingerprint;

    public Output<String> getLabelFingerprint() {
        return this.labelFingerprint;
    }
    @OutputExport(name="labels", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> labels;

    public Output</* @Nullable */ Map<String,String>> getLabels() {
        return this.labels;
    }
    @OutputExport(name="licenses", type=List.class, parameters={String.class})
    private Output<List<String>> licenses;

    public Output<List<String>> getLicenses() {
        return this.licenses;
    }
    @OutputExport(name="name", type=String.class, parameters={})
    private Output<String> name;

    public Output<String> getName() {
        return this.name;
    }
    @OutputExport(name="project", type=String.class, parameters={})
    private Output<String> project;

    public Output<String> getProject() {
        return this.project;
    }
    @OutputExport(name="selfLink", type=String.class, parameters={})
    private Output<String> selfLink;

    public Output<String> getSelfLink() {
        return this.selfLink;
    }
    @OutputExport(name="snapshotEncryptionKey", type=SnapshotSnapshotEncryptionKey.class, parameters={})
    private Output</* @Nullable */ SnapshotSnapshotEncryptionKey> snapshotEncryptionKey;

    public Output</* @Nullable */ SnapshotSnapshotEncryptionKey> getSnapshotEncryptionKey() {
        return this.snapshotEncryptionKey;
    }
    @OutputExport(name="snapshotId", type=Integer.class, parameters={})
    private Output<Integer> snapshotId;

    public Output<Integer> getSnapshotId() {
        return this.snapshotId;
    }
    @OutputExport(name="sourceDisk", type=String.class, parameters={})
    private Output<String> sourceDisk;

    public Output<String> getSourceDisk() {
        return this.sourceDisk;
    }
    @OutputExport(name="sourceDiskEncryptionKey", type=SnapshotSourceDiskEncryptionKey.class, parameters={})
    private Output</* @Nullable */ SnapshotSourceDiskEncryptionKey> sourceDiskEncryptionKey;

    public Output</* @Nullable */ SnapshotSourceDiskEncryptionKey> getSourceDiskEncryptionKey() {
        return this.sourceDiskEncryptionKey;
    }
    @OutputExport(name="storageBytes", type=Integer.class, parameters={})
    private Output<Integer> storageBytes;

    public Output<Integer> getStorageBytes() {
        return this.storageBytes;
    }
    @OutputExport(name="storageLocations", type=List.class, parameters={String.class})
    private Output<List<String>> storageLocations;

    public Output<List<String>> getStorageLocations() {
        return this.storageLocations;
    }
    @OutputExport(name="zone", type=String.class, parameters={})
    private Output<String> zone;

    public Output<String> getZone() {
        return this.zone;
    }

    public Snapshot(String name, SnapshotArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("gcp:compute/snapshot:Snapshot", name, args == null ? SnapshotArgs.Empty : args, makeResourceOptions(options, Input.empty()));
    }

    private Snapshot(String name, Input<String> id, @Nullable SnapshotState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("gcp:compute/snapshot:Snapshot", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Input<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .setVersion(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    public static Snapshot get(String name, Input<String> id, @Nullable SnapshotState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new Snapshot(name, id, state, options);
    }
}
