// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.container.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import io.pulumi.gcp.container.outputs.AwsClusterControlPlaneAwsServicesAuthentication;
import io.pulumi.gcp.container.outputs.AwsClusterControlPlaneConfigEncryption;
import io.pulumi.gcp.container.outputs.AwsClusterControlPlaneDatabaseEncryption;
import io.pulumi.gcp.container.outputs.AwsClusterControlPlaneMainVolume;
import io.pulumi.gcp.container.outputs.AwsClusterControlPlaneProxyConfig;
import io.pulumi.gcp.container.outputs.AwsClusterControlPlaneRootVolume;
import io.pulumi.gcp.container.outputs.AwsClusterControlPlaneSshConfig;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class AwsClusterControlPlane {
    private final AwsClusterControlPlaneAwsServicesAuthentication awsServicesAuthentication;
    private final AwsClusterControlPlaneConfigEncryption configEncryption;
    private final AwsClusterControlPlaneDatabaseEncryption databaseEncryption;
    private final String iamInstanceProfile;
    private final @Nullable String instanceType;
    private final @Nullable AwsClusterControlPlaneMainVolume mainVolume;
    private final @Nullable AwsClusterControlPlaneProxyConfig proxyConfig;
    private final @Nullable AwsClusterControlPlaneRootVolume rootVolume;
    private final @Nullable List<String> securityGroupIds;
    private final @Nullable AwsClusterControlPlaneSshConfig sshConfig;
    private final List<String> subnetIds;
    private final @Nullable Map<String,String> tags;
    private final String version;

    @OutputCustomType.Constructor({"awsServicesAuthentication","configEncryption","databaseEncryption","iamInstanceProfile","instanceType","mainVolume","proxyConfig","rootVolume","securityGroupIds","sshConfig","subnetIds","tags","version"})
    private AwsClusterControlPlane(
        AwsClusterControlPlaneAwsServicesAuthentication awsServicesAuthentication,
        AwsClusterControlPlaneConfigEncryption configEncryption,
        AwsClusterControlPlaneDatabaseEncryption databaseEncryption,
        String iamInstanceProfile,
        @Nullable String instanceType,
        @Nullable AwsClusterControlPlaneMainVolume mainVolume,
        @Nullable AwsClusterControlPlaneProxyConfig proxyConfig,
        @Nullable AwsClusterControlPlaneRootVolume rootVolume,
        @Nullable List<String> securityGroupIds,
        @Nullable AwsClusterControlPlaneSshConfig sshConfig,
        List<String> subnetIds,
        @Nullable Map<String,String> tags,
        String version) {
        this.awsServicesAuthentication = Objects.requireNonNull(awsServicesAuthentication);
        this.configEncryption = Objects.requireNonNull(configEncryption);
        this.databaseEncryption = Objects.requireNonNull(databaseEncryption);
        this.iamInstanceProfile = Objects.requireNonNull(iamInstanceProfile);
        this.instanceType = instanceType;
        this.mainVolume = mainVolume;
        this.proxyConfig = proxyConfig;
        this.rootVolume = rootVolume;
        this.securityGroupIds = securityGroupIds;
        this.sshConfig = sshConfig;
        this.subnetIds = Objects.requireNonNull(subnetIds);
        this.tags = tags;
        this.version = Objects.requireNonNull(version);
    }

    public AwsClusterControlPlaneAwsServicesAuthentication getAwsServicesAuthentication() {
        return this.awsServicesAuthentication;
    }
    public AwsClusterControlPlaneConfigEncryption getConfigEncryption() {
        return this.configEncryption;
    }
    public AwsClusterControlPlaneDatabaseEncryption getDatabaseEncryption() {
        return this.databaseEncryption;
    }
    public String getIamInstanceProfile() {
        return this.iamInstanceProfile;
    }
    public Optional<String> getInstanceType() {
        return Optional.ofNullable(this.instanceType);
    }
    public Optional<AwsClusterControlPlaneMainVolume> getMainVolume() {
        return Optional.ofNullable(this.mainVolume);
    }
    public Optional<AwsClusterControlPlaneProxyConfig> getProxyConfig() {
        return Optional.ofNullable(this.proxyConfig);
    }
    public Optional<AwsClusterControlPlaneRootVolume> getRootVolume() {
        return Optional.ofNullable(this.rootVolume);
    }
    public List<String> getSecurityGroupIds() {
        return this.securityGroupIds == null ? List.of() : this.securityGroupIds;
    }
    public Optional<AwsClusterControlPlaneSshConfig> getSshConfig() {
        return Optional.ofNullable(this.sshConfig);
    }
    public List<String> getSubnetIds() {
        return this.subnetIds;
    }
    public Map<String,String> getTags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    public String getVersion() {
        return this.version;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AwsClusterControlPlane defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AwsClusterControlPlaneAwsServicesAuthentication awsServicesAuthentication;
        private AwsClusterControlPlaneConfigEncryption configEncryption;
        private AwsClusterControlPlaneDatabaseEncryption databaseEncryption;
        private String iamInstanceProfile;
        private @Nullable String instanceType;
        private @Nullable AwsClusterControlPlaneMainVolume mainVolume;
        private @Nullable AwsClusterControlPlaneProxyConfig proxyConfig;
        private @Nullable AwsClusterControlPlaneRootVolume rootVolume;
        private @Nullable List<String> securityGroupIds;
        private @Nullable AwsClusterControlPlaneSshConfig sshConfig;
        private List<String> subnetIds;
        private @Nullable Map<String,String> tags;
        private String version;

        public Builder() {
    	      // Empty
        }

        public Builder(AwsClusterControlPlane defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.awsServicesAuthentication = defaults.awsServicesAuthentication;
    	      this.configEncryption = defaults.configEncryption;
    	      this.databaseEncryption = defaults.databaseEncryption;
    	      this.iamInstanceProfile = defaults.iamInstanceProfile;
    	      this.instanceType = defaults.instanceType;
    	      this.mainVolume = defaults.mainVolume;
    	      this.proxyConfig = defaults.proxyConfig;
    	      this.rootVolume = defaults.rootVolume;
    	      this.securityGroupIds = defaults.securityGroupIds;
    	      this.sshConfig = defaults.sshConfig;
    	      this.subnetIds = defaults.subnetIds;
    	      this.tags = defaults.tags;
    	      this.version = defaults.version;
        }

        public Builder setAwsServicesAuthentication(AwsClusterControlPlaneAwsServicesAuthentication awsServicesAuthentication) {
            this.awsServicesAuthentication = Objects.requireNonNull(awsServicesAuthentication);
            return this;
        }

        public Builder setConfigEncryption(AwsClusterControlPlaneConfigEncryption configEncryption) {
            this.configEncryption = Objects.requireNonNull(configEncryption);
            return this;
        }

        public Builder setDatabaseEncryption(AwsClusterControlPlaneDatabaseEncryption databaseEncryption) {
            this.databaseEncryption = Objects.requireNonNull(databaseEncryption);
            return this;
        }

        public Builder setIamInstanceProfile(String iamInstanceProfile) {
            this.iamInstanceProfile = Objects.requireNonNull(iamInstanceProfile);
            return this;
        }

        public Builder setInstanceType(@Nullable String instanceType) {
            this.instanceType = instanceType;
            return this;
        }

        public Builder setMainVolume(@Nullable AwsClusterControlPlaneMainVolume mainVolume) {
            this.mainVolume = mainVolume;
            return this;
        }

        public Builder setProxyConfig(@Nullable AwsClusterControlPlaneProxyConfig proxyConfig) {
            this.proxyConfig = proxyConfig;
            return this;
        }

        public Builder setRootVolume(@Nullable AwsClusterControlPlaneRootVolume rootVolume) {
            this.rootVolume = rootVolume;
            return this;
        }

        public Builder setSecurityGroupIds(@Nullable List<String> securityGroupIds) {
            this.securityGroupIds = securityGroupIds;
            return this;
        }

        public Builder setSshConfig(@Nullable AwsClusterControlPlaneSshConfig sshConfig) {
            this.sshConfig = sshConfig;
            return this;
        }

        public Builder setSubnetIds(List<String> subnetIds) {
            this.subnetIds = Objects.requireNonNull(subnetIds);
            return this;
        }

        public Builder setTags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }

        public Builder setVersion(String version) {
            this.version = Objects.requireNonNull(version);
            return this;
        }

        public AwsClusterControlPlane build() {
            return new AwsClusterControlPlane(awsServicesAuthentication, configEncryption, databaseEncryption, iamInstanceProfile, instanceType, mainVolume, proxyConfig, rootVolume, securityGroupIds, sshConfig, subnetIds, tags, version);
        }
    }
}
