// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.dataloss;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import io.pulumi.gcp.dataloss.inputs.PreventionStoredInfoTypeDictionaryArgs;
import io.pulumi.gcp.dataloss.inputs.PreventionStoredInfoTypeLargeCustomDictionaryArgs;
import io.pulumi.gcp.dataloss.inputs.PreventionStoredInfoTypeRegexArgs;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class PreventionStoredInfoTypeArgs extends io.pulumi.resources.ResourceArgs {

    public static final PreventionStoredInfoTypeArgs Empty = new PreventionStoredInfoTypeArgs();

    /**
     * A description of the info type.
     * 
     */
    @InputImport(name="description")
      private final @Nullable Input<String> description;

    public Input<String> getDescription() {
        return this.description == null ? Input.empty() : this.description;
    }

    /**
     * Dictionary which defines the rule.
     * Structure is documented below.
     * 
     */
    @InputImport(name="dictionary")
      private final @Nullable Input<PreventionStoredInfoTypeDictionaryArgs> dictionary;

    public Input<PreventionStoredInfoTypeDictionaryArgs> getDictionary() {
        return this.dictionary == null ? Input.empty() : this.dictionary;
    }

    /**
     * User set display name of the info type.
     * 
     */
    @InputImport(name="displayName")
      private final @Nullable Input<String> displayName;

    public Input<String> getDisplayName() {
        return this.displayName == null ? Input.empty() : this.displayName;
    }

    /**
     * Dictionary which defines the rule.
     * Structure is documented below.
     * 
     */
    @InputImport(name="largeCustomDictionary")
      private final @Nullable Input<PreventionStoredInfoTypeLargeCustomDictionaryArgs> largeCustomDictionary;

    public Input<PreventionStoredInfoTypeLargeCustomDictionaryArgs> getLargeCustomDictionary() {
        return this.largeCustomDictionary == null ? Input.empty() : this.largeCustomDictionary;
    }

    /**
     * The parent of the info type in any of the following formats:
     * * `projects/{{project}}`
     * * `projects/{{project}}/locations/{{location}}`
     * * `organizations/{{organization_id}}`
     * * `organizations/{{organization_id}}/locations/{{location}}`
     * 
     */
    @InputImport(name="parent", required=true)
      private final Input<String> parent;

    public Input<String> getParent() {
        return this.parent;
    }

    /**
     * Regular expression which defines the rule.
     * Structure is documented below.
     * 
     */
    @InputImport(name="regex")
      private final @Nullable Input<PreventionStoredInfoTypeRegexArgs> regex;

    public Input<PreventionStoredInfoTypeRegexArgs> getRegex() {
        return this.regex == null ? Input.empty() : this.regex;
    }

    public PreventionStoredInfoTypeArgs(
        @Nullable Input<String> description,
        @Nullable Input<PreventionStoredInfoTypeDictionaryArgs> dictionary,
        @Nullable Input<String> displayName,
        @Nullable Input<PreventionStoredInfoTypeLargeCustomDictionaryArgs> largeCustomDictionary,
        Input<String> parent,
        @Nullable Input<PreventionStoredInfoTypeRegexArgs> regex) {
        this.description = description;
        this.dictionary = dictionary;
        this.displayName = displayName;
        this.largeCustomDictionary = largeCustomDictionary;
        this.parent = Objects.requireNonNull(parent, "expected parameter 'parent' to be non-null");
        this.regex = regex;
    }

    private PreventionStoredInfoTypeArgs() {
        this.description = Input.empty();
        this.dictionary = Input.empty();
        this.displayName = Input.empty();
        this.largeCustomDictionary = Input.empty();
        this.parent = Input.empty();
        this.regex = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PreventionStoredInfoTypeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> description;
        private @Nullable Input<PreventionStoredInfoTypeDictionaryArgs> dictionary;
        private @Nullable Input<String> displayName;
        private @Nullable Input<PreventionStoredInfoTypeLargeCustomDictionaryArgs> largeCustomDictionary;
        private Input<String> parent;
        private @Nullable Input<PreventionStoredInfoTypeRegexArgs> regex;

        public Builder() {
    	      // Empty
        }

        public Builder(PreventionStoredInfoTypeArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.dictionary = defaults.dictionary;
    	      this.displayName = defaults.displayName;
    	      this.largeCustomDictionary = defaults.largeCustomDictionary;
    	      this.parent = defaults.parent;
    	      this.regex = defaults.regex;
        }

        public Builder setDescription(@Nullable Input<String> description) {
            this.description = description;
            return this;
        }

        public Builder setDescription(@Nullable String description) {
            this.description = Input.ofNullable(description);
            return this;
        }

        public Builder setDictionary(@Nullable Input<PreventionStoredInfoTypeDictionaryArgs> dictionary) {
            this.dictionary = dictionary;
            return this;
        }

        public Builder setDictionary(@Nullable PreventionStoredInfoTypeDictionaryArgs dictionary) {
            this.dictionary = Input.ofNullable(dictionary);
            return this;
        }

        public Builder setDisplayName(@Nullable Input<String> displayName) {
            this.displayName = displayName;
            return this;
        }

        public Builder setDisplayName(@Nullable String displayName) {
            this.displayName = Input.ofNullable(displayName);
            return this;
        }

        public Builder setLargeCustomDictionary(@Nullable Input<PreventionStoredInfoTypeLargeCustomDictionaryArgs> largeCustomDictionary) {
            this.largeCustomDictionary = largeCustomDictionary;
            return this;
        }

        public Builder setLargeCustomDictionary(@Nullable PreventionStoredInfoTypeLargeCustomDictionaryArgs largeCustomDictionary) {
            this.largeCustomDictionary = Input.ofNullable(largeCustomDictionary);
            return this;
        }

        public Builder setParent(Input<String> parent) {
            this.parent = Objects.requireNonNull(parent);
            return this;
        }

        public Builder setParent(String parent) {
            this.parent = Input.of(Objects.requireNonNull(parent));
            return this;
        }

        public Builder setRegex(@Nullable Input<PreventionStoredInfoTypeRegexArgs> regex) {
            this.regex = regex;
            return this;
        }

        public Builder setRegex(@Nullable PreventionStoredInfoTypeRegexArgs regex) {
            this.regex = Input.ofNullable(regex);
            return this;
        }
        public PreventionStoredInfoTypeArgs build() {
            return new PreventionStoredInfoTypeArgs(description, dictionary, displayName, largeCustomDictionary, parent, regex);
        }
    }
}
