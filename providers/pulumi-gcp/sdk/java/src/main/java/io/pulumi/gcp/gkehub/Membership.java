// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.gkehub;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Export;
import io.pulumi.core.annotations.ResourceType;
import io.pulumi.gcp.Utilities;
import io.pulumi.gcp.gkehub.MembershipArgs;
import io.pulumi.gcp.gkehub.inputs.MembershipState;
import io.pulumi.gcp.gkehub.outputs.MembershipAuthority;
import io.pulumi.gcp.gkehub.outputs.MembershipEndpoint;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;

/**
 * Membership contains information about a member cluster.
 * 
 * 
 * To get more information about Membership, see:
 * 
 * * [API documentation](https://cloud.google.com/anthos/multicluster-management/reference/rest/v1/projects.locations.memberships)
 * * How-to Guides
 *     * [Registering a Cluster](https://cloud.google.com/anthos/multicluster-management/connect/registering-a-cluster#register_cluster)
 * 
 * {{% examples %}}
 * ## Example Usage
 * {{% example %}}
 * ### Gkehub Membership Basic
 * 
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 * 
 * const primary = new gcp.container.Cluster("primary", {
 *     initialNodeCount: 1,
 *     location: "us-central1-a",
 * });
 * const membership = new gcp.gkehub.Membership("membership", {
 *     endpoint: {
 *         gkeCluster: {
 *             resourceLink: pulumi.interpolate`//container.googleapis.com/${primary.id}`,
 *         },
 *     },
 *     membershipId: "basic",
 * });
 * ```
 * ```python
 * import pulumi
 * import pulumi_gcp as gcp
 * 
 * primary = gcp.container.Cluster("primary",
 *     initial_node_count=1,
 *     location="us-central1-a")
 * membership = gcp.gkehub.Membership("membership",
 *     endpoint=gcp.gkehub.MembershipEndpointArgs(
 *         gke_cluster=gcp.gkehub.MembershipEndpointGkeClusterArgs(
 *             resource_link=primary.id.apply(lambda id: f"//container.googleapis.com/{id}"),
 *         ),
 *     ),
 *     membership_id="basic")
 * ```
 * ```csharp
 * using Pulumi;
 * using Gcp = Pulumi.Gcp;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var primary = new Gcp.Container.Cluster("primary", new Gcp.Container.ClusterArgs
 *         {
 *             InitialNodeCount = 1,
 *             Location = "us-central1-a",
 *         });
 *         var membership = new Gcp.GkeHub.Membership("membership", new Gcp.GkeHub.MembershipArgs
 *         {
 *             Endpoint = new Gcp.GkeHub.Inputs.MembershipEndpointArgs
 *             {
 *                 GkeCluster = new Gcp.GkeHub.Inputs.MembershipEndpointGkeClusterArgs
 *                 {
 *                     ResourceLink = primary.Id.Apply(id => $"//container.googleapis.com/{id}"),
 *                 },
 *             },
 *             MembershipId = "basic",
 *         });
 *     }
 * 
 * }
 * ```
 * ```go
 * package main
 * 
 * import (
 * 	"fmt"
 * 
 * 	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/container"
 * 	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/gkehub"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		primary, err := container.NewCluster(ctx, "primary", &container.ClusterArgs{
 * 			InitialNodeCount: pulumi.Int(1),
 * 			Location:         pulumi.String("us-central1-a"),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		_, err = gkehub.NewMembership(ctx, "membership", &gkehub.MembershipArgs{
 * 			Endpoint: &gkehub.MembershipEndpointArgs{
 * 				GkeCluster: &gkehub.MembershipEndpointGkeClusterArgs{
 * 					ResourceLink: primary.ID().ApplyT(func(id string) (string, error) {
 * 						return fmt.Sprintf("%v%v", "//container.googleapis.com/", id), nil
 * 					}).(pulumi.StringOutput),
 * 				},
 * 			},
 * 			MembershipId: pulumi.String("basic"),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * ```
 * {{% /example %}}
 * {{% example %}}
 * ### Gkehub Membership Issuer
 * 
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 * 
 * const primary = new gcp.container.Cluster("primary", {
 *     location: "us-central1-a",
 *     initialNodeCount: 1,
 *     workloadIdentityConfig: {
 *         workloadPool: "my-project-name.svc.id.goog",
 *     },
 * });
 * const membership = new gcp.gkehub.Membership("membership", {
 *     membershipId: "basic",
 *     endpoint: {
 *         gkeCluster: {
 *             resourceLink: primary.id,
 *         },
 *     },
 *     authority: {
 *         issuer: pulumi.interpolate`https://container.googleapis.com/v1/${primary.id}`,
 *     },
 * });
 * ```
 * ```python
 * import pulumi
 * import pulumi_gcp as gcp
 * 
 * primary = gcp.container.Cluster("primary",
 *     location="us-central1-a",
 *     initial_node_count=1,
 *     workload_identity_config=gcp.container.ClusterWorkloadIdentityConfigArgs(
 *         workload_pool="my-project-name.svc.id.goog",
 *     ))
 * membership = gcp.gkehub.Membership("membership",
 *     membership_id="basic",
 *     endpoint=gcp.gkehub.MembershipEndpointArgs(
 *         gke_cluster=gcp.gkehub.MembershipEndpointGkeClusterArgs(
 *             resource_link=primary.id,
 *         ),
 *     ),
 *     authority=gcp.gkehub.MembershipAuthorityArgs(
 *         issuer=primary.id.apply(lambda id: f"https://container.googleapis.com/v1/{id}"),
 *     ))
 * ```
 * ```csharp
 * using Pulumi;
 * using Gcp = Pulumi.Gcp;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var primary = new Gcp.Container.Cluster("primary", new Gcp.Container.ClusterArgs
 *         {
 *             Location = "us-central1-a",
 *             InitialNodeCount = 1,
 *             WorkloadIdentityConfig = new Gcp.Container.Inputs.ClusterWorkloadIdentityConfigArgs
 *             {
 *                 WorkloadPool = "my-project-name.svc.id.goog",
 *             },
 *         });
 *         var membership = new Gcp.GkeHub.Membership("membership", new Gcp.GkeHub.MembershipArgs
 *         {
 *             MembershipId = "basic",
 *             Endpoint = new Gcp.GkeHub.Inputs.MembershipEndpointArgs
 *             {
 *                 GkeCluster = new Gcp.GkeHub.Inputs.MembershipEndpointGkeClusterArgs
 *                 {
 *                     ResourceLink = primary.Id,
 *                 },
 *             },
 *             Authority = new Gcp.GkeHub.Inputs.MembershipAuthorityArgs
 *             {
 *                 Issuer = primary.Id.Apply(id => $"https://container.googleapis.com/v1/{id}"),
 *             },
 *         });
 *     }
 * 
 * }
 * ```
 * ```go
 * package main
 * 
 * import (
 * 	"fmt"
 * 
 * 	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/container"
 * 	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/gkehub"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		primary, err := container.NewCluster(ctx, "primary", &container.ClusterArgs{
 * 			Location:         pulumi.String("us-central1-a"),
 * 			InitialNodeCount: pulumi.Int(1),
 * 			WorkloadIdentityConfig: &container.ClusterWorkloadIdentityConfigArgs{
 * 				WorkloadPool: pulumi.String("my-project-name.svc.id.goog"),
 * 			},
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		_, err = gkehub.NewMembership(ctx, "membership", &gkehub.MembershipArgs{
 * 			MembershipId: pulumi.String("basic"),
 * 			Endpoint: &gkehub.MembershipEndpointArgs{
 * 				GkeCluster: &gkehub.MembershipEndpointGkeClusterArgs{
 * 					ResourceLink: primary.ID(),
 * 				},
 * 			},
 * 			Authority: &gkehub.MembershipAuthorityArgs{
 * 				Issuer: primary.ID().ApplyT(func(id string) (string, error) {
 * 					return fmt.Sprintf("%v%v", "https://container.googleapis.com/v1/", id), nil
 * 				}).(pulumi.StringOutput),
 * 			},
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * ```
 * {{% /example %}}
 * {{% /examples %}}
 * 
 * ## Import
 * 
 * Membership can be imported using any of these accepted formats
 * 
 * ```sh
 *  $ pulumi import gcp:gkehub/membership:Membership default {{name}}
 * ```
 * 
 *  
 */
@ResourceType(type="gcp:gkehub/membership:Membership")
public class Membership extends io.pulumi.resources.CustomResource {
    /**
     * Authority encodes how Google will recognize identities from this Membership.
     * See the workload identity documentation for more details:
     * https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity
     * Structure is documented below.
     * 
     */
    @Export(name="authority", type=MembershipAuthority.class, parameters={})
    private Output</* @Nullable */ MembershipAuthority> authority;

    /**
     * @return Authority encodes how Google will recognize identities from this Membership.
     * See the workload identity documentation for more details:
     * https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity
     * Structure is documented below.
     * 
     */
    public Output</* @Nullable */ MembershipAuthority> getAuthority() {
        return this.authority;
    }
    /**
     * The name of this entity type to be displayed on the console. This field is unavailable in v1 of the API.
     * 
     * @Deprecated
     * This field is unavailable in the GA provider and will be removed from the beta provider in a future release.
     */
    @Deprecated /* This field is unavailable in the GA provider and will be removed from the beta provider in a future release. */
    @Export(name="description", type=String.class, parameters={})
    private Output</* @Nullable */ String> description;

    /**
     * @return The name of this entity type to be displayed on the console. This field is unavailable in v1 of the API.
     * 
     */
    public Output</* @Nullable */ String> getDescription() {
        return this.description;
    }
    /**
     * If this Membership is a Kubernetes API server hosted on GKE, this is a self link to its GCP resource.
     * Structure is documented below.
     * 
     */
    @Export(name="endpoint", type=MembershipEndpoint.class, parameters={})
    private Output</* @Nullable */ MembershipEndpoint> endpoint;

    /**
     * @return If this Membership is a Kubernetes API server hosted on GKE, this is a self link to its GCP resource.
     * Structure is documented below.
     * 
     */
    public Output</* @Nullable */ MembershipEndpoint> getEndpoint() {
        return this.endpoint;
    }
    /**
     * Labels to apply to this membership.
     * 
     */
    @Export(name="labels", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> labels;

    /**
     * @return Labels to apply to this membership.
     * 
     */
    public Output</* @Nullable */ Map<String,String>> getLabels() {
        return this.labels;
    }
    /**
     * The client-provided identifier of the membership.
     * 
     */
    @Export(name="membershipId", type=String.class, parameters={})
    private Output<String> membershipId;

    /**
     * @return The client-provided identifier of the membership.
     * 
     */
    public Output<String> getMembershipId() {
        return this.membershipId;
    }
    /**
     * The unique identifier of the membership.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The unique identifier of the membership.
     * 
     */
    public Output<String> getName() {
        return this.name;
    }
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Export(name="project", type=String.class, parameters={})
    private Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Output<String> getProject() {
        return this.project;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Membership(String name) {
        this(name, MembershipArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Membership(String name, MembershipArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Membership(String name, MembershipArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("gcp:gkehub/membership:Membership", name, args == null ? MembershipArgs.Empty : args, makeResourceOptions(options, Output.empty()));
    }

    private Membership(String name, Output<String> id, @Nullable MembershipState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("gcp:gkehub/membership:Membership", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Membership get(String name, Output<String> id, @Nullable MembershipState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new Membership(name, id, state, options);
    }
}
