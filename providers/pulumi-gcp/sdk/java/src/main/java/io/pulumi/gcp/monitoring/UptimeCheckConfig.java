// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.monitoring;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Export;
import io.pulumi.core.annotations.ResourceType;
import io.pulumi.gcp.Utilities;
import io.pulumi.gcp.monitoring.UptimeCheckConfigArgs;
import io.pulumi.gcp.monitoring.inputs.UptimeCheckConfigState;
import io.pulumi.gcp.monitoring.outputs.UptimeCheckConfigContentMatcher;
import io.pulumi.gcp.monitoring.outputs.UptimeCheckConfigHttpCheck;
import io.pulumi.gcp.monitoring.outputs.UptimeCheckConfigMonitoredResource;
import io.pulumi.gcp.monitoring.outputs.UptimeCheckConfigResourceGroup;
import io.pulumi.gcp.monitoring.outputs.UptimeCheckConfigTcpCheck;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * This message configures which resources and services to monitor for availability.
 * 
 * To get more information about UptimeCheckConfig, see:
 * 
 * * [API documentation](https://cloud.google.com/monitoring/api/ref_v3/rest/v3/projects.uptimeCheckConfigs)
 * * How-to Guides
 *     * [Official Documentation](https://cloud.google.com/monitoring/uptime-checks/)
 * 
 * > **Warning:** All arguments including `http_check.auth_info.password` will be stored in the raw
 * state as plain-text. [Read more about secrets in state](https://www.pulumi.com/docs/intro/concepts/programming-model/#secrets).
 * 
 * ## Example Usage
 * 
 * ## Import
 * 
 * UptimeCheckConfig can be imported using any of these accepted formats
 * 
 * ```sh
 *  $ pulumi import gcp:monitoring/uptimeCheckConfig:UptimeCheckConfig default {{name}}
 * ```
 * 
 */
@ResourceType(type="gcp:monitoring/uptimeCheckConfig:UptimeCheckConfig")
public class UptimeCheckConfig extends io.pulumi.resources.CustomResource {
    /**
     * The expected content on the page the check is run against. Currently, only the first entry in the list is supported, and other entries will be ignored. The server will look for an exact match of the string in the page response's content. This field is optional and should only be specified if a content match is required.
     * Structure is documented below.
     * 
     */
    @Export(name="contentMatchers", type=List.class, parameters={UptimeCheckConfigContentMatcher.class})
    private Output</* @Nullable */ List<UptimeCheckConfigContentMatcher>> contentMatchers;

    /**
     * @return The expected content on the page the check is run against. Currently, only the first entry in the list is supported, and other entries will be ignored. The server will look for an exact match of the string in the page response's content. This field is optional and should only be specified if a content match is required.
     * Structure is documented below.
     * 
     */
    public Output</* @Nullable */ List<UptimeCheckConfigContentMatcher>> getContentMatchers() {
        return this.contentMatchers;
    }
    /**
     * A human-friendly name for the uptime check configuration. The display name should be unique within a Stackdriver Workspace in order to make it easier to identify; however, uniqueness is not enforced.
     * 
     */
    @Export(name="displayName", type=String.class, parameters={})
    private Output<String> displayName;

    /**
     * @return A human-friendly name for the uptime check configuration. The display name should be unique within a Stackdriver Workspace in order to make it easier to identify; however, uniqueness is not enforced.
     * 
     */
    public Output<String> getDisplayName() {
        return this.displayName;
    }
    /**
     * Contains information needed to make an HTTP or HTTPS check.
     * Structure is documented below.
     * 
     */
    @Export(name="httpCheck", type=UptimeCheckConfigHttpCheck.class, parameters={})
    private Output</* @Nullable */ UptimeCheckConfigHttpCheck> httpCheck;

    /**
     * @return Contains information needed to make an HTTP or HTTPS check.
     * Structure is documented below.
     * 
     */
    public Output</* @Nullable */ UptimeCheckConfigHttpCheck> getHttpCheck() {
        return this.httpCheck;
    }
    /**
     * The monitored resource (https://cloud.google.com/monitoring/api/resources) associated with the configuration. The following monitored resource types are supported for uptime checks:  uptime_url  gce_instance  gae_app  aws_ec2_instance  aws_elb_load_balancer
     * Structure is documented below.
     * 
     */
    @Export(name="monitoredResource", type=UptimeCheckConfigMonitoredResource.class, parameters={})
    private Output</* @Nullable */ UptimeCheckConfigMonitoredResource> monitoredResource;

    /**
     * @return The monitored resource (https://cloud.google.com/monitoring/api/resources) associated with the configuration. The following monitored resource types are supported for uptime checks:  uptime_url  gce_instance  gae_app  aws_ec2_instance  aws_elb_load_balancer
     * Structure is documented below.
     * 
     */
    public Output</* @Nullable */ UptimeCheckConfigMonitoredResource> getMonitoredResource() {
        return this.monitoredResource;
    }
    /**
     * A unique resource name for this UptimeCheckConfig. The format is
     * projects/[PROJECT_ID]/uptimeCheckConfigs/[UPTIME_CHECK_ID].
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return A unique resource name for this UptimeCheckConfig. The format is
     * projects/[PROJECT_ID]/uptimeCheckConfigs/[UPTIME_CHECK_ID].
     * 
     */
    public Output<String> getName() {
        return this.name;
    }
    /**
     * How often, in seconds, the uptime check is performed. Currently, the only supported values are 60s (1 minute), 300s (5 minutes), 600s (10 minutes), and 900s (15 minutes). Optional, defaults to 300s.
     * 
     */
    @Export(name="period", type=String.class, parameters={})
    private Output</* @Nullable */ String> period;

    /**
     * @return How often, in seconds, the uptime check is performed. Currently, the only supported values are 60s (1 minute), 300s (5 minutes), 600s (10 minutes), and 900s (15 minutes). Optional, defaults to 300s.
     * 
     */
    public Output</* @Nullable */ String> getPeriod() {
        return this.period;
    }
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Export(name="project", type=String.class, parameters={})
    private Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Output<String> getProject() {
        return this.project;
    }
    /**
     * The group resource associated with the configuration.
     * Structure is documented below.
     * 
     */
    @Export(name="resourceGroup", type=UptimeCheckConfigResourceGroup.class, parameters={})
    private Output</* @Nullable */ UptimeCheckConfigResourceGroup> resourceGroup;

    /**
     * @return The group resource associated with the configuration.
     * Structure is documented below.
     * 
     */
    public Output</* @Nullable */ UptimeCheckConfigResourceGroup> getResourceGroup() {
        return this.resourceGroup;
    }
    /**
     * The list of regions from which the check will be run. Some regions contain one location, and others contain more than one. If this field is specified, enough regions to include a minimum of 3 locations must be provided, or an error message is returned. Not specifying this field will result in uptime checks running from all regions.
     * 
     */
    @Export(name="selectedRegions", type=List.class, parameters={String.class})
    private Output</* @Nullable */ List<String>> selectedRegions;

    /**
     * @return The list of regions from which the check will be run. Some regions contain one location, and others contain more than one. If this field is specified, enough regions to include a minimum of 3 locations must be provided, or an error message is returned. Not specifying this field will result in uptime checks running from all regions.
     * 
     */
    public Output</* @Nullable */ List<String>> getSelectedRegions() {
        return this.selectedRegions;
    }
    /**
     * Contains information needed to make a TCP check.
     * Structure is documented below.
     * 
     */
    @Export(name="tcpCheck", type=UptimeCheckConfigTcpCheck.class, parameters={})
    private Output</* @Nullable */ UptimeCheckConfigTcpCheck> tcpCheck;

    /**
     * @return Contains information needed to make a TCP check.
     * Structure is documented below.
     * 
     */
    public Output</* @Nullable */ UptimeCheckConfigTcpCheck> getTcpCheck() {
        return this.tcpCheck;
    }
    /**
     * The maximum amount of time to wait for the request to complete (must be between 1 and 60 seconds). Accepted formats https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#google.protobuf.Duration
     * 
     */
    @Export(name="timeout", type=String.class, parameters={})
    private Output<String> timeout;

    /**
     * @return The maximum amount of time to wait for the request to complete (must be between 1 and 60 seconds). Accepted formats https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#google.protobuf.Duration
     * 
     */
    public Output<String> getTimeout() {
        return this.timeout;
    }
    /**
     * The id of the uptime check
     * 
     */
    @Export(name="uptimeCheckId", type=String.class, parameters={})
    private Output<String> uptimeCheckId;

    /**
     * @return The id of the uptime check
     * 
     */
    public Output<String> getUptimeCheckId() {
        return this.uptimeCheckId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public UptimeCheckConfig(String name) {
        this(name, UptimeCheckConfigArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public UptimeCheckConfig(String name, UptimeCheckConfigArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public UptimeCheckConfig(String name, UptimeCheckConfigArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("gcp:monitoring/uptimeCheckConfig:UptimeCheckConfig", name, args == null ? UptimeCheckConfigArgs.Empty : args, makeResourceOptions(options, Output.empty()));
    }

    private UptimeCheckConfig(String name, Output<String> id, @Nullable UptimeCheckConfigState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("gcp:monitoring/uptimeCheckConfig:UptimeCheckConfig", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static UptimeCheckConfig get(String name, Output<String> id, @Nullable UptimeCheckConfigState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new UptimeCheckConfig(name, id, state, options);
    }
}
