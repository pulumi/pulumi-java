// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.compute.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import io.pulumi.gcp.compute.outputs.RegionUrlMapPathMatcherRouteRuleHeaderAction;
import io.pulumi.gcp.compute.outputs.RegionUrlMapPathMatcherRouteRuleMatchRule;
import io.pulumi.gcp.compute.outputs.RegionUrlMapPathMatcherRouteRuleRouteAction;
import io.pulumi.gcp.compute.outputs.RegionUrlMapPathMatcherRouteRuleUrlRedirect;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class RegionUrlMapPathMatcherRouteRule {
    private final @Nullable RegionUrlMapPathMatcherRouteRuleHeaderAction headerAction;
    private final @Nullable List<RegionUrlMapPathMatcherRouteRuleMatchRule> matchRules;
    private final Integer priority;
    private final @Nullable RegionUrlMapPathMatcherRouteRuleRouteAction routeAction;
    private final @Nullable String service;
    private final @Nullable RegionUrlMapPathMatcherRouteRuleUrlRedirect urlRedirect;

    @OutputCustomType.Constructor({"headerAction","matchRules","priority","routeAction","service","urlRedirect"})
    private RegionUrlMapPathMatcherRouteRule(
        @Nullable RegionUrlMapPathMatcherRouteRuleHeaderAction headerAction,
        @Nullable List<RegionUrlMapPathMatcherRouteRuleMatchRule> matchRules,
        Integer priority,
        @Nullable RegionUrlMapPathMatcherRouteRuleRouteAction routeAction,
        @Nullable String service,
        @Nullable RegionUrlMapPathMatcherRouteRuleUrlRedirect urlRedirect) {
        this.headerAction = headerAction;
        this.matchRules = matchRules;
        this.priority = Objects.requireNonNull(priority);
        this.routeAction = routeAction;
        this.service = service;
        this.urlRedirect = urlRedirect;
    }

    public Optional<RegionUrlMapPathMatcherRouteRuleHeaderAction> getHeaderAction() {
        return Optional.ofNullable(this.headerAction);
    }
    public List<RegionUrlMapPathMatcherRouteRuleMatchRule> getMatchRules() {
        return this.matchRules == null ? List.of() : this.matchRules;
    }
    public Integer getPriority() {
        return this.priority;
    }
    public Optional<RegionUrlMapPathMatcherRouteRuleRouteAction> getRouteAction() {
        return Optional.ofNullable(this.routeAction);
    }
    public Optional<String> getService() {
        return Optional.ofNullable(this.service);
    }
    public Optional<RegionUrlMapPathMatcherRouteRuleUrlRedirect> getUrlRedirect() {
        return Optional.ofNullable(this.urlRedirect);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RegionUrlMapPathMatcherRouteRule defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable RegionUrlMapPathMatcherRouteRuleHeaderAction headerAction;
        private @Nullable List<RegionUrlMapPathMatcherRouteRuleMatchRule> matchRules;
        private Integer priority;
        private @Nullable RegionUrlMapPathMatcherRouteRuleRouteAction routeAction;
        private @Nullable String service;
        private @Nullable RegionUrlMapPathMatcherRouteRuleUrlRedirect urlRedirect;

        public Builder() {
    	      // Empty
        }

        public Builder(RegionUrlMapPathMatcherRouteRule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.headerAction = defaults.headerAction;
    	      this.matchRules = defaults.matchRules;
    	      this.priority = defaults.priority;
    	      this.routeAction = defaults.routeAction;
    	      this.service = defaults.service;
    	      this.urlRedirect = defaults.urlRedirect;
        }

        public Builder setHeaderAction(@Nullable RegionUrlMapPathMatcherRouteRuleHeaderAction headerAction) {
            this.headerAction = headerAction;
            return this;
        }

        public Builder setMatchRules(@Nullable List<RegionUrlMapPathMatcherRouteRuleMatchRule> matchRules) {
            this.matchRules = matchRules;
            return this;
        }

        public Builder setPriority(Integer priority) {
            this.priority = Objects.requireNonNull(priority);
            return this;
        }

        public Builder setRouteAction(@Nullable RegionUrlMapPathMatcherRouteRuleRouteAction routeAction) {
            this.routeAction = routeAction;
            return this;
        }

        public Builder setService(@Nullable String service) {
            this.service = service;
            return this;
        }

        public Builder setUrlRedirect(@Nullable RegionUrlMapPathMatcherRouteRuleUrlRedirect urlRedirect) {
            this.urlRedirect = urlRedirect;
            return this;
        }

        public RegionUrlMapPathMatcherRouteRule build() {
            return new RegionUrlMapPathMatcherRouteRule(headerAction, matchRules, priority, routeAction, service, urlRedirect);
        }
    }
}
