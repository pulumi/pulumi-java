// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.storage.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import io.pulumi.gcp.storage.inputs.TransferJobTransferSpecAzureBlobStorageDataSourceAzureCredentialsGetArgs;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class TransferJobTransferSpecAzureBlobStorageDataSourceGetArgs extends io.pulumi.resources.ResourceArgs {

    public static final TransferJobTransferSpecAzureBlobStorageDataSourceGetArgs Empty = new TransferJobTransferSpecAzureBlobStorageDataSourceGetArgs();

    /**
     * Credentials used to authenticate API requests to Azure block.
     * 
     */
    @Import(name="azureCredentials", required=true)
      private final Output<TransferJobTransferSpecAzureBlobStorageDataSourceAzureCredentialsGetArgs> azureCredentials;

    public Output<TransferJobTransferSpecAzureBlobStorageDataSourceAzureCredentialsGetArgs> azureCredentials() {
        return this.azureCredentials;
    }

    /**
     * The container to transfer from the Azure Storage account.`
     * 
     */
    @Import(name="container", required=true)
      private final Output<String> container;

    public Output<String> container() {
        return this.container;
    }

    /**
     * Root path to transfer objects. Must be an empty string or full path name that ends with a '/'. This field is treated as an object prefix. As such, it should generally not begin with a '/'.
     * 
     */
    @Import(name="path")
      private final @Nullable Output<String> path;

    public Output<String> path() {
        return this.path == null ? Codegen.empty() : this.path;
    }

    /**
     * The name of the Azure Storage account.
     * 
     */
    @Import(name="storageAccount", required=true)
      private final Output<String> storageAccount;

    public Output<String> storageAccount() {
        return this.storageAccount;
    }

    public TransferJobTransferSpecAzureBlobStorageDataSourceGetArgs(
        Output<TransferJobTransferSpecAzureBlobStorageDataSourceAzureCredentialsGetArgs> azureCredentials,
        Output<String> container,
        @Nullable Output<String> path,
        Output<String> storageAccount) {
        this.azureCredentials = Objects.requireNonNull(azureCredentials, "expected parameter 'azureCredentials' to be non-null");
        this.container = Objects.requireNonNull(container, "expected parameter 'container' to be non-null");
        this.path = path;
        this.storageAccount = Objects.requireNonNull(storageAccount, "expected parameter 'storageAccount' to be non-null");
    }

    private TransferJobTransferSpecAzureBlobStorageDataSourceGetArgs() {
        this.azureCredentials = Codegen.empty();
        this.container = Codegen.empty();
        this.path = Codegen.empty();
        this.storageAccount = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TransferJobTransferSpecAzureBlobStorageDataSourceGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<TransferJobTransferSpecAzureBlobStorageDataSourceAzureCredentialsGetArgs> azureCredentials;
        private Output<String> container;
        private @Nullable Output<String> path;
        private Output<String> storageAccount;

        public Builder() {
    	      // Empty
        }

        public Builder(TransferJobTransferSpecAzureBlobStorageDataSourceGetArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.azureCredentials = defaults.azureCredentials;
    	      this.container = defaults.container;
    	      this.path = defaults.path;
    	      this.storageAccount = defaults.storageAccount;
        }

        public Builder azureCredentials(Output<TransferJobTransferSpecAzureBlobStorageDataSourceAzureCredentialsGetArgs> azureCredentials) {
            this.azureCredentials = Objects.requireNonNull(azureCredentials);
            return this;
        }
        public Builder azureCredentials(TransferJobTransferSpecAzureBlobStorageDataSourceAzureCredentialsGetArgs azureCredentials) {
            this.azureCredentials = Output.of(Objects.requireNonNull(azureCredentials));
            return this;
        }
        public Builder container(Output<String> container) {
            this.container = Objects.requireNonNull(container);
            return this;
        }
        public Builder container(String container) {
            this.container = Output.of(Objects.requireNonNull(container));
            return this;
        }
        public Builder path(@Nullable Output<String> path) {
            this.path = path;
            return this;
        }
        public Builder path(@Nullable String path) {
            this.path = Codegen.ofNullable(path);
            return this;
        }
        public Builder storageAccount(Output<String> storageAccount) {
            this.storageAccount = Objects.requireNonNull(storageAccount);
            return this;
        }
        public Builder storageAccount(String storageAccount) {
            this.storageAccount = Output.of(Objects.requireNonNull(storageAccount));
            return this;
        }        public TransferJobTransferSpecAzureBlobStorageDataSourceGetArgs build() {
            return new TransferJobTransferSpecAzureBlobStorageDataSourceGetArgs(azureCredentials, container, path, storageAccount);
        }
    }
}
