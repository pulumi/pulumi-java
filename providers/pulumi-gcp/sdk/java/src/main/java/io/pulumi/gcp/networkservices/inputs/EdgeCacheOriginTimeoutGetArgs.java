// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.networkservices.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class EdgeCacheOriginTimeoutGetArgs extends io.pulumi.resources.ResourceArgs {

    public static final EdgeCacheOriginTimeoutGetArgs Empty = new EdgeCacheOriginTimeoutGetArgs();

    /**
     * The maximum duration to wait for the origin connection to be established, including DNS lookup, TLS handshake and TCP/QUIC connection establishment.
     * Defaults to 5 seconds. The timeout must be a value between 1s and 15s.
     * 
     */
    @Import(name="connectTimeout")
      private final @Nullable Output<String> connectTimeout;

    public Output<String> getConnectTimeout() {
        return this.connectTimeout == null ? Codegen.empty() : this.connectTimeout;
    }

    /**
     * The maximum time across all connection attempts to the origin, including failover origins, before returning an error to the client. A HTTP 503 will be returned if the timeout is reached before a response is returned.
     * Defaults to 5 seconds. The timeout must be a value between 1s and 15s.
     * 
     */
    @Import(name="maxAttemptsTimeout")
      private final @Nullable Output<String> maxAttemptsTimeout;

    public Output<String> getMaxAttemptsTimeout() {
        return this.maxAttemptsTimeout == null ? Codegen.empty() : this.maxAttemptsTimeout;
    }

    /**
     * The maximum duration to wait for data to arrive when reading from the HTTP connection/stream.
     * Defaults to 5 seconds. The timeout must be a value between 1s and 30s.
     * 
     */
    @Import(name="responseTimeout")
      private final @Nullable Output<String> responseTimeout;

    public Output<String> getResponseTimeout() {
        return this.responseTimeout == null ? Codegen.empty() : this.responseTimeout;
    }

    public EdgeCacheOriginTimeoutGetArgs(
        @Nullable Output<String> connectTimeout,
        @Nullable Output<String> maxAttemptsTimeout,
        @Nullable Output<String> responseTimeout) {
        this.connectTimeout = connectTimeout;
        this.maxAttemptsTimeout = maxAttemptsTimeout;
        this.responseTimeout = responseTimeout;
    }

    private EdgeCacheOriginTimeoutGetArgs() {
        this.connectTimeout = Codegen.empty();
        this.maxAttemptsTimeout = Codegen.empty();
        this.responseTimeout = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(EdgeCacheOriginTimeoutGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> connectTimeout;
        private @Nullable Output<String> maxAttemptsTimeout;
        private @Nullable Output<String> responseTimeout;

        public Builder() {
    	      // Empty
        }

        public Builder(EdgeCacheOriginTimeoutGetArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.connectTimeout = defaults.connectTimeout;
    	      this.maxAttemptsTimeout = defaults.maxAttemptsTimeout;
    	      this.responseTimeout = defaults.responseTimeout;
        }

        public Builder connectTimeout(@Nullable Output<String> connectTimeout) {
            this.connectTimeout = connectTimeout;
            return this;
        }
        public Builder connectTimeout(@Nullable String connectTimeout) {
            this.connectTimeout = Codegen.ofNullable(connectTimeout);
            return this;
        }
        public Builder maxAttemptsTimeout(@Nullable Output<String> maxAttemptsTimeout) {
            this.maxAttemptsTimeout = maxAttemptsTimeout;
            return this;
        }
        public Builder maxAttemptsTimeout(@Nullable String maxAttemptsTimeout) {
            this.maxAttemptsTimeout = Codegen.ofNullable(maxAttemptsTimeout);
            return this;
        }
        public Builder responseTimeout(@Nullable Output<String> responseTimeout) {
            this.responseTimeout = responseTimeout;
            return this;
        }
        public Builder responseTimeout(@Nullable String responseTimeout) {
            this.responseTimeout = Codegen.ofNullable(responseTimeout);
            return this;
        }        public EdgeCacheOriginTimeoutGetArgs build() {
            return new EdgeCacheOriginTimeoutGetArgs(connectTimeout, maxAttemptsTimeout, responseTimeout);
        }
    }
}
