// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.sql;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class SslCertArgs extends io.pulumi.resources.ResourceArgs {

    public static final SslCertArgs Empty = new SslCertArgs();

    @InputImport(name="commonName", required=true)
    private final Input<String> commonName;

    public Input<String> getCommonName() {
        return this.commonName;
    }

    @InputImport(name="instance", required=true)
    private final Input<String> instance;

    public Input<String> getInstance() {
        return this.instance;
    }

    @InputImport(name="project")
    private final @Nullable Input<String> project;

    public Input<String> getProject() {
        return this.project == null ? Input.empty() : this.project;
    }

    public SslCertArgs(
        Input<String> commonName,
        Input<String> instance,
        @Nullable Input<String> project) {
        this.commonName = Objects.requireNonNull(commonName, "expected parameter 'commonName' to be non-null");
        this.instance = Objects.requireNonNull(instance, "expected parameter 'instance' to be non-null");
        this.project = project;
    }

    private SslCertArgs() {
        this.commonName = Input.empty();
        this.instance = Input.empty();
        this.project = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SslCertArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<String> commonName;
        private Input<String> instance;
        private @Nullable Input<String> project;

        public Builder() {
    	      // Empty
        }

        public Builder(SslCertArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.commonName = defaults.commonName;
    	      this.instance = defaults.instance;
    	      this.project = defaults.project;
        }

        public Builder setCommonName(Input<String> commonName) {
            this.commonName = Objects.requireNonNull(commonName);
            return this;
        }

        public Builder setCommonName(String commonName) {
            this.commonName = Input.of(Objects.requireNonNull(commonName));
            return this;
        }

        public Builder setInstance(Input<String> instance) {
            this.instance = Objects.requireNonNull(instance);
            return this;
        }

        public Builder setInstance(String instance) {
            this.instance = Input.of(Objects.requireNonNull(instance));
            return this;
        }

        public Builder setProject(@Nullable Input<String> project) {
            this.project = project;
            return this;
        }

        public Builder setProject(@Nullable String project) {
            this.project = Input.ofNullable(project);
            return this;
        }

        public SslCertArgs build() {
            return new SslCertArgs(commonName, instance, project);
        }
    }
}
