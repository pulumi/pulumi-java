// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.storage.inputs;

import io.pulumi.core.annotations.Import;
import io.pulumi.gcp.storage.inputs.GetBucketLifecycleRuleAction;
import io.pulumi.gcp.storage.inputs.GetBucketLifecycleRuleCondition;
import java.util.List;
import java.util.Objects;


public final class GetBucketLifecycleRule extends io.pulumi.resources.InvokeArgs {

    public static final GetBucketLifecycleRule Empty = new GetBucketLifecycleRule();

    @Import(name="actions", required=true)
      private final List<GetBucketLifecycleRuleAction> actions;

    public List<GetBucketLifecycleRuleAction> getActions() {
        return this.actions;
    }

    @Import(name="conditions", required=true)
      private final List<GetBucketLifecycleRuleCondition> conditions;

    public List<GetBucketLifecycleRuleCondition> getConditions() {
        return this.conditions;
    }

    public GetBucketLifecycleRule(
        List<GetBucketLifecycleRuleAction> actions,
        List<GetBucketLifecycleRuleCondition> conditions) {
        this.actions = Objects.requireNonNull(actions, "expected parameter 'actions' to be non-null");
        this.conditions = Objects.requireNonNull(conditions, "expected parameter 'conditions' to be non-null");
    }

    private GetBucketLifecycleRule() {
        this.actions = List.of();
        this.conditions = List.of();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetBucketLifecycleRule defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<GetBucketLifecycleRuleAction> actions;
        private List<GetBucketLifecycleRuleCondition> conditions;

        public Builder() {
    	      // Empty
        }

        public Builder(GetBucketLifecycleRule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.actions = defaults.actions;
    	      this.conditions = defaults.conditions;
        }

        public Builder actions(List<GetBucketLifecycleRuleAction> actions) {
            this.actions = Objects.requireNonNull(actions);
            return this;
        }
        public Builder actions(GetBucketLifecycleRuleAction... actions) {
            return actions(List.of(actions));
        }
        public Builder conditions(List<GetBucketLifecycleRuleCondition> conditions) {
            this.conditions = Objects.requireNonNull(conditions);
            return this;
        }
        public Builder conditions(GetBucketLifecycleRuleCondition... conditions) {
            return conditions(List.of(conditions));
        }        public GetBucketLifecycleRule build() {
            return new GetBucketLifecycleRule(actions, conditions);
        }
    }
}
