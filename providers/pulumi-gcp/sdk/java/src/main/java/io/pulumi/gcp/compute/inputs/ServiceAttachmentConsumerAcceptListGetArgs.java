// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.compute.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;


public final class ServiceAttachmentConsumerAcceptListGetArgs extends io.pulumi.resources.ResourceArgs {

    public static final ServiceAttachmentConsumerAcceptListGetArgs Empty = new ServiceAttachmentConsumerAcceptListGetArgs();

    /**
     * The number of consumer forwarding rules the consumer project can
     * create.
     * 
     */
    @Import(name="connectionLimit", required=true)
      private final Output<Integer> connectionLimit;

    public Output<Integer> getConnectionLimit() {
        return this.connectionLimit;
    }

    /**
     * A project that is allowed to connect to this service attachment.
     * 
     */
    @Import(name="projectIdOrNum", required=true)
      private final Output<String> projectIdOrNum;

    public Output<String> getProjectIdOrNum() {
        return this.projectIdOrNum;
    }

    public ServiceAttachmentConsumerAcceptListGetArgs(
        Output<Integer> connectionLimit,
        Output<String> projectIdOrNum) {
        this.connectionLimit = Objects.requireNonNull(connectionLimit, "expected parameter 'connectionLimit' to be non-null");
        this.projectIdOrNum = Objects.requireNonNull(projectIdOrNum, "expected parameter 'projectIdOrNum' to be non-null");
    }

    private ServiceAttachmentConsumerAcceptListGetArgs() {
        this.connectionLimit = Output.empty();
        this.projectIdOrNum = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ServiceAttachmentConsumerAcceptListGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<Integer> connectionLimit;
        private Output<String> projectIdOrNum;

        public Builder() {
    	      // Empty
        }

        public Builder(ServiceAttachmentConsumerAcceptListGetArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.connectionLimit = defaults.connectionLimit;
    	      this.projectIdOrNum = defaults.projectIdOrNum;
        }

        public Builder connectionLimit(Output<Integer> connectionLimit) {
            this.connectionLimit = Objects.requireNonNull(connectionLimit);
            return this;
        }

        public Builder connectionLimit(Integer connectionLimit) {
            this.connectionLimit = Output.of(Objects.requireNonNull(connectionLimit));
            return this;
        }

        public Builder projectIdOrNum(Output<String> projectIdOrNum) {
            this.projectIdOrNum = Objects.requireNonNull(projectIdOrNum);
            return this;
        }

        public Builder projectIdOrNum(String projectIdOrNum) {
            this.projectIdOrNum = Output.of(Objects.requireNonNull(projectIdOrNum));
            return this;
        }
        public ServiceAttachmentConsumerAcceptListGetArgs build() {
            return new ServiceAttachmentConsumerAcceptListGetArgs(connectionLimit, projectIdOrNum);
        }
    }
}
