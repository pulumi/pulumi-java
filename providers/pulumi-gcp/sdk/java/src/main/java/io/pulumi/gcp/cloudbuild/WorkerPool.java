// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.cloudbuild;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Export;
import io.pulumi.core.annotations.ResourceType;
import io.pulumi.gcp.Utilities;
import io.pulumi.gcp.cloudbuild.WorkerPoolArgs;
import io.pulumi.gcp.cloudbuild.inputs.WorkerPoolState;
import io.pulumi.gcp.cloudbuild.outputs.WorkerPoolNetworkConfig;
import io.pulumi.gcp.cloudbuild.outputs.WorkerPoolWorkerConfig;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;

/**
 * Definition of custom Cloud Build WorkerPools for running jobs with custom configuration and custom networking.
 * 
 * > This resource is not currently public, and requires allow-listing of projects prior to use.
 * 
 * 
 * {{% examples %}}
 * ## Example Usage
 * {{% example %}}
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 * 
 * const pool = new gcp.cloudbuild.WorkerPool("pool", {
 *     location: "europe-west1",
 *     workerConfig: {
 *         diskSizeGb: 100,
 *         machineType: "e2-standard-4",
 *         noExternalIp: false,
 *     },
 * });
 * ```
 * ```python
 * import pulumi
 * import pulumi_gcp as gcp
 * 
 * pool = gcp.cloudbuild.WorkerPool("pool",
 *     location="europe-west1",
 *     worker_config=gcp.cloudbuild.WorkerPoolWorkerConfigArgs(
 *         disk_size_gb=100,
 *         machine_type="e2-standard-4",
 *         no_external_ip=False,
 *     ))
 * ```
 * ```csharp
 * using Pulumi;
 * using Gcp = Pulumi.Gcp;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var pool = new Gcp.CloudBuild.WorkerPool("pool", new Gcp.CloudBuild.WorkerPoolArgs
 *         {
 *             Location = "europe-west1",
 *             WorkerConfig = new Gcp.CloudBuild.Inputs.WorkerPoolWorkerConfigArgs
 *             {
 *                 DiskSizeGb = 100,
 *                 MachineType = "e2-standard-4",
 *                 NoExternalIp = false,
 *             },
 *         });
 *     }
 * 
 * }
 * ```
 * ```go
 * package main
 * 
 * import (
 * 	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/cloudbuild"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		_, err := cloudbuild.NewWorkerPool(ctx, "pool", &cloudbuild.WorkerPoolArgs{
 * 			Location: pulumi.String("europe-west1"),
 * 			WorkerConfig: &cloudbuild.WorkerPoolWorkerConfigArgs{
 * 				DiskSizeGb:   pulumi.Int(100),
 * 				MachineType:  pulumi.String("e2-standard-4"),
 * 				NoExternalIp: pulumi.Bool(false),
 * 			},
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * ```
 * {{% /example %}}
 * {{% example %}}
 * ### Network Config
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 * 
 * const servicenetworking = new gcp.projects.Service("servicenetworking", {
 *     service: "servicenetworking.googleapis.com",
 *     disableOnDestroy: false,
 * });
 * const network = new gcp.compute.Network("network", {autoCreateSubnetworks: false}, {
 *     dependsOn: [servicenetworking],
 * });
 * const workerRange = new gcp.compute.GlobalAddress("workerRange", {
 *     purpose: "VPC_PEERING",
 *     addressType: "INTERNAL",
 *     prefixLength: 16,
 *     network: network.id,
 * });
 * const workerPoolConn = new gcp.servicenetworking.Connection("workerPoolConn", {
 *     network: network.id,
 *     service: "servicenetworking.googleapis.com",
 *     reservedPeeringRanges: [workerRange.name],
 * }, {
 *     dependsOn: [servicenetworking],
 * });
 * const pool = new gcp.cloudbuild.WorkerPool("pool", {
 *     location: "europe-west1",
 *     workerConfig: {
 *         diskSizeGb: 100,
 *         machineType: "e2-standard-4",
 *         noExternalIp: false,
 *     },
 *     networkConfig: {
 *         peeredNetwork: network.id,
 *     },
 * }, {
 *     dependsOn: [workerPoolConn],
 * });
 * ```
 * ```python
 * import pulumi
 * import pulumi_gcp as gcp
 * 
 * servicenetworking = gcp.projects.Service("servicenetworking",
 *     service="servicenetworking.googleapis.com",
 *     disable_on_destroy=False)
 * network = gcp.compute.Network("network", auto_create_subnetworks=False,
 * opts=pulumi.ResourceOptions(depends_on=[servicenetworking]))
 * worker_range = gcp.compute.GlobalAddress("workerRange",
 *     purpose="VPC_PEERING",
 *     address_type="INTERNAL",
 *     prefix_length=16,
 *     network=network.id)
 * worker_pool_conn = gcp.servicenetworking.Connection("workerPoolConn",
 *     network=network.id,
 *     service="servicenetworking.googleapis.com",
 *     reserved_peering_ranges=[worker_range.name],
 *     opts=pulumi.ResourceOptions(depends_on=[servicenetworking]))
 * pool = gcp.cloudbuild.WorkerPool("pool",
 *     location="europe-west1",
 *     worker_config=gcp.cloudbuild.WorkerPoolWorkerConfigArgs(
 *         disk_size_gb=100,
 *         machine_type="e2-standard-4",
 *         no_external_ip=False,
 *     ),
 *     network_config=gcp.cloudbuild.WorkerPoolNetworkConfigArgs(
 *         peered_network=network.id,
 *     ),
 *     opts=pulumi.ResourceOptions(depends_on=[worker_pool_conn]))
 * ```
 * ```csharp
 * using Pulumi;
 * using Gcp = Pulumi.Gcp;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var servicenetworking = new Gcp.Projects.Service("servicenetworking", new Gcp.Projects.ServiceArgs
 *         {
 *             Service = "servicenetworking.googleapis.com",
 *             DisableOnDestroy = false,
 *         });
 *         var network = new Gcp.Compute.Network("network", new Gcp.Compute.NetworkArgs
 *         {
 *             AutoCreateSubnetworks = false,
 *         }, new CustomResourceOptions
 *         {
 *             DependsOn = 
 *             {
 *                 servicenetworking,
 *             },
 *         });
 *         var workerRange = new Gcp.Compute.GlobalAddress("workerRange", new Gcp.Compute.GlobalAddressArgs
 *         {
 *             Purpose = "VPC_PEERING",
 *             AddressType = "INTERNAL",
 *             PrefixLength = 16,
 *             Network = network.Id,
 *         });
 *         var workerPoolConn = new Gcp.ServiceNetworking.Connection("workerPoolConn", new Gcp.ServiceNetworking.ConnectionArgs
 *         {
 *             Network = network.Id,
 *             Service = "servicenetworking.googleapis.com",
 *             ReservedPeeringRanges = 
 *             {
 *                 workerRange.Name,
 *             },
 *         }, new CustomResourceOptions
 *         {
 *             DependsOn = 
 *             {
 *                 servicenetworking,
 *             },
 *         });
 *         var pool = new Gcp.CloudBuild.WorkerPool("pool", new Gcp.CloudBuild.WorkerPoolArgs
 *         {
 *             Location = "europe-west1",
 *             WorkerConfig = new Gcp.CloudBuild.Inputs.WorkerPoolWorkerConfigArgs
 *             {
 *                 DiskSizeGb = 100,
 *                 MachineType = "e2-standard-4",
 *                 NoExternalIp = false,
 *             },
 *             NetworkConfig = new Gcp.CloudBuild.Inputs.WorkerPoolNetworkConfigArgs
 *             {
 *                 PeeredNetwork = network.Id,
 *             },
 *         }, new CustomResourceOptions
 *         {
 *             DependsOn = 
 *             {
 *                 workerPoolConn,
 *             },
 *         });
 *     }
 * 
 * }
 * ```
 * ```go
 * package main
 * 
 * import (
 * 	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/cloudbuild"
 * 	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/compute"
 * 	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/projects"
 * 	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/servicenetworking"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		servicenetworking, err := projects.NewService(ctx, "servicenetworking", &projects.ServiceArgs{
 * 			Service:          pulumi.String("servicenetworking.googleapis.com"),
 * 			DisableOnDestroy: pulumi.Bool(false),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		network, err := compute.NewNetwork(ctx, "network", &compute.NetworkArgs{
 * 			AutoCreateSubnetworks: pulumi.Bool(false),
 * 		}, pulumi.DependsOn([]pulumi.Resource{
 * 			servicenetworking,
 * 		}))
 * 		if err != nil {
 * 			return err
 * 		}
 * 		workerRange, err := compute.NewGlobalAddress(ctx, "workerRange", &compute.GlobalAddressArgs{
 * 			Purpose:      pulumi.String("VPC_PEERING"),
 * 			AddressType:  pulumi.String("INTERNAL"),
 * 			PrefixLength: pulumi.Int(16),
 * 			Network:      network.ID(),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		workerPoolConn, err := servicenetworking.NewConnection(ctx, "workerPoolConn", &servicenetworking.ConnectionArgs{
 * 			Network: network.ID(),
 * 			Service: pulumi.String("servicenetworking.googleapis.com"),
 * 			ReservedPeeringRanges: pulumi.StringArray{
 * 				workerRange.Name,
 * 			},
 * 		}, pulumi.DependsOn([]pulumi.Resource{
 * 			servicenetworking,
 * 		}))
 * 		if err != nil {
 * 			return err
 * 		}
 * 		_, err = cloudbuild.NewWorkerPool(ctx, "pool", &cloudbuild.WorkerPoolArgs{
 * 			Location: pulumi.String("europe-west1"),
 * 			WorkerConfig: &cloudbuild.WorkerPoolWorkerConfigArgs{
 * 				DiskSizeGb:   pulumi.Int(100),
 * 				MachineType:  pulumi.String("e2-standard-4"),
 * 				NoExternalIp: pulumi.Bool(false),
 * 			},
 * 			NetworkConfig: &cloudbuild.WorkerPoolNetworkConfigArgs{
 * 				PeeredNetwork: network.ID(),
 * 			},
 * 		}, pulumi.DependsOn([]pulumi.Resource{
 * 			workerPoolConn,
 * 		}))
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * ```
 * {{% /example %}}
 * {{% /examples %}}
 * 
 * ## Import
 * 
 * WorkerPool can be imported using any of these accepted formats
 * 
 * ```sh
 *  $ pulumi import gcp:cloudbuild/workerPool:WorkerPool default projects/{{project}}/locations/{{location}}/workerPools/{{name}}
 * ```
 * 
 * 
 * 
 * ```sh
 *  $ pulumi import gcp:cloudbuild/workerPool:WorkerPool default {{project}}/{{location}}/{{name}}
 * ```
 * 
 * 
 * 
 * ```sh
 *  $ pulumi import gcp:cloudbuild/workerPool:WorkerPool default {{location}}/{{name}}
 * ```
 * 
 *  
 */
@ResourceType(type="gcp:cloudbuild/workerPool:WorkerPool")
public class WorkerPool extends io.pulumi.resources.CustomResource {
    /**
     * User specified annotations. See https://google.aip.dev/128#annotations for more details such as format and size
     * limitations.
     * 
     */
    @Export(name="annotations", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> annotations;

    /**
     * @return User specified annotations. See https://google.aip.dev/128#annotations for more details such as format and size
     * limitations.
     * 
     */
    public Output</* @Nullable */ Map<String,String>> getAnnotations() {
        return this.annotations;
    }
    /**
     * Output only. Time at which the request to create the `WorkerPool` was received.
     * 
     */
    @Export(name="createTime", type=String.class, parameters={})
    private Output<String> createTime;

    /**
     * @return Output only. Time at which the request to create the `WorkerPool` was received.
     * 
     */
    public Output<String> getCreateTime() {
        return this.createTime;
    }
    /**
     * Output only. Time at which the request to delete the `WorkerPool` was received.
     * 
     */
    @Export(name="deleteTime", type=String.class, parameters={})
    private Output<String> deleteTime;

    /**
     * @return Output only. Time at which the request to delete the `WorkerPool` was received.
     * 
     */
    public Output<String> getDeleteTime() {
        return this.deleteTime;
    }
    /**
     * A user-specified, human-readable name for the `WorkerPool`. If provided, this value must be 1-63 characters.
     * 
     */
    @Export(name="displayName", type=String.class, parameters={})
    private Output</* @Nullable */ String> displayName;

    /**
     * @return A user-specified, human-readable name for the `WorkerPool`. If provided, this value must be 1-63 characters.
     * 
     */
    public Output</* @Nullable */ String> getDisplayName() {
        return this.displayName;
    }
    /**
     * The location for the resource
     * 
     */
    @Export(name="location", type=String.class, parameters={})
    private Output<String> location;

    /**
     * @return The location for the resource
     * 
     */
    public Output<String> getLocation() {
        return this.location;
    }
    /**
     * User-defined name of the `WorkerPool`.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return User-defined name of the `WorkerPool`.
     * 
     */
    public Output<String> getName() {
        return this.name;
    }
    /**
     * Network configuration for the `WorkerPool`. Structure is documented below.
     * 
     */
    @Export(name="networkConfig", type=WorkerPoolNetworkConfig.class, parameters={})
    private Output</* @Nullable */ WorkerPoolNetworkConfig> networkConfig;

    /**
     * @return Network configuration for the `WorkerPool`. Structure is documented below.
     * 
     */
    public Output</* @Nullable */ WorkerPoolNetworkConfig> getNetworkConfig() {
        return this.networkConfig;
    }
    /**
     * The project for the resource
     * 
     */
    @Export(name="project", type=String.class, parameters={})
    private Output<String> project;

    /**
     * @return The project for the resource
     * 
     */
    public Output<String> getProject() {
        return this.project;
    }
    /**
     * Output only. `WorkerPool` state. Possible values: STATE_UNSPECIFIED, PENDING, APPROVED, REJECTED, CANCELLED
     * 
     */
    @Export(name="state", type=String.class, parameters={})
    private Output<String> state;

    /**
     * @return Output only. `WorkerPool` state. Possible values: STATE_UNSPECIFIED, PENDING, APPROVED, REJECTED, CANCELLED
     * 
     */
    public Output<String> getState() {
        return this.state;
    }
    /**
     * Output only. A unique identifier for the `WorkerPool`.
     * 
     */
    @Export(name="uid", type=String.class, parameters={})
    private Output<String> uid;

    /**
     * @return Output only. A unique identifier for the `WorkerPool`.
     * 
     */
    public Output<String> getUid() {
        return this.uid;
    }
    /**
     * Output only. Time at which the request to update the `WorkerPool` was received.
     * 
     */
    @Export(name="updateTime", type=String.class, parameters={})
    private Output<String> updateTime;

    /**
     * @return Output only. Time at which the request to update the `WorkerPool` was received.
     * 
     */
    public Output<String> getUpdateTime() {
        return this.updateTime;
    }
    /**
     * Configuration to be used for a creating workers in the `WorkerPool`. Structure is documented below.
     * 
     */
    @Export(name="workerConfig", type=WorkerPoolWorkerConfig.class, parameters={})
    private Output<WorkerPoolWorkerConfig> workerConfig;

    /**
     * @return Configuration to be used for a creating workers in the `WorkerPool`. Structure is documented below.
     * 
     */
    public Output<WorkerPoolWorkerConfig> getWorkerConfig() {
        return this.workerConfig;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public WorkerPool(String name) {
        this(name, WorkerPoolArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public WorkerPool(String name, WorkerPoolArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public WorkerPool(String name, WorkerPoolArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("gcp:cloudbuild/workerPool:WorkerPool", name, args == null ? WorkerPoolArgs.Empty : args, makeResourceOptions(options, Output.empty()));
    }

    private WorkerPool(String name, Output<String> id, @Nullable WorkerPoolState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("gcp:cloudbuild/workerPool:WorkerPool", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static WorkerPool get(String name, Output<String> id, @Nullable WorkerPoolState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new WorkerPool(name, id, state, options);
    }
}
