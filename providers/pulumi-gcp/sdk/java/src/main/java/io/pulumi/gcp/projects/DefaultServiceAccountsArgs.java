// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.projects;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class DefaultServiceAccountsArgs extends io.pulumi.resources.ResourceArgs {

    public static final DefaultServiceAccountsArgs Empty = new DefaultServiceAccountsArgs();

    /**
     * The action to be performed in the default service accounts. Valid values are: `DEPRIVILEGE`, `DELETE`, `DISABLE`. Note that `DEPRIVILEGE` action will ignore the REVERT configuration in the restore_policy
     * 
     */
    @InputImport(name="action", required=true)
      private final Input<String> action;

    public Input<String> getAction() {
        return this.action;
    }

    /**
     * The project ID where service accounts are created.
     * 
     */
    @InputImport(name="project", required=true)
      private final Input<String> project;

    public Input<String> getProject() {
        return this.project;
    }

    /**
     * The action to be performed in the default service accounts on the resource destroy.
     * Valid values are NONE, REVERT and REVERT_AND_IGNORE_FAILURE. It is applied for any action but in the DEPRIVILEGE.
     * If set to REVERT it attempts to restore all default SAs but the DEPRIVILEGE action.
     * If set to REVERT_AND_IGNORE_FAILURE it is the same behavior as REVERT but ignores errors returned by the API.
     * 
     */
    @InputImport(name="restorePolicy")
      private final @Nullable Input<String> restorePolicy;

    public Input<String> getRestorePolicy() {
        return this.restorePolicy == null ? Input.empty() : this.restorePolicy;
    }

    public DefaultServiceAccountsArgs(
        Input<String> action,
        Input<String> project,
        @Nullable Input<String> restorePolicy) {
        this.action = Objects.requireNonNull(action, "expected parameter 'action' to be non-null");
        this.project = Objects.requireNonNull(project, "expected parameter 'project' to be non-null");
        this.restorePolicy = restorePolicy;
    }

    private DefaultServiceAccountsArgs() {
        this.action = Input.empty();
        this.project = Input.empty();
        this.restorePolicy = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DefaultServiceAccountsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<String> action;
        private Input<String> project;
        private @Nullable Input<String> restorePolicy;

        public Builder() {
    	      // Empty
        }

        public Builder(DefaultServiceAccountsArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.action = defaults.action;
    	      this.project = defaults.project;
    	      this.restorePolicy = defaults.restorePolicy;
        }

        public Builder setAction(Input<String> action) {
            this.action = Objects.requireNonNull(action);
            return this;
        }

        public Builder setAction(String action) {
            this.action = Input.of(Objects.requireNonNull(action));
            return this;
        }

        public Builder setProject(Input<String> project) {
            this.project = Objects.requireNonNull(project);
            return this;
        }

        public Builder setProject(String project) {
            this.project = Input.of(Objects.requireNonNull(project));
            return this;
        }

        public Builder setRestorePolicy(@Nullable Input<String> restorePolicy) {
            this.restorePolicy = restorePolicy;
            return this;
        }

        public Builder setRestorePolicy(@Nullable String restorePolicy) {
            this.restorePolicy = Input.ofNullable(restorePolicy);
            return this;
        }
        public DefaultServiceAccountsArgs build() {
            return new DefaultServiceAccountsArgs(action, project, restorePolicy);
        }
    }
}
