// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.compute;

import io.pulumi.core.Input;
import io.pulumi.core.Output;
import io.pulumi.core.internal.annotations.OutputExport;
import io.pulumi.core.internal.annotations.ResourceType;
import io.pulumi.gcp.Utilities;
import io.pulumi.gcp.compute.InstanceTemplateArgs;
import io.pulumi.gcp.compute.inputs.InstanceTemplateState;
import io.pulumi.gcp.compute.outputs.InstanceTemplateAdvancedMachineFeatures;
import io.pulumi.gcp.compute.outputs.InstanceTemplateConfidentialInstanceConfig;
import io.pulumi.gcp.compute.outputs.InstanceTemplateDisk;
import io.pulumi.gcp.compute.outputs.InstanceTemplateGuestAccelerator;
import io.pulumi.gcp.compute.outputs.InstanceTemplateNetworkInterface;
import io.pulumi.gcp.compute.outputs.InstanceTemplateNetworkPerformanceConfig;
import io.pulumi.gcp.compute.outputs.InstanceTemplateReservationAffinity;
import io.pulumi.gcp.compute.outputs.InstanceTemplateScheduling;
import io.pulumi.gcp.compute.outputs.InstanceTemplateServiceAccount;
import io.pulumi.gcp.compute.outputs.InstanceTemplateShieldedInstanceConfig;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;

@ResourceType(type="gcp:compute/instanceTemplate:InstanceTemplate")
public class InstanceTemplate extends io.pulumi.resources.CustomResource {
    @OutputExport(name="advancedMachineFeatures", type=InstanceTemplateAdvancedMachineFeatures.class, parameters={})
    private Output</* @Nullable */ InstanceTemplateAdvancedMachineFeatures> advancedMachineFeatures;

    public Output</* @Nullable */ InstanceTemplateAdvancedMachineFeatures> getAdvancedMachineFeatures() {
        return this.advancedMachineFeatures;
    }
    @OutputExport(name="canIpForward", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> canIpForward;

    public Output</* @Nullable */ Boolean> getCanIpForward() {
        return this.canIpForward;
    }
    @OutputExport(name="confidentialInstanceConfig", type=InstanceTemplateConfidentialInstanceConfig.class, parameters={})
    private Output<InstanceTemplateConfidentialInstanceConfig> confidentialInstanceConfig;

    public Output<InstanceTemplateConfidentialInstanceConfig> getConfidentialInstanceConfig() {
        return this.confidentialInstanceConfig;
    }
    @OutputExport(name="description", type=String.class, parameters={})
    private Output</* @Nullable */ String> description;

    public Output</* @Nullable */ String> getDescription() {
        return this.description;
    }
    @OutputExport(name="disks", type=List.class, parameters={InstanceTemplateDisk.class})
    private Output<List<InstanceTemplateDisk>> disks;

    public Output<List<InstanceTemplateDisk>> getDisks() {
        return this.disks;
    }
    @OutputExport(name="enableDisplay", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> enableDisplay;

    public Output</* @Nullable */ Boolean> getEnableDisplay() {
        return this.enableDisplay;
    }
    @OutputExport(name="guestAccelerators", type=List.class, parameters={InstanceTemplateGuestAccelerator.class})
    private Output</* @Nullable */ List<InstanceTemplateGuestAccelerator>> guestAccelerators;

    public Output</* @Nullable */ List<InstanceTemplateGuestAccelerator>> getGuestAccelerators() {
        return this.guestAccelerators;
    }
    @OutputExport(name="instanceDescription", type=String.class, parameters={})
    private Output</* @Nullable */ String> instanceDescription;

    public Output</* @Nullable */ String> getInstanceDescription() {
        return this.instanceDescription;
    }
    @OutputExport(name="labels", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> labels;

    public Output</* @Nullable */ Map<String,String>> getLabels() {
        return this.labels;
    }
    @OutputExport(name="machineType", type=String.class, parameters={})
    private Output<String> machineType;

    public Output<String> getMachineType() {
        return this.machineType;
    }
    @OutputExport(name="metadata", type=Map.class, parameters={String.class, Object.class})
    private Output</* @Nullable */ Map<String,Object>> metadata;

    public Output</* @Nullable */ Map<String,Object>> getMetadata() {
        return this.metadata;
    }
    @OutputExport(name="metadataFingerprint", type=String.class, parameters={})
    private Output<String> metadataFingerprint;

    public Output<String> getMetadataFingerprint() {
        return this.metadataFingerprint;
    }
    @OutputExport(name="metadataStartupScript", type=String.class, parameters={})
    private Output</* @Nullable */ String> metadataStartupScript;

    public Output</* @Nullable */ String> getMetadataStartupScript() {
        return this.metadataStartupScript;
    }
    @OutputExport(name="minCpuPlatform", type=String.class, parameters={})
    private Output</* @Nullable */ String> minCpuPlatform;

    public Output</* @Nullable */ String> getMinCpuPlatform() {
        return this.minCpuPlatform;
    }
    @OutputExport(name="name", type=String.class, parameters={})
    private Output<String> name;

    public Output<String> getName() {
        return this.name;
    }
    @OutputExport(name="namePrefix", type=String.class, parameters={})
    private Output<String> namePrefix;

    public Output<String> getNamePrefix() {
        return this.namePrefix;
    }
    @OutputExport(name="networkInterfaces", type=List.class, parameters={InstanceTemplateNetworkInterface.class})
    private Output</* @Nullable */ List<InstanceTemplateNetworkInterface>> networkInterfaces;

    public Output</* @Nullable */ List<InstanceTemplateNetworkInterface>> getNetworkInterfaces() {
        return this.networkInterfaces;
    }
    @OutputExport(name="networkPerformanceConfig", type=InstanceTemplateNetworkPerformanceConfig.class, parameters={})
    private Output</* @Nullable */ InstanceTemplateNetworkPerformanceConfig> networkPerformanceConfig;

    public Output</* @Nullable */ InstanceTemplateNetworkPerformanceConfig> getNetworkPerformanceConfig() {
        return this.networkPerformanceConfig;
    }
    @OutputExport(name="project", type=String.class, parameters={})
    private Output<String> project;

    public Output<String> getProject() {
        return this.project;
    }
    @OutputExport(name="region", type=String.class, parameters={})
    private Output<String> region;

    public Output<String> getRegion() {
        return this.region;
    }
    @OutputExport(name="reservationAffinity", type=InstanceTemplateReservationAffinity.class, parameters={})
    private Output</* @Nullable */ InstanceTemplateReservationAffinity> reservationAffinity;

    public Output</* @Nullable */ InstanceTemplateReservationAffinity> getReservationAffinity() {
        return this.reservationAffinity;
    }
    @OutputExport(name="scheduling", type=InstanceTemplateScheduling.class, parameters={})
    private Output<InstanceTemplateScheduling> scheduling;

    public Output<InstanceTemplateScheduling> getScheduling() {
        return this.scheduling;
    }
    @OutputExport(name="selfLink", type=String.class, parameters={})
    private Output<String> selfLink;

    public Output<String> getSelfLink() {
        return this.selfLink;
    }
    @OutputExport(name="serviceAccount", type=InstanceTemplateServiceAccount.class, parameters={})
    private Output</* @Nullable */ InstanceTemplateServiceAccount> serviceAccount;

    public Output</* @Nullable */ InstanceTemplateServiceAccount> getServiceAccount() {
        return this.serviceAccount;
    }
    @OutputExport(name="shieldedInstanceConfig", type=InstanceTemplateShieldedInstanceConfig.class, parameters={})
    private Output<InstanceTemplateShieldedInstanceConfig> shieldedInstanceConfig;

    public Output<InstanceTemplateShieldedInstanceConfig> getShieldedInstanceConfig() {
        return this.shieldedInstanceConfig;
    }
    @OutputExport(name="tags", type=List.class, parameters={String.class})
    private Output</* @Nullable */ List<String>> tags;

    public Output</* @Nullable */ List<String>> getTags() {
        return this.tags;
    }
    @OutputExport(name="tagsFingerprint", type=String.class, parameters={})
    private Output<String> tagsFingerprint;

    public Output<String> getTagsFingerprint() {
        return this.tagsFingerprint;
    }

    public InstanceTemplate(String name, InstanceTemplateArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("gcp:compute/instanceTemplate:InstanceTemplate", name, args == null ? InstanceTemplateArgs.Empty : args, makeResourceOptions(options, Input.empty()));
    }

    private InstanceTemplate(String name, Input<String> id, @Nullable InstanceTemplateState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("gcp:compute/instanceTemplate:InstanceTemplate", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Input<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .setVersion(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    public static InstanceTemplate get(String name, Input<String> id, @Nullable InstanceTemplateState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new InstanceTemplate(name, id, state, options);
    }
}
