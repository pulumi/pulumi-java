// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.container.outputs;

import io.pulumi.core.annotations.CustomType;
import io.pulumi.gcp.container.outputs.ClusterMasterAuthClientCertificateConfig;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ClusterMasterAuth {
    private final @Nullable String clientCertificate;
    /**
     * Whether client certificate authorization is enabled for this cluster.  For example:
     * 
     */
    private final ClusterMasterAuthClientCertificateConfig clientCertificateConfig;
    private final @Nullable String clientKey;
    private final @Nullable String clusterCaCertificate;

    @CustomType.Constructor
    private ClusterMasterAuth(
        @CustomType.Parameter("clientCertificate") @Nullable String clientCertificate,
        @CustomType.Parameter("clientCertificateConfig") ClusterMasterAuthClientCertificateConfig clientCertificateConfig,
        @CustomType.Parameter("clientKey") @Nullable String clientKey,
        @CustomType.Parameter("clusterCaCertificate") @Nullable String clusterCaCertificate) {
        this.clientCertificate = clientCertificate;
        this.clientCertificateConfig = clientCertificateConfig;
        this.clientKey = clientKey;
        this.clusterCaCertificate = clusterCaCertificate;
    }

    public Optional<String> getClientCertificate() {
        return Optional.ofNullable(this.clientCertificate);
    }
    /**
     * Whether client certificate authorization is enabled for this cluster.  For example:
     * 
    */
    public ClusterMasterAuthClientCertificateConfig getClientCertificateConfig() {
        return this.clientCertificateConfig;
    }
    public Optional<String> getClientKey() {
        return Optional.ofNullable(this.clientKey);
    }
    public Optional<String> getClusterCaCertificate() {
        return Optional.ofNullable(this.clusterCaCertificate);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ClusterMasterAuth defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String clientCertificate;
        private ClusterMasterAuthClientCertificateConfig clientCertificateConfig;
        private @Nullable String clientKey;
        private @Nullable String clusterCaCertificate;

        public Builder() {
    	      // Empty
        }

        public Builder(ClusterMasterAuth defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.clientCertificate = defaults.clientCertificate;
    	      this.clientCertificateConfig = defaults.clientCertificateConfig;
    	      this.clientKey = defaults.clientKey;
    	      this.clusterCaCertificate = defaults.clusterCaCertificate;
        }

        public Builder clientCertificate(@Nullable String clientCertificate) {
            this.clientCertificate = clientCertificate;
            return this;
        }

        public Builder clientCertificateConfig(ClusterMasterAuthClientCertificateConfig clientCertificateConfig) {
            this.clientCertificateConfig = Objects.requireNonNull(clientCertificateConfig);
            return this;
        }

        public Builder clientKey(@Nullable String clientKey) {
            this.clientKey = clientKey;
            return this;
        }

        public Builder clusterCaCertificate(@Nullable String clusterCaCertificate) {
            this.clusterCaCertificate = clusterCaCertificate;
            return this;
        }
        public ClusterMasterAuth build() {
            return new ClusterMasterAuth(clientCertificate, clientCertificateConfig, clientKey, clusterCaCertificate);
        }
    }
}
