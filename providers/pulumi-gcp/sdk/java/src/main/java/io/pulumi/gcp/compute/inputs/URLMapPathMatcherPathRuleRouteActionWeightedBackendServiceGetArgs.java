// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.compute.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import io.pulumi.gcp.compute.inputs.URLMapPathMatcherPathRuleRouteActionWeightedBackendServiceHeaderActionGetArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class URLMapPathMatcherPathRuleRouteActionWeightedBackendServiceGetArgs extends io.pulumi.resources.ResourceArgs {

    public static final URLMapPathMatcherPathRuleRouteActionWeightedBackendServiceGetArgs Empty = new URLMapPathMatcherPathRuleRouteActionWeightedBackendServiceGetArgs();

    @InputImport(name="backendService", required=true)
    private final Input<String> backendService;

    public Input<String> getBackendService() {
        return this.backendService;
    }

    @InputImport(name="headerAction")
    private final @Nullable Input<URLMapPathMatcherPathRuleRouteActionWeightedBackendServiceHeaderActionGetArgs> headerAction;

    public Input<URLMapPathMatcherPathRuleRouteActionWeightedBackendServiceHeaderActionGetArgs> getHeaderAction() {
        return this.headerAction == null ? Input.empty() : this.headerAction;
    }

    @InputImport(name="weight", required=true)
    private final Input<Integer> weight;

    public Input<Integer> getWeight() {
        return this.weight;
    }

    public URLMapPathMatcherPathRuleRouteActionWeightedBackendServiceGetArgs(
        Input<String> backendService,
        @Nullable Input<URLMapPathMatcherPathRuleRouteActionWeightedBackendServiceHeaderActionGetArgs> headerAction,
        Input<Integer> weight) {
        this.backendService = Objects.requireNonNull(backendService, "expected parameter 'backendService' to be non-null");
        this.headerAction = headerAction;
        this.weight = Objects.requireNonNull(weight, "expected parameter 'weight' to be non-null");
    }

    private URLMapPathMatcherPathRuleRouteActionWeightedBackendServiceGetArgs() {
        this.backendService = Input.empty();
        this.headerAction = Input.empty();
        this.weight = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(URLMapPathMatcherPathRuleRouteActionWeightedBackendServiceGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<String> backendService;
        private @Nullable Input<URLMapPathMatcherPathRuleRouteActionWeightedBackendServiceHeaderActionGetArgs> headerAction;
        private Input<Integer> weight;

        public Builder() {
    	      // Empty
        }

        public Builder(URLMapPathMatcherPathRuleRouteActionWeightedBackendServiceGetArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.backendService = defaults.backendService;
    	      this.headerAction = defaults.headerAction;
    	      this.weight = defaults.weight;
        }

        public Builder setBackendService(Input<String> backendService) {
            this.backendService = Objects.requireNonNull(backendService);
            return this;
        }

        public Builder setBackendService(String backendService) {
            this.backendService = Input.of(Objects.requireNonNull(backendService));
            return this;
        }

        public Builder setHeaderAction(@Nullable Input<URLMapPathMatcherPathRuleRouteActionWeightedBackendServiceHeaderActionGetArgs> headerAction) {
            this.headerAction = headerAction;
            return this;
        }

        public Builder setHeaderAction(@Nullable URLMapPathMatcherPathRuleRouteActionWeightedBackendServiceHeaderActionGetArgs headerAction) {
            this.headerAction = Input.ofNullable(headerAction);
            return this;
        }

        public Builder setWeight(Input<Integer> weight) {
            this.weight = Objects.requireNonNull(weight);
            return this;
        }

        public Builder setWeight(Integer weight) {
            this.weight = Input.of(Objects.requireNonNull(weight));
            return this;
        }

        public URLMapPathMatcherPathRuleRouteActionWeightedBackendServiceGetArgs build() {
            return new URLMapPathMatcherPathRuleRouteActionWeightedBackendServiceGetArgs(backendService, headerAction, weight);
        }
    }
}
