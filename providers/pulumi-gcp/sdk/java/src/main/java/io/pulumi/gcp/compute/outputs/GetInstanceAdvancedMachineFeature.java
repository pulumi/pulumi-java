// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.compute.outputs;

import io.pulumi.core.annotations.OutputCustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.util.Objects;

@OutputCustomType
public final class GetInstanceAdvancedMachineFeature {
    private final Boolean enableNestedVirtualization;
    private final Integer threadsPerCore;

    @OutputCustomType.Constructor({"enableNestedVirtualization","threadsPerCore"})
    private GetInstanceAdvancedMachineFeature(
        Boolean enableNestedVirtualization,
        Integer threadsPerCore) {
        this.enableNestedVirtualization = Objects.requireNonNull(enableNestedVirtualization);
        this.threadsPerCore = Objects.requireNonNull(threadsPerCore);
    }

    public Boolean getEnableNestedVirtualization() {
        return this.enableNestedVirtualization;
    }
    public Integer getThreadsPerCore() {
        return this.threadsPerCore;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetInstanceAdvancedMachineFeature defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Boolean enableNestedVirtualization;
        private Integer threadsPerCore;

        public Builder() {
    	      // Empty
        }

        public Builder(GetInstanceAdvancedMachineFeature defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.enableNestedVirtualization = defaults.enableNestedVirtualization;
    	      this.threadsPerCore = defaults.threadsPerCore;
        }

        public Builder setEnableNestedVirtualization(Boolean enableNestedVirtualization) {
            this.enableNestedVirtualization = Objects.requireNonNull(enableNestedVirtualization);
            return this;
        }

        public Builder setThreadsPerCore(Integer threadsPerCore) {
            this.threadsPerCore = Objects.requireNonNull(threadsPerCore);
            return this;
        }
        public GetInstanceAdvancedMachineFeature build() {
            return new GetInstanceAdvancedMachineFeature(enableNestedVirtualization, threadsPerCore);
        }
    }
}
