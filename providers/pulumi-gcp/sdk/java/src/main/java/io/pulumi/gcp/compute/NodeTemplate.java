// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.compute;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.OutputExport;
import io.pulumi.core.annotations.ResourceType;
import io.pulumi.gcp.Utilities;
import io.pulumi.gcp.compute.NodeTemplateArgs;
import io.pulumi.gcp.compute.inputs.NodeTemplateState;
import io.pulumi.gcp.compute.outputs.NodeTemplateNodeTypeFlexibility;
import io.pulumi.gcp.compute.outputs.NodeTemplateServerBinding;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;

/**
 * Represents a NodeTemplate resource. Node templates specify properties
 * for creating sole-tenant nodes, such as node type, vCPU and memory
 * requirements, node affinity labels, and region.
 * 
 * To get more information about NodeTemplate, see:
 * 
 * * [API documentation](https://cloud.google.com/compute/docs/reference/rest/v1/nodeTemplates)
 * * How-to Guides
 *     * [Sole-Tenant Nodes](https://cloud.google.com/compute/docs/nodes/)
 * 
 * ## Example Usage
 * 
 * ## Import
 * 
 * NodeTemplate can be imported using any of these accepted formats
 * 
 * ```sh
 *  $ pulumi import gcp:compute/nodeTemplate:NodeTemplate default projects/{{project}}/regions/{{region}}/nodeTemplates/{{name}}
 * ```
 * 
 * ```sh
 *  $ pulumi import gcp:compute/nodeTemplate:NodeTemplate default {{project}}/{{region}}/{{name}}
 * ```
 * 
 * ```sh
 *  $ pulumi import gcp:compute/nodeTemplate:NodeTemplate default {{region}}/{{name}}
 * ```
 * 
 * ```sh
 *  $ pulumi import gcp:compute/nodeTemplate:NodeTemplate default {{name}}
 * ```
 * 
 */
@ResourceType(type="gcp:compute/nodeTemplate:NodeTemplate")
public class NodeTemplate extends io.pulumi.resources.CustomResource {
    /**
     * CPU overcommit.
     * Default value is `NONE`.
     * Possible values are `ENABLED` and `NONE`.
     * 
     */
    @OutputExport(name="cpuOvercommitType", type=String.class, parameters={})
    private Output</* @Nullable */ String> cpuOvercommitType;

    /**
     * @return CPU overcommit.
     * Default value is `NONE`.
     * Possible values are `ENABLED` and `NONE`.
     * 
     */
    public Output</* @Nullable */ String> getCpuOvercommitType() {
        return this.cpuOvercommitType;
    }
    /**
     * Creation timestamp in RFC3339 text format.
     * 
     */
    @OutputExport(name="creationTimestamp", type=String.class, parameters={})
    private Output<String> creationTimestamp;

    /**
     * @return Creation timestamp in RFC3339 text format.
     * 
     */
    public Output<String> getCreationTimestamp() {
        return this.creationTimestamp;
    }
    /**
     * An optional textual description of the resource.
     * 
     */
    @OutputExport(name="description", type=String.class, parameters={})
    private Output</* @Nullable */ String> description;

    /**
     * @return An optional textual description of the resource.
     * 
     */
    public Output</* @Nullable */ String> getDescription() {
        return this.description;
    }
    /**
     * Name of the resource.
     * 
     */
    @OutputExport(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return Name of the resource.
     * 
     */
    public Output<String> getName() {
        return this.name;
    }
    /**
     * Labels to use for node affinity, which will be used in
     * instance scheduling.
     * 
     */
    @OutputExport(name="nodeAffinityLabels", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> nodeAffinityLabels;

    /**
     * @return Labels to use for node affinity, which will be used in
     * instance scheduling.
     * 
     */
    public Output</* @Nullable */ Map<String,String>> getNodeAffinityLabels() {
        return this.nodeAffinityLabels;
    }
    /**
     * Node type to use for nodes group that are created from this template.
     * Only one of nodeTypeFlexibility and nodeType can be specified.
     * 
     */
    @OutputExport(name="nodeType", type=String.class, parameters={})
    private Output</* @Nullable */ String> nodeType;

    /**
     * @return Node type to use for nodes group that are created from this template.
     * Only one of nodeTypeFlexibility and nodeType can be specified.
     * 
     */
    public Output</* @Nullable */ String> getNodeType() {
        return this.nodeType;
    }
    /**
     * Flexible properties for the desired node type. Node groups that
     * use this node template will create nodes of a type that matches
     * these properties. Only one of nodeTypeFlexibility and nodeType can
     * be specified.
     * Structure is documented below.
     * 
     */
    @OutputExport(name="nodeTypeFlexibility", type=NodeTemplateNodeTypeFlexibility.class, parameters={})
    private Output</* @Nullable */ NodeTemplateNodeTypeFlexibility> nodeTypeFlexibility;

    /**
     * @return Flexible properties for the desired node type. Node groups that
     * use this node template will create nodes of a type that matches
     * these properties. Only one of nodeTypeFlexibility and nodeType can
     * be specified.
     * Structure is documented below.
     * 
     */
    public Output</* @Nullable */ NodeTemplateNodeTypeFlexibility> getNodeTypeFlexibility() {
        return this.nodeTypeFlexibility;
    }
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @OutputExport(name="project", type=String.class, parameters={})
    private Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Output<String> getProject() {
        return this.project;
    }
    /**
     * Region where nodes using the node template will be created.
     * If it is not provided, the provider region is used.
     * 
     */
    @OutputExport(name="region", type=String.class, parameters={})
    private Output<String> region;

    /**
     * @return Region where nodes using the node template will be created.
     * If it is not provided, the provider region is used.
     * 
     */
    public Output<String> getRegion() {
        return this.region;
    }
    /**
     * The URI of the created resource.
     * 
     */
    @OutputExport(name="selfLink", type=String.class, parameters={})
    private Output<String> selfLink;

    /**
     * @return The URI of the created resource.
     * 
     */
    public Output<String> getSelfLink() {
        return this.selfLink;
    }
    /**
     * The server binding policy for nodes using this template. Determines
     * where the nodes should restart following a maintenance event.
     * Structure is documented below.
     * 
     */
    @OutputExport(name="serverBinding", type=NodeTemplateServerBinding.class, parameters={})
    private Output<NodeTemplateServerBinding> serverBinding;

    /**
     * @return The server binding policy for nodes using this template. Determines
     * where the nodes should restart following a maintenance event.
     * Structure is documented below.
     * 
     */
    public Output<NodeTemplateServerBinding> getServerBinding() {
        return this.serverBinding;
    }

    public interface BuilderApplicator {
        public void apply(@Nullable NodeTemplateArgs.Builder a);
    }
    private static io.pulumi.gcp.compute.NodeTemplateArgs buildArgs(BuilderApplicator argsBuilder) {
        final var builder = io.pulumi.gcp.compute.NodeTemplateArgs.builder();
        argsBuilder.apply(builder);
        return builder.build();
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param argsBuilder A function that configures a passed builder.
     */
    public NodeTemplate(String name, BuilderApplicator argsBuilder) {
        this(name, buildArgs(argsBuilder), null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public NodeTemplate(String name) {
        this(name, NodeTemplateArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public NodeTemplate(String name, @Nullable NodeTemplateArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public NodeTemplate(String name, @Nullable NodeTemplateArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("gcp:compute/nodeTemplate:NodeTemplate", name, args == null ? NodeTemplateArgs.Empty : args, makeResourceOptions(options, Output.empty()));
    }

    private NodeTemplate(String name, Output<String> id, @Nullable NodeTemplateState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("gcp:compute/nodeTemplate:NodeTemplate", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .setVersion(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static NodeTemplate get(String name, Output<String> id, @Nullable NodeTemplateState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new NodeTemplate(name, id, state, options);
    }
}
