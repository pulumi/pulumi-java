// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.container.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import io.pulumi.gcp.container.inputs.ClusterAddonsConfigCloudrunConfigArgs;
import io.pulumi.gcp.container.inputs.ClusterAddonsConfigConfigConnectorConfigArgs;
import io.pulumi.gcp.container.inputs.ClusterAddonsConfigDnsCacheConfigArgs;
import io.pulumi.gcp.container.inputs.ClusterAddonsConfigGcePersistentDiskCsiDriverConfigArgs;
import io.pulumi.gcp.container.inputs.ClusterAddonsConfigGcpFilestoreCsiDriverConfigArgs;
import io.pulumi.gcp.container.inputs.ClusterAddonsConfigHorizontalPodAutoscalingArgs;
import io.pulumi.gcp.container.inputs.ClusterAddonsConfigHttpLoadBalancingArgs;
import io.pulumi.gcp.container.inputs.ClusterAddonsConfigIstioConfigArgs;
import io.pulumi.gcp.container.inputs.ClusterAddonsConfigKalmConfigArgs;
import io.pulumi.gcp.container.inputs.ClusterAddonsConfigNetworkPolicyConfigArgs;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ClusterAddonsConfigArgs extends io.pulumi.resources.ResourceArgs {

    public static final ClusterAddonsConfigArgs Empty = new ClusterAddonsConfigArgs();

    /**
     * . Structure is documented below.
     * 
     */
    @InputImport(name="cloudrunConfig")
      private final @Nullable Input<ClusterAddonsConfigCloudrunConfigArgs> cloudrunConfig;

    public Input<ClusterAddonsConfigCloudrunConfigArgs> getCloudrunConfig() {
        return this.cloudrunConfig == null ? Input.empty() : this.cloudrunConfig;
    }

    /**
     * .
     * The status of the ConfigConnector addon. It is disabled by default; Set `enabled = true` to enable.
     * 
     */
    @InputImport(name="configConnectorConfig")
      private final @Nullable Input<ClusterAddonsConfigConfigConnectorConfigArgs> configConnectorConfig;

    public Input<ClusterAddonsConfigConfigConnectorConfigArgs> getConfigConnectorConfig() {
        return this.configConnectorConfig == null ? Input.empty() : this.configConnectorConfig;
    }

    /**
     * .
     * The status of the NodeLocal DNSCache addon. It is disabled by default.
     * Set `enabled = true` to enable.
     * 
     */
    @InputImport(name="dnsCacheConfig")
      private final @Nullable Input<ClusterAddonsConfigDnsCacheConfigArgs> dnsCacheConfig;

    public Input<ClusterAddonsConfigDnsCacheConfigArgs> getDnsCacheConfig() {
        return this.dnsCacheConfig == null ? Input.empty() : this.dnsCacheConfig;
    }

    /**
     * .
     * Whether this cluster should enable the Google Compute Engine Persistent Disk Container Storage Interface (CSI) Driver. Defaults to disabled; set `enabled = true` to enable.
     * 
     */
    @InputImport(name="gcePersistentDiskCsiDriverConfig")
      private final @Nullable Input<ClusterAddonsConfigGcePersistentDiskCsiDriverConfigArgs> gcePersistentDiskCsiDriverConfig;

    public Input<ClusterAddonsConfigGcePersistentDiskCsiDriverConfigArgs> getGcePersistentDiskCsiDriverConfig() {
        return this.gcePersistentDiskCsiDriverConfig == null ? Input.empty() : this.gcePersistentDiskCsiDriverConfig;
    }

    /**
     * The status of the Filestore CSI driver addon,
     * which allows the usage of filestore instance as volumes.
     * It is disbaled by default; set `enabled = true` to enable.
     * 
     */
    @InputImport(name="gcpFilestoreCsiDriverConfig")
      private final @Nullable Input<ClusterAddonsConfigGcpFilestoreCsiDriverConfigArgs> gcpFilestoreCsiDriverConfig;

    public Input<ClusterAddonsConfigGcpFilestoreCsiDriverConfigArgs> getGcpFilestoreCsiDriverConfig() {
        return this.gcpFilestoreCsiDriverConfig == null ? Input.empty() : this.gcpFilestoreCsiDriverConfig;
    }

    /**
     * The status of the Horizontal Pod Autoscaling
     * addon, which increases or decreases the number of replica pods a replication controller
     * has based on the resource usage of the existing pods.
     * It is enabled by default;
     * set `disabled = true` to disable.
     * 
     */
    @InputImport(name="horizontalPodAutoscaling")
      private final @Nullable Input<ClusterAddonsConfigHorizontalPodAutoscalingArgs> horizontalPodAutoscaling;

    public Input<ClusterAddonsConfigHorizontalPodAutoscalingArgs> getHorizontalPodAutoscaling() {
        return this.horizontalPodAutoscaling == null ? Input.empty() : this.horizontalPodAutoscaling;
    }

    /**
     * The status of the HTTP (L7) load balancing
     * controller addon, which makes it easy to set up HTTP load balancers for services in a
     * cluster. It is enabled by default; set `disabled = true` to disable.
     * 
     */
    @InputImport(name="httpLoadBalancing")
      private final @Nullable Input<ClusterAddonsConfigHttpLoadBalancingArgs> httpLoadBalancing;

    public Input<ClusterAddonsConfigHttpLoadBalancingArgs> getHttpLoadBalancing() {
        return this.httpLoadBalancing == null ? Input.empty() : this.httpLoadBalancing;
    }

    /**
     * .
     * Structure is documented below.
     * 
     */
    @InputImport(name="istioConfig")
      private final @Nullable Input<ClusterAddonsConfigIstioConfigArgs> istioConfig;

    public Input<ClusterAddonsConfigIstioConfigArgs> getIstioConfig() {
        return this.istioConfig == null ? Input.empty() : this.istioConfig;
    }

    /**
     * .
     * Configuration for the KALM addon, which manages the lifecycle of k8s. It is disabled by default; Set `enabled = true` to enable.
     * 
     */
    @InputImport(name="kalmConfig")
      private final @Nullable Input<ClusterAddonsConfigKalmConfigArgs> kalmConfig;

    public Input<ClusterAddonsConfigKalmConfigArgs> getKalmConfig() {
        return this.kalmConfig == null ? Input.empty() : this.kalmConfig;
    }

    /**
     * Whether we should enable the network policy addon
     * for the master.  This must be enabled in order to enable network policy for the nodes.
     * To enable this, you must also define a `network_policy` block,
     * otherwise nothing will happen.
     * It can only be disabled if the nodes already do not have network policies enabled.
     * Defaults to disabled; set `disabled = false` to enable.
     * 
     */
    @InputImport(name="networkPolicyConfig")
      private final @Nullable Input<ClusterAddonsConfigNetworkPolicyConfigArgs> networkPolicyConfig;

    public Input<ClusterAddonsConfigNetworkPolicyConfigArgs> getNetworkPolicyConfig() {
        return this.networkPolicyConfig == null ? Input.empty() : this.networkPolicyConfig;
    }

    public ClusterAddonsConfigArgs(
        @Nullable Input<ClusterAddonsConfigCloudrunConfigArgs> cloudrunConfig,
        @Nullable Input<ClusterAddonsConfigConfigConnectorConfigArgs> configConnectorConfig,
        @Nullable Input<ClusterAddonsConfigDnsCacheConfigArgs> dnsCacheConfig,
        @Nullable Input<ClusterAddonsConfigGcePersistentDiskCsiDriverConfigArgs> gcePersistentDiskCsiDriverConfig,
        @Nullable Input<ClusterAddonsConfigGcpFilestoreCsiDriverConfigArgs> gcpFilestoreCsiDriverConfig,
        @Nullable Input<ClusterAddonsConfigHorizontalPodAutoscalingArgs> horizontalPodAutoscaling,
        @Nullable Input<ClusterAddonsConfigHttpLoadBalancingArgs> httpLoadBalancing,
        @Nullable Input<ClusterAddonsConfigIstioConfigArgs> istioConfig,
        @Nullable Input<ClusterAddonsConfigKalmConfigArgs> kalmConfig,
        @Nullable Input<ClusterAddonsConfigNetworkPolicyConfigArgs> networkPolicyConfig) {
        this.cloudrunConfig = cloudrunConfig;
        this.configConnectorConfig = configConnectorConfig;
        this.dnsCacheConfig = dnsCacheConfig;
        this.gcePersistentDiskCsiDriverConfig = gcePersistentDiskCsiDriverConfig;
        this.gcpFilestoreCsiDriverConfig = gcpFilestoreCsiDriverConfig;
        this.horizontalPodAutoscaling = horizontalPodAutoscaling;
        this.httpLoadBalancing = httpLoadBalancing;
        this.istioConfig = istioConfig;
        this.kalmConfig = kalmConfig;
        this.networkPolicyConfig = networkPolicyConfig;
    }

    private ClusterAddonsConfigArgs() {
        this.cloudrunConfig = Input.empty();
        this.configConnectorConfig = Input.empty();
        this.dnsCacheConfig = Input.empty();
        this.gcePersistentDiskCsiDriverConfig = Input.empty();
        this.gcpFilestoreCsiDriverConfig = Input.empty();
        this.horizontalPodAutoscaling = Input.empty();
        this.httpLoadBalancing = Input.empty();
        this.istioConfig = Input.empty();
        this.kalmConfig = Input.empty();
        this.networkPolicyConfig = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ClusterAddonsConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<ClusterAddonsConfigCloudrunConfigArgs> cloudrunConfig;
        private @Nullable Input<ClusterAddonsConfigConfigConnectorConfigArgs> configConnectorConfig;
        private @Nullable Input<ClusterAddonsConfigDnsCacheConfigArgs> dnsCacheConfig;
        private @Nullable Input<ClusterAddonsConfigGcePersistentDiskCsiDriverConfigArgs> gcePersistentDiskCsiDriverConfig;
        private @Nullable Input<ClusterAddonsConfigGcpFilestoreCsiDriverConfigArgs> gcpFilestoreCsiDriverConfig;
        private @Nullable Input<ClusterAddonsConfigHorizontalPodAutoscalingArgs> horizontalPodAutoscaling;
        private @Nullable Input<ClusterAddonsConfigHttpLoadBalancingArgs> httpLoadBalancing;
        private @Nullable Input<ClusterAddonsConfigIstioConfigArgs> istioConfig;
        private @Nullable Input<ClusterAddonsConfigKalmConfigArgs> kalmConfig;
        private @Nullable Input<ClusterAddonsConfigNetworkPolicyConfigArgs> networkPolicyConfig;

        public Builder() {
    	      // Empty
        }

        public Builder(ClusterAddonsConfigArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cloudrunConfig = defaults.cloudrunConfig;
    	      this.configConnectorConfig = defaults.configConnectorConfig;
    	      this.dnsCacheConfig = defaults.dnsCacheConfig;
    	      this.gcePersistentDiskCsiDriverConfig = defaults.gcePersistentDiskCsiDriverConfig;
    	      this.gcpFilestoreCsiDriverConfig = defaults.gcpFilestoreCsiDriverConfig;
    	      this.horizontalPodAutoscaling = defaults.horizontalPodAutoscaling;
    	      this.httpLoadBalancing = defaults.httpLoadBalancing;
    	      this.istioConfig = defaults.istioConfig;
    	      this.kalmConfig = defaults.kalmConfig;
    	      this.networkPolicyConfig = defaults.networkPolicyConfig;
        }

        public Builder cloudrunConfig(@Nullable Input<ClusterAddonsConfigCloudrunConfigArgs> cloudrunConfig) {
            this.cloudrunConfig = cloudrunConfig;
            return this;
        }

        public Builder cloudrunConfig(@Nullable ClusterAddonsConfigCloudrunConfigArgs cloudrunConfig) {
            this.cloudrunConfig = Input.ofNullable(cloudrunConfig);
            return this;
        }

        public Builder configConnectorConfig(@Nullable Input<ClusterAddonsConfigConfigConnectorConfigArgs> configConnectorConfig) {
            this.configConnectorConfig = configConnectorConfig;
            return this;
        }

        public Builder configConnectorConfig(@Nullable ClusterAddonsConfigConfigConnectorConfigArgs configConnectorConfig) {
            this.configConnectorConfig = Input.ofNullable(configConnectorConfig);
            return this;
        }

        public Builder dnsCacheConfig(@Nullable Input<ClusterAddonsConfigDnsCacheConfigArgs> dnsCacheConfig) {
            this.dnsCacheConfig = dnsCacheConfig;
            return this;
        }

        public Builder dnsCacheConfig(@Nullable ClusterAddonsConfigDnsCacheConfigArgs dnsCacheConfig) {
            this.dnsCacheConfig = Input.ofNullable(dnsCacheConfig);
            return this;
        }

        public Builder gcePersistentDiskCsiDriverConfig(@Nullable Input<ClusterAddonsConfigGcePersistentDiskCsiDriverConfigArgs> gcePersistentDiskCsiDriverConfig) {
            this.gcePersistentDiskCsiDriverConfig = gcePersistentDiskCsiDriverConfig;
            return this;
        }

        public Builder gcePersistentDiskCsiDriverConfig(@Nullable ClusterAddonsConfigGcePersistentDiskCsiDriverConfigArgs gcePersistentDiskCsiDriverConfig) {
            this.gcePersistentDiskCsiDriverConfig = Input.ofNullable(gcePersistentDiskCsiDriverConfig);
            return this;
        }

        public Builder gcpFilestoreCsiDriverConfig(@Nullable Input<ClusterAddonsConfigGcpFilestoreCsiDriverConfigArgs> gcpFilestoreCsiDriverConfig) {
            this.gcpFilestoreCsiDriverConfig = gcpFilestoreCsiDriverConfig;
            return this;
        }

        public Builder gcpFilestoreCsiDriverConfig(@Nullable ClusterAddonsConfigGcpFilestoreCsiDriverConfigArgs gcpFilestoreCsiDriverConfig) {
            this.gcpFilestoreCsiDriverConfig = Input.ofNullable(gcpFilestoreCsiDriverConfig);
            return this;
        }

        public Builder horizontalPodAutoscaling(@Nullable Input<ClusterAddonsConfigHorizontalPodAutoscalingArgs> horizontalPodAutoscaling) {
            this.horizontalPodAutoscaling = horizontalPodAutoscaling;
            return this;
        }

        public Builder horizontalPodAutoscaling(@Nullable ClusterAddonsConfigHorizontalPodAutoscalingArgs horizontalPodAutoscaling) {
            this.horizontalPodAutoscaling = Input.ofNullable(horizontalPodAutoscaling);
            return this;
        }

        public Builder httpLoadBalancing(@Nullable Input<ClusterAddonsConfigHttpLoadBalancingArgs> httpLoadBalancing) {
            this.httpLoadBalancing = httpLoadBalancing;
            return this;
        }

        public Builder httpLoadBalancing(@Nullable ClusterAddonsConfigHttpLoadBalancingArgs httpLoadBalancing) {
            this.httpLoadBalancing = Input.ofNullable(httpLoadBalancing);
            return this;
        }

        public Builder istioConfig(@Nullable Input<ClusterAddonsConfigIstioConfigArgs> istioConfig) {
            this.istioConfig = istioConfig;
            return this;
        }

        public Builder istioConfig(@Nullable ClusterAddonsConfigIstioConfigArgs istioConfig) {
            this.istioConfig = Input.ofNullable(istioConfig);
            return this;
        }

        public Builder kalmConfig(@Nullable Input<ClusterAddonsConfigKalmConfigArgs> kalmConfig) {
            this.kalmConfig = kalmConfig;
            return this;
        }

        public Builder kalmConfig(@Nullable ClusterAddonsConfigKalmConfigArgs kalmConfig) {
            this.kalmConfig = Input.ofNullable(kalmConfig);
            return this;
        }

        public Builder networkPolicyConfig(@Nullable Input<ClusterAddonsConfigNetworkPolicyConfigArgs> networkPolicyConfig) {
            this.networkPolicyConfig = networkPolicyConfig;
            return this;
        }

        public Builder networkPolicyConfig(@Nullable ClusterAddonsConfigNetworkPolicyConfigArgs networkPolicyConfig) {
            this.networkPolicyConfig = Input.ofNullable(networkPolicyConfig);
            return this;
        }
        public ClusterAddonsConfigArgs build() {
            return new ClusterAddonsConfigArgs(cloudrunConfig, configConnectorConfig, dnsCacheConfig, gcePersistentDiskCsiDriverConfig, gcpFilestoreCsiDriverConfig, horizontalPodAutoscaling, httpLoadBalancing, istioConfig, kalmConfig, networkPolicyConfig);
        }
    }
}
