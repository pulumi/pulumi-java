// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.storage.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import io.pulumi.gcp.storage.inputs.TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyGetArgs;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class TransferJobTransferSpecAwsS3DataSourceGetArgs extends io.pulumi.resources.ResourceArgs {

    public static final TransferJobTransferSpecAwsS3DataSourceGetArgs Empty = new TransferJobTransferSpecAwsS3DataSourceGetArgs();

    /**
     * AWS credentials block.
     * 
     */
    @Import(name="awsAccessKey")
      private final @Nullable Output<TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyGetArgs> awsAccessKey;

    public Output<TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyGetArgs> awsAccessKey() {
        return this.awsAccessKey == null ? Codegen.empty() : this.awsAccessKey;
    }

    /**
     * S3 Bucket name.
     * 
     */
    @Import(name="bucketName", required=true)
      private final Output<String> bucketName;

    public Output<String> bucketName() {
        return this.bucketName;
    }

    /**
     * The Amazon Resource Name (ARN) of the role to support temporary credentials via 'AssumeRoleWithWebIdentity'. For more information about ARNs, see [IAM ARNs](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_identifiers.html#identifiers-arns). When a role ARN is provided, Transfer Service fetches temporary credentials for the session using a 'AssumeRoleWithWebIdentity' call for the provided role using the [GoogleServiceAccount][] for this project.
     * 
     */
    @Import(name="roleArn")
      private final @Nullable Output<String> roleArn;

    public Output<String> roleArn() {
        return this.roleArn == null ? Codegen.empty() : this.roleArn;
    }

    public TransferJobTransferSpecAwsS3DataSourceGetArgs(
        @Nullable Output<TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyGetArgs> awsAccessKey,
        Output<String> bucketName,
        @Nullable Output<String> roleArn) {
        this.awsAccessKey = awsAccessKey;
        this.bucketName = Objects.requireNonNull(bucketName, "expected parameter 'bucketName' to be non-null");
        this.roleArn = roleArn;
    }

    private TransferJobTransferSpecAwsS3DataSourceGetArgs() {
        this.awsAccessKey = Codegen.empty();
        this.bucketName = Codegen.empty();
        this.roleArn = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TransferJobTransferSpecAwsS3DataSourceGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyGetArgs> awsAccessKey;
        private Output<String> bucketName;
        private @Nullable Output<String> roleArn;

        public Builder() {
    	      // Empty
        }

        public Builder(TransferJobTransferSpecAwsS3DataSourceGetArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.awsAccessKey = defaults.awsAccessKey;
    	      this.bucketName = defaults.bucketName;
    	      this.roleArn = defaults.roleArn;
        }

        public Builder awsAccessKey(@Nullable Output<TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyGetArgs> awsAccessKey) {
            this.awsAccessKey = awsAccessKey;
            return this;
        }
        public Builder awsAccessKey(@Nullable TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyGetArgs awsAccessKey) {
            this.awsAccessKey = Codegen.ofNullable(awsAccessKey);
            return this;
        }
        public Builder bucketName(Output<String> bucketName) {
            this.bucketName = Objects.requireNonNull(bucketName);
            return this;
        }
        public Builder bucketName(String bucketName) {
            this.bucketName = Output.of(Objects.requireNonNull(bucketName));
            return this;
        }
        public Builder roleArn(@Nullable Output<String> roleArn) {
            this.roleArn = roleArn;
            return this;
        }
        public Builder roleArn(@Nullable String roleArn) {
            this.roleArn = Codegen.ofNullable(roleArn);
            return this;
        }        public TransferJobTransferSpecAwsS3DataSourceGetArgs build() {
            return new TransferJobTransferSpecAwsS3DataSourceGetArgs(awsAccessKey, bucketName, roleArn);
        }
    }
}
