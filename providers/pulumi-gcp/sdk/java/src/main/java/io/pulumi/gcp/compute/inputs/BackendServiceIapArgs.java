// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.compute.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class BackendServiceIapArgs extends io.pulumi.resources.ResourceArgs {

    public static final BackendServiceIapArgs Empty = new BackendServiceIapArgs();

    /**
     * OAuth2 Client ID for IAP
     * 
     */
    @InputImport(name="oauth2ClientId", required=true)
      private final Input<String> oauth2ClientId;

    public Input<String> getOauth2ClientId() {
        return this.oauth2ClientId;
    }

    /**
     * OAuth2 Client Secret for IAP
     * **Note**: This property is sensitive and will not be displayed in the plan.
     * 
     */
    @InputImport(name="oauth2ClientSecret", required=true)
      private final Input<String> oauth2ClientSecret;

    public Input<String> getOauth2ClientSecret() {
        return this.oauth2ClientSecret;
    }

    /**
     * - 
     * OAuth2 Client Secret SHA-256 for IAP
     * **Note**: This property is sensitive and will not be displayed in the plan.
     * 
     */
    @InputImport(name="oauth2ClientSecretSha256")
      private final @Nullable Input<String> oauth2ClientSecretSha256;

    public Input<String> getOauth2ClientSecretSha256() {
        return this.oauth2ClientSecretSha256 == null ? Input.empty() : this.oauth2ClientSecretSha256;
    }

    public BackendServiceIapArgs(
        Input<String> oauth2ClientId,
        Input<String> oauth2ClientSecret,
        @Nullable Input<String> oauth2ClientSecretSha256) {
        this.oauth2ClientId = Objects.requireNonNull(oauth2ClientId, "expected parameter 'oauth2ClientId' to be non-null");
        this.oauth2ClientSecret = Objects.requireNonNull(oauth2ClientSecret, "expected parameter 'oauth2ClientSecret' to be non-null");
        this.oauth2ClientSecretSha256 = oauth2ClientSecretSha256;
    }

    private BackendServiceIapArgs() {
        this.oauth2ClientId = Input.empty();
        this.oauth2ClientSecret = Input.empty();
        this.oauth2ClientSecretSha256 = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BackendServiceIapArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<String> oauth2ClientId;
        private Input<String> oauth2ClientSecret;
        private @Nullable Input<String> oauth2ClientSecretSha256;

        public Builder() {
    	      // Empty
        }

        public Builder(BackendServiceIapArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.oauth2ClientId = defaults.oauth2ClientId;
    	      this.oauth2ClientSecret = defaults.oauth2ClientSecret;
    	      this.oauth2ClientSecretSha256 = defaults.oauth2ClientSecretSha256;
        }

        public Builder oauth2ClientId(Input<String> oauth2ClientId) {
            this.oauth2ClientId = Objects.requireNonNull(oauth2ClientId);
            return this;
        }

        public Builder oauth2ClientId(String oauth2ClientId) {
            this.oauth2ClientId = Input.of(Objects.requireNonNull(oauth2ClientId));
            return this;
        }

        public Builder oauth2ClientSecret(Input<String> oauth2ClientSecret) {
            this.oauth2ClientSecret = Objects.requireNonNull(oauth2ClientSecret);
            return this;
        }

        public Builder oauth2ClientSecret(String oauth2ClientSecret) {
            this.oauth2ClientSecret = Input.of(Objects.requireNonNull(oauth2ClientSecret));
            return this;
        }

        public Builder oauth2ClientSecretSha256(@Nullable Input<String> oauth2ClientSecretSha256) {
            this.oauth2ClientSecretSha256 = oauth2ClientSecretSha256;
            return this;
        }

        public Builder oauth2ClientSecretSha256(@Nullable String oauth2ClientSecretSha256) {
            this.oauth2ClientSecretSha256 = Input.ofNullable(oauth2ClientSecretSha256);
            return this;
        }
        public BackendServiceIapArgs build() {
            return new BackendServiceIapArgs(oauth2ClientId, oauth2ClientSecret, oauth2ClientSecretSha256);
        }
    }
}
