// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.compute.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import io.pulumi.gcp.compute.inputs.ReservationShareSettingsProjectMapGetArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ReservationShareSettingsGetArgs extends io.pulumi.resources.ResourceArgs {

    public static final ReservationShareSettingsGetArgs Empty = new ReservationShareSettingsGetArgs();

    /**
     * A map of project number and project config. This is only valid when shareType's value is SPECIFIC_PROJECTS.
     * Structure is documented below.
     * 
     */
    @Import(name="projectMaps")
      private final @Nullable Output<List<ReservationShareSettingsProjectMapGetArgs>> projectMaps;

    public Output<List<ReservationShareSettingsProjectMapGetArgs>> projectMaps() {
        return this.projectMaps == null ? Codegen.empty() : this.projectMaps;
    }

    /**
     * Type of sharing for this shared-reservation
     * Possible values are `LOCAL` and `SPECIFIC_PROJECTS`.
     * 
     */
    @Import(name="shareType")
      private final @Nullable Output<String> shareType;

    public Output<String> shareType() {
        return this.shareType == null ? Codegen.empty() : this.shareType;
    }

    public ReservationShareSettingsGetArgs(
        @Nullable Output<List<ReservationShareSettingsProjectMapGetArgs>> projectMaps,
        @Nullable Output<String> shareType) {
        this.projectMaps = projectMaps;
        this.shareType = shareType;
    }

    private ReservationShareSettingsGetArgs() {
        this.projectMaps = Codegen.empty();
        this.shareType = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ReservationShareSettingsGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<List<ReservationShareSettingsProjectMapGetArgs>> projectMaps;
        private @Nullable Output<String> shareType;

        public Builder() {
    	      // Empty
        }

        public Builder(ReservationShareSettingsGetArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.projectMaps = defaults.projectMaps;
    	      this.shareType = defaults.shareType;
        }

        public Builder projectMaps(@Nullable Output<List<ReservationShareSettingsProjectMapGetArgs>> projectMaps) {
            this.projectMaps = projectMaps;
            return this;
        }
        public Builder projectMaps(@Nullable List<ReservationShareSettingsProjectMapGetArgs> projectMaps) {
            this.projectMaps = Codegen.ofNullable(projectMaps);
            return this;
        }
        public Builder projectMaps(ReservationShareSettingsProjectMapGetArgs... projectMaps) {
            return projectMaps(List.of(projectMaps));
        }
        public Builder shareType(@Nullable Output<String> shareType) {
            this.shareType = shareType;
            return this;
        }
        public Builder shareType(@Nullable String shareType) {
            this.shareType = Codegen.ofNullable(shareType);
            return this;
        }        public ReservationShareSettingsGetArgs build() {
            return new ReservationShareSettingsGetArgs(projectMaps, shareType);
        }
    }
}
