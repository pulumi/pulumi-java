// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.datacatalog.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import io.pulumi.gcp.datacatalog.inputs.EntryBigqueryDateShardedSpecGetArgs;
import io.pulumi.gcp.datacatalog.inputs.EntryBigqueryTableSpecGetArgs;
import io.pulumi.gcp.datacatalog.inputs.EntryGcsFilesetSpecGetArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class EntryState extends io.pulumi.resources.ResourceArgs {

    public static final EntryState Empty = new EntryState();

    /**
     * Specification for a group of BigQuery tables with name pattern [prefix]YYYYMMDD. Context:
     * https://cloud.google.com/bigquery/docs/partitioned-tables#partitioning_versus_sharding.
     * 
     */
    @InputImport(name="bigqueryDateShardedSpecs")
        private final @Nullable Input<List<EntryBigqueryDateShardedSpecGetArgs>> bigqueryDateShardedSpecs;

    public Input<List<EntryBigqueryDateShardedSpecGetArgs>> getBigqueryDateShardedSpecs() {
        return this.bigqueryDateShardedSpecs == null ? Input.empty() : this.bigqueryDateShardedSpecs;
    }

    /**
     * Specification that applies to a BigQuery table. This is only valid on entries of type TABLE.
     * 
     */
    @InputImport(name="bigqueryTableSpecs")
        private final @Nullable Input<List<EntryBigqueryTableSpecGetArgs>> bigqueryTableSpecs;

    public Input<List<EntryBigqueryTableSpecGetArgs>> getBigqueryTableSpecs() {
        return this.bigqueryTableSpecs == null ? Input.empty() : this.bigqueryTableSpecs;
    }

    /**
     * Entry description, which can consist of several sentences or paragraphs that describe entry contents.
     * 
     */
    @InputImport(name="description")
        private final @Nullable Input<String> description;

    public Input<String> getDescription() {
        return this.description == null ? Input.empty() : this.description;
    }

    /**
     * Display information such as title and description. A short name to identify the entry,
     * for example, "Analytics Data - Jan 2011".
     * 
     */
    @InputImport(name="displayName")
        private final @Nullable Input<String> displayName;

    public Input<String> getDisplayName() {
        return this.displayName == null ? Input.empty() : this.displayName;
    }

    /**
     * The name of the entry group this entry is in.
     * 
     */
    @InputImport(name="entryGroup")
        private final @Nullable Input<String> entryGroup;

    public Input<String> getEntryGroup() {
        return this.entryGroup == null ? Input.empty() : this.entryGroup;
    }

    /**
     * The id of the entry to create.
     * 
     */
    @InputImport(name="entryId")
        private final @Nullable Input<String> entryId;

    public Input<String> getEntryId() {
        return this.entryId == null ? Input.empty() : this.entryId;
    }

    /**
     * Specification that applies to a Cloud Storage fileset. This is only valid on entries of type FILESET.
     * Structure is documented below.
     * 
     */
    @InputImport(name="gcsFilesetSpec")
        private final @Nullable Input<EntryGcsFilesetSpecGetArgs> gcsFilesetSpec;

    public Input<EntryGcsFilesetSpecGetArgs> getGcsFilesetSpec() {
        return this.gcsFilesetSpec == null ? Input.empty() : this.gcsFilesetSpec;
    }

    /**
     * This field indicates the entry's source system that Data Catalog integrates with, such as BigQuery or Pub/Sub.
     * 
     */
    @InputImport(name="integratedSystem")
        private final @Nullable Input<String> integratedSystem;

    public Input<String> getIntegratedSystem() {
        return this.integratedSystem == null ? Input.empty() : this.integratedSystem;
    }

    /**
     * The resource this metadata entry refers to.
     * For Google Cloud Platform resources, linkedResource is the full name of the resource.
     * For example, the linkedResource for a table resource from BigQuery is:
     * //bigquery.googleapis.com/projects/projectId/datasets/datasetId/tables/tableId
     * Output only when Entry is of type in the EntryType enum. For entries with userSpecifiedType,
     * this field is optional and defaults to an empty string.
     * 
     */
    @InputImport(name="linkedResource")
        private final @Nullable Input<String> linkedResource;

    public Input<String> getLinkedResource() {
        return this.linkedResource == null ? Input.empty() : this.linkedResource;
    }

    /**
     * The Data Catalog resource name of the entry in URL format. Example:
     * projects/{project_id}/locations/{location}/entryGroups/{entryGroupId}/entries/{entryId}. Note that this Entry and its
     * child resources may not actually be stored in the location in this name.
     * 
     */
    @InputImport(name="name")
        private final @Nullable Input<String> name;

    public Input<String> getName() {
        return this.name == null ? Input.empty() : this.name;
    }

    /**
     * Schema of the entry (e.g. BigQuery, GoogleSQL, Avro schema), as a json string. An entry might not have any schema
     * attached to it. See
     * https://cloud.google.com/data-catalog/docs/reference/rest/v1/projects.locations.entryGroups.entries#schema
     * for what fields this schema can contain.
     * 
     */
    @InputImport(name="schema")
        private final @Nullable Input<String> schema;

    public Input<String> getSchema() {
        return this.schema == null ? Input.empty() : this.schema;
    }

    /**
     * The type of the entry. Only used for Entries with types in the EntryType enum.
     * Currently, only FILESET enum value is allowed. All other entries created through Data Catalog must use userSpecifiedType.
     * Possible values are `FILESET`.
     * 
     */
    @InputImport(name="type")
        private final @Nullable Input<String> type;

    public Input<String> getType() {
        return this.type == null ? Input.empty() : this.type;
    }

    /**
     * This field indicates the entry's source system that Data Catalog does not integrate with.
     * userSpecifiedSystem strings must begin with a letter or underscore and can only contain letters, numbers,
     * and underscores; are case insensitive; must be at least 1 character and at most 64 characters long.
     * 
     */
    @InputImport(name="userSpecifiedSystem")
        private final @Nullable Input<String> userSpecifiedSystem;

    public Input<String> getUserSpecifiedSystem() {
        return this.userSpecifiedSystem == null ? Input.empty() : this.userSpecifiedSystem;
    }

    /**
     * Entry type if it does not fit any of the input-allowed values listed in EntryType enum above.
     * When creating an entry, users should check the enum values first, if nothing matches the entry
     * to be created, then provide a custom value, for example "my_special_type".
     * userSpecifiedType strings must begin with a letter or underscore and can only contain letters,
     * numbers, and underscores; are case insensitive; must be at least 1 character and at most 64 characters long.
     * 
     */
    @InputImport(name="userSpecifiedType")
        private final @Nullable Input<String> userSpecifiedType;

    public Input<String> getUserSpecifiedType() {
        return this.userSpecifiedType == null ? Input.empty() : this.userSpecifiedType;
    }

    public EntryState(
        @Nullable Input<List<EntryBigqueryDateShardedSpecGetArgs>> bigqueryDateShardedSpecs,
        @Nullable Input<List<EntryBigqueryTableSpecGetArgs>> bigqueryTableSpecs,
        @Nullable Input<String> description,
        @Nullable Input<String> displayName,
        @Nullable Input<String> entryGroup,
        @Nullable Input<String> entryId,
        @Nullable Input<EntryGcsFilesetSpecGetArgs> gcsFilesetSpec,
        @Nullable Input<String> integratedSystem,
        @Nullable Input<String> linkedResource,
        @Nullable Input<String> name,
        @Nullable Input<String> schema,
        @Nullable Input<String> type,
        @Nullable Input<String> userSpecifiedSystem,
        @Nullable Input<String> userSpecifiedType) {
        this.bigqueryDateShardedSpecs = bigqueryDateShardedSpecs;
        this.bigqueryTableSpecs = bigqueryTableSpecs;
        this.description = description;
        this.displayName = displayName;
        this.entryGroup = entryGroup;
        this.entryId = entryId;
        this.gcsFilesetSpec = gcsFilesetSpec;
        this.integratedSystem = integratedSystem;
        this.linkedResource = linkedResource;
        this.name = name;
        this.schema = schema;
        this.type = type;
        this.userSpecifiedSystem = userSpecifiedSystem;
        this.userSpecifiedType = userSpecifiedType;
    }

    private EntryState() {
        this.bigqueryDateShardedSpecs = Input.empty();
        this.bigqueryTableSpecs = Input.empty();
        this.description = Input.empty();
        this.displayName = Input.empty();
        this.entryGroup = Input.empty();
        this.entryId = Input.empty();
        this.gcsFilesetSpec = Input.empty();
        this.integratedSystem = Input.empty();
        this.linkedResource = Input.empty();
        this.name = Input.empty();
        this.schema = Input.empty();
        this.type = Input.empty();
        this.userSpecifiedSystem = Input.empty();
        this.userSpecifiedType = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(EntryState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<List<EntryBigqueryDateShardedSpecGetArgs>> bigqueryDateShardedSpecs;
        private @Nullable Input<List<EntryBigqueryTableSpecGetArgs>> bigqueryTableSpecs;
        private @Nullable Input<String> description;
        private @Nullable Input<String> displayName;
        private @Nullable Input<String> entryGroup;
        private @Nullable Input<String> entryId;
        private @Nullable Input<EntryGcsFilesetSpecGetArgs> gcsFilesetSpec;
        private @Nullable Input<String> integratedSystem;
        private @Nullable Input<String> linkedResource;
        private @Nullable Input<String> name;
        private @Nullable Input<String> schema;
        private @Nullable Input<String> type;
        private @Nullable Input<String> userSpecifiedSystem;
        private @Nullable Input<String> userSpecifiedType;

        public Builder() {
    	      // Empty
        }

        public Builder(EntryState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bigqueryDateShardedSpecs = defaults.bigqueryDateShardedSpecs;
    	      this.bigqueryTableSpecs = defaults.bigqueryTableSpecs;
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.entryGroup = defaults.entryGroup;
    	      this.entryId = defaults.entryId;
    	      this.gcsFilesetSpec = defaults.gcsFilesetSpec;
    	      this.integratedSystem = defaults.integratedSystem;
    	      this.linkedResource = defaults.linkedResource;
    	      this.name = defaults.name;
    	      this.schema = defaults.schema;
    	      this.type = defaults.type;
    	      this.userSpecifiedSystem = defaults.userSpecifiedSystem;
    	      this.userSpecifiedType = defaults.userSpecifiedType;
        }

        public Builder setBigqueryDateShardedSpecs(@Nullable Input<List<EntryBigqueryDateShardedSpecGetArgs>> bigqueryDateShardedSpecs) {
            this.bigqueryDateShardedSpecs = bigqueryDateShardedSpecs;
            return this;
        }

        public Builder setBigqueryDateShardedSpecs(@Nullable List<EntryBigqueryDateShardedSpecGetArgs> bigqueryDateShardedSpecs) {
            this.bigqueryDateShardedSpecs = Input.ofNullable(bigqueryDateShardedSpecs);
            return this;
        }

        public Builder setBigqueryTableSpecs(@Nullable Input<List<EntryBigqueryTableSpecGetArgs>> bigqueryTableSpecs) {
            this.bigqueryTableSpecs = bigqueryTableSpecs;
            return this;
        }

        public Builder setBigqueryTableSpecs(@Nullable List<EntryBigqueryTableSpecGetArgs> bigqueryTableSpecs) {
            this.bigqueryTableSpecs = Input.ofNullable(bigqueryTableSpecs);
            return this;
        }

        public Builder setDescription(@Nullable Input<String> description) {
            this.description = description;
            return this;
        }

        public Builder setDescription(@Nullable String description) {
            this.description = Input.ofNullable(description);
            return this;
        }

        public Builder setDisplayName(@Nullable Input<String> displayName) {
            this.displayName = displayName;
            return this;
        }

        public Builder setDisplayName(@Nullable String displayName) {
            this.displayName = Input.ofNullable(displayName);
            return this;
        }

        public Builder setEntryGroup(@Nullable Input<String> entryGroup) {
            this.entryGroup = entryGroup;
            return this;
        }

        public Builder setEntryGroup(@Nullable String entryGroup) {
            this.entryGroup = Input.ofNullable(entryGroup);
            return this;
        }

        public Builder setEntryId(@Nullable Input<String> entryId) {
            this.entryId = entryId;
            return this;
        }

        public Builder setEntryId(@Nullable String entryId) {
            this.entryId = Input.ofNullable(entryId);
            return this;
        }

        public Builder setGcsFilesetSpec(@Nullable Input<EntryGcsFilesetSpecGetArgs> gcsFilesetSpec) {
            this.gcsFilesetSpec = gcsFilesetSpec;
            return this;
        }

        public Builder setGcsFilesetSpec(@Nullable EntryGcsFilesetSpecGetArgs gcsFilesetSpec) {
            this.gcsFilesetSpec = Input.ofNullable(gcsFilesetSpec);
            return this;
        }

        public Builder setIntegratedSystem(@Nullable Input<String> integratedSystem) {
            this.integratedSystem = integratedSystem;
            return this;
        }

        public Builder setIntegratedSystem(@Nullable String integratedSystem) {
            this.integratedSystem = Input.ofNullable(integratedSystem);
            return this;
        }

        public Builder setLinkedResource(@Nullable Input<String> linkedResource) {
            this.linkedResource = linkedResource;
            return this;
        }

        public Builder setLinkedResource(@Nullable String linkedResource) {
            this.linkedResource = Input.ofNullable(linkedResource);
            return this;
        }

        public Builder setName(@Nullable Input<String> name) {
            this.name = name;
            return this;
        }

        public Builder setName(@Nullable String name) {
            this.name = Input.ofNullable(name);
            return this;
        }

        public Builder setSchema(@Nullable Input<String> schema) {
            this.schema = schema;
            return this;
        }

        public Builder setSchema(@Nullable String schema) {
            this.schema = Input.ofNullable(schema);
            return this;
        }

        public Builder setType(@Nullable Input<String> type) {
            this.type = type;
            return this;
        }

        public Builder setType(@Nullable String type) {
            this.type = Input.ofNullable(type);
            return this;
        }

        public Builder setUserSpecifiedSystem(@Nullable Input<String> userSpecifiedSystem) {
            this.userSpecifiedSystem = userSpecifiedSystem;
            return this;
        }

        public Builder setUserSpecifiedSystem(@Nullable String userSpecifiedSystem) {
            this.userSpecifiedSystem = Input.ofNullable(userSpecifiedSystem);
            return this;
        }

        public Builder setUserSpecifiedType(@Nullable Input<String> userSpecifiedType) {
            this.userSpecifiedType = userSpecifiedType;
            return this;
        }

        public Builder setUserSpecifiedType(@Nullable String userSpecifiedType) {
            this.userSpecifiedType = Input.ofNullable(userSpecifiedType);
            return this;
        }
        public EntryState build() {
            return new EntryState(bigqueryDateShardedSpecs, bigqueryTableSpecs, description, displayName, entryGroup, entryId, gcsFilesetSpec, integratedSystem, linkedResource, name, schema, type, userSpecifiedSystem, userSpecifiedType);
        }
    }
}
