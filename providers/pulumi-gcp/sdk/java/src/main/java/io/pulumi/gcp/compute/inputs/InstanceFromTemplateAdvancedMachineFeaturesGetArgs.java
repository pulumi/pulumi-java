// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.compute.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.Integer;
import java.util.Objects;
import javax.annotation.Nullable;


public final class InstanceFromTemplateAdvancedMachineFeaturesGetArgs extends io.pulumi.resources.ResourceArgs {

    public static final InstanceFromTemplateAdvancedMachineFeaturesGetArgs Empty = new InstanceFromTemplateAdvancedMachineFeaturesGetArgs();

    @Import(name="enableNestedVirtualization")
      private final @Nullable Output<Boolean> enableNestedVirtualization;

    public Output<Boolean> enableNestedVirtualization() {
        return this.enableNestedVirtualization == null ? Codegen.empty() : this.enableNestedVirtualization;
    }

    @Import(name="threadsPerCore")
      private final @Nullable Output<Integer> threadsPerCore;

    public Output<Integer> threadsPerCore() {
        return this.threadsPerCore == null ? Codegen.empty() : this.threadsPerCore;
    }

    public InstanceFromTemplateAdvancedMachineFeaturesGetArgs(
        @Nullable Output<Boolean> enableNestedVirtualization,
        @Nullable Output<Integer> threadsPerCore) {
        this.enableNestedVirtualization = enableNestedVirtualization;
        this.threadsPerCore = threadsPerCore;
    }

    private InstanceFromTemplateAdvancedMachineFeaturesGetArgs() {
        this.enableNestedVirtualization = Codegen.empty();
        this.threadsPerCore = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(InstanceFromTemplateAdvancedMachineFeaturesGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<Boolean> enableNestedVirtualization;
        private @Nullable Output<Integer> threadsPerCore;

        public Builder() {
    	      // Empty
        }

        public Builder(InstanceFromTemplateAdvancedMachineFeaturesGetArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.enableNestedVirtualization = defaults.enableNestedVirtualization;
    	      this.threadsPerCore = defaults.threadsPerCore;
        }

        public Builder enableNestedVirtualization(@Nullable Output<Boolean> enableNestedVirtualization) {
            this.enableNestedVirtualization = enableNestedVirtualization;
            return this;
        }
        public Builder enableNestedVirtualization(@Nullable Boolean enableNestedVirtualization) {
            this.enableNestedVirtualization = Codegen.ofNullable(enableNestedVirtualization);
            return this;
        }
        public Builder threadsPerCore(@Nullable Output<Integer> threadsPerCore) {
            this.threadsPerCore = threadsPerCore;
            return this;
        }
        public Builder threadsPerCore(@Nullable Integer threadsPerCore) {
            this.threadsPerCore = Codegen.ofNullable(threadsPerCore);
            return this;
        }        public InstanceFromTemplateAdvancedMachineFeaturesGetArgs build() {
            return new InstanceFromTemplateAdvancedMachineFeaturesGetArgs(enableNestedVirtualization, threadsPerCore);
        }
    }
}
