// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.storage.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import io.pulumi.gcp.storage.inputs.TransferJobScheduleGetArgs;
import io.pulumi.gcp.storage.inputs.TransferJobTransferSpecGetArgs;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class TransferJobState extends io.pulumi.resources.ResourceArgs {

    public static final TransferJobState Empty = new TransferJobState();

    /**
     * When the Transfer Job was created.
     * 
     */
    @InputImport(name="creationTime")
        private final @Nullable Input<String> creationTime;

    public Input<String> getCreationTime() {
        return this.creationTime == null ? Input.empty() : this.creationTime;
    }

    /**
     * When the Transfer Job was deleted.
     * 
     */
    @InputImport(name="deletionTime")
        private final @Nullable Input<String> deletionTime;

    public Input<String> getDeletionTime() {
        return this.deletionTime == null ? Input.empty() : this.deletionTime;
    }

    /**
     * Unique description to identify the Transfer Job.
     * 
     */
    @InputImport(name="description")
        private final @Nullable Input<String> description;

    public Input<String> getDescription() {
        return this.description == null ? Input.empty() : this.description;
    }

    /**
     * When the Transfer Job was last modified.
     * 
     */
    @InputImport(name="lastModificationTime")
        private final @Nullable Input<String> lastModificationTime;

    public Input<String> getLastModificationTime() {
        return this.lastModificationTime == null ? Input.empty() : this.lastModificationTime;
    }

    /**
     * The name of the Transfer Job.
     * 
     */
    @InputImport(name="name")
        private final @Nullable Input<String> name;

    public Input<String> getName() {
        return this.name == null ? Input.empty() : this.name;
    }

    /**
     * The project in which the resource belongs. If it
     * is not provided, the provider project is used.
     * 
     */
    @InputImport(name="project")
        private final @Nullable Input<String> project;

    public Input<String> getProject() {
        return this.project == null ? Input.empty() : this.project;
    }

    /**
     * Schedule specification defining when the Transfer Job should be scheduled to start, end and what time to run. Structure documented below.
     * 
     */
    @InputImport(name="schedule")
        private final @Nullable Input<TransferJobScheduleGetArgs> schedule;

    public Input<TransferJobScheduleGetArgs> getSchedule() {
        return this.schedule == null ? Input.empty() : this.schedule;
    }

    /**
     * Status of the job. Default: `ENABLED`. **NOTE: The effect of the new job status takes place during a subsequent job run. For example, if you change the job status from ENABLED to DISABLED, and an operation spawned by the transfer is running, the status change would not affect the current operation.**
     * 
     */
    @InputImport(name="status")
        private final @Nullable Input<String> status;

    public Input<String> getStatus() {
        return this.status == null ? Input.empty() : this.status;
    }

    /**
     * Transfer specification. Structure documented below.
     * 
     */
    @InputImport(name="transferSpec")
        private final @Nullable Input<TransferJobTransferSpecGetArgs> transferSpec;

    public Input<TransferJobTransferSpecGetArgs> getTransferSpec() {
        return this.transferSpec == null ? Input.empty() : this.transferSpec;
    }

    public TransferJobState(
        @Nullable Input<String> creationTime,
        @Nullable Input<String> deletionTime,
        @Nullable Input<String> description,
        @Nullable Input<String> lastModificationTime,
        @Nullable Input<String> name,
        @Nullable Input<String> project,
        @Nullable Input<TransferJobScheduleGetArgs> schedule,
        @Nullable Input<String> status,
        @Nullable Input<TransferJobTransferSpecGetArgs> transferSpec) {
        this.creationTime = creationTime;
        this.deletionTime = deletionTime;
        this.description = description;
        this.lastModificationTime = lastModificationTime;
        this.name = name;
        this.project = project;
        this.schedule = schedule;
        this.status = status;
        this.transferSpec = transferSpec;
    }

    private TransferJobState() {
        this.creationTime = Input.empty();
        this.deletionTime = Input.empty();
        this.description = Input.empty();
        this.lastModificationTime = Input.empty();
        this.name = Input.empty();
        this.project = Input.empty();
        this.schedule = Input.empty();
        this.status = Input.empty();
        this.transferSpec = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TransferJobState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> creationTime;
        private @Nullable Input<String> deletionTime;
        private @Nullable Input<String> description;
        private @Nullable Input<String> lastModificationTime;
        private @Nullable Input<String> name;
        private @Nullable Input<String> project;
        private @Nullable Input<TransferJobScheduleGetArgs> schedule;
        private @Nullable Input<String> status;
        private @Nullable Input<TransferJobTransferSpecGetArgs> transferSpec;

        public Builder() {
    	      // Empty
        }

        public Builder(TransferJobState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.creationTime = defaults.creationTime;
    	      this.deletionTime = defaults.deletionTime;
    	      this.description = defaults.description;
    	      this.lastModificationTime = defaults.lastModificationTime;
    	      this.name = defaults.name;
    	      this.project = defaults.project;
    	      this.schedule = defaults.schedule;
    	      this.status = defaults.status;
    	      this.transferSpec = defaults.transferSpec;
        }

        public Builder setCreationTime(@Nullable Input<String> creationTime) {
            this.creationTime = creationTime;
            return this;
        }

        public Builder setCreationTime(@Nullable String creationTime) {
            this.creationTime = Input.ofNullable(creationTime);
            return this;
        }

        public Builder setDeletionTime(@Nullable Input<String> deletionTime) {
            this.deletionTime = deletionTime;
            return this;
        }

        public Builder setDeletionTime(@Nullable String deletionTime) {
            this.deletionTime = Input.ofNullable(deletionTime);
            return this;
        }

        public Builder setDescription(@Nullable Input<String> description) {
            this.description = description;
            return this;
        }

        public Builder setDescription(@Nullable String description) {
            this.description = Input.ofNullable(description);
            return this;
        }

        public Builder setLastModificationTime(@Nullable Input<String> lastModificationTime) {
            this.lastModificationTime = lastModificationTime;
            return this;
        }

        public Builder setLastModificationTime(@Nullable String lastModificationTime) {
            this.lastModificationTime = Input.ofNullable(lastModificationTime);
            return this;
        }

        public Builder setName(@Nullable Input<String> name) {
            this.name = name;
            return this;
        }

        public Builder setName(@Nullable String name) {
            this.name = Input.ofNullable(name);
            return this;
        }

        public Builder setProject(@Nullable Input<String> project) {
            this.project = project;
            return this;
        }

        public Builder setProject(@Nullable String project) {
            this.project = Input.ofNullable(project);
            return this;
        }

        public Builder setSchedule(@Nullable Input<TransferJobScheduleGetArgs> schedule) {
            this.schedule = schedule;
            return this;
        }

        public Builder setSchedule(@Nullable TransferJobScheduleGetArgs schedule) {
            this.schedule = Input.ofNullable(schedule);
            return this;
        }

        public Builder setStatus(@Nullable Input<String> status) {
            this.status = status;
            return this;
        }

        public Builder setStatus(@Nullable String status) {
            this.status = Input.ofNullable(status);
            return this;
        }

        public Builder setTransferSpec(@Nullable Input<TransferJobTransferSpecGetArgs> transferSpec) {
            this.transferSpec = transferSpec;
            return this;
        }

        public Builder setTransferSpec(@Nullable TransferJobTransferSpecGetArgs transferSpec) {
            this.transferSpec = Input.ofNullable(transferSpec);
            return this;
        }
        public TransferJobState build() {
            return new TransferJobState(creationTime, deletionTime, description, lastModificationTime, name, project, schedule, status, transferSpec);
        }
    }
}
