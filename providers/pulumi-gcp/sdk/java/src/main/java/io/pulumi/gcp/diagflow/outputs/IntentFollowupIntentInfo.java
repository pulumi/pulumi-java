// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.diagflow.outputs;

import io.pulumi.core.annotations.OutputCustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class IntentFollowupIntentInfo {
    private final @Nullable String followupIntentName;
    /**
     * The unique identifier of the parent intent in the chain of followup intents.
     * Format: projects/<Project ID>/agent/intents/<Intent ID>.
     * 
     */
    private final @Nullable String parentFollowupIntentName;

    @OutputCustomType.Constructor({"followupIntentName","parentFollowupIntentName"})
    private IntentFollowupIntentInfo(
        @Nullable String followupIntentName,
        @Nullable String parentFollowupIntentName) {
        this.followupIntentName = followupIntentName;
        this.parentFollowupIntentName = parentFollowupIntentName;
    }

    public Optional<String> getFollowupIntentName() {
        return Optional.ofNullable(this.followupIntentName);
    }
    /**
     * The unique identifier of the parent intent in the chain of followup intents.
     * Format: projects/<Project ID>/agent/intents/<Intent ID>.
     * 
     */
    public Optional<String> getParentFollowupIntentName() {
        return Optional.ofNullable(this.parentFollowupIntentName);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(IntentFollowupIntentInfo defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String followupIntentName;
        private @Nullable String parentFollowupIntentName;

        public Builder() {
    	      // Empty
        }

        public Builder(IntentFollowupIntentInfo defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.followupIntentName = defaults.followupIntentName;
    	      this.parentFollowupIntentName = defaults.parentFollowupIntentName;
        }

        public Builder setFollowupIntentName(@Nullable String followupIntentName) {
            this.followupIntentName = followupIntentName;
            return this;
        }

        public Builder setParentFollowupIntentName(@Nullable String parentFollowupIntentName) {
            this.parentFollowupIntentName = parentFollowupIntentName;
            return this;
        }
        public IntentFollowupIntentInfo build() {
            return new IntentFollowupIntentInfo(followupIntentName, parentFollowupIntentName);
        }
    }
}
