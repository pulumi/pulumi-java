// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.filestore.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class InstanceNetworkArgs extends io.pulumi.resources.ResourceArgs {

    public static final InstanceNetworkArgs Empty = new InstanceNetworkArgs();

    @InputImport(name="connectMode")
    private final @Nullable Input<String> connectMode;

    public Input<String> getConnectMode() {
        return this.connectMode == null ? Input.empty() : this.connectMode;
    }

    @InputImport(name="ipAddresses")
    private final @Nullable Input<List<String>> ipAddresses;

    public Input<List<String>> getIpAddresses() {
        return this.ipAddresses == null ? Input.empty() : this.ipAddresses;
    }

    @InputImport(name="modes", required=true)
    private final Input<List<String>> modes;

    public Input<List<String>> getModes() {
        return this.modes;
    }

    @InputImport(name="network", required=true)
    private final Input<String> network;

    public Input<String> getNetwork() {
        return this.network;
    }

    @InputImport(name="reservedIpRange")
    private final @Nullable Input<String> reservedIpRange;

    public Input<String> getReservedIpRange() {
        return this.reservedIpRange == null ? Input.empty() : this.reservedIpRange;
    }

    public InstanceNetworkArgs(
        @Nullable Input<String> connectMode,
        @Nullable Input<List<String>> ipAddresses,
        Input<List<String>> modes,
        Input<String> network,
        @Nullable Input<String> reservedIpRange) {
        this.connectMode = connectMode;
        this.ipAddresses = ipAddresses;
        this.modes = Objects.requireNonNull(modes, "expected parameter 'modes' to be non-null");
        this.network = Objects.requireNonNull(network, "expected parameter 'network' to be non-null");
        this.reservedIpRange = reservedIpRange;
    }

    private InstanceNetworkArgs() {
        this.connectMode = Input.empty();
        this.ipAddresses = Input.empty();
        this.modes = Input.empty();
        this.network = Input.empty();
        this.reservedIpRange = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(InstanceNetworkArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> connectMode;
        private @Nullable Input<List<String>> ipAddresses;
        private Input<List<String>> modes;
        private Input<String> network;
        private @Nullable Input<String> reservedIpRange;

        public Builder() {
    	      // Empty
        }

        public Builder(InstanceNetworkArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.connectMode = defaults.connectMode;
    	      this.ipAddresses = defaults.ipAddresses;
    	      this.modes = defaults.modes;
    	      this.network = defaults.network;
    	      this.reservedIpRange = defaults.reservedIpRange;
        }

        public Builder setConnectMode(@Nullable Input<String> connectMode) {
            this.connectMode = connectMode;
            return this;
        }

        public Builder setConnectMode(@Nullable String connectMode) {
            this.connectMode = Input.ofNullable(connectMode);
            return this;
        }

        public Builder setIpAddresses(@Nullable Input<List<String>> ipAddresses) {
            this.ipAddresses = ipAddresses;
            return this;
        }

        public Builder setIpAddresses(@Nullable List<String> ipAddresses) {
            this.ipAddresses = Input.ofNullable(ipAddresses);
            return this;
        }

        public Builder setModes(Input<List<String>> modes) {
            this.modes = Objects.requireNonNull(modes);
            return this;
        }

        public Builder setModes(List<String> modes) {
            this.modes = Input.of(Objects.requireNonNull(modes));
            return this;
        }

        public Builder setNetwork(Input<String> network) {
            this.network = Objects.requireNonNull(network);
            return this;
        }

        public Builder setNetwork(String network) {
            this.network = Input.of(Objects.requireNonNull(network));
            return this;
        }

        public Builder setReservedIpRange(@Nullable Input<String> reservedIpRange) {
            this.reservedIpRange = reservedIpRange;
            return this;
        }

        public Builder setReservedIpRange(@Nullable String reservedIpRange) {
            this.reservedIpRange = Input.ofNullable(reservedIpRange);
            return this;
        }

        public InstanceNetworkArgs build() {
            return new InstanceNetworkArgs(connectMode, ipAddresses, modes, network, reservedIpRange);
        }
    }
}
