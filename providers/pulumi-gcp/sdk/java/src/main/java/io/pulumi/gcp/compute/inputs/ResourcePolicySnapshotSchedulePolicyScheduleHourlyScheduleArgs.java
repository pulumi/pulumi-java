// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.compute.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;


public final class ResourcePolicySnapshotSchedulePolicyScheduleHourlyScheduleArgs extends io.pulumi.resources.ResourceArgs {

    public static final ResourcePolicySnapshotSchedulePolicyScheduleHourlyScheduleArgs Empty = new ResourcePolicySnapshotSchedulePolicyScheduleHourlyScheduleArgs();

    /**
     * The number of hours between snapshots.
     * 
     */
    @InputImport(name="hoursInCycle", required=true)
        private final Input<Integer> hoursInCycle;

    public Input<Integer> getHoursInCycle() {
        return this.hoursInCycle;
    }

    /**
     * The start time of the schedule. The timestamp is an RFC3339 string.
     * 
     */
    @InputImport(name="startTime", required=true)
        private final Input<String> startTime;

    public Input<String> getStartTime() {
        return this.startTime;
    }

    public ResourcePolicySnapshotSchedulePolicyScheduleHourlyScheduleArgs(
        Input<Integer> hoursInCycle,
        Input<String> startTime) {
        this.hoursInCycle = Objects.requireNonNull(hoursInCycle, "expected parameter 'hoursInCycle' to be non-null");
        this.startTime = Objects.requireNonNull(startTime, "expected parameter 'startTime' to be non-null");
    }

    private ResourcePolicySnapshotSchedulePolicyScheduleHourlyScheduleArgs() {
        this.hoursInCycle = Input.empty();
        this.startTime = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ResourcePolicySnapshotSchedulePolicyScheduleHourlyScheduleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<Integer> hoursInCycle;
        private Input<String> startTime;

        public Builder() {
    	      // Empty
        }

        public Builder(ResourcePolicySnapshotSchedulePolicyScheduleHourlyScheduleArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.hoursInCycle = defaults.hoursInCycle;
    	      this.startTime = defaults.startTime;
        }

        public Builder setHoursInCycle(Input<Integer> hoursInCycle) {
            this.hoursInCycle = Objects.requireNonNull(hoursInCycle);
            return this;
        }

        public Builder setHoursInCycle(Integer hoursInCycle) {
            this.hoursInCycle = Input.of(Objects.requireNonNull(hoursInCycle));
            return this;
        }

        public Builder setStartTime(Input<String> startTime) {
            this.startTime = Objects.requireNonNull(startTime);
            return this;
        }

        public Builder setStartTime(String startTime) {
            this.startTime = Input.of(Objects.requireNonNull(startTime));
            return this;
        }
        public ResourcePolicySnapshotSchedulePolicyScheduleHourlyScheduleArgs build() {
            return new ResourcePolicySnapshotSchedulePolicyScheduleHourlyScheduleArgs(hoursInCycle, startTime);
        }
    }
}
