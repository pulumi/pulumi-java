// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.essentialcontacts;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Export;
import io.pulumi.core.annotations.ResourceType;
import io.pulumi.gcp.Utilities;
import io.pulumi.gcp.essentialcontacts.ContactArgs;
import io.pulumi.gcp.essentialcontacts.inputs.ContactState;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * A contact that will receive notifications from Google Cloud.
 * 
 * To get more information about Contact, see:
 * 
 * * [API documentation](https://cloud.google.com/resource-manager/docs/reference/essentialcontacts/rest/v1/projects.contacts)
 * * How-to Guides
 *     * [Official Documentation](https://cloud.google.com/resource-manager/docs/managing-notification-contacts)
 * 
 * > **Warning:** If you are using User ADCs (Application Default Credentials) with this resource,
 * you must specify a `billing_project` and set `user_project_override` to true
 * in the provider configuration. Otherwise the Essential Contacts API will return a 403 error.
 * Your account must have the `serviceusage.services.use` permission on the
 * `billing_project` you defined.
 * 
 * {{% examples %}}
 * ## Example Usage
 * {{% example %}}
 * ### Essential Contact
 * 
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 * 
 * const project = gcp.organizations.getProject({});
 * const contact = new gcp.essentialcontacts.Contact("contact", {
 *     parent: project.then(project => project.id),
 *     email: "foo@bar.com",
 *     languageTag: "en-GB",
 *     notificationCategorySubscriptions: ["ALL"],
 * });
 * ```
 * ```python
 * import pulumi
 * import pulumi_gcp as gcp
 * 
 * project = gcp.organizations.get_project()
 * contact = gcp.essentialcontacts.Contact("contact",
 *     parent=project.id,
 *     email="foo@bar.com",
 *     language_tag="en-GB",
 *     notification_category_subscriptions=["ALL"])
 * ```
 * ```csharp
 * using Pulumi;
 * using Gcp = Pulumi.Gcp;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var project = Output.Create(Gcp.Organizations.GetProject.InvokeAsync());
 *         var contact = new Gcp.EssentialContacts.Contact("contact", new Gcp.EssentialContacts.ContactArgs
 *         {
 *             Parent = project.Apply(project => project.Id),
 *             Email = "foo@bar.com",
 *             LanguageTag = "en-GB",
 *             NotificationCategorySubscriptions = 
 *             {
 *                 "ALL",
 *             },
 *         });
 *     }
 * 
 * }
 * ```
 * ```go
 * package main
 * 
 * import (
 * 	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/essentialcontacts"
 * 	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/organizations"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		project, err := organizations.LookupProject(ctx, nil, nil)
 * 		if err != nil {
 * 			return err
 * 		}
 * 		_, err = essentialcontacts.NewContact(ctx, "contact", &essentialcontacts.ContactArgs{
 * 			Parent:      pulumi.String(project.Id),
 * 			Email:       pulumi.String("foo@bar.com"),
 * 			LanguageTag: pulumi.String("en-GB"),
 * 			NotificationCategorySubscriptions: pulumi.StringArray{
 * 				pulumi.String("ALL"),
 * 			},
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * ```
 * {{% /example %}}
 * {{% /examples %}}
 * 
 * ## Import
 * 
 * Contact can be imported using any of these accepted formats
 * 
 * ```sh
 *  $ pulumi import gcp:essentialcontacts/contact:Contact default {{name}}
 * ```
 * 
 *  
 */
@ResourceType(type="gcp:essentialcontacts/contact:Contact")
public class Contact extends io.pulumi.resources.CustomResource {
    /**
     * The email address to send notifications to. This does not need to be a Google account.
     * 
     */
    @Export(name="email", type=String.class, parameters={})
    private Output<String> email;

    /**
     * @return The email address to send notifications to. This does not need to be a Google account.
     * 
     */
    public Output<String> getEmail() {
        return this.email;
    }
    /**
     * The preferred language for notifications, as a ISO 639-1 language code. See Supported languages for a list of supported languages.
     * 
     */
    @Export(name="languageTag", type=String.class, parameters={})
    private Output<String> languageTag;

    /**
     * @return The preferred language for notifications, as a ISO 639-1 language code. See Supported languages for a list of supported languages.
     * 
     */
    public Output<String> getLanguageTag() {
        return this.languageTag;
    }
    /**
     * The identifier for the contact. Format: {resourceType}/{resource_id}/contacts/{contact_id}
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The identifier for the contact. Format: {resourceType}/{resource_id}/contacts/{contact_id}
     * 
     */
    public Output<String> getName() {
        return this.name;
    }
    /**
     * The categories of notifications that the contact will receive communications for.
     * 
     */
    @Export(name="notificationCategorySubscriptions", type=List.class, parameters={String.class})
    private Output<List<String>> notificationCategorySubscriptions;

    /**
     * @return The categories of notifications that the contact will receive communications for.
     * 
     */
    public Output<List<String>> getNotificationCategorySubscriptions() {
        return this.notificationCategorySubscriptions;
    }
    /**
     * The resource to save this contact for. Format: organizations/{organization_id}, folders/{folder_id} or projects/{project_id}
     * 
     */
    @Export(name="parent", type=String.class, parameters={})
    private Output<String> parent;

    /**
     * @return The resource to save this contact for. Format: organizations/{organization_id}, folders/{folder_id} or projects/{project_id}
     * 
     */
    public Output<String> getParent() {
        return this.parent;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Contact(String name) {
        this(name, ContactArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Contact(String name, ContactArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Contact(String name, ContactArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("gcp:essentialcontacts/contact:Contact", name, args == null ? ContactArgs.Empty : args, makeResourceOptions(options, Output.empty()));
    }

    private Contact(String name, Output<String> id, @Nullable ContactState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("gcp:essentialcontacts/contact:Contact", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Contact get(String name, Output<String> id, @Nullable ContactState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new Contact(name, id, state, options);
    }
}
