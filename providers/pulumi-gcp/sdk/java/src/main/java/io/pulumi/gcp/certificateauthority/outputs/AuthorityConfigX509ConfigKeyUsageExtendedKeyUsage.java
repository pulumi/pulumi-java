// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.certificateauthority.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.Boolean;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class AuthorityConfigX509ConfigKeyUsageExtendedKeyUsage {
    private final @Nullable Boolean clientAuth;
    private final @Nullable Boolean codeSigning;
    private final @Nullable Boolean emailProtection;
    private final @Nullable Boolean ocspSigning;
    private final @Nullable Boolean serverAuth;
    private final @Nullable Boolean timeStamping;

    @OutputCustomType.Constructor({"clientAuth","codeSigning","emailProtection","ocspSigning","serverAuth","timeStamping"})
    private AuthorityConfigX509ConfigKeyUsageExtendedKeyUsage(
        @Nullable Boolean clientAuth,
        @Nullable Boolean codeSigning,
        @Nullable Boolean emailProtection,
        @Nullable Boolean ocspSigning,
        @Nullable Boolean serverAuth,
        @Nullable Boolean timeStamping) {
        this.clientAuth = clientAuth;
        this.codeSigning = codeSigning;
        this.emailProtection = emailProtection;
        this.ocspSigning = ocspSigning;
        this.serverAuth = serverAuth;
        this.timeStamping = timeStamping;
    }

    public Optional<Boolean> getClientAuth() {
        return Optional.ofNullable(this.clientAuth);
    }
    public Optional<Boolean> getCodeSigning() {
        return Optional.ofNullable(this.codeSigning);
    }
    public Optional<Boolean> getEmailProtection() {
        return Optional.ofNullable(this.emailProtection);
    }
    public Optional<Boolean> getOcspSigning() {
        return Optional.ofNullable(this.ocspSigning);
    }
    public Optional<Boolean> getServerAuth() {
        return Optional.ofNullable(this.serverAuth);
    }
    public Optional<Boolean> getTimeStamping() {
        return Optional.ofNullable(this.timeStamping);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AuthorityConfigX509ConfigKeyUsageExtendedKeyUsage defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Boolean clientAuth;
        private @Nullable Boolean codeSigning;
        private @Nullable Boolean emailProtection;
        private @Nullable Boolean ocspSigning;
        private @Nullable Boolean serverAuth;
        private @Nullable Boolean timeStamping;

        public Builder() {
    	      // Empty
        }

        public Builder(AuthorityConfigX509ConfigKeyUsageExtendedKeyUsage defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.clientAuth = defaults.clientAuth;
    	      this.codeSigning = defaults.codeSigning;
    	      this.emailProtection = defaults.emailProtection;
    	      this.ocspSigning = defaults.ocspSigning;
    	      this.serverAuth = defaults.serverAuth;
    	      this.timeStamping = defaults.timeStamping;
        }

        public Builder setClientAuth(@Nullable Boolean clientAuth) {
            this.clientAuth = clientAuth;
            return this;
        }

        public Builder setCodeSigning(@Nullable Boolean codeSigning) {
            this.codeSigning = codeSigning;
            return this;
        }

        public Builder setEmailProtection(@Nullable Boolean emailProtection) {
            this.emailProtection = emailProtection;
            return this;
        }

        public Builder setOcspSigning(@Nullable Boolean ocspSigning) {
            this.ocspSigning = ocspSigning;
            return this;
        }

        public Builder setServerAuth(@Nullable Boolean serverAuth) {
            this.serverAuth = serverAuth;
            return this;
        }

        public Builder setTimeStamping(@Nullable Boolean timeStamping) {
            this.timeStamping = timeStamping;
            return this;
        }

        public AuthorityConfigX509ConfigKeyUsageExtendedKeyUsage build() {
            return new AuthorityConfigX509ConfigKeyUsageExtendedKeyUsage(clientAuth, codeSigning, emailProtection, ocspSigning, serverAuth, timeStamping);
        }
    }
}
