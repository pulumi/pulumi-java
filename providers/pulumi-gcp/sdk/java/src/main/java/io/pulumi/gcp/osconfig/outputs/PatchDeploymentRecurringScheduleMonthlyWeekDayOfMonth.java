// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.osconfig.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@OutputCustomType
public final class PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonth {
    private final String dayOfWeek;
    private final Integer weekOrdinal;

    @OutputCustomType.Constructor({"dayOfWeek","weekOrdinal"})
    private PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonth(
        String dayOfWeek,
        Integer weekOrdinal) {
        this.dayOfWeek = Objects.requireNonNull(dayOfWeek);
        this.weekOrdinal = Objects.requireNonNull(weekOrdinal);
    }

    public String getDayOfWeek() {
        return this.dayOfWeek;
    }
    public Integer getWeekOrdinal() {
        return this.weekOrdinal;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonth defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String dayOfWeek;
        private Integer weekOrdinal;

        public Builder() {
    	      // Empty
        }

        public Builder(PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonth defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dayOfWeek = defaults.dayOfWeek;
    	      this.weekOrdinal = defaults.weekOrdinal;
        }

        public Builder setDayOfWeek(String dayOfWeek) {
            this.dayOfWeek = Objects.requireNonNull(dayOfWeek);
            return this;
        }

        public Builder setWeekOrdinal(Integer weekOrdinal) {
            this.weekOrdinal = Objects.requireNonNull(weekOrdinal);
            return this;
        }

        public PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonth build() {
            return new PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonth(dayOfWeek, weekOrdinal);
        }
    }
}
