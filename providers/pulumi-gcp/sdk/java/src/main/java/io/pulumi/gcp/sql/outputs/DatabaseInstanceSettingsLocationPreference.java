// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.sql.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class DatabaseInstanceSettingsLocationPreference {
    private final @Nullable String followGaeApplication;
    private final @Nullable String zone;

    @OutputCustomType.Constructor({"followGaeApplication","zone"})
    private DatabaseInstanceSettingsLocationPreference(
        @Nullable String followGaeApplication,
        @Nullable String zone) {
        this.followGaeApplication = followGaeApplication;
        this.zone = zone;
    }

    public Optional<String> getFollowGaeApplication() {
        return Optional.ofNullable(this.followGaeApplication);
    }
    public Optional<String> getZone() {
        return Optional.ofNullable(this.zone);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DatabaseInstanceSettingsLocationPreference defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String followGaeApplication;
        private @Nullable String zone;

        public Builder() {
    	      // Empty
        }

        public Builder(DatabaseInstanceSettingsLocationPreference defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.followGaeApplication = defaults.followGaeApplication;
    	      this.zone = defaults.zone;
        }

        public Builder setFollowGaeApplication(@Nullable String followGaeApplication) {
            this.followGaeApplication = followGaeApplication;
            return this;
        }

        public Builder setZone(@Nullable String zone) {
            this.zone = zone;
            return this;
        }

        public DatabaseInstanceSettingsLocationPreference build() {
            return new DatabaseInstanceSettingsLocationPreference(followGaeApplication, zone);
        }
    }
}
