// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.appengine;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Export;
import io.pulumi.core.annotations.ResourceType;
import io.pulumi.gcp.Utilities;
import io.pulumi.gcp.appengine.FlexibleAppVersionArgs;
import io.pulumi.gcp.appengine.inputs.FlexibleAppVersionState;
import io.pulumi.gcp.appengine.outputs.FlexibleAppVersionApiConfig;
import io.pulumi.gcp.appengine.outputs.FlexibleAppVersionAutomaticScaling;
import io.pulumi.gcp.appengine.outputs.FlexibleAppVersionDeployment;
import io.pulumi.gcp.appengine.outputs.FlexibleAppVersionEndpointsApiService;
import io.pulumi.gcp.appengine.outputs.FlexibleAppVersionEntrypoint;
import io.pulumi.gcp.appengine.outputs.FlexibleAppVersionHandler;
import io.pulumi.gcp.appengine.outputs.FlexibleAppVersionLivenessCheck;
import io.pulumi.gcp.appengine.outputs.FlexibleAppVersionManualScaling;
import io.pulumi.gcp.appengine.outputs.FlexibleAppVersionNetwork;
import io.pulumi.gcp.appengine.outputs.FlexibleAppVersionReadinessCheck;
import io.pulumi.gcp.appengine.outputs.FlexibleAppVersionResources;
import io.pulumi.gcp.appengine.outputs.FlexibleAppVersionVpcAccessConnector;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;

/**
 * Flexible App Version resource to create a new version of flexible GAE Application. Based on Google Compute Engine,
 * the App Engine flexible environment automatically scales your app up and down while also balancing the load.
 * Learn about the differences between the standard environment and the flexible environment
 * at https://cloud.google.com/appengine/docs/the-appengine-environments.
 * 
 * > **Note:** The App Engine flexible environment service account uses the member ID `service-[YOUR_PROJECT_NUMBER]@gae-api-prod.google.com.iam.gserviceaccount.com`
 * It should have the App Engine Flexible Environment Service Agent role, which will be applied when the `appengineflex.googleapis.com` service is enabled.
 * 
 * 
 * To get more information about FlexibleAppVersion, see:
 * 
 * * [API documentation](https://cloud.google.com/appengine/docs/admin-api/reference/rest/v1/apps.services.versions)
 * * How-to Guides
 *     * [Official Documentation](https://cloud.google.com/appengine/docs/flexible)
 * 
 * {{% examples %}}
 * ## Example Usage
 * {{% example %}}
 * ### App Engine Flexible App Version
 * 
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 * 
 * const myProject = new gcp.organizations.Project("myProject", {
 *     projectId: "appeng-flex",
 *     orgId: "123456789",
 *     billingAccount: "000000-0000000-0000000-000000",
 * });
 * const app = new gcp.appengine.Application("app", {
 *     project: myProject.projectId,
 *     locationId: "us-central",
 * });
 * const service = new gcp.projects.Service("service", {
 *     project: myProject.projectId,
 *     service: "appengineflex.googleapis.com",
 *     disableDependentServices: false,
 * });
 * const gaeApi = new gcp.projects.IAMMember("gaeApi", {
 *     project: service.project,
 *     role: "roles/compute.networkUser",
 *     member: pulumi.interpolate`serviceAccount:service-${myProject.number}@gae-api-prod.google.com.iam.gserviceaccount.com`,
 * });
 * const bucket = new gcp.storage.Bucket("bucket", {
 *     project: myProject.projectId,
 *     location: "US",
 * });
 * const object = new gcp.storage.BucketObject("object", {
 *     bucket: bucket.name,
 *     source: new pulumi.asset.FileAsset("./test-fixtures/appengine/hello-world.zip"),
 * });
 * const myappV1 = new gcp.appengine.FlexibleAppVersion("myappV1", {
 *     versionId: "v1",
 *     project: gaeApi.project,
 *     service: "default",
 *     runtime: "nodejs",
 *     entrypoint: {
 *         shell: "node ./app.js",
 *     },
 *     deployment: {
 *         zip: {
 *             sourceUrl: pulumi.interpolate`https://storage.googleapis.com/${bucket.name}/${object.name}`,
 *         },
 *     },
 *     livenessCheck: {
 *         path: "/",
 *     },
 *     readinessCheck: {
 *         path: "/",
 *     },
 *     envVariables: {
 *         port: "8080",
 *     },
 *     handlers: [{
 *         urlRegex: ".*\\/my-path\\/*",
 *         securityLevel: "SECURE_ALWAYS",
 *         login: "LOGIN_REQUIRED",
 *         authFailAction: "AUTH_FAIL_ACTION_REDIRECT",
 *         staticFiles: {
 *             path: "my-other-path",
 *             uploadPathRegex: ".*\\/my-path\\/*",
 *         },
 *     }],
 *     automaticScaling: {
 *         coolDownPeriod: "120s",
 *         cpuUtilization: {
 *             targetUtilization: 0.5,
 *         },
 *     },
 *     noopOnDestroy: true,
 * });
 * ```
 * ```python
 * import pulumi
 * import pulumi_gcp as gcp
 * 
 * my_project = gcp.organizations.Project("myProject",
 *     project_id="appeng-flex",
 *     org_id="123456789",
 *     billing_account="000000-0000000-0000000-000000")
 * app = gcp.appengine.Application("app",
 *     project=my_project.project_id,
 *     location_id="us-central")
 * service = gcp.projects.Service("service",
 *     project=my_project.project_id,
 *     service="appengineflex.googleapis.com",
 *     disable_dependent_services=False)
 * gae_api = gcp.projects.IAMMember("gaeApi",
 *     project=service.project,
 *     role="roles/compute.networkUser",
 *     member=my_project.number.apply(lambda number: f"serviceAccount:service-{number}@gae-api-prod.google.com.iam.gserviceaccount.com"))
 * bucket = gcp.storage.Bucket("bucket",
 *     project=my_project.project_id,
 *     location="US")
 * object = gcp.storage.BucketObject("object",
 *     bucket=bucket.name,
 *     source=pulumi.FileAsset("./test-fixtures/appengine/hello-world.zip"))
 * myapp_v1 = gcp.appengine.FlexibleAppVersion("myappV1",
 *     version_id="v1",
 *     project=gae_api.project,
 *     service="default",
 *     runtime="nodejs",
 *     entrypoint=gcp.appengine.FlexibleAppVersionEntrypointArgs(
 *         shell="node ./app.js",
 *     ),
 *     deployment=gcp.appengine.FlexibleAppVersionDeploymentArgs(
 *         zip=gcp.appengine.FlexibleAppVersionDeploymentZipArgs(
 *             source_url=pulumi.Output.all(bucket.name, object.name).apply(lambda bucketName, objectName: f"https://storage.googleapis.com/{bucket_name}/{object_name}"),
 *         ),
 *     ),
 *     liveness_check=gcp.appengine.FlexibleAppVersionLivenessCheckArgs(
 *         path="/",
 *     ),
 *     readiness_check=gcp.appengine.FlexibleAppVersionReadinessCheckArgs(
 *         path="/",
 *     ),
 *     env_variables={
 *         "port": "8080",
 *     },
 *     handlers=[gcp.appengine.FlexibleAppVersionHandlerArgs(
 *         url_regex=".*\\/my-path\\/*",
 *         security_level="SECURE_ALWAYS",
 *         login="LOGIN_REQUIRED",
 *         auth_fail_action="AUTH_FAIL_ACTION_REDIRECT",
 *         static_files=gcp.appengine.FlexibleAppVersionHandlerStaticFilesArgs(
 *             path="my-other-path",
 *             upload_path_regex=".*\\/my-path\\/*",
 *         ),
 *     )],
 *     automatic_scaling=gcp.appengine.FlexibleAppVersionAutomaticScalingArgs(
 *         cool_down_period="120s",
 *         cpu_utilization=gcp.appengine.FlexibleAppVersionAutomaticScalingCpuUtilizationArgs(
 *             target_utilization=0.5,
 *         ),
 *     ),
 *     noop_on_destroy=True)
 * ```
 * ```csharp
 * using Pulumi;
 * using Gcp = Pulumi.Gcp;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var myProject = new Gcp.Organizations.Project("myProject", new Gcp.Organizations.ProjectArgs
 *         {
 *             ProjectId = "appeng-flex",
 *             OrgId = "123456789",
 *             BillingAccount = "000000-0000000-0000000-000000",
 *         });
 *         var app = new Gcp.AppEngine.Application("app", new Gcp.AppEngine.ApplicationArgs
 *         {
 *             Project = myProject.ProjectId,
 *             LocationId = "us-central",
 *         });
 *         var service = new Gcp.Projects.Service("service", new Gcp.Projects.ServiceArgs
 *         {
 *             Project = myProject.ProjectId,
 *             Service = "appengineflex.googleapis.com",
 *             DisableDependentServices = false,
 *         });
 *         var gaeApi = new Gcp.Projects.IAMMember("gaeApi", new Gcp.Projects.IAMMemberArgs
 *         {
 *             Project = service.Project,
 *             Role = "roles/compute.networkUser",
 *             Member = myProject.Number.Apply(number => $"serviceAccount:service-{number}@gae-api-prod.google.com.iam.gserviceaccount.com"),
 *         });
 *         var bucket = new Gcp.Storage.Bucket("bucket", new Gcp.Storage.BucketArgs
 *         {
 *             Project = myProject.ProjectId,
 *             Location = "US",
 *         });
 *         var @object = new Gcp.Storage.BucketObject("object", new Gcp.Storage.BucketObjectArgs
 *         {
 *             Bucket = bucket.Name,
 *             Source = new FileAsset("./test-fixtures/appengine/hello-world.zip"),
 *         });
 *         var myappV1 = new Gcp.AppEngine.FlexibleAppVersion("myappV1", new Gcp.AppEngine.FlexibleAppVersionArgs
 *         {
 *             VersionId = "v1",
 *             Project = gaeApi.Project,
 *             Service = "default",
 *             Runtime = "nodejs",
 *             Entrypoint = new Gcp.AppEngine.Inputs.FlexibleAppVersionEntrypointArgs
 *             {
 *                 Shell = "node ./app.js",
 *             },
 *             Deployment = new Gcp.AppEngine.Inputs.FlexibleAppVersionDeploymentArgs
 *             {
 *                 Zip = new Gcp.AppEngine.Inputs.FlexibleAppVersionDeploymentZipArgs
 *                 {
 *                     SourceUrl = Output.Tuple(bucket.Name, @object.Name).Apply(values =>
 *                     {
 *                         var bucketName = values.Item1;
 *                         var objectName = values.Item2;
 *                         return $"https://storage.googleapis.com/{bucketName}/{objectName}";
 *                     }),
 *                 },
 *             },
 *             LivenessCheck = new Gcp.AppEngine.Inputs.FlexibleAppVersionLivenessCheckArgs
 *             {
 *                 Path = "/",
 *             },
 *             ReadinessCheck = new Gcp.AppEngine.Inputs.FlexibleAppVersionReadinessCheckArgs
 *             {
 *                 Path = "/",
 *             },
 *             EnvVariables = 
 *             {
 *                 { "port", "8080" },
 *             },
 *             Handlers = 
 *             {
 *                 new Gcp.AppEngine.Inputs.FlexibleAppVersionHandlerArgs
 *                 {
 *                     UrlRegex = ".*\\/my-path\\/*",
 *                     SecurityLevel = "SECURE_ALWAYS",
 *                     Login = "LOGIN_REQUIRED",
 *                     AuthFailAction = "AUTH_FAIL_ACTION_REDIRECT",
 *                     StaticFiles = new Gcp.AppEngine.Inputs.FlexibleAppVersionHandlerStaticFilesArgs
 *                     {
 *                         Path = "my-other-path",
 *                         UploadPathRegex = ".*\\/my-path\\/*",
 *                     },
 *                 },
 *             },
 *             AutomaticScaling = new Gcp.AppEngine.Inputs.FlexibleAppVersionAutomaticScalingArgs
 *             {
 *                 CoolDownPeriod = "120s",
 *                 CpuUtilization = new Gcp.AppEngine.Inputs.FlexibleAppVersionAutomaticScalingCpuUtilizationArgs
 *                 {
 *                     TargetUtilization = 0.5,
 *                 },
 *             },
 *             NoopOnDestroy = true,
 *         });
 *     }
 * 
 * }
 * ```
 * ```go
 * package main
 * 
 * import (
 * 	"fmt"
 * 
 * 	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/appengine"
 * 	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/organizations"
 * 	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/projects"
 * 	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/storage"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		myProject, err := organizations.NewProject(ctx, "myProject", &organizations.ProjectArgs{
 * 			ProjectId:      pulumi.String("appeng-flex"),
 * 			OrgId:          pulumi.String("123456789"),
 * 			BillingAccount: pulumi.String("000000-0000000-0000000-000000"),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		_, err = appengine.NewApplication(ctx, "app", &appengine.ApplicationArgs{
 * 			Project:    myProject.ProjectId,
 * 			LocationId: pulumi.String("us-central"),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		service, err := projects.NewService(ctx, "service", &projects.ServiceArgs{
 * 			Project:                  myProject.ProjectId,
 * 			Service:                  pulumi.String("appengineflex.googleapis.com"),
 * 			DisableDependentServices: pulumi.Bool(false),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		gaeApi, err := projects.NewIAMMember(ctx, "gaeApi", &projects.IAMMemberArgs{
 * 			Project: service.Project,
 * 			Role:    pulumi.String("roles/compute.networkUser"),
 * 			Member: myProject.Number.ApplyT(func(number string) (string, error) {
 * 				return fmt.Sprintf("%v%v%v", "serviceAccount:service-", number, "@gae-api-prod.google.com.iam.gserviceaccount.com"), nil
 * 			}).(pulumi.StringOutput),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		bucket, err := storage.NewBucket(ctx, "bucket", &storage.BucketArgs{
 * 			Project:  myProject.ProjectId,
 * 			Location: pulumi.String("US"),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		object, err := storage.NewBucketObject(ctx, "object", &storage.BucketObjectArgs{
 * 			Bucket: bucket.Name,
 * 			Source: pulumi.NewFileAsset("./test-fixtures/appengine/hello-world.zip"),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		_, err = appengine.NewFlexibleAppVersion(ctx, "myappV1", &appengine.FlexibleAppVersionArgs{
 * 			VersionId: pulumi.String("v1"),
 * 			Project:   gaeApi.Project,
 * 			Service:   pulumi.String("default"),
 * 			Runtime:   pulumi.String("nodejs"),
 * 			Entrypoint: &appengine.FlexibleAppVersionEntrypointArgs{
 * 				Shell: pulumi.String("node ./app.js"),
 * 			},
 * 			Deployment: &appengine.FlexibleAppVersionDeploymentArgs{
 * 				Zip: &appengine.FlexibleAppVersionDeploymentZipArgs{
 * 					SourceUrl: pulumi.All(bucket.Name, object.Name).ApplyT(func(_args []interface{}) (string, error) {
 * 						bucketName := _args[0].(string)
 * 						objectName := _args[1].(string)
 * 						return fmt.Sprintf("%v%v%v%v", "https://storage.googleapis.com/", bucketName, "/", objectName), nil
 * 					}).(pulumi.StringOutput),
 * 				},
 * 			},
 * 			LivenessCheck: &appengine.FlexibleAppVersionLivenessCheckArgs{
 * 				Path: pulumi.String("/"),
 * 			},
 * 			ReadinessCheck: &appengine.FlexibleAppVersionReadinessCheckArgs{
 * 				Path: pulumi.String("/"),
 * 			},
 * 			EnvVariables: pulumi.StringMap{
 * 				"port": pulumi.String("8080"),
 * 			},
 * 			Handlers: appengine.FlexibleAppVersionHandlerArray{
 * 				&appengine.FlexibleAppVersionHandlerArgs{
 * 					UrlRegex:       pulumi.String(".*\\/my-path\\/*"),
 * 					SecurityLevel:  pulumi.String("SECURE_ALWAYS"),
 * 					Login:          pulumi.String("LOGIN_REQUIRED"),
 * 					AuthFailAction: pulumi.String("AUTH_FAIL_ACTION_REDIRECT"),
 * 					StaticFiles: &appengine.FlexibleAppVersionHandlerStaticFilesArgs{
 * 						Path:            pulumi.String("my-other-path"),
 * 						UploadPathRegex: pulumi.String(".*\\/my-path\\/*"),
 * 					},
 * 				},
 * 			},
 * 			AutomaticScaling: &appengine.FlexibleAppVersionAutomaticScalingArgs{
 * 				CoolDownPeriod: pulumi.String("120s"),
 * 				CpuUtilization: &appengine.FlexibleAppVersionAutomaticScalingCpuUtilizationArgs{
 * 					TargetUtilization: pulumi.Float64(0.5),
 * 				},
 * 			},
 * 			NoopOnDestroy: pulumi.Bool(true),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * ```
 * {{% /example %}}
 * {{% /examples %}}
 * 
 * ## Import
 * 
 * FlexibleAppVersion can be imported using any of these accepted formats
 * 
 * ```sh
 *  $ pulumi import gcp:appengine/flexibleAppVersion:FlexibleAppVersion default apps/{{project}}/services/{{service}}/versions/{{version_id}}
 * ```
 * 
 * 
 * 
 * ```sh
 *  $ pulumi import gcp:appengine/flexibleAppVersion:FlexibleAppVersion default {{project}}/{{service}}/{{version_id}}
 * ```
 * 
 * 
 * 
 * ```sh
 *  $ pulumi import gcp:appengine/flexibleAppVersion:FlexibleAppVersion default {{service}}/{{version_id}}
 * ```
 * 
 *  
 */
@ResourceType(type="gcp:appengine/flexibleAppVersion:FlexibleAppVersion")
public class FlexibleAppVersion extends io.pulumi.resources.CustomResource {
    /**
     * Serving configuration for Google Cloud Endpoints.
     * Structure is documented below.
     * 
     */
    @Export(name="apiConfig", type=FlexibleAppVersionApiConfig.class, parameters={})
    private Output</* @Nullable */ FlexibleAppVersionApiConfig> apiConfig;

    /**
     * @return Serving configuration for Google Cloud Endpoints.
     * Structure is documented below.
     * 
     */
    public Output</* @Nullable */ FlexibleAppVersionApiConfig> getApiConfig() {
        return this.apiConfig;
    }
    /**
     * Automatic scaling is based on request rate, response latencies, and other application metrics.
     * Structure is documented below.
     * 
     */
    @Export(name="automaticScaling", type=FlexibleAppVersionAutomaticScaling.class, parameters={})
    private Output</* @Nullable */ FlexibleAppVersionAutomaticScaling> automaticScaling;

    /**
     * @return Automatic scaling is based on request rate, response latencies, and other application metrics.
     * Structure is documented below.
     * 
     */
    public Output</* @Nullable */ FlexibleAppVersionAutomaticScaling> getAutomaticScaling() {
        return this.automaticScaling;
    }
    /**
     * Metadata settings that are supplied to this version to enable beta runtime features.
     * 
     */
    @Export(name="betaSettings", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> betaSettings;

    /**
     * @return Metadata settings that are supplied to this version to enable beta runtime features.
     * 
     */
    public Output</* @Nullable */ Map<String,String>> getBetaSettings() {
        return this.betaSettings;
    }
    /**
     * Duration that static files should be cached by web proxies and browsers.
     * Only applicable if the corresponding StaticFilesHandler does not specify its own expiration time.
     * 
     */
    @Export(name="defaultExpiration", type=String.class, parameters={})
    private Output</* @Nullable */ String> defaultExpiration;

    /**
     * @return Duration that static files should be cached by web proxies and browsers.
     * Only applicable if the corresponding StaticFilesHandler does not specify its own expiration time.
     * 
     */
    public Output</* @Nullable */ String> getDefaultExpiration() {
        return this.defaultExpiration;
    }
    /**
     * If set to `true`, the service will be deleted if it is the last version.
     * 
     */
    @Export(name="deleteServiceOnDestroy", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> deleteServiceOnDestroy;

    /**
     * @return If set to `true`, the service will be deleted if it is the last version.
     * 
     */
    public Output</* @Nullable */ Boolean> getDeleteServiceOnDestroy() {
        return this.deleteServiceOnDestroy;
    }
    /**
     * Code and application artifacts that make up this version.
     * Structure is documented below.
     * 
     */
    @Export(name="deployment", type=FlexibleAppVersionDeployment.class, parameters={})
    private Output</* @Nullable */ FlexibleAppVersionDeployment> deployment;

    /**
     * @return Code and application artifacts that make up this version.
     * Structure is documented below.
     * 
     */
    public Output</* @Nullable */ FlexibleAppVersionDeployment> getDeployment() {
        return this.deployment;
    }
    /**
     * Code and application artifacts that make up this version.
     * Structure is documented below.
     * 
     */
    @Export(name="endpointsApiService", type=FlexibleAppVersionEndpointsApiService.class, parameters={})
    private Output</* @Nullable */ FlexibleAppVersionEndpointsApiService> endpointsApiService;

    /**
     * @return Code and application artifacts that make up this version.
     * Structure is documented below.
     * 
     */
    public Output</* @Nullable */ FlexibleAppVersionEndpointsApiService> getEndpointsApiService() {
        return this.endpointsApiService;
    }
    /**
     * The entrypoint for the application.
     * Structure is documented below.
     * 
     */
    @Export(name="entrypoint", type=FlexibleAppVersionEntrypoint.class, parameters={})
    private Output</* @Nullable */ FlexibleAppVersionEntrypoint> entrypoint;

    /**
     * @return The entrypoint for the application.
     * Structure is documented below.
     * 
     */
    public Output</* @Nullable */ FlexibleAppVersionEntrypoint> getEntrypoint() {
        return this.entrypoint;
    }
    /**
     * Environment variables available to the application.  As these are not returned in the API request, the provider will not detect any changes made outside of the config.
     * 
     */
    @Export(name="envVariables", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> envVariables;

    /**
     * @return Environment variables available to the application.  As these are not returned in the API request, the provider will not detect any changes made outside of the config.
     * 
     */
    public Output</* @Nullable */ Map<String,String>> getEnvVariables() {
        return this.envVariables;
    }
    /**
     * An ordered list of URL-matching patterns that should be applied to incoming requests.
     * The first matching URL handles the request and other request handlers are not attempted.
     * Structure is documented below.
     * 
     */
    @Export(name="handlers", type=List.class, parameters={FlexibleAppVersionHandler.class})
    private Output<List<FlexibleAppVersionHandler>> handlers;

    /**
     * @return An ordered list of URL-matching patterns that should be applied to incoming requests.
     * The first matching URL handles the request and other request handlers are not attempted.
     * Structure is documented below.
     * 
     */
    public Output<List<FlexibleAppVersionHandler>> getHandlers() {
        return this.handlers;
    }
    /**
     * A list of the types of messages that this application is able to receive.
     * Each value may be one of `INBOUND_SERVICE_MAIL`, `INBOUND_SERVICE_MAIL_BOUNCE`, `INBOUND_SERVICE_XMPP_ERROR`, `INBOUND_SERVICE_XMPP_MESSAGE`, `INBOUND_SERVICE_XMPP_SUBSCRIBE`, `INBOUND_SERVICE_XMPP_PRESENCE`, `INBOUND_SERVICE_CHANNEL_PRESENCE`, and `INBOUND_SERVICE_WARMUP`.
     * 
     */
    @Export(name="inboundServices", type=List.class, parameters={String.class})
    private Output</* @Nullable */ List<String>> inboundServices;

    /**
     * @return A list of the types of messages that this application is able to receive.
     * Each value may be one of `INBOUND_SERVICE_MAIL`, `INBOUND_SERVICE_MAIL_BOUNCE`, `INBOUND_SERVICE_XMPP_ERROR`, `INBOUND_SERVICE_XMPP_MESSAGE`, `INBOUND_SERVICE_XMPP_SUBSCRIBE`, `INBOUND_SERVICE_XMPP_PRESENCE`, `INBOUND_SERVICE_CHANNEL_PRESENCE`, and `INBOUND_SERVICE_WARMUP`.
     * 
     */
    public Output</* @Nullable */ List<String>> getInboundServices() {
        return this.inboundServices;
    }
    /**
     * Instance class that is used to run this version. Valid values are
     * AutomaticScaling: F1, F2, F4, F4_1G
     * ManualScaling: B1, B2, B4, B8, B4_1G
     * Defaults to F1 for AutomaticScaling and B1 for ManualScaling.
     * 
     */
    @Export(name="instanceClass", type=String.class, parameters={})
    private Output</* @Nullable */ String> instanceClass;

    /**
     * @return Instance class that is used to run this version. Valid values are
     * AutomaticScaling: F1, F2, F4, F4_1G
     * ManualScaling: B1, B2, B4, B8, B4_1G
     * Defaults to F1 for AutomaticScaling and B1 for ManualScaling.
     * 
     */
    public Output</* @Nullable */ String> getInstanceClass() {
        return this.instanceClass;
    }
    /**
     * Health checking configuration for VM instances. Unhealthy instances are killed and replaced with new instances.
     * Structure is documented below.
     * 
     */
    @Export(name="livenessCheck", type=FlexibleAppVersionLivenessCheck.class, parameters={})
    private Output<FlexibleAppVersionLivenessCheck> livenessCheck;

    /**
     * @return Health checking configuration for VM instances. Unhealthy instances are killed and replaced with new instances.
     * Structure is documented below.
     * 
     */
    public Output<FlexibleAppVersionLivenessCheck> getLivenessCheck() {
        return this.livenessCheck;
    }
    /**
     * A service with manual scaling runs continuously, allowing you to perform complex initialization and rely on the state of its memory over time.
     * Structure is documented below.
     * 
     */
    @Export(name="manualScaling", type=FlexibleAppVersionManualScaling.class, parameters={})
    private Output</* @Nullable */ FlexibleAppVersionManualScaling> manualScaling;

    /**
     * @return A service with manual scaling runs continuously, allowing you to perform complex initialization and rely on the state of its memory over time.
     * Structure is documented below.
     * 
     */
    public Output</* @Nullable */ FlexibleAppVersionManualScaling> getManualScaling() {
        return this.manualScaling;
    }
    /**
     * Full Serverless VPC Access Connector name e.g. /projects/my-project/locations/us-central1/connectors/c1.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return Full Serverless VPC Access Connector name e.g. /projects/my-project/locations/us-central1/connectors/c1.
     * 
     */
    public Output<String> getName() {
        return this.name;
    }
    /**
     * Extra network settings
     * Structure is documented below.
     * 
     */
    @Export(name="network", type=FlexibleAppVersionNetwork.class, parameters={})
    private Output</* @Nullable */ FlexibleAppVersionNetwork> network;

    /**
     * @return Extra network settings
     * Structure is documented below.
     * 
     */
    public Output</* @Nullable */ FlexibleAppVersionNetwork> getNetwork() {
        return this.network;
    }
    /**
     * Files that match this pattern will not be built into this version. Only applicable for Go runtimes.
     * 
     */
    @Export(name="nobuildFilesRegex", type=String.class, parameters={})
    private Output</* @Nullable */ String> nobuildFilesRegex;

    /**
     * @return Files that match this pattern will not be built into this version. Only applicable for Go runtimes.
     * 
     */
    public Output</* @Nullable */ String> getNobuildFilesRegex() {
        return this.nobuildFilesRegex;
    }
    /**
     * If set to `true`, the application version will not be deleted.
     * 
     */
    @Export(name="noopOnDestroy", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> noopOnDestroy;

    /**
     * @return If set to `true`, the application version will not be deleted.
     * 
     */
    public Output</* @Nullable */ Boolean> getNoopOnDestroy() {
        return this.noopOnDestroy;
    }
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Export(name="project", type=String.class, parameters={})
    private Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Output<String> getProject() {
        return this.project;
    }
    /**
     * Configures readiness health checking for instances. Unhealthy instances are not put into the backend traffic rotation.
     * Structure is documented below.
     * 
     */
    @Export(name="readinessCheck", type=FlexibleAppVersionReadinessCheck.class, parameters={})
    private Output<FlexibleAppVersionReadinessCheck> readinessCheck;

    /**
     * @return Configures readiness health checking for instances. Unhealthy instances are not put into the backend traffic rotation.
     * Structure is documented below.
     * 
     */
    public Output<FlexibleAppVersionReadinessCheck> getReadinessCheck() {
        return this.readinessCheck;
    }
    /**
     * Machine resources for a version.
     * Structure is documented below.
     * 
     */
    @Export(name="resources", type=FlexibleAppVersionResources.class, parameters={})
    private Output</* @Nullable */ FlexibleAppVersionResources> resources;

    /**
     * @return Machine resources for a version.
     * Structure is documented below.
     * 
     */
    public Output</* @Nullable */ FlexibleAppVersionResources> getResources() {
        return this.resources;
    }
    /**
     * Desired runtime. Example python27.
     * 
     */
    @Export(name="runtime", type=String.class, parameters={})
    private Output<String> runtime;

    /**
     * @return Desired runtime. Example python27.
     * 
     */
    public Output<String> getRuntime() {
        return this.runtime;
    }
    /**
     * The version of the API in the given runtime environment.
     * Please see the app.yaml reference for valid values at `https://cloud.google.com/appengine/docs/standard/<language>/config/appref`\
     * Substitute `<language>` with `python`, `java`, `php`, `ruby`, `go` or `nodejs`.
     * 
     */
    @Export(name="runtimeApiVersion", type=String.class, parameters={})
    private Output<String> runtimeApiVersion;

    /**
     * @return The version of the API in the given runtime environment.
     * Please see the app.yaml reference for valid values at `https://cloud.google.com/appengine/docs/standard/<language>/config/appref`\
     * Substitute `<language>` with `python`, `java`, `php`, `ruby`, `go` or `nodejs`.
     * 
     */
    public Output<String> getRuntimeApiVersion() {
        return this.runtimeApiVersion;
    }
    /**
     * The channel of the runtime to use. Only available for some runtimes.
     * 
     */
    @Export(name="runtimeChannel", type=String.class, parameters={})
    private Output</* @Nullable */ String> runtimeChannel;

    /**
     * @return The channel of the runtime to use. Only available for some runtimes.
     * 
     */
    public Output</* @Nullable */ String> getRuntimeChannel() {
        return this.runtimeChannel;
    }
    /**
     * The path or name of the app's main executable.
     * 
     */
    @Export(name="runtimeMainExecutablePath", type=String.class, parameters={})
    private Output</* @Nullable */ String> runtimeMainExecutablePath;

    /**
     * @return The path or name of the app's main executable.
     * 
     */
    public Output</* @Nullable */ String> getRuntimeMainExecutablePath() {
        return this.runtimeMainExecutablePath;
    }
    /**
     * AppEngine service resource. Can contain numbers, letters, and hyphens.
     * 
     */
    @Export(name="service", type=String.class, parameters={})
    private Output<String> service;

    /**
     * @return AppEngine service resource. Can contain numbers, letters, and hyphens.
     * 
     */
    public Output<String> getService() {
        return this.service;
    }
    /**
     * Current serving status of this version. Only the versions with a SERVING status create instances and can be billed.
     * Default value is `SERVING`.
     * Possible values are `SERVING` and `STOPPED`.
     * 
     */
    @Export(name="servingStatus", type=String.class, parameters={})
    private Output</* @Nullable */ String> servingStatus;

    /**
     * @return Current serving status of this version. Only the versions with a SERVING status create instances and can be billed.
     * Default value is `SERVING`.
     * Possible values are `SERVING` and `STOPPED`.
     * 
     */
    public Output</* @Nullable */ String> getServingStatus() {
        return this.servingStatus;
    }
    /**
     * Relative name of the version within the service. For example, `v1`. Version names can contain only lowercase letters, numbers, or hyphens.
     * Reserved names,"default", "latest", and any name with the prefix "ah-".
     * 
     */
    @Export(name="versionId", type=String.class, parameters={})
    private Output</* @Nullable */ String> versionId;

    /**
     * @return Relative name of the version within the service. For example, `v1`. Version names can contain only lowercase letters, numbers, or hyphens.
     * Reserved names,"default", "latest", and any name with the prefix "ah-".
     * 
     */
    public Output</* @Nullable */ String> getVersionId() {
        return this.versionId;
    }
    /**
     * Enables VPC connectivity for standard apps.
     * Structure is documented below.
     * 
     */
    @Export(name="vpcAccessConnector", type=FlexibleAppVersionVpcAccessConnector.class, parameters={})
    private Output</* @Nullable */ FlexibleAppVersionVpcAccessConnector> vpcAccessConnector;

    /**
     * @return Enables VPC connectivity for standard apps.
     * Structure is documented below.
     * 
     */
    public Output</* @Nullable */ FlexibleAppVersionVpcAccessConnector> getVpcAccessConnector() {
        return this.vpcAccessConnector;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public FlexibleAppVersion(String name) {
        this(name, FlexibleAppVersionArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public FlexibleAppVersion(String name, FlexibleAppVersionArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public FlexibleAppVersion(String name, FlexibleAppVersionArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("gcp:appengine/flexibleAppVersion:FlexibleAppVersion", name, args == null ? FlexibleAppVersionArgs.Empty : args, makeResourceOptions(options, Output.empty()));
    }

    private FlexibleAppVersion(String name, Output<String> id, @Nullable FlexibleAppVersionState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("gcp:appengine/flexibleAppVersion:FlexibleAppVersion", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static FlexibleAppVersion get(String name, Output<String> id, @Nullable FlexibleAppVersionState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new FlexibleAppVersion(name, id, state, options);
    }
}
