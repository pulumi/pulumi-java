// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.gameservices.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import io.pulumi.gcp.gameservices.inputs.GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorArgs;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class GameServerDeploymentRolloutGameServerConfigOverrideArgs extends io.pulumi.resources.ResourceArgs {

    public static final GameServerDeploymentRolloutGameServerConfigOverrideArgs Empty = new GameServerDeploymentRolloutGameServerConfigOverrideArgs();

    @InputImport(name="configVersion")
    private final @Nullable Input<String> configVersion;

    public Input<String> getConfigVersion() {
        return this.configVersion == null ? Input.empty() : this.configVersion;
    }

    @InputImport(name="realmsSelector")
    private final @Nullable Input<GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorArgs> realmsSelector;

    public Input<GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorArgs> getRealmsSelector() {
        return this.realmsSelector == null ? Input.empty() : this.realmsSelector;
    }

    public GameServerDeploymentRolloutGameServerConfigOverrideArgs(
        @Nullable Input<String> configVersion,
        @Nullable Input<GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorArgs> realmsSelector) {
        this.configVersion = configVersion;
        this.realmsSelector = realmsSelector;
    }

    private GameServerDeploymentRolloutGameServerConfigOverrideArgs() {
        this.configVersion = Input.empty();
        this.realmsSelector = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GameServerDeploymentRolloutGameServerConfigOverrideArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> configVersion;
        private @Nullable Input<GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorArgs> realmsSelector;

        public Builder() {
    	      // Empty
        }

        public Builder(GameServerDeploymentRolloutGameServerConfigOverrideArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.configVersion = defaults.configVersion;
    	      this.realmsSelector = defaults.realmsSelector;
        }

        public Builder setConfigVersion(@Nullable Input<String> configVersion) {
            this.configVersion = configVersion;
            return this;
        }

        public Builder setConfigVersion(@Nullable String configVersion) {
            this.configVersion = Input.ofNullable(configVersion);
            return this;
        }

        public Builder setRealmsSelector(@Nullable Input<GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorArgs> realmsSelector) {
            this.realmsSelector = realmsSelector;
            return this;
        }

        public Builder setRealmsSelector(@Nullable GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorArgs realmsSelector) {
            this.realmsSelector = Input.ofNullable(realmsSelector);
            return this;
        }

        public GameServerDeploymentRolloutGameServerConfigOverrideArgs build() {
            return new GameServerDeploymentRolloutGameServerConfigOverrideArgs(configVersion, realmsSelector);
        }
    }
}
