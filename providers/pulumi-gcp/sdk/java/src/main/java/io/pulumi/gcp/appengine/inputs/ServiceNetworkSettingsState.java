// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.appengine.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import io.pulumi.gcp.appengine.inputs.ServiceNetworkSettingsNetworkSettingsGetArgs;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ServiceNetworkSettingsState extends io.pulumi.resources.ResourceArgs {

    public static final ServiceNetworkSettingsState Empty = new ServiceNetworkSettingsState();

    /**
     * Ingress settings for this service. Will apply to all versions.
     * Structure is documented below.
     * 
     */
    @InputImport(name="networkSettings")
      private final @Nullable Input<ServiceNetworkSettingsNetworkSettingsGetArgs> networkSettings;

    public Input<ServiceNetworkSettingsNetworkSettingsGetArgs> getNetworkSettings() {
        return this.networkSettings == null ? Input.empty() : this.networkSettings;
    }

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @InputImport(name="project")
      private final @Nullable Input<String> project;

    public Input<String> getProject() {
        return this.project == null ? Input.empty() : this.project;
    }

    /**
     * The name of the service these settings apply to.
     * 
     */
    @InputImport(name="service")
      private final @Nullable Input<String> service;

    public Input<String> getService() {
        return this.service == null ? Input.empty() : this.service;
    }

    public ServiceNetworkSettingsState(
        @Nullable Input<ServiceNetworkSettingsNetworkSettingsGetArgs> networkSettings,
        @Nullable Input<String> project,
        @Nullable Input<String> service) {
        this.networkSettings = networkSettings;
        this.project = project;
        this.service = service;
    }

    private ServiceNetworkSettingsState() {
        this.networkSettings = Input.empty();
        this.project = Input.empty();
        this.service = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ServiceNetworkSettingsState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<ServiceNetworkSettingsNetworkSettingsGetArgs> networkSettings;
        private @Nullable Input<String> project;
        private @Nullable Input<String> service;

        public Builder() {
    	      // Empty
        }

        public Builder(ServiceNetworkSettingsState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.networkSettings = defaults.networkSettings;
    	      this.project = defaults.project;
    	      this.service = defaults.service;
        }

        public Builder setNetworkSettings(@Nullable Input<ServiceNetworkSettingsNetworkSettingsGetArgs> networkSettings) {
            this.networkSettings = networkSettings;
            return this;
        }

        public Builder setNetworkSettings(@Nullable ServiceNetworkSettingsNetworkSettingsGetArgs networkSettings) {
            this.networkSettings = Input.ofNullable(networkSettings);
            return this;
        }

        public Builder setProject(@Nullable Input<String> project) {
            this.project = project;
            return this;
        }

        public Builder setProject(@Nullable String project) {
            this.project = Input.ofNullable(project);
            return this;
        }

        public Builder setService(@Nullable Input<String> service) {
            this.service = service;
            return this;
        }

        public Builder setService(@Nullable String service) {
            this.service = Input.ofNullable(service);
            return this;
        }
        public ServiceNetworkSettingsState build() {
            return new ServiceNetworkSettingsState(networkSettings, project, service);
        }
    }
}
