// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.logging.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import io.pulumi.gcp.logging.inputs.OrganizationSinkBigqueryOptionsGetArgs;
import io.pulumi.gcp.logging.inputs.OrganizationSinkExclusionGetArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class OrganizationSinkState extends io.pulumi.resources.ResourceArgs {

    public static final OrganizationSinkState Empty = new OrganizationSinkState();

    @InputImport(name="bigqueryOptions")
    private final @Nullable Input<OrganizationSinkBigqueryOptionsGetArgs> bigqueryOptions;

    public Input<OrganizationSinkBigqueryOptionsGetArgs> getBigqueryOptions() {
        return this.bigqueryOptions == null ? Input.empty() : this.bigqueryOptions;
    }

    @InputImport(name="description")
    private final @Nullable Input<String> description;

    public Input<String> getDescription() {
        return this.description == null ? Input.empty() : this.description;
    }

    @InputImport(name="destination")
    private final @Nullable Input<String> destination;

    public Input<String> getDestination() {
        return this.destination == null ? Input.empty() : this.destination;
    }

    @InputImport(name="disabled")
    private final @Nullable Input<Boolean> disabled;

    public Input<Boolean> getDisabled() {
        return this.disabled == null ? Input.empty() : this.disabled;
    }

    @InputImport(name="exclusions")
    private final @Nullable Input<List<OrganizationSinkExclusionGetArgs>> exclusions;

    public Input<List<OrganizationSinkExclusionGetArgs>> getExclusions() {
        return this.exclusions == null ? Input.empty() : this.exclusions;
    }

    @InputImport(name="filter")
    private final @Nullable Input<String> filter;

    public Input<String> getFilter() {
        return this.filter == null ? Input.empty() : this.filter;
    }

    @InputImport(name="includeChildren")
    private final @Nullable Input<Boolean> includeChildren;

    public Input<Boolean> getIncludeChildren() {
        return this.includeChildren == null ? Input.empty() : this.includeChildren;
    }

    @InputImport(name="name")
    private final @Nullable Input<String> name;

    public Input<String> getName() {
        return this.name == null ? Input.empty() : this.name;
    }

    @InputImport(name="orgId")
    private final @Nullable Input<String> orgId;

    public Input<String> getOrgId() {
        return this.orgId == null ? Input.empty() : this.orgId;
    }

    @InputImport(name="writerIdentity")
    private final @Nullable Input<String> writerIdentity;

    public Input<String> getWriterIdentity() {
        return this.writerIdentity == null ? Input.empty() : this.writerIdentity;
    }

    public OrganizationSinkState(
        @Nullable Input<OrganizationSinkBigqueryOptionsGetArgs> bigqueryOptions,
        @Nullable Input<String> description,
        @Nullable Input<String> destination,
        @Nullable Input<Boolean> disabled,
        @Nullable Input<List<OrganizationSinkExclusionGetArgs>> exclusions,
        @Nullable Input<String> filter,
        @Nullable Input<Boolean> includeChildren,
        @Nullable Input<String> name,
        @Nullable Input<String> orgId,
        @Nullable Input<String> writerIdentity) {
        this.bigqueryOptions = bigqueryOptions;
        this.description = description;
        this.destination = destination;
        this.disabled = disabled;
        this.exclusions = exclusions;
        this.filter = filter;
        this.includeChildren = includeChildren;
        this.name = name;
        this.orgId = orgId;
        this.writerIdentity = writerIdentity;
    }

    private OrganizationSinkState() {
        this.bigqueryOptions = Input.empty();
        this.description = Input.empty();
        this.destination = Input.empty();
        this.disabled = Input.empty();
        this.exclusions = Input.empty();
        this.filter = Input.empty();
        this.includeChildren = Input.empty();
        this.name = Input.empty();
        this.orgId = Input.empty();
        this.writerIdentity = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(OrganizationSinkState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<OrganizationSinkBigqueryOptionsGetArgs> bigqueryOptions;
        private @Nullable Input<String> description;
        private @Nullable Input<String> destination;
        private @Nullable Input<Boolean> disabled;
        private @Nullable Input<List<OrganizationSinkExclusionGetArgs>> exclusions;
        private @Nullable Input<String> filter;
        private @Nullable Input<Boolean> includeChildren;
        private @Nullable Input<String> name;
        private @Nullable Input<String> orgId;
        private @Nullable Input<String> writerIdentity;

        public Builder() {
    	      // Empty
        }

        public Builder(OrganizationSinkState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bigqueryOptions = defaults.bigqueryOptions;
    	      this.description = defaults.description;
    	      this.destination = defaults.destination;
    	      this.disabled = defaults.disabled;
    	      this.exclusions = defaults.exclusions;
    	      this.filter = defaults.filter;
    	      this.includeChildren = defaults.includeChildren;
    	      this.name = defaults.name;
    	      this.orgId = defaults.orgId;
    	      this.writerIdentity = defaults.writerIdentity;
        }

        public Builder setBigqueryOptions(@Nullable Input<OrganizationSinkBigqueryOptionsGetArgs> bigqueryOptions) {
            this.bigqueryOptions = bigqueryOptions;
            return this;
        }

        public Builder setBigqueryOptions(@Nullable OrganizationSinkBigqueryOptionsGetArgs bigqueryOptions) {
            this.bigqueryOptions = Input.ofNullable(bigqueryOptions);
            return this;
        }

        public Builder setDescription(@Nullable Input<String> description) {
            this.description = description;
            return this;
        }

        public Builder setDescription(@Nullable String description) {
            this.description = Input.ofNullable(description);
            return this;
        }

        public Builder setDestination(@Nullable Input<String> destination) {
            this.destination = destination;
            return this;
        }

        public Builder setDestination(@Nullable String destination) {
            this.destination = Input.ofNullable(destination);
            return this;
        }

        public Builder setDisabled(@Nullable Input<Boolean> disabled) {
            this.disabled = disabled;
            return this;
        }

        public Builder setDisabled(@Nullable Boolean disabled) {
            this.disabled = Input.ofNullable(disabled);
            return this;
        }

        public Builder setExclusions(@Nullable Input<List<OrganizationSinkExclusionGetArgs>> exclusions) {
            this.exclusions = exclusions;
            return this;
        }

        public Builder setExclusions(@Nullable List<OrganizationSinkExclusionGetArgs> exclusions) {
            this.exclusions = Input.ofNullable(exclusions);
            return this;
        }

        public Builder setFilter(@Nullable Input<String> filter) {
            this.filter = filter;
            return this;
        }

        public Builder setFilter(@Nullable String filter) {
            this.filter = Input.ofNullable(filter);
            return this;
        }

        public Builder setIncludeChildren(@Nullable Input<Boolean> includeChildren) {
            this.includeChildren = includeChildren;
            return this;
        }

        public Builder setIncludeChildren(@Nullable Boolean includeChildren) {
            this.includeChildren = Input.ofNullable(includeChildren);
            return this;
        }

        public Builder setName(@Nullable Input<String> name) {
            this.name = name;
            return this;
        }

        public Builder setName(@Nullable String name) {
            this.name = Input.ofNullable(name);
            return this;
        }

        public Builder setOrgId(@Nullable Input<String> orgId) {
            this.orgId = orgId;
            return this;
        }

        public Builder setOrgId(@Nullable String orgId) {
            this.orgId = Input.ofNullable(orgId);
            return this;
        }

        public Builder setWriterIdentity(@Nullable Input<String> writerIdentity) {
            this.writerIdentity = writerIdentity;
            return this;
        }

        public Builder setWriterIdentity(@Nullable String writerIdentity) {
            this.writerIdentity = Input.ofNullable(writerIdentity);
            return this;
        }

        public OrganizationSinkState build() {
            return new OrganizationSinkState(bigqueryOptions, description, destination, disabled, exclusions, filter, includeChildren, name, orgId, writerIdentity);
        }
    }
}
