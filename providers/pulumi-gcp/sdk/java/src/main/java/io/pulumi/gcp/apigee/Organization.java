// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.apigee;

import io.pulumi.core.Input;
import io.pulumi.core.Output;
import io.pulumi.core.internal.annotations.OutputExport;
import io.pulumi.core.internal.annotations.ResourceType;
import io.pulumi.gcp.Utilities;
import io.pulumi.gcp.apigee.OrganizationArgs;
import io.pulumi.gcp.apigee.inputs.OrganizationState;
import java.lang.String;
import javax.annotation.Nullable;

@ResourceType(type="gcp:apigee/organization:Organization")
public class Organization extends io.pulumi.resources.CustomResource {
    @OutputExport(name="analyticsRegion", type=String.class, parameters={})
    private Output</* @Nullable */ String> analyticsRegion;

    public Output</* @Nullable */ String> getAnalyticsRegion() {
        return this.analyticsRegion;
    }
    @OutputExport(name="authorizedNetwork", type=String.class, parameters={})
    private Output</* @Nullable */ String> authorizedNetwork;

    public Output</* @Nullable */ String> getAuthorizedNetwork() {
        return this.authorizedNetwork;
    }
    @OutputExport(name="caCertificate", type=String.class, parameters={})
    private Output<String> caCertificate;

    public Output<String> getCaCertificate() {
        return this.caCertificate;
    }
    @OutputExport(name="description", type=String.class, parameters={})
    private Output</* @Nullable */ String> description;

    public Output</* @Nullable */ String> getDescription() {
        return this.description;
    }
    @OutputExport(name="displayName", type=String.class, parameters={})
    private Output</* @Nullable */ String> displayName;

    public Output</* @Nullable */ String> getDisplayName() {
        return this.displayName;
    }
    @OutputExport(name="name", type=String.class, parameters={})
    private Output<String> name;

    public Output<String> getName() {
        return this.name;
    }
    @OutputExport(name="projectId", type=String.class, parameters={})
    private Output<String> projectId;

    public Output<String> getProjectId() {
        return this.projectId;
    }
    @OutputExport(name="runtimeDatabaseEncryptionKeyName", type=String.class, parameters={})
    private Output</* @Nullable */ String> runtimeDatabaseEncryptionKeyName;

    public Output</* @Nullable */ String> getRuntimeDatabaseEncryptionKeyName() {
        return this.runtimeDatabaseEncryptionKeyName;
    }
    @OutputExport(name="runtimeType", type=String.class, parameters={})
    private Output</* @Nullable */ String> runtimeType;

    public Output</* @Nullable */ String> getRuntimeType() {
        return this.runtimeType;
    }
    @OutputExport(name="subscriptionType", type=String.class, parameters={})
    private Output<String> subscriptionType;

    public Output<String> getSubscriptionType() {
        return this.subscriptionType;
    }

    public Organization(String name, OrganizationArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("gcp:apigee/organization:Organization", name, args == null ? OrganizationArgs.Empty : args, makeResourceOptions(options, Input.empty()));
    }

    private Organization(String name, Input<String> id, @Nullable OrganizationState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("gcp:apigee/organization:Organization", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Input<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .setVersion(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    public static Organization get(String name, Input<String> id, @Nullable OrganizationState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new Organization(name, id, state, options);
    }
}
