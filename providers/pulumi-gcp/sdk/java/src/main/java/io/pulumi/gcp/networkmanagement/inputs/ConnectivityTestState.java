// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.networkmanagement.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import io.pulumi.gcp.networkmanagement.inputs.ConnectivityTestDestinationGetArgs;
import io.pulumi.gcp.networkmanagement.inputs.ConnectivityTestSourceGetArgs;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ConnectivityTestState extends io.pulumi.resources.ResourceArgs {

    public static final ConnectivityTestState Empty = new ConnectivityTestState();

    @InputImport(name="description")
    private final @Nullable Input<String> description;

    public Input<String> getDescription() {
        return this.description == null ? Input.empty() : this.description;
    }

    @InputImport(name="destination")
    private final @Nullable Input<ConnectivityTestDestinationGetArgs> destination;

    public Input<ConnectivityTestDestinationGetArgs> getDestination() {
        return this.destination == null ? Input.empty() : this.destination;
    }

    @InputImport(name="labels")
    private final @Nullable Input<Map<String,String>> labels;

    public Input<Map<String,String>> getLabels() {
        return this.labels == null ? Input.empty() : this.labels;
    }

    @InputImport(name="name")
    private final @Nullable Input<String> name;

    public Input<String> getName() {
        return this.name == null ? Input.empty() : this.name;
    }

    @InputImport(name="project")
    private final @Nullable Input<String> project;

    public Input<String> getProject() {
        return this.project == null ? Input.empty() : this.project;
    }

    @InputImport(name="protocol")
    private final @Nullable Input<String> protocol;

    public Input<String> getProtocol() {
        return this.protocol == null ? Input.empty() : this.protocol;
    }

    @InputImport(name="relatedProjects")
    private final @Nullable Input<List<String>> relatedProjects;

    public Input<List<String>> getRelatedProjects() {
        return this.relatedProjects == null ? Input.empty() : this.relatedProjects;
    }

    @InputImport(name="source")
    private final @Nullable Input<ConnectivityTestSourceGetArgs> source;

    public Input<ConnectivityTestSourceGetArgs> getSource() {
        return this.source == null ? Input.empty() : this.source;
    }

    public ConnectivityTestState(
        @Nullable Input<String> description,
        @Nullable Input<ConnectivityTestDestinationGetArgs> destination,
        @Nullable Input<Map<String,String>> labels,
        @Nullable Input<String> name,
        @Nullable Input<String> project,
        @Nullable Input<String> protocol,
        @Nullable Input<List<String>> relatedProjects,
        @Nullable Input<ConnectivityTestSourceGetArgs> source) {
        this.description = description;
        this.destination = destination;
        this.labels = labels;
        this.name = name;
        this.project = project;
        this.protocol = protocol;
        this.relatedProjects = relatedProjects;
        this.source = source;
    }

    private ConnectivityTestState() {
        this.description = Input.empty();
        this.destination = Input.empty();
        this.labels = Input.empty();
        this.name = Input.empty();
        this.project = Input.empty();
        this.protocol = Input.empty();
        this.relatedProjects = Input.empty();
        this.source = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ConnectivityTestState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> description;
        private @Nullable Input<ConnectivityTestDestinationGetArgs> destination;
        private @Nullable Input<Map<String,String>> labels;
        private @Nullable Input<String> name;
        private @Nullable Input<String> project;
        private @Nullable Input<String> protocol;
        private @Nullable Input<List<String>> relatedProjects;
        private @Nullable Input<ConnectivityTestSourceGetArgs> source;

        public Builder() {
    	      // Empty
        }

        public Builder(ConnectivityTestState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.destination = defaults.destination;
    	      this.labels = defaults.labels;
    	      this.name = defaults.name;
    	      this.project = defaults.project;
    	      this.protocol = defaults.protocol;
    	      this.relatedProjects = defaults.relatedProjects;
    	      this.source = defaults.source;
        }

        public Builder setDescription(@Nullable Input<String> description) {
            this.description = description;
            return this;
        }

        public Builder setDescription(@Nullable String description) {
            this.description = Input.ofNullable(description);
            return this;
        }

        public Builder setDestination(@Nullable Input<ConnectivityTestDestinationGetArgs> destination) {
            this.destination = destination;
            return this;
        }

        public Builder setDestination(@Nullable ConnectivityTestDestinationGetArgs destination) {
            this.destination = Input.ofNullable(destination);
            return this;
        }

        public Builder setLabels(@Nullable Input<Map<String,String>> labels) {
            this.labels = labels;
            return this;
        }

        public Builder setLabels(@Nullable Map<String,String> labels) {
            this.labels = Input.ofNullable(labels);
            return this;
        }

        public Builder setName(@Nullable Input<String> name) {
            this.name = name;
            return this;
        }

        public Builder setName(@Nullable String name) {
            this.name = Input.ofNullable(name);
            return this;
        }

        public Builder setProject(@Nullable Input<String> project) {
            this.project = project;
            return this;
        }

        public Builder setProject(@Nullable String project) {
            this.project = Input.ofNullable(project);
            return this;
        }

        public Builder setProtocol(@Nullable Input<String> protocol) {
            this.protocol = protocol;
            return this;
        }

        public Builder setProtocol(@Nullable String protocol) {
            this.protocol = Input.ofNullable(protocol);
            return this;
        }

        public Builder setRelatedProjects(@Nullable Input<List<String>> relatedProjects) {
            this.relatedProjects = relatedProjects;
            return this;
        }

        public Builder setRelatedProjects(@Nullable List<String> relatedProjects) {
            this.relatedProjects = Input.ofNullable(relatedProjects);
            return this;
        }

        public Builder setSource(@Nullable Input<ConnectivityTestSourceGetArgs> source) {
            this.source = source;
            return this;
        }

        public Builder setSource(@Nullable ConnectivityTestSourceGetArgs source) {
            this.source = Input.ofNullable(source);
            return this;
        }

        public ConnectivityTestState build() {
            return new ConnectivityTestState(description, destination, labels, name, project, protocol, relatedProjects, source);
        }
    }
}
