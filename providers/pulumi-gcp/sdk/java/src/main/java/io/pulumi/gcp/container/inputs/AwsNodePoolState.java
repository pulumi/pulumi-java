// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.container.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import io.pulumi.gcp.container.inputs.AwsNodePoolAutoscalingGetArgs;
import io.pulumi.gcp.container.inputs.AwsNodePoolConfigGetArgs;
import io.pulumi.gcp.container.inputs.AwsNodePoolMaxPodsConstraintGetArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class AwsNodePoolState extends io.pulumi.resources.ResourceArgs {

    public static final AwsNodePoolState Empty = new AwsNodePoolState();

    /**
     * Optional. Annotations on the node pool. This field has the same restrictions as Kubernetes annotations. The total size of all keys and values combined is limited to 256k. Key can have 2 segments: prefix (optional) and name (required), separated by a slash (/). Prefix must be a DNS subdomain. Name must be 63 characters or less, begin and end with alphanumerics, with dashes (-), underscores (_), dots (.), and alphanumerics between.
     * 
     */
    @Import(name="annotations")
      private final @Nullable Output<Map<String,String>> annotations;

    public Output<Map<String,String>> annotations() {
        return this.annotations == null ? Codegen.empty() : this.annotations;
    }

    /**
     * Required. Autoscaler configuration for this node pool.
     * 
     */
    @Import(name="autoscaling")
      private final @Nullable Output<AwsNodePoolAutoscalingGetArgs> autoscaling;

    public Output<AwsNodePoolAutoscalingGetArgs> autoscaling() {
        return this.autoscaling == null ? Codegen.empty() : this.autoscaling;
    }

    /**
     * The awsCluster for the resource
     * 
     */
    @Import(name="cluster")
      private final @Nullable Output<String> cluster;

    public Output<String> cluster() {
        return this.cluster == null ? Codegen.empty() : this.cluster;
    }

    /**
     * Required. The configuration of the node pool.
     * 
     */
    @Import(name="config")
      private final @Nullable Output<AwsNodePoolConfigGetArgs> config;

    public Output<AwsNodePoolConfigGetArgs> config() {
        return this.config == null ? Codegen.empty() : this.config;
    }

    /**
     * Output only. The time at which this node pool was created.
     * 
     */
    @Import(name="createTime")
      private final @Nullable Output<String> createTime;

    public Output<String> createTime() {
        return this.createTime == null ? Codegen.empty() : this.createTime;
    }

    /**
     * Allows clients to perform consistent read-modify-writes through optimistic concurrency control. May be sent on update
     * and delete requests to ensure the client has an up-to-date value before proceeding.
     * 
     */
    @Import(name="etag")
      private final @Nullable Output<String> etag;

    public Output<String> etag() {
        return this.etag == null ? Codegen.empty() : this.etag;
    }

    /**
     * The location for the resource
     * 
     */
    @Import(name="location")
      private final @Nullable Output<String> location;

    public Output<String> location() {
        return this.location == null ? Codegen.empty() : this.location;
    }

    /**
     * Required. The constraint on the maximum number of pods that can be run simultaneously on a node in the node pool.
     * 
     */
    @Import(name="maxPodsConstraint")
      private final @Nullable Output<AwsNodePoolMaxPodsConstraintGetArgs> maxPodsConstraint;

    public Output<AwsNodePoolMaxPodsConstraintGetArgs> maxPodsConstraint() {
        return this.maxPodsConstraint == null ? Codegen.empty() : this.maxPodsConstraint;
    }

    /**
     * The name of this resource.
     * 
     */
    @Import(name="name")
      private final @Nullable Output<String> name;

    public Output<String> name() {
        return this.name == null ? Codegen.empty() : this.name;
    }

    /**
     * The project for the resource
     * 
     */
    @Import(name="project")
      private final @Nullable Output<String> project;

    public Output<String> project() {
        return this.project == null ? Codegen.empty() : this.project;
    }

    /**
     * Output only. If set, there are currently changes in flight to the node pool.
     * 
     */
    @Import(name="reconciling")
      private final @Nullable Output<Boolean> reconciling;

    public Output<Boolean> reconciling() {
        return this.reconciling == null ? Codegen.empty() : this.reconciling;
    }

    /**
     * Output only. The lifecycle state of the node pool. Possible values: STATE_UNSPECIFIED, PROVISIONING, RUNNING,
     * RECONCILING, STOPPING, ERROR, DEGRADED
     * 
     */
    @Import(name="state")
      private final @Nullable Output<String> state;

    public Output<String> state() {
        return this.state == null ? Codegen.empty() : this.state;
    }

    /**
     * Required. The subnet where the node pool node run.
     * 
     */
    @Import(name="subnetId")
      private final @Nullable Output<String> subnetId;

    public Output<String> subnetId() {
        return this.subnetId == null ? Codegen.empty() : this.subnetId;
    }

    /**
     * Output only. A globally unique identifier for the node pool.
     * 
     */
    @Import(name="uid")
      private final @Nullable Output<String> uid;

    public Output<String> uid() {
        return this.uid == null ? Codegen.empty() : this.uid;
    }

    /**
     * Output only. The time at which this node pool was last updated.
     * 
     */
    @Import(name="updateTime")
      private final @Nullable Output<String> updateTime;

    public Output<String> updateTime() {
        return this.updateTime == null ? Codegen.empty() : this.updateTime;
    }

    /**
     * Required. The Kubernetes version to run on this node pool (e.g. `1.19.10-gke.1000`). You can list all supported versions on a given Google Cloud region by calling GetAwsServerConfig.
     * 
     */
    @Import(name="version")
      private final @Nullable Output<String> version;

    public Output<String> version() {
        return this.version == null ? Codegen.empty() : this.version;
    }

    public AwsNodePoolState(
        @Nullable Output<Map<String,String>> annotations,
        @Nullable Output<AwsNodePoolAutoscalingGetArgs> autoscaling,
        @Nullable Output<String> cluster,
        @Nullable Output<AwsNodePoolConfigGetArgs> config,
        @Nullable Output<String> createTime,
        @Nullable Output<String> etag,
        @Nullable Output<String> location,
        @Nullable Output<AwsNodePoolMaxPodsConstraintGetArgs> maxPodsConstraint,
        @Nullable Output<String> name,
        @Nullable Output<String> project,
        @Nullable Output<Boolean> reconciling,
        @Nullable Output<String> state,
        @Nullable Output<String> subnetId,
        @Nullable Output<String> uid,
        @Nullable Output<String> updateTime,
        @Nullable Output<String> version) {
        this.annotations = annotations;
        this.autoscaling = autoscaling;
        this.cluster = cluster;
        this.config = config;
        this.createTime = createTime;
        this.etag = etag;
        this.location = location;
        this.maxPodsConstraint = maxPodsConstraint;
        this.name = name;
        this.project = project;
        this.reconciling = reconciling;
        this.state = state;
        this.subnetId = subnetId;
        this.uid = uid;
        this.updateTime = updateTime;
        this.version = version;
    }

    private AwsNodePoolState() {
        this.annotations = Codegen.empty();
        this.autoscaling = Codegen.empty();
        this.cluster = Codegen.empty();
        this.config = Codegen.empty();
        this.createTime = Codegen.empty();
        this.etag = Codegen.empty();
        this.location = Codegen.empty();
        this.maxPodsConstraint = Codegen.empty();
        this.name = Codegen.empty();
        this.project = Codegen.empty();
        this.reconciling = Codegen.empty();
        this.state = Codegen.empty();
        this.subnetId = Codegen.empty();
        this.uid = Codegen.empty();
        this.updateTime = Codegen.empty();
        this.version = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AwsNodePoolState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<Map<String,String>> annotations;
        private @Nullable Output<AwsNodePoolAutoscalingGetArgs> autoscaling;
        private @Nullable Output<String> cluster;
        private @Nullable Output<AwsNodePoolConfigGetArgs> config;
        private @Nullable Output<String> createTime;
        private @Nullable Output<String> etag;
        private @Nullable Output<String> location;
        private @Nullable Output<AwsNodePoolMaxPodsConstraintGetArgs> maxPodsConstraint;
        private @Nullable Output<String> name;
        private @Nullable Output<String> project;
        private @Nullable Output<Boolean> reconciling;
        private @Nullable Output<String> state;
        private @Nullable Output<String> subnetId;
        private @Nullable Output<String> uid;
        private @Nullable Output<String> updateTime;
        private @Nullable Output<String> version;

        public Builder() {
    	      // Empty
        }

        public Builder(AwsNodePoolState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.annotations = defaults.annotations;
    	      this.autoscaling = defaults.autoscaling;
    	      this.cluster = defaults.cluster;
    	      this.config = defaults.config;
    	      this.createTime = defaults.createTime;
    	      this.etag = defaults.etag;
    	      this.location = defaults.location;
    	      this.maxPodsConstraint = defaults.maxPodsConstraint;
    	      this.name = defaults.name;
    	      this.project = defaults.project;
    	      this.reconciling = defaults.reconciling;
    	      this.state = defaults.state;
    	      this.subnetId = defaults.subnetId;
    	      this.uid = defaults.uid;
    	      this.updateTime = defaults.updateTime;
    	      this.version = defaults.version;
        }

        public Builder annotations(@Nullable Output<Map<String,String>> annotations) {
            this.annotations = annotations;
            return this;
        }
        public Builder annotations(@Nullable Map<String,String> annotations) {
            this.annotations = Codegen.ofNullable(annotations);
            return this;
        }
        public Builder autoscaling(@Nullable Output<AwsNodePoolAutoscalingGetArgs> autoscaling) {
            this.autoscaling = autoscaling;
            return this;
        }
        public Builder autoscaling(@Nullable AwsNodePoolAutoscalingGetArgs autoscaling) {
            this.autoscaling = Codegen.ofNullable(autoscaling);
            return this;
        }
        public Builder cluster(@Nullable Output<String> cluster) {
            this.cluster = cluster;
            return this;
        }
        public Builder cluster(@Nullable String cluster) {
            this.cluster = Codegen.ofNullable(cluster);
            return this;
        }
        public Builder config(@Nullable Output<AwsNodePoolConfigGetArgs> config) {
            this.config = config;
            return this;
        }
        public Builder config(@Nullable AwsNodePoolConfigGetArgs config) {
            this.config = Codegen.ofNullable(config);
            return this;
        }
        public Builder createTime(@Nullable Output<String> createTime) {
            this.createTime = createTime;
            return this;
        }
        public Builder createTime(@Nullable String createTime) {
            this.createTime = Codegen.ofNullable(createTime);
            return this;
        }
        public Builder etag(@Nullable Output<String> etag) {
            this.etag = etag;
            return this;
        }
        public Builder etag(@Nullable String etag) {
            this.etag = Codegen.ofNullable(etag);
            return this;
        }
        public Builder location(@Nullable Output<String> location) {
            this.location = location;
            return this;
        }
        public Builder location(@Nullable String location) {
            this.location = Codegen.ofNullable(location);
            return this;
        }
        public Builder maxPodsConstraint(@Nullable Output<AwsNodePoolMaxPodsConstraintGetArgs> maxPodsConstraint) {
            this.maxPodsConstraint = maxPodsConstraint;
            return this;
        }
        public Builder maxPodsConstraint(@Nullable AwsNodePoolMaxPodsConstraintGetArgs maxPodsConstraint) {
            this.maxPodsConstraint = Codegen.ofNullable(maxPodsConstraint);
            return this;
        }
        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }
        public Builder name(@Nullable String name) {
            this.name = Codegen.ofNullable(name);
            return this;
        }
        public Builder project(@Nullable Output<String> project) {
            this.project = project;
            return this;
        }
        public Builder project(@Nullable String project) {
            this.project = Codegen.ofNullable(project);
            return this;
        }
        public Builder reconciling(@Nullable Output<Boolean> reconciling) {
            this.reconciling = reconciling;
            return this;
        }
        public Builder reconciling(@Nullable Boolean reconciling) {
            this.reconciling = Codegen.ofNullable(reconciling);
            return this;
        }
        public Builder state(@Nullable Output<String> state) {
            this.state = state;
            return this;
        }
        public Builder state(@Nullable String state) {
            this.state = Codegen.ofNullable(state);
            return this;
        }
        public Builder subnetId(@Nullable Output<String> subnetId) {
            this.subnetId = subnetId;
            return this;
        }
        public Builder subnetId(@Nullable String subnetId) {
            this.subnetId = Codegen.ofNullable(subnetId);
            return this;
        }
        public Builder uid(@Nullable Output<String> uid) {
            this.uid = uid;
            return this;
        }
        public Builder uid(@Nullable String uid) {
            this.uid = Codegen.ofNullable(uid);
            return this;
        }
        public Builder updateTime(@Nullable Output<String> updateTime) {
            this.updateTime = updateTime;
            return this;
        }
        public Builder updateTime(@Nullable String updateTime) {
            this.updateTime = Codegen.ofNullable(updateTime);
            return this;
        }
        public Builder version(@Nullable Output<String> version) {
            this.version = version;
            return this;
        }
        public Builder version(@Nullable String version) {
            this.version = Codegen.ofNullable(version);
            return this;
        }        public AwsNodePoolState build() {
            return new AwsNodePoolState(annotations, autoscaling, cluster, config, createTime, etag, location, maxPodsConstraint, name, project, reconciling, state, subnetId, uid, updateTime, version);
        }
    }
}
