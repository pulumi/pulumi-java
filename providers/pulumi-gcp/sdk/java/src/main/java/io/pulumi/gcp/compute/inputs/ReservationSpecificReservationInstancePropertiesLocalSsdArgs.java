// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.compute.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ReservationSpecificReservationInstancePropertiesLocalSsdArgs extends io.pulumi.resources.ResourceArgs {

    public static final ReservationSpecificReservationInstancePropertiesLocalSsdArgs Empty = new ReservationSpecificReservationInstancePropertiesLocalSsdArgs();

    @InputImport(name="diskSizeGb", required=true)
    private final Input<Integer> diskSizeGb;

    public Input<Integer> getDiskSizeGb() {
        return this.diskSizeGb;
    }

    @InputImport(name="interface")
    private final @Nullable Input<String> $interface;

    public Input<String> get$interface() {
        return this.$interface == null ? Input.empty() : this.$interface;
    }

    public ReservationSpecificReservationInstancePropertiesLocalSsdArgs(
        Input<Integer> diskSizeGb,
        @Nullable Input<String> $interface) {
        this.diskSizeGb = Objects.requireNonNull(diskSizeGb, "expected parameter 'diskSizeGb' to be non-null");
        this.$interface = $interface;
    }

    private ReservationSpecificReservationInstancePropertiesLocalSsdArgs() {
        this.diskSizeGb = Input.empty();
        this.$interface = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ReservationSpecificReservationInstancePropertiesLocalSsdArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<Integer> diskSizeGb;
        private @Nullable Input<String> $interface;

        public Builder() {
    	      // Empty
        }

        public Builder(ReservationSpecificReservationInstancePropertiesLocalSsdArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.diskSizeGb = defaults.diskSizeGb;
    	      this.$interface = defaults.$interface;
        }

        public Builder setDiskSizeGb(Input<Integer> diskSizeGb) {
            this.diskSizeGb = Objects.requireNonNull(diskSizeGb);
            return this;
        }

        public Builder setDiskSizeGb(Integer diskSizeGb) {
            this.diskSizeGb = Input.of(Objects.requireNonNull(diskSizeGb));
            return this;
        }

        public Builder set$interface(@Nullable Input<String> $interface) {
            this.$interface = $interface;
            return this;
        }

        public Builder set$interface(@Nullable String $interface) {
            this.$interface = Input.ofNullable($interface);
            return this;
        }

        public ReservationSpecificReservationInstancePropertiesLocalSsdArgs build() {
            return new ReservationSpecificReservationInstancePropertiesLocalSsdArgs(diskSizeGb, $interface);
        }
    }
}
