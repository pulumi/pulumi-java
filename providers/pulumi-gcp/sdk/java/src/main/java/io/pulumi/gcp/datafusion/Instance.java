// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.datafusion;

import io.pulumi.core.Input;
import io.pulumi.core.Output;
import io.pulumi.core.internal.annotations.OutputExport;
import io.pulumi.core.internal.annotations.ResourceType;
import io.pulumi.gcp.Utilities;
import io.pulumi.gcp.datafusion.InstanceArgs;
import io.pulumi.gcp.datafusion.inputs.InstanceState;
import io.pulumi.gcp.datafusion.outputs.InstanceNetworkConfig;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;

@ResourceType(type="gcp:datafusion/instance:Instance")
public class Instance extends io.pulumi.resources.CustomResource {
    @OutputExport(name="createTime", type=String.class, parameters={})
    private Output<String> createTime;

    public Output<String> getCreateTime() {
        return this.createTime;
    }
    @OutputExport(name="dataprocServiceAccount", type=String.class, parameters={})
    private Output</* @Nullable */ String> dataprocServiceAccount;

    public Output</* @Nullable */ String> getDataprocServiceAccount() {
        return this.dataprocServiceAccount;
    }
    @OutputExport(name="description", type=String.class, parameters={})
    private Output</* @Nullable */ String> description;

    public Output</* @Nullable */ String> getDescription() {
        return this.description;
    }
    @OutputExport(name="enableStackdriverLogging", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> enableStackdriverLogging;

    public Output</* @Nullable */ Boolean> getEnableStackdriverLogging() {
        return this.enableStackdriverLogging;
    }
    @OutputExport(name="enableStackdriverMonitoring", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> enableStackdriverMonitoring;

    public Output</* @Nullable */ Boolean> getEnableStackdriverMonitoring() {
        return this.enableStackdriverMonitoring;
    }
    @OutputExport(name="labels", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> labels;

    public Output</* @Nullable */ Map<String,String>> getLabels() {
        return this.labels;
    }
    @OutputExport(name="name", type=String.class, parameters={})
    private Output<String> name;

    public Output<String> getName() {
        return this.name;
    }
    @OutputExport(name="networkConfig", type=InstanceNetworkConfig.class, parameters={})
    private Output</* @Nullable */ InstanceNetworkConfig> networkConfig;

    public Output</* @Nullable */ InstanceNetworkConfig> getNetworkConfig() {
        return this.networkConfig;
    }
    @OutputExport(name="options", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> options;

    public Output</* @Nullable */ Map<String,String>> getOptions() {
        return this.options;
    }
    @OutputExport(name="privateInstance", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> privateInstance;

    public Output</* @Nullable */ Boolean> getPrivateInstance() {
        return this.privateInstance;
    }
    @OutputExport(name="project", type=String.class, parameters={})
    private Output<String> project;

    public Output<String> getProject() {
        return this.project;
    }
    @OutputExport(name="region", type=String.class, parameters={})
    private Output<String> region;

    public Output<String> getRegion() {
        return this.region;
    }
    @OutputExport(name="serviceAccount", type=String.class, parameters={})
    private Output<String> serviceAccount;

    public Output<String> getServiceAccount() {
        return this.serviceAccount;
    }
    @OutputExport(name="serviceEndpoint", type=String.class, parameters={})
    private Output<String> serviceEndpoint;

    public Output<String> getServiceEndpoint() {
        return this.serviceEndpoint;
    }
    @OutputExport(name="state", type=String.class, parameters={})
    private Output<String> state;

    public Output<String> getState() {
        return this.state;
    }
    @OutputExport(name="stateMessage", type=String.class, parameters={})
    private Output<String> stateMessage;

    public Output<String> getStateMessage() {
        return this.stateMessage;
    }
    @OutputExport(name="type", type=String.class, parameters={})
    private Output<String> type;

    public Output<String> getType() {
        return this.type;
    }
    @OutputExport(name="updateTime", type=String.class, parameters={})
    private Output<String> updateTime;

    public Output<String> getUpdateTime() {
        return this.updateTime;
    }
    @OutputExport(name="version", type=String.class, parameters={})
    private Output<String> version;

    public Output<String> getVersion() {
        return this.version;
    }

    public Instance(String name, InstanceArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("gcp:datafusion/instance:Instance", name, args == null ? InstanceArgs.Empty : args, makeResourceOptions(options, Input.empty()));
    }

    private Instance(String name, Input<String> id, @Nullable InstanceState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("gcp:datafusion/instance:Instance", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Input<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .setVersion(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    public static Instance get(String name, Input<String> id, @Nullable InstanceState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new Instance(name, id, state, options);
    }
}
