// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.compute.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import io.pulumi.gcp.compute.outputs.RegionAutoscalerAutoscalingPolicyCpuUtilization;
import io.pulumi.gcp.compute.outputs.RegionAutoscalerAutoscalingPolicyLoadBalancingUtilization;
import io.pulumi.gcp.compute.outputs.RegionAutoscalerAutoscalingPolicyMetric;
import io.pulumi.gcp.compute.outputs.RegionAutoscalerAutoscalingPolicyScaleDownControl;
import io.pulumi.gcp.compute.outputs.RegionAutoscalerAutoscalingPolicyScaleInControl;
import io.pulumi.gcp.compute.outputs.RegionAutoscalerAutoscalingPolicyScalingSchedule;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class RegionAutoscalerAutoscalingPolicy {
    private final @Nullable Integer cooldownPeriod;
    private final @Nullable RegionAutoscalerAutoscalingPolicyCpuUtilization cpuUtilization;
    private final @Nullable RegionAutoscalerAutoscalingPolicyLoadBalancingUtilization loadBalancingUtilization;
    private final Integer maxReplicas;
    private final @Nullable List<RegionAutoscalerAutoscalingPolicyMetric> metrics;
    private final Integer minReplicas;
    private final @Nullable String mode;
    private final @Nullable RegionAutoscalerAutoscalingPolicyScaleDownControl scaleDownControl;
    private final @Nullable RegionAutoscalerAutoscalingPolicyScaleInControl scaleInControl;
    private final @Nullable List<RegionAutoscalerAutoscalingPolicyScalingSchedule> scalingSchedules;

    @OutputCustomType.Constructor({"cooldownPeriod","cpuUtilization","loadBalancingUtilization","maxReplicas","metrics","minReplicas","mode","scaleDownControl","scaleInControl","scalingSchedules"})
    private RegionAutoscalerAutoscalingPolicy(
        @Nullable Integer cooldownPeriod,
        @Nullable RegionAutoscalerAutoscalingPolicyCpuUtilization cpuUtilization,
        @Nullable RegionAutoscalerAutoscalingPolicyLoadBalancingUtilization loadBalancingUtilization,
        Integer maxReplicas,
        @Nullable List<RegionAutoscalerAutoscalingPolicyMetric> metrics,
        Integer minReplicas,
        @Nullable String mode,
        @Nullable RegionAutoscalerAutoscalingPolicyScaleDownControl scaleDownControl,
        @Nullable RegionAutoscalerAutoscalingPolicyScaleInControl scaleInControl,
        @Nullable List<RegionAutoscalerAutoscalingPolicyScalingSchedule> scalingSchedules) {
        this.cooldownPeriod = cooldownPeriod;
        this.cpuUtilization = cpuUtilization;
        this.loadBalancingUtilization = loadBalancingUtilization;
        this.maxReplicas = Objects.requireNonNull(maxReplicas);
        this.metrics = metrics;
        this.minReplicas = Objects.requireNonNull(minReplicas);
        this.mode = mode;
        this.scaleDownControl = scaleDownControl;
        this.scaleInControl = scaleInControl;
        this.scalingSchedules = scalingSchedules;
    }

    public Optional<Integer> getCooldownPeriod() {
        return Optional.ofNullable(this.cooldownPeriod);
    }
    public Optional<RegionAutoscalerAutoscalingPolicyCpuUtilization> getCpuUtilization() {
        return Optional.ofNullable(this.cpuUtilization);
    }
    public Optional<RegionAutoscalerAutoscalingPolicyLoadBalancingUtilization> getLoadBalancingUtilization() {
        return Optional.ofNullable(this.loadBalancingUtilization);
    }
    public Integer getMaxReplicas() {
        return this.maxReplicas;
    }
    public List<RegionAutoscalerAutoscalingPolicyMetric> getMetrics() {
        return this.metrics == null ? List.of() : this.metrics;
    }
    public Integer getMinReplicas() {
        return this.minReplicas;
    }
    public Optional<String> getMode() {
        return Optional.ofNullable(this.mode);
    }
    public Optional<RegionAutoscalerAutoscalingPolicyScaleDownControl> getScaleDownControl() {
        return Optional.ofNullable(this.scaleDownControl);
    }
    public Optional<RegionAutoscalerAutoscalingPolicyScaleInControl> getScaleInControl() {
        return Optional.ofNullable(this.scaleInControl);
    }
    public List<RegionAutoscalerAutoscalingPolicyScalingSchedule> getScalingSchedules() {
        return this.scalingSchedules == null ? List.of() : this.scalingSchedules;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RegionAutoscalerAutoscalingPolicy defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Integer cooldownPeriod;
        private @Nullable RegionAutoscalerAutoscalingPolicyCpuUtilization cpuUtilization;
        private @Nullable RegionAutoscalerAutoscalingPolicyLoadBalancingUtilization loadBalancingUtilization;
        private Integer maxReplicas;
        private @Nullable List<RegionAutoscalerAutoscalingPolicyMetric> metrics;
        private Integer minReplicas;
        private @Nullable String mode;
        private @Nullable RegionAutoscalerAutoscalingPolicyScaleDownControl scaleDownControl;
        private @Nullable RegionAutoscalerAutoscalingPolicyScaleInControl scaleInControl;
        private @Nullable List<RegionAutoscalerAutoscalingPolicyScalingSchedule> scalingSchedules;

        public Builder() {
    	      // Empty
        }

        public Builder(RegionAutoscalerAutoscalingPolicy defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cooldownPeriod = defaults.cooldownPeriod;
    	      this.cpuUtilization = defaults.cpuUtilization;
    	      this.loadBalancingUtilization = defaults.loadBalancingUtilization;
    	      this.maxReplicas = defaults.maxReplicas;
    	      this.metrics = defaults.metrics;
    	      this.minReplicas = defaults.minReplicas;
    	      this.mode = defaults.mode;
    	      this.scaleDownControl = defaults.scaleDownControl;
    	      this.scaleInControl = defaults.scaleInControl;
    	      this.scalingSchedules = defaults.scalingSchedules;
        }

        public Builder setCooldownPeriod(@Nullable Integer cooldownPeriod) {
            this.cooldownPeriod = cooldownPeriod;
            return this;
        }

        public Builder setCpuUtilization(@Nullable RegionAutoscalerAutoscalingPolicyCpuUtilization cpuUtilization) {
            this.cpuUtilization = cpuUtilization;
            return this;
        }

        public Builder setLoadBalancingUtilization(@Nullable RegionAutoscalerAutoscalingPolicyLoadBalancingUtilization loadBalancingUtilization) {
            this.loadBalancingUtilization = loadBalancingUtilization;
            return this;
        }

        public Builder setMaxReplicas(Integer maxReplicas) {
            this.maxReplicas = Objects.requireNonNull(maxReplicas);
            return this;
        }

        public Builder setMetrics(@Nullable List<RegionAutoscalerAutoscalingPolicyMetric> metrics) {
            this.metrics = metrics;
            return this;
        }

        public Builder setMinReplicas(Integer minReplicas) {
            this.minReplicas = Objects.requireNonNull(minReplicas);
            return this;
        }

        public Builder setMode(@Nullable String mode) {
            this.mode = mode;
            return this;
        }

        public Builder setScaleDownControl(@Nullable RegionAutoscalerAutoscalingPolicyScaleDownControl scaleDownControl) {
            this.scaleDownControl = scaleDownControl;
            return this;
        }

        public Builder setScaleInControl(@Nullable RegionAutoscalerAutoscalingPolicyScaleInControl scaleInControl) {
            this.scaleInControl = scaleInControl;
            return this;
        }

        public Builder setScalingSchedules(@Nullable List<RegionAutoscalerAutoscalingPolicyScalingSchedule> scalingSchedules) {
            this.scalingSchedules = scalingSchedules;
            return this;
        }

        public RegionAutoscalerAutoscalingPolicy build() {
            return new RegionAutoscalerAutoscalingPolicy(cooldownPeriod, cpuUtilization, loadBalancingUtilization, maxReplicas, metrics, minReplicas, mode, scaleDownControl, scaleInControl, scalingSchedules);
        }
    }
}
