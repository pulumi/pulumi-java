// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.compute;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import io.pulumi.gcp.compute.inputs.PacketMirroringCollectorIlbArgs;
import io.pulumi.gcp.compute.inputs.PacketMirroringFilterArgs;
import io.pulumi.gcp.compute.inputs.PacketMirroringMirroredResourcesArgs;
import io.pulumi.gcp.compute.inputs.PacketMirroringNetworkArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class PacketMirroringArgs extends io.pulumi.resources.ResourceArgs {

    public static final PacketMirroringArgs Empty = new PacketMirroringArgs();

    @InputImport(name="collectorIlb", required=true)
    private final Input<PacketMirroringCollectorIlbArgs> collectorIlb;

    public Input<PacketMirroringCollectorIlbArgs> getCollectorIlb() {
        return this.collectorIlb;
    }

    @InputImport(name="description")
    private final @Nullable Input<String> description;

    public Input<String> getDescription() {
        return this.description == null ? Input.empty() : this.description;
    }

    @InputImport(name="filter")
    private final @Nullable Input<PacketMirroringFilterArgs> filter;

    public Input<PacketMirroringFilterArgs> getFilter() {
        return this.filter == null ? Input.empty() : this.filter;
    }

    @InputImport(name="mirroredResources", required=true)
    private final Input<PacketMirroringMirroredResourcesArgs> mirroredResources;

    public Input<PacketMirroringMirroredResourcesArgs> getMirroredResources() {
        return this.mirroredResources;
    }

    @InputImport(name="name")
    private final @Nullable Input<String> name;

    public Input<String> getName() {
        return this.name == null ? Input.empty() : this.name;
    }

    @InputImport(name="network", required=true)
    private final Input<PacketMirroringNetworkArgs> network;

    public Input<PacketMirroringNetworkArgs> getNetwork() {
        return this.network;
    }

    @InputImport(name="priority")
    private final @Nullable Input<Integer> priority;

    public Input<Integer> getPriority() {
        return this.priority == null ? Input.empty() : this.priority;
    }

    @InputImport(name="project")
    private final @Nullable Input<String> project;

    public Input<String> getProject() {
        return this.project == null ? Input.empty() : this.project;
    }

    @InputImport(name="region")
    private final @Nullable Input<String> region;

    public Input<String> getRegion() {
        return this.region == null ? Input.empty() : this.region;
    }

    public PacketMirroringArgs(
        Input<PacketMirroringCollectorIlbArgs> collectorIlb,
        @Nullable Input<String> description,
        @Nullable Input<PacketMirroringFilterArgs> filter,
        Input<PacketMirroringMirroredResourcesArgs> mirroredResources,
        @Nullable Input<String> name,
        Input<PacketMirroringNetworkArgs> network,
        @Nullable Input<Integer> priority,
        @Nullable Input<String> project,
        @Nullable Input<String> region) {
        this.collectorIlb = Objects.requireNonNull(collectorIlb, "expected parameter 'collectorIlb' to be non-null");
        this.description = description;
        this.filter = filter;
        this.mirroredResources = Objects.requireNonNull(mirroredResources, "expected parameter 'mirroredResources' to be non-null");
        this.name = name;
        this.network = Objects.requireNonNull(network, "expected parameter 'network' to be non-null");
        this.priority = priority;
        this.project = project;
        this.region = region;
    }

    private PacketMirroringArgs() {
        this.collectorIlb = Input.empty();
        this.description = Input.empty();
        this.filter = Input.empty();
        this.mirroredResources = Input.empty();
        this.name = Input.empty();
        this.network = Input.empty();
        this.priority = Input.empty();
        this.project = Input.empty();
        this.region = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PacketMirroringArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<PacketMirroringCollectorIlbArgs> collectorIlb;
        private @Nullable Input<String> description;
        private @Nullable Input<PacketMirroringFilterArgs> filter;
        private Input<PacketMirroringMirroredResourcesArgs> mirroredResources;
        private @Nullable Input<String> name;
        private Input<PacketMirroringNetworkArgs> network;
        private @Nullable Input<Integer> priority;
        private @Nullable Input<String> project;
        private @Nullable Input<String> region;

        public Builder() {
    	      // Empty
        }

        public Builder(PacketMirroringArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.collectorIlb = defaults.collectorIlb;
    	      this.description = defaults.description;
    	      this.filter = defaults.filter;
    	      this.mirroredResources = defaults.mirroredResources;
    	      this.name = defaults.name;
    	      this.network = defaults.network;
    	      this.priority = defaults.priority;
    	      this.project = defaults.project;
    	      this.region = defaults.region;
        }

        public Builder setCollectorIlb(Input<PacketMirroringCollectorIlbArgs> collectorIlb) {
            this.collectorIlb = Objects.requireNonNull(collectorIlb);
            return this;
        }

        public Builder setCollectorIlb(PacketMirroringCollectorIlbArgs collectorIlb) {
            this.collectorIlb = Input.of(Objects.requireNonNull(collectorIlb));
            return this;
        }

        public Builder setDescription(@Nullable Input<String> description) {
            this.description = description;
            return this;
        }

        public Builder setDescription(@Nullable String description) {
            this.description = Input.ofNullable(description);
            return this;
        }

        public Builder setFilter(@Nullable Input<PacketMirroringFilterArgs> filter) {
            this.filter = filter;
            return this;
        }

        public Builder setFilter(@Nullable PacketMirroringFilterArgs filter) {
            this.filter = Input.ofNullable(filter);
            return this;
        }

        public Builder setMirroredResources(Input<PacketMirroringMirroredResourcesArgs> mirroredResources) {
            this.mirroredResources = Objects.requireNonNull(mirroredResources);
            return this;
        }

        public Builder setMirroredResources(PacketMirroringMirroredResourcesArgs mirroredResources) {
            this.mirroredResources = Input.of(Objects.requireNonNull(mirroredResources));
            return this;
        }

        public Builder setName(@Nullable Input<String> name) {
            this.name = name;
            return this;
        }

        public Builder setName(@Nullable String name) {
            this.name = Input.ofNullable(name);
            return this;
        }

        public Builder setNetwork(Input<PacketMirroringNetworkArgs> network) {
            this.network = Objects.requireNonNull(network);
            return this;
        }

        public Builder setNetwork(PacketMirroringNetworkArgs network) {
            this.network = Input.of(Objects.requireNonNull(network));
            return this;
        }

        public Builder setPriority(@Nullable Input<Integer> priority) {
            this.priority = priority;
            return this;
        }

        public Builder setPriority(@Nullable Integer priority) {
            this.priority = Input.ofNullable(priority);
            return this;
        }

        public Builder setProject(@Nullable Input<String> project) {
            this.project = project;
            return this;
        }

        public Builder setProject(@Nullable String project) {
            this.project = Input.ofNullable(project);
            return this;
        }

        public Builder setRegion(@Nullable Input<String> region) {
            this.region = region;
            return this;
        }

        public Builder setRegion(@Nullable String region) {
            this.region = Input.ofNullable(region);
            return this;
        }

        public PacketMirroringArgs build() {
            return new PacketMirroringArgs(collectorIlb, description, filter, mirroredResources, name, network, priority, project, region);
        }
    }
}
