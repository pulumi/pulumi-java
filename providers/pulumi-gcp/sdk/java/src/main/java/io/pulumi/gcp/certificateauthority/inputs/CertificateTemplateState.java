// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.certificateauthority.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import io.pulumi.gcp.certificateauthority.inputs.CertificateTemplateIdentityConstraintsGetArgs;
import io.pulumi.gcp.certificateauthority.inputs.CertificateTemplatePassthroughExtensionsGetArgs;
import io.pulumi.gcp.certificateauthority.inputs.CertificateTemplatePredefinedValuesGetArgs;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class CertificateTemplateState extends io.pulumi.resources.ResourceArgs {

    public static final CertificateTemplateState Empty = new CertificateTemplateState();

    @InputImport(name="createTime")
    private final @Nullable Input<String> createTime;

    public Input<String> getCreateTime() {
        return this.createTime == null ? Input.empty() : this.createTime;
    }

    @InputImport(name="description")
    private final @Nullable Input<String> description;

    public Input<String> getDescription() {
        return this.description == null ? Input.empty() : this.description;
    }

    @InputImport(name="identityConstraints")
    private final @Nullable Input<CertificateTemplateIdentityConstraintsGetArgs> identityConstraints;

    public Input<CertificateTemplateIdentityConstraintsGetArgs> getIdentityConstraints() {
        return this.identityConstraints == null ? Input.empty() : this.identityConstraints;
    }

    @InputImport(name="labels")
    private final @Nullable Input<Map<String,String>> labels;

    public Input<Map<String,String>> getLabels() {
        return this.labels == null ? Input.empty() : this.labels;
    }

    @InputImport(name="location")
    private final @Nullable Input<String> location;

    public Input<String> getLocation() {
        return this.location == null ? Input.empty() : this.location;
    }

    @InputImport(name="name")
    private final @Nullable Input<String> name;

    public Input<String> getName() {
        return this.name == null ? Input.empty() : this.name;
    }

    @InputImport(name="passthroughExtensions")
    private final @Nullable Input<CertificateTemplatePassthroughExtensionsGetArgs> passthroughExtensions;

    public Input<CertificateTemplatePassthroughExtensionsGetArgs> getPassthroughExtensions() {
        return this.passthroughExtensions == null ? Input.empty() : this.passthroughExtensions;
    }

    @InputImport(name="predefinedValues")
    private final @Nullable Input<CertificateTemplatePredefinedValuesGetArgs> predefinedValues;

    public Input<CertificateTemplatePredefinedValuesGetArgs> getPredefinedValues() {
        return this.predefinedValues == null ? Input.empty() : this.predefinedValues;
    }

    @InputImport(name="project")
    private final @Nullable Input<String> project;

    public Input<String> getProject() {
        return this.project == null ? Input.empty() : this.project;
    }

    @InputImport(name="updateTime")
    private final @Nullable Input<String> updateTime;

    public Input<String> getUpdateTime() {
        return this.updateTime == null ? Input.empty() : this.updateTime;
    }

    public CertificateTemplateState(
        @Nullable Input<String> createTime,
        @Nullable Input<String> description,
        @Nullable Input<CertificateTemplateIdentityConstraintsGetArgs> identityConstraints,
        @Nullable Input<Map<String,String>> labels,
        @Nullable Input<String> location,
        @Nullable Input<String> name,
        @Nullable Input<CertificateTemplatePassthroughExtensionsGetArgs> passthroughExtensions,
        @Nullable Input<CertificateTemplatePredefinedValuesGetArgs> predefinedValues,
        @Nullable Input<String> project,
        @Nullable Input<String> updateTime) {
        this.createTime = createTime;
        this.description = description;
        this.identityConstraints = identityConstraints;
        this.labels = labels;
        this.location = location;
        this.name = name;
        this.passthroughExtensions = passthroughExtensions;
        this.predefinedValues = predefinedValues;
        this.project = project;
        this.updateTime = updateTime;
    }

    private CertificateTemplateState() {
        this.createTime = Input.empty();
        this.description = Input.empty();
        this.identityConstraints = Input.empty();
        this.labels = Input.empty();
        this.location = Input.empty();
        this.name = Input.empty();
        this.passthroughExtensions = Input.empty();
        this.predefinedValues = Input.empty();
        this.project = Input.empty();
        this.updateTime = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CertificateTemplateState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> createTime;
        private @Nullable Input<String> description;
        private @Nullable Input<CertificateTemplateIdentityConstraintsGetArgs> identityConstraints;
        private @Nullable Input<Map<String,String>> labels;
        private @Nullable Input<String> location;
        private @Nullable Input<String> name;
        private @Nullable Input<CertificateTemplatePassthroughExtensionsGetArgs> passthroughExtensions;
        private @Nullable Input<CertificateTemplatePredefinedValuesGetArgs> predefinedValues;
        private @Nullable Input<String> project;
        private @Nullable Input<String> updateTime;

        public Builder() {
    	      // Empty
        }

        public Builder(CertificateTemplateState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.createTime = defaults.createTime;
    	      this.description = defaults.description;
    	      this.identityConstraints = defaults.identityConstraints;
    	      this.labels = defaults.labels;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.passthroughExtensions = defaults.passthroughExtensions;
    	      this.predefinedValues = defaults.predefinedValues;
    	      this.project = defaults.project;
    	      this.updateTime = defaults.updateTime;
        }

        public Builder setCreateTime(@Nullable Input<String> createTime) {
            this.createTime = createTime;
            return this;
        }

        public Builder setCreateTime(@Nullable String createTime) {
            this.createTime = Input.ofNullable(createTime);
            return this;
        }

        public Builder setDescription(@Nullable Input<String> description) {
            this.description = description;
            return this;
        }

        public Builder setDescription(@Nullable String description) {
            this.description = Input.ofNullable(description);
            return this;
        }

        public Builder setIdentityConstraints(@Nullable Input<CertificateTemplateIdentityConstraintsGetArgs> identityConstraints) {
            this.identityConstraints = identityConstraints;
            return this;
        }

        public Builder setIdentityConstraints(@Nullable CertificateTemplateIdentityConstraintsGetArgs identityConstraints) {
            this.identityConstraints = Input.ofNullable(identityConstraints);
            return this;
        }

        public Builder setLabels(@Nullable Input<Map<String,String>> labels) {
            this.labels = labels;
            return this;
        }

        public Builder setLabels(@Nullable Map<String,String> labels) {
            this.labels = Input.ofNullable(labels);
            return this;
        }

        public Builder setLocation(@Nullable Input<String> location) {
            this.location = location;
            return this;
        }

        public Builder setLocation(@Nullable String location) {
            this.location = Input.ofNullable(location);
            return this;
        }

        public Builder setName(@Nullable Input<String> name) {
            this.name = name;
            return this;
        }

        public Builder setName(@Nullable String name) {
            this.name = Input.ofNullable(name);
            return this;
        }

        public Builder setPassthroughExtensions(@Nullable Input<CertificateTemplatePassthroughExtensionsGetArgs> passthroughExtensions) {
            this.passthroughExtensions = passthroughExtensions;
            return this;
        }

        public Builder setPassthroughExtensions(@Nullable CertificateTemplatePassthroughExtensionsGetArgs passthroughExtensions) {
            this.passthroughExtensions = Input.ofNullable(passthroughExtensions);
            return this;
        }

        public Builder setPredefinedValues(@Nullable Input<CertificateTemplatePredefinedValuesGetArgs> predefinedValues) {
            this.predefinedValues = predefinedValues;
            return this;
        }

        public Builder setPredefinedValues(@Nullable CertificateTemplatePredefinedValuesGetArgs predefinedValues) {
            this.predefinedValues = Input.ofNullable(predefinedValues);
            return this;
        }

        public Builder setProject(@Nullable Input<String> project) {
            this.project = project;
            return this;
        }

        public Builder setProject(@Nullable String project) {
            this.project = Input.ofNullable(project);
            return this;
        }

        public Builder setUpdateTime(@Nullable Input<String> updateTime) {
            this.updateTime = updateTime;
            return this;
        }

        public Builder setUpdateTime(@Nullable String updateTime) {
            this.updateTime = Input.ofNullable(updateTime);
            return this;
        }

        public CertificateTemplateState build() {
            return new CertificateTemplateState(createTime, description, identityConstraints, labels, location, name, passthroughExtensions, predefinedValues, project, updateTime);
        }
    }
}
