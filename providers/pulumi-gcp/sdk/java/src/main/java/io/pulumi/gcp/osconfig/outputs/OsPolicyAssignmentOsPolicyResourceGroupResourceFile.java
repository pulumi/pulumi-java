// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.osconfig.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import io.pulumi.gcp.osconfig.outputs.OsPolicyAssignmentOsPolicyResourceGroupResourceFileFile;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class OsPolicyAssignmentOsPolicyResourceGroupResourceFile {
    /**
     * A a file with this content. The size of the content is limited to 1024 characters.
     * 
     */
    private final @Nullable String content;
    /**
     * A remote or local source.
     * 
     */
    private final @Nullable OsPolicyAssignmentOsPolicyResourceGroupResourceFileFile file;
    /**
     * Required. The absolute path of the file within the VM.
     * 
     */
    private final String path;
    /**
     * - 
     * Consists of three octal digits which represent, in order, the permissions of the owner, group, and other users for the file (similarly to the numeric mode used in the linux chmod utility). Each digit represents a three bit number with the 4 bit corresponding to the read permissions, the 2 bit corresponds to the write bit, and the one bit corresponds to the execute permission. Default behavior is 755. Below are some examples of permissions and their associated values: read, write, and execute: 7 read and execute: 5 read and write: 6 read only: 4
     * 
     */
    private final @Nullable String permissions;
    /**
     * Required. Desired state of the file. Possible values: OS_POLICY_COMPLIANCE_STATE_UNSPECIFIED, COMPLIANT, NON_COMPLIANT, UNKNOWN, NO_OS_POLICIES_APPLICABLE
     * 
     */
    private final String state;

    @OutputCustomType.Constructor({"content","file","path","permissions","state"})
    private OsPolicyAssignmentOsPolicyResourceGroupResourceFile(
        @Nullable String content,
        @Nullable OsPolicyAssignmentOsPolicyResourceGroupResourceFileFile file,
        String path,
        @Nullable String permissions,
        String state) {
        this.content = content;
        this.file = file;
        this.path = Objects.requireNonNull(path);
        this.permissions = permissions;
        this.state = Objects.requireNonNull(state);
    }

    /**
     * A a file with this content. The size of the content is limited to 1024 characters.
     * 
     */
    public Optional<String> getContent() {
        return Optional.ofNullable(this.content);
    }
    /**
     * A remote or local source.
     * 
     */
    public Optional<OsPolicyAssignmentOsPolicyResourceGroupResourceFileFile> getFile() {
        return Optional.ofNullable(this.file);
    }
    /**
     * Required. The absolute path of the file within the VM.
     * 
     */
    public String getPath() {
        return this.path;
    }
    /**
     * - 
     * Consists of three octal digits which represent, in order, the permissions of the owner, group, and other users for the file (similarly to the numeric mode used in the linux chmod utility). Each digit represents a three bit number with the 4 bit corresponding to the read permissions, the 2 bit corresponds to the write bit, and the one bit corresponds to the execute permission. Default behavior is 755. Below are some examples of permissions and their associated values: read, write, and execute: 7 read and execute: 5 read and write: 6 read only: 4
     * 
     */
    public Optional<String> getPermissions() {
        return Optional.ofNullable(this.permissions);
    }
    /**
     * Required. Desired state of the file. Possible values: OS_POLICY_COMPLIANCE_STATE_UNSPECIFIED, COMPLIANT, NON_COMPLIANT, UNKNOWN, NO_OS_POLICIES_APPLICABLE
     * 
     */
    public String getState() {
        return this.state;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(OsPolicyAssignmentOsPolicyResourceGroupResourceFile defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String content;
        private @Nullable OsPolicyAssignmentOsPolicyResourceGroupResourceFileFile file;
        private String path;
        private @Nullable String permissions;
        private String state;

        public Builder() {
    	      // Empty
        }

        public Builder(OsPolicyAssignmentOsPolicyResourceGroupResourceFile defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.content = defaults.content;
    	      this.file = defaults.file;
    	      this.path = defaults.path;
    	      this.permissions = defaults.permissions;
    	      this.state = defaults.state;
        }

        public Builder setContent(@Nullable String content) {
            this.content = content;
            return this;
        }

        public Builder setFile(@Nullable OsPolicyAssignmentOsPolicyResourceGroupResourceFileFile file) {
            this.file = file;
            return this;
        }

        public Builder setPath(String path) {
            this.path = Objects.requireNonNull(path);
            return this;
        }

        public Builder setPermissions(@Nullable String permissions) {
            this.permissions = permissions;
            return this;
        }

        public Builder setState(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }

        public OsPolicyAssignmentOsPolicyResourceGroupResourceFile build() {
            return new OsPolicyAssignmentOsPolicyResourceGroupResourceFile(content, file, path, permissions, state);
        }
    }
}
