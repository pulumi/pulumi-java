// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.container.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.InputImport;
import io.pulumi.gcp.container.inputs.ClusterAddonsConfigGetArgs;
import io.pulumi.gcp.container.inputs.ClusterAuthenticatorGroupsConfigGetArgs;
import io.pulumi.gcp.container.inputs.ClusterClusterAutoscalingGetArgs;
import io.pulumi.gcp.container.inputs.ClusterClusterTelemetryGetArgs;
import io.pulumi.gcp.container.inputs.ClusterConfidentialNodesGetArgs;
import io.pulumi.gcp.container.inputs.ClusterDatabaseEncryptionGetArgs;
import io.pulumi.gcp.container.inputs.ClusterDefaultSnatStatusGetArgs;
import io.pulumi.gcp.container.inputs.ClusterDnsConfigGetArgs;
import io.pulumi.gcp.container.inputs.ClusterIdentityServiceConfigGetArgs;
import io.pulumi.gcp.container.inputs.ClusterIpAllocationPolicyGetArgs;
import io.pulumi.gcp.container.inputs.ClusterLoggingConfigGetArgs;
import io.pulumi.gcp.container.inputs.ClusterMaintenancePolicyGetArgs;
import io.pulumi.gcp.container.inputs.ClusterMasterAuthGetArgs;
import io.pulumi.gcp.container.inputs.ClusterMasterAuthorizedNetworksConfigGetArgs;
import io.pulumi.gcp.container.inputs.ClusterMonitoringConfigGetArgs;
import io.pulumi.gcp.container.inputs.ClusterNetworkPolicyGetArgs;
import io.pulumi.gcp.container.inputs.ClusterNodeConfigGetArgs;
import io.pulumi.gcp.container.inputs.ClusterNodePoolGetArgs;
import io.pulumi.gcp.container.inputs.ClusterNotificationConfigGetArgs;
import io.pulumi.gcp.container.inputs.ClusterPodSecurityPolicyConfigGetArgs;
import io.pulumi.gcp.container.inputs.ClusterPrivateClusterConfigGetArgs;
import io.pulumi.gcp.container.inputs.ClusterReleaseChannelGetArgs;
import io.pulumi.gcp.container.inputs.ClusterResourceUsageExportConfigGetArgs;
import io.pulumi.gcp.container.inputs.ClusterVerticalPodAutoscalingGetArgs;
import io.pulumi.gcp.container.inputs.ClusterWorkloadIdentityConfigGetArgs;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ClusterState extends io.pulumi.resources.ResourceArgs {

    public static final ClusterState Empty = new ClusterState();

    /**
     * The configuration for addons supported by GKE.
     * Structure is documented below.
     * 
     */
    @InputImport(name="addonsConfig")
      private final @Nullable Output<ClusterAddonsConfigGetArgs> addonsConfig;

    public Output<ClusterAddonsConfigGetArgs> getAddonsConfig() {
        return this.addonsConfig == null ? Output.empty() : this.addonsConfig;
    }

    /**
     * Configuration for the
     * [Google Groups for GKE](https://cloud.google.com/kubernetes-engine/docs/how-to/role-based-access-control#groups-setup-gsuite) feature.
     * Structure is documented below.
     * 
     */
    @InputImport(name="authenticatorGroupsConfig")
      private final @Nullable Output<ClusterAuthenticatorGroupsConfigGetArgs> authenticatorGroupsConfig;

    public Output<ClusterAuthenticatorGroupsConfigGetArgs> getAuthenticatorGroupsConfig() {
        return this.authenticatorGroupsConfig == null ? Output.empty() : this.authenticatorGroupsConfig;
    }

    /**
     * Per-cluster configuration of Node Auto-Provisioning with Cluster Autoscaler to
     * automatically adjust the size of the cluster and create/delete node pools based
     * on the current needs of the cluster's workload. See the
     * [guide to using Node Auto-Provisioning](https://cloud.google.com/kubernetes-engine/docs/how-to/node-auto-provisioning)
     * for more details. Structure is documented below.
     * 
     */
    @InputImport(name="clusterAutoscaling")
      private final @Nullable Output<ClusterClusterAutoscalingGetArgs> clusterAutoscaling;

    public Output<ClusterClusterAutoscalingGetArgs> getClusterAutoscaling() {
        return this.clusterAutoscaling == null ? Output.empty() : this.clusterAutoscaling;
    }

    /**
     * The IP address range of the Kubernetes pods
     * in this cluster in CIDR notation (e.g. `10.96.0.0/14`). Leave blank to have one
     * automatically chosen or specify a `/14` block in `10.0.0.0/8`. This field will
     * only work for routes-based clusters, where `ip_allocation_policy` is not defined.
     * 
     */
    @InputImport(name="clusterIpv4Cidr")
      private final @Nullable Output<String> clusterIpv4Cidr;

    public Output<String> getClusterIpv4Cidr() {
        return this.clusterIpv4Cidr == null ? Output.empty() : this.clusterIpv4Cidr;
    }

    /**
     * Configuration for
     * [ClusterTelemetry](https://cloud.google.com/monitoring/kubernetes-engine/installing#controlling_the_collection_of_application_logs) feature,
     * Structure is documented below.
     * 
     */
    @InputImport(name="clusterTelemetry")
      private final @Nullable Output<ClusterClusterTelemetryGetArgs> clusterTelemetry;

    public Output<ClusterClusterTelemetryGetArgs> getClusterTelemetry() {
        return this.clusterTelemetry == null ? Output.empty() : this.clusterTelemetry;
    }

    /**
     * Configuration for [Confidential Nodes](https://cloud.google.com/kubernetes-engine/docs/how-to/confidential-gke-nodes) feature. Structure is documented below documented below.
     * 
     */
    @InputImport(name="confidentialNodes")
      private final @Nullable Output<ClusterConfidentialNodesGetArgs> confidentialNodes;

    public Output<ClusterConfidentialNodesGetArgs> getConfidentialNodes() {
        return this.confidentialNodes == null ? Output.empty() : this.confidentialNodes;
    }

    /**
     * Structure is documented below.
     * 
     */
    @InputImport(name="databaseEncryption")
      private final @Nullable Output<ClusterDatabaseEncryptionGetArgs> databaseEncryption;

    public Output<ClusterDatabaseEncryptionGetArgs> getDatabaseEncryption() {
        return this.databaseEncryption == null ? Output.empty() : this.databaseEncryption;
    }

    /**
     * The desired datapath provider for this cluster. By default, uses the IPTables-based kube-proxy implementation.
     * 
     */
    @InputImport(name="datapathProvider")
      private final @Nullable Output<String> datapathProvider;

    public Output<String> getDatapathProvider() {
        return this.datapathProvider == null ? Output.empty() : this.datapathProvider;
    }

    /**
     * The default maximum number of pods
     * per node in this cluster. This doesn't work on "routes-based" clusters, clusters
     * that don't have IP Aliasing enabled. See the [official documentation](https://cloud.google.com/kubernetes-engine/docs/how-to/flexible-pod-cidr)
     * for more information.
     * 
     */
    @InputImport(name="defaultMaxPodsPerNode")
      private final @Nullable Output<Integer> defaultMaxPodsPerNode;

    public Output<Integer> getDefaultMaxPodsPerNode() {
        return this.defaultMaxPodsPerNode == null ? Output.empty() : this.defaultMaxPodsPerNode;
    }

    /**
     * [GKE SNAT](https://cloud.google.com/kubernetes-engine/docs/how-to/ip-masquerade-agent#how_ipmasq_works) DefaultSnatStatus contains the desired state of whether default sNAT should be disabled on the cluster, [API doc](https://cloud.google.com/kubernetes-engine/docs/reference/rest/v1beta1/projects.locations.clusters#networkconfig). Structure is documented below
     * 
     */
    @InputImport(name="defaultSnatStatus")
      private final @Nullable Output<ClusterDefaultSnatStatusGetArgs> defaultSnatStatus;

    public Output<ClusterDefaultSnatStatusGetArgs> getDefaultSnatStatus() {
        return this.defaultSnatStatus == null ? Output.empty() : this.defaultSnatStatus;
    }

    /**
     * Description of the cluster.
     * 
     */
    @InputImport(name="description")
      private final @Nullable Output<String> description;

    public Output<String> getDescription() {
        return this.description == null ? Output.empty() : this.description;
    }

    /**
     * Configuration for [Using Cloud DNS for GKE](https://cloud.google.com/kubernetes-engine/docs/how-to/cloud-dns). Structure is documented below.
     * 
     */
    @InputImport(name="dnsConfig")
      private final @Nullable Output<ClusterDnsConfigGetArgs> dnsConfig;

    public Output<ClusterDnsConfigGetArgs> getDnsConfig() {
        return this.dnsConfig == null ? Output.empty() : this.dnsConfig;
    }

    /**
     * Enable Autopilot for this cluster. Defaults to `false`.
     * Note that when this option is enabled, certain features of Standard GKE are not available.
     * See the [official documentation](https://cloud.google.com/kubernetes-engine/docs/concepts/autopilot-overview#comparison)
     * for available features.
     * 
     */
    @InputImport(name="enableAutopilot")
      private final @Nullable Output<Boolean> enableAutopilot;

    public Output<Boolean> getEnableAutopilot() {
        return this.enableAutopilot == null ? Output.empty() : this.enableAutopilot;
    }

    /**
     * Enable Binary Authorization for this cluster.
     * If enabled, all container images will be validated by Google Binary Authorization.
     * 
     */
    @InputImport(name="enableBinaryAuthorization")
      private final @Nullable Output<Boolean> enableBinaryAuthorization;

    public Output<Boolean> getEnableBinaryAuthorization() {
        return this.enableBinaryAuthorization == null ? Output.empty() : this.enableBinaryAuthorization;
    }

    /**
     * Whether Intra-node visibility is enabled for this cluster. This makes same node pod to pod traffic visible for VPC network.
     * 
     */
    @InputImport(name="enableIntranodeVisibility")
      private final @Nullable Output<Boolean> enableIntranodeVisibility;

    public Output<Boolean> getEnableIntranodeVisibility() {
        return this.enableIntranodeVisibility == null ? Output.empty() : this.enableIntranodeVisibility;
    }

    /**
     * Whether to enable Kubernetes Alpha features for
     * this cluster. Note that when this option is enabled, the cluster cannot be upgraded
     * and will be automatically deleted after 30 days.
     * 
     */
    @InputImport(name="enableKubernetesAlpha")
      private final @Nullable Output<Boolean> enableKubernetesAlpha;

    public Output<Boolean> getEnableKubernetesAlpha() {
        return this.enableKubernetesAlpha == null ? Output.empty() : this.enableKubernetesAlpha;
    }

    /**
     * Whether L4ILB Subsetting is enabled for this cluster.
     * 
     */
    @InputImport(name="enableL4IlbSubsetting")
      private final @Nullable Output<Boolean> enableL4IlbSubsetting;

    public Output<Boolean> getEnableL4IlbSubsetting() {
        return this.enableL4IlbSubsetting == null ? Output.empty() : this.enableL4IlbSubsetting;
    }

    /**
     * Whether the ABAC authorizer is enabled for this cluster.
     * When enabled, identities in the system, including service accounts, nodes, and controllers,
     * will have statically granted permissions beyond those provided by the RBAC configuration or IAM.
     * Defaults to `false`
     * 
     */
    @InputImport(name="enableLegacyAbac")
      private final @Nullable Output<Boolean> enableLegacyAbac;

    public Output<Boolean> getEnableLegacyAbac() {
        return this.enableLegacyAbac == null ? Output.empty() : this.enableLegacyAbac;
    }

    /**
     * Enable Shielded Nodes features on all nodes in this cluster.  Defaults to `true`.
     * 
     */
    @InputImport(name="enableShieldedNodes")
      private final @Nullable Output<Boolean> enableShieldedNodes;

    public Output<Boolean> getEnableShieldedNodes() {
        return this.enableShieldedNodes == null ? Output.empty() : this.enableShieldedNodes;
    }

    /**
     * Whether to enable Cloud TPU resources in this cluster.
     * See the [official documentation](https://cloud.google.com/tpu/docs/kubernetes-engine-setup).
     * 
     */
    @InputImport(name="enableTpu")
      private final @Nullable Output<Boolean> enableTpu;

    public Output<Boolean> getEnableTpu() {
        return this.enableTpu == null ? Output.empty() : this.enableTpu;
    }

    /**
     * The IP address of this cluster's Kubernetes master.
     * 
     */
    @InputImport(name="endpoint")
      private final @Nullable Output<String> endpoint;

    public Output<String> getEndpoint() {
        return this.endpoint == null ? Output.empty() : this.endpoint;
    }

    /**
     * . Structure is documented below.
     * 
     */
    @InputImport(name="identityServiceConfig")
      private final @Nullable Output<ClusterIdentityServiceConfigGetArgs> identityServiceConfig;

    public Output<ClusterIdentityServiceConfigGetArgs> getIdentityServiceConfig() {
        return this.identityServiceConfig == null ? Output.empty() : this.identityServiceConfig;
    }

    /**
     * The number of nodes to create in this
     * cluster's default node pool. In regional or multi-zonal clusters, this is the
     * number of nodes per zone. Must be set if `node_pool` is not set. If you're using
     * `gcp.container.NodePool` objects with no default node pool, you'll need to
     * set this to a value of at least `1`, alongside setting
     * `remove_default_node_pool` to `true`.
     * 
     */
    @InputImport(name="initialNodeCount")
      private final @Nullable Output<Integer> initialNodeCount;

    public Output<Integer> getInitialNodeCount() {
        return this.initialNodeCount == null ? Output.empty() : this.initialNodeCount;
    }

    /**
     * Configuration of cluster IP allocation for
     * VPC-native clusters. Adding this block enables [IP aliasing](https://cloud.google.com/kubernetes-engine/docs/how-to/ip-aliases),
     * making the cluster VPC-native instead of routes-based. Structure is documented
     * below.
     * 
     */
    @InputImport(name="ipAllocationPolicy")
      private final @Nullable Output<ClusterIpAllocationPolicyGetArgs> ipAllocationPolicy;

    public Output<ClusterIpAllocationPolicyGetArgs> getIpAllocationPolicy() {
        return this.ipAllocationPolicy == null ? Output.empty() : this.ipAllocationPolicy;
    }

    /**
     * The fingerprint of the set of labels for this cluster.
     * 
     */
    @InputImport(name="labelFingerprint")
      private final @Nullable Output<String> labelFingerprint;

    public Output<String> getLabelFingerprint() {
        return this.labelFingerprint == null ? Output.empty() : this.labelFingerprint;
    }

    /**
     * The location (region or zone) in which the cluster
     * master will be created, as well as the default node location. If you specify a
     * zone (such as `us-central1-a`), the cluster will be a zonal cluster with a
     * single cluster master. If you specify a region (such as `us-west1`), the
     * cluster will be a regional cluster with multiple masters spread across zones in
     * the region, and with default node locations in those zones as well
     * 
     */
    @InputImport(name="location")
      private final @Nullable Output<String> location;

    public Output<String> getLocation() {
        return this.location == null ? Output.empty() : this.location;
    }

    /**
     * Logging configuration for the cluster.
     * Structure is documented below.
     * 
     */
    @InputImport(name="loggingConfig")
      private final @Nullable Output<ClusterLoggingConfigGetArgs> loggingConfig;

    public Output<ClusterLoggingConfigGetArgs> getLoggingConfig() {
        return this.loggingConfig == null ? Output.empty() : this.loggingConfig;
    }

    /**
     * The logging service that the cluster should
     * write logs to. Available options include `logging.googleapis.com`(Legacy Stackdriver),
     * `logging.googleapis.com/kubernetes`(Stackdriver Kubernetes Engine Logging), and `none`. Defaults to `logging.googleapis.com/kubernetes`
     * 
     */
    @InputImport(name="loggingService")
      private final @Nullable Output<String> loggingService;

    public Output<String> getLoggingService() {
        return this.loggingService == null ? Output.empty() : this.loggingService;
    }

    /**
     * The maintenance policy to use for the cluster. Structure is
     * documented below.
     * 
     */
    @InputImport(name="maintenancePolicy")
      private final @Nullable Output<ClusterMaintenancePolicyGetArgs> maintenancePolicy;

    public Output<ClusterMaintenancePolicyGetArgs> getMaintenancePolicy() {
        return this.maintenancePolicy == null ? Output.empty() : this.maintenancePolicy;
    }

    /**
     * The authentication information for accessing the
     * Kubernetes master. Some values in this block are only returned by the API if
     * your service account has permission to get credentials for your GKE cluster. If
     * you see an unexpected diff unsetting your client cert, ensure you have the
     * `container.clusters.getCredentials` permission.
     * Structure is documented below.
     * 
     */
    @InputImport(name="masterAuth")
      private final @Nullable Output<ClusterMasterAuthGetArgs> masterAuth;

    public Output<ClusterMasterAuthGetArgs> getMasterAuth() {
        return this.masterAuth == null ? Output.empty() : this.masterAuth;
    }

    /**
     * The desired
     * configuration options for master authorized networks. Omit the
     * nested `cidr_blocks` attribute to disallow external access (except
     * the cluster node IPs, which GKE automatically whitelists).
     * Structure is documented below.
     * 
     */
    @InputImport(name="masterAuthorizedNetworksConfig")
      private final @Nullable Output<ClusterMasterAuthorizedNetworksConfigGetArgs> masterAuthorizedNetworksConfig;

    public Output<ClusterMasterAuthorizedNetworksConfigGetArgs> getMasterAuthorizedNetworksConfig() {
        return this.masterAuthorizedNetworksConfig == null ? Output.empty() : this.masterAuthorizedNetworksConfig;
    }

    /**
     * The current version of the master in the cluster. This may
     * be different than the `min_master_version` set in the config if the master
     * has been updated by GKE.
     * 
     */
    @InputImport(name="masterVersion")
      private final @Nullable Output<String> masterVersion;

    public Output<String> getMasterVersion() {
        return this.masterVersion == null ? Output.empty() : this.masterVersion;
    }

    /**
     * The minimum version of the master. GKE
     * will auto-update the master to new versions, so this does not guarantee the
     * current master version--use the read-only `master_version` field to obtain that.
     * If unset, the cluster's version will be set by GKE to the version of the most recent
     * official release (which is not necessarily the latest version).  Most users will find
     * the `gcp.container.getEngineVersions` data source useful - it indicates which versions
     * are available. If you intend to specify versions manually,
     * [the docs](https://cloud.google.com/kubernetes-engine/versioning-and-upgrades#specifying_cluster_version)
     * describe the various acceptable formats for this field.
     * 
     */
    @InputImport(name="minMasterVersion")
      private final @Nullable Output<String> minMasterVersion;

    public Output<String> getMinMasterVersion() {
        return this.minMasterVersion == null ? Output.empty() : this.minMasterVersion;
    }

    /**
     * Monitoring configuration for the cluster.
     * Structure is documented below.
     * 
     */
    @InputImport(name="monitoringConfig")
      private final @Nullable Output<ClusterMonitoringConfigGetArgs> monitoringConfig;

    public Output<ClusterMonitoringConfigGetArgs> getMonitoringConfig() {
        return this.monitoringConfig == null ? Output.empty() : this.monitoringConfig;
    }

    /**
     * The monitoring service that the cluster
     * should write metrics to.
     * Automatically send metrics from pods in the cluster to the Google Cloud Monitoring API.
     * VM metrics will be collected by Google Compute Engine regardless of this setting
     * Available options include
     * `monitoring.googleapis.com`(Legacy Stackdriver), `monitoring.googleapis.com/kubernetes`(Stackdriver Kubernetes Engine Monitoring), and `none`.
     * Defaults to `monitoring.googleapis.com/kubernetes`
     * 
     */
    @InputImport(name="monitoringService")
      private final @Nullable Output<String> monitoringService;

    public Output<String> getMonitoringService() {
        return this.monitoringService == null ? Output.empty() : this.monitoringService;
    }

    /**
     * The name of the cluster, unique within the project and
     * location.
     * 
     */
    @InputImport(name="name")
      private final @Nullable Output<String> name;

    public Output<String> getName() {
        return this.name == null ? Output.empty() : this.name;
    }

    /**
     * The name or self_link of the Google Compute Engine
     * network to which the cluster is connected. For Shared VPC, set this to the self link of the
     * shared network.
     * 
     */
    @InputImport(name="network")
      private final @Nullable Output<String> network;

    public Output<String> getNetwork() {
        return this.network == null ? Output.empty() : this.network;
    }

    /**
     * Configuration options for the
     * [NetworkPolicy](https://kubernetes.io/docs/concepts/services-networking/networkpolicies/)
     * feature. Structure is documented below.
     * 
     */
    @InputImport(name="networkPolicy")
      private final @Nullable Output<ClusterNetworkPolicyGetArgs> networkPolicy;

    public Output<ClusterNetworkPolicyGetArgs> getNetworkPolicy() {
        return this.networkPolicy == null ? Output.empty() : this.networkPolicy;
    }

    /**
     * Determines whether alias IPs or routes will be used for pod IPs in the cluster.
     * Options are `VPC_NATIVE` or `ROUTES`. `VPC_NATIVE` enables [IP aliasing](https://cloud.google.com/kubernetes-engine/docs/how-to/ip-aliases),
     * and requires the `ip_allocation_policy` block to be defined. By default when this field is unspecified, GKE will create a `ROUTES`-based cluster.
     * 
     */
    @InputImport(name="networkingMode")
      private final @Nullable Output<String> networkingMode;

    public Output<String> getNetworkingMode() {
        return this.networkingMode == null ? Output.empty() : this.networkingMode;
    }

    /**
     * Parameters used in creating the default node pool.
     * Generally, this field should not be used at the same time as a
     * `gcp.container.NodePool` or a `node_pool` block; this configuration
     * manages the default node pool, which isn't recommended to be used.
     * Structure is documented below.
     * 
     */
    @InputImport(name="nodeConfig")
      private final @Nullable Output<ClusterNodeConfigGetArgs> nodeConfig;

    public Output<ClusterNodeConfigGetArgs> getNodeConfig() {
        return this.nodeConfig == null ? Output.empty() : this.nodeConfig;
    }

    /**
     * The list of zones in which the cluster's nodes
     * are located. Nodes must be in the region of their regional cluster or in the
     * same region as their cluster's zone for zonal clusters. If this is specified for
     * a zonal cluster, omit the cluster's zone.
     * 
     */
    @InputImport(name="nodeLocations")
      private final @Nullable Output<List<String>> nodeLocations;

    public Output<List<String>> getNodeLocations() {
        return this.nodeLocations == null ? Output.empty() : this.nodeLocations;
    }

    /**
     * List of node pools associated with this cluster.
     * See gcp.container.NodePool for schema.
     * **Warning:** node pools defined inside a cluster can't be changed (or added/removed) after
     * cluster creation without deleting and recreating the entire cluster. Unless you absolutely need the ability
     * to say "these are the _only_ node pools associated with this cluster", use the
     * gcp.container.NodePool resource instead of this property.
     * 
     */
    @InputImport(name="nodePools")
      private final @Nullable Output<List<ClusterNodePoolGetArgs>> nodePools;

    public Output<List<ClusterNodePoolGetArgs>> getNodePools() {
        return this.nodePools == null ? Output.empty() : this.nodePools;
    }

    /**
     * The Kubernetes version on the nodes. Must either be unset
     * or set to the same value as `min_master_version` on create. Defaults to the default
     * version set by GKE which is not necessarily the latest version. This only affects
     * nodes in the default node pool. While a fuzzy version can be specified, it's
     * recommended that you specify explicit versions as the provider will see spurious diffs
     * when fuzzy versions are used. See the `gcp.container.getEngineVersions` data source's
     * `version_prefix` field to approximate fuzzy versions.
     * To update nodes in other node pools, use the `version` attribute on the node pool.
     * 
     */
    @InputImport(name="nodeVersion")
      private final @Nullable Output<String> nodeVersion;

    public Output<String> getNodeVersion() {
        return this.nodeVersion == null ? Output.empty() : this.nodeVersion;
    }

    /**
     * Configuration for the [cluster upgrade notifications](https://cloud.google.com/kubernetes-engine/docs/how-to/cluster-upgrade-notifications) feature. Structure is documented below.
     * 
     */
    @InputImport(name="notificationConfig")
      private final @Nullable Output<ClusterNotificationConfigGetArgs> notificationConfig;

    public Output<ClusterNotificationConfigGetArgs> getNotificationConfig() {
        return this.notificationConfig == null ? Output.empty() : this.notificationConfig;
    }

    @InputImport(name="operation")
      private final @Nullable Output<String> operation;

    public Output<String> getOperation() {
        return this.operation == null ? Output.empty() : this.operation;
    }

    /**
     * ) Configuration for the
     * [PodSecurityPolicy](https://cloud.google.com/kubernetes-engine/docs/how-to/pod-security-policies) feature.
     * Structure is documented below.
     * 
     */
    @InputImport(name="podSecurityPolicyConfig")
      private final @Nullable Output<ClusterPodSecurityPolicyConfigGetArgs> podSecurityPolicyConfig;

    public Output<ClusterPodSecurityPolicyConfigGetArgs> getPodSecurityPolicyConfig() {
        return this.podSecurityPolicyConfig == null ? Output.empty() : this.podSecurityPolicyConfig;
    }

    /**
     * Configuration for [private clusters](https://cloud.google.com/kubernetes-engine/docs/how-to/private-clusters),
     * clusters with private nodes. Structure is documented below.
     * 
     */
    @InputImport(name="privateClusterConfig")
      private final @Nullable Output<ClusterPrivateClusterConfigGetArgs> privateClusterConfig;

    public Output<ClusterPrivateClusterConfigGetArgs> getPrivateClusterConfig() {
        return this.privateClusterConfig == null ? Output.empty() : this.privateClusterConfig;
    }

    /**
     * The desired state of IPv6 connectivity to Google Services. By default, no private IPv6 access to or from Google Services (all access will be via IPv4).
     * 
     */
    @InputImport(name="privateIpv6GoogleAccess")
      private final @Nullable Output<String> privateIpv6GoogleAccess;

    public Output<String> getPrivateIpv6GoogleAccess() {
        return this.privateIpv6GoogleAccess == null ? Output.empty() : this.privateIpv6GoogleAccess;
    }

    /**
     * The ID of the project in which the resource belongs. If it
     * is not provided, the provider project is used.
     * 
     */
    @InputImport(name="project")
      private final @Nullable Output<String> project;

    public Output<String> getProject() {
        return this.project == null ? Output.empty() : this.project;
    }

    /**
     * Configuration options for the [Release channel](https://cloud.google.com/kubernetes-engine/docs/concepts/release-channels)
     * feature, which provide more control over automatic upgrades of your GKE clusters.
     * When updating this field, GKE imposes specific version requirements. See
     * [Selecting a new release channel](https://cloud.google.com/kubernetes-engine/docs/concepts/release-channels#selecting_a_new_release_channel)
     * for more details; the `gcp.container.getEngineVersions` datasource can provide
     * the default version for a channel. Note that removing the `release_channel`
     * field from your config will cause the provider to stop managing your cluster's
     * release channel, but will not unenroll it. Instead, use the `"UNSPECIFIED"`
     * channel. Structure is documented below.
     * 
     */
    @InputImport(name="releaseChannel")
      private final @Nullable Output<ClusterReleaseChannelGetArgs> releaseChannel;

    public Output<ClusterReleaseChannelGetArgs> getReleaseChannel() {
        return this.releaseChannel == null ? Output.empty() : this.releaseChannel;
    }

    /**
     * If `true`, deletes the default node
     * pool upon cluster creation. If you're using `gcp.container.NodePool`
     * resources with no default node pool, this should be set to `true`, alongside
     * setting `initial_node_count` to at least `1`.
     * 
     */
    @InputImport(name="removeDefaultNodePool")
      private final @Nullable Output<Boolean> removeDefaultNodePool;

    public Output<Boolean> getRemoveDefaultNodePool() {
        return this.removeDefaultNodePool == null ? Output.empty() : this.removeDefaultNodePool;
    }

    /**
     * The GCE resource labels (a map of key/value pairs) to be applied to the cluster.
     * 
     */
    @InputImport(name="resourceLabels")
      private final @Nullable Output<Map<String,String>> resourceLabels;

    public Output<Map<String,String>> getResourceLabels() {
        return this.resourceLabels == null ? Output.empty() : this.resourceLabels;
    }

    /**
     * Configuration for the
     * [ResourceUsageExportConfig](https://cloud.google.com/kubernetes-engine/docs/how-to/cluster-usage-metering) feature.
     * Structure is documented below.
     * 
     */
    @InputImport(name="resourceUsageExportConfig")
      private final @Nullable Output<ClusterResourceUsageExportConfigGetArgs> resourceUsageExportConfig;

    public Output<ClusterResourceUsageExportConfigGetArgs> getResourceUsageExportConfig() {
        return this.resourceUsageExportConfig == null ? Output.empty() : this.resourceUsageExportConfig;
    }

    /**
     * The server-defined URL for the resource.
     * 
     */
    @InputImport(name="selfLink")
      private final @Nullable Output<String> selfLink;

    public Output<String> getSelfLink() {
        return this.selfLink == null ? Output.empty() : this.selfLink;
    }

    /**
     * The IP address range of the Kubernetes services in this
     * cluster, in [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing)
     * notation (e.g. `1.2.3.4/29`). Service addresses are typically put in the last
     * `/16` from the container CIDR.
     * 
     */
    @InputImport(name="servicesIpv4Cidr")
      private final @Nullable Output<String> servicesIpv4Cidr;

    public Output<String> getServicesIpv4Cidr() {
        return this.servicesIpv4Cidr == null ? Output.empty() : this.servicesIpv4Cidr;
    }

    /**
     * The name or self_link of the Google Compute Engine
     * subnetwork in which the cluster's instances are launched.
     * 
     */
    @InputImport(name="subnetwork")
      private final @Nullable Output<String> subnetwork;

    public Output<String> getSubnetwork() {
        return this.subnetwork == null ? Output.empty() : this.subnetwork;
    }

    /**
     * The IP address range of the Cloud TPUs in this cluster, in
     * [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing)
     * notation (e.g. `1.2.3.4/29`).
     * 
     */
    @InputImport(name="tpuIpv4CidrBlock")
      private final @Nullable Output<String> tpuIpv4CidrBlock;

    public Output<String> getTpuIpv4CidrBlock() {
        return this.tpuIpv4CidrBlock == null ? Output.empty() : this.tpuIpv4CidrBlock;
    }

    /**
     * Vertical Pod Autoscaling automatically adjusts the resources of pods controlled by it.
     * Structure is documented below.
     * 
     */
    @InputImport(name="verticalPodAutoscaling")
      private final @Nullable Output<ClusterVerticalPodAutoscalingGetArgs> verticalPodAutoscaling;

    public Output<ClusterVerticalPodAutoscalingGetArgs> getVerticalPodAutoscaling() {
        return this.verticalPodAutoscaling == null ? Output.empty() : this.verticalPodAutoscaling;
    }

    /**
     * Workload Identity allows Kubernetes service accounts to act as a user-managed
     * [Google IAM Service Account](https://cloud.google.com/iam/docs/service-accounts#user-managed_service_accounts).
     * Structure is documented below.
     * 
     */
    @InputImport(name="workloadIdentityConfig")
      private final @Nullable Output<ClusterWorkloadIdentityConfigGetArgs> workloadIdentityConfig;

    public Output<ClusterWorkloadIdentityConfigGetArgs> getWorkloadIdentityConfig() {
        return this.workloadIdentityConfig == null ? Output.empty() : this.workloadIdentityConfig;
    }

    public ClusterState(
        @Nullable Output<ClusterAddonsConfigGetArgs> addonsConfig,
        @Nullable Output<ClusterAuthenticatorGroupsConfigGetArgs> authenticatorGroupsConfig,
        @Nullable Output<ClusterClusterAutoscalingGetArgs> clusterAutoscaling,
        @Nullable Output<String> clusterIpv4Cidr,
        @Nullable Output<ClusterClusterTelemetryGetArgs> clusterTelemetry,
        @Nullable Output<ClusterConfidentialNodesGetArgs> confidentialNodes,
        @Nullable Output<ClusterDatabaseEncryptionGetArgs> databaseEncryption,
        @Nullable Output<String> datapathProvider,
        @Nullable Output<Integer> defaultMaxPodsPerNode,
        @Nullable Output<ClusterDefaultSnatStatusGetArgs> defaultSnatStatus,
        @Nullable Output<String> description,
        @Nullable Output<ClusterDnsConfigGetArgs> dnsConfig,
        @Nullable Output<Boolean> enableAutopilot,
        @Nullable Output<Boolean> enableBinaryAuthorization,
        @Nullable Output<Boolean> enableIntranodeVisibility,
        @Nullable Output<Boolean> enableKubernetesAlpha,
        @Nullable Output<Boolean> enableL4IlbSubsetting,
        @Nullable Output<Boolean> enableLegacyAbac,
        @Nullable Output<Boolean> enableShieldedNodes,
        @Nullable Output<Boolean> enableTpu,
        @Nullable Output<String> endpoint,
        @Nullable Output<ClusterIdentityServiceConfigGetArgs> identityServiceConfig,
        @Nullable Output<Integer> initialNodeCount,
        @Nullable Output<ClusterIpAllocationPolicyGetArgs> ipAllocationPolicy,
        @Nullable Output<String> labelFingerprint,
        @Nullable Output<String> location,
        @Nullable Output<ClusterLoggingConfigGetArgs> loggingConfig,
        @Nullable Output<String> loggingService,
        @Nullable Output<ClusterMaintenancePolicyGetArgs> maintenancePolicy,
        @Nullable Output<ClusterMasterAuthGetArgs> masterAuth,
        @Nullable Output<ClusterMasterAuthorizedNetworksConfigGetArgs> masterAuthorizedNetworksConfig,
        @Nullable Output<String> masterVersion,
        @Nullable Output<String> minMasterVersion,
        @Nullable Output<ClusterMonitoringConfigGetArgs> monitoringConfig,
        @Nullable Output<String> monitoringService,
        @Nullable Output<String> name,
        @Nullable Output<String> network,
        @Nullable Output<ClusterNetworkPolicyGetArgs> networkPolicy,
        @Nullable Output<String> networkingMode,
        @Nullable Output<ClusterNodeConfigGetArgs> nodeConfig,
        @Nullable Output<List<String>> nodeLocations,
        @Nullable Output<List<ClusterNodePoolGetArgs>> nodePools,
        @Nullable Output<String> nodeVersion,
        @Nullable Output<ClusterNotificationConfigGetArgs> notificationConfig,
        @Nullable Output<String> operation,
        @Nullable Output<ClusterPodSecurityPolicyConfigGetArgs> podSecurityPolicyConfig,
        @Nullable Output<ClusterPrivateClusterConfigGetArgs> privateClusterConfig,
        @Nullable Output<String> privateIpv6GoogleAccess,
        @Nullable Output<String> project,
        @Nullable Output<ClusterReleaseChannelGetArgs> releaseChannel,
        @Nullable Output<Boolean> removeDefaultNodePool,
        @Nullable Output<Map<String,String>> resourceLabels,
        @Nullable Output<ClusterResourceUsageExportConfigGetArgs> resourceUsageExportConfig,
        @Nullable Output<String> selfLink,
        @Nullable Output<String> servicesIpv4Cidr,
        @Nullable Output<String> subnetwork,
        @Nullable Output<String> tpuIpv4CidrBlock,
        @Nullable Output<ClusterVerticalPodAutoscalingGetArgs> verticalPodAutoscaling,
        @Nullable Output<ClusterWorkloadIdentityConfigGetArgs> workloadIdentityConfig) {
        this.addonsConfig = addonsConfig;
        this.authenticatorGroupsConfig = authenticatorGroupsConfig;
        this.clusterAutoscaling = clusterAutoscaling;
        this.clusterIpv4Cidr = clusterIpv4Cidr;
        this.clusterTelemetry = clusterTelemetry;
        this.confidentialNodes = confidentialNodes;
        this.databaseEncryption = databaseEncryption;
        this.datapathProvider = datapathProvider;
        this.defaultMaxPodsPerNode = defaultMaxPodsPerNode;
        this.defaultSnatStatus = defaultSnatStatus;
        this.description = description;
        this.dnsConfig = dnsConfig;
        this.enableAutopilot = enableAutopilot;
        this.enableBinaryAuthorization = enableBinaryAuthorization;
        this.enableIntranodeVisibility = enableIntranodeVisibility;
        this.enableKubernetesAlpha = enableKubernetesAlpha;
        this.enableL4IlbSubsetting = enableL4IlbSubsetting;
        this.enableLegacyAbac = enableLegacyAbac;
        this.enableShieldedNodes = enableShieldedNodes;
        this.enableTpu = enableTpu;
        this.endpoint = endpoint;
        this.identityServiceConfig = identityServiceConfig;
        this.initialNodeCount = initialNodeCount;
        this.ipAllocationPolicy = ipAllocationPolicy;
        this.labelFingerprint = labelFingerprint;
        this.location = location;
        this.loggingConfig = loggingConfig;
        this.loggingService = loggingService;
        this.maintenancePolicy = maintenancePolicy;
        this.masterAuth = masterAuth;
        this.masterAuthorizedNetworksConfig = masterAuthorizedNetworksConfig;
        this.masterVersion = masterVersion;
        this.minMasterVersion = minMasterVersion;
        this.monitoringConfig = monitoringConfig;
        this.monitoringService = monitoringService;
        this.name = name;
        this.network = network;
        this.networkPolicy = networkPolicy;
        this.networkingMode = networkingMode;
        this.nodeConfig = nodeConfig;
        this.nodeLocations = nodeLocations;
        this.nodePools = nodePools;
        this.nodeVersion = nodeVersion;
        this.notificationConfig = notificationConfig;
        this.operation = operation;
        this.podSecurityPolicyConfig = podSecurityPolicyConfig;
        this.privateClusterConfig = privateClusterConfig;
        this.privateIpv6GoogleAccess = privateIpv6GoogleAccess;
        this.project = project;
        this.releaseChannel = releaseChannel;
        this.removeDefaultNodePool = removeDefaultNodePool;
        this.resourceLabels = resourceLabels;
        this.resourceUsageExportConfig = resourceUsageExportConfig;
        this.selfLink = selfLink;
        this.servicesIpv4Cidr = servicesIpv4Cidr;
        this.subnetwork = subnetwork;
        this.tpuIpv4CidrBlock = tpuIpv4CidrBlock;
        this.verticalPodAutoscaling = verticalPodAutoscaling;
        this.workloadIdentityConfig = workloadIdentityConfig;
    }

    private ClusterState() {
        this.addonsConfig = Output.empty();
        this.authenticatorGroupsConfig = Output.empty();
        this.clusterAutoscaling = Output.empty();
        this.clusterIpv4Cidr = Output.empty();
        this.clusterTelemetry = Output.empty();
        this.confidentialNodes = Output.empty();
        this.databaseEncryption = Output.empty();
        this.datapathProvider = Output.empty();
        this.defaultMaxPodsPerNode = Output.empty();
        this.defaultSnatStatus = Output.empty();
        this.description = Output.empty();
        this.dnsConfig = Output.empty();
        this.enableAutopilot = Output.empty();
        this.enableBinaryAuthorization = Output.empty();
        this.enableIntranodeVisibility = Output.empty();
        this.enableKubernetesAlpha = Output.empty();
        this.enableL4IlbSubsetting = Output.empty();
        this.enableLegacyAbac = Output.empty();
        this.enableShieldedNodes = Output.empty();
        this.enableTpu = Output.empty();
        this.endpoint = Output.empty();
        this.identityServiceConfig = Output.empty();
        this.initialNodeCount = Output.empty();
        this.ipAllocationPolicy = Output.empty();
        this.labelFingerprint = Output.empty();
        this.location = Output.empty();
        this.loggingConfig = Output.empty();
        this.loggingService = Output.empty();
        this.maintenancePolicy = Output.empty();
        this.masterAuth = Output.empty();
        this.masterAuthorizedNetworksConfig = Output.empty();
        this.masterVersion = Output.empty();
        this.minMasterVersion = Output.empty();
        this.monitoringConfig = Output.empty();
        this.monitoringService = Output.empty();
        this.name = Output.empty();
        this.network = Output.empty();
        this.networkPolicy = Output.empty();
        this.networkingMode = Output.empty();
        this.nodeConfig = Output.empty();
        this.nodeLocations = Output.empty();
        this.nodePools = Output.empty();
        this.nodeVersion = Output.empty();
        this.notificationConfig = Output.empty();
        this.operation = Output.empty();
        this.podSecurityPolicyConfig = Output.empty();
        this.privateClusterConfig = Output.empty();
        this.privateIpv6GoogleAccess = Output.empty();
        this.project = Output.empty();
        this.releaseChannel = Output.empty();
        this.removeDefaultNodePool = Output.empty();
        this.resourceLabels = Output.empty();
        this.resourceUsageExportConfig = Output.empty();
        this.selfLink = Output.empty();
        this.servicesIpv4Cidr = Output.empty();
        this.subnetwork = Output.empty();
        this.tpuIpv4CidrBlock = Output.empty();
        this.verticalPodAutoscaling = Output.empty();
        this.workloadIdentityConfig = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ClusterState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<ClusterAddonsConfigGetArgs> addonsConfig;
        private @Nullable Output<ClusterAuthenticatorGroupsConfigGetArgs> authenticatorGroupsConfig;
        private @Nullable Output<ClusterClusterAutoscalingGetArgs> clusterAutoscaling;
        private @Nullable Output<String> clusterIpv4Cidr;
        private @Nullable Output<ClusterClusterTelemetryGetArgs> clusterTelemetry;
        private @Nullable Output<ClusterConfidentialNodesGetArgs> confidentialNodes;
        private @Nullable Output<ClusterDatabaseEncryptionGetArgs> databaseEncryption;
        private @Nullable Output<String> datapathProvider;
        private @Nullable Output<Integer> defaultMaxPodsPerNode;
        private @Nullable Output<ClusterDefaultSnatStatusGetArgs> defaultSnatStatus;
        private @Nullable Output<String> description;
        private @Nullable Output<ClusterDnsConfigGetArgs> dnsConfig;
        private @Nullable Output<Boolean> enableAutopilot;
        private @Nullable Output<Boolean> enableBinaryAuthorization;
        private @Nullable Output<Boolean> enableIntranodeVisibility;
        private @Nullable Output<Boolean> enableKubernetesAlpha;
        private @Nullable Output<Boolean> enableL4IlbSubsetting;
        private @Nullable Output<Boolean> enableLegacyAbac;
        private @Nullable Output<Boolean> enableShieldedNodes;
        private @Nullable Output<Boolean> enableTpu;
        private @Nullable Output<String> endpoint;
        private @Nullable Output<ClusterIdentityServiceConfigGetArgs> identityServiceConfig;
        private @Nullable Output<Integer> initialNodeCount;
        private @Nullable Output<ClusterIpAllocationPolicyGetArgs> ipAllocationPolicy;
        private @Nullable Output<String> labelFingerprint;
        private @Nullable Output<String> location;
        private @Nullable Output<ClusterLoggingConfigGetArgs> loggingConfig;
        private @Nullable Output<String> loggingService;
        private @Nullable Output<ClusterMaintenancePolicyGetArgs> maintenancePolicy;
        private @Nullable Output<ClusterMasterAuthGetArgs> masterAuth;
        private @Nullable Output<ClusterMasterAuthorizedNetworksConfigGetArgs> masterAuthorizedNetworksConfig;
        private @Nullable Output<String> masterVersion;
        private @Nullable Output<String> minMasterVersion;
        private @Nullable Output<ClusterMonitoringConfigGetArgs> monitoringConfig;
        private @Nullable Output<String> monitoringService;
        private @Nullable Output<String> name;
        private @Nullable Output<String> network;
        private @Nullable Output<ClusterNetworkPolicyGetArgs> networkPolicy;
        private @Nullable Output<String> networkingMode;
        private @Nullable Output<ClusterNodeConfigGetArgs> nodeConfig;
        private @Nullable Output<List<String>> nodeLocations;
        private @Nullable Output<List<ClusterNodePoolGetArgs>> nodePools;
        private @Nullable Output<String> nodeVersion;
        private @Nullable Output<ClusterNotificationConfigGetArgs> notificationConfig;
        private @Nullable Output<String> operation;
        private @Nullable Output<ClusterPodSecurityPolicyConfigGetArgs> podSecurityPolicyConfig;
        private @Nullable Output<ClusterPrivateClusterConfigGetArgs> privateClusterConfig;
        private @Nullable Output<String> privateIpv6GoogleAccess;
        private @Nullable Output<String> project;
        private @Nullable Output<ClusterReleaseChannelGetArgs> releaseChannel;
        private @Nullable Output<Boolean> removeDefaultNodePool;
        private @Nullable Output<Map<String,String>> resourceLabels;
        private @Nullable Output<ClusterResourceUsageExportConfigGetArgs> resourceUsageExportConfig;
        private @Nullable Output<String> selfLink;
        private @Nullable Output<String> servicesIpv4Cidr;
        private @Nullable Output<String> subnetwork;
        private @Nullable Output<String> tpuIpv4CidrBlock;
        private @Nullable Output<ClusterVerticalPodAutoscalingGetArgs> verticalPodAutoscaling;
        private @Nullable Output<ClusterWorkloadIdentityConfigGetArgs> workloadIdentityConfig;

        public Builder() {
    	      // Empty
        }

        public Builder(ClusterState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.addonsConfig = defaults.addonsConfig;
    	      this.authenticatorGroupsConfig = defaults.authenticatorGroupsConfig;
    	      this.clusterAutoscaling = defaults.clusterAutoscaling;
    	      this.clusterIpv4Cidr = defaults.clusterIpv4Cidr;
    	      this.clusterTelemetry = defaults.clusterTelemetry;
    	      this.confidentialNodes = defaults.confidentialNodes;
    	      this.databaseEncryption = defaults.databaseEncryption;
    	      this.datapathProvider = defaults.datapathProvider;
    	      this.defaultMaxPodsPerNode = defaults.defaultMaxPodsPerNode;
    	      this.defaultSnatStatus = defaults.defaultSnatStatus;
    	      this.description = defaults.description;
    	      this.dnsConfig = defaults.dnsConfig;
    	      this.enableAutopilot = defaults.enableAutopilot;
    	      this.enableBinaryAuthorization = defaults.enableBinaryAuthorization;
    	      this.enableIntranodeVisibility = defaults.enableIntranodeVisibility;
    	      this.enableKubernetesAlpha = defaults.enableKubernetesAlpha;
    	      this.enableL4IlbSubsetting = defaults.enableL4IlbSubsetting;
    	      this.enableLegacyAbac = defaults.enableLegacyAbac;
    	      this.enableShieldedNodes = defaults.enableShieldedNodes;
    	      this.enableTpu = defaults.enableTpu;
    	      this.endpoint = defaults.endpoint;
    	      this.identityServiceConfig = defaults.identityServiceConfig;
    	      this.initialNodeCount = defaults.initialNodeCount;
    	      this.ipAllocationPolicy = defaults.ipAllocationPolicy;
    	      this.labelFingerprint = defaults.labelFingerprint;
    	      this.location = defaults.location;
    	      this.loggingConfig = defaults.loggingConfig;
    	      this.loggingService = defaults.loggingService;
    	      this.maintenancePolicy = defaults.maintenancePolicy;
    	      this.masterAuth = defaults.masterAuth;
    	      this.masterAuthorizedNetworksConfig = defaults.masterAuthorizedNetworksConfig;
    	      this.masterVersion = defaults.masterVersion;
    	      this.minMasterVersion = defaults.minMasterVersion;
    	      this.monitoringConfig = defaults.monitoringConfig;
    	      this.monitoringService = defaults.monitoringService;
    	      this.name = defaults.name;
    	      this.network = defaults.network;
    	      this.networkPolicy = defaults.networkPolicy;
    	      this.networkingMode = defaults.networkingMode;
    	      this.nodeConfig = defaults.nodeConfig;
    	      this.nodeLocations = defaults.nodeLocations;
    	      this.nodePools = defaults.nodePools;
    	      this.nodeVersion = defaults.nodeVersion;
    	      this.notificationConfig = defaults.notificationConfig;
    	      this.operation = defaults.operation;
    	      this.podSecurityPolicyConfig = defaults.podSecurityPolicyConfig;
    	      this.privateClusterConfig = defaults.privateClusterConfig;
    	      this.privateIpv6GoogleAccess = defaults.privateIpv6GoogleAccess;
    	      this.project = defaults.project;
    	      this.releaseChannel = defaults.releaseChannel;
    	      this.removeDefaultNodePool = defaults.removeDefaultNodePool;
    	      this.resourceLabels = defaults.resourceLabels;
    	      this.resourceUsageExportConfig = defaults.resourceUsageExportConfig;
    	      this.selfLink = defaults.selfLink;
    	      this.servicesIpv4Cidr = defaults.servicesIpv4Cidr;
    	      this.subnetwork = defaults.subnetwork;
    	      this.tpuIpv4CidrBlock = defaults.tpuIpv4CidrBlock;
    	      this.verticalPodAutoscaling = defaults.verticalPodAutoscaling;
    	      this.workloadIdentityConfig = defaults.workloadIdentityConfig;
        }

        public Builder addonsConfig(@Nullable Output<ClusterAddonsConfigGetArgs> addonsConfig) {
            this.addonsConfig = addonsConfig;
            return this;
        }

        public Builder addonsConfig(@Nullable ClusterAddonsConfigGetArgs addonsConfig) {
            this.addonsConfig = Output.ofNullable(addonsConfig);
            return this;
        }

        public Builder authenticatorGroupsConfig(@Nullable Output<ClusterAuthenticatorGroupsConfigGetArgs> authenticatorGroupsConfig) {
            this.authenticatorGroupsConfig = authenticatorGroupsConfig;
            return this;
        }

        public Builder authenticatorGroupsConfig(@Nullable ClusterAuthenticatorGroupsConfigGetArgs authenticatorGroupsConfig) {
            this.authenticatorGroupsConfig = Output.ofNullable(authenticatorGroupsConfig);
            return this;
        }

        public Builder clusterAutoscaling(@Nullable Output<ClusterClusterAutoscalingGetArgs> clusterAutoscaling) {
            this.clusterAutoscaling = clusterAutoscaling;
            return this;
        }

        public Builder clusterAutoscaling(@Nullable ClusterClusterAutoscalingGetArgs clusterAutoscaling) {
            this.clusterAutoscaling = Output.ofNullable(clusterAutoscaling);
            return this;
        }

        public Builder clusterIpv4Cidr(@Nullable Output<String> clusterIpv4Cidr) {
            this.clusterIpv4Cidr = clusterIpv4Cidr;
            return this;
        }

        public Builder clusterIpv4Cidr(@Nullable String clusterIpv4Cidr) {
            this.clusterIpv4Cidr = Output.ofNullable(clusterIpv4Cidr);
            return this;
        }

        public Builder clusterTelemetry(@Nullable Output<ClusterClusterTelemetryGetArgs> clusterTelemetry) {
            this.clusterTelemetry = clusterTelemetry;
            return this;
        }

        public Builder clusterTelemetry(@Nullable ClusterClusterTelemetryGetArgs clusterTelemetry) {
            this.clusterTelemetry = Output.ofNullable(clusterTelemetry);
            return this;
        }

        public Builder confidentialNodes(@Nullable Output<ClusterConfidentialNodesGetArgs> confidentialNodes) {
            this.confidentialNodes = confidentialNodes;
            return this;
        }

        public Builder confidentialNodes(@Nullable ClusterConfidentialNodesGetArgs confidentialNodes) {
            this.confidentialNodes = Output.ofNullable(confidentialNodes);
            return this;
        }

        public Builder databaseEncryption(@Nullable Output<ClusterDatabaseEncryptionGetArgs> databaseEncryption) {
            this.databaseEncryption = databaseEncryption;
            return this;
        }

        public Builder databaseEncryption(@Nullable ClusterDatabaseEncryptionGetArgs databaseEncryption) {
            this.databaseEncryption = Output.ofNullable(databaseEncryption);
            return this;
        }

        public Builder datapathProvider(@Nullable Output<String> datapathProvider) {
            this.datapathProvider = datapathProvider;
            return this;
        }

        public Builder datapathProvider(@Nullable String datapathProvider) {
            this.datapathProvider = Output.ofNullable(datapathProvider);
            return this;
        }

        public Builder defaultMaxPodsPerNode(@Nullable Output<Integer> defaultMaxPodsPerNode) {
            this.defaultMaxPodsPerNode = defaultMaxPodsPerNode;
            return this;
        }

        public Builder defaultMaxPodsPerNode(@Nullable Integer defaultMaxPodsPerNode) {
            this.defaultMaxPodsPerNode = Output.ofNullable(defaultMaxPodsPerNode);
            return this;
        }

        public Builder defaultSnatStatus(@Nullable Output<ClusterDefaultSnatStatusGetArgs> defaultSnatStatus) {
            this.defaultSnatStatus = defaultSnatStatus;
            return this;
        }

        public Builder defaultSnatStatus(@Nullable ClusterDefaultSnatStatusGetArgs defaultSnatStatus) {
            this.defaultSnatStatus = Output.ofNullable(defaultSnatStatus);
            return this;
        }

        public Builder description(@Nullable Output<String> description) {
            this.description = description;
            return this;
        }

        public Builder description(@Nullable String description) {
            this.description = Output.ofNullable(description);
            return this;
        }

        public Builder dnsConfig(@Nullable Output<ClusterDnsConfigGetArgs> dnsConfig) {
            this.dnsConfig = dnsConfig;
            return this;
        }

        public Builder dnsConfig(@Nullable ClusterDnsConfigGetArgs dnsConfig) {
            this.dnsConfig = Output.ofNullable(dnsConfig);
            return this;
        }

        public Builder enableAutopilot(@Nullable Output<Boolean> enableAutopilot) {
            this.enableAutopilot = enableAutopilot;
            return this;
        }

        public Builder enableAutopilot(@Nullable Boolean enableAutopilot) {
            this.enableAutopilot = Output.ofNullable(enableAutopilot);
            return this;
        }

        public Builder enableBinaryAuthorization(@Nullable Output<Boolean> enableBinaryAuthorization) {
            this.enableBinaryAuthorization = enableBinaryAuthorization;
            return this;
        }

        public Builder enableBinaryAuthorization(@Nullable Boolean enableBinaryAuthorization) {
            this.enableBinaryAuthorization = Output.ofNullable(enableBinaryAuthorization);
            return this;
        }

        public Builder enableIntranodeVisibility(@Nullable Output<Boolean> enableIntranodeVisibility) {
            this.enableIntranodeVisibility = enableIntranodeVisibility;
            return this;
        }

        public Builder enableIntranodeVisibility(@Nullable Boolean enableIntranodeVisibility) {
            this.enableIntranodeVisibility = Output.ofNullable(enableIntranodeVisibility);
            return this;
        }

        public Builder enableKubernetesAlpha(@Nullable Output<Boolean> enableKubernetesAlpha) {
            this.enableKubernetesAlpha = enableKubernetesAlpha;
            return this;
        }

        public Builder enableKubernetesAlpha(@Nullable Boolean enableKubernetesAlpha) {
            this.enableKubernetesAlpha = Output.ofNullable(enableKubernetesAlpha);
            return this;
        }

        public Builder enableL4IlbSubsetting(@Nullable Output<Boolean> enableL4IlbSubsetting) {
            this.enableL4IlbSubsetting = enableL4IlbSubsetting;
            return this;
        }

        public Builder enableL4IlbSubsetting(@Nullable Boolean enableL4IlbSubsetting) {
            this.enableL4IlbSubsetting = Output.ofNullable(enableL4IlbSubsetting);
            return this;
        }

        public Builder enableLegacyAbac(@Nullable Output<Boolean> enableLegacyAbac) {
            this.enableLegacyAbac = enableLegacyAbac;
            return this;
        }

        public Builder enableLegacyAbac(@Nullable Boolean enableLegacyAbac) {
            this.enableLegacyAbac = Output.ofNullable(enableLegacyAbac);
            return this;
        }

        public Builder enableShieldedNodes(@Nullable Output<Boolean> enableShieldedNodes) {
            this.enableShieldedNodes = enableShieldedNodes;
            return this;
        }

        public Builder enableShieldedNodes(@Nullable Boolean enableShieldedNodes) {
            this.enableShieldedNodes = Output.ofNullable(enableShieldedNodes);
            return this;
        }

        public Builder enableTpu(@Nullable Output<Boolean> enableTpu) {
            this.enableTpu = enableTpu;
            return this;
        }

        public Builder enableTpu(@Nullable Boolean enableTpu) {
            this.enableTpu = Output.ofNullable(enableTpu);
            return this;
        }

        public Builder endpoint(@Nullable Output<String> endpoint) {
            this.endpoint = endpoint;
            return this;
        }

        public Builder endpoint(@Nullable String endpoint) {
            this.endpoint = Output.ofNullable(endpoint);
            return this;
        }

        public Builder identityServiceConfig(@Nullable Output<ClusterIdentityServiceConfigGetArgs> identityServiceConfig) {
            this.identityServiceConfig = identityServiceConfig;
            return this;
        }

        public Builder identityServiceConfig(@Nullable ClusterIdentityServiceConfigGetArgs identityServiceConfig) {
            this.identityServiceConfig = Output.ofNullable(identityServiceConfig);
            return this;
        }

        public Builder initialNodeCount(@Nullable Output<Integer> initialNodeCount) {
            this.initialNodeCount = initialNodeCount;
            return this;
        }

        public Builder initialNodeCount(@Nullable Integer initialNodeCount) {
            this.initialNodeCount = Output.ofNullable(initialNodeCount);
            return this;
        }

        public Builder ipAllocationPolicy(@Nullable Output<ClusterIpAllocationPolicyGetArgs> ipAllocationPolicy) {
            this.ipAllocationPolicy = ipAllocationPolicy;
            return this;
        }

        public Builder ipAllocationPolicy(@Nullable ClusterIpAllocationPolicyGetArgs ipAllocationPolicy) {
            this.ipAllocationPolicy = Output.ofNullable(ipAllocationPolicy);
            return this;
        }

        public Builder labelFingerprint(@Nullable Output<String> labelFingerprint) {
            this.labelFingerprint = labelFingerprint;
            return this;
        }

        public Builder labelFingerprint(@Nullable String labelFingerprint) {
            this.labelFingerprint = Output.ofNullable(labelFingerprint);
            return this;
        }

        public Builder location(@Nullable Output<String> location) {
            this.location = location;
            return this;
        }

        public Builder location(@Nullable String location) {
            this.location = Output.ofNullable(location);
            return this;
        }

        public Builder loggingConfig(@Nullable Output<ClusterLoggingConfigGetArgs> loggingConfig) {
            this.loggingConfig = loggingConfig;
            return this;
        }

        public Builder loggingConfig(@Nullable ClusterLoggingConfigGetArgs loggingConfig) {
            this.loggingConfig = Output.ofNullable(loggingConfig);
            return this;
        }

        public Builder loggingService(@Nullable Output<String> loggingService) {
            this.loggingService = loggingService;
            return this;
        }

        public Builder loggingService(@Nullable String loggingService) {
            this.loggingService = Output.ofNullable(loggingService);
            return this;
        }

        public Builder maintenancePolicy(@Nullable Output<ClusterMaintenancePolicyGetArgs> maintenancePolicy) {
            this.maintenancePolicy = maintenancePolicy;
            return this;
        }

        public Builder maintenancePolicy(@Nullable ClusterMaintenancePolicyGetArgs maintenancePolicy) {
            this.maintenancePolicy = Output.ofNullable(maintenancePolicy);
            return this;
        }

        public Builder masterAuth(@Nullable Output<ClusterMasterAuthGetArgs> masterAuth) {
            this.masterAuth = masterAuth;
            return this;
        }

        public Builder masterAuth(@Nullable ClusterMasterAuthGetArgs masterAuth) {
            this.masterAuth = Output.ofNullable(masterAuth);
            return this;
        }

        public Builder masterAuthorizedNetworksConfig(@Nullable Output<ClusterMasterAuthorizedNetworksConfigGetArgs> masterAuthorizedNetworksConfig) {
            this.masterAuthorizedNetworksConfig = masterAuthorizedNetworksConfig;
            return this;
        }

        public Builder masterAuthorizedNetworksConfig(@Nullable ClusterMasterAuthorizedNetworksConfigGetArgs masterAuthorizedNetworksConfig) {
            this.masterAuthorizedNetworksConfig = Output.ofNullable(masterAuthorizedNetworksConfig);
            return this;
        }

        public Builder masterVersion(@Nullable Output<String> masterVersion) {
            this.masterVersion = masterVersion;
            return this;
        }

        public Builder masterVersion(@Nullable String masterVersion) {
            this.masterVersion = Output.ofNullable(masterVersion);
            return this;
        }

        public Builder minMasterVersion(@Nullable Output<String> minMasterVersion) {
            this.minMasterVersion = minMasterVersion;
            return this;
        }

        public Builder minMasterVersion(@Nullable String minMasterVersion) {
            this.minMasterVersion = Output.ofNullable(minMasterVersion);
            return this;
        }

        public Builder monitoringConfig(@Nullable Output<ClusterMonitoringConfigGetArgs> monitoringConfig) {
            this.monitoringConfig = monitoringConfig;
            return this;
        }

        public Builder monitoringConfig(@Nullable ClusterMonitoringConfigGetArgs monitoringConfig) {
            this.monitoringConfig = Output.ofNullable(monitoringConfig);
            return this;
        }

        public Builder monitoringService(@Nullable Output<String> monitoringService) {
            this.monitoringService = monitoringService;
            return this;
        }

        public Builder monitoringService(@Nullable String monitoringService) {
            this.monitoringService = Output.ofNullable(monitoringService);
            return this;
        }

        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }

        public Builder name(@Nullable String name) {
            this.name = Output.ofNullable(name);
            return this;
        }

        public Builder network(@Nullable Output<String> network) {
            this.network = network;
            return this;
        }

        public Builder network(@Nullable String network) {
            this.network = Output.ofNullable(network);
            return this;
        }

        public Builder networkPolicy(@Nullable Output<ClusterNetworkPolicyGetArgs> networkPolicy) {
            this.networkPolicy = networkPolicy;
            return this;
        }

        public Builder networkPolicy(@Nullable ClusterNetworkPolicyGetArgs networkPolicy) {
            this.networkPolicy = Output.ofNullable(networkPolicy);
            return this;
        }

        public Builder networkingMode(@Nullable Output<String> networkingMode) {
            this.networkingMode = networkingMode;
            return this;
        }

        public Builder networkingMode(@Nullable String networkingMode) {
            this.networkingMode = Output.ofNullable(networkingMode);
            return this;
        }

        public Builder nodeConfig(@Nullable Output<ClusterNodeConfigGetArgs> nodeConfig) {
            this.nodeConfig = nodeConfig;
            return this;
        }

        public Builder nodeConfig(@Nullable ClusterNodeConfigGetArgs nodeConfig) {
            this.nodeConfig = Output.ofNullable(nodeConfig);
            return this;
        }

        public Builder nodeLocations(@Nullable Output<List<String>> nodeLocations) {
            this.nodeLocations = nodeLocations;
            return this;
        }

        public Builder nodeLocations(@Nullable List<String> nodeLocations) {
            this.nodeLocations = Output.ofNullable(nodeLocations);
            return this;
        }

        public Builder nodePools(@Nullable Output<List<ClusterNodePoolGetArgs>> nodePools) {
            this.nodePools = nodePools;
            return this;
        }

        public Builder nodePools(@Nullable List<ClusterNodePoolGetArgs> nodePools) {
            this.nodePools = Output.ofNullable(nodePools);
            return this;
        }

        public Builder nodeVersion(@Nullable Output<String> nodeVersion) {
            this.nodeVersion = nodeVersion;
            return this;
        }

        public Builder nodeVersion(@Nullable String nodeVersion) {
            this.nodeVersion = Output.ofNullable(nodeVersion);
            return this;
        }

        public Builder notificationConfig(@Nullable Output<ClusterNotificationConfigGetArgs> notificationConfig) {
            this.notificationConfig = notificationConfig;
            return this;
        }

        public Builder notificationConfig(@Nullable ClusterNotificationConfigGetArgs notificationConfig) {
            this.notificationConfig = Output.ofNullable(notificationConfig);
            return this;
        }

        public Builder operation(@Nullable Output<String> operation) {
            this.operation = operation;
            return this;
        }

        public Builder operation(@Nullable String operation) {
            this.operation = Output.ofNullable(operation);
            return this;
        }

        public Builder podSecurityPolicyConfig(@Nullable Output<ClusterPodSecurityPolicyConfigGetArgs> podSecurityPolicyConfig) {
            this.podSecurityPolicyConfig = podSecurityPolicyConfig;
            return this;
        }

        public Builder podSecurityPolicyConfig(@Nullable ClusterPodSecurityPolicyConfigGetArgs podSecurityPolicyConfig) {
            this.podSecurityPolicyConfig = Output.ofNullable(podSecurityPolicyConfig);
            return this;
        }

        public Builder privateClusterConfig(@Nullable Output<ClusterPrivateClusterConfigGetArgs> privateClusterConfig) {
            this.privateClusterConfig = privateClusterConfig;
            return this;
        }

        public Builder privateClusterConfig(@Nullable ClusterPrivateClusterConfigGetArgs privateClusterConfig) {
            this.privateClusterConfig = Output.ofNullable(privateClusterConfig);
            return this;
        }

        public Builder privateIpv6GoogleAccess(@Nullable Output<String> privateIpv6GoogleAccess) {
            this.privateIpv6GoogleAccess = privateIpv6GoogleAccess;
            return this;
        }

        public Builder privateIpv6GoogleAccess(@Nullable String privateIpv6GoogleAccess) {
            this.privateIpv6GoogleAccess = Output.ofNullable(privateIpv6GoogleAccess);
            return this;
        }

        public Builder project(@Nullable Output<String> project) {
            this.project = project;
            return this;
        }

        public Builder project(@Nullable String project) {
            this.project = Output.ofNullable(project);
            return this;
        }

        public Builder releaseChannel(@Nullable Output<ClusterReleaseChannelGetArgs> releaseChannel) {
            this.releaseChannel = releaseChannel;
            return this;
        }

        public Builder releaseChannel(@Nullable ClusterReleaseChannelGetArgs releaseChannel) {
            this.releaseChannel = Output.ofNullable(releaseChannel);
            return this;
        }

        public Builder removeDefaultNodePool(@Nullable Output<Boolean> removeDefaultNodePool) {
            this.removeDefaultNodePool = removeDefaultNodePool;
            return this;
        }

        public Builder removeDefaultNodePool(@Nullable Boolean removeDefaultNodePool) {
            this.removeDefaultNodePool = Output.ofNullable(removeDefaultNodePool);
            return this;
        }

        public Builder resourceLabels(@Nullable Output<Map<String,String>> resourceLabels) {
            this.resourceLabels = resourceLabels;
            return this;
        }

        public Builder resourceLabels(@Nullable Map<String,String> resourceLabels) {
            this.resourceLabels = Output.ofNullable(resourceLabels);
            return this;
        }

        public Builder resourceUsageExportConfig(@Nullable Output<ClusterResourceUsageExportConfigGetArgs> resourceUsageExportConfig) {
            this.resourceUsageExportConfig = resourceUsageExportConfig;
            return this;
        }

        public Builder resourceUsageExportConfig(@Nullable ClusterResourceUsageExportConfigGetArgs resourceUsageExportConfig) {
            this.resourceUsageExportConfig = Output.ofNullable(resourceUsageExportConfig);
            return this;
        }

        public Builder selfLink(@Nullable Output<String> selfLink) {
            this.selfLink = selfLink;
            return this;
        }

        public Builder selfLink(@Nullable String selfLink) {
            this.selfLink = Output.ofNullable(selfLink);
            return this;
        }

        public Builder servicesIpv4Cidr(@Nullable Output<String> servicesIpv4Cidr) {
            this.servicesIpv4Cidr = servicesIpv4Cidr;
            return this;
        }

        public Builder servicesIpv4Cidr(@Nullable String servicesIpv4Cidr) {
            this.servicesIpv4Cidr = Output.ofNullable(servicesIpv4Cidr);
            return this;
        }

        public Builder subnetwork(@Nullable Output<String> subnetwork) {
            this.subnetwork = subnetwork;
            return this;
        }

        public Builder subnetwork(@Nullable String subnetwork) {
            this.subnetwork = Output.ofNullable(subnetwork);
            return this;
        }

        public Builder tpuIpv4CidrBlock(@Nullable Output<String> tpuIpv4CidrBlock) {
            this.tpuIpv4CidrBlock = tpuIpv4CidrBlock;
            return this;
        }

        public Builder tpuIpv4CidrBlock(@Nullable String tpuIpv4CidrBlock) {
            this.tpuIpv4CidrBlock = Output.ofNullable(tpuIpv4CidrBlock);
            return this;
        }

        public Builder verticalPodAutoscaling(@Nullable Output<ClusterVerticalPodAutoscalingGetArgs> verticalPodAutoscaling) {
            this.verticalPodAutoscaling = verticalPodAutoscaling;
            return this;
        }

        public Builder verticalPodAutoscaling(@Nullable ClusterVerticalPodAutoscalingGetArgs verticalPodAutoscaling) {
            this.verticalPodAutoscaling = Output.ofNullable(verticalPodAutoscaling);
            return this;
        }

        public Builder workloadIdentityConfig(@Nullable Output<ClusterWorkloadIdentityConfigGetArgs> workloadIdentityConfig) {
            this.workloadIdentityConfig = workloadIdentityConfig;
            return this;
        }

        public Builder workloadIdentityConfig(@Nullable ClusterWorkloadIdentityConfigGetArgs workloadIdentityConfig) {
            this.workloadIdentityConfig = Output.ofNullable(workloadIdentityConfig);
            return this;
        }
        public ClusterState build() {
            return new ClusterState(addonsConfig, authenticatorGroupsConfig, clusterAutoscaling, clusterIpv4Cidr, clusterTelemetry, confidentialNodes, databaseEncryption, datapathProvider, defaultMaxPodsPerNode, defaultSnatStatus, description, dnsConfig, enableAutopilot, enableBinaryAuthorization, enableIntranodeVisibility, enableKubernetesAlpha, enableL4IlbSubsetting, enableLegacyAbac, enableShieldedNodes, enableTpu, endpoint, identityServiceConfig, initialNodeCount, ipAllocationPolicy, labelFingerprint, location, loggingConfig, loggingService, maintenancePolicy, masterAuth, masterAuthorizedNetworksConfig, masterVersion, minMasterVersion, monitoringConfig, monitoringService, name, network, networkPolicy, networkingMode, nodeConfig, nodeLocations, nodePools, nodeVersion, notificationConfig, operation, podSecurityPolicyConfig, privateClusterConfig, privateIpv6GoogleAccess, project, releaseChannel, removeDefaultNodePool, resourceLabels, resourceUsageExportConfig, selfLink, servicesIpv4Cidr, subnetwork, tpuIpv4CidrBlock, verticalPodAutoscaling, workloadIdentityConfig);
        }
    }
}
