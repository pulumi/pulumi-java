// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.networkservices.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import io.pulumi.gcp.networkservices.inputs.EdgeCacheOriginTimeoutGetArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class EdgeCacheOriginState extends io.pulumi.resources.ResourceArgs {

    public static final EdgeCacheOriginState Empty = new EdgeCacheOriginState();

    @InputImport(name="description")
    private final @Nullable Input<String> description;

    public Input<String> getDescription() {
        return this.description == null ? Input.empty() : this.description;
    }

    @InputImport(name="failoverOrigin")
    private final @Nullable Input<String> failoverOrigin;

    public Input<String> getFailoverOrigin() {
        return this.failoverOrigin == null ? Input.empty() : this.failoverOrigin;
    }

    @InputImport(name="labels")
    private final @Nullable Input<Map<String,String>> labels;

    public Input<Map<String,String>> getLabels() {
        return this.labels == null ? Input.empty() : this.labels;
    }

    @InputImport(name="maxAttempts")
    private final @Nullable Input<Integer> maxAttempts;

    public Input<Integer> getMaxAttempts() {
        return this.maxAttempts == null ? Input.empty() : this.maxAttempts;
    }

    @InputImport(name="name")
    private final @Nullable Input<String> name;

    public Input<String> getName() {
        return this.name == null ? Input.empty() : this.name;
    }

    @InputImport(name="originAddress")
    private final @Nullable Input<String> originAddress;

    public Input<String> getOriginAddress() {
        return this.originAddress == null ? Input.empty() : this.originAddress;
    }

    @InputImport(name="port")
    private final @Nullable Input<Integer> port;

    public Input<Integer> getPort() {
        return this.port == null ? Input.empty() : this.port;
    }

    @InputImport(name="project")
    private final @Nullable Input<String> project;

    public Input<String> getProject() {
        return this.project == null ? Input.empty() : this.project;
    }

    @InputImport(name="protocol")
    private final @Nullable Input<String> protocol;

    public Input<String> getProtocol() {
        return this.protocol == null ? Input.empty() : this.protocol;
    }

    @InputImport(name="retryConditions")
    private final @Nullable Input<List<String>> retryConditions;

    public Input<List<String>> getRetryConditions() {
        return this.retryConditions == null ? Input.empty() : this.retryConditions;
    }

    @InputImport(name="timeout")
    private final @Nullable Input<EdgeCacheOriginTimeoutGetArgs> timeout;

    public Input<EdgeCacheOriginTimeoutGetArgs> getTimeout() {
        return this.timeout == null ? Input.empty() : this.timeout;
    }

    public EdgeCacheOriginState(
        @Nullable Input<String> description,
        @Nullable Input<String> failoverOrigin,
        @Nullable Input<Map<String,String>> labels,
        @Nullable Input<Integer> maxAttempts,
        @Nullable Input<String> name,
        @Nullable Input<String> originAddress,
        @Nullable Input<Integer> port,
        @Nullable Input<String> project,
        @Nullable Input<String> protocol,
        @Nullable Input<List<String>> retryConditions,
        @Nullable Input<EdgeCacheOriginTimeoutGetArgs> timeout) {
        this.description = description;
        this.failoverOrigin = failoverOrigin;
        this.labels = labels;
        this.maxAttempts = maxAttempts;
        this.name = name;
        this.originAddress = originAddress;
        this.port = port;
        this.project = project;
        this.protocol = protocol;
        this.retryConditions = retryConditions;
        this.timeout = timeout;
    }

    private EdgeCacheOriginState() {
        this.description = Input.empty();
        this.failoverOrigin = Input.empty();
        this.labels = Input.empty();
        this.maxAttempts = Input.empty();
        this.name = Input.empty();
        this.originAddress = Input.empty();
        this.port = Input.empty();
        this.project = Input.empty();
        this.protocol = Input.empty();
        this.retryConditions = Input.empty();
        this.timeout = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(EdgeCacheOriginState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> description;
        private @Nullable Input<String> failoverOrigin;
        private @Nullable Input<Map<String,String>> labels;
        private @Nullable Input<Integer> maxAttempts;
        private @Nullable Input<String> name;
        private @Nullable Input<String> originAddress;
        private @Nullable Input<Integer> port;
        private @Nullable Input<String> project;
        private @Nullable Input<String> protocol;
        private @Nullable Input<List<String>> retryConditions;
        private @Nullable Input<EdgeCacheOriginTimeoutGetArgs> timeout;

        public Builder() {
    	      // Empty
        }

        public Builder(EdgeCacheOriginState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.failoverOrigin = defaults.failoverOrigin;
    	      this.labels = defaults.labels;
    	      this.maxAttempts = defaults.maxAttempts;
    	      this.name = defaults.name;
    	      this.originAddress = defaults.originAddress;
    	      this.port = defaults.port;
    	      this.project = defaults.project;
    	      this.protocol = defaults.protocol;
    	      this.retryConditions = defaults.retryConditions;
    	      this.timeout = defaults.timeout;
        }

        public Builder setDescription(@Nullable Input<String> description) {
            this.description = description;
            return this;
        }

        public Builder setDescription(@Nullable String description) {
            this.description = Input.ofNullable(description);
            return this;
        }

        public Builder setFailoverOrigin(@Nullable Input<String> failoverOrigin) {
            this.failoverOrigin = failoverOrigin;
            return this;
        }

        public Builder setFailoverOrigin(@Nullable String failoverOrigin) {
            this.failoverOrigin = Input.ofNullable(failoverOrigin);
            return this;
        }

        public Builder setLabels(@Nullable Input<Map<String,String>> labels) {
            this.labels = labels;
            return this;
        }

        public Builder setLabels(@Nullable Map<String,String> labels) {
            this.labels = Input.ofNullable(labels);
            return this;
        }

        public Builder setMaxAttempts(@Nullable Input<Integer> maxAttempts) {
            this.maxAttempts = maxAttempts;
            return this;
        }

        public Builder setMaxAttempts(@Nullable Integer maxAttempts) {
            this.maxAttempts = Input.ofNullable(maxAttempts);
            return this;
        }

        public Builder setName(@Nullable Input<String> name) {
            this.name = name;
            return this;
        }

        public Builder setName(@Nullable String name) {
            this.name = Input.ofNullable(name);
            return this;
        }

        public Builder setOriginAddress(@Nullable Input<String> originAddress) {
            this.originAddress = originAddress;
            return this;
        }

        public Builder setOriginAddress(@Nullable String originAddress) {
            this.originAddress = Input.ofNullable(originAddress);
            return this;
        }

        public Builder setPort(@Nullable Input<Integer> port) {
            this.port = port;
            return this;
        }

        public Builder setPort(@Nullable Integer port) {
            this.port = Input.ofNullable(port);
            return this;
        }

        public Builder setProject(@Nullable Input<String> project) {
            this.project = project;
            return this;
        }

        public Builder setProject(@Nullable String project) {
            this.project = Input.ofNullable(project);
            return this;
        }

        public Builder setProtocol(@Nullable Input<String> protocol) {
            this.protocol = protocol;
            return this;
        }

        public Builder setProtocol(@Nullable String protocol) {
            this.protocol = Input.ofNullable(protocol);
            return this;
        }

        public Builder setRetryConditions(@Nullable Input<List<String>> retryConditions) {
            this.retryConditions = retryConditions;
            return this;
        }

        public Builder setRetryConditions(@Nullable List<String> retryConditions) {
            this.retryConditions = Input.ofNullable(retryConditions);
            return this;
        }

        public Builder setTimeout(@Nullable Input<EdgeCacheOriginTimeoutGetArgs> timeout) {
            this.timeout = timeout;
            return this;
        }

        public Builder setTimeout(@Nullable EdgeCacheOriginTimeoutGetArgs timeout) {
            this.timeout = Input.ofNullable(timeout);
            return this;
        }

        public EdgeCacheOriginState build() {
            return new EdgeCacheOriginState(description, failoverOrigin, labels, maxAttempts, name, originAddress, port, project, protocol, retryConditions, timeout);
        }
    }
}
