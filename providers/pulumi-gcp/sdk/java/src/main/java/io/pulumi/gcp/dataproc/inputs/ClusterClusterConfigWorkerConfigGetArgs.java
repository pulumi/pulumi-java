// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.dataproc.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import io.pulumi.gcp.dataproc.inputs.ClusterClusterConfigWorkerConfigAcceleratorGetArgs;
import io.pulumi.gcp.dataproc.inputs.ClusterClusterConfigWorkerConfigDiskConfigGetArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ClusterClusterConfigWorkerConfigGetArgs extends io.pulumi.resources.ResourceArgs {

    public static final ClusterClusterConfigWorkerConfigGetArgs Empty = new ClusterClusterConfigWorkerConfigGetArgs();

    /**
     * The Compute Engine accelerator configuration for these instances. Can be specified multiple times.
     * 
     */
    @InputImport(name="accelerators")
      private final @Nullable Input<List<ClusterClusterConfigWorkerConfigAcceleratorGetArgs>> accelerators;

    public Input<List<ClusterClusterConfigWorkerConfigAcceleratorGetArgs>> getAccelerators() {
        return this.accelerators == null ? Input.empty() : this.accelerators;
    }

    /**
     * Disk Config
     * 
     */
    @InputImport(name="diskConfig")
      private final @Nullable Input<ClusterClusterConfigWorkerConfigDiskConfigGetArgs> diskConfig;

    public Input<ClusterClusterConfigWorkerConfigDiskConfigGetArgs> getDiskConfig() {
        return this.diskConfig == null ? Input.empty() : this.diskConfig;
    }

    /**
     * The URI for the image to use for this worker.  See [the guide](https://cloud.google.com/dataproc/docs/guides/dataproc-images)
     * for more information.
     * 
     */
    @InputImport(name="imageUri")
      private final @Nullable Input<String> imageUri;

    public Input<String> getImageUri() {
        return this.imageUri == null ? Input.empty() : this.imageUri;
    }

    @InputImport(name="instanceNames")
      private final @Nullable Input<List<String>> instanceNames;

    public Input<List<String>> getInstanceNames() {
        return this.instanceNames == null ? Input.empty() : this.instanceNames;
    }

    /**
     * The name of a Google Compute Engine machine type
     * to create for the worker nodes. If not specified, GCP will default to a predetermined
     * computed value (currently `n1-standard-4`).
     * 
     */
    @InputImport(name="machineType")
      private final @Nullable Input<String> machineType;

    public Input<String> getMachineType() {
        return this.machineType == null ? Input.empty() : this.machineType;
    }

    /**
     * The name of a minimum generation of CPU family
     * for the master. If not specified, GCP will default to a predetermined computed value
     * for each zone. See [the guide](https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform)
     * for details about which CPU families are available (and defaulted) for each zone.
     * 
     */
    @InputImport(name="minCpuPlatform")
      private final @Nullable Input<String> minCpuPlatform;

    public Input<String> getMinCpuPlatform() {
        return this.minCpuPlatform == null ? Input.empty() : this.minCpuPlatform;
    }

    /**
     * Specifies the number of preemptible nodes to create.
     * Defaults to 0.
     * 
     */
    @InputImport(name="numInstances")
      private final @Nullable Input<Integer> numInstances;

    public Input<Integer> getNumInstances() {
        return this.numInstances == null ? Input.empty() : this.numInstances;
    }

    public ClusterClusterConfigWorkerConfigGetArgs(
        @Nullable Input<List<ClusterClusterConfigWorkerConfigAcceleratorGetArgs>> accelerators,
        @Nullable Input<ClusterClusterConfigWorkerConfigDiskConfigGetArgs> diskConfig,
        @Nullable Input<String> imageUri,
        @Nullable Input<List<String>> instanceNames,
        @Nullable Input<String> machineType,
        @Nullable Input<String> minCpuPlatform,
        @Nullable Input<Integer> numInstances) {
        this.accelerators = accelerators;
        this.diskConfig = diskConfig;
        this.imageUri = imageUri;
        this.instanceNames = instanceNames;
        this.machineType = machineType;
        this.minCpuPlatform = minCpuPlatform;
        this.numInstances = numInstances;
    }

    private ClusterClusterConfigWorkerConfigGetArgs() {
        this.accelerators = Input.empty();
        this.diskConfig = Input.empty();
        this.imageUri = Input.empty();
        this.instanceNames = Input.empty();
        this.machineType = Input.empty();
        this.minCpuPlatform = Input.empty();
        this.numInstances = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ClusterClusterConfigWorkerConfigGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<List<ClusterClusterConfigWorkerConfigAcceleratorGetArgs>> accelerators;
        private @Nullable Input<ClusterClusterConfigWorkerConfigDiskConfigGetArgs> diskConfig;
        private @Nullable Input<String> imageUri;
        private @Nullable Input<List<String>> instanceNames;
        private @Nullable Input<String> machineType;
        private @Nullable Input<String> minCpuPlatform;
        private @Nullable Input<Integer> numInstances;

        public Builder() {
    	      // Empty
        }

        public Builder(ClusterClusterConfigWorkerConfigGetArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accelerators = defaults.accelerators;
    	      this.diskConfig = defaults.diskConfig;
    	      this.imageUri = defaults.imageUri;
    	      this.instanceNames = defaults.instanceNames;
    	      this.machineType = defaults.machineType;
    	      this.minCpuPlatform = defaults.minCpuPlatform;
    	      this.numInstances = defaults.numInstances;
        }

        public Builder accelerators(@Nullable Input<List<ClusterClusterConfigWorkerConfigAcceleratorGetArgs>> accelerators) {
            this.accelerators = accelerators;
            return this;
        }

        public Builder accelerators(@Nullable List<ClusterClusterConfigWorkerConfigAcceleratorGetArgs> accelerators) {
            this.accelerators = Input.ofNullable(accelerators);
            return this;
        }

        public Builder diskConfig(@Nullable Input<ClusterClusterConfigWorkerConfigDiskConfigGetArgs> diskConfig) {
            this.diskConfig = diskConfig;
            return this;
        }

        public Builder diskConfig(@Nullable ClusterClusterConfigWorkerConfigDiskConfigGetArgs diskConfig) {
            this.diskConfig = Input.ofNullable(diskConfig);
            return this;
        }

        public Builder imageUri(@Nullable Input<String> imageUri) {
            this.imageUri = imageUri;
            return this;
        }

        public Builder imageUri(@Nullable String imageUri) {
            this.imageUri = Input.ofNullable(imageUri);
            return this;
        }

        public Builder instanceNames(@Nullable Input<List<String>> instanceNames) {
            this.instanceNames = instanceNames;
            return this;
        }

        public Builder instanceNames(@Nullable List<String> instanceNames) {
            this.instanceNames = Input.ofNullable(instanceNames);
            return this;
        }

        public Builder machineType(@Nullable Input<String> machineType) {
            this.machineType = machineType;
            return this;
        }

        public Builder machineType(@Nullable String machineType) {
            this.machineType = Input.ofNullable(machineType);
            return this;
        }

        public Builder minCpuPlatform(@Nullable Input<String> minCpuPlatform) {
            this.minCpuPlatform = minCpuPlatform;
            return this;
        }

        public Builder minCpuPlatform(@Nullable String minCpuPlatform) {
            this.minCpuPlatform = Input.ofNullable(minCpuPlatform);
            return this;
        }

        public Builder numInstances(@Nullable Input<Integer> numInstances) {
            this.numInstances = numInstances;
            return this;
        }

        public Builder numInstances(@Nullable Integer numInstances) {
            this.numInstances = Input.ofNullable(numInstances);
            return this;
        }
        public ClusterClusterConfigWorkerConfigGetArgs build() {
            return new ClusterClusterConfigWorkerConfigGetArgs(accelerators, diskConfig, imageUri, instanceNames, machineType, minCpuPlatform, numInstances);
        }
    }
}
