// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.compute;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Export;
import io.pulumi.core.annotations.ResourceType;
import io.pulumi.gcp.Utilities;
import io.pulumi.gcp.compute.VPNGatewayArgs;
import io.pulumi.gcp.compute.inputs.VPNGatewayState;
import java.lang.Integer;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * Represents a VPN gateway running in GCP. This virtual device is managed
 * by Google, but used only by you.
 * 
 * 
 * To get more information about VpnGateway, see:
 * 
 * * [API documentation](https://cloud.google.com/compute/docs/reference/rest/v1/targetVpnGateways)
 * 
 * > **Warning:** Classic VPN is deprecating certain functionality on October 31, 2021. For more information,
 * see the [Classic VPN partial deprecation page](https://cloud.google.com/network-connectivity/docs/vpn/deprecations/classic-vpn-deprecation).
 * 
 * {{% examples %}}
 * ## Example Usage
 * {{% example %}}
 * ### Target Vpn Gateway Basic
 * 
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 * 
 * const network1 = new gcp.compute.Network("network1", {});
 * const targetGateway = new gcp.compute.VPNGateway("targetGateway", {network: network1.id});
 * const vpnStaticIp = new gcp.compute.Address("vpnStaticIp", {});
 * const frEsp = new gcp.compute.ForwardingRule("frEsp", {
 *     ipProtocol: "ESP",
 *     ipAddress: vpnStaticIp.address,
 *     target: targetGateway.id,
 * });
 * const frUdp500 = new gcp.compute.ForwardingRule("frUdp500", {
 *     ipProtocol: "UDP",
 *     portRange: "500",
 *     ipAddress: vpnStaticIp.address,
 *     target: targetGateway.id,
 * });
 * const frUdp4500 = new gcp.compute.ForwardingRule("frUdp4500", {
 *     ipProtocol: "UDP",
 *     portRange: "4500",
 *     ipAddress: vpnStaticIp.address,
 *     target: targetGateway.id,
 * });
 * const tunnel1 = new gcp.compute.VPNTunnel("tunnel1", {
 *     peerIp: "15.0.0.120",
 *     sharedSecret: "a secret message",
 *     targetVpnGateway: targetGateway.id,
 * }, {
 *     dependsOn: [
 *         frEsp,
 *         frUdp500,
 *         frUdp4500,
 *     ],
 * });
 * const route1 = new gcp.compute.Route("route1", {
 *     network: network1.name,
 *     destRange: "15.0.0.0/24",
 *     priority: 1000,
 *     nextHopVpnTunnel: tunnel1.id,
 * });
 * ```
 * ```python
 * import pulumi
 * import pulumi_gcp as gcp
 * 
 * network1 = gcp.compute.Network("network1")
 * target_gateway = gcp.compute.VPNGateway("targetGateway", network=network1.id)
 * vpn_static_ip = gcp.compute.Address("vpnStaticIp")
 * fr_esp = gcp.compute.ForwardingRule("frEsp",
 *     ip_protocol="ESP",
 *     ip_address=vpn_static_ip.address,
 *     target=target_gateway.id)
 * fr_udp500 = gcp.compute.ForwardingRule("frUdp500",
 *     ip_protocol="UDP",
 *     port_range="500",
 *     ip_address=vpn_static_ip.address,
 *     target=target_gateway.id)
 * fr_udp4500 = gcp.compute.ForwardingRule("frUdp4500",
 *     ip_protocol="UDP",
 *     port_range="4500",
 *     ip_address=vpn_static_ip.address,
 *     target=target_gateway.id)
 * tunnel1 = gcp.compute.VPNTunnel("tunnel1",
 *     peer_ip="15.0.0.120",
 *     shared_secret="a secret message",
 *     target_vpn_gateway=target_gateway.id,
 *     opts=pulumi.ResourceOptions(depends_on=[
 *             fr_esp,
 *             fr_udp500,
 *             fr_udp4500,
 *         ]))
 * route1 = gcp.compute.Route("route1",
 *     network=network1.name,
 *     dest_range="15.0.0.0/24",
 *     priority=1000,
 *     next_hop_vpn_tunnel=tunnel1.id)
 * ```
 * ```csharp
 * using Pulumi;
 * using Gcp = Pulumi.Gcp;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var network1 = new Gcp.Compute.Network("network1", new Gcp.Compute.NetworkArgs
 *         {
 *         });
 *         var targetGateway = new Gcp.Compute.VPNGateway("targetGateway", new Gcp.Compute.VPNGatewayArgs
 *         {
 *             Network = network1.Id,
 *         });
 *         var vpnStaticIp = new Gcp.Compute.Address("vpnStaticIp", new Gcp.Compute.AddressArgs
 *         {
 *         });
 *         var frEsp = new Gcp.Compute.ForwardingRule("frEsp", new Gcp.Compute.ForwardingRuleArgs
 *         {
 *             IpProtocol = "ESP",
 *             IpAddress = vpnStaticIp.IPAddress,
 *             Target = targetGateway.Id,
 *         });
 *         var frUdp500 = new Gcp.Compute.ForwardingRule("frUdp500", new Gcp.Compute.ForwardingRuleArgs
 *         {
 *             IpProtocol = "UDP",
 *             PortRange = "500",
 *             IpAddress = vpnStaticIp.IPAddress,
 *             Target = targetGateway.Id,
 *         });
 *         var frUdp4500 = new Gcp.Compute.ForwardingRule("frUdp4500", new Gcp.Compute.ForwardingRuleArgs
 *         {
 *             IpProtocol = "UDP",
 *             PortRange = "4500",
 *             IpAddress = vpnStaticIp.IPAddress,
 *             Target = targetGateway.Id,
 *         });
 *         var tunnel1 = new Gcp.Compute.VPNTunnel("tunnel1", new Gcp.Compute.VPNTunnelArgs
 *         {
 *             PeerIp = "15.0.0.120",
 *             SharedSecret = "a secret message",
 *             TargetVpnGateway = targetGateway.Id,
 *         }, new CustomResourceOptions
 *         {
 *             DependsOn = 
 *             {
 *                 frEsp,
 *                 frUdp500,
 *                 frUdp4500,
 *             },
 *         });
 *         var route1 = new Gcp.Compute.Route("route1", new Gcp.Compute.RouteArgs
 *         {
 *             Network = network1.Name,
 *             DestRange = "15.0.0.0/24",
 *             Priority = 1000,
 *             NextHopVpnTunnel = tunnel1.Id,
 *         });
 *     }
 * 
 * }
 * ```
 * ```go
 * package main
 * 
 * import (
 * 	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/compute"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		network1, err := compute.NewNetwork(ctx, "network1", nil)
 * 		if err != nil {
 * 			return err
 * 		}
 * 		targetGateway, err := compute.NewVPNGateway(ctx, "targetGateway", &compute.VPNGatewayArgs{
 * 			Network: network1.ID(),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		vpnStaticIp, err := compute.NewAddress(ctx, "vpnStaticIp", nil)
 * 		if err != nil {
 * 			return err
 * 		}
 * 		frEsp, err := compute.NewForwardingRule(ctx, "frEsp", &compute.ForwardingRuleArgs{
 * 			IpProtocol: pulumi.String("ESP"),
 * 			IpAddress:  vpnStaticIp.Address,
 * 			Target:     targetGateway.ID(),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		frUdp500, err := compute.NewForwardingRule(ctx, "frUdp500", &compute.ForwardingRuleArgs{
 * 			IpProtocol: pulumi.String("UDP"),
 * 			PortRange:  pulumi.String("500"),
 * 			IpAddress:  vpnStaticIp.Address,
 * 			Target:     targetGateway.ID(),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		frUdp4500, err := compute.NewForwardingRule(ctx, "frUdp4500", &compute.ForwardingRuleArgs{
 * 			IpProtocol: pulumi.String("UDP"),
 * 			PortRange:  pulumi.String("4500"),
 * 			IpAddress:  vpnStaticIp.Address,
 * 			Target:     targetGateway.ID(),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		tunnel1, err := compute.NewVPNTunnel(ctx, "tunnel1", &compute.VPNTunnelArgs{
 * 			PeerIp:           pulumi.String("15.0.0.120"),
 * 			SharedSecret:     pulumi.String("a secret message"),
 * 			TargetVpnGateway: targetGateway.ID(),
 * 		}, pulumi.DependsOn([]pulumi.Resource{
 * 			frEsp,
 * 			frUdp500,
 * 			frUdp4500,
 * 		}))
 * 		if err != nil {
 * 			return err
 * 		}
 * 		_, err = compute.NewRoute(ctx, "route1", &compute.RouteArgs{
 * 			Network:          network1.Name,
 * 			DestRange:        pulumi.String("15.0.0.0/24"),
 * 			Priority:         pulumi.Int(1000),
 * 			NextHopVpnTunnel: tunnel1.ID(),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * ```
 * {{% /example %}}
 * {{% /examples %}}
 * 
 * ## Import
 * 
 * VpnGateway can be imported using any of these accepted formats
 * 
 * ```sh
 *  $ pulumi import gcp:compute/vPNGateway:VPNGateway default projects/{{project}}/regions/{{region}}/targetVpnGateways/{{name}}
 * ```
 * 
 * 
 * 
 * ```sh
 *  $ pulumi import gcp:compute/vPNGateway:VPNGateway default {{project}}/{{region}}/{{name}}
 * ```
 * 
 * 
 * 
 * ```sh
 *  $ pulumi import gcp:compute/vPNGateway:VPNGateway default {{region}}/{{name}}
 * ```
 * 
 * 
 * 
 * ```sh
 *  $ pulumi import gcp:compute/vPNGateway:VPNGateway default {{name}}
 * ```
 * 
 *  
 */
@ResourceType(type="gcp:compute/vPNGateway:VPNGateway")
public class VPNGateway extends io.pulumi.resources.CustomResource {
    /**
     * Creation timestamp in RFC3339 text format.
     * 
     */
    @Export(name="creationTimestamp", type=String.class, parameters={})
    private Output<String> creationTimestamp;

    /**
     * @return Creation timestamp in RFC3339 text format.
     * 
     */
    public Output<String> getCreationTimestamp() {
        return this.creationTimestamp;
    }
    /**
     * An optional description of this resource.
     * 
     */
    @Export(name="description", type=String.class, parameters={})
    private Output</* @Nullable */ String> description;

    /**
     * @return An optional description of this resource.
     * 
     */
    public Output</* @Nullable */ String> getDescription() {
        return this.description;
    }
    /**
     * The unique identifier for the resource.
     * 
     */
    @Export(name="gatewayId", type=Integer.class, parameters={})
    private Output<Integer> gatewayId;

    /**
     * @return The unique identifier for the resource.
     * 
     */
    public Output<Integer> getGatewayId() {
        return this.gatewayId;
    }
    /**
     * Name of the resource. Provided by the client when the resource is
     * created. The name must be 1-63 characters long, and comply with
     * RFC1035.  Specifically, the name must be 1-63 characters long and
     * match the regular expression `a-z?` which means
     * the first character must be a lowercase letter, and all following
     * characters must be a dash, lowercase letter, or digit, except the last
     * character, which cannot be a dash.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return Name of the resource. Provided by the client when the resource is
     * created. The name must be 1-63 characters long, and comply with
     * RFC1035.  Specifically, the name must be 1-63 characters long and
     * match the regular expression `a-z?` which means
     * the first character must be a lowercase letter, and all following
     * characters must be a dash, lowercase letter, or digit, except the last
     * character, which cannot be a dash.
     * 
     */
    public Output<String> getName() {
        return this.name;
    }
    /**
     * The network this VPN gateway is accepting traffic for.
     * 
     */
    @Export(name="network", type=String.class, parameters={})
    private Output<String> network;

    /**
     * @return The network this VPN gateway is accepting traffic for.
     * 
     */
    public Output<String> getNetwork() {
        return this.network;
    }
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Export(name="project", type=String.class, parameters={})
    private Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Output<String> getProject() {
        return this.project;
    }
    /**
     * The region this gateway should sit in.
     * 
     */
    @Export(name="region", type=String.class, parameters={})
    private Output<String> region;

    /**
     * @return The region this gateway should sit in.
     * 
     */
    public Output<String> getRegion() {
        return this.region;
    }
    /**
     * The URI of the created resource.
     * 
     */
    @Export(name="selfLink", type=String.class, parameters={})
    private Output<String> selfLink;

    /**
     * @return The URI of the created resource.
     * 
     */
    public Output<String> getSelfLink() {
        return this.selfLink;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public VPNGateway(String name) {
        this(name, VPNGatewayArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public VPNGateway(String name, VPNGatewayArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public VPNGateway(String name, VPNGatewayArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("gcp:compute/vPNGateway:VPNGateway", name, args == null ? VPNGatewayArgs.Empty : args, makeResourceOptions(options, Output.empty()));
    }

    private VPNGateway(String name, Output<String> id, @Nullable VPNGatewayState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("gcp:compute/vPNGateway:VPNGateway", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static VPNGateway get(String name, Output<String> id, @Nullable VPNGatewayState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new VPNGateway(name, id, state, options);
    }
}
