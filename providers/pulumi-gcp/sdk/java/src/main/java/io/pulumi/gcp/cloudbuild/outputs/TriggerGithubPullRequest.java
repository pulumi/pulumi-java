// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.cloudbuild.outputs;

import io.pulumi.core.annotations.OutputCustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class TriggerGithubPullRequest {
    /**
     * Regex of branches to match.  Specify only one of branch or tag.
     * 
     */
    private final String branch;
    /**
     * Whether to block builds on a "/gcbrun" comment from a repository owner or collaborator.
     * Possible values are `COMMENTS_DISABLED`, `COMMENTS_ENABLED`, and `COMMENTS_ENABLED_FOR_EXTERNAL_CONTRIBUTORS_ONLY`.
     * 
     */
    private final @Nullable String commentControl;
    /**
     * Only trigger a build if the revision regex does NOT match the revision regex.
     * 
     */
    private final @Nullable Boolean invertRegex;

    @OutputCustomType.Constructor({"branch","commentControl","invertRegex"})
    private TriggerGithubPullRequest(
        String branch,
        @Nullable String commentControl,
        @Nullable Boolean invertRegex) {
        this.branch = branch;
        this.commentControl = commentControl;
        this.invertRegex = invertRegex;
    }

    /**
     * Regex of branches to match.  Specify only one of branch or tag.
     * 
    */
    public String getBranch() {
        return this.branch;
    }
    /**
     * Whether to block builds on a "/gcbrun" comment from a repository owner or collaborator.
     * Possible values are `COMMENTS_DISABLED`, `COMMENTS_ENABLED`, and `COMMENTS_ENABLED_FOR_EXTERNAL_CONTRIBUTORS_ONLY`.
     * 
    */
    public Optional<String> getCommentControl() {
        return Optional.ofNullable(this.commentControl);
    }
    /**
     * Only trigger a build if the revision regex does NOT match the revision regex.
     * 
    */
    public Optional<Boolean> getInvertRegex() {
        return Optional.ofNullable(this.invertRegex);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TriggerGithubPullRequest defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String branch;
        private @Nullable String commentControl;
        private @Nullable Boolean invertRegex;

        public Builder() {
    	      // Empty
        }

        public Builder(TriggerGithubPullRequest defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.branch = defaults.branch;
    	      this.commentControl = defaults.commentControl;
    	      this.invertRegex = defaults.invertRegex;
        }

        public Builder setBranch(String branch) {
            this.branch = Objects.requireNonNull(branch);
            return this;
        }

        public Builder setCommentControl(@Nullable String commentControl) {
            this.commentControl = commentControl;
            return this;
        }

        public Builder setInvertRegex(@Nullable Boolean invertRegex) {
            this.invertRegex = invertRegex;
            return this;
        }
        public TriggerGithubPullRequest build() {
            return new TriggerGithubPullRequest(branch, commentControl, invertRegex);
        }
    }
}
