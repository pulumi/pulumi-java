// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.cloudbuild.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class TriggerBuildSourceRepoSource {
    private final @Nullable String branchName;
    private final @Nullable String commitSha;
    private final @Nullable String dir;
    private final @Nullable Boolean invertRegex;
    private final @Nullable String projectId;
    private final String repoName;
    private final @Nullable Map<String,String> substitutions;
    private final @Nullable String tagName;

    @OutputCustomType.Constructor({"branchName","commitSha","dir","invertRegex","projectId","repoName","substitutions","tagName"})
    private TriggerBuildSourceRepoSource(
        @Nullable String branchName,
        @Nullable String commitSha,
        @Nullable String dir,
        @Nullable Boolean invertRegex,
        @Nullable String projectId,
        String repoName,
        @Nullable Map<String,String> substitutions,
        @Nullable String tagName) {
        this.branchName = branchName;
        this.commitSha = commitSha;
        this.dir = dir;
        this.invertRegex = invertRegex;
        this.projectId = projectId;
        this.repoName = Objects.requireNonNull(repoName);
        this.substitutions = substitutions;
        this.tagName = tagName;
    }

    public Optional<String> getBranchName() {
        return Optional.ofNullable(this.branchName);
    }
    public Optional<String> getCommitSha() {
        return Optional.ofNullable(this.commitSha);
    }
    public Optional<String> getDir() {
        return Optional.ofNullable(this.dir);
    }
    public Optional<Boolean> getInvertRegex() {
        return Optional.ofNullable(this.invertRegex);
    }
    public Optional<String> getProjectId() {
        return Optional.ofNullable(this.projectId);
    }
    public String getRepoName() {
        return this.repoName;
    }
    public Map<String,String> getSubstitutions() {
        return this.substitutions == null ? Map.of() : this.substitutions;
    }
    public Optional<String> getTagName() {
        return Optional.ofNullable(this.tagName);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TriggerBuildSourceRepoSource defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String branchName;
        private @Nullable String commitSha;
        private @Nullable String dir;
        private @Nullable Boolean invertRegex;
        private @Nullable String projectId;
        private String repoName;
        private @Nullable Map<String,String> substitutions;
        private @Nullable String tagName;

        public Builder() {
    	      // Empty
        }

        public Builder(TriggerBuildSourceRepoSource defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.branchName = defaults.branchName;
    	      this.commitSha = defaults.commitSha;
    	      this.dir = defaults.dir;
    	      this.invertRegex = defaults.invertRegex;
    	      this.projectId = defaults.projectId;
    	      this.repoName = defaults.repoName;
    	      this.substitutions = defaults.substitutions;
    	      this.tagName = defaults.tagName;
        }

        public Builder setBranchName(@Nullable String branchName) {
            this.branchName = branchName;
            return this;
        }

        public Builder setCommitSha(@Nullable String commitSha) {
            this.commitSha = commitSha;
            return this;
        }

        public Builder setDir(@Nullable String dir) {
            this.dir = dir;
            return this;
        }

        public Builder setInvertRegex(@Nullable Boolean invertRegex) {
            this.invertRegex = invertRegex;
            return this;
        }

        public Builder setProjectId(@Nullable String projectId) {
            this.projectId = projectId;
            return this;
        }

        public Builder setRepoName(String repoName) {
            this.repoName = Objects.requireNonNull(repoName);
            return this;
        }

        public Builder setSubstitutions(@Nullable Map<String,String> substitutions) {
            this.substitutions = substitutions;
            return this;
        }

        public Builder setTagName(@Nullable String tagName) {
            this.tagName = tagName;
            return this;
        }

        public TriggerBuildSourceRepoSource build() {
            return new TriggerBuildSourceRepoSource(branchName, commitSha, dir, invertRegex, projectId, repoName, substitutions, tagName);
        }
    }
}
