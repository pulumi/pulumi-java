// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.monitoring.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import io.pulumi.gcp.monitoring.inputs.AlertPolicyConditionConditionAbsentArgs;
import io.pulumi.gcp.monitoring.inputs.AlertPolicyConditionConditionMatchedLogArgs;
import io.pulumi.gcp.monitoring.inputs.AlertPolicyConditionConditionMonitoringQueryLanguageArgs;
import io.pulumi.gcp.monitoring.inputs.AlertPolicyConditionConditionThresholdArgs;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class AlertPolicyConditionArgs extends io.pulumi.resources.ResourceArgs {

    public static final AlertPolicyConditionArgs Empty = new AlertPolicyConditionArgs();

    @InputImport(name="conditionAbsent")
    private final @Nullable Input<AlertPolicyConditionConditionAbsentArgs> conditionAbsent;

    public Input<AlertPolicyConditionConditionAbsentArgs> getConditionAbsent() {
        return this.conditionAbsent == null ? Input.empty() : this.conditionAbsent;
    }

    @InputImport(name="conditionMatchedLog")
    private final @Nullable Input<AlertPolicyConditionConditionMatchedLogArgs> conditionMatchedLog;

    public Input<AlertPolicyConditionConditionMatchedLogArgs> getConditionMatchedLog() {
        return this.conditionMatchedLog == null ? Input.empty() : this.conditionMatchedLog;
    }

    @InputImport(name="conditionMonitoringQueryLanguage")
    private final @Nullable Input<AlertPolicyConditionConditionMonitoringQueryLanguageArgs> conditionMonitoringQueryLanguage;

    public Input<AlertPolicyConditionConditionMonitoringQueryLanguageArgs> getConditionMonitoringQueryLanguage() {
        return this.conditionMonitoringQueryLanguage == null ? Input.empty() : this.conditionMonitoringQueryLanguage;
    }

    @InputImport(name="conditionThreshold")
    private final @Nullable Input<AlertPolicyConditionConditionThresholdArgs> conditionThreshold;

    public Input<AlertPolicyConditionConditionThresholdArgs> getConditionThreshold() {
        return this.conditionThreshold == null ? Input.empty() : this.conditionThreshold;
    }

    @InputImport(name="displayName", required=true)
    private final Input<String> displayName;

    public Input<String> getDisplayName() {
        return this.displayName;
    }

    @InputImport(name="name")
    private final @Nullable Input<String> name;

    public Input<String> getName() {
        return this.name == null ? Input.empty() : this.name;
    }

    public AlertPolicyConditionArgs(
        @Nullable Input<AlertPolicyConditionConditionAbsentArgs> conditionAbsent,
        @Nullable Input<AlertPolicyConditionConditionMatchedLogArgs> conditionMatchedLog,
        @Nullable Input<AlertPolicyConditionConditionMonitoringQueryLanguageArgs> conditionMonitoringQueryLanguage,
        @Nullable Input<AlertPolicyConditionConditionThresholdArgs> conditionThreshold,
        Input<String> displayName,
        @Nullable Input<String> name) {
        this.conditionAbsent = conditionAbsent;
        this.conditionMatchedLog = conditionMatchedLog;
        this.conditionMonitoringQueryLanguage = conditionMonitoringQueryLanguage;
        this.conditionThreshold = conditionThreshold;
        this.displayName = Objects.requireNonNull(displayName, "expected parameter 'displayName' to be non-null");
        this.name = name;
    }

    private AlertPolicyConditionArgs() {
        this.conditionAbsent = Input.empty();
        this.conditionMatchedLog = Input.empty();
        this.conditionMonitoringQueryLanguage = Input.empty();
        this.conditionThreshold = Input.empty();
        this.displayName = Input.empty();
        this.name = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AlertPolicyConditionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<AlertPolicyConditionConditionAbsentArgs> conditionAbsent;
        private @Nullable Input<AlertPolicyConditionConditionMatchedLogArgs> conditionMatchedLog;
        private @Nullable Input<AlertPolicyConditionConditionMonitoringQueryLanguageArgs> conditionMonitoringQueryLanguage;
        private @Nullable Input<AlertPolicyConditionConditionThresholdArgs> conditionThreshold;
        private Input<String> displayName;
        private @Nullable Input<String> name;

        public Builder() {
    	      // Empty
        }

        public Builder(AlertPolicyConditionArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.conditionAbsent = defaults.conditionAbsent;
    	      this.conditionMatchedLog = defaults.conditionMatchedLog;
    	      this.conditionMonitoringQueryLanguage = defaults.conditionMonitoringQueryLanguage;
    	      this.conditionThreshold = defaults.conditionThreshold;
    	      this.displayName = defaults.displayName;
    	      this.name = defaults.name;
        }

        public Builder setConditionAbsent(@Nullable Input<AlertPolicyConditionConditionAbsentArgs> conditionAbsent) {
            this.conditionAbsent = conditionAbsent;
            return this;
        }

        public Builder setConditionAbsent(@Nullable AlertPolicyConditionConditionAbsentArgs conditionAbsent) {
            this.conditionAbsent = Input.ofNullable(conditionAbsent);
            return this;
        }

        public Builder setConditionMatchedLog(@Nullable Input<AlertPolicyConditionConditionMatchedLogArgs> conditionMatchedLog) {
            this.conditionMatchedLog = conditionMatchedLog;
            return this;
        }

        public Builder setConditionMatchedLog(@Nullable AlertPolicyConditionConditionMatchedLogArgs conditionMatchedLog) {
            this.conditionMatchedLog = Input.ofNullable(conditionMatchedLog);
            return this;
        }

        public Builder setConditionMonitoringQueryLanguage(@Nullable Input<AlertPolicyConditionConditionMonitoringQueryLanguageArgs> conditionMonitoringQueryLanguage) {
            this.conditionMonitoringQueryLanguage = conditionMonitoringQueryLanguage;
            return this;
        }

        public Builder setConditionMonitoringQueryLanguage(@Nullable AlertPolicyConditionConditionMonitoringQueryLanguageArgs conditionMonitoringQueryLanguage) {
            this.conditionMonitoringQueryLanguage = Input.ofNullable(conditionMonitoringQueryLanguage);
            return this;
        }

        public Builder setConditionThreshold(@Nullable Input<AlertPolicyConditionConditionThresholdArgs> conditionThreshold) {
            this.conditionThreshold = conditionThreshold;
            return this;
        }

        public Builder setConditionThreshold(@Nullable AlertPolicyConditionConditionThresholdArgs conditionThreshold) {
            this.conditionThreshold = Input.ofNullable(conditionThreshold);
            return this;
        }

        public Builder setDisplayName(Input<String> displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }

        public Builder setDisplayName(String displayName) {
            this.displayName = Input.of(Objects.requireNonNull(displayName));
            return this;
        }

        public Builder setName(@Nullable Input<String> name) {
            this.name = name;
            return this;
        }

        public Builder setName(@Nullable String name) {
            this.name = Input.ofNullable(name);
            return this;
        }

        public AlertPolicyConditionArgs build() {
            return new AlertPolicyConditionArgs(conditionAbsent, conditionMatchedLog, conditionMonitoringQueryLanguage, conditionThreshold, displayName, name);
        }
    }
}
