// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.certificateauthority.outputs;

import io.pulumi.core.annotations.OutputCustomType;
import io.pulumi.gcp.certificateauthority.outputs.AuthorityConfigX509ConfigAdditionalExtension;
import io.pulumi.gcp.certificateauthority.outputs.AuthorityConfigX509ConfigCaOptions;
import io.pulumi.gcp.certificateauthority.outputs.AuthorityConfigX509ConfigKeyUsage;
import io.pulumi.gcp.certificateauthority.outputs.AuthorityConfigX509ConfigPolicyId;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@OutputCustomType
public final class AuthorityConfigX509Config {
    /**
     * Specifies an X.509 extension, which may be used in different parts of X.509 objects like certificates, CSRs, and CRLs.
     * Structure is documented below.
     * 
     */
    private final @Nullable List<AuthorityConfigX509ConfigAdditionalExtension> additionalExtensions;
    /**
     * Describes Online Certificate Status Protocol (OCSP) endpoint addresses that appear in the
     * "Authority Information Access" extension in the certificate.
     * 
     */
    private final @Nullable List<String> aiaOcspServers;
    /**
     * Describes values that are relevant in a CA certificate.
     * Structure is documented below.
     * 
     */
    private final AuthorityConfigX509ConfigCaOptions caOptions;
    /**
     * Indicates the intended use for keys that correspond to a certificate.
     * Structure is documented below.
     * 
     */
    private final AuthorityConfigX509ConfigKeyUsage keyUsage;
    /**
     * Describes the X.509 certificate policy object identifiers, per https://tools.ietf.org/html/rfc5280#section-4.2.1.4.
     * Structure is documented below.
     * 
     */
    private final @Nullable List<AuthorityConfigX509ConfigPolicyId> policyIds;

    @OutputCustomType.Constructor
    private AuthorityConfigX509Config(
        @OutputCustomType.Parameter("additionalExtensions") @Nullable List<AuthorityConfigX509ConfigAdditionalExtension> additionalExtensions,
        @OutputCustomType.Parameter("aiaOcspServers") @Nullable List<String> aiaOcspServers,
        @OutputCustomType.Parameter("caOptions") AuthorityConfigX509ConfigCaOptions caOptions,
        @OutputCustomType.Parameter("keyUsage") AuthorityConfigX509ConfigKeyUsage keyUsage,
        @OutputCustomType.Parameter("policyIds") @Nullable List<AuthorityConfigX509ConfigPolicyId> policyIds) {
        this.additionalExtensions = additionalExtensions;
        this.aiaOcspServers = aiaOcspServers;
        this.caOptions = caOptions;
        this.keyUsage = keyUsage;
        this.policyIds = policyIds;
    }

    /**
     * Specifies an X.509 extension, which may be used in different parts of X.509 objects like certificates, CSRs, and CRLs.
     * Structure is documented below.
     * 
    */
    public List<AuthorityConfigX509ConfigAdditionalExtension> getAdditionalExtensions() {
        return this.additionalExtensions == null ? List.of() : this.additionalExtensions;
    }
    /**
     * Describes Online Certificate Status Protocol (OCSP) endpoint addresses that appear in the
     * "Authority Information Access" extension in the certificate.
     * 
    */
    public List<String> getAiaOcspServers() {
        return this.aiaOcspServers == null ? List.of() : this.aiaOcspServers;
    }
    /**
     * Describes values that are relevant in a CA certificate.
     * Structure is documented below.
     * 
    */
    public AuthorityConfigX509ConfigCaOptions getCaOptions() {
        return this.caOptions;
    }
    /**
     * Indicates the intended use for keys that correspond to a certificate.
     * Structure is documented below.
     * 
    */
    public AuthorityConfigX509ConfigKeyUsage getKeyUsage() {
        return this.keyUsage;
    }
    /**
     * Describes the X.509 certificate policy object identifiers, per https://tools.ietf.org/html/rfc5280#section-4.2.1.4.
     * Structure is documented below.
     * 
    */
    public List<AuthorityConfigX509ConfigPolicyId> getPolicyIds() {
        return this.policyIds == null ? List.of() : this.policyIds;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AuthorityConfigX509Config defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable List<AuthorityConfigX509ConfigAdditionalExtension> additionalExtensions;
        private @Nullable List<String> aiaOcspServers;
        private AuthorityConfigX509ConfigCaOptions caOptions;
        private AuthorityConfigX509ConfigKeyUsage keyUsage;
        private @Nullable List<AuthorityConfigX509ConfigPolicyId> policyIds;

        public Builder() {
    	      // Empty
        }

        public Builder(AuthorityConfigX509Config defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.additionalExtensions = defaults.additionalExtensions;
    	      this.aiaOcspServers = defaults.aiaOcspServers;
    	      this.caOptions = defaults.caOptions;
    	      this.keyUsage = defaults.keyUsage;
    	      this.policyIds = defaults.policyIds;
        }

        public Builder setAdditionalExtensions(@Nullable List<AuthorityConfigX509ConfigAdditionalExtension> additionalExtensions) {
            this.additionalExtensions = additionalExtensions;
            return this;
        }

        public Builder setAiaOcspServers(@Nullable List<String> aiaOcspServers) {
            this.aiaOcspServers = aiaOcspServers;
            return this;
        }

        public Builder setCaOptions(AuthorityConfigX509ConfigCaOptions caOptions) {
            this.caOptions = Objects.requireNonNull(caOptions);
            return this;
        }

        public Builder setKeyUsage(AuthorityConfigX509ConfigKeyUsage keyUsage) {
            this.keyUsage = Objects.requireNonNull(keyUsage);
            return this;
        }

        public Builder setPolicyIds(@Nullable List<AuthorityConfigX509ConfigPolicyId> policyIds) {
            this.policyIds = policyIds;
            return this;
        }
        public AuthorityConfigX509Config build() {
            return new AuthorityConfigX509Config(additionalExtensions, aiaOcspServers, caOptions, keyUsage, policyIds);
        }
    }
}
