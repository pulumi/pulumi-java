// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.networkservices.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.InputImport;
import io.pulumi.gcp.networkservices.inputs.EdgeCacheServiceRoutingPathMatcherRouteRuleMatchRuleHeaderMatchGetArgs;
import io.pulumi.gcp.networkservices.inputs.EdgeCacheServiceRoutingPathMatcherRouteRuleMatchRuleQueryParameterMatchGetArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class EdgeCacheServiceRoutingPathMatcherRouteRuleMatchRuleGetArgs extends io.pulumi.resources.ResourceArgs {

    public static final EdgeCacheServiceRoutingPathMatcherRouteRuleMatchRuleGetArgs Empty = new EdgeCacheServiceRoutingPathMatcherRouteRuleMatchRuleGetArgs();

    /**
     * For satisfying the matchRule condition, the path of the request must exactly match the value specified in fullPathMatch after removing any query parameters and anchor that may be part of the original URL.
     * 
     */
    @InputImport(name="fullPathMatch")
      private final @Nullable Output<String> fullPathMatch;

    public Output<String> getFullPathMatch() {
        return this.fullPathMatch == null ? Output.empty() : this.fullPathMatch;
    }

    /**
     * Specifies a list of header match criteria, all of which must match corresponding headers in the request.
     * Structure is documented below.
     * 
     */
    @InputImport(name="headerMatches")
      private final @Nullable Output<List<EdgeCacheServiceRoutingPathMatcherRouteRuleMatchRuleHeaderMatchGetArgs>> headerMatches;

    public Output<List<EdgeCacheServiceRoutingPathMatcherRouteRuleMatchRuleHeaderMatchGetArgs>> getHeaderMatches() {
        return this.headerMatches == null ? Output.empty() : this.headerMatches;
    }

    /**
     * Specifies that prefixMatch and fullPathMatch matches are case sensitive.
     * 
     */
    @InputImport(name="ignoreCase")
      private final @Nullable Output<Boolean> ignoreCase;

    public Output<Boolean> getIgnoreCase() {
        return this.ignoreCase == null ? Output.empty() : this.ignoreCase;
    }

    /**
     * For satisfying the matchRule condition, the path of the request
     * must match the wildcard pattern specified in pathTemplateMatch
     * after removing any query parameters and anchor that may be part
     * of the original URL.
     * pathTemplateMatch must be between 1 and 255 characters
     * (inclusive).  The pattern specified by pathTemplateMatch may
     * have at most 5 wildcard operators and at most 5 variable
     * captures in total.
     * 
     */
    @InputImport(name="pathTemplateMatch")
      private final @Nullable Output<String> pathTemplateMatch;

    public Output<String> getPathTemplateMatch() {
        return this.pathTemplateMatch == null ? Output.empty() : this.pathTemplateMatch;
    }

    /**
     * The value of the header must start with the contents of prefixMatch.
     * 
     */
    @InputImport(name="prefixMatch")
      private final @Nullable Output<String> prefixMatch;

    public Output<String> getPrefixMatch() {
        return this.prefixMatch == null ? Output.empty() : this.prefixMatch;
    }

    /**
     * Specifies a list of query parameter match criteria, all of which must match corresponding query parameters in the request.
     * Structure is documented below.
     * 
     */
    @InputImport(name="queryParameterMatches")
      private final @Nullable Output<List<EdgeCacheServiceRoutingPathMatcherRouteRuleMatchRuleQueryParameterMatchGetArgs>> queryParameterMatches;

    public Output<List<EdgeCacheServiceRoutingPathMatcherRouteRuleMatchRuleQueryParameterMatchGetArgs>> getQueryParameterMatches() {
        return this.queryParameterMatches == null ? Output.empty() : this.queryParameterMatches;
    }

    public EdgeCacheServiceRoutingPathMatcherRouteRuleMatchRuleGetArgs(
        @Nullable Output<String> fullPathMatch,
        @Nullable Output<List<EdgeCacheServiceRoutingPathMatcherRouteRuleMatchRuleHeaderMatchGetArgs>> headerMatches,
        @Nullable Output<Boolean> ignoreCase,
        @Nullable Output<String> pathTemplateMatch,
        @Nullable Output<String> prefixMatch,
        @Nullable Output<List<EdgeCacheServiceRoutingPathMatcherRouteRuleMatchRuleQueryParameterMatchGetArgs>> queryParameterMatches) {
        this.fullPathMatch = fullPathMatch;
        this.headerMatches = headerMatches;
        this.ignoreCase = ignoreCase;
        this.pathTemplateMatch = pathTemplateMatch;
        this.prefixMatch = prefixMatch;
        this.queryParameterMatches = queryParameterMatches;
    }

    private EdgeCacheServiceRoutingPathMatcherRouteRuleMatchRuleGetArgs() {
        this.fullPathMatch = Output.empty();
        this.headerMatches = Output.empty();
        this.ignoreCase = Output.empty();
        this.pathTemplateMatch = Output.empty();
        this.prefixMatch = Output.empty();
        this.queryParameterMatches = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(EdgeCacheServiceRoutingPathMatcherRouteRuleMatchRuleGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> fullPathMatch;
        private @Nullable Output<List<EdgeCacheServiceRoutingPathMatcherRouteRuleMatchRuleHeaderMatchGetArgs>> headerMatches;
        private @Nullable Output<Boolean> ignoreCase;
        private @Nullable Output<String> pathTemplateMatch;
        private @Nullable Output<String> prefixMatch;
        private @Nullable Output<List<EdgeCacheServiceRoutingPathMatcherRouteRuleMatchRuleQueryParameterMatchGetArgs>> queryParameterMatches;

        public Builder() {
    	      // Empty
        }

        public Builder(EdgeCacheServiceRoutingPathMatcherRouteRuleMatchRuleGetArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.fullPathMatch = defaults.fullPathMatch;
    	      this.headerMatches = defaults.headerMatches;
    	      this.ignoreCase = defaults.ignoreCase;
    	      this.pathTemplateMatch = defaults.pathTemplateMatch;
    	      this.prefixMatch = defaults.prefixMatch;
    	      this.queryParameterMatches = defaults.queryParameterMatches;
        }

        public Builder fullPathMatch(@Nullable Output<String> fullPathMatch) {
            this.fullPathMatch = fullPathMatch;
            return this;
        }

        public Builder fullPathMatch(@Nullable String fullPathMatch) {
            this.fullPathMatch = Output.ofNullable(fullPathMatch);
            return this;
        }

        public Builder headerMatches(@Nullable Output<List<EdgeCacheServiceRoutingPathMatcherRouteRuleMatchRuleHeaderMatchGetArgs>> headerMatches) {
            this.headerMatches = headerMatches;
            return this;
        }

        public Builder headerMatches(@Nullable List<EdgeCacheServiceRoutingPathMatcherRouteRuleMatchRuleHeaderMatchGetArgs> headerMatches) {
            this.headerMatches = Output.ofNullable(headerMatches);
            return this;
        }

        public Builder ignoreCase(@Nullable Output<Boolean> ignoreCase) {
            this.ignoreCase = ignoreCase;
            return this;
        }

        public Builder ignoreCase(@Nullable Boolean ignoreCase) {
            this.ignoreCase = Output.ofNullable(ignoreCase);
            return this;
        }

        public Builder pathTemplateMatch(@Nullable Output<String> pathTemplateMatch) {
            this.pathTemplateMatch = pathTemplateMatch;
            return this;
        }

        public Builder pathTemplateMatch(@Nullable String pathTemplateMatch) {
            this.pathTemplateMatch = Output.ofNullable(pathTemplateMatch);
            return this;
        }

        public Builder prefixMatch(@Nullable Output<String> prefixMatch) {
            this.prefixMatch = prefixMatch;
            return this;
        }

        public Builder prefixMatch(@Nullable String prefixMatch) {
            this.prefixMatch = Output.ofNullable(prefixMatch);
            return this;
        }

        public Builder queryParameterMatches(@Nullable Output<List<EdgeCacheServiceRoutingPathMatcherRouteRuleMatchRuleQueryParameterMatchGetArgs>> queryParameterMatches) {
            this.queryParameterMatches = queryParameterMatches;
            return this;
        }

        public Builder queryParameterMatches(@Nullable List<EdgeCacheServiceRoutingPathMatcherRouteRuleMatchRuleQueryParameterMatchGetArgs> queryParameterMatches) {
            this.queryParameterMatches = Output.ofNullable(queryParameterMatches);
            return this;
        }
        public EdgeCacheServiceRoutingPathMatcherRouteRuleMatchRuleGetArgs build() {
            return new EdgeCacheServiceRoutingPathMatcherRouteRuleMatchRuleGetArgs(fullPathMatch, headerMatches, ignoreCase, pathTemplateMatch, prefixMatch, queryParameterMatches);
        }
    }
}
