// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.sql.inputs;

import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;


public final class GetDatabaseInstanceClone extends io.pulumi.resources.InvokeArgs {

    public static final GetDatabaseInstanceClone Empty = new GetDatabaseInstanceClone();

    @InputImport(name="pointInTime", required=true)
      private final String pointInTime;

    public String getPointInTime() {
        return this.pointInTime;
    }

    @InputImport(name="sourceInstanceName", required=true)
      private final String sourceInstanceName;

    public String getSourceInstanceName() {
        return this.sourceInstanceName;
    }

    public GetDatabaseInstanceClone(
        String pointInTime,
        String sourceInstanceName) {
        this.pointInTime = Objects.requireNonNull(pointInTime, "expected parameter 'pointInTime' to be non-null");
        this.sourceInstanceName = Objects.requireNonNull(sourceInstanceName, "expected parameter 'sourceInstanceName' to be non-null");
    }

    private GetDatabaseInstanceClone() {
        this.pointInTime = null;
        this.sourceInstanceName = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDatabaseInstanceClone defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String pointInTime;
        private String sourceInstanceName;

        public Builder() {
    	      // Empty
        }

        public Builder(GetDatabaseInstanceClone defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.pointInTime = defaults.pointInTime;
    	      this.sourceInstanceName = defaults.sourceInstanceName;
        }

        public Builder pointInTime(String pointInTime) {
            this.pointInTime = Objects.requireNonNull(pointInTime);
            return this;
        }

        public Builder sourceInstanceName(String sourceInstanceName) {
            this.sourceInstanceName = Objects.requireNonNull(sourceInstanceName);
            return this;
        }
        public GetDatabaseInstanceClone build() {
            return new GetDatabaseInstanceClone(pointInTime, sourceInstanceName);
        }
    }
}
