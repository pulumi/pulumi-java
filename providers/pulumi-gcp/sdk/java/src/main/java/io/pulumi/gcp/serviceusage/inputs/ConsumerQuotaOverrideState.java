// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.serviceusage.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ConsumerQuotaOverrideState extends io.pulumi.resources.ResourceArgs {

    public static final ConsumerQuotaOverrideState Empty = new ConsumerQuotaOverrideState();

    /**
     * If this map is nonempty, then this override applies only to specific values for dimensions defined in the limit unit.
     * 
     */
    @InputImport(name="dimensions")
    private final @Nullable Input<Map<String,String>> dimensions;

    public Input<Map<String,String>> getDimensions() {
        return this.dimensions == null ? Input.empty() : this.dimensions;
    }

    /**
     * If the new quota would decrease the existing quota by more than 10%, the request is rejected.
     * If `force` is `true`, that safety check is ignored.
     * 
     */
    @InputImport(name="force")
    private final @Nullable Input<Boolean> force;

    public Input<Boolean> getForce() {
        return this.force == null ? Input.empty() : this.force;
    }

    /**
     * The limit on the metric, e.g. `/project/region`.
     * 
     */
    @InputImport(name="limit")
    private final @Nullable Input<String> limit;

    public Input<String> getLimit() {
        return this.limit == null ? Input.empty() : this.limit;
    }

    /**
     * The metric that should be limited, e.g. `compute.googleapis.com/cpus`.
     * 
     */
    @InputImport(name="metric")
    private final @Nullable Input<String> metric;

    public Input<String> getMetric() {
        return this.metric == null ? Input.empty() : this.metric;
    }

    /**
     * The server-generated name of the quota override.
     * 
     */
    @InputImport(name="name")
    private final @Nullable Input<String> name;

    public Input<String> getName() {
        return this.name == null ? Input.empty() : this.name;
    }

    /**
     * The overriding quota limit value. Can be any nonnegative integer, or -1 (unlimited quota).
     * 
     */
    @InputImport(name="overrideValue")
    private final @Nullable Input<String> overrideValue;

    public Input<String> getOverrideValue() {
        return this.overrideValue == null ? Input.empty() : this.overrideValue;
    }

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @InputImport(name="project")
    private final @Nullable Input<String> project;

    public Input<String> getProject() {
        return this.project == null ? Input.empty() : this.project;
    }

    /**
     * The service that the metrics belong to, e.g. `compute.googleapis.com`.
     * 
     */
    @InputImport(name="service")
    private final @Nullable Input<String> service;

    public Input<String> getService() {
        return this.service == null ? Input.empty() : this.service;
    }

    public ConsumerQuotaOverrideState(
        @Nullable Input<Map<String,String>> dimensions,
        @Nullable Input<Boolean> force,
        @Nullable Input<String> limit,
        @Nullable Input<String> metric,
        @Nullable Input<String> name,
        @Nullable Input<String> overrideValue,
        @Nullable Input<String> project,
        @Nullable Input<String> service) {
        this.dimensions = dimensions;
        this.force = force;
        this.limit = limit;
        this.metric = metric;
        this.name = name;
        this.overrideValue = overrideValue;
        this.project = project;
        this.service = service;
    }

    private ConsumerQuotaOverrideState() {
        this.dimensions = Input.empty();
        this.force = Input.empty();
        this.limit = Input.empty();
        this.metric = Input.empty();
        this.name = Input.empty();
        this.overrideValue = Input.empty();
        this.project = Input.empty();
        this.service = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ConsumerQuotaOverrideState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<Map<String,String>> dimensions;
        private @Nullable Input<Boolean> force;
        private @Nullable Input<String> limit;
        private @Nullable Input<String> metric;
        private @Nullable Input<String> name;
        private @Nullable Input<String> overrideValue;
        private @Nullable Input<String> project;
        private @Nullable Input<String> service;

        public Builder() {
    	      // Empty
        }

        public Builder(ConsumerQuotaOverrideState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dimensions = defaults.dimensions;
    	      this.force = defaults.force;
    	      this.limit = defaults.limit;
    	      this.metric = defaults.metric;
    	      this.name = defaults.name;
    	      this.overrideValue = defaults.overrideValue;
    	      this.project = defaults.project;
    	      this.service = defaults.service;
        }

        public Builder setDimensions(@Nullable Input<Map<String,String>> dimensions) {
            this.dimensions = dimensions;
            return this;
        }

        public Builder setDimensions(@Nullable Map<String,String> dimensions) {
            this.dimensions = Input.ofNullable(dimensions);
            return this;
        }

        public Builder setForce(@Nullable Input<Boolean> force) {
            this.force = force;
            return this;
        }

        public Builder setForce(@Nullable Boolean force) {
            this.force = Input.ofNullable(force);
            return this;
        }

        public Builder setLimit(@Nullable Input<String> limit) {
            this.limit = limit;
            return this;
        }

        public Builder setLimit(@Nullable String limit) {
            this.limit = Input.ofNullable(limit);
            return this;
        }

        public Builder setMetric(@Nullable Input<String> metric) {
            this.metric = metric;
            return this;
        }

        public Builder setMetric(@Nullable String metric) {
            this.metric = Input.ofNullable(metric);
            return this;
        }

        public Builder setName(@Nullable Input<String> name) {
            this.name = name;
            return this;
        }

        public Builder setName(@Nullable String name) {
            this.name = Input.ofNullable(name);
            return this;
        }

        public Builder setOverrideValue(@Nullable Input<String> overrideValue) {
            this.overrideValue = overrideValue;
            return this;
        }

        public Builder setOverrideValue(@Nullable String overrideValue) {
            this.overrideValue = Input.ofNullable(overrideValue);
            return this;
        }

        public Builder setProject(@Nullable Input<String> project) {
            this.project = project;
            return this;
        }

        public Builder setProject(@Nullable String project) {
            this.project = Input.ofNullable(project);
            return this;
        }

        public Builder setService(@Nullable Input<String> service) {
            this.service = service;
            return this;
        }

        public Builder setService(@Nullable String service) {
            this.service = Input.ofNullable(service);
            return this;
        }

        public ConsumerQuotaOverrideState build() {
            return new ConsumerQuotaOverrideState(dimensions, force, limit, metric, name, overrideValue, project, service);
        }
    }
}
