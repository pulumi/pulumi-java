// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.apigateway.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import io.pulumi.gcp.apigateway.inputs.ApiConfigOpenapiDocumentDocumentArgs;
import java.util.Objects;


public final class ApiConfigOpenapiDocumentArgs extends io.pulumi.resources.ResourceArgs {

    public static final ApiConfigOpenapiDocumentArgs Empty = new ApiConfigOpenapiDocumentArgs();

    /**
     * The OpenAPI Specification document file.
     * Structure is documented below.
     * 
     */
    @Import(name="document", required=true)
      private final Output<ApiConfigOpenapiDocumentDocumentArgs> document;

    public Output<ApiConfigOpenapiDocumentDocumentArgs> document() {
        return this.document;
    }

    public ApiConfigOpenapiDocumentArgs(Output<ApiConfigOpenapiDocumentDocumentArgs> document) {
        this.document = Objects.requireNonNull(document, "expected parameter 'document' to be non-null");
    }

    private ApiConfigOpenapiDocumentArgs() {
        this.document = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ApiConfigOpenapiDocumentArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<ApiConfigOpenapiDocumentDocumentArgs> document;

        public Builder() {
    	      // Empty
        }

        public Builder(ApiConfigOpenapiDocumentArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.document = defaults.document;
        }

        public Builder document(Output<ApiConfigOpenapiDocumentDocumentArgs> document) {
            this.document = Objects.requireNonNull(document);
            return this;
        }
        public Builder document(ApiConfigOpenapiDocumentDocumentArgs document) {
            this.document = Output.of(Objects.requireNonNull(document));
            return this;
        }        public ApiConfigOpenapiDocumentArgs build() {
            return new ApiConfigOpenapiDocumentArgs(document);
        }
    }
}
