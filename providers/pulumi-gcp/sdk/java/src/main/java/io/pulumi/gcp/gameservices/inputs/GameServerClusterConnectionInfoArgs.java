// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.gameservices.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.gcp.gameservices.inputs.GameServerClusterConnectionInfoGkeClusterReferenceArgs;
import java.lang.String;
import java.util.Objects;


public final class GameServerClusterConnectionInfoArgs extends io.pulumi.resources.ResourceArgs {

    public static final GameServerClusterConnectionInfoArgs Empty = new GameServerClusterConnectionInfoArgs();

    /**
     * Reference of the GKE cluster where the game servers are installed.
     * Structure is documented below.
     * 
     */
    @Import(name="gkeClusterReference", required=true)
      private final Output<GameServerClusterConnectionInfoGkeClusterReferenceArgs> gkeClusterReference;

    public Output<GameServerClusterConnectionInfoGkeClusterReferenceArgs> getGkeClusterReference() {
        return this.gkeClusterReference;
    }

    /**
     * Namespace designated on the game server cluster where the game server
     * instances will be created. The namespace existence will be validated
     * during creation.
     * 
     */
    @Import(name="namespace", required=true)
      private final Output<String> namespace;

    public Output<String> getNamespace() {
        return this.namespace;
    }

    public GameServerClusterConnectionInfoArgs(
        Output<GameServerClusterConnectionInfoGkeClusterReferenceArgs> gkeClusterReference,
        Output<String> namespace) {
        this.gkeClusterReference = Objects.requireNonNull(gkeClusterReference, "expected parameter 'gkeClusterReference' to be non-null");
        this.namespace = Objects.requireNonNull(namespace, "expected parameter 'namespace' to be non-null");
    }

    private GameServerClusterConnectionInfoArgs() {
        this.gkeClusterReference = Output.empty();
        this.namespace = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GameServerClusterConnectionInfoArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<GameServerClusterConnectionInfoGkeClusterReferenceArgs> gkeClusterReference;
        private Output<String> namespace;

        public Builder() {
    	      // Empty
        }

        public Builder(GameServerClusterConnectionInfoArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.gkeClusterReference = defaults.gkeClusterReference;
    	      this.namespace = defaults.namespace;
        }

        public Builder gkeClusterReference(Output<GameServerClusterConnectionInfoGkeClusterReferenceArgs> gkeClusterReference) {
            this.gkeClusterReference = Objects.requireNonNull(gkeClusterReference);
            return this;
        }
        public Builder gkeClusterReference(GameServerClusterConnectionInfoGkeClusterReferenceArgs gkeClusterReference) {
            this.gkeClusterReference = Output.of(Objects.requireNonNull(gkeClusterReference));
            return this;
        }
        public Builder namespace(Output<String> namespace) {
            this.namespace = Objects.requireNonNull(namespace);
            return this;
        }
        public Builder namespace(String namespace) {
            this.namespace = Output.of(Objects.requireNonNull(namespace));
            return this;
        }        public GameServerClusterConnectionInfoArgs build() {
            return new GameServerClusterConnectionInfoArgs(gkeClusterReference, namespace);
        }
    }
}
