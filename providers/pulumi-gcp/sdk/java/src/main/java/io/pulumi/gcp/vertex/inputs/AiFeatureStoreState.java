// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.vertex.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import io.pulumi.gcp.vertex.inputs.AiFeatureStoreOnlineServingConfigGetArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class AiFeatureStoreState extends io.pulumi.resources.ResourceArgs {

    public static final AiFeatureStoreState Empty = new AiFeatureStoreState();

    @InputImport(name="createTime")
    private final @Nullable Input<String> createTime;

    public Input<String> getCreateTime() {
        return this.createTime == null ? Input.empty() : this.createTime;
    }

    @InputImport(name="etag")
    private final @Nullable Input<String> etag;

    public Input<String> getEtag() {
        return this.etag == null ? Input.empty() : this.etag;
    }

    @InputImport(name="forceDestroy")
    private final @Nullable Input<Boolean> forceDestroy;

    public Input<Boolean> getForceDestroy() {
        return this.forceDestroy == null ? Input.empty() : this.forceDestroy;
    }

    @InputImport(name="labels")
    private final @Nullable Input<Map<String,String>> labels;

    public Input<Map<String,String>> getLabels() {
        return this.labels == null ? Input.empty() : this.labels;
    }

    @InputImport(name="name")
    private final @Nullable Input<String> name;

    public Input<String> getName() {
        return this.name == null ? Input.empty() : this.name;
    }

    @InputImport(name="onlineServingConfig")
    private final @Nullable Input<AiFeatureStoreOnlineServingConfigGetArgs> onlineServingConfig;

    public Input<AiFeatureStoreOnlineServingConfigGetArgs> getOnlineServingConfig() {
        return this.onlineServingConfig == null ? Input.empty() : this.onlineServingConfig;
    }

    @InputImport(name="project")
    private final @Nullable Input<String> project;

    public Input<String> getProject() {
        return this.project == null ? Input.empty() : this.project;
    }

    @InputImport(name="region")
    private final @Nullable Input<String> region;

    public Input<String> getRegion() {
        return this.region == null ? Input.empty() : this.region;
    }

    @InputImport(name="updateTime")
    private final @Nullable Input<String> updateTime;

    public Input<String> getUpdateTime() {
        return this.updateTime == null ? Input.empty() : this.updateTime;
    }

    public AiFeatureStoreState(
        @Nullable Input<String> createTime,
        @Nullable Input<String> etag,
        @Nullable Input<Boolean> forceDestroy,
        @Nullable Input<Map<String,String>> labels,
        @Nullable Input<String> name,
        @Nullable Input<AiFeatureStoreOnlineServingConfigGetArgs> onlineServingConfig,
        @Nullable Input<String> project,
        @Nullable Input<String> region,
        @Nullable Input<String> updateTime) {
        this.createTime = createTime;
        this.etag = etag;
        this.forceDestroy = forceDestroy;
        this.labels = labels;
        this.name = name;
        this.onlineServingConfig = onlineServingConfig;
        this.project = project;
        this.region = region;
        this.updateTime = updateTime;
    }

    private AiFeatureStoreState() {
        this.createTime = Input.empty();
        this.etag = Input.empty();
        this.forceDestroy = Input.empty();
        this.labels = Input.empty();
        this.name = Input.empty();
        this.onlineServingConfig = Input.empty();
        this.project = Input.empty();
        this.region = Input.empty();
        this.updateTime = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AiFeatureStoreState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> createTime;
        private @Nullable Input<String> etag;
        private @Nullable Input<Boolean> forceDestroy;
        private @Nullable Input<Map<String,String>> labels;
        private @Nullable Input<String> name;
        private @Nullable Input<AiFeatureStoreOnlineServingConfigGetArgs> onlineServingConfig;
        private @Nullable Input<String> project;
        private @Nullable Input<String> region;
        private @Nullable Input<String> updateTime;

        public Builder() {
    	      // Empty
        }

        public Builder(AiFeatureStoreState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.createTime = defaults.createTime;
    	      this.etag = defaults.etag;
    	      this.forceDestroy = defaults.forceDestroy;
    	      this.labels = defaults.labels;
    	      this.name = defaults.name;
    	      this.onlineServingConfig = defaults.onlineServingConfig;
    	      this.project = defaults.project;
    	      this.region = defaults.region;
    	      this.updateTime = defaults.updateTime;
        }

        public Builder setCreateTime(@Nullable Input<String> createTime) {
            this.createTime = createTime;
            return this;
        }

        public Builder setCreateTime(@Nullable String createTime) {
            this.createTime = Input.ofNullable(createTime);
            return this;
        }

        public Builder setEtag(@Nullable Input<String> etag) {
            this.etag = etag;
            return this;
        }

        public Builder setEtag(@Nullable String etag) {
            this.etag = Input.ofNullable(etag);
            return this;
        }

        public Builder setForceDestroy(@Nullable Input<Boolean> forceDestroy) {
            this.forceDestroy = forceDestroy;
            return this;
        }

        public Builder setForceDestroy(@Nullable Boolean forceDestroy) {
            this.forceDestroy = Input.ofNullable(forceDestroy);
            return this;
        }

        public Builder setLabels(@Nullable Input<Map<String,String>> labels) {
            this.labels = labels;
            return this;
        }

        public Builder setLabels(@Nullable Map<String,String> labels) {
            this.labels = Input.ofNullable(labels);
            return this;
        }

        public Builder setName(@Nullable Input<String> name) {
            this.name = name;
            return this;
        }

        public Builder setName(@Nullable String name) {
            this.name = Input.ofNullable(name);
            return this;
        }

        public Builder setOnlineServingConfig(@Nullable Input<AiFeatureStoreOnlineServingConfigGetArgs> onlineServingConfig) {
            this.onlineServingConfig = onlineServingConfig;
            return this;
        }

        public Builder setOnlineServingConfig(@Nullable AiFeatureStoreOnlineServingConfigGetArgs onlineServingConfig) {
            this.onlineServingConfig = Input.ofNullable(onlineServingConfig);
            return this;
        }

        public Builder setProject(@Nullable Input<String> project) {
            this.project = project;
            return this;
        }

        public Builder setProject(@Nullable String project) {
            this.project = Input.ofNullable(project);
            return this;
        }

        public Builder setRegion(@Nullable Input<String> region) {
            this.region = region;
            return this;
        }

        public Builder setRegion(@Nullable String region) {
            this.region = Input.ofNullable(region);
            return this;
        }

        public Builder setUpdateTime(@Nullable Input<String> updateTime) {
            this.updateTime = updateTime;
            return this;
        }

        public Builder setUpdateTime(@Nullable String updateTime) {
            this.updateTime = Input.ofNullable(updateTime);
            return this;
        }

        public AiFeatureStoreState build() {
            return new AiFeatureStoreState(createTime, etag, forceDestroy, labels, name, onlineServingConfig, project, region, updateTime);
        }
    }
}
