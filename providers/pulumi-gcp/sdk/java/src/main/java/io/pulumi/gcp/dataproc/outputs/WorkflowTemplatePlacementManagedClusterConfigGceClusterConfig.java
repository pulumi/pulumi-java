// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.dataproc.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import io.pulumi.gcp.dataproc.outputs.WorkflowTemplatePlacementManagedClusterConfigGceClusterConfigNodeGroupAffinity;
import io.pulumi.gcp.dataproc.outputs.WorkflowTemplatePlacementManagedClusterConfigGceClusterConfigReservationAffinity;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class WorkflowTemplatePlacementManagedClusterConfigGceClusterConfig {
    private final @Nullable Boolean internalIpOnly;
    private final @Nullable Map<String,String> metadata;
    private final @Nullable String network;
    private final @Nullable WorkflowTemplatePlacementManagedClusterConfigGceClusterConfigNodeGroupAffinity nodeGroupAffinity;
    private final @Nullable String privateIpv6GoogleAccess;
    private final @Nullable WorkflowTemplatePlacementManagedClusterConfigGceClusterConfigReservationAffinity reservationAffinity;
    private final @Nullable String serviceAccount;
    private final @Nullable List<String> serviceAccountScopes;
    private final @Nullable String subnetwork;
    private final @Nullable List<String> tags;
    private final @Nullable String zone;

    @OutputCustomType.Constructor({"internalIpOnly","metadata","network","nodeGroupAffinity","privateIpv6GoogleAccess","reservationAffinity","serviceAccount","serviceAccountScopes","subnetwork","tags","zone"})
    private WorkflowTemplatePlacementManagedClusterConfigGceClusterConfig(
        @Nullable Boolean internalIpOnly,
        @Nullable Map<String,String> metadata,
        @Nullable String network,
        @Nullable WorkflowTemplatePlacementManagedClusterConfigGceClusterConfigNodeGroupAffinity nodeGroupAffinity,
        @Nullable String privateIpv6GoogleAccess,
        @Nullable WorkflowTemplatePlacementManagedClusterConfigGceClusterConfigReservationAffinity reservationAffinity,
        @Nullable String serviceAccount,
        @Nullable List<String> serviceAccountScopes,
        @Nullable String subnetwork,
        @Nullable List<String> tags,
        @Nullable String zone) {
        this.internalIpOnly = internalIpOnly;
        this.metadata = metadata;
        this.network = network;
        this.nodeGroupAffinity = nodeGroupAffinity;
        this.privateIpv6GoogleAccess = privateIpv6GoogleAccess;
        this.reservationAffinity = reservationAffinity;
        this.serviceAccount = serviceAccount;
        this.serviceAccountScopes = serviceAccountScopes;
        this.subnetwork = subnetwork;
        this.tags = tags;
        this.zone = zone;
    }

    public Optional<Boolean> getInternalIpOnly() {
        return Optional.ofNullable(this.internalIpOnly);
    }
    public Map<String,String> getMetadata() {
        return this.metadata == null ? Map.of() : this.metadata;
    }
    public Optional<String> getNetwork() {
        return Optional.ofNullable(this.network);
    }
    public Optional<WorkflowTemplatePlacementManagedClusterConfigGceClusterConfigNodeGroupAffinity> getNodeGroupAffinity() {
        return Optional.ofNullable(this.nodeGroupAffinity);
    }
    public Optional<String> getPrivateIpv6GoogleAccess() {
        return Optional.ofNullable(this.privateIpv6GoogleAccess);
    }
    public Optional<WorkflowTemplatePlacementManagedClusterConfigGceClusterConfigReservationAffinity> getReservationAffinity() {
        return Optional.ofNullable(this.reservationAffinity);
    }
    public Optional<String> getServiceAccount() {
        return Optional.ofNullable(this.serviceAccount);
    }
    public List<String> getServiceAccountScopes() {
        return this.serviceAccountScopes == null ? List.of() : this.serviceAccountScopes;
    }
    public Optional<String> getSubnetwork() {
        return Optional.ofNullable(this.subnetwork);
    }
    public List<String> getTags() {
        return this.tags == null ? List.of() : this.tags;
    }
    public Optional<String> getZone() {
        return Optional.ofNullable(this.zone);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(WorkflowTemplatePlacementManagedClusterConfigGceClusterConfig defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Boolean internalIpOnly;
        private @Nullable Map<String,String> metadata;
        private @Nullable String network;
        private @Nullable WorkflowTemplatePlacementManagedClusterConfigGceClusterConfigNodeGroupAffinity nodeGroupAffinity;
        private @Nullable String privateIpv6GoogleAccess;
        private @Nullable WorkflowTemplatePlacementManagedClusterConfigGceClusterConfigReservationAffinity reservationAffinity;
        private @Nullable String serviceAccount;
        private @Nullable List<String> serviceAccountScopes;
        private @Nullable String subnetwork;
        private @Nullable List<String> tags;
        private @Nullable String zone;

        public Builder() {
    	      // Empty
        }

        public Builder(WorkflowTemplatePlacementManagedClusterConfigGceClusterConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.internalIpOnly = defaults.internalIpOnly;
    	      this.metadata = defaults.metadata;
    	      this.network = defaults.network;
    	      this.nodeGroupAffinity = defaults.nodeGroupAffinity;
    	      this.privateIpv6GoogleAccess = defaults.privateIpv6GoogleAccess;
    	      this.reservationAffinity = defaults.reservationAffinity;
    	      this.serviceAccount = defaults.serviceAccount;
    	      this.serviceAccountScopes = defaults.serviceAccountScopes;
    	      this.subnetwork = defaults.subnetwork;
    	      this.tags = defaults.tags;
    	      this.zone = defaults.zone;
        }

        public Builder setInternalIpOnly(@Nullable Boolean internalIpOnly) {
            this.internalIpOnly = internalIpOnly;
            return this;
        }

        public Builder setMetadata(@Nullable Map<String,String> metadata) {
            this.metadata = metadata;
            return this;
        }

        public Builder setNetwork(@Nullable String network) {
            this.network = network;
            return this;
        }

        public Builder setNodeGroupAffinity(@Nullable WorkflowTemplatePlacementManagedClusterConfigGceClusterConfigNodeGroupAffinity nodeGroupAffinity) {
            this.nodeGroupAffinity = nodeGroupAffinity;
            return this;
        }

        public Builder setPrivateIpv6GoogleAccess(@Nullable String privateIpv6GoogleAccess) {
            this.privateIpv6GoogleAccess = privateIpv6GoogleAccess;
            return this;
        }

        public Builder setReservationAffinity(@Nullable WorkflowTemplatePlacementManagedClusterConfigGceClusterConfigReservationAffinity reservationAffinity) {
            this.reservationAffinity = reservationAffinity;
            return this;
        }

        public Builder setServiceAccount(@Nullable String serviceAccount) {
            this.serviceAccount = serviceAccount;
            return this;
        }

        public Builder setServiceAccountScopes(@Nullable List<String> serviceAccountScopes) {
            this.serviceAccountScopes = serviceAccountScopes;
            return this;
        }

        public Builder setSubnetwork(@Nullable String subnetwork) {
            this.subnetwork = subnetwork;
            return this;
        }

        public Builder setTags(@Nullable List<String> tags) {
            this.tags = tags;
            return this;
        }

        public Builder setZone(@Nullable String zone) {
            this.zone = zone;
            return this;
        }

        public WorkflowTemplatePlacementManagedClusterConfigGceClusterConfig build() {
            return new WorkflowTemplatePlacementManagedClusterConfigGceClusterConfig(internalIpOnly, metadata, network, nodeGroupAffinity, privateIpv6GoogleAccess, reservationAffinity, serviceAccount, serviceAccountScopes, subnetwork, tags, zone);
        }
    }
}
