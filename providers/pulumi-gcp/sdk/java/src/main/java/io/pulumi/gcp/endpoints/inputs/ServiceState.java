// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.endpoints.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.InputImport;
import io.pulumi.gcp.endpoints.inputs.ServiceApiGetArgs;
import io.pulumi.gcp.endpoints.inputs.ServiceEndpointGetArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ServiceState extends io.pulumi.resources.ResourceArgs {

    public static final ServiceState Empty = new ServiceState();

    /**
     * A list of API objects.
     * 
     */
    @InputImport(name="apis")
      private final @Nullable Output<List<ServiceApiGetArgs>> apis;

    public Output<List<ServiceApiGetArgs>> getApis() {
        return this.apis == null ? Output.empty() : this.apis;
    }

    /**
     * The autogenerated ID for the configuration that is rolled out as part of the creation of this resource. Must be provided
     * to compute engine instances as a tag.
     * 
     */
    @InputImport(name="configId")
      private final @Nullable Output<String> configId;

    public Output<String> getConfigId() {
        return this.configId == null ? Output.empty() : this.configId;
    }

    /**
     * The address at which the service can be found - usually the same as the service name.
     * 
     */
    @InputImport(name="dnsAddress")
      private final @Nullable Output<String> dnsAddress;

    public Output<String> getDnsAddress() {
        return this.dnsAddress == null ? Output.empty() : this.dnsAddress;
    }

    /**
     * A list of Endpoint objects.
     * 
     */
    @InputImport(name="endpoints")
      private final @Nullable Output<List<ServiceEndpointGetArgs>> endpoints;

    public Output<List<ServiceEndpointGetArgs>> getEndpoints() {
        return this.endpoints == null ? Output.empty() : this.endpoints;
    }

    /**
     * The full text of the Service Config YAML file (Example located here). If provided, must also provide
     * protoc_output_base64. open_api config must not be provided.
     * 
     */
    @InputImport(name="grpcConfig")
      private final @Nullable Output<String> grpcConfig;

    public Output<String> getGrpcConfig() {
        return this.grpcConfig == null ? Output.empty() : this.grpcConfig;
    }

    /**
     * The full text of the OpenAPI YAML configuration as described here. Either this, or both of grpc_config and
     * protoc_output_base64 must be specified.
     * 
     */
    @InputImport(name="openapiConfig")
      private final @Nullable Output<String> openapiConfig;

    public Output<String> getOpenapiConfig() {
        return this.openapiConfig == null ? Output.empty() : this.openapiConfig;
    }

    /**
     * The project ID that the service belongs to. If not provided, provider project is used.
     * 
     */
    @InputImport(name="project")
      private final @Nullable Output<String> project;

    public Output<String> getProject() {
        return this.project == null ? Output.empty() : this.project;
    }

    /**
     * The full contents of the Service Descriptor File generated by protoc. This should be a compiled .pb file,
     * base64-encoded.
     * 
     */
    @InputImport(name="protocOutputBase64")
      private final @Nullable Output<String> protocOutputBase64;

    public Output<String> getProtocOutputBase64() {
        return this.protocOutputBase64 == null ? Output.empty() : this.protocOutputBase64;
    }

    /**
     * The name of the service. Usually of the form $apiname.endpoints.$projectid.cloud.goog.
     * 
     */
    @InputImport(name="serviceName")
      private final @Nullable Output<String> serviceName;

    public Output<String> getServiceName() {
        return this.serviceName == null ? Output.empty() : this.serviceName;
    }

    public ServiceState(
        @Nullable Output<List<ServiceApiGetArgs>> apis,
        @Nullable Output<String> configId,
        @Nullable Output<String> dnsAddress,
        @Nullable Output<List<ServiceEndpointGetArgs>> endpoints,
        @Nullable Output<String> grpcConfig,
        @Nullable Output<String> openapiConfig,
        @Nullable Output<String> project,
        @Nullable Output<String> protocOutputBase64,
        @Nullable Output<String> serviceName) {
        this.apis = apis;
        this.configId = configId;
        this.dnsAddress = dnsAddress;
        this.endpoints = endpoints;
        this.grpcConfig = grpcConfig;
        this.openapiConfig = openapiConfig;
        this.project = project;
        this.protocOutputBase64 = protocOutputBase64;
        this.serviceName = serviceName;
    }

    private ServiceState() {
        this.apis = Output.empty();
        this.configId = Output.empty();
        this.dnsAddress = Output.empty();
        this.endpoints = Output.empty();
        this.grpcConfig = Output.empty();
        this.openapiConfig = Output.empty();
        this.project = Output.empty();
        this.protocOutputBase64 = Output.empty();
        this.serviceName = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ServiceState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<List<ServiceApiGetArgs>> apis;
        private @Nullable Output<String> configId;
        private @Nullable Output<String> dnsAddress;
        private @Nullable Output<List<ServiceEndpointGetArgs>> endpoints;
        private @Nullable Output<String> grpcConfig;
        private @Nullable Output<String> openapiConfig;
        private @Nullable Output<String> project;
        private @Nullable Output<String> protocOutputBase64;
        private @Nullable Output<String> serviceName;

        public Builder() {
    	      // Empty
        }

        public Builder(ServiceState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.apis = defaults.apis;
    	      this.configId = defaults.configId;
    	      this.dnsAddress = defaults.dnsAddress;
    	      this.endpoints = defaults.endpoints;
    	      this.grpcConfig = defaults.grpcConfig;
    	      this.openapiConfig = defaults.openapiConfig;
    	      this.project = defaults.project;
    	      this.protocOutputBase64 = defaults.protocOutputBase64;
    	      this.serviceName = defaults.serviceName;
        }

        public Builder apis(@Nullable Output<List<ServiceApiGetArgs>> apis) {
            this.apis = apis;
            return this;
        }

        public Builder apis(@Nullable List<ServiceApiGetArgs> apis) {
            this.apis = Output.ofNullable(apis);
            return this;
        }

        public Builder configId(@Nullable Output<String> configId) {
            this.configId = configId;
            return this;
        }

        public Builder configId(@Nullable String configId) {
            this.configId = Output.ofNullable(configId);
            return this;
        }

        public Builder dnsAddress(@Nullable Output<String> dnsAddress) {
            this.dnsAddress = dnsAddress;
            return this;
        }

        public Builder dnsAddress(@Nullable String dnsAddress) {
            this.dnsAddress = Output.ofNullable(dnsAddress);
            return this;
        }

        public Builder endpoints(@Nullable Output<List<ServiceEndpointGetArgs>> endpoints) {
            this.endpoints = endpoints;
            return this;
        }

        public Builder endpoints(@Nullable List<ServiceEndpointGetArgs> endpoints) {
            this.endpoints = Output.ofNullable(endpoints);
            return this;
        }

        public Builder grpcConfig(@Nullable Output<String> grpcConfig) {
            this.grpcConfig = grpcConfig;
            return this;
        }

        public Builder grpcConfig(@Nullable String grpcConfig) {
            this.grpcConfig = Output.ofNullable(grpcConfig);
            return this;
        }

        public Builder openapiConfig(@Nullable Output<String> openapiConfig) {
            this.openapiConfig = openapiConfig;
            return this;
        }

        public Builder openapiConfig(@Nullable String openapiConfig) {
            this.openapiConfig = Output.ofNullable(openapiConfig);
            return this;
        }

        public Builder project(@Nullable Output<String> project) {
            this.project = project;
            return this;
        }

        public Builder project(@Nullable String project) {
            this.project = Output.ofNullable(project);
            return this;
        }

        public Builder protocOutputBase64(@Nullable Output<String> protocOutputBase64) {
            this.protocOutputBase64 = protocOutputBase64;
            return this;
        }

        public Builder protocOutputBase64(@Nullable String protocOutputBase64) {
            this.protocOutputBase64 = Output.ofNullable(protocOutputBase64);
            return this;
        }

        public Builder serviceName(@Nullable Output<String> serviceName) {
            this.serviceName = serviceName;
            return this;
        }

        public Builder serviceName(@Nullable String serviceName) {
            this.serviceName = Output.ofNullable(serviceName);
            return this;
        }
        public ServiceState build() {
            return new ServiceState(apis, configId, dnsAddress, endpoints, grpcConfig, openapiConfig, project, protocOutputBase64, serviceName);
        }
    }
}
