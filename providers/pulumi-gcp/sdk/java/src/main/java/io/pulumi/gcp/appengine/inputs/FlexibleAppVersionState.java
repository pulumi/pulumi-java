// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.appengine.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import io.pulumi.gcp.appengine.inputs.FlexibleAppVersionApiConfigGetArgs;
import io.pulumi.gcp.appengine.inputs.FlexibleAppVersionAutomaticScalingGetArgs;
import io.pulumi.gcp.appengine.inputs.FlexibleAppVersionDeploymentGetArgs;
import io.pulumi.gcp.appengine.inputs.FlexibleAppVersionEndpointsApiServiceGetArgs;
import io.pulumi.gcp.appengine.inputs.FlexibleAppVersionEntrypointGetArgs;
import io.pulumi.gcp.appengine.inputs.FlexibleAppVersionHandlerGetArgs;
import io.pulumi.gcp.appengine.inputs.FlexibleAppVersionLivenessCheckGetArgs;
import io.pulumi.gcp.appengine.inputs.FlexibleAppVersionManualScalingGetArgs;
import io.pulumi.gcp.appengine.inputs.FlexibleAppVersionNetworkGetArgs;
import io.pulumi.gcp.appengine.inputs.FlexibleAppVersionReadinessCheckGetArgs;
import io.pulumi.gcp.appengine.inputs.FlexibleAppVersionResourcesGetArgs;
import io.pulumi.gcp.appengine.inputs.FlexibleAppVersionVpcAccessConnectorGetArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class FlexibleAppVersionState extends io.pulumi.resources.ResourceArgs {

    public static final FlexibleAppVersionState Empty = new FlexibleAppVersionState();

    @InputImport(name="apiConfig")
    private final @Nullable Input<FlexibleAppVersionApiConfigGetArgs> apiConfig;

    public Input<FlexibleAppVersionApiConfigGetArgs> getApiConfig() {
        return this.apiConfig == null ? Input.empty() : this.apiConfig;
    }

    @InputImport(name="automaticScaling")
    private final @Nullable Input<FlexibleAppVersionAutomaticScalingGetArgs> automaticScaling;

    public Input<FlexibleAppVersionAutomaticScalingGetArgs> getAutomaticScaling() {
        return this.automaticScaling == null ? Input.empty() : this.automaticScaling;
    }

    @InputImport(name="betaSettings")
    private final @Nullable Input<Map<String,String>> betaSettings;

    public Input<Map<String,String>> getBetaSettings() {
        return this.betaSettings == null ? Input.empty() : this.betaSettings;
    }

    @InputImport(name="defaultExpiration")
    private final @Nullable Input<String> defaultExpiration;

    public Input<String> getDefaultExpiration() {
        return this.defaultExpiration == null ? Input.empty() : this.defaultExpiration;
    }

    @InputImport(name="deleteServiceOnDestroy")
    private final @Nullable Input<Boolean> deleteServiceOnDestroy;

    public Input<Boolean> getDeleteServiceOnDestroy() {
        return this.deleteServiceOnDestroy == null ? Input.empty() : this.deleteServiceOnDestroy;
    }

    @InputImport(name="deployment")
    private final @Nullable Input<FlexibleAppVersionDeploymentGetArgs> deployment;

    public Input<FlexibleAppVersionDeploymentGetArgs> getDeployment() {
        return this.deployment == null ? Input.empty() : this.deployment;
    }

    @InputImport(name="endpointsApiService")
    private final @Nullable Input<FlexibleAppVersionEndpointsApiServiceGetArgs> endpointsApiService;

    public Input<FlexibleAppVersionEndpointsApiServiceGetArgs> getEndpointsApiService() {
        return this.endpointsApiService == null ? Input.empty() : this.endpointsApiService;
    }

    @InputImport(name="entrypoint")
    private final @Nullable Input<FlexibleAppVersionEntrypointGetArgs> entrypoint;

    public Input<FlexibleAppVersionEntrypointGetArgs> getEntrypoint() {
        return this.entrypoint == null ? Input.empty() : this.entrypoint;
    }

    @InputImport(name="envVariables")
    private final @Nullable Input<Map<String,String>> envVariables;

    public Input<Map<String,String>> getEnvVariables() {
        return this.envVariables == null ? Input.empty() : this.envVariables;
    }

    @InputImport(name="handlers")
    private final @Nullable Input<List<FlexibleAppVersionHandlerGetArgs>> handlers;

    public Input<List<FlexibleAppVersionHandlerGetArgs>> getHandlers() {
        return this.handlers == null ? Input.empty() : this.handlers;
    }

    @InputImport(name="inboundServices")
    private final @Nullable Input<List<String>> inboundServices;

    public Input<List<String>> getInboundServices() {
        return this.inboundServices == null ? Input.empty() : this.inboundServices;
    }

    @InputImport(name="instanceClass")
    private final @Nullable Input<String> instanceClass;

    public Input<String> getInstanceClass() {
        return this.instanceClass == null ? Input.empty() : this.instanceClass;
    }

    @InputImport(name="livenessCheck")
    private final @Nullable Input<FlexibleAppVersionLivenessCheckGetArgs> livenessCheck;

    public Input<FlexibleAppVersionLivenessCheckGetArgs> getLivenessCheck() {
        return this.livenessCheck == null ? Input.empty() : this.livenessCheck;
    }

    @InputImport(name="manualScaling")
    private final @Nullable Input<FlexibleAppVersionManualScalingGetArgs> manualScaling;

    public Input<FlexibleAppVersionManualScalingGetArgs> getManualScaling() {
        return this.manualScaling == null ? Input.empty() : this.manualScaling;
    }

    @InputImport(name="name")
    private final @Nullable Input<String> name;

    public Input<String> getName() {
        return this.name == null ? Input.empty() : this.name;
    }

    @InputImport(name="network")
    private final @Nullable Input<FlexibleAppVersionNetworkGetArgs> network;

    public Input<FlexibleAppVersionNetworkGetArgs> getNetwork() {
        return this.network == null ? Input.empty() : this.network;
    }

    @InputImport(name="nobuildFilesRegex")
    private final @Nullable Input<String> nobuildFilesRegex;

    public Input<String> getNobuildFilesRegex() {
        return this.nobuildFilesRegex == null ? Input.empty() : this.nobuildFilesRegex;
    }

    @InputImport(name="noopOnDestroy")
    private final @Nullable Input<Boolean> noopOnDestroy;

    public Input<Boolean> getNoopOnDestroy() {
        return this.noopOnDestroy == null ? Input.empty() : this.noopOnDestroy;
    }

    @InputImport(name="project")
    private final @Nullable Input<String> project;

    public Input<String> getProject() {
        return this.project == null ? Input.empty() : this.project;
    }

    @InputImport(name="readinessCheck")
    private final @Nullable Input<FlexibleAppVersionReadinessCheckGetArgs> readinessCheck;

    public Input<FlexibleAppVersionReadinessCheckGetArgs> getReadinessCheck() {
        return this.readinessCheck == null ? Input.empty() : this.readinessCheck;
    }

    @InputImport(name="resources")
    private final @Nullable Input<FlexibleAppVersionResourcesGetArgs> resources;

    public Input<FlexibleAppVersionResourcesGetArgs> getResources() {
        return this.resources == null ? Input.empty() : this.resources;
    }

    @InputImport(name="runtime")
    private final @Nullable Input<String> runtime;

    public Input<String> getRuntime() {
        return this.runtime == null ? Input.empty() : this.runtime;
    }

    @InputImport(name="runtimeApiVersion")
    private final @Nullable Input<String> runtimeApiVersion;

    public Input<String> getRuntimeApiVersion() {
        return this.runtimeApiVersion == null ? Input.empty() : this.runtimeApiVersion;
    }

    @InputImport(name="runtimeChannel")
    private final @Nullable Input<String> runtimeChannel;

    public Input<String> getRuntimeChannel() {
        return this.runtimeChannel == null ? Input.empty() : this.runtimeChannel;
    }

    @InputImport(name="runtimeMainExecutablePath")
    private final @Nullable Input<String> runtimeMainExecutablePath;

    public Input<String> getRuntimeMainExecutablePath() {
        return this.runtimeMainExecutablePath == null ? Input.empty() : this.runtimeMainExecutablePath;
    }

    @InputImport(name="service")
    private final @Nullable Input<String> service;

    public Input<String> getService() {
        return this.service == null ? Input.empty() : this.service;
    }

    @InputImport(name="servingStatus")
    private final @Nullable Input<String> servingStatus;

    public Input<String> getServingStatus() {
        return this.servingStatus == null ? Input.empty() : this.servingStatus;
    }

    @InputImport(name="versionId")
    private final @Nullable Input<String> versionId;

    public Input<String> getVersionId() {
        return this.versionId == null ? Input.empty() : this.versionId;
    }

    @InputImport(name="vpcAccessConnector")
    private final @Nullable Input<FlexibleAppVersionVpcAccessConnectorGetArgs> vpcAccessConnector;

    public Input<FlexibleAppVersionVpcAccessConnectorGetArgs> getVpcAccessConnector() {
        return this.vpcAccessConnector == null ? Input.empty() : this.vpcAccessConnector;
    }

    public FlexibleAppVersionState(
        @Nullable Input<FlexibleAppVersionApiConfigGetArgs> apiConfig,
        @Nullable Input<FlexibleAppVersionAutomaticScalingGetArgs> automaticScaling,
        @Nullable Input<Map<String,String>> betaSettings,
        @Nullable Input<String> defaultExpiration,
        @Nullable Input<Boolean> deleteServiceOnDestroy,
        @Nullable Input<FlexibleAppVersionDeploymentGetArgs> deployment,
        @Nullable Input<FlexibleAppVersionEndpointsApiServiceGetArgs> endpointsApiService,
        @Nullable Input<FlexibleAppVersionEntrypointGetArgs> entrypoint,
        @Nullable Input<Map<String,String>> envVariables,
        @Nullable Input<List<FlexibleAppVersionHandlerGetArgs>> handlers,
        @Nullable Input<List<String>> inboundServices,
        @Nullable Input<String> instanceClass,
        @Nullable Input<FlexibleAppVersionLivenessCheckGetArgs> livenessCheck,
        @Nullable Input<FlexibleAppVersionManualScalingGetArgs> manualScaling,
        @Nullable Input<String> name,
        @Nullable Input<FlexibleAppVersionNetworkGetArgs> network,
        @Nullable Input<String> nobuildFilesRegex,
        @Nullable Input<Boolean> noopOnDestroy,
        @Nullable Input<String> project,
        @Nullable Input<FlexibleAppVersionReadinessCheckGetArgs> readinessCheck,
        @Nullable Input<FlexibleAppVersionResourcesGetArgs> resources,
        @Nullable Input<String> runtime,
        @Nullable Input<String> runtimeApiVersion,
        @Nullable Input<String> runtimeChannel,
        @Nullable Input<String> runtimeMainExecutablePath,
        @Nullable Input<String> service,
        @Nullable Input<String> servingStatus,
        @Nullable Input<String> versionId,
        @Nullable Input<FlexibleAppVersionVpcAccessConnectorGetArgs> vpcAccessConnector) {
        this.apiConfig = apiConfig;
        this.automaticScaling = automaticScaling;
        this.betaSettings = betaSettings;
        this.defaultExpiration = defaultExpiration;
        this.deleteServiceOnDestroy = deleteServiceOnDestroy;
        this.deployment = deployment;
        this.endpointsApiService = endpointsApiService;
        this.entrypoint = entrypoint;
        this.envVariables = envVariables;
        this.handlers = handlers;
        this.inboundServices = inboundServices;
        this.instanceClass = instanceClass;
        this.livenessCheck = livenessCheck;
        this.manualScaling = manualScaling;
        this.name = name;
        this.network = network;
        this.nobuildFilesRegex = nobuildFilesRegex;
        this.noopOnDestroy = noopOnDestroy;
        this.project = project;
        this.readinessCheck = readinessCheck;
        this.resources = resources;
        this.runtime = runtime;
        this.runtimeApiVersion = runtimeApiVersion;
        this.runtimeChannel = runtimeChannel;
        this.runtimeMainExecutablePath = runtimeMainExecutablePath;
        this.service = service;
        this.servingStatus = servingStatus;
        this.versionId = versionId;
        this.vpcAccessConnector = vpcAccessConnector;
    }

    private FlexibleAppVersionState() {
        this.apiConfig = Input.empty();
        this.automaticScaling = Input.empty();
        this.betaSettings = Input.empty();
        this.defaultExpiration = Input.empty();
        this.deleteServiceOnDestroy = Input.empty();
        this.deployment = Input.empty();
        this.endpointsApiService = Input.empty();
        this.entrypoint = Input.empty();
        this.envVariables = Input.empty();
        this.handlers = Input.empty();
        this.inboundServices = Input.empty();
        this.instanceClass = Input.empty();
        this.livenessCheck = Input.empty();
        this.manualScaling = Input.empty();
        this.name = Input.empty();
        this.network = Input.empty();
        this.nobuildFilesRegex = Input.empty();
        this.noopOnDestroy = Input.empty();
        this.project = Input.empty();
        this.readinessCheck = Input.empty();
        this.resources = Input.empty();
        this.runtime = Input.empty();
        this.runtimeApiVersion = Input.empty();
        this.runtimeChannel = Input.empty();
        this.runtimeMainExecutablePath = Input.empty();
        this.service = Input.empty();
        this.servingStatus = Input.empty();
        this.versionId = Input.empty();
        this.vpcAccessConnector = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FlexibleAppVersionState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<FlexibleAppVersionApiConfigGetArgs> apiConfig;
        private @Nullable Input<FlexibleAppVersionAutomaticScalingGetArgs> automaticScaling;
        private @Nullable Input<Map<String,String>> betaSettings;
        private @Nullable Input<String> defaultExpiration;
        private @Nullable Input<Boolean> deleteServiceOnDestroy;
        private @Nullable Input<FlexibleAppVersionDeploymentGetArgs> deployment;
        private @Nullable Input<FlexibleAppVersionEndpointsApiServiceGetArgs> endpointsApiService;
        private @Nullable Input<FlexibleAppVersionEntrypointGetArgs> entrypoint;
        private @Nullable Input<Map<String,String>> envVariables;
        private @Nullable Input<List<FlexibleAppVersionHandlerGetArgs>> handlers;
        private @Nullable Input<List<String>> inboundServices;
        private @Nullable Input<String> instanceClass;
        private @Nullable Input<FlexibleAppVersionLivenessCheckGetArgs> livenessCheck;
        private @Nullable Input<FlexibleAppVersionManualScalingGetArgs> manualScaling;
        private @Nullable Input<String> name;
        private @Nullable Input<FlexibleAppVersionNetworkGetArgs> network;
        private @Nullable Input<String> nobuildFilesRegex;
        private @Nullable Input<Boolean> noopOnDestroy;
        private @Nullable Input<String> project;
        private @Nullable Input<FlexibleAppVersionReadinessCheckGetArgs> readinessCheck;
        private @Nullable Input<FlexibleAppVersionResourcesGetArgs> resources;
        private @Nullable Input<String> runtime;
        private @Nullable Input<String> runtimeApiVersion;
        private @Nullable Input<String> runtimeChannel;
        private @Nullable Input<String> runtimeMainExecutablePath;
        private @Nullable Input<String> service;
        private @Nullable Input<String> servingStatus;
        private @Nullable Input<String> versionId;
        private @Nullable Input<FlexibleAppVersionVpcAccessConnectorGetArgs> vpcAccessConnector;

        public Builder() {
    	      // Empty
        }

        public Builder(FlexibleAppVersionState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.apiConfig = defaults.apiConfig;
    	      this.automaticScaling = defaults.automaticScaling;
    	      this.betaSettings = defaults.betaSettings;
    	      this.defaultExpiration = defaults.defaultExpiration;
    	      this.deleteServiceOnDestroy = defaults.deleteServiceOnDestroy;
    	      this.deployment = defaults.deployment;
    	      this.endpointsApiService = defaults.endpointsApiService;
    	      this.entrypoint = defaults.entrypoint;
    	      this.envVariables = defaults.envVariables;
    	      this.handlers = defaults.handlers;
    	      this.inboundServices = defaults.inboundServices;
    	      this.instanceClass = defaults.instanceClass;
    	      this.livenessCheck = defaults.livenessCheck;
    	      this.manualScaling = defaults.manualScaling;
    	      this.name = defaults.name;
    	      this.network = defaults.network;
    	      this.nobuildFilesRegex = defaults.nobuildFilesRegex;
    	      this.noopOnDestroy = defaults.noopOnDestroy;
    	      this.project = defaults.project;
    	      this.readinessCheck = defaults.readinessCheck;
    	      this.resources = defaults.resources;
    	      this.runtime = defaults.runtime;
    	      this.runtimeApiVersion = defaults.runtimeApiVersion;
    	      this.runtimeChannel = defaults.runtimeChannel;
    	      this.runtimeMainExecutablePath = defaults.runtimeMainExecutablePath;
    	      this.service = defaults.service;
    	      this.servingStatus = defaults.servingStatus;
    	      this.versionId = defaults.versionId;
    	      this.vpcAccessConnector = defaults.vpcAccessConnector;
        }

        public Builder setApiConfig(@Nullable Input<FlexibleAppVersionApiConfigGetArgs> apiConfig) {
            this.apiConfig = apiConfig;
            return this;
        }

        public Builder setApiConfig(@Nullable FlexibleAppVersionApiConfigGetArgs apiConfig) {
            this.apiConfig = Input.ofNullable(apiConfig);
            return this;
        }

        public Builder setAutomaticScaling(@Nullable Input<FlexibleAppVersionAutomaticScalingGetArgs> automaticScaling) {
            this.automaticScaling = automaticScaling;
            return this;
        }

        public Builder setAutomaticScaling(@Nullable FlexibleAppVersionAutomaticScalingGetArgs automaticScaling) {
            this.automaticScaling = Input.ofNullable(automaticScaling);
            return this;
        }

        public Builder setBetaSettings(@Nullable Input<Map<String,String>> betaSettings) {
            this.betaSettings = betaSettings;
            return this;
        }

        public Builder setBetaSettings(@Nullable Map<String,String> betaSettings) {
            this.betaSettings = Input.ofNullable(betaSettings);
            return this;
        }

        public Builder setDefaultExpiration(@Nullable Input<String> defaultExpiration) {
            this.defaultExpiration = defaultExpiration;
            return this;
        }

        public Builder setDefaultExpiration(@Nullable String defaultExpiration) {
            this.defaultExpiration = Input.ofNullable(defaultExpiration);
            return this;
        }

        public Builder setDeleteServiceOnDestroy(@Nullable Input<Boolean> deleteServiceOnDestroy) {
            this.deleteServiceOnDestroy = deleteServiceOnDestroy;
            return this;
        }

        public Builder setDeleteServiceOnDestroy(@Nullable Boolean deleteServiceOnDestroy) {
            this.deleteServiceOnDestroy = Input.ofNullable(deleteServiceOnDestroy);
            return this;
        }

        public Builder setDeployment(@Nullable Input<FlexibleAppVersionDeploymentGetArgs> deployment) {
            this.deployment = deployment;
            return this;
        }

        public Builder setDeployment(@Nullable FlexibleAppVersionDeploymentGetArgs deployment) {
            this.deployment = Input.ofNullable(deployment);
            return this;
        }

        public Builder setEndpointsApiService(@Nullable Input<FlexibleAppVersionEndpointsApiServiceGetArgs> endpointsApiService) {
            this.endpointsApiService = endpointsApiService;
            return this;
        }

        public Builder setEndpointsApiService(@Nullable FlexibleAppVersionEndpointsApiServiceGetArgs endpointsApiService) {
            this.endpointsApiService = Input.ofNullable(endpointsApiService);
            return this;
        }

        public Builder setEntrypoint(@Nullable Input<FlexibleAppVersionEntrypointGetArgs> entrypoint) {
            this.entrypoint = entrypoint;
            return this;
        }

        public Builder setEntrypoint(@Nullable FlexibleAppVersionEntrypointGetArgs entrypoint) {
            this.entrypoint = Input.ofNullable(entrypoint);
            return this;
        }

        public Builder setEnvVariables(@Nullable Input<Map<String,String>> envVariables) {
            this.envVariables = envVariables;
            return this;
        }

        public Builder setEnvVariables(@Nullable Map<String,String> envVariables) {
            this.envVariables = Input.ofNullable(envVariables);
            return this;
        }

        public Builder setHandlers(@Nullable Input<List<FlexibleAppVersionHandlerGetArgs>> handlers) {
            this.handlers = handlers;
            return this;
        }

        public Builder setHandlers(@Nullable List<FlexibleAppVersionHandlerGetArgs> handlers) {
            this.handlers = Input.ofNullable(handlers);
            return this;
        }

        public Builder setInboundServices(@Nullable Input<List<String>> inboundServices) {
            this.inboundServices = inboundServices;
            return this;
        }

        public Builder setInboundServices(@Nullable List<String> inboundServices) {
            this.inboundServices = Input.ofNullable(inboundServices);
            return this;
        }

        public Builder setInstanceClass(@Nullable Input<String> instanceClass) {
            this.instanceClass = instanceClass;
            return this;
        }

        public Builder setInstanceClass(@Nullable String instanceClass) {
            this.instanceClass = Input.ofNullable(instanceClass);
            return this;
        }

        public Builder setLivenessCheck(@Nullable Input<FlexibleAppVersionLivenessCheckGetArgs> livenessCheck) {
            this.livenessCheck = livenessCheck;
            return this;
        }

        public Builder setLivenessCheck(@Nullable FlexibleAppVersionLivenessCheckGetArgs livenessCheck) {
            this.livenessCheck = Input.ofNullable(livenessCheck);
            return this;
        }

        public Builder setManualScaling(@Nullable Input<FlexibleAppVersionManualScalingGetArgs> manualScaling) {
            this.manualScaling = manualScaling;
            return this;
        }

        public Builder setManualScaling(@Nullable FlexibleAppVersionManualScalingGetArgs manualScaling) {
            this.manualScaling = Input.ofNullable(manualScaling);
            return this;
        }

        public Builder setName(@Nullable Input<String> name) {
            this.name = name;
            return this;
        }

        public Builder setName(@Nullable String name) {
            this.name = Input.ofNullable(name);
            return this;
        }

        public Builder setNetwork(@Nullable Input<FlexibleAppVersionNetworkGetArgs> network) {
            this.network = network;
            return this;
        }

        public Builder setNetwork(@Nullable FlexibleAppVersionNetworkGetArgs network) {
            this.network = Input.ofNullable(network);
            return this;
        }

        public Builder setNobuildFilesRegex(@Nullable Input<String> nobuildFilesRegex) {
            this.nobuildFilesRegex = nobuildFilesRegex;
            return this;
        }

        public Builder setNobuildFilesRegex(@Nullable String nobuildFilesRegex) {
            this.nobuildFilesRegex = Input.ofNullable(nobuildFilesRegex);
            return this;
        }

        public Builder setNoopOnDestroy(@Nullable Input<Boolean> noopOnDestroy) {
            this.noopOnDestroy = noopOnDestroy;
            return this;
        }

        public Builder setNoopOnDestroy(@Nullable Boolean noopOnDestroy) {
            this.noopOnDestroy = Input.ofNullable(noopOnDestroy);
            return this;
        }

        public Builder setProject(@Nullable Input<String> project) {
            this.project = project;
            return this;
        }

        public Builder setProject(@Nullable String project) {
            this.project = Input.ofNullable(project);
            return this;
        }

        public Builder setReadinessCheck(@Nullable Input<FlexibleAppVersionReadinessCheckGetArgs> readinessCheck) {
            this.readinessCheck = readinessCheck;
            return this;
        }

        public Builder setReadinessCheck(@Nullable FlexibleAppVersionReadinessCheckGetArgs readinessCheck) {
            this.readinessCheck = Input.ofNullable(readinessCheck);
            return this;
        }

        public Builder setResources(@Nullable Input<FlexibleAppVersionResourcesGetArgs> resources) {
            this.resources = resources;
            return this;
        }

        public Builder setResources(@Nullable FlexibleAppVersionResourcesGetArgs resources) {
            this.resources = Input.ofNullable(resources);
            return this;
        }

        public Builder setRuntime(@Nullable Input<String> runtime) {
            this.runtime = runtime;
            return this;
        }

        public Builder setRuntime(@Nullable String runtime) {
            this.runtime = Input.ofNullable(runtime);
            return this;
        }

        public Builder setRuntimeApiVersion(@Nullable Input<String> runtimeApiVersion) {
            this.runtimeApiVersion = runtimeApiVersion;
            return this;
        }

        public Builder setRuntimeApiVersion(@Nullable String runtimeApiVersion) {
            this.runtimeApiVersion = Input.ofNullable(runtimeApiVersion);
            return this;
        }

        public Builder setRuntimeChannel(@Nullable Input<String> runtimeChannel) {
            this.runtimeChannel = runtimeChannel;
            return this;
        }

        public Builder setRuntimeChannel(@Nullable String runtimeChannel) {
            this.runtimeChannel = Input.ofNullable(runtimeChannel);
            return this;
        }

        public Builder setRuntimeMainExecutablePath(@Nullable Input<String> runtimeMainExecutablePath) {
            this.runtimeMainExecutablePath = runtimeMainExecutablePath;
            return this;
        }

        public Builder setRuntimeMainExecutablePath(@Nullable String runtimeMainExecutablePath) {
            this.runtimeMainExecutablePath = Input.ofNullable(runtimeMainExecutablePath);
            return this;
        }

        public Builder setService(@Nullable Input<String> service) {
            this.service = service;
            return this;
        }

        public Builder setService(@Nullable String service) {
            this.service = Input.ofNullable(service);
            return this;
        }

        public Builder setServingStatus(@Nullable Input<String> servingStatus) {
            this.servingStatus = servingStatus;
            return this;
        }

        public Builder setServingStatus(@Nullable String servingStatus) {
            this.servingStatus = Input.ofNullable(servingStatus);
            return this;
        }

        public Builder setVersionId(@Nullable Input<String> versionId) {
            this.versionId = versionId;
            return this;
        }

        public Builder setVersionId(@Nullable String versionId) {
            this.versionId = Input.ofNullable(versionId);
            return this;
        }

        public Builder setVpcAccessConnector(@Nullable Input<FlexibleAppVersionVpcAccessConnectorGetArgs> vpcAccessConnector) {
            this.vpcAccessConnector = vpcAccessConnector;
            return this;
        }

        public Builder setVpcAccessConnector(@Nullable FlexibleAppVersionVpcAccessConnectorGetArgs vpcAccessConnector) {
            this.vpcAccessConnector = Input.ofNullable(vpcAccessConnector);
            return this;
        }

        public FlexibleAppVersionState build() {
            return new FlexibleAppVersionState(apiConfig, automaticScaling, betaSettings, defaultExpiration, deleteServiceOnDestroy, deployment, endpointsApiService, entrypoint, envVariables, handlers, inboundServices, instanceClass, livenessCheck, manualScaling, name, network, nobuildFilesRegex, noopOnDestroy, project, readinessCheck, resources, runtime, runtimeApiVersion, runtimeChannel, runtimeMainExecutablePath, service, servingStatus, versionId, vpcAccessConnector);
        }
    }
}
