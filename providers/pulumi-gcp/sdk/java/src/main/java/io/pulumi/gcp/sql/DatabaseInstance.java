// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.sql;

import io.pulumi.core.Input;
import io.pulumi.core.Output;
import io.pulumi.core.internal.annotations.OutputExport;
import io.pulumi.core.internal.annotations.ResourceType;
import io.pulumi.gcp.Utilities;
import io.pulumi.gcp.sql.DatabaseInstanceArgs;
import io.pulumi.gcp.sql.inputs.DatabaseInstanceState;
import io.pulumi.gcp.sql.outputs.DatabaseInstanceClone;
import io.pulumi.gcp.sql.outputs.DatabaseInstanceIpAddress;
import io.pulumi.gcp.sql.outputs.DatabaseInstanceReplicaConfiguration;
import io.pulumi.gcp.sql.outputs.DatabaseInstanceRestoreBackupContext;
import io.pulumi.gcp.sql.outputs.DatabaseInstanceServerCaCert;
import io.pulumi.gcp.sql.outputs.DatabaseInstanceSettings;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

@ResourceType(type="gcp:sql/databaseInstance:DatabaseInstance")
public class DatabaseInstance extends io.pulumi.resources.CustomResource {
    @OutputExport(name="clone", type=DatabaseInstanceClone.class, parameters={})
    private Output</* @Nullable */ DatabaseInstanceClone> clone;

    public Output</* @Nullable */ DatabaseInstanceClone> getClone() {
        return this.clone;
    }
    @OutputExport(name="connectionName", type=String.class, parameters={})
    private Output<String> connectionName;

    public Output<String> getConnectionName() {
        return this.connectionName;
    }
    @OutputExport(name="databaseVersion", type=String.class, parameters={})
    private Output<String> databaseVersion;

    public Output<String> getDatabaseVersion() {
        return this.databaseVersion;
    }
    @OutputExport(name="deletionProtection", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> deletionProtection;

    public Output</* @Nullable */ Boolean> getDeletionProtection() {
        return this.deletionProtection;
    }
    @OutputExport(name="encryptionKeyName", type=String.class, parameters={})
    private Output</* @Nullable */ String> encryptionKeyName;

    public Output</* @Nullable */ String> getEncryptionKeyName() {
        return this.encryptionKeyName;
    }
    @OutputExport(name="firstIpAddress", type=String.class, parameters={})
    private Output<String> firstIpAddress;

    public Output<String> getFirstIpAddress() {
        return this.firstIpAddress;
    }
    @OutputExport(name="ipAddresses", type=List.class, parameters={DatabaseInstanceIpAddress.class})
    private Output<List<DatabaseInstanceIpAddress>> ipAddresses;

    public Output<List<DatabaseInstanceIpAddress>> getIpAddresses() {
        return this.ipAddresses;
    }
    @OutputExport(name="masterInstanceName", type=String.class, parameters={})
    private Output<String> masterInstanceName;

    public Output<String> getMasterInstanceName() {
        return this.masterInstanceName;
    }
    @OutputExport(name="name", type=String.class, parameters={})
    private Output<String> name;

    public Output<String> getName() {
        return this.name;
    }
    @OutputExport(name="privateIpAddress", type=String.class, parameters={})
    private Output<String> privateIpAddress;

    public Output<String> getPrivateIpAddress() {
        return this.privateIpAddress;
    }
    @OutputExport(name="project", type=String.class, parameters={})
    private Output<String> project;

    public Output<String> getProject() {
        return this.project;
    }
    @OutputExport(name="publicIpAddress", type=String.class, parameters={})
    private Output<String> publicIpAddress;

    public Output<String> getPublicIpAddress() {
        return this.publicIpAddress;
    }
    @OutputExport(name="region", type=String.class, parameters={})
    private Output<String> region;

    public Output<String> getRegion() {
        return this.region;
    }
    @OutputExport(name="replicaConfiguration", type=DatabaseInstanceReplicaConfiguration.class, parameters={})
    private Output<DatabaseInstanceReplicaConfiguration> replicaConfiguration;

    public Output<DatabaseInstanceReplicaConfiguration> getReplicaConfiguration() {
        return this.replicaConfiguration;
    }
    @OutputExport(name="restoreBackupContext", type=DatabaseInstanceRestoreBackupContext.class, parameters={})
    private Output</* @Nullable */ DatabaseInstanceRestoreBackupContext> restoreBackupContext;

    public Output</* @Nullable */ DatabaseInstanceRestoreBackupContext> getRestoreBackupContext() {
        return this.restoreBackupContext;
    }
    @OutputExport(name="rootPassword", type=String.class, parameters={})
    private Output</* @Nullable */ String> rootPassword;

    public Output</* @Nullable */ String> getRootPassword() {
        return this.rootPassword;
    }
    @OutputExport(name="selfLink", type=String.class, parameters={})
    private Output<String> selfLink;

    public Output<String> getSelfLink() {
        return this.selfLink;
    }
    @OutputExport(name="serverCaCerts", type=List.class, parameters={DatabaseInstanceServerCaCert.class})
    private Output<List<DatabaseInstanceServerCaCert>> serverCaCerts;

    public Output<List<DatabaseInstanceServerCaCert>> getServerCaCerts() {
        return this.serverCaCerts;
    }
    @OutputExport(name="serviceAccountEmailAddress", type=String.class, parameters={})
    private Output<String> serviceAccountEmailAddress;

    public Output<String> getServiceAccountEmailAddress() {
        return this.serviceAccountEmailAddress;
    }
    @OutputExport(name="settings", type=DatabaseInstanceSettings.class, parameters={})
    private Output<DatabaseInstanceSettings> settings;

    public Output<DatabaseInstanceSettings> getSettings() {
        return this.settings;
    }

    public DatabaseInstance(String name, DatabaseInstanceArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("gcp:sql/databaseInstance:DatabaseInstance", name, args == null ? DatabaseInstanceArgs.Empty : args, makeResourceOptions(options, Input.empty()));
    }

    private DatabaseInstance(String name, Input<String> id, @Nullable DatabaseInstanceState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("gcp:sql/databaseInstance:DatabaseInstance", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Input<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .setVersion(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    public static DatabaseInstance get(String name, Input<String> id, @Nullable DatabaseInstanceState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new DatabaseInstance(name, id, state, options);
    }
}
