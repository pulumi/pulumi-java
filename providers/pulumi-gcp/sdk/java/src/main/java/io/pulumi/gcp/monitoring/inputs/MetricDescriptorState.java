// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.monitoring.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import io.pulumi.gcp.monitoring.inputs.MetricDescriptorLabelGetArgs;
import io.pulumi.gcp.monitoring.inputs.MetricDescriptorMetadataGetArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class MetricDescriptorState extends io.pulumi.resources.ResourceArgs {

    public static final MetricDescriptorState Empty = new MetricDescriptorState();

    @InputImport(name="description")
    private final @Nullable Input<String> description;

    public Input<String> getDescription() {
        return this.description == null ? Input.empty() : this.description;
    }

    @InputImport(name="displayName")
    private final @Nullable Input<String> displayName;

    public Input<String> getDisplayName() {
        return this.displayName == null ? Input.empty() : this.displayName;
    }

    @InputImport(name="labels")
    private final @Nullable Input<List<MetricDescriptorLabelGetArgs>> labels;

    public Input<List<MetricDescriptorLabelGetArgs>> getLabels() {
        return this.labels == null ? Input.empty() : this.labels;
    }

    @InputImport(name="launchStage")
    private final @Nullable Input<String> launchStage;

    public Input<String> getLaunchStage() {
        return this.launchStage == null ? Input.empty() : this.launchStage;
    }

    @InputImport(name="metadata")
    private final @Nullable Input<MetricDescriptorMetadataGetArgs> metadata;

    public Input<MetricDescriptorMetadataGetArgs> getMetadata() {
        return this.metadata == null ? Input.empty() : this.metadata;
    }

    @InputImport(name="metricKind")
    private final @Nullable Input<String> metricKind;

    public Input<String> getMetricKind() {
        return this.metricKind == null ? Input.empty() : this.metricKind;
    }

    @InputImport(name="monitoredResourceTypes")
    private final @Nullable Input<List<String>> monitoredResourceTypes;

    public Input<List<String>> getMonitoredResourceTypes() {
        return this.monitoredResourceTypes == null ? Input.empty() : this.monitoredResourceTypes;
    }

    @InputImport(name="name")
    private final @Nullable Input<String> name;

    public Input<String> getName() {
        return this.name == null ? Input.empty() : this.name;
    }

    @InputImport(name="project")
    private final @Nullable Input<String> project;

    public Input<String> getProject() {
        return this.project == null ? Input.empty() : this.project;
    }

    @InputImport(name="type")
    private final @Nullable Input<String> type;

    public Input<String> getType() {
        return this.type == null ? Input.empty() : this.type;
    }

    @InputImport(name="unit")
    private final @Nullable Input<String> unit;

    public Input<String> getUnit() {
        return this.unit == null ? Input.empty() : this.unit;
    }

    @InputImport(name="valueType")
    private final @Nullable Input<String> valueType;

    public Input<String> getValueType() {
        return this.valueType == null ? Input.empty() : this.valueType;
    }

    public MetricDescriptorState(
        @Nullable Input<String> description,
        @Nullable Input<String> displayName,
        @Nullable Input<List<MetricDescriptorLabelGetArgs>> labels,
        @Nullable Input<String> launchStage,
        @Nullable Input<MetricDescriptorMetadataGetArgs> metadata,
        @Nullable Input<String> metricKind,
        @Nullable Input<List<String>> monitoredResourceTypes,
        @Nullable Input<String> name,
        @Nullable Input<String> project,
        @Nullable Input<String> type,
        @Nullable Input<String> unit,
        @Nullable Input<String> valueType) {
        this.description = description;
        this.displayName = displayName;
        this.labels = labels;
        this.launchStage = launchStage;
        this.metadata = metadata;
        this.metricKind = metricKind;
        this.monitoredResourceTypes = monitoredResourceTypes;
        this.name = name;
        this.project = project;
        this.type = type;
        this.unit = unit;
        this.valueType = valueType;
    }

    private MetricDescriptorState() {
        this.description = Input.empty();
        this.displayName = Input.empty();
        this.labels = Input.empty();
        this.launchStage = Input.empty();
        this.metadata = Input.empty();
        this.metricKind = Input.empty();
        this.monitoredResourceTypes = Input.empty();
        this.name = Input.empty();
        this.project = Input.empty();
        this.type = Input.empty();
        this.unit = Input.empty();
        this.valueType = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MetricDescriptorState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> description;
        private @Nullable Input<String> displayName;
        private @Nullable Input<List<MetricDescriptorLabelGetArgs>> labels;
        private @Nullable Input<String> launchStage;
        private @Nullable Input<MetricDescriptorMetadataGetArgs> metadata;
        private @Nullable Input<String> metricKind;
        private @Nullable Input<List<String>> monitoredResourceTypes;
        private @Nullable Input<String> name;
        private @Nullable Input<String> project;
        private @Nullable Input<String> type;
        private @Nullable Input<String> unit;
        private @Nullable Input<String> valueType;

        public Builder() {
    	      // Empty
        }

        public Builder(MetricDescriptorState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.labels = defaults.labels;
    	      this.launchStage = defaults.launchStage;
    	      this.metadata = defaults.metadata;
    	      this.metricKind = defaults.metricKind;
    	      this.monitoredResourceTypes = defaults.monitoredResourceTypes;
    	      this.name = defaults.name;
    	      this.project = defaults.project;
    	      this.type = defaults.type;
    	      this.unit = defaults.unit;
    	      this.valueType = defaults.valueType;
        }

        public Builder setDescription(@Nullable Input<String> description) {
            this.description = description;
            return this;
        }

        public Builder setDescription(@Nullable String description) {
            this.description = Input.ofNullable(description);
            return this;
        }

        public Builder setDisplayName(@Nullable Input<String> displayName) {
            this.displayName = displayName;
            return this;
        }

        public Builder setDisplayName(@Nullable String displayName) {
            this.displayName = Input.ofNullable(displayName);
            return this;
        }

        public Builder setLabels(@Nullable Input<List<MetricDescriptorLabelGetArgs>> labels) {
            this.labels = labels;
            return this;
        }

        public Builder setLabels(@Nullable List<MetricDescriptorLabelGetArgs> labels) {
            this.labels = Input.ofNullable(labels);
            return this;
        }

        public Builder setLaunchStage(@Nullable Input<String> launchStage) {
            this.launchStage = launchStage;
            return this;
        }

        public Builder setLaunchStage(@Nullable String launchStage) {
            this.launchStage = Input.ofNullable(launchStage);
            return this;
        }

        public Builder setMetadata(@Nullable Input<MetricDescriptorMetadataGetArgs> metadata) {
            this.metadata = metadata;
            return this;
        }

        public Builder setMetadata(@Nullable MetricDescriptorMetadataGetArgs metadata) {
            this.metadata = Input.ofNullable(metadata);
            return this;
        }

        public Builder setMetricKind(@Nullable Input<String> metricKind) {
            this.metricKind = metricKind;
            return this;
        }

        public Builder setMetricKind(@Nullable String metricKind) {
            this.metricKind = Input.ofNullable(metricKind);
            return this;
        }

        public Builder setMonitoredResourceTypes(@Nullable Input<List<String>> monitoredResourceTypes) {
            this.monitoredResourceTypes = monitoredResourceTypes;
            return this;
        }

        public Builder setMonitoredResourceTypes(@Nullable List<String> monitoredResourceTypes) {
            this.monitoredResourceTypes = Input.ofNullable(monitoredResourceTypes);
            return this;
        }

        public Builder setName(@Nullable Input<String> name) {
            this.name = name;
            return this;
        }

        public Builder setName(@Nullable String name) {
            this.name = Input.ofNullable(name);
            return this;
        }

        public Builder setProject(@Nullable Input<String> project) {
            this.project = project;
            return this;
        }

        public Builder setProject(@Nullable String project) {
            this.project = Input.ofNullable(project);
            return this;
        }

        public Builder setType(@Nullable Input<String> type) {
            this.type = type;
            return this;
        }

        public Builder setType(@Nullable String type) {
            this.type = Input.ofNullable(type);
            return this;
        }

        public Builder setUnit(@Nullable Input<String> unit) {
            this.unit = unit;
            return this;
        }

        public Builder setUnit(@Nullable String unit) {
            this.unit = Input.ofNullable(unit);
            return this;
        }

        public Builder setValueType(@Nullable Input<String> valueType) {
            this.valueType = valueType;
            return this;
        }

        public Builder setValueType(@Nullable String valueType) {
            this.valueType = Input.ofNullable(valueType);
            return this;
        }

        public MetricDescriptorState build() {
            return new MetricDescriptorState(description, displayName, labels, launchStage, metadata, metricKind, monitoredResourceTypes, name, project, type, unit, valueType);
        }
    }
}
