// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.cloudbuild.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import io.pulumi.gcp.cloudbuild.inputs.TriggerBuildArtifactsObjectsTimingArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class TriggerBuildArtifactsObjectsArgs extends io.pulumi.resources.ResourceArgs {

    public static final TriggerBuildArtifactsObjectsArgs Empty = new TriggerBuildArtifactsObjectsArgs();

    /**
     * Cloud Storage bucket and optional object path, in the form "gs://bucket/path/to/somewhere/".
     * Files in the workspace matching any path pattern will be uploaded to Cloud Storage with
     * this location as a prefix.
     * 
     */
    @InputImport(name="location")
    private final @Nullable Input<String> location;

    public Input<String> getLocation() {
        return this.location == null ? Input.empty() : this.location;
    }

    /**
     * Path globs used to match files in the build's workspace.
     * 
     */
    @InputImport(name="paths")
    private final @Nullable Input<List<String>> paths;

    public Input<List<String>> getPaths() {
        return this.paths == null ? Input.empty() : this.paths;
    }

    /**
     * - 
     * Output only. Stores timing information for pushing all artifact objects.
     * Structure is documented below.
     * 
     */
    @InputImport(name="timings")
    private final @Nullable Input<List<TriggerBuildArtifactsObjectsTimingArgs>> timings;

    public Input<List<TriggerBuildArtifactsObjectsTimingArgs>> getTimings() {
        return this.timings == null ? Input.empty() : this.timings;
    }

    public TriggerBuildArtifactsObjectsArgs(
        @Nullable Input<String> location,
        @Nullable Input<List<String>> paths,
        @Nullable Input<List<TriggerBuildArtifactsObjectsTimingArgs>> timings) {
        this.location = location;
        this.paths = paths;
        this.timings = timings;
    }

    private TriggerBuildArtifactsObjectsArgs() {
        this.location = Input.empty();
        this.paths = Input.empty();
        this.timings = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TriggerBuildArtifactsObjectsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> location;
        private @Nullable Input<List<String>> paths;
        private @Nullable Input<List<TriggerBuildArtifactsObjectsTimingArgs>> timings;

        public Builder() {
    	      // Empty
        }

        public Builder(TriggerBuildArtifactsObjectsArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.location = defaults.location;
    	      this.paths = defaults.paths;
    	      this.timings = defaults.timings;
        }

        public Builder setLocation(@Nullable Input<String> location) {
            this.location = location;
            return this;
        }

        public Builder setLocation(@Nullable String location) {
            this.location = Input.ofNullable(location);
            return this;
        }

        public Builder setPaths(@Nullable Input<List<String>> paths) {
            this.paths = paths;
            return this;
        }

        public Builder setPaths(@Nullable List<String> paths) {
            this.paths = Input.ofNullable(paths);
            return this;
        }

        public Builder setTimings(@Nullable Input<List<TriggerBuildArtifactsObjectsTimingArgs>> timings) {
            this.timings = timings;
            return this;
        }

        public Builder setTimings(@Nullable List<TriggerBuildArtifactsObjectsTimingArgs> timings) {
            this.timings = Input.ofNullable(timings);
            return this;
        }

        public TriggerBuildArtifactsObjectsArgs build() {
            return new TriggerBuildArtifactsObjectsArgs(location, paths, timings);
        }
    }
}
