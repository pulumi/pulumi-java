// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.compute.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class OrganizationSecurityPolicyState extends io.pulumi.resources.ResourceArgs {

    public static final OrganizationSecurityPolicyState Empty = new OrganizationSecurityPolicyState();

    /**
     * A textual description for the organization security policy.
     * 
     */
    @Import(name="description")
      private final @Nullable Output<String> description;

    public Output<String> getDescription() {
        return this.description == null ? Output.empty() : this.description;
    }

    /**
     * A textual name of the security policy.
     * 
     */
    @Import(name="displayName")
      private final @Nullable Output<String> displayName;

    public Output<String> getDisplayName() {
        return this.displayName == null ? Output.empty() : this.displayName;
    }

    /**
     * Fingerprint of this resource. This field is used internally during updates of this resource.
     * 
     */
    @Import(name="fingerprint")
      private final @Nullable Output<String> fingerprint;

    public Output<String> getFingerprint() {
        return this.fingerprint == null ? Output.empty() : this.fingerprint;
    }

    /**
     * The parent of this OrganizationSecurityPolicy in the Cloud Resource Hierarchy.
     * Format: organizations/{organization_id} or folders/{folder_id}
     * 
     */
    @Import(name="parent")
      private final @Nullable Output<String> parent;

    public Output<String> getParent() {
        return this.parent == null ? Output.empty() : this.parent;
    }

    /**
     * The unique identifier for the resource. This identifier is defined by the server.
     * 
     */
    @Import(name="policyId")
      private final @Nullable Output<String> policyId;

    public Output<String> getPolicyId() {
        return this.policyId == null ? Output.empty() : this.policyId;
    }

    /**
     * The type indicates the intended use of the security policy.
     * For organization security policies, the only supported type
     * is "FIREWALL".
     * Default value is `FIREWALL`.
     * Possible values are `FIREWALL`.
     * 
     */
    @Import(name="type")
      private final @Nullable Output<String> type;

    public Output<String> getType() {
        return this.type == null ? Output.empty() : this.type;
    }

    public OrganizationSecurityPolicyState(
        @Nullable Output<String> description,
        @Nullable Output<String> displayName,
        @Nullable Output<String> fingerprint,
        @Nullable Output<String> parent,
        @Nullable Output<String> policyId,
        @Nullable Output<String> type) {
        this.description = description;
        this.displayName = displayName;
        this.fingerprint = fingerprint;
        this.parent = parent;
        this.policyId = policyId;
        this.type = type;
    }

    private OrganizationSecurityPolicyState() {
        this.description = Output.empty();
        this.displayName = Output.empty();
        this.fingerprint = Output.empty();
        this.parent = Output.empty();
        this.policyId = Output.empty();
        this.type = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(OrganizationSecurityPolicyState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> description;
        private @Nullable Output<String> displayName;
        private @Nullable Output<String> fingerprint;
        private @Nullable Output<String> parent;
        private @Nullable Output<String> policyId;
        private @Nullable Output<String> type;

        public Builder() {
    	      // Empty
        }

        public Builder(OrganizationSecurityPolicyState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.fingerprint = defaults.fingerprint;
    	      this.parent = defaults.parent;
    	      this.policyId = defaults.policyId;
    	      this.type = defaults.type;
        }

        public Builder description(@Nullable Output<String> description) {
            this.description = description;
            return this;
        }

        public Builder description(@Nullable String description) {
            this.description = Output.ofNullable(description);
            return this;
        }

        public Builder displayName(@Nullable Output<String> displayName) {
            this.displayName = displayName;
            return this;
        }

        public Builder displayName(@Nullable String displayName) {
            this.displayName = Output.ofNullable(displayName);
            return this;
        }

        public Builder fingerprint(@Nullable Output<String> fingerprint) {
            this.fingerprint = fingerprint;
            return this;
        }

        public Builder fingerprint(@Nullable String fingerprint) {
            this.fingerprint = Output.ofNullable(fingerprint);
            return this;
        }

        public Builder parent(@Nullable Output<String> parent) {
            this.parent = parent;
            return this;
        }

        public Builder parent(@Nullable String parent) {
            this.parent = Output.ofNullable(parent);
            return this;
        }

        public Builder policyId(@Nullable Output<String> policyId) {
            this.policyId = policyId;
            return this;
        }

        public Builder policyId(@Nullable String policyId) {
            this.policyId = Output.ofNullable(policyId);
            return this;
        }

        public Builder type(@Nullable Output<String> type) {
            this.type = type;
            return this;
        }

        public Builder type(@Nullable String type) {
            this.type = Output.ofNullable(type);
            return this;
        }
        public OrganizationSecurityPolicyState build() {
            return new OrganizationSecurityPolicyState(description, displayName, fingerprint, parent, policyId, type);
        }
    }
}
