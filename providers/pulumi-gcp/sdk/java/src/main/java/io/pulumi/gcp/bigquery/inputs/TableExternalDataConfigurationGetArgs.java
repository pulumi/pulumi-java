// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.bigquery.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import io.pulumi.gcp.bigquery.inputs.TableExternalDataConfigurationCsvOptionsGetArgs;
import io.pulumi.gcp.bigquery.inputs.TableExternalDataConfigurationGoogleSheetsOptionsGetArgs;
import io.pulumi.gcp.bigquery.inputs.TableExternalDataConfigurationHivePartitioningOptionsGetArgs;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class TableExternalDataConfigurationGetArgs extends io.pulumi.resources.ResourceArgs {

    public static final TableExternalDataConfigurationGetArgs Empty = new TableExternalDataConfigurationGetArgs();

    @InputImport(name="autodetect", required=true)
    private final Input<Boolean> autodetect;

    public Input<Boolean> getAutodetect() {
        return this.autodetect;
    }

    @InputImport(name="compression")
    private final @Nullable Input<String> compression;

    public Input<String> getCompression() {
        return this.compression == null ? Input.empty() : this.compression;
    }

    @InputImport(name="csvOptions")
    private final @Nullable Input<TableExternalDataConfigurationCsvOptionsGetArgs> csvOptions;

    public Input<TableExternalDataConfigurationCsvOptionsGetArgs> getCsvOptions() {
        return this.csvOptions == null ? Input.empty() : this.csvOptions;
    }

    @InputImport(name="googleSheetsOptions")
    private final @Nullable Input<TableExternalDataConfigurationGoogleSheetsOptionsGetArgs> googleSheetsOptions;

    public Input<TableExternalDataConfigurationGoogleSheetsOptionsGetArgs> getGoogleSheetsOptions() {
        return this.googleSheetsOptions == null ? Input.empty() : this.googleSheetsOptions;
    }

    @InputImport(name="hivePartitioningOptions")
    private final @Nullable Input<TableExternalDataConfigurationHivePartitioningOptionsGetArgs> hivePartitioningOptions;

    public Input<TableExternalDataConfigurationHivePartitioningOptionsGetArgs> getHivePartitioningOptions() {
        return this.hivePartitioningOptions == null ? Input.empty() : this.hivePartitioningOptions;
    }

    @InputImport(name="ignoreUnknownValues")
    private final @Nullable Input<Boolean> ignoreUnknownValues;

    public Input<Boolean> getIgnoreUnknownValues() {
        return this.ignoreUnknownValues == null ? Input.empty() : this.ignoreUnknownValues;
    }

    @InputImport(name="maxBadRecords")
    private final @Nullable Input<Integer> maxBadRecords;

    public Input<Integer> getMaxBadRecords() {
        return this.maxBadRecords == null ? Input.empty() : this.maxBadRecords;
    }

    @InputImport(name="schema")
    private final @Nullable Input<String> schema;

    public Input<String> getSchema() {
        return this.schema == null ? Input.empty() : this.schema;
    }

    @InputImport(name="sourceFormat", required=true)
    private final Input<String> sourceFormat;

    public Input<String> getSourceFormat() {
        return this.sourceFormat;
    }

    @InputImport(name="sourceUris", required=true)
    private final Input<List<String>> sourceUris;

    public Input<List<String>> getSourceUris() {
        return this.sourceUris;
    }

    public TableExternalDataConfigurationGetArgs(
        Input<Boolean> autodetect,
        @Nullable Input<String> compression,
        @Nullable Input<TableExternalDataConfigurationCsvOptionsGetArgs> csvOptions,
        @Nullable Input<TableExternalDataConfigurationGoogleSheetsOptionsGetArgs> googleSheetsOptions,
        @Nullable Input<TableExternalDataConfigurationHivePartitioningOptionsGetArgs> hivePartitioningOptions,
        @Nullable Input<Boolean> ignoreUnknownValues,
        @Nullable Input<Integer> maxBadRecords,
        @Nullable Input<String> schema,
        Input<String> sourceFormat,
        Input<List<String>> sourceUris) {
        this.autodetect = Objects.requireNonNull(autodetect, "expected parameter 'autodetect' to be non-null");
        this.compression = compression;
        this.csvOptions = csvOptions;
        this.googleSheetsOptions = googleSheetsOptions;
        this.hivePartitioningOptions = hivePartitioningOptions;
        this.ignoreUnknownValues = ignoreUnknownValues;
        this.maxBadRecords = maxBadRecords;
        this.schema = schema;
        this.sourceFormat = Objects.requireNonNull(sourceFormat, "expected parameter 'sourceFormat' to be non-null");
        this.sourceUris = Objects.requireNonNull(sourceUris, "expected parameter 'sourceUris' to be non-null");
    }

    private TableExternalDataConfigurationGetArgs() {
        this.autodetect = Input.empty();
        this.compression = Input.empty();
        this.csvOptions = Input.empty();
        this.googleSheetsOptions = Input.empty();
        this.hivePartitioningOptions = Input.empty();
        this.ignoreUnknownValues = Input.empty();
        this.maxBadRecords = Input.empty();
        this.schema = Input.empty();
        this.sourceFormat = Input.empty();
        this.sourceUris = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TableExternalDataConfigurationGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<Boolean> autodetect;
        private @Nullable Input<String> compression;
        private @Nullable Input<TableExternalDataConfigurationCsvOptionsGetArgs> csvOptions;
        private @Nullable Input<TableExternalDataConfigurationGoogleSheetsOptionsGetArgs> googleSheetsOptions;
        private @Nullable Input<TableExternalDataConfigurationHivePartitioningOptionsGetArgs> hivePartitioningOptions;
        private @Nullable Input<Boolean> ignoreUnknownValues;
        private @Nullable Input<Integer> maxBadRecords;
        private @Nullable Input<String> schema;
        private Input<String> sourceFormat;
        private Input<List<String>> sourceUris;

        public Builder() {
    	      // Empty
        }

        public Builder(TableExternalDataConfigurationGetArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.autodetect = defaults.autodetect;
    	      this.compression = defaults.compression;
    	      this.csvOptions = defaults.csvOptions;
    	      this.googleSheetsOptions = defaults.googleSheetsOptions;
    	      this.hivePartitioningOptions = defaults.hivePartitioningOptions;
    	      this.ignoreUnknownValues = defaults.ignoreUnknownValues;
    	      this.maxBadRecords = defaults.maxBadRecords;
    	      this.schema = defaults.schema;
    	      this.sourceFormat = defaults.sourceFormat;
    	      this.sourceUris = defaults.sourceUris;
        }

        public Builder setAutodetect(Input<Boolean> autodetect) {
            this.autodetect = Objects.requireNonNull(autodetect);
            return this;
        }

        public Builder setAutodetect(Boolean autodetect) {
            this.autodetect = Input.of(Objects.requireNonNull(autodetect));
            return this;
        }

        public Builder setCompression(@Nullable Input<String> compression) {
            this.compression = compression;
            return this;
        }

        public Builder setCompression(@Nullable String compression) {
            this.compression = Input.ofNullable(compression);
            return this;
        }

        public Builder setCsvOptions(@Nullable Input<TableExternalDataConfigurationCsvOptionsGetArgs> csvOptions) {
            this.csvOptions = csvOptions;
            return this;
        }

        public Builder setCsvOptions(@Nullable TableExternalDataConfigurationCsvOptionsGetArgs csvOptions) {
            this.csvOptions = Input.ofNullable(csvOptions);
            return this;
        }

        public Builder setGoogleSheetsOptions(@Nullable Input<TableExternalDataConfigurationGoogleSheetsOptionsGetArgs> googleSheetsOptions) {
            this.googleSheetsOptions = googleSheetsOptions;
            return this;
        }

        public Builder setGoogleSheetsOptions(@Nullable TableExternalDataConfigurationGoogleSheetsOptionsGetArgs googleSheetsOptions) {
            this.googleSheetsOptions = Input.ofNullable(googleSheetsOptions);
            return this;
        }

        public Builder setHivePartitioningOptions(@Nullable Input<TableExternalDataConfigurationHivePartitioningOptionsGetArgs> hivePartitioningOptions) {
            this.hivePartitioningOptions = hivePartitioningOptions;
            return this;
        }

        public Builder setHivePartitioningOptions(@Nullable TableExternalDataConfigurationHivePartitioningOptionsGetArgs hivePartitioningOptions) {
            this.hivePartitioningOptions = Input.ofNullable(hivePartitioningOptions);
            return this;
        }

        public Builder setIgnoreUnknownValues(@Nullable Input<Boolean> ignoreUnknownValues) {
            this.ignoreUnknownValues = ignoreUnknownValues;
            return this;
        }

        public Builder setIgnoreUnknownValues(@Nullable Boolean ignoreUnknownValues) {
            this.ignoreUnknownValues = Input.ofNullable(ignoreUnknownValues);
            return this;
        }

        public Builder setMaxBadRecords(@Nullable Input<Integer> maxBadRecords) {
            this.maxBadRecords = maxBadRecords;
            return this;
        }

        public Builder setMaxBadRecords(@Nullable Integer maxBadRecords) {
            this.maxBadRecords = Input.ofNullable(maxBadRecords);
            return this;
        }

        public Builder setSchema(@Nullable Input<String> schema) {
            this.schema = schema;
            return this;
        }

        public Builder setSchema(@Nullable String schema) {
            this.schema = Input.ofNullable(schema);
            return this;
        }

        public Builder setSourceFormat(Input<String> sourceFormat) {
            this.sourceFormat = Objects.requireNonNull(sourceFormat);
            return this;
        }

        public Builder setSourceFormat(String sourceFormat) {
            this.sourceFormat = Input.of(Objects.requireNonNull(sourceFormat));
            return this;
        }

        public Builder setSourceUris(Input<List<String>> sourceUris) {
            this.sourceUris = Objects.requireNonNull(sourceUris);
            return this;
        }

        public Builder setSourceUris(List<String> sourceUris) {
            this.sourceUris = Input.of(Objects.requireNonNull(sourceUris));
            return this;
        }

        public TableExternalDataConfigurationGetArgs build() {
            return new TableExternalDataConfigurationGetArgs(autodetect, compression, csvOptions, googleSheetsOptions, hivePartitioningOptions, ignoreUnknownValues, maxBadRecords, schema, sourceFormat, sourceUris);
        }
    }
}
