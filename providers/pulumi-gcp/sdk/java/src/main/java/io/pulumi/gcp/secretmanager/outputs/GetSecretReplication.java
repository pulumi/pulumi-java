// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.secretmanager.outputs;

import io.pulumi.core.annotations.OutputCustomType;
import io.pulumi.gcp.secretmanager.outputs.GetSecretReplicationUserManaged;
import java.lang.Boolean;
import java.util.List;
import java.util.Objects;

@OutputCustomType
public final class GetSecretReplication {
    private final Boolean automatic;
    private final List<GetSecretReplicationUserManaged> userManageds;

    @OutputCustomType.Constructor({"automatic","userManageds"})
    private GetSecretReplication(
        Boolean automatic,
        List<GetSecretReplicationUserManaged> userManageds) {
        this.automatic = Objects.requireNonNull(automatic);
        this.userManageds = Objects.requireNonNull(userManageds);
    }

    public Boolean getAutomatic() {
        return this.automatic;
    }
    public List<GetSecretReplicationUserManaged> getUserManageds() {
        return this.userManageds;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSecretReplication defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Boolean automatic;
        private List<GetSecretReplicationUserManaged> userManageds;

        public Builder() {
    	      // Empty
        }

        public Builder(GetSecretReplication defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.automatic = defaults.automatic;
    	      this.userManageds = defaults.userManageds;
        }

        public Builder setAutomatic(Boolean automatic) {
            this.automatic = Objects.requireNonNull(automatic);
            return this;
        }

        public Builder setUserManageds(List<GetSecretReplicationUserManaged> userManageds) {
            this.userManageds = Objects.requireNonNull(userManageds);
            return this;
        }
        public GetSecretReplication build() {
            return new GetSecretReplication(automatic, userManageds);
        }
    }
}
