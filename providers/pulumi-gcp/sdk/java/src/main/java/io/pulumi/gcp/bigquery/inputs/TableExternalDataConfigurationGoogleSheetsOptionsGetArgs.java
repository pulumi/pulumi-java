// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.bigquery.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class TableExternalDataConfigurationGoogleSheetsOptionsGetArgs extends io.pulumi.resources.ResourceArgs {

    public static final TableExternalDataConfigurationGoogleSheetsOptionsGetArgs Empty = new TableExternalDataConfigurationGoogleSheetsOptionsGetArgs();

    /**
     * Information required to partition based on ranges.
     * Structure is documented below.
     * 
     */
    @Import(name="range")
      private final @Nullable Output<String> range;

    public Output<String> getRange() {
        return this.range == null ? Output.empty() : this.range;
    }

    /**
     * The number of rows at the top of the sheet
     * that BigQuery will skip when reading the data. At least one of `range` or
     * `skip_leading_rows` must be set.
     * 
     */
    @Import(name="skipLeadingRows")
      private final @Nullable Output<Integer> skipLeadingRows;

    public Output<Integer> getSkipLeadingRows() {
        return this.skipLeadingRows == null ? Output.empty() : this.skipLeadingRows;
    }

    public TableExternalDataConfigurationGoogleSheetsOptionsGetArgs(
        @Nullable Output<String> range,
        @Nullable Output<Integer> skipLeadingRows) {
        this.range = range;
        this.skipLeadingRows = skipLeadingRows;
    }

    private TableExternalDataConfigurationGoogleSheetsOptionsGetArgs() {
        this.range = Output.empty();
        this.skipLeadingRows = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TableExternalDataConfigurationGoogleSheetsOptionsGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> range;
        private @Nullable Output<Integer> skipLeadingRows;

        public Builder() {
    	      // Empty
        }

        public Builder(TableExternalDataConfigurationGoogleSheetsOptionsGetArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.range = defaults.range;
    	      this.skipLeadingRows = defaults.skipLeadingRows;
        }

        public Builder range(@Nullable Output<String> range) {
            this.range = range;
            return this;
        }

        public Builder range(@Nullable String range) {
            this.range = Output.ofNullable(range);
            return this;
        }

        public Builder skipLeadingRows(@Nullable Output<Integer> skipLeadingRows) {
            this.skipLeadingRows = skipLeadingRows;
            return this;
        }

        public Builder skipLeadingRows(@Nullable Integer skipLeadingRows) {
            this.skipLeadingRows = Output.ofNullable(skipLeadingRows);
            return this;
        }
        public TableExternalDataConfigurationGoogleSheetsOptionsGetArgs build() {
            return new TableExternalDataConfigurationGoogleSheetsOptionsGetArgs(range, skipLeadingRows);
        }
    }
}
