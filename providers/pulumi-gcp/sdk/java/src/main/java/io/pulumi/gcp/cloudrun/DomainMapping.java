// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.cloudrun;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Export;
import io.pulumi.core.annotations.ResourceType;
import io.pulumi.gcp.Utilities;
import io.pulumi.gcp.cloudrun.DomainMappingArgs;
import io.pulumi.gcp.cloudrun.inputs.DomainMappingState;
import io.pulumi.gcp.cloudrun.outputs.DomainMappingMetadata;
import io.pulumi.gcp.cloudrun.outputs.DomainMappingSpec;
import io.pulumi.gcp.cloudrun.outputs.DomainMappingStatus;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * Resource to hold the state and status of a user's domain mapping.
 * 
 * 
 * To get more information about DomainMapping, see:
 * 
 * * [API documentation](https://cloud.google.com/run/docs/reference/rest/v1/projects.locations.domainmappings)
 * * How-to Guides
 *     * [Official Documentation](https://cloud.google.com/run/docs/mapping-custom-domains)
 * 
 * {{% examples %}}
 * ## Example Usage
 * {{% example %}}
 * ### Cloud Run Domain Mapping Basic
 * 
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 * 
 * const defaultService = new gcp.cloudrun.Service("defaultService", {
 *     location: "us-central1",
 *     metadata: {
 *         namespace: "my-project-name",
 *     },
 *     template: {
 *         spec: {
 *             containers: [{
 *                 image: "us-docker.pkg.dev/cloudrun/container/hello",
 *             }],
 *         },
 *     },
 * });
 * const defaultDomainMapping = new gcp.cloudrun.DomainMapping("defaultDomainMapping", {
 *     location: "us-central1",
 *     metadata: {
 *         namespace: "my-project-name",
 *     },
 *     spec: {
 *         routeName: defaultService.name,
 *     },
 * });
 * ```
 * ```python
 * import pulumi
 * import pulumi_gcp as gcp
 * 
 * default_service = gcp.cloudrun.Service("defaultService",
 *     location="us-central1",
 *     metadata=gcp.cloudrun.ServiceMetadataArgs(
 *         namespace="my-project-name",
 *     ),
 *     template=gcp.cloudrun.ServiceTemplateArgs(
 *         spec=gcp.cloudrun.ServiceTemplateSpecArgs(
 *             containers=[gcp.cloudrun.ServiceTemplateSpecContainerArgs(
 *                 image="us-docker.pkg.dev/cloudrun/container/hello",
 *             )],
 *         ),
 *     ))
 * default_domain_mapping = gcp.cloudrun.DomainMapping("defaultDomainMapping",
 *     location="us-central1",
 *     metadata=gcp.cloudrun.DomainMappingMetadataArgs(
 *         namespace="my-project-name",
 *     ),
 *     spec=gcp.cloudrun.DomainMappingSpecArgs(
 *         route_name=default_service.name,
 *     ))
 * ```
 * ```csharp
 * using Pulumi;
 * using Gcp = Pulumi.Gcp;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var defaultService = new Gcp.CloudRun.Service("defaultService", new Gcp.CloudRun.ServiceArgs
 *         {
 *             Location = "us-central1",
 *             Metadata = new Gcp.CloudRun.Inputs.ServiceMetadataArgs
 *             {
 *                 Namespace = "my-project-name",
 *             },
 *             Template = new Gcp.CloudRun.Inputs.ServiceTemplateArgs
 *             {
 *                 Spec = new Gcp.CloudRun.Inputs.ServiceTemplateSpecArgs
 *                 {
 *                     Containers = 
 *                     {
 *                         new Gcp.CloudRun.Inputs.ServiceTemplateSpecContainerArgs
 *                         {
 *                             Image = "us-docker.pkg.dev/cloudrun/container/hello",
 *                         },
 *                     },
 *                 },
 *             },
 *         });
 *         var defaultDomainMapping = new Gcp.CloudRun.DomainMapping("defaultDomainMapping", new Gcp.CloudRun.DomainMappingArgs
 *         {
 *             Location = "us-central1",
 *             Metadata = new Gcp.CloudRun.Inputs.DomainMappingMetadataArgs
 *             {
 *                 Namespace = "my-project-name",
 *             },
 *             Spec = new Gcp.CloudRun.Inputs.DomainMappingSpecArgs
 *             {
 *                 RouteName = defaultService.Name,
 *             },
 *         });
 *     }
 * 
 * }
 * ```
 * ```go
 * package main
 * 
 * import (
 * 	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/cloudrun"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		defaultService, err := cloudrun.NewService(ctx, "defaultService", &cloudrun.ServiceArgs{
 * 			Location: pulumi.String("us-central1"),
 * 			Metadata: &cloudrun.ServiceMetadataArgs{
 * 				Namespace: pulumi.String("my-project-name"),
 * 			},
 * 			Template: &cloudrun.ServiceTemplateArgs{
 * 				Spec: &cloudrun.ServiceTemplateSpecArgs{
 * 					Containers: cloudrun.ServiceTemplateSpecContainerArray{
 * 						&cloudrun.ServiceTemplateSpecContainerArgs{
 * 							Image: pulumi.String("us-docker.pkg.dev/cloudrun/container/hello"),
 * 						},
 * 					},
 * 				},
 * 			},
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		_, err = cloudrun.NewDomainMapping(ctx, "defaultDomainMapping", &cloudrun.DomainMappingArgs{
 * 			Location: pulumi.String("us-central1"),
 * 			Metadata: &cloudrun.DomainMappingMetadataArgs{
 * 				Namespace: pulumi.String("my-project-name"),
 * 			},
 * 			Spec: &cloudrun.DomainMappingSpecArgs{
 * 				RouteName: defaultService.Name,
 * 			},
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * ```
 * {{% /example %}}
 * {{% /examples %}}
 * 
 * ## Import
 * 
 * DomainMapping can be imported using any of these accepted formats
 * 
 * ```sh
 *  $ pulumi import gcp:cloudrun/domainMapping:DomainMapping default locations/{{location}}/namespaces/{{project}}/domainmappings/{{name}}
 * ```
 * 
 * 
 * 
 * ```sh
 *  $ pulumi import gcp:cloudrun/domainMapping:DomainMapping default {{location}}/{{project}}/{{name}}
 * ```
 * 
 * 
 * 
 * ```sh
 *  $ pulumi import gcp:cloudrun/domainMapping:DomainMapping default {{location}}/{{name}}
 * ```
 * 
 *  
 */
@ResourceType(type="gcp:cloudrun/domainMapping:DomainMapping")
public class DomainMapping extends io.pulumi.resources.CustomResource {
    /**
     * The location of the cloud run instance. eg us-central1
     * 
     */
    @Export(name="location", type=String.class, parameters={})
    private Output<String> location;

    /**
     * @return The location of the cloud run instance. eg us-central1
     * 
     */
    public Output<String> getLocation() {
        return this.location;
    }
    /**
     * Metadata associated with this DomainMapping.
     * Structure is documented below.
     * 
     */
    @Export(name="metadata", type=DomainMappingMetadata.class, parameters={})
    private Output<DomainMappingMetadata> metadata;

    /**
     * @return Metadata associated with this DomainMapping.
     * Structure is documented below.
     * 
     */
    public Output<DomainMappingMetadata> getMetadata() {
        return this.metadata;
    }
    /**
     * Name should be a [verified](https://support.google.com/webmasters/answer/9008080) domain
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return Name should be a [verified](https://support.google.com/webmasters/answer/9008080) domain
     * 
     */
    public Output<String> getName() {
        return this.name;
    }
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Export(name="project", type=String.class, parameters={})
    private Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Output<String> getProject() {
        return this.project;
    }
    /**
     * The spec for this DomainMapping.
     * Structure is documented below.
     * 
     */
    @Export(name="spec", type=DomainMappingSpec.class, parameters={})
    private Output<DomainMappingSpec> spec;

    /**
     * @return The spec for this DomainMapping.
     * Structure is documented below.
     * 
     */
    public Output<DomainMappingSpec> getSpec() {
        return this.spec;
    }
    /**
     * The current status of the DomainMapping.
     * 
     */
    @Export(name="statuses", type=List.class, parameters={DomainMappingStatus.class})
    private Output<List<DomainMappingStatus>> statuses;

    /**
     * @return The current status of the DomainMapping.
     * 
     */
    public Output<List<DomainMappingStatus>> getStatuses() {
        return this.statuses;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public DomainMapping(String name) {
        this(name, DomainMappingArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public DomainMapping(String name, DomainMappingArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public DomainMapping(String name, DomainMappingArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("gcp:cloudrun/domainMapping:DomainMapping", name, args == null ? DomainMappingArgs.Empty : args, makeResourceOptions(options, Output.empty()));
    }

    private DomainMapping(String name, Output<String> id, @Nullable DomainMappingState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("gcp:cloudrun/domainMapping:DomainMapping", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static DomainMapping get(String name, Output<String> id, @Nullable DomainMappingState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new DomainMapping(name, id, state, options);
    }
}
