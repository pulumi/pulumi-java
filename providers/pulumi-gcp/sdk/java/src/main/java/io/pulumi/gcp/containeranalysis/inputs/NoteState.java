// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.containeranalysis.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import io.pulumi.gcp.containeranalysis.inputs.NoteAttestationAuthorityGetArgs;
import io.pulumi.gcp.containeranalysis.inputs.NoteRelatedUrlGetArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class NoteState extends io.pulumi.resources.ResourceArgs {

    public static final NoteState Empty = new NoteState();

    @InputImport(name="attestationAuthority")
    private final @Nullable Input<NoteAttestationAuthorityGetArgs> attestationAuthority;

    public Input<NoteAttestationAuthorityGetArgs> getAttestationAuthority() {
        return this.attestationAuthority == null ? Input.empty() : this.attestationAuthority;
    }

    @InputImport(name="createTime")
    private final @Nullable Input<String> createTime;

    public Input<String> getCreateTime() {
        return this.createTime == null ? Input.empty() : this.createTime;
    }

    @InputImport(name="expirationTime")
    private final @Nullable Input<String> expirationTime;

    public Input<String> getExpirationTime() {
        return this.expirationTime == null ? Input.empty() : this.expirationTime;
    }

    @InputImport(name="kind")
    private final @Nullable Input<String> kind;

    public Input<String> getKind() {
        return this.kind == null ? Input.empty() : this.kind;
    }

    @InputImport(name="longDescription")
    private final @Nullable Input<String> longDescription;

    public Input<String> getLongDescription() {
        return this.longDescription == null ? Input.empty() : this.longDescription;
    }

    @InputImport(name="name")
    private final @Nullable Input<String> name;

    public Input<String> getName() {
        return this.name == null ? Input.empty() : this.name;
    }

    @InputImport(name="project")
    private final @Nullable Input<String> project;

    public Input<String> getProject() {
        return this.project == null ? Input.empty() : this.project;
    }

    @InputImport(name="relatedNoteNames")
    private final @Nullable Input<List<String>> relatedNoteNames;

    public Input<List<String>> getRelatedNoteNames() {
        return this.relatedNoteNames == null ? Input.empty() : this.relatedNoteNames;
    }

    @InputImport(name="relatedUrls")
    private final @Nullable Input<List<NoteRelatedUrlGetArgs>> relatedUrls;

    public Input<List<NoteRelatedUrlGetArgs>> getRelatedUrls() {
        return this.relatedUrls == null ? Input.empty() : this.relatedUrls;
    }

    @InputImport(name="shortDescription")
    private final @Nullable Input<String> shortDescription;

    public Input<String> getShortDescription() {
        return this.shortDescription == null ? Input.empty() : this.shortDescription;
    }

    @InputImport(name="updateTime")
    private final @Nullable Input<String> updateTime;

    public Input<String> getUpdateTime() {
        return this.updateTime == null ? Input.empty() : this.updateTime;
    }

    public NoteState(
        @Nullable Input<NoteAttestationAuthorityGetArgs> attestationAuthority,
        @Nullable Input<String> createTime,
        @Nullable Input<String> expirationTime,
        @Nullable Input<String> kind,
        @Nullable Input<String> longDescription,
        @Nullable Input<String> name,
        @Nullable Input<String> project,
        @Nullable Input<List<String>> relatedNoteNames,
        @Nullable Input<List<NoteRelatedUrlGetArgs>> relatedUrls,
        @Nullable Input<String> shortDescription,
        @Nullable Input<String> updateTime) {
        this.attestationAuthority = attestationAuthority;
        this.createTime = createTime;
        this.expirationTime = expirationTime;
        this.kind = kind;
        this.longDescription = longDescription;
        this.name = name;
        this.project = project;
        this.relatedNoteNames = relatedNoteNames;
        this.relatedUrls = relatedUrls;
        this.shortDescription = shortDescription;
        this.updateTime = updateTime;
    }

    private NoteState() {
        this.attestationAuthority = Input.empty();
        this.createTime = Input.empty();
        this.expirationTime = Input.empty();
        this.kind = Input.empty();
        this.longDescription = Input.empty();
        this.name = Input.empty();
        this.project = Input.empty();
        this.relatedNoteNames = Input.empty();
        this.relatedUrls = Input.empty();
        this.shortDescription = Input.empty();
        this.updateTime = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(NoteState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<NoteAttestationAuthorityGetArgs> attestationAuthority;
        private @Nullable Input<String> createTime;
        private @Nullable Input<String> expirationTime;
        private @Nullable Input<String> kind;
        private @Nullable Input<String> longDescription;
        private @Nullable Input<String> name;
        private @Nullable Input<String> project;
        private @Nullable Input<List<String>> relatedNoteNames;
        private @Nullable Input<List<NoteRelatedUrlGetArgs>> relatedUrls;
        private @Nullable Input<String> shortDescription;
        private @Nullable Input<String> updateTime;

        public Builder() {
    	      // Empty
        }

        public Builder(NoteState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.attestationAuthority = defaults.attestationAuthority;
    	      this.createTime = defaults.createTime;
    	      this.expirationTime = defaults.expirationTime;
    	      this.kind = defaults.kind;
    	      this.longDescription = defaults.longDescription;
    	      this.name = defaults.name;
    	      this.project = defaults.project;
    	      this.relatedNoteNames = defaults.relatedNoteNames;
    	      this.relatedUrls = defaults.relatedUrls;
    	      this.shortDescription = defaults.shortDescription;
    	      this.updateTime = defaults.updateTime;
        }

        public Builder setAttestationAuthority(@Nullable Input<NoteAttestationAuthorityGetArgs> attestationAuthority) {
            this.attestationAuthority = attestationAuthority;
            return this;
        }

        public Builder setAttestationAuthority(@Nullable NoteAttestationAuthorityGetArgs attestationAuthority) {
            this.attestationAuthority = Input.ofNullable(attestationAuthority);
            return this;
        }

        public Builder setCreateTime(@Nullable Input<String> createTime) {
            this.createTime = createTime;
            return this;
        }

        public Builder setCreateTime(@Nullable String createTime) {
            this.createTime = Input.ofNullable(createTime);
            return this;
        }

        public Builder setExpirationTime(@Nullable Input<String> expirationTime) {
            this.expirationTime = expirationTime;
            return this;
        }

        public Builder setExpirationTime(@Nullable String expirationTime) {
            this.expirationTime = Input.ofNullable(expirationTime);
            return this;
        }

        public Builder setKind(@Nullable Input<String> kind) {
            this.kind = kind;
            return this;
        }

        public Builder setKind(@Nullable String kind) {
            this.kind = Input.ofNullable(kind);
            return this;
        }

        public Builder setLongDescription(@Nullable Input<String> longDescription) {
            this.longDescription = longDescription;
            return this;
        }

        public Builder setLongDescription(@Nullable String longDescription) {
            this.longDescription = Input.ofNullable(longDescription);
            return this;
        }

        public Builder setName(@Nullable Input<String> name) {
            this.name = name;
            return this;
        }

        public Builder setName(@Nullable String name) {
            this.name = Input.ofNullable(name);
            return this;
        }

        public Builder setProject(@Nullable Input<String> project) {
            this.project = project;
            return this;
        }

        public Builder setProject(@Nullable String project) {
            this.project = Input.ofNullable(project);
            return this;
        }

        public Builder setRelatedNoteNames(@Nullable Input<List<String>> relatedNoteNames) {
            this.relatedNoteNames = relatedNoteNames;
            return this;
        }

        public Builder setRelatedNoteNames(@Nullable List<String> relatedNoteNames) {
            this.relatedNoteNames = Input.ofNullable(relatedNoteNames);
            return this;
        }

        public Builder setRelatedUrls(@Nullable Input<List<NoteRelatedUrlGetArgs>> relatedUrls) {
            this.relatedUrls = relatedUrls;
            return this;
        }

        public Builder setRelatedUrls(@Nullable List<NoteRelatedUrlGetArgs> relatedUrls) {
            this.relatedUrls = Input.ofNullable(relatedUrls);
            return this;
        }

        public Builder setShortDescription(@Nullable Input<String> shortDescription) {
            this.shortDescription = shortDescription;
            return this;
        }

        public Builder setShortDescription(@Nullable String shortDescription) {
            this.shortDescription = Input.ofNullable(shortDescription);
            return this;
        }

        public Builder setUpdateTime(@Nullable Input<String> updateTime) {
            this.updateTime = updateTime;
            return this;
        }

        public Builder setUpdateTime(@Nullable String updateTime) {
            this.updateTime = Input.ofNullable(updateTime);
            return this;
        }

        public NoteState build() {
            return new NoteState(attestationAuthority, createTime, expirationTime, kind, longDescription, name, project, relatedNoteNames, relatedUrls, shortDescription, updateTime);
        }
    }
}
