// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.dataloss.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import io.pulumi.gcp.dataloss.inputs.PreventionInspectTemplateInspectConfigCustomInfoTypeDictionaryGetArgs;
import io.pulumi.gcp.dataloss.inputs.PreventionInspectTemplateInspectConfigCustomInfoTypeInfoTypeGetArgs;
import io.pulumi.gcp.dataloss.inputs.PreventionInspectTemplateInspectConfigCustomInfoTypeRegexGetArgs;
import io.pulumi.gcp.dataloss.inputs.PreventionInspectTemplateInspectConfigCustomInfoTypeStoredTypeGetArgs;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class PreventionInspectTemplateInspectConfigCustomInfoTypeGetArgs extends io.pulumi.resources.ResourceArgs {

    public static final PreventionInspectTemplateInspectConfigCustomInfoTypeGetArgs Empty = new PreventionInspectTemplateInspectConfigCustomInfoTypeGetArgs();

    /**
     * Dictionary which defines the rule.
     * Structure is documented below.
     * 
     */
    @Import(name="dictionary")
      private final @Nullable Output<PreventionInspectTemplateInspectConfigCustomInfoTypeDictionaryGetArgs> dictionary;

    public Output<PreventionInspectTemplateInspectConfigCustomInfoTypeDictionaryGetArgs> dictionary() {
        return this.dictionary == null ? Codegen.empty() : this.dictionary;
    }

    /**
     * If set to EXCLUSION_TYPE_EXCLUDE this infoType will not cause a finding to be returned. It still can be used for rules matching.
     * Possible values are `EXCLUSION_TYPE_EXCLUDE`.
     * 
     */
    @Import(name="exclusionType")
      private final @Nullable Output<String> exclusionType;

    public Output<String> exclusionType() {
        return this.exclusionType == null ? Codegen.empty() : this.exclusionType;
    }

    /**
     * CustomInfoType can either be a new infoType, or an extension of built-in infoType, when the name matches one of existing
     * infoTypes and that infoType is specified in `info_types` field. Specifying the latter adds findings to the
     * one detected by the system. If built-in info type is not specified in `info_types` list then the name is
     * treated as a custom info type.
     * Structure is documented below.
     * 
     */
    @Import(name="infoType", required=true)
      private final Output<PreventionInspectTemplateInspectConfigCustomInfoTypeInfoTypeGetArgs> infoType;

    public Output<PreventionInspectTemplateInspectConfigCustomInfoTypeInfoTypeGetArgs> infoType() {
        return this.infoType;
    }

    /**
     * Likelihood to return for this CustomInfoType. This base value can be altered by a detection rule if the finding meets the criteria
     * specified by the rule.
     * Default value is `VERY_LIKELY`.
     * Possible values are `VERY_UNLIKELY`, `UNLIKELY`, `POSSIBLE`, `LIKELY`, and `VERY_LIKELY`.
     * 
     */
    @Import(name="likelihood")
      private final @Nullable Output<String> likelihood;

    public Output<String> likelihood() {
        return this.likelihood == null ? Codegen.empty() : this.likelihood;
    }

    /**
     * Regular expression which defines the rule.
     * Structure is documented below.
     * 
     */
    @Import(name="regex")
      private final @Nullable Output<PreventionInspectTemplateInspectConfigCustomInfoTypeRegexGetArgs> regex;

    public Output<PreventionInspectTemplateInspectConfigCustomInfoTypeRegexGetArgs> regex() {
        return this.regex == null ? Codegen.empty() : this.regex;
    }

    /**
     * A reference to a StoredInfoType to use with scanning.
     * Structure is documented below.
     * 
     */
    @Import(name="storedType")
      private final @Nullable Output<PreventionInspectTemplateInspectConfigCustomInfoTypeStoredTypeGetArgs> storedType;

    public Output<PreventionInspectTemplateInspectConfigCustomInfoTypeStoredTypeGetArgs> storedType() {
        return this.storedType == null ? Codegen.empty() : this.storedType;
    }

    public PreventionInspectTemplateInspectConfigCustomInfoTypeGetArgs(
        @Nullable Output<PreventionInspectTemplateInspectConfigCustomInfoTypeDictionaryGetArgs> dictionary,
        @Nullable Output<String> exclusionType,
        Output<PreventionInspectTemplateInspectConfigCustomInfoTypeInfoTypeGetArgs> infoType,
        @Nullable Output<String> likelihood,
        @Nullable Output<PreventionInspectTemplateInspectConfigCustomInfoTypeRegexGetArgs> regex,
        @Nullable Output<PreventionInspectTemplateInspectConfigCustomInfoTypeStoredTypeGetArgs> storedType) {
        this.dictionary = dictionary;
        this.exclusionType = exclusionType;
        this.infoType = Objects.requireNonNull(infoType, "expected parameter 'infoType' to be non-null");
        this.likelihood = likelihood;
        this.regex = regex;
        this.storedType = storedType;
    }

    private PreventionInspectTemplateInspectConfigCustomInfoTypeGetArgs() {
        this.dictionary = Codegen.empty();
        this.exclusionType = Codegen.empty();
        this.infoType = Codegen.empty();
        this.likelihood = Codegen.empty();
        this.regex = Codegen.empty();
        this.storedType = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PreventionInspectTemplateInspectConfigCustomInfoTypeGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<PreventionInspectTemplateInspectConfigCustomInfoTypeDictionaryGetArgs> dictionary;
        private @Nullable Output<String> exclusionType;
        private Output<PreventionInspectTemplateInspectConfigCustomInfoTypeInfoTypeGetArgs> infoType;
        private @Nullable Output<String> likelihood;
        private @Nullable Output<PreventionInspectTemplateInspectConfigCustomInfoTypeRegexGetArgs> regex;
        private @Nullable Output<PreventionInspectTemplateInspectConfigCustomInfoTypeStoredTypeGetArgs> storedType;

        public Builder() {
    	      // Empty
        }

        public Builder(PreventionInspectTemplateInspectConfigCustomInfoTypeGetArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dictionary = defaults.dictionary;
    	      this.exclusionType = defaults.exclusionType;
    	      this.infoType = defaults.infoType;
    	      this.likelihood = defaults.likelihood;
    	      this.regex = defaults.regex;
    	      this.storedType = defaults.storedType;
        }

        public Builder dictionary(@Nullable Output<PreventionInspectTemplateInspectConfigCustomInfoTypeDictionaryGetArgs> dictionary) {
            this.dictionary = dictionary;
            return this;
        }
        public Builder dictionary(@Nullable PreventionInspectTemplateInspectConfigCustomInfoTypeDictionaryGetArgs dictionary) {
            this.dictionary = Codegen.ofNullable(dictionary);
            return this;
        }
        public Builder exclusionType(@Nullable Output<String> exclusionType) {
            this.exclusionType = exclusionType;
            return this;
        }
        public Builder exclusionType(@Nullable String exclusionType) {
            this.exclusionType = Codegen.ofNullable(exclusionType);
            return this;
        }
        public Builder infoType(Output<PreventionInspectTemplateInspectConfigCustomInfoTypeInfoTypeGetArgs> infoType) {
            this.infoType = Objects.requireNonNull(infoType);
            return this;
        }
        public Builder infoType(PreventionInspectTemplateInspectConfigCustomInfoTypeInfoTypeGetArgs infoType) {
            this.infoType = Output.of(Objects.requireNonNull(infoType));
            return this;
        }
        public Builder likelihood(@Nullable Output<String> likelihood) {
            this.likelihood = likelihood;
            return this;
        }
        public Builder likelihood(@Nullable String likelihood) {
            this.likelihood = Codegen.ofNullable(likelihood);
            return this;
        }
        public Builder regex(@Nullable Output<PreventionInspectTemplateInspectConfigCustomInfoTypeRegexGetArgs> regex) {
            this.regex = regex;
            return this;
        }
        public Builder regex(@Nullable PreventionInspectTemplateInspectConfigCustomInfoTypeRegexGetArgs regex) {
            this.regex = Codegen.ofNullable(regex);
            return this;
        }
        public Builder storedType(@Nullable Output<PreventionInspectTemplateInspectConfigCustomInfoTypeStoredTypeGetArgs> storedType) {
            this.storedType = storedType;
            return this;
        }
        public Builder storedType(@Nullable PreventionInspectTemplateInspectConfigCustomInfoTypeStoredTypeGetArgs storedType) {
            this.storedType = Codegen.ofNullable(storedType);
            return this;
        }        public PreventionInspectTemplateInspectConfigCustomInfoTypeGetArgs build() {
            return new PreventionInspectTemplateInspectConfigCustomInfoTypeGetArgs(dictionary, exclusionType, infoType, likelihood, regex, storedType);
        }
    }
}
