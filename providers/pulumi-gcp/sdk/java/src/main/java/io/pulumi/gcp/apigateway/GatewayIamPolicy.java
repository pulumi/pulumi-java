// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.apigateway;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Export;
import io.pulumi.core.annotations.ResourceType;
import io.pulumi.gcp.Utilities;
import io.pulumi.gcp.apigateway.GatewayIamPolicyArgs;
import io.pulumi.gcp.apigateway.inputs.GatewayIamPolicyState;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * Three different resources help you manage your IAM policy for API Gateway Gateway. Each of these resources serves a different use case:
 * 
 * * `gcp.apigateway.GatewayIamPolicy`: Authoritative. Sets the IAM policy for the gateway and replaces any existing policy already attached.
 * * `gcp.apigateway.GatewayIamBinding`: Authoritative for a given role. Updates the IAM policy to grant a role to a list of members. Other roles within the IAM policy for the gateway are preserved.
 * * `gcp.apigateway.GatewayIamMember`: Non-authoritative. Updates the IAM policy to grant a role to a new member. Other members for the role for the gateway are preserved.
 * 
 * > **Note:** `gcp.apigateway.GatewayIamPolicy` **cannot** be used in conjunction with `gcp.apigateway.GatewayIamBinding` and `gcp.apigateway.GatewayIamMember` or they will fight over what your policy should be.
 * 
 * > **Note:** `gcp.apigateway.GatewayIamBinding` resources **can be** used in conjunction with `gcp.apigateway.GatewayIamMember` resources **only if** they do not grant privilege to the same role.
 * 
 * 
 * ## google\_api\_gateway\_gateway\_iam\_policy
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 * 
 * const admin = gcp.organizations.getIAMPolicy({
 *     bindings: [{
 *         role: "roles/apigateway.viewer",
 *         members: ["user:jane@example.com"],
 *     }],
 * });
 * const policy = new gcp.apigateway.GatewayIamPolicy("policy", {
 *     project: google_api_gateway_gateway.api_gw.project,
 *     region: google_api_gateway_gateway.api_gw.region,
 *     gateway: google_api_gateway_gateway.api_gw.gateway_id,
 *     policyData: admin.then(admin => admin.policyData),
 * }, {
 *     provider: google_beta,
 * });
 * ```
 * ```python
 * import pulumi
 * import pulumi_gcp as gcp
 * 
 * admin = gcp.organizations.get_iam_policy(bindings=[gcp.organizations.GetIAMPolicyBindingArgs(
 *     role="roles/apigateway.viewer",
 *     members=["user:jane@example.com"],
 * )])
 * policy = gcp.apigateway.GatewayIamPolicy("policy",
 *     project=google_api_gateway_gateway["api_gw"]["project"],
 *     region=google_api_gateway_gateway["api_gw"]["region"],
 *     gateway=google_api_gateway_gateway["api_gw"]["gateway_id"],
 *     policy_data=admin.policy_data,
 *     opts=pulumi.ResourceOptions(provider=google_beta))
 * ```
 * ```csharp
 * using Pulumi;
 * using Gcp = Pulumi.Gcp;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var admin = Output.Create(Gcp.Organizations.GetIAMPolicy.InvokeAsync(new Gcp.Organizations.GetIAMPolicyArgs
 *         {
 *             Bindings = 
 *             {
 *                 new Gcp.Organizations.Inputs.GetIAMPolicyBindingArgs
 *                 {
 *                     Role = "roles/apigateway.viewer",
 *                     Members = 
 *                     {
 *                         "user:jane@example.com",
 *                     },
 *                 },
 *             },
 *         }));
 *         var policy = new Gcp.ApiGateway.GatewayIamPolicy("policy", new Gcp.ApiGateway.GatewayIamPolicyArgs
 *         {
 *             Project = google_api_gateway_gateway.Api_gw.Project,
 *             Region = google_api_gateway_gateway.Api_gw.Region,
 *             Gateway = google_api_gateway_gateway.Api_gw.Gateway_id,
 *             PolicyData = admin.Apply(admin => admin.PolicyData),
 *         }, new CustomResourceOptions
 *         {
 *             Provider = google_beta,
 *         });
 *     }
 * 
 * }
 * ```
 * ```go
 * package main
 * 
 * import (
 * 	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/apigateway"
 * 	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/organizations"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		admin, err := organizations.LookupIAMPolicy(ctx, &organizations.LookupIAMPolicyArgs{
 * 			Bindings: []organizations.GetIAMPolicyBinding{
 * 				organizations.GetIAMPolicyBinding{
 * 					Role: "roles/apigateway.viewer",
 * 					Members: []string{
 * 						"user:jane@example.com",
 * 					},
 * 				},
 * 			},
 * 		}, nil)
 * 		if err != nil {
 * 			return err
 * 		}
 * 		_, err = apigateway.NewGatewayIamPolicy(ctx, "policy", &apigateway.GatewayIamPolicyArgs{
 * 			Project:    pulumi.Any(google_api_gateway_gateway.Api_gw.Project),
 * 			Region:     pulumi.Any(google_api_gateway_gateway.Api_gw.Region),
 * 			Gateway:    pulumi.Any(google_api_gateway_gateway.Api_gw.Gateway_id),
 * 			PolicyData: pulumi.String(admin.PolicyData),
 * 		}, pulumi.Provider(google_beta))
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * ```
 * 
 * ## google\_api\_gateway\_gateway\_iam\_binding
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 * 
 * const binding = new gcp.apigateway.GatewayIamBinding("binding", {
 *     project: google_api_gateway_gateway.api_gw.project,
 *     region: google_api_gateway_gateway.api_gw.region,
 *     gateway: google_api_gateway_gateway.api_gw.gateway_id,
 *     role: "roles/apigateway.viewer",
 *     members: ["user:jane@example.com"],
 * }, {
 *     provider: google_beta,
 * });
 * ```
 * ```python
 * import pulumi
 * import pulumi_gcp as gcp
 * 
 * binding = gcp.apigateway.GatewayIamBinding("binding",
 *     project=google_api_gateway_gateway["api_gw"]["project"],
 *     region=google_api_gateway_gateway["api_gw"]["region"],
 *     gateway=google_api_gateway_gateway["api_gw"]["gateway_id"],
 *     role="roles/apigateway.viewer",
 *     members=["user:jane@example.com"],
 *     opts=pulumi.ResourceOptions(provider=google_beta))
 * ```
 * ```csharp
 * using Pulumi;
 * using Gcp = Pulumi.Gcp;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var binding = new Gcp.ApiGateway.GatewayIamBinding("binding", new Gcp.ApiGateway.GatewayIamBindingArgs
 *         {
 *             Project = google_api_gateway_gateway.Api_gw.Project,
 *             Region = google_api_gateway_gateway.Api_gw.Region,
 *             Gateway = google_api_gateway_gateway.Api_gw.Gateway_id,
 *             Role = "roles/apigateway.viewer",
 *             Members = 
 *             {
 *                 "user:jane@example.com",
 *             },
 *         }, new CustomResourceOptions
 *         {
 *             Provider = google_beta,
 *         });
 *     }
 * 
 * }
 * ```
 * ```go
 * package main
 * 
 * import (
 * 	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/apigateway"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		_, err := apigateway.NewGatewayIamBinding(ctx, "binding", &apigateway.GatewayIamBindingArgs{
 * 			Project: pulumi.Any(google_api_gateway_gateway.Api_gw.Project),
 * 			Region:  pulumi.Any(google_api_gateway_gateway.Api_gw.Region),
 * 			Gateway: pulumi.Any(google_api_gateway_gateway.Api_gw.Gateway_id),
 * 			Role:    pulumi.String("roles/apigateway.viewer"),
 * 			Members: pulumi.StringArray{
 * 				pulumi.String("user:jane@example.com"),
 * 			},
 * 		}, pulumi.Provider(google_beta))
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * ```
 * 
 * ## google\_api\_gateway\_gateway\_iam\_member
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 * 
 * const member = new gcp.apigateway.GatewayIamMember("member", {
 *     project: google_api_gateway_gateway.api_gw.project,
 *     region: google_api_gateway_gateway.api_gw.region,
 *     gateway: google_api_gateway_gateway.api_gw.gateway_id,
 *     role: "roles/apigateway.viewer",
 *     member: "user:jane@example.com",
 * }, {
 *     provider: google_beta,
 * });
 * ```
 * ```python
 * import pulumi
 * import pulumi_gcp as gcp
 * 
 * member = gcp.apigateway.GatewayIamMember("member",
 *     project=google_api_gateway_gateway["api_gw"]["project"],
 *     region=google_api_gateway_gateway["api_gw"]["region"],
 *     gateway=google_api_gateway_gateway["api_gw"]["gateway_id"],
 *     role="roles/apigateway.viewer",
 *     member="user:jane@example.com",
 *     opts=pulumi.ResourceOptions(provider=google_beta))
 * ```
 * ```csharp
 * using Pulumi;
 * using Gcp = Pulumi.Gcp;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var member = new Gcp.ApiGateway.GatewayIamMember("member", new Gcp.ApiGateway.GatewayIamMemberArgs
 *         {
 *             Project = google_api_gateway_gateway.Api_gw.Project,
 *             Region = google_api_gateway_gateway.Api_gw.Region,
 *             Gateway = google_api_gateway_gateway.Api_gw.Gateway_id,
 *             Role = "roles/apigateway.viewer",
 *             Member = "user:jane@example.com",
 *         }, new CustomResourceOptions
 *         {
 *             Provider = google_beta,
 *         });
 *     }
 * 
 * }
 * ```
 * ```go
 * package main
 * 
 * import (
 * 	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/apigateway"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		_, err := apigateway.NewGatewayIamMember(ctx, "member", &apigateway.GatewayIamMemberArgs{
 * 			Project: pulumi.Any(google_api_gateway_gateway.Api_gw.Project),
 * 			Region:  pulumi.Any(google_api_gateway_gateway.Api_gw.Region),
 * 			Gateway: pulumi.Any(google_api_gateway_gateway.Api_gw.Gateway_id),
 * 			Role:    pulumi.String("roles/apigateway.viewer"),
 * 			Member:  pulumi.String("user:jane@example.com"),
 * 		}, pulumi.Provider(google_beta))
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * ```
 * 
 * 
 * ## Import
 * 
 * For all import syntaxes, the "resource in question" can take any of the following forms* projects/{{project}}/locations/{{region}}/gateways/{{gateway}} * {{project}}/{{region}}/{{gateway}} * {{region}}/{{gateway}} * {{gateway}} Any variables not passed in the import command will be taken from the provider configuration. API Gateway gateway IAM resources can be imported using the resource identifiers, role, and member. IAM member imports use space-delimited identifiersthe resource in question, the role, and the member identity, e.g.
 * 
 * ```sh
 *  $ pulumi import gcp:apigateway/gatewayIamPolicy:GatewayIamPolicy editor "projects/{{project}}/locations/{{region}}/gateways/{{gateway}} roles/apigateway.viewer user:jane@example.com"
 * ```
 * 
 *  IAM binding imports use space-delimited identifiersthe resource in question and the role, e.g.
 * 
 * ```sh
 *  $ pulumi import gcp:apigateway/gatewayIamPolicy:GatewayIamPolicy editor "projects/{{project}}/locations/{{region}}/gateways/{{gateway}} roles/apigateway.viewer"
 * ```
 * 
 *  IAM policy imports use the identifier of the resource in question, e.g.
 * 
 * ```sh
 *  $ pulumi import gcp:apigateway/gatewayIamPolicy:GatewayIamPolicy editor projects/{{project}}/locations/{{region}}/gateways/{{gateway}}
 * ```
 * 
 *  -> **Custom Roles**If you're importing a IAM resource with a custom role, make sure to use the
 * 
 * full name of the custom role, e.g. `[projects/my-project|organizations/my-org]/roles/my-custom-role`. 
 */
@ResourceType(type="gcp:apigateway/gatewayIamPolicy:GatewayIamPolicy")
public class GatewayIamPolicy extends io.pulumi.resources.CustomResource {
    /**
     * (Computed) The etag of the IAM policy.
     * 
     */
    @Export(name="etag", type=String.class, parameters={})
    private Output<String> etag;

    /**
     * @return (Computed) The etag of the IAM policy.
     * 
     */
    public Output<String> getEtag() {
        return this.etag;
    }
    @Export(name="gateway", type=String.class, parameters={})
    private Output<String> gateway;

    public Output<String> getGateway() {
        return this.gateway;
    }
    /**
     * The policy data generated by
     * a `gcp.organizations.getIAMPolicy` data source.
     * 
     */
    @Export(name="policyData", type=String.class, parameters={})
    private Output<String> policyData;

    /**
     * @return The policy data generated by
     * a `gcp.organizations.getIAMPolicy` data source.
     * 
     */
    public Output<String> getPolicyData() {
        return this.policyData;
    }
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
     * 
     */
    @Export(name="project", type=String.class, parameters={})
    private Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
     * 
     */
    public Output<String> getProject() {
        return this.project;
    }
    /**
     * The region of the gateway for the API.
     * Used to find the parent resource to bind the IAM policy to. If not specified,
     * the value will be parsed from the identifier of the parent resource. If no region is provided in the parent identifier and no
     * region is specified, it is taken from the provider configuration.
     * 
     */
    @Export(name="region", type=String.class, parameters={})
    private Output<String> region;

    /**
     * @return The region of the gateway for the API.
     * Used to find the parent resource to bind the IAM policy to. If not specified,
     * the value will be parsed from the identifier of the parent resource. If no region is provided in the parent identifier and no
     * region is specified, it is taken from the provider configuration.
     * 
     */
    public Output<String> getRegion() {
        return this.region;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public GatewayIamPolicy(String name) {
        this(name, GatewayIamPolicyArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public GatewayIamPolicy(String name, GatewayIamPolicyArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public GatewayIamPolicy(String name, GatewayIamPolicyArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("gcp:apigateway/gatewayIamPolicy:GatewayIamPolicy", name, args == null ? GatewayIamPolicyArgs.Empty : args, makeResourceOptions(options, Output.empty()));
    }

    private GatewayIamPolicy(String name, Output<String> id, @Nullable GatewayIamPolicyState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("gcp:apigateway/gatewayIamPolicy:GatewayIamPolicy", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static GatewayIamPolicy get(String name, Output<String> id, @Nullable GatewayIamPolicyState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new GatewayIamPolicy(name, id, state, options);
    }
}
