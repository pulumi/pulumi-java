// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.gameservices.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import io.pulumi.gcp.gameservices.inputs.GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorGetArgs;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class GameServerDeploymentRolloutGameServerConfigOverrideGetArgs extends io.pulumi.resources.ResourceArgs {

    public static final GameServerDeploymentRolloutGameServerConfigOverrideGetArgs Empty = new GameServerDeploymentRolloutGameServerConfigOverrideGetArgs();

    /**
     * Version of the configuration.
     * 
     */
    @Import(name="configVersion")
      private final @Nullable Output<String> configVersion;

    public Output<String> configVersion() {
        return this.configVersion == null ? Codegen.empty() : this.configVersion;
    }

    /**
     * Selection by realms.
     * Structure is documented below.
     * 
     */
    @Import(name="realmsSelector")
      private final @Nullable Output<GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorGetArgs> realmsSelector;

    public Output<GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorGetArgs> realmsSelector() {
        return this.realmsSelector == null ? Codegen.empty() : this.realmsSelector;
    }

    public GameServerDeploymentRolloutGameServerConfigOverrideGetArgs(
        @Nullable Output<String> configVersion,
        @Nullable Output<GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorGetArgs> realmsSelector) {
        this.configVersion = configVersion;
        this.realmsSelector = realmsSelector;
    }

    private GameServerDeploymentRolloutGameServerConfigOverrideGetArgs() {
        this.configVersion = Codegen.empty();
        this.realmsSelector = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GameServerDeploymentRolloutGameServerConfigOverrideGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> configVersion;
        private @Nullable Output<GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorGetArgs> realmsSelector;

        public Builder() {
    	      // Empty
        }

        public Builder(GameServerDeploymentRolloutGameServerConfigOverrideGetArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.configVersion = defaults.configVersion;
    	      this.realmsSelector = defaults.realmsSelector;
        }

        public Builder configVersion(@Nullable Output<String> configVersion) {
            this.configVersion = configVersion;
            return this;
        }
        public Builder configVersion(@Nullable String configVersion) {
            this.configVersion = Codegen.ofNullable(configVersion);
            return this;
        }
        public Builder realmsSelector(@Nullable Output<GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorGetArgs> realmsSelector) {
            this.realmsSelector = realmsSelector;
            return this;
        }
        public Builder realmsSelector(@Nullable GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorGetArgs realmsSelector) {
            this.realmsSelector = Codegen.ofNullable(realmsSelector);
            return this;
        }        public GameServerDeploymentRolloutGameServerConfigOverrideGetArgs build() {
            return new GameServerDeploymentRolloutGameServerConfigOverrideGetArgs(configVersion, realmsSelector);
        }
    }
}
