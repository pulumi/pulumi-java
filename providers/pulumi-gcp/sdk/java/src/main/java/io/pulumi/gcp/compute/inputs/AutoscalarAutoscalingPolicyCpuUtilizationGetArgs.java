// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.compute.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class AutoscalarAutoscalingPolicyCpuUtilizationGetArgs extends io.pulumi.resources.ResourceArgs {

    public static final AutoscalarAutoscalingPolicyCpuUtilizationGetArgs Empty = new AutoscalarAutoscalingPolicyCpuUtilizationGetArgs();

    @InputImport(name="predictiveMethod")
    private final @Nullable Input<String> predictiveMethod;

    public Input<String> getPredictiveMethod() {
        return this.predictiveMethod == null ? Input.empty() : this.predictiveMethod;
    }

    @InputImport(name="target", required=true)
    private final Input<Double> target;

    public Input<Double> getTarget() {
        return this.target;
    }

    public AutoscalarAutoscalingPolicyCpuUtilizationGetArgs(
        @Nullable Input<String> predictiveMethod,
        Input<Double> target) {
        this.predictiveMethod = predictiveMethod;
        this.target = Objects.requireNonNull(target, "expected parameter 'target' to be non-null");
    }

    private AutoscalarAutoscalingPolicyCpuUtilizationGetArgs() {
        this.predictiveMethod = Input.empty();
        this.target = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AutoscalarAutoscalingPolicyCpuUtilizationGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> predictiveMethod;
        private Input<Double> target;

        public Builder() {
    	      // Empty
        }

        public Builder(AutoscalarAutoscalingPolicyCpuUtilizationGetArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.predictiveMethod = defaults.predictiveMethod;
    	      this.target = defaults.target;
        }

        public Builder setPredictiveMethod(@Nullable Input<String> predictiveMethod) {
            this.predictiveMethod = predictiveMethod;
            return this;
        }

        public Builder setPredictiveMethod(@Nullable String predictiveMethod) {
            this.predictiveMethod = Input.ofNullable(predictiveMethod);
            return this;
        }

        public Builder setTarget(Input<Double> target) {
            this.target = Objects.requireNonNull(target);
            return this;
        }

        public Builder setTarget(Double target) {
            this.target = Input.of(Objects.requireNonNull(target));
            return this;
        }

        public AutoscalarAutoscalingPolicyCpuUtilizationGetArgs build() {
            return new AutoscalarAutoscalingPolicyCpuUtilizationGetArgs(predictiveMethod, target);
        }
    }
}
