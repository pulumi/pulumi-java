// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.sourcerepo.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class RepositoryPubsubConfigGetArgs extends io.pulumi.resources.ResourceArgs {

    public static final RepositoryPubsubConfigGetArgs Empty = new RepositoryPubsubConfigGetArgs();

    /**
     * The format of the Cloud Pub/Sub messages.
     * - PROTOBUF: The message payload is a serialized protocol buffer of SourceRepoEvent.
     * - JSON: The message payload is a JSON string of SourceRepoEvent.
     *   Possible values are `PROTOBUF` and `JSON`.
     * 
     */
    @Import(name="messageFormat", required=true)
      private final Output<String> messageFormat;

    public Output<String> messageFormat() {
        return this.messageFormat;
    }

    /**
     * Email address of the service account used for publishing Cloud Pub/Sub messages.
     * This service account needs to be in the same project as the PubsubConfig. When added,
     * the caller needs to have iam.serviceAccounts.actAs permission on this service account.
     * If unspecified, it defaults to the compute engine default service account.
     * 
     */
    @Import(name="serviceAccountEmail")
      private final @Nullable Output<String> serviceAccountEmail;

    public Output<String> serviceAccountEmail() {
        return this.serviceAccountEmail == null ? Codegen.empty() : this.serviceAccountEmail;
    }

    /**
     * The identifier for this object. Format specified above.
     * 
     */
    @Import(name="topic", required=true)
      private final Output<String> topic;

    public Output<String> topic() {
        return this.topic;
    }

    public RepositoryPubsubConfigGetArgs(
        Output<String> messageFormat,
        @Nullable Output<String> serviceAccountEmail,
        Output<String> topic) {
        this.messageFormat = Objects.requireNonNull(messageFormat, "expected parameter 'messageFormat' to be non-null");
        this.serviceAccountEmail = serviceAccountEmail;
        this.topic = Objects.requireNonNull(topic, "expected parameter 'topic' to be non-null");
    }

    private RepositoryPubsubConfigGetArgs() {
        this.messageFormat = Codegen.empty();
        this.serviceAccountEmail = Codegen.empty();
        this.topic = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RepositoryPubsubConfigGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> messageFormat;
        private @Nullable Output<String> serviceAccountEmail;
        private Output<String> topic;

        public Builder() {
    	      // Empty
        }

        public Builder(RepositoryPubsubConfigGetArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.messageFormat = defaults.messageFormat;
    	      this.serviceAccountEmail = defaults.serviceAccountEmail;
    	      this.topic = defaults.topic;
        }

        public Builder messageFormat(Output<String> messageFormat) {
            this.messageFormat = Objects.requireNonNull(messageFormat);
            return this;
        }
        public Builder messageFormat(String messageFormat) {
            this.messageFormat = Output.of(Objects.requireNonNull(messageFormat));
            return this;
        }
        public Builder serviceAccountEmail(@Nullable Output<String> serviceAccountEmail) {
            this.serviceAccountEmail = serviceAccountEmail;
            return this;
        }
        public Builder serviceAccountEmail(@Nullable String serviceAccountEmail) {
            this.serviceAccountEmail = Codegen.ofNullable(serviceAccountEmail);
            return this;
        }
        public Builder topic(Output<String> topic) {
            this.topic = Objects.requireNonNull(topic);
            return this;
        }
        public Builder topic(String topic) {
            this.topic = Output.of(Objects.requireNonNull(topic));
            return this;
        }        public RepositoryPubsubConfigGetArgs build() {
            return new RepositoryPubsubConfigGetArgs(messageFormat, serviceAccountEmail, topic);
        }
    }
}
