// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.diagflow.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import io.pulumi.gcp.diagflow.inputs.CxEntityTypeEntityGetArgs;
import io.pulumi.gcp.diagflow.inputs.CxEntityTypeExcludedPhraseGetArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class CxEntityTypeState extends io.pulumi.resources.ResourceArgs {

    public static final CxEntityTypeState Empty = new CxEntityTypeState();

    /**
     * Represents kinds of entities.
     * * AUTO_EXPANSION_MODE_UNSPECIFIED: Auto expansion disabled for the entity.
     * * AUTO_EXPANSION_MODE_DEFAULT: Allows an agent to recognize values that have not been explicitly listed in the entity.
     *   Possible values are `AUTO_EXPANSION_MODE_DEFAULT` and `AUTO_EXPANSION_MODE_UNSPECIFIED`.
     * 
     */
    @InputImport(name="autoExpansionMode")
      private final @Nullable Input<String> autoExpansionMode;

    public Input<String> getAutoExpansionMode() {
        return this.autoExpansionMode == null ? Input.empty() : this.autoExpansionMode;
    }

    /**
     * The human-readable name of the entity type, unique within the agent.
     * 
     */
    @InputImport(name="displayName")
      private final @Nullable Input<String> displayName;

    public Input<String> getDisplayName() {
        return this.displayName == null ? Input.empty() : this.displayName;
    }

    /**
     * Enables fuzzy entity extraction during classification.
     * 
     */
    @InputImport(name="enableFuzzyExtraction")
      private final @Nullable Input<Boolean> enableFuzzyExtraction;

    public Input<Boolean> getEnableFuzzyExtraction() {
        return this.enableFuzzyExtraction == null ? Input.empty() : this.enableFuzzyExtraction;
    }

    /**
     * The collection of entity entries associated with the entity type.
     * Structure is documented below.
     * 
     */
    @InputImport(name="entities")
      private final @Nullable Input<List<CxEntityTypeEntityGetArgs>> entities;

    public Input<List<CxEntityTypeEntityGetArgs>> getEntities() {
        return this.entities == null ? Input.empty() : this.entities;
    }

    /**
     * Collection of exceptional words and phrases that shouldn't be matched. For example, if you have a size entity type with entry giant(an adjective), you might consider adding giants(a noun) as an exclusion.
     * If the kind of entity type is KIND_MAP, then the phrases specified by entities and excluded phrases should be mutually exclusive.
     * Structure is documented below.
     * 
     */
    @InputImport(name="excludedPhrases")
      private final @Nullable Input<List<CxEntityTypeExcludedPhraseGetArgs>> excludedPhrases;

    public Input<List<CxEntityTypeExcludedPhraseGetArgs>> getExcludedPhrases() {
        return this.excludedPhrases == null ? Input.empty() : this.excludedPhrases;
    }

    /**
     * Indicates whether the entity type can be automatically expanded.
     * * KIND_MAP: Map entity types allow mapping of a group of synonyms to a canonical value.
     * * KIND_LIST: List entity types contain a set of entries that do not map to canonical values. However, list entity types can contain references to other entity types (with or without aliases).
     * * KIND_REGEXP: Regexp entity types allow to specify regular expressions in entries values.
     *   Possible values are `KIND_MAP`, `KIND_LIST`, and `KIND_REGEXP`.
     * 
     */
    @InputImport(name="kind")
      private final @Nullable Input<String> kind;

    public Input<String> getKind() {
        return this.kind == null ? Input.empty() : this.kind;
    }

    /**
     * The language of the following fields in entityType:
     * EntityType.entities.value
     * EntityType.entities.synonyms
     * EntityType.excluded_phrases.value
     * If not specified, the agent's default language is used. Many languages are supported. Note: languages must be enabled in the agent before they can be used.
     * 
     */
    @InputImport(name="languageCode")
      private final @Nullable Input<String> languageCode;

    public Input<String> getLanguageCode() {
        return this.languageCode == null ? Input.empty() : this.languageCode;
    }

    /**
     * The unique identifier of the entity type. Format: projects/<Project ID>/locations/<Location ID>/agents/<Agent
     * ID>/entityTypes/<Entity Type ID>.
     * 
     */
    @InputImport(name="name")
      private final @Nullable Input<String> name;

    public Input<String> getName() {
        return this.name == null ? Input.empty() : this.name;
    }

    /**
     * The agent to create a entity type for.
     * Format: projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>.
     * 
     */
    @InputImport(name="parent")
      private final @Nullable Input<String> parent;

    public Input<String> getParent() {
        return this.parent == null ? Input.empty() : this.parent;
    }

    /**
     * Indicates whether parameters of the entity type should be redacted in log. If redaction is enabled, page parameters and intent parameters referring to the entity type will be replaced by parameter name when logging.
     * 
     */
    @InputImport(name="redact")
      private final @Nullable Input<Boolean> redact;

    public Input<Boolean> getRedact() {
        return this.redact == null ? Input.empty() : this.redact;
    }

    public CxEntityTypeState(
        @Nullable Input<String> autoExpansionMode,
        @Nullable Input<String> displayName,
        @Nullable Input<Boolean> enableFuzzyExtraction,
        @Nullable Input<List<CxEntityTypeEntityGetArgs>> entities,
        @Nullable Input<List<CxEntityTypeExcludedPhraseGetArgs>> excludedPhrases,
        @Nullable Input<String> kind,
        @Nullable Input<String> languageCode,
        @Nullable Input<String> name,
        @Nullable Input<String> parent,
        @Nullable Input<Boolean> redact) {
        this.autoExpansionMode = autoExpansionMode;
        this.displayName = displayName;
        this.enableFuzzyExtraction = enableFuzzyExtraction;
        this.entities = entities;
        this.excludedPhrases = excludedPhrases;
        this.kind = kind;
        this.languageCode = languageCode;
        this.name = name;
        this.parent = parent;
        this.redact = redact;
    }

    private CxEntityTypeState() {
        this.autoExpansionMode = Input.empty();
        this.displayName = Input.empty();
        this.enableFuzzyExtraction = Input.empty();
        this.entities = Input.empty();
        this.excludedPhrases = Input.empty();
        this.kind = Input.empty();
        this.languageCode = Input.empty();
        this.name = Input.empty();
        this.parent = Input.empty();
        this.redact = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CxEntityTypeState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> autoExpansionMode;
        private @Nullable Input<String> displayName;
        private @Nullable Input<Boolean> enableFuzzyExtraction;
        private @Nullable Input<List<CxEntityTypeEntityGetArgs>> entities;
        private @Nullable Input<List<CxEntityTypeExcludedPhraseGetArgs>> excludedPhrases;
        private @Nullable Input<String> kind;
        private @Nullable Input<String> languageCode;
        private @Nullable Input<String> name;
        private @Nullable Input<String> parent;
        private @Nullable Input<Boolean> redact;

        public Builder() {
    	      // Empty
        }

        public Builder(CxEntityTypeState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.autoExpansionMode = defaults.autoExpansionMode;
    	      this.displayName = defaults.displayName;
    	      this.enableFuzzyExtraction = defaults.enableFuzzyExtraction;
    	      this.entities = defaults.entities;
    	      this.excludedPhrases = defaults.excludedPhrases;
    	      this.kind = defaults.kind;
    	      this.languageCode = defaults.languageCode;
    	      this.name = defaults.name;
    	      this.parent = defaults.parent;
    	      this.redact = defaults.redact;
        }

        public Builder setAutoExpansionMode(@Nullable Input<String> autoExpansionMode) {
            this.autoExpansionMode = autoExpansionMode;
            return this;
        }

        public Builder setAutoExpansionMode(@Nullable String autoExpansionMode) {
            this.autoExpansionMode = Input.ofNullable(autoExpansionMode);
            return this;
        }

        public Builder setDisplayName(@Nullable Input<String> displayName) {
            this.displayName = displayName;
            return this;
        }

        public Builder setDisplayName(@Nullable String displayName) {
            this.displayName = Input.ofNullable(displayName);
            return this;
        }

        public Builder setEnableFuzzyExtraction(@Nullable Input<Boolean> enableFuzzyExtraction) {
            this.enableFuzzyExtraction = enableFuzzyExtraction;
            return this;
        }

        public Builder setEnableFuzzyExtraction(@Nullable Boolean enableFuzzyExtraction) {
            this.enableFuzzyExtraction = Input.ofNullable(enableFuzzyExtraction);
            return this;
        }

        public Builder setEntities(@Nullable Input<List<CxEntityTypeEntityGetArgs>> entities) {
            this.entities = entities;
            return this;
        }

        public Builder setEntities(@Nullable List<CxEntityTypeEntityGetArgs> entities) {
            this.entities = Input.ofNullable(entities);
            return this;
        }

        public Builder setExcludedPhrases(@Nullable Input<List<CxEntityTypeExcludedPhraseGetArgs>> excludedPhrases) {
            this.excludedPhrases = excludedPhrases;
            return this;
        }

        public Builder setExcludedPhrases(@Nullable List<CxEntityTypeExcludedPhraseGetArgs> excludedPhrases) {
            this.excludedPhrases = Input.ofNullable(excludedPhrases);
            return this;
        }

        public Builder setKind(@Nullable Input<String> kind) {
            this.kind = kind;
            return this;
        }

        public Builder setKind(@Nullable String kind) {
            this.kind = Input.ofNullable(kind);
            return this;
        }

        public Builder setLanguageCode(@Nullable Input<String> languageCode) {
            this.languageCode = languageCode;
            return this;
        }

        public Builder setLanguageCode(@Nullable String languageCode) {
            this.languageCode = Input.ofNullable(languageCode);
            return this;
        }

        public Builder setName(@Nullable Input<String> name) {
            this.name = name;
            return this;
        }

        public Builder setName(@Nullable String name) {
            this.name = Input.ofNullable(name);
            return this;
        }

        public Builder setParent(@Nullable Input<String> parent) {
            this.parent = parent;
            return this;
        }

        public Builder setParent(@Nullable String parent) {
            this.parent = Input.ofNullable(parent);
            return this;
        }

        public Builder setRedact(@Nullable Input<Boolean> redact) {
            this.redact = redact;
            return this;
        }

        public Builder setRedact(@Nullable Boolean redact) {
            this.redact = Input.ofNullable(redact);
            return this;
        }
        public CxEntityTypeState build() {
            return new CxEntityTypeState(autoExpansionMode, displayName, enableFuzzyExtraction, entities, excludedPhrases, kind, languageCode, name, parent, redact);
        }
    }
}
