// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.projects.inputs;

import io.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GetOrganizationPolicyArgs extends io.pulumi.resources.InvokeArgs {

    public static final GetOrganizationPolicyArgs Empty = new GetOrganizationPolicyArgs();

    /**
     * (Required) The name of the Constraint the Policy is configuring, for example, `serviceuser.services`. Check out the [complete list of available constraints](https://cloud.google.com/resource-manager/docs/organization-policy/understanding-constraints#available_constraints).
     * 
     */
    @Import(name="constraint", required=true)
      private final String constraint;

    public String constraint() {
        return this.constraint;
    }

    /**
     * The project ID.
     * 
     */
    @Import(name="project", required=true)
      private final String project;

    public String project() {
        return this.project;
    }

    public GetOrganizationPolicyArgs(
        String constraint,
        String project) {
        this.constraint = Objects.requireNonNull(constraint, "expected parameter 'constraint' to be non-null");
        this.project = Objects.requireNonNull(project, "expected parameter 'project' to be non-null");
    }

    private GetOrganizationPolicyArgs() {
        this.constraint = null;
        this.project = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetOrganizationPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String constraint;
        private String project;

        public Builder() {
    	      // Empty
        }

        public Builder(GetOrganizationPolicyArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.constraint = defaults.constraint;
    	      this.project = defaults.project;
        }

        public Builder constraint(String constraint) {
            this.constraint = Objects.requireNonNull(constraint);
            return this;
        }
        public Builder project(String project) {
            this.project = Objects.requireNonNull(project);
            return this;
        }        public GetOrganizationPolicyArgs build() {
            return new GetOrganizationPolicyArgs(constraint, project);
        }
    }
}
