// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.container.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.gcp.container.inputs.ClusterMasterAuthClientCertificateConfigGetArgs;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ClusterMasterAuthGetArgs extends io.pulumi.resources.ResourceArgs {

    public static final ClusterMasterAuthGetArgs Empty = new ClusterMasterAuthGetArgs();

    @Import(name="clientCertificate")
      private final @Nullable Output<String> clientCertificate;

    public Output<String> getClientCertificate() {
        return this.clientCertificate == null ? Output.empty() : this.clientCertificate;
    }

    /**
     * Whether client certificate authorization is enabled for this cluster.  For example:
     * 
     */
    @Import(name="clientCertificateConfig", required=true)
      private final Output<ClusterMasterAuthClientCertificateConfigGetArgs> clientCertificateConfig;

    public Output<ClusterMasterAuthClientCertificateConfigGetArgs> getClientCertificateConfig() {
        return this.clientCertificateConfig;
    }

    @Import(name="clientKey")
      private final @Nullable Output<String> clientKey;

    public Output<String> getClientKey() {
        return this.clientKey == null ? Output.empty() : this.clientKey;
    }

    @Import(name="clusterCaCertificate")
      private final @Nullable Output<String> clusterCaCertificate;

    public Output<String> getClusterCaCertificate() {
        return this.clusterCaCertificate == null ? Output.empty() : this.clusterCaCertificate;
    }

    public ClusterMasterAuthGetArgs(
        @Nullable Output<String> clientCertificate,
        Output<ClusterMasterAuthClientCertificateConfigGetArgs> clientCertificateConfig,
        @Nullable Output<String> clientKey,
        @Nullable Output<String> clusterCaCertificate) {
        this.clientCertificate = clientCertificate;
        this.clientCertificateConfig = Objects.requireNonNull(clientCertificateConfig, "expected parameter 'clientCertificateConfig' to be non-null");
        this.clientKey = clientKey;
        this.clusterCaCertificate = clusterCaCertificate;
    }

    private ClusterMasterAuthGetArgs() {
        this.clientCertificate = Output.empty();
        this.clientCertificateConfig = Output.empty();
        this.clientKey = Output.empty();
        this.clusterCaCertificate = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ClusterMasterAuthGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> clientCertificate;
        private Output<ClusterMasterAuthClientCertificateConfigGetArgs> clientCertificateConfig;
        private @Nullable Output<String> clientKey;
        private @Nullable Output<String> clusterCaCertificate;

        public Builder() {
    	      // Empty
        }

        public Builder(ClusterMasterAuthGetArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.clientCertificate = defaults.clientCertificate;
    	      this.clientCertificateConfig = defaults.clientCertificateConfig;
    	      this.clientKey = defaults.clientKey;
    	      this.clusterCaCertificate = defaults.clusterCaCertificate;
        }

        public Builder clientCertificate(@Nullable Output<String> clientCertificate) {
            this.clientCertificate = clientCertificate;
            return this;
        }
        public Builder clientCertificate(@Nullable String clientCertificate) {
            this.clientCertificate = Output.ofNullable(clientCertificate);
            return this;
        }
        public Builder clientCertificateConfig(Output<ClusterMasterAuthClientCertificateConfigGetArgs> clientCertificateConfig) {
            this.clientCertificateConfig = Objects.requireNonNull(clientCertificateConfig);
            return this;
        }
        public Builder clientCertificateConfig(ClusterMasterAuthClientCertificateConfigGetArgs clientCertificateConfig) {
            this.clientCertificateConfig = Output.of(Objects.requireNonNull(clientCertificateConfig));
            return this;
        }
        public Builder clientKey(@Nullable Output<String> clientKey) {
            this.clientKey = clientKey;
            return this;
        }
        public Builder clientKey(@Nullable String clientKey) {
            this.clientKey = Output.ofNullable(clientKey);
            return this;
        }
        public Builder clusterCaCertificate(@Nullable Output<String> clusterCaCertificate) {
            this.clusterCaCertificate = clusterCaCertificate;
            return this;
        }
        public Builder clusterCaCertificate(@Nullable String clusterCaCertificate) {
            this.clusterCaCertificate = Output.ofNullable(clusterCaCertificate);
            return this;
        }        public ClusterMasterAuthGetArgs build() {
            return new ClusterMasterAuthGetArgs(clientCertificate, clientCertificateConfig, clientKey, clusterCaCertificate);
        }
    }
}
