// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.cloudfunctions;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.InputImport;
import io.pulumi.gcp.cloudfunctions.inputs.FunctionEventTriggerArgs;
import io.pulumi.gcp.cloudfunctions.inputs.FunctionSourceRepositoryArgs;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class FunctionArgs extends io.pulumi.resources.ResourceArgs {

    public static final FunctionArgs Empty = new FunctionArgs();

    /**
     * Memory (in MB), available to the function. Default value is `256`. Possible values include `128`, `256`, `512`, `1024`, etc.
     * 
     */
    @InputImport(name="availableMemoryMb")
      private final @Nullable Output<Integer> availableMemoryMb;

    public Output<Integer> getAvailableMemoryMb() {
        return this.availableMemoryMb == null ? Output.empty() : this.availableMemoryMb;
    }

    /**
     * A set of key/value environment variable pairs available during build time.
     * 
     */
    @InputImport(name="buildEnvironmentVariables")
      private final @Nullable Output<Map<String,Object>> buildEnvironmentVariables;

    public Output<Map<String,Object>> getBuildEnvironmentVariables() {
        return this.buildEnvironmentVariables == null ? Output.empty() : this.buildEnvironmentVariables;
    }

    /**
     * Description of the function.
     * 
     */
    @InputImport(name="description")
      private final @Nullable Output<String> description;

    public Output<String> getDescription() {
        return this.description == null ? Output.empty() : this.description;
    }

    /**
     * Name of the function that will be executed when the Google Cloud Function is triggered.
     * 
     */
    @InputImport(name="entryPoint")
      private final @Nullable Output<String> entryPoint;

    public Output<String> getEntryPoint() {
        return this.entryPoint == null ? Output.empty() : this.entryPoint;
    }

    /**
     * A set of key/value environment variable pairs to assign to the function.
     * 
     */
    @InputImport(name="environmentVariables")
      private final @Nullable Output<Map<String,Object>> environmentVariables;

    public Output<Map<String,Object>> getEnvironmentVariables() {
        return this.environmentVariables == null ? Output.empty() : this.environmentVariables;
    }

    /**
     * A source that fires events in response to a condition in another service. Structure is documented below. Cannot be used with `trigger_http`.
     * 
     */
    @InputImport(name="eventTrigger")
      private final @Nullable Output<FunctionEventTriggerArgs> eventTrigger;

    public Output<FunctionEventTriggerArgs> getEventTrigger() {
        return this.eventTrigger == null ? Output.empty() : this.eventTrigger;
    }

    /**
     * URL which triggers function execution. Returned only if `trigger_http` is used.
     * 
     */
    @InputImport(name="httpsTriggerUrl")
      private final @Nullable Output<String> httpsTriggerUrl;

    public Output<String> getHttpsTriggerUrl() {
        return this.httpsTriggerUrl == null ? Output.empty() : this.httpsTriggerUrl;
    }

    /**
     * String value that controls what traffic can reach the function. Allowed values are `ALLOW_ALL`, `ALLOW_INTERNAL_AND_GCLB` and `ALLOW_INTERNAL_ONLY`. Check [ingress documentation](https://cloud.google.com/functions/docs/networking/network-settings#ingress_settings) to see the impact of each settings value. Changes to this field will recreate the cloud function.
     * 
     */
    @InputImport(name="ingressSettings")
      private final @Nullable Output<String> ingressSettings;

    public Output<String> getIngressSettings() {
        return this.ingressSettings == null ? Output.empty() : this.ingressSettings;
    }

    /**
     * A set of key/value label pairs to assign to the function. Label keys must follow the requirements at https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements.
     * 
     */
    @InputImport(name="labels")
      private final @Nullable Output<Map<String,Object>> labels;

    public Output<Map<String,Object>> getLabels() {
        return this.labels == null ? Output.empty() : this.labels;
    }

    /**
     * The limit on the maximum number of function instances that may coexist at a given time.
     * 
     */
    @InputImport(name="maxInstances")
      private final @Nullable Output<Integer> maxInstances;

    public Output<Integer> getMaxInstances() {
        return this.maxInstances == null ? Output.empty() : this.maxInstances;
    }

    /**
     * The limit on the minimum number of function instances that may coexist at a given time.
     * 
     */
    @InputImport(name="minInstances")
      private final @Nullable Output<Integer> minInstances;

    public Output<Integer> getMinInstances() {
        return this.minInstances == null ? Output.empty() : this.minInstances;
    }

    /**
     * A user-defined name of the function. Function names must be unique globally.
     * 
     */
    @InputImport(name="name")
      private final @Nullable Output<String> name;

    public Output<String> getName() {
        return this.name == null ? Output.empty() : this.name;
    }

    /**
     * Project of the function. If it is not provided, the provider project is used.
     * 
     */
    @InputImport(name="project")
      private final @Nullable Output<String> project;

    public Output<String> getProject() {
        return this.project == null ? Output.empty() : this.project;
    }

    /**
     * Region of function. If it is not provided, the provider region is used.
     * 
     */
    @InputImport(name="region")
      private final @Nullable Output<String> region;

    public Output<String> getRegion() {
        return this.region == null ? Output.empty() : this.region;
    }

    /**
     * The runtime in which the function is going to run.
     * Eg. `"nodejs10"`, `"nodejs12"`, `"nodejs14"`, `"python37"`, `"python38"`, `"python39"`, `"dotnet3"`, `"go113"`, `"java11"`, `"ruby27"`, etc. Check the [official doc](https://cloud.google.com/functions/docs/concepts/exec#runtimes) for the up-to-date list.
     * 
     */
    @InputImport(name="runtime", required=true)
      private final Output<String> runtime;

    public Output<String> getRuntime() {
        return this.runtime;
    }

    /**
     * If provided, the self-provided service account to run the function with.
     * 
     */
    @InputImport(name="serviceAccountEmail")
      private final @Nullable Output<String> serviceAccountEmail;

    public Output<String> getServiceAccountEmail() {
        return this.serviceAccountEmail == null ? Output.empty() : this.serviceAccountEmail;
    }

    /**
     * The GCS bucket containing the zip archive which contains the function.
     * 
     */
    @InputImport(name="sourceArchiveBucket")
      private final @Nullable Output<String> sourceArchiveBucket;

    public Output<String> getSourceArchiveBucket() {
        return this.sourceArchiveBucket == null ? Output.empty() : this.sourceArchiveBucket;
    }

    /**
     * The source archive object (file) in archive bucket.
     * 
     */
    @InputImport(name="sourceArchiveObject")
      private final @Nullable Output<String> sourceArchiveObject;

    public Output<String> getSourceArchiveObject() {
        return this.sourceArchiveObject == null ? Output.empty() : this.sourceArchiveObject;
    }

    /**
     * Represents parameters related to source repository where a function is hosted.
     * Cannot be set alongside `source_archive_bucket` or `source_archive_object`. Structure is documented below.
     * 
     */
    @InputImport(name="sourceRepository")
      private final @Nullable Output<FunctionSourceRepositoryArgs> sourceRepository;

    public Output<FunctionSourceRepositoryArgs> getSourceRepository() {
        return this.sourceRepository == null ? Output.empty() : this.sourceRepository;
    }

    /**
     * Timeout (in seconds) for the function. Default value is 60 seconds. Cannot be more than 540 seconds.
     * 
     */
    @InputImport(name="timeout")
      private final @Nullable Output<Integer> timeout;

    public Output<Integer> getTimeout() {
        return this.timeout == null ? Output.empty() : this.timeout;
    }

    /**
     * Boolean variable. Any HTTP request (of a supported type) to the endpoint will trigger function execution. Supported HTTP request types are: POST, PUT, GET, DELETE, and OPTIONS. Endpoint is returned as `https_trigger_url`. Cannot be used with `event_trigger`.
     * 
     */
    @InputImport(name="triggerHttp")
      private final @Nullable Output<Boolean> triggerHttp;

    public Output<Boolean> getTriggerHttp() {
        return this.triggerHttp == null ? Output.empty() : this.triggerHttp;
    }

    /**
     * The VPC Network Connector that this cloud function can connect to. It should be set up as fully-qualified URI. The format of this field is `projects/*{@literal /}locations/*{@literal /}connectors/*`.
     * 
     */
    @InputImport(name="vpcConnector")
      private final @Nullable Output<String> vpcConnector;

    public Output<String> getVpcConnector() {
        return this.vpcConnector == null ? Output.empty() : this.vpcConnector;
    }

    /**
     * The egress settings for the connector, controlling what traffic is diverted through it. Allowed values are `ALL_TRAFFIC` and `PRIVATE_RANGES_ONLY`. Defaults to `PRIVATE_RANGES_ONLY`. If unset, this field preserves the previously set value.
     * 
     */
    @InputImport(name="vpcConnectorEgressSettings")
      private final @Nullable Output<String> vpcConnectorEgressSettings;

    public Output<String> getVpcConnectorEgressSettings() {
        return this.vpcConnectorEgressSettings == null ? Output.empty() : this.vpcConnectorEgressSettings;
    }

    public FunctionArgs(
        @Nullable Output<Integer> availableMemoryMb,
        @Nullable Output<Map<String,Object>> buildEnvironmentVariables,
        @Nullable Output<String> description,
        @Nullable Output<String> entryPoint,
        @Nullable Output<Map<String,Object>> environmentVariables,
        @Nullable Output<FunctionEventTriggerArgs> eventTrigger,
        @Nullable Output<String> httpsTriggerUrl,
        @Nullable Output<String> ingressSettings,
        @Nullable Output<Map<String,Object>> labels,
        @Nullable Output<Integer> maxInstances,
        @Nullable Output<Integer> minInstances,
        @Nullable Output<String> name,
        @Nullable Output<String> project,
        @Nullable Output<String> region,
        Output<String> runtime,
        @Nullable Output<String> serviceAccountEmail,
        @Nullable Output<String> sourceArchiveBucket,
        @Nullable Output<String> sourceArchiveObject,
        @Nullable Output<FunctionSourceRepositoryArgs> sourceRepository,
        @Nullable Output<Integer> timeout,
        @Nullable Output<Boolean> triggerHttp,
        @Nullable Output<String> vpcConnector,
        @Nullable Output<String> vpcConnectorEgressSettings) {
        this.availableMemoryMb = availableMemoryMb;
        this.buildEnvironmentVariables = buildEnvironmentVariables;
        this.description = description;
        this.entryPoint = entryPoint;
        this.environmentVariables = environmentVariables;
        this.eventTrigger = eventTrigger;
        this.httpsTriggerUrl = httpsTriggerUrl;
        this.ingressSettings = ingressSettings;
        this.labels = labels;
        this.maxInstances = maxInstances;
        this.minInstances = minInstances;
        this.name = name;
        this.project = project;
        this.region = region;
        this.runtime = Objects.requireNonNull(runtime, "expected parameter 'runtime' to be non-null");
        this.serviceAccountEmail = serviceAccountEmail;
        this.sourceArchiveBucket = sourceArchiveBucket;
        this.sourceArchiveObject = sourceArchiveObject;
        this.sourceRepository = sourceRepository;
        this.timeout = timeout;
        this.triggerHttp = triggerHttp;
        this.vpcConnector = vpcConnector;
        this.vpcConnectorEgressSettings = vpcConnectorEgressSettings;
    }

    private FunctionArgs() {
        this.availableMemoryMb = Output.empty();
        this.buildEnvironmentVariables = Output.empty();
        this.description = Output.empty();
        this.entryPoint = Output.empty();
        this.environmentVariables = Output.empty();
        this.eventTrigger = Output.empty();
        this.httpsTriggerUrl = Output.empty();
        this.ingressSettings = Output.empty();
        this.labels = Output.empty();
        this.maxInstances = Output.empty();
        this.minInstances = Output.empty();
        this.name = Output.empty();
        this.project = Output.empty();
        this.region = Output.empty();
        this.runtime = Output.empty();
        this.serviceAccountEmail = Output.empty();
        this.sourceArchiveBucket = Output.empty();
        this.sourceArchiveObject = Output.empty();
        this.sourceRepository = Output.empty();
        this.timeout = Output.empty();
        this.triggerHttp = Output.empty();
        this.vpcConnector = Output.empty();
        this.vpcConnectorEgressSettings = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FunctionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<Integer> availableMemoryMb;
        private @Nullable Output<Map<String,Object>> buildEnvironmentVariables;
        private @Nullable Output<String> description;
        private @Nullable Output<String> entryPoint;
        private @Nullable Output<Map<String,Object>> environmentVariables;
        private @Nullable Output<FunctionEventTriggerArgs> eventTrigger;
        private @Nullable Output<String> httpsTriggerUrl;
        private @Nullable Output<String> ingressSettings;
        private @Nullable Output<Map<String,Object>> labels;
        private @Nullable Output<Integer> maxInstances;
        private @Nullable Output<Integer> minInstances;
        private @Nullable Output<String> name;
        private @Nullable Output<String> project;
        private @Nullable Output<String> region;
        private Output<String> runtime;
        private @Nullable Output<String> serviceAccountEmail;
        private @Nullable Output<String> sourceArchiveBucket;
        private @Nullable Output<String> sourceArchiveObject;
        private @Nullable Output<FunctionSourceRepositoryArgs> sourceRepository;
        private @Nullable Output<Integer> timeout;
        private @Nullable Output<Boolean> triggerHttp;
        private @Nullable Output<String> vpcConnector;
        private @Nullable Output<String> vpcConnectorEgressSettings;

        public Builder() {
    	      // Empty
        }

        public Builder(FunctionArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.availableMemoryMb = defaults.availableMemoryMb;
    	      this.buildEnvironmentVariables = defaults.buildEnvironmentVariables;
    	      this.description = defaults.description;
    	      this.entryPoint = defaults.entryPoint;
    	      this.environmentVariables = defaults.environmentVariables;
    	      this.eventTrigger = defaults.eventTrigger;
    	      this.httpsTriggerUrl = defaults.httpsTriggerUrl;
    	      this.ingressSettings = defaults.ingressSettings;
    	      this.labels = defaults.labels;
    	      this.maxInstances = defaults.maxInstances;
    	      this.minInstances = defaults.minInstances;
    	      this.name = defaults.name;
    	      this.project = defaults.project;
    	      this.region = defaults.region;
    	      this.runtime = defaults.runtime;
    	      this.serviceAccountEmail = defaults.serviceAccountEmail;
    	      this.sourceArchiveBucket = defaults.sourceArchiveBucket;
    	      this.sourceArchiveObject = defaults.sourceArchiveObject;
    	      this.sourceRepository = defaults.sourceRepository;
    	      this.timeout = defaults.timeout;
    	      this.triggerHttp = defaults.triggerHttp;
    	      this.vpcConnector = defaults.vpcConnector;
    	      this.vpcConnectorEgressSettings = defaults.vpcConnectorEgressSettings;
        }

        public Builder availableMemoryMb(@Nullable Output<Integer> availableMemoryMb) {
            this.availableMemoryMb = availableMemoryMb;
            return this;
        }

        public Builder availableMemoryMb(@Nullable Integer availableMemoryMb) {
            this.availableMemoryMb = Output.ofNullable(availableMemoryMb);
            return this;
        }

        public Builder buildEnvironmentVariables(@Nullable Output<Map<String,Object>> buildEnvironmentVariables) {
            this.buildEnvironmentVariables = buildEnvironmentVariables;
            return this;
        }

        public Builder buildEnvironmentVariables(@Nullable Map<String,Object> buildEnvironmentVariables) {
            this.buildEnvironmentVariables = Output.ofNullable(buildEnvironmentVariables);
            return this;
        }

        public Builder description(@Nullable Output<String> description) {
            this.description = description;
            return this;
        }

        public Builder description(@Nullable String description) {
            this.description = Output.ofNullable(description);
            return this;
        }

        public Builder entryPoint(@Nullable Output<String> entryPoint) {
            this.entryPoint = entryPoint;
            return this;
        }

        public Builder entryPoint(@Nullable String entryPoint) {
            this.entryPoint = Output.ofNullable(entryPoint);
            return this;
        }

        public Builder environmentVariables(@Nullable Output<Map<String,Object>> environmentVariables) {
            this.environmentVariables = environmentVariables;
            return this;
        }

        public Builder environmentVariables(@Nullable Map<String,Object> environmentVariables) {
            this.environmentVariables = Output.ofNullable(environmentVariables);
            return this;
        }

        public Builder eventTrigger(@Nullable Output<FunctionEventTriggerArgs> eventTrigger) {
            this.eventTrigger = eventTrigger;
            return this;
        }

        public Builder eventTrigger(@Nullable FunctionEventTriggerArgs eventTrigger) {
            this.eventTrigger = Output.ofNullable(eventTrigger);
            return this;
        }

        public Builder httpsTriggerUrl(@Nullable Output<String> httpsTriggerUrl) {
            this.httpsTriggerUrl = httpsTriggerUrl;
            return this;
        }

        public Builder httpsTriggerUrl(@Nullable String httpsTriggerUrl) {
            this.httpsTriggerUrl = Output.ofNullable(httpsTriggerUrl);
            return this;
        }

        public Builder ingressSettings(@Nullable Output<String> ingressSettings) {
            this.ingressSettings = ingressSettings;
            return this;
        }

        public Builder ingressSettings(@Nullable String ingressSettings) {
            this.ingressSettings = Output.ofNullable(ingressSettings);
            return this;
        }

        public Builder labels(@Nullable Output<Map<String,Object>> labels) {
            this.labels = labels;
            return this;
        }

        public Builder labels(@Nullable Map<String,Object> labels) {
            this.labels = Output.ofNullable(labels);
            return this;
        }

        public Builder maxInstances(@Nullable Output<Integer> maxInstances) {
            this.maxInstances = maxInstances;
            return this;
        }

        public Builder maxInstances(@Nullable Integer maxInstances) {
            this.maxInstances = Output.ofNullable(maxInstances);
            return this;
        }

        public Builder minInstances(@Nullable Output<Integer> minInstances) {
            this.minInstances = minInstances;
            return this;
        }

        public Builder minInstances(@Nullable Integer minInstances) {
            this.minInstances = Output.ofNullable(minInstances);
            return this;
        }

        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }

        public Builder name(@Nullable String name) {
            this.name = Output.ofNullable(name);
            return this;
        }

        public Builder project(@Nullable Output<String> project) {
            this.project = project;
            return this;
        }

        public Builder project(@Nullable String project) {
            this.project = Output.ofNullable(project);
            return this;
        }

        public Builder region(@Nullable Output<String> region) {
            this.region = region;
            return this;
        }

        public Builder region(@Nullable String region) {
            this.region = Output.ofNullable(region);
            return this;
        }

        public Builder runtime(Output<String> runtime) {
            this.runtime = Objects.requireNonNull(runtime);
            return this;
        }

        public Builder runtime(String runtime) {
            this.runtime = Output.of(Objects.requireNonNull(runtime));
            return this;
        }

        public Builder serviceAccountEmail(@Nullable Output<String> serviceAccountEmail) {
            this.serviceAccountEmail = serviceAccountEmail;
            return this;
        }

        public Builder serviceAccountEmail(@Nullable String serviceAccountEmail) {
            this.serviceAccountEmail = Output.ofNullable(serviceAccountEmail);
            return this;
        }

        public Builder sourceArchiveBucket(@Nullable Output<String> sourceArchiveBucket) {
            this.sourceArchiveBucket = sourceArchiveBucket;
            return this;
        }

        public Builder sourceArchiveBucket(@Nullable String sourceArchiveBucket) {
            this.sourceArchiveBucket = Output.ofNullable(sourceArchiveBucket);
            return this;
        }

        public Builder sourceArchiveObject(@Nullable Output<String> sourceArchiveObject) {
            this.sourceArchiveObject = sourceArchiveObject;
            return this;
        }

        public Builder sourceArchiveObject(@Nullable String sourceArchiveObject) {
            this.sourceArchiveObject = Output.ofNullable(sourceArchiveObject);
            return this;
        }

        public Builder sourceRepository(@Nullable Output<FunctionSourceRepositoryArgs> sourceRepository) {
            this.sourceRepository = sourceRepository;
            return this;
        }

        public Builder sourceRepository(@Nullable FunctionSourceRepositoryArgs sourceRepository) {
            this.sourceRepository = Output.ofNullable(sourceRepository);
            return this;
        }

        public Builder timeout(@Nullable Output<Integer> timeout) {
            this.timeout = timeout;
            return this;
        }

        public Builder timeout(@Nullable Integer timeout) {
            this.timeout = Output.ofNullable(timeout);
            return this;
        }

        public Builder triggerHttp(@Nullable Output<Boolean> triggerHttp) {
            this.triggerHttp = triggerHttp;
            return this;
        }

        public Builder triggerHttp(@Nullable Boolean triggerHttp) {
            this.triggerHttp = Output.ofNullable(triggerHttp);
            return this;
        }

        public Builder vpcConnector(@Nullable Output<String> vpcConnector) {
            this.vpcConnector = vpcConnector;
            return this;
        }

        public Builder vpcConnector(@Nullable String vpcConnector) {
            this.vpcConnector = Output.ofNullable(vpcConnector);
            return this;
        }

        public Builder vpcConnectorEgressSettings(@Nullable Output<String> vpcConnectorEgressSettings) {
            this.vpcConnectorEgressSettings = vpcConnectorEgressSettings;
            return this;
        }

        public Builder vpcConnectorEgressSettings(@Nullable String vpcConnectorEgressSettings) {
            this.vpcConnectorEgressSettings = Output.ofNullable(vpcConnectorEgressSettings);
            return this;
        }
        public FunctionArgs build() {
            return new FunctionArgs(availableMemoryMb, buildEnvironmentVariables, description, entryPoint, environmentVariables, eventTrigger, httpsTriggerUrl, ingressSettings, labels, maxInstances, minInstances, name, project, region, runtime, serviceAccountEmail, sourceArchiveBucket, sourceArchiveObject, sourceRepository, timeout, triggerHttp, vpcConnector, vpcConnectorEgressSettings);
        }
    }
}
