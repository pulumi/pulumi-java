// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.dataproc.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import io.pulumi.gcp.dataproc.outputs.WorkflowTemplatePlacementManagedClusterConfigSecondaryWorkerConfigAccelerator;
import io.pulumi.gcp.dataproc.outputs.WorkflowTemplatePlacementManagedClusterConfigSecondaryWorkerConfigDiskConfig;
import io.pulumi.gcp.dataproc.outputs.WorkflowTemplatePlacementManagedClusterConfigSecondaryWorkerConfigManagedGroupConfig;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class WorkflowTemplatePlacementManagedClusterConfigSecondaryWorkerConfig {
    private final @Nullable List<WorkflowTemplatePlacementManagedClusterConfigSecondaryWorkerConfigAccelerator> accelerators;
    private final @Nullable WorkflowTemplatePlacementManagedClusterConfigSecondaryWorkerConfigDiskConfig diskConfig;
    private final @Nullable String image;
    private final @Nullable List<String> instanceNames;
    private final @Nullable Boolean isPreemptible;
    private final @Nullable String machineType;
    private final @Nullable List<WorkflowTemplatePlacementManagedClusterConfigSecondaryWorkerConfigManagedGroupConfig> managedGroupConfigs;
    private final @Nullable String minCpuPlatform;
    private final @Nullable Integer numInstances;
    private final @Nullable String preemptibility;

    @OutputCustomType.Constructor({"accelerators","diskConfig","image","instanceNames","isPreemptible","machineType","managedGroupConfigs","minCpuPlatform","numInstances","preemptibility"})
    private WorkflowTemplatePlacementManagedClusterConfigSecondaryWorkerConfig(
        @Nullable List<WorkflowTemplatePlacementManagedClusterConfigSecondaryWorkerConfigAccelerator> accelerators,
        @Nullable WorkflowTemplatePlacementManagedClusterConfigSecondaryWorkerConfigDiskConfig diskConfig,
        @Nullable String image,
        @Nullable List<String> instanceNames,
        @Nullable Boolean isPreemptible,
        @Nullable String machineType,
        @Nullable List<WorkflowTemplatePlacementManagedClusterConfigSecondaryWorkerConfigManagedGroupConfig> managedGroupConfigs,
        @Nullable String minCpuPlatform,
        @Nullable Integer numInstances,
        @Nullable String preemptibility) {
        this.accelerators = accelerators;
        this.diskConfig = diskConfig;
        this.image = image;
        this.instanceNames = instanceNames;
        this.isPreemptible = isPreemptible;
        this.machineType = machineType;
        this.managedGroupConfigs = managedGroupConfigs;
        this.minCpuPlatform = minCpuPlatform;
        this.numInstances = numInstances;
        this.preemptibility = preemptibility;
    }

    public List<WorkflowTemplatePlacementManagedClusterConfigSecondaryWorkerConfigAccelerator> getAccelerators() {
        return this.accelerators == null ? List.of() : this.accelerators;
    }
    public Optional<WorkflowTemplatePlacementManagedClusterConfigSecondaryWorkerConfigDiskConfig> getDiskConfig() {
        return Optional.ofNullable(this.diskConfig);
    }
    public Optional<String> getImage() {
        return Optional.ofNullable(this.image);
    }
    public List<String> getInstanceNames() {
        return this.instanceNames == null ? List.of() : this.instanceNames;
    }
    public Optional<Boolean> getIsPreemptible() {
        return Optional.ofNullable(this.isPreemptible);
    }
    public Optional<String> getMachineType() {
        return Optional.ofNullable(this.machineType);
    }
    public List<WorkflowTemplatePlacementManagedClusterConfigSecondaryWorkerConfigManagedGroupConfig> getManagedGroupConfigs() {
        return this.managedGroupConfigs == null ? List.of() : this.managedGroupConfigs;
    }
    public Optional<String> getMinCpuPlatform() {
        return Optional.ofNullable(this.minCpuPlatform);
    }
    public Optional<Integer> getNumInstances() {
        return Optional.ofNullable(this.numInstances);
    }
    public Optional<String> getPreemptibility() {
        return Optional.ofNullable(this.preemptibility);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(WorkflowTemplatePlacementManagedClusterConfigSecondaryWorkerConfig defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable List<WorkflowTemplatePlacementManagedClusterConfigSecondaryWorkerConfigAccelerator> accelerators;
        private @Nullable WorkflowTemplatePlacementManagedClusterConfigSecondaryWorkerConfigDiskConfig diskConfig;
        private @Nullable String image;
        private @Nullable List<String> instanceNames;
        private @Nullable Boolean isPreemptible;
        private @Nullable String machineType;
        private @Nullable List<WorkflowTemplatePlacementManagedClusterConfigSecondaryWorkerConfigManagedGroupConfig> managedGroupConfigs;
        private @Nullable String minCpuPlatform;
        private @Nullable Integer numInstances;
        private @Nullable String preemptibility;

        public Builder() {
    	      // Empty
        }

        public Builder(WorkflowTemplatePlacementManagedClusterConfigSecondaryWorkerConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accelerators = defaults.accelerators;
    	      this.diskConfig = defaults.diskConfig;
    	      this.image = defaults.image;
    	      this.instanceNames = defaults.instanceNames;
    	      this.isPreemptible = defaults.isPreemptible;
    	      this.machineType = defaults.machineType;
    	      this.managedGroupConfigs = defaults.managedGroupConfigs;
    	      this.minCpuPlatform = defaults.minCpuPlatform;
    	      this.numInstances = defaults.numInstances;
    	      this.preemptibility = defaults.preemptibility;
        }

        public Builder setAccelerators(@Nullable List<WorkflowTemplatePlacementManagedClusterConfigSecondaryWorkerConfigAccelerator> accelerators) {
            this.accelerators = accelerators;
            return this;
        }

        public Builder setDiskConfig(@Nullable WorkflowTemplatePlacementManagedClusterConfigSecondaryWorkerConfigDiskConfig diskConfig) {
            this.diskConfig = diskConfig;
            return this;
        }

        public Builder setImage(@Nullable String image) {
            this.image = image;
            return this;
        }

        public Builder setInstanceNames(@Nullable List<String> instanceNames) {
            this.instanceNames = instanceNames;
            return this;
        }

        public Builder setIsPreemptible(@Nullable Boolean isPreemptible) {
            this.isPreemptible = isPreemptible;
            return this;
        }

        public Builder setMachineType(@Nullable String machineType) {
            this.machineType = machineType;
            return this;
        }

        public Builder setManagedGroupConfigs(@Nullable List<WorkflowTemplatePlacementManagedClusterConfigSecondaryWorkerConfigManagedGroupConfig> managedGroupConfigs) {
            this.managedGroupConfigs = managedGroupConfigs;
            return this;
        }

        public Builder setMinCpuPlatform(@Nullable String minCpuPlatform) {
            this.minCpuPlatform = minCpuPlatform;
            return this;
        }

        public Builder setNumInstances(@Nullable Integer numInstances) {
            this.numInstances = numInstances;
            return this;
        }

        public Builder setPreemptibility(@Nullable String preemptibility) {
            this.preemptibility = preemptibility;
            return this;
        }

        public WorkflowTemplatePlacementManagedClusterConfigSecondaryWorkerConfig build() {
            return new WorkflowTemplatePlacementManagedClusterConfigSecondaryWorkerConfig(accelerators, diskConfig, image, instanceNames, isPreemptible, machineType, managedGroupConfigs, minCpuPlatform, numInstances, preemptibility);
        }
    }
}
