// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.memcache.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.Integer;
import java.util.Objects;


public final class InstanceNodeConfigArgs extends io.pulumi.resources.ResourceArgs {

    public static final InstanceNodeConfigArgs Empty = new InstanceNodeConfigArgs();

    /**
     * Number of CPUs per node.
     * 
     */
    @InputImport(name="cpuCount", required=true)
    private final Input<Integer> cpuCount;

    public Input<Integer> getCpuCount() {
        return this.cpuCount;
    }

    /**
     * Memory size in Mebibytes for each memcache node.
     * 
     */
    @InputImport(name="memorySizeMb", required=true)
    private final Input<Integer> memorySizeMb;

    public Input<Integer> getMemorySizeMb() {
        return this.memorySizeMb;
    }

    public InstanceNodeConfigArgs(
        Input<Integer> cpuCount,
        Input<Integer> memorySizeMb) {
        this.cpuCount = Objects.requireNonNull(cpuCount, "expected parameter 'cpuCount' to be non-null");
        this.memorySizeMb = Objects.requireNonNull(memorySizeMb, "expected parameter 'memorySizeMb' to be non-null");
    }

    private InstanceNodeConfigArgs() {
        this.cpuCount = Input.empty();
        this.memorySizeMb = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(InstanceNodeConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<Integer> cpuCount;
        private Input<Integer> memorySizeMb;

        public Builder() {
    	      // Empty
        }

        public Builder(InstanceNodeConfigArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cpuCount = defaults.cpuCount;
    	      this.memorySizeMb = defaults.memorySizeMb;
        }

        public Builder setCpuCount(Input<Integer> cpuCount) {
            this.cpuCount = Objects.requireNonNull(cpuCount);
            return this;
        }

        public Builder setCpuCount(Integer cpuCount) {
            this.cpuCount = Input.of(Objects.requireNonNull(cpuCount));
            return this;
        }

        public Builder setMemorySizeMb(Input<Integer> memorySizeMb) {
            this.memorySizeMb = Objects.requireNonNull(memorySizeMb);
            return this;
        }

        public Builder setMemorySizeMb(Integer memorySizeMb) {
            this.memorySizeMb = Input.of(Objects.requireNonNull(memorySizeMb));
            return this;
        }

        public InstanceNodeConfigArgs build() {
            return new InstanceNodeConfigArgs(cpuCount, memorySizeMb);
        }
    }
}
