// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.container.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.InputImport;
import io.pulumi.gcp.container.inputs.AzureNodePoolAutoscalingGetArgs;
import io.pulumi.gcp.container.inputs.AzureNodePoolConfigGetArgs;
import io.pulumi.gcp.container.inputs.AzureNodePoolMaxPodsConstraintGetArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class AzureNodePoolState extends io.pulumi.resources.ResourceArgs {

    public static final AzureNodePoolState Empty = new AzureNodePoolState();

    /**
     * Optional. Annotations on the node pool. This field has the same restrictions as Kubernetes annotations. The total size of all keys and values combined is limited to 256k. Keys can have 2 segments: prefix (optional) and name (required), separated by a slash (/). Prefix must be a DNS subdomain. Name must be 63 characters or less, begin and end with alphanumerics, with dashes (-), underscores (_), dots (.), and alphanumerics between.
     * 
     */
    @InputImport(name="annotations")
      private final @Nullable Output<Map<String,String>> annotations;

    public Output<Map<String,String>> getAnnotations() {
        return this.annotations == null ? Output.empty() : this.annotations;
    }

    /**
     * Required. Autoscaler configuration for this node pool.
     * 
     */
    @InputImport(name="autoscaling")
      private final @Nullable Output<AzureNodePoolAutoscalingGetArgs> autoscaling;

    public Output<AzureNodePoolAutoscalingGetArgs> getAutoscaling() {
        return this.autoscaling == null ? Output.empty() : this.autoscaling;
    }

    /**
     * Optional. The Azure availability zone of the nodes in this nodepool. When unspecified, it defaults to `1`.
     * 
     */
    @InputImport(name="azureAvailabilityZone")
      private final @Nullable Output<String> azureAvailabilityZone;

    public Output<String> getAzureAvailabilityZone() {
        return this.azureAvailabilityZone == null ? Output.empty() : this.azureAvailabilityZone;
    }

    /**
     * The azureCluster for the resource
     * 
     */
    @InputImport(name="cluster")
      private final @Nullable Output<String> cluster;

    public Output<String> getCluster() {
        return this.cluster == null ? Output.empty() : this.cluster;
    }

    /**
     * Required. The node configuration of the node pool.
     * 
     */
    @InputImport(name="config")
      private final @Nullable Output<AzureNodePoolConfigGetArgs> config;

    public Output<AzureNodePoolConfigGetArgs> getConfig() {
        return this.config == null ? Output.empty() : this.config;
    }

    /**
     * Output only. The time at which this node pool was created.
     * 
     */
    @InputImport(name="createTime")
      private final @Nullable Output<String> createTime;

    public Output<String> getCreateTime() {
        return this.createTime == null ? Output.empty() : this.createTime;
    }

    /**
     * Allows clients to perform consistent read-modify-writes through optimistic concurrency control. May be sent on update
     * and delete requests to ensure the client has an up-to-date value before proceeding.
     * 
     */
    @InputImport(name="etag")
      private final @Nullable Output<String> etag;

    public Output<String> getEtag() {
        return this.etag == null ? Output.empty() : this.etag;
    }

    /**
     * The location for the resource
     * 
     */
    @InputImport(name="location")
      private final @Nullable Output<String> location;

    public Output<String> getLocation() {
        return this.location == null ? Output.empty() : this.location;
    }

    /**
     * Required. The constraint on the maximum number of pods that can be run simultaneously on a node in the node pool.
     * 
     */
    @InputImport(name="maxPodsConstraint")
      private final @Nullable Output<AzureNodePoolMaxPodsConstraintGetArgs> maxPodsConstraint;

    public Output<AzureNodePoolMaxPodsConstraintGetArgs> getMaxPodsConstraint() {
        return this.maxPodsConstraint == null ? Output.empty() : this.maxPodsConstraint;
    }

    /**
     * The name of this resource.
     * 
     */
    @InputImport(name="name")
      private final @Nullable Output<String> name;

    public Output<String> getName() {
        return this.name == null ? Output.empty() : this.name;
    }

    /**
     * The project for the resource
     * 
     */
    @InputImport(name="project")
      private final @Nullable Output<String> project;

    public Output<String> getProject() {
        return this.project == null ? Output.empty() : this.project;
    }

    /**
     * Output only. If set, there are currently pending changes to the node pool.
     * 
     */
    @InputImport(name="reconciling")
      private final @Nullable Output<Boolean> reconciling;

    public Output<Boolean> getReconciling() {
        return this.reconciling == null ? Output.empty() : this.reconciling;
    }

    /**
     * Output only. The current state of the node pool. Possible values: STATE_UNSPECIFIED, PROVISIONING, RUNNING, RECONCILING,
     * STOPPING, ERROR, DEGRADED
     * 
     */
    @InputImport(name="state")
      private final @Nullable Output<String> state;

    public Output<String> getState() {
        return this.state == null ? Output.empty() : this.state;
    }

    /**
     * Required. The ARM ID of the subnet where the node pool VMs run. Make sure it's a subnet under the virtual network in the cluster configuration.
     * 
     */
    @InputImport(name="subnetId")
      private final @Nullable Output<String> subnetId;

    public Output<String> getSubnetId() {
        return this.subnetId == null ? Output.empty() : this.subnetId;
    }

    /**
     * Output only. A globally unique identifier for the node pool.
     * 
     */
    @InputImport(name="uid")
      private final @Nullable Output<String> uid;

    public Output<String> getUid() {
        return this.uid == null ? Output.empty() : this.uid;
    }

    /**
     * Output only. The time at which this node pool was last updated.
     * 
     */
    @InputImport(name="updateTime")
      private final @Nullable Output<String> updateTime;

    public Output<String> getUpdateTime() {
        return this.updateTime == null ? Output.empty() : this.updateTime;
    }

    /**
     * Required. The Kubernetes version (e.g. `1.19.10-gke.1000`) running on this node pool.
     * 
     */
    @InputImport(name="version")
      private final @Nullable Output<String> version;

    public Output<String> getVersion() {
        return this.version == null ? Output.empty() : this.version;
    }

    public AzureNodePoolState(
        @Nullable Output<Map<String,String>> annotations,
        @Nullable Output<AzureNodePoolAutoscalingGetArgs> autoscaling,
        @Nullable Output<String> azureAvailabilityZone,
        @Nullable Output<String> cluster,
        @Nullable Output<AzureNodePoolConfigGetArgs> config,
        @Nullable Output<String> createTime,
        @Nullable Output<String> etag,
        @Nullable Output<String> location,
        @Nullable Output<AzureNodePoolMaxPodsConstraintGetArgs> maxPodsConstraint,
        @Nullable Output<String> name,
        @Nullable Output<String> project,
        @Nullable Output<Boolean> reconciling,
        @Nullable Output<String> state,
        @Nullable Output<String> subnetId,
        @Nullable Output<String> uid,
        @Nullable Output<String> updateTime,
        @Nullable Output<String> version) {
        this.annotations = annotations;
        this.autoscaling = autoscaling;
        this.azureAvailabilityZone = azureAvailabilityZone;
        this.cluster = cluster;
        this.config = config;
        this.createTime = createTime;
        this.etag = etag;
        this.location = location;
        this.maxPodsConstraint = maxPodsConstraint;
        this.name = name;
        this.project = project;
        this.reconciling = reconciling;
        this.state = state;
        this.subnetId = subnetId;
        this.uid = uid;
        this.updateTime = updateTime;
        this.version = version;
    }

    private AzureNodePoolState() {
        this.annotations = Output.empty();
        this.autoscaling = Output.empty();
        this.azureAvailabilityZone = Output.empty();
        this.cluster = Output.empty();
        this.config = Output.empty();
        this.createTime = Output.empty();
        this.etag = Output.empty();
        this.location = Output.empty();
        this.maxPodsConstraint = Output.empty();
        this.name = Output.empty();
        this.project = Output.empty();
        this.reconciling = Output.empty();
        this.state = Output.empty();
        this.subnetId = Output.empty();
        this.uid = Output.empty();
        this.updateTime = Output.empty();
        this.version = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AzureNodePoolState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<Map<String,String>> annotations;
        private @Nullable Output<AzureNodePoolAutoscalingGetArgs> autoscaling;
        private @Nullable Output<String> azureAvailabilityZone;
        private @Nullable Output<String> cluster;
        private @Nullable Output<AzureNodePoolConfigGetArgs> config;
        private @Nullable Output<String> createTime;
        private @Nullable Output<String> etag;
        private @Nullable Output<String> location;
        private @Nullable Output<AzureNodePoolMaxPodsConstraintGetArgs> maxPodsConstraint;
        private @Nullable Output<String> name;
        private @Nullable Output<String> project;
        private @Nullable Output<Boolean> reconciling;
        private @Nullable Output<String> state;
        private @Nullable Output<String> subnetId;
        private @Nullable Output<String> uid;
        private @Nullable Output<String> updateTime;
        private @Nullable Output<String> version;

        public Builder() {
    	      // Empty
        }

        public Builder(AzureNodePoolState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.annotations = defaults.annotations;
    	      this.autoscaling = defaults.autoscaling;
    	      this.azureAvailabilityZone = defaults.azureAvailabilityZone;
    	      this.cluster = defaults.cluster;
    	      this.config = defaults.config;
    	      this.createTime = defaults.createTime;
    	      this.etag = defaults.etag;
    	      this.location = defaults.location;
    	      this.maxPodsConstraint = defaults.maxPodsConstraint;
    	      this.name = defaults.name;
    	      this.project = defaults.project;
    	      this.reconciling = defaults.reconciling;
    	      this.state = defaults.state;
    	      this.subnetId = defaults.subnetId;
    	      this.uid = defaults.uid;
    	      this.updateTime = defaults.updateTime;
    	      this.version = defaults.version;
        }

        public Builder annotations(@Nullable Output<Map<String,String>> annotations) {
            this.annotations = annotations;
            return this;
        }

        public Builder annotations(@Nullable Map<String,String> annotations) {
            this.annotations = Output.ofNullable(annotations);
            return this;
        }

        public Builder autoscaling(@Nullable Output<AzureNodePoolAutoscalingGetArgs> autoscaling) {
            this.autoscaling = autoscaling;
            return this;
        }

        public Builder autoscaling(@Nullable AzureNodePoolAutoscalingGetArgs autoscaling) {
            this.autoscaling = Output.ofNullable(autoscaling);
            return this;
        }

        public Builder azureAvailabilityZone(@Nullable Output<String> azureAvailabilityZone) {
            this.azureAvailabilityZone = azureAvailabilityZone;
            return this;
        }

        public Builder azureAvailabilityZone(@Nullable String azureAvailabilityZone) {
            this.azureAvailabilityZone = Output.ofNullable(azureAvailabilityZone);
            return this;
        }

        public Builder cluster(@Nullable Output<String> cluster) {
            this.cluster = cluster;
            return this;
        }

        public Builder cluster(@Nullable String cluster) {
            this.cluster = Output.ofNullable(cluster);
            return this;
        }

        public Builder config(@Nullable Output<AzureNodePoolConfigGetArgs> config) {
            this.config = config;
            return this;
        }

        public Builder config(@Nullable AzureNodePoolConfigGetArgs config) {
            this.config = Output.ofNullable(config);
            return this;
        }

        public Builder createTime(@Nullable Output<String> createTime) {
            this.createTime = createTime;
            return this;
        }

        public Builder createTime(@Nullable String createTime) {
            this.createTime = Output.ofNullable(createTime);
            return this;
        }

        public Builder etag(@Nullable Output<String> etag) {
            this.etag = etag;
            return this;
        }

        public Builder etag(@Nullable String etag) {
            this.etag = Output.ofNullable(etag);
            return this;
        }

        public Builder location(@Nullable Output<String> location) {
            this.location = location;
            return this;
        }

        public Builder location(@Nullable String location) {
            this.location = Output.ofNullable(location);
            return this;
        }

        public Builder maxPodsConstraint(@Nullable Output<AzureNodePoolMaxPodsConstraintGetArgs> maxPodsConstraint) {
            this.maxPodsConstraint = maxPodsConstraint;
            return this;
        }

        public Builder maxPodsConstraint(@Nullable AzureNodePoolMaxPodsConstraintGetArgs maxPodsConstraint) {
            this.maxPodsConstraint = Output.ofNullable(maxPodsConstraint);
            return this;
        }

        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }

        public Builder name(@Nullable String name) {
            this.name = Output.ofNullable(name);
            return this;
        }

        public Builder project(@Nullable Output<String> project) {
            this.project = project;
            return this;
        }

        public Builder project(@Nullable String project) {
            this.project = Output.ofNullable(project);
            return this;
        }

        public Builder reconciling(@Nullable Output<Boolean> reconciling) {
            this.reconciling = reconciling;
            return this;
        }

        public Builder reconciling(@Nullable Boolean reconciling) {
            this.reconciling = Output.ofNullable(reconciling);
            return this;
        }

        public Builder state(@Nullable Output<String> state) {
            this.state = state;
            return this;
        }

        public Builder state(@Nullable String state) {
            this.state = Output.ofNullable(state);
            return this;
        }

        public Builder subnetId(@Nullable Output<String> subnetId) {
            this.subnetId = subnetId;
            return this;
        }

        public Builder subnetId(@Nullable String subnetId) {
            this.subnetId = Output.ofNullable(subnetId);
            return this;
        }

        public Builder uid(@Nullable Output<String> uid) {
            this.uid = uid;
            return this;
        }

        public Builder uid(@Nullable String uid) {
            this.uid = Output.ofNullable(uid);
            return this;
        }

        public Builder updateTime(@Nullable Output<String> updateTime) {
            this.updateTime = updateTime;
            return this;
        }

        public Builder updateTime(@Nullable String updateTime) {
            this.updateTime = Output.ofNullable(updateTime);
            return this;
        }

        public Builder version(@Nullable Output<String> version) {
            this.version = version;
            return this;
        }

        public Builder version(@Nullable String version) {
            this.version = Output.ofNullable(version);
            return this;
        }
        public AzureNodePoolState build() {
            return new AzureNodePoolState(annotations, autoscaling, azureAvailabilityZone, cluster, config, createTime, etag, location, maxPodsConstraint, name, project, reconciling, state, subnetId, uid, updateTime, version);
        }
    }
}
