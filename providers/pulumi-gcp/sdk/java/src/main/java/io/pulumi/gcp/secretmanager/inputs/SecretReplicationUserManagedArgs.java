// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.secretmanager.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import io.pulumi.gcp.secretmanager.inputs.SecretReplicationUserManagedReplicaArgs;
import java.util.List;
import java.util.Objects;


public final class SecretReplicationUserManagedArgs extends io.pulumi.resources.ResourceArgs {

    public static final SecretReplicationUserManagedArgs Empty = new SecretReplicationUserManagedArgs();

    /**
     * The list of Replicas for this Secret. Cannot be empty.
     * Structure is documented below.
     * 
     */
    @Import(name="replicas", required=true)
      private final Output<List<SecretReplicationUserManagedReplicaArgs>> replicas;

    public Output<List<SecretReplicationUserManagedReplicaArgs>> replicas() {
        return this.replicas;
    }

    public SecretReplicationUserManagedArgs(Output<List<SecretReplicationUserManagedReplicaArgs>> replicas) {
        this.replicas = Objects.requireNonNull(replicas, "expected parameter 'replicas' to be non-null");
    }

    private SecretReplicationUserManagedArgs() {
        this.replicas = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SecretReplicationUserManagedArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<List<SecretReplicationUserManagedReplicaArgs>> replicas;

        public Builder() {
    	      // Empty
        }

        public Builder(SecretReplicationUserManagedArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.replicas = defaults.replicas;
        }

        public Builder replicas(Output<List<SecretReplicationUserManagedReplicaArgs>> replicas) {
            this.replicas = Objects.requireNonNull(replicas);
            return this;
        }
        public Builder replicas(List<SecretReplicationUserManagedReplicaArgs> replicas) {
            this.replicas = Output.of(Objects.requireNonNull(replicas));
            return this;
        }
        public Builder replicas(SecretReplicationUserManagedReplicaArgs... replicas) {
            return replicas(List.of(replicas));
        }        public SecretReplicationUserManagedArgs build() {
            return new SecretReplicationUserManagedArgs(replicas);
        }
    }
}
