// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.monitoring;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class MonitoredProjectArgs extends io.pulumi.resources.ResourceArgs {

    public static final MonitoredProjectArgs Empty = new MonitoredProjectArgs();

    /**
     * Required. The resource name of the existing Metrics Scope that will monitor this project. Example: locations/global/metricsScopes/{SCOPING_PROJECT_ID_OR_NUMBER}
     * 
     */
    @Import(name="metricsScope", required=true)
      private final Output<String> metricsScope;

    public Output<String> metricsScope() {
        return this.metricsScope;
    }

    /**
     * Immutable. The resource name of the `MonitoredProject`. On input, the resource name includes the scoping project ID and monitored project ID. On output, it contains the equivalent project numbers. Example: `locations/global/metricsScopes/{SCOPING_PROJECT_ID_OR_NUMBER}/projects/{MONITORED_PROJECT_ID_OR_NUMBER}`
     * 
     */
    @Import(name="name")
      private final @Nullable Output<String> name;

    public Output<String> name() {
        return this.name == null ? Codegen.empty() : this.name;
    }

    public MonitoredProjectArgs(
        Output<String> metricsScope,
        @Nullable Output<String> name) {
        this.metricsScope = Objects.requireNonNull(metricsScope, "expected parameter 'metricsScope' to be non-null");
        this.name = name;
    }

    private MonitoredProjectArgs() {
        this.metricsScope = Codegen.empty();
        this.name = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MonitoredProjectArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> metricsScope;
        private @Nullable Output<String> name;

        public Builder() {
    	      // Empty
        }

        public Builder(MonitoredProjectArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.metricsScope = defaults.metricsScope;
    	      this.name = defaults.name;
        }

        public Builder metricsScope(Output<String> metricsScope) {
            this.metricsScope = Objects.requireNonNull(metricsScope);
            return this;
        }
        public Builder metricsScope(String metricsScope) {
            this.metricsScope = Output.of(Objects.requireNonNull(metricsScope));
            return this;
        }
        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }
        public Builder name(@Nullable String name) {
            this.name = Codegen.ofNullable(name);
            return this;
        }        public MonitoredProjectArgs build() {
            return new MonitoredProjectArgs(metricsScope, name);
        }
    }
}
