// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.cloudbuild.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import io.pulumi.gcp.cloudbuild.outputs.TriggerBuildOptionsVolume;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class TriggerBuildOptions {
    private final @Nullable Integer diskSizeGb;
    private final @Nullable Boolean dynamicSubstitutions;
    private final @Nullable List<String> envs;
    private final @Nullable String logStreamingOption;
    private final @Nullable String logging;
    private final @Nullable String machineType;
    private final @Nullable String requestedVerifyOption;
    private final @Nullable List<String> secretEnvs;
    private final @Nullable List<String> sourceProvenanceHashes;
    private final @Nullable String substitutionOption;
    private final @Nullable List<TriggerBuildOptionsVolume> volumes;
    private final @Nullable String workerPool;

    @OutputCustomType.Constructor({"diskSizeGb","dynamicSubstitutions","envs","logStreamingOption","logging","machineType","requestedVerifyOption","secretEnvs","sourceProvenanceHashes","substitutionOption","volumes","workerPool"})
    private TriggerBuildOptions(
        @Nullable Integer diskSizeGb,
        @Nullable Boolean dynamicSubstitutions,
        @Nullable List<String> envs,
        @Nullable String logStreamingOption,
        @Nullable String logging,
        @Nullable String machineType,
        @Nullable String requestedVerifyOption,
        @Nullable List<String> secretEnvs,
        @Nullable List<String> sourceProvenanceHashes,
        @Nullable String substitutionOption,
        @Nullable List<TriggerBuildOptionsVolume> volumes,
        @Nullable String workerPool) {
        this.diskSizeGb = diskSizeGb;
        this.dynamicSubstitutions = dynamicSubstitutions;
        this.envs = envs;
        this.logStreamingOption = logStreamingOption;
        this.logging = logging;
        this.machineType = machineType;
        this.requestedVerifyOption = requestedVerifyOption;
        this.secretEnvs = secretEnvs;
        this.sourceProvenanceHashes = sourceProvenanceHashes;
        this.substitutionOption = substitutionOption;
        this.volumes = volumes;
        this.workerPool = workerPool;
    }

    public Optional<Integer> getDiskSizeGb() {
        return Optional.ofNullable(this.diskSizeGb);
    }
    public Optional<Boolean> getDynamicSubstitutions() {
        return Optional.ofNullable(this.dynamicSubstitutions);
    }
    public List<String> getEnvs() {
        return this.envs == null ? List.of() : this.envs;
    }
    public Optional<String> getLogStreamingOption() {
        return Optional.ofNullable(this.logStreamingOption);
    }
    public Optional<String> getLogging() {
        return Optional.ofNullable(this.logging);
    }
    public Optional<String> getMachineType() {
        return Optional.ofNullable(this.machineType);
    }
    public Optional<String> getRequestedVerifyOption() {
        return Optional.ofNullable(this.requestedVerifyOption);
    }
    public List<String> getSecretEnvs() {
        return this.secretEnvs == null ? List.of() : this.secretEnvs;
    }
    public List<String> getSourceProvenanceHashes() {
        return this.sourceProvenanceHashes == null ? List.of() : this.sourceProvenanceHashes;
    }
    public Optional<String> getSubstitutionOption() {
        return Optional.ofNullable(this.substitutionOption);
    }
    public List<TriggerBuildOptionsVolume> getVolumes() {
        return this.volumes == null ? List.of() : this.volumes;
    }
    public Optional<String> getWorkerPool() {
        return Optional.ofNullable(this.workerPool);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TriggerBuildOptions defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Integer diskSizeGb;
        private @Nullable Boolean dynamicSubstitutions;
        private @Nullable List<String> envs;
        private @Nullable String logStreamingOption;
        private @Nullable String logging;
        private @Nullable String machineType;
        private @Nullable String requestedVerifyOption;
        private @Nullable List<String> secretEnvs;
        private @Nullable List<String> sourceProvenanceHashes;
        private @Nullable String substitutionOption;
        private @Nullable List<TriggerBuildOptionsVolume> volumes;
        private @Nullable String workerPool;

        public Builder() {
    	      // Empty
        }

        public Builder(TriggerBuildOptions defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.diskSizeGb = defaults.diskSizeGb;
    	      this.dynamicSubstitutions = defaults.dynamicSubstitutions;
    	      this.envs = defaults.envs;
    	      this.logStreamingOption = defaults.logStreamingOption;
    	      this.logging = defaults.logging;
    	      this.machineType = defaults.machineType;
    	      this.requestedVerifyOption = defaults.requestedVerifyOption;
    	      this.secretEnvs = defaults.secretEnvs;
    	      this.sourceProvenanceHashes = defaults.sourceProvenanceHashes;
    	      this.substitutionOption = defaults.substitutionOption;
    	      this.volumes = defaults.volumes;
    	      this.workerPool = defaults.workerPool;
        }

        public Builder setDiskSizeGb(@Nullable Integer diskSizeGb) {
            this.diskSizeGb = diskSizeGb;
            return this;
        }

        public Builder setDynamicSubstitutions(@Nullable Boolean dynamicSubstitutions) {
            this.dynamicSubstitutions = dynamicSubstitutions;
            return this;
        }

        public Builder setEnvs(@Nullable List<String> envs) {
            this.envs = envs;
            return this;
        }

        public Builder setLogStreamingOption(@Nullable String logStreamingOption) {
            this.logStreamingOption = logStreamingOption;
            return this;
        }

        public Builder setLogging(@Nullable String logging) {
            this.logging = logging;
            return this;
        }

        public Builder setMachineType(@Nullable String machineType) {
            this.machineType = machineType;
            return this;
        }

        public Builder setRequestedVerifyOption(@Nullable String requestedVerifyOption) {
            this.requestedVerifyOption = requestedVerifyOption;
            return this;
        }

        public Builder setSecretEnvs(@Nullable List<String> secretEnvs) {
            this.secretEnvs = secretEnvs;
            return this;
        }

        public Builder setSourceProvenanceHashes(@Nullable List<String> sourceProvenanceHashes) {
            this.sourceProvenanceHashes = sourceProvenanceHashes;
            return this;
        }

        public Builder setSubstitutionOption(@Nullable String substitutionOption) {
            this.substitutionOption = substitutionOption;
            return this;
        }

        public Builder setVolumes(@Nullable List<TriggerBuildOptionsVolume> volumes) {
            this.volumes = volumes;
            return this;
        }

        public Builder setWorkerPool(@Nullable String workerPool) {
            this.workerPool = workerPool;
            return this;
        }

        public TriggerBuildOptions build() {
            return new TriggerBuildOptions(diskSizeGb, dynamicSubstitutions, envs, logStreamingOption, logging, machineType, requestedVerifyOption, secretEnvs, sourceProvenanceHashes, substitutionOption, volumes, workerPool);
        }
    }
}
