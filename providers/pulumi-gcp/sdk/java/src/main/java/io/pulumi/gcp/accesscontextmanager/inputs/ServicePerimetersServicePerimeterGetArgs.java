// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.accesscontextmanager.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import io.pulumi.gcp.accesscontextmanager.inputs.ServicePerimetersServicePerimeterSpecGetArgs;
import io.pulumi.gcp.accesscontextmanager.inputs.ServicePerimetersServicePerimeterStatusGetArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ServicePerimetersServicePerimeterGetArgs extends io.pulumi.resources.ResourceArgs {

    public static final ServicePerimetersServicePerimeterGetArgs Empty = new ServicePerimetersServicePerimeterGetArgs();

    @InputImport(name="createTime")
    private final @Nullable Input<String> createTime;

    public Input<String> getCreateTime() {
        return this.createTime == null ? Input.empty() : this.createTime;
    }

    @InputImport(name="description")
    private final @Nullable Input<String> description;

    public Input<String> getDescription() {
        return this.description == null ? Input.empty() : this.description;
    }

    @InputImport(name="name", required=true)
    private final Input<String> name;

    public Input<String> getName() {
        return this.name;
    }

    @InputImport(name="perimeterType")
    private final @Nullable Input<String> perimeterType;

    public Input<String> getPerimeterType() {
        return this.perimeterType == null ? Input.empty() : this.perimeterType;
    }

    @InputImport(name="spec")
    private final @Nullable Input<ServicePerimetersServicePerimeterSpecGetArgs> spec;

    public Input<ServicePerimetersServicePerimeterSpecGetArgs> getSpec() {
        return this.spec == null ? Input.empty() : this.spec;
    }

    @InputImport(name="status")
    private final @Nullable Input<ServicePerimetersServicePerimeterStatusGetArgs> status;

    public Input<ServicePerimetersServicePerimeterStatusGetArgs> getStatus() {
        return this.status == null ? Input.empty() : this.status;
    }

    @InputImport(name="title", required=true)
    private final Input<String> title;

    public Input<String> getTitle() {
        return this.title;
    }

    @InputImport(name="updateTime")
    private final @Nullable Input<String> updateTime;

    public Input<String> getUpdateTime() {
        return this.updateTime == null ? Input.empty() : this.updateTime;
    }

    @InputImport(name="useExplicitDryRunSpec")
    private final @Nullable Input<Boolean> useExplicitDryRunSpec;

    public Input<Boolean> getUseExplicitDryRunSpec() {
        return this.useExplicitDryRunSpec == null ? Input.empty() : this.useExplicitDryRunSpec;
    }

    public ServicePerimetersServicePerimeterGetArgs(
        @Nullable Input<String> createTime,
        @Nullable Input<String> description,
        Input<String> name,
        @Nullable Input<String> perimeterType,
        @Nullable Input<ServicePerimetersServicePerimeterSpecGetArgs> spec,
        @Nullable Input<ServicePerimetersServicePerimeterStatusGetArgs> status,
        Input<String> title,
        @Nullable Input<String> updateTime,
        @Nullable Input<Boolean> useExplicitDryRunSpec) {
        this.createTime = createTime;
        this.description = description;
        this.name = Objects.requireNonNull(name, "expected parameter 'name' to be non-null");
        this.perimeterType = perimeterType;
        this.spec = spec;
        this.status = status;
        this.title = Objects.requireNonNull(title, "expected parameter 'title' to be non-null");
        this.updateTime = updateTime;
        this.useExplicitDryRunSpec = useExplicitDryRunSpec;
    }

    private ServicePerimetersServicePerimeterGetArgs() {
        this.createTime = Input.empty();
        this.description = Input.empty();
        this.name = Input.empty();
        this.perimeterType = Input.empty();
        this.spec = Input.empty();
        this.status = Input.empty();
        this.title = Input.empty();
        this.updateTime = Input.empty();
        this.useExplicitDryRunSpec = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ServicePerimetersServicePerimeterGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> createTime;
        private @Nullable Input<String> description;
        private Input<String> name;
        private @Nullable Input<String> perimeterType;
        private @Nullable Input<ServicePerimetersServicePerimeterSpecGetArgs> spec;
        private @Nullable Input<ServicePerimetersServicePerimeterStatusGetArgs> status;
        private Input<String> title;
        private @Nullable Input<String> updateTime;
        private @Nullable Input<Boolean> useExplicitDryRunSpec;

        public Builder() {
    	      // Empty
        }

        public Builder(ServicePerimetersServicePerimeterGetArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.createTime = defaults.createTime;
    	      this.description = defaults.description;
    	      this.name = defaults.name;
    	      this.perimeterType = defaults.perimeterType;
    	      this.spec = defaults.spec;
    	      this.status = defaults.status;
    	      this.title = defaults.title;
    	      this.updateTime = defaults.updateTime;
    	      this.useExplicitDryRunSpec = defaults.useExplicitDryRunSpec;
        }

        public Builder setCreateTime(@Nullable Input<String> createTime) {
            this.createTime = createTime;
            return this;
        }

        public Builder setCreateTime(@Nullable String createTime) {
            this.createTime = Input.ofNullable(createTime);
            return this;
        }

        public Builder setDescription(@Nullable Input<String> description) {
            this.description = description;
            return this;
        }

        public Builder setDescription(@Nullable String description) {
            this.description = Input.ofNullable(description);
            return this;
        }

        public Builder setName(Input<String> name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setName(String name) {
            this.name = Input.of(Objects.requireNonNull(name));
            return this;
        }

        public Builder setPerimeterType(@Nullable Input<String> perimeterType) {
            this.perimeterType = perimeterType;
            return this;
        }

        public Builder setPerimeterType(@Nullable String perimeterType) {
            this.perimeterType = Input.ofNullable(perimeterType);
            return this;
        }

        public Builder setSpec(@Nullable Input<ServicePerimetersServicePerimeterSpecGetArgs> spec) {
            this.spec = spec;
            return this;
        }

        public Builder setSpec(@Nullable ServicePerimetersServicePerimeterSpecGetArgs spec) {
            this.spec = Input.ofNullable(spec);
            return this;
        }

        public Builder setStatus(@Nullable Input<ServicePerimetersServicePerimeterStatusGetArgs> status) {
            this.status = status;
            return this;
        }

        public Builder setStatus(@Nullable ServicePerimetersServicePerimeterStatusGetArgs status) {
            this.status = Input.ofNullable(status);
            return this;
        }

        public Builder setTitle(Input<String> title) {
            this.title = Objects.requireNonNull(title);
            return this;
        }

        public Builder setTitle(String title) {
            this.title = Input.of(Objects.requireNonNull(title));
            return this;
        }

        public Builder setUpdateTime(@Nullable Input<String> updateTime) {
            this.updateTime = updateTime;
            return this;
        }

        public Builder setUpdateTime(@Nullable String updateTime) {
            this.updateTime = Input.ofNullable(updateTime);
            return this;
        }

        public Builder setUseExplicitDryRunSpec(@Nullable Input<Boolean> useExplicitDryRunSpec) {
            this.useExplicitDryRunSpec = useExplicitDryRunSpec;
            return this;
        }

        public Builder setUseExplicitDryRunSpec(@Nullable Boolean useExplicitDryRunSpec) {
            this.useExplicitDryRunSpec = Input.ofNullable(useExplicitDryRunSpec);
            return this;
        }

        public ServicePerimetersServicePerimeterGetArgs build() {
            return new ServicePerimetersServicePerimeterGetArgs(createTime, description, name, perimeterType, spec, status, title, updateTime, useExplicitDryRunSpec);
        }
    }
}
