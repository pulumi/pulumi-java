// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.firestore;

import io.pulumi.core.Input;
import io.pulumi.core.Output;
import io.pulumi.core.internal.annotations.OutputExport;
import io.pulumi.core.internal.annotations.ResourceType;
import io.pulumi.gcp.Utilities;
import io.pulumi.gcp.firestore.IndexArgs;
import io.pulumi.gcp.firestore.inputs.IndexState;
import io.pulumi.gcp.firestore.outputs.IndexField;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

@ResourceType(type="gcp:firestore/index:Index")
public class Index extends io.pulumi.resources.CustomResource {
    @OutputExport(name="collection", type=String.class, parameters={})
    private Output<String> collection;

    public Output<String> getCollection() {
        return this.collection;
    }
    @OutputExport(name="database", type=String.class, parameters={})
    private Output</* @Nullable */ String> database;

    public Output</* @Nullable */ String> getDatabase() {
        return this.database;
    }
    @OutputExport(name="fields", type=List.class, parameters={IndexField.class})
    private Output<List<IndexField>> fields;

    public Output<List<IndexField>> getFields() {
        return this.fields;
    }
    @OutputExport(name="name", type=String.class, parameters={})
    private Output<String> name;

    public Output<String> getName() {
        return this.name;
    }
    @OutputExport(name="project", type=String.class, parameters={})
    private Output<String> project;

    public Output<String> getProject() {
        return this.project;
    }
    @OutputExport(name="queryScope", type=String.class, parameters={})
    private Output</* @Nullable */ String> queryScope;

    public Output</* @Nullable */ String> getQueryScope() {
        return this.queryScope;
    }

    public Index(String name, IndexArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("gcp:firestore/index:Index", name, args == null ? IndexArgs.Empty : args, makeResourceOptions(options, Input.empty()));
    }

    private Index(String name, Input<String> id, @Nullable IndexState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("gcp:firestore/index:Index", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Input<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .setVersion(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    public static Index get(String name, Input<String> id, @Nullable IndexState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new Index(name, id, state, options);
    }
}
