// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.compute.inputs;

import io.pulumi.core.annotations.InputImport;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetInstanceSerialPortArgs extends io.pulumi.resources.InvokeArgs {

    public static final GetInstanceSerialPortArgs Empty = new GetInstanceSerialPortArgs();

    /**
     * The name of the Compute Instance to read output from.
     * 
     */
    @InputImport(name="instance", required=true)
      private final String instance;

    public String getInstance() {
        return this.instance;
    }

    /**
     * The number of the serial port to read output from. Possible values are 1-4.
     * 
     */
    @InputImport(name="port", required=true)
      private final Integer port;

    public Integer getPort() {
        return this.port;
    }

    /**
     * The project in which the Compute Instance exists. If it
     * is not provided, the provider project is used.
     * 
     */
    @InputImport(name="project")
      private final @Nullable String project;

    public Optional<String> getProject() {
        return this.project == null ? Optional.empty() : Optional.ofNullable(this.project);
    }

    /**
     * The zone in which the Compute Instance exists.
     * If it is not provided, the provider zone is used.
     * 
     */
    @InputImport(name="zone")
      private final @Nullable String zone;

    public Optional<String> getZone() {
        return this.zone == null ? Optional.empty() : Optional.ofNullable(this.zone);
    }

    public GetInstanceSerialPortArgs(
        String instance,
        Integer port,
        @Nullable String project,
        @Nullable String zone) {
        this.instance = Objects.requireNonNull(instance, "expected parameter 'instance' to be non-null");
        this.port = Objects.requireNonNull(port, "expected parameter 'port' to be non-null");
        this.project = project;
        this.zone = zone;
    }

    private GetInstanceSerialPortArgs() {
        this.instance = null;
        this.port = null;
        this.project = null;
        this.zone = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetInstanceSerialPortArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String instance;
        private Integer port;
        private @Nullable String project;
        private @Nullable String zone;

        public Builder() {
    	      // Empty
        }

        public Builder(GetInstanceSerialPortArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.instance = defaults.instance;
    	      this.port = defaults.port;
    	      this.project = defaults.project;
    	      this.zone = defaults.zone;
        }

        public Builder instance(String instance) {
            this.instance = Objects.requireNonNull(instance);
            return this;
        }

        public Builder port(Integer port) {
            this.port = Objects.requireNonNull(port);
            return this;
        }

        public Builder project(@Nullable String project) {
            this.project = project;
            return this;
        }

        public Builder zone(@Nullable String zone) {
            this.zone = zone;
            return this;
        }
        public GetInstanceSerialPortArgs build() {
            return new GetInstanceSerialPortArgs(instance, port, project, zone);
        }
    }
}
