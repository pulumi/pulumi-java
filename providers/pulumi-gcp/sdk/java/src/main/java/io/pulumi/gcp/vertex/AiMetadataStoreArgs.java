// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.vertex;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import io.pulumi.gcp.vertex.inputs.AiMetadataStoreEncryptionSpecArgs;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class AiMetadataStoreArgs extends io.pulumi.resources.ResourceArgs {

    public static final AiMetadataStoreArgs Empty = new AiMetadataStoreArgs();

    /**
     * Description of the MetadataStore.
     * 
     */
    @InputImport(name="description")
        private final @Nullable Input<String> description;

    public Input<String> getDescription() {
        return this.description == null ? Input.empty() : this.description;
    }

    /**
     * Customer-managed encryption key spec for a MetadataStore. If set, this MetadataStore and all sub-resources of this MetadataStore will be secured by this key.
     * Structure is documented below.
     * 
     */
    @InputImport(name="encryptionSpec")
        private final @Nullable Input<AiMetadataStoreEncryptionSpecArgs> encryptionSpec;

    public Input<AiMetadataStoreEncryptionSpecArgs> getEncryptionSpec() {
        return this.encryptionSpec == null ? Input.empty() : this.encryptionSpec;
    }

    /**
     * The name of the MetadataStore. This value may be up to 60 characters, and valid characters are [a-z0-9_]. The first character cannot be a number.
     * 
     */
    @InputImport(name="name")
        private final @Nullable Input<String> name;

    public Input<String> getName() {
        return this.name == null ? Input.empty() : this.name;
    }

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @InputImport(name="project")
        private final @Nullable Input<String> project;

    public Input<String> getProject() {
        return this.project == null ? Input.empty() : this.project;
    }

    /**
     * The region of the Metadata Store. eg us-central1
     * 
     */
    @InputImport(name="region")
        private final @Nullable Input<String> region;

    public Input<String> getRegion() {
        return this.region == null ? Input.empty() : this.region;
    }

    public AiMetadataStoreArgs(
        @Nullable Input<String> description,
        @Nullable Input<AiMetadataStoreEncryptionSpecArgs> encryptionSpec,
        @Nullable Input<String> name,
        @Nullable Input<String> project,
        @Nullable Input<String> region) {
        this.description = description;
        this.encryptionSpec = encryptionSpec;
        this.name = name;
        this.project = project;
        this.region = region;
    }

    private AiMetadataStoreArgs() {
        this.description = Input.empty();
        this.encryptionSpec = Input.empty();
        this.name = Input.empty();
        this.project = Input.empty();
        this.region = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AiMetadataStoreArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> description;
        private @Nullable Input<AiMetadataStoreEncryptionSpecArgs> encryptionSpec;
        private @Nullable Input<String> name;
        private @Nullable Input<String> project;
        private @Nullable Input<String> region;

        public Builder() {
    	      // Empty
        }

        public Builder(AiMetadataStoreArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.encryptionSpec = defaults.encryptionSpec;
    	      this.name = defaults.name;
    	      this.project = defaults.project;
    	      this.region = defaults.region;
        }

        public Builder setDescription(@Nullable Input<String> description) {
            this.description = description;
            return this;
        }

        public Builder setDescription(@Nullable String description) {
            this.description = Input.ofNullable(description);
            return this;
        }

        public Builder setEncryptionSpec(@Nullable Input<AiMetadataStoreEncryptionSpecArgs> encryptionSpec) {
            this.encryptionSpec = encryptionSpec;
            return this;
        }

        public Builder setEncryptionSpec(@Nullable AiMetadataStoreEncryptionSpecArgs encryptionSpec) {
            this.encryptionSpec = Input.ofNullable(encryptionSpec);
            return this;
        }

        public Builder setName(@Nullable Input<String> name) {
            this.name = name;
            return this;
        }

        public Builder setName(@Nullable String name) {
            this.name = Input.ofNullable(name);
            return this;
        }

        public Builder setProject(@Nullable Input<String> project) {
            this.project = project;
            return this;
        }

        public Builder setProject(@Nullable String project) {
            this.project = Input.ofNullable(project);
            return this;
        }

        public Builder setRegion(@Nullable Input<String> region) {
            this.region = region;
            return this;
        }

        public Builder setRegion(@Nullable String region) {
            this.region = Input.ofNullable(region);
            return this;
        }
        public AiMetadataStoreArgs build() {
            return new AiMetadataStoreArgs(description, encryptionSpec, name, project, region);
        }
    }
}
