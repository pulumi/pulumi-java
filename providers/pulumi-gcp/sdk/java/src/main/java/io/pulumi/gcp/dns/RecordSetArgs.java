// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.dns;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class RecordSetArgs extends io.pulumi.resources.ResourceArgs {

    public static final RecordSetArgs Empty = new RecordSetArgs();

    @InputImport(name="managedZone", required=true)
    private final Input<String> managedZone;

    public Input<String> getManagedZone() {
        return this.managedZone;
    }

    @InputImport(name="name", required=true)
    private final Input<String> name;

    public Input<String> getName() {
        return this.name;
    }

    @InputImport(name="project")
    private final @Nullable Input<String> project;

    public Input<String> getProject() {
        return this.project == null ? Input.empty() : this.project;
    }

    @InputImport(name="rrdatas", required=true)
    private final Input<List<String>> rrdatas;

    public Input<List<String>> getRrdatas() {
        return this.rrdatas;
    }

    @InputImport(name="ttl")
    private final @Nullable Input<Integer> ttl;

    public Input<Integer> getTtl() {
        return this.ttl == null ? Input.empty() : this.ttl;
    }

    @InputImport(name="type", required=true)
    private final Input<String> type;

    public Input<String> getType() {
        return this.type;
    }

    public RecordSetArgs(
        Input<String> managedZone,
        Input<String> name,
        @Nullable Input<String> project,
        Input<List<String>> rrdatas,
        @Nullable Input<Integer> ttl,
        Input<String> type) {
        this.managedZone = Objects.requireNonNull(managedZone, "expected parameter 'managedZone' to be non-null");
        this.name = Objects.requireNonNull(name, "expected parameter 'name' to be non-null");
        this.project = project;
        this.rrdatas = Objects.requireNonNull(rrdatas, "expected parameter 'rrdatas' to be non-null");
        this.ttl = ttl;
        this.type = Objects.requireNonNull(type, "expected parameter 'type' to be non-null");
    }

    private RecordSetArgs() {
        this.managedZone = Input.empty();
        this.name = Input.empty();
        this.project = Input.empty();
        this.rrdatas = Input.empty();
        this.ttl = Input.empty();
        this.type = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RecordSetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<String> managedZone;
        private Input<String> name;
        private @Nullable Input<String> project;
        private Input<List<String>> rrdatas;
        private @Nullable Input<Integer> ttl;
        private Input<String> type;

        public Builder() {
    	      // Empty
        }

        public Builder(RecordSetArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.managedZone = defaults.managedZone;
    	      this.name = defaults.name;
    	      this.project = defaults.project;
    	      this.rrdatas = defaults.rrdatas;
    	      this.ttl = defaults.ttl;
    	      this.type = defaults.type;
        }

        public Builder setManagedZone(Input<String> managedZone) {
            this.managedZone = Objects.requireNonNull(managedZone);
            return this;
        }

        public Builder setManagedZone(String managedZone) {
            this.managedZone = Input.of(Objects.requireNonNull(managedZone));
            return this;
        }

        public Builder setName(Input<String> name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setName(String name) {
            this.name = Input.of(Objects.requireNonNull(name));
            return this;
        }

        public Builder setProject(@Nullable Input<String> project) {
            this.project = project;
            return this;
        }

        public Builder setProject(@Nullable String project) {
            this.project = Input.ofNullable(project);
            return this;
        }

        public Builder setRrdatas(Input<List<String>> rrdatas) {
            this.rrdatas = Objects.requireNonNull(rrdatas);
            return this;
        }

        public Builder setRrdatas(List<String> rrdatas) {
            this.rrdatas = Input.of(Objects.requireNonNull(rrdatas));
            return this;
        }

        public Builder setTtl(@Nullable Input<Integer> ttl) {
            this.ttl = ttl;
            return this;
        }

        public Builder setTtl(@Nullable Integer ttl) {
            this.ttl = Input.ofNullable(ttl);
            return this;
        }

        public Builder setType(Input<String> type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }

        public Builder setType(String type) {
            this.type = Input.of(Objects.requireNonNull(type));
            return this;
        }

        public RecordSetArgs build() {
            return new RecordSetArgs(managedZone, name, project, rrdatas, ttl, type);
        }
    }
}
