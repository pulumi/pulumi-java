// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.compute.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class RegionAutoscalerAutoscalingPolicyCpuUtilization {
    private final @Nullable String predictiveMethod;
    private final Double target;

    @OutputCustomType.Constructor({"predictiveMethod","target"})
    private RegionAutoscalerAutoscalingPolicyCpuUtilization(
        @Nullable String predictiveMethod,
        Double target) {
        this.predictiveMethod = predictiveMethod;
        this.target = Objects.requireNonNull(target);
    }

    public Optional<String> getPredictiveMethod() {
        return Optional.ofNullable(this.predictiveMethod);
    }
    public Double getTarget() {
        return this.target;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RegionAutoscalerAutoscalingPolicyCpuUtilization defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String predictiveMethod;
        private Double target;

        public Builder() {
    	      // Empty
        }

        public Builder(RegionAutoscalerAutoscalingPolicyCpuUtilization defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.predictiveMethod = defaults.predictiveMethod;
    	      this.target = defaults.target;
        }

        public Builder setPredictiveMethod(@Nullable String predictiveMethod) {
            this.predictiveMethod = predictiveMethod;
            return this;
        }

        public Builder setTarget(Double target) {
            this.target = Objects.requireNonNull(target);
            return this;
        }

        public RegionAutoscalerAutoscalingPolicyCpuUtilization build() {
            return new RegionAutoscalerAutoscalingPolicyCpuUtilization(predictiveMethod, target);
        }
    }
}
