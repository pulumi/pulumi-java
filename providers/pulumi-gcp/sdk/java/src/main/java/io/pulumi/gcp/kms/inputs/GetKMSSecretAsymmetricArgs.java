// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.kms.inputs;

import io.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetKMSSecretAsymmetricArgs extends io.pulumi.resources.InvokeArgs {

    public static final GetKMSSecretAsymmetricArgs Empty = new GetKMSSecretAsymmetricArgs();

    /**
     * The ciphertext to be decrypted, encoded in base64
     * 
     */
    @Import(name="ciphertext", required=true)
      private final String ciphertext;

    public String ciphertext() {
        return this.ciphertext;
    }

    /**
     * The crc32 checksum of the `ciphertext` in hexadecimal notation. If not specified, it will be computed.
     * 
     */
    @Import(name="crc32")
      private final @Nullable String crc32;

    public Optional<String> crc32() {
        return this.crc32 == null ? Optional.empty() : Optional.ofNullable(this.crc32);
    }

    /**
     * The id of the CryptoKey version that will be used to
     * decrypt the provided ciphertext. This is represented by the format
     * `projects/{project}/locations/{location}/keyRings/{keyring}/cryptoKeys/{key}/cryptoKeyVersions/{version}`.
     * 
     */
    @Import(name="cryptoKeyVersion", required=true)
      private final String cryptoKeyVersion;

    public String cryptoKeyVersion() {
        return this.cryptoKeyVersion;
    }

    public GetKMSSecretAsymmetricArgs(
        String ciphertext,
        @Nullable String crc32,
        String cryptoKeyVersion) {
        this.ciphertext = Objects.requireNonNull(ciphertext, "expected parameter 'ciphertext' to be non-null");
        this.crc32 = crc32;
        this.cryptoKeyVersion = Objects.requireNonNull(cryptoKeyVersion, "expected parameter 'cryptoKeyVersion' to be non-null");
    }

    private GetKMSSecretAsymmetricArgs() {
        this.ciphertext = null;
        this.crc32 = null;
        this.cryptoKeyVersion = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetKMSSecretAsymmetricArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String ciphertext;
        private @Nullable String crc32;
        private String cryptoKeyVersion;

        public Builder() {
    	      // Empty
        }

        public Builder(GetKMSSecretAsymmetricArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.ciphertext = defaults.ciphertext;
    	      this.crc32 = defaults.crc32;
    	      this.cryptoKeyVersion = defaults.cryptoKeyVersion;
        }

        public Builder ciphertext(String ciphertext) {
            this.ciphertext = Objects.requireNonNull(ciphertext);
            return this;
        }
        public Builder crc32(@Nullable String crc32) {
            this.crc32 = crc32;
            return this;
        }
        public Builder cryptoKeyVersion(String cryptoKeyVersion) {
            this.cryptoKeyVersion = Objects.requireNonNull(cryptoKeyVersion);
            return this;
        }        public GetKMSSecretAsymmetricArgs build() {
            return new GetKMSSecretAsymmetricArgs(ciphertext, crc32, cryptoKeyVersion);
        }
    }
}
