// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.dataloss.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.Integer;
import java.util.Objects;
import javax.annotation.Nullable;


public final class PreventionDeidentifyTemplateDeidentifyConfigInfoTypeTransformationsTransformationPrimitiveTransformationReplaceConfigNewValueDateValueGetArgs extends io.pulumi.resources.ResourceArgs {

    public static final PreventionDeidentifyTemplateDeidentifyConfigInfoTypeTransformationsTransformationPrimitiveTransformationReplaceConfigNewValueDateValueGetArgs Empty = new PreventionDeidentifyTemplateDeidentifyConfigInfoTypeTransformationsTransformationPrimitiveTransformationReplaceConfigNewValueDateValueGetArgs();

    @InputImport(name="day")
    private final @Nullable Input<Integer> day;

    public Input<Integer> getDay() {
        return this.day == null ? Input.empty() : this.day;
    }

    @InputImport(name="month")
    private final @Nullable Input<Integer> month;

    public Input<Integer> getMonth() {
        return this.month == null ? Input.empty() : this.month;
    }

    @InputImport(name="year")
    private final @Nullable Input<Integer> year;

    public Input<Integer> getYear() {
        return this.year == null ? Input.empty() : this.year;
    }

    public PreventionDeidentifyTemplateDeidentifyConfigInfoTypeTransformationsTransformationPrimitiveTransformationReplaceConfigNewValueDateValueGetArgs(
        @Nullable Input<Integer> day,
        @Nullable Input<Integer> month,
        @Nullable Input<Integer> year) {
        this.day = day;
        this.month = month;
        this.year = year;
    }

    private PreventionDeidentifyTemplateDeidentifyConfigInfoTypeTransformationsTransformationPrimitiveTransformationReplaceConfigNewValueDateValueGetArgs() {
        this.day = Input.empty();
        this.month = Input.empty();
        this.year = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PreventionDeidentifyTemplateDeidentifyConfigInfoTypeTransformationsTransformationPrimitiveTransformationReplaceConfigNewValueDateValueGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<Integer> day;
        private @Nullable Input<Integer> month;
        private @Nullable Input<Integer> year;

        public Builder() {
    	      // Empty
        }

        public Builder(PreventionDeidentifyTemplateDeidentifyConfigInfoTypeTransformationsTransformationPrimitiveTransformationReplaceConfigNewValueDateValueGetArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.day = defaults.day;
    	      this.month = defaults.month;
    	      this.year = defaults.year;
        }

        public Builder setDay(@Nullable Input<Integer> day) {
            this.day = day;
            return this;
        }

        public Builder setDay(@Nullable Integer day) {
            this.day = Input.ofNullable(day);
            return this;
        }

        public Builder setMonth(@Nullable Input<Integer> month) {
            this.month = month;
            return this;
        }

        public Builder setMonth(@Nullable Integer month) {
            this.month = Input.ofNullable(month);
            return this;
        }

        public Builder setYear(@Nullable Input<Integer> year) {
            this.year = year;
            return this;
        }

        public Builder setYear(@Nullable Integer year) {
            this.year = Input.ofNullable(year);
            return this;
        }

        public PreventionDeidentifyTemplateDeidentifyConfigInfoTypeTransformationsTransformationPrimitiveTransformationReplaceConfigNewValueDateValueGetArgs build() {
            return new PreventionDeidentifyTemplateDeidentifyConfigInfoTypeTransformationsTransformationPrimitiveTransformationReplaceConfigNewValueDateValueGetArgs(day, month, year);
        }
    }
}
