// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.compute.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class RegionUrlMapPathMatcherPathRuleRouteActionCorsPolicyArgs extends io.pulumi.resources.ResourceArgs {

    public static final RegionUrlMapPathMatcherPathRuleRouteActionCorsPolicyArgs Empty = new RegionUrlMapPathMatcherPathRuleRouteActionCorsPolicyArgs();

    /**
     * In response to a preflight request, setting this to true indicates that the
     * actual request can include user credentials. This translates to the Access-
     * Control-Allow-Credentials header. Defaults to false.
     * 
     */
    @Import(name="allowCredentials")
      private final @Nullable Output<Boolean> allowCredentials;

    public Output<Boolean> getAllowCredentials() {
        return this.allowCredentials == null ? Codegen.empty() : this.allowCredentials;
    }

    /**
     * Specifies the content for the Access-Control-Allow-Headers header.
     * 
     */
    @Import(name="allowHeaders")
      private final @Nullable Output<List<String>> allowHeaders;

    public Output<List<String>> getAllowHeaders() {
        return this.allowHeaders == null ? Codegen.empty() : this.allowHeaders;
    }

    /**
     * Specifies the content for the Access-Control-Allow-Methods header.
     * 
     */
    @Import(name="allowMethods")
      private final @Nullable Output<List<String>> allowMethods;

    public Output<List<String>> getAllowMethods() {
        return this.allowMethods == null ? Codegen.empty() : this.allowMethods;
    }

    /**
     * Specifies the regular expression patterns that match allowed origins. For
     * regular expression grammar please see en.cppreference.com/w/cpp/regex/ecmascript
     * An origin is allowed if it matches either allow_origins or allow_origin_regex.
     * 
     */
    @Import(name="allowOriginRegexes")
      private final @Nullable Output<List<String>> allowOriginRegexes;

    public Output<List<String>> getAllowOriginRegexes() {
        return this.allowOriginRegexes == null ? Codegen.empty() : this.allowOriginRegexes;
    }

    /**
     * Specifies the list of origins that will be allowed to do CORS requests. An
     * origin is allowed if it matches either allow_origins or allow_origin_regex.
     * 
     */
    @Import(name="allowOrigins")
      private final @Nullable Output<List<String>> allowOrigins;

    public Output<List<String>> getAllowOrigins() {
        return this.allowOrigins == null ? Codegen.empty() : this.allowOrigins;
    }

    /**
     * If true, specifies the CORS policy is disabled.
     * 
     */
    @Import(name="disabled", required=true)
      private final Output<Boolean> disabled;

    public Output<Boolean> getDisabled() {
        return this.disabled;
    }

    /**
     * Specifies the content for the Access-Control-Expose-Headers header.
     * 
     */
    @Import(name="exposeHeaders")
      private final @Nullable Output<List<String>> exposeHeaders;

    public Output<List<String>> getExposeHeaders() {
        return this.exposeHeaders == null ? Codegen.empty() : this.exposeHeaders;
    }

    /**
     * Specifies how long the results of a preflight request can be cached. This
     * translates to the content for the Access-Control-Max-Age header.
     * 
     */
    @Import(name="maxAge")
      private final @Nullable Output<Integer> maxAge;

    public Output<Integer> getMaxAge() {
        return this.maxAge == null ? Codegen.empty() : this.maxAge;
    }

    public RegionUrlMapPathMatcherPathRuleRouteActionCorsPolicyArgs(
        @Nullable Output<Boolean> allowCredentials,
        @Nullable Output<List<String>> allowHeaders,
        @Nullable Output<List<String>> allowMethods,
        @Nullable Output<List<String>> allowOriginRegexes,
        @Nullable Output<List<String>> allowOrigins,
        Output<Boolean> disabled,
        @Nullable Output<List<String>> exposeHeaders,
        @Nullable Output<Integer> maxAge) {
        this.allowCredentials = allowCredentials;
        this.allowHeaders = allowHeaders;
        this.allowMethods = allowMethods;
        this.allowOriginRegexes = allowOriginRegexes;
        this.allowOrigins = allowOrigins;
        this.disabled = Objects.requireNonNull(disabled, "expected parameter 'disabled' to be non-null");
        this.exposeHeaders = exposeHeaders;
        this.maxAge = maxAge;
    }

    private RegionUrlMapPathMatcherPathRuleRouteActionCorsPolicyArgs() {
        this.allowCredentials = Codegen.empty();
        this.allowHeaders = Codegen.empty();
        this.allowMethods = Codegen.empty();
        this.allowOriginRegexes = Codegen.empty();
        this.allowOrigins = Codegen.empty();
        this.disabled = Codegen.empty();
        this.exposeHeaders = Codegen.empty();
        this.maxAge = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RegionUrlMapPathMatcherPathRuleRouteActionCorsPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<Boolean> allowCredentials;
        private @Nullable Output<List<String>> allowHeaders;
        private @Nullable Output<List<String>> allowMethods;
        private @Nullable Output<List<String>> allowOriginRegexes;
        private @Nullable Output<List<String>> allowOrigins;
        private Output<Boolean> disabled;
        private @Nullable Output<List<String>> exposeHeaders;
        private @Nullable Output<Integer> maxAge;

        public Builder() {
    	      // Empty
        }

        public Builder(RegionUrlMapPathMatcherPathRuleRouteActionCorsPolicyArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allowCredentials = defaults.allowCredentials;
    	      this.allowHeaders = defaults.allowHeaders;
    	      this.allowMethods = defaults.allowMethods;
    	      this.allowOriginRegexes = defaults.allowOriginRegexes;
    	      this.allowOrigins = defaults.allowOrigins;
    	      this.disabled = defaults.disabled;
    	      this.exposeHeaders = defaults.exposeHeaders;
    	      this.maxAge = defaults.maxAge;
        }

        public Builder allowCredentials(@Nullable Output<Boolean> allowCredentials) {
            this.allowCredentials = allowCredentials;
            return this;
        }
        public Builder allowCredentials(@Nullable Boolean allowCredentials) {
            this.allowCredentials = Codegen.ofNullable(allowCredentials);
            return this;
        }
        public Builder allowHeaders(@Nullable Output<List<String>> allowHeaders) {
            this.allowHeaders = allowHeaders;
            return this;
        }
        public Builder allowHeaders(@Nullable List<String> allowHeaders) {
            this.allowHeaders = Codegen.ofNullable(allowHeaders);
            return this;
        }
        public Builder allowHeaders(String... allowHeaders) {
            return allowHeaders(List.of(allowHeaders));
        }
        public Builder allowMethods(@Nullable Output<List<String>> allowMethods) {
            this.allowMethods = allowMethods;
            return this;
        }
        public Builder allowMethods(@Nullable List<String> allowMethods) {
            this.allowMethods = Codegen.ofNullable(allowMethods);
            return this;
        }
        public Builder allowMethods(String... allowMethods) {
            return allowMethods(List.of(allowMethods));
        }
        public Builder allowOriginRegexes(@Nullable Output<List<String>> allowOriginRegexes) {
            this.allowOriginRegexes = allowOriginRegexes;
            return this;
        }
        public Builder allowOriginRegexes(@Nullable List<String> allowOriginRegexes) {
            this.allowOriginRegexes = Codegen.ofNullable(allowOriginRegexes);
            return this;
        }
        public Builder allowOriginRegexes(String... allowOriginRegexes) {
            return allowOriginRegexes(List.of(allowOriginRegexes));
        }
        public Builder allowOrigins(@Nullable Output<List<String>> allowOrigins) {
            this.allowOrigins = allowOrigins;
            return this;
        }
        public Builder allowOrigins(@Nullable List<String> allowOrigins) {
            this.allowOrigins = Codegen.ofNullable(allowOrigins);
            return this;
        }
        public Builder allowOrigins(String... allowOrigins) {
            return allowOrigins(List.of(allowOrigins));
        }
        public Builder disabled(Output<Boolean> disabled) {
            this.disabled = Objects.requireNonNull(disabled);
            return this;
        }
        public Builder disabled(Boolean disabled) {
            this.disabled = Output.of(Objects.requireNonNull(disabled));
            return this;
        }
        public Builder exposeHeaders(@Nullable Output<List<String>> exposeHeaders) {
            this.exposeHeaders = exposeHeaders;
            return this;
        }
        public Builder exposeHeaders(@Nullable List<String> exposeHeaders) {
            this.exposeHeaders = Codegen.ofNullable(exposeHeaders);
            return this;
        }
        public Builder exposeHeaders(String... exposeHeaders) {
            return exposeHeaders(List.of(exposeHeaders));
        }
        public Builder maxAge(@Nullable Output<Integer> maxAge) {
            this.maxAge = maxAge;
            return this;
        }
        public Builder maxAge(@Nullable Integer maxAge) {
            this.maxAge = Codegen.ofNullable(maxAge);
            return this;
        }        public RegionUrlMapPathMatcherPathRuleRouteActionCorsPolicyArgs build() {
            return new RegionUrlMapPathMatcherPathRuleRouteActionCorsPolicyArgs(allowCredentials, allowHeaders, allowMethods, allowOriginRegexes, allowOrigins, disabled, exposeHeaders, maxAge);
        }
    }
}
