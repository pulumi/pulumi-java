// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.container.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import io.pulumi.gcp.container.inputs.AzureNodePoolConfigRootVolumeArgs;
import io.pulumi.gcp.container.inputs.AzureNodePoolConfigSshConfigArgs;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class AzureNodePoolConfigArgs extends io.pulumi.resources.ResourceArgs {

    public static final AzureNodePoolConfigArgs Empty = new AzureNodePoolConfigArgs();

    /**
     * Optional. Configuration related to the root volume provisioned for each node pool machine. When unspecified, it defaults to a 32-GiB Azure Disk.
     * 
     */
    @InputImport(name="rootVolume")
    private final @Nullable Input<AzureNodePoolConfigRootVolumeArgs> rootVolume;

    public Input<AzureNodePoolConfigRootVolumeArgs> getRootVolume() {
        return this.rootVolume == null ? Input.empty() : this.rootVolume;
    }

    /**
     * Required. SSH configuration for how to access the node pool machines.
     * 
     */
    @InputImport(name="sshConfig", required=true)
    private final Input<AzureNodePoolConfigSshConfigArgs> sshConfig;

    public Input<AzureNodePoolConfigSshConfigArgs> getSshConfig() {
        return this.sshConfig;
    }

    /**
     * Optional. A set of tags to apply to all underlying Azure resources for this node pool. This currently only includes Virtual Machine Scale Sets. Specify at most 50 pairs containing alphanumerics, spaces, and symbols (.+-=_:@/). Keys can be up to 127 Unicode characters. Values can be up to 255 Unicode characters.
     * 
     */
    @InputImport(name="tags")
    private final @Nullable Input<Map<String,String>> tags;

    public Input<Map<String,String>> getTags() {
        return this.tags == null ? Input.empty() : this.tags;
    }

    /**
     * Optional. The Azure VM size name. Example: `Standard_DS2_v2`. See (/anthos/clusters/docs/azure/reference/supported-vms) for options. When unspecified, it defaults to `Standard_DS2_v2`.
     * 
     */
    @InputImport(name="vmSize")
    private final @Nullable Input<String> vmSize;

    public Input<String> getVmSize() {
        return this.vmSize == null ? Input.empty() : this.vmSize;
    }

    public AzureNodePoolConfigArgs(
        @Nullable Input<AzureNodePoolConfigRootVolumeArgs> rootVolume,
        Input<AzureNodePoolConfigSshConfigArgs> sshConfig,
        @Nullable Input<Map<String,String>> tags,
        @Nullable Input<String> vmSize) {
        this.rootVolume = rootVolume;
        this.sshConfig = Objects.requireNonNull(sshConfig, "expected parameter 'sshConfig' to be non-null");
        this.tags = tags;
        this.vmSize = vmSize;
    }

    private AzureNodePoolConfigArgs() {
        this.rootVolume = Input.empty();
        this.sshConfig = Input.empty();
        this.tags = Input.empty();
        this.vmSize = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AzureNodePoolConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<AzureNodePoolConfigRootVolumeArgs> rootVolume;
        private Input<AzureNodePoolConfigSshConfigArgs> sshConfig;
        private @Nullable Input<Map<String,String>> tags;
        private @Nullable Input<String> vmSize;

        public Builder() {
    	      // Empty
        }

        public Builder(AzureNodePoolConfigArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.rootVolume = defaults.rootVolume;
    	      this.sshConfig = defaults.sshConfig;
    	      this.tags = defaults.tags;
    	      this.vmSize = defaults.vmSize;
        }

        public Builder setRootVolume(@Nullable Input<AzureNodePoolConfigRootVolumeArgs> rootVolume) {
            this.rootVolume = rootVolume;
            return this;
        }

        public Builder setRootVolume(@Nullable AzureNodePoolConfigRootVolumeArgs rootVolume) {
            this.rootVolume = Input.ofNullable(rootVolume);
            return this;
        }

        public Builder setSshConfig(Input<AzureNodePoolConfigSshConfigArgs> sshConfig) {
            this.sshConfig = Objects.requireNonNull(sshConfig);
            return this;
        }

        public Builder setSshConfig(AzureNodePoolConfigSshConfigArgs sshConfig) {
            this.sshConfig = Input.of(Objects.requireNonNull(sshConfig));
            return this;
        }

        public Builder setTags(@Nullable Input<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }

        public Builder setTags(@Nullable Map<String,String> tags) {
            this.tags = Input.ofNullable(tags);
            return this;
        }

        public Builder setVmSize(@Nullable Input<String> vmSize) {
            this.vmSize = vmSize;
            return this;
        }

        public Builder setVmSize(@Nullable String vmSize) {
            this.vmSize = Input.ofNullable(vmSize);
            return this;
        }

        public AzureNodePoolConfigArgs build() {
            return new AzureNodePoolConfigArgs(rootVolume, sshConfig, tags, vmSize);
        }
    }
}
