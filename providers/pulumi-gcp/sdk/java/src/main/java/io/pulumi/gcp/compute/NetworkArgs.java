// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.compute;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class NetworkArgs extends io.pulumi.resources.ResourceArgs {

    public static final NetworkArgs Empty = new NetworkArgs();

    /**
     * When set to `true`, the network is created in "auto subnet mode" and
     * it will create a subnet for each region automatically across the
     * `10.128.0.0/9` address range.
     * When set to `false`, the network is created in "custom subnet mode" so
     * the user can explicitly connect subnetwork resources.
     * 
     */
    @Import(name="autoCreateSubnetworks")
      private final @Nullable Output<Boolean> autoCreateSubnetworks;

    public Output<Boolean> getAutoCreateSubnetworks() {
        return this.autoCreateSubnetworks == null ? Output.empty() : this.autoCreateSubnetworks;
    }

    /**
     * If set to `true`, default routes (`0.0.0.0/0`) will be deleted
     * immediately after network creation. Defaults to `false`.
     * 
     */
    @Import(name="deleteDefaultRoutesOnCreate")
      private final @Nullable Output<Boolean> deleteDefaultRoutesOnCreate;

    public Output<Boolean> getDeleteDefaultRoutesOnCreate() {
        return this.deleteDefaultRoutesOnCreate == null ? Output.empty() : this.deleteDefaultRoutesOnCreate;
    }

    /**
     * An optional description of this resource. The resource must be
     * recreated to modify this field.
     * 
     */
    @Import(name="description")
      private final @Nullable Output<String> description;

    public Output<String> getDescription() {
        return this.description == null ? Output.empty() : this.description;
    }

    /**
     * Maximum Transmission Unit in bytes. The minimum value for this field is 1460
     * and the maximum value is 1500 bytes.
     * 
     */
    @Import(name="mtu")
      private final @Nullable Output<Integer> mtu;

    public Output<Integer> getMtu() {
        return this.mtu == null ? Output.empty() : this.mtu;
    }

    /**
     * Name of the resource. Provided by the client when the resource is
     * created. The name must be 1-63 characters long, and comply with
     * RFC1035. Specifically, the name must be 1-63 characters long and match
     * the regular expression `a-z?` which means the
     * first character must be a lowercase letter, and all following
     * characters must be a dash, lowercase letter, or digit, except the last
     * character, which cannot be a dash.
     * 
     */
    @Import(name="name")
      private final @Nullable Output<String> name;

    public Output<String> getName() {
        return this.name == null ? Output.empty() : this.name;
    }

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Import(name="project")
      private final @Nullable Output<String> project;

    public Output<String> getProject() {
        return this.project == null ? Output.empty() : this.project;
    }

    /**
     * The network-wide routing mode to use. If set to `REGIONAL`, this
     * network's cloud routers will only advertise routes with subnetworks
     * of this network in the same region as the router. If set to `GLOBAL`,
     * this network's cloud routers will advertise routes with all
     * subnetworks of this network, across regions.
     * Possible values are `REGIONAL` and `GLOBAL`.
     * 
     */
    @Import(name="routingMode")
      private final @Nullable Output<String> routingMode;

    public Output<String> getRoutingMode() {
        return this.routingMode == null ? Output.empty() : this.routingMode;
    }

    public NetworkArgs(
        @Nullable Output<Boolean> autoCreateSubnetworks,
        @Nullable Output<Boolean> deleteDefaultRoutesOnCreate,
        @Nullable Output<String> description,
        @Nullable Output<Integer> mtu,
        @Nullable Output<String> name,
        @Nullable Output<String> project,
        @Nullable Output<String> routingMode) {
        this.autoCreateSubnetworks = autoCreateSubnetworks;
        this.deleteDefaultRoutesOnCreate = deleteDefaultRoutesOnCreate;
        this.description = description;
        this.mtu = mtu;
        this.name = name;
        this.project = project;
        this.routingMode = routingMode;
    }

    private NetworkArgs() {
        this.autoCreateSubnetworks = Output.empty();
        this.deleteDefaultRoutesOnCreate = Output.empty();
        this.description = Output.empty();
        this.mtu = Output.empty();
        this.name = Output.empty();
        this.project = Output.empty();
        this.routingMode = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(NetworkArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<Boolean> autoCreateSubnetworks;
        private @Nullable Output<Boolean> deleteDefaultRoutesOnCreate;
        private @Nullable Output<String> description;
        private @Nullable Output<Integer> mtu;
        private @Nullable Output<String> name;
        private @Nullable Output<String> project;
        private @Nullable Output<String> routingMode;

        public Builder() {
    	      // Empty
        }

        public Builder(NetworkArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.autoCreateSubnetworks = defaults.autoCreateSubnetworks;
    	      this.deleteDefaultRoutesOnCreate = defaults.deleteDefaultRoutesOnCreate;
    	      this.description = defaults.description;
    	      this.mtu = defaults.mtu;
    	      this.name = defaults.name;
    	      this.project = defaults.project;
    	      this.routingMode = defaults.routingMode;
        }

        public Builder autoCreateSubnetworks(@Nullable Output<Boolean> autoCreateSubnetworks) {
            this.autoCreateSubnetworks = autoCreateSubnetworks;
            return this;
        }
        public Builder autoCreateSubnetworks(@Nullable Boolean autoCreateSubnetworks) {
            this.autoCreateSubnetworks = Output.ofNullable(autoCreateSubnetworks);
            return this;
        }
        public Builder deleteDefaultRoutesOnCreate(@Nullable Output<Boolean> deleteDefaultRoutesOnCreate) {
            this.deleteDefaultRoutesOnCreate = deleteDefaultRoutesOnCreate;
            return this;
        }
        public Builder deleteDefaultRoutesOnCreate(@Nullable Boolean deleteDefaultRoutesOnCreate) {
            this.deleteDefaultRoutesOnCreate = Output.ofNullable(deleteDefaultRoutesOnCreate);
            return this;
        }
        public Builder description(@Nullable Output<String> description) {
            this.description = description;
            return this;
        }
        public Builder description(@Nullable String description) {
            this.description = Output.ofNullable(description);
            return this;
        }
        public Builder mtu(@Nullable Output<Integer> mtu) {
            this.mtu = mtu;
            return this;
        }
        public Builder mtu(@Nullable Integer mtu) {
            this.mtu = Output.ofNullable(mtu);
            return this;
        }
        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }
        public Builder name(@Nullable String name) {
            this.name = Output.ofNullable(name);
            return this;
        }
        public Builder project(@Nullable Output<String> project) {
            this.project = project;
            return this;
        }
        public Builder project(@Nullable String project) {
            this.project = Output.ofNullable(project);
            return this;
        }
        public Builder routingMode(@Nullable Output<String> routingMode) {
            this.routingMode = routingMode;
            return this;
        }
        public Builder routingMode(@Nullable String routingMode) {
            this.routingMode = Output.ofNullable(routingMode);
            return this;
        }        public NetworkArgs build() {
            return new NetworkArgs(autoCreateSubnetworks, deleteDefaultRoutesOnCreate, description, mtu, name, project, routingMode);
        }
    }
}
