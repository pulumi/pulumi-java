// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.sql.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import io.pulumi.gcp.sql.inputs.DatabaseInstanceSettingsBackupConfigurationBackupRetentionSettingsGetArgs;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class DatabaseInstanceSettingsBackupConfigurationGetArgs extends io.pulumi.resources.ResourceArgs {

    public static final DatabaseInstanceSettingsBackupConfigurationGetArgs Empty = new DatabaseInstanceSettingsBackupConfigurationGetArgs();

    /**
     * Backup retention settings. The configuration is detailed below.
     * 
     */
    @Import(name="backupRetentionSettings")
      private final @Nullable Output<DatabaseInstanceSettingsBackupConfigurationBackupRetentionSettingsGetArgs> backupRetentionSettings;

    public Output<DatabaseInstanceSettingsBackupConfigurationBackupRetentionSettingsGetArgs> getBackupRetentionSettings() {
        return this.backupRetentionSettings == null ? Codegen.empty() : this.backupRetentionSettings;
    }

    /**
     * True if binary logging is enabled.
     * Cannot be used with Postgres.
     * 
     */
    @Import(name="binaryLogEnabled")
      private final @Nullable Output<Boolean> binaryLogEnabled;

    public Output<Boolean> getBinaryLogEnabled() {
        return this.binaryLogEnabled == null ? Codegen.empty() : this.binaryLogEnabled;
    }

    /**
     * True if backup configuration is enabled.
     * 
     */
    @Import(name="enabled")
      private final @Nullable Output<Boolean> enabled;

    public Output<Boolean> getEnabled() {
        return this.enabled == null ? Codegen.empty() : this.enabled;
    }

    /**
     * The region where the backup will be stored
     * 
     */
    @Import(name="location")
      private final @Nullable Output<String> location;

    public Output<String> getLocation() {
        return this.location == null ? Codegen.empty() : this.location;
    }

    /**
     * True if Point-in-time recovery is enabled. Will restart database if enabled after instance creation. Valid only for PostgreSQL instances.
     * 
     */
    @Import(name="pointInTimeRecoveryEnabled")
      private final @Nullable Output<Boolean> pointInTimeRecoveryEnabled;

    public Output<Boolean> getPointInTimeRecoveryEnabled() {
        return this.pointInTimeRecoveryEnabled == null ? Codegen.empty() : this.pointInTimeRecoveryEnabled;
    }

    /**
     * `HH:MM` format time indicating when backup
     * configuration starts.
     * 
     */
    @Import(name="startTime")
      private final @Nullable Output<String> startTime;

    public Output<String> getStartTime() {
        return this.startTime == null ? Codegen.empty() : this.startTime;
    }

    /**
     * The number of days of transaction logs we retain for point in time restore, from 1-7.
     * 
     */
    @Import(name="transactionLogRetentionDays")
      private final @Nullable Output<Integer> transactionLogRetentionDays;

    public Output<Integer> getTransactionLogRetentionDays() {
        return this.transactionLogRetentionDays == null ? Codegen.empty() : this.transactionLogRetentionDays;
    }

    public DatabaseInstanceSettingsBackupConfigurationGetArgs(
        @Nullable Output<DatabaseInstanceSettingsBackupConfigurationBackupRetentionSettingsGetArgs> backupRetentionSettings,
        @Nullable Output<Boolean> binaryLogEnabled,
        @Nullable Output<Boolean> enabled,
        @Nullable Output<String> location,
        @Nullable Output<Boolean> pointInTimeRecoveryEnabled,
        @Nullable Output<String> startTime,
        @Nullable Output<Integer> transactionLogRetentionDays) {
        this.backupRetentionSettings = backupRetentionSettings;
        this.binaryLogEnabled = binaryLogEnabled;
        this.enabled = enabled;
        this.location = location;
        this.pointInTimeRecoveryEnabled = pointInTimeRecoveryEnabled;
        this.startTime = startTime;
        this.transactionLogRetentionDays = transactionLogRetentionDays;
    }

    private DatabaseInstanceSettingsBackupConfigurationGetArgs() {
        this.backupRetentionSettings = Codegen.empty();
        this.binaryLogEnabled = Codegen.empty();
        this.enabled = Codegen.empty();
        this.location = Codegen.empty();
        this.pointInTimeRecoveryEnabled = Codegen.empty();
        this.startTime = Codegen.empty();
        this.transactionLogRetentionDays = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DatabaseInstanceSettingsBackupConfigurationGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<DatabaseInstanceSettingsBackupConfigurationBackupRetentionSettingsGetArgs> backupRetentionSettings;
        private @Nullable Output<Boolean> binaryLogEnabled;
        private @Nullable Output<Boolean> enabled;
        private @Nullable Output<String> location;
        private @Nullable Output<Boolean> pointInTimeRecoveryEnabled;
        private @Nullable Output<String> startTime;
        private @Nullable Output<Integer> transactionLogRetentionDays;

        public Builder() {
    	      // Empty
        }

        public Builder(DatabaseInstanceSettingsBackupConfigurationGetArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.backupRetentionSettings = defaults.backupRetentionSettings;
    	      this.binaryLogEnabled = defaults.binaryLogEnabled;
    	      this.enabled = defaults.enabled;
    	      this.location = defaults.location;
    	      this.pointInTimeRecoveryEnabled = defaults.pointInTimeRecoveryEnabled;
    	      this.startTime = defaults.startTime;
    	      this.transactionLogRetentionDays = defaults.transactionLogRetentionDays;
        }

        public Builder backupRetentionSettings(@Nullable Output<DatabaseInstanceSettingsBackupConfigurationBackupRetentionSettingsGetArgs> backupRetentionSettings) {
            this.backupRetentionSettings = backupRetentionSettings;
            return this;
        }
        public Builder backupRetentionSettings(@Nullable DatabaseInstanceSettingsBackupConfigurationBackupRetentionSettingsGetArgs backupRetentionSettings) {
            this.backupRetentionSettings = Codegen.ofNullable(backupRetentionSettings);
            return this;
        }
        public Builder binaryLogEnabled(@Nullable Output<Boolean> binaryLogEnabled) {
            this.binaryLogEnabled = binaryLogEnabled;
            return this;
        }
        public Builder binaryLogEnabled(@Nullable Boolean binaryLogEnabled) {
            this.binaryLogEnabled = Codegen.ofNullable(binaryLogEnabled);
            return this;
        }
        public Builder enabled(@Nullable Output<Boolean> enabled) {
            this.enabled = enabled;
            return this;
        }
        public Builder enabled(@Nullable Boolean enabled) {
            this.enabled = Codegen.ofNullable(enabled);
            return this;
        }
        public Builder location(@Nullable Output<String> location) {
            this.location = location;
            return this;
        }
        public Builder location(@Nullable String location) {
            this.location = Codegen.ofNullable(location);
            return this;
        }
        public Builder pointInTimeRecoveryEnabled(@Nullable Output<Boolean> pointInTimeRecoveryEnabled) {
            this.pointInTimeRecoveryEnabled = pointInTimeRecoveryEnabled;
            return this;
        }
        public Builder pointInTimeRecoveryEnabled(@Nullable Boolean pointInTimeRecoveryEnabled) {
            this.pointInTimeRecoveryEnabled = Codegen.ofNullable(pointInTimeRecoveryEnabled);
            return this;
        }
        public Builder startTime(@Nullable Output<String> startTime) {
            this.startTime = startTime;
            return this;
        }
        public Builder startTime(@Nullable String startTime) {
            this.startTime = Codegen.ofNullable(startTime);
            return this;
        }
        public Builder transactionLogRetentionDays(@Nullable Output<Integer> transactionLogRetentionDays) {
            this.transactionLogRetentionDays = transactionLogRetentionDays;
            return this;
        }
        public Builder transactionLogRetentionDays(@Nullable Integer transactionLogRetentionDays) {
            this.transactionLogRetentionDays = Codegen.ofNullable(transactionLogRetentionDays);
            return this;
        }        public DatabaseInstanceSettingsBackupConfigurationGetArgs build() {
            return new DatabaseInstanceSettingsBackupConfigurationGetArgs(backupRetentionSettings, binaryLogEnabled, enabled, location, pointInTimeRecoveryEnabled, startTime, transactionLogRetentionDays);
        }
    }
}
