// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.diagflow.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class CxVersionNluSettingGetArgs extends io.pulumi.resources.ResourceArgs {

    public static final CxVersionNluSettingGetArgs Empty = new CxVersionNluSettingGetArgs();

    @Import(name="classificationThreshold")
      private final @Nullable Output<Double> classificationThreshold;

    public Output<Double> getClassificationThreshold() {
        return this.classificationThreshold == null ? Codegen.empty() : this.classificationThreshold;
    }

    @Import(name="modelTrainingMode")
      private final @Nullable Output<String> modelTrainingMode;

    public Output<String> getModelTrainingMode() {
        return this.modelTrainingMode == null ? Codegen.empty() : this.modelTrainingMode;
    }

    @Import(name="modelType")
      private final @Nullable Output<String> modelType;

    public Output<String> getModelType() {
        return this.modelType == null ? Codegen.empty() : this.modelType;
    }

    public CxVersionNluSettingGetArgs(
        @Nullable Output<Double> classificationThreshold,
        @Nullable Output<String> modelTrainingMode,
        @Nullable Output<String> modelType) {
        this.classificationThreshold = classificationThreshold;
        this.modelTrainingMode = modelTrainingMode;
        this.modelType = modelType;
    }

    private CxVersionNluSettingGetArgs() {
        this.classificationThreshold = Codegen.empty();
        this.modelTrainingMode = Codegen.empty();
        this.modelType = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CxVersionNluSettingGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<Double> classificationThreshold;
        private @Nullable Output<String> modelTrainingMode;
        private @Nullable Output<String> modelType;

        public Builder() {
    	      // Empty
        }

        public Builder(CxVersionNluSettingGetArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.classificationThreshold = defaults.classificationThreshold;
    	      this.modelTrainingMode = defaults.modelTrainingMode;
    	      this.modelType = defaults.modelType;
        }

        public Builder classificationThreshold(@Nullable Output<Double> classificationThreshold) {
            this.classificationThreshold = classificationThreshold;
            return this;
        }
        public Builder classificationThreshold(@Nullable Double classificationThreshold) {
            this.classificationThreshold = Codegen.ofNullable(classificationThreshold);
            return this;
        }
        public Builder modelTrainingMode(@Nullable Output<String> modelTrainingMode) {
            this.modelTrainingMode = modelTrainingMode;
            return this;
        }
        public Builder modelTrainingMode(@Nullable String modelTrainingMode) {
            this.modelTrainingMode = Codegen.ofNullable(modelTrainingMode);
            return this;
        }
        public Builder modelType(@Nullable Output<String> modelType) {
            this.modelType = modelType;
            return this;
        }
        public Builder modelType(@Nullable String modelType) {
            this.modelType = Codegen.ofNullable(modelType);
            return this;
        }        public CxVersionNluSettingGetArgs build() {
            return new CxVersionNluSettingGetArgs(classificationThreshold, modelTrainingMode, modelType);
        }
    }
}
