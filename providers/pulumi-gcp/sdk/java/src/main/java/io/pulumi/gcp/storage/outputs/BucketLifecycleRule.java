// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.storage.outputs;

import io.pulumi.core.annotations.CustomType;
import io.pulumi.gcp.storage.outputs.BucketLifecycleRuleAction;
import io.pulumi.gcp.storage.outputs.BucketLifecycleRuleCondition;
import java.util.Objects;

@CustomType
public final class BucketLifecycleRule {
    /**
     * The Lifecycle Rule's action configuration. A single block of this type is supported. Structure is documented below.
     * 
     */
    private final BucketLifecycleRuleAction action;
    /**
     * The Lifecycle Rule's condition configuration. A single block of this type is supported. Structure is documented below.
     * 
     */
    private final BucketLifecycleRuleCondition condition;

    @CustomType.Constructor
    private BucketLifecycleRule(
        @CustomType.Parameter("action") BucketLifecycleRuleAction action,
        @CustomType.Parameter("condition") BucketLifecycleRuleCondition condition) {
        this.action = action;
        this.condition = condition;
    }

    /**
     * The Lifecycle Rule's action configuration. A single block of this type is supported. Structure is documented below.
     * 
    */
    public BucketLifecycleRuleAction getAction() {
        return this.action;
    }
    /**
     * The Lifecycle Rule's condition configuration. A single block of this type is supported. Structure is documented below.
     * 
    */
    public BucketLifecycleRuleCondition getCondition() {
        return this.condition;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BucketLifecycleRule defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BucketLifecycleRuleAction action;
        private BucketLifecycleRuleCondition condition;

        public Builder() {
    	      // Empty
        }

        public Builder(BucketLifecycleRule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.action = defaults.action;
    	      this.condition = defaults.condition;
        }

        public Builder action(BucketLifecycleRuleAction action) {
            this.action = Objects.requireNonNull(action);
            return this;
        }
        public Builder condition(BucketLifecycleRuleCondition condition) {
            this.condition = Objects.requireNonNull(condition);
            return this;
        }        public BucketLifecycleRule build() {
            return new BucketLifecycleRule(action, condition);
        }
    }
}
