// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.accesscontextmanager.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.gcp.accesscontextmanager.inputs.AccessLevelsAccessLevelBasicGetArgs;
import io.pulumi.gcp.accesscontextmanager.inputs.AccessLevelsAccessLevelCustomGetArgs;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class AccessLevelsAccessLevelGetArgs extends io.pulumi.resources.ResourceArgs {

    public static final AccessLevelsAccessLevelGetArgs Empty = new AccessLevelsAccessLevelGetArgs();

    /**
     * A set of predefined conditions for the access level and a combining function.
     * Structure is documented below.
     * 
     */
    @Import(name="basic")
      private final @Nullable Output<AccessLevelsAccessLevelBasicGetArgs> basic;

    public Output<AccessLevelsAccessLevelBasicGetArgs> getBasic() {
        return this.basic == null ? Output.empty() : this.basic;
    }

    /**
     * Custom access level conditions are set using the Cloud Common Expression Language to represent the necessary conditions for the level to apply to a request.
     * See CEL spec at: https://github.com/google/cel-spec.
     * Structure is documented below.
     * 
     */
    @Import(name="custom")
      private final @Nullable Output<AccessLevelsAccessLevelCustomGetArgs> custom;

    public Output<AccessLevelsAccessLevelCustomGetArgs> getCustom() {
        return this.custom == null ? Output.empty() : this.custom;
    }

    /**
     * Description of the expression
     * 
     */
    @Import(name="description")
      private final @Nullable Output<String> description;

    public Output<String> getDescription() {
        return this.description == null ? Output.empty() : this.description;
    }

    /**
     * Resource name for the Access Level. The short_name component must begin
     * with a letter and only include alphanumeric and '_'.
     * Format: accessPolicies/{policy_id}/accessLevels/{short_name}
     * 
     */
    @Import(name="name", required=true)
      private final Output<String> name;

    public Output<String> getName() {
        return this.name;
    }

    /**
     * Title for the expression, i.e. a short string describing its purpose.
     * 
     */
    @Import(name="title", required=true)
      private final Output<String> title;

    public Output<String> getTitle() {
        return this.title;
    }

    public AccessLevelsAccessLevelGetArgs(
        @Nullable Output<AccessLevelsAccessLevelBasicGetArgs> basic,
        @Nullable Output<AccessLevelsAccessLevelCustomGetArgs> custom,
        @Nullable Output<String> description,
        Output<String> name,
        Output<String> title) {
        this.basic = basic;
        this.custom = custom;
        this.description = description;
        this.name = Objects.requireNonNull(name, "expected parameter 'name' to be non-null");
        this.title = Objects.requireNonNull(title, "expected parameter 'title' to be non-null");
    }

    private AccessLevelsAccessLevelGetArgs() {
        this.basic = Output.empty();
        this.custom = Output.empty();
        this.description = Output.empty();
        this.name = Output.empty();
        this.title = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AccessLevelsAccessLevelGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<AccessLevelsAccessLevelBasicGetArgs> basic;
        private @Nullable Output<AccessLevelsAccessLevelCustomGetArgs> custom;
        private @Nullable Output<String> description;
        private Output<String> name;
        private Output<String> title;

        public Builder() {
    	      // Empty
        }

        public Builder(AccessLevelsAccessLevelGetArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.basic = defaults.basic;
    	      this.custom = defaults.custom;
    	      this.description = defaults.description;
    	      this.name = defaults.name;
    	      this.title = defaults.title;
        }

        public Builder basic(@Nullable Output<AccessLevelsAccessLevelBasicGetArgs> basic) {
            this.basic = basic;
            return this;
        }

        public Builder basic(@Nullable AccessLevelsAccessLevelBasicGetArgs basic) {
            this.basic = Output.ofNullable(basic);
            return this;
        }

        public Builder custom(@Nullable Output<AccessLevelsAccessLevelCustomGetArgs> custom) {
            this.custom = custom;
            return this;
        }

        public Builder custom(@Nullable AccessLevelsAccessLevelCustomGetArgs custom) {
            this.custom = Output.ofNullable(custom);
            return this;
        }

        public Builder description(@Nullable Output<String> description) {
            this.description = description;
            return this;
        }

        public Builder description(@Nullable String description) {
            this.description = Output.ofNullable(description);
            return this;
        }

        public Builder name(Output<String> name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder name(String name) {
            this.name = Output.of(Objects.requireNonNull(name));
            return this;
        }

        public Builder title(Output<String> title) {
            this.title = Objects.requireNonNull(title);
            return this;
        }

        public Builder title(String title) {
            this.title = Output.of(Objects.requireNonNull(title));
            return this;
        }
        public AccessLevelsAccessLevelGetArgs build() {
            return new AccessLevelsAccessLevelGetArgs(basic, custom, description, name, title);
        }
    }
}
