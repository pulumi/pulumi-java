// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.diagflow.outputs;

import io.pulumi.core.annotations.CustomType;
import io.pulumi.gcp.diagflow.outputs.CxFlowTransitionRouteTriggerFulfillmentMessage;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class CxFlowTransitionRouteTriggerFulfillment {
    /**
     * The list of rich message responses to present to the user.
     * Structure is documented below.
     * 
     */
    private final @Nullable List<CxFlowTransitionRouteTriggerFulfillmentMessage> messages;
    /**
     * Whether Dialogflow should return currently queued fulfillment response messages in streaming APIs. If a webhook is specified, it happens before Dialogflow invokes webhook. Warning: 1) This flag only affects streaming API. Responses are still queued and returned once in non-streaming API. 2) The flag can be enabled in any fulfillment but only the first 3 partial responses will be returned. You may only want to apply it to fulfillments that have slow webhooks.
     * 
     */
    private final @Nullable Boolean returnPartialResponses;
    /**
     * The tag used by the webhook to identify which fulfillment is being called. This field is required if webhook is specified.
     * 
     */
    private final @Nullable String tag;
    /**
     * The webhook to call. Format: projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>/webhooks/<Webhook ID>.
     * 
     */
    private final @Nullable String webhook;

    @CustomType.Constructor
    private CxFlowTransitionRouteTriggerFulfillment(
        @CustomType.Parameter("messages") @Nullable List<CxFlowTransitionRouteTriggerFulfillmentMessage> messages,
        @CustomType.Parameter("returnPartialResponses") @Nullable Boolean returnPartialResponses,
        @CustomType.Parameter("tag") @Nullable String tag,
        @CustomType.Parameter("webhook") @Nullable String webhook) {
        this.messages = messages;
        this.returnPartialResponses = returnPartialResponses;
        this.tag = tag;
        this.webhook = webhook;
    }

    /**
     * The list of rich message responses to present to the user.
     * Structure is documented below.
     * 
    */
    public List<CxFlowTransitionRouteTriggerFulfillmentMessage> getMessages() {
        return this.messages == null ? List.of() : this.messages;
    }
    /**
     * Whether Dialogflow should return currently queued fulfillment response messages in streaming APIs. If a webhook is specified, it happens before Dialogflow invokes webhook. Warning: 1) This flag only affects streaming API. Responses are still queued and returned once in non-streaming API. 2) The flag can be enabled in any fulfillment but only the first 3 partial responses will be returned. You may only want to apply it to fulfillments that have slow webhooks.
     * 
    */
    public Optional<Boolean> getReturnPartialResponses() {
        return Optional.ofNullable(this.returnPartialResponses);
    }
    /**
     * The tag used by the webhook to identify which fulfillment is being called. This field is required if webhook is specified.
     * 
    */
    public Optional<String> getTag() {
        return Optional.ofNullable(this.tag);
    }
    /**
     * The webhook to call. Format: projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>/webhooks/<Webhook ID>.
     * 
    */
    public Optional<String> getWebhook() {
        return Optional.ofNullable(this.webhook);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CxFlowTransitionRouteTriggerFulfillment defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable List<CxFlowTransitionRouteTriggerFulfillmentMessage> messages;
        private @Nullable Boolean returnPartialResponses;
        private @Nullable String tag;
        private @Nullable String webhook;

        public Builder() {
    	      // Empty
        }

        public Builder(CxFlowTransitionRouteTriggerFulfillment defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.messages = defaults.messages;
    	      this.returnPartialResponses = defaults.returnPartialResponses;
    	      this.tag = defaults.tag;
    	      this.webhook = defaults.webhook;
        }

        public Builder messages(@Nullable List<CxFlowTransitionRouteTriggerFulfillmentMessage> messages) {
            this.messages = messages;
            return this;
        }

        public Builder returnPartialResponses(@Nullable Boolean returnPartialResponses) {
            this.returnPartialResponses = returnPartialResponses;
            return this;
        }

        public Builder tag(@Nullable String tag) {
            this.tag = tag;
            return this;
        }

        public Builder webhook(@Nullable String webhook) {
            this.webhook = webhook;
            return this;
        }
        public CxFlowTransitionRouteTriggerFulfillment build() {
            return new CxFlowTransitionRouteTriggerFulfillment(messages, returnPartialResponses, tag, webhook);
        }
    }
}
