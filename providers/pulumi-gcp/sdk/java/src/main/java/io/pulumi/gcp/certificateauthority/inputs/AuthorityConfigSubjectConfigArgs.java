// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.certificateauthority.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import io.pulumi.gcp.certificateauthority.inputs.AuthorityConfigSubjectConfigSubjectAltNameArgs;
import io.pulumi.gcp.certificateauthority.inputs.AuthorityConfigSubjectConfigSubjectArgs;
import java.util.Objects;
import javax.annotation.Nullable;


public final class AuthorityConfigSubjectConfigArgs extends io.pulumi.resources.ResourceArgs {

    public static final AuthorityConfigSubjectConfigArgs Empty = new AuthorityConfigSubjectConfigArgs();

    @InputImport(name="subject", required=true)
    private final Input<AuthorityConfigSubjectConfigSubjectArgs> subject;

    public Input<AuthorityConfigSubjectConfigSubjectArgs> getSubject() {
        return this.subject;
    }

    @InputImport(name="subjectAltName")
    private final @Nullable Input<AuthorityConfigSubjectConfigSubjectAltNameArgs> subjectAltName;

    public Input<AuthorityConfigSubjectConfigSubjectAltNameArgs> getSubjectAltName() {
        return this.subjectAltName == null ? Input.empty() : this.subjectAltName;
    }

    public AuthorityConfigSubjectConfigArgs(
        Input<AuthorityConfigSubjectConfigSubjectArgs> subject,
        @Nullable Input<AuthorityConfigSubjectConfigSubjectAltNameArgs> subjectAltName) {
        this.subject = Objects.requireNonNull(subject, "expected parameter 'subject' to be non-null");
        this.subjectAltName = subjectAltName;
    }

    private AuthorityConfigSubjectConfigArgs() {
        this.subject = Input.empty();
        this.subjectAltName = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AuthorityConfigSubjectConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<AuthorityConfigSubjectConfigSubjectArgs> subject;
        private @Nullable Input<AuthorityConfigSubjectConfigSubjectAltNameArgs> subjectAltName;

        public Builder() {
    	      // Empty
        }

        public Builder(AuthorityConfigSubjectConfigArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.subject = defaults.subject;
    	      this.subjectAltName = defaults.subjectAltName;
        }

        public Builder setSubject(Input<AuthorityConfigSubjectConfigSubjectArgs> subject) {
            this.subject = Objects.requireNonNull(subject);
            return this;
        }

        public Builder setSubject(AuthorityConfigSubjectConfigSubjectArgs subject) {
            this.subject = Input.of(Objects.requireNonNull(subject));
            return this;
        }

        public Builder setSubjectAltName(@Nullable Input<AuthorityConfigSubjectConfigSubjectAltNameArgs> subjectAltName) {
            this.subjectAltName = subjectAltName;
            return this;
        }

        public Builder setSubjectAltName(@Nullable AuthorityConfigSubjectConfigSubjectAltNameArgs subjectAltName) {
            this.subjectAltName = Input.ofNullable(subjectAltName);
            return this;
        }

        public AuthorityConfigSubjectConfigArgs build() {
            return new AuthorityConfigSubjectConfigArgs(subject, subjectAltName);
        }
    }
}
