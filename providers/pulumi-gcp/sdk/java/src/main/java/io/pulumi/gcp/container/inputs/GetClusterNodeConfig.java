// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.container.inputs;

import io.pulumi.core.internal.annotations.InputImport;
import io.pulumi.gcp.container.inputs.GetClusterNodeConfigEphemeralStorageConfig;
import io.pulumi.gcp.container.inputs.GetClusterNodeConfigGcfsConfig;
import io.pulumi.gcp.container.inputs.GetClusterNodeConfigGuestAccelerator;
import io.pulumi.gcp.container.inputs.GetClusterNodeConfigKubeletConfig;
import io.pulumi.gcp.container.inputs.GetClusterNodeConfigLinuxNodeConfig;
import io.pulumi.gcp.container.inputs.GetClusterNodeConfigSandboxConfig;
import io.pulumi.gcp.container.inputs.GetClusterNodeConfigShieldedInstanceConfig;
import io.pulumi.gcp.container.inputs.GetClusterNodeConfigTaint;
import io.pulumi.gcp.container.inputs.GetClusterNodeConfigWorkloadMetadataConfig;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;


public final class GetClusterNodeConfig extends io.pulumi.resources.InvokeArgs {

    public static final GetClusterNodeConfig Empty = new GetClusterNodeConfig();

    @InputImport(name="bootDiskKmsKey", required=true)
    private final String bootDiskKmsKey;

    public String getBootDiskKmsKey() {
        return this.bootDiskKmsKey;
    }

    @InputImport(name="diskSizeGb", required=true)
    private final Integer diskSizeGb;

    public Integer getDiskSizeGb() {
        return this.diskSizeGb;
    }

    @InputImport(name="diskType", required=true)
    private final String diskType;

    public String getDiskType() {
        return this.diskType;
    }

    @InputImport(name="ephemeralStorageConfigs", required=true)
    private final List<GetClusterNodeConfigEphemeralStorageConfig> ephemeralStorageConfigs;

    public List<GetClusterNodeConfigEphemeralStorageConfig> getEphemeralStorageConfigs() {
        return this.ephemeralStorageConfigs;
    }

    @InputImport(name="gcfsConfigs", required=true)
    private final List<GetClusterNodeConfigGcfsConfig> gcfsConfigs;

    public List<GetClusterNodeConfigGcfsConfig> getGcfsConfigs() {
        return this.gcfsConfigs;
    }

    @InputImport(name="guestAccelerators", required=true)
    private final List<GetClusterNodeConfigGuestAccelerator> guestAccelerators;

    public List<GetClusterNodeConfigGuestAccelerator> getGuestAccelerators() {
        return this.guestAccelerators;
    }

    @InputImport(name="imageType", required=true)
    private final String imageType;

    public String getImageType() {
        return this.imageType;
    }

    @InputImport(name="kubeletConfigs", required=true)
    private final List<GetClusterNodeConfigKubeletConfig> kubeletConfigs;

    public List<GetClusterNodeConfigKubeletConfig> getKubeletConfigs() {
        return this.kubeletConfigs;
    }

    @InputImport(name="labels", required=true)
    private final Map<String,String> labels;

    public Map<String,String> getLabels() {
        return this.labels;
    }

    @InputImport(name="linuxNodeConfigs", required=true)
    private final List<GetClusterNodeConfigLinuxNodeConfig> linuxNodeConfigs;

    public List<GetClusterNodeConfigLinuxNodeConfig> getLinuxNodeConfigs() {
        return this.linuxNodeConfigs;
    }

    @InputImport(name="localSsdCount", required=true)
    private final Integer localSsdCount;

    public Integer getLocalSsdCount() {
        return this.localSsdCount;
    }

    @InputImport(name="machineType", required=true)
    private final String machineType;

    public String getMachineType() {
        return this.machineType;
    }

    @InputImport(name="metadata", required=true)
    private final Map<String,String> metadata;

    public Map<String,String> getMetadata() {
        return this.metadata;
    }

    @InputImport(name="minCpuPlatform", required=true)
    private final String minCpuPlatform;

    public String getMinCpuPlatform() {
        return this.minCpuPlatform;
    }

    @InputImport(name="nodeGroup", required=true)
    private final String nodeGroup;

    public String getNodeGroup() {
        return this.nodeGroup;
    }

    @InputImport(name="oauthScopes", required=true)
    private final List<String> oauthScopes;

    public List<String> getOauthScopes() {
        return this.oauthScopes;
    }

    @InputImport(name="preemptible", required=true)
    private final Boolean preemptible;

    public Boolean getPreemptible() {
        return this.preemptible;
    }

    @InputImport(name="sandboxConfigs", required=true)
    private final List<GetClusterNodeConfigSandboxConfig> sandboxConfigs;

    public List<GetClusterNodeConfigSandboxConfig> getSandboxConfigs() {
        return this.sandboxConfigs;
    }

    @InputImport(name="serviceAccount", required=true)
    private final String serviceAccount;

    public String getServiceAccount() {
        return this.serviceAccount;
    }

    @InputImport(name="shieldedInstanceConfigs", required=true)
    private final List<GetClusterNodeConfigShieldedInstanceConfig> shieldedInstanceConfigs;

    public List<GetClusterNodeConfigShieldedInstanceConfig> getShieldedInstanceConfigs() {
        return this.shieldedInstanceConfigs;
    }

    @InputImport(name="spot", required=true)
    private final Boolean spot;

    public Boolean getSpot() {
        return this.spot;
    }

    @InputImport(name="tags", required=true)
    private final List<String> tags;

    public List<String> getTags() {
        return this.tags;
    }

    @InputImport(name="taints", required=true)
    private final List<GetClusterNodeConfigTaint> taints;

    public List<GetClusterNodeConfigTaint> getTaints() {
        return this.taints;
    }

    @InputImport(name="workloadMetadataConfigs", required=true)
    private final List<GetClusterNodeConfigWorkloadMetadataConfig> workloadMetadataConfigs;

    public List<GetClusterNodeConfigWorkloadMetadataConfig> getWorkloadMetadataConfigs() {
        return this.workloadMetadataConfigs;
    }

    public GetClusterNodeConfig(
        String bootDiskKmsKey,
        Integer diskSizeGb,
        String diskType,
        List<GetClusterNodeConfigEphemeralStorageConfig> ephemeralStorageConfigs,
        List<GetClusterNodeConfigGcfsConfig> gcfsConfigs,
        List<GetClusterNodeConfigGuestAccelerator> guestAccelerators,
        String imageType,
        List<GetClusterNodeConfigKubeletConfig> kubeletConfigs,
        Map<String,String> labels,
        List<GetClusterNodeConfigLinuxNodeConfig> linuxNodeConfigs,
        Integer localSsdCount,
        String machineType,
        Map<String,String> metadata,
        String minCpuPlatform,
        String nodeGroup,
        List<String> oauthScopes,
        Boolean preemptible,
        List<GetClusterNodeConfigSandboxConfig> sandboxConfigs,
        String serviceAccount,
        List<GetClusterNodeConfigShieldedInstanceConfig> shieldedInstanceConfigs,
        Boolean spot,
        List<String> tags,
        List<GetClusterNodeConfigTaint> taints,
        List<GetClusterNodeConfigWorkloadMetadataConfig> workloadMetadataConfigs) {
        this.bootDiskKmsKey = Objects.requireNonNull(bootDiskKmsKey, "expected parameter 'bootDiskKmsKey' to be non-null");
        this.diskSizeGb = Objects.requireNonNull(diskSizeGb, "expected parameter 'diskSizeGb' to be non-null");
        this.diskType = Objects.requireNonNull(diskType, "expected parameter 'diskType' to be non-null");
        this.ephemeralStorageConfigs = Objects.requireNonNull(ephemeralStorageConfigs, "expected parameter 'ephemeralStorageConfigs' to be non-null");
        this.gcfsConfigs = Objects.requireNonNull(gcfsConfigs, "expected parameter 'gcfsConfigs' to be non-null");
        this.guestAccelerators = Objects.requireNonNull(guestAccelerators, "expected parameter 'guestAccelerators' to be non-null");
        this.imageType = Objects.requireNonNull(imageType, "expected parameter 'imageType' to be non-null");
        this.kubeletConfigs = Objects.requireNonNull(kubeletConfigs, "expected parameter 'kubeletConfigs' to be non-null");
        this.labels = Objects.requireNonNull(labels, "expected parameter 'labels' to be non-null");
        this.linuxNodeConfigs = Objects.requireNonNull(linuxNodeConfigs, "expected parameter 'linuxNodeConfigs' to be non-null");
        this.localSsdCount = Objects.requireNonNull(localSsdCount, "expected parameter 'localSsdCount' to be non-null");
        this.machineType = Objects.requireNonNull(machineType, "expected parameter 'machineType' to be non-null");
        this.metadata = Objects.requireNonNull(metadata, "expected parameter 'metadata' to be non-null");
        this.minCpuPlatform = Objects.requireNonNull(minCpuPlatform, "expected parameter 'minCpuPlatform' to be non-null");
        this.nodeGroup = Objects.requireNonNull(nodeGroup, "expected parameter 'nodeGroup' to be non-null");
        this.oauthScopes = Objects.requireNonNull(oauthScopes, "expected parameter 'oauthScopes' to be non-null");
        this.preemptible = Objects.requireNonNull(preemptible, "expected parameter 'preemptible' to be non-null");
        this.sandboxConfigs = Objects.requireNonNull(sandboxConfigs, "expected parameter 'sandboxConfigs' to be non-null");
        this.serviceAccount = Objects.requireNonNull(serviceAccount, "expected parameter 'serviceAccount' to be non-null");
        this.shieldedInstanceConfigs = Objects.requireNonNull(shieldedInstanceConfigs, "expected parameter 'shieldedInstanceConfigs' to be non-null");
        this.spot = Objects.requireNonNull(spot, "expected parameter 'spot' to be non-null");
        this.tags = Objects.requireNonNull(tags, "expected parameter 'tags' to be non-null");
        this.taints = Objects.requireNonNull(taints, "expected parameter 'taints' to be non-null");
        this.workloadMetadataConfigs = Objects.requireNonNull(workloadMetadataConfigs, "expected parameter 'workloadMetadataConfigs' to be non-null");
    }

    private GetClusterNodeConfig() {
        this.bootDiskKmsKey = null;
        this.diskSizeGb = null;
        this.diskType = null;
        this.ephemeralStorageConfigs = List.of();
        this.gcfsConfigs = List.of();
        this.guestAccelerators = List.of();
        this.imageType = null;
        this.kubeletConfigs = List.of();
        this.labels = Map.of();
        this.linuxNodeConfigs = List.of();
        this.localSsdCount = null;
        this.machineType = null;
        this.metadata = Map.of();
        this.minCpuPlatform = null;
        this.nodeGroup = null;
        this.oauthScopes = List.of();
        this.preemptible = null;
        this.sandboxConfigs = List.of();
        this.serviceAccount = null;
        this.shieldedInstanceConfigs = List.of();
        this.spot = null;
        this.tags = List.of();
        this.taints = List.of();
        this.workloadMetadataConfigs = List.of();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetClusterNodeConfig defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String bootDiskKmsKey;
        private Integer diskSizeGb;
        private String diskType;
        private List<GetClusterNodeConfigEphemeralStorageConfig> ephemeralStorageConfigs;
        private List<GetClusterNodeConfigGcfsConfig> gcfsConfigs;
        private List<GetClusterNodeConfigGuestAccelerator> guestAccelerators;
        private String imageType;
        private List<GetClusterNodeConfigKubeletConfig> kubeletConfigs;
        private Map<String,String> labels;
        private List<GetClusterNodeConfigLinuxNodeConfig> linuxNodeConfigs;
        private Integer localSsdCount;
        private String machineType;
        private Map<String,String> metadata;
        private String minCpuPlatform;
        private String nodeGroup;
        private List<String> oauthScopes;
        private Boolean preemptible;
        private List<GetClusterNodeConfigSandboxConfig> sandboxConfigs;
        private String serviceAccount;
        private List<GetClusterNodeConfigShieldedInstanceConfig> shieldedInstanceConfigs;
        private Boolean spot;
        private List<String> tags;
        private List<GetClusterNodeConfigTaint> taints;
        private List<GetClusterNodeConfigWorkloadMetadataConfig> workloadMetadataConfigs;

        public Builder() {
    	      // Empty
        }

        public Builder(GetClusterNodeConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bootDiskKmsKey = defaults.bootDiskKmsKey;
    	      this.diskSizeGb = defaults.diskSizeGb;
    	      this.diskType = defaults.diskType;
    	      this.ephemeralStorageConfigs = defaults.ephemeralStorageConfigs;
    	      this.gcfsConfigs = defaults.gcfsConfigs;
    	      this.guestAccelerators = defaults.guestAccelerators;
    	      this.imageType = defaults.imageType;
    	      this.kubeletConfigs = defaults.kubeletConfigs;
    	      this.labels = defaults.labels;
    	      this.linuxNodeConfigs = defaults.linuxNodeConfigs;
    	      this.localSsdCount = defaults.localSsdCount;
    	      this.machineType = defaults.machineType;
    	      this.metadata = defaults.metadata;
    	      this.minCpuPlatform = defaults.minCpuPlatform;
    	      this.nodeGroup = defaults.nodeGroup;
    	      this.oauthScopes = defaults.oauthScopes;
    	      this.preemptible = defaults.preemptible;
    	      this.sandboxConfigs = defaults.sandboxConfigs;
    	      this.serviceAccount = defaults.serviceAccount;
    	      this.shieldedInstanceConfigs = defaults.shieldedInstanceConfigs;
    	      this.spot = defaults.spot;
    	      this.tags = defaults.tags;
    	      this.taints = defaults.taints;
    	      this.workloadMetadataConfigs = defaults.workloadMetadataConfigs;
        }

        public Builder setBootDiskKmsKey(String bootDiskKmsKey) {
            this.bootDiskKmsKey = Objects.requireNonNull(bootDiskKmsKey);
            return this;
        }

        public Builder setDiskSizeGb(Integer diskSizeGb) {
            this.diskSizeGb = Objects.requireNonNull(diskSizeGb);
            return this;
        }

        public Builder setDiskType(String diskType) {
            this.diskType = Objects.requireNonNull(diskType);
            return this;
        }

        public Builder setEphemeralStorageConfigs(List<GetClusterNodeConfigEphemeralStorageConfig> ephemeralStorageConfigs) {
            this.ephemeralStorageConfigs = Objects.requireNonNull(ephemeralStorageConfigs);
            return this;
        }

        public Builder setGcfsConfigs(List<GetClusterNodeConfigGcfsConfig> gcfsConfigs) {
            this.gcfsConfigs = Objects.requireNonNull(gcfsConfigs);
            return this;
        }

        public Builder setGuestAccelerators(List<GetClusterNodeConfigGuestAccelerator> guestAccelerators) {
            this.guestAccelerators = Objects.requireNonNull(guestAccelerators);
            return this;
        }

        public Builder setImageType(String imageType) {
            this.imageType = Objects.requireNonNull(imageType);
            return this;
        }

        public Builder setKubeletConfigs(List<GetClusterNodeConfigKubeletConfig> kubeletConfigs) {
            this.kubeletConfigs = Objects.requireNonNull(kubeletConfigs);
            return this;
        }

        public Builder setLabels(Map<String,String> labels) {
            this.labels = Objects.requireNonNull(labels);
            return this;
        }

        public Builder setLinuxNodeConfigs(List<GetClusterNodeConfigLinuxNodeConfig> linuxNodeConfigs) {
            this.linuxNodeConfigs = Objects.requireNonNull(linuxNodeConfigs);
            return this;
        }

        public Builder setLocalSsdCount(Integer localSsdCount) {
            this.localSsdCount = Objects.requireNonNull(localSsdCount);
            return this;
        }

        public Builder setMachineType(String machineType) {
            this.machineType = Objects.requireNonNull(machineType);
            return this;
        }

        public Builder setMetadata(Map<String,String> metadata) {
            this.metadata = Objects.requireNonNull(metadata);
            return this;
        }

        public Builder setMinCpuPlatform(String minCpuPlatform) {
            this.minCpuPlatform = Objects.requireNonNull(minCpuPlatform);
            return this;
        }

        public Builder setNodeGroup(String nodeGroup) {
            this.nodeGroup = Objects.requireNonNull(nodeGroup);
            return this;
        }

        public Builder setOauthScopes(List<String> oauthScopes) {
            this.oauthScopes = Objects.requireNonNull(oauthScopes);
            return this;
        }

        public Builder setPreemptible(Boolean preemptible) {
            this.preemptible = Objects.requireNonNull(preemptible);
            return this;
        }

        public Builder setSandboxConfigs(List<GetClusterNodeConfigSandboxConfig> sandboxConfigs) {
            this.sandboxConfigs = Objects.requireNonNull(sandboxConfigs);
            return this;
        }

        public Builder setServiceAccount(String serviceAccount) {
            this.serviceAccount = Objects.requireNonNull(serviceAccount);
            return this;
        }

        public Builder setShieldedInstanceConfigs(List<GetClusterNodeConfigShieldedInstanceConfig> shieldedInstanceConfigs) {
            this.shieldedInstanceConfigs = Objects.requireNonNull(shieldedInstanceConfigs);
            return this;
        }

        public Builder setSpot(Boolean spot) {
            this.spot = Objects.requireNonNull(spot);
            return this;
        }

        public Builder setTags(List<String> tags) {
            this.tags = Objects.requireNonNull(tags);
            return this;
        }

        public Builder setTaints(List<GetClusterNodeConfigTaint> taints) {
            this.taints = Objects.requireNonNull(taints);
            return this;
        }

        public Builder setWorkloadMetadataConfigs(List<GetClusterNodeConfigWorkloadMetadataConfig> workloadMetadataConfigs) {
            this.workloadMetadataConfigs = Objects.requireNonNull(workloadMetadataConfigs);
            return this;
        }

        public GetClusterNodeConfig build() {
            return new GetClusterNodeConfig(bootDiskKmsKey, diskSizeGb, diskType, ephemeralStorageConfigs, gcfsConfigs, guestAccelerators, imageType, kubeletConfigs, labels, linuxNodeConfigs, localSsdCount, machineType, metadata, minCpuPlatform, nodeGroup, oauthScopes, preemptible, sandboxConfigs, serviceAccount, shieldedInstanceConfigs, spot, tags, taints, workloadMetadataConfigs);
        }
    }
}
