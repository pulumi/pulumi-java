// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.appengine.outputs;

import io.pulumi.core.annotations.OutputCustomType;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class FlexibleAppVersionAutomaticScalingDiskUtilization {
    /**
     * Target bytes read per second.
     * 
     */
    private final @Nullable Integer targetReadBytesPerSecond;
    /**
     * Target ops read per seconds.
     * 
     */
    private final @Nullable Integer targetReadOpsPerSecond;
    /**
     * Target bytes written per second.
     * 
     */
    private final @Nullable Integer targetWriteBytesPerSecond;
    /**
     * Target ops written per second.
     * 
     */
    private final @Nullable Integer targetWriteOpsPerSecond;

    @OutputCustomType.Constructor({"targetReadBytesPerSecond","targetReadOpsPerSecond","targetWriteBytesPerSecond","targetWriteOpsPerSecond"})
    private FlexibleAppVersionAutomaticScalingDiskUtilization(
        @Nullable Integer targetReadBytesPerSecond,
        @Nullable Integer targetReadOpsPerSecond,
        @Nullable Integer targetWriteBytesPerSecond,
        @Nullable Integer targetWriteOpsPerSecond) {
        this.targetReadBytesPerSecond = targetReadBytesPerSecond;
        this.targetReadOpsPerSecond = targetReadOpsPerSecond;
        this.targetWriteBytesPerSecond = targetWriteBytesPerSecond;
        this.targetWriteOpsPerSecond = targetWriteOpsPerSecond;
    }

    /**
     * Target bytes read per second.
     * 
     */
    public Optional<Integer> getTargetReadBytesPerSecond() {
        return Optional.ofNullable(this.targetReadBytesPerSecond);
    }
    /**
     * Target ops read per seconds.
     * 
     */
    public Optional<Integer> getTargetReadOpsPerSecond() {
        return Optional.ofNullable(this.targetReadOpsPerSecond);
    }
    /**
     * Target bytes written per second.
     * 
     */
    public Optional<Integer> getTargetWriteBytesPerSecond() {
        return Optional.ofNullable(this.targetWriteBytesPerSecond);
    }
    /**
     * Target ops written per second.
     * 
     */
    public Optional<Integer> getTargetWriteOpsPerSecond() {
        return Optional.ofNullable(this.targetWriteOpsPerSecond);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FlexibleAppVersionAutomaticScalingDiskUtilization defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Integer targetReadBytesPerSecond;
        private @Nullable Integer targetReadOpsPerSecond;
        private @Nullable Integer targetWriteBytesPerSecond;
        private @Nullable Integer targetWriteOpsPerSecond;

        public Builder() {
    	      // Empty
        }

        public Builder(FlexibleAppVersionAutomaticScalingDiskUtilization defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.targetReadBytesPerSecond = defaults.targetReadBytesPerSecond;
    	      this.targetReadOpsPerSecond = defaults.targetReadOpsPerSecond;
    	      this.targetWriteBytesPerSecond = defaults.targetWriteBytesPerSecond;
    	      this.targetWriteOpsPerSecond = defaults.targetWriteOpsPerSecond;
        }

        public Builder setTargetReadBytesPerSecond(@Nullable Integer targetReadBytesPerSecond) {
            this.targetReadBytesPerSecond = targetReadBytesPerSecond;
            return this;
        }

        public Builder setTargetReadOpsPerSecond(@Nullable Integer targetReadOpsPerSecond) {
            this.targetReadOpsPerSecond = targetReadOpsPerSecond;
            return this;
        }

        public Builder setTargetWriteBytesPerSecond(@Nullable Integer targetWriteBytesPerSecond) {
            this.targetWriteBytesPerSecond = targetWriteBytesPerSecond;
            return this;
        }

        public Builder setTargetWriteOpsPerSecond(@Nullable Integer targetWriteOpsPerSecond) {
            this.targetWriteOpsPerSecond = targetWriteOpsPerSecond;
            return this;
        }

        public FlexibleAppVersionAutomaticScalingDiskUtilization build() {
            return new FlexibleAppVersionAutomaticScalingDiskUtilization(targetReadBytesPerSecond, targetReadOpsPerSecond, targetWriteBytesPerSecond, targetWriteOpsPerSecond);
        }
    }
}
