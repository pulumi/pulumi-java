// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.pubsub;

import io.pulumi.core.Input;
import io.pulumi.core.Output;
import io.pulumi.core.internal.annotations.OutputExport;
import io.pulumi.core.internal.annotations.ResourceType;
import io.pulumi.gcp.Utilities;
import io.pulumi.gcp.pubsub.SubscriptionArgs;
import io.pulumi.gcp.pubsub.inputs.SubscriptionState;
import io.pulumi.gcp.pubsub.outputs.SubscriptionDeadLetterPolicy;
import io.pulumi.gcp.pubsub.outputs.SubscriptionExpirationPolicy;
import io.pulumi.gcp.pubsub.outputs.SubscriptionPushConfig;
import io.pulumi.gcp.pubsub.outputs.SubscriptionRetryPolicy;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;

@ResourceType(type="gcp:pubsub/subscription:Subscription")
public class Subscription extends io.pulumi.resources.CustomResource {
    @OutputExport(name="ackDeadlineSeconds", type=Integer.class, parameters={})
    private Output<Integer> ackDeadlineSeconds;

    public Output<Integer> getAckDeadlineSeconds() {
        return this.ackDeadlineSeconds;
    }
    @OutputExport(name="deadLetterPolicy", type=SubscriptionDeadLetterPolicy.class, parameters={})
    private Output</* @Nullable */ SubscriptionDeadLetterPolicy> deadLetterPolicy;

    public Output</* @Nullable */ SubscriptionDeadLetterPolicy> getDeadLetterPolicy() {
        return this.deadLetterPolicy;
    }
    @OutputExport(name="enableMessageOrdering", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> enableMessageOrdering;

    public Output</* @Nullable */ Boolean> getEnableMessageOrdering() {
        return this.enableMessageOrdering;
    }
    @OutputExport(name="expirationPolicy", type=SubscriptionExpirationPolicy.class, parameters={})
    private Output<SubscriptionExpirationPolicy> expirationPolicy;

    public Output<SubscriptionExpirationPolicy> getExpirationPolicy() {
        return this.expirationPolicy;
    }
    @OutputExport(name="filter", type=String.class, parameters={})
    private Output</* @Nullable */ String> filter;

    public Output</* @Nullable */ String> getFilter() {
        return this.filter;
    }
    @OutputExport(name="labels", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> labels;

    public Output</* @Nullable */ Map<String,String>> getLabels() {
        return this.labels;
    }
    @OutputExport(name="messageRetentionDuration", type=String.class, parameters={})
    private Output</* @Nullable */ String> messageRetentionDuration;

    public Output</* @Nullable */ String> getMessageRetentionDuration() {
        return this.messageRetentionDuration;
    }
    @OutputExport(name="name", type=String.class, parameters={})
    private Output<String> name;

    public Output<String> getName() {
        return this.name;
    }
    @OutputExport(name="project", type=String.class, parameters={})
    private Output<String> project;

    public Output<String> getProject() {
        return this.project;
    }
    @OutputExport(name="pushConfig", type=SubscriptionPushConfig.class, parameters={})
    private Output</* @Nullable */ SubscriptionPushConfig> pushConfig;

    public Output</* @Nullable */ SubscriptionPushConfig> getPushConfig() {
        return this.pushConfig;
    }
    @OutputExport(name="retainAckedMessages", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> retainAckedMessages;

    public Output</* @Nullable */ Boolean> getRetainAckedMessages() {
        return this.retainAckedMessages;
    }
    @OutputExport(name="retryPolicy", type=SubscriptionRetryPolicy.class, parameters={})
    private Output</* @Nullable */ SubscriptionRetryPolicy> retryPolicy;

    public Output</* @Nullable */ SubscriptionRetryPolicy> getRetryPolicy() {
        return this.retryPolicy;
    }
    @OutputExport(name="topic", type=String.class, parameters={})
    private Output<String> topic;

    public Output<String> getTopic() {
        return this.topic;
    }

    public Subscription(String name, SubscriptionArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("gcp:pubsub/subscription:Subscription", name, args == null ? SubscriptionArgs.Empty : args, makeResourceOptions(options, Input.empty()));
    }

    private Subscription(String name, Input<String> id, @Nullable SubscriptionState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("gcp:pubsub/subscription:Subscription", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Input<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .setVersion(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    public static Subscription get(String name, Input<String> id, @Nullable SubscriptionState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new Subscription(name, id, state, options);
    }
}
