// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.monitoring.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import io.pulumi.gcp.monitoring.outputs.AlertPolicyConditionConditionThresholdAggregation;
import io.pulumi.gcp.monitoring.outputs.AlertPolicyConditionConditionThresholdDenominatorAggregation;
import io.pulumi.gcp.monitoring.outputs.AlertPolicyConditionConditionThresholdTrigger;
import java.lang.Double;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class AlertPolicyConditionConditionThreshold {
    private final @Nullable List<AlertPolicyConditionConditionThresholdAggregation> aggregations;
    private final String comparison;
    private final @Nullable List<AlertPolicyConditionConditionThresholdDenominatorAggregation> denominatorAggregations;
    private final @Nullable String denominatorFilter;
    private final String duration;
    private final @Nullable String filter;
    private final @Nullable Double thresholdValue;
    private final @Nullable AlertPolicyConditionConditionThresholdTrigger trigger;

    @OutputCustomType.Constructor({"aggregations","comparison","denominatorAggregations","denominatorFilter","duration","filter","thresholdValue","trigger"})
    private AlertPolicyConditionConditionThreshold(
        @Nullable List<AlertPolicyConditionConditionThresholdAggregation> aggregations,
        String comparison,
        @Nullable List<AlertPolicyConditionConditionThresholdDenominatorAggregation> denominatorAggregations,
        @Nullable String denominatorFilter,
        String duration,
        @Nullable String filter,
        @Nullable Double thresholdValue,
        @Nullable AlertPolicyConditionConditionThresholdTrigger trigger) {
        this.aggregations = aggregations;
        this.comparison = Objects.requireNonNull(comparison);
        this.denominatorAggregations = denominatorAggregations;
        this.denominatorFilter = denominatorFilter;
        this.duration = Objects.requireNonNull(duration);
        this.filter = filter;
        this.thresholdValue = thresholdValue;
        this.trigger = trigger;
    }

    public List<AlertPolicyConditionConditionThresholdAggregation> getAggregations() {
        return this.aggregations == null ? List.of() : this.aggregations;
    }
    public String getComparison() {
        return this.comparison;
    }
    public List<AlertPolicyConditionConditionThresholdDenominatorAggregation> getDenominatorAggregations() {
        return this.denominatorAggregations == null ? List.of() : this.denominatorAggregations;
    }
    public Optional<String> getDenominatorFilter() {
        return Optional.ofNullable(this.denominatorFilter);
    }
    public String getDuration() {
        return this.duration;
    }
    public Optional<String> getFilter() {
        return Optional.ofNullable(this.filter);
    }
    public Optional<Double> getThresholdValue() {
        return Optional.ofNullable(this.thresholdValue);
    }
    public Optional<AlertPolicyConditionConditionThresholdTrigger> getTrigger() {
        return Optional.ofNullable(this.trigger);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AlertPolicyConditionConditionThreshold defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable List<AlertPolicyConditionConditionThresholdAggregation> aggregations;
        private String comparison;
        private @Nullable List<AlertPolicyConditionConditionThresholdDenominatorAggregation> denominatorAggregations;
        private @Nullable String denominatorFilter;
        private String duration;
        private @Nullable String filter;
        private @Nullable Double thresholdValue;
        private @Nullable AlertPolicyConditionConditionThresholdTrigger trigger;

        public Builder() {
    	      // Empty
        }

        public Builder(AlertPolicyConditionConditionThreshold defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.aggregations = defaults.aggregations;
    	      this.comparison = defaults.comparison;
    	      this.denominatorAggregations = defaults.denominatorAggregations;
    	      this.denominatorFilter = defaults.denominatorFilter;
    	      this.duration = defaults.duration;
    	      this.filter = defaults.filter;
    	      this.thresholdValue = defaults.thresholdValue;
    	      this.trigger = defaults.trigger;
        }

        public Builder setAggregations(@Nullable List<AlertPolicyConditionConditionThresholdAggregation> aggregations) {
            this.aggregations = aggregations;
            return this;
        }

        public Builder setComparison(String comparison) {
            this.comparison = Objects.requireNonNull(comparison);
            return this;
        }

        public Builder setDenominatorAggregations(@Nullable List<AlertPolicyConditionConditionThresholdDenominatorAggregation> denominatorAggregations) {
            this.denominatorAggregations = denominatorAggregations;
            return this;
        }

        public Builder setDenominatorFilter(@Nullable String denominatorFilter) {
            this.denominatorFilter = denominatorFilter;
            return this;
        }

        public Builder setDuration(String duration) {
            this.duration = Objects.requireNonNull(duration);
            return this;
        }

        public Builder setFilter(@Nullable String filter) {
            this.filter = filter;
            return this;
        }

        public Builder setThresholdValue(@Nullable Double thresholdValue) {
            this.thresholdValue = thresholdValue;
            return this;
        }

        public Builder setTrigger(@Nullable AlertPolicyConditionConditionThresholdTrigger trigger) {
            this.trigger = trigger;
            return this;
        }

        public AlertPolicyConditionConditionThreshold build() {
            return new AlertPolicyConditionConditionThreshold(aggregations, comparison, denominatorAggregations, denominatorFilter, duration, filter, thresholdValue, trigger);
        }
    }
}
