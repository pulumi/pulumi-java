// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.compute;

import io.pulumi.core.Input;
import io.pulumi.core.Output;
import io.pulumi.core.internal.annotations.OutputExport;
import io.pulumi.core.internal.annotations.ResourceType;
import io.pulumi.gcp.Utilities;
import io.pulumi.gcp.compute.InterconnectAttachmentArgs;
import io.pulumi.gcp.compute.inputs.InterconnectAttachmentState;
import io.pulumi.gcp.compute.outputs.InterconnectAttachmentPrivateInterconnectInfo;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

@ResourceType(type="gcp:compute/interconnectAttachment:InterconnectAttachment")
public class InterconnectAttachment extends io.pulumi.resources.CustomResource {
    @OutputExport(name="adminEnabled", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> adminEnabled;

    public Output</* @Nullable */ Boolean> getAdminEnabled() {
        return this.adminEnabled;
    }
    @OutputExport(name="bandwidth", type=String.class, parameters={})
    private Output<String> bandwidth;

    public Output<String> getBandwidth() {
        return this.bandwidth;
    }
    @OutputExport(name="candidateSubnets", type=List.class, parameters={String.class})
    private Output</* @Nullable */ List<String>> candidateSubnets;

    public Output</* @Nullable */ List<String>> getCandidateSubnets() {
        return this.candidateSubnets;
    }
    @OutputExport(name="cloudRouterIpAddress", type=String.class, parameters={})
    private Output<String> cloudRouterIpAddress;

    public Output<String> getCloudRouterIpAddress() {
        return this.cloudRouterIpAddress;
    }
    @OutputExport(name="creationTimestamp", type=String.class, parameters={})
    private Output<String> creationTimestamp;

    public Output<String> getCreationTimestamp() {
        return this.creationTimestamp;
    }
    @OutputExport(name="customerRouterIpAddress", type=String.class, parameters={})
    private Output<String> customerRouterIpAddress;

    public Output<String> getCustomerRouterIpAddress() {
        return this.customerRouterIpAddress;
    }
    @OutputExport(name="description", type=String.class, parameters={})
    private Output</* @Nullable */ String> description;

    public Output</* @Nullable */ String> getDescription() {
        return this.description;
    }
    @OutputExport(name="edgeAvailabilityDomain", type=String.class, parameters={})
    private Output<String> edgeAvailabilityDomain;

    public Output<String> getEdgeAvailabilityDomain() {
        return this.edgeAvailabilityDomain;
    }
    @OutputExport(name="encryption", type=String.class, parameters={})
    private Output</* @Nullable */ String> encryption;

    public Output</* @Nullable */ String> getEncryption() {
        return this.encryption;
    }
    @OutputExport(name="googleReferenceId", type=String.class, parameters={})
    private Output<String> googleReferenceId;

    public Output<String> getGoogleReferenceId() {
        return this.googleReferenceId;
    }
    @OutputExport(name="interconnect", type=String.class, parameters={})
    private Output</* @Nullable */ String> interconnect;

    public Output</* @Nullable */ String> getInterconnect() {
        return this.interconnect;
    }
    @OutputExport(name="ipsecInternalAddresses", type=List.class, parameters={String.class})
    private Output</* @Nullable */ List<String>> ipsecInternalAddresses;

    public Output</* @Nullable */ List<String>> getIpsecInternalAddresses() {
        return this.ipsecInternalAddresses;
    }
    @OutputExport(name="mtu", type=String.class, parameters={})
    private Output<String> mtu;

    public Output<String> getMtu() {
        return this.mtu;
    }
    @OutputExport(name="name", type=String.class, parameters={})
    private Output<String> name;

    public Output<String> getName() {
        return this.name;
    }
    @OutputExport(name="pairingKey", type=String.class, parameters={})
    private Output<String> pairingKey;

    public Output<String> getPairingKey() {
        return this.pairingKey;
    }
    @OutputExport(name="partnerAsn", type=String.class, parameters={})
    private Output<String> partnerAsn;

    public Output<String> getPartnerAsn() {
        return this.partnerAsn;
    }
    @OutputExport(name="privateInterconnectInfos", type=List.class, parameters={InterconnectAttachmentPrivateInterconnectInfo.class})
    private Output<List<InterconnectAttachmentPrivateInterconnectInfo>> privateInterconnectInfos;

    public Output<List<InterconnectAttachmentPrivateInterconnectInfo>> getPrivateInterconnectInfos() {
        return this.privateInterconnectInfos;
    }
    @OutputExport(name="project", type=String.class, parameters={})
    private Output<String> project;

    public Output<String> getProject() {
        return this.project;
    }
    @OutputExport(name="region", type=String.class, parameters={})
    private Output<String> region;

    public Output<String> getRegion() {
        return this.region;
    }
    @OutputExport(name="router", type=String.class, parameters={})
    private Output<String> router;

    public Output<String> getRouter() {
        return this.router;
    }
    @OutputExport(name="selfLink", type=String.class, parameters={})
    private Output<String> selfLink;

    public Output<String> getSelfLink() {
        return this.selfLink;
    }
    @OutputExport(name="state", type=String.class, parameters={})
    private Output<String> state;

    public Output<String> getState() {
        return this.state;
    }
    @OutputExport(name="type", type=String.class, parameters={})
    private Output<String> type;

    public Output<String> getType() {
        return this.type;
    }
    @OutputExport(name="vlanTag8021q", type=Integer.class, parameters={})
    private Output<Integer> vlanTag8021q;

    public Output<Integer> getVlanTag8021q() {
        return this.vlanTag8021q;
    }

    public InterconnectAttachment(String name, InterconnectAttachmentArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("gcp:compute/interconnectAttachment:InterconnectAttachment", name, args == null ? InterconnectAttachmentArgs.Empty : args, makeResourceOptions(options, Input.empty()));
    }

    private InterconnectAttachment(String name, Input<String> id, @Nullable InterconnectAttachmentState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("gcp:compute/interconnectAttachment:InterconnectAttachment", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Input<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .setVersion(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    public static InterconnectAttachment get(String name, Input<String> id, @Nullable InterconnectAttachmentState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new InterconnectAttachment(name, id, state, options);
    }
}
