// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.compute;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class SharedVPCServiceProjectArgs extends io.pulumi.resources.ResourceArgs {

    public static final SharedVPCServiceProjectArgs Empty = new SharedVPCServiceProjectArgs();

    /**
     * The ID of a host project to associate.
     * 
     */
    @Import(name="hostProject", required=true)
      private final Output<String> hostProject;

    public Output<String> getHostProject() {
        return this.hostProject;
    }

    /**
     * The ID of the project that will serve as a Shared VPC service project.
     * 
     */
    @Import(name="serviceProject", required=true)
      private final Output<String> serviceProject;

    public Output<String> getServiceProject() {
        return this.serviceProject;
    }

    public SharedVPCServiceProjectArgs(
        Output<String> hostProject,
        Output<String> serviceProject) {
        this.hostProject = Objects.requireNonNull(hostProject, "expected parameter 'hostProject' to be non-null");
        this.serviceProject = Objects.requireNonNull(serviceProject, "expected parameter 'serviceProject' to be non-null");
    }

    private SharedVPCServiceProjectArgs() {
        this.hostProject = Output.empty();
        this.serviceProject = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SharedVPCServiceProjectArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> hostProject;
        private Output<String> serviceProject;

        public Builder() {
    	      // Empty
        }

        public Builder(SharedVPCServiceProjectArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.hostProject = defaults.hostProject;
    	      this.serviceProject = defaults.serviceProject;
        }

        public Builder hostProject(Output<String> hostProject) {
            this.hostProject = Objects.requireNonNull(hostProject);
            return this;
        }
        public Builder hostProject(String hostProject) {
            this.hostProject = Output.of(Objects.requireNonNull(hostProject));
            return this;
        }
        public Builder serviceProject(Output<String> serviceProject) {
            this.serviceProject = Objects.requireNonNull(serviceProject);
            return this;
        }
        public Builder serviceProject(String serviceProject) {
            this.serviceProject = Output.of(Objects.requireNonNull(serviceProject));
            return this;
        }        public SharedVPCServiceProjectArgs build() {
            return new SharedVPCServiceProjectArgs(hostProject, serviceProject);
        }
    }
}
