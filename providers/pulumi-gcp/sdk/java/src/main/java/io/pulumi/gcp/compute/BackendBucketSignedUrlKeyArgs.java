// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.compute;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class BackendBucketSignedUrlKeyArgs extends io.pulumi.resources.ResourceArgs {

    public static final BackendBucketSignedUrlKeyArgs Empty = new BackendBucketSignedUrlKeyArgs();

    /**
     * The backend bucket this signed URL key belongs.
     * 
     */
    @InputImport(name="backendBucket", required=true)
    private final Input<String> backendBucket;

    public Input<String> getBackendBucket() {
        return this.backendBucket;
    }

    /**
     * 128-bit key value used for signing the URL. The key value must be a
     * valid RFC 4648 Section 5 base64url encoded string.
     * **Note**: This property is sensitive and will not be displayed in the plan.
     * 
     */
    @InputImport(name="keyValue", required=true)
    private final Input<String> keyValue;

    public Input<String> getKeyValue() {
        return this.keyValue;
    }

    /**
     * Name of the signed URL key.
     * 
     */
    @InputImport(name="name")
    private final @Nullable Input<String> name;

    public Input<String> getName() {
        return this.name == null ? Input.empty() : this.name;
    }

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @InputImport(name="project")
    private final @Nullable Input<String> project;

    public Input<String> getProject() {
        return this.project == null ? Input.empty() : this.project;
    }

    public BackendBucketSignedUrlKeyArgs(
        Input<String> backendBucket,
        Input<String> keyValue,
        @Nullable Input<String> name,
        @Nullable Input<String> project) {
        this.backendBucket = Objects.requireNonNull(backendBucket, "expected parameter 'backendBucket' to be non-null");
        this.keyValue = Objects.requireNonNull(keyValue, "expected parameter 'keyValue' to be non-null");
        this.name = name;
        this.project = project;
    }

    private BackendBucketSignedUrlKeyArgs() {
        this.backendBucket = Input.empty();
        this.keyValue = Input.empty();
        this.name = Input.empty();
        this.project = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BackendBucketSignedUrlKeyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<String> backendBucket;
        private Input<String> keyValue;
        private @Nullable Input<String> name;
        private @Nullable Input<String> project;

        public Builder() {
    	      // Empty
        }

        public Builder(BackendBucketSignedUrlKeyArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.backendBucket = defaults.backendBucket;
    	      this.keyValue = defaults.keyValue;
    	      this.name = defaults.name;
    	      this.project = defaults.project;
        }

        public Builder setBackendBucket(Input<String> backendBucket) {
            this.backendBucket = Objects.requireNonNull(backendBucket);
            return this;
        }

        public Builder setBackendBucket(String backendBucket) {
            this.backendBucket = Input.of(Objects.requireNonNull(backendBucket));
            return this;
        }

        public Builder setKeyValue(Input<String> keyValue) {
            this.keyValue = Objects.requireNonNull(keyValue);
            return this;
        }

        public Builder setKeyValue(String keyValue) {
            this.keyValue = Input.of(Objects.requireNonNull(keyValue));
            return this;
        }

        public Builder setName(@Nullable Input<String> name) {
            this.name = name;
            return this;
        }

        public Builder setName(@Nullable String name) {
            this.name = Input.ofNullable(name);
            return this;
        }

        public Builder setProject(@Nullable Input<String> project) {
            this.project = project;
            return this;
        }

        public Builder setProject(@Nullable String project) {
            this.project = Input.ofNullable(project);
            return this;
        }

        public BackendBucketSignedUrlKeyArgs build() {
            return new BackendBucketSignedUrlKeyArgs(backendBucket, keyValue, name, project);
        }
    }
}
