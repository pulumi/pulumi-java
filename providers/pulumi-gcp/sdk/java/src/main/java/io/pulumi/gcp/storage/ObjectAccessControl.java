// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.storage;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Export;
import io.pulumi.core.annotations.ResourceType;
import io.pulumi.gcp.Utilities;
import io.pulumi.gcp.storage.ObjectAccessControlArgs;
import io.pulumi.gcp.storage.inputs.ObjectAccessControlState;
import io.pulumi.gcp.storage.outputs.ObjectAccessControlProjectTeam;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * The ObjectAccessControls resources represent the Access Control Lists
 * (ACLs) for objects within Google Cloud Storage. ACLs let you specify
 * who has access to your data and to what extent.
 * 
 * There are two roles that can be assigned to an entity:
 * 
 * READERs can get an object, though the acl property will not be revealed.
 * OWNERs are READERs, and they can get the acl property, update an object,
 * and call all objectAccessControls methods on the object. The owner of an
 * object is always an OWNER.
 * For more information, see Access Control, with the caveat that this API
 * uses READER and OWNER instead of READ and FULL_CONTROL.
 * 
 * 
 * To get more information about ObjectAccessControl, see:
 * 
 * * [API documentation](https://cloud.google.com/storage/docs/json_api/v1/objectAccessControls)
 * * How-to Guides
 *     * [Official Documentation](https://cloud.google.com/storage/docs/access-control/create-manage-lists)
 * 
 * {{% examples %}}
 * ## Example Usage
 * {{% example %}}
 * ### Storage Object Access Control Public Object
 * 
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 * 
 * const bucket = new gcp.storage.Bucket("bucket", {location: "US"});
 * const object = new gcp.storage.BucketObject("object", {
 *     bucket: bucket.name,
 *     source: new pulumi.asset.FileAsset("../static/img/header-logo.png"),
 * });
 * const publicRule = new gcp.storage.ObjectAccessControl("publicRule", {
 *     object: object.outputName,
 *     bucket: bucket.name,
 *     role: "READER",
 *     entity: "allUsers",
 * });
 * ```
 * ```python
 * import pulumi
 * import pulumi_gcp as gcp
 * 
 * bucket = gcp.storage.Bucket("bucket", location="US")
 * object = gcp.storage.BucketObject("object",
 *     bucket=bucket.name,
 *     source=pulumi.FileAsset("../static/img/header-logo.png"))
 * public_rule = gcp.storage.ObjectAccessControl("publicRule",
 *     object=object.output_name,
 *     bucket=bucket.name,
 *     role="READER",
 *     entity="allUsers")
 * ```
 * ```csharp
 * using Pulumi;
 * using Gcp = Pulumi.Gcp;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var bucket = new Gcp.Storage.Bucket("bucket", new Gcp.Storage.BucketArgs
 *         {
 *             Location = "US",
 *         });
 *         var @object = new Gcp.Storage.BucketObject("object", new Gcp.Storage.BucketObjectArgs
 *         {
 *             Bucket = bucket.Name,
 *             Source = new FileAsset("../static/img/header-logo.png"),
 *         });
 *         var publicRule = new Gcp.Storage.ObjectAccessControl("publicRule", new Gcp.Storage.ObjectAccessControlArgs
 *         {
 *             Object = @object.OutputName,
 *             Bucket = bucket.Name,
 *             Role = "READER",
 *             Entity = "allUsers",
 *         });
 *     }
 * 
 * }
 * ```
 * ```go
 * package main
 * 
 * import (
 * 	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/storage"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		bucket, err := storage.NewBucket(ctx, "bucket", &storage.BucketArgs{
 * 			Location: pulumi.String("US"),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		object, err := storage.NewBucketObject(ctx, "object", &storage.BucketObjectArgs{
 * 			Bucket: bucket.Name,
 * 			Source: pulumi.NewFileAsset("../static/img/header-logo.png"),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		_, err = storage.NewObjectAccessControl(ctx, "publicRule", &storage.ObjectAccessControlArgs{
 * 			Object: object.OutputName,
 * 			Bucket: bucket.Name,
 * 			Role:   pulumi.String("READER"),
 * 			Entity: pulumi.String("allUsers"),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * ```
 * {{% /example %}}
 * {{% /examples %}}
 * 
 * ## Import
 * 
 * ObjectAccessControl can be imported using any of these accepted formats
 * 
 * ```sh
 *  $ pulumi import gcp:storage/objectAccessControl:ObjectAccessControl default {{bucket}}/{{object}}/{{entity}}
 * ```
 * 
 *  
 */
@ResourceType(type="gcp:storage/objectAccessControl:ObjectAccessControl")
public class ObjectAccessControl extends io.pulumi.resources.CustomResource {
    /**
     * The name of the bucket.
     * 
     */
    @Export(name="bucket", type=String.class, parameters={})
    private Output<String> bucket;

    /**
     * @return The name of the bucket.
     * 
     */
    public Output<String> getBucket() {
        return this.bucket;
    }
    /**
     * The domain associated with the entity.
     * 
     */
    @Export(name="domain", type=String.class, parameters={})
    private Output<String> domain;

    /**
     * @return The domain associated with the entity.
     * 
     */
    public Output<String> getDomain() {
        return this.domain;
    }
    /**
     * The email address associated with the entity.
     * 
     */
    @Export(name="email", type=String.class, parameters={})
    private Output<String> email;

    /**
     * @return The email address associated with the entity.
     * 
     */
    public Output<String> getEmail() {
        return this.email;
    }
    /**
     * The entity holding the permission, in one of the following forms:
     * * user-{{userId}}
     * * user-{{email}} (such as "user-liz@example.com")
     * * group-{{groupId}}
     * * group-{{email}} (such as "group-example@googlegroups.com")
     * * domain-{{domain}} (such as "domain-example.com")
     * * project-team-{{projectId}}
     * * allUsers
     * * allAuthenticatedUsers
     * 
     */
    @Export(name="entity", type=String.class, parameters={})
    private Output<String> entity;

    /**
     * @return The entity holding the permission, in one of the following forms:
     * * user-{{userId}}
     * * user-{{email}} (such as "user-liz@example.com")
     * * group-{{groupId}}
     * * group-{{email}} (such as "group-example@googlegroups.com")
     * * domain-{{domain}} (such as "domain-example.com")
     * * project-team-{{projectId}}
     * * allUsers
     * * allAuthenticatedUsers
     * 
     */
    public Output<String> getEntity() {
        return this.entity;
    }
    /**
     * The ID for the entity
     * 
     */
    @Export(name="entityId", type=String.class, parameters={})
    private Output<String> entityId;

    /**
     * @return The ID for the entity
     * 
     */
    public Output<String> getEntityId() {
        return this.entityId;
    }
    /**
     * The content generation of the object, if applied to an object.
     * 
     */
    @Export(name="generation", type=Integer.class, parameters={})
    private Output<Integer> generation;

    /**
     * @return The content generation of the object, if applied to an object.
     * 
     */
    public Output<Integer> getGeneration() {
        return this.generation;
    }
    /**
     * The name of the object to apply the access control to.
     * 
     */
    @Export(name="object", type=String.class, parameters={})
    private Output<String> object;

    /**
     * @return The name of the object to apply the access control to.
     * 
     */
    public Output<String> getObject() {
        return this.object;
    }
    /**
     * The project team associated with the entity
     * 
     */
    @Export(name="projectTeams", type=List.class, parameters={ObjectAccessControlProjectTeam.class})
    private Output<List<ObjectAccessControlProjectTeam>> projectTeams;

    /**
     * @return The project team associated with the entity
     * 
     */
    public Output<List<ObjectAccessControlProjectTeam>> getProjectTeams() {
        return this.projectTeams;
    }
    /**
     * The access permission for the entity.
     * Possible values are `OWNER` and `READER`.
     * 
     */
    @Export(name="role", type=String.class, parameters={})
    private Output<String> role;

    /**
     * @return The access permission for the entity.
     * Possible values are `OWNER` and `READER`.
     * 
     */
    public Output<String> getRole() {
        return this.role;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ObjectAccessControl(String name) {
        this(name, ObjectAccessControlArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ObjectAccessControl(String name, ObjectAccessControlArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ObjectAccessControl(String name, ObjectAccessControlArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("gcp:storage/objectAccessControl:ObjectAccessControl", name, args == null ? ObjectAccessControlArgs.Empty : args, makeResourceOptions(options, Output.empty()));
    }

    private ObjectAccessControl(String name, Output<String> id, @Nullable ObjectAccessControlState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("gcp:storage/objectAccessControl:ObjectAccessControl", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ObjectAccessControl get(String name, Output<String> id, @Nullable ObjectAccessControlState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new ObjectAccessControl(name, id, state, options);
    }
}
