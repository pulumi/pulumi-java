// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.cloudrun.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import io.pulumi.gcp.cloudrun.inputs.ServiceTemplateSpecVolumeSecretItemArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ServiceTemplateSpecVolumeSecretArgs extends io.pulumi.resources.ResourceArgs {

    public static final ServiceTemplateSpecVolumeSecretArgs Empty = new ServiceTemplateSpecVolumeSecretArgs();

    /**
     * Mode bits to use on created files by default. Must be a value between 0000
     * and 0777. Defaults to 0644. Directories within the path are not affected by
     * this setting. This might be in conflict with other options that affect the
     * file mode, like fsGroup, and the result can be other mode bits set.
     * 
     */
    @InputImport(name="defaultMode")
        private final @Nullable Input<Integer> defaultMode;

    public Input<Integer> getDefaultMode() {
        return this.defaultMode == null ? Input.empty() : this.defaultMode;
    }

    /**
     * If unspecified, the volume will expose a file whose name is the
     * secret_name.
     * If specified, the key will be used as the version to fetch from Cloud
     * Secret Manager and the path will be the name of the file exposed in the
     * volume. When items are defined, they must specify a key and a path.
     * Structure is documented below.
     * 
     */
    @InputImport(name="items")
        private final @Nullable Input<List<ServiceTemplateSpecVolumeSecretItemArgs>> items;

    public Input<List<ServiceTemplateSpecVolumeSecretItemArgs>> getItems() {
        return this.items == null ? Input.empty() : this.items;
    }

    /**
     * The name of the secret in Cloud Secret Manager. By default, the secret
     * is assumed to be in the same project.
     * If the secret is in another project, you must define an alias.
     * An alias definition has the form:
     * <alias>:projects/<project-id|project-number>/secrets/<secret-name>.
     * If multiple alias definitions are needed, they must be separated by
     * commas.
     * The alias definitions must be set on the run.googleapis.com/secrets
     * annotation.
     * 
     */
    @InputImport(name="secretName", required=true)
        private final Input<String> secretName;

    public Input<String> getSecretName() {
        return this.secretName;
    }

    public ServiceTemplateSpecVolumeSecretArgs(
        @Nullable Input<Integer> defaultMode,
        @Nullable Input<List<ServiceTemplateSpecVolumeSecretItemArgs>> items,
        Input<String> secretName) {
        this.defaultMode = defaultMode;
        this.items = items;
        this.secretName = Objects.requireNonNull(secretName, "expected parameter 'secretName' to be non-null");
    }

    private ServiceTemplateSpecVolumeSecretArgs() {
        this.defaultMode = Input.empty();
        this.items = Input.empty();
        this.secretName = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ServiceTemplateSpecVolumeSecretArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<Integer> defaultMode;
        private @Nullable Input<List<ServiceTemplateSpecVolumeSecretItemArgs>> items;
        private Input<String> secretName;

        public Builder() {
    	      // Empty
        }

        public Builder(ServiceTemplateSpecVolumeSecretArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.defaultMode = defaults.defaultMode;
    	      this.items = defaults.items;
    	      this.secretName = defaults.secretName;
        }

        public Builder setDefaultMode(@Nullable Input<Integer> defaultMode) {
            this.defaultMode = defaultMode;
            return this;
        }

        public Builder setDefaultMode(@Nullable Integer defaultMode) {
            this.defaultMode = Input.ofNullable(defaultMode);
            return this;
        }

        public Builder setItems(@Nullable Input<List<ServiceTemplateSpecVolumeSecretItemArgs>> items) {
            this.items = items;
            return this;
        }

        public Builder setItems(@Nullable List<ServiceTemplateSpecVolumeSecretItemArgs> items) {
            this.items = Input.ofNullable(items);
            return this;
        }

        public Builder setSecretName(Input<String> secretName) {
            this.secretName = Objects.requireNonNull(secretName);
            return this;
        }

        public Builder setSecretName(String secretName) {
            this.secretName = Input.of(Objects.requireNonNull(secretName));
            return this;
        }
        public ServiceTemplateSpecVolumeSecretArgs build() {
            return new ServiceTemplateSpecVolumeSecretArgs(defaultMode, items, secretName);
        }
    }
}
