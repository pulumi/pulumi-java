// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.compute;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class OrganizationSecurityPolicyAssociationArgs extends io.pulumi.resources.ResourceArgs {

    public static final OrganizationSecurityPolicyAssociationArgs Empty = new OrganizationSecurityPolicyAssociationArgs();

    /**
     * The resource that the security policy is attached to.
     * 
     */
    @Import(name="attachmentId", required=true)
      private final Output<String> attachmentId;

    public Output<String> getAttachmentId() {
        return this.attachmentId;
    }

    /**
     * The name for an association.
     * 
     */
    @Import(name="name")
      private final @Nullable Output<String> name;

    public Output<String> getName() {
        return this.name == null ? Output.empty() : this.name;
    }

    /**
     * The security policy ID of the association.
     * 
     */
    @Import(name="policyId", required=true)
      private final Output<String> policyId;

    public Output<String> getPolicyId() {
        return this.policyId;
    }

    public OrganizationSecurityPolicyAssociationArgs(
        Output<String> attachmentId,
        @Nullable Output<String> name,
        Output<String> policyId) {
        this.attachmentId = Objects.requireNonNull(attachmentId, "expected parameter 'attachmentId' to be non-null");
        this.name = name;
        this.policyId = Objects.requireNonNull(policyId, "expected parameter 'policyId' to be non-null");
    }

    private OrganizationSecurityPolicyAssociationArgs() {
        this.attachmentId = Output.empty();
        this.name = Output.empty();
        this.policyId = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(OrganizationSecurityPolicyAssociationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> attachmentId;
        private @Nullable Output<String> name;
        private Output<String> policyId;

        public Builder() {
    	      // Empty
        }

        public Builder(OrganizationSecurityPolicyAssociationArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.attachmentId = defaults.attachmentId;
    	      this.name = defaults.name;
    	      this.policyId = defaults.policyId;
        }

        public Builder attachmentId(Output<String> attachmentId) {
            this.attachmentId = Objects.requireNonNull(attachmentId);
            return this;
        }
        public Builder attachmentId(String attachmentId) {
            this.attachmentId = Output.of(Objects.requireNonNull(attachmentId));
            return this;
        }
        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }
        public Builder name(@Nullable String name) {
            this.name = Output.ofNullable(name);
            return this;
        }
        public Builder policyId(Output<String> policyId) {
            this.policyId = Objects.requireNonNull(policyId);
            return this;
        }
        public Builder policyId(String policyId) {
            this.policyId = Output.of(Objects.requireNonNull(policyId));
            return this;
        }        public OrganizationSecurityPolicyAssociationArgs build() {
            return new OrganizationSecurityPolicyAssociationArgs(attachmentId, name, policyId);
        }
    }
}
