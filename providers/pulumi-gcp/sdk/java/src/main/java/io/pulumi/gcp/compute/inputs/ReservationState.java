// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.compute.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import io.pulumi.gcp.compute.inputs.ReservationShareSettingsGetArgs;
import io.pulumi.gcp.compute.inputs.ReservationSpecificReservationGetArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ReservationState extends io.pulumi.resources.ResourceArgs {

    public static final ReservationState Empty = new ReservationState();

    @InputImport(name="commitment")
    private final @Nullable Input<String> commitment;

    public Input<String> getCommitment() {
        return this.commitment == null ? Input.empty() : this.commitment;
    }

    @InputImport(name="creationTimestamp")
    private final @Nullable Input<String> creationTimestamp;

    public Input<String> getCreationTimestamp() {
        return this.creationTimestamp == null ? Input.empty() : this.creationTimestamp;
    }

    @InputImport(name="description")
    private final @Nullable Input<String> description;

    public Input<String> getDescription() {
        return this.description == null ? Input.empty() : this.description;
    }

    @InputImport(name="name")
    private final @Nullable Input<String> name;

    public Input<String> getName() {
        return this.name == null ? Input.empty() : this.name;
    }

    @InputImport(name="project")
    private final @Nullable Input<String> project;

    public Input<String> getProject() {
        return this.project == null ? Input.empty() : this.project;
    }

    @InputImport(name="selfLink")
    private final @Nullable Input<String> selfLink;

    public Input<String> getSelfLink() {
        return this.selfLink == null ? Input.empty() : this.selfLink;
    }

    @InputImport(name="shareSettings")
    private final @Nullable Input<ReservationShareSettingsGetArgs> shareSettings;

    public Input<ReservationShareSettingsGetArgs> getShareSettings() {
        return this.shareSettings == null ? Input.empty() : this.shareSettings;
    }

    @InputImport(name="specificReservation")
    private final @Nullable Input<ReservationSpecificReservationGetArgs> specificReservation;

    public Input<ReservationSpecificReservationGetArgs> getSpecificReservation() {
        return this.specificReservation == null ? Input.empty() : this.specificReservation;
    }

    @InputImport(name="specificReservationRequired")
    private final @Nullable Input<Boolean> specificReservationRequired;

    public Input<Boolean> getSpecificReservationRequired() {
        return this.specificReservationRequired == null ? Input.empty() : this.specificReservationRequired;
    }

    @InputImport(name="status")
    private final @Nullable Input<String> status;

    public Input<String> getStatus() {
        return this.status == null ? Input.empty() : this.status;
    }

    @InputImport(name="zone")
    private final @Nullable Input<String> zone;

    public Input<String> getZone() {
        return this.zone == null ? Input.empty() : this.zone;
    }

    public ReservationState(
        @Nullable Input<String> commitment,
        @Nullable Input<String> creationTimestamp,
        @Nullable Input<String> description,
        @Nullable Input<String> name,
        @Nullable Input<String> project,
        @Nullable Input<String> selfLink,
        @Nullable Input<ReservationShareSettingsGetArgs> shareSettings,
        @Nullable Input<ReservationSpecificReservationGetArgs> specificReservation,
        @Nullable Input<Boolean> specificReservationRequired,
        @Nullable Input<String> status,
        @Nullable Input<String> zone) {
        this.commitment = commitment;
        this.creationTimestamp = creationTimestamp;
        this.description = description;
        this.name = name;
        this.project = project;
        this.selfLink = selfLink;
        this.shareSettings = shareSettings;
        this.specificReservation = specificReservation;
        this.specificReservationRequired = specificReservationRequired;
        this.status = status;
        this.zone = zone;
    }

    private ReservationState() {
        this.commitment = Input.empty();
        this.creationTimestamp = Input.empty();
        this.description = Input.empty();
        this.name = Input.empty();
        this.project = Input.empty();
        this.selfLink = Input.empty();
        this.shareSettings = Input.empty();
        this.specificReservation = Input.empty();
        this.specificReservationRequired = Input.empty();
        this.status = Input.empty();
        this.zone = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ReservationState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> commitment;
        private @Nullable Input<String> creationTimestamp;
        private @Nullable Input<String> description;
        private @Nullable Input<String> name;
        private @Nullable Input<String> project;
        private @Nullable Input<String> selfLink;
        private @Nullable Input<ReservationShareSettingsGetArgs> shareSettings;
        private @Nullable Input<ReservationSpecificReservationGetArgs> specificReservation;
        private @Nullable Input<Boolean> specificReservationRequired;
        private @Nullable Input<String> status;
        private @Nullable Input<String> zone;

        public Builder() {
    	      // Empty
        }

        public Builder(ReservationState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.commitment = defaults.commitment;
    	      this.creationTimestamp = defaults.creationTimestamp;
    	      this.description = defaults.description;
    	      this.name = defaults.name;
    	      this.project = defaults.project;
    	      this.selfLink = defaults.selfLink;
    	      this.shareSettings = defaults.shareSettings;
    	      this.specificReservation = defaults.specificReservation;
    	      this.specificReservationRequired = defaults.specificReservationRequired;
    	      this.status = defaults.status;
    	      this.zone = defaults.zone;
        }

        public Builder setCommitment(@Nullable Input<String> commitment) {
            this.commitment = commitment;
            return this;
        }

        public Builder setCommitment(@Nullable String commitment) {
            this.commitment = Input.ofNullable(commitment);
            return this;
        }

        public Builder setCreationTimestamp(@Nullable Input<String> creationTimestamp) {
            this.creationTimestamp = creationTimestamp;
            return this;
        }

        public Builder setCreationTimestamp(@Nullable String creationTimestamp) {
            this.creationTimestamp = Input.ofNullable(creationTimestamp);
            return this;
        }

        public Builder setDescription(@Nullable Input<String> description) {
            this.description = description;
            return this;
        }

        public Builder setDescription(@Nullable String description) {
            this.description = Input.ofNullable(description);
            return this;
        }

        public Builder setName(@Nullable Input<String> name) {
            this.name = name;
            return this;
        }

        public Builder setName(@Nullable String name) {
            this.name = Input.ofNullable(name);
            return this;
        }

        public Builder setProject(@Nullable Input<String> project) {
            this.project = project;
            return this;
        }

        public Builder setProject(@Nullable String project) {
            this.project = Input.ofNullable(project);
            return this;
        }

        public Builder setSelfLink(@Nullable Input<String> selfLink) {
            this.selfLink = selfLink;
            return this;
        }

        public Builder setSelfLink(@Nullable String selfLink) {
            this.selfLink = Input.ofNullable(selfLink);
            return this;
        }

        public Builder setShareSettings(@Nullable Input<ReservationShareSettingsGetArgs> shareSettings) {
            this.shareSettings = shareSettings;
            return this;
        }

        public Builder setShareSettings(@Nullable ReservationShareSettingsGetArgs shareSettings) {
            this.shareSettings = Input.ofNullable(shareSettings);
            return this;
        }

        public Builder setSpecificReservation(@Nullable Input<ReservationSpecificReservationGetArgs> specificReservation) {
            this.specificReservation = specificReservation;
            return this;
        }

        public Builder setSpecificReservation(@Nullable ReservationSpecificReservationGetArgs specificReservation) {
            this.specificReservation = Input.ofNullable(specificReservation);
            return this;
        }

        public Builder setSpecificReservationRequired(@Nullable Input<Boolean> specificReservationRequired) {
            this.specificReservationRequired = specificReservationRequired;
            return this;
        }

        public Builder setSpecificReservationRequired(@Nullable Boolean specificReservationRequired) {
            this.specificReservationRequired = Input.ofNullable(specificReservationRequired);
            return this;
        }

        public Builder setStatus(@Nullable Input<String> status) {
            this.status = status;
            return this;
        }

        public Builder setStatus(@Nullable String status) {
            this.status = Input.ofNullable(status);
            return this;
        }

        public Builder setZone(@Nullable Input<String> zone) {
            this.zone = zone;
            return this;
        }

        public Builder setZone(@Nullable String zone) {
            this.zone = Input.ofNullable(zone);
            return this;
        }

        public ReservationState build() {
            return new ReservationState(commitment, creationTimestamp, description, name, project, selfLink, shareSettings, specificReservation, specificReservationRequired, status, zone);
        }
    }
}
