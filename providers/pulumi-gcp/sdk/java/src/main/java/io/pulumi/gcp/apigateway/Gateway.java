// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.apigateway;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Export;
import io.pulumi.core.annotations.ResourceType;
import io.pulumi.gcp.Utilities;
import io.pulumi.gcp.apigateway.GatewayArgs;
import io.pulumi.gcp.apigateway.inputs.GatewayState;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;

/**
 * A consumable API that can be used by multiple Gateways.
 * 
 * To get more information about Gateway, see:
 * 
 * * [API documentation](https://cloud.google.com/api-gateway/docs/reference/rest/v1beta/projects.locations.apis)
 * * How-to Guides
 *     * [Official Documentation](https://cloud.google.com/api-gateway/docs/quickstart)
 * 
 * {{% examples %}}
 * ## Example Usage
 * {{% example %}}
 * ### Apigateway Gateway Basic
 * 
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 * import * from "fs";
 * 
 * const apiGwApi = new gcp.apigateway.Api("apiGwApi", {apiId: "api-gw"}, {
 *     provider: google_beta,
 * });
 * const apiGwApiConfig = new gcp.apigateway.ApiConfig("apiGwApiConfig", {
 *     api: apiGwApi.apiId,
 *     apiConfigId: "config",
 *     openapiDocuments: [{
 *         document: {
 *             path: "spec.yaml",
 *             contents: Buffer.from(fs.readFileSync("test-fixtures/apigateway/openapi.yaml"), 'binary').toString('base64'),
 *         },
 *     }],
 * }, {
 *     provider: google_beta,
 * });
 * const apiGwGateway = new gcp.apigateway.Gateway("apiGwGateway", {
 *     apiConfig: apiGwApiConfig.id,
 *     gatewayId: "api-gw",
 * }, {
 *     provider: google_beta,
 * });
 * ```
 * ```python
 * import pulumi
 * import base64
 * import pulumi_gcp as gcp
 * 
 * api_gw_api = gcp.apigateway.Api("apiGwApi", api_id="api-gw",
 * opts=pulumi.ResourceOptions(provider=google_beta))
 * api_gw_api_config = gcp.apigateway.ApiConfig("apiGwApiConfig",
 *     api=api_gw_api.api_id,
 *     api_config_id="config",
 *     openapi_documents=[gcp.apigateway.ApiConfigOpenapiDocumentArgs(
 *         document=gcp.apigateway.ApiConfigOpenapiDocumentDocumentArgs(
 *             path="spec.yaml",
 *             contents=(lambda path: base64.b64encode(open(path).read().encode()).decode())("test-fixtures/apigateway/openapi.yaml"),
 *         ),
 *     )],
 *     opts=pulumi.ResourceOptions(provider=google_beta))
 * api_gw_gateway = gcp.apigateway.Gateway("apiGwGateway",
 *     api_config=api_gw_api_config.id,
 *     gateway_id="api-gw",
 *     opts=pulumi.ResourceOptions(provider=google_beta))
 * ```
 * ```csharp
 * using System;
 * using System.IO;
 * using Pulumi;
 * using Gcp = Pulumi.Gcp;
 * 
 * class MyStack : Stack
 * {
 * 	private static string ReadFileBase64(string path) {
 * 		return Convert.ToBase64String(Encoding.UTF8.GetBytes(File.ReadAllText(path)))
 * 	}
 * 
 *     public MyStack()
 *     {
 *         var apiGwApi = new Gcp.ApiGateway.Api("apiGwApi", new Gcp.ApiGateway.ApiArgs
 *         {
 *             ApiId = "api-gw",
 *         }, new CustomResourceOptions
 *         {
 *             Provider = google_beta,
 *         });
 *         var apiGwApiConfig = new Gcp.ApiGateway.ApiConfig("apiGwApiConfig", new Gcp.ApiGateway.ApiConfigArgs
 *         {
 *             Api = apiGwApi.ApiId,
 *             ApiConfigId = "config",
 *             OpenapiDocuments = 
 *             {
 *                 new Gcp.ApiGateway.Inputs.ApiConfigOpenapiDocumentArgs
 *                 {
 *                     Document = new Gcp.ApiGateway.Inputs.ApiConfigOpenapiDocumentDocumentArgs
 *                     {
 *                         Path = "spec.yaml",
 *                         Contents = ReadFileBase64("test-fixtures/apigateway/openapi.yaml"),
 *                     },
 *                 },
 *             },
 *         }, new CustomResourceOptions
 *         {
 *             Provider = google_beta,
 *         });
 *         var apiGwGateway = new Gcp.ApiGateway.Gateway("apiGwGateway", new Gcp.ApiGateway.GatewayArgs
 *         {
 *             ApiConfig = apiGwApiConfig.Id,
 *             GatewayId = "api-gw",
 *         }, new CustomResourceOptions
 *         {
 *             Provider = google_beta,
 *         });
 *     }
 * 
 * }
 * ```
 * ```go
 * package main
 * 
 * import (
 * 	"encoding/base64"
 * 	"io/ioutil"
 * 
 * 	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/apigateway"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func filebase64OrPanic(path string) pulumi.StringPtrInput {
 * 	if fileData, err := ioutil.ReadFile(path); err == nil {
 * 		return pulumi.String(base64.StdEncoding.EncodeToString(fileData[:]))
 * 	} else {
 * 		panic(err.Error())
 * 	}
 * }
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		apiGwApi, err := apigateway.NewApi(ctx, "apiGwApi", &apigateway.ApiArgs{
 * 			ApiId: pulumi.String("api-gw"),
 * 		}, pulumi.Provider(google_beta))
 * 		if err != nil {
 * 			return err
 * 		}
 * 		apiGwApiConfig, err := apigateway.NewApiConfig(ctx, "apiGwApiConfig", &apigateway.ApiConfigArgs{
 * 			Api:         apiGwApi.ApiId,
 * 			ApiConfigId: pulumi.String("config"),
 * 			OpenapiDocuments: apigateway.ApiConfigOpenapiDocumentArray{
 * 				&apigateway.ApiConfigOpenapiDocumentArgs{
 * 					Document: &apigateway.ApiConfigOpenapiDocumentDocumentArgs{
 * 						Path:     pulumi.String("spec.yaml"),
 * 						Contents: filebase64OrPanic("test-fixtures/apigateway/openapi.yaml"),
 * 					},
 * 				},
 * 			},
 * 		}, pulumi.Provider(google_beta))
 * 		if err != nil {
 * 			return err
 * 		}
 * 		_, err = apigateway.NewGateway(ctx, "apiGwGateway", &apigateway.GatewayArgs{
 * 			ApiConfig: apiGwApiConfig.ID(),
 * 			GatewayId: pulumi.String("api-gw"),
 * 		}, pulumi.Provider(google_beta))
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * ```
 * {{% /example %}}
 * {{% /examples %}}
 * 
 * ## Import
 * 
 * Gateway can be imported using any of these accepted formats
 * 
 * ```sh
 *  $ pulumi import gcp:apigateway/gateway:Gateway default projects/{{project}}/locations/{{region}}/gateways/{{gateway_id}}
 * ```
 * 
 * 
 * 
 * ```sh
 *  $ pulumi import gcp:apigateway/gateway:Gateway default {{project}}/{{region}}/{{gateway_id}}
 * ```
 * 
 * 
 * 
 * ```sh
 *  $ pulumi import gcp:apigateway/gateway:Gateway default {{region}}/{{gateway_id}}
 * ```
 * 
 * 
 * 
 * ```sh
 *  $ pulumi import gcp:apigateway/gateway:Gateway default {{gateway_id}}
 * ```
 * 
 *  
 */
@ResourceType(type="gcp:apigateway/gateway:Gateway")
public class Gateway extends io.pulumi.resources.CustomResource {
    /**
     * Resource name of the API Config for this Gateway. Format: projects/{project}/locations/global/apis/{api}/configs/{apiConfig}.
     * When changing api configs please ensure the new config is a new resource and the lifecycle rule `create_before_destroy` is set.
     * 
     */
    @Export(name="apiConfig", type=String.class, parameters={})
    private Output<String> apiConfig;

    /**
     * @return Resource name of the API Config for this Gateway. Format: projects/{project}/locations/global/apis/{api}/configs/{apiConfig}.
     * When changing api configs please ensure the new config is a new resource and the lifecycle rule `create_before_destroy` is set.
     * 
     */
    public Output<String> getApiConfig() {
        return this.apiConfig;
    }
    /**
     * The default API Gateway host name of the form {gatewayId}-{hash}.{region_code}.gateway.dev.
     * 
     */
    @Export(name="defaultHostname", type=String.class, parameters={})
    private Output<String> defaultHostname;

    /**
     * @return The default API Gateway host name of the form {gatewayId}-{hash}.{region_code}.gateway.dev.
     * 
     */
    public Output<String> getDefaultHostname() {
        return this.defaultHostname;
    }
    /**
     * A user-visible name for the API.
     * 
     */
    @Export(name="displayName", type=String.class, parameters={})
    private Output<String> displayName;

    /**
     * @return A user-visible name for the API.
     * 
     */
    public Output<String> getDisplayName() {
        return this.displayName;
    }
    /**
     * Identifier to assign to the Gateway. Must be unique within scope of the parent resource(project).
     * 
     */
    @Export(name="gatewayId", type=String.class, parameters={})
    private Output<String> gatewayId;

    /**
     * @return Identifier to assign to the Gateway. Must be unique within scope of the parent resource(project).
     * 
     */
    public Output<String> getGatewayId() {
        return this.gatewayId;
    }
    /**
     * Resource labels to represent user-provided metadata.
     * 
     */
    @Export(name="labels", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> labels;

    /**
     * @return Resource labels to represent user-provided metadata.
     * 
     */
    public Output</* @Nullable */ Map<String,String>> getLabels() {
        return this.labels;
    }
    /**
     * Resource name of the Gateway. Format: projects/{project}/locations/{region}/gateways/{gateway}
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return Resource name of the Gateway. Format: projects/{project}/locations/{region}/gateways/{gateway}
     * 
     */
    public Output<String> getName() {
        return this.name;
    }
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Export(name="project", type=String.class, parameters={})
    private Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Output<String> getProject() {
        return this.project;
    }
    /**
     * The region of the gateway for the API.
     * 
     */
    @Export(name="region", type=String.class, parameters={})
    private Output<String> region;

    /**
     * @return The region of the gateway for the API.
     * 
     */
    public Output<String> getRegion() {
        return this.region;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Gateway(String name) {
        this(name, GatewayArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Gateway(String name, GatewayArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Gateway(String name, GatewayArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("gcp:apigateway/gateway:Gateway", name, args == null ? GatewayArgs.Empty : args, makeResourceOptions(options, Output.empty()));
    }

    private Gateway(String name, Output<String> id, @Nullable GatewayState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("gcp:apigateway/gateway:Gateway", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Gateway get(String name, Output<String> id, @Nullable GatewayState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new Gateway(name, id, state, options);
    }
}
