// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.resourcemanager;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class LienArgs extends io.pulumi.resources.ResourceArgs {

    public static final LienArgs Empty = new LienArgs();

    @InputImport(name="origin", required=true)
    private final Input<String> origin;

    public Input<String> getOrigin() {
        return this.origin;
    }

    @InputImport(name="parent", required=true)
    private final Input<String> parent;

    public Input<String> getParent() {
        return this.parent;
    }

    @InputImport(name="reason", required=true)
    private final Input<String> reason;

    public Input<String> getReason() {
        return this.reason;
    }

    @InputImport(name="restrictions", required=true)
    private final Input<List<String>> restrictions;

    public Input<List<String>> getRestrictions() {
        return this.restrictions;
    }

    public LienArgs(
        Input<String> origin,
        Input<String> parent,
        Input<String> reason,
        Input<List<String>> restrictions) {
        this.origin = Objects.requireNonNull(origin, "expected parameter 'origin' to be non-null");
        this.parent = Objects.requireNonNull(parent, "expected parameter 'parent' to be non-null");
        this.reason = Objects.requireNonNull(reason, "expected parameter 'reason' to be non-null");
        this.restrictions = Objects.requireNonNull(restrictions, "expected parameter 'restrictions' to be non-null");
    }

    private LienArgs() {
        this.origin = Input.empty();
        this.parent = Input.empty();
        this.reason = Input.empty();
        this.restrictions = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(LienArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<String> origin;
        private Input<String> parent;
        private Input<String> reason;
        private Input<List<String>> restrictions;

        public Builder() {
    	      // Empty
        }

        public Builder(LienArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.origin = defaults.origin;
    	      this.parent = defaults.parent;
    	      this.reason = defaults.reason;
    	      this.restrictions = defaults.restrictions;
        }

        public Builder setOrigin(Input<String> origin) {
            this.origin = Objects.requireNonNull(origin);
            return this;
        }

        public Builder setOrigin(String origin) {
            this.origin = Input.of(Objects.requireNonNull(origin));
            return this;
        }

        public Builder setParent(Input<String> parent) {
            this.parent = Objects.requireNonNull(parent);
            return this;
        }

        public Builder setParent(String parent) {
            this.parent = Input.of(Objects.requireNonNull(parent));
            return this;
        }

        public Builder setReason(Input<String> reason) {
            this.reason = Objects.requireNonNull(reason);
            return this;
        }

        public Builder setReason(String reason) {
            this.reason = Input.of(Objects.requireNonNull(reason));
            return this;
        }

        public Builder setRestrictions(Input<List<String>> restrictions) {
            this.restrictions = Objects.requireNonNull(restrictions);
            return this;
        }

        public Builder setRestrictions(List<String> restrictions) {
            this.restrictions = Input.of(Objects.requireNonNull(restrictions));
            return this;
        }

        public LienArgs build() {
            return new LienArgs(origin, parent, reason, restrictions);
        }
    }
}
