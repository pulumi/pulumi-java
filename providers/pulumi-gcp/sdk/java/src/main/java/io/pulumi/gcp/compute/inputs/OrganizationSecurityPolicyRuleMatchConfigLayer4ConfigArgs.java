// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.compute.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class OrganizationSecurityPolicyRuleMatchConfigLayer4ConfigArgs extends io.pulumi.resources.ResourceArgs {

    public static final OrganizationSecurityPolicyRuleMatchConfigLayer4ConfigArgs Empty = new OrganizationSecurityPolicyRuleMatchConfigLayer4ConfigArgs();

    /**
     * The IP protocol to which this rule applies. The protocol
     * type is required when creating a firewall rule.
     * This value can either be one of the following well
     * known protocol strings (tcp, udp, icmp, esp, ah, ipip, sctp),
     * or the IP protocol number.
     * 
     */
    @InputImport(name="ipProtocol", required=true)
      private final Output<String> ipProtocol;

    public Output<String> getIpProtocol() {
        return this.ipProtocol;
    }

    /**
     * An optional list of ports to which this rule applies. This field
     * is only applicable for UDP or TCP protocol. Each entry must be
     * either an integer or a range. If not specified, this rule
     * applies to connections through any port.
     * Example inputs include: ["22"], ["80","443"], and
     * ["12345-12349"].
     * 
     */
    @InputImport(name="ports")
      private final @Nullable Output<List<String>> ports;

    public Output<List<String>> getPorts() {
        return this.ports == null ? Output.empty() : this.ports;
    }

    public OrganizationSecurityPolicyRuleMatchConfigLayer4ConfigArgs(
        Output<String> ipProtocol,
        @Nullable Output<List<String>> ports) {
        this.ipProtocol = Objects.requireNonNull(ipProtocol, "expected parameter 'ipProtocol' to be non-null");
        this.ports = ports;
    }

    private OrganizationSecurityPolicyRuleMatchConfigLayer4ConfigArgs() {
        this.ipProtocol = Output.empty();
        this.ports = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(OrganizationSecurityPolicyRuleMatchConfigLayer4ConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> ipProtocol;
        private @Nullable Output<List<String>> ports;

        public Builder() {
    	      // Empty
        }

        public Builder(OrganizationSecurityPolicyRuleMatchConfigLayer4ConfigArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.ipProtocol = defaults.ipProtocol;
    	      this.ports = defaults.ports;
        }

        public Builder ipProtocol(Output<String> ipProtocol) {
            this.ipProtocol = Objects.requireNonNull(ipProtocol);
            return this;
        }

        public Builder ipProtocol(String ipProtocol) {
            this.ipProtocol = Output.of(Objects.requireNonNull(ipProtocol));
            return this;
        }

        public Builder ports(@Nullable Output<List<String>> ports) {
            this.ports = ports;
            return this;
        }

        public Builder ports(@Nullable List<String> ports) {
            this.ports = Output.ofNullable(ports);
            return this;
        }
        public OrganizationSecurityPolicyRuleMatchConfigLayer4ConfigArgs build() {
            return new OrganizationSecurityPolicyRuleMatchConfigLayer4ConfigArgs(ipProtocol, ports);
        }
    }
}
