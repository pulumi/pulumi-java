// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.storage.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class NotificationState extends io.pulumi.resources.ResourceArgs {

    public static final NotificationState Empty = new NotificationState();

    @InputImport(name="bucket")
    private final @Nullable Input<String> bucket;

    public Input<String> getBucket() {
        return this.bucket == null ? Input.empty() : this.bucket;
    }

    @InputImport(name="customAttributes")
    private final @Nullable Input<Map<String,String>> customAttributes;

    public Input<Map<String,String>> getCustomAttributes() {
        return this.customAttributes == null ? Input.empty() : this.customAttributes;
    }

    @InputImport(name="eventTypes")
    private final @Nullable Input<List<String>> eventTypes;

    public Input<List<String>> getEventTypes() {
        return this.eventTypes == null ? Input.empty() : this.eventTypes;
    }

    @InputImport(name="notificationId")
    private final @Nullable Input<String> notificationId;

    public Input<String> getNotificationId() {
        return this.notificationId == null ? Input.empty() : this.notificationId;
    }

    @InputImport(name="objectNamePrefix")
    private final @Nullable Input<String> objectNamePrefix;

    public Input<String> getObjectNamePrefix() {
        return this.objectNamePrefix == null ? Input.empty() : this.objectNamePrefix;
    }

    @InputImport(name="payloadFormat")
    private final @Nullable Input<String> payloadFormat;

    public Input<String> getPayloadFormat() {
        return this.payloadFormat == null ? Input.empty() : this.payloadFormat;
    }

    @InputImport(name="selfLink")
    private final @Nullable Input<String> selfLink;

    public Input<String> getSelfLink() {
        return this.selfLink == null ? Input.empty() : this.selfLink;
    }

    @InputImport(name="topic")
    private final @Nullable Input<String> topic;

    public Input<String> getTopic() {
        return this.topic == null ? Input.empty() : this.topic;
    }

    public NotificationState(
        @Nullable Input<String> bucket,
        @Nullable Input<Map<String,String>> customAttributes,
        @Nullable Input<List<String>> eventTypes,
        @Nullable Input<String> notificationId,
        @Nullable Input<String> objectNamePrefix,
        @Nullable Input<String> payloadFormat,
        @Nullable Input<String> selfLink,
        @Nullable Input<String> topic) {
        this.bucket = bucket;
        this.customAttributes = customAttributes;
        this.eventTypes = eventTypes;
        this.notificationId = notificationId;
        this.objectNamePrefix = objectNamePrefix;
        this.payloadFormat = payloadFormat;
        this.selfLink = selfLink;
        this.topic = topic;
    }

    private NotificationState() {
        this.bucket = Input.empty();
        this.customAttributes = Input.empty();
        this.eventTypes = Input.empty();
        this.notificationId = Input.empty();
        this.objectNamePrefix = Input.empty();
        this.payloadFormat = Input.empty();
        this.selfLink = Input.empty();
        this.topic = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(NotificationState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> bucket;
        private @Nullable Input<Map<String,String>> customAttributes;
        private @Nullable Input<List<String>> eventTypes;
        private @Nullable Input<String> notificationId;
        private @Nullable Input<String> objectNamePrefix;
        private @Nullable Input<String> payloadFormat;
        private @Nullable Input<String> selfLink;
        private @Nullable Input<String> topic;

        public Builder() {
    	      // Empty
        }

        public Builder(NotificationState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bucket = defaults.bucket;
    	      this.customAttributes = defaults.customAttributes;
    	      this.eventTypes = defaults.eventTypes;
    	      this.notificationId = defaults.notificationId;
    	      this.objectNamePrefix = defaults.objectNamePrefix;
    	      this.payloadFormat = defaults.payloadFormat;
    	      this.selfLink = defaults.selfLink;
    	      this.topic = defaults.topic;
        }

        public Builder setBucket(@Nullable Input<String> bucket) {
            this.bucket = bucket;
            return this;
        }

        public Builder setBucket(@Nullable String bucket) {
            this.bucket = Input.ofNullable(bucket);
            return this;
        }

        public Builder setCustomAttributes(@Nullable Input<Map<String,String>> customAttributes) {
            this.customAttributes = customAttributes;
            return this;
        }

        public Builder setCustomAttributes(@Nullable Map<String,String> customAttributes) {
            this.customAttributes = Input.ofNullable(customAttributes);
            return this;
        }

        public Builder setEventTypes(@Nullable Input<List<String>> eventTypes) {
            this.eventTypes = eventTypes;
            return this;
        }

        public Builder setEventTypes(@Nullable List<String> eventTypes) {
            this.eventTypes = Input.ofNullable(eventTypes);
            return this;
        }

        public Builder setNotificationId(@Nullable Input<String> notificationId) {
            this.notificationId = notificationId;
            return this;
        }

        public Builder setNotificationId(@Nullable String notificationId) {
            this.notificationId = Input.ofNullable(notificationId);
            return this;
        }

        public Builder setObjectNamePrefix(@Nullable Input<String> objectNamePrefix) {
            this.objectNamePrefix = objectNamePrefix;
            return this;
        }

        public Builder setObjectNamePrefix(@Nullable String objectNamePrefix) {
            this.objectNamePrefix = Input.ofNullable(objectNamePrefix);
            return this;
        }

        public Builder setPayloadFormat(@Nullable Input<String> payloadFormat) {
            this.payloadFormat = payloadFormat;
            return this;
        }

        public Builder setPayloadFormat(@Nullable String payloadFormat) {
            this.payloadFormat = Input.ofNullable(payloadFormat);
            return this;
        }

        public Builder setSelfLink(@Nullable Input<String> selfLink) {
            this.selfLink = selfLink;
            return this;
        }

        public Builder setSelfLink(@Nullable String selfLink) {
            this.selfLink = Input.ofNullable(selfLink);
            return this;
        }

        public Builder setTopic(@Nullable Input<String> topic) {
            this.topic = topic;
            return this;
        }

        public Builder setTopic(@Nullable String topic) {
            this.topic = Input.ofNullable(topic);
            return this;
        }

        public NotificationState build() {
            return new NotificationState(bucket, customAttributes, eventTypes, notificationId, objectNamePrefix, payloadFormat, selfLink, topic);
        }
    }
}
