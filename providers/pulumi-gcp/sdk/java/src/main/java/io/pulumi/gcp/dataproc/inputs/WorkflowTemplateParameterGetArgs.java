// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.dataproc.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import io.pulumi.gcp.dataproc.inputs.WorkflowTemplateParameterValidationGetArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class WorkflowTemplateParameterGetArgs extends io.pulumi.resources.ResourceArgs {

    public static final WorkflowTemplateParameterGetArgs Empty = new WorkflowTemplateParameterGetArgs();

    @InputImport(name="description")
    private final @Nullable Input<String> description;

    public Input<String> getDescription() {
        return this.description == null ? Input.empty() : this.description;
    }

    @InputImport(name="fields", required=true)
    private final Input<List<String>> fields;

    public Input<List<String>> getFields() {
        return this.fields;
    }

    @InputImport(name="name", required=true)
    private final Input<String> name;

    public Input<String> getName() {
        return this.name;
    }

    @InputImport(name="validation")
    private final @Nullable Input<WorkflowTemplateParameterValidationGetArgs> validation;

    public Input<WorkflowTemplateParameterValidationGetArgs> getValidation() {
        return this.validation == null ? Input.empty() : this.validation;
    }

    public WorkflowTemplateParameterGetArgs(
        @Nullable Input<String> description,
        Input<List<String>> fields,
        Input<String> name,
        @Nullable Input<WorkflowTemplateParameterValidationGetArgs> validation) {
        this.description = description;
        this.fields = Objects.requireNonNull(fields, "expected parameter 'fields' to be non-null");
        this.name = Objects.requireNonNull(name, "expected parameter 'name' to be non-null");
        this.validation = validation;
    }

    private WorkflowTemplateParameterGetArgs() {
        this.description = Input.empty();
        this.fields = Input.empty();
        this.name = Input.empty();
        this.validation = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(WorkflowTemplateParameterGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> description;
        private Input<List<String>> fields;
        private Input<String> name;
        private @Nullable Input<WorkflowTemplateParameterValidationGetArgs> validation;

        public Builder() {
    	      // Empty
        }

        public Builder(WorkflowTemplateParameterGetArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.fields = defaults.fields;
    	      this.name = defaults.name;
    	      this.validation = defaults.validation;
        }

        public Builder setDescription(@Nullable Input<String> description) {
            this.description = description;
            return this;
        }

        public Builder setDescription(@Nullable String description) {
            this.description = Input.ofNullable(description);
            return this;
        }

        public Builder setFields(Input<List<String>> fields) {
            this.fields = Objects.requireNonNull(fields);
            return this;
        }

        public Builder setFields(List<String> fields) {
            this.fields = Input.of(Objects.requireNonNull(fields));
            return this;
        }

        public Builder setName(Input<String> name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setName(String name) {
            this.name = Input.of(Objects.requireNonNull(name));
            return this;
        }

        public Builder setValidation(@Nullable Input<WorkflowTemplateParameterValidationGetArgs> validation) {
            this.validation = validation;
            return this;
        }

        public Builder setValidation(@Nullable WorkflowTemplateParameterValidationGetArgs validation) {
            this.validation = Input.ofNullable(validation);
            return this;
        }

        public WorkflowTemplateParameterGetArgs build() {
            return new WorkflowTemplateParameterGetArgs(description, fields, name, validation);
        }
    }
}
