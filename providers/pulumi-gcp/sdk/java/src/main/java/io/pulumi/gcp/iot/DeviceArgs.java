// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.iot;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import io.pulumi.gcp.iot.inputs.DeviceCredentialArgs;
import io.pulumi.gcp.iot.inputs.DeviceGatewayConfigArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class DeviceArgs extends io.pulumi.resources.ResourceArgs {

    public static final DeviceArgs Empty = new DeviceArgs();

    /**
     * If a device is blocked, connections or requests from this device will fail.
     * 
     */
    @InputImport(name="blocked")
      private final @Nullable Input<Boolean> blocked;

    public Input<Boolean> getBlocked() {
        return this.blocked == null ? Input.empty() : this.blocked;
    }

    /**
     * The credentials used to authenticate this device.
     * Structure is documented below.
     * 
     */
    @InputImport(name="credentials")
      private final @Nullable Input<List<DeviceCredentialArgs>> credentials;

    public Input<List<DeviceCredentialArgs>> getCredentials() {
        return this.credentials == null ? Input.empty() : this.credentials;
    }

    /**
     * Gateway-related configuration and state.
     * Structure is documented below.
     * 
     */
    @InputImport(name="gatewayConfig")
      private final @Nullable Input<DeviceGatewayConfigArgs> gatewayConfig;

    public Input<DeviceGatewayConfigArgs> getGatewayConfig() {
        return this.gatewayConfig == null ? Input.empty() : this.gatewayConfig;
    }

    /**
     * The logging verbosity for device activity.
     * Possible values are `NONE`, `ERROR`, `INFO`, and `DEBUG`.
     * 
     */
    @InputImport(name="logLevel")
      private final @Nullable Input<String> logLevel;

    public Input<String> getLogLevel() {
        return this.logLevel == null ? Input.empty() : this.logLevel;
    }

    /**
     * The metadata key-value pairs assigned to the device.
     * 
     */
    @InputImport(name="metadata")
      private final @Nullable Input<Map<String,String>> metadata;

    public Input<Map<String,String>> getMetadata() {
        return this.metadata == null ? Input.empty() : this.metadata;
    }

    /**
     * A unique name for the resource.
     * 
     */
    @InputImport(name="name")
      private final @Nullable Input<String> name;

    public Input<String> getName() {
        return this.name == null ? Input.empty() : this.name;
    }

    /**
     * The name of the device registry where this device should be created.
     * 
     */
    @InputImport(name="registry", required=true)
      private final Input<String> registry;

    public Input<String> getRegistry() {
        return this.registry;
    }

    public DeviceArgs(
        @Nullable Input<Boolean> blocked,
        @Nullable Input<List<DeviceCredentialArgs>> credentials,
        @Nullable Input<DeviceGatewayConfigArgs> gatewayConfig,
        @Nullable Input<String> logLevel,
        @Nullable Input<Map<String,String>> metadata,
        @Nullable Input<String> name,
        Input<String> registry) {
        this.blocked = blocked;
        this.credentials = credentials;
        this.gatewayConfig = gatewayConfig;
        this.logLevel = logLevel;
        this.metadata = metadata;
        this.name = name;
        this.registry = Objects.requireNonNull(registry, "expected parameter 'registry' to be non-null");
    }

    private DeviceArgs() {
        this.blocked = Input.empty();
        this.credentials = Input.empty();
        this.gatewayConfig = Input.empty();
        this.logLevel = Input.empty();
        this.metadata = Input.empty();
        this.name = Input.empty();
        this.registry = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DeviceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<Boolean> blocked;
        private @Nullable Input<List<DeviceCredentialArgs>> credentials;
        private @Nullable Input<DeviceGatewayConfigArgs> gatewayConfig;
        private @Nullable Input<String> logLevel;
        private @Nullable Input<Map<String,String>> metadata;
        private @Nullable Input<String> name;
        private Input<String> registry;

        public Builder() {
    	      // Empty
        }

        public Builder(DeviceArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.blocked = defaults.blocked;
    	      this.credentials = defaults.credentials;
    	      this.gatewayConfig = defaults.gatewayConfig;
    	      this.logLevel = defaults.logLevel;
    	      this.metadata = defaults.metadata;
    	      this.name = defaults.name;
    	      this.registry = defaults.registry;
        }

        public Builder setBlocked(@Nullable Input<Boolean> blocked) {
            this.blocked = blocked;
            return this;
        }

        public Builder setBlocked(@Nullable Boolean blocked) {
            this.blocked = Input.ofNullable(blocked);
            return this;
        }

        public Builder setCredentials(@Nullable Input<List<DeviceCredentialArgs>> credentials) {
            this.credentials = credentials;
            return this;
        }

        public Builder setCredentials(@Nullable List<DeviceCredentialArgs> credentials) {
            this.credentials = Input.ofNullable(credentials);
            return this;
        }

        public Builder setGatewayConfig(@Nullable Input<DeviceGatewayConfigArgs> gatewayConfig) {
            this.gatewayConfig = gatewayConfig;
            return this;
        }

        public Builder setGatewayConfig(@Nullable DeviceGatewayConfigArgs gatewayConfig) {
            this.gatewayConfig = Input.ofNullable(gatewayConfig);
            return this;
        }

        public Builder setLogLevel(@Nullable Input<String> logLevel) {
            this.logLevel = logLevel;
            return this;
        }

        public Builder setLogLevel(@Nullable String logLevel) {
            this.logLevel = Input.ofNullable(logLevel);
            return this;
        }

        public Builder setMetadata(@Nullable Input<Map<String,String>> metadata) {
            this.metadata = metadata;
            return this;
        }

        public Builder setMetadata(@Nullable Map<String,String> metadata) {
            this.metadata = Input.ofNullable(metadata);
            return this;
        }

        public Builder setName(@Nullable Input<String> name) {
            this.name = name;
            return this;
        }

        public Builder setName(@Nullable String name) {
            this.name = Input.ofNullable(name);
            return this;
        }

        public Builder setRegistry(Input<String> registry) {
            this.registry = Objects.requireNonNull(registry);
            return this;
        }

        public Builder setRegistry(String registry) {
            this.registry = Input.of(Objects.requireNonNull(registry));
            return this;
        }
        public DeviceArgs build() {
            return new DeviceArgs(blocked, credentials, gatewayConfig, logLevel, metadata, name, registry);
        }
    }
}
