// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.bigquery.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;


public final class DataTransferConfigSensitiveParamsGetArgs extends io.pulumi.resources.ResourceArgs {

    public static final DataTransferConfigSensitiveParamsGetArgs Empty = new DataTransferConfigSensitiveParamsGetArgs();

    /**
     * The Secret Access Key of the AWS account transferring data from.
     * **Note**: This property is sensitive and will not be displayed in the plan.
     * 
     */
    @InputImport(name="secretAccessKey", required=true)
        private final Input<String> secretAccessKey;

    public Input<String> getSecretAccessKey() {
        return this.secretAccessKey;
    }

    public DataTransferConfigSensitiveParamsGetArgs(Input<String> secretAccessKey) {
        this.secretAccessKey = Objects.requireNonNull(secretAccessKey, "expected parameter 'secretAccessKey' to be non-null");
    }

    private DataTransferConfigSensitiveParamsGetArgs() {
        this.secretAccessKey = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DataTransferConfigSensitiveParamsGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<String> secretAccessKey;

        public Builder() {
    	      // Empty
        }

        public Builder(DataTransferConfigSensitiveParamsGetArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.secretAccessKey = defaults.secretAccessKey;
        }

        public Builder setSecretAccessKey(Input<String> secretAccessKey) {
            this.secretAccessKey = Objects.requireNonNull(secretAccessKey);
            return this;
        }

        public Builder setSecretAccessKey(String secretAccessKey) {
            this.secretAccessKey = Input.of(Objects.requireNonNull(secretAccessKey));
            return this;
        }
        public DataTransferConfigSensitiveParamsGetArgs build() {
            return new DataTransferConfigSensitiveParamsGetArgs(secretAccessKey);
        }
    }
}
