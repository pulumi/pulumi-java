// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.compute;

import io.pulumi.core.Input;
import io.pulumi.core.Output;
import io.pulumi.core.internal.annotations.OutputExport;
import io.pulumi.core.internal.annotations.ResourceType;
import io.pulumi.gcp.Utilities;
import io.pulumi.gcp.compute.InstanceArgs;
import io.pulumi.gcp.compute.inputs.InstanceState;
import io.pulumi.gcp.compute.outputs.InstanceAdvancedMachineFeatures;
import io.pulumi.gcp.compute.outputs.InstanceAttachedDisk;
import io.pulumi.gcp.compute.outputs.InstanceBootDisk;
import io.pulumi.gcp.compute.outputs.InstanceConfidentialInstanceConfig;
import io.pulumi.gcp.compute.outputs.InstanceGuestAccelerator;
import io.pulumi.gcp.compute.outputs.InstanceNetworkInterface;
import io.pulumi.gcp.compute.outputs.InstanceNetworkPerformanceConfig;
import io.pulumi.gcp.compute.outputs.InstanceReservationAffinity;
import io.pulumi.gcp.compute.outputs.InstanceScheduling;
import io.pulumi.gcp.compute.outputs.InstanceScratchDisk;
import io.pulumi.gcp.compute.outputs.InstanceServiceAccount;
import io.pulumi.gcp.compute.outputs.InstanceShieldedInstanceConfig;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;

@ResourceType(type="gcp:compute/instance:Instance")
public class Instance extends io.pulumi.resources.CustomResource {
    @OutputExport(name="advancedMachineFeatures", type=InstanceAdvancedMachineFeatures.class, parameters={})
    private Output</* @Nullable */ InstanceAdvancedMachineFeatures> advancedMachineFeatures;

    public Output</* @Nullable */ InstanceAdvancedMachineFeatures> getAdvancedMachineFeatures() {
        return this.advancedMachineFeatures;
    }
    @OutputExport(name="allowStoppingForUpdate", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> allowStoppingForUpdate;

    public Output</* @Nullable */ Boolean> getAllowStoppingForUpdate() {
        return this.allowStoppingForUpdate;
    }
    @OutputExport(name="attachedDisks", type=List.class, parameters={InstanceAttachedDisk.class})
    private Output</* @Nullable */ List<InstanceAttachedDisk>> attachedDisks;

    public Output</* @Nullable */ List<InstanceAttachedDisk>> getAttachedDisks() {
        return this.attachedDisks;
    }
    @OutputExport(name="bootDisk", type=InstanceBootDisk.class, parameters={})
    private Output<InstanceBootDisk> bootDisk;

    public Output<InstanceBootDisk> getBootDisk() {
        return this.bootDisk;
    }
    @OutputExport(name="canIpForward", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> canIpForward;

    public Output</* @Nullable */ Boolean> getCanIpForward() {
        return this.canIpForward;
    }
    @OutputExport(name="confidentialInstanceConfig", type=InstanceConfidentialInstanceConfig.class, parameters={})
    private Output<InstanceConfidentialInstanceConfig> confidentialInstanceConfig;

    public Output<InstanceConfidentialInstanceConfig> getConfidentialInstanceConfig() {
        return this.confidentialInstanceConfig;
    }
    @OutputExport(name="cpuPlatform", type=String.class, parameters={})
    private Output<String> cpuPlatform;

    public Output<String> getCpuPlatform() {
        return this.cpuPlatform;
    }
    @OutputExport(name="currentStatus", type=String.class, parameters={})
    private Output<String> currentStatus;

    public Output<String> getCurrentStatus() {
        return this.currentStatus;
    }
    @OutputExport(name="deletionProtection", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> deletionProtection;

    public Output</* @Nullable */ Boolean> getDeletionProtection() {
        return this.deletionProtection;
    }
    @OutputExport(name="description", type=String.class, parameters={})
    private Output</* @Nullable */ String> description;

    public Output</* @Nullable */ String> getDescription() {
        return this.description;
    }
    @OutputExport(name="desiredStatus", type=String.class, parameters={})
    private Output</* @Nullable */ String> desiredStatus;

    public Output</* @Nullable */ String> getDesiredStatus() {
        return this.desiredStatus;
    }
    @OutputExport(name="enableDisplay", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> enableDisplay;

    public Output</* @Nullable */ Boolean> getEnableDisplay() {
        return this.enableDisplay;
    }
    @OutputExport(name="guestAccelerators", type=List.class, parameters={InstanceGuestAccelerator.class})
    private Output<List<InstanceGuestAccelerator>> guestAccelerators;

    public Output<List<InstanceGuestAccelerator>> getGuestAccelerators() {
        return this.guestAccelerators;
    }
    @OutputExport(name="hostname", type=String.class, parameters={})
    private Output</* @Nullable */ String> hostname;

    public Output</* @Nullable */ String> getHostname() {
        return this.hostname;
    }
    @OutputExport(name="instanceId", type=String.class, parameters={})
    private Output<String> instanceId;

    public Output<String> getInstanceId() {
        return this.instanceId;
    }
    @OutputExport(name="labelFingerprint", type=String.class, parameters={})
    private Output<String> labelFingerprint;

    public Output<String> getLabelFingerprint() {
        return this.labelFingerprint;
    }
    @OutputExport(name="labels", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> labels;

    public Output</* @Nullable */ Map<String,String>> getLabels() {
        return this.labels;
    }
    @OutputExport(name="machineType", type=String.class, parameters={})
    private Output<String> machineType;

    public Output<String> getMachineType() {
        return this.machineType;
    }
    @OutputExport(name="metadata", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> metadata;

    public Output</* @Nullable */ Map<String,String>> getMetadata() {
        return this.metadata;
    }
    @OutputExport(name="metadataFingerprint", type=String.class, parameters={})
    private Output<String> metadataFingerprint;

    public Output<String> getMetadataFingerprint() {
        return this.metadataFingerprint;
    }
    @OutputExport(name="metadataStartupScript", type=String.class, parameters={})
    private Output</* @Nullable */ String> metadataStartupScript;

    public Output</* @Nullable */ String> getMetadataStartupScript() {
        return this.metadataStartupScript;
    }
    @OutputExport(name="minCpuPlatform", type=String.class, parameters={})
    private Output<String> minCpuPlatform;

    public Output<String> getMinCpuPlatform() {
        return this.minCpuPlatform;
    }
    @OutputExport(name="name", type=String.class, parameters={})
    private Output<String> name;

    public Output<String> getName() {
        return this.name;
    }
    @OutputExport(name="networkInterfaces", type=List.class, parameters={InstanceNetworkInterface.class})
    private Output<List<InstanceNetworkInterface>> networkInterfaces;

    public Output<List<InstanceNetworkInterface>> getNetworkInterfaces() {
        return this.networkInterfaces;
    }
    @OutputExport(name="networkPerformanceConfig", type=InstanceNetworkPerformanceConfig.class, parameters={})
    private Output</* @Nullable */ InstanceNetworkPerformanceConfig> networkPerformanceConfig;

    public Output</* @Nullable */ InstanceNetworkPerformanceConfig> getNetworkPerformanceConfig() {
        return this.networkPerformanceConfig;
    }
    @OutputExport(name="project", type=String.class, parameters={})
    private Output<String> project;

    public Output<String> getProject() {
        return this.project;
    }
    @OutputExport(name="reservationAffinity", type=InstanceReservationAffinity.class, parameters={})
    private Output<InstanceReservationAffinity> reservationAffinity;

    public Output<InstanceReservationAffinity> getReservationAffinity() {
        return this.reservationAffinity;
    }
    @OutputExport(name="resourcePolicies", type=String.class, parameters={})
    private Output</* @Nullable */ String> resourcePolicies;

    public Output</* @Nullable */ String> getResourcePolicies() {
        return this.resourcePolicies;
    }
    @OutputExport(name="scheduling", type=InstanceScheduling.class, parameters={})
    private Output<InstanceScheduling> scheduling;

    public Output<InstanceScheduling> getScheduling() {
        return this.scheduling;
    }
    @OutputExport(name="scratchDisks", type=List.class, parameters={InstanceScratchDisk.class})
    private Output</* @Nullable */ List<InstanceScratchDisk>> scratchDisks;

    public Output</* @Nullable */ List<InstanceScratchDisk>> getScratchDisks() {
        return this.scratchDisks;
    }
    @OutputExport(name="selfLink", type=String.class, parameters={})
    private Output<String> selfLink;

    public Output<String> getSelfLink() {
        return this.selfLink;
    }
    @OutputExport(name="serviceAccount", type=InstanceServiceAccount.class, parameters={})
    private Output</* @Nullable */ InstanceServiceAccount> serviceAccount;

    public Output</* @Nullable */ InstanceServiceAccount> getServiceAccount() {
        return this.serviceAccount;
    }
    @OutputExport(name="shieldedInstanceConfig", type=InstanceShieldedInstanceConfig.class, parameters={})
    private Output<InstanceShieldedInstanceConfig> shieldedInstanceConfig;

    public Output<InstanceShieldedInstanceConfig> getShieldedInstanceConfig() {
        return this.shieldedInstanceConfig;
    }
    @OutputExport(name="tags", type=List.class, parameters={String.class})
    private Output</* @Nullable */ List<String>> tags;

    public Output</* @Nullable */ List<String>> getTags() {
        return this.tags;
    }
    @OutputExport(name="tagsFingerprint", type=String.class, parameters={})
    private Output<String> tagsFingerprint;

    public Output<String> getTagsFingerprint() {
        return this.tagsFingerprint;
    }
    @OutputExport(name="zone", type=String.class, parameters={})
    private Output<String> zone;

    public Output<String> getZone() {
        return this.zone;
    }

    public Instance(String name, InstanceArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("gcp:compute/instance:Instance", name, args == null ? InstanceArgs.Empty : args, makeResourceOptions(options, Input.empty()));
    }

    private Instance(String name, Input<String> id, @Nullable InstanceState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("gcp:compute/instance:Instance", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Input<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .setVersion(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    public static Instance get(String name, Input<String> id, @Nullable InstanceState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new Instance(name, id, state, options);
    }
}
