// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.compute.outputs;

import io.pulumi.core.annotations.OutputCustomType;
import io.pulumi.gcp.compute.outputs.ResourcePolicyInstanceSchedulePolicyVmStartSchedule;
import io.pulumi.gcp.compute.outputs.ResourcePolicyInstanceSchedulePolicyVmStopSchedule;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class ResourcePolicyInstanceSchedulePolicy {
    /**
     * The expiration time of the schedule. The timestamp is an RFC3339 string.
     * 
     */
    private final @Nullable String expirationTime;
    /**
     * The start time of the schedule. The timestamp is an RFC3339 string.
     * 
     */
    private final @Nullable String startTime;
    /**
     * Specifies the time zone to be used in interpreting the schedule. The value of this field must be a time zone name
     * from the tz database: http://en.wikipedia.org/wiki/Tz_database.
     * 
     */
    private final String timeZone;
    /**
     * Specifies the schedule for starting instances.
     * Structure is documented below.
     * 
     */
    private final @Nullable ResourcePolicyInstanceSchedulePolicyVmStartSchedule vmStartSchedule;
    /**
     * Specifies the schedule for stopping instances.
     * Structure is documented below.
     * 
     */
    private final @Nullable ResourcePolicyInstanceSchedulePolicyVmStopSchedule vmStopSchedule;

    @OutputCustomType.Constructor({"expirationTime","startTime","timeZone","vmStartSchedule","vmStopSchedule"})
    private ResourcePolicyInstanceSchedulePolicy(
        @Nullable String expirationTime,
        @Nullable String startTime,
        String timeZone,
        @Nullable ResourcePolicyInstanceSchedulePolicyVmStartSchedule vmStartSchedule,
        @Nullable ResourcePolicyInstanceSchedulePolicyVmStopSchedule vmStopSchedule) {
        this.expirationTime = expirationTime;
        this.startTime = startTime;
        this.timeZone = Objects.requireNonNull(timeZone);
        this.vmStartSchedule = vmStartSchedule;
        this.vmStopSchedule = vmStopSchedule;
    }

    /**
     * The expiration time of the schedule. The timestamp is an RFC3339 string.
     * 
     */
    public Optional<String> getExpirationTime() {
        return Optional.ofNullable(this.expirationTime);
    }
    /**
     * The start time of the schedule. The timestamp is an RFC3339 string.
     * 
     */
    public Optional<String> getStartTime() {
        return Optional.ofNullable(this.startTime);
    }
    /**
     * Specifies the time zone to be used in interpreting the schedule. The value of this field must be a time zone name
     * from the tz database: http://en.wikipedia.org/wiki/Tz_database.
     * 
     */
    public String getTimeZone() {
        return this.timeZone;
    }
    /**
     * Specifies the schedule for starting instances.
     * Structure is documented below.
     * 
     */
    public Optional<ResourcePolicyInstanceSchedulePolicyVmStartSchedule> getVmStartSchedule() {
        return Optional.ofNullable(this.vmStartSchedule);
    }
    /**
     * Specifies the schedule for stopping instances.
     * Structure is documented below.
     * 
     */
    public Optional<ResourcePolicyInstanceSchedulePolicyVmStopSchedule> getVmStopSchedule() {
        return Optional.ofNullable(this.vmStopSchedule);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ResourcePolicyInstanceSchedulePolicy defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String expirationTime;
        private @Nullable String startTime;
        private String timeZone;
        private @Nullable ResourcePolicyInstanceSchedulePolicyVmStartSchedule vmStartSchedule;
        private @Nullable ResourcePolicyInstanceSchedulePolicyVmStopSchedule vmStopSchedule;

        public Builder() {
    	      // Empty
        }

        public Builder(ResourcePolicyInstanceSchedulePolicy defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.expirationTime = defaults.expirationTime;
    	      this.startTime = defaults.startTime;
    	      this.timeZone = defaults.timeZone;
    	      this.vmStartSchedule = defaults.vmStartSchedule;
    	      this.vmStopSchedule = defaults.vmStopSchedule;
        }

        public Builder setExpirationTime(@Nullable String expirationTime) {
            this.expirationTime = expirationTime;
            return this;
        }

        public Builder setStartTime(@Nullable String startTime) {
            this.startTime = startTime;
            return this;
        }

        public Builder setTimeZone(String timeZone) {
            this.timeZone = Objects.requireNonNull(timeZone);
            return this;
        }

        public Builder setVmStartSchedule(@Nullable ResourcePolicyInstanceSchedulePolicyVmStartSchedule vmStartSchedule) {
            this.vmStartSchedule = vmStartSchedule;
            return this;
        }

        public Builder setVmStopSchedule(@Nullable ResourcePolicyInstanceSchedulePolicyVmStopSchedule vmStopSchedule) {
            this.vmStopSchedule = vmStopSchedule;
            return this;
        }

        public ResourcePolicyInstanceSchedulePolicy build() {
            return new ResourcePolicyInstanceSchedulePolicy(expirationTime, startTime, timeZone, vmStartSchedule, vmStopSchedule);
        }
    }
}
