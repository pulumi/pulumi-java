// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.bigquery.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import io.pulumi.gcp.bigquery.outputs.JobExtractSourceModel;
import io.pulumi.gcp.bigquery.outputs.JobExtractSourceTable;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class JobExtract {
    private final @Nullable String compression;
    private final @Nullable String destinationFormat;
    private final List<String> destinationUris;
    private final @Nullable String fieldDelimiter;
    private final @Nullable Boolean printHeader;
    private final @Nullable JobExtractSourceModel sourceModel;
    private final @Nullable JobExtractSourceTable sourceTable;
    private final @Nullable Boolean useAvroLogicalTypes;

    @OutputCustomType.Constructor({"compression","destinationFormat","destinationUris","fieldDelimiter","printHeader","sourceModel","sourceTable","useAvroLogicalTypes"})
    private JobExtract(
        @Nullable String compression,
        @Nullable String destinationFormat,
        List<String> destinationUris,
        @Nullable String fieldDelimiter,
        @Nullable Boolean printHeader,
        @Nullable JobExtractSourceModel sourceModel,
        @Nullable JobExtractSourceTable sourceTable,
        @Nullable Boolean useAvroLogicalTypes) {
        this.compression = compression;
        this.destinationFormat = destinationFormat;
        this.destinationUris = Objects.requireNonNull(destinationUris);
        this.fieldDelimiter = fieldDelimiter;
        this.printHeader = printHeader;
        this.sourceModel = sourceModel;
        this.sourceTable = sourceTable;
        this.useAvroLogicalTypes = useAvroLogicalTypes;
    }

    public Optional<String> getCompression() {
        return Optional.ofNullable(this.compression);
    }
    public Optional<String> getDestinationFormat() {
        return Optional.ofNullable(this.destinationFormat);
    }
    public List<String> getDestinationUris() {
        return this.destinationUris;
    }
    public Optional<String> getFieldDelimiter() {
        return Optional.ofNullable(this.fieldDelimiter);
    }
    public Optional<Boolean> getPrintHeader() {
        return Optional.ofNullable(this.printHeader);
    }
    public Optional<JobExtractSourceModel> getSourceModel() {
        return Optional.ofNullable(this.sourceModel);
    }
    public Optional<JobExtractSourceTable> getSourceTable() {
        return Optional.ofNullable(this.sourceTable);
    }
    public Optional<Boolean> getUseAvroLogicalTypes() {
        return Optional.ofNullable(this.useAvroLogicalTypes);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(JobExtract defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String compression;
        private @Nullable String destinationFormat;
        private List<String> destinationUris;
        private @Nullable String fieldDelimiter;
        private @Nullable Boolean printHeader;
        private @Nullable JobExtractSourceModel sourceModel;
        private @Nullable JobExtractSourceTable sourceTable;
        private @Nullable Boolean useAvroLogicalTypes;

        public Builder() {
    	      // Empty
        }

        public Builder(JobExtract defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compression = defaults.compression;
    	      this.destinationFormat = defaults.destinationFormat;
    	      this.destinationUris = defaults.destinationUris;
    	      this.fieldDelimiter = defaults.fieldDelimiter;
    	      this.printHeader = defaults.printHeader;
    	      this.sourceModel = defaults.sourceModel;
    	      this.sourceTable = defaults.sourceTable;
    	      this.useAvroLogicalTypes = defaults.useAvroLogicalTypes;
        }

        public Builder setCompression(@Nullable String compression) {
            this.compression = compression;
            return this;
        }

        public Builder setDestinationFormat(@Nullable String destinationFormat) {
            this.destinationFormat = destinationFormat;
            return this;
        }

        public Builder setDestinationUris(List<String> destinationUris) {
            this.destinationUris = Objects.requireNonNull(destinationUris);
            return this;
        }

        public Builder setFieldDelimiter(@Nullable String fieldDelimiter) {
            this.fieldDelimiter = fieldDelimiter;
            return this;
        }

        public Builder setPrintHeader(@Nullable Boolean printHeader) {
            this.printHeader = printHeader;
            return this;
        }

        public Builder setSourceModel(@Nullable JobExtractSourceModel sourceModel) {
            this.sourceModel = sourceModel;
            return this;
        }

        public Builder setSourceTable(@Nullable JobExtractSourceTable sourceTable) {
            this.sourceTable = sourceTable;
            return this;
        }

        public Builder setUseAvroLogicalTypes(@Nullable Boolean useAvroLogicalTypes) {
            this.useAvroLogicalTypes = useAvroLogicalTypes;
            return this;
        }

        public JobExtract build() {
            return new JobExtract(compression, destinationFormat, destinationUris, fieldDelimiter, printHeader, sourceModel, sourceTable, useAvroLogicalTypes);
        }
    }
}
