// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.sql.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.InputImport;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class DatabaseInstanceSettingsBackupConfigurationBackupRetentionSettingsArgs extends io.pulumi.resources.ResourceArgs {

    public static final DatabaseInstanceSettingsBackupConfigurationBackupRetentionSettingsArgs Empty = new DatabaseInstanceSettingsBackupConfigurationBackupRetentionSettingsArgs();

    /**
     * Depending on the value of retention_unit, this is used to determine if a backup needs to be deleted. If retention_unit
     * is 'COUNT', we will retain this many backups.
     * 
     */
    @InputImport(name="retainedBackups", required=true)
      private final Output<Integer> retainedBackups;

    public Output<Integer> getRetainedBackups() {
        return this.retainedBackups;
    }

    /**
     * The unit that 'retained_backups' represents. Defaults to `COUNT`.
     * 
     */
    @InputImport(name="retentionUnit")
      private final @Nullable Output<String> retentionUnit;

    public Output<String> getRetentionUnit() {
        return this.retentionUnit == null ? Output.empty() : this.retentionUnit;
    }

    public DatabaseInstanceSettingsBackupConfigurationBackupRetentionSettingsArgs(
        Output<Integer> retainedBackups,
        @Nullable Output<String> retentionUnit) {
        this.retainedBackups = Objects.requireNonNull(retainedBackups, "expected parameter 'retainedBackups' to be non-null");
        this.retentionUnit = retentionUnit;
    }

    private DatabaseInstanceSettingsBackupConfigurationBackupRetentionSettingsArgs() {
        this.retainedBackups = Output.empty();
        this.retentionUnit = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DatabaseInstanceSettingsBackupConfigurationBackupRetentionSettingsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<Integer> retainedBackups;
        private @Nullable Output<String> retentionUnit;

        public Builder() {
    	      // Empty
        }

        public Builder(DatabaseInstanceSettingsBackupConfigurationBackupRetentionSettingsArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.retainedBackups = defaults.retainedBackups;
    	      this.retentionUnit = defaults.retentionUnit;
        }

        public Builder retainedBackups(Output<Integer> retainedBackups) {
            this.retainedBackups = Objects.requireNonNull(retainedBackups);
            return this;
        }

        public Builder retainedBackups(Integer retainedBackups) {
            this.retainedBackups = Output.of(Objects.requireNonNull(retainedBackups));
            return this;
        }

        public Builder retentionUnit(@Nullable Output<String> retentionUnit) {
            this.retentionUnit = retentionUnit;
            return this;
        }

        public Builder retentionUnit(@Nullable String retentionUnit) {
            this.retentionUnit = Output.ofNullable(retentionUnit);
            return this;
        }
        public DatabaseInstanceSettingsBackupConfigurationBackupRetentionSettingsArgs build() {
            return new DatabaseInstanceSettingsBackupConfigurationBackupRetentionSettingsArgs(retainedBackups, retentionUnit);
        }
    }
}
