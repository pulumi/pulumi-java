// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.cloudidentity.inputs;

import io.pulumi.core.annotations.Import;
import io.pulumi.gcp.cloudidentity.inputs.GetGroupsGroupGroupKey;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;


public final class GetGroupsGroup extends io.pulumi.resources.InvokeArgs {

    public static final GetGroupsGroup Empty = new GetGroupsGroup();

    @Import(name="createTime", required=true)
      private final String createTime;

    public String createTime() {
        return this.createTime;
    }

    @Import(name="description", required=true)
      private final String description;

    public String description() {
        return this.description;
    }

    @Import(name="displayName", required=true)
      private final String displayName;

    public String displayName() {
        return this.displayName;
    }

    @Import(name="groupKeys", required=true)
      private final List<GetGroupsGroupGroupKey> groupKeys;

    public List<GetGroupsGroupGroupKey> groupKeys() {
        return this.groupKeys;
    }

    @Import(name="initialGroupConfig", required=true)
      private final String initialGroupConfig;

    public String initialGroupConfig() {
        return this.initialGroupConfig;
    }

    @Import(name="labels", required=true)
      private final Map<String,String> labels;

    public Map<String,String> labels() {
        return this.labels;
    }

    @Import(name="name", required=true)
      private final String name;

    public String name() {
        return this.name;
    }

    /**
     * The parent resource under which to list all Groups. Must be of the form identitysources/{identity_source_id} for external- identity-mapped groups or customers/{customer_id} for Google Groups.
     * 
     */
    @Import(name="parent", required=true)
      private final String parent;

    public String parent() {
        return this.parent;
    }

    @Import(name="updateTime", required=true)
      private final String updateTime;

    public String updateTime() {
        return this.updateTime;
    }

    public GetGroupsGroup(
        String createTime,
        String description,
        String displayName,
        List<GetGroupsGroupGroupKey> groupKeys,
        String initialGroupConfig,
        Map<String,String> labels,
        String name,
        String parent,
        String updateTime) {
        this.createTime = Objects.requireNonNull(createTime, "expected parameter 'createTime' to be non-null");
        this.description = Objects.requireNonNull(description, "expected parameter 'description' to be non-null");
        this.displayName = Objects.requireNonNull(displayName, "expected parameter 'displayName' to be non-null");
        this.groupKeys = Objects.requireNonNull(groupKeys, "expected parameter 'groupKeys' to be non-null");
        this.initialGroupConfig = Objects.requireNonNull(initialGroupConfig, "expected parameter 'initialGroupConfig' to be non-null");
        this.labels = Objects.requireNonNull(labels, "expected parameter 'labels' to be non-null");
        this.name = Objects.requireNonNull(name, "expected parameter 'name' to be non-null");
        this.parent = Objects.requireNonNull(parent, "expected parameter 'parent' to be non-null");
        this.updateTime = Objects.requireNonNull(updateTime, "expected parameter 'updateTime' to be non-null");
    }

    private GetGroupsGroup() {
        this.createTime = null;
        this.description = null;
        this.displayName = null;
        this.groupKeys = List.of();
        this.initialGroupConfig = null;
        this.labels = Map.of();
        this.name = null;
        this.parent = null;
        this.updateTime = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetGroupsGroup defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String createTime;
        private String description;
        private String displayName;
        private List<GetGroupsGroupGroupKey> groupKeys;
        private String initialGroupConfig;
        private Map<String,String> labels;
        private String name;
        private String parent;
        private String updateTime;

        public Builder() {
    	      // Empty
        }

        public Builder(GetGroupsGroup defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.createTime = defaults.createTime;
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.groupKeys = defaults.groupKeys;
    	      this.initialGroupConfig = defaults.initialGroupConfig;
    	      this.labels = defaults.labels;
    	      this.name = defaults.name;
    	      this.parent = defaults.parent;
    	      this.updateTime = defaults.updateTime;
        }

        public Builder createTime(String createTime) {
            this.createTime = Objects.requireNonNull(createTime);
            return this;
        }
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        public Builder displayName(String displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }
        public Builder groupKeys(List<GetGroupsGroupGroupKey> groupKeys) {
            this.groupKeys = Objects.requireNonNull(groupKeys);
            return this;
        }
        public Builder groupKeys(GetGroupsGroupGroupKey... groupKeys) {
            return groupKeys(List.of(groupKeys));
        }
        public Builder initialGroupConfig(String initialGroupConfig) {
            this.initialGroupConfig = Objects.requireNonNull(initialGroupConfig);
            return this;
        }
        public Builder labels(Map<String,String> labels) {
            this.labels = Objects.requireNonNull(labels);
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder parent(String parent) {
            this.parent = Objects.requireNonNull(parent);
            return this;
        }
        public Builder updateTime(String updateTime) {
            this.updateTime = Objects.requireNonNull(updateTime);
            return this;
        }        public GetGroupsGroup build() {
            return new GetGroupsGroup(createTime, description, displayName, groupKeys, initialGroupConfig, labels, name, parent, updateTime);
        }
    }
}
