// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.storage.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.Boolean;
import java.lang.Integer;
import java.util.Objects;
import javax.annotation.Nullable;


public final class BucketRetentionPolicyArgs extends io.pulumi.resources.ResourceArgs {

    public static final BucketRetentionPolicyArgs Empty = new BucketRetentionPolicyArgs();

    /**
     * If set to `true`, the bucket will be [locked](https://cloud.google.com/storage/docs/using-bucket-lock#lock-bucket) and permanently restrict edits to the bucket's retention policy.  Caution: Locking a bucket is an irreversible action.
     * 
     */
    @InputImport(name="isLocked")
      private final @Nullable Input<Boolean> isLocked;

    public Input<Boolean> getIsLocked() {
        return this.isLocked == null ? Input.empty() : this.isLocked;
    }

    /**
     * The period of time, in seconds, that objects in the bucket must be retained and cannot be deleted, overwritten, or archived. The value must be less than 2,147,483,647 seconds.
     * 
     */
    @InputImport(name="retentionPeriod", required=true)
      private final Input<Integer> retentionPeriod;

    public Input<Integer> getRetentionPeriod() {
        return this.retentionPeriod;
    }

    public BucketRetentionPolicyArgs(
        @Nullable Input<Boolean> isLocked,
        Input<Integer> retentionPeriod) {
        this.isLocked = isLocked;
        this.retentionPeriod = Objects.requireNonNull(retentionPeriod, "expected parameter 'retentionPeriod' to be non-null");
    }

    private BucketRetentionPolicyArgs() {
        this.isLocked = Input.empty();
        this.retentionPeriod = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BucketRetentionPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<Boolean> isLocked;
        private Input<Integer> retentionPeriod;

        public Builder() {
    	      // Empty
        }

        public Builder(BucketRetentionPolicyArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.isLocked = defaults.isLocked;
    	      this.retentionPeriod = defaults.retentionPeriod;
        }

        public Builder isLocked(@Nullable Input<Boolean> isLocked) {
            this.isLocked = isLocked;
            return this;
        }

        public Builder isLocked(@Nullable Boolean isLocked) {
            this.isLocked = Input.ofNullable(isLocked);
            return this;
        }

        public Builder retentionPeriod(Input<Integer> retentionPeriod) {
            this.retentionPeriod = Objects.requireNonNull(retentionPeriod);
            return this;
        }

        public Builder retentionPeriod(Integer retentionPeriod) {
            this.retentionPeriod = Input.of(Objects.requireNonNull(retentionPeriod));
            return this;
        }
        public BucketRetentionPolicyArgs build() {
            return new BucketRetentionPolicyArgs(isLocked, retentionPeriod);
        }
    }
}
