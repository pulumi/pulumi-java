// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.compute;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class NetworkEndpointGroupArgs extends io.pulumi.resources.ResourceArgs {

    public static final NetworkEndpointGroupArgs Empty = new NetworkEndpointGroupArgs();

    /**
     * The default port used if the port number is not specified in the
     * network endpoint.
     * 
     */
    @Import(name="defaultPort")
      private final @Nullable Output<Integer> defaultPort;

    public Output<Integer> getDefaultPort() {
        return this.defaultPort == null ? Output.empty() : this.defaultPort;
    }

    /**
     * An optional description of this resource. Provide this property when
     * you create the resource.
     * 
     */
    @Import(name="description")
      private final @Nullable Output<String> description;

    public Output<String> getDescription() {
        return this.description == null ? Output.empty() : this.description;
    }

    /**
     * Name of the resource; provided by the client when the resource is
     * created. The name must be 1-63 characters long, and comply with
     * RFC1035. Specifically, the name must be 1-63 characters long and match
     * the regular expression `a-z?` which means the
     * first character must be a lowercase letter, and all following
     * characters must be a dash, lowercase letter, or digit, except the last
     * character, which cannot be a dash.
     * 
     */
    @Import(name="name")
      private final @Nullable Output<String> name;

    public Output<String> getName() {
        return this.name == null ? Output.empty() : this.name;
    }

    /**
     * The network to which all network endpoints in the NEG belong.
     * Uses "default" project network if unspecified.
     * 
     */
    @Import(name="network", required=true)
      private final Output<String> network;

    public Output<String> getNetwork() {
        return this.network;
    }

    /**
     * Type of network endpoints in this network endpoint group.
     * Default value is `GCE_VM_IP_PORT`.
     * Possible values are `GCE_VM_IP_PORT`.
     * 
     */
    @Import(name="networkEndpointType")
      private final @Nullable Output<String> networkEndpointType;

    public Output<String> getNetworkEndpointType() {
        return this.networkEndpointType == null ? Output.empty() : this.networkEndpointType;
    }

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Import(name="project")
      private final @Nullable Output<String> project;

    public Output<String> getProject() {
        return this.project == null ? Output.empty() : this.project;
    }

    /**
     * Optional subnetwork to which all network endpoints in the NEG belong.
     * 
     */
    @Import(name="subnetwork")
      private final @Nullable Output<String> subnetwork;

    public Output<String> getSubnetwork() {
        return this.subnetwork == null ? Output.empty() : this.subnetwork;
    }

    /**
     * Zone where the network endpoint group is located.
     * 
     */
    @Import(name="zone")
      private final @Nullable Output<String> zone;

    public Output<String> getZone() {
        return this.zone == null ? Output.empty() : this.zone;
    }

    public NetworkEndpointGroupArgs(
        @Nullable Output<Integer> defaultPort,
        @Nullable Output<String> description,
        @Nullable Output<String> name,
        Output<String> network,
        @Nullable Output<String> networkEndpointType,
        @Nullable Output<String> project,
        @Nullable Output<String> subnetwork,
        @Nullable Output<String> zone) {
        this.defaultPort = defaultPort;
        this.description = description;
        this.name = name;
        this.network = Objects.requireNonNull(network, "expected parameter 'network' to be non-null");
        this.networkEndpointType = networkEndpointType;
        this.project = project;
        this.subnetwork = subnetwork;
        this.zone = zone;
    }

    private NetworkEndpointGroupArgs() {
        this.defaultPort = Output.empty();
        this.description = Output.empty();
        this.name = Output.empty();
        this.network = Output.empty();
        this.networkEndpointType = Output.empty();
        this.project = Output.empty();
        this.subnetwork = Output.empty();
        this.zone = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(NetworkEndpointGroupArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<Integer> defaultPort;
        private @Nullable Output<String> description;
        private @Nullable Output<String> name;
        private Output<String> network;
        private @Nullable Output<String> networkEndpointType;
        private @Nullable Output<String> project;
        private @Nullable Output<String> subnetwork;
        private @Nullable Output<String> zone;

        public Builder() {
    	      // Empty
        }

        public Builder(NetworkEndpointGroupArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.defaultPort = defaults.defaultPort;
    	      this.description = defaults.description;
    	      this.name = defaults.name;
    	      this.network = defaults.network;
    	      this.networkEndpointType = defaults.networkEndpointType;
    	      this.project = defaults.project;
    	      this.subnetwork = defaults.subnetwork;
    	      this.zone = defaults.zone;
        }

        public Builder defaultPort(@Nullable Output<Integer> defaultPort) {
            this.defaultPort = defaultPort;
            return this;
        }

        public Builder defaultPort(@Nullable Integer defaultPort) {
            this.defaultPort = Output.ofNullable(defaultPort);
            return this;
        }

        public Builder description(@Nullable Output<String> description) {
            this.description = description;
            return this;
        }

        public Builder description(@Nullable String description) {
            this.description = Output.ofNullable(description);
            return this;
        }

        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }

        public Builder name(@Nullable String name) {
            this.name = Output.ofNullable(name);
            return this;
        }

        public Builder network(Output<String> network) {
            this.network = Objects.requireNonNull(network);
            return this;
        }

        public Builder network(String network) {
            this.network = Output.of(Objects.requireNonNull(network));
            return this;
        }

        public Builder networkEndpointType(@Nullable Output<String> networkEndpointType) {
            this.networkEndpointType = networkEndpointType;
            return this;
        }

        public Builder networkEndpointType(@Nullable String networkEndpointType) {
            this.networkEndpointType = Output.ofNullable(networkEndpointType);
            return this;
        }

        public Builder project(@Nullable Output<String> project) {
            this.project = project;
            return this;
        }

        public Builder project(@Nullable String project) {
            this.project = Output.ofNullable(project);
            return this;
        }

        public Builder subnetwork(@Nullable Output<String> subnetwork) {
            this.subnetwork = subnetwork;
            return this;
        }

        public Builder subnetwork(@Nullable String subnetwork) {
            this.subnetwork = Output.ofNullable(subnetwork);
            return this;
        }

        public Builder zone(@Nullable Output<String> zone) {
            this.zone = zone;
            return this;
        }

        public Builder zone(@Nullable String zone) {
            this.zone = Output.ofNullable(zone);
            return this;
        }
        public NetworkEndpointGroupArgs build() {
            return new NetworkEndpointGroupArgs(defaultPort, description, name, network, networkEndpointType, project, subnetwork, zone);
        }
    }
}
