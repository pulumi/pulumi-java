// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.composer.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import io.pulumi.gcp.composer.inputs.EnvironmentConfigWorkloadsConfigSchedulerGetArgs;
import io.pulumi.gcp.composer.inputs.EnvironmentConfigWorkloadsConfigWebServerGetArgs;
import io.pulumi.gcp.composer.inputs.EnvironmentConfigWorkloadsConfigWorkerGetArgs;
import java.util.Objects;
import javax.annotation.Nullable;


public final class EnvironmentConfigWorkloadsConfigGetArgs extends io.pulumi.resources.ResourceArgs {

    public static final EnvironmentConfigWorkloadsConfigGetArgs Empty = new EnvironmentConfigWorkloadsConfigGetArgs();

    @InputImport(name="scheduler")
        private final @Nullable Input<EnvironmentConfigWorkloadsConfigSchedulerGetArgs> scheduler;

    public Input<EnvironmentConfigWorkloadsConfigSchedulerGetArgs> getScheduler() {
        return this.scheduler == null ? Input.empty() : this.scheduler;
    }

    @InputImport(name="webServer")
        private final @Nullable Input<EnvironmentConfigWorkloadsConfigWebServerGetArgs> webServer;

    public Input<EnvironmentConfigWorkloadsConfigWebServerGetArgs> getWebServer() {
        return this.webServer == null ? Input.empty() : this.webServer;
    }

    @InputImport(name="worker")
        private final @Nullable Input<EnvironmentConfigWorkloadsConfigWorkerGetArgs> worker;

    public Input<EnvironmentConfigWorkloadsConfigWorkerGetArgs> getWorker() {
        return this.worker == null ? Input.empty() : this.worker;
    }

    public EnvironmentConfigWorkloadsConfigGetArgs(
        @Nullable Input<EnvironmentConfigWorkloadsConfigSchedulerGetArgs> scheduler,
        @Nullable Input<EnvironmentConfigWorkloadsConfigWebServerGetArgs> webServer,
        @Nullable Input<EnvironmentConfigWorkloadsConfigWorkerGetArgs> worker) {
        this.scheduler = scheduler;
        this.webServer = webServer;
        this.worker = worker;
    }

    private EnvironmentConfigWorkloadsConfigGetArgs() {
        this.scheduler = Input.empty();
        this.webServer = Input.empty();
        this.worker = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(EnvironmentConfigWorkloadsConfigGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<EnvironmentConfigWorkloadsConfigSchedulerGetArgs> scheduler;
        private @Nullable Input<EnvironmentConfigWorkloadsConfigWebServerGetArgs> webServer;
        private @Nullable Input<EnvironmentConfigWorkloadsConfigWorkerGetArgs> worker;

        public Builder() {
    	      // Empty
        }

        public Builder(EnvironmentConfigWorkloadsConfigGetArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.scheduler = defaults.scheduler;
    	      this.webServer = defaults.webServer;
    	      this.worker = defaults.worker;
        }

        public Builder setScheduler(@Nullable Input<EnvironmentConfigWorkloadsConfigSchedulerGetArgs> scheduler) {
            this.scheduler = scheduler;
            return this;
        }

        public Builder setScheduler(@Nullable EnvironmentConfigWorkloadsConfigSchedulerGetArgs scheduler) {
            this.scheduler = Input.ofNullable(scheduler);
            return this;
        }

        public Builder setWebServer(@Nullable Input<EnvironmentConfigWorkloadsConfigWebServerGetArgs> webServer) {
            this.webServer = webServer;
            return this;
        }

        public Builder setWebServer(@Nullable EnvironmentConfigWorkloadsConfigWebServerGetArgs webServer) {
            this.webServer = Input.ofNullable(webServer);
            return this;
        }

        public Builder setWorker(@Nullable Input<EnvironmentConfigWorkloadsConfigWorkerGetArgs> worker) {
            this.worker = worker;
            return this;
        }

        public Builder setWorker(@Nullable EnvironmentConfigWorkloadsConfigWorkerGetArgs worker) {
            this.worker = Input.ofNullable(worker);
            return this;
        }
        public EnvironmentConfigWorkloadsConfigGetArgs build() {
            return new EnvironmentConfigWorkloadsConfigGetArgs(scheduler, webServer, worker);
        }
    }
}
