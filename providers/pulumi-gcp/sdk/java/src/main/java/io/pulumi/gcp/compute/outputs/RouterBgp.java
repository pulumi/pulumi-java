// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.compute.outputs;

import io.pulumi.core.annotations.OutputCustomType;
import io.pulumi.gcp.compute.outputs.RouterBgpAdvertisedIpRange;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class RouterBgp {
    /**
     * User-specified flag to indicate which mode to use for advertisement.
     * Default value is `DEFAULT`.
     * Possible values are `DEFAULT` and `CUSTOM`.
     * 
     */
    private final @Nullable String advertiseMode;
    /**
     * User-specified list of prefix groups to advertise in custom mode.
     * This field can only be populated if advertiseMode is CUSTOM and
     * is advertised to all peers of the router. These groups will be
     * advertised in addition to any specified prefixes. Leave this field
     * blank to advertise no custom groups.
     * This enum field has the one valid value: ALL_SUBNETS
     * 
     */
    private final @Nullable List<String> advertisedGroups;
    /**
     * User-specified list of individual IP ranges to advertise in
     * custom mode. This field can only be populated if advertiseMode
     * is CUSTOM and is advertised to all peers of the router. These IP
     * ranges will be advertised in addition to any specified groups.
     * Leave this field blank to advertise no custom IP ranges.
     * Structure is documented below.
     * 
     */
    private final @Nullable List<RouterBgpAdvertisedIpRange> advertisedIpRanges;
    /**
     * Local BGP Autonomous System Number (ASN). Must be an RFC6996
     * private ASN, either 16-bit or 32-bit. The value will be fixed for
     * this router resource. All VPN tunnels that link to this router
     * will have the same local ASN.
     * 
     */
    private final Integer asn;

    @OutputCustomType.Constructor({"advertiseMode","advertisedGroups","advertisedIpRanges","asn"})
    private RouterBgp(
        @Nullable String advertiseMode,
        @Nullable List<String> advertisedGroups,
        @Nullable List<RouterBgpAdvertisedIpRange> advertisedIpRanges,
        Integer asn) {
        this.advertiseMode = advertiseMode;
        this.advertisedGroups = advertisedGroups;
        this.advertisedIpRanges = advertisedIpRanges;
        this.asn = Objects.requireNonNull(asn);
    }

    /**
     * User-specified flag to indicate which mode to use for advertisement.
     * Default value is `DEFAULT`.
     * Possible values are `DEFAULT` and `CUSTOM`.
     * 
     */
    public Optional<String> getAdvertiseMode() {
        return Optional.ofNullable(this.advertiseMode);
    }
    /**
     * User-specified list of prefix groups to advertise in custom mode.
     * This field can only be populated if advertiseMode is CUSTOM and
     * is advertised to all peers of the router. These groups will be
     * advertised in addition to any specified prefixes. Leave this field
     * blank to advertise no custom groups.
     * This enum field has the one valid value: ALL_SUBNETS
     * 
     */
    public List<String> getAdvertisedGroups() {
        return this.advertisedGroups == null ? List.of() : this.advertisedGroups;
    }
    /**
     * User-specified list of individual IP ranges to advertise in
     * custom mode. This field can only be populated if advertiseMode
     * is CUSTOM and is advertised to all peers of the router. These IP
     * ranges will be advertised in addition to any specified groups.
     * Leave this field blank to advertise no custom IP ranges.
     * Structure is documented below.
     * 
     */
    public List<RouterBgpAdvertisedIpRange> getAdvertisedIpRanges() {
        return this.advertisedIpRanges == null ? List.of() : this.advertisedIpRanges;
    }
    /**
     * Local BGP Autonomous System Number (ASN). Must be an RFC6996
     * private ASN, either 16-bit or 32-bit. The value will be fixed for
     * this router resource. All VPN tunnels that link to this router
     * will have the same local ASN.
     * 
     */
    public Integer getAsn() {
        return this.asn;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RouterBgp defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String advertiseMode;
        private @Nullable List<String> advertisedGroups;
        private @Nullable List<RouterBgpAdvertisedIpRange> advertisedIpRanges;
        private Integer asn;

        public Builder() {
    	      // Empty
        }

        public Builder(RouterBgp defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.advertiseMode = defaults.advertiseMode;
    	      this.advertisedGroups = defaults.advertisedGroups;
    	      this.advertisedIpRanges = defaults.advertisedIpRanges;
    	      this.asn = defaults.asn;
        }

        public Builder setAdvertiseMode(@Nullable String advertiseMode) {
            this.advertiseMode = advertiseMode;
            return this;
        }

        public Builder setAdvertisedGroups(@Nullable List<String> advertisedGroups) {
            this.advertisedGroups = advertisedGroups;
            return this;
        }

        public Builder setAdvertisedIpRanges(@Nullable List<RouterBgpAdvertisedIpRange> advertisedIpRanges) {
            this.advertisedIpRanges = advertisedIpRanges;
            return this;
        }

        public Builder setAsn(Integer asn) {
            this.asn = Objects.requireNonNull(asn);
            return this;
        }

        public RouterBgp build() {
            return new RouterBgp(advertiseMode, advertisedGroups, advertisedIpRanges, asn);
        }
    }
}
