// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.networkmanagement.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class ConnectivityTestSource {
    private final @Nullable String instance;
    private final @Nullable String ipAddress;
    private final @Nullable String network;
    private final @Nullable String networkType;
    private final @Nullable Integer port;
    private final @Nullable String projectId;

    @OutputCustomType.Constructor({"instance","ipAddress","network","networkType","port","projectId"})
    private ConnectivityTestSource(
        @Nullable String instance,
        @Nullable String ipAddress,
        @Nullable String network,
        @Nullable String networkType,
        @Nullable Integer port,
        @Nullable String projectId) {
        this.instance = instance;
        this.ipAddress = ipAddress;
        this.network = network;
        this.networkType = networkType;
        this.port = port;
        this.projectId = projectId;
    }

    public Optional<String> getInstance() {
        return Optional.ofNullable(this.instance);
    }
    public Optional<String> getIpAddress() {
        return Optional.ofNullable(this.ipAddress);
    }
    public Optional<String> getNetwork() {
        return Optional.ofNullable(this.network);
    }
    public Optional<String> getNetworkType() {
        return Optional.ofNullable(this.networkType);
    }
    public Optional<Integer> getPort() {
        return Optional.ofNullable(this.port);
    }
    public Optional<String> getProjectId() {
        return Optional.ofNullable(this.projectId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ConnectivityTestSource defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String instance;
        private @Nullable String ipAddress;
        private @Nullable String network;
        private @Nullable String networkType;
        private @Nullable Integer port;
        private @Nullable String projectId;

        public Builder() {
    	      // Empty
        }

        public Builder(ConnectivityTestSource defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.instance = defaults.instance;
    	      this.ipAddress = defaults.ipAddress;
    	      this.network = defaults.network;
    	      this.networkType = defaults.networkType;
    	      this.port = defaults.port;
    	      this.projectId = defaults.projectId;
        }

        public Builder setInstance(@Nullable String instance) {
            this.instance = instance;
            return this;
        }

        public Builder setIpAddress(@Nullable String ipAddress) {
            this.ipAddress = ipAddress;
            return this;
        }

        public Builder setNetwork(@Nullable String network) {
            this.network = network;
            return this;
        }

        public Builder setNetworkType(@Nullable String networkType) {
            this.networkType = networkType;
            return this;
        }

        public Builder setPort(@Nullable Integer port) {
            this.port = port;
            return this;
        }

        public Builder setProjectId(@Nullable String projectId) {
            this.projectId = projectId;
            return this;
        }

        public ConnectivityTestSource build() {
            return new ConnectivityTestSource(instance, ipAddress, network, networkType, port, projectId);
        }
    }
}
