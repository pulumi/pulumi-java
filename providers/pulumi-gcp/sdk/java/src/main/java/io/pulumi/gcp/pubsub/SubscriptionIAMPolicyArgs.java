// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.pubsub;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class SubscriptionIAMPolicyArgs extends io.pulumi.resources.ResourceArgs {

    public static final SubscriptionIAMPolicyArgs Empty = new SubscriptionIAMPolicyArgs();

    /**
     * The policy data generated by
     * a `gcp.organizations.getIAMPolicy` data source.
     * 
     */
    @Import(name="policyData", required=true)
      private final Output<String> policyData;

    public Output<String> getPolicyData() {
        return this.policyData;
    }

    /**
     * The project in which the resource belongs. If it
     * is not provided, the provider project is used.
     * 
     */
    @Import(name="project")
      private final @Nullable Output<String> project;

    public Output<String> getProject() {
        return this.project == null ? Output.empty() : this.project;
    }

    /**
     * The subscription name or id to bind to attach IAM policy to.
     * 
     */
    @Import(name="subscription", required=true)
      private final Output<String> subscription;

    public Output<String> getSubscription() {
        return this.subscription;
    }

    public SubscriptionIAMPolicyArgs(
        Output<String> policyData,
        @Nullable Output<String> project,
        Output<String> subscription) {
        this.policyData = Objects.requireNonNull(policyData, "expected parameter 'policyData' to be non-null");
        this.project = project;
        this.subscription = Objects.requireNonNull(subscription, "expected parameter 'subscription' to be non-null");
    }

    private SubscriptionIAMPolicyArgs() {
        this.policyData = Output.empty();
        this.project = Output.empty();
        this.subscription = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SubscriptionIAMPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> policyData;
        private @Nullable Output<String> project;
        private Output<String> subscription;

        public Builder() {
    	      // Empty
        }

        public Builder(SubscriptionIAMPolicyArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.policyData = defaults.policyData;
    	      this.project = defaults.project;
    	      this.subscription = defaults.subscription;
        }

        public Builder policyData(Output<String> policyData) {
            this.policyData = Objects.requireNonNull(policyData);
            return this;
        }
        public Builder policyData(String policyData) {
            this.policyData = Output.of(Objects.requireNonNull(policyData));
            return this;
        }
        public Builder project(@Nullable Output<String> project) {
            this.project = project;
            return this;
        }
        public Builder project(@Nullable String project) {
            this.project = Output.ofNullable(project);
            return this;
        }
        public Builder subscription(Output<String> subscription) {
            this.subscription = Objects.requireNonNull(subscription);
            return this;
        }
        public Builder subscription(String subscription) {
            this.subscription = Output.of(Objects.requireNonNull(subscription));
            return this;
        }        public SubscriptionIAMPolicyArgs build() {
            return new SubscriptionIAMPolicyArgs(policyData, project, subscription);
        }
    }
}
