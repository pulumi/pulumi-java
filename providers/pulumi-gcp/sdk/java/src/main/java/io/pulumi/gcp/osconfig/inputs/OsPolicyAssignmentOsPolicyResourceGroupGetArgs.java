// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.osconfig.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.InputImport;
import io.pulumi.gcp.osconfig.inputs.OsPolicyAssignmentOsPolicyResourceGroupInventoryFilterGetArgs;
import io.pulumi.gcp.osconfig.inputs.OsPolicyAssignmentOsPolicyResourceGroupResourceGetArgs;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class OsPolicyAssignmentOsPolicyResourceGroupGetArgs extends io.pulumi.resources.ResourceArgs {

    public static final OsPolicyAssignmentOsPolicyResourceGroupGetArgs Empty = new OsPolicyAssignmentOsPolicyResourceGroupGetArgs();

    /**
     * List of inventory filters for the resource group. The resources in this resource group are applied to the target VM if it satisfies at least one of the following inventory filters. For example, to apply this resource group to VMs running either `RHEL` or `CentOS` operating systems, specify 2 items for the list with following values: inventory_filters[0].os_short_name='rhel' and inventory_filters[1].os_short_name='centos' If the list is empty, this resource group will be applied to the target VM unconditionally.
     * 
     */
    @InputImport(name="inventoryFilters")
      private final @Nullable Output<List<OsPolicyAssignmentOsPolicyResourceGroupInventoryFilterGetArgs>> inventoryFilters;

    public Output<List<OsPolicyAssignmentOsPolicyResourceGroupInventoryFilterGetArgs>> getInventoryFilters() {
        return this.inventoryFilters == null ? Output.empty() : this.inventoryFilters;
    }

    /**
     * Required. List of resources configured for this resource group. The resources are executed in the exact order specified here.
     * 
     */
    @InputImport(name="resources", required=true)
      private final Output<List<OsPolicyAssignmentOsPolicyResourceGroupResourceGetArgs>> resources;

    public Output<List<OsPolicyAssignmentOsPolicyResourceGroupResourceGetArgs>> getResources() {
        return this.resources;
    }

    public OsPolicyAssignmentOsPolicyResourceGroupGetArgs(
        @Nullable Output<List<OsPolicyAssignmentOsPolicyResourceGroupInventoryFilterGetArgs>> inventoryFilters,
        Output<List<OsPolicyAssignmentOsPolicyResourceGroupResourceGetArgs>> resources) {
        this.inventoryFilters = inventoryFilters;
        this.resources = Objects.requireNonNull(resources, "expected parameter 'resources' to be non-null");
    }

    private OsPolicyAssignmentOsPolicyResourceGroupGetArgs() {
        this.inventoryFilters = Output.empty();
        this.resources = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(OsPolicyAssignmentOsPolicyResourceGroupGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<List<OsPolicyAssignmentOsPolicyResourceGroupInventoryFilterGetArgs>> inventoryFilters;
        private Output<List<OsPolicyAssignmentOsPolicyResourceGroupResourceGetArgs>> resources;

        public Builder() {
    	      // Empty
        }

        public Builder(OsPolicyAssignmentOsPolicyResourceGroupGetArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.inventoryFilters = defaults.inventoryFilters;
    	      this.resources = defaults.resources;
        }

        public Builder inventoryFilters(@Nullable Output<List<OsPolicyAssignmentOsPolicyResourceGroupInventoryFilterGetArgs>> inventoryFilters) {
            this.inventoryFilters = inventoryFilters;
            return this;
        }

        public Builder inventoryFilters(@Nullable List<OsPolicyAssignmentOsPolicyResourceGroupInventoryFilterGetArgs> inventoryFilters) {
            this.inventoryFilters = Output.ofNullable(inventoryFilters);
            return this;
        }

        public Builder resources(Output<List<OsPolicyAssignmentOsPolicyResourceGroupResourceGetArgs>> resources) {
            this.resources = Objects.requireNonNull(resources);
            return this;
        }

        public Builder resources(List<OsPolicyAssignmentOsPolicyResourceGroupResourceGetArgs> resources) {
            this.resources = Output.of(Objects.requireNonNull(resources));
            return this;
        }
        public OsPolicyAssignmentOsPolicyResourceGroupGetArgs build() {
            return new OsPolicyAssignmentOsPolicyResourceGroupGetArgs(inventoryFilters, resources);
        }
    }
}
