// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.compute.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import io.pulumi.gcp.compute.outputs.URLMapPathMatcherPathRuleRouteAction;
import io.pulumi.gcp.compute.outputs.URLMapPathMatcherPathRuleUrlRedirect;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class URLMapPathMatcherPathRule {
    private final List<String> paths;
    private final @Nullable URLMapPathMatcherPathRuleRouteAction routeAction;
    private final @Nullable String service;
    private final @Nullable URLMapPathMatcherPathRuleUrlRedirect urlRedirect;

    @OutputCustomType.Constructor({"paths","routeAction","service","urlRedirect"})
    private URLMapPathMatcherPathRule(
        List<String> paths,
        @Nullable URLMapPathMatcherPathRuleRouteAction routeAction,
        @Nullable String service,
        @Nullable URLMapPathMatcherPathRuleUrlRedirect urlRedirect) {
        this.paths = Objects.requireNonNull(paths);
        this.routeAction = routeAction;
        this.service = service;
        this.urlRedirect = urlRedirect;
    }

    public List<String> getPaths() {
        return this.paths;
    }
    public Optional<URLMapPathMatcherPathRuleRouteAction> getRouteAction() {
        return Optional.ofNullable(this.routeAction);
    }
    public Optional<String> getService() {
        return Optional.ofNullable(this.service);
    }
    public Optional<URLMapPathMatcherPathRuleUrlRedirect> getUrlRedirect() {
        return Optional.ofNullable(this.urlRedirect);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(URLMapPathMatcherPathRule defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<String> paths;
        private @Nullable URLMapPathMatcherPathRuleRouteAction routeAction;
        private @Nullable String service;
        private @Nullable URLMapPathMatcherPathRuleUrlRedirect urlRedirect;

        public Builder() {
    	      // Empty
        }

        public Builder(URLMapPathMatcherPathRule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.paths = defaults.paths;
    	      this.routeAction = defaults.routeAction;
    	      this.service = defaults.service;
    	      this.urlRedirect = defaults.urlRedirect;
        }

        public Builder setPaths(List<String> paths) {
            this.paths = Objects.requireNonNull(paths);
            return this;
        }

        public Builder setRouteAction(@Nullable URLMapPathMatcherPathRuleRouteAction routeAction) {
            this.routeAction = routeAction;
            return this;
        }

        public Builder setService(@Nullable String service) {
            this.service = service;
            return this;
        }

        public Builder setUrlRedirect(@Nullable URLMapPathMatcherPathRuleUrlRedirect urlRedirect) {
            this.urlRedirect = urlRedirect;
            return this;
        }

        public URLMapPathMatcherPathRule build() {
            return new URLMapPathMatcherPathRule(paths, routeAction, service, urlRedirect);
        }
    }
}
