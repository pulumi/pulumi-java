// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.cloudtasks.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.Double;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class QueueRateLimits {
    private final @Nullable Integer maxBurstSize;
    private final @Nullable Integer maxConcurrentDispatches;
    private final @Nullable Double maxDispatchesPerSecond;

    @OutputCustomType.Constructor({"maxBurstSize","maxConcurrentDispatches","maxDispatchesPerSecond"})
    private QueueRateLimits(
        @Nullable Integer maxBurstSize,
        @Nullable Integer maxConcurrentDispatches,
        @Nullable Double maxDispatchesPerSecond) {
        this.maxBurstSize = maxBurstSize;
        this.maxConcurrentDispatches = maxConcurrentDispatches;
        this.maxDispatchesPerSecond = maxDispatchesPerSecond;
    }

    public Optional<Integer> getMaxBurstSize() {
        return Optional.ofNullable(this.maxBurstSize);
    }
    public Optional<Integer> getMaxConcurrentDispatches() {
        return Optional.ofNullable(this.maxConcurrentDispatches);
    }
    public Optional<Double> getMaxDispatchesPerSecond() {
        return Optional.ofNullable(this.maxDispatchesPerSecond);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(QueueRateLimits defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Integer maxBurstSize;
        private @Nullable Integer maxConcurrentDispatches;
        private @Nullable Double maxDispatchesPerSecond;

        public Builder() {
    	      // Empty
        }

        public Builder(QueueRateLimits defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.maxBurstSize = defaults.maxBurstSize;
    	      this.maxConcurrentDispatches = defaults.maxConcurrentDispatches;
    	      this.maxDispatchesPerSecond = defaults.maxDispatchesPerSecond;
        }

        public Builder setMaxBurstSize(@Nullable Integer maxBurstSize) {
            this.maxBurstSize = maxBurstSize;
            return this;
        }

        public Builder setMaxConcurrentDispatches(@Nullable Integer maxConcurrentDispatches) {
            this.maxConcurrentDispatches = maxConcurrentDispatches;
            return this;
        }

        public Builder setMaxDispatchesPerSecond(@Nullable Double maxDispatchesPerSecond) {
            this.maxDispatchesPerSecond = maxDispatchesPerSecond;
            return this;
        }

        public QueueRateLimits build() {
            return new QueueRateLimits(maxBurstSize, maxConcurrentDispatches, maxDispatchesPerSecond);
        }
    }
}
