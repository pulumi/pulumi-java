// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.cloudbuild.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import io.pulumi.gcp.cloudbuild.inputs.TriggerGithubPullRequestGetArgs;
import io.pulumi.gcp.cloudbuild.inputs.TriggerGithubPushGetArgs;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class TriggerGithubGetArgs extends io.pulumi.resources.ResourceArgs {

    public static final TriggerGithubGetArgs Empty = new TriggerGithubGetArgs();

    @InputImport(name="name")
    private final @Nullable Input<String> name;

    public Input<String> getName() {
        return this.name == null ? Input.empty() : this.name;
    }

    @InputImport(name="owner")
    private final @Nullable Input<String> owner;

    public Input<String> getOwner() {
        return this.owner == null ? Input.empty() : this.owner;
    }

    @InputImport(name="pullRequest")
    private final @Nullable Input<TriggerGithubPullRequestGetArgs> pullRequest;

    public Input<TriggerGithubPullRequestGetArgs> getPullRequest() {
        return this.pullRequest == null ? Input.empty() : this.pullRequest;
    }

    @InputImport(name="push")
    private final @Nullable Input<TriggerGithubPushGetArgs> push;

    public Input<TriggerGithubPushGetArgs> getPush() {
        return this.push == null ? Input.empty() : this.push;
    }

    public TriggerGithubGetArgs(
        @Nullable Input<String> name,
        @Nullable Input<String> owner,
        @Nullable Input<TriggerGithubPullRequestGetArgs> pullRequest,
        @Nullable Input<TriggerGithubPushGetArgs> push) {
        this.name = name;
        this.owner = owner;
        this.pullRequest = pullRequest;
        this.push = push;
    }

    private TriggerGithubGetArgs() {
        this.name = Input.empty();
        this.owner = Input.empty();
        this.pullRequest = Input.empty();
        this.push = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TriggerGithubGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> name;
        private @Nullable Input<String> owner;
        private @Nullable Input<TriggerGithubPullRequestGetArgs> pullRequest;
        private @Nullable Input<TriggerGithubPushGetArgs> push;

        public Builder() {
    	      // Empty
        }

        public Builder(TriggerGithubGetArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.name = defaults.name;
    	      this.owner = defaults.owner;
    	      this.pullRequest = defaults.pullRequest;
    	      this.push = defaults.push;
        }

        public Builder setName(@Nullable Input<String> name) {
            this.name = name;
            return this;
        }

        public Builder setName(@Nullable String name) {
            this.name = Input.ofNullable(name);
            return this;
        }

        public Builder setOwner(@Nullable Input<String> owner) {
            this.owner = owner;
            return this;
        }

        public Builder setOwner(@Nullable String owner) {
            this.owner = Input.ofNullable(owner);
            return this;
        }

        public Builder setPullRequest(@Nullable Input<TriggerGithubPullRequestGetArgs> pullRequest) {
            this.pullRequest = pullRequest;
            return this;
        }

        public Builder setPullRequest(@Nullable TriggerGithubPullRequestGetArgs pullRequest) {
            this.pullRequest = Input.ofNullable(pullRequest);
            return this;
        }

        public Builder setPush(@Nullable Input<TriggerGithubPushGetArgs> push) {
            this.push = push;
            return this;
        }

        public Builder setPush(@Nullable TriggerGithubPushGetArgs push) {
            this.push = Input.ofNullable(push);
            return this;
        }

        public TriggerGithubGetArgs build() {
            return new TriggerGithubGetArgs(name, owner, pullRequest, push);
        }
    }
}
