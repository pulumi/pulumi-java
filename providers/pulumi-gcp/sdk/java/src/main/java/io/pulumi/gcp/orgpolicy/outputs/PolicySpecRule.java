// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.orgpolicy.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import io.pulumi.gcp.orgpolicy.outputs.PolicySpecRuleCondition;
import io.pulumi.gcp.orgpolicy.outputs.PolicySpecRuleValues;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class PolicySpecRule {
    private final @Nullable String allowAll;
    private final @Nullable PolicySpecRuleCondition condition;
    private final @Nullable String denyAll;
    private final @Nullable String enforce;
    private final @Nullable PolicySpecRuleValues values;

    @OutputCustomType.Constructor({"allowAll","condition","denyAll","enforce","values"})
    private PolicySpecRule(
        @Nullable String allowAll,
        @Nullable PolicySpecRuleCondition condition,
        @Nullable String denyAll,
        @Nullable String enforce,
        @Nullable PolicySpecRuleValues values) {
        this.allowAll = allowAll;
        this.condition = condition;
        this.denyAll = denyAll;
        this.enforce = enforce;
        this.values = values;
    }

    public Optional<String> getAllowAll() {
        return Optional.ofNullable(this.allowAll);
    }
    public Optional<PolicySpecRuleCondition> getCondition() {
        return Optional.ofNullable(this.condition);
    }
    public Optional<String> getDenyAll() {
        return Optional.ofNullable(this.denyAll);
    }
    public Optional<String> getEnforce() {
        return Optional.ofNullable(this.enforce);
    }
    public Optional<PolicySpecRuleValues> getValues() {
        return Optional.ofNullable(this.values);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PolicySpecRule defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String allowAll;
        private @Nullable PolicySpecRuleCondition condition;
        private @Nullable String denyAll;
        private @Nullable String enforce;
        private @Nullable PolicySpecRuleValues values;

        public Builder() {
    	      // Empty
        }

        public Builder(PolicySpecRule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allowAll = defaults.allowAll;
    	      this.condition = defaults.condition;
    	      this.denyAll = defaults.denyAll;
    	      this.enforce = defaults.enforce;
    	      this.values = defaults.values;
        }

        public Builder setAllowAll(@Nullable String allowAll) {
            this.allowAll = allowAll;
            return this;
        }

        public Builder setCondition(@Nullable PolicySpecRuleCondition condition) {
            this.condition = condition;
            return this;
        }

        public Builder setDenyAll(@Nullable String denyAll) {
            this.denyAll = denyAll;
            return this;
        }

        public Builder setEnforce(@Nullable String enforce) {
            this.enforce = enforce;
            return this;
        }

        public Builder setValues(@Nullable PolicySpecRuleValues values) {
            this.values = values;
            return this;
        }

        public PolicySpecRule build() {
            return new PolicySpecRule(allowAll, condition, denyAll, enforce, values);
        }
    }
}
