// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.identityplatform.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class TenantDefaultSupportedIdpConfigState extends io.pulumi.resources.ResourceArgs {

    public static final TenantDefaultSupportedIdpConfigState Empty = new TenantDefaultSupportedIdpConfigState();

    /**
     * OAuth client ID
     * 
     */
    @InputImport(name="clientId")
        private final @Nullable Input<String> clientId;

    public Input<String> getClientId() {
        return this.clientId == null ? Input.empty() : this.clientId;
    }

    /**
     * OAuth client secret
     * 
     */
    @InputImport(name="clientSecret")
        private final @Nullable Input<String> clientSecret;

    public Input<String> getClientSecret() {
        return this.clientSecret == null ? Input.empty() : this.clientSecret;
    }

    /**
     * If this IDP allows the user to sign in
     * 
     */
    @InputImport(name="enabled")
        private final @Nullable Input<Boolean> enabled;

    public Input<Boolean> getEnabled() {
        return this.enabled == null ? Input.empty() : this.enabled;
    }

    /**
     * ID of the IDP. Possible values include:
     * * `apple.com`
     * * `facebook.com`
     * * `gc.apple.com`
     * * `github.com`
     * * `google.com`
     * * `linkedin.com`
     * * `microsoft.com`
     * * `playgames.google.com`
     * * `twitter.com`
     * * `yahoo.com`
     * 
     */
    @InputImport(name="idpId")
        private final @Nullable Input<String> idpId;

    public Input<String> getIdpId() {
        return this.idpId == null ? Input.empty() : this.idpId;
    }

    /**
     * The name of the default supported IDP config resource
     * 
     */
    @InputImport(name="name")
        private final @Nullable Input<String> name;

    public Input<String> getName() {
        return this.name == null ? Input.empty() : this.name;
    }

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @InputImport(name="project")
        private final @Nullable Input<String> project;

    public Input<String> getProject() {
        return this.project == null ? Input.empty() : this.project;
    }

    /**
     * The name of the tenant where this DefaultSupportedIdpConfig resource exists
     * 
     */
    @InputImport(name="tenant")
        private final @Nullable Input<String> tenant;

    public Input<String> getTenant() {
        return this.tenant == null ? Input.empty() : this.tenant;
    }

    public TenantDefaultSupportedIdpConfigState(
        @Nullable Input<String> clientId,
        @Nullable Input<String> clientSecret,
        @Nullable Input<Boolean> enabled,
        @Nullable Input<String> idpId,
        @Nullable Input<String> name,
        @Nullable Input<String> project,
        @Nullable Input<String> tenant) {
        this.clientId = clientId;
        this.clientSecret = clientSecret;
        this.enabled = enabled;
        this.idpId = idpId;
        this.name = name;
        this.project = project;
        this.tenant = tenant;
    }

    private TenantDefaultSupportedIdpConfigState() {
        this.clientId = Input.empty();
        this.clientSecret = Input.empty();
        this.enabled = Input.empty();
        this.idpId = Input.empty();
        this.name = Input.empty();
        this.project = Input.empty();
        this.tenant = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TenantDefaultSupportedIdpConfigState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> clientId;
        private @Nullable Input<String> clientSecret;
        private @Nullable Input<Boolean> enabled;
        private @Nullable Input<String> idpId;
        private @Nullable Input<String> name;
        private @Nullable Input<String> project;
        private @Nullable Input<String> tenant;

        public Builder() {
    	      // Empty
        }

        public Builder(TenantDefaultSupportedIdpConfigState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.clientId = defaults.clientId;
    	      this.clientSecret = defaults.clientSecret;
    	      this.enabled = defaults.enabled;
    	      this.idpId = defaults.idpId;
    	      this.name = defaults.name;
    	      this.project = defaults.project;
    	      this.tenant = defaults.tenant;
        }

        public Builder setClientId(@Nullable Input<String> clientId) {
            this.clientId = clientId;
            return this;
        }

        public Builder setClientId(@Nullable String clientId) {
            this.clientId = Input.ofNullable(clientId);
            return this;
        }

        public Builder setClientSecret(@Nullable Input<String> clientSecret) {
            this.clientSecret = clientSecret;
            return this;
        }

        public Builder setClientSecret(@Nullable String clientSecret) {
            this.clientSecret = Input.ofNullable(clientSecret);
            return this;
        }

        public Builder setEnabled(@Nullable Input<Boolean> enabled) {
            this.enabled = enabled;
            return this;
        }

        public Builder setEnabled(@Nullable Boolean enabled) {
            this.enabled = Input.ofNullable(enabled);
            return this;
        }

        public Builder setIdpId(@Nullable Input<String> idpId) {
            this.idpId = idpId;
            return this;
        }

        public Builder setIdpId(@Nullable String idpId) {
            this.idpId = Input.ofNullable(idpId);
            return this;
        }

        public Builder setName(@Nullable Input<String> name) {
            this.name = name;
            return this;
        }

        public Builder setName(@Nullable String name) {
            this.name = Input.ofNullable(name);
            return this;
        }

        public Builder setProject(@Nullable Input<String> project) {
            this.project = project;
            return this;
        }

        public Builder setProject(@Nullable String project) {
            this.project = Input.ofNullable(project);
            return this;
        }

        public Builder setTenant(@Nullable Input<String> tenant) {
            this.tenant = tenant;
            return this;
        }

        public Builder setTenant(@Nullable String tenant) {
            this.tenant = Input.ofNullable(tenant);
            return this;
        }
        public TenantDefaultSupportedIdpConfigState build() {
            return new TenantDefaultSupportedIdpConfigState(clientId, clientSecret, enabled, idpId, name, project, tenant);
        }
    }
}
