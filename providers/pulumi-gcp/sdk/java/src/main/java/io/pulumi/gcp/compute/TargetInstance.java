// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.compute;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Export;
import io.pulumi.core.annotations.ResourceType;
import io.pulumi.gcp.Utilities;
import io.pulumi.gcp.compute.TargetInstanceArgs;
import io.pulumi.gcp.compute.inputs.TargetInstanceState;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * Represents a TargetInstance resource which defines an endpoint instance
 * that terminates traffic of certain protocols. In particular, they are used
 * in Protocol Forwarding, where forwarding rules can send packets to a
 * non-NAT'ed target instance. Each target instance contains a single
 * virtual machine instance that receives and handles traffic from the
 * corresponding forwarding rules.
 * 
 * 
 * To get more information about TargetInstance, see:
 * 
 * * [API documentation](https://cloud.google.com/compute/docs/reference/v1/targetInstances)
 * * How-to Guides
 *     * [Using Protocol Forwarding](https://cloud.google.com/compute/docs/protocol-forwarding)
 * 
 * {{% examples %}}
 * ## Example Usage
 * {{% example %}}
 * ### Target Instance Basic
 * 
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 * 
 * const vmimage = gcp.compute.getImage({
 *     family: "debian-9",
 *     project: "debian-cloud",
 * });
 * const target_vm = new gcp.compute.Instance("target-vm", {
 *     machineType: "e2-medium",
 *     zone: "us-central1-a",
 *     bootDisk: {
 *         initializeParams: {
 *             image: vmimage.then(vmimage => vmimage.selfLink),
 *         },
 *     },
 *     networkInterfaces: [{
 *         network: "default",
 *     }],
 * });
 * const _default = new gcp.compute.TargetInstance("default", {instance: target_vm.id});
 * ```
 * ```python
 * import pulumi
 * import pulumi_gcp as gcp
 * 
 * vmimage = gcp.compute.get_image(family="debian-9",
 *     project="debian-cloud")
 * target_vm = gcp.compute.Instance("target-vm",
 *     machine_type="e2-medium",
 *     zone="us-central1-a",
 *     boot_disk=gcp.compute.InstanceBootDiskArgs(
 *         initialize_params=gcp.compute.InstanceBootDiskInitializeParamsArgs(
 *             image=vmimage.self_link,
 *         ),
 *     ),
 *     network_interfaces=[gcp.compute.InstanceNetworkInterfaceArgs(
 *         network="default",
 *     )])
 * default = gcp.compute.TargetInstance("default", instance=target_vm.id)
 * ```
 * ```csharp
 * using Pulumi;
 * using Gcp = Pulumi.Gcp;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var vmimage = Output.Create(Gcp.Compute.GetImage.InvokeAsync(new Gcp.Compute.GetImageArgs
 *         {
 *             Family = "debian-9",
 *             Project = "debian-cloud",
 *         }));
 *         var target_vm = new Gcp.Compute.Instance("target-vm", new Gcp.Compute.InstanceArgs
 *         {
 *             MachineType = "e2-medium",
 *             Zone = "us-central1-a",
 *             BootDisk = new Gcp.Compute.Inputs.InstanceBootDiskArgs
 *             {
 *                 InitializeParams = new Gcp.Compute.Inputs.InstanceBootDiskInitializeParamsArgs
 *                 {
 *                     Image = vmimage.Apply(vmimage => vmimage.SelfLink),
 *                 },
 *             },
 *             NetworkInterfaces = 
 *             {
 *                 new Gcp.Compute.Inputs.InstanceNetworkInterfaceArgs
 *                 {
 *                     Network = "default",
 *                 },
 *             },
 *         });
 *         var @default = new Gcp.Compute.TargetInstance("default", new Gcp.Compute.TargetInstanceArgs
 *         {
 *             Instance = target_vm.Id,
 *         });
 *     }
 * 
 * }
 * ```
 * ```go
 * package main
 * 
 * import (
 * 	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/compute"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		opt0 := "debian-9"
 * 		opt1 := "debian-cloud"
 * 		vmimage, err := compute.LookupImage(ctx, &compute.LookupImageArgs{
 * 			Family:  &opt0,
 * 			Project: &opt1,
 * 		}, nil)
 * 		if err != nil {
 * 			return err
 * 		}
 * 		_, err = compute.NewInstance(ctx, "target-vm", &compute.InstanceArgs{
 * 			MachineType: pulumi.String("e2-medium"),
 * 			Zone:        pulumi.String("us-central1-a"),
 * 			BootDisk: &compute.InstanceBootDiskArgs{
 * 				InitializeParams: &compute.InstanceBootDiskInitializeParamsArgs{
 * 					Image: pulumi.String(vmimage.SelfLink),
 * 				},
 * 			},
 * 			NetworkInterfaces: compute.InstanceNetworkInterfaceArray{
 * 				&compute.InstanceNetworkInterfaceArgs{
 * 					Network: pulumi.String("default"),
 * 				},
 * 			},
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		_, err = compute.NewTargetInstance(ctx, "default", &compute.TargetInstanceArgs{
 * 			Instance: target_vm.ID(),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * ```
 * {{% /example %}}
 * {{% example %}}
 * ### Target Instance Custom Network
 * 
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 * 
 * const target-vmNetwork = gcp.compute.getNetwork({
 *     name: "default",
 * });
 * const vmimage = gcp.compute.getImage({
 *     family: "debian-10",
 *     project: "debian-cloud",
 * });
 * const target_vmInstance = new gcp.compute.Instance("target-vmInstance", {
 *     machineType: "e2-medium",
 *     zone: "us-central1-a",
 *     bootDisk: {
 *         initializeParams: {
 *             image: vmimage.then(vmimage => vmimage.selfLink),
 *         },
 *     },
 *     networkInterfaces: [{
 *         network: "default",
 *     }],
 * }, {
 *     provider: google_beta,
 * });
 * const customNetwork = new gcp.compute.TargetInstance("customNetwork", {
 *     instance: target_vmInstance.id,
 *     network: target_vmNetwork.then(target_vmNetwork => target_vmNetwork.selfLink),
 * }, {
 *     provider: google_beta,
 * });
 * ```
 * ```python
 * import pulumi
 * import pulumi_gcp as gcp
 * 
 * target_vm_network = gcp.compute.get_network(name="default")
 * vmimage = gcp.compute.get_image(family="debian-10",
 *     project="debian-cloud")
 * target_vm_instance = gcp.compute.Instance("target-vmInstance",
 *     machine_type="e2-medium",
 *     zone="us-central1-a",
 *     boot_disk=gcp.compute.InstanceBootDiskArgs(
 *         initialize_params=gcp.compute.InstanceBootDiskInitializeParamsArgs(
 *             image=vmimage.self_link,
 *         ),
 *     ),
 *     network_interfaces=[gcp.compute.InstanceNetworkInterfaceArgs(
 *         network="default",
 *     )],
 *     opts=pulumi.ResourceOptions(provider=google_beta))
 * custom_network = gcp.compute.TargetInstance("customNetwork",
 *     instance=target_vm_instance.id,
 *     network=target_vm_network.self_link,
 *     opts=pulumi.ResourceOptions(provider=google_beta))
 * ```
 * ```csharp
 * using Pulumi;
 * using Gcp = Pulumi.Gcp;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var target_vmNetwork = Output.Create(Gcp.Compute.GetNetwork.InvokeAsync(new Gcp.Compute.GetNetworkArgs
 *         {
 *             Name = "default",
 *         }));
 *         var vmimage = Output.Create(Gcp.Compute.GetImage.InvokeAsync(new Gcp.Compute.GetImageArgs
 *         {
 *             Family = "debian-10",
 *             Project = "debian-cloud",
 *         }));
 *         var target_vmInstance = new Gcp.Compute.Instance("target-vmInstance", new Gcp.Compute.InstanceArgs
 *         {
 *             MachineType = "e2-medium",
 *             Zone = "us-central1-a",
 *             BootDisk = new Gcp.Compute.Inputs.InstanceBootDiskArgs
 *             {
 *                 InitializeParams = new Gcp.Compute.Inputs.InstanceBootDiskInitializeParamsArgs
 *                 {
 *                     Image = vmimage.Apply(vmimage => vmimage.SelfLink),
 *                 },
 *             },
 *             NetworkInterfaces = 
 *             {
 *                 new Gcp.Compute.Inputs.InstanceNetworkInterfaceArgs
 *                 {
 *                     Network = "default",
 *                 },
 *             },
 *         }, new CustomResourceOptions
 *         {
 *             Provider = google_beta,
 *         });
 *         var customNetwork = new Gcp.Compute.TargetInstance("customNetwork", new Gcp.Compute.TargetInstanceArgs
 *         {
 *             Instance = target_vmInstance.Id,
 *             Network = target_vmNetwork.Apply(target_vmNetwork => target_vmNetwork.SelfLink),
 *         }, new CustomResourceOptions
 *         {
 *             Provider = google_beta,
 *         });
 *     }
 * 
 * }
 * ```
 * ```go
 * package main
 * 
 * import (
 * 	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/compute"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		target_vmNetwork, err := compute.LookupNetwork(ctx, &compute.LookupNetworkArgs{
 * 			Name: "default",
 * 		}, nil)
 * 		if err != nil {
 * 			return err
 * 		}
 * 		opt0 := "debian-10"
 * 		opt1 := "debian-cloud"
 * 		vmimage, err := compute.LookupImage(ctx, &compute.LookupImageArgs{
 * 			Family:  &opt0,
 * 			Project: &opt1,
 * 		}, nil)
 * 		if err != nil {
 * 			return err
 * 		}
 * 		_, err = compute.NewInstance(ctx, "target-vmInstance", &compute.InstanceArgs{
 * 			MachineType: pulumi.String("e2-medium"),
 * 			Zone:        pulumi.String("us-central1-a"),
 * 			BootDisk: &compute.InstanceBootDiskArgs{
 * 				InitializeParams: &compute.InstanceBootDiskInitializeParamsArgs{
 * 					Image: pulumi.String(vmimage.SelfLink),
 * 				},
 * 			},
 * 			NetworkInterfaces: compute.InstanceNetworkInterfaceArray{
 * 				&compute.InstanceNetworkInterfaceArgs{
 * 					Network: pulumi.String("default"),
 * 				},
 * 			},
 * 		}, pulumi.Provider(google_beta))
 * 		if err != nil {
 * 			return err
 * 		}
 * 		_, err = compute.NewTargetInstance(ctx, "customNetwork", &compute.TargetInstanceArgs{
 * 			Instance: target_vmInstance.ID(),
 * 			Network:  pulumi.String(target_vmNetwork.SelfLink),
 * 		}, pulumi.Provider(google_beta))
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * ```
 * {{% /example %}}
 * {{% /examples %}}
 * 
 * ## Import
 * 
 * TargetInstance can be imported using any of these accepted formats
 * 
 * ```sh
 *  $ pulumi import gcp:compute/targetInstance:TargetInstance default projects/{{project}}/zones/{{zone}}/targetInstances/{{name}}
 * ```
 * 
 * 
 * 
 * ```sh
 *  $ pulumi import gcp:compute/targetInstance:TargetInstance default {{project}}/{{zone}}/{{name}}
 * ```
 * 
 * 
 * 
 * ```sh
 *  $ pulumi import gcp:compute/targetInstance:TargetInstance default {{zone}}/{{name}}
 * ```
 * 
 * 
 * 
 * ```sh
 *  $ pulumi import gcp:compute/targetInstance:TargetInstance default {{name}}
 * ```
 * 
 *  
 */
@ResourceType(type="gcp:compute/targetInstance:TargetInstance")
public class TargetInstance extends io.pulumi.resources.CustomResource {
    /**
     * Creation timestamp in RFC3339 text format.
     * 
     */
    @Export(name="creationTimestamp", type=String.class, parameters={})
    private Output<String> creationTimestamp;

    /**
     * @return Creation timestamp in RFC3339 text format.
     * 
     */
    public Output<String> getCreationTimestamp() {
        return this.creationTimestamp;
    }
    /**
     * An optional description of this resource.
     * 
     */
    @Export(name="description", type=String.class, parameters={})
    private Output</* @Nullable */ String> description;

    /**
     * @return An optional description of this resource.
     * 
     */
    public Output</* @Nullable */ String> getDescription() {
        return this.description;
    }
    /**
     * The Compute instance VM handling traffic for this target instance.
     * Accepts the instance self-link, relative path
     * (e.g. `projects/project/zones/zone/instances/instance`) or name. If
     * name is given, the zone will default to the given zone or
     * the provider-default zone and the project will default to the
     * provider-level project.
     * 
     */
    @Export(name="instance", type=String.class, parameters={})
    private Output<String> instance;

    /**
     * @return The Compute instance VM handling traffic for this target instance.
     * Accepts the instance self-link, relative path
     * (e.g. `projects/project/zones/zone/instances/instance`) or name. If
     * name is given, the zone will default to the given zone or
     * the provider-default zone and the project will default to the
     * provider-level project.
     * 
     */
    public Output<String> getInstance() {
        return this.instance;
    }
    /**
     * Name of the resource. Provided by the client when the resource is
     * created. The name must be 1-63 characters long, and comply with
     * RFC1035. Specifically, the name must be 1-63 characters long and match
     * the regular expression `a-z?` which means the
     * first character must be a lowercase letter, and all following
     * characters must be a dash, lowercase letter, or digit, except the last
     * character, which cannot be a dash.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return Name of the resource. Provided by the client when the resource is
     * created. The name must be 1-63 characters long, and comply with
     * RFC1035. Specifically, the name must be 1-63 characters long and match
     * the regular expression `a-z?` which means the
     * first character must be a lowercase letter, and all following
     * characters must be a dash, lowercase letter, or digit, except the last
     * character, which cannot be a dash.
     * 
     */
    public Output<String> getName() {
        return this.name;
    }
    /**
     * NAT option controlling how IPs are NAT'ed to the instance.
     * Currently only NO_NAT (default value) is supported.
     * Default value is `NO_NAT`.
     * Possible values are `NO_NAT`.
     * 
     */
    @Export(name="natPolicy", type=String.class, parameters={})
    private Output</* @Nullable */ String> natPolicy;

    /**
     * @return NAT option controlling how IPs are NAT'ed to the instance.
     * Currently only NO_NAT (default value) is supported.
     * Default value is `NO_NAT`.
     * Possible values are `NO_NAT`.
     * 
     */
    public Output</* @Nullable */ String> getNatPolicy() {
        return this.natPolicy;
    }
    /**
     * The URL of the network this target instance uses to forward traffic. If not specified, the traffic will be forwarded to the network that the default network interface belongs to.
     * 
     */
    @Export(name="network", type=String.class, parameters={})
    private Output</* @Nullable */ String> network;

    /**
     * @return The URL of the network this target instance uses to forward traffic. If not specified, the traffic will be forwarded to the network that the default network interface belongs to.
     * 
     */
    public Output</* @Nullable */ String> getNetwork() {
        return this.network;
    }
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Export(name="project", type=String.class, parameters={})
    private Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Output<String> getProject() {
        return this.project;
    }
    /**
     * The URI of the created resource.
     * 
     */
    @Export(name="selfLink", type=String.class, parameters={})
    private Output<String> selfLink;

    /**
     * @return The URI of the created resource.
     * 
     */
    public Output<String> getSelfLink() {
        return this.selfLink;
    }
    /**
     * URL of the zone where the target instance resides.
     * 
     */
    @Export(name="zone", type=String.class, parameters={})
    private Output<String> zone;

    /**
     * @return URL of the zone where the target instance resides.
     * 
     */
    public Output<String> getZone() {
        return this.zone;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public TargetInstance(String name) {
        this(name, TargetInstanceArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public TargetInstance(String name, TargetInstanceArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public TargetInstance(String name, TargetInstanceArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("gcp:compute/targetInstance:TargetInstance", name, args == null ? TargetInstanceArgs.Empty : args, makeResourceOptions(options, Output.empty()));
    }

    private TargetInstance(String name, Output<String> id, @Nullable TargetInstanceState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("gcp:compute/targetInstance:TargetInstance", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static TargetInstance get(String name, Output<String> id, @Nullable TargetInstanceState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new TargetInstance(name, id, state, options);
    }
}
