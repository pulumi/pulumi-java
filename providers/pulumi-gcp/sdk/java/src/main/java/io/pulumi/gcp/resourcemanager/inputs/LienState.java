// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.resourcemanager.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class LienState extends io.pulumi.resources.ResourceArgs {

    public static final LienState Empty = new LienState();

    /**
     * Time of creation
     * 
     */
    @InputImport(name="createTime")
      private final @Nullable Input<String> createTime;

    public Input<String> getCreateTime() {
        return this.createTime == null ? Input.empty() : this.createTime;
    }

    /**
     * A system-generated unique identifier for this Lien.
     * 
     */
    @InputImport(name="name")
      private final @Nullable Input<String> name;

    public Input<String> getName() {
        return this.name == null ? Input.empty() : this.name;
    }

    /**
     * A stable, user-visible/meaningful string identifying the origin
     * of the Lien, intended to be inspected programmatically. Maximum length of
     * 200 characters.
     * 
     */
    @InputImport(name="origin")
      private final @Nullable Input<String> origin;

    public Input<String> getOrigin() {
        return this.origin == null ? Input.empty() : this.origin;
    }

    /**
     * A reference to the resource this Lien is attached to.
     * The server will validate the parent against those for which Liens are supported.
     * Since a variety of objects can have Liens against them, you must provide the type
     * prefix (e.g. "projects/my-project-name").
     * 
     */
    @InputImport(name="parent")
      private final @Nullable Input<String> parent;

    public Input<String> getParent() {
        return this.parent == null ? Input.empty() : this.parent;
    }

    /**
     * Concise user-visible strings indicating why an action cannot be performed
     * on a resource. Maximum length of 200 characters.
     * 
     */
    @InputImport(name="reason")
      private final @Nullable Input<String> reason;

    public Input<String> getReason() {
        return this.reason == null ? Input.empty() : this.reason;
    }

    /**
     * The types of operations which should be blocked as a result of this Lien.
     * Each value should correspond to an IAM permission. The server will validate
     * the permissions against those for which Liens are supported.  An empty
     * list is meaningless and will be rejected.
     * e.g. ['resourcemanager.projects.delete']
     * 
     */
    @InputImport(name="restrictions")
      private final @Nullable Input<List<String>> restrictions;

    public Input<List<String>> getRestrictions() {
        return this.restrictions == null ? Input.empty() : this.restrictions;
    }

    public LienState(
        @Nullable Input<String> createTime,
        @Nullable Input<String> name,
        @Nullable Input<String> origin,
        @Nullable Input<String> parent,
        @Nullable Input<String> reason,
        @Nullable Input<List<String>> restrictions) {
        this.createTime = createTime;
        this.name = name;
        this.origin = origin;
        this.parent = parent;
        this.reason = reason;
        this.restrictions = restrictions;
    }

    private LienState() {
        this.createTime = Input.empty();
        this.name = Input.empty();
        this.origin = Input.empty();
        this.parent = Input.empty();
        this.reason = Input.empty();
        this.restrictions = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(LienState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> createTime;
        private @Nullable Input<String> name;
        private @Nullable Input<String> origin;
        private @Nullable Input<String> parent;
        private @Nullable Input<String> reason;
        private @Nullable Input<List<String>> restrictions;

        public Builder() {
    	      // Empty
        }

        public Builder(LienState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.createTime = defaults.createTime;
    	      this.name = defaults.name;
    	      this.origin = defaults.origin;
    	      this.parent = defaults.parent;
    	      this.reason = defaults.reason;
    	      this.restrictions = defaults.restrictions;
        }

        public Builder setCreateTime(@Nullable Input<String> createTime) {
            this.createTime = createTime;
            return this;
        }

        public Builder setCreateTime(@Nullable String createTime) {
            this.createTime = Input.ofNullable(createTime);
            return this;
        }

        public Builder setName(@Nullable Input<String> name) {
            this.name = name;
            return this;
        }

        public Builder setName(@Nullable String name) {
            this.name = Input.ofNullable(name);
            return this;
        }

        public Builder setOrigin(@Nullable Input<String> origin) {
            this.origin = origin;
            return this;
        }

        public Builder setOrigin(@Nullable String origin) {
            this.origin = Input.ofNullable(origin);
            return this;
        }

        public Builder setParent(@Nullable Input<String> parent) {
            this.parent = parent;
            return this;
        }

        public Builder setParent(@Nullable String parent) {
            this.parent = Input.ofNullable(parent);
            return this;
        }

        public Builder setReason(@Nullable Input<String> reason) {
            this.reason = reason;
            return this;
        }

        public Builder setReason(@Nullable String reason) {
            this.reason = Input.ofNullable(reason);
            return this;
        }

        public Builder setRestrictions(@Nullable Input<List<String>> restrictions) {
            this.restrictions = restrictions;
            return this;
        }

        public Builder setRestrictions(@Nullable List<String> restrictions) {
            this.restrictions = Input.ofNullable(restrictions);
            return this;
        }
        public LienState build() {
            return new LienState(createTime, name, origin, parent, reason, restrictions);
        }
    }
}
