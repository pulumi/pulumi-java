// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.appengine.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class EngineSplitTrafficSplitArgs extends io.pulumi.resources.ResourceArgs {

    public static final EngineSplitTrafficSplitArgs Empty = new EngineSplitTrafficSplitArgs();

    @InputImport(name="allocations", required=true)
    private final Input<Map<String,String>> allocations;

    public Input<Map<String,String>> getAllocations() {
        return this.allocations;
    }

    @InputImport(name="shardBy")
    private final @Nullable Input<String> shardBy;

    public Input<String> getShardBy() {
        return this.shardBy == null ? Input.empty() : this.shardBy;
    }

    public EngineSplitTrafficSplitArgs(
        Input<Map<String,String>> allocations,
        @Nullable Input<String> shardBy) {
        this.allocations = Objects.requireNonNull(allocations, "expected parameter 'allocations' to be non-null");
        this.shardBy = shardBy;
    }

    private EngineSplitTrafficSplitArgs() {
        this.allocations = Input.empty();
        this.shardBy = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(EngineSplitTrafficSplitArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<Map<String,String>> allocations;
        private @Nullable Input<String> shardBy;

        public Builder() {
    	      // Empty
        }

        public Builder(EngineSplitTrafficSplitArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allocations = defaults.allocations;
    	      this.shardBy = defaults.shardBy;
        }

        public Builder setAllocations(Input<Map<String,String>> allocations) {
            this.allocations = Objects.requireNonNull(allocations);
            return this;
        }

        public Builder setAllocations(Map<String,String> allocations) {
            this.allocations = Input.of(Objects.requireNonNull(allocations));
            return this;
        }

        public Builder setShardBy(@Nullable Input<String> shardBy) {
            this.shardBy = shardBy;
            return this;
        }

        public Builder setShardBy(@Nullable String shardBy) {
            this.shardBy = Input.ofNullable(shardBy);
            return this;
        }

        public EngineSplitTrafficSplitArgs build() {
            return new EngineSplitTrafficSplitArgs(allocations, shardBy);
        }
    }
}
