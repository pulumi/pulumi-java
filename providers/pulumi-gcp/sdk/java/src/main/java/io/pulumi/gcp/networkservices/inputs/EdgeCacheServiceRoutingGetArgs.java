// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.networkservices.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import io.pulumi.gcp.networkservices.inputs.EdgeCacheServiceRoutingHostRuleGetArgs;
import io.pulumi.gcp.networkservices.inputs.EdgeCacheServiceRoutingPathMatcherGetArgs;
import java.util.List;
import java.util.Objects;


public final class EdgeCacheServiceRoutingGetArgs extends io.pulumi.resources.ResourceArgs {

    public static final EdgeCacheServiceRoutingGetArgs Empty = new EdgeCacheServiceRoutingGetArgs();

    /**
     * The list of hostRules to match against. These rules define which hostnames the EdgeCacheService will match against, and which route configurations apply.
     * Structure is documented below.
     * 
     */
    @InputImport(name="hostRules", required=true)
        private final Input<List<EdgeCacheServiceRoutingHostRuleGetArgs>> hostRules;

    public Input<List<EdgeCacheServiceRoutingHostRuleGetArgs>> getHostRules() {
        return this.hostRules;
    }

    /**
     * The name of the pathMatcher associated with this hostRule.
     * 
     */
    @InputImport(name="pathMatchers", required=true)
        private final Input<List<EdgeCacheServiceRoutingPathMatcherGetArgs>> pathMatchers;

    public Input<List<EdgeCacheServiceRoutingPathMatcherGetArgs>> getPathMatchers() {
        return this.pathMatchers;
    }

    public EdgeCacheServiceRoutingGetArgs(
        Input<List<EdgeCacheServiceRoutingHostRuleGetArgs>> hostRules,
        Input<List<EdgeCacheServiceRoutingPathMatcherGetArgs>> pathMatchers) {
        this.hostRules = Objects.requireNonNull(hostRules, "expected parameter 'hostRules' to be non-null");
        this.pathMatchers = Objects.requireNonNull(pathMatchers, "expected parameter 'pathMatchers' to be non-null");
    }

    private EdgeCacheServiceRoutingGetArgs() {
        this.hostRules = Input.empty();
        this.pathMatchers = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(EdgeCacheServiceRoutingGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<List<EdgeCacheServiceRoutingHostRuleGetArgs>> hostRules;
        private Input<List<EdgeCacheServiceRoutingPathMatcherGetArgs>> pathMatchers;

        public Builder() {
    	      // Empty
        }

        public Builder(EdgeCacheServiceRoutingGetArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.hostRules = defaults.hostRules;
    	      this.pathMatchers = defaults.pathMatchers;
        }

        public Builder setHostRules(Input<List<EdgeCacheServiceRoutingHostRuleGetArgs>> hostRules) {
            this.hostRules = Objects.requireNonNull(hostRules);
            return this;
        }

        public Builder setHostRules(List<EdgeCacheServiceRoutingHostRuleGetArgs> hostRules) {
            this.hostRules = Input.of(Objects.requireNonNull(hostRules));
            return this;
        }

        public Builder setPathMatchers(Input<List<EdgeCacheServiceRoutingPathMatcherGetArgs>> pathMatchers) {
            this.pathMatchers = Objects.requireNonNull(pathMatchers);
            return this;
        }

        public Builder setPathMatchers(List<EdgeCacheServiceRoutingPathMatcherGetArgs> pathMatchers) {
            this.pathMatchers = Input.of(Objects.requireNonNull(pathMatchers));
            return this;
        }
        public EdgeCacheServiceRoutingGetArgs build() {
            return new EdgeCacheServiceRoutingGetArgs(hostRules, pathMatchers);
        }
    }
}
