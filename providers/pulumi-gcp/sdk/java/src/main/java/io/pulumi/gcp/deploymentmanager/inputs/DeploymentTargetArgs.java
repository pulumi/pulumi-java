// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.deploymentmanager.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import io.pulumi.gcp.deploymentmanager.inputs.DeploymentTargetConfigArgs;
import io.pulumi.gcp.deploymentmanager.inputs.DeploymentTargetImportArgs;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class DeploymentTargetArgs extends io.pulumi.resources.ResourceArgs {

    public static final DeploymentTargetArgs Empty = new DeploymentTargetArgs();

    @InputImport(name="config", required=true)
    private final Input<DeploymentTargetConfigArgs> config;

    public Input<DeploymentTargetConfigArgs> getConfig() {
        return this.config;
    }

    @InputImport(name="imports")
    private final @Nullable Input<List<DeploymentTargetImportArgs>> imports;

    public Input<List<DeploymentTargetImportArgs>> getImports() {
        return this.imports == null ? Input.empty() : this.imports;
    }

    public DeploymentTargetArgs(
        Input<DeploymentTargetConfigArgs> config,
        @Nullable Input<List<DeploymentTargetImportArgs>> imports) {
        this.config = Objects.requireNonNull(config, "expected parameter 'config' to be non-null");
        this.imports = imports;
    }

    private DeploymentTargetArgs() {
        this.config = Input.empty();
        this.imports = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DeploymentTargetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<DeploymentTargetConfigArgs> config;
        private @Nullable Input<List<DeploymentTargetImportArgs>> imports;

        public Builder() {
    	      // Empty
        }

        public Builder(DeploymentTargetArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.config = defaults.config;
    	      this.imports = defaults.imports;
        }

        public Builder setConfig(Input<DeploymentTargetConfigArgs> config) {
            this.config = Objects.requireNonNull(config);
            return this;
        }

        public Builder setConfig(DeploymentTargetConfigArgs config) {
            this.config = Input.of(Objects.requireNonNull(config));
            return this;
        }

        public Builder setImports(@Nullable Input<List<DeploymentTargetImportArgs>> imports) {
            this.imports = imports;
            return this;
        }

        public Builder setImports(@Nullable List<DeploymentTargetImportArgs> imports) {
            this.imports = Input.ofNullable(imports);
            return this;
        }

        public DeploymentTargetArgs build() {
            return new DeploymentTargetArgs(config, imports);
        }
    }
}
