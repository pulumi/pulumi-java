// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.secretmanager.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import io.pulumi.gcp.secretmanager.inputs.SecretReplicationUserManagedReplicaCustomerManagedEncryptionArgs;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class SecretReplicationUserManagedReplicaArgs extends io.pulumi.resources.ResourceArgs {

    public static final SecretReplicationUserManagedReplicaArgs Empty = new SecretReplicationUserManagedReplicaArgs();

    /**
     * Customer Managed Encryption for the secret.
     * Structure is documented below.
     * 
     */
    @InputImport(name="customerManagedEncryption")
    private final @Nullable Input<SecretReplicationUserManagedReplicaCustomerManagedEncryptionArgs> customerManagedEncryption;

    public Input<SecretReplicationUserManagedReplicaCustomerManagedEncryptionArgs> getCustomerManagedEncryption() {
        return this.customerManagedEncryption == null ? Input.empty() : this.customerManagedEncryption;
    }

    /**
     * The canonical IDs of the location to replicate data. For example: "us-east1".
     * 
     */
    @InputImport(name="location", required=true)
    private final Input<String> location;

    public Input<String> getLocation() {
        return this.location;
    }

    public SecretReplicationUserManagedReplicaArgs(
        @Nullable Input<SecretReplicationUserManagedReplicaCustomerManagedEncryptionArgs> customerManagedEncryption,
        Input<String> location) {
        this.customerManagedEncryption = customerManagedEncryption;
        this.location = Objects.requireNonNull(location, "expected parameter 'location' to be non-null");
    }

    private SecretReplicationUserManagedReplicaArgs() {
        this.customerManagedEncryption = Input.empty();
        this.location = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SecretReplicationUserManagedReplicaArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<SecretReplicationUserManagedReplicaCustomerManagedEncryptionArgs> customerManagedEncryption;
        private Input<String> location;

        public Builder() {
    	      // Empty
        }

        public Builder(SecretReplicationUserManagedReplicaArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.customerManagedEncryption = defaults.customerManagedEncryption;
    	      this.location = defaults.location;
        }

        public Builder setCustomerManagedEncryption(@Nullable Input<SecretReplicationUserManagedReplicaCustomerManagedEncryptionArgs> customerManagedEncryption) {
            this.customerManagedEncryption = customerManagedEncryption;
            return this;
        }

        public Builder setCustomerManagedEncryption(@Nullable SecretReplicationUserManagedReplicaCustomerManagedEncryptionArgs customerManagedEncryption) {
            this.customerManagedEncryption = Input.ofNullable(customerManagedEncryption);
            return this;
        }

        public Builder setLocation(Input<String> location) {
            this.location = Objects.requireNonNull(location);
            return this;
        }

        public Builder setLocation(String location) {
            this.location = Input.of(Objects.requireNonNull(location));
            return this;
        }

        public SecretReplicationUserManagedReplicaArgs build() {
            return new SecretReplicationUserManagedReplicaArgs(customerManagedEncryption, location);
        }
    }
}
