// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.certificateauthority.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.util.Objects;


public final class CaPoolPublishingOptionsArgs extends io.pulumi.resources.ResourceArgs {

    public static final CaPoolPublishingOptionsArgs Empty = new CaPoolPublishingOptionsArgs();

    /**
     * When true, publishes each CertificateAuthority's CA certificate and includes its URL in the "Authority Information Access"
     * X.509 extension in all issued Certificates. If this is false, the CA certificate will not be published and the corresponding
     * X.509 extension will not be written in issued certificates.
     * 
     */
    @Import(name="publishCaCert", required=true)
      private final Output<Boolean> publishCaCert;

    public Output<Boolean> publishCaCert() {
        return this.publishCaCert;
    }

    /**
     * When true, publishes each CertificateAuthority's CRL and includes its URL in the "CRL Distribution Points" X.509 extension
     * in all issued Certificates. If this is false, CRLs will not be published and the corresponding X.509 extension will not
     * be written in issued certificates. CRLs will expire 7 days from their creation. However, we will rebuild daily. CRLs are
     * also rebuilt shortly after a certificate is revoked.
     * 
     */
    @Import(name="publishCrl", required=true)
      private final Output<Boolean> publishCrl;

    public Output<Boolean> publishCrl() {
        return this.publishCrl;
    }

    public CaPoolPublishingOptionsArgs(
        Output<Boolean> publishCaCert,
        Output<Boolean> publishCrl) {
        this.publishCaCert = Objects.requireNonNull(publishCaCert, "expected parameter 'publishCaCert' to be non-null");
        this.publishCrl = Objects.requireNonNull(publishCrl, "expected parameter 'publishCrl' to be non-null");
    }

    private CaPoolPublishingOptionsArgs() {
        this.publishCaCert = Codegen.empty();
        this.publishCrl = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CaPoolPublishingOptionsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<Boolean> publishCaCert;
        private Output<Boolean> publishCrl;

        public Builder() {
    	      // Empty
        }

        public Builder(CaPoolPublishingOptionsArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.publishCaCert = defaults.publishCaCert;
    	      this.publishCrl = defaults.publishCrl;
        }

        public Builder publishCaCert(Output<Boolean> publishCaCert) {
            this.publishCaCert = Objects.requireNonNull(publishCaCert);
            return this;
        }
        public Builder publishCaCert(Boolean publishCaCert) {
            this.publishCaCert = Output.of(Objects.requireNonNull(publishCaCert));
            return this;
        }
        public Builder publishCrl(Output<Boolean> publishCrl) {
            this.publishCrl = Objects.requireNonNull(publishCrl);
            return this;
        }
        public Builder publishCrl(Boolean publishCrl) {
            this.publishCrl = Output.of(Objects.requireNonNull(publishCrl));
            return this;
        }        public CaPoolPublishingOptionsArgs build() {
            return new CaPoolPublishingOptionsArgs(publishCaCert, publishCrl);
        }
    }
}
