// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.compute.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class SharedVPCServiceProjectState extends io.pulumi.resources.ResourceArgs {

    public static final SharedVPCServiceProjectState Empty = new SharedVPCServiceProjectState();

    /**
     * The ID of a host project to associate.
     * 
     */
    @InputImport(name="hostProject")
    private final @Nullable Input<String> hostProject;

    public Input<String> getHostProject() {
        return this.hostProject == null ? Input.empty() : this.hostProject;
    }

    /**
     * The ID of the project that will serve as a Shared VPC service project.
     * 
     */
    @InputImport(name="serviceProject")
    private final @Nullable Input<String> serviceProject;

    public Input<String> getServiceProject() {
        return this.serviceProject == null ? Input.empty() : this.serviceProject;
    }

    public SharedVPCServiceProjectState(
        @Nullable Input<String> hostProject,
        @Nullable Input<String> serviceProject) {
        this.hostProject = hostProject;
        this.serviceProject = serviceProject;
    }

    private SharedVPCServiceProjectState() {
        this.hostProject = Input.empty();
        this.serviceProject = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SharedVPCServiceProjectState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> hostProject;
        private @Nullable Input<String> serviceProject;

        public Builder() {
    	      // Empty
        }

        public Builder(SharedVPCServiceProjectState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.hostProject = defaults.hostProject;
    	      this.serviceProject = defaults.serviceProject;
        }

        public Builder setHostProject(@Nullable Input<String> hostProject) {
            this.hostProject = hostProject;
            return this;
        }

        public Builder setHostProject(@Nullable String hostProject) {
            this.hostProject = Input.ofNullable(hostProject);
            return this;
        }

        public Builder setServiceProject(@Nullable Input<String> serviceProject) {
            this.serviceProject = serviceProject;
            return this;
        }

        public Builder setServiceProject(@Nullable String serviceProject) {
            this.serviceProject = Input.ofNullable(serviceProject);
            return this;
        }

        public SharedVPCServiceProjectState build() {
            return new SharedVPCServiceProjectState(hostProject, serviceProject);
        }
    }
}
