// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.serviceAccount.inputs;

import io.pulumi.core.internal.annotations.InputImport;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetAccountIdTokenArgs extends io.pulumi.resources.InvokeArgs {

    public static final GetAccountIdTokenArgs Empty = new GetAccountIdTokenArgs();

    /**
     * Delegate chain of approvals needed to perform full impersonation. Specify the fully qualified service account name.   Used only when using impersonation mode.
     * 
     */
    @InputImport(name="delegates")
    private final @Nullable List<String> delegates;

    public List<String> getDelegates() {
        return this.delegates == null ? List.of() : this.delegates;
    }

    /**
     * Include the verified email in the claim. Used only when using impersonation mode.
     * 
     */
    @InputImport(name="includeEmail")
    private final @Nullable Boolean includeEmail;

    public Optional<Boolean> getIncludeEmail() {
        return this.includeEmail == null ? Optional.empty() : Optional.ofNullable(this.includeEmail);
    }

    /**
     * The audience claim for the `id_token`.
     * 
     */
    @InputImport(name="targetAudience", required=true)
    private final String targetAudience;

    public String getTargetAudience() {
        return this.targetAudience;
    }

    /**
     * The email of the service account being impersonated.  Used only when using impersonation mode.
     * 
     */
    @InputImport(name="targetServiceAccount")
    private final @Nullable String targetServiceAccount;

    public Optional<String> getTargetServiceAccount() {
        return this.targetServiceAccount == null ? Optional.empty() : Optional.ofNullable(this.targetServiceAccount);
    }

    public GetAccountIdTokenArgs(
        @Nullable List<String> delegates,
        @Nullable Boolean includeEmail,
        String targetAudience,
        @Nullable String targetServiceAccount) {
        this.delegates = delegates;
        this.includeEmail = includeEmail;
        this.targetAudience = Objects.requireNonNull(targetAudience, "expected parameter 'targetAudience' to be non-null");
        this.targetServiceAccount = targetServiceAccount;
    }

    private GetAccountIdTokenArgs() {
        this.delegates = List.of();
        this.includeEmail = null;
        this.targetAudience = null;
        this.targetServiceAccount = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAccountIdTokenArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable List<String> delegates;
        private @Nullable Boolean includeEmail;
        private String targetAudience;
        private @Nullable String targetServiceAccount;

        public Builder() {
    	      // Empty
        }

        public Builder(GetAccountIdTokenArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.delegates = defaults.delegates;
    	      this.includeEmail = defaults.includeEmail;
    	      this.targetAudience = defaults.targetAudience;
    	      this.targetServiceAccount = defaults.targetServiceAccount;
        }

        public Builder setDelegates(@Nullable List<String> delegates) {
            this.delegates = delegates;
            return this;
        }

        public Builder setIncludeEmail(@Nullable Boolean includeEmail) {
            this.includeEmail = includeEmail;
            return this;
        }

        public Builder setTargetAudience(String targetAudience) {
            this.targetAudience = Objects.requireNonNull(targetAudience);
            return this;
        }

        public Builder setTargetServiceAccount(@Nullable String targetServiceAccount) {
            this.targetServiceAccount = targetServiceAccount;
            return this;
        }

        public GetAccountIdTokenArgs build() {
            return new GetAccountIdTokenArgs(delegates, includeEmail, targetAudience, targetServiceAccount);
        }
    }
}
