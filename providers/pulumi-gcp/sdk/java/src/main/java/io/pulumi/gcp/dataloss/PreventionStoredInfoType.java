// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.dataloss;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Export;
import io.pulumi.core.annotations.ResourceType;
import io.pulumi.gcp.Utilities;
import io.pulumi.gcp.dataloss.PreventionStoredInfoTypeArgs;
import io.pulumi.gcp.dataloss.inputs.PreventionStoredInfoTypeState;
import io.pulumi.gcp.dataloss.outputs.PreventionStoredInfoTypeDictionary;
import io.pulumi.gcp.dataloss.outputs.PreventionStoredInfoTypeLargeCustomDictionary;
import io.pulumi.gcp.dataloss.outputs.PreventionStoredInfoTypeRegex;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * Allows creation of custom info types.
 * 
 * 
 * To get more information about StoredInfoType, see:
 * 
 * * [API documentation](https://cloud.google.com/dlp/docs/reference/rest/v2/projects.storedInfoTypes)
 * * How-to Guides
 *     * [Official Documentation](https://cloud.google.com/dlp/docs/creating-stored-infotypes)
 * 
 * {{% examples %}}
 * ## Example Usage
 * {{% example %}}
 * ### Dlp Stored Info Type Basic
 * 
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 * 
 * const basic = new gcp.dataloss.PreventionStoredInfoType("basic", {
 *     description: "Description",
 *     displayName: "Displayname",
 *     parent: "projects/my-project-name",
 *     regex: {
 *         groupIndexes: [2],
 *         pattern: "patient",
 *     },
 * });
 * ```
 * ```python
 * import pulumi
 * import pulumi_gcp as gcp
 * 
 * basic = gcp.dataloss.PreventionStoredInfoType("basic",
 *     description="Description",
 *     display_name="Displayname",
 *     parent="projects/my-project-name",
 *     regex=gcp.dataloss.PreventionStoredInfoTypeRegexArgs(
 *         group_indexes=[2],
 *         pattern="patient",
 *     ))
 * ```
 * ```csharp
 * using Pulumi;
 * using Gcp = Pulumi.Gcp;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var basic = new Gcp.DataLoss.PreventionStoredInfoType("basic", new Gcp.DataLoss.PreventionStoredInfoTypeArgs
 *         {
 *             Description = "Description",
 *             DisplayName = "Displayname",
 *             Parent = "projects/my-project-name",
 *             Regex = new Gcp.DataLoss.Inputs.PreventionStoredInfoTypeRegexArgs
 *             {
 *                 GroupIndexes = 
 *                 {
 *                     2,
 *                 },
 *                 Pattern = "patient",
 *             },
 *         });
 *     }
 * 
 * }
 * ```
 * ```go
 * package main
 * 
 * import (
 * 	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/dataloss"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		_, err := dataloss.NewPreventionStoredInfoType(ctx, "basic", &dataloss.PreventionStoredInfoTypeArgs{
 * 			Description: pulumi.String("Description"),
 * 			DisplayName: pulumi.String("Displayname"),
 * 			Parent:      pulumi.String("projects/my-project-name"),
 * 			Regex: &dataloss.PreventionStoredInfoTypeRegexArgs{
 * 				GroupIndexes: pulumi.IntArray{
 * 					pulumi.Int(2),
 * 				},
 * 				Pattern: pulumi.String("patient"),
 * 			},
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * ```
 * {{% /example %}}
 * {{% example %}}
 * ### Dlp Stored Info Type Dictionary
 * 
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 * 
 * const dictionary = new gcp.dataloss.PreventionStoredInfoType("dictionary", {
 *     description: "Description",
 *     dictionary: {
 *         wordList: {
 *             words: [
 *                 "word",
 *                 "word2",
 *             ],
 *         },
 *     },
 *     displayName: "Displayname",
 *     parent: "projects/my-project-name",
 * });
 * ```
 * ```python
 * import pulumi
 * import pulumi_gcp as gcp
 * 
 * dictionary = gcp.dataloss.PreventionStoredInfoType("dictionary",
 *     description="Description",
 *     dictionary=gcp.dataloss.PreventionStoredInfoTypeDictionaryArgs(
 *         word_list=gcp.dataloss.PreventionStoredInfoTypeDictionaryWordListArgs(
 *             words=[
 *                 "word",
 *                 "word2",
 *             ],
 *         ),
 *     ),
 *     display_name="Displayname",
 *     parent="projects/my-project-name")
 * ```
 * ```csharp
 * using Pulumi;
 * using Gcp = Pulumi.Gcp;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var dictionary = new Gcp.DataLoss.PreventionStoredInfoType("dictionary", new Gcp.DataLoss.PreventionStoredInfoTypeArgs
 *         {
 *             Description = "Description",
 *             Dictionary = new Gcp.DataLoss.Inputs.PreventionStoredInfoTypeDictionaryArgs
 *             {
 *                 WordList = new Gcp.DataLoss.Inputs.PreventionStoredInfoTypeDictionaryWordListArgs
 *                 {
 *                     Words = 
 *                     {
 *                         "word",
 *                         "word2",
 *                     },
 *                 },
 *             },
 *             DisplayName = "Displayname",
 *             Parent = "projects/my-project-name",
 *         });
 *     }
 * 
 * }
 * ```
 * ```go
 * package main
 * 
 * import (
 * 	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/dataloss"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		_, err := dataloss.NewPreventionStoredInfoType(ctx, "dictionary", &dataloss.PreventionStoredInfoTypeArgs{
 * 			Description: pulumi.String("Description"),
 * 			Dictionary: &dataloss.PreventionStoredInfoTypeDictionaryArgs{
 * 				WordList: &dataloss.PreventionStoredInfoTypeDictionaryWordListArgs{
 * 					Words: pulumi.StringArray{
 * 						pulumi.String("word"),
 * 						pulumi.String("word2"),
 * 					},
 * 				},
 * 			},
 * 			DisplayName: pulumi.String("Displayname"),
 * 			Parent:      pulumi.String("projects/my-project-name"),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * ```
 * {{% /example %}}
 * {{% example %}}
 * ### Dlp Stored Info Type Large Custom Dictionary
 * 
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 * 
 * const bucket = new gcp.storage.Bucket("bucket", {
 *     location: "US",
 *     forceDestroy: true,
 * });
 * const object = new gcp.storage.BucketObject("object", {
 *     bucket: bucket.name,
 *     source: new pulumi.asset.FileAsset("./test-fixtures/dlp/words.txt"),
 * });
 * const large = new gcp.dataloss.PreventionStoredInfoType("large", {
 *     parent: "projects/my-project-name",
 *     description: "Description",
 *     displayName: "Displayname",
 *     largeCustomDictionary: {
 *         cloudStorageFileSet: {
 *             url: pulumi.interpolate`gs://${bucket.name}/${object.name}`,
 *         },
 *         outputPath: {
 *             path: pulumi.interpolate`gs://${bucket.name}/output/dictionary.txt`,
 *         },
 *     },
 * });
 * ```
 * ```python
 * import pulumi
 * import pulumi_gcp as gcp
 * 
 * bucket = gcp.storage.Bucket("bucket",
 *     location="US",
 *     force_destroy=True)
 * object = gcp.storage.BucketObject("object",
 *     bucket=bucket.name,
 *     source=pulumi.FileAsset("./test-fixtures/dlp/words.txt"))
 * large = gcp.dataloss.PreventionStoredInfoType("large",
 *     parent="projects/my-project-name",
 *     description="Description",
 *     display_name="Displayname",
 *     large_custom_dictionary=gcp.dataloss.PreventionStoredInfoTypeLargeCustomDictionaryArgs(
 *         cloud_storage_file_set=gcp.dataloss.PreventionStoredInfoTypeLargeCustomDictionaryCloudStorageFileSetArgs(
 *             url=pulumi.Output.all(bucket.name, object.name).apply(lambda bucketName, objectName: f"gs://{bucket_name}/{object_name}"),
 *         ),
 *         output_path=gcp.dataloss.PreventionStoredInfoTypeLargeCustomDictionaryOutputPathArgs(
 *             path=bucket.name.apply(lambda name: f"gs://{name}/output/dictionary.txt"),
 *         ),
 *     ))
 * ```
 * ```csharp
 * using Pulumi;
 * using Gcp = Pulumi.Gcp;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var bucket = new Gcp.Storage.Bucket("bucket", new Gcp.Storage.BucketArgs
 *         {
 *             Location = "US",
 *             ForceDestroy = true,
 *         });
 *         var @object = new Gcp.Storage.BucketObject("object", new Gcp.Storage.BucketObjectArgs
 *         {
 *             Bucket = bucket.Name,
 *             Source = new FileAsset("./test-fixtures/dlp/words.txt"),
 *         });
 *         var large = new Gcp.DataLoss.PreventionStoredInfoType("large", new Gcp.DataLoss.PreventionStoredInfoTypeArgs
 *         {
 *             Parent = "projects/my-project-name",
 *             Description = "Description",
 *             DisplayName = "Displayname",
 *             LargeCustomDictionary = new Gcp.DataLoss.Inputs.PreventionStoredInfoTypeLargeCustomDictionaryArgs
 *             {
 *                 CloudStorageFileSet = new Gcp.DataLoss.Inputs.PreventionStoredInfoTypeLargeCustomDictionaryCloudStorageFileSetArgs
 *                 {
 *                     Url = Output.Tuple(bucket.Name, @object.Name).Apply(values =>
 *                     {
 *                         var bucketName = values.Item1;
 *                         var objectName = values.Item2;
 *                         return $"gs://{bucketName}/{objectName}";
 *                     }),
 *                 },
 *                 OutputPath = new Gcp.DataLoss.Inputs.PreventionStoredInfoTypeLargeCustomDictionaryOutputPathArgs
 *                 {
 *                     Path = bucket.Name.Apply(name => $"gs://{name}/output/dictionary.txt"),
 *                 },
 *             },
 *         });
 *     }
 * 
 * }
 * ```
 * ```go
 * package main
 * 
 * import (
 * 	"fmt"
 * 
 * 	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/dataloss"
 * 	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/storage"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		bucket, err := storage.NewBucket(ctx, "bucket", &storage.BucketArgs{
 * 			Location:     pulumi.String("US"),
 * 			ForceDestroy: pulumi.Bool(true),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		object, err := storage.NewBucketObject(ctx, "object", &storage.BucketObjectArgs{
 * 			Bucket: bucket.Name,
 * 			Source: pulumi.NewFileAsset("./test-fixtures/dlp/words.txt"),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		_, err = dataloss.NewPreventionStoredInfoType(ctx, "large", &dataloss.PreventionStoredInfoTypeArgs{
 * 			Parent:      pulumi.String("projects/my-project-name"),
 * 			Description: pulumi.String("Description"),
 * 			DisplayName: pulumi.String("Displayname"),
 * 			LargeCustomDictionary: &dataloss.PreventionStoredInfoTypeLargeCustomDictionaryArgs{
 * 				CloudStorageFileSet: &dataloss.PreventionStoredInfoTypeLargeCustomDictionaryCloudStorageFileSetArgs{
 * 					Url: pulumi.All(bucket.Name, object.Name).ApplyT(func(_args []interface{}) (string, error) {
 * 						bucketName := _args[0].(string)
 * 						objectName := _args[1].(string)
 * 						return fmt.Sprintf("%v%v%v%v", "gs://", bucketName, "/", objectName), nil
 * 					}).(pulumi.StringOutput),
 * 				},
 * 				OutputPath: &dataloss.PreventionStoredInfoTypeLargeCustomDictionaryOutputPathArgs{
 * 					Path: bucket.Name.ApplyT(func(name string) (string, error) {
 * 						return fmt.Sprintf("%v%v%v", "gs://", name, "/output/dictionary.txt"), nil
 * 					}).(pulumi.StringOutput),
 * 				},
 * 			},
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * ```
 * {{% /example %}}
 * {{% /examples %}}
 * 
 * ## Import
 * 
 * StoredInfoType can be imported using any of these accepted formats
 * 
 * ```sh
 *  $ pulumi import gcp:dataloss/preventionStoredInfoType:PreventionStoredInfoType default {{parent}}/storedInfoTypes/{{name}}
 * ```
 * 
 * 
 * 
 * ```sh
 *  $ pulumi import gcp:dataloss/preventionStoredInfoType:PreventionStoredInfoType default {{parent}}/{{name}}
 * ```
 * 
 *  
 */
@ResourceType(type="gcp:dataloss/preventionStoredInfoType:PreventionStoredInfoType")
public class PreventionStoredInfoType extends io.pulumi.resources.CustomResource {
    /**
     * A description of the info type.
     * 
     */
    @Export(name="description", type=String.class, parameters={})
    private Output</* @Nullable */ String> description;

    /**
     * @return A description of the info type.
     * 
     */
    public Output</* @Nullable */ String> getDescription() {
        return this.description;
    }
    /**
     * Dictionary which defines the rule.
     * Structure is documented below.
     * 
     */
    @Export(name="dictionary", type=PreventionStoredInfoTypeDictionary.class, parameters={})
    private Output</* @Nullable */ PreventionStoredInfoTypeDictionary> dictionary;

    /**
     * @return Dictionary which defines the rule.
     * Structure is documented below.
     * 
     */
    public Output</* @Nullable */ PreventionStoredInfoTypeDictionary> getDictionary() {
        return this.dictionary;
    }
    /**
     * User set display name of the info type.
     * 
     */
    @Export(name="displayName", type=String.class, parameters={})
    private Output</* @Nullable */ String> displayName;

    /**
     * @return User set display name of the info type.
     * 
     */
    public Output</* @Nullable */ String> getDisplayName() {
        return this.displayName;
    }
    /**
     * Dictionary which defines the rule.
     * Structure is documented below.
     * 
     */
    @Export(name="largeCustomDictionary", type=PreventionStoredInfoTypeLargeCustomDictionary.class, parameters={})
    private Output</* @Nullable */ PreventionStoredInfoTypeLargeCustomDictionary> largeCustomDictionary;

    /**
     * @return Dictionary which defines the rule.
     * Structure is documented below.
     * 
     */
    public Output</* @Nullable */ PreventionStoredInfoTypeLargeCustomDictionary> getLargeCustomDictionary() {
        return this.largeCustomDictionary;
    }
    /**
     * Name describing the field.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return Name describing the field.
     * 
     */
    public Output<String> getName() {
        return this.name;
    }
    /**
     * The parent of the info type in any of the following formats:
     * * `projects/{{project}}`
     * * `projects/{{project}}/locations/{{location}}`
     * * `organizations/{{organization_id}}`
     * * `organizations/{{organization_id}}/locations/{{location}}`
     * 
     */
    @Export(name="parent", type=String.class, parameters={})
    private Output<String> parent;

    /**
     * @return The parent of the info type in any of the following formats:
     * * `projects/{{project}}`
     * * `projects/{{project}}/locations/{{location}}`
     * * `organizations/{{organization_id}}`
     * * `organizations/{{organization_id}}/locations/{{location}}`
     * 
     */
    public Output<String> getParent() {
        return this.parent;
    }
    /**
     * Regular expression which defines the rule.
     * Structure is documented below.
     * 
     */
    @Export(name="regex", type=PreventionStoredInfoTypeRegex.class, parameters={})
    private Output</* @Nullable */ PreventionStoredInfoTypeRegex> regex;

    /**
     * @return Regular expression which defines the rule.
     * Structure is documented below.
     * 
     */
    public Output</* @Nullable */ PreventionStoredInfoTypeRegex> getRegex() {
        return this.regex;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public PreventionStoredInfoType(String name) {
        this(name, PreventionStoredInfoTypeArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public PreventionStoredInfoType(String name, PreventionStoredInfoTypeArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public PreventionStoredInfoType(String name, PreventionStoredInfoTypeArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("gcp:dataloss/preventionStoredInfoType:PreventionStoredInfoType", name, args == null ? PreventionStoredInfoTypeArgs.Empty : args, makeResourceOptions(options, Output.empty()));
    }

    private PreventionStoredInfoType(String name, Output<String> id, @Nullable PreventionStoredInfoTypeState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("gcp:dataloss/preventionStoredInfoType:PreventionStoredInfoType", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static PreventionStoredInfoType get(String name, Output<String> id, @Nullable PreventionStoredInfoTypeState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new PreventionStoredInfoType(name, id, state, options);
    }
}
