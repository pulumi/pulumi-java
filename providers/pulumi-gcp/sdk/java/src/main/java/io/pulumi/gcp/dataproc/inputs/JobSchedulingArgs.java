// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.dataproc.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.Integer;
import java.util.Objects;


public final class JobSchedulingArgs extends io.pulumi.resources.ResourceArgs {

    public static final JobSchedulingArgs Empty = new JobSchedulingArgs();

    @InputImport(name="maxFailuresPerHour", required=true)
    private final Input<Integer> maxFailuresPerHour;

    public Input<Integer> getMaxFailuresPerHour() {
        return this.maxFailuresPerHour;
    }

    @InputImport(name="maxFailuresTotal", required=true)
    private final Input<Integer> maxFailuresTotal;

    public Input<Integer> getMaxFailuresTotal() {
        return this.maxFailuresTotal;
    }

    public JobSchedulingArgs(
        Input<Integer> maxFailuresPerHour,
        Input<Integer> maxFailuresTotal) {
        this.maxFailuresPerHour = Objects.requireNonNull(maxFailuresPerHour, "expected parameter 'maxFailuresPerHour' to be non-null");
        this.maxFailuresTotal = Objects.requireNonNull(maxFailuresTotal, "expected parameter 'maxFailuresTotal' to be non-null");
    }

    private JobSchedulingArgs() {
        this.maxFailuresPerHour = Input.empty();
        this.maxFailuresTotal = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(JobSchedulingArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<Integer> maxFailuresPerHour;
        private Input<Integer> maxFailuresTotal;

        public Builder() {
    	      // Empty
        }

        public Builder(JobSchedulingArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.maxFailuresPerHour = defaults.maxFailuresPerHour;
    	      this.maxFailuresTotal = defaults.maxFailuresTotal;
        }

        public Builder setMaxFailuresPerHour(Input<Integer> maxFailuresPerHour) {
            this.maxFailuresPerHour = Objects.requireNonNull(maxFailuresPerHour);
            return this;
        }

        public Builder setMaxFailuresPerHour(Integer maxFailuresPerHour) {
            this.maxFailuresPerHour = Input.of(Objects.requireNonNull(maxFailuresPerHour));
            return this;
        }

        public Builder setMaxFailuresTotal(Input<Integer> maxFailuresTotal) {
            this.maxFailuresTotal = Objects.requireNonNull(maxFailuresTotal);
            return this;
        }

        public Builder setMaxFailuresTotal(Integer maxFailuresTotal) {
            this.maxFailuresTotal = Input.of(Objects.requireNonNull(maxFailuresTotal));
            return this;
        }

        public JobSchedulingArgs build() {
            return new JobSchedulingArgs(maxFailuresPerHour, maxFailuresTotal);
        }
    }
}
