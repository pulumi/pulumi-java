// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.composer.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import io.pulumi.gcp.composer.inputs.EnvironmentConfigWorkloadsConfigSchedulerArgs;
import io.pulumi.gcp.composer.inputs.EnvironmentConfigWorkloadsConfigWebServerArgs;
import io.pulumi.gcp.composer.inputs.EnvironmentConfigWorkloadsConfigWorkerArgs;
import java.util.Objects;
import javax.annotation.Nullable;


public final class EnvironmentConfigWorkloadsConfigArgs extends io.pulumi.resources.ResourceArgs {

    public static final EnvironmentConfigWorkloadsConfigArgs Empty = new EnvironmentConfigWorkloadsConfigArgs();

    @InputImport(name="scheduler")
        private final @Nullable Input<EnvironmentConfigWorkloadsConfigSchedulerArgs> scheduler;

    public Input<EnvironmentConfigWorkloadsConfigSchedulerArgs> getScheduler() {
        return this.scheduler == null ? Input.empty() : this.scheduler;
    }

    @InputImport(name="webServer")
        private final @Nullable Input<EnvironmentConfigWorkloadsConfigWebServerArgs> webServer;

    public Input<EnvironmentConfigWorkloadsConfigWebServerArgs> getWebServer() {
        return this.webServer == null ? Input.empty() : this.webServer;
    }

    @InputImport(name="worker")
        private final @Nullable Input<EnvironmentConfigWorkloadsConfigWorkerArgs> worker;

    public Input<EnvironmentConfigWorkloadsConfigWorkerArgs> getWorker() {
        return this.worker == null ? Input.empty() : this.worker;
    }

    public EnvironmentConfigWorkloadsConfigArgs(
        @Nullable Input<EnvironmentConfigWorkloadsConfigSchedulerArgs> scheduler,
        @Nullable Input<EnvironmentConfigWorkloadsConfigWebServerArgs> webServer,
        @Nullable Input<EnvironmentConfigWorkloadsConfigWorkerArgs> worker) {
        this.scheduler = scheduler;
        this.webServer = webServer;
        this.worker = worker;
    }

    private EnvironmentConfigWorkloadsConfigArgs() {
        this.scheduler = Input.empty();
        this.webServer = Input.empty();
        this.worker = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(EnvironmentConfigWorkloadsConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<EnvironmentConfigWorkloadsConfigSchedulerArgs> scheduler;
        private @Nullable Input<EnvironmentConfigWorkloadsConfigWebServerArgs> webServer;
        private @Nullable Input<EnvironmentConfigWorkloadsConfigWorkerArgs> worker;

        public Builder() {
    	      // Empty
        }

        public Builder(EnvironmentConfigWorkloadsConfigArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.scheduler = defaults.scheduler;
    	      this.webServer = defaults.webServer;
    	      this.worker = defaults.worker;
        }

        public Builder setScheduler(@Nullable Input<EnvironmentConfigWorkloadsConfigSchedulerArgs> scheduler) {
            this.scheduler = scheduler;
            return this;
        }

        public Builder setScheduler(@Nullable EnvironmentConfigWorkloadsConfigSchedulerArgs scheduler) {
            this.scheduler = Input.ofNullable(scheduler);
            return this;
        }

        public Builder setWebServer(@Nullable Input<EnvironmentConfigWorkloadsConfigWebServerArgs> webServer) {
            this.webServer = webServer;
            return this;
        }

        public Builder setWebServer(@Nullable EnvironmentConfigWorkloadsConfigWebServerArgs webServer) {
            this.webServer = Input.ofNullable(webServer);
            return this;
        }

        public Builder setWorker(@Nullable Input<EnvironmentConfigWorkloadsConfigWorkerArgs> worker) {
            this.worker = worker;
            return this;
        }

        public Builder setWorker(@Nullable EnvironmentConfigWorkloadsConfigWorkerArgs worker) {
            this.worker = Input.ofNullable(worker);
            return this;
        }
        public EnvironmentConfigWorkloadsConfigArgs build() {
            return new EnvironmentConfigWorkloadsConfigArgs(scheduler, webServer, worker);
        }
    }
}
