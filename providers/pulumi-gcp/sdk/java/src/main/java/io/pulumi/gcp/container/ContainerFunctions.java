// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.container;

import io.pulumi.core.TypeShape;
import io.pulumi.deployment.Deployment;
import io.pulumi.deployment.InvokeOptions;
import io.pulumi.gcp.Utilities;
import io.pulumi.gcp.container.inputs.GetAwsVersionsArgs;
import io.pulumi.gcp.container.inputs.GetAzureVersionsArgs;
import io.pulumi.gcp.container.inputs.GetClusterArgs;
import io.pulumi.gcp.container.inputs.GetEngineVersionsArgs;
import io.pulumi.gcp.container.inputs.GetRegistryImageArgs;
import io.pulumi.gcp.container.inputs.GetRegistryRepositoryArgs;
import io.pulumi.gcp.container.outputs.GetAwsVersionsResult;
import io.pulumi.gcp.container.outputs.GetAzureVersionsResult;
import io.pulumi.gcp.container.outputs.GetClusterResult;
import io.pulumi.gcp.container.outputs.GetEngineVersionsResult;
import io.pulumi.gcp.container.outputs.GetRegistryImageResult;
import io.pulumi.gcp.container.outputs.GetRegistryRepositoryResult;
import java.util.concurrent.CompletableFuture;

public final class ContainerFunctions {
    /**
     * Provides access to available Kubernetes versions in a location for a given project.
     * 
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetAwsVersionsResult> getAwsVersions() {
        return getAwsVersions(io.pulumi.gcp.container.inputs.GetAwsVersionsArgs.Empty, io.pulumi.deployment.InvokeOptions.Empty);
    }
    public static CompletableFuture<GetAwsVersionsResult> getAwsVersions(io.pulumi.gcp.container.inputs.GetAwsVersionsArgs args) {
        return getAwsVersions(args, io.pulumi.deployment.InvokeOptions.Empty);
    }
    public static CompletableFuture<GetAwsVersionsResult> getAwsVersions(io.pulumi.gcp.container.inputs.GetAwsVersionsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("gcp:container/getAwsVersions:getAwsVersions", TypeShape.of(GetAwsVersionsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Provides access to available Kubernetes versions in a location for a given project.
     * 
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetAzureVersionsResult> getAzureVersions() {
        return getAzureVersions(io.pulumi.gcp.container.inputs.GetAzureVersionsArgs.Empty, io.pulumi.deployment.InvokeOptions.Empty);
    }
    public static CompletableFuture<GetAzureVersionsResult> getAzureVersions(io.pulumi.gcp.container.inputs.GetAzureVersionsArgs args) {
        return getAzureVersions(args, io.pulumi.deployment.InvokeOptions.Empty);
    }
    public static CompletableFuture<GetAzureVersionsResult> getAzureVersions(io.pulumi.gcp.container.inputs.GetAzureVersionsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("gcp:container/getAzureVersions:getAzureVersions", TypeShape.of(GetAzureVersionsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get info about a GKE cluster from its name and location.
     * 
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetClusterResult> getCluster(io.pulumi.gcp.container.inputs.GetClusterArgs args) {
        return getCluster(args, io.pulumi.deployment.InvokeOptions.Empty);
    }
    public static CompletableFuture<GetClusterResult> getCluster(io.pulumi.gcp.container.inputs.GetClusterArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("gcp:container/getCluster:getCluster", TypeShape.of(GetClusterResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Provides access to available Google Kubernetes Engine versions in a zone or region for a given project.
     * 
     * > If you are using the `gcp.container.getEngineVersions` datasource with a
     * regional cluster, ensure that you have provided a region as the `location` to
     * the datasource. A region can have a different set of supported versions than
     * its component zones, and not all zones in a region are guaranteed to
     * support the same version.
     * 
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetEngineVersionsResult> getEngineVersions() {
        return getEngineVersions(io.pulumi.gcp.container.inputs.GetEngineVersionsArgs.Empty, io.pulumi.deployment.InvokeOptions.Empty);
    }
    public static CompletableFuture<GetEngineVersionsResult> getEngineVersions(io.pulumi.gcp.container.inputs.GetEngineVersionsArgs args) {
        return getEngineVersions(args, io.pulumi.deployment.InvokeOptions.Empty);
    }
    public static CompletableFuture<GetEngineVersionsResult> getEngineVersions(io.pulumi.gcp.container.inputs.GetEngineVersionsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("gcp:container/getEngineVersions:getEngineVersions", TypeShape.of(GetEngineVersionsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source fetches the project name, and provides the appropriate URLs to use for container registry for this project.
     * 
     * The URLs are computed entirely offline - as long as the project exists, they will be valid, but this data source does not contact Google Container Registry (GCR) at any point.
     * 
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetRegistryImageResult> getRegistryImage(io.pulumi.gcp.container.inputs.GetRegistryImageArgs args) {
        return getRegistryImage(args, io.pulumi.deployment.InvokeOptions.Empty);
    }
    public static CompletableFuture<GetRegistryImageResult> getRegistryImage(io.pulumi.gcp.container.inputs.GetRegistryImageArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("gcp:container/getRegistryImage:getRegistryImage", TypeShape.of(GetRegistryImageResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source fetches the project name, and provides the appropriate URLs to use for container registry for this project.
     * 
     * The URLs are computed entirely offline - as long as the project exists, they will be valid, but this data source does not contact Google Container Registry (GCR) at any point.
     * 
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetRegistryRepositoryResult> getRegistryRepository() {
        return getRegistryRepository(io.pulumi.gcp.container.inputs.GetRegistryRepositoryArgs.Empty, io.pulumi.deployment.InvokeOptions.Empty);
    }
    public static CompletableFuture<GetRegistryRepositoryResult> getRegistryRepository(io.pulumi.gcp.container.inputs.GetRegistryRepositoryArgs args) {
        return getRegistryRepository(args, io.pulumi.deployment.InvokeOptions.Empty);
    }
    public static CompletableFuture<GetRegistryRepositoryResult> getRegistryRepository(io.pulumi.gcp.container.inputs.GetRegistryRepositoryArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("gcp:container/getRegistryRepository:getRegistryRepository", TypeShape.of(GetRegistryRepositoryResult.class), args, Utilities.withVersion(options));
    }
}
