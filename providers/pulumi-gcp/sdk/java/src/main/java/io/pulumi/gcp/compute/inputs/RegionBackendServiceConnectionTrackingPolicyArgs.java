// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.compute.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class RegionBackendServiceConnectionTrackingPolicyArgs extends io.pulumi.resources.ResourceArgs {

    public static final RegionBackendServiceConnectionTrackingPolicyArgs Empty = new RegionBackendServiceConnectionTrackingPolicyArgs();

    @InputImport(name="connectionPersistenceOnUnhealthyBackends")
    private final @Nullable Input<String> connectionPersistenceOnUnhealthyBackends;

    public Input<String> getConnectionPersistenceOnUnhealthyBackends() {
        return this.connectionPersistenceOnUnhealthyBackends == null ? Input.empty() : this.connectionPersistenceOnUnhealthyBackends;
    }

    @InputImport(name="idleTimeoutSec")
    private final @Nullable Input<Integer> idleTimeoutSec;

    public Input<Integer> getIdleTimeoutSec() {
        return this.idleTimeoutSec == null ? Input.empty() : this.idleTimeoutSec;
    }

    @InputImport(name="trackingMode")
    private final @Nullable Input<String> trackingMode;

    public Input<String> getTrackingMode() {
        return this.trackingMode == null ? Input.empty() : this.trackingMode;
    }

    public RegionBackendServiceConnectionTrackingPolicyArgs(
        @Nullable Input<String> connectionPersistenceOnUnhealthyBackends,
        @Nullable Input<Integer> idleTimeoutSec,
        @Nullable Input<String> trackingMode) {
        this.connectionPersistenceOnUnhealthyBackends = connectionPersistenceOnUnhealthyBackends;
        this.idleTimeoutSec = idleTimeoutSec;
        this.trackingMode = trackingMode;
    }

    private RegionBackendServiceConnectionTrackingPolicyArgs() {
        this.connectionPersistenceOnUnhealthyBackends = Input.empty();
        this.idleTimeoutSec = Input.empty();
        this.trackingMode = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RegionBackendServiceConnectionTrackingPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> connectionPersistenceOnUnhealthyBackends;
        private @Nullable Input<Integer> idleTimeoutSec;
        private @Nullable Input<String> trackingMode;

        public Builder() {
    	      // Empty
        }

        public Builder(RegionBackendServiceConnectionTrackingPolicyArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.connectionPersistenceOnUnhealthyBackends = defaults.connectionPersistenceOnUnhealthyBackends;
    	      this.idleTimeoutSec = defaults.idleTimeoutSec;
    	      this.trackingMode = defaults.trackingMode;
        }

        public Builder setConnectionPersistenceOnUnhealthyBackends(@Nullable Input<String> connectionPersistenceOnUnhealthyBackends) {
            this.connectionPersistenceOnUnhealthyBackends = connectionPersistenceOnUnhealthyBackends;
            return this;
        }

        public Builder setConnectionPersistenceOnUnhealthyBackends(@Nullable String connectionPersistenceOnUnhealthyBackends) {
            this.connectionPersistenceOnUnhealthyBackends = Input.ofNullable(connectionPersistenceOnUnhealthyBackends);
            return this;
        }

        public Builder setIdleTimeoutSec(@Nullable Input<Integer> idleTimeoutSec) {
            this.idleTimeoutSec = idleTimeoutSec;
            return this;
        }

        public Builder setIdleTimeoutSec(@Nullable Integer idleTimeoutSec) {
            this.idleTimeoutSec = Input.ofNullable(idleTimeoutSec);
            return this;
        }

        public Builder setTrackingMode(@Nullable Input<String> trackingMode) {
            this.trackingMode = trackingMode;
            return this;
        }

        public Builder setTrackingMode(@Nullable String trackingMode) {
            this.trackingMode = Input.ofNullable(trackingMode);
            return this;
        }

        public RegionBackendServiceConnectionTrackingPolicyArgs build() {
            return new RegionBackendServiceConnectionTrackingPolicyArgs(connectionPersistenceOnUnhealthyBackends, idleTimeoutSec, trackingMode);
        }
    }
}
