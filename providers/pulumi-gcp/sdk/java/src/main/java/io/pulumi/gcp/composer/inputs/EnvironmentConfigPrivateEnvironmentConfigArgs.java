// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.composer.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class EnvironmentConfigPrivateEnvironmentConfigArgs extends io.pulumi.resources.ResourceArgs {

    public static final EnvironmentConfigPrivateEnvironmentConfigArgs Empty = new EnvironmentConfigPrivateEnvironmentConfigArgs();

    @InputImport(name="cloudComposerConnectionSubnetwork")
      private final @Nullable Input<String> cloudComposerConnectionSubnetwork;

    public Input<String> getCloudComposerConnectionSubnetwork() {
        return this.cloudComposerConnectionSubnetwork == null ? Input.empty() : this.cloudComposerConnectionSubnetwork;
    }

    @InputImport(name="cloudComposerNetworkIpv4CidrBlock")
      private final @Nullable Input<String> cloudComposerNetworkIpv4CidrBlock;

    public Input<String> getCloudComposerNetworkIpv4CidrBlock() {
        return this.cloudComposerNetworkIpv4CidrBlock == null ? Input.empty() : this.cloudComposerNetworkIpv4CidrBlock;
    }

    @InputImport(name="cloudSqlIpv4CidrBlock")
      private final @Nullable Input<String> cloudSqlIpv4CidrBlock;

    public Input<String> getCloudSqlIpv4CidrBlock() {
        return this.cloudSqlIpv4CidrBlock == null ? Input.empty() : this.cloudSqlIpv4CidrBlock;
    }

    @InputImport(name="enablePrivateEndpoint")
      private final @Nullable Input<Boolean> enablePrivateEndpoint;

    public Input<Boolean> getEnablePrivateEndpoint() {
        return this.enablePrivateEndpoint == null ? Input.empty() : this.enablePrivateEndpoint;
    }

    @InputImport(name="enablePrivatelyUsedPublicIps")
      private final @Nullable Input<Boolean> enablePrivatelyUsedPublicIps;

    public Input<Boolean> getEnablePrivatelyUsedPublicIps() {
        return this.enablePrivatelyUsedPublicIps == null ? Input.empty() : this.enablePrivatelyUsedPublicIps;
    }

    @InputImport(name="masterIpv4CidrBlock")
      private final @Nullable Input<String> masterIpv4CidrBlock;

    public Input<String> getMasterIpv4CidrBlock() {
        return this.masterIpv4CidrBlock == null ? Input.empty() : this.masterIpv4CidrBlock;
    }

    @InputImport(name="webServerIpv4CidrBlock")
      private final @Nullable Input<String> webServerIpv4CidrBlock;

    public Input<String> getWebServerIpv4CidrBlock() {
        return this.webServerIpv4CidrBlock == null ? Input.empty() : this.webServerIpv4CidrBlock;
    }

    public EnvironmentConfigPrivateEnvironmentConfigArgs(
        @Nullable Input<String> cloudComposerConnectionSubnetwork,
        @Nullable Input<String> cloudComposerNetworkIpv4CidrBlock,
        @Nullable Input<String> cloudSqlIpv4CidrBlock,
        @Nullable Input<Boolean> enablePrivateEndpoint,
        @Nullable Input<Boolean> enablePrivatelyUsedPublicIps,
        @Nullable Input<String> masterIpv4CidrBlock,
        @Nullable Input<String> webServerIpv4CidrBlock) {
        this.cloudComposerConnectionSubnetwork = cloudComposerConnectionSubnetwork;
        this.cloudComposerNetworkIpv4CidrBlock = cloudComposerNetworkIpv4CidrBlock;
        this.cloudSqlIpv4CidrBlock = cloudSqlIpv4CidrBlock;
        this.enablePrivateEndpoint = enablePrivateEndpoint;
        this.enablePrivatelyUsedPublicIps = enablePrivatelyUsedPublicIps;
        this.masterIpv4CidrBlock = masterIpv4CidrBlock;
        this.webServerIpv4CidrBlock = webServerIpv4CidrBlock;
    }

    private EnvironmentConfigPrivateEnvironmentConfigArgs() {
        this.cloudComposerConnectionSubnetwork = Input.empty();
        this.cloudComposerNetworkIpv4CidrBlock = Input.empty();
        this.cloudSqlIpv4CidrBlock = Input.empty();
        this.enablePrivateEndpoint = Input.empty();
        this.enablePrivatelyUsedPublicIps = Input.empty();
        this.masterIpv4CidrBlock = Input.empty();
        this.webServerIpv4CidrBlock = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(EnvironmentConfigPrivateEnvironmentConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> cloudComposerConnectionSubnetwork;
        private @Nullable Input<String> cloudComposerNetworkIpv4CidrBlock;
        private @Nullable Input<String> cloudSqlIpv4CidrBlock;
        private @Nullable Input<Boolean> enablePrivateEndpoint;
        private @Nullable Input<Boolean> enablePrivatelyUsedPublicIps;
        private @Nullable Input<String> masterIpv4CidrBlock;
        private @Nullable Input<String> webServerIpv4CidrBlock;

        public Builder() {
    	      // Empty
        }

        public Builder(EnvironmentConfigPrivateEnvironmentConfigArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cloudComposerConnectionSubnetwork = defaults.cloudComposerConnectionSubnetwork;
    	      this.cloudComposerNetworkIpv4CidrBlock = defaults.cloudComposerNetworkIpv4CidrBlock;
    	      this.cloudSqlIpv4CidrBlock = defaults.cloudSqlIpv4CidrBlock;
    	      this.enablePrivateEndpoint = defaults.enablePrivateEndpoint;
    	      this.enablePrivatelyUsedPublicIps = defaults.enablePrivatelyUsedPublicIps;
    	      this.masterIpv4CidrBlock = defaults.masterIpv4CidrBlock;
    	      this.webServerIpv4CidrBlock = defaults.webServerIpv4CidrBlock;
        }

        public Builder setCloudComposerConnectionSubnetwork(@Nullable Input<String> cloudComposerConnectionSubnetwork) {
            this.cloudComposerConnectionSubnetwork = cloudComposerConnectionSubnetwork;
            return this;
        }

        public Builder setCloudComposerConnectionSubnetwork(@Nullable String cloudComposerConnectionSubnetwork) {
            this.cloudComposerConnectionSubnetwork = Input.ofNullable(cloudComposerConnectionSubnetwork);
            return this;
        }

        public Builder setCloudComposerNetworkIpv4CidrBlock(@Nullable Input<String> cloudComposerNetworkIpv4CidrBlock) {
            this.cloudComposerNetworkIpv4CidrBlock = cloudComposerNetworkIpv4CidrBlock;
            return this;
        }

        public Builder setCloudComposerNetworkIpv4CidrBlock(@Nullable String cloudComposerNetworkIpv4CidrBlock) {
            this.cloudComposerNetworkIpv4CidrBlock = Input.ofNullable(cloudComposerNetworkIpv4CidrBlock);
            return this;
        }

        public Builder setCloudSqlIpv4CidrBlock(@Nullable Input<String> cloudSqlIpv4CidrBlock) {
            this.cloudSqlIpv4CidrBlock = cloudSqlIpv4CidrBlock;
            return this;
        }

        public Builder setCloudSqlIpv4CidrBlock(@Nullable String cloudSqlIpv4CidrBlock) {
            this.cloudSqlIpv4CidrBlock = Input.ofNullable(cloudSqlIpv4CidrBlock);
            return this;
        }

        public Builder setEnablePrivateEndpoint(@Nullable Input<Boolean> enablePrivateEndpoint) {
            this.enablePrivateEndpoint = enablePrivateEndpoint;
            return this;
        }

        public Builder setEnablePrivateEndpoint(@Nullable Boolean enablePrivateEndpoint) {
            this.enablePrivateEndpoint = Input.ofNullable(enablePrivateEndpoint);
            return this;
        }

        public Builder setEnablePrivatelyUsedPublicIps(@Nullable Input<Boolean> enablePrivatelyUsedPublicIps) {
            this.enablePrivatelyUsedPublicIps = enablePrivatelyUsedPublicIps;
            return this;
        }

        public Builder setEnablePrivatelyUsedPublicIps(@Nullable Boolean enablePrivatelyUsedPublicIps) {
            this.enablePrivatelyUsedPublicIps = Input.ofNullable(enablePrivatelyUsedPublicIps);
            return this;
        }

        public Builder setMasterIpv4CidrBlock(@Nullable Input<String> masterIpv4CidrBlock) {
            this.masterIpv4CidrBlock = masterIpv4CidrBlock;
            return this;
        }

        public Builder setMasterIpv4CidrBlock(@Nullable String masterIpv4CidrBlock) {
            this.masterIpv4CidrBlock = Input.ofNullable(masterIpv4CidrBlock);
            return this;
        }

        public Builder setWebServerIpv4CidrBlock(@Nullable Input<String> webServerIpv4CidrBlock) {
            this.webServerIpv4CidrBlock = webServerIpv4CidrBlock;
            return this;
        }

        public Builder setWebServerIpv4CidrBlock(@Nullable String webServerIpv4CidrBlock) {
            this.webServerIpv4CidrBlock = Input.ofNullable(webServerIpv4CidrBlock);
            return this;
        }
        public EnvironmentConfigPrivateEnvironmentConfigArgs build() {
            return new EnvironmentConfigPrivateEnvironmentConfigArgs(cloudComposerConnectionSubnetwork, cloudComposerNetworkIpv4CidrBlock, cloudSqlIpv4CidrBlock, enablePrivateEndpoint, enablePrivatelyUsedPublicIps, masterIpv4CidrBlock, webServerIpv4CidrBlock);
        }
    }
}
