// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.diagflow.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import io.pulumi.gcp.diagflow.outputs.CxFlowEventHandlerTriggerFulfillmentMessage;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class CxFlowEventHandlerTriggerFulfillment {
    private final @Nullable List<CxFlowEventHandlerTriggerFulfillmentMessage> messages;
    private final @Nullable Boolean returnPartialResponses;
    private final @Nullable String tag;
    private final @Nullable String webhook;

    @OutputCustomType.Constructor({"messages","returnPartialResponses","tag","webhook"})
    private CxFlowEventHandlerTriggerFulfillment(
        @Nullable List<CxFlowEventHandlerTriggerFulfillmentMessage> messages,
        @Nullable Boolean returnPartialResponses,
        @Nullable String tag,
        @Nullable String webhook) {
        this.messages = messages;
        this.returnPartialResponses = returnPartialResponses;
        this.tag = tag;
        this.webhook = webhook;
    }

    public List<CxFlowEventHandlerTriggerFulfillmentMessage> getMessages() {
        return this.messages == null ? List.of() : this.messages;
    }
    public Optional<Boolean> getReturnPartialResponses() {
        return Optional.ofNullable(this.returnPartialResponses);
    }
    public Optional<String> getTag() {
        return Optional.ofNullable(this.tag);
    }
    public Optional<String> getWebhook() {
        return Optional.ofNullable(this.webhook);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CxFlowEventHandlerTriggerFulfillment defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable List<CxFlowEventHandlerTriggerFulfillmentMessage> messages;
        private @Nullable Boolean returnPartialResponses;
        private @Nullable String tag;
        private @Nullable String webhook;

        public Builder() {
    	      // Empty
        }

        public Builder(CxFlowEventHandlerTriggerFulfillment defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.messages = defaults.messages;
    	      this.returnPartialResponses = defaults.returnPartialResponses;
    	      this.tag = defaults.tag;
    	      this.webhook = defaults.webhook;
        }

        public Builder setMessages(@Nullable List<CxFlowEventHandlerTriggerFulfillmentMessage> messages) {
            this.messages = messages;
            return this;
        }

        public Builder setReturnPartialResponses(@Nullable Boolean returnPartialResponses) {
            this.returnPartialResponses = returnPartialResponses;
            return this;
        }

        public Builder setTag(@Nullable String tag) {
            this.tag = tag;
            return this;
        }

        public Builder setWebhook(@Nullable String webhook) {
            this.webhook = webhook;
            return this;
        }

        public CxFlowEventHandlerTriggerFulfillment build() {
            return new CxFlowEventHandlerTriggerFulfillment(messages, returnPartialResponses, tag, webhook);
        }
    }
}
