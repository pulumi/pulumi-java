// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.dataproc.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ClusterClusterConfigSoftwareConfigArgs extends io.pulumi.resources.ResourceArgs {

    public static final ClusterClusterConfigSoftwareConfigArgs Empty = new ClusterClusterConfigSoftwareConfigArgs();

    /**
     * The Cloud Dataproc image version to use
     * for the cluster - this controls the sets of software versions
     * installed onto the nodes when you create clusters. If not specified, defaults to the
     * latest version. For a list of valid versions see
     * [Cloud Dataproc versions](https://cloud.google.com/dataproc/docs/concepts/dataproc-versions)
     * 
     */
    @InputImport(name="imageVersion")
      private final @Nullable Input<String> imageVersion;

    public Input<String> getImageVersion() {
        return this.imageVersion == null ? Input.empty() : this.imageVersion;
    }

    /**
     * The set of optional components to activate on the cluster.
     * Accepted values are:
     * * ANACONDA
     * * DRUID
     * * FLINK
     * * HBASE
     * * HIVE_WEBHCAT
     * * JUPYTER
     * * PRESTO
     * * RANGER
     * * SOLR
     * * ZEPPELIN
     * * ZOOKEEPER
     * 
     */
    @InputImport(name="optionalComponents")
      private final @Nullable Input<List<String>> optionalComponents;

    public Input<List<String>> getOptionalComponents() {
        return this.optionalComponents == null ? Input.empty() : this.optionalComponents;
    }

    /**
     * A list of override and additional properties (key/value pairs)
     * used to modify various aspects of the common configuration files used when creating
     * a cluster. For a list of valid properties please see
     * [Cluster properties](https://cloud.google.com/dataproc/docs/concepts/cluster-properties)
     * 
     */
    @InputImport(name="overrideProperties")
      private final @Nullable Input<Map<String,String>> overrideProperties;

    public Input<Map<String,String>> getOverrideProperties() {
        return this.overrideProperties == null ? Input.empty() : this.overrideProperties;
    }

    @InputImport(name="properties")
      private final @Nullable Input<Map<String,Object>> properties;

    public Input<Map<String,Object>> getProperties() {
        return this.properties == null ? Input.empty() : this.properties;
    }

    public ClusterClusterConfigSoftwareConfigArgs(
        @Nullable Input<String> imageVersion,
        @Nullable Input<List<String>> optionalComponents,
        @Nullable Input<Map<String,String>> overrideProperties,
        @Nullable Input<Map<String,Object>> properties) {
        this.imageVersion = imageVersion;
        this.optionalComponents = optionalComponents;
        this.overrideProperties = overrideProperties;
        this.properties = properties;
    }

    private ClusterClusterConfigSoftwareConfigArgs() {
        this.imageVersion = Input.empty();
        this.optionalComponents = Input.empty();
        this.overrideProperties = Input.empty();
        this.properties = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ClusterClusterConfigSoftwareConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> imageVersion;
        private @Nullable Input<List<String>> optionalComponents;
        private @Nullable Input<Map<String,String>> overrideProperties;
        private @Nullable Input<Map<String,Object>> properties;

        public Builder() {
    	      // Empty
        }

        public Builder(ClusterClusterConfigSoftwareConfigArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.imageVersion = defaults.imageVersion;
    	      this.optionalComponents = defaults.optionalComponents;
    	      this.overrideProperties = defaults.overrideProperties;
    	      this.properties = defaults.properties;
        }

        public Builder setImageVersion(@Nullable Input<String> imageVersion) {
            this.imageVersion = imageVersion;
            return this;
        }

        public Builder setImageVersion(@Nullable String imageVersion) {
            this.imageVersion = Input.ofNullable(imageVersion);
            return this;
        }

        public Builder setOptionalComponents(@Nullable Input<List<String>> optionalComponents) {
            this.optionalComponents = optionalComponents;
            return this;
        }

        public Builder setOptionalComponents(@Nullable List<String> optionalComponents) {
            this.optionalComponents = Input.ofNullable(optionalComponents);
            return this;
        }

        public Builder setOverrideProperties(@Nullable Input<Map<String,String>> overrideProperties) {
            this.overrideProperties = overrideProperties;
            return this;
        }

        public Builder setOverrideProperties(@Nullable Map<String,String> overrideProperties) {
            this.overrideProperties = Input.ofNullable(overrideProperties);
            return this;
        }

        public Builder setProperties(@Nullable Input<Map<String,Object>> properties) {
            this.properties = properties;
            return this;
        }

        public Builder setProperties(@Nullable Map<String,Object> properties) {
            this.properties = Input.ofNullable(properties);
            return this;
        }
        public ClusterClusterConfigSoftwareConfigArgs build() {
            return new ClusterClusterConfigSoftwareConfigArgs(imageVersion, optionalComponents, overrideProperties, properties);
        }
    }
}
