// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.container.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ClusterClusterAutoscalingResourceLimitGetArgs extends io.pulumi.resources.ResourceArgs {

    public static final ClusterClusterAutoscalingResourceLimitGetArgs Empty = new ClusterClusterAutoscalingResourceLimitGetArgs();

    /**
     * Maximum amount of the resource in the cluster.
     * 
     */
    @InputImport(name="maximum")
      private final @Nullable Input<Integer> maximum;

    public Input<Integer> getMaximum() {
        return this.maximum == null ? Input.empty() : this.maximum;
    }

    /**
     * Minimum amount of the resource in the cluster.
     * 
     */
    @InputImport(name="minimum")
      private final @Nullable Input<Integer> minimum;

    public Input<Integer> getMinimum() {
        return this.minimum == null ? Input.empty() : this.minimum;
    }

    /**
     * The type of the resource. For example, `cpu` and
     * `memory`.  See the [guide to using Node Auto-Provisioning](https://cloud.google.com/kubernetes-engine/docs/how-to/node-auto-provisioning)
     * for a list of types.
     * 
     */
    @InputImport(name="resourceType", required=true)
      private final Input<String> resourceType;

    public Input<String> getPropResourceType() {
        return this.resourceType;
    }

    public ClusterClusterAutoscalingResourceLimitGetArgs(
        @Nullable Input<Integer> maximum,
        @Nullable Input<Integer> minimum,
        Input<String> resourceType) {
        this.maximum = maximum;
        this.minimum = minimum;
        this.resourceType = Objects.requireNonNull(resourceType, "expected parameter 'resourceType' to be non-null");
    }

    private ClusterClusterAutoscalingResourceLimitGetArgs() {
        this.maximum = Input.empty();
        this.minimum = Input.empty();
        this.resourceType = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ClusterClusterAutoscalingResourceLimitGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<Integer> maximum;
        private @Nullable Input<Integer> minimum;
        private Input<String> resourceType;

        public Builder() {
    	      // Empty
        }

        public Builder(ClusterClusterAutoscalingResourceLimitGetArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.maximum = defaults.maximum;
    	      this.minimum = defaults.minimum;
    	      this.resourceType = defaults.resourceType;
        }

        public Builder setMaximum(@Nullable Input<Integer> maximum) {
            this.maximum = maximum;
            return this;
        }

        public Builder setMaximum(@Nullable Integer maximum) {
            this.maximum = Input.ofNullable(maximum);
            return this;
        }

        public Builder setMinimum(@Nullable Input<Integer> minimum) {
            this.minimum = minimum;
            return this;
        }

        public Builder setMinimum(@Nullable Integer minimum) {
            this.minimum = Input.ofNullable(minimum);
            return this;
        }

        public Builder setResourceType(Input<String> resourceType) {
            this.resourceType = Objects.requireNonNull(resourceType);
            return this;
        }

        public Builder setResourceType(String resourceType) {
            this.resourceType = Input.of(Objects.requireNonNull(resourceType));
            return this;
        }
        public ClusterClusterAutoscalingResourceLimitGetArgs build() {
            return new ClusterClusterAutoscalingResourceLimitGetArgs(maximum, minimum, resourceType);
        }
    }
}
