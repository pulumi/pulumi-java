// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.pubsub;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import io.pulumi.gcp.pubsub.inputs.LiteSubscriptionDeliveryConfigArgs;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class LiteSubscriptionArgs extends io.pulumi.resources.ResourceArgs {

    public static final LiteSubscriptionArgs Empty = new LiteSubscriptionArgs();

    /**
     * The settings for this subscription's message delivery.
     * Structure is documented below.
     * 
     */
    @Import(name="deliveryConfig")
      private final @Nullable Output<LiteSubscriptionDeliveryConfigArgs> deliveryConfig;

    public Output<LiteSubscriptionDeliveryConfigArgs> getDeliveryConfig() {
        return this.deliveryConfig == null ? Codegen.empty() : this.deliveryConfig;
    }

    /**
     * Name of the subscription.
     * 
     */
    @Import(name="name")
      private final @Nullable Output<String> name;

    public Output<String> getName() {
        return this.name == null ? Codegen.empty() : this.name;
    }

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Import(name="project")
      private final @Nullable Output<String> project;

    public Output<String> getProject() {
        return this.project == null ? Codegen.empty() : this.project;
    }

    /**
     * The region of the pubsub lite topic.
     * 
     */
    @Import(name="region")
      private final @Nullable Output<String> region;

    public Output<String> getRegion() {
        return this.region == null ? Codegen.empty() : this.region;
    }

    /**
     * A reference to a Topic resource.
     * 
     */
    @Import(name="topic", required=true)
      private final Output<String> topic;

    public Output<String> getTopic() {
        return this.topic;
    }

    /**
     * The zone of the pubsub lite topic.
     * 
     */
    @Import(name="zone")
      private final @Nullable Output<String> zone;

    public Output<String> getZone() {
        return this.zone == null ? Codegen.empty() : this.zone;
    }

    public LiteSubscriptionArgs(
        @Nullable Output<LiteSubscriptionDeliveryConfigArgs> deliveryConfig,
        @Nullable Output<String> name,
        @Nullable Output<String> project,
        @Nullable Output<String> region,
        Output<String> topic,
        @Nullable Output<String> zone) {
        this.deliveryConfig = deliveryConfig;
        this.name = name;
        this.project = project;
        this.region = region;
        this.topic = Objects.requireNonNull(topic, "expected parameter 'topic' to be non-null");
        this.zone = zone;
    }

    private LiteSubscriptionArgs() {
        this.deliveryConfig = Codegen.empty();
        this.name = Codegen.empty();
        this.project = Codegen.empty();
        this.region = Codegen.empty();
        this.topic = Codegen.empty();
        this.zone = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(LiteSubscriptionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<LiteSubscriptionDeliveryConfigArgs> deliveryConfig;
        private @Nullable Output<String> name;
        private @Nullable Output<String> project;
        private @Nullable Output<String> region;
        private Output<String> topic;
        private @Nullable Output<String> zone;

        public Builder() {
    	      // Empty
        }

        public Builder(LiteSubscriptionArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.deliveryConfig = defaults.deliveryConfig;
    	      this.name = defaults.name;
    	      this.project = defaults.project;
    	      this.region = defaults.region;
    	      this.topic = defaults.topic;
    	      this.zone = defaults.zone;
        }

        public Builder deliveryConfig(@Nullable Output<LiteSubscriptionDeliveryConfigArgs> deliveryConfig) {
            this.deliveryConfig = deliveryConfig;
            return this;
        }
        public Builder deliveryConfig(@Nullable LiteSubscriptionDeliveryConfigArgs deliveryConfig) {
            this.deliveryConfig = Codegen.ofNullable(deliveryConfig);
            return this;
        }
        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }
        public Builder name(@Nullable String name) {
            this.name = Codegen.ofNullable(name);
            return this;
        }
        public Builder project(@Nullable Output<String> project) {
            this.project = project;
            return this;
        }
        public Builder project(@Nullable String project) {
            this.project = Codegen.ofNullable(project);
            return this;
        }
        public Builder region(@Nullable Output<String> region) {
            this.region = region;
            return this;
        }
        public Builder region(@Nullable String region) {
            this.region = Codegen.ofNullable(region);
            return this;
        }
        public Builder topic(Output<String> topic) {
            this.topic = Objects.requireNonNull(topic);
            return this;
        }
        public Builder topic(String topic) {
            this.topic = Output.of(Objects.requireNonNull(topic));
            return this;
        }
        public Builder zone(@Nullable Output<String> zone) {
            this.zone = zone;
            return this;
        }
        public Builder zone(@Nullable String zone) {
            this.zone = Codegen.ofNullable(zone);
            return this;
        }        public LiteSubscriptionArgs build() {
            return new LiteSubscriptionArgs(deliveryConfig, name, project, region, topic, zone);
        }
    }
}
