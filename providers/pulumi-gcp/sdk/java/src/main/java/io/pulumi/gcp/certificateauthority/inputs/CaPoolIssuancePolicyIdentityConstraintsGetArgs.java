// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.certificateauthority.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import io.pulumi.gcp.certificateauthority.inputs.CaPoolIssuancePolicyIdentityConstraintsCelExpressionGetArgs;
import java.lang.Boolean;
import java.util.Objects;
import javax.annotation.Nullable;


public final class CaPoolIssuancePolicyIdentityConstraintsGetArgs extends io.pulumi.resources.ResourceArgs {

    public static final CaPoolIssuancePolicyIdentityConstraintsGetArgs Empty = new CaPoolIssuancePolicyIdentityConstraintsGetArgs();

    /**
     * If this is set, the SubjectAltNames extension may be copied from a certificate request into the signed certificate.
     * Otherwise, the requested SubjectAltNames will be discarded.
     * 
     */
    @Import(name="allowSubjectAltNamesPassthrough", required=true)
      private final Output<Boolean> allowSubjectAltNamesPassthrough;

    public Output<Boolean> allowSubjectAltNamesPassthrough() {
        return this.allowSubjectAltNamesPassthrough;
    }

    /**
     * If this is set, the Subject field may be copied from a certificate request into the signed certificate.
     * Otherwise, the requested Subject will be discarded.
     * 
     */
    @Import(name="allowSubjectPassthrough", required=true)
      private final Output<Boolean> allowSubjectPassthrough;

    public Output<Boolean> allowSubjectPassthrough() {
        return this.allowSubjectPassthrough;
    }

    /**
     * A CEL expression that may be used to validate the resolved X.509 Subject and/or Subject Alternative Name before a
     * certificate is signed. To see the full allowed syntax and some examples,
     * see https://cloud.google.com/certificate-authority-service/docs/cel-guide
     * Structure is documented below.
     * 
     */
    @Import(name="celExpression")
      private final @Nullable Output<CaPoolIssuancePolicyIdentityConstraintsCelExpressionGetArgs> celExpression;

    public Output<CaPoolIssuancePolicyIdentityConstraintsCelExpressionGetArgs> celExpression() {
        return this.celExpression == null ? Codegen.empty() : this.celExpression;
    }

    public CaPoolIssuancePolicyIdentityConstraintsGetArgs(
        Output<Boolean> allowSubjectAltNamesPassthrough,
        Output<Boolean> allowSubjectPassthrough,
        @Nullable Output<CaPoolIssuancePolicyIdentityConstraintsCelExpressionGetArgs> celExpression) {
        this.allowSubjectAltNamesPassthrough = Objects.requireNonNull(allowSubjectAltNamesPassthrough, "expected parameter 'allowSubjectAltNamesPassthrough' to be non-null");
        this.allowSubjectPassthrough = Objects.requireNonNull(allowSubjectPassthrough, "expected parameter 'allowSubjectPassthrough' to be non-null");
        this.celExpression = celExpression;
    }

    private CaPoolIssuancePolicyIdentityConstraintsGetArgs() {
        this.allowSubjectAltNamesPassthrough = Codegen.empty();
        this.allowSubjectPassthrough = Codegen.empty();
        this.celExpression = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CaPoolIssuancePolicyIdentityConstraintsGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<Boolean> allowSubjectAltNamesPassthrough;
        private Output<Boolean> allowSubjectPassthrough;
        private @Nullable Output<CaPoolIssuancePolicyIdentityConstraintsCelExpressionGetArgs> celExpression;

        public Builder() {
    	      // Empty
        }

        public Builder(CaPoolIssuancePolicyIdentityConstraintsGetArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allowSubjectAltNamesPassthrough = defaults.allowSubjectAltNamesPassthrough;
    	      this.allowSubjectPassthrough = defaults.allowSubjectPassthrough;
    	      this.celExpression = defaults.celExpression;
        }

        public Builder allowSubjectAltNamesPassthrough(Output<Boolean> allowSubjectAltNamesPassthrough) {
            this.allowSubjectAltNamesPassthrough = Objects.requireNonNull(allowSubjectAltNamesPassthrough);
            return this;
        }
        public Builder allowSubjectAltNamesPassthrough(Boolean allowSubjectAltNamesPassthrough) {
            this.allowSubjectAltNamesPassthrough = Output.of(Objects.requireNonNull(allowSubjectAltNamesPassthrough));
            return this;
        }
        public Builder allowSubjectPassthrough(Output<Boolean> allowSubjectPassthrough) {
            this.allowSubjectPassthrough = Objects.requireNonNull(allowSubjectPassthrough);
            return this;
        }
        public Builder allowSubjectPassthrough(Boolean allowSubjectPassthrough) {
            this.allowSubjectPassthrough = Output.of(Objects.requireNonNull(allowSubjectPassthrough));
            return this;
        }
        public Builder celExpression(@Nullable Output<CaPoolIssuancePolicyIdentityConstraintsCelExpressionGetArgs> celExpression) {
            this.celExpression = celExpression;
            return this;
        }
        public Builder celExpression(@Nullable CaPoolIssuancePolicyIdentityConstraintsCelExpressionGetArgs celExpression) {
            this.celExpression = Codegen.ofNullable(celExpression);
            return this;
        }        public CaPoolIssuancePolicyIdentityConstraintsGetArgs build() {
            return new CaPoolIssuancePolicyIdentityConstraintsGetArgs(allowSubjectAltNamesPassthrough, allowSubjectPassthrough, celExpression);
        }
    }
}
