// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.composer;

import io.pulumi.core.TypeShape;
import io.pulumi.deployment.Deployment;
import io.pulumi.deployment.InvokeOptions;
import io.pulumi.gcp.Utilities;
import io.pulumi.gcp.composer.inputs.GetImageVersionsArgs;
import io.pulumi.gcp.composer.outputs.GetImageVersionsResult;
import java.util.concurrent.CompletableFuture;
import javax.annotation.Nullable;

public class GetImageVersions {
    private GetImageVersions() {}
    public interface BuilderApplicator {
        public void apply(GetImageVersionsArgs.Builder a);
    }
    private static GetImageVersionsArgs buildArgs(BuilderApplicator argsBuilder) {
        final var builder = GetImageVersionsArgs.builder();
        argsBuilder.apply(builder);
        return builder.build();
    }
    /**
     * Provides access to available Cloud Composer versions in a region for a given project.
 * 
 * ## Example Usage
 * 
     *
     * A collection of arguments for invoking getImageVersions.
 * 
     *
     * A collection of values returned by getImageVersions.
 * 
     */
    public static CompletableFuture<GetImageVersionsResult> invokeAsync(BuilderApplicator argsBuilder, @Nullable InvokeOptions options) {
        return invokeAsync(buildArgs(argsBuilder), Utilities.withVersion(options));
    }
    /**
         * Provides access to available Cloud Composer versions in a region for a given project.
     * 
     * ## Example Usage
     * 
     *
         * A collection of arguments for invoking getImageVersions.
     * 
     *
         * A collection of values returned by getImageVersions.
     * 
     */
    public static CompletableFuture<GetImageVersionsResult> invokeAsync(@Nullable GetImageVersionsArgs args, @Nullable InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("gcp:composer/getImageVersions:getImageVersions", TypeShape.of(GetImageVersionsResult.class), args == null ? GetImageVersionsArgs.Empty : args, Utilities.withVersion(options));
    }
}
