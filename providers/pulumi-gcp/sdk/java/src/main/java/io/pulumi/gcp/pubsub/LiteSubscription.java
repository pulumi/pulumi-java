// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.pubsub;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Export;
import io.pulumi.core.annotations.ResourceType;
import io.pulumi.gcp.Utilities;
import io.pulumi.gcp.pubsub.LiteSubscriptionArgs;
import io.pulumi.gcp.pubsub.inputs.LiteSubscriptionState;
import io.pulumi.gcp.pubsub.outputs.LiteSubscriptionDeliveryConfig;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * A named resource representing the stream of messages from a single,
 * specific topic, to be delivered to the subscribing application.
 * 
 * 
 * To get more information about Subscription, see:
 * 
 * * [API documentation](https://cloud.google.com/pubsub/lite/docs/reference/rest/v1/admin.projects.locations.subscriptions)
 * * How-to Guides
 *     * [Managing Subscriptions](https://cloud.google.com/pubsub/lite/docs/subscriptions)
 * 
 * {{% examples %}}
 * ## Example Usage
 * {{% example %}}
 * ### Pubsub Lite Subscription Basic
 * 
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 * 
 * const project = gcp.organizations.getProject({});
 * const exampleLiteTopic = new gcp.pubsub.LiteTopic("exampleLiteTopic", {
 *     project: project.then(project => project.number),
 *     partitionConfig: {
 *         count: 1,
 *         capacity: {
 *             publishMibPerSec: 4,
 *             subscribeMibPerSec: 8,
 *         },
 *     },
 *     retentionConfig: {
 *         perPartitionBytes: 32212254720,
 *     },
 * });
 * const exampleLiteSubscription = new gcp.pubsub.LiteSubscription("exampleLiteSubscription", {
 *     topic: exampleLiteTopic.name,
 *     deliveryConfig: {
 *         deliveryRequirement: "DELIVER_AFTER_STORED",
 *     },
 * });
 * ```
 * ```python
 * import pulumi
 * import pulumi_gcp as gcp
 * 
 * project = gcp.organizations.get_project()
 * example_lite_topic = gcp.pubsub.LiteTopic("exampleLiteTopic",
 *     project=project.number,
 *     partition_config=gcp.pubsub.LiteTopicPartitionConfigArgs(
 *         count=1,
 *         capacity=gcp.pubsub.LiteTopicPartitionConfigCapacityArgs(
 *             publish_mib_per_sec=4,
 *             subscribe_mib_per_sec=8,
 *         ),
 *     ),
 *     retention_config=gcp.pubsub.LiteTopicRetentionConfigArgs(
 *         per_partition_bytes="32212254720",
 *     ))
 * example_lite_subscription = gcp.pubsub.LiteSubscription("exampleLiteSubscription",
 *     topic=example_lite_topic.name,
 *     delivery_config=gcp.pubsub.LiteSubscriptionDeliveryConfigArgs(
 *         delivery_requirement="DELIVER_AFTER_STORED",
 *     ))
 * ```
 * ```csharp
 * using Pulumi;
 * using Gcp = Pulumi.Gcp;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var project = Output.Create(Gcp.Organizations.GetProject.InvokeAsync());
 *         var exampleLiteTopic = new Gcp.PubSub.LiteTopic("exampleLiteTopic", new Gcp.PubSub.LiteTopicArgs
 *         {
 *             Project = project.Apply(project => project.Number),
 *             PartitionConfig = new Gcp.PubSub.Inputs.LiteTopicPartitionConfigArgs
 *             {
 *                 Count = 1,
 *                 Capacity = new Gcp.PubSub.Inputs.LiteTopicPartitionConfigCapacityArgs
 *                 {
 *                     PublishMibPerSec = 4,
 *                     SubscribeMibPerSec = 8,
 *                 },
 *             },
 *             RetentionConfig = new Gcp.PubSub.Inputs.LiteTopicRetentionConfigArgs
 *             {
 *                 PerPartitionBytes = "32212254720",
 *             },
 *         });
 *         var exampleLiteSubscription = new Gcp.PubSub.LiteSubscription("exampleLiteSubscription", new Gcp.PubSub.LiteSubscriptionArgs
 *         {
 *             Topic = exampleLiteTopic.Name,
 *             DeliveryConfig = new Gcp.PubSub.Inputs.LiteSubscriptionDeliveryConfigArgs
 *             {
 *                 DeliveryRequirement = "DELIVER_AFTER_STORED",
 *             },
 *         });
 *     }
 * 
 * }
 * ```
 * ```go
 * package main
 * 
 * import (
 * 	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/organizations"
 * 	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/pubsub"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		project, err := organizations.LookupProject(ctx, nil, nil)
 * 		if err != nil {
 * 			return err
 * 		}
 * 		exampleLiteTopic, err := pubsub.NewLiteTopic(ctx, "exampleLiteTopic", &pubsub.LiteTopicArgs{
 * 			Project: pulumi.String(project.Number),
 * 			PartitionConfig: &pubsub.LiteTopicPartitionConfigArgs{
 * 				Count: pulumi.Int(1),
 * 				Capacity: &pubsub.LiteTopicPartitionConfigCapacityArgs{
 * 					PublishMibPerSec:   pulumi.Int(4),
 * 					SubscribeMibPerSec: pulumi.Int(8),
 * 				},
 * 			},
 * 			RetentionConfig: &pubsub.LiteTopicRetentionConfigArgs{
 * 				PerPartitionBytes: pulumi.String("32212254720"),
 * 			},
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		_, err = pubsub.NewLiteSubscription(ctx, "exampleLiteSubscription", &pubsub.LiteSubscriptionArgs{
 * 			Topic: exampleLiteTopic.Name,
 * 			DeliveryConfig: &pubsub.LiteSubscriptionDeliveryConfigArgs{
 * 				DeliveryRequirement: pulumi.String("DELIVER_AFTER_STORED"),
 * 			},
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * ```
 * {{% /example %}}
 * {{% /examples %}}
 * 
 * ## Import
 * 
 * Subscription can be imported using any of these accepted formats
 * 
 * ```sh
 *  $ pulumi import gcp:pubsub/liteSubscription:LiteSubscription default projects/{{project}}/locations/{{zone}}/subscriptions/{{name}}
 * ```
 * 
 * 
 * 
 * ```sh
 *  $ pulumi import gcp:pubsub/liteSubscription:LiteSubscription default {{project}}/{{zone}}/{{name}}
 * ```
 * 
 * 
 * 
 * ```sh
 *  $ pulumi import gcp:pubsub/liteSubscription:LiteSubscription default {{zone}}/{{name}}
 * ```
 * 
 * 
 * 
 * ```sh
 *  $ pulumi import gcp:pubsub/liteSubscription:LiteSubscription default {{name}}
 * ```
 * 
 *  
 */
@ResourceType(type="gcp:pubsub/liteSubscription:LiteSubscription")
public class LiteSubscription extends io.pulumi.resources.CustomResource {
    /**
     * The settings for this subscription's message delivery.
     * Structure is documented below.
     * 
     */
    @Export(name="deliveryConfig", type=LiteSubscriptionDeliveryConfig.class, parameters={})
    private Output</* @Nullable */ LiteSubscriptionDeliveryConfig> deliveryConfig;

    /**
     * @return The settings for this subscription's message delivery.
     * Structure is documented below.
     * 
     */
    public Output</* @Nullable */ LiteSubscriptionDeliveryConfig> getDeliveryConfig() {
        return this.deliveryConfig;
    }
    /**
     * Name of the subscription.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return Name of the subscription.
     * 
     */
    public Output<String> getName() {
        return this.name;
    }
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Export(name="project", type=String.class, parameters={})
    private Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Output<String> getProject() {
        return this.project;
    }
    /**
     * The region of the pubsub lite topic.
     * 
     */
    @Export(name="region", type=String.class, parameters={})
    private Output</* @Nullable */ String> region;

    /**
     * @return The region of the pubsub lite topic.
     * 
     */
    public Output</* @Nullable */ String> getRegion() {
        return this.region;
    }
    /**
     * A reference to a Topic resource.
     * 
     */
    @Export(name="topic", type=String.class, parameters={})
    private Output<String> topic;

    /**
     * @return A reference to a Topic resource.
     * 
     */
    public Output<String> getTopic() {
        return this.topic;
    }
    /**
     * The zone of the pubsub lite topic.
     * 
     */
    @Export(name="zone", type=String.class, parameters={})
    private Output</* @Nullable */ String> zone;

    /**
     * @return The zone of the pubsub lite topic.
     * 
     */
    public Output</* @Nullable */ String> getZone() {
        return this.zone;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public LiteSubscription(String name) {
        this(name, LiteSubscriptionArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public LiteSubscription(String name, LiteSubscriptionArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public LiteSubscription(String name, LiteSubscriptionArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("gcp:pubsub/liteSubscription:LiteSubscription", name, args == null ? LiteSubscriptionArgs.Empty : args, makeResourceOptions(options, Output.empty()));
    }

    private LiteSubscription(String name, Output<String> id, @Nullable LiteSubscriptionState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("gcp:pubsub/liteSubscription:LiteSubscription", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static LiteSubscription get(String name, Output<String> id, @Nullable LiteSubscriptionState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new LiteSubscription(name, id, state, options);
    }
}
