// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.bigtable.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import io.pulumi.gcp.bigtable.inputs.TableColumnFamilyGetArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class TableState extends io.pulumi.resources.ResourceArgs {

    public static final TableState Empty = new TableState();

    @InputImport(name="columnFamilies")
    private final @Nullable Input<List<TableColumnFamilyGetArgs>> columnFamilies;

    public Input<List<TableColumnFamilyGetArgs>> getColumnFamilies() {
        return this.columnFamilies == null ? Input.empty() : this.columnFamilies;
    }

    @InputImport(name="instanceName")
    private final @Nullable Input<String> instanceName;

    public Input<String> getInstanceName() {
        return this.instanceName == null ? Input.empty() : this.instanceName;
    }

    @InputImport(name="name")
    private final @Nullable Input<String> name;

    public Input<String> getName() {
        return this.name == null ? Input.empty() : this.name;
    }

    @InputImport(name="project")
    private final @Nullable Input<String> project;

    public Input<String> getProject() {
        return this.project == null ? Input.empty() : this.project;
    }

    @InputImport(name="splitKeys")
    private final @Nullable Input<List<String>> splitKeys;

    public Input<List<String>> getSplitKeys() {
        return this.splitKeys == null ? Input.empty() : this.splitKeys;
    }

    public TableState(
        @Nullable Input<List<TableColumnFamilyGetArgs>> columnFamilies,
        @Nullable Input<String> instanceName,
        @Nullable Input<String> name,
        @Nullable Input<String> project,
        @Nullable Input<List<String>> splitKeys) {
        this.columnFamilies = columnFamilies;
        this.instanceName = instanceName;
        this.name = name;
        this.project = project;
        this.splitKeys = splitKeys;
    }

    private TableState() {
        this.columnFamilies = Input.empty();
        this.instanceName = Input.empty();
        this.name = Input.empty();
        this.project = Input.empty();
        this.splitKeys = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TableState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<List<TableColumnFamilyGetArgs>> columnFamilies;
        private @Nullable Input<String> instanceName;
        private @Nullable Input<String> name;
        private @Nullable Input<String> project;
        private @Nullable Input<List<String>> splitKeys;

        public Builder() {
    	      // Empty
        }

        public Builder(TableState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.columnFamilies = defaults.columnFamilies;
    	      this.instanceName = defaults.instanceName;
    	      this.name = defaults.name;
    	      this.project = defaults.project;
    	      this.splitKeys = defaults.splitKeys;
        }

        public Builder setColumnFamilies(@Nullable Input<List<TableColumnFamilyGetArgs>> columnFamilies) {
            this.columnFamilies = columnFamilies;
            return this;
        }

        public Builder setColumnFamilies(@Nullable List<TableColumnFamilyGetArgs> columnFamilies) {
            this.columnFamilies = Input.ofNullable(columnFamilies);
            return this;
        }

        public Builder setInstanceName(@Nullable Input<String> instanceName) {
            this.instanceName = instanceName;
            return this;
        }

        public Builder setInstanceName(@Nullable String instanceName) {
            this.instanceName = Input.ofNullable(instanceName);
            return this;
        }

        public Builder setName(@Nullable Input<String> name) {
            this.name = name;
            return this;
        }

        public Builder setName(@Nullable String name) {
            this.name = Input.ofNullable(name);
            return this;
        }

        public Builder setProject(@Nullable Input<String> project) {
            this.project = project;
            return this;
        }

        public Builder setProject(@Nullable String project) {
            this.project = Input.ofNullable(project);
            return this;
        }

        public Builder setSplitKeys(@Nullable Input<List<String>> splitKeys) {
            this.splitKeys = splitKeys;
            return this;
        }

        public Builder setSplitKeys(@Nullable List<String> splitKeys) {
            this.splitKeys = Input.ofNullable(splitKeys);
            return this;
        }

        public TableState build() {
            return new TableState(columnFamilies, instanceName, name, project, splitKeys);
        }
    }
}
