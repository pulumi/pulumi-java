// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.vertex.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import io.pulumi.gcp.vertex.inputs.AiDatasetEncryptionSpecGetArgs;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class AiDatasetState extends io.pulumi.resources.ResourceArgs {

    public static final AiDatasetState Empty = new AiDatasetState();

    @InputImport(name="createTime")
    private final @Nullable Input<String> createTime;

    public Input<String> getCreateTime() {
        return this.createTime == null ? Input.empty() : this.createTime;
    }

    @InputImport(name="displayName")
    private final @Nullable Input<String> displayName;

    public Input<String> getDisplayName() {
        return this.displayName == null ? Input.empty() : this.displayName;
    }

    @InputImport(name="encryptionSpec")
    private final @Nullable Input<AiDatasetEncryptionSpecGetArgs> encryptionSpec;

    public Input<AiDatasetEncryptionSpecGetArgs> getEncryptionSpec() {
        return this.encryptionSpec == null ? Input.empty() : this.encryptionSpec;
    }

    @InputImport(name="labels")
    private final @Nullable Input<Map<String,String>> labels;

    public Input<Map<String,String>> getLabels() {
        return this.labels == null ? Input.empty() : this.labels;
    }

    @InputImport(name="metadataSchemaUri")
    private final @Nullable Input<String> metadataSchemaUri;

    public Input<String> getMetadataSchemaUri() {
        return this.metadataSchemaUri == null ? Input.empty() : this.metadataSchemaUri;
    }

    @InputImport(name="name")
    private final @Nullable Input<String> name;

    public Input<String> getName() {
        return this.name == null ? Input.empty() : this.name;
    }

    @InputImport(name="project")
    private final @Nullable Input<String> project;

    public Input<String> getProject() {
        return this.project == null ? Input.empty() : this.project;
    }

    @InputImport(name="region")
    private final @Nullable Input<String> region;

    public Input<String> getRegion() {
        return this.region == null ? Input.empty() : this.region;
    }

    @InputImport(name="updateTime")
    private final @Nullable Input<String> updateTime;

    public Input<String> getUpdateTime() {
        return this.updateTime == null ? Input.empty() : this.updateTime;
    }

    public AiDatasetState(
        @Nullable Input<String> createTime,
        @Nullable Input<String> displayName,
        @Nullable Input<AiDatasetEncryptionSpecGetArgs> encryptionSpec,
        @Nullable Input<Map<String,String>> labels,
        @Nullable Input<String> metadataSchemaUri,
        @Nullable Input<String> name,
        @Nullable Input<String> project,
        @Nullable Input<String> region,
        @Nullable Input<String> updateTime) {
        this.createTime = createTime;
        this.displayName = displayName;
        this.encryptionSpec = encryptionSpec;
        this.labels = labels;
        this.metadataSchemaUri = metadataSchemaUri;
        this.name = name;
        this.project = project;
        this.region = region;
        this.updateTime = updateTime;
    }

    private AiDatasetState() {
        this.createTime = Input.empty();
        this.displayName = Input.empty();
        this.encryptionSpec = Input.empty();
        this.labels = Input.empty();
        this.metadataSchemaUri = Input.empty();
        this.name = Input.empty();
        this.project = Input.empty();
        this.region = Input.empty();
        this.updateTime = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AiDatasetState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> createTime;
        private @Nullable Input<String> displayName;
        private @Nullable Input<AiDatasetEncryptionSpecGetArgs> encryptionSpec;
        private @Nullable Input<Map<String,String>> labels;
        private @Nullable Input<String> metadataSchemaUri;
        private @Nullable Input<String> name;
        private @Nullable Input<String> project;
        private @Nullable Input<String> region;
        private @Nullable Input<String> updateTime;

        public Builder() {
    	      // Empty
        }

        public Builder(AiDatasetState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.createTime = defaults.createTime;
    	      this.displayName = defaults.displayName;
    	      this.encryptionSpec = defaults.encryptionSpec;
    	      this.labels = defaults.labels;
    	      this.metadataSchemaUri = defaults.metadataSchemaUri;
    	      this.name = defaults.name;
    	      this.project = defaults.project;
    	      this.region = defaults.region;
    	      this.updateTime = defaults.updateTime;
        }

        public Builder setCreateTime(@Nullable Input<String> createTime) {
            this.createTime = createTime;
            return this;
        }

        public Builder setCreateTime(@Nullable String createTime) {
            this.createTime = Input.ofNullable(createTime);
            return this;
        }

        public Builder setDisplayName(@Nullable Input<String> displayName) {
            this.displayName = displayName;
            return this;
        }

        public Builder setDisplayName(@Nullable String displayName) {
            this.displayName = Input.ofNullable(displayName);
            return this;
        }

        public Builder setEncryptionSpec(@Nullable Input<AiDatasetEncryptionSpecGetArgs> encryptionSpec) {
            this.encryptionSpec = encryptionSpec;
            return this;
        }

        public Builder setEncryptionSpec(@Nullable AiDatasetEncryptionSpecGetArgs encryptionSpec) {
            this.encryptionSpec = Input.ofNullable(encryptionSpec);
            return this;
        }

        public Builder setLabels(@Nullable Input<Map<String,String>> labels) {
            this.labels = labels;
            return this;
        }

        public Builder setLabels(@Nullable Map<String,String> labels) {
            this.labels = Input.ofNullable(labels);
            return this;
        }

        public Builder setMetadataSchemaUri(@Nullable Input<String> metadataSchemaUri) {
            this.metadataSchemaUri = metadataSchemaUri;
            return this;
        }

        public Builder setMetadataSchemaUri(@Nullable String metadataSchemaUri) {
            this.metadataSchemaUri = Input.ofNullable(metadataSchemaUri);
            return this;
        }

        public Builder setName(@Nullable Input<String> name) {
            this.name = name;
            return this;
        }

        public Builder setName(@Nullable String name) {
            this.name = Input.ofNullable(name);
            return this;
        }

        public Builder setProject(@Nullable Input<String> project) {
            this.project = project;
            return this;
        }

        public Builder setProject(@Nullable String project) {
            this.project = Input.ofNullable(project);
            return this;
        }

        public Builder setRegion(@Nullable Input<String> region) {
            this.region = region;
            return this;
        }

        public Builder setRegion(@Nullable String region) {
            this.region = Input.ofNullable(region);
            return this;
        }

        public Builder setUpdateTime(@Nullable Input<String> updateTime) {
            this.updateTime = updateTime;
            return this;
        }

        public Builder setUpdateTime(@Nullable String updateTime) {
            this.updateTime = Input.ofNullable(updateTime);
            return this;
        }

        public AiDatasetState build() {
            return new AiDatasetState(createTime, displayName, encryptionSpec, labels, metadataSchemaUri, name, project, region, updateTime);
        }
    }
}
