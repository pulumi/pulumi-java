// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.projects;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Export;
import io.pulumi.core.annotations.ResourceType;
import io.pulumi.gcp.Utilities;
import io.pulumi.gcp.projects.ServiceIdentityArgs;
import io.pulumi.gcp.projects.inputs.ServiceIdentityState;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * Generate service identity for a service.
 * 
 * > **Note**: Once created, this resource cannot be updated or destroyed. These
 * actions are a no-op.
 * 
 * > **Note**: This resource can be used to retrieve the emails of the [Google-managed service accounts](https://cloud.google.com/iam/docs/service-agents) 
 * of the APIs that Google has configured with a Service Identity. You can run `gcloud beta services identity create --service SERVICE_NAME.googleapis.com` to
 * verify if an API supports this.
 * 
 * To get more information about Service Identity, see:
 * 
 * * [API documentation](https://cloud.google.com/service-usage/docs/reference/rest/v1beta1/services/generateServiceIdentity)
 * 
 * {{% examples %}}
 * ## Example Usage
 * {{% example %}}
 * ### Service Identity Basic
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 * 
 * const project = gcp.organizations.getProject({});
 * const hcSa = new gcp.projects.ServiceIdentity("hcSa", {
 *     project: project.then(project => project.projectId),
 *     service: "healthcare.googleapis.com",
 * }, {
 *     provider: google_beta,
 * });
 * const hcSaBqJobuser = new gcp.projects.IAMMember("hcSaBqJobuser", {
 *     project: project.then(project => project.projectId),
 *     role: "roles/bigquery.jobUser",
 *     member: pulumi.interpolate`serviceAccount:${hcSa.email}`,
 * });
 * ```
 * ```python
 * import pulumi
 * import pulumi_gcp as gcp
 * 
 * project = gcp.organizations.get_project()
 * hc_sa = gcp.projects.ServiceIdentity("hcSa",
 *     project=project.project_id,
 *     service="healthcare.googleapis.com",
 *     opts=pulumi.ResourceOptions(provider=google_beta))
 * hc_sa_bq_jobuser = gcp.projects.IAMMember("hcSaBqJobuser",
 *     project=project.project_id,
 *     role="roles/bigquery.jobUser",
 *     member=hc_sa.email.apply(lambda email: f"serviceAccount:{email}"))
 * ```
 * ```csharp
 * using Pulumi;
 * using Gcp = Pulumi.Gcp;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var project = Output.Create(Gcp.Organizations.GetProject.InvokeAsync());
 *         var hcSa = new Gcp.Projects.ServiceIdentity("hcSa", new Gcp.Projects.ServiceIdentityArgs
 *         {
 *             Project = project.Apply(project => project.ProjectId),
 *             Service = "healthcare.googleapis.com",
 *         }, new CustomResourceOptions
 *         {
 *             Provider = google_beta,
 *         });
 *         var hcSaBqJobuser = new Gcp.Projects.IAMMember("hcSaBqJobuser", new Gcp.Projects.IAMMemberArgs
 *         {
 *             Project = project.Apply(project => project.ProjectId),
 *             Role = "roles/bigquery.jobUser",
 *             Member = hcSa.Email.Apply(email => $"serviceAccount:{email}"),
 *         });
 *     }
 * 
 * }
 * ```
 * ```go
 * package main
 * 
 * import (
 * 	"fmt"
 * 
 * 	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/organizations"
 * 	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/projects"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		project, err := organizations.LookupProject(ctx, nil, nil)
 * 		if err != nil {
 * 			return err
 * 		}
 * 		hcSa, err := projects.NewServiceIdentity(ctx, "hcSa", &projects.ServiceIdentityArgs{
 * 			Project: pulumi.String(project.ProjectId),
 * 			Service: pulumi.String("healthcare.googleapis.com"),
 * 		}, pulumi.Provider(google_beta))
 * 		if err != nil {
 * 			return err
 * 		}
 * 		_, err = projects.NewIAMMember(ctx, "hcSaBqJobuser", &projects.IAMMemberArgs{
 * 			Project: pulumi.String(project.ProjectId),
 * 			Role:    pulumi.String("roles/bigquery.jobUser"),
 * 			Member: hcSa.Email.ApplyT(func(email string) (string, error) {
 * 				return fmt.Sprintf("%v%v", "serviceAccount:", email), nil
 * 			}).(pulumi.StringOutput),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * ```
 * {{% /example %}}
 * {{% /examples %}}
 * 
 * ## Import
 * 
 * This resource does not support import. 
 */
@ResourceType(type="gcp:projects/serviceIdentity:ServiceIdentity")
public class ServiceIdentity extends io.pulumi.resources.CustomResource {
    /**
     * The email address of the Google managed service account.
     * 
     */
    @Export(name="email", type=String.class, parameters={})
    private Output<String> email;

    /**
     * @return The email address of the Google managed service account.
     * 
     */
    public Output<String> getEmail() {
        return this.email;
    }
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Export(name="project", type=String.class, parameters={})
    private Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Output<String> getProject() {
        return this.project;
    }
    /**
     * The service to generate identity for.
     * 
     */
    @Export(name="service", type=String.class, parameters={})
    private Output<String> service;

    /**
     * @return The service to generate identity for.
     * 
     */
    public Output<String> getService() {
        return this.service;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ServiceIdentity(String name) {
        this(name, ServiceIdentityArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ServiceIdentity(String name, ServiceIdentityArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ServiceIdentity(String name, ServiceIdentityArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("gcp:projects/serviceIdentity:ServiceIdentity", name, args == null ? ServiceIdentityArgs.Empty : args, makeResourceOptions(options, Output.empty()));
    }

    private ServiceIdentity(String name, Output<String> id, @Nullable ServiceIdentityState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("gcp:projects/serviceIdentity:ServiceIdentity", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ServiceIdentity get(String name, Output<String> id, @Nullable ServiceIdentityState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new ServiceIdentity(name, id, state, options);
    }
}
