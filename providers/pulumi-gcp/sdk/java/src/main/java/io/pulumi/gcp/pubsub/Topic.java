// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.pubsub;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Export;
import io.pulumi.core.annotations.ResourceType;
import io.pulumi.gcp.Utilities;
import io.pulumi.gcp.pubsub.TopicArgs;
import io.pulumi.gcp.pubsub.inputs.TopicState;
import io.pulumi.gcp.pubsub.outputs.TopicMessageStoragePolicy;
import io.pulumi.gcp.pubsub.outputs.TopicSchemaSettings;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;

/**
 * A named resource to which messages are sent by publishers.
 * 
 * 
 * To get more information about Topic, see:
 * 
 * * [API documentation](https://cloud.google.com/pubsub/docs/reference/rest/v1/projects.topics)
 * * How-to Guides
 *     * [Managing Topics](https://cloud.google.com/pubsub/docs/admin#managing_topics)
 * 
 * > **Note:** You can retrieve the email of the Google Managed Pub/Sub Service Account used for forwarding 
 * by using the `gcp.projects.ServiceIdentity` resource.
 * 
 * {{% examples %}}
 * ## Example Usage
 * {{% example %}}
 * ### Pubsub Topic Basic
 * 
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 * 
 * const example = new gcp.pubsub.Topic("example", {
 *     labels: {
 *         foo: "bar",
 *     },
 *     messageRetentionDuration: "86600s",
 * });
 * ```
 * ```python
 * import pulumi
 * import pulumi_gcp as gcp
 * 
 * example = gcp.pubsub.Topic("example",
 *     labels={
 *         "foo": "bar",
 *     },
 *     message_retention_duration="86600s")
 * ```
 * ```csharp
 * using Pulumi;
 * using Gcp = Pulumi.Gcp;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var example = new Gcp.PubSub.Topic("example", new Gcp.PubSub.TopicArgs
 *         {
 *             Labels = 
 *             {
 *                 { "foo", "bar" },
 *             },
 *             MessageRetentionDuration = "86600s",
 *         });
 *     }
 * 
 * }
 * ```
 * ```go
 * package main
 * 
 * import (
 * 	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/pubsub"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		_, err := pubsub.NewTopic(ctx, "example", &pubsub.TopicArgs{
 * 			Labels: pulumi.StringMap{
 * 				"foo": pulumi.String("bar"),
 * 			},
 * 			MessageRetentionDuration: pulumi.String("86600s"),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * ```
 * {{% /example %}}
 * {{% example %}}
 * ### Pubsub Topic Cmek
 * 
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 * 
 * const keyRing = new gcp.kms.KeyRing("keyRing", {location: "global"});
 * const cryptoKey = new gcp.kms.CryptoKey("cryptoKey", {keyRing: keyRing.id});
 * const example = new gcp.pubsub.Topic("example", {kmsKeyName: cryptoKey.id});
 * ```
 * ```python
 * import pulumi
 * import pulumi_gcp as gcp
 * 
 * key_ring = gcp.kms.KeyRing("keyRing", location="global")
 * crypto_key = gcp.kms.CryptoKey("cryptoKey", key_ring=key_ring.id)
 * example = gcp.pubsub.Topic("example", kms_key_name=crypto_key.id)
 * ```
 * ```csharp
 * using Pulumi;
 * using Gcp = Pulumi.Gcp;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var keyRing = new Gcp.Kms.KeyRing("keyRing", new Gcp.Kms.KeyRingArgs
 *         {
 *             Location = "global",
 *         });
 *         var cryptoKey = new Gcp.Kms.CryptoKey("cryptoKey", new Gcp.Kms.CryptoKeyArgs
 *         {
 *             KeyRing = keyRing.Id,
 *         });
 *         var example = new Gcp.PubSub.Topic("example", new Gcp.PubSub.TopicArgs
 *         {
 *             KmsKeyName = cryptoKey.Id,
 *         });
 *     }
 * 
 * }
 * ```
 * ```go
 * package main
 * 
 * import (
 * 	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/kms"
 * 	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/pubsub"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		keyRing, err := kms.NewKeyRing(ctx, "keyRing", &kms.KeyRingArgs{
 * 			Location: pulumi.String("global"),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		cryptoKey, err := kms.NewCryptoKey(ctx, "cryptoKey", &kms.CryptoKeyArgs{
 * 			KeyRing: keyRing.ID(),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		_, err = pubsub.NewTopic(ctx, "example", &pubsub.TopicArgs{
 * 			KmsKeyName: cryptoKey.ID(),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * ```
 * {{% /example %}}
 * {{% example %}}
 * ### Pubsub Topic Geo Restricted
 * 
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 * 
 * const example = new gcp.pubsub.Topic("example", {
 *     messageStoragePolicy: {
 *         allowedPersistenceRegions: ["europe-west3"],
 *     },
 * });
 * ```
 * ```python
 * import pulumi
 * import pulumi_gcp as gcp
 * 
 * example = gcp.pubsub.Topic("example", message_storage_policy=gcp.pubsub.TopicMessageStoragePolicyArgs(
 *     allowed_persistence_regions=["europe-west3"],
 * ))
 * ```
 * ```csharp
 * using Pulumi;
 * using Gcp = Pulumi.Gcp;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var example = new Gcp.PubSub.Topic("example", new Gcp.PubSub.TopicArgs
 *         {
 *             MessageStoragePolicy = new Gcp.PubSub.Inputs.TopicMessageStoragePolicyArgs
 *             {
 *                 AllowedPersistenceRegions = 
 *                 {
 *                     "europe-west3",
 *                 },
 *             },
 *         });
 *     }
 * 
 * }
 * ```
 * ```go
 * package main
 * 
 * import (
 * 	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/pubsub"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		_, err := pubsub.NewTopic(ctx, "example", &pubsub.TopicArgs{
 * 			MessageStoragePolicy: &pubsub.TopicMessageStoragePolicyArgs{
 * 				AllowedPersistenceRegions: pulumi.StringArray{
 * 					pulumi.String("europe-west3"),
 * 				},
 * 			},
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * ```
 * {{% /example %}}
 * {{% example %}}
 * ### Pubsub Topic Schema Settings
 * 
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 * 
 * const exampleSchema = new gcp.pubsub.Schema("exampleSchema", {
 *     type: "AVRO",
 *     definition: `{
 *   "type" : "record",
 *   "name" : "Avro",
 *   "fields" : [
 *     {
 *       "name" : "StringField",
 *       "type" : "string"
 *     },
 *     {
 *       "name" : "IntField",
 *       "type" : "int"
 *     }
 *   ]
 * }
 * `,
 * });
 * const exampleTopic = new gcp.pubsub.Topic("exampleTopic", {schemaSettings: {
 *     schema: "projects/my-project-name/schemas/example",
 *     encoding: "JSON",
 * }}, {
 *     dependsOn: [exampleSchema],
 * });
 * ```
 * ```python
 * import pulumi
 * import pulumi_gcp as gcp
 * 
 * example_schema = gcp.pubsub.Schema("exampleSchema",
 *     type="AVRO",
 *     definition="""{
 *   "type" : "record",
 *   "name" : "Avro",
 *   "fields" : [
 *     {
 *       "name" : "StringField",
 *       "type" : "string"
 *     },
 *     {
 *       "name" : "IntField",
 *       "type" : "int"
 *     }
 *   ]
 * }
 * """)
 * example_topic = gcp.pubsub.Topic("exampleTopic", schema_settings=gcp.pubsub.TopicSchemaSettingsArgs(
 *     schema="projects/my-project-name/schemas/example",
 *     encoding="JSON",
 * ),
 * opts=pulumi.ResourceOptions(depends_on=[example_schema]))
 * ```
 * ```csharp
 * using Pulumi;
 * using Gcp = Pulumi.Gcp;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var exampleSchema = new Gcp.PubSub.Schema("exampleSchema", new Gcp.PubSub.SchemaArgs
 *         {
 *             Type = "AVRO",
 *             Definition = @"{
 *   ""type"" : ""record"",
 *   ""name"" : ""Avro"",
 *   ""fields"" : [
 *     {
 *       ""name"" : ""StringField"",
 *       ""type"" : ""string""
 *     },
 *     {
 *       ""name"" : ""IntField"",
 *       ""type"" : ""int""
 *     }
 *   ]
 * }
 * ",
 *         });
 *         var exampleTopic = new Gcp.PubSub.Topic("exampleTopic", new Gcp.PubSub.TopicArgs
 *         {
 *             SchemaSettings = new Gcp.PubSub.Inputs.TopicSchemaSettingsArgs
 *             {
 *                 Schema = "projects/my-project-name/schemas/example",
 *                 Encoding = "JSON",
 *             },
 *         }, new CustomResourceOptions
 *         {
 *             DependsOn = 
 *             {
 *                 exampleSchema,
 *             },
 *         });
 *     }
 * 
 * }
 * ```
 * ```go
 * package main
 * 
 * import (
 * 	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/pubsub"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		exampleSchema, err := pubsub.NewSchema(ctx, "exampleSchema", &pubsub.SchemaArgs{
 * 			Type:       pulumi.String("AVRO"),
 * 			Definition: pulumi.String("{\n  \"type\" : \"record\",\n  \"name\" : \"Avro\",\n  \"fields\" : [\n    {\n      \"name\" : \"StringField\",\n      \"type\" : \"string\"\n    },\n    {\n      \"name\" : \"IntField\",\n      \"type\" : \"int\"\n    }\n  ]\n}\n"),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		_, err = pubsub.NewTopic(ctx, "exampleTopic", &pubsub.TopicArgs{
 * 			SchemaSettings: &pubsub.TopicSchemaSettingsArgs{
 * 				Schema:   pulumi.String("projects/my-project-name/schemas/example"),
 * 				Encoding: pulumi.String("JSON"),
 * 			},
 * 		}, pulumi.DependsOn([]pulumi.Resource{
 * 			exampleSchema,
 * 		}))
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * ```
 * {{% /example %}}
 * {{% /examples %}}
 * 
 * ## Import
 * 
 * Topic can be imported using any of these accepted formats
 * 
 * ```sh
 *  $ pulumi import gcp:pubsub/topic:Topic default projects/{{project}}/topics/{{name}}
 * ```
 * 
 * 
 * 
 * ```sh
 *  $ pulumi import gcp:pubsub/topic:Topic default {{project}}/{{name}}
 * ```
 * 
 * 
 * 
 * ```sh
 *  $ pulumi import gcp:pubsub/topic:Topic default {{name}}
 * ```
 * 
 *  
 */
@ResourceType(type="gcp:pubsub/topic:Topic")
public class Topic extends io.pulumi.resources.CustomResource {
    /**
     * The resource name of the Cloud KMS CryptoKey to be used to protect access
     * to messages published on this topic. Your project's PubSub service account
     * (`service-{{PROJECT_NUMBER}}@gcp-sa-pubsub.iam.gserviceaccount.com`) must have
     * `roles/cloudkms.cryptoKeyEncrypterDecrypter` to use this feature.
     * The expected format is `projects/*{@literal /}locations/*{@literal /}keyRings/*{@literal /}cryptoKeys/*`
     * 
     */
    @Export(name="kmsKeyName", type=String.class, parameters={})
    private Output</* @Nullable */ String> kmsKeyName;

    /**
     * @return The resource name of the Cloud KMS CryptoKey to be used to protect access
     * to messages published on this topic. Your project's PubSub service account
     * (`service-{{PROJECT_NUMBER}}@gcp-sa-pubsub.iam.gserviceaccount.com`) must have
     * `roles/cloudkms.cryptoKeyEncrypterDecrypter` to use this feature.
     * The expected format is `projects/*{@literal /}locations/*{@literal /}keyRings/*{@literal /}cryptoKeys/*`
     * 
     */
    public Output</* @Nullable */ String> getKmsKeyName() {
        return this.kmsKeyName;
    }
    /**
     * A set of key/value label pairs to assign to this Topic.
     * 
     */
    @Export(name="labels", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> labels;

    /**
     * @return A set of key/value label pairs to assign to this Topic.
     * 
     */
    public Output</* @Nullable */ Map<String,String>> getLabels() {
        return this.labels;
    }
    /**
     * Indicates the minimum duration to retain a message after it is published
     * to the topic. If this field is set, messages published to the topic in
     * the last messageRetentionDuration are always available to subscribers.
     * For instance, it allows any attached subscription to seek to a timestamp
     * that is up to messageRetentionDuration in the past. If this field is not
     * set, message retention is controlled by settings on individual subscriptions.
     * Cannot be more than 7 days or less than 10 minutes.
     * 
     */
    @Export(name="messageRetentionDuration", type=String.class, parameters={})
    private Output</* @Nullable */ String> messageRetentionDuration;

    /**
     * @return Indicates the minimum duration to retain a message after it is published
     * to the topic. If this field is set, messages published to the topic in
     * the last messageRetentionDuration are always available to subscribers.
     * For instance, it allows any attached subscription to seek to a timestamp
     * that is up to messageRetentionDuration in the past. If this field is not
     * set, message retention is controlled by settings on individual subscriptions.
     * Cannot be more than 7 days or less than 10 minutes.
     * 
     */
    public Output</* @Nullable */ String> getMessageRetentionDuration() {
        return this.messageRetentionDuration;
    }
    /**
     * Policy constraining the set of Google Cloud Platform regions where
     * messages published to the topic may be stored. If not present, then no
     * constraints are in effect.
     * Structure is documented below.
     * 
     */
    @Export(name="messageStoragePolicy", type=TopicMessageStoragePolicy.class, parameters={})
    private Output<TopicMessageStoragePolicy> messageStoragePolicy;

    /**
     * @return Policy constraining the set of Google Cloud Platform regions where
     * messages published to the topic may be stored. If not present, then no
     * constraints are in effect.
     * Structure is documented below.
     * 
     */
    public Output<TopicMessageStoragePolicy> getMessageStoragePolicy() {
        return this.messageStoragePolicy;
    }
    /**
     * Name of the topic.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return Name of the topic.
     * 
     */
    public Output<String> getName() {
        return this.name;
    }
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Export(name="project", type=String.class, parameters={})
    private Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Output<String> getProject() {
        return this.project;
    }
    /**
     * Settings for validating messages published against a schema.
     * Structure is documented below.
     * 
     */
    @Export(name="schemaSettings", type=TopicSchemaSettings.class, parameters={})
    private Output<TopicSchemaSettings> schemaSettings;

    /**
     * @return Settings for validating messages published against a schema.
     * Structure is documented below.
     * 
     */
    public Output<TopicSchemaSettings> getSchemaSettings() {
        return this.schemaSettings;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Topic(String name) {
        this(name, TopicArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Topic(String name, @Nullable TopicArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Topic(String name, @Nullable TopicArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("gcp:pubsub/topic:Topic", name, args == null ? TopicArgs.Empty : args, makeResourceOptions(options, Output.empty()));
    }

    private Topic(String name, Output<String> id, @Nullable TopicState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("gcp:pubsub/topic:Topic", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Topic get(String name, Output<String> id, @Nullable TopicState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new Topic(name, id, state, options);
    }
}
