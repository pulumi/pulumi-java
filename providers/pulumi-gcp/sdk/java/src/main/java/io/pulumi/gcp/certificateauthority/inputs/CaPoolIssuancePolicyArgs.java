// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.certificateauthority.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import io.pulumi.gcp.certificateauthority.inputs.CaPoolIssuancePolicyAllowedIssuanceModesArgs;
import io.pulumi.gcp.certificateauthority.inputs.CaPoolIssuancePolicyAllowedKeyTypeArgs;
import io.pulumi.gcp.certificateauthority.inputs.CaPoolIssuancePolicyBaselineValuesArgs;
import io.pulumi.gcp.certificateauthority.inputs.CaPoolIssuancePolicyIdentityConstraintsArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class CaPoolIssuancePolicyArgs extends io.pulumi.resources.ResourceArgs {

    public static final CaPoolIssuancePolicyArgs Empty = new CaPoolIssuancePolicyArgs();

    /**
     * IssuanceModes specifies the allowed ways in which Certificates may be requested from this CaPool.
     * Structure is documented below.
     * 
     */
    @InputImport(name="allowedIssuanceModes")
    private final @Nullable Input<CaPoolIssuancePolicyAllowedIssuanceModesArgs> allowedIssuanceModes;

    public Input<CaPoolIssuancePolicyAllowedIssuanceModesArgs> getAllowedIssuanceModes() {
        return this.allowedIssuanceModes == null ? Input.empty() : this.allowedIssuanceModes;
    }

    /**
     * If any AllowedKeyType is specified, then the certificate request's public key must match one of the key types listed here.
     * Otherwise, any key may be used.
     * Structure is documented below.
     * 
     */
    @InputImport(name="allowedKeyTypes")
    private final @Nullable Input<List<CaPoolIssuancePolicyAllowedKeyTypeArgs>> allowedKeyTypes;

    public Input<List<CaPoolIssuancePolicyAllowedKeyTypeArgs>> getAllowedKeyTypes() {
        return this.allowedKeyTypes == null ? Input.empty() : this.allowedKeyTypes;
    }

    /**
     * A set of X.509 values that will be applied to all certificates issued through this CaPool. If a certificate request
     * includes conflicting values for the same properties, they will be overwritten by the values defined here. If a certificate
     * request uses a CertificateTemplate that defines conflicting predefinedValues for the same properties, the certificate
     * issuance request will fail.
     * Structure is documented below.
     * 
     */
    @InputImport(name="baselineValues")
    private final @Nullable Input<CaPoolIssuancePolicyBaselineValuesArgs> baselineValues;

    public Input<CaPoolIssuancePolicyBaselineValuesArgs> getBaselineValues() {
        return this.baselineValues == null ? Input.empty() : this.baselineValues;
    }

    /**
     * Describes constraints on identities that may appear in Certificates issued through this CaPool.
     * If this is omitted, then this CaPool will not add restrictions on a certificate's identity.
     * Structure is documented below.
     * 
     */
    @InputImport(name="identityConstraints")
    private final @Nullable Input<CaPoolIssuancePolicyIdentityConstraintsArgs> identityConstraints;

    public Input<CaPoolIssuancePolicyIdentityConstraintsArgs> getIdentityConstraints() {
        return this.identityConstraints == null ? Input.empty() : this.identityConstraints;
    }

    /**
     * The maximum lifetime allowed for issued Certificates. Note that if the issuing CertificateAuthority
     * expires before a Certificate's requested maximumLifetime, the effective lifetime will be explicitly truncated to match it.
     * 
     */
    @InputImport(name="maximumLifetime")
    private final @Nullable Input<String> maximumLifetime;

    public Input<String> getMaximumLifetime() {
        return this.maximumLifetime == null ? Input.empty() : this.maximumLifetime;
    }

    public CaPoolIssuancePolicyArgs(
        @Nullable Input<CaPoolIssuancePolicyAllowedIssuanceModesArgs> allowedIssuanceModes,
        @Nullable Input<List<CaPoolIssuancePolicyAllowedKeyTypeArgs>> allowedKeyTypes,
        @Nullable Input<CaPoolIssuancePolicyBaselineValuesArgs> baselineValues,
        @Nullable Input<CaPoolIssuancePolicyIdentityConstraintsArgs> identityConstraints,
        @Nullable Input<String> maximumLifetime) {
        this.allowedIssuanceModes = allowedIssuanceModes;
        this.allowedKeyTypes = allowedKeyTypes;
        this.baselineValues = baselineValues;
        this.identityConstraints = identityConstraints;
        this.maximumLifetime = maximumLifetime;
    }

    private CaPoolIssuancePolicyArgs() {
        this.allowedIssuanceModes = Input.empty();
        this.allowedKeyTypes = Input.empty();
        this.baselineValues = Input.empty();
        this.identityConstraints = Input.empty();
        this.maximumLifetime = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CaPoolIssuancePolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<CaPoolIssuancePolicyAllowedIssuanceModesArgs> allowedIssuanceModes;
        private @Nullable Input<List<CaPoolIssuancePolicyAllowedKeyTypeArgs>> allowedKeyTypes;
        private @Nullable Input<CaPoolIssuancePolicyBaselineValuesArgs> baselineValues;
        private @Nullable Input<CaPoolIssuancePolicyIdentityConstraintsArgs> identityConstraints;
        private @Nullable Input<String> maximumLifetime;

        public Builder() {
    	      // Empty
        }

        public Builder(CaPoolIssuancePolicyArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allowedIssuanceModes = defaults.allowedIssuanceModes;
    	      this.allowedKeyTypes = defaults.allowedKeyTypes;
    	      this.baselineValues = defaults.baselineValues;
    	      this.identityConstraints = defaults.identityConstraints;
    	      this.maximumLifetime = defaults.maximumLifetime;
        }

        public Builder setAllowedIssuanceModes(@Nullable Input<CaPoolIssuancePolicyAllowedIssuanceModesArgs> allowedIssuanceModes) {
            this.allowedIssuanceModes = allowedIssuanceModes;
            return this;
        }

        public Builder setAllowedIssuanceModes(@Nullable CaPoolIssuancePolicyAllowedIssuanceModesArgs allowedIssuanceModes) {
            this.allowedIssuanceModes = Input.ofNullable(allowedIssuanceModes);
            return this;
        }

        public Builder setAllowedKeyTypes(@Nullable Input<List<CaPoolIssuancePolicyAllowedKeyTypeArgs>> allowedKeyTypes) {
            this.allowedKeyTypes = allowedKeyTypes;
            return this;
        }

        public Builder setAllowedKeyTypes(@Nullable List<CaPoolIssuancePolicyAllowedKeyTypeArgs> allowedKeyTypes) {
            this.allowedKeyTypes = Input.ofNullable(allowedKeyTypes);
            return this;
        }

        public Builder setBaselineValues(@Nullable Input<CaPoolIssuancePolicyBaselineValuesArgs> baselineValues) {
            this.baselineValues = baselineValues;
            return this;
        }

        public Builder setBaselineValues(@Nullable CaPoolIssuancePolicyBaselineValuesArgs baselineValues) {
            this.baselineValues = Input.ofNullable(baselineValues);
            return this;
        }

        public Builder setIdentityConstraints(@Nullable Input<CaPoolIssuancePolicyIdentityConstraintsArgs> identityConstraints) {
            this.identityConstraints = identityConstraints;
            return this;
        }

        public Builder setIdentityConstraints(@Nullable CaPoolIssuancePolicyIdentityConstraintsArgs identityConstraints) {
            this.identityConstraints = Input.ofNullable(identityConstraints);
            return this;
        }

        public Builder setMaximumLifetime(@Nullable Input<String> maximumLifetime) {
            this.maximumLifetime = maximumLifetime;
            return this;
        }

        public Builder setMaximumLifetime(@Nullable String maximumLifetime) {
            this.maximumLifetime = Input.ofNullable(maximumLifetime);
            return this;
        }

        public CaPoolIssuancePolicyArgs build() {
            return new CaPoolIssuancePolicyArgs(allowedIssuanceModes, allowedKeyTypes, baselineValues, identityConstraints, maximumLifetime);
        }
    }
}
