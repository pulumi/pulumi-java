// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.logging;

import io.pulumi.core.Input;
import io.pulumi.core.Output;
import io.pulumi.core.internal.annotations.OutputExport;
import io.pulumi.core.internal.annotations.ResourceType;
import io.pulumi.gcp.Utilities;
import io.pulumi.gcp.logging.MetricArgs;
import io.pulumi.gcp.logging.inputs.MetricState;
import io.pulumi.gcp.logging.outputs.MetricBucketOptions;
import io.pulumi.gcp.logging.outputs.MetricMetricDescriptor;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;

@ResourceType(type="gcp:logging/metric:Metric")
public class Metric extends io.pulumi.resources.CustomResource {
    @OutputExport(name="bucketOptions", type=MetricBucketOptions.class, parameters={})
    private Output</* @Nullable */ MetricBucketOptions> bucketOptions;

    public Output</* @Nullable */ MetricBucketOptions> getBucketOptions() {
        return this.bucketOptions;
    }
    @OutputExport(name="description", type=String.class, parameters={})
    private Output</* @Nullable */ String> description;

    public Output</* @Nullable */ String> getDescription() {
        return this.description;
    }
    @OutputExport(name="filter", type=String.class, parameters={})
    private Output<String> filter;

    public Output<String> getFilter() {
        return this.filter;
    }
    @OutputExport(name="labelExtractors", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> labelExtractors;

    public Output</* @Nullable */ Map<String,String>> getLabelExtractors() {
        return this.labelExtractors;
    }
    @OutputExport(name="metricDescriptor", type=MetricMetricDescriptor.class, parameters={})
    private Output<MetricMetricDescriptor> metricDescriptor;

    public Output<MetricMetricDescriptor> getMetricDescriptor() {
        return this.metricDescriptor;
    }
    @OutputExport(name="name", type=String.class, parameters={})
    private Output<String> name;

    public Output<String> getName() {
        return this.name;
    }
    @OutputExport(name="project", type=String.class, parameters={})
    private Output<String> project;

    public Output<String> getProject() {
        return this.project;
    }
    @OutputExport(name="valueExtractor", type=String.class, parameters={})
    private Output</* @Nullable */ String> valueExtractor;

    public Output</* @Nullable */ String> getValueExtractor() {
        return this.valueExtractor;
    }

    public Metric(String name, MetricArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("gcp:logging/metric:Metric", name, args == null ? MetricArgs.Empty : args, makeResourceOptions(options, Input.empty()));
    }

    private Metric(String name, Input<String> id, @Nullable MetricState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("gcp:logging/metric:Metric", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Input<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .setVersion(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    public static Metric get(String name, Input<String> id, @Nullable MetricState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new Metric(name, id, state, options);
    }
}
