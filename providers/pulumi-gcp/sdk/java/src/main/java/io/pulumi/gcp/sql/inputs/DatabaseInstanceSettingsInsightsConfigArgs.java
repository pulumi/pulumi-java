// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.sql.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.Integer;
import java.util.Objects;
import javax.annotation.Nullable;


public final class DatabaseInstanceSettingsInsightsConfigArgs extends io.pulumi.resources.ResourceArgs {

    public static final DatabaseInstanceSettingsInsightsConfigArgs Empty = new DatabaseInstanceSettingsInsightsConfigArgs();

    /**
     * True if Query Insights feature is enabled.
     * 
     */
    @Import(name="queryInsightsEnabled")
      private final @Nullable Output<Boolean> queryInsightsEnabled;

    public Output<Boolean> queryInsightsEnabled() {
        return this.queryInsightsEnabled == null ? Codegen.empty() : this.queryInsightsEnabled;
    }

    /**
     * Maximum query length stored in bytes. Between 256 and 4500. Default to 1024.
     * 
     */
    @Import(name="queryStringLength")
      private final @Nullable Output<Integer> queryStringLength;

    public Output<Integer> queryStringLength() {
        return this.queryStringLength == null ? Codegen.empty() : this.queryStringLength;
    }

    /**
     * True if Query Insights will record application tags from query when enabled.
     * 
     */
    @Import(name="recordApplicationTags")
      private final @Nullable Output<Boolean> recordApplicationTags;

    public Output<Boolean> recordApplicationTags() {
        return this.recordApplicationTags == null ? Codegen.empty() : this.recordApplicationTags;
    }

    /**
     * True if Query Insights will record client address when enabled.
     * 
     */
    @Import(name="recordClientAddress")
      private final @Nullable Output<Boolean> recordClientAddress;

    public Output<Boolean> recordClientAddress() {
        return this.recordClientAddress == null ? Codegen.empty() : this.recordClientAddress;
    }

    public DatabaseInstanceSettingsInsightsConfigArgs(
        @Nullable Output<Boolean> queryInsightsEnabled,
        @Nullable Output<Integer> queryStringLength,
        @Nullable Output<Boolean> recordApplicationTags,
        @Nullable Output<Boolean> recordClientAddress) {
        this.queryInsightsEnabled = queryInsightsEnabled;
        this.queryStringLength = queryStringLength;
        this.recordApplicationTags = recordApplicationTags;
        this.recordClientAddress = recordClientAddress;
    }

    private DatabaseInstanceSettingsInsightsConfigArgs() {
        this.queryInsightsEnabled = Codegen.empty();
        this.queryStringLength = Codegen.empty();
        this.recordApplicationTags = Codegen.empty();
        this.recordClientAddress = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DatabaseInstanceSettingsInsightsConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<Boolean> queryInsightsEnabled;
        private @Nullable Output<Integer> queryStringLength;
        private @Nullable Output<Boolean> recordApplicationTags;
        private @Nullable Output<Boolean> recordClientAddress;

        public Builder() {
    	      // Empty
        }

        public Builder(DatabaseInstanceSettingsInsightsConfigArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.queryInsightsEnabled = defaults.queryInsightsEnabled;
    	      this.queryStringLength = defaults.queryStringLength;
    	      this.recordApplicationTags = defaults.recordApplicationTags;
    	      this.recordClientAddress = defaults.recordClientAddress;
        }

        public Builder queryInsightsEnabled(@Nullable Output<Boolean> queryInsightsEnabled) {
            this.queryInsightsEnabled = queryInsightsEnabled;
            return this;
        }
        public Builder queryInsightsEnabled(@Nullable Boolean queryInsightsEnabled) {
            this.queryInsightsEnabled = Codegen.ofNullable(queryInsightsEnabled);
            return this;
        }
        public Builder queryStringLength(@Nullable Output<Integer> queryStringLength) {
            this.queryStringLength = queryStringLength;
            return this;
        }
        public Builder queryStringLength(@Nullable Integer queryStringLength) {
            this.queryStringLength = Codegen.ofNullable(queryStringLength);
            return this;
        }
        public Builder recordApplicationTags(@Nullable Output<Boolean> recordApplicationTags) {
            this.recordApplicationTags = recordApplicationTags;
            return this;
        }
        public Builder recordApplicationTags(@Nullable Boolean recordApplicationTags) {
            this.recordApplicationTags = Codegen.ofNullable(recordApplicationTags);
            return this;
        }
        public Builder recordClientAddress(@Nullable Output<Boolean> recordClientAddress) {
            this.recordClientAddress = recordClientAddress;
            return this;
        }
        public Builder recordClientAddress(@Nullable Boolean recordClientAddress) {
            this.recordClientAddress = Codegen.ofNullable(recordClientAddress);
            return this;
        }        public DatabaseInstanceSettingsInsightsConfigArgs build() {
            return new DatabaseInstanceSettingsInsightsConfigArgs(queryInsightsEnabled, queryStringLength, recordApplicationTags, recordClientAddress);
        }
    }
}
