// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.ml;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Export;
import io.pulumi.core.annotations.ResourceType;
import io.pulumi.gcp.Utilities;
import io.pulumi.gcp.ml.EngineModelArgs;
import io.pulumi.gcp.ml.inputs.EngineModelState;
import io.pulumi.gcp.ml.outputs.EngineModelDefaultVersion;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;

/**
 * Represents a machine learning solution.
 * 
 * A model can have multiple versions, each of which is a deployed, trained model
 * ready to receive prediction requests. The model itself is just a container.
 * 
 * 
 * To get more information about Model, see:
 * 
 * * [API documentation](https://cloud.google.com/ai-platform/prediction/docs/reference/rest/v1/projects.models)
 * * How-to Guides
 *     * [Official Documentation](https://cloud.google.com/ai-platform/prediction/docs/deploying-models)
 * 
 * {{% examples %}}
 * ## Example Usage
 * {{% example %}}
 * ### Ml Model Basic
 * 
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 * 
 * const defaultEngineModel = new gcp.ml.EngineModel("default", {
 *     description: "My model",
 *     regions: "us-central1",
 * });
 * ```
 * ```python
 * import pulumi
 * import pulumi_gcp as gcp
 * 
 * default = gcp.ml.EngineModel("default",
 *     description="My model",
 *     regions="us-central1")
 * ```
 * ```csharp
 * using Pulumi;
 * using Gcp = Pulumi.Gcp;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var @default = new Gcp.ML.EngineModel("default", new Gcp.ML.EngineModelArgs
 *         {
 *             Description = "My model",
 *             Regions = "us-central1",
 *         });
 *     }
 * 
 * }
 * ```
 * ```go
 * package main
 * 
 * import (
 * 	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/ml"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		_, err := ml.NewEngineModel(ctx, "default", &ml.EngineModelArgs{
 * 			Description: pulumi.String("My model"),
 * 			Regions:     pulumi.String("us-central1"),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * ```
 * {{% /example %}}
 * {{% example %}}
 * ### Ml Model Full
 * 
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 * 
 * const defaultEngineModel = new gcp.ml.EngineModel("default", {
 *     description: "My model",
 *     labels: {
 *         my_model: "foo",
 *     },
 *     onlinePredictionConsoleLogging: true,
 *     onlinePredictionLogging: true,
 *     regions: "us-central1",
 * });
 * ```
 * ```python
 * import pulumi
 * import pulumi_gcp as gcp
 * 
 * default = gcp.ml.EngineModel("default",
 *     description="My model",
 *     labels={
 *         "my_model": "foo",
 *     },
 *     online_prediction_console_logging=True,
 *     online_prediction_logging=True,
 *     regions="us-central1")
 * ```
 * ```csharp
 * using Pulumi;
 * using Gcp = Pulumi.Gcp;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var @default = new Gcp.ML.EngineModel("default", new Gcp.ML.EngineModelArgs
 *         {
 *             Description = "My model",
 *             Labels = 
 *             {
 *                 { "my_model", "foo" },
 *             },
 *             OnlinePredictionConsoleLogging = true,
 *             OnlinePredictionLogging = true,
 *             Regions = "us-central1",
 *         });
 *     }
 * 
 * }
 * ```
 * ```go
 * package main
 * 
 * import (
 * 	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/ml"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		_, err := ml.NewEngineModel(ctx, "default", &ml.EngineModelArgs{
 * 			Description: pulumi.String("My model"),
 * 			Labels: pulumi.StringMap{
 * 				"my_model": pulumi.String("foo"),
 * 			},
 * 			OnlinePredictionConsoleLogging: pulumi.Bool(true),
 * 			OnlinePredictionLogging:        pulumi.Bool(true),
 * 			Regions:                        pulumi.String("us-central1"),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * ```
 * {{% /example %}}
 * {{% /examples %}}
 * 
 * ## Import
 * 
 * Model can be imported using any of these accepted formats
 * 
 * ```sh
 *  $ pulumi import gcp:ml/engineModel:EngineModel default projects/{{project}}/models/{{name}}
 * ```
 * 
 * 
 * 
 * ```sh
 *  $ pulumi import gcp:ml/engineModel:EngineModel default {{project}}/{{name}}
 * ```
 * 
 * 
 * 
 * ```sh
 *  $ pulumi import gcp:ml/engineModel:EngineModel default {{name}}
 * ```
 * 
 *  
 */
@ResourceType(type="gcp:ml/engineModel:EngineModel")
public class EngineModel extends io.pulumi.resources.CustomResource {
    /**
     * The default version of the model. This version will be used to handle
     * prediction requests that do not specify a version.
     * Structure is documented below.
     * 
     */
    @Export(name="defaultVersion", type=EngineModelDefaultVersion.class, parameters={})
    private Output</* @Nullable */ EngineModelDefaultVersion> defaultVersion;

    /**
     * @return The default version of the model. This version will be used to handle
     * prediction requests that do not specify a version.
     * Structure is documented below.
     * 
     */
    public Output</* @Nullable */ EngineModelDefaultVersion> getDefaultVersion() {
        return this.defaultVersion;
    }
    /**
     * The description specified for the model when it was created.
     * 
     */
    @Export(name="description", type=String.class, parameters={})
    private Output</* @Nullable */ String> description;

    /**
     * @return The description specified for the model when it was created.
     * 
     */
    public Output</* @Nullable */ String> getDescription() {
        return this.description;
    }
    /**
     * One or more labels that you can add, to organize your models.
     * 
     */
    @Export(name="labels", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> labels;

    /**
     * @return One or more labels that you can add, to organize your models.
     * 
     */
    public Output</* @Nullable */ Map<String,String>> getLabels() {
        return this.labels;
    }
    /**
     * The name specified for the version when it was created.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The name specified for the version when it was created.
     * 
     */
    public Output<String> getName() {
        return this.name;
    }
    /**
     * If true, online prediction nodes send stderr and stdout streams to Stackdriver Logging
     * 
     */
    @Export(name="onlinePredictionConsoleLogging", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> onlinePredictionConsoleLogging;

    /**
     * @return If true, online prediction nodes send stderr and stdout streams to Stackdriver Logging
     * 
     */
    public Output</* @Nullable */ Boolean> getOnlinePredictionConsoleLogging() {
        return this.onlinePredictionConsoleLogging;
    }
    /**
     * If true, online prediction access logs are sent to StackDriver Logging.
     * 
     */
    @Export(name="onlinePredictionLogging", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> onlinePredictionLogging;

    /**
     * @return If true, online prediction access logs are sent to StackDriver Logging.
     * 
     */
    public Output</* @Nullable */ Boolean> getOnlinePredictionLogging() {
        return this.onlinePredictionLogging;
    }
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Export(name="project", type=String.class, parameters={})
    private Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Output<String> getProject() {
        return this.project;
    }
    /**
     * The list of regions where the model is going to be deployed.
     * Currently only one region per model is supported
     * 
     */
    @Export(name="regions", type=String.class, parameters={})
    private Output</* @Nullable */ String> regions;

    /**
     * @return The list of regions where the model is going to be deployed.
     * Currently only one region per model is supported
     * 
     */
    public Output</* @Nullable */ String> getRegions() {
        return this.regions;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public EngineModel(String name) {
        this(name, EngineModelArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public EngineModel(String name, @Nullable EngineModelArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public EngineModel(String name, @Nullable EngineModelArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("gcp:ml/engineModel:EngineModel", name, args == null ? EngineModelArgs.Empty : args, makeResourceOptions(options, Output.empty()));
    }

    private EngineModel(String name, Output<String> id, @Nullable EngineModelState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("gcp:ml/engineModel:EngineModel", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static EngineModel get(String name, Output<String> id, @Nullable EngineModelState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new EngineModel(name, id, state, options);
    }
}
