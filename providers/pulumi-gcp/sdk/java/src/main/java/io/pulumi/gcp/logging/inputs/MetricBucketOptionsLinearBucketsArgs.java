// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.logging.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.Double;
import java.lang.Integer;
import java.util.Objects;
import javax.annotation.Nullable;


public final class MetricBucketOptionsLinearBucketsArgs extends io.pulumi.resources.ResourceArgs {

    public static final MetricBucketOptionsLinearBucketsArgs Empty = new MetricBucketOptionsLinearBucketsArgs();

    /**
     * Must be greater than 0.
     * 
     */
    @Import(name="numFiniteBuckets")
      private final @Nullable Output<Integer> numFiniteBuckets;

    public Output<Integer> getNumFiniteBuckets() {
        return this.numFiniteBuckets == null ? Codegen.empty() : this.numFiniteBuckets;
    }

    /**
     * Lower bound of the first bucket.
     * 
     */
    @Import(name="offset")
      private final @Nullable Output<Double> offset;

    public Output<Double> getOffset() {
        return this.offset == null ? Codegen.empty() : this.offset;
    }

    /**
     * Must be greater than 0.
     * 
     */
    @Import(name="width")
      private final @Nullable Output<Double> width;

    public Output<Double> getWidth() {
        return this.width == null ? Codegen.empty() : this.width;
    }

    public MetricBucketOptionsLinearBucketsArgs(
        @Nullable Output<Integer> numFiniteBuckets,
        @Nullable Output<Double> offset,
        @Nullable Output<Double> width) {
        this.numFiniteBuckets = numFiniteBuckets;
        this.offset = offset;
        this.width = width;
    }

    private MetricBucketOptionsLinearBucketsArgs() {
        this.numFiniteBuckets = Codegen.empty();
        this.offset = Codegen.empty();
        this.width = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MetricBucketOptionsLinearBucketsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<Integer> numFiniteBuckets;
        private @Nullable Output<Double> offset;
        private @Nullable Output<Double> width;

        public Builder() {
    	      // Empty
        }

        public Builder(MetricBucketOptionsLinearBucketsArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.numFiniteBuckets = defaults.numFiniteBuckets;
    	      this.offset = defaults.offset;
    	      this.width = defaults.width;
        }

        public Builder numFiniteBuckets(@Nullable Output<Integer> numFiniteBuckets) {
            this.numFiniteBuckets = numFiniteBuckets;
            return this;
        }
        public Builder numFiniteBuckets(@Nullable Integer numFiniteBuckets) {
            this.numFiniteBuckets = Codegen.ofNullable(numFiniteBuckets);
            return this;
        }
        public Builder offset(@Nullable Output<Double> offset) {
            this.offset = offset;
            return this;
        }
        public Builder offset(@Nullable Double offset) {
            this.offset = Codegen.ofNullable(offset);
            return this;
        }
        public Builder width(@Nullable Output<Double> width) {
            this.width = width;
            return this;
        }
        public Builder width(@Nullable Double width) {
            this.width = Codegen.ofNullable(width);
            return this;
        }        public MetricBucketOptionsLinearBucketsArgs build() {
            return new MetricBucketOptionsLinearBucketsArgs(numFiniteBuckets, offset, width);
        }
    }
}
