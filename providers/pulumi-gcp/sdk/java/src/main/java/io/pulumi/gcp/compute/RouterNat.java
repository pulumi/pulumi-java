// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.compute;

import io.pulumi.core.Input;
import io.pulumi.core.Output;
import io.pulumi.core.internal.annotations.OutputExport;
import io.pulumi.core.internal.annotations.ResourceType;
import io.pulumi.gcp.Utilities;
import io.pulumi.gcp.compute.RouterNatArgs;
import io.pulumi.gcp.compute.inputs.RouterNatState;
import io.pulumi.gcp.compute.outputs.RouterNatLogConfig;
import io.pulumi.gcp.compute.outputs.RouterNatSubnetwork;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

@ResourceType(type="gcp:compute/routerNat:RouterNat")
public class RouterNat extends io.pulumi.resources.CustomResource {
    @OutputExport(name="drainNatIps", type=List.class, parameters={String.class})
    private Output</* @Nullable */ List<String>> drainNatIps;

    public Output</* @Nullable */ List<String>> getDrainNatIps() {
        return this.drainNatIps;
    }
    @OutputExport(name="enableEndpointIndependentMapping", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> enableEndpointIndependentMapping;

    public Output</* @Nullable */ Boolean> getEnableEndpointIndependentMapping() {
        return this.enableEndpointIndependentMapping;
    }
    @OutputExport(name="icmpIdleTimeoutSec", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> icmpIdleTimeoutSec;

    public Output</* @Nullable */ Integer> getIcmpIdleTimeoutSec() {
        return this.icmpIdleTimeoutSec;
    }
    @OutputExport(name="logConfig", type=RouterNatLogConfig.class, parameters={})
    private Output</* @Nullable */ RouterNatLogConfig> logConfig;

    public Output</* @Nullable */ RouterNatLogConfig> getLogConfig() {
        return this.logConfig;
    }
    @OutputExport(name="minPortsPerVm", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> minPortsPerVm;

    public Output</* @Nullable */ Integer> getMinPortsPerVm() {
        return this.minPortsPerVm;
    }
    @OutputExport(name="name", type=String.class, parameters={})
    private Output<String> name;

    public Output<String> getName() {
        return this.name;
    }
    @OutputExport(name="natIpAllocateOption", type=String.class, parameters={})
    private Output<String> natIpAllocateOption;

    public Output<String> getNatIpAllocateOption() {
        return this.natIpAllocateOption;
    }
    @OutputExport(name="natIps", type=List.class, parameters={String.class})
    private Output</* @Nullable */ List<String>> natIps;

    public Output</* @Nullable */ List<String>> getNatIps() {
        return this.natIps;
    }
    @OutputExport(name="project", type=String.class, parameters={})
    private Output<String> project;

    public Output<String> getProject() {
        return this.project;
    }
    @OutputExport(name="region", type=String.class, parameters={})
    private Output<String> region;

    public Output<String> getRegion() {
        return this.region;
    }
    @OutputExport(name="router", type=String.class, parameters={})
    private Output<String> router;

    public Output<String> getRouter() {
        return this.router;
    }
    @OutputExport(name="sourceSubnetworkIpRangesToNat", type=String.class, parameters={})
    private Output<String> sourceSubnetworkIpRangesToNat;

    public Output<String> getSourceSubnetworkIpRangesToNat() {
        return this.sourceSubnetworkIpRangesToNat;
    }
    @OutputExport(name="subnetworks", type=List.class, parameters={RouterNatSubnetwork.class})
    private Output</* @Nullable */ List<RouterNatSubnetwork>> subnetworks;

    public Output</* @Nullable */ List<RouterNatSubnetwork>> getSubnetworks() {
        return this.subnetworks;
    }
    @OutputExport(name="tcpEstablishedIdleTimeoutSec", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> tcpEstablishedIdleTimeoutSec;

    public Output</* @Nullable */ Integer> getTcpEstablishedIdleTimeoutSec() {
        return this.tcpEstablishedIdleTimeoutSec;
    }
    @OutputExport(name="tcpTransitoryIdleTimeoutSec", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> tcpTransitoryIdleTimeoutSec;

    public Output</* @Nullable */ Integer> getTcpTransitoryIdleTimeoutSec() {
        return this.tcpTransitoryIdleTimeoutSec;
    }
    @OutputExport(name="udpIdleTimeoutSec", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> udpIdleTimeoutSec;

    public Output</* @Nullable */ Integer> getUdpIdleTimeoutSec() {
        return this.udpIdleTimeoutSec;
    }

    public RouterNat(String name, RouterNatArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("gcp:compute/routerNat:RouterNat", name, args == null ? RouterNatArgs.Empty : args, makeResourceOptions(options, Input.empty()));
    }

    private RouterNat(String name, Input<String> id, @Nullable RouterNatState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("gcp:compute/routerNat:RouterNat", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Input<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .setVersion(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    public static RouterNat get(String name, Input<String> id, @Nullable RouterNatState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new RouterNat(name, id, state, options);
    }
}
