// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.filestore.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import io.pulumi.gcp.filestore.inputs.InstanceFileSharesNfsExportOptionGetArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class InstanceFileSharesGetArgs extends io.pulumi.resources.ResourceArgs {

    public static final InstanceFileSharesGetArgs Empty = new InstanceFileSharesGetArgs();

    /**
     * File share capacity in GiB. This must be at least 1024 GiB
     * for the standard tier, or 2560 GiB for the premium tier.
     * 
     */
    @InputImport(name="capacityGb", required=true)
      private final Input<Integer> capacityGb;

    public Input<Integer> getCapacityGb() {
        return this.capacityGb;
    }

    /**
     * The name of the fileshare (16 characters or less)
     * 
     */
    @InputImport(name="name", required=true)
      private final Input<String> name;

    public Input<String> getName() {
        return this.name;
    }

    /**
     * Nfs Export Options. There is a limit of 10 export options per file share.
     * Structure is documented below.
     * 
     */
    @InputImport(name="nfsExportOptions")
      private final @Nullable Input<List<InstanceFileSharesNfsExportOptionGetArgs>> nfsExportOptions;

    public Input<List<InstanceFileSharesNfsExportOptionGetArgs>> getNfsExportOptions() {
        return this.nfsExportOptions == null ? Input.empty() : this.nfsExportOptions;
    }

    public InstanceFileSharesGetArgs(
        Input<Integer> capacityGb,
        Input<String> name,
        @Nullable Input<List<InstanceFileSharesNfsExportOptionGetArgs>> nfsExportOptions) {
        this.capacityGb = Objects.requireNonNull(capacityGb, "expected parameter 'capacityGb' to be non-null");
        this.name = Objects.requireNonNull(name, "expected parameter 'name' to be non-null");
        this.nfsExportOptions = nfsExportOptions;
    }

    private InstanceFileSharesGetArgs() {
        this.capacityGb = Input.empty();
        this.name = Input.empty();
        this.nfsExportOptions = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(InstanceFileSharesGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<Integer> capacityGb;
        private Input<String> name;
        private @Nullable Input<List<InstanceFileSharesNfsExportOptionGetArgs>> nfsExportOptions;

        public Builder() {
    	      // Empty
        }

        public Builder(InstanceFileSharesGetArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.capacityGb = defaults.capacityGb;
    	      this.name = defaults.name;
    	      this.nfsExportOptions = defaults.nfsExportOptions;
        }

        public Builder setCapacityGb(Input<Integer> capacityGb) {
            this.capacityGb = Objects.requireNonNull(capacityGb);
            return this;
        }

        public Builder setCapacityGb(Integer capacityGb) {
            this.capacityGb = Input.of(Objects.requireNonNull(capacityGb));
            return this;
        }

        public Builder setName(Input<String> name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setName(String name) {
            this.name = Input.of(Objects.requireNonNull(name));
            return this;
        }

        public Builder setNfsExportOptions(@Nullable Input<List<InstanceFileSharesNfsExportOptionGetArgs>> nfsExportOptions) {
            this.nfsExportOptions = nfsExportOptions;
            return this;
        }

        public Builder setNfsExportOptions(@Nullable List<InstanceFileSharesNfsExportOptionGetArgs> nfsExportOptions) {
            this.nfsExportOptions = Input.ofNullable(nfsExportOptions);
            return this;
        }
        public InstanceFileSharesGetArgs build() {
            return new InstanceFileSharesGetArgs(capacityGb, name, nfsExportOptions);
        }
    }
}
