// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.binaryauthorization;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.gcp.binaryauthorization.inputs.PolicyAdmissionWhitelistPatternArgs;
import io.pulumi.gcp.binaryauthorization.inputs.PolicyClusterAdmissionRuleArgs;
import io.pulumi.gcp.binaryauthorization.inputs.PolicyDefaultAdmissionRuleArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class PolicyArgs extends io.pulumi.resources.ResourceArgs {

    public static final PolicyArgs Empty = new PolicyArgs();

    /**
     * A whitelist of image patterns to exclude from admission rules. If an
     * image's name matches a whitelist pattern, the image's admission
     * requests will always be permitted regardless of your admission rules.
     * Structure is documented below.
     * 
     */
    @Import(name="admissionWhitelistPatterns")
      private final @Nullable Output<List<PolicyAdmissionWhitelistPatternArgs>> admissionWhitelistPatterns;

    public Output<List<PolicyAdmissionWhitelistPatternArgs>> getAdmissionWhitelistPatterns() {
        return this.admissionWhitelistPatterns == null ? Output.empty() : this.admissionWhitelistPatterns;
    }

    /**
     * Per-cluster admission rules. An admission rule specifies either that
     * all container images used in a pod creation request must be attested
     * to by one or more attestors, that all pod creations will be allowed,
     * or that all pod creations will be denied. There can be at most one
     * admission rule per cluster spec.
     * 
     */
    @Import(name="clusterAdmissionRules")
      private final @Nullable Output<List<PolicyClusterAdmissionRuleArgs>> clusterAdmissionRules;

    public Output<List<PolicyClusterAdmissionRuleArgs>> getClusterAdmissionRules() {
        return this.clusterAdmissionRules == null ? Output.empty() : this.clusterAdmissionRules;
    }

    /**
     * Default admission rule for a cluster without a per-cluster admission
     * rule.
     * Structure is documented below.
     * 
     */
    @Import(name="defaultAdmissionRule", required=true)
      private final Output<PolicyDefaultAdmissionRuleArgs> defaultAdmissionRule;

    public Output<PolicyDefaultAdmissionRuleArgs> getDefaultAdmissionRule() {
        return this.defaultAdmissionRule;
    }

    /**
     * A descriptive comment.
     * 
     */
    @Import(name="description")
      private final @Nullable Output<String> description;

    public Output<String> getDescription() {
        return this.description == null ? Output.empty() : this.description;
    }

    /**
     * Controls the evaluation of a Google-maintained global admission policy
     * for common system-level images. Images not covered by the global
     * policy will be subject to the project admission policy.
     * Possible values are `ENABLE` and `DISABLE`.
     * 
     */
    @Import(name="globalPolicyEvaluationMode")
      private final @Nullable Output<String> globalPolicyEvaluationMode;

    public Output<String> getGlobalPolicyEvaluationMode() {
        return this.globalPolicyEvaluationMode == null ? Output.empty() : this.globalPolicyEvaluationMode;
    }

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Import(name="project")
      private final @Nullable Output<String> project;

    public Output<String> getProject() {
        return this.project == null ? Output.empty() : this.project;
    }

    public PolicyArgs(
        @Nullable Output<List<PolicyAdmissionWhitelistPatternArgs>> admissionWhitelistPatterns,
        @Nullable Output<List<PolicyClusterAdmissionRuleArgs>> clusterAdmissionRules,
        Output<PolicyDefaultAdmissionRuleArgs> defaultAdmissionRule,
        @Nullable Output<String> description,
        @Nullable Output<String> globalPolicyEvaluationMode,
        @Nullable Output<String> project) {
        this.admissionWhitelistPatterns = admissionWhitelistPatterns;
        this.clusterAdmissionRules = clusterAdmissionRules;
        this.defaultAdmissionRule = Objects.requireNonNull(defaultAdmissionRule, "expected parameter 'defaultAdmissionRule' to be non-null");
        this.description = description;
        this.globalPolicyEvaluationMode = globalPolicyEvaluationMode;
        this.project = project;
    }

    private PolicyArgs() {
        this.admissionWhitelistPatterns = Output.empty();
        this.clusterAdmissionRules = Output.empty();
        this.defaultAdmissionRule = Output.empty();
        this.description = Output.empty();
        this.globalPolicyEvaluationMode = Output.empty();
        this.project = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<List<PolicyAdmissionWhitelistPatternArgs>> admissionWhitelistPatterns;
        private @Nullable Output<List<PolicyClusterAdmissionRuleArgs>> clusterAdmissionRules;
        private Output<PolicyDefaultAdmissionRuleArgs> defaultAdmissionRule;
        private @Nullable Output<String> description;
        private @Nullable Output<String> globalPolicyEvaluationMode;
        private @Nullable Output<String> project;

        public Builder() {
    	      // Empty
        }

        public Builder(PolicyArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.admissionWhitelistPatterns = defaults.admissionWhitelistPatterns;
    	      this.clusterAdmissionRules = defaults.clusterAdmissionRules;
    	      this.defaultAdmissionRule = defaults.defaultAdmissionRule;
    	      this.description = defaults.description;
    	      this.globalPolicyEvaluationMode = defaults.globalPolicyEvaluationMode;
    	      this.project = defaults.project;
        }

        public Builder admissionWhitelistPatterns(@Nullable Output<List<PolicyAdmissionWhitelistPatternArgs>> admissionWhitelistPatterns) {
            this.admissionWhitelistPatterns = admissionWhitelistPatterns;
            return this;
        }
        public Builder admissionWhitelistPatterns(@Nullable List<PolicyAdmissionWhitelistPatternArgs> admissionWhitelistPatterns) {
            this.admissionWhitelistPatterns = Output.ofNullable(admissionWhitelistPatterns);
            return this;
        }
        public Builder admissionWhitelistPatterns(PolicyAdmissionWhitelistPatternArgs... admissionWhitelistPatterns) {
            return admissionWhitelistPatterns(List.of(admissionWhitelistPatterns));
        }
        public Builder clusterAdmissionRules(@Nullable Output<List<PolicyClusterAdmissionRuleArgs>> clusterAdmissionRules) {
            this.clusterAdmissionRules = clusterAdmissionRules;
            return this;
        }
        public Builder clusterAdmissionRules(@Nullable List<PolicyClusterAdmissionRuleArgs> clusterAdmissionRules) {
            this.clusterAdmissionRules = Output.ofNullable(clusterAdmissionRules);
            return this;
        }
        public Builder clusterAdmissionRules(PolicyClusterAdmissionRuleArgs... clusterAdmissionRules) {
            return clusterAdmissionRules(List.of(clusterAdmissionRules));
        }
        public Builder defaultAdmissionRule(Output<PolicyDefaultAdmissionRuleArgs> defaultAdmissionRule) {
            this.defaultAdmissionRule = Objects.requireNonNull(defaultAdmissionRule);
            return this;
        }
        public Builder defaultAdmissionRule(PolicyDefaultAdmissionRuleArgs defaultAdmissionRule) {
            this.defaultAdmissionRule = Output.of(Objects.requireNonNull(defaultAdmissionRule));
            return this;
        }
        public Builder description(@Nullable Output<String> description) {
            this.description = description;
            return this;
        }
        public Builder description(@Nullable String description) {
            this.description = Output.ofNullable(description);
            return this;
        }
        public Builder globalPolicyEvaluationMode(@Nullable Output<String> globalPolicyEvaluationMode) {
            this.globalPolicyEvaluationMode = globalPolicyEvaluationMode;
            return this;
        }
        public Builder globalPolicyEvaluationMode(@Nullable String globalPolicyEvaluationMode) {
            this.globalPolicyEvaluationMode = Output.ofNullable(globalPolicyEvaluationMode);
            return this;
        }
        public Builder project(@Nullable Output<String> project) {
            this.project = project;
            return this;
        }
        public Builder project(@Nullable String project) {
            this.project = Output.ofNullable(project);
            return this;
        }        public PolicyArgs build() {
            return new PolicyArgs(admissionWhitelistPatterns, clusterAdmissionRules, defaultAdmissionRule, description, globalPolicyEvaluationMode, project);
        }
    }
}
