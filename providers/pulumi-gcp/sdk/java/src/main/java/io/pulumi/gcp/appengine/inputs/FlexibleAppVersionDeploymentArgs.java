// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.appengine.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.InputImport;
import io.pulumi.gcp.appengine.inputs.FlexibleAppVersionDeploymentCloudBuildOptionsArgs;
import io.pulumi.gcp.appengine.inputs.FlexibleAppVersionDeploymentContainerArgs;
import io.pulumi.gcp.appengine.inputs.FlexibleAppVersionDeploymentFileArgs;
import io.pulumi.gcp.appengine.inputs.FlexibleAppVersionDeploymentZipArgs;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class FlexibleAppVersionDeploymentArgs extends io.pulumi.resources.ResourceArgs {

    public static final FlexibleAppVersionDeploymentArgs Empty = new FlexibleAppVersionDeploymentArgs();

    /**
     * Options for the build operations performed as a part of the version deployment. Only applicable when creating a version using source code directly.
     * Structure is documented below.
     * 
     */
    @InputImport(name="cloudBuildOptions")
      private final @Nullable Output<FlexibleAppVersionDeploymentCloudBuildOptionsArgs> cloudBuildOptions;

    public Output<FlexibleAppVersionDeploymentCloudBuildOptionsArgs> getCloudBuildOptions() {
        return this.cloudBuildOptions == null ? Output.empty() : this.cloudBuildOptions;
    }

    /**
     * The Docker image for the container that runs the version.
     * Structure is documented below.
     * 
     */
    @InputImport(name="container")
      private final @Nullable Output<FlexibleAppVersionDeploymentContainerArgs> container;

    public Output<FlexibleAppVersionDeploymentContainerArgs> getContainer() {
        return this.container == null ? Output.empty() : this.container;
    }

    /**
     * Manifest of the files stored in Google Cloud Storage that are included as part of this version.
     * All files must be readable using the credentials supplied with this call.
     * Structure is documented below.
     * 
     */
    @InputImport(name="files")
      private final @Nullable Output<List<FlexibleAppVersionDeploymentFileArgs>> files;

    public Output<List<FlexibleAppVersionDeploymentFileArgs>> getFiles() {
        return this.files == null ? Output.empty() : this.files;
    }

    /**
     * Zip File
     * Structure is documented below.
     * 
     */
    @InputImport(name="zip")
      private final @Nullable Output<FlexibleAppVersionDeploymentZipArgs> zip;

    public Output<FlexibleAppVersionDeploymentZipArgs> getZip() {
        return this.zip == null ? Output.empty() : this.zip;
    }

    public FlexibleAppVersionDeploymentArgs(
        @Nullable Output<FlexibleAppVersionDeploymentCloudBuildOptionsArgs> cloudBuildOptions,
        @Nullable Output<FlexibleAppVersionDeploymentContainerArgs> container,
        @Nullable Output<List<FlexibleAppVersionDeploymentFileArgs>> files,
        @Nullable Output<FlexibleAppVersionDeploymentZipArgs> zip) {
        this.cloudBuildOptions = cloudBuildOptions;
        this.container = container;
        this.files = files;
        this.zip = zip;
    }

    private FlexibleAppVersionDeploymentArgs() {
        this.cloudBuildOptions = Output.empty();
        this.container = Output.empty();
        this.files = Output.empty();
        this.zip = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FlexibleAppVersionDeploymentArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<FlexibleAppVersionDeploymentCloudBuildOptionsArgs> cloudBuildOptions;
        private @Nullable Output<FlexibleAppVersionDeploymentContainerArgs> container;
        private @Nullable Output<List<FlexibleAppVersionDeploymentFileArgs>> files;
        private @Nullable Output<FlexibleAppVersionDeploymentZipArgs> zip;

        public Builder() {
    	      // Empty
        }

        public Builder(FlexibleAppVersionDeploymentArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cloudBuildOptions = defaults.cloudBuildOptions;
    	      this.container = defaults.container;
    	      this.files = defaults.files;
    	      this.zip = defaults.zip;
        }

        public Builder cloudBuildOptions(@Nullable Output<FlexibleAppVersionDeploymentCloudBuildOptionsArgs> cloudBuildOptions) {
            this.cloudBuildOptions = cloudBuildOptions;
            return this;
        }

        public Builder cloudBuildOptions(@Nullable FlexibleAppVersionDeploymentCloudBuildOptionsArgs cloudBuildOptions) {
            this.cloudBuildOptions = Output.ofNullable(cloudBuildOptions);
            return this;
        }

        public Builder container(@Nullable Output<FlexibleAppVersionDeploymentContainerArgs> container) {
            this.container = container;
            return this;
        }

        public Builder container(@Nullable FlexibleAppVersionDeploymentContainerArgs container) {
            this.container = Output.ofNullable(container);
            return this;
        }

        public Builder files(@Nullable Output<List<FlexibleAppVersionDeploymentFileArgs>> files) {
            this.files = files;
            return this;
        }

        public Builder files(@Nullable List<FlexibleAppVersionDeploymentFileArgs> files) {
            this.files = Output.ofNullable(files);
            return this;
        }

        public Builder zip(@Nullable Output<FlexibleAppVersionDeploymentZipArgs> zip) {
            this.zip = zip;
            return this;
        }

        public Builder zip(@Nullable FlexibleAppVersionDeploymentZipArgs zip) {
            this.zip = Output.ofNullable(zip);
            return this;
        }
        public FlexibleAppVersionDeploymentArgs build() {
            return new FlexibleAppVersionDeploymentArgs(cloudBuildOptions, container, files, zip);
        }
    }
}
