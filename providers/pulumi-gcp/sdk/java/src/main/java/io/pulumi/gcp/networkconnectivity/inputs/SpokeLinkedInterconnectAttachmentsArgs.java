// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.networkconnectivity.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class SpokeLinkedInterconnectAttachmentsArgs extends io.pulumi.resources.ResourceArgs {

    public static final SpokeLinkedInterconnectAttachmentsArgs Empty = new SpokeLinkedInterconnectAttachmentsArgs();

    /**
     * A value that controls whether site-to-site data transfer is enabled for these resources. Note that data transfer is available only in supported locations.
     * 
     */
    @InputImport(name="siteToSiteDataTransfer", required=true)
      private final Input<Boolean> siteToSiteDataTransfer;

    public Input<Boolean> getSiteToSiteDataTransfer() {
        return this.siteToSiteDataTransfer;
    }

    /**
     * The URIs of linked VPN tunnel resources.
     * 
     */
    @InputImport(name="uris", required=true)
      private final Input<List<String>> uris;

    public Input<List<String>> getUris() {
        return this.uris;
    }

    public SpokeLinkedInterconnectAttachmentsArgs(
        Input<Boolean> siteToSiteDataTransfer,
        Input<List<String>> uris) {
        this.siteToSiteDataTransfer = Objects.requireNonNull(siteToSiteDataTransfer, "expected parameter 'siteToSiteDataTransfer' to be non-null");
        this.uris = Objects.requireNonNull(uris, "expected parameter 'uris' to be non-null");
    }

    private SpokeLinkedInterconnectAttachmentsArgs() {
        this.siteToSiteDataTransfer = Input.empty();
        this.uris = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SpokeLinkedInterconnectAttachmentsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<Boolean> siteToSiteDataTransfer;
        private Input<List<String>> uris;

        public Builder() {
    	      // Empty
        }

        public Builder(SpokeLinkedInterconnectAttachmentsArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.siteToSiteDataTransfer = defaults.siteToSiteDataTransfer;
    	      this.uris = defaults.uris;
        }

        public Builder siteToSiteDataTransfer(Input<Boolean> siteToSiteDataTransfer) {
            this.siteToSiteDataTransfer = Objects.requireNonNull(siteToSiteDataTransfer);
            return this;
        }

        public Builder siteToSiteDataTransfer(Boolean siteToSiteDataTransfer) {
            this.siteToSiteDataTransfer = Input.of(Objects.requireNonNull(siteToSiteDataTransfer));
            return this;
        }

        public Builder uris(Input<List<String>> uris) {
            this.uris = Objects.requireNonNull(uris);
            return this;
        }

        public Builder uris(List<String> uris) {
            this.uris = Input.of(Objects.requireNonNull(uris));
            return this;
        }
        public SpokeLinkedInterconnectAttachmentsArgs build() {
            return new SpokeLinkedInterconnectAttachmentsArgs(siteToSiteDataTransfer, uris);
        }
    }
}
