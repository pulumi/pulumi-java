// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.compute.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class RegionBackendServiceConnectionTrackingPolicy {
    private final @Nullable String connectionPersistenceOnUnhealthyBackends;
    private final @Nullable Integer idleTimeoutSec;
    private final @Nullable String trackingMode;

    @OutputCustomType.Constructor({"connectionPersistenceOnUnhealthyBackends","idleTimeoutSec","trackingMode"})
    private RegionBackendServiceConnectionTrackingPolicy(
        @Nullable String connectionPersistenceOnUnhealthyBackends,
        @Nullable Integer idleTimeoutSec,
        @Nullable String trackingMode) {
        this.connectionPersistenceOnUnhealthyBackends = connectionPersistenceOnUnhealthyBackends;
        this.idleTimeoutSec = idleTimeoutSec;
        this.trackingMode = trackingMode;
    }

    public Optional<String> getConnectionPersistenceOnUnhealthyBackends() {
        return Optional.ofNullable(this.connectionPersistenceOnUnhealthyBackends);
    }
    public Optional<Integer> getIdleTimeoutSec() {
        return Optional.ofNullable(this.idleTimeoutSec);
    }
    public Optional<String> getTrackingMode() {
        return Optional.ofNullable(this.trackingMode);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RegionBackendServiceConnectionTrackingPolicy defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String connectionPersistenceOnUnhealthyBackends;
        private @Nullable Integer idleTimeoutSec;
        private @Nullable String trackingMode;

        public Builder() {
    	      // Empty
        }

        public Builder(RegionBackendServiceConnectionTrackingPolicy defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.connectionPersistenceOnUnhealthyBackends = defaults.connectionPersistenceOnUnhealthyBackends;
    	      this.idleTimeoutSec = defaults.idleTimeoutSec;
    	      this.trackingMode = defaults.trackingMode;
        }

        public Builder setConnectionPersistenceOnUnhealthyBackends(@Nullable String connectionPersistenceOnUnhealthyBackends) {
            this.connectionPersistenceOnUnhealthyBackends = connectionPersistenceOnUnhealthyBackends;
            return this;
        }

        public Builder setIdleTimeoutSec(@Nullable Integer idleTimeoutSec) {
            this.idleTimeoutSec = idleTimeoutSec;
            return this;
        }

        public Builder setTrackingMode(@Nullable String trackingMode) {
            this.trackingMode = trackingMode;
            return this;
        }

        public RegionBackendServiceConnectionTrackingPolicy build() {
            return new RegionBackendServiceConnectionTrackingPolicy(connectionPersistenceOnUnhealthyBackends, idleTimeoutSec, trackingMode);
        }
    }
}
