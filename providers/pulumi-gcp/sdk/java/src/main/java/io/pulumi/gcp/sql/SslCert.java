// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.sql;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Export;
import io.pulumi.core.annotations.ResourceType;
import io.pulumi.gcp.Utilities;
import io.pulumi.gcp.sql.SslCertArgs;
import io.pulumi.gcp.sql.inputs.SslCertState;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * Creates a new Google SQL SSL Cert on a Google SQL Instance. For more information, see the [official documentation](https://cloud.google.com/sql/), or the [JSON API](https://cloud.google.com/sql/docs/mysql/admin-api/v1beta4/sslCerts).
 * 
 * {{% examples %}}
 * ## Example Usage
 * {{% example %}}
 * 
 * Example creating a SQL Client Certificate.
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 * import * as random from "@pulumi/random";
 * 
 * const dbNameSuffix = new random.RandomId("dbNameSuffix", {byteLength: 4});
 * const master = new gcp.sql.DatabaseInstance("master", {
 *     databaseVersion: "MYSQL_5_7",
 *     settings: {
 *         tier: "db-f1-micro",
 *     },
 * });
 * const clientCert = new gcp.sql.SslCert("clientCert", {
 *     commonName: "client-name",
 *     instance: master.name,
 * });
 * ```
 * ```python
 * import pulumi
 * import pulumi_gcp as gcp
 * import pulumi_random as random
 * 
 * db_name_suffix = random.RandomId("dbNameSuffix", byte_length=4)
 * master = gcp.sql.DatabaseInstance("master",
 *     database_version="MYSQL_5_7",
 *     settings=gcp.sql.DatabaseInstanceSettingsArgs(
 *         tier="db-f1-micro",
 *     ))
 * client_cert = gcp.sql.SslCert("clientCert",
 *     common_name="client-name",
 *     instance=master.name)
 * ```
 * ```csharp
 * using Pulumi;
 * using Gcp = Pulumi.Gcp;
 * using Random = Pulumi.Random;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var dbNameSuffix = new Random.RandomId("dbNameSuffix", new Random.RandomIdArgs
 *         {
 *             ByteLength = 4,
 *         });
 *         var master = new Gcp.Sql.DatabaseInstance("master", new Gcp.Sql.DatabaseInstanceArgs
 *         {
 *             DatabaseVersion = "MYSQL_5_7",
 *             Settings = new Gcp.Sql.Inputs.DatabaseInstanceSettingsArgs
 *             {
 *                 Tier = "db-f1-micro",
 *             },
 *         });
 *         var clientCert = new Gcp.Sql.SslCert("clientCert", new Gcp.Sql.SslCertArgs
 *         {
 *             CommonName = "client-name",
 *             Instance = master.Name,
 *         });
 *     }
 * 
 * }
 * ```
 * ```go
 * package main
 * 
 * import (
 * 	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/sql"
 * 	"github.com/pulumi/pulumi-random/sdk/v4/go/random"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		_, err := random.NewRandomId(ctx, "dbNameSuffix", &random.RandomIdArgs{
 * 			ByteLength: pulumi.Int(4),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		master, err := sql.NewDatabaseInstance(ctx, "master", &sql.DatabaseInstanceArgs{
 * 			DatabaseVersion: pulumi.String("MYSQL_5_7"),
 * 			Settings: &sql.DatabaseInstanceSettingsArgs{
 * 				Tier: pulumi.String("db-f1-micro"),
 * 			},
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		_, err = sql.NewSslCert(ctx, "clientCert", &sql.SslCertArgs{
 * 			CommonName: pulumi.String("client-name"),
 * 			Instance:   master.Name,
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * ```
 * {{% /example %}}
 * {{% /examples %}}
 * 
 * ## Import
 * 
 * Since the contents of the certificate cannot be accessed after its creation, this resource cannot be imported. 
 */
@ResourceType(type="gcp:sql/sslCert:SslCert")
public class SslCert extends io.pulumi.resources.CustomResource {
    /**
     * The actual certificate data for this client certificate.
     * 
     */
    @Export(name="cert", type=String.class, parameters={})
    private Output<String> cert;

    /**
     * @return The actual certificate data for this client certificate.
     * 
     */
    public Output<String> getCert() {
        return this.cert;
    }
    /**
     * The serial number extracted from the certificate data.
     * 
     */
    @Export(name="certSerialNumber", type=String.class, parameters={})
    private Output<String> certSerialNumber;

    /**
     * @return The serial number extracted from the certificate data.
     * 
     */
    public Output<String> getCertSerialNumber() {
        return this.certSerialNumber;
    }
    /**
     * The common name to be used in the certificate to identify the
     * client. Constrained to [a-zA-Z.-_ ]+. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="commonName", type=String.class, parameters={})
    private Output<String> commonName;

    /**
     * @return The common name to be used in the certificate to identify the
     * client. Constrained to [a-zA-Z.-_ ]+. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> getCommonName() {
        return this.commonName;
    }
    /**
     * The time when the certificate was created in RFC 3339 format,
     * for example 2012-11-15T16:19:00.094Z.
     * 
     */
    @Export(name="createTime", type=String.class, parameters={})
    private Output<String> createTime;

    /**
     * @return The time when the certificate was created in RFC 3339 format,
     * for example 2012-11-15T16:19:00.094Z.
     * 
     */
    public Output<String> getCreateTime() {
        return this.createTime;
    }
    /**
     * The time when the certificate expires in RFC 3339 format,
     * for example 2012-11-15T16:19:00.094Z.
     * 
     */
    @Export(name="expirationTime", type=String.class, parameters={})
    private Output<String> expirationTime;

    /**
     * @return The time when the certificate expires in RFC 3339 format,
     * for example 2012-11-15T16:19:00.094Z.
     * 
     */
    public Output<String> getExpirationTime() {
        return this.expirationTime;
    }
    /**
     * The name of the Cloud SQL instance. Changing this
     * forces a new resource to be created.
     * 
     */
    @Export(name="instance", type=String.class, parameters={})
    private Output<String> instance;

    /**
     * @return The name of the Cloud SQL instance. Changing this
     * forces a new resource to be created.
     * 
     */
    public Output<String> getInstance() {
        return this.instance;
    }
    /**
     * The private key associated with the client certificate.
     * 
     */
    @Export(name="privateKey", type=String.class, parameters={})
    private Output<String> privateKey;

    /**
     * @return The private key associated with the client certificate.
     * 
     */
    public Output<String> getPrivateKey() {
        return this.privateKey;
    }
    /**
     * The ID of the project in which the resource belongs. If it
     * is not provided, the provider project is used.
     * 
     */
    @Export(name="project", type=String.class, parameters={})
    private Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs. If it
     * is not provided, the provider project is used.
     * 
     */
    public Output<String> getProject() {
        return this.project;
    }
    /**
     * The CA cert of the server this client cert was generated from.
     * 
     */
    @Export(name="serverCaCert", type=String.class, parameters={})
    private Output<String> serverCaCert;

    /**
     * @return The CA cert of the server this client cert was generated from.
     * 
     */
    public Output<String> getServerCaCert() {
        return this.serverCaCert;
    }
    /**
     * The SHA1 Fingerprint of the certificate.
     * 
     */
    @Export(name="sha1Fingerprint", type=String.class, parameters={})
    private Output<String> sha1Fingerprint;

    /**
     * @return The SHA1 Fingerprint of the certificate.
     * 
     */
    public Output<String> getSha1Fingerprint() {
        return this.sha1Fingerprint;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public SslCert(String name) {
        this(name, SslCertArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public SslCert(String name, SslCertArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public SslCert(String name, SslCertArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("gcp:sql/sslCert:SslCert", name, args == null ? SslCertArgs.Empty : args, makeResourceOptions(options, Output.empty()));
    }

    private SslCert(String name, Output<String> id, @Nullable SslCertState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("gcp:sql/sslCert:SslCert", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static SslCert get(String name, Output<String> id, @Nullable SslCertState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new SslCert(name, id, state, options);
    }
}
