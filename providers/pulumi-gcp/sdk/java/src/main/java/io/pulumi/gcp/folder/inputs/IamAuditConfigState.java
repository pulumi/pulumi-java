// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.folder.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.gcp.folder.inputs.IamAuditConfigAuditLogConfigGetArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class IamAuditConfigState extends io.pulumi.resources.ResourceArgs {

    public static final IamAuditConfigState Empty = new IamAuditConfigState();

    /**
     * The configuration for logging of each type of permission. This can be specified multiple times.
     * 
     */
    @Import(name="auditLogConfigs")
      private final @Nullable Output<List<IamAuditConfigAuditLogConfigGetArgs>> auditLogConfigs;

    public Output<List<IamAuditConfigAuditLogConfigGetArgs>> getAuditLogConfigs() {
        return this.auditLogConfigs == null ? Output.empty() : this.auditLogConfigs;
    }

    /**
     * The etag of iam policy
     * 
     */
    @Import(name="etag")
      private final @Nullable Output<String> etag;

    public Output<String> getEtag() {
        return this.etag == null ? Output.empty() : this.etag;
    }

    @Import(name="folder")
      private final @Nullable Output<String> folder;

    public Output<String> getFolder() {
        return this.folder == null ? Output.empty() : this.folder;
    }

    /**
     * Service which will be enabled for audit logging. The special value allServices covers all services.
     * 
     */
    @Import(name="service")
      private final @Nullable Output<String> service;

    public Output<String> getService() {
        return this.service == null ? Output.empty() : this.service;
    }

    public IamAuditConfigState(
        @Nullable Output<List<IamAuditConfigAuditLogConfigGetArgs>> auditLogConfigs,
        @Nullable Output<String> etag,
        @Nullable Output<String> folder,
        @Nullable Output<String> service) {
        this.auditLogConfigs = auditLogConfigs;
        this.etag = etag;
        this.folder = folder;
        this.service = service;
    }

    private IamAuditConfigState() {
        this.auditLogConfigs = Output.empty();
        this.etag = Output.empty();
        this.folder = Output.empty();
        this.service = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(IamAuditConfigState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<List<IamAuditConfigAuditLogConfigGetArgs>> auditLogConfigs;
        private @Nullable Output<String> etag;
        private @Nullable Output<String> folder;
        private @Nullable Output<String> service;

        public Builder() {
    	      // Empty
        }

        public Builder(IamAuditConfigState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.auditLogConfigs = defaults.auditLogConfigs;
    	      this.etag = defaults.etag;
    	      this.folder = defaults.folder;
    	      this.service = defaults.service;
        }

        public Builder auditLogConfigs(@Nullable Output<List<IamAuditConfigAuditLogConfigGetArgs>> auditLogConfigs) {
            this.auditLogConfigs = auditLogConfigs;
            return this;
        }

        public Builder auditLogConfigs(@Nullable List<IamAuditConfigAuditLogConfigGetArgs> auditLogConfigs) {
            this.auditLogConfigs = Output.ofNullable(auditLogConfigs);
            return this;
        }

        public Builder etag(@Nullable Output<String> etag) {
            this.etag = etag;
            return this;
        }

        public Builder etag(@Nullable String etag) {
            this.etag = Output.ofNullable(etag);
            return this;
        }

        public Builder folder(@Nullable Output<String> folder) {
            this.folder = folder;
            return this;
        }

        public Builder folder(@Nullable String folder) {
            this.folder = Output.ofNullable(folder);
            return this;
        }

        public Builder service(@Nullable Output<String> service) {
            this.service = service;
            return this;
        }

        public Builder service(@Nullable String service) {
            this.service = Output.ofNullable(service);
            return this;
        }
        public IamAuditConfigState build() {
            return new IamAuditConfigState(auditLogConfigs, etag, folder, service);
        }
    }
}
