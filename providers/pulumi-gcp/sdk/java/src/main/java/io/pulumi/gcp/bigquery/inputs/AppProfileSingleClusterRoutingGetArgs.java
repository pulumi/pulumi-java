// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.bigquery.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class AppProfileSingleClusterRoutingGetArgs extends io.pulumi.resources.ResourceArgs {

    public static final AppProfileSingleClusterRoutingGetArgs Empty = new AppProfileSingleClusterRoutingGetArgs();

    /**
     * If true, CheckAndMutateRow and ReadModifyWriteRow requests are allowed by this app profile.
     * It is unsafe to send these requests to the same table/row/column in multiple clusters.
     * 
     */
    @InputImport(name="allowTransactionalWrites")
        private final @Nullable Input<Boolean> allowTransactionalWrites;

    public Input<Boolean> getAllowTransactionalWrites() {
        return this.allowTransactionalWrites == null ? Input.empty() : this.allowTransactionalWrites;
    }

    /**
     * The cluster to which read/write requests should be routed.
     * 
     */
    @InputImport(name="clusterId", required=true)
        private final Input<String> clusterId;

    public Input<String> getClusterId() {
        return this.clusterId;
    }

    public AppProfileSingleClusterRoutingGetArgs(
        @Nullable Input<Boolean> allowTransactionalWrites,
        Input<String> clusterId) {
        this.allowTransactionalWrites = allowTransactionalWrites;
        this.clusterId = Objects.requireNonNull(clusterId, "expected parameter 'clusterId' to be non-null");
    }

    private AppProfileSingleClusterRoutingGetArgs() {
        this.allowTransactionalWrites = Input.empty();
        this.clusterId = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AppProfileSingleClusterRoutingGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<Boolean> allowTransactionalWrites;
        private Input<String> clusterId;

        public Builder() {
    	      // Empty
        }

        public Builder(AppProfileSingleClusterRoutingGetArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allowTransactionalWrites = defaults.allowTransactionalWrites;
    	      this.clusterId = defaults.clusterId;
        }

        public Builder setAllowTransactionalWrites(@Nullable Input<Boolean> allowTransactionalWrites) {
            this.allowTransactionalWrites = allowTransactionalWrites;
            return this;
        }

        public Builder setAllowTransactionalWrites(@Nullable Boolean allowTransactionalWrites) {
            this.allowTransactionalWrites = Input.ofNullable(allowTransactionalWrites);
            return this;
        }

        public Builder setClusterId(Input<String> clusterId) {
            this.clusterId = Objects.requireNonNull(clusterId);
            return this;
        }

        public Builder setClusterId(String clusterId) {
            this.clusterId = Input.of(Objects.requireNonNull(clusterId));
            return this;
        }
        public AppProfileSingleClusterRoutingGetArgs build() {
            return new AppProfileSingleClusterRoutingGetArgs(allowTransactionalWrites, clusterId);
        }
    }
}
