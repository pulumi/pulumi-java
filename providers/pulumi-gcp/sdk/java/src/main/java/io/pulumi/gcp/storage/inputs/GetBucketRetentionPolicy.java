// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.storage.inputs;

import io.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.util.Objects;


public final class GetBucketRetentionPolicy extends io.pulumi.resources.InvokeArgs {

    public static final GetBucketRetentionPolicy Empty = new GetBucketRetentionPolicy();

    @Import(name="isLocked", required=true)
      private final Boolean isLocked;

    public Boolean getIsLocked() {
        return this.isLocked;
    }

    @Import(name="retentionPeriod", required=true)
      private final Integer retentionPeriod;

    public Integer getRetentionPeriod() {
        return this.retentionPeriod;
    }

    public GetBucketRetentionPolicy(
        Boolean isLocked,
        Integer retentionPeriod) {
        this.isLocked = Objects.requireNonNull(isLocked, "expected parameter 'isLocked' to be non-null");
        this.retentionPeriod = Objects.requireNonNull(retentionPeriod, "expected parameter 'retentionPeriod' to be non-null");
    }

    private GetBucketRetentionPolicy() {
        this.isLocked = null;
        this.retentionPeriod = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetBucketRetentionPolicy defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Boolean isLocked;
        private Integer retentionPeriod;

        public Builder() {
    	      // Empty
        }

        public Builder(GetBucketRetentionPolicy defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.isLocked = defaults.isLocked;
    	      this.retentionPeriod = defaults.retentionPeriod;
        }

        public Builder isLocked(Boolean isLocked) {
            this.isLocked = Objects.requireNonNull(isLocked);
            return this;
        }
        public Builder retentionPeriod(Integer retentionPeriod) {
            this.retentionPeriod = Objects.requireNonNull(retentionPeriod);
            return this;
        }        public GetBucketRetentionPolicy build() {
            return new GetBucketRetentionPolicy(isLocked, retentionPeriod);
        }
    }
}
