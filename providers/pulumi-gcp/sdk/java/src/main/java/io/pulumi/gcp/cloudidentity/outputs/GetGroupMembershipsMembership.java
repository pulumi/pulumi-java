// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.cloudidentity.outputs;

import io.pulumi.core.annotations.OutputCustomType;
import io.pulumi.gcp.cloudidentity.outputs.GetGroupMembershipsMembershipMemberKey;
import io.pulumi.gcp.cloudidentity.outputs.GetGroupMembershipsMembershipPreferredMemberKey;
import io.pulumi.gcp.cloudidentity.outputs.GetGroupMembershipsMembershipRole;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@OutputCustomType
public final class GetGroupMembershipsMembership {
    private final String createTime;
    /**
     * The parent Group resource under which to lookup the Membership names. Must be of the form groups/{group_id}.
     * 
     */
    private final String group;
    private final List<GetGroupMembershipsMembershipMemberKey> memberKeys;
    /**
     * The name of the MembershipRole. One of OWNER, MANAGER, MEMBER.
     * 
     */
    private final String name;
    private final List<GetGroupMembershipsMembershipPreferredMemberKey> preferredMemberKeys;
    /**
     * The MembershipRoles that apply to the Membership. Structure is documented below.
     * 
     */
    private final List<GetGroupMembershipsMembershipRole> roles;
    private final String type;
    private final String updateTime;

    @OutputCustomType.Constructor({"createTime","group","memberKeys","name","preferredMemberKeys","roles","type","updateTime"})
    private GetGroupMembershipsMembership(
        String createTime,
        String group,
        List<GetGroupMembershipsMembershipMemberKey> memberKeys,
        String name,
        List<GetGroupMembershipsMembershipPreferredMemberKey> preferredMemberKeys,
        List<GetGroupMembershipsMembershipRole> roles,
        String type,
        String updateTime) {
        this.createTime = Objects.requireNonNull(createTime);
        this.group = Objects.requireNonNull(group);
        this.memberKeys = Objects.requireNonNull(memberKeys);
        this.name = Objects.requireNonNull(name);
        this.preferredMemberKeys = Objects.requireNonNull(preferredMemberKeys);
        this.roles = Objects.requireNonNull(roles);
        this.type = Objects.requireNonNull(type);
        this.updateTime = Objects.requireNonNull(updateTime);
    }

    public String getCreateTime() {
        return this.createTime;
    }
    /**
     * The parent Group resource under which to lookup the Membership names. Must be of the form groups/{group_id}.
     * 
    */
    public String getGroup() {
        return this.group;
    }
    public List<GetGroupMembershipsMembershipMemberKey> getMemberKeys() {
        return this.memberKeys;
    }
    /**
     * The name of the MembershipRole. One of OWNER, MANAGER, MEMBER.
     * 
    */
    public String getName() {
        return this.name;
    }
    public List<GetGroupMembershipsMembershipPreferredMemberKey> getPreferredMemberKeys() {
        return this.preferredMemberKeys;
    }
    /**
     * The MembershipRoles that apply to the Membership. Structure is documented below.
     * 
    */
    public List<GetGroupMembershipsMembershipRole> getRoles() {
        return this.roles;
    }
    public String getType() {
        return this.type;
    }
    public String getUpdateTime() {
        return this.updateTime;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetGroupMembershipsMembership defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String createTime;
        private String group;
        private List<GetGroupMembershipsMembershipMemberKey> memberKeys;
        private String name;
        private List<GetGroupMembershipsMembershipPreferredMemberKey> preferredMemberKeys;
        private List<GetGroupMembershipsMembershipRole> roles;
        private String type;
        private String updateTime;

        public Builder() {
    	      // Empty
        }

        public Builder(GetGroupMembershipsMembership defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.createTime = defaults.createTime;
    	      this.group = defaults.group;
    	      this.memberKeys = defaults.memberKeys;
    	      this.name = defaults.name;
    	      this.preferredMemberKeys = defaults.preferredMemberKeys;
    	      this.roles = defaults.roles;
    	      this.type = defaults.type;
    	      this.updateTime = defaults.updateTime;
        }

        public Builder setCreateTime(String createTime) {
            this.createTime = Objects.requireNonNull(createTime);
            return this;
        }

        public Builder setGroup(String group) {
            this.group = Objects.requireNonNull(group);
            return this;
        }

        public Builder setMemberKeys(List<GetGroupMembershipsMembershipMemberKey> memberKeys) {
            this.memberKeys = Objects.requireNonNull(memberKeys);
            return this;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setPreferredMemberKeys(List<GetGroupMembershipsMembershipPreferredMemberKey> preferredMemberKeys) {
            this.preferredMemberKeys = Objects.requireNonNull(preferredMemberKeys);
            return this;
        }

        public Builder setRoles(List<GetGroupMembershipsMembershipRole> roles) {
            this.roles = Objects.requireNonNull(roles);
            return this;
        }

        public Builder setType(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }

        public Builder setUpdateTime(String updateTime) {
            this.updateTime = Objects.requireNonNull(updateTime);
            return this;
        }
        public GetGroupMembershipsMembership build() {
            return new GetGroupMembershipsMembership(createTime, group, memberKeys, name, preferredMemberKeys, roles, type, updateTime);
        }
    }
}
