// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.serviceusage;

import io.pulumi.core.Input;
import io.pulumi.core.Output;
import io.pulumi.core.internal.annotations.OutputExport;
import io.pulumi.core.internal.annotations.ResourceType;
import io.pulumi.gcp.Utilities;
import io.pulumi.gcp.serviceusage.ConsumerQuotaOverrideArgs;
import io.pulumi.gcp.serviceusage.inputs.ConsumerQuotaOverrideState;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;

@ResourceType(type="gcp:serviceusage/consumerQuotaOverride:ConsumerQuotaOverride")
public class ConsumerQuotaOverride extends io.pulumi.resources.CustomResource {
    @OutputExport(name="dimensions", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> dimensions;

    public Output</* @Nullable */ Map<String,String>> getDimensions() {
        return this.dimensions;
    }
    @OutputExport(name="force", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> force;

    public Output</* @Nullable */ Boolean> getForce() {
        return this.force;
    }
    @OutputExport(name="limit", type=String.class, parameters={})
    private Output<String> limit;

    public Output<String> getLimit() {
        return this.limit;
    }
    @OutputExport(name="metric", type=String.class, parameters={})
    private Output<String> metric;

    public Output<String> getMetric() {
        return this.metric;
    }
    @OutputExport(name="name", type=String.class, parameters={})
    private Output<String> name;

    public Output<String> getName() {
        return this.name;
    }
    @OutputExport(name="overrideValue", type=String.class, parameters={})
    private Output<String> overrideValue;

    public Output<String> getOverrideValue() {
        return this.overrideValue;
    }
    @OutputExport(name="project", type=String.class, parameters={})
    private Output<String> project;

    public Output<String> getProject() {
        return this.project;
    }
    @OutputExport(name="service", type=String.class, parameters={})
    private Output<String> service;

    public Output<String> getService() {
        return this.service;
    }

    public ConsumerQuotaOverride(String name, ConsumerQuotaOverrideArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("gcp:serviceusage/consumerQuotaOverride:ConsumerQuotaOverride", name, args == null ? ConsumerQuotaOverrideArgs.Empty : args, makeResourceOptions(options, Input.empty()));
    }

    private ConsumerQuotaOverride(String name, Input<String> id, @Nullable ConsumerQuotaOverrideState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("gcp:serviceusage/consumerQuotaOverride:ConsumerQuotaOverride", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Input<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .setVersion(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    public static ConsumerQuotaOverride get(String name, Input<String> id, @Nullable ConsumerQuotaOverrideState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new ConsumerQuotaOverride(name, id, state, options);
    }
}
