// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.dataproc;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import io.pulumi.gcp.dataproc.inputs.AutoscalingPolicyBasicAlgorithmArgs;
import io.pulumi.gcp.dataproc.inputs.AutoscalingPolicySecondaryWorkerConfigArgs;
import io.pulumi.gcp.dataproc.inputs.AutoscalingPolicyWorkerConfigArgs;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class AutoscalingPolicyArgs extends io.pulumi.resources.ResourceArgs {

    public static final AutoscalingPolicyArgs Empty = new AutoscalingPolicyArgs();

    /**
     * Basic algorithm for autoscaling.
     * Structure is documented below.
     * 
     */
    @Import(name="basicAlgorithm")
      private final @Nullable Output<AutoscalingPolicyBasicAlgorithmArgs> basicAlgorithm;

    public Output<AutoscalingPolicyBasicAlgorithmArgs> getBasicAlgorithm() {
        return this.basicAlgorithm == null ? Codegen.empty() : this.basicAlgorithm;
    }

    /**
     * The  location where the autoscaling policy should reside.
     * The default value is `global`.
     * 
     */
    @Import(name="location")
      private final @Nullable Output<String> location;

    public Output<String> getLocation() {
        return this.location == null ? Codegen.empty() : this.location;
    }

    /**
     * The policy id. The id must contain only letters (a-z, A-Z), numbers (0-9), underscores (_),
     * and hyphens (-). Cannot begin or end with underscore or hyphen. Must consist of between
     * 3 and 50 characters.
     * 
     */
    @Import(name="policyId", required=true)
      private final Output<String> policyId;

    public Output<String> getPolicyId() {
        return this.policyId;
    }

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Import(name="project")
      private final @Nullable Output<String> project;

    public Output<String> getProject() {
        return this.project == null ? Codegen.empty() : this.project;
    }

    /**
     * Describes how the autoscaler will operate for secondary workers.
     * Structure is documented below.
     * 
     */
    @Import(name="secondaryWorkerConfig")
      private final @Nullable Output<AutoscalingPolicySecondaryWorkerConfigArgs> secondaryWorkerConfig;

    public Output<AutoscalingPolicySecondaryWorkerConfigArgs> getSecondaryWorkerConfig() {
        return this.secondaryWorkerConfig == null ? Codegen.empty() : this.secondaryWorkerConfig;
    }

    /**
     * Describes how the autoscaler will operate for primary workers.
     * Structure is documented below.
     * 
     */
    @Import(name="workerConfig")
      private final @Nullable Output<AutoscalingPolicyWorkerConfigArgs> workerConfig;

    public Output<AutoscalingPolicyWorkerConfigArgs> getWorkerConfig() {
        return this.workerConfig == null ? Codegen.empty() : this.workerConfig;
    }

    public AutoscalingPolicyArgs(
        @Nullable Output<AutoscalingPolicyBasicAlgorithmArgs> basicAlgorithm,
        @Nullable Output<String> location,
        Output<String> policyId,
        @Nullable Output<String> project,
        @Nullable Output<AutoscalingPolicySecondaryWorkerConfigArgs> secondaryWorkerConfig,
        @Nullable Output<AutoscalingPolicyWorkerConfigArgs> workerConfig) {
        this.basicAlgorithm = basicAlgorithm;
        this.location = location;
        this.policyId = Objects.requireNonNull(policyId, "expected parameter 'policyId' to be non-null");
        this.project = project;
        this.secondaryWorkerConfig = secondaryWorkerConfig;
        this.workerConfig = workerConfig;
    }

    private AutoscalingPolicyArgs() {
        this.basicAlgorithm = Codegen.empty();
        this.location = Codegen.empty();
        this.policyId = Codegen.empty();
        this.project = Codegen.empty();
        this.secondaryWorkerConfig = Codegen.empty();
        this.workerConfig = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AutoscalingPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<AutoscalingPolicyBasicAlgorithmArgs> basicAlgorithm;
        private @Nullable Output<String> location;
        private Output<String> policyId;
        private @Nullable Output<String> project;
        private @Nullable Output<AutoscalingPolicySecondaryWorkerConfigArgs> secondaryWorkerConfig;
        private @Nullable Output<AutoscalingPolicyWorkerConfigArgs> workerConfig;

        public Builder() {
    	      // Empty
        }

        public Builder(AutoscalingPolicyArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.basicAlgorithm = defaults.basicAlgorithm;
    	      this.location = defaults.location;
    	      this.policyId = defaults.policyId;
    	      this.project = defaults.project;
    	      this.secondaryWorkerConfig = defaults.secondaryWorkerConfig;
    	      this.workerConfig = defaults.workerConfig;
        }

        public Builder basicAlgorithm(@Nullable Output<AutoscalingPolicyBasicAlgorithmArgs> basicAlgorithm) {
            this.basicAlgorithm = basicAlgorithm;
            return this;
        }
        public Builder basicAlgorithm(@Nullable AutoscalingPolicyBasicAlgorithmArgs basicAlgorithm) {
            this.basicAlgorithm = Codegen.ofNullable(basicAlgorithm);
            return this;
        }
        public Builder location(@Nullable Output<String> location) {
            this.location = location;
            return this;
        }
        public Builder location(@Nullable String location) {
            this.location = Codegen.ofNullable(location);
            return this;
        }
        public Builder policyId(Output<String> policyId) {
            this.policyId = Objects.requireNonNull(policyId);
            return this;
        }
        public Builder policyId(String policyId) {
            this.policyId = Output.of(Objects.requireNonNull(policyId));
            return this;
        }
        public Builder project(@Nullable Output<String> project) {
            this.project = project;
            return this;
        }
        public Builder project(@Nullable String project) {
            this.project = Codegen.ofNullable(project);
            return this;
        }
        public Builder secondaryWorkerConfig(@Nullable Output<AutoscalingPolicySecondaryWorkerConfigArgs> secondaryWorkerConfig) {
            this.secondaryWorkerConfig = secondaryWorkerConfig;
            return this;
        }
        public Builder secondaryWorkerConfig(@Nullable AutoscalingPolicySecondaryWorkerConfigArgs secondaryWorkerConfig) {
            this.secondaryWorkerConfig = Codegen.ofNullable(secondaryWorkerConfig);
            return this;
        }
        public Builder workerConfig(@Nullable Output<AutoscalingPolicyWorkerConfigArgs> workerConfig) {
            this.workerConfig = workerConfig;
            return this;
        }
        public Builder workerConfig(@Nullable AutoscalingPolicyWorkerConfigArgs workerConfig) {
            this.workerConfig = Codegen.ofNullable(workerConfig);
            return this;
        }        public AutoscalingPolicyArgs build() {
            return new AutoscalingPolicyArgs(basicAlgorithm, location, policyId, project, secondaryWorkerConfig, workerConfig);
        }
    }
}
