// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.cloudbuild.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.InputImport;
import io.pulumi.gcp.cloudbuild.inputs.TriggerBuildArtifactsObjectsArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class TriggerBuildArtifactsArgs extends io.pulumi.resources.ResourceArgs {

    public static final TriggerBuildArtifactsArgs Empty = new TriggerBuildArtifactsArgs();

    /**
     * A list of images to be pushed upon the successful completion of all build steps.
     * The images will be pushed using the builder service account's credentials.
     * The digests of the pushed images will be stored in the Build resource's results field.
     * If any of the images fail to be pushed, the build is marked FAILURE.
     * 
     */
    @InputImport(name="images")
      private final @Nullable Output<List<String>> images;

    public Output<List<String>> getImages() {
        return this.images == null ? Output.empty() : this.images;
    }

    /**
     * A list of objects to be uploaded to Cloud Storage upon successful completion of all build steps.
     * Files in the workspace matching specified paths globs will be uploaded to the
     * Cloud Storage location using the builder service account's credentials.
     * The location and generation of the uploaded objects will be stored in the Build resource's results field.
     * If any objects fail to be pushed, the build is marked FAILURE.
     * Structure is documented below.
     * 
     */
    @InputImport(name="objects")
      private final @Nullable Output<TriggerBuildArtifactsObjectsArgs> objects;

    public Output<TriggerBuildArtifactsObjectsArgs> getObjects() {
        return this.objects == null ? Output.empty() : this.objects;
    }

    public TriggerBuildArtifactsArgs(
        @Nullable Output<List<String>> images,
        @Nullable Output<TriggerBuildArtifactsObjectsArgs> objects) {
        this.images = images;
        this.objects = objects;
    }

    private TriggerBuildArtifactsArgs() {
        this.images = Output.empty();
        this.objects = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TriggerBuildArtifactsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<List<String>> images;
        private @Nullable Output<TriggerBuildArtifactsObjectsArgs> objects;

        public Builder() {
    	      // Empty
        }

        public Builder(TriggerBuildArtifactsArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.images = defaults.images;
    	      this.objects = defaults.objects;
        }

        public Builder images(@Nullable Output<List<String>> images) {
            this.images = images;
            return this;
        }

        public Builder images(@Nullable List<String> images) {
            this.images = Output.ofNullable(images);
            return this;
        }

        public Builder objects(@Nullable Output<TriggerBuildArtifactsObjectsArgs> objects) {
            this.objects = objects;
            return this;
        }

        public Builder objects(@Nullable TriggerBuildArtifactsObjectsArgs objects) {
            this.objects = Output.ofNullable(objects);
            return this;
        }
        public TriggerBuildArtifactsArgs build() {
            return new TriggerBuildArtifactsArgs(images, objects);
        }
    }
}
