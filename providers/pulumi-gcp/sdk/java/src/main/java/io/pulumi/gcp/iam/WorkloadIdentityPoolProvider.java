// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.iam;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Export;
import io.pulumi.core.annotations.ResourceType;
import io.pulumi.gcp.Utilities;
import io.pulumi.gcp.iam.WorkloadIdentityPoolProviderArgs;
import io.pulumi.gcp.iam.inputs.WorkloadIdentityPoolProviderState;
import io.pulumi.gcp.iam.outputs.WorkloadIdentityPoolProviderAws;
import io.pulumi.gcp.iam.outputs.WorkloadIdentityPoolProviderOidc;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;

/**
 * A configuration for an external identity provider.
 * 
 * To get more information about WorkloadIdentityPoolProvider, see:
 * 
 * * [API documentation](https://cloud.google.com/iam/docs/reference/rest/v1beta/projects.locations.workloadIdentityPools.providers)
 * * How-to Guides
 *     * [Managing workload identity providers](https://cloud.google.com/iam/docs/manage-workload-identity-pools-providers#managing_workload_identity_providers)
 * 
 * {{% examples %}}
 * ## Example Usage
 * {{% example %}}
 * ### Iam Workload Identity Pool Provider Aws Basic
 * 
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 * 
 * const pool = new gcp.iam.WorkloadIdentityPool("pool", {workloadIdentityPoolId: "example-pool"}, {
 *     provider: google_beta,
 * });
 * const example = new gcp.iam.WorkloadIdentityPoolProvider("example", {
 *     workloadIdentityPoolId: pool.workloadIdentityPoolId,
 *     workloadIdentityPoolProviderId: "example-prvdr",
 *     aws: {
 *         accountId: "999999999999",
 *     },
 * }, {
 *     provider: google_beta,
 * });
 * ```
 * ```python
 * import pulumi
 * import pulumi_gcp as gcp
 * 
 * pool = gcp.iam.WorkloadIdentityPool("pool", workload_identity_pool_id="example-pool",
 * opts=pulumi.ResourceOptions(provider=google_beta))
 * example = gcp.iam.WorkloadIdentityPoolProvider("example",
 *     workload_identity_pool_id=pool.workload_identity_pool_id,
 *     workload_identity_pool_provider_id="example-prvdr",
 *     aws=gcp.iam.WorkloadIdentityPoolProviderAwsArgs(
 *         account_id="999999999999",
 *     ),
 *     opts=pulumi.ResourceOptions(provider=google_beta))
 * ```
 * ```csharp
 * using Pulumi;
 * using Gcp = Pulumi.Gcp;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var pool = new Gcp.Iam.WorkloadIdentityPool("pool", new Gcp.Iam.WorkloadIdentityPoolArgs
 *         {
 *             WorkloadIdentityPoolId = "example-pool",
 *         }, new CustomResourceOptions
 *         {
 *             Provider = google_beta,
 *         });
 *         var example = new Gcp.Iam.WorkloadIdentityPoolProvider("example", new Gcp.Iam.WorkloadIdentityPoolProviderArgs
 *         {
 *             WorkloadIdentityPoolId = pool.WorkloadIdentityPoolId,
 *             WorkloadIdentityPoolProviderId = "example-prvdr",
 *             Aws = new Gcp.Iam.Inputs.WorkloadIdentityPoolProviderAwsArgs
 *             {
 *                 AccountId = "999999999999",
 *             },
 *         }, new CustomResourceOptions
 *         {
 *             Provider = google_beta,
 *         });
 *     }
 * 
 * }
 * ```
 * ```go
 * package main
 * 
 * import (
 * 	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/iam"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		pool, err := iam.NewWorkloadIdentityPool(ctx, "pool", &iam.WorkloadIdentityPoolArgs{
 * 			WorkloadIdentityPoolId: pulumi.String("example-pool"),
 * 		}, pulumi.Provider(google_beta))
 * 		if err != nil {
 * 			return err
 * 		}
 * 		_, err = iam.NewWorkloadIdentityPoolProvider(ctx, "example", &iam.WorkloadIdentityPoolProviderArgs{
 * 			WorkloadIdentityPoolId:         pool.WorkloadIdentityPoolId,
 * 			WorkloadIdentityPoolProviderId: pulumi.String("example-prvdr"),
 * 			Aws: &iam.WorkloadIdentityPoolProviderAwsArgs{
 * 				AccountId: pulumi.String("999999999999"),
 * 			},
 * 		}, pulumi.Provider(google_beta))
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * ```
 * {{% /example %}}
 * {{% example %}}
 * ### Iam Workload Identity Pool Provider Aws Full
 * 
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 * 
 * const pool = new gcp.iam.WorkloadIdentityPool("pool", {workloadIdentityPoolId: "example-pool"}, {
 *     provider: google_beta,
 * });
 * const example = new gcp.iam.WorkloadIdentityPoolProvider("example", {
 *     workloadIdentityPoolId: pool.workloadIdentityPoolId,
 *     workloadIdentityPoolProviderId: "example-prvdr",
 *     displayName: "Name of provider",
 *     description: "AWS identity pool provider for automated test",
 *     disabled: true,
 *     attributeCondition: "attribute.aws_role==\"arn:aws:sts::999999999999:assumed-role/stack-eu-central-1-lambdaRole\"",
 *     attributeMapping: {
 *         "google.subject": "assertion.arn",
 *         "attribute.aws_account": "assertion.account",
 *         "attribute.environment": "assertion.arn.contains(\":instance-profile/Production\") ? \"prod\" : \"test\"",
 *     },
 *     aws: {
 *         accountId: "999999999999",
 *     },
 * }, {
 *     provider: google_beta,
 * });
 * ```
 * ```python
 * import pulumi
 * import pulumi_gcp as gcp
 * 
 * pool = gcp.iam.WorkloadIdentityPool("pool", workload_identity_pool_id="example-pool",
 * opts=pulumi.ResourceOptions(provider=google_beta))
 * example = gcp.iam.WorkloadIdentityPoolProvider("example",
 *     workload_identity_pool_id=pool.workload_identity_pool_id,
 *     workload_identity_pool_provider_id="example-prvdr",
 *     display_name="Name of provider",
 *     description="AWS identity pool provider for automated test",
 *     disabled=True,
 *     attribute_condition="attribute.aws_role==\"arn:aws:sts::999999999999:assumed-role/stack-eu-central-1-lambdaRole\"",
 *     attribute_mapping={
 *         "google.subject": "assertion.arn",
 *         "attribute.aws_account": "assertion.account",
 *         "attribute.environment": "assertion.arn.contains(\":instance-profile/Production\") ? \"prod\" : \"test\"",
 *     },
 *     aws=gcp.iam.WorkloadIdentityPoolProviderAwsArgs(
 *         account_id="999999999999",
 *     ),
 *     opts=pulumi.ResourceOptions(provider=google_beta))
 * ```
 * ```csharp
 * using Pulumi;
 * using Gcp = Pulumi.Gcp;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var pool = new Gcp.Iam.WorkloadIdentityPool("pool", new Gcp.Iam.WorkloadIdentityPoolArgs
 *         {
 *             WorkloadIdentityPoolId = "example-pool",
 *         }, new CustomResourceOptions
 *         {
 *             Provider = google_beta,
 *         });
 *         var example = new Gcp.Iam.WorkloadIdentityPoolProvider("example", new Gcp.Iam.WorkloadIdentityPoolProviderArgs
 *         {
 *             WorkloadIdentityPoolId = pool.WorkloadIdentityPoolId,
 *             WorkloadIdentityPoolProviderId = "example-prvdr",
 *             DisplayName = "Name of provider",
 *             Description = "AWS identity pool provider for automated test",
 *             Disabled = true,
 *             AttributeCondition = "attribute.aws_role==\"arn:aws:sts::999999999999:assumed-role/stack-eu-central-1-lambdaRole\"",
 *             AttributeMapping = 
 *             {
 *                 { "google.subject", "assertion.arn" },
 *                 { "attribute.aws_account", "assertion.account" },
 *                 { "attribute.environment", "assertion.arn.contains(\":instance-profile/Production\") ? \"prod\" : \"test\"" },
 *             },
 *             Aws = new Gcp.Iam.Inputs.WorkloadIdentityPoolProviderAwsArgs
 *             {
 *                 AccountId = "999999999999",
 *             },
 *         }, new CustomResourceOptions
 *         {
 *             Provider = google_beta,
 *         });
 *     }
 * 
 * }
 * ```
 * ```go
 * package main
 * 
 * import (
 * 	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/iam"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		pool, err := iam.NewWorkloadIdentityPool(ctx, "pool", &iam.WorkloadIdentityPoolArgs{
 * 			WorkloadIdentityPoolId: pulumi.String("example-pool"),
 * 		}, pulumi.Provider(google_beta))
 * 		if err != nil {
 * 			return err
 * 		}
 * 		_, err = iam.NewWorkloadIdentityPoolProvider(ctx, "example", &iam.WorkloadIdentityPoolProviderArgs{
 * 			WorkloadIdentityPoolId:         pool.WorkloadIdentityPoolId,
 * 			WorkloadIdentityPoolProviderId: pulumi.String("example-prvdr"),
 * 			DisplayName:                    pulumi.String("Name of provider"),
 * 			Description:                    pulumi.String("AWS identity pool provider for automated test"),
 * 			Disabled:                       pulumi.Bool(true),
 * 			AttributeCondition:             pulumi.String("attribute.aws_role==\"arn:aws:sts::999999999999:assumed-role/stack-eu-central-1-lambdaRole\""),
 * 			AttributeMapping: pulumi.StringMap{
 * 				"google.subject":        pulumi.String("assertion.arn"),
 * 				"attribute.aws_account": pulumi.String("assertion.account"),
 * 				"attribute.environment": pulumi.String("assertion.arn.contains(\":instance-profile/Production\") ? \"prod\" : \"test\""),
 * 			},
 * 			Aws: &iam.WorkloadIdentityPoolProviderAwsArgs{
 * 				AccountId: pulumi.String("999999999999"),
 * 			},
 * 		}, pulumi.Provider(google_beta))
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * ```
 * {{% /example %}}
 * {{% example %}}
 * ### Iam Workload Identity Pool Provider Oidc Basic
 * 
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 * 
 * const pool = new gcp.iam.WorkloadIdentityPool("pool", {workloadIdentityPoolId: "example-pool"}, {
 *     provider: google_beta,
 * });
 * const example = new gcp.iam.WorkloadIdentityPoolProvider("example", {
 *     workloadIdentityPoolId: pool.workloadIdentityPoolId,
 *     workloadIdentityPoolProviderId: "example-prvdr",
 *     attributeMapping: {
 *         "google.subject": "assertion.sub",
 *     },
 *     oidc: {
 *         issuerUri: "https://sts.windows.net/azure-tenant-id",
 *     },
 * }, {
 *     provider: google_beta,
 * });
 * ```
 * ```python
 * import pulumi
 * import pulumi_gcp as gcp
 * 
 * pool = gcp.iam.WorkloadIdentityPool("pool", workload_identity_pool_id="example-pool",
 * opts=pulumi.ResourceOptions(provider=google_beta))
 * example = gcp.iam.WorkloadIdentityPoolProvider("example",
 *     workload_identity_pool_id=pool.workload_identity_pool_id,
 *     workload_identity_pool_provider_id="example-prvdr",
 *     attribute_mapping={
 *         "google.subject": "assertion.sub",
 *     },
 *     oidc=gcp.iam.WorkloadIdentityPoolProviderOidcArgs(
 *         issuer_uri="https://sts.windows.net/azure-tenant-id",
 *     ),
 *     opts=pulumi.ResourceOptions(provider=google_beta))
 * ```
 * ```csharp
 * using Pulumi;
 * using Gcp = Pulumi.Gcp;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var pool = new Gcp.Iam.WorkloadIdentityPool("pool", new Gcp.Iam.WorkloadIdentityPoolArgs
 *         {
 *             WorkloadIdentityPoolId = "example-pool",
 *         }, new CustomResourceOptions
 *         {
 *             Provider = google_beta,
 *         });
 *         var example = new Gcp.Iam.WorkloadIdentityPoolProvider("example", new Gcp.Iam.WorkloadIdentityPoolProviderArgs
 *         {
 *             WorkloadIdentityPoolId = pool.WorkloadIdentityPoolId,
 *             WorkloadIdentityPoolProviderId = "example-prvdr",
 *             AttributeMapping = 
 *             {
 *                 { "google.subject", "assertion.sub" },
 *             },
 *             Oidc = new Gcp.Iam.Inputs.WorkloadIdentityPoolProviderOidcArgs
 *             {
 *                 IssuerUri = "https://sts.windows.net/azure-tenant-id",
 *             },
 *         }, new CustomResourceOptions
 *         {
 *             Provider = google_beta,
 *         });
 *     }
 * 
 * }
 * ```
 * ```go
 * package main
 * 
 * import (
 * 	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/iam"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		pool, err := iam.NewWorkloadIdentityPool(ctx, "pool", &iam.WorkloadIdentityPoolArgs{
 * 			WorkloadIdentityPoolId: pulumi.String("example-pool"),
 * 		}, pulumi.Provider(google_beta))
 * 		if err != nil {
 * 			return err
 * 		}
 * 		_, err = iam.NewWorkloadIdentityPoolProvider(ctx, "example", &iam.WorkloadIdentityPoolProviderArgs{
 * 			WorkloadIdentityPoolId:         pool.WorkloadIdentityPoolId,
 * 			WorkloadIdentityPoolProviderId: pulumi.String("example-prvdr"),
 * 			AttributeMapping: pulumi.StringMap{
 * 				"google.subject": pulumi.String("assertion.sub"),
 * 			},
 * 			Oidc: &iam.WorkloadIdentityPoolProviderOidcArgs{
 * 				IssuerUri: pulumi.String("https://sts.windows.net/azure-tenant-id"),
 * 			},
 * 		}, pulumi.Provider(google_beta))
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * ```
 * {{% /example %}}
 * {{% example %}}
 * ### Iam Workload Identity Pool Provider Oidc Full
 * 
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 * 
 * const pool = new gcp.iam.WorkloadIdentityPool("pool", {workloadIdentityPoolId: "example-pool"}, {
 *     provider: google_beta,
 * });
 * const example = new gcp.iam.WorkloadIdentityPoolProvider("example", {
 *     workloadIdentityPoolId: pool.workloadIdentityPoolId,
 *     workloadIdentityPoolProviderId: "example-prvdr",
 *     displayName: "Name of provider",
 *     description: "OIDC identity pool provider for automated test",
 *     disabled: true,
 *     attributeCondition: "\"e968c2ef-047c-498d-8d79-16ca1b61e77e\" in assertion.groups",
 *     attributeMapping: {
 *         "google.subject": "\"azure::\" + assertion.tid + \"::\" + assertion.sub",
 *         "attribute.tid": "assertion.tid",
 *         "attribute.managed_identity_name": `      {
 *         "8bb39bdb-1cc5-4447-b7db-a19e920eb111":"workload1",
 *         "55d36609-9bcf-48e0-a366-a3cf19027d2a":"workload2"
 *       }[assertion.oid]
 * `,
 *     },
 *     oidc: {
 *         allowedAudiences: [
 *             "https://example.com/gcp-oidc-federation",
 *             "example.com/gcp-oidc-federation",
 *         ],
 *         issuerUri: "https://sts.windows.net/azure-tenant-id",
 *     },
 * }, {
 *     provider: google_beta,
 * });
 * ```
 * ```python
 * import pulumi
 * import pulumi_gcp as gcp
 * 
 * pool = gcp.iam.WorkloadIdentityPool("pool", workload_identity_pool_id="example-pool",
 * opts=pulumi.ResourceOptions(provider=google_beta))
 * example = gcp.iam.WorkloadIdentityPoolProvider("example",
 *     workload_identity_pool_id=pool.workload_identity_pool_id,
 *     workload_identity_pool_provider_id="example-prvdr",
 *     display_name="Name of provider",
 *     description="OIDC identity pool provider for automated test",
 *     disabled=True,
 *     attribute_condition="\"e968c2ef-047c-498d-8d79-16ca1b61e77e\" in assertion.groups",
 *     attribute_mapping={
 *         "google.subject": "\"azure::\" + assertion.tid + \"::\" + assertion.sub",
 *         "attribute.tid": "assertion.tid",
 *         "attribute.managed_identity_name": """      {
 *         "8bb39bdb-1cc5-4447-b7db-a19e920eb111":"workload1",
 *         "55d36609-9bcf-48e0-a366-a3cf19027d2a":"workload2"
 *       }[assertion.oid]
 * """,
 *     },
 *     oidc=gcp.iam.WorkloadIdentityPoolProviderOidcArgs(
 *         allowed_audiences=[
 *             "https://example.com/gcp-oidc-federation",
 *             "example.com/gcp-oidc-federation",
 *         ],
 *         issuer_uri="https://sts.windows.net/azure-tenant-id",
 *     ),
 *     opts=pulumi.ResourceOptions(provider=google_beta))
 * ```
 * ```csharp
 * using Pulumi;
 * using Gcp = Pulumi.Gcp;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var pool = new Gcp.Iam.WorkloadIdentityPool("pool", new Gcp.Iam.WorkloadIdentityPoolArgs
 *         {
 *             WorkloadIdentityPoolId = "example-pool",
 *         }, new CustomResourceOptions
 *         {
 *             Provider = google_beta,
 *         });
 *         var example = new Gcp.Iam.WorkloadIdentityPoolProvider("example", new Gcp.Iam.WorkloadIdentityPoolProviderArgs
 *         {
 *             WorkloadIdentityPoolId = pool.WorkloadIdentityPoolId,
 *             WorkloadIdentityPoolProviderId = "example-prvdr",
 *             DisplayName = "Name of provider",
 *             Description = "OIDC identity pool provider for automated test",
 *             Disabled = true,
 *             AttributeCondition = "\"e968c2ef-047c-498d-8d79-16ca1b61e77e\" in assertion.groups",
 *             AttributeMapping = 
 *             {
 *                 { "google.subject", "\"azure::\" + assertion.tid + \"::\" + assertion.sub" },
 *                 { "attribute.tid", "assertion.tid" },
 *                 { "attribute.managed_identity_name", @"      {
 *         ""8bb39bdb-1cc5-4447-b7db-a19e920eb111"":""workload1"",
 *         ""55d36609-9bcf-48e0-a366-a3cf19027d2a"":""workload2""
 *       }[assertion.oid]
 * " },
 *             },
 *             Oidc = new Gcp.Iam.Inputs.WorkloadIdentityPoolProviderOidcArgs
 *             {
 *                 AllowedAudiences = 
 *                 {
 *                     "https://example.com/gcp-oidc-federation",
 *                     "example.com/gcp-oidc-federation",
 *                 },
 *                 IssuerUri = "https://sts.windows.net/azure-tenant-id",
 *             },
 *         }, new CustomResourceOptions
 *         {
 *             Provider = google_beta,
 *         });
 *     }
 * 
 * }
 * ```
 * ```go
 * package main
 * 
 * import (
 * 	"fmt"
 * 
 * 	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/iam"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		pool, err := iam.NewWorkloadIdentityPool(ctx, "pool", &iam.WorkloadIdentityPoolArgs{
 * 			WorkloadIdentityPoolId: pulumi.String("example-pool"),
 * 		}, pulumi.Provider(google_beta))
 * 		if err != nil {
 * 			return err
 * 		}
 * 		_, err = iam.NewWorkloadIdentityPoolProvider(ctx, "example", &iam.WorkloadIdentityPoolProviderArgs{
 * 			WorkloadIdentityPoolId:         pool.WorkloadIdentityPoolId,
 * 			WorkloadIdentityPoolProviderId: pulumi.String("example-prvdr"),
 * 			DisplayName:                    pulumi.String("Name of provider"),
 * 			Description:                    pulumi.String("OIDC identity pool provider for automated test"),
 * 			Disabled:                       pulumi.Bool(true),
 * 			AttributeCondition:             pulumi.String("\"e968c2ef-047c-498d-8d79-16ca1b61e77e\" in assertion.groups"),
 * 			AttributeMapping: pulumi.StringMap{
 * 				"google.subject":                  pulumi.String("\"azure::\" + assertion.tid + \"::\" + assertion.sub"),
 * 				"attribute.tid":                   pulumi.String("assertion.tid"),
 * 				"attribute.managed_identity_name": pulumi.String(fmt.Sprintf("%v%v%v%v", "      {\n", "        \"8bb39bdb-1cc5-4447-b7db-a19e920eb111\":\"workload1\",\n", "        \"55d36609-9bcf-48e0-a366-a3cf19027d2a\":\"workload2\"\n", "      }[assertion.oid]\n")),
 * 			},
 * 			Oidc: &iam.WorkloadIdentityPoolProviderOidcArgs{
 * 				AllowedAudiences: pulumi.StringArray{
 * 					pulumi.String("https://example.com/gcp-oidc-federation"),
 * 					pulumi.String("example.com/gcp-oidc-federation"),
 * 				},
 * 				IssuerUri: pulumi.String("https://sts.windows.net/azure-tenant-id"),
 * 			},
 * 		}, pulumi.Provider(google_beta))
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * ```
 * {{% /example %}}
 * {{% /examples %}}
 * 
 * ## Import
 * 
 * WorkloadIdentityPoolProvider can be imported using any of these accepted formats
 * 
 * ```sh
 *  $ pulumi import gcp:iam/workloadIdentityPoolProvider:WorkloadIdentityPoolProvider default projects/{{project}}/locations/global/workloadIdentityPools/{{workload_identity_pool_id}}/providers/{{workload_identity_pool_provider_id}}
 * ```
 * 
 * 
 * 
 * ```sh
 *  $ pulumi import gcp:iam/workloadIdentityPoolProvider:WorkloadIdentityPoolProvider default {{project}}/{{workload_identity_pool_id}}/{{workload_identity_pool_provider_id}}
 * ```
 * 
 * 
 * 
 * ```sh
 *  $ pulumi import gcp:iam/workloadIdentityPoolProvider:WorkloadIdentityPoolProvider default {{workload_identity_pool_id}}/{{workload_identity_pool_provider_id}}
 * ```
 * 
 *  
 */
@ResourceType(type="gcp:iam/workloadIdentityPoolProvider:WorkloadIdentityPoolProvider")
public class WorkloadIdentityPoolProvider extends io.pulumi.resources.CustomResource {
    /**
     * [A Common Expression Language](https://opensource.google/projects/cel) expression, in
     * plain text, to restrict what otherwise valid authentication credentials issued by the
     * provider should not be accepted.
     * The expression must output a boolean representing whether to allow the federation.
     * The following keywords may be referenced in the expressions:
     * * `assertion`: JSON representing the authentication credential issued by the provider.
     * * `google`: The Google attributes mapped from the assertion in the `attribute_mappings`.
     * * `attribute`: The custom attributes mapped from the assertion in the `attribute_mappings`.
     * The maximum length of the attribute condition expression is 4096 characters. If
     * unspecified, all valid authentication credential are accepted.
     * The following example shows how to only allow credentials with a mapped `google.groups`
     * value of `admins`:
     * ```typescript
     * import * as pulumi from "@pulumi/pulumi";
     * ```
     * ```python
     * import pulumi
     * ```
     * ```csharp
     * using Pulumi;
     * 
     * class MyStack : Stack
     * {
     *     public MyStack()
     *     {
     *     }
     * 
     * }
     * ```
     * ```go
     * package main
     * 
     * import (
     * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
     * )
     * 
     * func main() {
     * 	pulumi.Run(func(ctx *pulumi.Context) error {
     * 		return nil
     * 	})
     * }
     * ```
     * 
     */
    @Export(name="attributeCondition", type=String.class, parameters={})
    private Output</* @Nullable */ String> attributeCondition;

    /**
     * @return [A Common Expression Language](https://opensource.google/projects/cel) expression, in
     * plain text, to restrict what otherwise valid authentication credentials issued by the
     * provider should not be accepted.
     * The expression must output a boolean representing whether to allow the federation.
     * The following keywords may be referenced in the expressions:
     * * `assertion`: JSON representing the authentication credential issued by the provider.
     * * `google`: The Google attributes mapped from the assertion in the `attribute_mappings`.
     * * `attribute`: The custom attributes mapped from the assertion in the `attribute_mappings`.
     * The maximum length of the attribute condition expression is 4096 characters. If
     * unspecified, all valid authentication credential are accepted.
     * The following example shows how to only allow credentials with a mapped `google.groups`
     * value of `admins`:
     * ```typescript
     * import * as pulumi from "@pulumi/pulumi";
     * ```
     * ```python
     * import pulumi
     * ```
     * ```csharp
     * using Pulumi;
     * 
     * class MyStack : Stack
     * {
     *     public MyStack()
     *     {
     *     }
     * 
     * }
     * ```
     * ```go
     * package main
     * 
     * import (
     * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
     * )
     * 
     * func main() {
     * 	pulumi.Run(func(ctx *pulumi.Context) error {
     * 		return nil
     * 	})
     * }
     * ```
     * 
     */
    public Output</* @Nullable */ String> getAttributeCondition() {
        return this.attributeCondition;
    }
    /**
     * Maps attributes from authentication credentials issued by an external identity provider
     * to Google Cloud attributes, such as `subject` and `segment`.
     * Each key must be a string specifying the Google Cloud IAM attribute to map to.
     * The following keys are supported:
     * * `google.subject`: The principal IAM is authenticating. You can reference this value
     * in IAM bindings. This is also the subject that appears in Cloud Logging logs.
     * Cannot exceed 127 characters.
     * * `google.groups`: Groups the external identity belongs to. You can grant groups
     * access to resources using an IAM `principalSet` binding; access applies to all
     * members of the group.
     * You can also provide custom attributes by specifying `attribute.{custom_attribute}`,
     * where `{custom_attribute}` is the name of the custom attribute to be mapped. You can
     * define a maximum of 50 custom attributes. The maximum length of a mapped attribute key
     * is 100 characters, and the key may only contain the characters [a-z0-9_].
     * You can reference these attributes in IAM policies to define fine-grained access for a
     * workload to Google Cloud resources. For example:
     * * `google.subject`:
     * `principal://iam.googleapis.com/projects/{project}/locations/{location}/workloadIdentityPools/{pool}/subject/{value}`
     * * `google.groups`:
     * `principalSet://iam.googleapis.com/projects/{project}/locations/{location}/workloadIdentityPools/{pool}/group/{value}`
     * * `attribute.{custom_attribute}`:
     * `principalSet://iam.googleapis.com/projects/{project}/locations/{location}/workloadIdentityPools/{pool}/attribute.{custom_attribute}/{value}`
     * Each value must be a [Common Expression Language](https://opensource.google/projects/cel)
     * function that maps an identity provider credential to the normalized attribute specified
     * by the corresponding map key.
     * You can use the `assertion` keyword in the expression to access a JSON representation of
     * the authentication credential issued by the provider.
     * The maximum length of an attribute mapping expression is 2048 characters. When evaluated,
     * the total size of all mapped attributes must not exceed 8KB.
     * For AWS providers, the following rules apply:
     * - If no attribute mapping is defined, the following default mapping applies:
     * ```typescript
     * import * as pulumi from "@pulumi/pulumi";
     * ```
     * ```python
     * import pulumi
     * ```
     * ```csharp
     * using Pulumi;
     * 
     * class MyStack : Stack
     * {
     *     public MyStack()
     *     {
     *     }
     * 
     * }
     * ```
     * ```go
     * package main
     * 
     * import (
     * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
     * )
     * 
     * func main() {
     * 	pulumi.Run(func(ctx *pulumi.Context) error {
     * 		return nil
     * 	})
     * }
     * ```
     * - If any custom attribute mappings are defined, they must include a mapping to the
     * `google.subject` attribute.
     * For OIDC providers, the following rules apply:
     * - Custom attribute mappings must be defined, and must include a mapping to the
     * `google.subject` attribute. For example, the following maps the `sub` claim of the
     * incoming credential to the `subject` attribute on a Google token.
     * ```typescript
     * import * as pulumi from "@pulumi/pulumi";
     * ```
     * ```python
     * import pulumi
     * ```
     * ```csharp
     * using Pulumi;
     * 
     * class MyStack : Stack
     * {
     *     public MyStack()
     *     {
     *     }
     * 
     * }
     * ```
     * ```go
     * package main
     * 
     * import (
     * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
     * )
     * 
     * func main() {
     * 	pulumi.Run(func(ctx *pulumi.Context) error {
     * 		return nil
     * 	})
     * }
     * ```
     * 
     */
    @Export(name="attributeMapping", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> attributeMapping;

    /**
     * @return Maps attributes from authentication credentials issued by an external identity provider
     * to Google Cloud attributes, such as `subject` and `segment`.
     * Each key must be a string specifying the Google Cloud IAM attribute to map to.
     * The following keys are supported:
     * * `google.subject`: The principal IAM is authenticating. You can reference this value
     * in IAM bindings. This is also the subject that appears in Cloud Logging logs.
     * Cannot exceed 127 characters.
     * * `google.groups`: Groups the external identity belongs to. You can grant groups
     * access to resources using an IAM `principalSet` binding; access applies to all
     * members of the group.
     * You can also provide custom attributes by specifying `attribute.{custom_attribute}`,
     * where `{custom_attribute}` is the name of the custom attribute to be mapped. You can
     * define a maximum of 50 custom attributes. The maximum length of a mapped attribute key
     * is 100 characters, and the key may only contain the characters [a-z0-9_].
     * You can reference these attributes in IAM policies to define fine-grained access for a
     * workload to Google Cloud resources. For example:
     * * `google.subject`:
     * `principal://iam.googleapis.com/projects/{project}/locations/{location}/workloadIdentityPools/{pool}/subject/{value}`
     * * `google.groups`:
     * `principalSet://iam.googleapis.com/projects/{project}/locations/{location}/workloadIdentityPools/{pool}/group/{value}`
     * * `attribute.{custom_attribute}`:
     * `principalSet://iam.googleapis.com/projects/{project}/locations/{location}/workloadIdentityPools/{pool}/attribute.{custom_attribute}/{value}`
     * Each value must be a [Common Expression Language](https://opensource.google/projects/cel)
     * function that maps an identity provider credential to the normalized attribute specified
     * by the corresponding map key.
     * You can use the `assertion` keyword in the expression to access a JSON representation of
     * the authentication credential issued by the provider.
     * The maximum length of an attribute mapping expression is 2048 characters. When evaluated,
     * the total size of all mapped attributes must not exceed 8KB.
     * For AWS providers, the following rules apply:
     * - If no attribute mapping is defined, the following default mapping applies:
     * ```typescript
     * import * as pulumi from "@pulumi/pulumi";
     * ```
     * ```python
     * import pulumi
     * ```
     * ```csharp
     * using Pulumi;
     * 
     * class MyStack : Stack
     * {
     *     public MyStack()
     *     {
     *     }
     * 
     * }
     * ```
     * ```go
     * package main
     * 
     * import (
     * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
     * )
     * 
     * func main() {
     * 	pulumi.Run(func(ctx *pulumi.Context) error {
     * 		return nil
     * 	})
     * }
     * ```
     * - If any custom attribute mappings are defined, they must include a mapping to the
     * `google.subject` attribute.
     * For OIDC providers, the following rules apply:
     * - Custom attribute mappings must be defined, and must include a mapping to the
     * `google.subject` attribute. For example, the following maps the `sub` claim of the
     * incoming credential to the `subject` attribute on a Google token.
     * ```typescript
     * import * as pulumi from "@pulumi/pulumi";
     * ```
     * ```python
     * import pulumi
     * ```
     * ```csharp
     * using Pulumi;
     * 
     * class MyStack : Stack
     * {
     *     public MyStack()
     *     {
     *     }
     * 
     * }
     * ```
     * ```go
     * package main
     * 
     * import (
     * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
     * )
     * 
     * func main() {
     * 	pulumi.Run(func(ctx *pulumi.Context) error {
     * 		return nil
     * 	})
     * }
     * ```
     * 
     */
    public Output</* @Nullable */ Map<String,String>> getAttributeMapping() {
        return this.attributeMapping;
    }
    /**
     * An Amazon Web Services identity provider. Not compatible with the property oidc.
     * Structure is documented below.
     * 
     */
    @Export(name="aws", type=WorkloadIdentityPoolProviderAws.class, parameters={})
    private Output</* @Nullable */ WorkloadIdentityPoolProviderAws> aws;

    /**
     * @return An Amazon Web Services identity provider. Not compatible with the property oidc.
     * Structure is documented below.
     * 
     */
    public Output</* @Nullable */ WorkloadIdentityPoolProviderAws> getAws() {
        return this.aws;
    }
    /**
     * A description for the provider. Cannot exceed 256 characters.
     * 
     */
    @Export(name="description", type=String.class, parameters={})
    private Output</* @Nullable */ String> description;

    /**
     * @return A description for the provider. Cannot exceed 256 characters.
     * 
     */
    public Output</* @Nullable */ String> getDescription() {
        return this.description;
    }
    /**
     * Whether the provider is disabled. You cannot use a disabled provider to exchange tokens.
     * However, existing tokens still grant access.
     * 
     */
    @Export(name="disabled", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> disabled;

    /**
     * @return Whether the provider is disabled. You cannot use a disabled provider to exchange tokens.
     * However, existing tokens still grant access.
     * 
     */
    public Output</* @Nullable */ Boolean> getDisabled() {
        return this.disabled;
    }
    /**
     * A display name for the provider. Cannot exceed 32 characters.
     * 
     */
    @Export(name="displayName", type=String.class, parameters={})
    private Output</* @Nullable */ String> displayName;

    /**
     * @return A display name for the provider. Cannot exceed 32 characters.
     * 
     */
    public Output</* @Nullable */ String> getDisplayName() {
        return this.displayName;
    }
    /**
     * The resource name of the provider as
     * 'projects/{project_number}/locations/global/workloadIdentityPools/{workload_identity_pool_id}/providers/{workload_identity_pool_provider_id}'.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The resource name of the provider as
     * 'projects/{project_number}/locations/global/workloadIdentityPools/{workload_identity_pool_id}/providers/{workload_identity_pool_provider_id}'.
     * 
     */
    public Output<String> getName() {
        return this.name;
    }
    /**
     * An OpenId Connect 1.0 identity provider. Not compatible with the property aws.
     * Structure is documented below.
     * 
     */
    @Export(name="oidc", type=WorkloadIdentityPoolProviderOidc.class, parameters={})
    private Output</* @Nullable */ WorkloadIdentityPoolProviderOidc> oidc;

    /**
     * @return An OpenId Connect 1.0 identity provider. Not compatible with the property aws.
     * Structure is documented below.
     * 
     */
    public Output</* @Nullable */ WorkloadIdentityPoolProviderOidc> getOidc() {
        return this.oidc;
    }
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Export(name="project", type=String.class, parameters={})
    private Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Output<String> getProject() {
        return this.project;
    }
    /**
     * The state of the provider. * STATE_UNSPECIFIED: State unspecified. * ACTIVE: The provider is active, and may be used to
     * validate authentication credentials. * DELETED: The provider is soft-deleted. Soft-deleted providers are permanently
     * deleted after approximately 30 days. You can restore a soft-deleted provider using UndeleteWorkloadIdentityPoolProvider.
     * You cannot reuse the ID of a soft-deleted provider until it is permanently deleted.
     * 
     */
    @Export(name="state", type=String.class, parameters={})
    private Output<String> state;

    /**
     * @return The state of the provider. * STATE_UNSPECIFIED: State unspecified. * ACTIVE: The provider is active, and may be used to
     * validate authentication credentials. * DELETED: The provider is soft-deleted. Soft-deleted providers are permanently
     * deleted after approximately 30 days. You can restore a soft-deleted provider using UndeleteWorkloadIdentityPoolProvider.
     * You cannot reuse the ID of a soft-deleted provider until it is permanently deleted.
     * 
     */
    public Output<String> getState() {
        return this.state;
    }
    /**
     * The ID used for the pool, which is the final component of the pool resource name. This
     * value should be 4-32 characters, and may contain the characters [a-z0-9-]. The prefix
     * `gcp-` is reserved for use by Google, and may not be specified.
     * 
     */
    @Export(name="workloadIdentityPoolId", type=String.class, parameters={})
    private Output<String> workloadIdentityPoolId;

    /**
     * @return The ID used for the pool, which is the final component of the pool resource name. This
     * value should be 4-32 characters, and may contain the characters [a-z0-9-]. The prefix
     * `gcp-` is reserved for use by Google, and may not be specified.
     * 
     */
    public Output<String> getWorkloadIdentityPoolId() {
        return this.workloadIdentityPoolId;
    }
    /**
     * The ID for the provider, which becomes the final component of the resource name. This
     * value must be 4-32 characters, and may contain the characters [a-z0-9-]. The prefix
     * `gcp-` is reserved for use by Google, and may not be specified.
     * 
     */
    @Export(name="workloadIdentityPoolProviderId", type=String.class, parameters={})
    private Output<String> workloadIdentityPoolProviderId;

    /**
     * @return The ID for the provider, which becomes the final component of the resource name. This
     * value must be 4-32 characters, and may contain the characters [a-z0-9-]. The prefix
     * `gcp-` is reserved for use by Google, and may not be specified.
     * 
     */
    public Output<String> getWorkloadIdentityPoolProviderId() {
        return this.workloadIdentityPoolProviderId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public WorkloadIdentityPoolProvider(String name) {
        this(name, WorkloadIdentityPoolProviderArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public WorkloadIdentityPoolProvider(String name, WorkloadIdentityPoolProviderArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public WorkloadIdentityPoolProvider(String name, WorkloadIdentityPoolProviderArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("gcp:iam/workloadIdentityPoolProvider:WorkloadIdentityPoolProvider", name, args == null ? WorkloadIdentityPoolProviderArgs.Empty : args, makeResourceOptions(options, Output.empty()));
    }

    private WorkloadIdentityPoolProvider(String name, Output<String> id, @Nullable WorkloadIdentityPoolProviderState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("gcp:iam/workloadIdentityPoolProvider:WorkloadIdentityPoolProvider", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static WorkloadIdentityPoolProvider get(String name, Output<String> id, @Nullable WorkloadIdentityPoolProviderState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new WorkloadIdentityPoolProvider(name, id, state, options);
    }
}
