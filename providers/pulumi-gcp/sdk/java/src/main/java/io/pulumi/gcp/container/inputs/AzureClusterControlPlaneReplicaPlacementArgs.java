// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.container.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;


public final class AzureClusterControlPlaneReplicaPlacementArgs extends io.pulumi.resources.ResourceArgs {

    public static final AzureClusterControlPlaneReplicaPlacementArgs Empty = new AzureClusterControlPlaneReplicaPlacementArgs();

    /**
     * For a given replica, the Azure availability zone where to provision the control plane VM and the ETCD disk.
     * 
     */
    @InputImport(name="azureAvailabilityZone", required=true)
      private final Input<String> azureAvailabilityZone;

    public Input<String> getAzureAvailabilityZone() {
        return this.azureAvailabilityZone;
    }

    /**
     * For a given replica, the ARM ID of the subnet where the control plane VM is deployed. Make sure it's a subnet under the virtual network in the cluster configuration.
     * 
     */
    @InputImport(name="subnetId", required=true)
      private final Input<String> subnetId;

    public Input<String> getSubnetId() {
        return this.subnetId;
    }

    public AzureClusterControlPlaneReplicaPlacementArgs(
        Input<String> azureAvailabilityZone,
        Input<String> subnetId) {
        this.azureAvailabilityZone = Objects.requireNonNull(azureAvailabilityZone, "expected parameter 'azureAvailabilityZone' to be non-null");
        this.subnetId = Objects.requireNonNull(subnetId, "expected parameter 'subnetId' to be non-null");
    }

    private AzureClusterControlPlaneReplicaPlacementArgs() {
        this.azureAvailabilityZone = Input.empty();
        this.subnetId = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AzureClusterControlPlaneReplicaPlacementArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<String> azureAvailabilityZone;
        private Input<String> subnetId;

        public Builder() {
    	      // Empty
        }

        public Builder(AzureClusterControlPlaneReplicaPlacementArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.azureAvailabilityZone = defaults.azureAvailabilityZone;
    	      this.subnetId = defaults.subnetId;
        }

        public Builder azureAvailabilityZone(Input<String> azureAvailabilityZone) {
            this.azureAvailabilityZone = Objects.requireNonNull(azureAvailabilityZone);
            return this;
        }

        public Builder azureAvailabilityZone(String azureAvailabilityZone) {
            this.azureAvailabilityZone = Input.of(Objects.requireNonNull(azureAvailabilityZone));
            return this;
        }

        public Builder subnetId(Input<String> subnetId) {
            this.subnetId = Objects.requireNonNull(subnetId);
            return this;
        }

        public Builder subnetId(String subnetId) {
            this.subnetId = Input.of(Objects.requireNonNull(subnetId));
            return this;
        }
        public AzureClusterControlPlaneReplicaPlacementArgs build() {
            return new AzureClusterControlPlaneReplicaPlacementArgs(azureAvailabilityZone, subnetId);
        }
    }
}
