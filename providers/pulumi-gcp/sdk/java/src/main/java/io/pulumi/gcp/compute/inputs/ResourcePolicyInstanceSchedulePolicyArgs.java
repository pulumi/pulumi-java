// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.compute.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.gcp.compute.inputs.ResourcePolicyInstanceSchedulePolicyVmStartScheduleArgs;
import io.pulumi.gcp.compute.inputs.ResourcePolicyInstanceSchedulePolicyVmStopScheduleArgs;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ResourcePolicyInstanceSchedulePolicyArgs extends io.pulumi.resources.ResourceArgs {

    public static final ResourcePolicyInstanceSchedulePolicyArgs Empty = new ResourcePolicyInstanceSchedulePolicyArgs();

    /**
     * The expiration time of the schedule. The timestamp is an RFC3339 string.
     * 
     */
    @Import(name="expirationTime")
      private final @Nullable Output<String> expirationTime;

    public Output<String> getExpirationTime() {
        return this.expirationTime == null ? Output.empty() : this.expirationTime;
    }

    /**
     * The start time of the schedule. The timestamp is an RFC3339 string.
     * 
     */
    @Import(name="startTime")
      private final @Nullable Output<String> startTime;

    public Output<String> getStartTime() {
        return this.startTime == null ? Output.empty() : this.startTime;
    }

    /**
     * Specifies the time zone to be used in interpreting the schedule. The value of this field must be a time zone name
     * from the tz database: http://en.wikipedia.org/wiki/Tz_database.
     * 
     */
    @Import(name="timeZone", required=true)
      private final Output<String> timeZone;

    public Output<String> getTimeZone() {
        return this.timeZone;
    }

    /**
     * Specifies the schedule for starting instances.
     * Structure is documented below.
     * 
     */
    @Import(name="vmStartSchedule")
      private final @Nullable Output<ResourcePolicyInstanceSchedulePolicyVmStartScheduleArgs> vmStartSchedule;

    public Output<ResourcePolicyInstanceSchedulePolicyVmStartScheduleArgs> getVmStartSchedule() {
        return this.vmStartSchedule == null ? Output.empty() : this.vmStartSchedule;
    }

    /**
     * Specifies the schedule for stopping instances.
     * Structure is documented below.
     * 
     */
    @Import(name="vmStopSchedule")
      private final @Nullable Output<ResourcePolicyInstanceSchedulePolicyVmStopScheduleArgs> vmStopSchedule;

    public Output<ResourcePolicyInstanceSchedulePolicyVmStopScheduleArgs> getVmStopSchedule() {
        return this.vmStopSchedule == null ? Output.empty() : this.vmStopSchedule;
    }

    public ResourcePolicyInstanceSchedulePolicyArgs(
        @Nullable Output<String> expirationTime,
        @Nullable Output<String> startTime,
        Output<String> timeZone,
        @Nullable Output<ResourcePolicyInstanceSchedulePolicyVmStartScheduleArgs> vmStartSchedule,
        @Nullable Output<ResourcePolicyInstanceSchedulePolicyVmStopScheduleArgs> vmStopSchedule) {
        this.expirationTime = expirationTime;
        this.startTime = startTime;
        this.timeZone = Objects.requireNonNull(timeZone, "expected parameter 'timeZone' to be non-null");
        this.vmStartSchedule = vmStartSchedule;
        this.vmStopSchedule = vmStopSchedule;
    }

    private ResourcePolicyInstanceSchedulePolicyArgs() {
        this.expirationTime = Output.empty();
        this.startTime = Output.empty();
        this.timeZone = Output.empty();
        this.vmStartSchedule = Output.empty();
        this.vmStopSchedule = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ResourcePolicyInstanceSchedulePolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> expirationTime;
        private @Nullable Output<String> startTime;
        private Output<String> timeZone;
        private @Nullable Output<ResourcePolicyInstanceSchedulePolicyVmStartScheduleArgs> vmStartSchedule;
        private @Nullable Output<ResourcePolicyInstanceSchedulePolicyVmStopScheduleArgs> vmStopSchedule;

        public Builder() {
    	      // Empty
        }

        public Builder(ResourcePolicyInstanceSchedulePolicyArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.expirationTime = defaults.expirationTime;
    	      this.startTime = defaults.startTime;
    	      this.timeZone = defaults.timeZone;
    	      this.vmStartSchedule = defaults.vmStartSchedule;
    	      this.vmStopSchedule = defaults.vmStopSchedule;
        }

        public Builder expirationTime(@Nullable Output<String> expirationTime) {
            this.expirationTime = expirationTime;
            return this;
        }
        public Builder expirationTime(@Nullable String expirationTime) {
            this.expirationTime = Output.ofNullable(expirationTime);
            return this;
        }
        public Builder startTime(@Nullable Output<String> startTime) {
            this.startTime = startTime;
            return this;
        }
        public Builder startTime(@Nullable String startTime) {
            this.startTime = Output.ofNullable(startTime);
            return this;
        }
        public Builder timeZone(Output<String> timeZone) {
            this.timeZone = Objects.requireNonNull(timeZone);
            return this;
        }
        public Builder timeZone(String timeZone) {
            this.timeZone = Output.of(Objects.requireNonNull(timeZone));
            return this;
        }
        public Builder vmStartSchedule(@Nullable Output<ResourcePolicyInstanceSchedulePolicyVmStartScheduleArgs> vmStartSchedule) {
            this.vmStartSchedule = vmStartSchedule;
            return this;
        }
        public Builder vmStartSchedule(@Nullable ResourcePolicyInstanceSchedulePolicyVmStartScheduleArgs vmStartSchedule) {
            this.vmStartSchedule = Output.ofNullable(vmStartSchedule);
            return this;
        }
        public Builder vmStopSchedule(@Nullable Output<ResourcePolicyInstanceSchedulePolicyVmStopScheduleArgs> vmStopSchedule) {
            this.vmStopSchedule = vmStopSchedule;
            return this;
        }
        public Builder vmStopSchedule(@Nullable ResourcePolicyInstanceSchedulePolicyVmStopScheduleArgs vmStopSchedule) {
            this.vmStopSchedule = Output.ofNullable(vmStopSchedule);
            return this;
        }        public ResourcePolicyInstanceSchedulePolicyArgs build() {
            return new ResourcePolicyInstanceSchedulePolicyArgs(expirationTime, startTime, timeZone, vmStartSchedule, vmStopSchedule);
        }
    }
}
