// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.bigquery.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class TableExternalDataConfigurationCsvOptions {
    private final @Nullable Boolean allowJaggedRows;
    private final @Nullable Boolean allowQuotedNewlines;
    private final @Nullable String encoding;
    private final @Nullable String fieldDelimiter;
    private final String quote;
    private final @Nullable Integer skipLeadingRows;

    @OutputCustomType.Constructor({"allowJaggedRows","allowQuotedNewlines","encoding","fieldDelimiter","quote","skipLeadingRows"})
    private TableExternalDataConfigurationCsvOptions(
        @Nullable Boolean allowJaggedRows,
        @Nullable Boolean allowQuotedNewlines,
        @Nullable String encoding,
        @Nullable String fieldDelimiter,
        String quote,
        @Nullable Integer skipLeadingRows) {
        this.allowJaggedRows = allowJaggedRows;
        this.allowQuotedNewlines = allowQuotedNewlines;
        this.encoding = encoding;
        this.fieldDelimiter = fieldDelimiter;
        this.quote = Objects.requireNonNull(quote);
        this.skipLeadingRows = skipLeadingRows;
    }

    public Optional<Boolean> getAllowJaggedRows() {
        return Optional.ofNullable(this.allowJaggedRows);
    }
    public Optional<Boolean> getAllowQuotedNewlines() {
        return Optional.ofNullable(this.allowQuotedNewlines);
    }
    public Optional<String> getEncoding() {
        return Optional.ofNullable(this.encoding);
    }
    public Optional<String> getFieldDelimiter() {
        return Optional.ofNullable(this.fieldDelimiter);
    }
    public String getQuote() {
        return this.quote;
    }
    public Optional<Integer> getSkipLeadingRows() {
        return Optional.ofNullable(this.skipLeadingRows);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TableExternalDataConfigurationCsvOptions defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Boolean allowJaggedRows;
        private @Nullable Boolean allowQuotedNewlines;
        private @Nullable String encoding;
        private @Nullable String fieldDelimiter;
        private String quote;
        private @Nullable Integer skipLeadingRows;

        public Builder() {
    	      // Empty
        }

        public Builder(TableExternalDataConfigurationCsvOptions defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allowJaggedRows = defaults.allowJaggedRows;
    	      this.allowQuotedNewlines = defaults.allowQuotedNewlines;
    	      this.encoding = defaults.encoding;
    	      this.fieldDelimiter = defaults.fieldDelimiter;
    	      this.quote = defaults.quote;
    	      this.skipLeadingRows = defaults.skipLeadingRows;
        }

        public Builder setAllowJaggedRows(@Nullable Boolean allowJaggedRows) {
            this.allowJaggedRows = allowJaggedRows;
            return this;
        }

        public Builder setAllowQuotedNewlines(@Nullable Boolean allowQuotedNewlines) {
            this.allowQuotedNewlines = allowQuotedNewlines;
            return this;
        }

        public Builder setEncoding(@Nullable String encoding) {
            this.encoding = encoding;
            return this;
        }

        public Builder setFieldDelimiter(@Nullable String fieldDelimiter) {
            this.fieldDelimiter = fieldDelimiter;
            return this;
        }

        public Builder setQuote(String quote) {
            this.quote = Objects.requireNonNull(quote);
            return this;
        }

        public Builder setSkipLeadingRows(@Nullable Integer skipLeadingRows) {
            this.skipLeadingRows = skipLeadingRows;
            return this;
        }

        public TableExternalDataConfigurationCsvOptions build() {
            return new TableExternalDataConfigurationCsvOptions(allowJaggedRows, allowQuotedNewlines, encoding, fieldDelimiter, quote, skipLeadingRows);
        }
    }
}
