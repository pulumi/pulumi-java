// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.container;

import io.pulumi.core.TypeShape;
import io.pulumi.deployment.Deployment;
import io.pulumi.deployment.InvokeOptions;
import io.pulumi.gcp.Utilities;
import io.pulumi.gcp.container.inputs.GetAzureVersionsArgs;
import io.pulumi.gcp.container.outputs.GetAzureVersionsResult;
import java.util.concurrent.CompletableFuture;
import javax.annotation.Nullable;

public class GetAzureVersions {
    private GetAzureVersions() {}
    public interface BuilderApplicator {
        public void apply(GetAzureVersionsArgs.Builder a);
    }
    private static GetAzureVersionsArgs buildArgs(BuilderApplicator argsBuilder) {
        final var builder = GetAzureVersionsArgs.builder();
        argsBuilder.apply(builder);
        return builder.build();
    }
    /**
     * Provides access to available Kubernetes versions in a location for a given project.
 * 
 * ## Example Usage
 * 
     *
     * A collection of arguments for invoking getAzureVersions.
 * 
     *
     * A collection of values returned by getAzureVersions.
 * 
     */
    public static CompletableFuture<GetAzureVersionsResult> invokeAsync(BuilderApplicator argsBuilder, @Nullable InvokeOptions options) {
        return invokeAsync(buildArgs(argsBuilder), Utilities.withVersion(options));
    }
    /**
         * Provides access to available Kubernetes versions in a location for a given project.
     * 
     * ## Example Usage
     * 
     *
         * A collection of arguments for invoking getAzureVersions.
     * 
     *
         * A collection of values returned by getAzureVersions.
     * 
     */
    public static CompletableFuture<GetAzureVersionsResult> invokeAsync(@Nullable GetAzureVersionsArgs args, @Nullable InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("gcp:container/getAzureVersions:getAzureVersions", TypeShape.of(GetAzureVersionsResult.class), args == null ? GetAzureVersionsArgs.Empty : args, Utilities.withVersion(options));
    }
}
