// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.artifactregistry;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Export;
import io.pulumi.core.annotations.ResourceType;
import io.pulumi.gcp.Utilities;
import io.pulumi.gcp.artifactregistry.RepositoryArgs;
import io.pulumi.gcp.artifactregistry.inputs.RepositoryState;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;

/**
 * A repository for storing artifacts
 * 
 * To get more information about Repository, see:
 * 
 * * [API documentation](https://cloud.google.com/artifact-registry/docs/reference/rest/v1beta2/projects.locations.repositories)
 * * How-to Guides
 *     * [Official Documentation](https://cloud.google.com/artifact-registry/docs/overview)
 * 
 * {{% examples %}}
 * ## Example Usage
 * {{% example %}}
 * ### Artifact Registry Repository Basic
 * 
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 * 
 * const my_repo = new gcp.artifactregistry.Repository("my-repo", {
 *     location: "us-central1",
 *     repositoryId: "my-repository",
 *     description: "example docker repository",
 *     format: "DOCKER",
 * }, {
 *     provider: google_beta,
 * });
 * ```
 * ```python
 * import pulumi
 * import pulumi_gcp as gcp
 * 
 * my_repo = gcp.artifactregistry.Repository("my-repo",
 *     location="us-central1",
 *     repository_id="my-repository",
 *     description="example docker repository",
 *     format="DOCKER",
 *     opts=pulumi.ResourceOptions(provider=google_beta))
 * ```
 * ```csharp
 * using Pulumi;
 * using Gcp = Pulumi.Gcp;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var my_repo = new Gcp.ArtifactRegistry.Repository("my-repo", new Gcp.ArtifactRegistry.RepositoryArgs
 *         {
 *             Location = "us-central1",
 *             RepositoryId = "my-repository",
 *             Description = "example docker repository",
 *             Format = "DOCKER",
 *         }, new CustomResourceOptions
 *         {
 *             Provider = google_beta,
 *         });
 *     }
 * 
 * }
 * ```
 * ```go
 * package main
 * 
 * import (
 * 	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/artifactregistry"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		_, err := artifactregistry.NewRepository(ctx, "my-repo", &artifactregistry.RepositoryArgs{
 * 			Location:     pulumi.String("us-central1"),
 * 			RepositoryId: pulumi.String("my-repository"),
 * 			Description:  pulumi.String("example docker repository"),
 * 			Format:       pulumi.String("DOCKER"),
 * 		}, pulumi.Provider(google_beta))
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * ```
 * {{% /example %}}
 * {{% example %}}
 * ### Artifact Registry Repository Cmek
 * 
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 * 
 * const my_repo = new gcp.artifactregistry.Repository("my-repo", {
 *     location: "us-central1",
 *     repositoryId: "my-repository",
 *     description: "example docker repository with cmek",
 *     format: "DOCKER",
 *     kmsKeyName: "kms-key",
 * }, {
 *     provider: google_beta,
 * });
 * ```
 * ```python
 * import pulumi
 * import pulumi_gcp as gcp
 * 
 * my_repo = gcp.artifactregistry.Repository("my-repo",
 *     location="us-central1",
 *     repository_id="my-repository",
 *     description="example docker repository with cmek",
 *     format="DOCKER",
 *     kms_key_name="kms-key",
 *     opts=pulumi.ResourceOptions(provider=google_beta))
 * ```
 * ```csharp
 * using Pulumi;
 * using Gcp = Pulumi.Gcp;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var my_repo = new Gcp.ArtifactRegistry.Repository("my-repo", new Gcp.ArtifactRegistry.RepositoryArgs
 *         {
 *             Location = "us-central1",
 *             RepositoryId = "my-repository",
 *             Description = "example docker repository with cmek",
 *             Format = "DOCKER",
 *             KmsKeyName = "kms-key",
 *         }, new CustomResourceOptions
 *         {
 *             Provider = google_beta,
 *         });
 *     }
 * 
 * }
 * ```
 * ```go
 * package main
 * 
 * import (
 * 	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/artifactregistry"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		_, err := artifactregistry.NewRepository(ctx, "my-repo", &artifactregistry.RepositoryArgs{
 * 			Location:     pulumi.String("us-central1"),
 * 			RepositoryId: pulumi.String("my-repository"),
 * 			Description:  pulumi.String("example docker repository with cmek"),
 * 			Format:       pulumi.String("DOCKER"),
 * 			KmsKeyName:   pulumi.String("kms-key"),
 * 		}, pulumi.Provider(google_beta))
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * ```
 * {{% /example %}}
 * {{% example %}}
 * ### Artifact Registry Repository Iam
 * 
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 * 
 * const my_repo = new gcp.artifactregistry.Repository("my-repo", {
 *     location: "us-central1",
 *     repositoryId: "my-repository",
 *     description: "example docker repository with iam",
 *     format: "DOCKER",
 * }, {
 *     provider: google_beta,
 * });
 * const test_account = new gcp.serviceaccount.Account("test-account", {
 *     accountId: "my-account",
 *     displayName: "Test Service Account",
 * }, {
 *     provider: google_beta,
 * });
 * const test_iam = new gcp.artifactregistry.RepositoryIamMember("test-iam", {
 *     location: my_repo.location,
 *     repository: my_repo.name,
 *     role: "roles/artifactregistry.reader",
 *     member: pulumi.interpolate`serviceAccount:${test_account.email}`,
 * }, {
 *     provider: google_beta,
 * });
 * ```
 * ```python
 * import pulumi
 * import pulumi_gcp as gcp
 * 
 * my_repo = gcp.artifactregistry.Repository("my-repo",
 *     location="us-central1",
 *     repository_id="my-repository",
 *     description="example docker repository with iam",
 *     format="DOCKER",
 *     opts=pulumi.ResourceOptions(provider=google_beta))
 * test_account = gcp.service_account.Account("test-account",
 *     account_id="my-account",
 *     display_name="Test Service Account",
 *     opts=pulumi.ResourceOptions(provider=google_beta))
 * test_iam = gcp.artifactregistry.RepositoryIamMember("test-iam",
 *     location=my_repo.location,
 *     repository=my_repo.name,
 *     role="roles/artifactregistry.reader",
 *     member=test_account.email.apply(lambda email: f"serviceAccount:{email}"),
 *     opts=pulumi.ResourceOptions(provider=google_beta))
 * ```
 * ```csharp
 * using Pulumi;
 * using Gcp = Pulumi.Gcp;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var my_repo = new Gcp.ArtifactRegistry.Repository("my-repo", new Gcp.ArtifactRegistry.RepositoryArgs
 *         {
 *             Location = "us-central1",
 *             RepositoryId = "my-repository",
 *             Description = "example docker repository with iam",
 *             Format = "DOCKER",
 *         }, new CustomResourceOptions
 *         {
 *             Provider = google_beta,
 *         });
 *         var test_account = new Gcp.ServiceAccount.Account("test-account", new Gcp.ServiceAccount.AccountArgs
 *         {
 *             AccountId = "my-account",
 *             DisplayName = "Test Service Account",
 *         }, new CustomResourceOptions
 *         {
 *             Provider = google_beta,
 *         });
 *         var test_iam = new Gcp.ArtifactRegistry.RepositoryIamMember("test-iam", new Gcp.ArtifactRegistry.RepositoryIamMemberArgs
 *         {
 *             Location = my_repo.Location,
 *             Repository = my_repo.Name,
 *             Role = "roles/artifactregistry.reader",
 *             Member = test_account.Email.Apply(email => $"serviceAccount:{email}"),
 *         }, new CustomResourceOptions
 *         {
 *             Provider = google_beta,
 *         });
 *     }
 * 
 * }
 * ```
 * ```go
 * package main
 * 
 * import (
 * 	"fmt"
 * 
 * 	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/artifactregistry"
 * 	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/serviceAccount"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		_, err := artifactregistry.NewRepository(ctx, "my-repo", &artifactregistry.RepositoryArgs{
 * 			Location:     pulumi.String("us-central1"),
 * 			RepositoryId: pulumi.String("my-repository"),
 * 			Description:  pulumi.String("example docker repository with iam"),
 * 			Format:       pulumi.String("DOCKER"),
 * 		}, pulumi.Provider(google_beta))
 * 		if err != nil {
 * 			return err
 * 		}
 * 		_, err = serviceAccount.NewAccount(ctx, "test-account", &serviceAccount.AccountArgs{
 * 			AccountId:   pulumi.String("my-account"),
 * 			DisplayName: pulumi.String("Test Service Account"),
 * 		}, pulumi.Provider(google_beta))
 * 		if err != nil {
 * 			return err
 * 		}
 * 		_, err = artifactregistry.NewRepositoryIamMember(ctx, "test-iam", &artifactregistry.RepositoryIamMemberArgs{
 * 			Location:   my_repo.Location,
 * 			Repository: my_repo.Name,
 * 			Role:       pulumi.String("roles/artifactregistry.reader"),
 * 			Member: test_account.Email.ApplyT(func(email string) (string, error) {
 * 				return fmt.Sprintf("%v%v", "serviceAccount:", email), nil
 * 			}).(pulumi.StringOutput),
 * 		}, pulumi.Provider(google_beta))
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * ```
 * {{% /example %}}
 * {{% /examples %}}
 * 
 * ## Import
 * 
 * Repository can be imported using any of these accepted formats
 * 
 * ```sh
 *  $ pulumi import gcp:artifactregistry/repository:Repository default projects/{{project}}/locations/{{location}}/repositories/{{repository_id}}
 * ```
 * 
 * 
 * 
 * ```sh
 *  $ pulumi import gcp:artifactregistry/repository:Repository default {{project}}/{{location}}/{{repository_id}}
 * ```
 * 
 * 
 * 
 * ```sh
 *  $ pulumi import gcp:artifactregistry/repository:Repository default {{location}}/{{repository_id}}
 * ```
 * 
 * 
 * 
 * ```sh
 *  $ pulumi import gcp:artifactregistry/repository:Repository default {{repository_id}}
 * ```
 * 
 *  
 */
@ResourceType(type="gcp:artifactregistry/repository:Repository")
public class Repository extends io.pulumi.resources.CustomResource {
    /**
     * The time when the repository was created.
     * 
     */
    @Export(name="createTime", type=String.class, parameters={})
    private Output<String> createTime;

    /**
     * @return The time when the repository was created.
     * 
     */
    public Output<String> getCreateTime() {
        return this.createTime;
    }
    /**
     * The user-provided description of the repository.
     * 
     */
    @Export(name="description", type=String.class, parameters={})
    private Output</* @Nullable */ String> description;

    /**
     * @return The user-provided description of the repository.
     * 
     */
    public Output</* @Nullable */ String> getDescription() {
        return this.description;
    }
    /**
     * The format of packages that are stored in the repository. You can only create
     * alpha formats if you are a member of the [alpha user group](https://cloud.google.com/artifact-registry/docs/supported-formats#alpha-access).
     * - DOCKER
     * - MAVEN ([Preview](https://cloud.google.com/products#product-launch-stages))
     * - NPM ([Preview](https://cloud.google.com/products#product-launch-stages))
     * - PYTHON ([Preview](https://cloud.google.com/products#product-launch-stages))
     * - APT ([alpha](https://cloud.google.com/products#product-launch-stages))
     * - YUM ([alpha](https://cloud.google.com/products#product-launch-stages))
     * - HELM ([alpha](https://cloud.google.com/products#product-launch-stages))
     * 
     */
    @Export(name="format", type=String.class, parameters={})
    private Output<String> format;

    /**
     * @return The format of packages that are stored in the repository. You can only create
     * alpha formats if you are a member of the [alpha user group](https://cloud.google.com/artifact-registry/docs/supported-formats#alpha-access).
     * - DOCKER
     * - MAVEN ([Preview](https://cloud.google.com/products#product-launch-stages))
     * - NPM ([Preview](https://cloud.google.com/products#product-launch-stages))
     * - PYTHON ([Preview](https://cloud.google.com/products#product-launch-stages))
     * - APT ([alpha](https://cloud.google.com/products#product-launch-stages))
     * - YUM ([alpha](https://cloud.google.com/products#product-launch-stages))
     * - HELM ([alpha](https://cloud.google.com/products#product-launch-stages))
     * 
     */
    public Output<String> getFormat() {
        return this.format;
    }
    /**
     * The Cloud KMS resource name of the customer managed encryption key that’s
     * used to encrypt the contents of the Repository. Has the form:
     * `projects/my-project/locations/my-region/keyRings/my-kr/cryptoKeys/my-key`.
     * This value may not be changed after the Repository has been created.
     * 
     */
    @Export(name="kmsKeyName", type=String.class, parameters={})
    private Output</* @Nullable */ String> kmsKeyName;

    /**
     * @return The Cloud KMS resource name of the customer managed encryption key that’s
     * used to encrypt the contents of the Repository. Has the form:
     * `projects/my-project/locations/my-region/keyRings/my-kr/cryptoKeys/my-key`.
     * This value may not be changed after the Repository has been created.
     * 
     */
    public Output</* @Nullable */ String> getKmsKeyName() {
        return this.kmsKeyName;
    }
    /**
     * Labels with user-defined metadata.
     * This field may contain up to 64 entries. Label keys and values may be no
     * longer than 63 characters. Label keys must begin with a lowercase letter
     * and may only contain lowercase letters, numeric characters, underscores,
     * and dashes.
     * 
     */
    @Export(name="labels", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> labels;

    /**
     * @return Labels with user-defined metadata.
     * This field may contain up to 64 entries. Label keys and values may be no
     * longer than 63 characters. Label keys must begin with a lowercase letter
     * and may only contain lowercase letters, numeric characters, underscores,
     * and dashes.
     * 
     */
    public Output</* @Nullable */ Map<String,String>> getLabels() {
        return this.labels;
    }
    /**
     * The name of the location this repository is located in.
     * 
     */
    @Export(name="location", type=String.class, parameters={})
    private Output<String> location;

    /**
     * @return The name of the location this repository is located in.
     * 
     */
    public Output<String> getLocation() {
        return this.location;
    }
    /**
     * The name of the repository, for example: "projects/p1/locations/us-central1/repositories/repo1"
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The name of the repository, for example: "projects/p1/locations/us-central1/repositories/repo1"
     * 
     */
    public Output<String> getName() {
        return this.name;
    }
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Export(name="project", type=String.class, parameters={})
    private Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Output<String> getProject() {
        return this.project;
    }
    /**
     * The last part of the repository name, for example:
     * "repo1"
     * 
     */
    @Export(name="repositoryId", type=String.class, parameters={})
    private Output<String> repositoryId;

    /**
     * @return The last part of the repository name, for example:
     * "repo1"
     * 
     */
    public Output<String> getRepositoryId() {
        return this.repositoryId;
    }
    /**
     * The time when the repository was last updated.
     * 
     */
    @Export(name="updateTime", type=String.class, parameters={})
    private Output<String> updateTime;

    /**
     * @return The time when the repository was last updated.
     * 
     */
    public Output<String> getUpdateTime() {
        return this.updateTime;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Repository(String name) {
        this(name, RepositoryArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Repository(String name, RepositoryArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Repository(String name, RepositoryArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("gcp:artifactregistry/repository:Repository", name, args == null ? RepositoryArgs.Empty : args, makeResourceOptions(options, Output.empty()));
    }

    private Repository(String name, Output<String> id, @Nullable RepositoryState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("gcp:artifactregistry/repository:Repository", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Repository get(String name, Output<String> id, @Nullable RepositoryState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new Repository(name, id, state, options);
    }
}
