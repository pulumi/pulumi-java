// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.osconfig.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.InputImport;
import io.pulumi.gcp.osconfig.inputs.PatchDeploymentInstanceFilterGetArgs;
import io.pulumi.gcp.osconfig.inputs.PatchDeploymentOneTimeScheduleGetArgs;
import io.pulumi.gcp.osconfig.inputs.PatchDeploymentPatchConfigGetArgs;
import io.pulumi.gcp.osconfig.inputs.PatchDeploymentRecurringScheduleGetArgs;
import io.pulumi.gcp.osconfig.inputs.PatchDeploymentRolloutGetArgs;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class PatchDeploymentState extends io.pulumi.resources.ResourceArgs {

    public static final PatchDeploymentState Empty = new PatchDeploymentState();

    /**
     * Time the patch deployment was created. Timestamp is in RFC3339 text format. A timestamp in RFC3339 UTC "Zulu" format,
     * accurate to nanoseconds. Example: "2014-10-02T15:01:23.045123456Z".
     * 
     */
    @InputImport(name="createTime")
      private final @Nullable Output<String> createTime;

    public Output<String> getCreateTime() {
        return this.createTime == null ? Output.empty() : this.createTime;
    }

    /**
     * Description of the patch deployment. Length of the description is limited to 1024 characters.
     * 
     */
    @InputImport(name="description")
      private final @Nullable Output<String> description;

    public Output<String> getDescription() {
        return this.description == null ? Output.empty() : this.description;
    }

    /**
     * Duration of the patch. After the duration ends, the patch times out.
     * A duration in seconds with up to nine fractional digits, terminated by 's'. Example: "3.5s"
     * 
     */
    @InputImport(name="duration")
      private final @Nullable Output<String> duration;

    public Output<String> getDuration() {
        return this.duration == null ? Output.empty() : this.duration;
    }

    /**
     * VM instances to patch.
     * Structure is documented below.
     * 
     */
    @InputImport(name="instanceFilter")
      private final @Nullable Output<PatchDeploymentInstanceFilterGetArgs> instanceFilter;

    public Output<PatchDeploymentInstanceFilterGetArgs> getInstanceFilter() {
        return this.instanceFilter == null ? Output.empty() : this.instanceFilter;
    }

    /**
     * - 
     * The time the last patch job ran successfully.
     * A timestamp in RFC3339 UTC "Zulu" format, accurate to nanoseconds. Example: "2014-10-02T15:01:23.045123456Z".
     * 
     */
    @InputImport(name="lastExecuteTime")
      private final @Nullable Output<String> lastExecuteTime;

    public Output<String> getLastExecuteTime() {
        return this.lastExecuteTime == null ? Output.empty() : this.lastExecuteTime;
    }

    /**
     * Unique name for the patch deployment resource in a project. The patch deployment name is in the form:
     * projects/{project_id}/patchDeployments/{patchDeploymentId}.
     * 
     */
    @InputImport(name="name")
      private final @Nullable Output<String> name;

    public Output<String> getName() {
        return this.name == null ? Output.empty() : this.name;
    }

    /**
     * Schedule a one-time execution.
     * Structure is documented below.
     * 
     */
    @InputImport(name="oneTimeSchedule")
      private final @Nullable Output<PatchDeploymentOneTimeScheduleGetArgs> oneTimeSchedule;

    public Output<PatchDeploymentOneTimeScheduleGetArgs> getOneTimeSchedule() {
        return this.oneTimeSchedule == null ? Output.empty() : this.oneTimeSchedule;
    }

    /**
     * Patch configuration that is applied.
     * Structure is documented below.
     * 
     */
    @InputImport(name="patchConfig")
      private final @Nullable Output<PatchDeploymentPatchConfigGetArgs> patchConfig;

    public Output<PatchDeploymentPatchConfigGetArgs> getPatchConfig() {
        return this.patchConfig == null ? Output.empty() : this.patchConfig;
    }

    /**
     * A name for the patch deployment in the project. When creating a name the following rules apply:
     * * Must contain only lowercase letters, numbers, and hyphens.
     * * Must start with a letter.
     * * Must be between 1-63 characters.
     * * Must end with a number or a letter.
     * * Must be unique within the project.
     * 
     */
    @InputImport(name="patchDeploymentId")
      private final @Nullable Output<String> patchDeploymentId;

    public Output<String> getPatchDeploymentId() {
        return this.patchDeploymentId == null ? Output.empty() : this.patchDeploymentId;
    }

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @InputImport(name="project")
      private final @Nullable Output<String> project;

    public Output<String> getProject() {
        return this.project == null ? Output.empty() : this.project;
    }

    /**
     * Schedule recurring executions.
     * Structure is documented below.
     * 
     */
    @InputImport(name="recurringSchedule")
      private final @Nullable Output<PatchDeploymentRecurringScheduleGetArgs> recurringSchedule;

    public Output<PatchDeploymentRecurringScheduleGetArgs> getRecurringSchedule() {
        return this.recurringSchedule == null ? Output.empty() : this.recurringSchedule;
    }

    /**
     * Rollout strategy of the patch job.
     * Structure is documented below.
     * 
     */
    @InputImport(name="rollout")
      private final @Nullable Output<PatchDeploymentRolloutGetArgs> rollout;

    public Output<PatchDeploymentRolloutGetArgs> getRollout() {
        return this.rollout == null ? Output.empty() : this.rollout;
    }

    /**
     * Time the patch deployment was last updated. Timestamp is in RFC3339 text format. A timestamp in RFC3339 UTC "Zulu"
     * format, accurate to nanoseconds. Example: "2014-10-02T15:01:23.045123456Z".
     * 
     */
    @InputImport(name="updateTime")
      private final @Nullable Output<String> updateTime;

    public Output<String> getUpdateTime() {
        return this.updateTime == null ? Output.empty() : this.updateTime;
    }

    public PatchDeploymentState(
        @Nullable Output<String> createTime,
        @Nullable Output<String> description,
        @Nullable Output<String> duration,
        @Nullable Output<PatchDeploymentInstanceFilterGetArgs> instanceFilter,
        @Nullable Output<String> lastExecuteTime,
        @Nullable Output<String> name,
        @Nullable Output<PatchDeploymentOneTimeScheduleGetArgs> oneTimeSchedule,
        @Nullable Output<PatchDeploymentPatchConfigGetArgs> patchConfig,
        @Nullable Output<String> patchDeploymentId,
        @Nullable Output<String> project,
        @Nullable Output<PatchDeploymentRecurringScheduleGetArgs> recurringSchedule,
        @Nullable Output<PatchDeploymentRolloutGetArgs> rollout,
        @Nullable Output<String> updateTime) {
        this.createTime = createTime;
        this.description = description;
        this.duration = duration;
        this.instanceFilter = instanceFilter;
        this.lastExecuteTime = lastExecuteTime;
        this.name = name;
        this.oneTimeSchedule = oneTimeSchedule;
        this.patchConfig = patchConfig;
        this.patchDeploymentId = patchDeploymentId;
        this.project = project;
        this.recurringSchedule = recurringSchedule;
        this.rollout = rollout;
        this.updateTime = updateTime;
    }

    private PatchDeploymentState() {
        this.createTime = Output.empty();
        this.description = Output.empty();
        this.duration = Output.empty();
        this.instanceFilter = Output.empty();
        this.lastExecuteTime = Output.empty();
        this.name = Output.empty();
        this.oneTimeSchedule = Output.empty();
        this.patchConfig = Output.empty();
        this.patchDeploymentId = Output.empty();
        this.project = Output.empty();
        this.recurringSchedule = Output.empty();
        this.rollout = Output.empty();
        this.updateTime = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PatchDeploymentState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> createTime;
        private @Nullable Output<String> description;
        private @Nullable Output<String> duration;
        private @Nullable Output<PatchDeploymentInstanceFilterGetArgs> instanceFilter;
        private @Nullable Output<String> lastExecuteTime;
        private @Nullable Output<String> name;
        private @Nullable Output<PatchDeploymentOneTimeScheduleGetArgs> oneTimeSchedule;
        private @Nullable Output<PatchDeploymentPatchConfigGetArgs> patchConfig;
        private @Nullable Output<String> patchDeploymentId;
        private @Nullable Output<String> project;
        private @Nullable Output<PatchDeploymentRecurringScheduleGetArgs> recurringSchedule;
        private @Nullable Output<PatchDeploymentRolloutGetArgs> rollout;
        private @Nullable Output<String> updateTime;

        public Builder() {
    	      // Empty
        }

        public Builder(PatchDeploymentState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.createTime = defaults.createTime;
    	      this.description = defaults.description;
    	      this.duration = defaults.duration;
    	      this.instanceFilter = defaults.instanceFilter;
    	      this.lastExecuteTime = defaults.lastExecuteTime;
    	      this.name = defaults.name;
    	      this.oneTimeSchedule = defaults.oneTimeSchedule;
    	      this.patchConfig = defaults.patchConfig;
    	      this.patchDeploymentId = defaults.patchDeploymentId;
    	      this.project = defaults.project;
    	      this.recurringSchedule = defaults.recurringSchedule;
    	      this.rollout = defaults.rollout;
    	      this.updateTime = defaults.updateTime;
        }

        public Builder createTime(@Nullable Output<String> createTime) {
            this.createTime = createTime;
            return this;
        }

        public Builder createTime(@Nullable String createTime) {
            this.createTime = Output.ofNullable(createTime);
            return this;
        }

        public Builder description(@Nullable Output<String> description) {
            this.description = description;
            return this;
        }

        public Builder description(@Nullable String description) {
            this.description = Output.ofNullable(description);
            return this;
        }

        public Builder duration(@Nullable Output<String> duration) {
            this.duration = duration;
            return this;
        }

        public Builder duration(@Nullable String duration) {
            this.duration = Output.ofNullable(duration);
            return this;
        }

        public Builder instanceFilter(@Nullable Output<PatchDeploymentInstanceFilterGetArgs> instanceFilter) {
            this.instanceFilter = instanceFilter;
            return this;
        }

        public Builder instanceFilter(@Nullable PatchDeploymentInstanceFilterGetArgs instanceFilter) {
            this.instanceFilter = Output.ofNullable(instanceFilter);
            return this;
        }

        public Builder lastExecuteTime(@Nullable Output<String> lastExecuteTime) {
            this.lastExecuteTime = lastExecuteTime;
            return this;
        }

        public Builder lastExecuteTime(@Nullable String lastExecuteTime) {
            this.lastExecuteTime = Output.ofNullable(lastExecuteTime);
            return this;
        }

        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }

        public Builder name(@Nullable String name) {
            this.name = Output.ofNullable(name);
            return this;
        }

        public Builder oneTimeSchedule(@Nullable Output<PatchDeploymentOneTimeScheduleGetArgs> oneTimeSchedule) {
            this.oneTimeSchedule = oneTimeSchedule;
            return this;
        }

        public Builder oneTimeSchedule(@Nullable PatchDeploymentOneTimeScheduleGetArgs oneTimeSchedule) {
            this.oneTimeSchedule = Output.ofNullable(oneTimeSchedule);
            return this;
        }

        public Builder patchConfig(@Nullable Output<PatchDeploymentPatchConfigGetArgs> patchConfig) {
            this.patchConfig = patchConfig;
            return this;
        }

        public Builder patchConfig(@Nullable PatchDeploymentPatchConfigGetArgs patchConfig) {
            this.patchConfig = Output.ofNullable(patchConfig);
            return this;
        }

        public Builder patchDeploymentId(@Nullable Output<String> patchDeploymentId) {
            this.patchDeploymentId = patchDeploymentId;
            return this;
        }

        public Builder patchDeploymentId(@Nullable String patchDeploymentId) {
            this.patchDeploymentId = Output.ofNullable(patchDeploymentId);
            return this;
        }

        public Builder project(@Nullable Output<String> project) {
            this.project = project;
            return this;
        }

        public Builder project(@Nullable String project) {
            this.project = Output.ofNullable(project);
            return this;
        }

        public Builder recurringSchedule(@Nullable Output<PatchDeploymentRecurringScheduleGetArgs> recurringSchedule) {
            this.recurringSchedule = recurringSchedule;
            return this;
        }

        public Builder recurringSchedule(@Nullable PatchDeploymentRecurringScheduleGetArgs recurringSchedule) {
            this.recurringSchedule = Output.ofNullable(recurringSchedule);
            return this;
        }

        public Builder rollout(@Nullable Output<PatchDeploymentRolloutGetArgs> rollout) {
            this.rollout = rollout;
            return this;
        }

        public Builder rollout(@Nullable PatchDeploymentRolloutGetArgs rollout) {
            this.rollout = Output.ofNullable(rollout);
            return this;
        }

        public Builder updateTime(@Nullable Output<String> updateTime) {
            this.updateTime = updateTime;
            return this;
        }

        public Builder updateTime(@Nullable String updateTime) {
            this.updateTime = Output.ofNullable(updateTime);
            return this;
        }
        public PatchDeploymentState build() {
            return new PatchDeploymentState(createTime, description, duration, instanceFilter, lastExecuteTime, name, oneTimeSchedule, patchConfig, patchDeploymentId, project, recurringSchedule, rollout, updateTime);
        }
    }
}
