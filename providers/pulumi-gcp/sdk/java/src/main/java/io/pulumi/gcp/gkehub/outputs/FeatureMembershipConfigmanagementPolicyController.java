// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.gkehub.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class FeatureMembershipConfigmanagementPolicyController {
    private final @Nullable String auditIntervalSeconds;
    private final @Nullable Boolean enabled;
    private final @Nullable List<String> exemptableNamespaces;
    private final @Nullable Boolean logDeniesEnabled;
    private final @Nullable Boolean referentialRulesEnabled;
    private final @Nullable Boolean templateLibraryInstalled;

    @OutputCustomType.Constructor({"auditIntervalSeconds","enabled","exemptableNamespaces","logDeniesEnabled","referentialRulesEnabled","templateLibraryInstalled"})
    private FeatureMembershipConfigmanagementPolicyController(
        @Nullable String auditIntervalSeconds,
        @Nullable Boolean enabled,
        @Nullable List<String> exemptableNamespaces,
        @Nullable Boolean logDeniesEnabled,
        @Nullable Boolean referentialRulesEnabled,
        @Nullable Boolean templateLibraryInstalled) {
        this.auditIntervalSeconds = auditIntervalSeconds;
        this.enabled = enabled;
        this.exemptableNamespaces = exemptableNamespaces;
        this.logDeniesEnabled = logDeniesEnabled;
        this.referentialRulesEnabled = referentialRulesEnabled;
        this.templateLibraryInstalled = templateLibraryInstalled;
    }

    public Optional<String> getAuditIntervalSeconds() {
        return Optional.ofNullable(this.auditIntervalSeconds);
    }
    public Optional<Boolean> getEnabled() {
        return Optional.ofNullable(this.enabled);
    }
    public List<String> getExemptableNamespaces() {
        return this.exemptableNamespaces == null ? List.of() : this.exemptableNamespaces;
    }
    public Optional<Boolean> getLogDeniesEnabled() {
        return Optional.ofNullable(this.logDeniesEnabled);
    }
    public Optional<Boolean> getReferentialRulesEnabled() {
        return Optional.ofNullable(this.referentialRulesEnabled);
    }
    public Optional<Boolean> getTemplateLibraryInstalled() {
        return Optional.ofNullable(this.templateLibraryInstalled);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FeatureMembershipConfigmanagementPolicyController defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String auditIntervalSeconds;
        private @Nullable Boolean enabled;
        private @Nullable List<String> exemptableNamespaces;
        private @Nullable Boolean logDeniesEnabled;
        private @Nullable Boolean referentialRulesEnabled;
        private @Nullable Boolean templateLibraryInstalled;

        public Builder() {
    	      // Empty
        }

        public Builder(FeatureMembershipConfigmanagementPolicyController defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.auditIntervalSeconds = defaults.auditIntervalSeconds;
    	      this.enabled = defaults.enabled;
    	      this.exemptableNamespaces = defaults.exemptableNamespaces;
    	      this.logDeniesEnabled = defaults.logDeniesEnabled;
    	      this.referentialRulesEnabled = defaults.referentialRulesEnabled;
    	      this.templateLibraryInstalled = defaults.templateLibraryInstalled;
        }

        public Builder setAuditIntervalSeconds(@Nullable String auditIntervalSeconds) {
            this.auditIntervalSeconds = auditIntervalSeconds;
            return this;
        }

        public Builder setEnabled(@Nullable Boolean enabled) {
            this.enabled = enabled;
            return this;
        }

        public Builder setExemptableNamespaces(@Nullable List<String> exemptableNamespaces) {
            this.exemptableNamespaces = exemptableNamespaces;
            return this;
        }

        public Builder setLogDeniesEnabled(@Nullable Boolean logDeniesEnabled) {
            this.logDeniesEnabled = logDeniesEnabled;
            return this;
        }

        public Builder setReferentialRulesEnabled(@Nullable Boolean referentialRulesEnabled) {
            this.referentialRulesEnabled = referentialRulesEnabled;
            return this;
        }

        public Builder setTemplateLibraryInstalled(@Nullable Boolean templateLibraryInstalled) {
            this.templateLibraryInstalled = templateLibraryInstalled;
            return this;
        }

        public FeatureMembershipConfigmanagementPolicyController build() {
            return new FeatureMembershipConfigmanagementPolicyController(auditIntervalSeconds, enabled, exemptableNamespaces, logDeniesEnabled, referentialRulesEnabled, templateLibraryInstalled);
        }
    }
}
