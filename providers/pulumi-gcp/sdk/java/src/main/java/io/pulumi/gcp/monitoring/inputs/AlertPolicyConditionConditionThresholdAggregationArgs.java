// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.monitoring.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class AlertPolicyConditionConditionThresholdAggregationArgs extends io.pulumi.resources.ResourceArgs {

    public static final AlertPolicyConditionConditionThresholdAggregationArgs Empty = new AlertPolicyConditionConditionThresholdAggregationArgs();

    @InputImport(name="alignmentPeriod")
    private final @Nullable Input<String> alignmentPeriod;

    public Input<String> getAlignmentPeriod() {
        return this.alignmentPeriod == null ? Input.empty() : this.alignmentPeriod;
    }

    @InputImport(name="crossSeriesReducer")
    private final @Nullable Input<String> crossSeriesReducer;

    public Input<String> getCrossSeriesReducer() {
        return this.crossSeriesReducer == null ? Input.empty() : this.crossSeriesReducer;
    }

    @InputImport(name="groupByFields")
    private final @Nullable Input<List<String>> groupByFields;

    public Input<List<String>> getGroupByFields() {
        return this.groupByFields == null ? Input.empty() : this.groupByFields;
    }

    @InputImport(name="perSeriesAligner")
    private final @Nullable Input<String> perSeriesAligner;

    public Input<String> getPerSeriesAligner() {
        return this.perSeriesAligner == null ? Input.empty() : this.perSeriesAligner;
    }

    public AlertPolicyConditionConditionThresholdAggregationArgs(
        @Nullable Input<String> alignmentPeriod,
        @Nullable Input<String> crossSeriesReducer,
        @Nullable Input<List<String>> groupByFields,
        @Nullable Input<String> perSeriesAligner) {
        this.alignmentPeriod = alignmentPeriod;
        this.crossSeriesReducer = crossSeriesReducer;
        this.groupByFields = groupByFields;
        this.perSeriesAligner = perSeriesAligner;
    }

    private AlertPolicyConditionConditionThresholdAggregationArgs() {
        this.alignmentPeriod = Input.empty();
        this.crossSeriesReducer = Input.empty();
        this.groupByFields = Input.empty();
        this.perSeriesAligner = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AlertPolicyConditionConditionThresholdAggregationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> alignmentPeriod;
        private @Nullable Input<String> crossSeriesReducer;
        private @Nullable Input<List<String>> groupByFields;
        private @Nullable Input<String> perSeriesAligner;

        public Builder() {
    	      // Empty
        }

        public Builder(AlertPolicyConditionConditionThresholdAggregationArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.alignmentPeriod = defaults.alignmentPeriod;
    	      this.crossSeriesReducer = defaults.crossSeriesReducer;
    	      this.groupByFields = defaults.groupByFields;
    	      this.perSeriesAligner = defaults.perSeriesAligner;
        }

        public Builder setAlignmentPeriod(@Nullable Input<String> alignmentPeriod) {
            this.alignmentPeriod = alignmentPeriod;
            return this;
        }

        public Builder setAlignmentPeriod(@Nullable String alignmentPeriod) {
            this.alignmentPeriod = Input.ofNullable(alignmentPeriod);
            return this;
        }

        public Builder setCrossSeriesReducer(@Nullable Input<String> crossSeriesReducer) {
            this.crossSeriesReducer = crossSeriesReducer;
            return this;
        }

        public Builder setCrossSeriesReducer(@Nullable String crossSeriesReducer) {
            this.crossSeriesReducer = Input.ofNullable(crossSeriesReducer);
            return this;
        }

        public Builder setGroupByFields(@Nullable Input<List<String>> groupByFields) {
            this.groupByFields = groupByFields;
            return this;
        }

        public Builder setGroupByFields(@Nullable List<String> groupByFields) {
            this.groupByFields = Input.ofNullable(groupByFields);
            return this;
        }

        public Builder setPerSeriesAligner(@Nullable Input<String> perSeriesAligner) {
            this.perSeriesAligner = perSeriesAligner;
            return this;
        }

        public Builder setPerSeriesAligner(@Nullable String perSeriesAligner) {
            this.perSeriesAligner = Input.ofNullable(perSeriesAligner);
            return this;
        }

        public AlertPolicyConditionConditionThresholdAggregationArgs build() {
            return new AlertPolicyConditionConditionThresholdAggregationArgs(alignmentPeriod, crossSeriesReducer, groupByFields, perSeriesAligner);
        }
    }
}
