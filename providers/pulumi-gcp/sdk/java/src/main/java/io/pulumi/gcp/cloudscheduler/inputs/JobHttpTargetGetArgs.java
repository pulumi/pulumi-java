// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.cloudscheduler.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import io.pulumi.gcp.cloudscheduler.inputs.JobHttpTargetOauthTokenGetArgs;
import io.pulumi.gcp.cloudscheduler.inputs.JobHttpTargetOidcTokenGetArgs;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class JobHttpTargetGetArgs extends io.pulumi.resources.ResourceArgs {

    public static final JobHttpTargetGetArgs Empty = new JobHttpTargetGetArgs();

    @InputImport(name="body")
    private final @Nullable Input<String> body;

    public Input<String> getBody() {
        return this.body == null ? Input.empty() : this.body;
    }

    @InputImport(name="headers")
    private final @Nullable Input<Map<String,String>> headers;

    public Input<Map<String,String>> getHeaders() {
        return this.headers == null ? Input.empty() : this.headers;
    }

    @InputImport(name="httpMethod")
    private final @Nullable Input<String> httpMethod;

    public Input<String> getHttpMethod() {
        return this.httpMethod == null ? Input.empty() : this.httpMethod;
    }

    @InputImport(name="oauthToken")
    private final @Nullable Input<JobHttpTargetOauthTokenGetArgs> oauthToken;

    public Input<JobHttpTargetOauthTokenGetArgs> getOauthToken() {
        return this.oauthToken == null ? Input.empty() : this.oauthToken;
    }

    @InputImport(name="oidcToken")
    private final @Nullable Input<JobHttpTargetOidcTokenGetArgs> oidcToken;

    public Input<JobHttpTargetOidcTokenGetArgs> getOidcToken() {
        return this.oidcToken == null ? Input.empty() : this.oidcToken;
    }

    @InputImport(name="uri", required=true)
    private final Input<String> uri;

    public Input<String> getUri() {
        return this.uri;
    }

    public JobHttpTargetGetArgs(
        @Nullable Input<String> body,
        @Nullable Input<Map<String,String>> headers,
        @Nullable Input<String> httpMethod,
        @Nullable Input<JobHttpTargetOauthTokenGetArgs> oauthToken,
        @Nullable Input<JobHttpTargetOidcTokenGetArgs> oidcToken,
        Input<String> uri) {
        this.body = body;
        this.headers = headers;
        this.httpMethod = httpMethod;
        this.oauthToken = oauthToken;
        this.oidcToken = oidcToken;
        this.uri = Objects.requireNonNull(uri, "expected parameter 'uri' to be non-null");
    }

    private JobHttpTargetGetArgs() {
        this.body = Input.empty();
        this.headers = Input.empty();
        this.httpMethod = Input.empty();
        this.oauthToken = Input.empty();
        this.oidcToken = Input.empty();
        this.uri = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(JobHttpTargetGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> body;
        private @Nullable Input<Map<String,String>> headers;
        private @Nullable Input<String> httpMethod;
        private @Nullable Input<JobHttpTargetOauthTokenGetArgs> oauthToken;
        private @Nullable Input<JobHttpTargetOidcTokenGetArgs> oidcToken;
        private Input<String> uri;

        public Builder() {
    	      // Empty
        }

        public Builder(JobHttpTargetGetArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.body = defaults.body;
    	      this.headers = defaults.headers;
    	      this.httpMethod = defaults.httpMethod;
    	      this.oauthToken = defaults.oauthToken;
    	      this.oidcToken = defaults.oidcToken;
    	      this.uri = defaults.uri;
        }

        public Builder setBody(@Nullable Input<String> body) {
            this.body = body;
            return this;
        }

        public Builder setBody(@Nullable String body) {
            this.body = Input.ofNullable(body);
            return this;
        }

        public Builder setHeaders(@Nullable Input<Map<String,String>> headers) {
            this.headers = headers;
            return this;
        }

        public Builder setHeaders(@Nullable Map<String,String> headers) {
            this.headers = Input.ofNullable(headers);
            return this;
        }

        public Builder setHttpMethod(@Nullable Input<String> httpMethod) {
            this.httpMethod = httpMethod;
            return this;
        }

        public Builder setHttpMethod(@Nullable String httpMethod) {
            this.httpMethod = Input.ofNullable(httpMethod);
            return this;
        }

        public Builder setOauthToken(@Nullable Input<JobHttpTargetOauthTokenGetArgs> oauthToken) {
            this.oauthToken = oauthToken;
            return this;
        }

        public Builder setOauthToken(@Nullable JobHttpTargetOauthTokenGetArgs oauthToken) {
            this.oauthToken = Input.ofNullable(oauthToken);
            return this;
        }

        public Builder setOidcToken(@Nullable Input<JobHttpTargetOidcTokenGetArgs> oidcToken) {
            this.oidcToken = oidcToken;
            return this;
        }

        public Builder setOidcToken(@Nullable JobHttpTargetOidcTokenGetArgs oidcToken) {
            this.oidcToken = Input.ofNullable(oidcToken);
            return this;
        }

        public Builder setUri(Input<String> uri) {
            this.uri = Objects.requireNonNull(uri);
            return this;
        }

        public Builder setUri(String uri) {
            this.uri = Input.of(Objects.requireNonNull(uri));
            return this;
        }

        public JobHttpTargetGetArgs build() {
            return new JobHttpTargetGetArgs(body, headers, httpMethod, oauthToken, oidcToken, uri);
        }
    }
}
