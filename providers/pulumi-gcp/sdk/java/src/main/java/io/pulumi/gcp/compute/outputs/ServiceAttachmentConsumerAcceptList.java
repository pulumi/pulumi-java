// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.compute.outputs;

import io.pulumi.core.annotations.OutputCustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@OutputCustomType
public final class ServiceAttachmentConsumerAcceptList {
    /**
     * The number of consumer forwarding rules the consumer project can
     * create.
     * 
     */
    private final Integer connectionLimit;
    /**
     * A project that is allowed to connect to this service attachment.
     * 
     */
    private final String projectIdOrNum;

    @OutputCustomType.Constructor
    private ServiceAttachmentConsumerAcceptList(
        @OutputCustomType.Parameter("connectionLimit") Integer connectionLimit,
        @OutputCustomType.Parameter("projectIdOrNum") String projectIdOrNum) {
        this.connectionLimit = connectionLimit;
        this.projectIdOrNum = projectIdOrNum;
    }

    /**
     * The number of consumer forwarding rules the consumer project can
     * create.
     * 
    */
    public Integer getConnectionLimit() {
        return this.connectionLimit;
    }
    /**
     * A project that is allowed to connect to this service attachment.
     * 
    */
    public String getProjectIdOrNum() {
        return this.projectIdOrNum;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ServiceAttachmentConsumerAcceptList defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Integer connectionLimit;
        private String projectIdOrNum;

        public Builder() {
    	      // Empty
        }

        public Builder(ServiceAttachmentConsumerAcceptList defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.connectionLimit = defaults.connectionLimit;
    	      this.projectIdOrNum = defaults.projectIdOrNum;
        }

        public Builder setConnectionLimit(Integer connectionLimit) {
            this.connectionLimit = Objects.requireNonNull(connectionLimit);
            return this;
        }

        public Builder setProjectIdOrNum(String projectIdOrNum) {
            this.projectIdOrNum = Objects.requireNonNull(projectIdOrNum);
            return this;
        }
        public ServiceAttachmentConsumerAcceptList build() {
            return new ServiceAttachmentConsumerAcceptList(connectionLimit, projectIdOrNum);
        }
    }
}
