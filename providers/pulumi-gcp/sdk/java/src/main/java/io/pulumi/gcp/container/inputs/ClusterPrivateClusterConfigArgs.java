// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.container.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.gcp.container.inputs.ClusterPrivateClusterConfigMasterGlobalAccessConfigArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ClusterPrivateClusterConfigArgs extends io.pulumi.resources.ResourceArgs {

    public static final ClusterPrivateClusterConfigArgs Empty = new ClusterPrivateClusterConfigArgs();

    /**
     * When `true`, the cluster's private
     * endpoint is used as the cluster endpoint and access through the public endpoint
     * is disabled. When `false`, either endpoint can be used. This field only applies
     * to private clusters, when `enable_private_nodes` is `true`.
     * 
     */
    @Import(name="enablePrivateEndpoint", required=true)
      private final Output<Boolean> enablePrivateEndpoint;

    public Output<Boolean> getEnablePrivateEndpoint() {
        return this.enablePrivateEndpoint;
    }

    /**
     * Enables the private cluster feature,
     * creating a private endpoint on the cluster. In a private cluster, nodes only
     * have RFC 1918 private addresses and communicate with the master's private
     * endpoint via private networking.
     * 
     */
    @Import(name="enablePrivateNodes")
      private final @Nullable Output<Boolean> enablePrivateNodes;

    public Output<Boolean> getEnablePrivateNodes() {
        return this.enablePrivateNodes == null ? Output.empty() : this.enablePrivateNodes;
    }

    /**
     * Controls cluster master global
     * access settings. If unset, the provider will no longer manage this field and will
     * not modify the previously-set value. Structure is documented below.
     * 
     */
    @Import(name="masterGlobalAccessConfig")
      private final @Nullable Output<ClusterPrivateClusterConfigMasterGlobalAccessConfigArgs> masterGlobalAccessConfig;

    public Output<ClusterPrivateClusterConfigMasterGlobalAccessConfigArgs> getMasterGlobalAccessConfig() {
        return this.masterGlobalAccessConfig == null ? Output.empty() : this.masterGlobalAccessConfig;
    }

    /**
     * The IP range in CIDR notation to use for
     * the hosted master network. This range will be used for assigning private IP
     * addresses to the cluster master(s) and the ILB VIP. This range must not overlap
     * with any other ranges in use within the cluster's network, and it must be a /28
     * subnet. See [Private Cluster Limitations](https://cloud.google.com/kubernetes-engine/docs/how-to/private-clusters#req_res_lim)
     * for more details. This field only applies to private clusters, when
     * `enable_private_nodes` is `true`.
     * 
     */
    @Import(name="masterIpv4CidrBlock")
      private final @Nullable Output<String> masterIpv4CidrBlock;

    public Output<String> getMasterIpv4CidrBlock() {
        return this.masterIpv4CidrBlock == null ? Output.empty() : this.masterIpv4CidrBlock;
    }

    /**
     * The name of the peering between this cluster and the Google owned VPC.
     * 
     */
    @Import(name="peeringName")
      private final @Nullable Output<String> peeringName;

    public Output<String> getPeeringName() {
        return this.peeringName == null ? Output.empty() : this.peeringName;
    }

    /**
     * The internal IP address of this cluster's master endpoint.
     * 
     */
    @Import(name="privateEndpoint")
      private final @Nullable Output<String> privateEndpoint;

    public Output<String> getPrivateEndpoint() {
        return this.privateEndpoint == null ? Output.empty() : this.privateEndpoint;
    }

    /**
     * The external IP address of this cluster's master endpoint.
     * 
     */
    @Import(name="publicEndpoint")
      private final @Nullable Output<String> publicEndpoint;

    public Output<String> getPublicEndpoint() {
        return this.publicEndpoint == null ? Output.empty() : this.publicEndpoint;
    }

    public ClusterPrivateClusterConfigArgs(
        Output<Boolean> enablePrivateEndpoint,
        @Nullable Output<Boolean> enablePrivateNodes,
        @Nullable Output<ClusterPrivateClusterConfigMasterGlobalAccessConfigArgs> masterGlobalAccessConfig,
        @Nullable Output<String> masterIpv4CidrBlock,
        @Nullable Output<String> peeringName,
        @Nullable Output<String> privateEndpoint,
        @Nullable Output<String> publicEndpoint) {
        this.enablePrivateEndpoint = Objects.requireNonNull(enablePrivateEndpoint, "expected parameter 'enablePrivateEndpoint' to be non-null");
        this.enablePrivateNodes = enablePrivateNodes;
        this.masterGlobalAccessConfig = masterGlobalAccessConfig;
        this.masterIpv4CidrBlock = masterIpv4CidrBlock;
        this.peeringName = peeringName;
        this.privateEndpoint = privateEndpoint;
        this.publicEndpoint = publicEndpoint;
    }

    private ClusterPrivateClusterConfigArgs() {
        this.enablePrivateEndpoint = Output.empty();
        this.enablePrivateNodes = Output.empty();
        this.masterGlobalAccessConfig = Output.empty();
        this.masterIpv4CidrBlock = Output.empty();
        this.peeringName = Output.empty();
        this.privateEndpoint = Output.empty();
        this.publicEndpoint = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ClusterPrivateClusterConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<Boolean> enablePrivateEndpoint;
        private @Nullable Output<Boolean> enablePrivateNodes;
        private @Nullable Output<ClusterPrivateClusterConfigMasterGlobalAccessConfigArgs> masterGlobalAccessConfig;
        private @Nullable Output<String> masterIpv4CidrBlock;
        private @Nullable Output<String> peeringName;
        private @Nullable Output<String> privateEndpoint;
        private @Nullable Output<String> publicEndpoint;

        public Builder() {
    	      // Empty
        }

        public Builder(ClusterPrivateClusterConfigArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.enablePrivateEndpoint = defaults.enablePrivateEndpoint;
    	      this.enablePrivateNodes = defaults.enablePrivateNodes;
    	      this.masterGlobalAccessConfig = defaults.masterGlobalAccessConfig;
    	      this.masterIpv4CidrBlock = defaults.masterIpv4CidrBlock;
    	      this.peeringName = defaults.peeringName;
    	      this.privateEndpoint = defaults.privateEndpoint;
    	      this.publicEndpoint = defaults.publicEndpoint;
        }

        public Builder enablePrivateEndpoint(Output<Boolean> enablePrivateEndpoint) {
            this.enablePrivateEndpoint = Objects.requireNonNull(enablePrivateEndpoint);
            return this;
        }
        public Builder enablePrivateEndpoint(Boolean enablePrivateEndpoint) {
            this.enablePrivateEndpoint = Output.of(Objects.requireNonNull(enablePrivateEndpoint));
            return this;
        }
        public Builder enablePrivateNodes(@Nullable Output<Boolean> enablePrivateNodes) {
            this.enablePrivateNodes = enablePrivateNodes;
            return this;
        }
        public Builder enablePrivateNodes(@Nullable Boolean enablePrivateNodes) {
            this.enablePrivateNodes = Output.ofNullable(enablePrivateNodes);
            return this;
        }
        public Builder masterGlobalAccessConfig(@Nullable Output<ClusterPrivateClusterConfigMasterGlobalAccessConfigArgs> masterGlobalAccessConfig) {
            this.masterGlobalAccessConfig = masterGlobalAccessConfig;
            return this;
        }
        public Builder masterGlobalAccessConfig(@Nullable ClusterPrivateClusterConfigMasterGlobalAccessConfigArgs masterGlobalAccessConfig) {
            this.masterGlobalAccessConfig = Output.ofNullable(masterGlobalAccessConfig);
            return this;
        }
        public Builder masterIpv4CidrBlock(@Nullable Output<String> masterIpv4CidrBlock) {
            this.masterIpv4CidrBlock = masterIpv4CidrBlock;
            return this;
        }
        public Builder masterIpv4CidrBlock(@Nullable String masterIpv4CidrBlock) {
            this.masterIpv4CidrBlock = Output.ofNullable(masterIpv4CidrBlock);
            return this;
        }
        public Builder peeringName(@Nullable Output<String> peeringName) {
            this.peeringName = peeringName;
            return this;
        }
        public Builder peeringName(@Nullable String peeringName) {
            this.peeringName = Output.ofNullable(peeringName);
            return this;
        }
        public Builder privateEndpoint(@Nullable Output<String> privateEndpoint) {
            this.privateEndpoint = privateEndpoint;
            return this;
        }
        public Builder privateEndpoint(@Nullable String privateEndpoint) {
            this.privateEndpoint = Output.ofNullable(privateEndpoint);
            return this;
        }
        public Builder publicEndpoint(@Nullable Output<String> publicEndpoint) {
            this.publicEndpoint = publicEndpoint;
            return this;
        }
        public Builder publicEndpoint(@Nullable String publicEndpoint) {
            this.publicEndpoint = Output.ofNullable(publicEndpoint);
            return this;
        }        public ClusterPrivateClusterConfigArgs build() {
            return new ClusterPrivateClusterConfigArgs(enablePrivateEndpoint, enablePrivateNodes, masterGlobalAccessConfig, masterIpv4CidrBlock, peeringName, privateEndpoint, publicEndpoint);
        }
    }
}
