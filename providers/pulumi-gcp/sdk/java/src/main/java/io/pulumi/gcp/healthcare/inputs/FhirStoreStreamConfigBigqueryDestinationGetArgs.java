// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.healthcare.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import io.pulumi.gcp.healthcare.inputs.FhirStoreStreamConfigBigqueryDestinationSchemaConfigGetArgs;
import java.lang.String;
import java.util.Objects;


public final class FhirStoreStreamConfigBigqueryDestinationGetArgs extends io.pulumi.resources.ResourceArgs {

    public static final FhirStoreStreamConfigBigqueryDestinationGetArgs Empty = new FhirStoreStreamConfigBigqueryDestinationGetArgs();

    /**
     * BigQuery URI to a dataset, up to 2000 characters long, in the format bq://projectId.bqDatasetId
     * 
     */
    @InputImport(name="datasetUri", required=true)
    private final Input<String> datasetUri;

    public Input<String> getDatasetUri() {
        return this.datasetUri;
    }

    /**
     * The configuration for the exported BigQuery schema.
     * Structure is documented below.
     * 
     */
    @InputImport(name="schemaConfig", required=true)
    private final Input<FhirStoreStreamConfigBigqueryDestinationSchemaConfigGetArgs> schemaConfig;

    public Input<FhirStoreStreamConfigBigqueryDestinationSchemaConfigGetArgs> getSchemaConfig() {
        return this.schemaConfig;
    }

    public FhirStoreStreamConfigBigqueryDestinationGetArgs(
        Input<String> datasetUri,
        Input<FhirStoreStreamConfigBigqueryDestinationSchemaConfigGetArgs> schemaConfig) {
        this.datasetUri = Objects.requireNonNull(datasetUri, "expected parameter 'datasetUri' to be non-null");
        this.schemaConfig = Objects.requireNonNull(schemaConfig, "expected parameter 'schemaConfig' to be non-null");
    }

    private FhirStoreStreamConfigBigqueryDestinationGetArgs() {
        this.datasetUri = Input.empty();
        this.schemaConfig = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FhirStoreStreamConfigBigqueryDestinationGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<String> datasetUri;
        private Input<FhirStoreStreamConfigBigqueryDestinationSchemaConfigGetArgs> schemaConfig;

        public Builder() {
    	      // Empty
        }

        public Builder(FhirStoreStreamConfigBigqueryDestinationGetArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.datasetUri = defaults.datasetUri;
    	      this.schemaConfig = defaults.schemaConfig;
        }

        public Builder setDatasetUri(Input<String> datasetUri) {
            this.datasetUri = Objects.requireNonNull(datasetUri);
            return this;
        }

        public Builder setDatasetUri(String datasetUri) {
            this.datasetUri = Input.of(Objects.requireNonNull(datasetUri));
            return this;
        }

        public Builder setSchemaConfig(Input<FhirStoreStreamConfigBigqueryDestinationSchemaConfigGetArgs> schemaConfig) {
            this.schemaConfig = Objects.requireNonNull(schemaConfig);
            return this;
        }

        public Builder setSchemaConfig(FhirStoreStreamConfigBigqueryDestinationSchemaConfigGetArgs schemaConfig) {
            this.schemaConfig = Input.of(Objects.requireNonNull(schemaConfig));
            return this;
        }

        public FhirStoreStreamConfigBigqueryDestinationGetArgs build() {
            return new FhirStoreStreamConfigBigqueryDestinationGetArgs(datasetUri, schemaConfig);
        }
    }
}
