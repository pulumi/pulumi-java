// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.cloudtasks;

import io.pulumi.core.Input;
import io.pulumi.core.Output;
import io.pulumi.core.internal.annotations.OutputExport;
import io.pulumi.core.internal.annotations.ResourceType;
import io.pulumi.gcp.Utilities;
import io.pulumi.gcp.cloudtasks.QueueArgs;
import io.pulumi.gcp.cloudtasks.inputs.QueueState;
import io.pulumi.gcp.cloudtasks.outputs.QueueAppEngineRoutingOverride;
import io.pulumi.gcp.cloudtasks.outputs.QueueRateLimits;
import io.pulumi.gcp.cloudtasks.outputs.QueueRetryConfig;
import io.pulumi.gcp.cloudtasks.outputs.QueueStackdriverLoggingConfig;
import java.lang.String;
import javax.annotation.Nullable;

@ResourceType(type="gcp:cloudtasks/queue:Queue")
public class Queue extends io.pulumi.resources.CustomResource {
    @OutputExport(name="appEngineRoutingOverride", type=QueueAppEngineRoutingOverride.class, parameters={})
    private Output</* @Nullable */ QueueAppEngineRoutingOverride> appEngineRoutingOverride;

    public Output</* @Nullable */ QueueAppEngineRoutingOverride> getAppEngineRoutingOverride() {
        return this.appEngineRoutingOverride;
    }
    @OutputExport(name="location", type=String.class, parameters={})
    private Output<String> location;

    public Output<String> getLocation() {
        return this.location;
    }
    @OutputExport(name="name", type=String.class, parameters={})
    private Output<String> name;

    public Output<String> getName() {
        return this.name;
    }
    @OutputExport(name="project", type=String.class, parameters={})
    private Output<String> project;

    public Output<String> getProject() {
        return this.project;
    }
    @OutputExport(name="rateLimits", type=QueueRateLimits.class, parameters={})
    private Output<QueueRateLimits> rateLimits;

    public Output<QueueRateLimits> getRateLimits() {
        return this.rateLimits;
    }
    @OutputExport(name="retryConfig", type=QueueRetryConfig.class, parameters={})
    private Output<QueueRetryConfig> retryConfig;

    public Output<QueueRetryConfig> getRetryConfig() {
        return this.retryConfig;
    }
    @OutputExport(name="stackdriverLoggingConfig", type=QueueStackdriverLoggingConfig.class, parameters={})
    private Output</* @Nullable */ QueueStackdriverLoggingConfig> stackdriverLoggingConfig;

    public Output</* @Nullable */ QueueStackdriverLoggingConfig> getStackdriverLoggingConfig() {
        return this.stackdriverLoggingConfig;
    }

    public Queue(String name, QueueArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("gcp:cloudtasks/queue:Queue", name, args == null ? QueueArgs.Empty : args, makeResourceOptions(options, Input.empty()));
    }

    private Queue(String name, Input<String> id, @Nullable QueueState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("gcp:cloudtasks/queue:Queue", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Input<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .setVersion(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    public static Queue get(String name, Input<String> id, @Nullable QueueState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new Queue(name, id, state, options);
    }
}
