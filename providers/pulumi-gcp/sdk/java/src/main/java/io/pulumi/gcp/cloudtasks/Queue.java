// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.cloudtasks;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Export;
import io.pulumi.core.annotations.ResourceType;
import io.pulumi.gcp.Utilities;
import io.pulumi.gcp.cloudtasks.QueueArgs;
import io.pulumi.gcp.cloudtasks.inputs.QueueState;
import io.pulumi.gcp.cloudtasks.outputs.QueueAppEngineRoutingOverride;
import io.pulumi.gcp.cloudtasks.outputs.QueueRateLimits;
import io.pulumi.gcp.cloudtasks.outputs.QueueRetryConfig;
import io.pulumi.gcp.cloudtasks.outputs.QueueStackdriverLoggingConfig;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * A named resource to which messages are sent by publishers.
 * 
 * 
 * 
 * > **Warning:** This resource requires an App Engine application to be created on the
 * project you're provisioning it on. If you haven't already enabled it, you
 * can create a `gcp.appengine.Application` resource to do so. This
 * resource's location will be the same as the App Engine location specified.
 * 
 * {{% examples %}}
 * ## Example Usage
 * {{% example %}}
 * ### Queue Basic
 * 
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 * 
 * const defaultQueue = new gcp.cloudtasks.Queue("default", {
 *     location: "us-central1",
 * });
 * ```
 * ```python
 * import pulumi
 * import pulumi_gcp as gcp
 * 
 * default = gcp.cloudtasks.Queue("default", location="us-central1")
 * ```
 * ```csharp
 * using Pulumi;
 * using Gcp = Pulumi.Gcp;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var @default = new Gcp.CloudTasks.Queue("default", new Gcp.CloudTasks.QueueArgs
 *         {
 *             Location = "us-central1",
 *         });
 *     }
 * 
 * }
 * ```
 * ```go
 * package main
 * 
 * import (
 * 	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/cloudtasks"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		_, err := cloudtasks.NewQueue(ctx, "default", &cloudtasks.QueueArgs{
 * 			Location: pulumi.String("us-central1"),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * ```
 * {{% /example %}}
 * {{% example %}}
 * ### Cloud Tasks Queue Advanced
 * 
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 * 
 * const advancedConfiguration = new gcp.cloudtasks.Queue("advanced_configuration", {
 *     appEngineRoutingOverride: {
 *         instance: "test",
 *         service: "worker",
 *         version: "1.0",
 *     },
 *     location: "us-central1",
 *     rateLimits: {
 *         maxConcurrentDispatches: 3,
 *         maxDispatchesPerSecond: 2,
 *     },
 *     retryConfig: {
 *         maxAttempts: 5,
 *         maxBackoff: "3s",
 *         maxDoublings: 1,
 *         maxRetryDuration: "4s",
 *         minBackoff: "2s",
 *     },
 *     stackdriverLoggingConfig: {
 *         samplingRatio: 0.9,
 *     },
 * });
 * ```
 * ```python
 * import pulumi
 * import pulumi_gcp as gcp
 * 
 * advanced_configuration = gcp.cloudtasks.Queue("advancedConfiguration",
 *     app_engine_routing_override=gcp.cloudtasks.QueueAppEngineRoutingOverrideArgs(
 *         instance="test",
 *         service="worker",
 *         version="1.0",
 *     ),
 *     location="us-central1",
 *     rate_limits=gcp.cloudtasks.QueueRateLimitsArgs(
 *         max_concurrent_dispatches=3,
 *         max_dispatches_per_second=2,
 *     ),
 *     retry_config=gcp.cloudtasks.QueueRetryConfigArgs(
 *         max_attempts=5,
 *         max_backoff="3s",
 *         max_doublings=1,
 *         max_retry_duration="4s",
 *         min_backoff="2s",
 *     ),
 *     stackdriver_logging_config=gcp.cloudtasks.QueueStackdriverLoggingConfigArgs(
 *         sampling_ratio=0.9,
 *     ))
 * ```
 * ```csharp
 * using Pulumi;
 * using Gcp = Pulumi.Gcp;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var advancedConfiguration = new Gcp.CloudTasks.Queue("advancedConfiguration", new Gcp.CloudTasks.QueueArgs
 *         {
 *             AppEngineRoutingOverride = new Gcp.CloudTasks.Inputs.QueueAppEngineRoutingOverrideArgs
 *             {
 *                 Instance = "test",
 *                 Service = "worker",
 *                 Version = "1.0",
 *             },
 *             Location = "us-central1",
 *             RateLimits = new Gcp.CloudTasks.Inputs.QueueRateLimitsArgs
 *             {
 *                 MaxConcurrentDispatches = 3,
 *                 MaxDispatchesPerSecond = 2,
 *             },
 *             RetryConfig = new Gcp.CloudTasks.Inputs.QueueRetryConfigArgs
 *             {
 *                 MaxAttempts = 5,
 *                 MaxBackoff = "3s",
 *                 MaxDoublings = 1,
 *                 MaxRetryDuration = "4s",
 *                 MinBackoff = "2s",
 *             },
 *             StackdriverLoggingConfig = new Gcp.CloudTasks.Inputs.QueueStackdriverLoggingConfigArgs
 *             {
 *                 SamplingRatio = 0.9,
 *             },
 *         });
 *     }
 * 
 * }
 * ```
 * ```go
 * package main
 * 
 * import (
 * 	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/cloudtasks"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		_, err := cloudtasks.NewQueue(ctx, "advancedConfiguration", &cloudtasks.QueueArgs{
 * 			AppEngineRoutingOverride: &cloudtasks.QueueAppEngineRoutingOverrideArgs{
 * 				Instance: pulumi.String("test"),
 * 				Service:  pulumi.String("worker"),
 * 				Version:  pulumi.String("1.0"),
 * 			},
 * 			Location: pulumi.String("us-central1"),
 * 			RateLimits: &cloudtasks.QueueRateLimitsArgs{
 * 				MaxConcurrentDispatches: pulumi.Int(3),
 * 				MaxDispatchesPerSecond:  pulumi.Float64(2),
 * 			},
 * 			RetryConfig: &cloudtasks.QueueRetryConfigArgs{
 * 				MaxAttempts:      pulumi.Int(5),
 * 				MaxBackoff:       pulumi.String("3s"),
 * 				MaxDoublings:     pulumi.Int(1),
 * 				MaxRetryDuration: pulumi.String("4s"),
 * 				MinBackoff:       pulumi.String("2s"),
 * 			},
 * 			StackdriverLoggingConfig: &cloudtasks.QueueStackdriverLoggingConfigArgs{
 * 				SamplingRatio: pulumi.Float64(0.9),
 * 			},
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * ```
 * {{% /example %}}
 * {{% /examples %}}
 * 
 * ## Import
 * 
 * Queue can be imported using any of these accepted formats
 * 
 * ```sh
 *  $ pulumi import gcp:cloudtasks/queue:Queue default projects/{{project}}/locations/{{location}}/queues/{{name}}
 * ```
 * 
 * 
 * 
 * ```sh
 *  $ pulumi import gcp:cloudtasks/queue:Queue default {{project}}/{{location}}/{{name}}
 * ```
 * 
 * 
 * 
 * ```sh
 *  $ pulumi import gcp:cloudtasks/queue:Queue default {{location}}/{{name}}
 * ```
 * 
 *  
 */
@ResourceType(type="gcp:cloudtasks/queue:Queue")
public class Queue extends io.pulumi.resources.CustomResource {
    /**
     * Overrides for task-level appEngineRouting. These settings apply only
     * to App Engine tasks in this queue
     * Structure is documented below.
     * 
     */
    @Export(name="appEngineRoutingOverride", type=QueueAppEngineRoutingOverride.class, parameters={})
    private Output</* @Nullable */ QueueAppEngineRoutingOverride> appEngineRoutingOverride;

    /**
     * @return Overrides for task-level appEngineRouting. These settings apply only
     * to App Engine tasks in this queue
     * Structure is documented below.
     * 
     */
    public Output</* @Nullable */ QueueAppEngineRoutingOverride> getAppEngineRoutingOverride() {
        return this.appEngineRoutingOverride;
    }
    /**
     * The location of the queue
     * 
     */
    @Export(name="location", type=String.class, parameters={})
    private Output<String> location;

    /**
     * @return The location of the queue
     * 
     */
    public Output<String> getLocation() {
        return this.location;
    }
    /**
     * The queue name.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The queue name.
     * 
     */
    public Output<String> getName() {
        return this.name;
    }
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Export(name="project", type=String.class, parameters={})
    private Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Output<String> getProject() {
        return this.project;
    }
    /**
     * Rate limits for task dispatches.
     * The queue's actual dispatch rate is the result of:
     * * Number of tasks in the queue
     * * User-specified throttling: rateLimits, retryConfig, and the queue's state.
     * * System throttling due to 429 (Too Many Requests) or 503 (Service
     * Unavailable) responses from the worker, high error rates, or to
     * smooth sudden large traffic spikes.
     * Structure is documented below.
     * 
     */
    @Export(name="rateLimits", type=QueueRateLimits.class, parameters={})
    private Output<QueueRateLimits> rateLimits;

    /**
     * @return Rate limits for task dispatches.
     * The queue's actual dispatch rate is the result of:
     * * Number of tasks in the queue
     * * User-specified throttling: rateLimits, retryConfig, and the queue's state.
     * * System throttling due to 429 (Too Many Requests) or 503 (Service
     * Unavailable) responses from the worker, high error rates, or to
     * smooth sudden large traffic spikes.
     * Structure is documented below.
     * 
     */
    public Output<QueueRateLimits> getRateLimits() {
        return this.rateLimits;
    }
    /**
     * Settings that determine the retry behavior.
     * Structure is documented below.
     * 
     */
    @Export(name="retryConfig", type=QueueRetryConfig.class, parameters={})
    private Output<QueueRetryConfig> retryConfig;

    /**
     * @return Settings that determine the retry behavior.
     * Structure is documented below.
     * 
     */
    public Output<QueueRetryConfig> getRetryConfig() {
        return this.retryConfig;
    }
    /**
     * Configuration options for writing logs to Stackdriver Logging.
     * Structure is documented below.
     * 
     */
    @Export(name="stackdriverLoggingConfig", type=QueueStackdriverLoggingConfig.class, parameters={})
    private Output</* @Nullable */ QueueStackdriverLoggingConfig> stackdriverLoggingConfig;

    /**
     * @return Configuration options for writing logs to Stackdriver Logging.
     * Structure is documented below.
     * 
     */
    public Output</* @Nullable */ QueueStackdriverLoggingConfig> getStackdriverLoggingConfig() {
        return this.stackdriverLoggingConfig;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Queue(String name) {
        this(name, QueueArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Queue(String name, QueueArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Queue(String name, QueueArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("gcp:cloudtasks/queue:Queue", name, args == null ? QueueArgs.Empty : args, makeResourceOptions(options, Output.empty()));
    }

    private Queue(String name, Output<String> id, @Nullable QueueState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("gcp:cloudtasks/queue:Queue", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Queue get(String name, Output<String> id, @Nullable QueueState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new Queue(name, id, state, options);
    }
}
