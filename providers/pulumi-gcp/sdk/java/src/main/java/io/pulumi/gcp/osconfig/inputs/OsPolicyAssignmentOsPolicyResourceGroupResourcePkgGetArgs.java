// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.osconfig.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import io.pulumi.gcp.osconfig.inputs.OsPolicyAssignmentOsPolicyResourceGroupResourcePkgAptGetArgs;
import io.pulumi.gcp.osconfig.inputs.OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebGetArgs;
import io.pulumi.gcp.osconfig.inputs.OsPolicyAssignmentOsPolicyResourceGroupResourcePkgGoogetGetArgs;
import io.pulumi.gcp.osconfig.inputs.OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiGetArgs;
import io.pulumi.gcp.osconfig.inputs.OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmGetArgs;
import io.pulumi.gcp.osconfig.inputs.OsPolicyAssignmentOsPolicyResourceGroupResourcePkgYumGetArgs;
import io.pulumi.gcp.osconfig.inputs.OsPolicyAssignmentOsPolicyResourceGroupResourcePkgZypperGetArgs;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class OsPolicyAssignmentOsPolicyResourceGroupResourcePkgGetArgs extends io.pulumi.resources.ResourceArgs {

    public static final OsPolicyAssignmentOsPolicyResourceGroupResourcePkgGetArgs Empty = new OsPolicyAssignmentOsPolicyResourceGroupResourcePkgGetArgs();

    /**
     * An Apt Repository.
     * 
     */
    @InputImport(name="apt")
      private final @Nullable Input<OsPolicyAssignmentOsPolicyResourceGroupResourcePkgAptGetArgs> apt;

    public Input<OsPolicyAssignmentOsPolicyResourceGroupResourcePkgAptGetArgs> getApt() {
        return this.apt == null ? Input.empty() : this.apt;
    }

    /**
     * A deb package file.
     * 
     */
    @InputImport(name="deb")
      private final @Nullable Input<OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebGetArgs> deb;

    public Input<OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebGetArgs> getDeb() {
        return this.deb == null ? Input.empty() : this.deb;
    }

    /**
     * Required. The desired state the agent should maintain for this package. Possible values: DESIRED_STATE_UNSPECIFIED, INSTALLED, REMOVED
     * 
     */
    @InputImport(name="desiredState", required=true)
      private final Input<String> desiredState;

    public Input<String> getDesiredState() {
        return this.desiredState;
    }

    /**
     * A package managed by GooGet.
     * 
     */
    @InputImport(name="googet")
      private final @Nullable Input<OsPolicyAssignmentOsPolicyResourceGroupResourcePkgGoogetGetArgs> googet;

    public Input<OsPolicyAssignmentOsPolicyResourceGroupResourcePkgGoogetGetArgs> getGooget() {
        return this.googet == null ? Input.empty() : this.googet;
    }

    /**
     * An MSI package.
     * 
     */
    @InputImport(name="msi")
      private final @Nullable Input<OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiGetArgs> msi;

    public Input<OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiGetArgs> getMsi() {
        return this.msi == null ? Input.empty() : this.msi;
    }

    /**
     * An rpm package file.
     * 
     */
    @InputImport(name="rpm")
      private final @Nullable Input<OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmGetArgs> rpm;

    public Input<OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmGetArgs> getRpm() {
        return this.rpm == null ? Input.empty() : this.rpm;
    }

    /**
     * A Yum Repository.
     * 
     */
    @InputImport(name="yum")
      private final @Nullable Input<OsPolicyAssignmentOsPolicyResourceGroupResourcePkgYumGetArgs> yum;

    public Input<OsPolicyAssignmentOsPolicyResourceGroupResourcePkgYumGetArgs> getYum() {
        return this.yum == null ? Input.empty() : this.yum;
    }

    /**
     * A Zypper Repository.
     * 
     */
    @InputImport(name="zypper")
      private final @Nullable Input<OsPolicyAssignmentOsPolicyResourceGroupResourcePkgZypperGetArgs> zypper;

    public Input<OsPolicyAssignmentOsPolicyResourceGroupResourcePkgZypperGetArgs> getZypper() {
        return this.zypper == null ? Input.empty() : this.zypper;
    }

    public OsPolicyAssignmentOsPolicyResourceGroupResourcePkgGetArgs(
        @Nullable Input<OsPolicyAssignmentOsPolicyResourceGroupResourcePkgAptGetArgs> apt,
        @Nullable Input<OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebGetArgs> deb,
        Input<String> desiredState,
        @Nullable Input<OsPolicyAssignmentOsPolicyResourceGroupResourcePkgGoogetGetArgs> googet,
        @Nullable Input<OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiGetArgs> msi,
        @Nullable Input<OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmGetArgs> rpm,
        @Nullable Input<OsPolicyAssignmentOsPolicyResourceGroupResourcePkgYumGetArgs> yum,
        @Nullable Input<OsPolicyAssignmentOsPolicyResourceGroupResourcePkgZypperGetArgs> zypper) {
        this.apt = apt;
        this.deb = deb;
        this.desiredState = Objects.requireNonNull(desiredState, "expected parameter 'desiredState' to be non-null");
        this.googet = googet;
        this.msi = msi;
        this.rpm = rpm;
        this.yum = yum;
        this.zypper = zypper;
    }

    private OsPolicyAssignmentOsPolicyResourceGroupResourcePkgGetArgs() {
        this.apt = Input.empty();
        this.deb = Input.empty();
        this.desiredState = Input.empty();
        this.googet = Input.empty();
        this.msi = Input.empty();
        this.rpm = Input.empty();
        this.yum = Input.empty();
        this.zypper = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<OsPolicyAssignmentOsPolicyResourceGroupResourcePkgAptGetArgs> apt;
        private @Nullable Input<OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebGetArgs> deb;
        private Input<String> desiredState;
        private @Nullable Input<OsPolicyAssignmentOsPolicyResourceGroupResourcePkgGoogetGetArgs> googet;
        private @Nullable Input<OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiGetArgs> msi;
        private @Nullable Input<OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmGetArgs> rpm;
        private @Nullable Input<OsPolicyAssignmentOsPolicyResourceGroupResourcePkgYumGetArgs> yum;
        private @Nullable Input<OsPolicyAssignmentOsPolicyResourceGroupResourcePkgZypperGetArgs> zypper;

        public Builder() {
    	      // Empty
        }

        public Builder(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgGetArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.apt = defaults.apt;
    	      this.deb = defaults.deb;
    	      this.desiredState = defaults.desiredState;
    	      this.googet = defaults.googet;
    	      this.msi = defaults.msi;
    	      this.rpm = defaults.rpm;
    	      this.yum = defaults.yum;
    	      this.zypper = defaults.zypper;
        }

        public Builder setApt(@Nullable Input<OsPolicyAssignmentOsPolicyResourceGroupResourcePkgAptGetArgs> apt) {
            this.apt = apt;
            return this;
        }

        public Builder setApt(@Nullable OsPolicyAssignmentOsPolicyResourceGroupResourcePkgAptGetArgs apt) {
            this.apt = Input.ofNullable(apt);
            return this;
        }

        public Builder setDeb(@Nullable Input<OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebGetArgs> deb) {
            this.deb = deb;
            return this;
        }

        public Builder setDeb(@Nullable OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebGetArgs deb) {
            this.deb = Input.ofNullable(deb);
            return this;
        }

        public Builder setDesiredState(Input<String> desiredState) {
            this.desiredState = Objects.requireNonNull(desiredState);
            return this;
        }

        public Builder setDesiredState(String desiredState) {
            this.desiredState = Input.of(Objects.requireNonNull(desiredState));
            return this;
        }

        public Builder setGooget(@Nullable Input<OsPolicyAssignmentOsPolicyResourceGroupResourcePkgGoogetGetArgs> googet) {
            this.googet = googet;
            return this;
        }

        public Builder setGooget(@Nullable OsPolicyAssignmentOsPolicyResourceGroupResourcePkgGoogetGetArgs googet) {
            this.googet = Input.ofNullable(googet);
            return this;
        }

        public Builder setMsi(@Nullable Input<OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiGetArgs> msi) {
            this.msi = msi;
            return this;
        }

        public Builder setMsi(@Nullable OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiGetArgs msi) {
            this.msi = Input.ofNullable(msi);
            return this;
        }

        public Builder setRpm(@Nullable Input<OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmGetArgs> rpm) {
            this.rpm = rpm;
            return this;
        }

        public Builder setRpm(@Nullable OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmGetArgs rpm) {
            this.rpm = Input.ofNullable(rpm);
            return this;
        }

        public Builder setYum(@Nullable Input<OsPolicyAssignmentOsPolicyResourceGroupResourcePkgYumGetArgs> yum) {
            this.yum = yum;
            return this;
        }

        public Builder setYum(@Nullable OsPolicyAssignmentOsPolicyResourceGroupResourcePkgYumGetArgs yum) {
            this.yum = Input.ofNullable(yum);
            return this;
        }

        public Builder setZypper(@Nullable Input<OsPolicyAssignmentOsPolicyResourceGroupResourcePkgZypperGetArgs> zypper) {
            this.zypper = zypper;
            return this;
        }

        public Builder setZypper(@Nullable OsPolicyAssignmentOsPolicyResourceGroupResourcePkgZypperGetArgs zypper) {
            this.zypper = Input.ofNullable(zypper);
            return this;
        }
        public OsPolicyAssignmentOsPolicyResourceGroupResourcePkgGetArgs build() {
            return new OsPolicyAssignmentOsPolicyResourceGroupResourcePkgGetArgs(apt, deb, desiredState, googet, msi, rpm, yum, zypper);
        }
    }
}
