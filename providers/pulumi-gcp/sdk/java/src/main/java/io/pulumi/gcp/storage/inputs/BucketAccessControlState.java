// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.storage.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class BucketAccessControlState extends io.pulumi.resources.ResourceArgs {

    public static final BucketAccessControlState Empty = new BucketAccessControlState();

    @InputImport(name="bucket")
    private final @Nullable Input<String> bucket;

    public Input<String> getBucket() {
        return this.bucket == null ? Input.empty() : this.bucket;
    }

    @InputImport(name="domain")
    private final @Nullable Input<String> domain;

    public Input<String> getDomain() {
        return this.domain == null ? Input.empty() : this.domain;
    }

    @InputImport(name="email")
    private final @Nullable Input<String> email;

    public Input<String> getEmail() {
        return this.email == null ? Input.empty() : this.email;
    }

    @InputImport(name="entity")
    private final @Nullable Input<String> entity;

    public Input<String> getEntity() {
        return this.entity == null ? Input.empty() : this.entity;
    }

    @InputImport(name="role")
    private final @Nullable Input<String> role;

    public Input<String> getRole() {
        return this.role == null ? Input.empty() : this.role;
    }

    public BucketAccessControlState(
        @Nullable Input<String> bucket,
        @Nullable Input<String> domain,
        @Nullable Input<String> email,
        @Nullable Input<String> entity,
        @Nullable Input<String> role) {
        this.bucket = bucket;
        this.domain = domain;
        this.email = email;
        this.entity = entity;
        this.role = role;
    }

    private BucketAccessControlState() {
        this.bucket = Input.empty();
        this.domain = Input.empty();
        this.email = Input.empty();
        this.entity = Input.empty();
        this.role = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BucketAccessControlState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> bucket;
        private @Nullable Input<String> domain;
        private @Nullable Input<String> email;
        private @Nullable Input<String> entity;
        private @Nullable Input<String> role;

        public Builder() {
    	      // Empty
        }

        public Builder(BucketAccessControlState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bucket = defaults.bucket;
    	      this.domain = defaults.domain;
    	      this.email = defaults.email;
    	      this.entity = defaults.entity;
    	      this.role = defaults.role;
        }

        public Builder setBucket(@Nullable Input<String> bucket) {
            this.bucket = bucket;
            return this;
        }

        public Builder setBucket(@Nullable String bucket) {
            this.bucket = Input.ofNullable(bucket);
            return this;
        }

        public Builder setDomain(@Nullable Input<String> domain) {
            this.domain = domain;
            return this;
        }

        public Builder setDomain(@Nullable String domain) {
            this.domain = Input.ofNullable(domain);
            return this;
        }

        public Builder setEmail(@Nullable Input<String> email) {
            this.email = email;
            return this;
        }

        public Builder setEmail(@Nullable String email) {
            this.email = Input.ofNullable(email);
            return this;
        }

        public Builder setEntity(@Nullable Input<String> entity) {
            this.entity = entity;
            return this;
        }

        public Builder setEntity(@Nullable String entity) {
            this.entity = Input.ofNullable(entity);
            return this;
        }

        public Builder setRole(@Nullable Input<String> role) {
            this.role = role;
            return this;
        }

        public Builder setRole(@Nullable String role) {
            this.role = Input.ofNullable(role);
            return this;
        }

        public BucketAccessControlState build() {
            return new BucketAccessControlState(bucket, domain, email, entity, role);
        }
    }
}
