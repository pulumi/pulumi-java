// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.compute.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class BackendServiceSignedUrlKeyState extends io.pulumi.resources.ResourceArgs {

    public static final BackendServiceSignedUrlKeyState Empty = new BackendServiceSignedUrlKeyState();

    /**
     * The backend service this signed URL key belongs.
     * 
     */
    @InputImport(name="backendService")
      private final @Nullable Output<String> backendService;

    public Output<String> getBackendService() {
        return this.backendService == null ? Output.empty() : this.backendService;
    }

    /**
     * 128-bit key value used for signing the URL. The key value must be a
     * valid RFC 4648 Section 5 base64url encoded string.
     * **Note**: This property is sensitive and will not be displayed in the plan.
     * 
     */
    @InputImport(name="keyValue")
      private final @Nullable Output<String> keyValue;

    public Output<String> getKeyValue() {
        return this.keyValue == null ? Output.empty() : this.keyValue;
    }

    /**
     * Name of the signed URL key.
     * 
     */
    @InputImport(name="name")
      private final @Nullable Output<String> name;

    public Output<String> getName() {
        return this.name == null ? Output.empty() : this.name;
    }

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @InputImport(name="project")
      private final @Nullable Output<String> project;

    public Output<String> getProject() {
        return this.project == null ? Output.empty() : this.project;
    }

    public BackendServiceSignedUrlKeyState(
        @Nullable Output<String> backendService,
        @Nullable Output<String> keyValue,
        @Nullable Output<String> name,
        @Nullable Output<String> project) {
        this.backendService = backendService;
        this.keyValue = keyValue;
        this.name = name;
        this.project = project;
    }

    private BackendServiceSignedUrlKeyState() {
        this.backendService = Output.empty();
        this.keyValue = Output.empty();
        this.name = Output.empty();
        this.project = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BackendServiceSignedUrlKeyState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> backendService;
        private @Nullable Output<String> keyValue;
        private @Nullable Output<String> name;
        private @Nullable Output<String> project;

        public Builder() {
    	      // Empty
        }

        public Builder(BackendServiceSignedUrlKeyState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.backendService = defaults.backendService;
    	      this.keyValue = defaults.keyValue;
    	      this.name = defaults.name;
    	      this.project = defaults.project;
        }

        public Builder backendService(@Nullable Output<String> backendService) {
            this.backendService = backendService;
            return this;
        }

        public Builder backendService(@Nullable String backendService) {
            this.backendService = Output.ofNullable(backendService);
            return this;
        }

        public Builder keyValue(@Nullable Output<String> keyValue) {
            this.keyValue = keyValue;
            return this;
        }

        public Builder keyValue(@Nullable String keyValue) {
            this.keyValue = Output.ofNullable(keyValue);
            return this;
        }

        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }

        public Builder name(@Nullable String name) {
            this.name = Output.ofNullable(name);
            return this;
        }

        public Builder project(@Nullable Output<String> project) {
            this.project = project;
            return this;
        }

        public Builder project(@Nullable String project) {
            this.project = Output.ofNullable(project);
            return this;
        }
        public BackendServiceSignedUrlKeyState build() {
            return new BackendServiceSignedUrlKeyState(backendService, keyValue, name, project);
        }
    }
}
