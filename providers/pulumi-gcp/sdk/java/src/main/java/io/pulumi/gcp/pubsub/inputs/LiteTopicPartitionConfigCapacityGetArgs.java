// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.pubsub.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.Integer;
import java.util.Objects;


public final class LiteTopicPartitionConfigCapacityGetArgs extends io.pulumi.resources.ResourceArgs {

    public static final LiteTopicPartitionConfigCapacityGetArgs Empty = new LiteTopicPartitionConfigCapacityGetArgs();

    @InputImport(name="publishMibPerSec", required=true)
    private final Input<Integer> publishMibPerSec;

    public Input<Integer> getPublishMibPerSec() {
        return this.publishMibPerSec;
    }

    @InputImport(name="subscribeMibPerSec", required=true)
    private final Input<Integer> subscribeMibPerSec;

    public Input<Integer> getSubscribeMibPerSec() {
        return this.subscribeMibPerSec;
    }

    public LiteTopicPartitionConfigCapacityGetArgs(
        Input<Integer> publishMibPerSec,
        Input<Integer> subscribeMibPerSec) {
        this.publishMibPerSec = Objects.requireNonNull(publishMibPerSec, "expected parameter 'publishMibPerSec' to be non-null");
        this.subscribeMibPerSec = Objects.requireNonNull(subscribeMibPerSec, "expected parameter 'subscribeMibPerSec' to be non-null");
    }

    private LiteTopicPartitionConfigCapacityGetArgs() {
        this.publishMibPerSec = Input.empty();
        this.subscribeMibPerSec = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(LiteTopicPartitionConfigCapacityGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<Integer> publishMibPerSec;
        private Input<Integer> subscribeMibPerSec;

        public Builder() {
    	      // Empty
        }

        public Builder(LiteTopicPartitionConfigCapacityGetArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.publishMibPerSec = defaults.publishMibPerSec;
    	      this.subscribeMibPerSec = defaults.subscribeMibPerSec;
        }

        public Builder setPublishMibPerSec(Input<Integer> publishMibPerSec) {
            this.publishMibPerSec = Objects.requireNonNull(publishMibPerSec);
            return this;
        }

        public Builder setPublishMibPerSec(Integer publishMibPerSec) {
            this.publishMibPerSec = Input.of(Objects.requireNonNull(publishMibPerSec));
            return this;
        }

        public Builder setSubscribeMibPerSec(Input<Integer> subscribeMibPerSec) {
            this.subscribeMibPerSec = Objects.requireNonNull(subscribeMibPerSec);
            return this;
        }

        public Builder setSubscribeMibPerSec(Integer subscribeMibPerSec) {
            this.subscribeMibPerSec = Input.of(Objects.requireNonNull(subscribeMibPerSec));
            return this;
        }

        public LiteTopicPartitionConfigCapacityGetArgs build() {
            return new LiteTopicPartitionConfigCapacityGetArgs(publishMibPerSec, subscribeMibPerSec);
        }
    }
}
