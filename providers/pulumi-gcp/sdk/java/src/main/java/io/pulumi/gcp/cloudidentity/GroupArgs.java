// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.cloudidentity;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.InputImport;
import io.pulumi.gcp.cloudidentity.inputs.GroupGroupKeyArgs;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class GroupArgs extends io.pulumi.resources.ResourceArgs {

    public static final GroupArgs Empty = new GroupArgs();

    /**
     * An extended description to help users determine the purpose of a Group.
     * Must not be longer than 4,096 characters.
     * 
     */
    @InputImport(name="description")
      private final @Nullable Output<String> description;

    public Output<String> getDescription() {
        return this.description == null ? Output.empty() : this.description;
    }

    /**
     * The display name of the Group.
     * 
     */
    @InputImport(name="displayName")
      private final @Nullable Output<String> displayName;

    public Output<String> getDisplayName() {
        return this.displayName == null ? Output.empty() : this.displayName;
    }

    /**
     * EntityKey of the Group.
     * Structure is documented below.
     * 
     */
    @InputImport(name="groupKey", required=true)
      private final Output<GroupGroupKeyArgs> groupKey;

    public Output<GroupGroupKeyArgs> getGroupKey() {
        return this.groupKey;
    }

    /**
     * The initial configuration options for creating a Group.
     * See the
     * [API reference](https://cloud.google.com/identity/docs/reference/rest/v1beta1/groups/create#initialgroupconfig)
     * for possible values.
     * Default value is `EMPTY`.
     * Possible values are `INITIAL_GROUP_CONFIG_UNSPECIFIED`, `WITH_INITIAL_OWNER`, and `EMPTY`.
     * 
     */
    @InputImport(name="initialGroupConfig")
      private final @Nullable Output<String> initialGroupConfig;

    public Output<String> getInitialGroupConfig() {
        return this.initialGroupConfig == null ? Output.empty() : this.initialGroupConfig;
    }

    /**
     * The labels that apply to the Group.
     * Must not contain more than one entry. Must contain the entry
     * 'cloudidentity.googleapis.com/groups.discussion_forum': '' if the Group is a Google Group or
     * 'system/groups/external': '' if the Group is an external-identity-mapped group.
     * 
     */
    @InputImport(name="labels", required=true)
      private final Output<Map<String,String>> labels;

    public Output<Map<String,String>> getLabels() {
        return this.labels;
    }

    /**
     * The resource name of the entity under which this Group resides in the
     * Cloud Identity resource hierarchy.
     * Must be of the form identitysources/{identity_source_id} for external-identity-mapped
     * groups or customers/{customer_id} for Google Groups.
     * 
     */
    @InputImport(name="parent", required=true)
      private final Output<String> parent;

    public Output<String> getParent() {
        return this.parent;
    }

    public GroupArgs(
        @Nullable Output<String> description,
        @Nullable Output<String> displayName,
        Output<GroupGroupKeyArgs> groupKey,
        @Nullable Output<String> initialGroupConfig,
        Output<Map<String,String>> labels,
        Output<String> parent) {
        this.description = description;
        this.displayName = displayName;
        this.groupKey = Objects.requireNonNull(groupKey, "expected parameter 'groupKey' to be non-null");
        this.initialGroupConfig = initialGroupConfig;
        this.labels = Objects.requireNonNull(labels, "expected parameter 'labels' to be non-null");
        this.parent = Objects.requireNonNull(parent, "expected parameter 'parent' to be non-null");
    }

    private GroupArgs() {
        this.description = Output.empty();
        this.displayName = Output.empty();
        this.groupKey = Output.empty();
        this.initialGroupConfig = Output.empty();
        this.labels = Output.empty();
        this.parent = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GroupArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> description;
        private @Nullable Output<String> displayName;
        private Output<GroupGroupKeyArgs> groupKey;
        private @Nullable Output<String> initialGroupConfig;
        private Output<Map<String,String>> labels;
        private Output<String> parent;

        public Builder() {
    	      // Empty
        }

        public Builder(GroupArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.groupKey = defaults.groupKey;
    	      this.initialGroupConfig = defaults.initialGroupConfig;
    	      this.labels = defaults.labels;
    	      this.parent = defaults.parent;
        }

        public Builder description(@Nullable Output<String> description) {
            this.description = description;
            return this;
        }

        public Builder description(@Nullable String description) {
            this.description = Output.ofNullable(description);
            return this;
        }

        public Builder displayName(@Nullable Output<String> displayName) {
            this.displayName = displayName;
            return this;
        }

        public Builder displayName(@Nullable String displayName) {
            this.displayName = Output.ofNullable(displayName);
            return this;
        }

        public Builder groupKey(Output<GroupGroupKeyArgs> groupKey) {
            this.groupKey = Objects.requireNonNull(groupKey);
            return this;
        }

        public Builder groupKey(GroupGroupKeyArgs groupKey) {
            this.groupKey = Output.of(Objects.requireNonNull(groupKey));
            return this;
        }

        public Builder initialGroupConfig(@Nullable Output<String> initialGroupConfig) {
            this.initialGroupConfig = initialGroupConfig;
            return this;
        }

        public Builder initialGroupConfig(@Nullable String initialGroupConfig) {
            this.initialGroupConfig = Output.ofNullable(initialGroupConfig);
            return this;
        }

        public Builder labels(Output<Map<String,String>> labels) {
            this.labels = Objects.requireNonNull(labels);
            return this;
        }

        public Builder labels(Map<String,String> labels) {
            this.labels = Output.of(Objects.requireNonNull(labels));
            return this;
        }

        public Builder parent(Output<String> parent) {
            this.parent = Objects.requireNonNull(parent);
            return this;
        }

        public Builder parent(String parent) {
            this.parent = Output.of(Objects.requireNonNull(parent));
            return this;
        }
        public GroupArgs build() {
            return new GroupArgs(description, displayName, groupKey, initialGroupConfig, labels, parent);
        }
    }
}
