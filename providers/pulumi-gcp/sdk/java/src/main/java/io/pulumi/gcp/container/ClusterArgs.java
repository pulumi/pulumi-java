// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.container;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import io.pulumi.gcp.container.inputs.ClusterAddonsConfigArgs;
import io.pulumi.gcp.container.inputs.ClusterAuthenticatorGroupsConfigArgs;
import io.pulumi.gcp.container.inputs.ClusterClusterAutoscalingArgs;
import io.pulumi.gcp.container.inputs.ClusterClusterTelemetryArgs;
import io.pulumi.gcp.container.inputs.ClusterConfidentialNodesArgs;
import io.pulumi.gcp.container.inputs.ClusterDatabaseEncryptionArgs;
import io.pulumi.gcp.container.inputs.ClusterDefaultSnatStatusArgs;
import io.pulumi.gcp.container.inputs.ClusterDnsConfigArgs;
import io.pulumi.gcp.container.inputs.ClusterIdentityServiceConfigArgs;
import io.pulumi.gcp.container.inputs.ClusterIpAllocationPolicyArgs;
import io.pulumi.gcp.container.inputs.ClusterLoggingConfigArgs;
import io.pulumi.gcp.container.inputs.ClusterMaintenancePolicyArgs;
import io.pulumi.gcp.container.inputs.ClusterMasterAuthArgs;
import io.pulumi.gcp.container.inputs.ClusterMasterAuthorizedNetworksConfigArgs;
import io.pulumi.gcp.container.inputs.ClusterMonitoringConfigArgs;
import io.pulumi.gcp.container.inputs.ClusterNetworkPolicyArgs;
import io.pulumi.gcp.container.inputs.ClusterNodeConfigArgs;
import io.pulumi.gcp.container.inputs.ClusterNodePoolArgs;
import io.pulumi.gcp.container.inputs.ClusterNotificationConfigArgs;
import io.pulumi.gcp.container.inputs.ClusterPodSecurityPolicyConfigArgs;
import io.pulumi.gcp.container.inputs.ClusterPrivateClusterConfigArgs;
import io.pulumi.gcp.container.inputs.ClusterReleaseChannelArgs;
import io.pulumi.gcp.container.inputs.ClusterResourceUsageExportConfigArgs;
import io.pulumi.gcp.container.inputs.ClusterVerticalPodAutoscalingArgs;
import io.pulumi.gcp.container.inputs.ClusterWorkloadIdentityConfigArgs;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ClusterArgs extends io.pulumi.resources.ResourceArgs {

    public static final ClusterArgs Empty = new ClusterArgs();

    /**
     * The configuration for addons supported by GKE.
     * Structure is documented below.
     * 
     */
    @InputImport(name="addonsConfig")
        private final @Nullable Input<ClusterAddonsConfigArgs> addonsConfig;

    public Input<ClusterAddonsConfigArgs> getAddonsConfig() {
        return this.addonsConfig == null ? Input.empty() : this.addonsConfig;
    }

    /**
     * Configuration for the
     * [Google Groups for GKE](https://cloud.google.com/kubernetes-engine/docs/how-to/role-based-access-control#groups-setup-gsuite) feature.
     * Structure is documented below.
     * 
     */
    @InputImport(name="authenticatorGroupsConfig")
        private final @Nullable Input<ClusterAuthenticatorGroupsConfigArgs> authenticatorGroupsConfig;

    public Input<ClusterAuthenticatorGroupsConfigArgs> getAuthenticatorGroupsConfig() {
        return this.authenticatorGroupsConfig == null ? Input.empty() : this.authenticatorGroupsConfig;
    }

    /**
     * Per-cluster configuration of Node Auto-Provisioning with Cluster Autoscaler to
     * automatically adjust the size of the cluster and create/delete node pools based
     * on the current needs of the cluster's workload. See the
     * [guide to using Node Auto-Provisioning](https://cloud.google.com/kubernetes-engine/docs/how-to/node-auto-provisioning)
     * for more details. Structure is documented below.
     * 
     */
    @InputImport(name="clusterAutoscaling")
        private final @Nullable Input<ClusterClusterAutoscalingArgs> clusterAutoscaling;

    public Input<ClusterClusterAutoscalingArgs> getClusterAutoscaling() {
        return this.clusterAutoscaling == null ? Input.empty() : this.clusterAutoscaling;
    }

    /**
     * The IP address range of the Kubernetes pods
     * in this cluster in CIDR notation (e.g. `10.96.0.0/14`). Leave blank to have one
     * automatically chosen or specify a `/14` block in `10.0.0.0/8`. This field will
     * only work for routes-based clusters, where `ip_allocation_policy` is not defined.
     * 
     */
    @InputImport(name="clusterIpv4Cidr")
        private final @Nullable Input<String> clusterIpv4Cidr;

    public Input<String> getClusterIpv4Cidr() {
        return this.clusterIpv4Cidr == null ? Input.empty() : this.clusterIpv4Cidr;
    }

    /**
     * Configuration for
     * [ClusterTelemetry](https://cloud.google.com/monitoring/kubernetes-engine/installing#controlling_the_collection_of_application_logs) feature,
     * Structure is documented below.
     * 
     */
    @InputImport(name="clusterTelemetry")
        private final @Nullable Input<ClusterClusterTelemetryArgs> clusterTelemetry;

    public Input<ClusterClusterTelemetryArgs> getClusterTelemetry() {
        return this.clusterTelemetry == null ? Input.empty() : this.clusterTelemetry;
    }

    /**
     * Configuration for [Confidential Nodes](https://cloud.google.com/kubernetes-engine/docs/how-to/confidential-gke-nodes) feature. Structure is documented below documented below.
     * 
     */
    @InputImport(name="confidentialNodes")
        private final @Nullable Input<ClusterConfidentialNodesArgs> confidentialNodes;

    public Input<ClusterConfidentialNodesArgs> getConfidentialNodes() {
        return this.confidentialNodes == null ? Input.empty() : this.confidentialNodes;
    }

    /**
     * Structure is documented below.
     * 
     */
    @InputImport(name="databaseEncryption")
        private final @Nullable Input<ClusterDatabaseEncryptionArgs> databaseEncryption;

    public Input<ClusterDatabaseEncryptionArgs> getDatabaseEncryption() {
        return this.databaseEncryption == null ? Input.empty() : this.databaseEncryption;
    }

    /**
     * The desired datapath provider for this cluster. By default, uses the IPTables-based kube-proxy implementation.
     * 
     */
    @InputImport(name="datapathProvider")
        private final @Nullable Input<String> datapathProvider;

    public Input<String> getDatapathProvider() {
        return this.datapathProvider == null ? Input.empty() : this.datapathProvider;
    }

    /**
     * The default maximum number of pods
     * per node in this cluster. This doesn't work on "routes-based" clusters, clusters
     * that don't have IP Aliasing enabled. See the [official documentation](https://cloud.google.com/kubernetes-engine/docs/how-to/flexible-pod-cidr)
     * for more information.
     * 
     */
    @InputImport(name="defaultMaxPodsPerNode")
        private final @Nullable Input<Integer> defaultMaxPodsPerNode;

    public Input<Integer> getDefaultMaxPodsPerNode() {
        return this.defaultMaxPodsPerNode == null ? Input.empty() : this.defaultMaxPodsPerNode;
    }

    /**
     * [GKE SNAT](https://cloud.google.com/kubernetes-engine/docs/how-to/ip-masquerade-agent#how_ipmasq_works) DefaultSnatStatus contains the desired state of whether default sNAT should be disabled on the cluster, [API doc](https://cloud.google.com/kubernetes-engine/docs/reference/rest/v1beta1/projects.locations.clusters#networkconfig). Structure is documented below
     * 
     */
    @InputImport(name="defaultSnatStatus")
        private final @Nullable Input<ClusterDefaultSnatStatusArgs> defaultSnatStatus;

    public Input<ClusterDefaultSnatStatusArgs> getDefaultSnatStatus() {
        return this.defaultSnatStatus == null ? Input.empty() : this.defaultSnatStatus;
    }

    /**
     * Description of the cluster.
     * 
     */
    @InputImport(name="description")
        private final @Nullable Input<String> description;

    public Input<String> getDescription() {
        return this.description == null ? Input.empty() : this.description;
    }

    /**
     * Configuration for [Using Cloud DNS for GKE](https://cloud.google.com/kubernetes-engine/docs/how-to/cloud-dns). Structure is documented below.
     * 
     */
    @InputImport(name="dnsConfig")
        private final @Nullable Input<ClusterDnsConfigArgs> dnsConfig;

    public Input<ClusterDnsConfigArgs> getDnsConfig() {
        return this.dnsConfig == null ? Input.empty() : this.dnsConfig;
    }

    /**
     * Enable Autopilot for this cluster. Defaults to `false`.
     * Note that when this option is enabled, certain features of Standard GKE are not available.
     * See the [official documentation](https://cloud.google.com/kubernetes-engine/docs/concepts/autopilot-overview#comparison)
     * for available features.
     * 
     */
    @InputImport(name="enableAutopilot")
        private final @Nullable Input<Boolean> enableAutopilot;

    public Input<Boolean> getEnableAutopilot() {
        return this.enableAutopilot == null ? Input.empty() : this.enableAutopilot;
    }

    /**
     * Enable Binary Authorization for this cluster.
     * If enabled, all container images will be validated by Google Binary Authorization.
     * 
     */
    @InputImport(name="enableBinaryAuthorization")
        private final @Nullable Input<Boolean> enableBinaryAuthorization;

    public Input<Boolean> getEnableBinaryAuthorization() {
        return this.enableBinaryAuthorization == null ? Input.empty() : this.enableBinaryAuthorization;
    }

    /**
     * Whether Intra-node visibility is enabled for this cluster. This makes same node pod to pod traffic visible for VPC network.
     * 
     */
    @InputImport(name="enableIntranodeVisibility")
        private final @Nullable Input<Boolean> enableIntranodeVisibility;

    public Input<Boolean> getEnableIntranodeVisibility() {
        return this.enableIntranodeVisibility == null ? Input.empty() : this.enableIntranodeVisibility;
    }

    /**
     * Whether to enable Kubernetes Alpha features for
     * this cluster. Note that when this option is enabled, the cluster cannot be upgraded
     * and will be automatically deleted after 30 days.
     * 
     */
    @InputImport(name="enableKubernetesAlpha")
        private final @Nullable Input<Boolean> enableKubernetesAlpha;

    public Input<Boolean> getEnableKubernetesAlpha() {
        return this.enableKubernetesAlpha == null ? Input.empty() : this.enableKubernetesAlpha;
    }

    /**
     * Whether L4ILB Subsetting is enabled for this cluster.
     * 
     */
    @InputImport(name="enableL4IlbSubsetting")
        private final @Nullable Input<Boolean> enableL4IlbSubsetting;

    public Input<Boolean> getEnableL4IlbSubsetting() {
        return this.enableL4IlbSubsetting == null ? Input.empty() : this.enableL4IlbSubsetting;
    }

    /**
     * Whether the ABAC authorizer is enabled for this cluster.
     * When enabled, identities in the system, including service accounts, nodes, and controllers,
     * will have statically granted permissions beyond those provided by the RBAC configuration or IAM.
     * Defaults to `false`
     * 
     */
    @InputImport(name="enableLegacyAbac")
        private final @Nullable Input<Boolean> enableLegacyAbac;

    public Input<Boolean> getEnableLegacyAbac() {
        return this.enableLegacyAbac == null ? Input.empty() : this.enableLegacyAbac;
    }

    /**
     * Enable Shielded Nodes features on all nodes in this cluster.  Defaults to `true`.
     * 
     */
    @InputImport(name="enableShieldedNodes")
        private final @Nullable Input<Boolean> enableShieldedNodes;

    public Input<Boolean> getEnableShieldedNodes() {
        return this.enableShieldedNodes == null ? Input.empty() : this.enableShieldedNodes;
    }

    /**
     * Whether to enable Cloud TPU resources in this cluster.
     * See the [official documentation](https://cloud.google.com/tpu/docs/kubernetes-engine-setup).
     * 
     */
    @InputImport(name="enableTpu")
        private final @Nullable Input<Boolean> enableTpu;

    public Input<Boolean> getEnableTpu() {
        return this.enableTpu == null ? Input.empty() : this.enableTpu;
    }

    /**
     * . Structure is documented below.
     * 
     */
    @InputImport(name="identityServiceConfig")
        private final @Nullable Input<ClusterIdentityServiceConfigArgs> identityServiceConfig;

    public Input<ClusterIdentityServiceConfigArgs> getIdentityServiceConfig() {
        return this.identityServiceConfig == null ? Input.empty() : this.identityServiceConfig;
    }

    /**
     * The number of nodes to create in this
     * cluster's default node pool. In regional or multi-zonal clusters, this is the
     * number of nodes per zone. Must be set if `node_pool` is not set. If you're using
     * `gcp.container.NodePool` objects with no default node pool, you'll need to
     * set this to a value of at least `1`, alongside setting
     * `remove_default_node_pool` to `true`.
     * 
     */
    @InputImport(name="initialNodeCount")
        private final @Nullable Input<Integer> initialNodeCount;

    public Input<Integer> getInitialNodeCount() {
        return this.initialNodeCount == null ? Input.empty() : this.initialNodeCount;
    }

    /**
     * Configuration of cluster IP allocation for
     * VPC-native clusters. Adding this block enables [IP aliasing](https://cloud.google.com/kubernetes-engine/docs/how-to/ip-aliases),
     * making the cluster VPC-native instead of routes-based. Structure is documented
     * below.
     * 
     */
    @InputImport(name="ipAllocationPolicy")
        private final @Nullable Input<ClusterIpAllocationPolicyArgs> ipAllocationPolicy;

    public Input<ClusterIpAllocationPolicyArgs> getIpAllocationPolicy() {
        return this.ipAllocationPolicy == null ? Input.empty() : this.ipAllocationPolicy;
    }

    /**
     * The location (region or zone) in which the cluster
     * master will be created, as well as the default node location. If you specify a
     * zone (such as `us-central1-a`), the cluster will be a zonal cluster with a
     * single cluster master. If you specify a region (such as `us-west1`), the
     * cluster will be a regional cluster with multiple masters spread across zones in
     * the region, and with default node locations in those zones as well
     * 
     */
    @InputImport(name="location")
        private final @Nullable Input<String> location;

    public Input<String> getLocation() {
        return this.location == null ? Input.empty() : this.location;
    }

    /**
     * Logging configuration for the cluster.
     * Structure is documented below.
     * 
     */
    @InputImport(name="loggingConfig")
        private final @Nullable Input<ClusterLoggingConfigArgs> loggingConfig;

    public Input<ClusterLoggingConfigArgs> getLoggingConfig() {
        return this.loggingConfig == null ? Input.empty() : this.loggingConfig;
    }

    /**
     * The logging service that the cluster should
     * write logs to. Available options include `logging.googleapis.com`(Legacy Stackdriver),
     * `logging.googleapis.com/kubernetes`(Stackdriver Kubernetes Engine Logging), and `none`. Defaults to `logging.googleapis.com/kubernetes`
     * 
     */
    @InputImport(name="loggingService")
        private final @Nullable Input<String> loggingService;

    public Input<String> getLoggingService() {
        return this.loggingService == null ? Input.empty() : this.loggingService;
    }

    /**
     * The maintenance policy to use for the cluster. Structure is
     * documented below.
     * 
     */
    @InputImport(name="maintenancePolicy")
        private final @Nullable Input<ClusterMaintenancePolicyArgs> maintenancePolicy;

    public Input<ClusterMaintenancePolicyArgs> getMaintenancePolicy() {
        return this.maintenancePolicy == null ? Input.empty() : this.maintenancePolicy;
    }

    /**
     * The authentication information for accessing the
     * Kubernetes master. Some values in this block are only returned by the API if
     * your service account has permission to get credentials for your GKE cluster. If
     * you see an unexpected diff unsetting your client cert, ensure you have the
     * `container.clusters.getCredentials` permission.
     * Structure is documented below.
     * 
     */
    @InputImport(name="masterAuth")
        private final @Nullable Input<ClusterMasterAuthArgs> masterAuth;

    public Input<ClusterMasterAuthArgs> getMasterAuth() {
        return this.masterAuth == null ? Input.empty() : this.masterAuth;
    }

    /**
     * The desired
     * configuration options for master authorized networks. Omit the
     * nested `cidr_blocks` attribute to disallow external access (except
     * the cluster node IPs, which GKE automatically whitelists).
     * Structure is documented below.
     * 
     */
    @InputImport(name="masterAuthorizedNetworksConfig")
        private final @Nullable Input<ClusterMasterAuthorizedNetworksConfigArgs> masterAuthorizedNetworksConfig;

    public Input<ClusterMasterAuthorizedNetworksConfigArgs> getMasterAuthorizedNetworksConfig() {
        return this.masterAuthorizedNetworksConfig == null ? Input.empty() : this.masterAuthorizedNetworksConfig;
    }

    /**
     * The minimum version of the master. GKE
     * will auto-update the master to new versions, so this does not guarantee the
     * current master version--use the read-only `master_version` field to obtain that.
     * If unset, the cluster's version will be set by GKE to the version of the most recent
     * official release (which is not necessarily the latest version).  Most users will find
     * the `gcp.container.getEngineVersions` data source useful - it indicates which versions
     * are available. If you intend to specify versions manually,
     * [the docs](https://cloud.google.com/kubernetes-engine/versioning-and-upgrades#specifying_cluster_version)
     * describe the various acceptable formats for this field.
     * 
     */
    @InputImport(name="minMasterVersion")
        private final @Nullable Input<String> minMasterVersion;

    public Input<String> getMinMasterVersion() {
        return this.minMasterVersion == null ? Input.empty() : this.minMasterVersion;
    }

    /**
     * Monitoring configuration for the cluster.
     * Structure is documented below.
     * 
     */
    @InputImport(name="monitoringConfig")
        private final @Nullable Input<ClusterMonitoringConfigArgs> monitoringConfig;

    public Input<ClusterMonitoringConfigArgs> getMonitoringConfig() {
        return this.monitoringConfig == null ? Input.empty() : this.monitoringConfig;
    }

    /**
     * The monitoring service that the cluster
     * should write metrics to.
     * Automatically send metrics from pods in the cluster to the Google Cloud Monitoring API.
     * VM metrics will be collected by Google Compute Engine regardless of this setting
     * Available options include
     * `monitoring.googleapis.com`(Legacy Stackdriver), `monitoring.googleapis.com/kubernetes`(Stackdriver Kubernetes Engine Monitoring), and `none`.
     * Defaults to `monitoring.googleapis.com/kubernetes`
     * 
     */
    @InputImport(name="monitoringService")
        private final @Nullable Input<String> monitoringService;

    public Input<String> getMonitoringService() {
        return this.monitoringService == null ? Input.empty() : this.monitoringService;
    }

    /**
     * The name of the cluster, unique within the project and
     * location.
     * 
     */
    @InputImport(name="name")
        private final @Nullable Input<String> name;

    public Input<String> getName() {
        return this.name == null ? Input.empty() : this.name;
    }

    /**
     * The name or self_link of the Google Compute Engine
     * network to which the cluster is connected. For Shared VPC, set this to the self link of the
     * shared network.
     * 
     */
    @InputImport(name="network")
        private final @Nullable Input<String> network;

    public Input<String> getNetwork() {
        return this.network == null ? Input.empty() : this.network;
    }

    /**
     * Configuration options for the
     * [NetworkPolicy](https://kubernetes.io/docs/concepts/services-networking/networkpolicies/)
     * feature. Structure is documented below.
     * 
     */
    @InputImport(name="networkPolicy")
        private final @Nullable Input<ClusterNetworkPolicyArgs> networkPolicy;

    public Input<ClusterNetworkPolicyArgs> getNetworkPolicy() {
        return this.networkPolicy == null ? Input.empty() : this.networkPolicy;
    }

    /**
     * Determines whether alias IPs or routes will be used for pod IPs in the cluster.
     * Options are `VPC_NATIVE` or `ROUTES`. `VPC_NATIVE` enables [IP aliasing](https://cloud.google.com/kubernetes-engine/docs/how-to/ip-aliases),
     * and requires the `ip_allocation_policy` block to be defined. By default when this field is unspecified, GKE will create a `ROUTES`-based cluster.
     * 
     */
    @InputImport(name="networkingMode")
        private final @Nullable Input<String> networkingMode;

    public Input<String> getNetworkingMode() {
        return this.networkingMode == null ? Input.empty() : this.networkingMode;
    }

    /**
     * Parameters used in creating the default node pool.
     * Generally, this field should not be used at the same time as a
     * `gcp.container.NodePool` or a `node_pool` block; this configuration
     * manages the default node pool, which isn't recommended to be used.
     * Structure is documented below.
     * 
     */
    @InputImport(name="nodeConfig")
        private final @Nullable Input<ClusterNodeConfigArgs> nodeConfig;

    public Input<ClusterNodeConfigArgs> getNodeConfig() {
        return this.nodeConfig == null ? Input.empty() : this.nodeConfig;
    }

    /**
     * The list of zones in which the cluster's nodes
     * are located. Nodes must be in the region of their regional cluster or in the
     * same region as their cluster's zone for zonal clusters. If this is specified for
     * a zonal cluster, omit the cluster's zone.
     * 
     */
    @InputImport(name="nodeLocations")
        private final @Nullable Input<List<String>> nodeLocations;

    public Input<List<String>> getNodeLocations() {
        return this.nodeLocations == null ? Input.empty() : this.nodeLocations;
    }

    /**
     * List of node pools associated with this cluster.
     * See gcp.container.NodePool for schema.
     * **Warning:** node pools defined inside a cluster can't be changed (or added/removed) after
     * cluster creation without deleting and recreating the entire cluster. Unless you absolutely need the ability
     * to say "these are the _only_ node pools associated with this cluster", use the
     * gcp.container.NodePool resource instead of this property.
     * 
     */
    @InputImport(name="nodePools")
        private final @Nullable Input<List<ClusterNodePoolArgs>> nodePools;

    public Input<List<ClusterNodePoolArgs>> getNodePools() {
        return this.nodePools == null ? Input.empty() : this.nodePools;
    }

    /**
     * The Kubernetes version on the nodes. Must either be unset
     * or set to the same value as `min_master_version` on create. Defaults to the default
     * version set by GKE which is not necessarily the latest version. This only affects
     * nodes in the default node pool. While a fuzzy version can be specified, it's
     * recommended that you specify explicit versions as the provider will see spurious diffs
     * when fuzzy versions are used. See the `gcp.container.getEngineVersions` data source's
     * `version_prefix` field to approximate fuzzy versions.
     * To update nodes in other node pools, use the `version` attribute on the node pool.
     * 
     */
    @InputImport(name="nodeVersion")
        private final @Nullable Input<String> nodeVersion;

    public Input<String> getNodeVersion() {
        return this.nodeVersion == null ? Input.empty() : this.nodeVersion;
    }

    /**
     * Configuration for the [cluster upgrade notifications](https://cloud.google.com/kubernetes-engine/docs/how-to/cluster-upgrade-notifications) feature. Structure is documented below.
     * 
     */
    @InputImport(name="notificationConfig")
        private final @Nullable Input<ClusterNotificationConfigArgs> notificationConfig;

    public Input<ClusterNotificationConfigArgs> getNotificationConfig() {
        return this.notificationConfig == null ? Input.empty() : this.notificationConfig;
    }

    /**
     * ) Configuration for the
     * [PodSecurityPolicy](https://cloud.google.com/kubernetes-engine/docs/how-to/pod-security-policies) feature.
     * Structure is documented below.
     * 
     */
    @InputImport(name="podSecurityPolicyConfig")
        private final @Nullable Input<ClusterPodSecurityPolicyConfigArgs> podSecurityPolicyConfig;

    public Input<ClusterPodSecurityPolicyConfigArgs> getPodSecurityPolicyConfig() {
        return this.podSecurityPolicyConfig == null ? Input.empty() : this.podSecurityPolicyConfig;
    }

    /**
     * Configuration for [private clusters](https://cloud.google.com/kubernetes-engine/docs/how-to/private-clusters),
     * clusters with private nodes. Structure is documented below.
     * 
     */
    @InputImport(name="privateClusterConfig")
        private final @Nullable Input<ClusterPrivateClusterConfigArgs> privateClusterConfig;

    public Input<ClusterPrivateClusterConfigArgs> getPrivateClusterConfig() {
        return this.privateClusterConfig == null ? Input.empty() : this.privateClusterConfig;
    }

    /**
     * The desired state of IPv6 connectivity to Google Services. By default, no private IPv6 access to or from Google Services (all access will be via IPv4).
     * 
     */
    @InputImport(name="privateIpv6GoogleAccess")
        private final @Nullable Input<String> privateIpv6GoogleAccess;

    public Input<String> getPrivateIpv6GoogleAccess() {
        return this.privateIpv6GoogleAccess == null ? Input.empty() : this.privateIpv6GoogleAccess;
    }

    /**
     * The ID of the project in which the resource belongs. If it
     * is not provided, the provider project is used.
     * 
     */
    @InputImport(name="project")
        private final @Nullable Input<String> project;

    public Input<String> getProject() {
        return this.project == null ? Input.empty() : this.project;
    }

    /**
     * Configuration options for the [Release channel](https://cloud.google.com/kubernetes-engine/docs/concepts/release-channels)
     * feature, which provide more control over automatic upgrades of your GKE clusters.
     * When updating this field, GKE imposes specific version requirements. See
     * [Selecting a new release channel](https://cloud.google.com/kubernetes-engine/docs/concepts/release-channels#selecting_a_new_release_channel)
     * for more details; the `gcp.container.getEngineVersions` datasource can provide
     * the default version for a channel. Note that removing the `release_channel`
     * field from your config will cause the provider to stop managing your cluster's
     * release channel, but will not unenroll it. Instead, use the `"UNSPECIFIED"`
     * channel. Structure is documented below.
     * 
     */
    @InputImport(name="releaseChannel")
        private final @Nullable Input<ClusterReleaseChannelArgs> releaseChannel;

    public Input<ClusterReleaseChannelArgs> getReleaseChannel() {
        return this.releaseChannel == null ? Input.empty() : this.releaseChannel;
    }

    /**
     * If `true`, deletes the default node
     * pool upon cluster creation. If you're using `gcp.container.NodePool`
     * resources with no default node pool, this should be set to `true`, alongside
     * setting `initial_node_count` to at least `1`.
     * 
     */
    @InputImport(name="removeDefaultNodePool")
        private final @Nullable Input<Boolean> removeDefaultNodePool;

    public Input<Boolean> getRemoveDefaultNodePool() {
        return this.removeDefaultNodePool == null ? Input.empty() : this.removeDefaultNodePool;
    }

    /**
     * The GCE resource labels (a map of key/value pairs) to be applied to the cluster.
     * 
     */
    @InputImport(name="resourceLabels")
        private final @Nullable Input<Map<String,String>> resourceLabels;

    public Input<Map<String,String>> getResourceLabels() {
        return this.resourceLabels == null ? Input.empty() : this.resourceLabels;
    }

    /**
     * Configuration for the
     * [ResourceUsageExportConfig](https://cloud.google.com/kubernetes-engine/docs/how-to/cluster-usage-metering) feature.
     * Structure is documented below.
     * 
     */
    @InputImport(name="resourceUsageExportConfig")
        private final @Nullable Input<ClusterResourceUsageExportConfigArgs> resourceUsageExportConfig;

    public Input<ClusterResourceUsageExportConfigArgs> getResourceUsageExportConfig() {
        return this.resourceUsageExportConfig == null ? Input.empty() : this.resourceUsageExportConfig;
    }

    /**
     * The name or self_link of the Google Compute Engine
     * subnetwork in which the cluster's instances are launched.
     * 
     */
    @InputImport(name="subnetwork")
        private final @Nullable Input<String> subnetwork;

    public Input<String> getSubnetwork() {
        return this.subnetwork == null ? Input.empty() : this.subnetwork;
    }

    /**
     * Vertical Pod Autoscaling automatically adjusts the resources of pods controlled by it.
     * Structure is documented below.
     * 
     */
    @InputImport(name="verticalPodAutoscaling")
        private final @Nullable Input<ClusterVerticalPodAutoscalingArgs> verticalPodAutoscaling;

    public Input<ClusterVerticalPodAutoscalingArgs> getVerticalPodAutoscaling() {
        return this.verticalPodAutoscaling == null ? Input.empty() : this.verticalPodAutoscaling;
    }

    /**
     * Workload Identity allows Kubernetes service accounts to act as a user-managed
     * [Google IAM Service Account](https://cloud.google.com/iam/docs/service-accounts#user-managed_service_accounts).
     * Structure is documented below.
     * 
     */
    @InputImport(name="workloadIdentityConfig")
        private final @Nullable Input<ClusterWorkloadIdentityConfigArgs> workloadIdentityConfig;

    public Input<ClusterWorkloadIdentityConfigArgs> getWorkloadIdentityConfig() {
        return this.workloadIdentityConfig == null ? Input.empty() : this.workloadIdentityConfig;
    }

    public ClusterArgs(
        @Nullable Input<ClusterAddonsConfigArgs> addonsConfig,
        @Nullable Input<ClusterAuthenticatorGroupsConfigArgs> authenticatorGroupsConfig,
        @Nullable Input<ClusterClusterAutoscalingArgs> clusterAutoscaling,
        @Nullable Input<String> clusterIpv4Cidr,
        @Nullable Input<ClusterClusterTelemetryArgs> clusterTelemetry,
        @Nullable Input<ClusterConfidentialNodesArgs> confidentialNodes,
        @Nullable Input<ClusterDatabaseEncryptionArgs> databaseEncryption,
        @Nullable Input<String> datapathProvider,
        @Nullable Input<Integer> defaultMaxPodsPerNode,
        @Nullable Input<ClusterDefaultSnatStatusArgs> defaultSnatStatus,
        @Nullable Input<String> description,
        @Nullable Input<ClusterDnsConfigArgs> dnsConfig,
        @Nullable Input<Boolean> enableAutopilot,
        @Nullable Input<Boolean> enableBinaryAuthorization,
        @Nullable Input<Boolean> enableIntranodeVisibility,
        @Nullable Input<Boolean> enableKubernetesAlpha,
        @Nullable Input<Boolean> enableL4IlbSubsetting,
        @Nullable Input<Boolean> enableLegacyAbac,
        @Nullable Input<Boolean> enableShieldedNodes,
        @Nullable Input<Boolean> enableTpu,
        @Nullable Input<ClusterIdentityServiceConfigArgs> identityServiceConfig,
        @Nullable Input<Integer> initialNodeCount,
        @Nullable Input<ClusterIpAllocationPolicyArgs> ipAllocationPolicy,
        @Nullable Input<String> location,
        @Nullable Input<ClusterLoggingConfigArgs> loggingConfig,
        @Nullable Input<String> loggingService,
        @Nullable Input<ClusterMaintenancePolicyArgs> maintenancePolicy,
        @Nullable Input<ClusterMasterAuthArgs> masterAuth,
        @Nullable Input<ClusterMasterAuthorizedNetworksConfigArgs> masterAuthorizedNetworksConfig,
        @Nullable Input<String> minMasterVersion,
        @Nullable Input<ClusterMonitoringConfigArgs> monitoringConfig,
        @Nullable Input<String> monitoringService,
        @Nullable Input<String> name,
        @Nullable Input<String> network,
        @Nullable Input<ClusterNetworkPolicyArgs> networkPolicy,
        @Nullable Input<String> networkingMode,
        @Nullable Input<ClusterNodeConfigArgs> nodeConfig,
        @Nullable Input<List<String>> nodeLocations,
        @Nullable Input<List<ClusterNodePoolArgs>> nodePools,
        @Nullable Input<String> nodeVersion,
        @Nullable Input<ClusterNotificationConfigArgs> notificationConfig,
        @Nullable Input<ClusterPodSecurityPolicyConfigArgs> podSecurityPolicyConfig,
        @Nullable Input<ClusterPrivateClusterConfigArgs> privateClusterConfig,
        @Nullable Input<String> privateIpv6GoogleAccess,
        @Nullable Input<String> project,
        @Nullable Input<ClusterReleaseChannelArgs> releaseChannel,
        @Nullable Input<Boolean> removeDefaultNodePool,
        @Nullable Input<Map<String,String>> resourceLabels,
        @Nullable Input<ClusterResourceUsageExportConfigArgs> resourceUsageExportConfig,
        @Nullable Input<String> subnetwork,
        @Nullable Input<ClusterVerticalPodAutoscalingArgs> verticalPodAutoscaling,
        @Nullable Input<ClusterWorkloadIdentityConfigArgs> workloadIdentityConfig) {
        this.addonsConfig = addonsConfig;
        this.authenticatorGroupsConfig = authenticatorGroupsConfig;
        this.clusterAutoscaling = clusterAutoscaling;
        this.clusterIpv4Cidr = clusterIpv4Cidr;
        this.clusterTelemetry = clusterTelemetry;
        this.confidentialNodes = confidentialNodes;
        this.databaseEncryption = databaseEncryption;
        this.datapathProvider = datapathProvider;
        this.defaultMaxPodsPerNode = defaultMaxPodsPerNode;
        this.defaultSnatStatus = defaultSnatStatus;
        this.description = description;
        this.dnsConfig = dnsConfig;
        this.enableAutopilot = enableAutopilot;
        this.enableBinaryAuthorization = enableBinaryAuthorization;
        this.enableIntranodeVisibility = enableIntranodeVisibility;
        this.enableKubernetesAlpha = enableKubernetesAlpha;
        this.enableL4IlbSubsetting = enableL4IlbSubsetting;
        this.enableLegacyAbac = enableLegacyAbac;
        this.enableShieldedNodes = enableShieldedNodes;
        this.enableTpu = enableTpu;
        this.identityServiceConfig = identityServiceConfig;
        this.initialNodeCount = initialNodeCount;
        this.ipAllocationPolicy = ipAllocationPolicy;
        this.location = location;
        this.loggingConfig = loggingConfig;
        this.loggingService = loggingService;
        this.maintenancePolicy = maintenancePolicy;
        this.masterAuth = masterAuth;
        this.masterAuthorizedNetworksConfig = masterAuthorizedNetworksConfig;
        this.minMasterVersion = minMasterVersion;
        this.monitoringConfig = monitoringConfig;
        this.monitoringService = monitoringService;
        this.name = name;
        this.network = network;
        this.networkPolicy = networkPolicy;
        this.networkingMode = networkingMode;
        this.nodeConfig = nodeConfig;
        this.nodeLocations = nodeLocations;
        this.nodePools = nodePools;
        this.nodeVersion = nodeVersion;
        this.notificationConfig = notificationConfig;
        this.podSecurityPolicyConfig = podSecurityPolicyConfig;
        this.privateClusterConfig = privateClusterConfig;
        this.privateIpv6GoogleAccess = privateIpv6GoogleAccess;
        this.project = project;
        this.releaseChannel = releaseChannel;
        this.removeDefaultNodePool = removeDefaultNodePool;
        this.resourceLabels = resourceLabels;
        this.resourceUsageExportConfig = resourceUsageExportConfig;
        this.subnetwork = subnetwork;
        this.verticalPodAutoscaling = verticalPodAutoscaling;
        this.workloadIdentityConfig = workloadIdentityConfig;
    }

    private ClusterArgs() {
        this.addonsConfig = Input.empty();
        this.authenticatorGroupsConfig = Input.empty();
        this.clusterAutoscaling = Input.empty();
        this.clusterIpv4Cidr = Input.empty();
        this.clusterTelemetry = Input.empty();
        this.confidentialNodes = Input.empty();
        this.databaseEncryption = Input.empty();
        this.datapathProvider = Input.empty();
        this.defaultMaxPodsPerNode = Input.empty();
        this.defaultSnatStatus = Input.empty();
        this.description = Input.empty();
        this.dnsConfig = Input.empty();
        this.enableAutopilot = Input.empty();
        this.enableBinaryAuthorization = Input.empty();
        this.enableIntranodeVisibility = Input.empty();
        this.enableKubernetesAlpha = Input.empty();
        this.enableL4IlbSubsetting = Input.empty();
        this.enableLegacyAbac = Input.empty();
        this.enableShieldedNodes = Input.empty();
        this.enableTpu = Input.empty();
        this.identityServiceConfig = Input.empty();
        this.initialNodeCount = Input.empty();
        this.ipAllocationPolicy = Input.empty();
        this.location = Input.empty();
        this.loggingConfig = Input.empty();
        this.loggingService = Input.empty();
        this.maintenancePolicy = Input.empty();
        this.masterAuth = Input.empty();
        this.masterAuthorizedNetworksConfig = Input.empty();
        this.minMasterVersion = Input.empty();
        this.monitoringConfig = Input.empty();
        this.monitoringService = Input.empty();
        this.name = Input.empty();
        this.network = Input.empty();
        this.networkPolicy = Input.empty();
        this.networkingMode = Input.empty();
        this.nodeConfig = Input.empty();
        this.nodeLocations = Input.empty();
        this.nodePools = Input.empty();
        this.nodeVersion = Input.empty();
        this.notificationConfig = Input.empty();
        this.podSecurityPolicyConfig = Input.empty();
        this.privateClusterConfig = Input.empty();
        this.privateIpv6GoogleAccess = Input.empty();
        this.project = Input.empty();
        this.releaseChannel = Input.empty();
        this.removeDefaultNodePool = Input.empty();
        this.resourceLabels = Input.empty();
        this.resourceUsageExportConfig = Input.empty();
        this.subnetwork = Input.empty();
        this.verticalPodAutoscaling = Input.empty();
        this.workloadIdentityConfig = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ClusterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<ClusterAddonsConfigArgs> addonsConfig;
        private @Nullable Input<ClusterAuthenticatorGroupsConfigArgs> authenticatorGroupsConfig;
        private @Nullable Input<ClusterClusterAutoscalingArgs> clusterAutoscaling;
        private @Nullable Input<String> clusterIpv4Cidr;
        private @Nullable Input<ClusterClusterTelemetryArgs> clusterTelemetry;
        private @Nullable Input<ClusterConfidentialNodesArgs> confidentialNodes;
        private @Nullable Input<ClusterDatabaseEncryptionArgs> databaseEncryption;
        private @Nullable Input<String> datapathProvider;
        private @Nullable Input<Integer> defaultMaxPodsPerNode;
        private @Nullable Input<ClusterDefaultSnatStatusArgs> defaultSnatStatus;
        private @Nullable Input<String> description;
        private @Nullable Input<ClusterDnsConfigArgs> dnsConfig;
        private @Nullable Input<Boolean> enableAutopilot;
        private @Nullable Input<Boolean> enableBinaryAuthorization;
        private @Nullable Input<Boolean> enableIntranodeVisibility;
        private @Nullable Input<Boolean> enableKubernetesAlpha;
        private @Nullable Input<Boolean> enableL4IlbSubsetting;
        private @Nullable Input<Boolean> enableLegacyAbac;
        private @Nullable Input<Boolean> enableShieldedNodes;
        private @Nullable Input<Boolean> enableTpu;
        private @Nullable Input<ClusterIdentityServiceConfigArgs> identityServiceConfig;
        private @Nullable Input<Integer> initialNodeCount;
        private @Nullable Input<ClusterIpAllocationPolicyArgs> ipAllocationPolicy;
        private @Nullable Input<String> location;
        private @Nullable Input<ClusterLoggingConfigArgs> loggingConfig;
        private @Nullable Input<String> loggingService;
        private @Nullable Input<ClusterMaintenancePolicyArgs> maintenancePolicy;
        private @Nullable Input<ClusterMasterAuthArgs> masterAuth;
        private @Nullable Input<ClusterMasterAuthorizedNetworksConfigArgs> masterAuthorizedNetworksConfig;
        private @Nullable Input<String> minMasterVersion;
        private @Nullable Input<ClusterMonitoringConfigArgs> monitoringConfig;
        private @Nullable Input<String> monitoringService;
        private @Nullable Input<String> name;
        private @Nullable Input<String> network;
        private @Nullable Input<ClusterNetworkPolicyArgs> networkPolicy;
        private @Nullable Input<String> networkingMode;
        private @Nullable Input<ClusterNodeConfigArgs> nodeConfig;
        private @Nullable Input<List<String>> nodeLocations;
        private @Nullable Input<List<ClusterNodePoolArgs>> nodePools;
        private @Nullable Input<String> nodeVersion;
        private @Nullable Input<ClusterNotificationConfigArgs> notificationConfig;
        private @Nullable Input<ClusterPodSecurityPolicyConfigArgs> podSecurityPolicyConfig;
        private @Nullable Input<ClusterPrivateClusterConfigArgs> privateClusterConfig;
        private @Nullable Input<String> privateIpv6GoogleAccess;
        private @Nullable Input<String> project;
        private @Nullable Input<ClusterReleaseChannelArgs> releaseChannel;
        private @Nullable Input<Boolean> removeDefaultNodePool;
        private @Nullable Input<Map<String,String>> resourceLabels;
        private @Nullable Input<ClusterResourceUsageExportConfigArgs> resourceUsageExportConfig;
        private @Nullable Input<String> subnetwork;
        private @Nullable Input<ClusterVerticalPodAutoscalingArgs> verticalPodAutoscaling;
        private @Nullable Input<ClusterWorkloadIdentityConfigArgs> workloadIdentityConfig;

        public Builder() {
    	      // Empty
        }

        public Builder(ClusterArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.addonsConfig = defaults.addonsConfig;
    	      this.authenticatorGroupsConfig = defaults.authenticatorGroupsConfig;
    	      this.clusterAutoscaling = defaults.clusterAutoscaling;
    	      this.clusterIpv4Cidr = defaults.clusterIpv4Cidr;
    	      this.clusterTelemetry = defaults.clusterTelemetry;
    	      this.confidentialNodes = defaults.confidentialNodes;
    	      this.databaseEncryption = defaults.databaseEncryption;
    	      this.datapathProvider = defaults.datapathProvider;
    	      this.defaultMaxPodsPerNode = defaults.defaultMaxPodsPerNode;
    	      this.defaultSnatStatus = defaults.defaultSnatStatus;
    	      this.description = defaults.description;
    	      this.dnsConfig = defaults.dnsConfig;
    	      this.enableAutopilot = defaults.enableAutopilot;
    	      this.enableBinaryAuthorization = defaults.enableBinaryAuthorization;
    	      this.enableIntranodeVisibility = defaults.enableIntranodeVisibility;
    	      this.enableKubernetesAlpha = defaults.enableKubernetesAlpha;
    	      this.enableL4IlbSubsetting = defaults.enableL4IlbSubsetting;
    	      this.enableLegacyAbac = defaults.enableLegacyAbac;
    	      this.enableShieldedNodes = defaults.enableShieldedNodes;
    	      this.enableTpu = defaults.enableTpu;
    	      this.identityServiceConfig = defaults.identityServiceConfig;
    	      this.initialNodeCount = defaults.initialNodeCount;
    	      this.ipAllocationPolicy = defaults.ipAllocationPolicy;
    	      this.location = defaults.location;
    	      this.loggingConfig = defaults.loggingConfig;
    	      this.loggingService = defaults.loggingService;
    	      this.maintenancePolicy = defaults.maintenancePolicy;
    	      this.masterAuth = defaults.masterAuth;
    	      this.masterAuthorizedNetworksConfig = defaults.masterAuthorizedNetworksConfig;
    	      this.minMasterVersion = defaults.minMasterVersion;
    	      this.monitoringConfig = defaults.monitoringConfig;
    	      this.monitoringService = defaults.monitoringService;
    	      this.name = defaults.name;
    	      this.network = defaults.network;
    	      this.networkPolicy = defaults.networkPolicy;
    	      this.networkingMode = defaults.networkingMode;
    	      this.nodeConfig = defaults.nodeConfig;
    	      this.nodeLocations = defaults.nodeLocations;
    	      this.nodePools = defaults.nodePools;
    	      this.nodeVersion = defaults.nodeVersion;
    	      this.notificationConfig = defaults.notificationConfig;
    	      this.podSecurityPolicyConfig = defaults.podSecurityPolicyConfig;
    	      this.privateClusterConfig = defaults.privateClusterConfig;
    	      this.privateIpv6GoogleAccess = defaults.privateIpv6GoogleAccess;
    	      this.project = defaults.project;
    	      this.releaseChannel = defaults.releaseChannel;
    	      this.removeDefaultNodePool = defaults.removeDefaultNodePool;
    	      this.resourceLabels = defaults.resourceLabels;
    	      this.resourceUsageExportConfig = defaults.resourceUsageExportConfig;
    	      this.subnetwork = defaults.subnetwork;
    	      this.verticalPodAutoscaling = defaults.verticalPodAutoscaling;
    	      this.workloadIdentityConfig = defaults.workloadIdentityConfig;
        }

        public Builder setAddonsConfig(@Nullable Input<ClusterAddonsConfigArgs> addonsConfig) {
            this.addonsConfig = addonsConfig;
            return this;
        }

        public Builder setAddonsConfig(@Nullable ClusterAddonsConfigArgs addonsConfig) {
            this.addonsConfig = Input.ofNullable(addonsConfig);
            return this;
        }

        public Builder setAuthenticatorGroupsConfig(@Nullable Input<ClusterAuthenticatorGroupsConfigArgs> authenticatorGroupsConfig) {
            this.authenticatorGroupsConfig = authenticatorGroupsConfig;
            return this;
        }

        public Builder setAuthenticatorGroupsConfig(@Nullable ClusterAuthenticatorGroupsConfigArgs authenticatorGroupsConfig) {
            this.authenticatorGroupsConfig = Input.ofNullable(authenticatorGroupsConfig);
            return this;
        }

        public Builder setClusterAutoscaling(@Nullable Input<ClusterClusterAutoscalingArgs> clusterAutoscaling) {
            this.clusterAutoscaling = clusterAutoscaling;
            return this;
        }

        public Builder setClusterAutoscaling(@Nullable ClusterClusterAutoscalingArgs clusterAutoscaling) {
            this.clusterAutoscaling = Input.ofNullable(clusterAutoscaling);
            return this;
        }

        public Builder setClusterIpv4Cidr(@Nullable Input<String> clusterIpv4Cidr) {
            this.clusterIpv4Cidr = clusterIpv4Cidr;
            return this;
        }

        public Builder setClusterIpv4Cidr(@Nullable String clusterIpv4Cidr) {
            this.clusterIpv4Cidr = Input.ofNullable(clusterIpv4Cidr);
            return this;
        }

        public Builder setClusterTelemetry(@Nullable Input<ClusterClusterTelemetryArgs> clusterTelemetry) {
            this.clusterTelemetry = clusterTelemetry;
            return this;
        }

        public Builder setClusterTelemetry(@Nullable ClusterClusterTelemetryArgs clusterTelemetry) {
            this.clusterTelemetry = Input.ofNullable(clusterTelemetry);
            return this;
        }

        public Builder setConfidentialNodes(@Nullable Input<ClusterConfidentialNodesArgs> confidentialNodes) {
            this.confidentialNodes = confidentialNodes;
            return this;
        }

        public Builder setConfidentialNodes(@Nullable ClusterConfidentialNodesArgs confidentialNodes) {
            this.confidentialNodes = Input.ofNullable(confidentialNodes);
            return this;
        }

        public Builder setDatabaseEncryption(@Nullable Input<ClusterDatabaseEncryptionArgs> databaseEncryption) {
            this.databaseEncryption = databaseEncryption;
            return this;
        }

        public Builder setDatabaseEncryption(@Nullable ClusterDatabaseEncryptionArgs databaseEncryption) {
            this.databaseEncryption = Input.ofNullable(databaseEncryption);
            return this;
        }

        public Builder setDatapathProvider(@Nullable Input<String> datapathProvider) {
            this.datapathProvider = datapathProvider;
            return this;
        }

        public Builder setDatapathProvider(@Nullable String datapathProvider) {
            this.datapathProvider = Input.ofNullable(datapathProvider);
            return this;
        }

        public Builder setDefaultMaxPodsPerNode(@Nullable Input<Integer> defaultMaxPodsPerNode) {
            this.defaultMaxPodsPerNode = defaultMaxPodsPerNode;
            return this;
        }

        public Builder setDefaultMaxPodsPerNode(@Nullable Integer defaultMaxPodsPerNode) {
            this.defaultMaxPodsPerNode = Input.ofNullable(defaultMaxPodsPerNode);
            return this;
        }

        public Builder setDefaultSnatStatus(@Nullable Input<ClusterDefaultSnatStatusArgs> defaultSnatStatus) {
            this.defaultSnatStatus = defaultSnatStatus;
            return this;
        }

        public Builder setDefaultSnatStatus(@Nullable ClusterDefaultSnatStatusArgs defaultSnatStatus) {
            this.defaultSnatStatus = Input.ofNullable(defaultSnatStatus);
            return this;
        }

        public Builder setDescription(@Nullable Input<String> description) {
            this.description = description;
            return this;
        }

        public Builder setDescription(@Nullable String description) {
            this.description = Input.ofNullable(description);
            return this;
        }

        public Builder setDnsConfig(@Nullable Input<ClusterDnsConfigArgs> dnsConfig) {
            this.dnsConfig = dnsConfig;
            return this;
        }

        public Builder setDnsConfig(@Nullable ClusterDnsConfigArgs dnsConfig) {
            this.dnsConfig = Input.ofNullable(dnsConfig);
            return this;
        }

        public Builder setEnableAutopilot(@Nullable Input<Boolean> enableAutopilot) {
            this.enableAutopilot = enableAutopilot;
            return this;
        }

        public Builder setEnableAutopilot(@Nullable Boolean enableAutopilot) {
            this.enableAutopilot = Input.ofNullable(enableAutopilot);
            return this;
        }

        public Builder setEnableBinaryAuthorization(@Nullable Input<Boolean> enableBinaryAuthorization) {
            this.enableBinaryAuthorization = enableBinaryAuthorization;
            return this;
        }

        public Builder setEnableBinaryAuthorization(@Nullable Boolean enableBinaryAuthorization) {
            this.enableBinaryAuthorization = Input.ofNullable(enableBinaryAuthorization);
            return this;
        }

        public Builder setEnableIntranodeVisibility(@Nullable Input<Boolean> enableIntranodeVisibility) {
            this.enableIntranodeVisibility = enableIntranodeVisibility;
            return this;
        }

        public Builder setEnableIntranodeVisibility(@Nullable Boolean enableIntranodeVisibility) {
            this.enableIntranodeVisibility = Input.ofNullable(enableIntranodeVisibility);
            return this;
        }

        public Builder setEnableKubernetesAlpha(@Nullable Input<Boolean> enableKubernetesAlpha) {
            this.enableKubernetesAlpha = enableKubernetesAlpha;
            return this;
        }

        public Builder setEnableKubernetesAlpha(@Nullable Boolean enableKubernetesAlpha) {
            this.enableKubernetesAlpha = Input.ofNullable(enableKubernetesAlpha);
            return this;
        }

        public Builder setEnableL4IlbSubsetting(@Nullable Input<Boolean> enableL4IlbSubsetting) {
            this.enableL4IlbSubsetting = enableL4IlbSubsetting;
            return this;
        }

        public Builder setEnableL4IlbSubsetting(@Nullable Boolean enableL4IlbSubsetting) {
            this.enableL4IlbSubsetting = Input.ofNullable(enableL4IlbSubsetting);
            return this;
        }

        public Builder setEnableLegacyAbac(@Nullable Input<Boolean> enableLegacyAbac) {
            this.enableLegacyAbac = enableLegacyAbac;
            return this;
        }

        public Builder setEnableLegacyAbac(@Nullable Boolean enableLegacyAbac) {
            this.enableLegacyAbac = Input.ofNullable(enableLegacyAbac);
            return this;
        }

        public Builder setEnableShieldedNodes(@Nullable Input<Boolean> enableShieldedNodes) {
            this.enableShieldedNodes = enableShieldedNodes;
            return this;
        }

        public Builder setEnableShieldedNodes(@Nullable Boolean enableShieldedNodes) {
            this.enableShieldedNodes = Input.ofNullable(enableShieldedNodes);
            return this;
        }

        public Builder setEnableTpu(@Nullable Input<Boolean> enableTpu) {
            this.enableTpu = enableTpu;
            return this;
        }

        public Builder setEnableTpu(@Nullable Boolean enableTpu) {
            this.enableTpu = Input.ofNullable(enableTpu);
            return this;
        }

        public Builder setIdentityServiceConfig(@Nullable Input<ClusterIdentityServiceConfigArgs> identityServiceConfig) {
            this.identityServiceConfig = identityServiceConfig;
            return this;
        }

        public Builder setIdentityServiceConfig(@Nullable ClusterIdentityServiceConfigArgs identityServiceConfig) {
            this.identityServiceConfig = Input.ofNullable(identityServiceConfig);
            return this;
        }

        public Builder setInitialNodeCount(@Nullable Input<Integer> initialNodeCount) {
            this.initialNodeCount = initialNodeCount;
            return this;
        }

        public Builder setInitialNodeCount(@Nullable Integer initialNodeCount) {
            this.initialNodeCount = Input.ofNullable(initialNodeCount);
            return this;
        }

        public Builder setIpAllocationPolicy(@Nullable Input<ClusterIpAllocationPolicyArgs> ipAllocationPolicy) {
            this.ipAllocationPolicy = ipAllocationPolicy;
            return this;
        }

        public Builder setIpAllocationPolicy(@Nullable ClusterIpAllocationPolicyArgs ipAllocationPolicy) {
            this.ipAllocationPolicy = Input.ofNullable(ipAllocationPolicy);
            return this;
        }

        public Builder setLocation(@Nullable Input<String> location) {
            this.location = location;
            return this;
        }

        public Builder setLocation(@Nullable String location) {
            this.location = Input.ofNullable(location);
            return this;
        }

        public Builder setLoggingConfig(@Nullable Input<ClusterLoggingConfigArgs> loggingConfig) {
            this.loggingConfig = loggingConfig;
            return this;
        }

        public Builder setLoggingConfig(@Nullable ClusterLoggingConfigArgs loggingConfig) {
            this.loggingConfig = Input.ofNullable(loggingConfig);
            return this;
        }

        public Builder setLoggingService(@Nullable Input<String> loggingService) {
            this.loggingService = loggingService;
            return this;
        }

        public Builder setLoggingService(@Nullable String loggingService) {
            this.loggingService = Input.ofNullable(loggingService);
            return this;
        }

        public Builder setMaintenancePolicy(@Nullable Input<ClusterMaintenancePolicyArgs> maintenancePolicy) {
            this.maintenancePolicy = maintenancePolicy;
            return this;
        }

        public Builder setMaintenancePolicy(@Nullable ClusterMaintenancePolicyArgs maintenancePolicy) {
            this.maintenancePolicy = Input.ofNullable(maintenancePolicy);
            return this;
        }

        public Builder setMasterAuth(@Nullable Input<ClusterMasterAuthArgs> masterAuth) {
            this.masterAuth = masterAuth;
            return this;
        }

        public Builder setMasterAuth(@Nullable ClusterMasterAuthArgs masterAuth) {
            this.masterAuth = Input.ofNullable(masterAuth);
            return this;
        }

        public Builder setMasterAuthorizedNetworksConfig(@Nullable Input<ClusterMasterAuthorizedNetworksConfigArgs> masterAuthorizedNetworksConfig) {
            this.masterAuthorizedNetworksConfig = masterAuthorizedNetworksConfig;
            return this;
        }

        public Builder setMasterAuthorizedNetworksConfig(@Nullable ClusterMasterAuthorizedNetworksConfigArgs masterAuthorizedNetworksConfig) {
            this.masterAuthorizedNetworksConfig = Input.ofNullable(masterAuthorizedNetworksConfig);
            return this;
        }

        public Builder setMinMasterVersion(@Nullable Input<String> minMasterVersion) {
            this.minMasterVersion = minMasterVersion;
            return this;
        }

        public Builder setMinMasterVersion(@Nullable String minMasterVersion) {
            this.minMasterVersion = Input.ofNullable(minMasterVersion);
            return this;
        }

        public Builder setMonitoringConfig(@Nullable Input<ClusterMonitoringConfigArgs> monitoringConfig) {
            this.monitoringConfig = monitoringConfig;
            return this;
        }

        public Builder setMonitoringConfig(@Nullable ClusterMonitoringConfigArgs monitoringConfig) {
            this.monitoringConfig = Input.ofNullable(monitoringConfig);
            return this;
        }

        public Builder setMonitoringService(@Nullable Input<String> monitoringService) {
            this.monitoringService = monitoringService;
            return this;
        }

        public Builder setMonitoringService(@Nullable String monitoringService) {
            this.monitoringService = Input.ofNullable(monitoringService);
            return this;
        }

        public Builder setName(@Nullable Input<String> name) {
            this.name = name;
            return this;
        }

        public Builder setName(@Nullable String name) {
            this.name = Input.ofNullable(name);
            return this;
        }

        public Builder setNetwork(@Nullable Input<String> network) {
            this.network = network;
            return this;
        }

        public Builder setNetwork(@Nullable String network) {
            this.network = Input.ofNullable(network);
            return this;
        }

        public Builder setNetworkPolicy(@Nullable Input<ClusterNetworkPolicyArgs> networkPolicy) {
            this.networkPolicy = networkPolicy;
            return this;
        }

        public Builder setNetworkPolicy(@Nullable ClusterNetworkPolicyArgs networkPolicy) {
            this.networkPolicy = Input.ofNullable(networkPolicy);
            return this;
        }

        public Builder setNetworkingMode(@Nullable Input<String> networkingMode) {
            this.networkingMode = networkingMode;
            return this;
        }

        public Builder setNetworkingMode(@Nullable String networkingMode) {
            this.networkingMode = Input.ofNullable(networkingMode);
            return this;
        }

        public Builder setNodeConfig(@Nullable Input<ClusterNodeConfigArgs> nodeConfig) {
            this.nodeConfig = nodeConfig;
            return this;
        }

        public Builder setNodeConfig(@Nullable ClusterNodeConfigArgs nodeConfig) {
            this.nodeConfig = Input.ofNullable(nodeConfig);
            return this;
        }

        public Builder setNodeLocations(@Nullable Input<List<String>> nodeLocations) {
            this.nodeLocations = nodeLocations;
            return this;
        }

        public Builder setNodeLocations(@Nullable List<String> nodeLocations) {
            this.nodeLocations = Input.ofNullable(nodeLocations);
            return this;
        }

        public Builder setNodePools(@Nullable Input<List<ClusterNodePoolArgs>> nodePools) {
            this.nodePools = nodePools;
            return this;
        }

        public Builder setNodePools(@Nullable List<ClusterNodePoolArgs> nodePools) {
            this.nodePools = Input.ofNullable(nodePools);
            return this;
        }

        public Builder setNodeVersion(@Nullable Input<String> nodeVersion) {
            this.nodeVersion = nodeVersion;
            return this;
        }

        public Builder setNodeVersion(@Nullable String nodeVersion) {
            this.nodeVersion = Input.ofNullable(nodeVersion);
            return this;
        }

        public Builder setNotificationConfig(@Nullable Input<ClusterNotificationConfigArgs> notificationConfig) {
            this.notificationConfig = notificationConfig;
            return this;
        }

        public Builder setNotificationConfig(@Nullable ClusterNotificationConfigArgs notificationConfig) {
            this.notificationConfig = Input.ofNullable(notificationConfig);
            return this;
        }

        public Builder setPodSecurityPolicyConfig(@Nullable Input<ClusterPodSecurityPolicyConfigArgs> podSecurityPolicyConfig) {
            this.podSecurityPolicyConfig = podSecurityPolicyConfig;
            return this;
        }

        public Builder setPodSecurityPolicyConfig(@Nullable ClusterPodSecurityPolicyConfigArgs podSecurityPolicyConfig) {
            this.podSecurityPolicyConfig = Input.ofNullable(podSecurityPolicyConfig);
            return this;
        }

        public Builder setPrivateClusterConfig(@Nullable Input<ClusterPrivateClusterConfigArgs> privateClusterConfig) {
            this.privateClusterConfig = privateClusterConfig;
            return this;
        }

        public Builder setPrivateClusterConfig(@Nullable ClusterPrivateClusterConfigArgs privateClusterConfig) {
            this.privateClusterConfig = Input.ofNullable(privateClusterConfig);
            return this;
        }

        public Builder setPrivateIpv6GoogleAccess(@Nullable Input<String> privateIpv6GoogleAccess) {
            this.privateIpv6GoogleAccess = privateIpv6GoogleAccess;
            return this;
        }

        public Builder setPrivateIpv6GoogleAccess(@Nullable String privateIpv6GoogleAccess) {
            this.privateIpv6GoogleAccess = Input.ofNullable(privateIpv6GoogleAccess);
            return this;
        }

        public Builder setProject(@Nullable Input<String> project) {
            this.project = project;
            return this;
        }

        public Builder setProject(@Nullable String project) {
            this.project = Input.ofNullable(project);
            return this;
        }

        public Builder setReleaseChannel(@Nullable Input<ClusterReleaseChannelArgs> releaseChannel) {
            this.releaseChannel = releaseChannel;
            return this;
        }

        public Builder setReleaseChannel(@Nullable ClusterReleaseChannelArgs releaseChannel) {
            this.releaseChannel = Input.ofNullable(releaseChannel);
            return this;
        }

        public Builder setRemoveDefaultNodePool(@Nullable Input<Boolean> removeDefaultNodePool) {
            this.removeDefaultNodePool = removeDefaultNodePool;
            return this;
        }

        public Builder setRemoveDefaultNodePool(@Nullable Boolean removeDefaultNodePool) {
            this.removeDefaultNodePool = Input.ofNullable(removeDefaultNodePool);
            return this;
        }

        public Builder setResourceLabels(@Nullable Input<Map<String,String>> resourceLabels) {
            this.resourceLabels = resourceLabels;
            return this;
        }

        public Builder setResourceLabels(@Nullable Map<String,String> resourceLabels) {
            this.resourceLabels = Input.ofNullable(resourceLabels);
            return this;
        }

        public Builder setResourceUsageExportConfig(@Nullable Input<ClusterResourceUsageExportConfigArgs> resourceUsageExportConfig) {
            this.resourceUsageExportConfig = resourceUsageExportConfig;
            return this;
        }

        public Builder setResourceUsageExportConfig(@Nullable ClusterResourceUsageExportConfigArgs resourceUsageExportConfig) {
            this.resourceUsageExportConfig = Input.ofNullable(resourceUsageExportConfig);
            return this;
        }

        public Builder setSubnetwork(@Nullable Input<String> subnetwork) {
            this.subnetwork = subnetwork;
            return this;
        }

        public Builder setSubnetwork(@Nullable String subnetwork) {
            this.subnetwork = Input.ofNullable(subnetwork);
            return this;
        }

        public Builder setVerticalPodAutoscaling(@Nullable Input<ClusterVerticalPodAutoscalingArgs> verticalPodAutoscaling) {
            this.verticalPodAutoscaling = verticalPodAutoscaling;
            return this;
        }

        public Builder setVerticalPodAutoscaling(@Nullable ClusterVerticalPodAutoscalingArgs verticalPodAutoscaling) {
            this.verticalPodAutoscaling = Input.ofNullable(verticalPodAutoscaling);
            return this;
        }

        public Builder setWorkloadIdentityConfig(@Nullable Input<ClusterWorkloadIdentityConfigArgs> workloadIdentityConfig) {
            this.workloadIdentityConfig = workloadIdentityConfig;
            return this;
        }

        public Builder setWorkloadIdentityConfig(@Nullable ClusterWorkloadIdentityConfigArgs workloadIdentityConfig) {
            this.workloadIdentityConfig = Input.ofNullable(workloadIdentityConfig);
            return this;
        }
        public ClusterArgs build() {
            return new ClusterArgs(addonsConfig, authenticatorGroupsConfig, clusterAutoscaling, clusterIpv4Cidr, clusterTelemetry, confidentialNodes, databaseEncryption, datapathProvider, defaultMaxPodsPerNode, defaultSnatStatus, description, dnsConfig, enableAutopilot, enableBinaryAuthorization, enableIntranodeVisibility, enableKubernetesAlpha, enableL4IlbSubsetting, enableLegacyAbac, enableShieldedNodes, enableTpu, identityServiceConfig, initialNodeCount, ipAllocationPolicy, location, loggingConfig, loggingService, maintenancePolicy, masterAuth, masterAuthorizedNetworksConfig, minMasterVersion, monitoringConfig, monitoringService, name, network, networkPolicy, networkingMode, nodeConfig, nodeLocations, nodePools, nodeVersion, notificationConfig, podSecurityPolicyConfig, privateClusterConfig, privateIpv6GoogleAccess, project, releaseChannel, removeDefaultNodePool, resourceLabels, resourceUsageExportConfig, subnetwork, verticalPodAutoscaling, workloadIdentityConfig);
        }
    }
}
