// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.osconfig.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import io.pulumi.gcp.osconfig.outputs.OsPolicyAssignmentInstanceFilterExclusionLabel;
import io.pulumi.gcp.osconfig.outputs.OsPolicyAssignmentInstanceFilterInclusionLabel;
import io.pulumi.gcp.osconfig.outputs.OsPolicyAssignmentInstanceFilterInventory;
import java.lang.Boolean;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class OsPolicyAssignmentInstanceFilter {
    private final @Nullable Boolean all;
    private final @Nullable List<OsPolicyAssignmentInstanceFilterExclusionLabel> exclusionLabels;
    private final @Nullable List<OsPolicyAssignmentInstanceFilterInclusionLabel> inclusionLabels;
    private final @Nullable List<OsPolicyAssignmentInstanceFilterInventory> inventories;

    @OutputCustomType.Constructor({"all","exclusionLabels","inclusionLabels","inventories"})
    private OsPolicyAssignmentInstanceFilter(
        @Nullable Boolean all,
        @Nullable List<OsPolicyAssignmentInstanceFilterExclusionLabel> exclusionLabels,
        @Nullable List<OsPolicyAssignmentInstanceFilterInclusionLabel> inclusionLabels,
        @Nullable List<OsPolicyAssignmentInstanceFilterInventory> inventories) {
        this.all = all;
        this.exclusionLabels = exclusionLabels;
        this.inclusionLabels = inclusionLabels;
        this.inventories = inventories;
    }

    public Optional<Boolean> getAll() {
        return Optional.ofNullable(this.all);
    }
    public List<OsPolicyAssignmentInstanceFilterExclusionLabel> getExclusionLabels() {
        return this.exclusionLabels == null ? List.of() : this.exclusionLabels;
    }
    public List<OsPolicyAssignmentInstanceFilterInclusionLabel> getInclusionLabels() {
        return this.inclusionLabels == null ? List.of() : this.inclusionLabels;
    }
    public List<OsPolicyAssignmentInstanceFilterInventory> getInventories() {
        return this.inventories == null ? List.of() : this.inventories;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(OsPolicyAssignmentInstanceFilter defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Boolean all;
        private @Nullable List<OsPolicyAssignmentInstanceFilterExclusionLabel> exclusionLabels;
        private @Nullable List<OsPolicyAssignmentInstanceFilterInclusionLabel> inclusionLabels;
        private @Nullable List<OsPolicyAssignmentInstanceFilterInventory> inventories;

        public Builder() {
    	      // Empty
        }

        public Builder(OsPolicyAssignmentInstanceFilter defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.all = defaults.all;
    	      this.exclusionLabels = defaults.exclusionLabels;
    	      this.inclusionLabels = defaults.inclusionLabels;
    	      this.inventories = defaults.inventories;
        }

        public Builder setAll(@Nullable Boolean all) {
            this.all = all;
            return this;
        }

        public Builder setExclusionLabels(@Nullable List<OsPolicyAssignmentInstanceFilterExclusionLabel> exclusionLabels) {
            this.exclusionLabels = exclusionLabels;
            return this;
        }

        public Builder setInclusionLabels(@Nullable List<OsPolicyAssignmentInstanceFilterInclusionLabel> inclusionLabels) {
            this.inclusionLabels = inclusionLabels;
            return this;
        }

        public Builder setInventories(@Nullable List<OsPolicyAssignmentInstanceFilterInventory> inventories) {
            this.inventories = inventories;
            return this;
        }

        public OsPolicyAssignmentInstanceFilter build() {
            return new OsPolicyAssignmentInstanceFilter(all, exclusionLabels, inclusionLabels, inventories);
        }
    }
}
