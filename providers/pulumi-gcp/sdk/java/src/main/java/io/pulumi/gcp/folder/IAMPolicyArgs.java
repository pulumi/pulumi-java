// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.folder;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;


public final class IAMPolicyArgs extends io.pulumi.resources.ResourceArgs {

    public static final IAMPolicyArgs Empty = new IAMPolicyArgs();

    @Import(name="folder", required=true)
      private final Output<String> folder;

    public Output<String> folder() {
        return this.folder;
    }

    @Import(name="policyData", required=true)
      private final Output<String> policyData;

    public Output<String> policyData() {
        return this.policyData;
    }

    public IAMPolicyArgs(
        Output<String> folder,
        Output<String> policyData) {
        this.folder = Objects.requireNonNull(folder, "expected parameter 'folder' to be non-null");
        this.policyData = Objects.requireNonNull(policyData, "expected parameter 'policyData' to be non-null");
    }

    private IAMPolicyArgs() {
        this.folder = Codegen.empty();
        this.policyData = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(IAMPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> folder;
        private Output<String> policyData;

        public Builder() {
    	      // Empty
        }

        public Builder(IAMPolicyArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.folder = defaults.folder;
    	      this.policyData = defaults.policyData;
        }

        public Builder folder(Output<String> folder) {
            this.folder = Objects.requireNonNull(folder);
            return this;
        }
        public Builder folder(String folder) {
            this.folder = Output.of(Objects.requireNonNull(folder));
            return this;
        }
        public Builder policyData(Output<String> policyData) {
            this.policyData = Objects.requireNonNull(policyData);
            return this;
        }
        public Builder policyData(String policyData) {
            this.policyData = Output.of(Objects.requireNonNull(policyData));
            return this;
        }        public IAMPolicyArgs build() {
            return new IAMPolicyArgs(folder, policyData);
        }
    }
}
