// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.compute;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Export;
import io.pulumi.core.annotations.ResourceType;
import io.pulumi.gcp.Utilities;
import io.pulumi.gcp.compute.FirewallPolicyRuleArgs;
import io.pulumi.gcp.compute.inputs.FirewallPolicyRuleState;
import io.pulumi.gcp.compute.outputs.FirewallPolicyRuleMatch;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * Hierarchical firewall policy rules let you create and enforce a consistent firewall policy across your organization. Rules can explicitly allow or deny connections or delegate evaluation to lower level policies.
 * 
 * For more information see the [official documentation](https://cloud.google.com/vpc/docs/using-firewall-policies#create-rules)
 * 
 * {{% examples %}}
 * ## Example Usage
 * {{% example %}}
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 * 
 * const defaultFirewallPolicy = new gcp.compute.FirewallPolicy("defaultFirewallPolicy", {
 *     parent: "organizations/12345",
 *     shortName: "my-policy",
 *     description: "Example Resource",
 * });
 * const defaultFirewallPolicyRule = new gcp.compute.FirewallPolicyRule("defaultFirewallPolicyRule", {
 *     firewallPolicy: defaultFirewallPolicy.id,
 *     description: "Example Resource",
 *     priority: 9000,
 *     enableLogging: true,
 *     action: "allow",
 *     direction: "EGRESS",
 *     disabled: false,
 *     match: {
 *         layer4Configs: [{
 *             ipProtocol: "tcp",
 *             ports: [
 *                 80,
 *                 8080,
 *             ],
 *         }],
 *         destIpRanges: ["11.100.0.1/32"],
 *     },
 * });
 * ```
 * ```python
 * import pulumi
 * import pulumi_gcp as gcp
 * 
 * default_firewall_policy = gcp.compute.FirewallPolicy("defaultFirewallPolicy",
 *     parent="organizations/12345",
 *     short_name="my-policy",
 *     description="Example Resource")
 * default_firewall_policy_rule = gcp.compute.FirewallPolicyRule("defaultFirewallPolicyRule",
 *     firewall_policy=default_firewall_policy.id,
 *     description="Example Resource",
 *     priority=9000,
 *     enable_logging=True,
 *     action="allow",
 *     direction="EGRESS",
 *     disabled=False,
 *     match=gcp.compute.FirewallPolicyRuleMatchArgs(
 *         layer4_configs=[gcp.compute.FirewallPolicyRuleMatchLayer4ConfigArgs(
 *             ip_protocol="tcp",
 *             ports=[
 *                 "80",
 *                 "8080",
 *             ],
 *         )],
 *         dest_ip_ranges=["11.100.0.1/32"],
 *     ))
 * ```
 * ```csharp
 * using Pulumi;
 * using Gcp = Pulumi.Gcp;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var defaultFirewallPolicy = new Gcp.Compute.FirewallPolicy("defaultFirewallPolicy", new Gcp.Compute.FirewallPolicyArgs
 *         {
 *             Parent = "organizations/12345",
 *             ShortName = "my-policy",
 *             Description = "Example Resource",
 *         });
 *         var defaultFirewallPolicyRule = new Gcp.Compute.FirewallPolicyRule("defaultFirewallPolicyRule", new Gcp.Compute.FirewallPolicyRuleArgs
 *         {
 *             FirewallPolicy = defaultFirewallPolicy.Id,
 *             Description = "Example Resource",
 *             Priority = 9000,
 *             EnableLogging = true,
 *             Action = "allow",
 *             Direction = "EGRESS",
 *             Disabled = false,
 *             Match = new Gcp.Compute.Inputs.FirewallPolicyRuleMatchArgs
 *             {
 *                 Layer4Configs = 
 *                 {
 *                     new Gcp.Compute.Inputs.FirewallPolicyRuleMatchLayer4ConfigArgs
 *                     {
 *                         IpProtocol = "tcp",
 *                         Ports = 
 *                         {
 *                             "80",
 *                             "8080",
 *                         },
 *                     },
 *                 },
 *                 DestIpRanges = 
 *                 {
 *                     "11.100.0.1/32",
 *                 },
 *             },
 *         });
 *     }
 * 
 * }
 * ```
 * ```go
 * package main
 * 
 * import (
 * 	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/compute"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		defaultFirewallPolicy, err := compute.NewFirewallPolicy(ctx, "defaultFirewallPolicy", &compute.FirewallPolicyArgs{
 * 			Parent:      pulumi.String("organizations/12345"),
 * 			ShortName:   pulumi.String("my-policy"),
 * 			Description: pulumi.String("Example Resource"),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		_, err = compute.NewFirewallPolicyRule(ctx, "defaultFirewallPolicyRule", &compute.FirewallPolicyRuleArgs{
 * 			FirewallPolicy: defaultFirewallPolicy.ID(),
 * 			Description:    pulumi.String("Example Resource"),
 * 			Priority:       pulumi.Int(9000),
 * 			EnableLogging:  pulumi.Bool(true),
 * 			Action:         pulumi.String("allow"),
 * 			Direction:      pulumi.String("EGRESS"),
 * 			Disabled:       pulumi.Bool(false),
 * 			Match: &compute.FirewallPolicyRuleMatchArgs{
 * 				Layer4Configs: compute.FirewallPolicyRuleMatchLayer4ConfigArray{
 * 					&compute.FirewallPolicyRuleMatchLayer4ConfigArgs{
 * 						IpProtocol: pulumi.String("tcp"),
 * 						Ports: pulumi.StringArray{
 * 							pulumi.String("80"),
 * 							pulumi.String("8080"),
 * 						},
 * 					},
 * 				},
 * 				DestIpRanges: pulumi.StringArray{
 * 					pulumi.String("11.100.0.1/32"),
 * 				},
 * 			},
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * ```
 * {{% /example %}}
 * {{% /examples %}}
 * 
 * ## Import
 * 
 * FirewallPolicyRule can be imported using any of these accepted formats
 * 
 * ```sh
 *  $ pulumi import gcp:compute/firewallPolicyRule:FirewallPolicyRule default locations/global/firewallPolicies/{{firewall_policy}}/rules/{{priority}}
 * ```
 * 
 * 
 * 
 * ```sh
 *  $ pulumi import gcp:compute/firewallPolicyRule:FirewallPolicyRule default {{firewall_policy}}/{{priority}}
 * ```
 * 
 *  
 */
@ResourceType(type="gcp:compute/firewallPolicyRule:FirewallPolicyRule")
public class FirewallPolicyRule extends io.pulumi.resources.CustomResource {
    /**
     * The Action to perform when the client connection triggers the rule. Can currently be either "allow" or "deny()" where valid values for status are 403, 404, and 502.
     * 
     */
    @Export(name="action", type=String.class, parameters={})
    private Output<String> action;

    /**
     * @return The Action to perform when the client connection triggers the rule. Can currently be either "allow" or "deny()" where valid values for status are 403, 404, and 502.
     * 
     */
    public Output<String> getAction() {
        return this.action;
    }
    /**
     * An optional description for this resource.
     * 
     */
    @Export(name="description", type=String.class, parameters={})
    private Output</* @Nullable */ String> description;

    /**
     * @return An optional description for this resource.
     * 
     */
    public Output</* @Nullable */ String> getDescription() {
        return this.description;
    }
    /**
     * The direction in which this rule applies. Possible values: INGRESS, EGRESS
     * 
     */
    @Export(name="direction", type=String.class, parameters={})
    private Output<String> direction;

    /**
     * @return The direction in which this rule applies. Possible values: INGRESS, EGRESS
     * 
     */
    public Output<String> getDirection() {
        return this.direction;
    }
    /**
     * Denotes whether the firewall policy rule is disabled. When set to true, the firewall policy rule is not enforced and traffic behaves as if it did not exist. If this is unspecified, the firewall policy rule will be enabled.
     * 
     */
    @Export(name="disabled", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> disabled;

    /**
     * @return Denotes whether the firewall policy rule is disabled. When set to true, the firewall policy rule is not enforced and traffic behaves as if it did not exist. If this is unspecified, the firewall policy rule will be enabled.
     * 
     */
    public Output</* @Nullable */ Boolean> getDisabled() {
        return this.disabled;
    }
    /**
     * Denotes whether to enable logging for a particular rule. If logging is enabled, logs will be exported to the configured export destination in Stackdriver. Logs may be exported to BigQuery or Pub/Sub. Note: you cannot enable logging on "goto_next" rules.
     * 
     */
    @Export(name="enableLogging", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> enableLogging;

    /**
     * @return Denotes whether to enable logging for a particular rule. If logging is enabled, logs will be exported to the configured export destination in Stackdriver. Logs may be exported to BigQuery or Pub/Sub. Note: you cannot enable logging on "goto_next" rules.
     * 
     */
    public Output</* @Nullable */ Boolean> getEnableLogging() {
        return this.enableLogging;
    }
    /**
     * The firewall policy of the resource.
     * 
     */
    @Export(name="firewallPolicy", type=String.class, parameters={})
    private Output<String> firewallPolicy;

    /**
     * @return The firewall policy of the resource.
     * 
     */
    public Output<String> getFirewallPolicy() {
        return this.firewallPolicy;
    }
    /**
     * Type of the resource. Always `compute#firewallPolicyRule` for firewall policy rules
     * 
     */
    @Export(name="kind", type=String.class, parameters={})
    private Output<String> kind;

    /**
     * @return Type of the resource. Always `compute#firewallPolicyRule` for firewall policy rules
     * 
     */
    public Output<String> getKind() {
        return this.kind;
    }
    /**
     * A match condition that incoming traffic is evaluated against. If it evaluates to true, the corresponding 'action' is enforced. Structure is documented below.
     * 
     */
    @Export(name="match", type=FirewallPolicyRuleMatch.class, parameters={})
    private Output<FirewallPolicyRuleMatch> match;

    /**
     * @return A match condition that incoming traffic is evaluated against. If it evaluates to true, the corresponding 'action' is enforced. Structure is documented below.
     * 
     */
    public Output<FirewallPolicyRuleMatch> getMatch() {
        return this.match;
    }
    /**
     * An integer indicating the priority of a rule in the list. The priority must be a positive value between 0 and 2147483647. Rules are evaluated from highest to lowest priority where 0 is the highest priority and 2147483647 is the lowest prority.
     * 
     */
    @Export(name="priority", type=Integer.class, parameters={})
    private Output<Integer> priority;

    /**
     * @return An integer indicating the priority of a rule in the list. The priority must be a positive value between 0 and 2147483647. Rules are evaluated from highest to lowest priority where 0 is the highest priority and 2147483647 is the lowest prority.
     * 
     */
    public Output<Integer> getPriority() {
        return this.priority;
    }
    /**
     * Calculation of the complexity of a single firewall policy rule.
     * 
     */
    @Export(name="ruleTupleCount", type=Integer.class, parameters={})
    private Output<Integer> ruleTupleCount;

    /**
     * @return Calculation of the complexity of a single firewall policy rule.
     * 
     */
    public Output<Integer> getRuleTupleCount() {
        return this.ruleTupleCount;
    }
    /**
     * A list of network resource URLs to which this rule applies. This field allows you to control which network's VMs get this rule. If this field is left blank, all VMs within the organization will receive the rule.
     * 
     */
    @Export(name="targetResources", type=List.class, parameters={String.class})
    private Output</* @Nullable */ List<String>> targetResources;

    /**
     * @return A list of network resource URLs to which this rule applies. This field allows you to control which network's VMs get this rule. If this field is left blank, all VMs within the organization will receive the rule.
     * 
     */
    public Output</* @Nullable */ List<String>> getTargetResources() {
        return this.targetResources;
    }
    /**
     * A list of service accounts indicating the sets of instances that are applied with this rule.
     * 
     */
    @Export(name="targetServiceAccounts", type=List.class, parameters={String.class})
    private Output</* @Nullable */ List<String>> targetServiceAccounts;

    /**
     * @return A list of service accounts indicating the sets of instances that are applied with this rule.
     * 
     */
    public Output</* @Nullable */ List<String>> getTargetServiceAccounts() {
        return this.targetServiceAccounts;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public FirewallPolicyRule(String name) {
        this(name, FirewallPolicyRuleArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public FirewallPolicyRule(String name, FirewallPolicyRuleArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public FirewallPolicyRule(String name, FirewallPolicyRuleArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("gcp:compute/firewallPolicyRule:FirewallPolicyRule", name, args == null ? FirewallPolicyRuleArgs.Empty : args, makeResourceOptions(options, Output.empty()));
    }

    private FirewallPolicyRule(String name, Output<String> id, @Nullable FirewallPolicyRuleState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("gcp:compute/firewallPolicyRule:FirewallPolicyRule", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static FirewallPolicyRule get(String name, Output<String> id, @Nullable FirewallPolicyRuleState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new FirewallPolicyRule(name, id, state, options);
    }
}
