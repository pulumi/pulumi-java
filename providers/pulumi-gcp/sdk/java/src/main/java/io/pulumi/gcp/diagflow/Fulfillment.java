// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.diagflow;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Export;
import io.pulumi.core.annotations.ResourceType;
import io.pulumi.gcp.Utilities;
import io.pulumi.gcp.diagflow.FulfillmentArgs;
import io.pulumi.gcp.diagflow.inputs.FulfillmentState;
import io.pulumi.gcp.diagflow.outputs.FulfillmentFeature;
import io.pulumi.gcp.diagflow.outputs.FulfillmentGenericWebService;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * By default, your agent responds to a matched intent with a static response. If you're using one of the integration options, you can provide a more dynamic response by using fulfillment. When you enable fulfillment for an intent, Dialogflow responds to that intent by calling a service that you define. For example, if an end-user wants to schedule a haircut on Friday, your service can check your database and respond to the end-user with availability information for Friday.
 * 
 * 
 * To get more information about Fulfillment, see:
 * 
 * * [API documentation](https://cloud.google.com/dialogflow/es/docs/reference/rest/v2/projects.agent/getFulfillment)
 * * How-to Guides
 *     * [Official Documentation](https://cloud.google.com/dialogflow/es/docs/fulfillment-overview)
 * 
 * {{% examples %}}
 * ## Example Usage
 * {{% example %}}
 * ### Dialogflow Fulfillment Basic
 * 
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 * 
 * const basicAgent = new gcp.diagflow.Agent("basicAgent", {
 *     displayName: "example_agent",
 *     defaultLanguageCode: "en",
 *     timeZone: "America/New_York",
 * });
 * const basicFulfillment = new gcp.diagflow.Fulfillment("basicFulfillment", {
 *     displayName: "basic-fulfillment",
 *     enabled: true,
 *     genericWebService: {
 *         uri: "https://google.com",
 *         username: "admin",
 *         password: "password",
 *         requestHeaders: {
 *             name: "wrench",
 *         },
 *     },
 * }, {
 *     dependsOn: [basicAgent],
 * });
 * ```
 * ```python
 * import pulumi
 * import pulumi_gcp as gcp
 * 
 * basic_agent = gcp.diagflow.Agent("basicAgent",
 *     display_name="example_agent",
 *     default_language_code="en",
 *     time_zone="America/New_York")
 * basic_fulfillment = gcp.diagflow.Fulfillment("basicFulfillment",
 *     display_name="basic-fulfillment",
 *     enabled=True,
 *     generic_web_service=gcp.diagflow.FulfillmentGenericWebServiceArgs(
 *         uri="https://google.com",
 *         username="admin",
 *         password="password",
 *         request_headers={
 *             "name": "wrench",
 *         },
 *     ),
 *     opts=pulumi.ResourceOptions(depends_on=[basic_agent]))
 * ```
 * ```csharp
 * using Pulumi;
 * using Gcp = Pulumi.Gcp;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var basicAgent = new Gcp.Diagflow.Agent("basicAgent", new Gcp.Diagflow.AgentArgs
 *         {
 *             DisplayName = "example_agent",
 *             DefaultLanguageCode = "en",
 *             TimeZone = "America/New_York",
 *         });
 *         var basicFulfillment = new Gcp.Diagflow.Fulfillment("basicFulfillment", new Gcp.Diagflow.FulfillmentArgs
 *         {
 *             DisplayName = "basic-fulfillment",
 *             Enabled = true,
 *             GenericWebService = new Gcp.Diagflow.Inputs.FulfillmentGenericWebServiceArgs
 *             {
 *                 Uri = "https://google.com",
 *                 Username = "admin",
 *                 Password = "password",
 *                 RequestHeaders = 
 *                 {
 *                     { "name", "wrench" },
 *                 },
 *             },
 *         }, new CustomResourceOptions
 *         {
 *             DependsOn = 
 *             {
 *                 basicAgent,
 *             },
 *         });
 *     }
 * 
 * }
 * ```
 * ```go
 * package main
 * 
 * import (
 * 	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/diagflow"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		basicAgent, err := diagflow.NewAgent(ctx, "basicAgent", &diagflow.AgentArgs{
 * 			DisplayName:         pulumi.String("example_agent"),
 * 			DefaultLanguageCode: pulumi.String("en"),
 * 			TimeZone:            pulumi.String("America/New_York"),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		_, err = diagflow.NewFulfillment(ctx, "basicFulfillment", &diagflow.FulfillmentArgs{
 * 			DisplayName: pulumi.String("basic-fulfillment"),
 * 			Enabled:     pulumi.Bool(true),
 * 			GenericWebService: &diagflow.FulfillmentGenericWebServiceArgs{
 * 				Uri:      pulumi.String("https://google.com"),
 * 				Username: pulumi.String("admin"),
 * 				Password: pulumi.String("password"),
 * 				RequestHeaders: pulumi.StringMap{
 * 					"name": pulumi.String("wrench"),
 * 				},
 * 			},
 * 		}, pulumi.DependsOn([]pulumi.Resource{
 * 			basicAgent,
 * 		}))
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * ```
 * {{% /example %}}
 * {{% /examples %}}
 * 
 * ## Import
 * 
 * Fulfillment can be imported using any of these accepted formats
 * 
 * ```sh
 *  $ pulumi import gcp:diagflow/fulfillment:Fulfillment default {{name}}
 * ```
 * 
 *  
 */
@ResourceType(type="gcp:diagflow/fulfillment:Fulfillment")
public class Fulfillment extends io.pulumi.resources.CustomResource {
    /**
     * The human-readable name of the fulfillment, unique within the agent.
     * 
     */
    @Export(name="displayName", type=String.class, parameters={})
    private Output<String> displayName;

    /**
     * @return The human-readable name of the fulfillment, unique within the agent.
     * 
     */
    public Output<String> getDisplayName() {
        return this.displayName;
    }
    /**
     * Whether fulfillment is enabled.
     * 
     */
    @Export(name="enabled", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> enabled;

    /**
     * @return Whether fulfillment is enabled.
     * 
     */
    public Output</* @Nullable */ Boolean> getEnabled() {
        return this.enabled;
    }
    /**
     * The field defines whether the fulfillment is enabled for certain features.
     * Structure is documented below.
     * 
     */
    @Export(name="features", type=List.class, parameters={FulfillmentFeature.class})
    private Output</* @Nullable */ List<FulfillmentFeature>> features;

    /**
     * @return The field defines whether the fulfillment is enabled for certain features.
     * Structure is documented below.
     * 
     */
    public Output</* @Nullable */ List<FulfillmentFeature>> getFeatures() {
        return this.features;
    }
    /**
     * Represents configuration for a generic web service. Dialogflow supports two mechanisms for authentications: - Basic authentication with username and password. - Authentication with additional authentication headers.
     * Structure is documented below.
     * 
     */
    @Export(name="genericWebService", type=FulfillmentGenericWebService.class, parameters={})
    private Output</* @Nullable */ FulfillmentGenericWebService> genericWebService;

    /**
     * @return Represents configuration for a generic web service. Dialogflow supports two mechanisms for authentications: - Basic authentication with username and password. - Authentication with additional authentication headers.
     * Structure is documented below.
     * 
     */
    public Output</* @Nullable */ FulfillmentGenericWebService> getGenericWebService() {
        return this.genericWebService;
    }
    /**
     * The unique identifier of the fulfillment. Format: projects/<Project ID>/agent/fulfillment - projects/<Project
     * ID>/locations/<Location ID>/agent/fulfillment
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The unique identifier of the fulfillment. Format: projects/<Project ID>/agent/fulfillment - projects/<Project
     * ID>/locations/<Location ID>/agent/fulfillment
     * 
     */
    public Output<String> getName() {
        return this.name;
    }
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Export(name="project", type=String.class, parameters={})
    private Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Output<String> getProject() {
        return this.project;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Fulfillment(String name) {
        this(name, FulfillmentArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Fulfillment(String name, FulfillmentArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Fulfillment(String name, FulfillmentArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("gcp:diagflow/fulfillment:Fulfillment", name, args == null ? FulfillmentArgs.Empty : args, makeResourceOptions(options, Output.empty()));
    }

    private Fulfillment(String name, Output<String> id, @Nullable FulfillmentState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("gcp:diagflow/fulfillment:Fulfillment", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Fulfillment get(String name, Output<String> id, @Nullable FulfillmentState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new Fulfillment(name, id, state, options);
    }
}
