// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.diagflow;

import io.pulumi.core.Input;
import io.pulumi.core.Output;
import io.pulumi.core.internal.annotations.OutputExport;
import io.pulumi.core.internal.annotations.ResourceType;
import io.pulumi.gcp.Utilities;
import io.pulumi.gcp.diagflow.FulfillmentArgs;
import io.pulumi.gcp.diagflow.inputs.FulfillmentState;
import io.pulumi.gcp.diagflow.outputs.FulfillmentFeature;
import io.pulumi.gcp.diagflow.outputs.FulfillmentGenericWebService;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

@ResourceType(type="gcp:diagflow/fulfillment:Fulfillment")
public class Fulfillment extends io.pulumi.resources.CustomResource {
    @OutputExport(name="displayName", type=String.class, parameters={})
    private Output<String> displayName;

    public Output<String> getDisplayName() {
        return this.displayName;
    }
    @OutputExport(name="enabled", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> enabled;

    public Output</* @Nullable */ Boolean> getEnabled() {
        return this.enabled;
    }
    @OutputExport(name="features", type=List.class, parameters={FulfillmentFeature.class})
    private Output</* @Nullable */ List<FulfillmentFeature>> features;

    public Output</* @Nullable */ List<FulfillmentFeature>> getFeatures() {
        return this.features;
    }
    @OutputExport(name="genericWebService", type=FulfillmentGenericWebService.class, parameters={})
    private Output</* @Nullable */ FulfillmentGenericWebService> genericWebService;

    public Output</* @Nullable */ FulfillmentGenericWebService> getGenericWebService() {
        return this.genericWebService;
    }
    @OutputExport(name="name", type=String.class, parameters={})
    private Output<String> name;

    public Output<String> getName() {
        return this.name;
    }
    @OutputExport(name="project", type=String.class, parameters={})
    private Output<String> project;

    public Output<String> getProject() {
        return this.project;
    }

    public Fulfillment(String name, FulfillmentArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("gcp:diagflow/fulfillment:Fulfillment", name, args == null ? FulfillmentArgs.Empty : args, makeResourceOptions(options, Input.empty()));
    }

    private Fulfillment(String name, Input<String> id, @Nullable FulfillmentState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("gcp:diagflow/fulfillment:Fulfillment", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Input<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .setVersion(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    public static Fulfillment get(String name, Input<String> id, @Nullable FulfillmentState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new Fulfillment(name, id, state, options);
    }
}
