// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.diagflow.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import io.pulumi.gcp.diagflow.outputs.CxPageEventHandlerTriggerFulfillment;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class CxPageEventHandler {
    private final @Nullable String event;
    private final @Nullable String name;
    private final @Nullable String targetFlow;
    private final @Nullable String targetPage;
    private final @Nullable CxPageEventHandlerTriggerFulfillment triggerFulfillment;

    @OutputCustomType.Constructor({"event","name","targetFlow","targetPage","triggerFulfillment"})
    private CxPageEventHandler(
        @Nullable String event,
        @Nullable String name,
        @Nullable String targetFlow,
        @Nullable String targetPage,
        @Nullable CxPageEventHandlerTriggerFulfillment triggerFulfillment) {
        this.event = event;
        this.name = name;
        this.targetFlow = targetFlow;
        this.targetPage = targetPage;
        this.triggerFulfillment = triggerFulfillment;
    }

    public Optional<String> getEvent() {
        return Optional.ofNullable(this.event);
    }
    public Optional<String> getName() {
        return Optional.ofNullable(this.name);
    }
    public Optional<String> getTargetFlow() {
        return Optional.ofNullable(this.targetFlow);
    }
    public Optional<String> getTargetPage() {
        return Optional.ofNullable(this.targetPage);
    }
    public Optional<CxPageEventHandlerTriggerFulfillment> getTriggerFulfillment() {
        return Optional.ofNullable(this.triggerFulfillment);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CxPageEventHandler defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String event;
        private @Nullable String name;
        private @Nullable String targetFlow;
        private @Nullable String targetPage;
        private @Nullable CxPageEventHandlerTriggerFulfillment triggerFulfillment;

        public Builder() {
    	      // Empty
        }

        public Builder(CxPageEventHandler defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.event = defaults.event;
    	      this.name = defaults.name;
    	      this.targetFlow = defaults.targetFlow;
    	      this.targetPage = defaults.targetPage;
    	      this.triggerFulfillment = defaults.triggerFulfillment;
        }

        public Builder setEvent(@Nullable String event) {
            this.event = event;
            return this;
        }

        public Builder setName(@Nullable String name) {
            this.name = name;
            return this;
        }

        public Builder setTargetFlow(@Nullable String targetFlow) {
            this.targetFlow = targetFlow;
            return this;
        }

        public Builder setTargetPage(@Nullable String targetPage) {
            this.targetPage = targetPage;
            return this;
        }

        public Builder setTriggerFulfillment(@Nullable CxPageEventHandlerTriggerFulfillment triggerFulfillment) {
            this.triggerFulfillment = triggerFulfillment;
            return this;
        }

        public CxPageEventHandler build() {
            return new CxPageEventHandler(event, name, targetFlow, targetPage, triggerFulfillment);
        }
    }
}
