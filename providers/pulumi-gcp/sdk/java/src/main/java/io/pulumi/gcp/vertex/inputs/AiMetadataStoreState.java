// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.vertex.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import io.pulumi.gcp.vertex.inputs.AiMetadataStoreEncryptionSpecGetArgs;
import io.pulumi.gcp.vertex.inputs.AiMetadataStoreStateGetArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class AiMetadataStoreState extends io.pulumi.resources.ResourceArgs {

    public static final AiMetadataStoreState Empty = new AiMetadataStoreState();

    /**
     * The timestamp of when the MetadataStore was created in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to
     * nine fractional digits.
     * 
     */
    @Import(name="createTime")
      private final @Nullable Output<String> createTime;

    public Output<String> getCreateTime() {
        return this.createTime == null ? Codegen.empty() : this.createTime;
    }

    /**
     * Description of the MetadataStore.
     * 
     */
    @Import(name="description")
      private final @Nullable Output<String> description;

    public Output<String> getDescription() {
        return this.description == null ? Codegen.empty() : this.description;
    }

    /**
     * Customer-managed encryption key spec for a MetadataStore. If set, this MetadataStore and all sub-resources of this MetadataStore will be secured by this key.
     * Structure is documented below.
     * 
     */
    @Import(name="encryptionSpec")
      private final @Nullable Output<AiMetadataStoreEncryptionSpecGetArgs> encryptionSpec;

    public Output<AiMetadataStoreEncryptionSpecGetArgs> getEncryptionSpec() {
        return this.encryptionSpec == null ? Codegen.empty() : this.encryptionSpec;
    }

    /**
     * The name of the MetadataStore. This value may be up to 60 characters, and valid characters are [a-z0-9_]. The first character cannot be a number.
     * 
     */
    @Import(name="name")
      private final @Nullable Output<String> name;

    public Output<String> getName() {
        return this.name == null ? Codegen.empty() : this.name;
    }

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Import(name="project")
      private final @Nullable Output<String> project;

    public Output<String> getProject() {
        return this.project == null ? Codegen.empty() : this.project;
    }

    /**
     * The region of the Metadata Store. eg us-central1
     * 
     */
    @Import(name="region")
      private final @Nullable Output<String> region;

    public Output<String> getRegion() {
        return this.region == null ? Codegen.empty() : this.region;
    }

    /**
     * State information of the MetadataStore.
     * 
     */
    @Import(name="states")
      private final @Nullable Output<List<AiMetadataStoreStateGetArgs>> states;

    public Output<List<AiMetadataStoreStateGetArgs>> getStates() {
        return this.states == null ? Codegen.empty() : this.states;
    }

    /**
     * The timestamp of when the MetadataStore was last updated in RFC3339 UTC "Zulu" format, with nanosecond resolution and up
     * to nine fractional digits.
     * 
     */
    @Import(name="updateTime")
      private final @Nullable Output<String> updateTime;

    public Output<String> getUpdateTime() {
        return this.updateTime == null ? Codegen.empty() : this.updateTime;
    }

    public AiMetadataStoreState(
        @Nullable Output<String> createTime,
        @Nullable Output<String> description,
        @Nullable Output<AiMetadataStoreEncryptionSpecGetArgs> encryptionSpec,
        @Nullable Output<String> name,
        @Nullable Output<String> project,
        @Nullable Output<String> region,
        @Nullable Output<List<AiMetadataStoreStateGetArgs>> states,
        @Nullable Output<String> updateTime) {
        this.createTime = createTime;
        this.description = description;
        this.encryptionSpec = encryptionSpec;
        this.name = name;
        this.project = project;
        this.region = region;
        this.states = states;
        this.updateTime = updateTime;
    }

    private AiMetadataStoreState() {
        this.createTime = Codegen.empty();
        this.description = Codegen.empty();
        this.encryptionSpec = Codegen.empty();
        this.name = Codegen.empty();
        this.project = Codegen.empty();
        this.region = Codegen.empty();
        this.states = Codegen.empty();
        this.updateTime = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AiMetadataStoreState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> createTime;
        private @Nullable Output<String> description;
        private @Nullable Output<AiMetadataStoreEncryptionSpecGetArgs> encryptionSpec;
        private @Nullable Output<String> name;
        private @Nullable Output<String> project;
        private @Nullable Output<String> region;
        private @Nullable Output<List<AiMetadataStoreStateGetArgs>> states;
        private @Nullable Output<String> updateTime;

        public Builder() {
    	      // Empty
        }

        public Builder(AiMetadataStoreState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.createTime = defaults.createTime;
    	      this.description = defaults.description;
    	      this.encryptionSpec = defaults.encryptionSpec;
    	      this.name = defaults.name;
    	      this.project = defaults.project;
    	      this.region = defaults.region;
    	      this.states = defaults.states;
    	      this.updateTime = defaults.updateTime;
        }

        public Builder createTime(@Nullable Output<String> createTime) {
            this.createTime = createTime;
            return this;
        }
        public Builder createTime(@Nullable String createTime) {
            this.createTime = Codegen.ofNullable(createTime);
            return this;
        }
        public Builder description(@Nullable Output<String> description) {
            this.description = description;
            return this;
        }
        public Builder description(@Nullable String description) {
            this.description = Codegen.ofNullable(description);
            return this;
        }
        public Builder encryptionSpec(@Nullable Output<AiMetadataStoreEncryptionSpecGetArgs> encryptionSpec) {
            this.encryptionSpec = encryptionSpec;
            return this;
        }
        public Builder encryptionSpec(@Nullable AiMetadataStoreEncryptionSpecGetArgs encryptionSpec) {
            this.encryptionSpec = Codegen.ofNullable(encryptionSpec);
            return this;
        }
        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }
        public Builder name(@Nullable String name) {
            this.name = Codegen.ofNullable(name);
            return this;
        }
        public Builder project(@Nullable Output<String> project) {
            this.project = project;
            return this;
        }
        public Builder project(@Nullable String project) {
            this.project = Codegen.ofNullable(project);
            return this;
        }
        public Builder region(@Nullable Output<String> region) {
            this.region = region;
            return this;
        }
        public Builder region(@Nullable String region) {
            this.region = Codegen.ofNullable(region);
            return this;
        }
        public Builder states(@Nullable Output<List<AiMetadataStoreStateGetArgs>> states) {
            this.states = states;
            return this;
        }
        public Builder states(@Nullable List<AiMetadataStoreStateGetArgs> states) {
            this.states = Codegen.ofNullable(states);
            return this;
        }
        public Builder states(AiMetadataStoreStateGetArgs... states) {
            return states(List.of(states));
        }
        public Builder updateTime(@Nullable Output<String> updateTime) {
            this.updateTime = updateTime;
            return this;
        }
        public Builder updateTime(@Nullable String updateTime) {
            this.updateTime = Codegen.ofNullable(updateTime);
            return this;
        }        public AiMetadataStoreState build() {
            return new AiMetadataStoreState(createTime, description, encryptionSpec, name, project, region, states, updateTime);
        }
    }
}
