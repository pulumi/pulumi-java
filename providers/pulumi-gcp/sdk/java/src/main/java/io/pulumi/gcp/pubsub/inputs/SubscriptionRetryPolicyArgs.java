// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.pubsub.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class SubscriptionRetryPolicyArgs extends io.pulumi.resources.ResourceArgs {

    public static final SubscriptionRetryPolicyArgs Empty = new SubscriptionRetryPolicyArgs();

    /**
     * The maximum delay between consecutive deliveries of a given message. Value should be between 0 and 600 seconds. Defaults to 600 seconds.
     * A duration in seconds with up to nine fractional digits, terminated by 's'. Example: "3.5s".
     * 
     */
    @Import(name="maximumBackoff")
      private final @Nullable Output<String> maximumBackoff;

    public Output<String> getMaximumBackoff() {
        return this.maximumBackoff == null ? Output.empty() : this.maximumBackoff;
    }

    /**
     * The minimum delay between consecutive deliveries of a given message. Value should be between 0 and 600 seconds. Defaults to 10 seconds.
     * A duration in seconds with up to nine fractional digits, terminated by 's'. Example: "3.5s".
     * 
     */
    @Import(name="minimumBackoff")
      private final @Nullable Output<String> minimumBackoff;

    public Output<String> getMinimumBackoff() {
        return this.minimumBackoff == null ? Output.empty() : this.minimumBackoff;
    }

    public SubscriptionRetryPolicyArgs(
        @Nullable Output<String> maximumBackoff,
        @Nullable Output<String> minimumBackoff) {
        this.maximumBackoff = maximumBackoff;
        this.minimumBackoff = minimumBackoff;
    }

    private SubscriptionRetryPolicyArgs() {
        this.maximumBackoff = Output.empty();
        this.minimumBackoff = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SubscriptionRetryPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> maximumBackoff;
        private @Nullable Output<String> minimumBackoff;

        public Builder() {
    	      // Empty
        }

        public Builder(SubscriptionRetryPolicyArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.maximumBackoff = defaults.maximumBackoff;
    	      this.minimumBackoff = defaults.minimumBackoff;
        }

        public Builder maximumBackoff(@Nullable Output<String> maximumBackoff) {
            this.maximumBackoff = maximumBackoff;
            return this;
        }

        public Builder maximumBackoff(@Nullable String maximumBackoff) {
            this.maximumBackoff = Output.ofNullable(maximumBackoff);
            return this;
        }

        public Builder minimumBackoff(@Nullable Output<String> minimumBackoff) {
            this.minimumBackoff = minimumBackoff;
            return this;
        }

        public Builder minimumBackoff(@Nullable String minimumBackoff) {
            this.minimumBackoff = Output.ofNullable(minimumBackoff);
            return this;
        }
        public SubscriptionRetryPolicyArgs build() {
            return new SubscriptionRetryPolicyArgs(maximumBackoff, minimumBackoff);
        }
    }
}
