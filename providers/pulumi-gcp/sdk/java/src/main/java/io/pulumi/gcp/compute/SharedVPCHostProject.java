// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.compute;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Export;
import io.pulumi.core.annotations.ResourceType;
import io.pulumi.gcp.Utilities;
import io.pulumi.gcp.compute.SharedVPCHostProjectArgs;
import io.pulumi.gcp.compute.inputs.SharedVPCHostProjectState;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * Enables the Google Compute Engine
 * [Shared VPC](https://cloud.google.com/compute/docs/shared-vpc)
 * feature for a project, assigning it as a Shared VPC host project.
 * 
 * For more information, see,
 * [the Project API documentation](https://cloud.google.com/compute/docs/reference/latest/projects),
 * where the Shared VPC feature is referred to by its former name "XPN".
 * 
 * {{% examples %}}
 * ## Example Usage
 * {{% example %}}
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 * 
 * // A host project provides network resources to associated service projects.
 * const host = new gcp.compute.SharedVPCHostProject("host", {project: "host-project-id"});
 * // A service project gains access to network resources provided by its
 * // associated host project.
 * const service1 = new gcp.compute.SharedVPCServiceProject("service1", {
 *     hostProject: host.project,
 *     serviceProject: "service-project-id-1",
 * });
 * const service2 = new gcp.compute.SharedVPCServiceProject("service2", {
 *     hostProject: host.project,
 *     serviceProject: "service-project-id-2",
 * });
 * ```
 * ```python
 * import pulumi
 * import pulumi_gcp as gcp
 * 
 * # A host project provides network resources to associated service projects.
 * host = gcp.compute.SharedVPCHostProject("host", project="host-project-id")
 * # A service project gains access to network resources provided by its
 * # associated host project.
 * service1 = gcp.compute.SharedVPCServiceProject("service1",
 *     host_project=host.project,
 *     service_project="service-project-id-1")
 * service2 = gcp.compute.SharedVPCServiceProject("service2",
 *     host_project=host.project,
 *     service_project="service-project-id-2")
 * ```
 * ```csharp
 * using Pulumi;
 * using Gcp = Pulumi.Gcp;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         // A host project provides network resources to associated service projects.
 *         var host = new Gcp.Compute.SharedVPCHostProject("host", new Gcp.Compute.SharedVPCHostProjectArgs
 *         {
 *             Project = "host-project-id",
 *         });
 *         // A service project gains access to network resources provided by its
 *         // associated host project.
 *         var service1 = new Gcp.Compute.SharedVPCServiceProject("service1", new Gcp.Compute.SharedVPCServiceProjectArgs
 *         {
 *             HostProject = host.Project,
 *             ServiceProject = "service-project-id-1",
 *         });
 *         var service2 = new Gcp.Compute.SharedVPCServiceProject("service2", new Gcp.Compute.SharedVPCServiceProjectArgs
 *         {
 *             HostProject = host.Project,
 *             ServiceProject = "service-project-id-2",
 *         });
 *     }
 * 
 * }
 * ```
 * ```go
 * package main
 * 
 * import (
 * 	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/compute"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		host, err := compute.NewSharedVPCHostProject(ctx, "host", &compute.SharedVPCHostProjectArgs{
 * 			Project: pulumi.String("host-project-id"),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		_, err = compute.NewSharedVPCServiceProject(ctx, "service1", &compute.SharedVPCServiceProjectArgs{
 * 			HostProject:    host.Project,
 * 			ServiceProject: pulumi.String("service-project-id-1"),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		_, err = compute.NewSharedVPCServiceProject(ctx, "service2", &compute.SharedVPCServiceProjectArgs{
 * 			HostProject:    host.Project,
 * 			ServiceProject: pulumi.String("service-project-id-2"),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * ```
 * {{% /example %}}
 * {{% /examples %}}
 * 
 * ## Import
 * 
 * Google Compute Engine Shared VPC host project feature can be imported using the `project`, e.g.
 * 
 * ```sh
 *  $ pulumi import gcp:compute/sharedVPCHostProject:SharedVPCHostProject host host-project-id
 * ```
 * 
 *  
 */
@ResourceType(type="gcp:compute/sharedVPCHostProject:SharedVPCHostProject")
public class SharedVPCHostProject extends io.pulumi.resources.CustomResource {
    /**
     * The ID of the project that will serve as a Shared VPC host project
     * 
     */
    @Export(name="project", type=String.class, parameters={})
    private Output<String> project;

    /**
     * @return The ID of the project that will serve as a Shared VPC host project
     * 
     */
    public Output<String> getProject() {
        return this.project;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public SharedVPCHostProject(String name) {
        this(name, SharedVPCHostProjectArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public SharedVPCHostProject(String name, SharedVPCHostProjectArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public SharedVPCHostProject(String name, SharedVPCHostProjectArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("gcp:compute/sharedVPCHostProject:SharedVPCHostProject", name, args == null ? SharedVPCHostProjectArgs.Empty : args, makeResourceOptions(options, Output.empty()));
    }

    private SharedVPCHostProject(String name, Output<String> id, @Nullable SharedVPCHostProjectState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("gcp:compute/sharedVPCHostProject:SharedVPCHostProject", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static SharedVPCHostProject get(String name, Output<String> id, @Nullable SharedVPCHostProjectState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new SharedVPCHostProject(name, id, state, options);
    }
}
