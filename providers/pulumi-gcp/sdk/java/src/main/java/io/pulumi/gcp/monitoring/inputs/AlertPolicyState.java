// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.monitoring.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import io.pulumi.gcp.monitoring.inputs.AlertPolicyAlertStrategyGetArgs;
import io.pulumi.gcp.monitoring.inputs.AlertPolicyConditionGetArgs;
import io.pulumi.gcp.monitoring.inputs.AlertPolicyCreationRecordGetArgs;
import io.pulumi.gcp.monitoring.inputs.AlertPolicyDocumentationGetArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class AlertPolicyState extends io.pulumi.resources.ResourceArgs {

    public static final AlertPolicyState Empty = new AlertPolicyState();

    @InputImport(name="alertStrategy")
    private final @Nullable Input<AlertPolicyAlertStrategyGetArgs> alertStrategy;

    public Input<AlertPolicyAlertStrategyGetArgs> getAlertStrategy() {
        return this.alertStrategy == null ? Input.empty() : this.alertStrategy;
    }

    @InputImport(name="combiner")
    private final @Nullable Input<String> combiner;

    public Input<String> getCombiner() {
        return this.combiner == null ? Input.empty() : this.combiner;
    }

    @InputImport(name="conditions")
    private final @Nullable Input<List<AlertPolicyConditionGetArgs>> conditions;

    public Input<List<AlertPolicyConditionGetArgs>> getConditions() {
        return this.conditions == null ? Input.empty() : this.conditions;
    }

    @InputImport(name="creationRecords")
    private final @Nullable Input<List<AlertPolicyCreationRecordGetArgs>> creationRecords;

    public Input<List<AlertPolicyCreationRecordGetArgs>> getCreationRecords() {
        return this.creationRecords == null ? Input.empty() : this.creationRecords;
    }

    @InputImport(name="displayName")
    private final @Nullable Input<String> displayName;

    public Input<String> getDisplayName() {
        return this.displayName == null ? Input.empty() : this.displayName;
    }

    @InputImport(name="documentation")
    private final @Nullable Input<AlertPolicyDocumentationGetArgs> documentation;

    public Input<AlertPolicyDocumentationGetArgs> getDocumentation() {
        return this.documentation == null ? Input.empty() : this.documentation;
    }

    @InputImport(name="enabled")
    private final @Nullable Input<Boolean> enabled;

    public Input<Boolean> getEnabled() {
        return this.enabled == null ? Input.empty() : this.enabled;
    }

    @InputImport(name="name")
    private final @Nullable Input<String> name;

    public Input<String> getName() {
        return this.name == null ? Input.empty() : this.name;
    }

    @InputImport(name="notificationChannels")
    private final @Nullable Input<List<String>> notificationChannels;

    public Input<List<String>> getNotificationChannels() {
        return this.notificationChannels == null ? Input.empty() : this.notificationChannels;
    }

    @InputImport(name="project")
    private final @Nullable Input<String> project;

    public Input<String> getProject() {
        return this.project == null ? Input.empty() : this.project;
    }

    @InputImport(name="userLabels")
    private final @Nullable Input<Map<String,String>> userLabels;

    public Input<Map<String,String>> getUserLabels() {
        return this.userLabels == null ? Input.empty() : this.userLabels;
    }

    public AlertPolicyState(
        @Nullable Input<AlertPolicyAlertStrategyGetArgs> alertStrategy,
        @Nullable Input<String> combiner,
        @Nullable Input<List<AlertPolicyConditionGetArgs>> conditions,
        @Nullable Input<List<AlertPolicyCreationRecordGetArgs>> creationRecords,
        @Nullable Input<String> displayName,
        @Nullable Input<AlertPolicyDocumentationGetArgs> documentation,
        @Nullable Input<Boolean> enabled,
        @Nullable Input<String> name,
        @Nullable Input<List<String>> notificationChannels,
        @Nullable Input<String> project,
        @Nullable Input<Map<String,String>> userLabels) {
        this.alertStrategy = alertStrategy;
        this.combiner = combiner;
        this.conditions = conditions;
        this.creationRecords = creationRecords;
        this.displayName = displayName;
        this.documentation = documentation;
        this.enabled = enabled;
        this.name = name;
        this.notificationChannels = notificationChannels;
        this.project = project;
        this.userLabels = userLabels;
    }

    private AlertPolicyState() {
        this.alertStrategy = Input.empty();
        this.combiner = Input.empty();
        this.conditions = Input.empty();
        this.creationRecords = Input.empty();
        this.displayName = Input.empty();
        this.documentation = Input.empty();
        this.enabled = Input.empty();
        this.name = Input.empty();
        this.notificationChannels = Input.empty();
        this.project = Input.empty();
        this.userLabels = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AlertPolicyState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<AlertPolicyAlertStrategyGetArgs> alertStrategy;
        private @Nullable Input<String> combiner;
        private @Nullable Input<List<AlertPolicyConditionGetArgs>> conditions;
        private @Nullable Input<List<AlertPolicyCreationRecordGetArgs>> creationRecords;
        private @Nullable Input<String> displayName;
        private @Nullable Input<AlertPolicyDocumentationGetArgs> documentation;
        private @Nullable Input<Boolean> enabled;
        private @Nullable Input<String> name;
        private @Nullable Input<List<String>> notificationChannels;
        private @Nullable Input<String> project;
        private @Nullable Input<Map<String,String>> userLabels;

        public Builder() {
    	      // Empty
        }

        public Builder(AlertPolicyState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.alertStrategy = defaults.alertStrategy;
    	      this.combiner = defaults.combiner;
    	      this.conditions = defaults.conditions;
    	      this.creationRecords = defaults.creationRecords;
    	      this.displayName = defaults.displayName;
    	      this.documentation = defaults.documentation;
    	      this.enabled = defaults.enabled;
    	      this.name = defaults.name;
    	      this.notificationChannels = defaults.notificationChannels;
    	      this.project = defaults.project;
    	      this.userLabels = defaults.userLabels;
        }

        public Builder setAlertStrategy(@Nullable Input<AlertPolicyAlertStrategyGetArgs> alertStrategy) {
            this.alertStrategy = alertStrategy;
            return this;
        }

        public Builder setAlertStrategy(@Nullable AlertPolicyAlertStrategyGetArgs alertStrategy) {
            this.alertStrategy = Input.ofNullable(alertStrategy);
            return this;
        }

        public Builder setCombiner(@Nullable Input<String> combiner) {
            this.combiner = combiner;
            return this;
        }

        public Builder setCombiner(@Nullable String combiner) {
            this.combiner = Input.ofNullable(combiner);
            return this;
        }

        public Builder setConditions(@Nullable Input<List<AlertPolicyConditionGetArgs>> conditions) {
            this.conditions = conditions;
            return this;
        }

        public Builder setConditions(@Nullable List<AlertPolicyConditionGetArgs> conditions) {
            this.conditions = Input.ofNullable(conditions);
            return this;
        }

        public Builder setCreationRecords(@Nullable Input<List<AlertPolicyCreationRecordGetArgs>> creationRecords) {
            this.creationRecords = creationRecords;
            return this;
        }

        public Builder setCreationRecords(@Nullable List<AlertPolicyCreationRecordGetArgs> creationRecords) {
            this.creationRecords = Input.ofNullable(creationRecords);
            return this;
        }

        public Builder setDisplayName(@Nullable Input<String> displayName) {
            this.displayName = displayName;
            return this;
        }

        public Builder setDisplayName(@Nullable String displayName) {
            this.displayName = Input.ofNullable(displayName);
            return this;
        }

        public Builder setDocumentation(@Nullable Input<AlertPolicyDocumentationGetArgs> documentation) {
            this.documentation = documentation;
            return this;
        }

        public Builder setDocumentation(@Nullable AlertPolicyDocumentationGetArgs documentation) {
            this.documentation = Input.ofNullable(documentation);
            return this;
        }

        public Builder setEnabled(@Nullable Input<Boolean> enabled) {
            this.enabled = enabled;
            return this;
        }

        public Builder setEnabled(@Nullable Boolean enabled) {
            this.enabled = Input.ofNullable(enabled);
            return this;
        }

        public Builder setName(@Nullable Input<String> name) {
            this.name = name;
            return this;
        }

        public Builder setName(@Nullable String name) {
            this.name = Input.ofNullable(name);
            return this;
        }

        public Builder setNotificationChannels(@Nullable Input<List<String>> notificationChannels) {
            this.notificationChannels = notificationChannels;
            return this;
        }

        public Builder setNotificationChannels(@Nullable List<String> notificationChannels) {
            this.notificationChannels = Input.ofNullable(notificationChannels);
            return this;
        }

        public Builder setProject(@Nullable Input<String> project) {
            this.project = project;
            return this;
        }

        public Builder setProject(@Nullable String project) {
            this.project = Input.ofNullable(project);
            return this;
        }

        public Builder setUserLabels(@Nullable Input<Map<String,String>> userLabels) {
            this.userLabels = userLabels;
            return this;
        }

        public Builder setUserLabels(@Nullable Map<String,String> userLabels) {
            this.userLabels = Input.ofNullable(userLabels);
            return this;
        }

        public AlertPolicyState build() {
            return new AlertPolicyState(alertStrategy, combiner, conditions, creationRecords, displayName, documentation, enabled, name, notificationChannels, project, userLabels);
        }
    }
}
