// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.accesscontextmanager.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class AccessLevelsAccessLevelBasicConditionDevicePolicyOsConstraint {
    private final @Nullable String minimumVersion;
    private final String osType;

    @OutputCustomType.Constructor({"minimumVersion","osType"})
    private AccessLevelsAccessLevelBasicConditionDevicePolicyOsConstraint(
        @Nullable String minimumVersion,
        String osType) {
        this.minimumVersion = minimumVersion;
        this.osType = Objects.requireNonNull(osType);
    }

    public Optional<String> getMinimumVersion() {
        return Optional.ofNullable(this.minimumVersion);
    }
    public String getOsType() {
        return this.osType;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AccessLevelsAccessLevelBasicConditionDevicePolicyOsConstraint defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String minimumVersion;
        private String osType;

        public Builder() {
    	      // Empty
        }

        public Builder(AccessLevelsAccessLevelBasicConditionDevicePolicyOsConstraint defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.minimumVersion = defaults.minimumVersion;
    	      this.osType = defaults.osType;
        }

        public Builder setMinimumVersion(@Nullable String minimumVersion) {
            this.minimumVersion = minimumVersion;
            return this;
        }

        public Builder setOsType(String osType) {
            this.osType = Objects.requireNonNull(osType);
            return this;
        }

        public AccessLevelsAccessLevelBasicConditionDevicePolicyOsConstraint build() {
            return new AccessLevelsAccessLevelBasicConditionDevicePolicyOsConstraint(minimumVersion, osType);
        }
    }
}
