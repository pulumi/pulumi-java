// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.networkservices.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.gcp.networkservices.inputs.EdgeCacheServiceRoutingPathMatcherRouteRuleHeaderActionRequestHeaderToAddArgs;
import io.pulumi.gcp.networkservices.inputs.EdgeCacheServiceRoutingPathMatcherRouteRuleHeaderActionRequestHeaderToRemoveArgs;
import io.pulumi.gcp.networkservices.inputs.EdgeCacheServiceRoutingPathMatcherRouteRuleHeaderActionResponseHeaderToAddArgs;
import io.pulumi.gcp.networkservices.inputs.EdgeCacheServiceRoutingPathMatcherRouteRuleHeaderActionResponseHeaderToRemoveArgs;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class EdgeCacheServiceRoutingPathMatcherRouteRuleHeaderActionArgs extends io.pulumi.resources.ResourceArgs {

    public static final EdgeCacheServiceRoutingPathMatcherRouteRuleHeaderActionArgs Empty = new EdgeCacheServiceRoutingPathMatcherRouteRuleHeaderActionArgs();

    /**
     * Describes a header to add.
     * Structure is documented below.
     * 
     */
    @Import(name="requestHeaderToAdds")
      private final @Nullable Output<List<EdgeCacheServiceRoutingPathMatcherRouteRuleHeaderActionRequestHeaderToAddArgs>> requestHeaderToAdds;

    public Output<List<EdgeCacheServiceRoutingPathMatcherRouteRuleHeaderActionRequestHeaderToAddArgs>> getRequestHeaderToAdds() {
        return this.requestHeaderToAdds == null ? Output.empty() : this.requestHeaderToAdds;
    }

    /**
     * A list of header names for headers that need to be removed from the request prior to forwarding the request to the origin.
     * Structure is documented below.
     * 
     */
    @Import(name="requestHeaderToRemoves")
      private final @Nullable Output<List<EdgeCacheServiceRoutingPathMatcherRouteRuleHeaderActionRequestHeaderToRemoveArgs>> requestHeaderToRemoves;

    public Output<List<EdgeCacheServiceRoutingPathMatcherRouteRuleHeaderActionRequestHeaderToRemoveArgs>> getRequestHeaderToRemoves() {
        return this.requestHeaderToRemoves == null ? Output.empty() : this.requestHeaderToRemoves;
    }

    /**
     * Headers to add to the response prior to sending it back to the client.
     * Response headers are only sent to the client, and do not have an effect on the cache serving the response.
     * Structure is documented below.
     * 
     */
    @Import(name="responseHeaderToAdds")
      private final @Nullable Output<List<EdgeCacheServiceRoutingPathMatcherRouteRuleHeaderActionResponseHeaderToAddArgs>> responseHeaderToAdds;

    public Output<List<EdgeCacheServiceRoutingPathMatcherRouteRuleHeaderActionResponseHeaderToAddArgs>> getResponseHeaderToAdds() {
        return this.responseHeaderToAdds == null ? Output.empty() : this.responseHeaderToAdds;
    }

    /**
     * A list of header names for headers that need to be removed from the request prior to forwarding the request to the origin.
     * Structure is documented below.
     * 
     */
    @Import(name="responseHeaderToRemoves")
      private final @Nullable Output<List<EdgeCacheServiceRoutingPathMatcherRouteRuleHeaderActionResponseHeaderToRemoveArgs>> responseHeaderToRemoves;

    public Output<List<EdgeCacheServiceRoutingPathMatcherRouteRuleHeaderActionResponseHeaderToRemoveArgs>> getResponseHeaderToRemoves() {
        return this.responseHeaderToRemoves == null ? Output.empty() : this.responseHeaderToRemoves;
    }

    public EdgeCacheServiceRoutingPathMatcherRouteRuleHeaderActionArgs(
        @Nullable Output<List<EdgeCacheServiceRoutingPathMatcherRouteRuleHeaderActionRequestHeaderToAddArgs>> requestHeaderToAdds,
        @Nullable Output<List<EdgeCacheServiceRoutingPathMatcherRouteRuleHeaderActionRequestHeaderToRemoveArgs>> requestHeaderToRemoves,
        @Nullable Output<List<EdgeCacheServiceRoutingPathMatcherRouteRuleHeaderActionResponseHeaderToAddArgs>> responseHeaderToAdds,
        @Nullable Output<List<EdgeCacheServiceRoutingPathMatcherRouteRuleHeaderActionResponseHeaderToRemoveArgs>> responseHeaderToRemoves) {
        this.requestHeaderToAdds = requestHeaderToAdds;
        this.requestHeaderToRemoves = requestHeaderToRemoves;
        this.responseHeaderToAdds = responseHeaderToAdds;
        this.responseHeaderToRemoves = responseHeaderToRemoves;
    }

    private EdgeCacheServiceRoutingPathMatcherRouteRuleHeaderActionArgs() {
        this.requestHeaderToAdds = Output.empty();
        this.requestHeaderToRemoves = Output.empty();
        this.responseHeaderToAdds = Output.empty();
        this.responseHeaderToRemoves = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(EdgeCacheServiceRoutingPathMatcherRouteRuleHeaderActionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<List<EdgeCacheServiceRoutingPathMatcherRouteRuleHeaderActionRequestHeaderToAddArgs>> requestHeaderToAdds;
        private @Nullable Output<List<EdgeCacheServiceRoutingPathMatcherRouteRuleHeaderActionRequestHeaderToRemoveArgs>> requestHeaderToRemoves;
        private @Nullable Output<List<EdgeCacheServiceRoutingPathMatcherRouteRuleHeaderActionResponseHeaderToAddArgs>> responseHeaderToAdds;
        private @Nullable Output<List<EdgeCacheServiceRoutingPathMatcherRouteRuleHeaderActionResponseHeaderToRemoveArgs>> responseHeaderToRemoves;

        public Builder() {
    	      // Empty
        }

        public Builder(EdgeCacheServiceRoutingPathMatcherRouteRuleHeaderActionArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.requestHeaderToAdds = defaults.requestHeaderToAdds;
    	      this.requestHeaderToRemoves = defaults.requestHeaderToRemoves;
    	      this.responseHeaderToAdds = defaults.responseHeaderToAdds;
    	      this.responseHeaderToRemoves = defaults.responseHeaderToRemoves;
        }

        public Builder requestHeaderToAdds(@Nullable Output<List<EdgeCacheServiceRoutingPathMatcherRouteRuleHeaderActionRequestHeaderToAddArgs>> requestHeaderToAdds) {
            this.requestHeaderToAdds = requestHeaderToAdds;
            return this;
        }

        public Builder requestHeaderToAdds(@Nullable List<EdgeCacheServiceRoutingPathMatcherRouteRuleHeaderActionRequestHeaderToAddArgs> requestHeaderToAdds) {
            this.requestHeaderToAdds = Output.ofNullable(requestHeaderToAdds);
            return this;
        }

        public Builder requestHeaderToRemoves(@Nullable Output<List<EdgeCacheServiceRoutingPathMatcherRouteRuleHeaderActionRequestHeaderToRemoveArgs>> requestHeaderToRemoves) {
            this.requestHeaderToRemoves = requestHeaderToRemoves;
            return this;
        }

        public Builder requestHeaderToRemoves(@Nullable List<EdgeCacheServiceRoutingPathMatcherRouteRuleHeaderActionRequestHeaderToRemoveArgs> requestHeaderToRemoves) {
            this.requestHeaderToRemoves = Output.ofNullable(requestHeaderToRemoves);
            return this;
        }

        public Builder responseHeaderToAdds(@Nullable Output<List<EdgeCacheServiceRoutingPathMatcherRouteRuleHeaderActionResponseHeaderToAddArgs>> responseHeaderToAdds) {
            this.responseHeaderToAdds = responseHeaderToAdds;
            return this;
        }

        public Builder responseHeaderToAdds(@Nullable List<EdgeCacheServiceRoutingPathMatcherRouteRuleHeaderActionResponseHeaderToAddArgs> responseHeaderToAdds) {
            this.responseHeaderToAdds = Output.ofNullable(responseHeaderToAdds);
            return this;
        }

        public Builder responseHeaderToRemoves(@Nullable Output<List<EdgeCacheServiceRoutingPathMatcherRouteRuleHeaderActionResponseHeaderToRemoveArgs>> responseHeaderToRemoves) {
            this.responseHeaderToRemoves = responseHeaderToRemoves;
            return this;
        }

        public Builder responseHeaderToRemoves(@Nullable List<EdgeCacheServiceRoutingPathMatcherRouteRuleHeaderActionResponseHeaderToRemoveArgs> responseHeaderToRemoves) {
            this.responseHeaderToRemoves = Output.ofNullable(responseHeaderToRemoves);
            return this;
        }
        public EdgeCacheServiceRoutingPathMatcherRouteRuleHeaderActionArgs build() {
            return new EdgeCacheServiceRoutingPathMatcherRouteRuleHeaderActionArgs(requestHeaderToAdds, requestHeaderToRemoves, responseHeaderToAdds, responseHeaderToRemoves);
        }
    }
}
