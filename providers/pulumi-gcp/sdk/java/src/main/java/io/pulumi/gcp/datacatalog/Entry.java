// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.datacatalog;

import io.pulumi.core.Input;
import io.pulumi.core.Output;
import io.pulumi.core.internal.annotations.OutputExport;
import io.pulumi.core.internal.annotations.ResourceType;
import io.pulumi.gcp.Utilities;
import io.pulumi.gcp.datacatalog.EntryArgs;
import io.pulumi.gcp.datacatalog.inputs.EntryState;
import io.pulumi.gcp.datacatalog.outputs.EntryBigqueryDateShardedSpec;
import io.pulumi.gcp.datacatalog.outputs.EntryBigqueryTableSpec;
import io.pulumi.gcp.datacatalog.outputs.EntryGcsFilesetSpec;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

@ResourceType(type="gcp:datacatalog/entry:Entry")
public class Entry extends io.pulumi.resources.CustomResource {
    @OutputExport(name="bigqueryDateShardedSpecs", type=List.class, parameters={EntryBigqueryDateShardedSpec.class})
    private Output<List<EntryBigqueryDateShardedSpec>> bigqueryDateShardedSpecs;

    public Output<List<EntryBigqueryDateShardedSpec>> getBigqueryDateShardedSpecs() {
        return this.bigqueryDateShardedSpecs;
    }
    @OutputExport(name="bigqueryTableSpecs", type=List.class, parameters={EntryBigqueryTableSpec.class})
    private Output<List<EntryBigqueryTableSpec>> bigqueryTableSpecs;

    public Output<List<EntryBigqueryTableSpec>> getBigqueryTableSpecs() {
        return this.bigqueryTableSpecs;
    }
    @OutputExport(name="description", type=String.class, parameters={})
    private Output</* @Nullable */ String> description;

    public Output</* @Nullable */ String> getDescription() {
        return this.description;
    }
    @OutputExport(name="displayName", type=String.class, parameters={})
    private Output</* @Nullable */ String> displayName;

    public Output</* @Nullable */ String> getDisplayName() {
        return this.displayName;
    }
    @OutputExport(name="entryGroup", type=String.class, parameters={})
    private Output<String> entryGroup;

    public Output<String> getEntryGroup() {
        return this.entryGroup;
    }
    @OutputExport(name="entryId", type=String.class, parameters={})
    private Output<String> entryId;

    public Output<String> getEntryId() {
        return this.entryId;
    }
    @OutputExport(name="gcsFilesetSpec", type=EntryGcsFilesetSpec.class, parameters={})
    private Output</* @Nullable */ EntryGcsFilesetSpec> gcsFilesetSpec;

    public Output</* @Nullable */ EntryGcsFilesetSpec> getGcsFilesetSpec() {
        return this.gcsFilesetSpec;
    }
    @OutputExport(name="integratedSystem", type=String.class, parameters={})
    private Output<String> integratedSystem;

    public Output<String> getIntegratedSystem() {
        return this.integratedSystem;
    }
    @OutputExport(name="linkedResource", type=String.class, parameters={})
    private Output<String> linkedResource;

    public Output<String> getLinkedResource() {
        return this.linkedResource;
    }
    @OutputExport(name="name", type=String.class, parameters={})
    private Output<String> name;

    public Output<String> getName() {
        return this.name;
    }
    @OutputExport(name="schema", type=String.class, parameters={})
    private Output</* @Nullable */ String> schema;

    public Output</* @Nullable */ String> getSchema() {
        return this.schema;
    }
    @OutputExport(name="type", type=String.class, parameters={})
    private Output</* @Nullable */ String> type;

    public Output</* @Nullable */ String> getType() {
        return this.type;
    }
    @OutputExport(name="userSpecifiedSystem", type=String.class, parameters={})
    private Output</* @Nullable */ String> userSpecifiedSystem;

    public Output</* @Nullable */ String> getUserSpecifiedSystem() {
        return this.userSpecifiedSystem;
    }
    @OutputExport(name="userSpecifiedType", type=String.class, parameters={})
    private Output</* @Nullable */ String> userSpecifiedType;

    public Output</* @Nullable */ String> getUserSpecifiedType() {
        return this.userSpecifiedType;
    }

    public Entry(String name, EntryArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("gcp:datacatalog/entry:Entry", name, args == null ? EntryArgs.Empty : args, makeResourceOptions(options, Input.empty()));
    }

    private Entry(String name, Input<String> id, @Nullable EntryState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("gcp:datacatalog/entry:Entry", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Input<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .setVersion(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    public static Entry get(String name, Input<String> id, @Nullable EntryState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new Entry(name, id, state, options);
    }
}
