// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.identityplatform;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Export;
import io.pulumi.core.annotations.ResourceType;
import io.pulumi.gcp.Utilities;
import io.pulumi.gcp.identityplatform.InboundSamlConfigArgs;
import io.pulumi.gcp.identityplatform.inputs.InboundSamlConfigState;
import io.pulumi.gcp.identityplatform.outputs.InboundSamlConfigIdpConfig;
import io.pulumi.gcp.identityplatform.outputs.InboundSamlConfigSpConfig;
import java.lang.Boolean;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * Inbound SAML configuration for a Identity Toolkit project.
 * 
 * You must enable the
 * [Google Identity Platform](https://console.cloud.google.com/marketplace/details/google-cloud-platform/customer-identity) in
 * the marketplace prior to using this resource.
 * 
 * 
 * 
 * {{% examples %}}
 * ## Example Usage
 * {{% example %}}
 * ### Identity Platform Inbound Saml Config Basic
 * 
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 * import * from "fs";
 * 
 * const samlConfig = new gcp.identityplatform.InboundSamlConfig("samlConfig", {
 *     displayName: "Display Name",
 *     idpConfig: {
 *         idpEntityId: "tf-idp",
 *         signRequest: true,
 *         ssoUrl: "https://example.com",
 *         idpCertificates: [{
 *             x509Certificate: fs.readFileSync("test-fixtures/rsa_cert.pem"),
 *         }],
 *     },
 *     spConfig: {
 *         spEntityId: "tf-sp",
 *         callbackUri: "https://example.com",
 *     },
 * });
 * ```
 * ```python
 * import pulumi
 * import pulumi_gcp as gcp
 * 
 * saml_config = gcp.identityplatform.InboundSamlConfig("samlConfig",
 *     display_name="Display Name",
 *     idp_config=gcp.identityplatform.InboundSamlConfigIdpConfigArgs(
 *         idp_entity_id="tf-idp",
 *         sign_request=True,
 *         sso_url="https://example.com",
 *         idp_certificates=[gcp.identityplatform.InboundSamlConfigIdpConfigIdpCertificateArgs(
 *             x509_certificate=(lambda path: open(path).read())("test-fixtures/rsa_cert.pem"),
 *         )],
 *     ),
 *     sp_config=gcp.identityplatform.InboundSamlConfigSpConfigArgs(
 *         sp_entity_id="tf-sp",
 *         callback_uri="https://example.com",
 *     ))
 * ```
 * ```csharp
 * using System.IO;
 * using Pulumi;
 * using Gcp = Pulumi.Gcp;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var samlConfig = new Gcp.IdentityPlatform.InboundSamlConfig("samlConfig", new Gcp.IdentityPlatform.InboundSamlConfigArgs
 *         {
 *             DisplayName = "Display Name",
 *             IdpConfig = new Gcp.IdentityPlatform.Inputs.InboundSamlConfigIdpConfigArgs
 *             {
 *                 IdpEntityId = "tf-idp",
 *                 SignRequest = true,
 *                 SsoUrl = "https://example.com",
 *                 IdpCertificates = 
 *                 {
 *                     new Gcp.IdentityPlatform.Inputs.InboundSamlConfigIdpConfigIdpCertificateArgs
 *                     {
 *                         X509Certificate = File.ReadAllText("test-fixtures/rsa_cert.pem"),
 *                     },
 *                 },
 *             },
 *             SpConfig = new Gcp.IdentityPlatform.Inputs.InboundSamlConfigSpConfigArgs
 *             {
 *                 SpEntityId = "tf-sp",
 *                 CallbackUri = "https://example.com",
 *             },
 *         });
 *     }
 * 
 * }
 * ```
 * ```go
 * package main
 * 
 * import (
 * 	"io/ioutil"
 * 
 * 	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/identityplatform"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func readFileOrPanic(path string) pulumi.StringPtrInput {
 * 	data, err := ioutil.ReadFile(path)
 * 	if err != nil {
 * 		panic(err.Error())
 * 	}
 * 	return pulumi.String(string(data))
 * }
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		_, err := identityplatform.NewInboundSamlConfig(ctx, "samlConfig", &identityplatform.InboundSamlConfigArgs{
 * 			DisplayName: pulumi.String("Display Name"),
 * 			IdpConfig: &identityplatform.InboundSamlConfigIdpConfigArgs{
 * 				IdpEntityId: pulumi.String("tf-idp"),
 * 				SignRequest: pulumi.Bool(true),
 * 				SsoUrl:      pulumi.String("https://example.com"),
 * 				IdpCertificates: identityplatform.InboundSamlConfigIdpConfigIdpCertificateArray{
 * 					&identityplatform.InboundSamlConfigIdpConfigIdpCertificateArgs{
 * 						X509Certificate: readFileOrPanic("test-fixtures/rsa_cert.pem"),
 * 					},
 * 				},
 * 			},
 * 			SpConfig: &identityplatform.InboundSamlConfigSpConfigArgs{
 * 				SpEntityId:  pulumi.String("tf-sp"),
 * 				CallbackUri: pulumi.String("https://example.com"),
 * 			},
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * ```
 * {{% /example %}}
 * {{% /examples %}}
 * 
 * ## Import
 * 
 * InboundSamlConfig can be imported using any of these accepted formats
 * 
 * ```sh
 *  $ pulumi import gcp:identityplatform/inboundSamlConfig:InboundSamlConfig default projects/{{project}}/inboundSamlConfigs/{{name}}
 * ```
 * 
 * 
 * 
 * ```sh
 *  $ pulumi import gcp:identityplatform/inboundSamlConfig:InboundSamlConfig default {{project}}/{{name}}
 * ```
 * 
 * 
 * 
 * ```sh
 *  $ pulumi import gcp:identityplatform/inboundSamlConfig:InboundSamlConfig default {{name}}
 * ```
 * 
 *  
 */
@ResourceType(type="gcp:identityplatform/inboundSamlConfig:InboundSamlConfig")
public class InboundSamlConfig extends io.pulumi.resources.CustomResource {
    /**
     * Human friendly display name.
     * 
     */
    @Export(name="displayName", type=String.class, parameters={})
    private Output<String> displayName;

    /**
     * @return Human friendly display name.
     * 
     */
    public Output<String> getDisplayName() {
        return this.displayName;
    }
    /**
     * If this config allows users to sign in with the provider.
     * 
     */
    @Export(name="enabled", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> enabled;

    /**
     * @return If this config allows users to sign in with the provider.
     * 
     */
    public Output</* @Nullable */ Boolean> getEnabled() {
        return this.enabled;
    }
    /**
     * SAML IdP configuration when the project acts as the relying party
     * Structure is documented below.
     * 
     */
    @Export(name="idpConfig", type=InboundSamlConfigIdpConfig.class, parameters={})
    private Output<InboundSamlConfigIdpConfig> idpConfig;

    /**
     * @return SAML IdP configuration when the project acts as the relying party
     * Structure is documented below.
     * 
     */
    public Output<InboundSamlConfigIdpConfig> getIdpConfig() {
        return this.idpConfig;
    }
    /**
     * The name of the InboundSamlConfig resource. Must start with 'saml.' and can only have alphanumeric characters,
     * hyphens, underscores or periods. The part after 'saml.' must also start with a lowercase letter, end with an
     * alphanumeric character, and have at least 2 characters.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The name of the InboundSamlConfig resource. Must start with 'saml.' and can only have alphanumeric characters,
     * hyphens, underscores or periods. The part after 'saml.' must also start with a lowercase letter, end with an
     * alphanumeric character, and have at least 2 characters.
     * 
     */
    public Output<String> getName() {
        return this.name;
    }
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Export(name="project", type=String.class, parameters={})
    private Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Output<String> getProject() {
        return this.project;
    }
    /**
     * SAML SP (Service Provider) configuration when the project acts as the relying party to receive
     * and accept an authentication assertion issued by a SAML identity provider.
     * Structure is documented below.
     * 
     */
    @Export(name="spConfig", type=InboundSamlConfigSpConfig.class, parameters={})
    private Output<InboundSamlConfigSpConfig> spConfig;

    /**
     * @return SAML SP (Service Provider) configuration when the project acts as the relying party to receive
     * and accept an authentication assertion issued by a SAML identity provider.
     * Structure is documented below.
     * 
     */
    public Output<InboundSamlConfigSpConfig> getSpConfig() {
        return this.spConfig;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public InboundSamlConfig(String name) {
        this(name, InboundSamlConfigArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public InboundSamlConfig(String name, InboundSamlConfigArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public InboundSamlConfig(String name, InboundSamlConfigArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("gcp:identityplatform/inboundSamlConfig:InboundSamlConfig", name, args == null ? InboundSamlConfigArgs.Empty : args, makeResourceOptions(options, Output.empty()));
    }

    private InboundSamlConfig(String name, Output<String> id, @Nullable InboundSamlConfigState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("gcp:identityplatform/inboundSamlConfig:InboundSamlConfig", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static InboundSamlConfig get(String name, Output<String> id, @Nullable InboundSamlConfigState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new InboundSamlConfig(name, id, state, options);
    }
}
