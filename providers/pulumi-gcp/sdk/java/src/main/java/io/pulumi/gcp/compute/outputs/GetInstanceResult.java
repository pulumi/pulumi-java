// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.compute.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import io.pulumi.gcp.compute.outputs.GetInstanceAdvancedMachineFeature;
import io.pulumi.gcp.compute.outputs.GetInstanceAttachedDisk;
import io.pulumi.gcp.compute.outputs.GetInstanceBootDisk;
import io.pulumi.gcp.compute.outputs.GetInstanceConfidentialInstanceConfig;
import io.pulumi.gcp.compute.outputs.GetInstanceGuestAccelerator;
import io.pulumi.gcp.compute.outputs.GetInstanceNetworkInterface;
import io.pulumi.gcp.compute.outputs.GetInstanceNetworkPerformanceConfig;
import io.pulumi.gcp.compute.outputs.GetInstanceReservationAffinity;
import io.pulumi.gcp.compute.outputs.GetInstanceScheduling;
import io.pulumi.gcp.compute.outputs.GetInstanceScratchDisk;
import io.pulumi.gcp.compute.outputs.GetInstanceServiceAccount;
import io.pulumi.gcp.compute.outputs.GetInstanceShieldedInstanceConfig;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class GetInstanceResult {
    private final List<GetInstanceAdvancedMachineFeature> advancedMachineFeatures;
    private final Boolean allowStoppingForUpdate;
    private final List<GetInstanceAttachedDisk> attachedDisks;
    private final List<GetInstanceBootDisk> bootDisks;
    private final Boolean canIpForward;
    private final List<GetInstanceConfidentialInstanceConfig> confidentialInstanceConfigs;
    private final String cpuPlatform;
    private final String currentStatus;
    private final Boolean deletionProtection;
    private final String description;
    private final String desiredStatus;
    private final Boolean enableDisplay;
    private final List<GetInstanceGuestAccelerator> guestAccelerators;
    private final String hostname;
    private final String id;
    private final String instanceId;
    private final String labelFingerprint;
    private final Map<String,String> labels;
    private final String machineType;
    private final Map<String,String> metadata;
    private final String metadataFingerprint;
    private final String metadataStartupScript;
    private final String minCpuPlatform;
    private final @Nullable String name;
    private final List<GetInstanceNetworkInterface> networkInterfaces;
    private final List<GetInstanceNetworkPerformanceConfig> networkPerformanceConfigs;
    private final @Nullable String project;
    private final List<GetInstanceReservationAffinity> reservationAffinities;
    private final List<String> resourcePolicies;
    private final List<GetInstanceScheduling> schedulings;
    private final List<GetInstanceScratchDisk> scratchDisks;
    private final @Nullable String selfLink;
    private final List<GetInstanceServiceAccount> serviceAccounts;
    private final List<GetInstanceShieldedInstanceConfig> shieldedInstanceConfigs;
    private final List<String> tags;
    private final String tagsFingerprint;
    private final @Nullable String zone;

    @OutputCustomType.Constructor({"advancedMachineFeatures","allowStoppingForUpdate","attachedDisks","bootDisks","canIpForward","confidentialInstanceConfigs","cpuPlatform","currentStatus","deletionProtection","description","desiredStatus","enableDisplay","guestAccelerators","hostname","id","instanceId","labelFingerprint","labels","machineType","metadata","metadataFingerprint","metadataStartupScript","minCpuPlatform","name","networkInterfaces","networkPerformanceConfigs","project","reservationAffinities","resourcePolicies","schedulings","scratchDisks","selfLink","serviceAccounts","shieldedInstanceConfigs","tags","tagsFingerprint","zone"})
    private GetInstanceResult(
        List<GetInstanceAdvancedMachineFeature> advancedMachineFeatures,
        Boolean allowStoppingForUpdate,
        List<GetInstanceAttachedDisk> attachedDisks,
        List<GetInstanceBootDisk> bootDisks,
        Boolean canIpForward,
        List<GetInstanceConfidentialInstanceConfig> confidentialInstanceConfigs,
        String cpuPlatform,
        String currentStatus,
        Boolean deletionProtection,
        String description,
        String desiredStatus,
        Boolean enableDisplay,
        List<GetInstanceGuestAccelerator> guestAccelerators,
        String hostname,
        String id,
        String instanceId,
        String labelFingerprint,
        Map<String,String> labels,
        String machineType,
        Map<String,String> metadata,
        String metadataFingerprint,
        String metadataStartupScript,
        String minCpuPlatform,
        @Nullable String name,
        List<GetInstanceNetworkInterface> networkInterfaces,
        List<GetInstanceNetworkPerformanceConfig> networkPerformanceConfigs,
        @Nullable String project,
        List<GetInstanceReservationAffinity> reservationAffinities,
        List<String> resourcePolicies,
        List<GetInstanceScheduling> schedulings,
        List<GetInstanceScratchDisk> scratchDisks,
        @Nullable String selfLink,
        List<GetInstanceServiceAccount> serviceAccounts,
        List<GetInstanceShieldedInstanceConfig> shieldedInstanceConfigs,
        List<String> tags,
        String tagsFingerprint,
        @Nullable String zone) {
        this.advancedMachineFeatures = Objects.requireNonNull(advancedMachineFeatures);
        this.allowStoppingForUpdate = Objects.requireNonNull(allowStoppingForUpdate);
        this.attachedDisks = Objects.requireNonNull(attachedDisks);
        this.bootDisks = Objects.requireNonNull(bootDisks);
        this.canIpForward = Objects.requireNonNull(canIpForward);
        this.confidentialInstanceConfigs = Objects.requireNonNull(confidentialInstanceConfigs);
        this.cpuPlatform = Objects.requireNonNull(cpuPlatform);
        this.currentStatus = Objects.requireNonNull(currentStatus);
        this.deletionProtection = Objects.requireNonNull(deletionProtection);
        this.description = Objects.requireNonNull(description);
        this.desiredStatus = Objects.requireNonNull(desiredStatus);
        this.enableDisplay = Objects.requireNonNull(enableDisplay);
        this.guestAccelerators = Objects.requireNonNull(guestAccelerators);
        this.hostname = Objects.requireNonNull(hostname);
        this.id = Objects.requireNonNull(id);
        this.instanceId = Objects.requireNonNull(instanceId);
        this.labelFingerprint = Objects.requireNonNull(labelFingerprint);
        this.labels = Objects.requireNonNull(labels);
        this.machineType = Objects.requireNonNull(machineType);
        this.metadata = Objects.requireNonNull(metadata);
        this.metadataFingerprint = Objects.requireNonNull(metadataFingerprint);
        this.metadataStartupScript = Objects.requireNonNull(metadataStartupScript);
        this.minCpuPlatform = Objects.requireNonNull(minCpuPlatform);
        this.name = name;
        this.networkInterfaces = Objects.requireNonNull(networkInterfaces);
        this.networkPerformanceConfigs = Objects.requireNonNull(networkPerformanceConfigs);
        this.project = project;
        this.reservationAffinities = Objects.requireNonNull(reservationAffinities);
        this.resourcePolicies = Objects.requireNonNull(resourcePolicies);
        this.schedulings = Objects.requireNonNull(schedulings);
        this.scratchDisks = Objects.requireNonNull(scratchDisks);
        this.selfLink = selfLink;
        this.serviceAccounts = Objects.requireNonNull(serviceAccounts);
        this.shieldedInstanceConfigs = Objects.requireNonNull(shieldedInstanceConfigs);
        this.tags = Objects.requireNonNull(tags);
        this.tagsFingerprint = Objects.requireNonNull(tagsFingerprint);
        this.zone = zone;
    }

    public List<GetInstanceAdvancedMachineFeature> getAdvancedMachineFeatures() {
        return this.advancedMachineFeatures;
    }
    public Boolean getAllowStoppingForUpdate() {
        return this.allowStoppingForUpdate;
    }
    public List<GetInstanceAttachedDisk> getAttachedDisks() {
        return this.attachedDisks;
    }
    public List<GetInstanceBootDisk> getBootDisks() {
        return this.bootDisks;
    }
    public Boolean getCanIpForward() {
        return this.canIpForward;
    }
    public List<GetInstanceConfidentialInstanceConfig> getConfidentialInstanceConfigs() {
        return this.confidentialInstanceConfigs;
    }
    public String getCpuPlatform() {
        return this.cpuPlatform;
    }
    public String getCurrentStatus() {
        return this.currentStatus;
    }
    public Boolean getDeletionProtection() {
        return this.deletionProtection;
    }
    public String getDescription() {
        return this.description;
    }
    public String getDesiredStatus() {
        return this.desiredStatus;
    }
    public Boolean getEnableDisplay() {
        return this.enableDisplay;
    }
    public List<GetInstanceGuestAccelerator> getGuestAccelerators() {
        return this.guestAccelerators;
    }
    public String getHostname() {
        return this.hostname;
    }
    public String getId() {
        return this.id;
    }
    public String getInstanceId() {
        return this.instanceId;
    }
    public String getLabelFingerprint() {
        return this.labelFingerprint;
    }
    public Map<String,String> getLabels() {
        return this.labels;
    }
    public String getMachineType() {
        return this.machineType;
    }
    public Map<String,String> getMetadata() {
        return this.metadata;
    }
    public String getMetadataFingerprint() {
        return this.metadataFingerprint;
    }
    public String getMetadataStartupScript() {
        return this.metadataStartupScript;
    }
    public String getMinCpuPlatform() {
        return this.minCpuPlatform;
    }
    public Optional<String> getName() {
        return Optional.ofNullable(this.name);
    }
    public List<GetInstanceNetworkInterface> getNetworkInterfaces() {
        return this.networkInterfaces;
    }
    public List<GetInstanceNetworkPerformanceConfig> getNetworkPerformanceConfigs() {
        return this.networkPerformanceConfigs;
    }
    public Optional<String> getProject() {
        return Optional.ofNullable(this.project);
    }
    public List<GetInstanceReservationAffinity> getReservationAffinities() {
        return this.reservationAffinities;
    }
    public List<String> getResourcePolicies() {
        return this.resourcePolicies;
    }
    public List<GetInstanceScheduling> getSchedulings() {
        return this.schedulings;
    }
    public List<GetInstanceScratchDisk> getScratchDisks() {
        return this.scratchDisks;
    }
    public Optional<String> getSelfLink() {
        return Optional.ofNullable(this.selfLink);
    }
    public List<GetInstanceServiceAccount> getServiceAccounts() {
        return this.serviceAccounts;
    }
    public List<GetInstanceShieldedInstanceConfig> getShieldedInstanceConfigs() {
        return this.shieldedInstanceConfigs;
    }
    public List<String> getTags() {
        return this.tags;
    }
    public String getTagsFingerprint() {
        return this.tagsFingerprint;
    }
    public Optional<String> getZone() {
        return Optional.ofNullable(this.zone);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetInstanceResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<GetInstanceAdvancedMachineFeature> advancedMachineFeatures;
        private Boolean allowStoppingForUpdate;
        private List<GetInstanceAttachedDisk> attachedDisks;
        private List<GetInstanceBootDisk> bootDisks;
        private Boolean canIpForward;
        private List<GetInstanceConfidentialInstanceConfig> confidentialInstanceConfigs;
        private String cpuPlatform;
        private String currentStatus;
        private Boolean deletionProtection;
        private String description;
        private String desiredStatus;
        private Boolean enableDisplay;
        private List<GetInstanceGuestAccelerator> guestAccelerators;
        private String hostname;
        private String id;
        private String instanceId;
        private String labelFingerprint;
        private Map<String,String> labels;
        private String machineType;
        private Map<String,String> metadata;
        private String metadataFingerprint;
        private String metadataStartupScript;
        private String minCpuPlatform;
        private @Nullable String name;
        private List<GetInstanceNetworkInterface> networkInterfaces;
        private List<GetInstanceNetworkPerformanceConfig> networkPerformanceConfigs;
        private @Nullable String project;
        private List<GetInstanceReservationAffinity> reservationAffinities;
        private List<String> resourcePolicies;
        private List<GetInstanceScheduling> schedulings;
        private List<GetInstanceScratchDisk> scratchDisks;
        private @Nullable String selfLink;
        private List<GetInstanceServiceAccount> serviceAccounts;
        private List<GetInstanceShieldedInstanceConfig> shieldedInstanceConfigs;
        private List<String> tags;
        private String tagsFingerprint;
        private @Nullable String zone;

        public Builder() {
    	      // Empty
        }

        public Builder(GetInstanceResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.advancedMachineFeatures = defaults.advancedMachineFeatures;
    	      this.allowStoppingForUpdate = defaults.allowStoppingForUpdate;
    	      this.attachedDisks = defaults.attachedDisks;
    	      this.bootDisks = defaults.bootDisks;
    	      this.canIpForward = defaults.canIpForward;
    	      this.confidentialInstanceConfigs = defaults.confidentialInstanceConfigs;
    	      this.cpuPlatform = defaults.cpuPlatform;
    	      this.currentStatus = defaults.currentStatus;
    	      this.deletionProtection = defaults.deletionProtection;
    	      this.description = defaults.description;
    	      this.desiredStatus = defaults.desiredStatus;
    	      this.enableDisplay = defaults.enableDisplay;
    	      this.guestAccelerators = defaults.guestAccelerators;
    	      this.hostname = defaults.hostname;
    	      this.id = defaults.id;
    	      this.instanceId = defaults.instanceId;
    	      this.labelFingerprint = defaults.labelFingerprint;
    	      this.labels = defaults.labels;
    	      this.machineType = defaults.machineType;
    	      this.metadata = defaults.metadata;
    	      this.metadataFingerprint = defaults.metadataFingerprint;
    	      this.metadataStartupScript = defaults.metadataStartupScript;
    	      this.minCpuPlatform = defaults.minCpuPlatform;
    	      this.name = defaults.name;
    	      this.networkInterfaces = defaults.networkInterfaces;
    	      this.networkPerformanceConfigs = defaults.networkPerformanceConfigs;
    	      this.project = defaults.project;
    	      this.reservationAffinities = defaults.reservationAffinities;
    	      this.resourcePolicies = defaults.resourcePolicies;
    	      this.schedulings = defaults.schedulings;
    	      this.scratchDisks = defaults.scratchDisks;
    	      this.selfLink = defaults.selfLink;
    	      this.serviceAccounts = defaults.serviceAccounts;
    	      this.shieldedInstanceConfigs = defaults.shieldedInstanceConfigs;
    	      this.tags = defaults.tags;
    	      this.tagsFingerprint = defaults.tagsFingerprint;
    	      this.zone = defaults.zone;
        }

        public Builder setAdvancedMachineFeatures(List<GetInstanceAdvancedMachineFeature> advancedMachineFeatures) {
            this.advancedMachineFeatures = Objects.requireNonNull(advancedMachineFeatures);
            return this;
        }

        public Builder setAllowStoppingForUpdate(Boolean allowStoppingForUpdate) {
            this.allowStoppingForUpdate = Objects.requireNonNull(allowStoppingForUpdate);
            return this;
        }

        public Builder setAttachedDisks(List<GetInstanceAttachedDisk> attachedDisks) {
            this.attachedDisks = Objects.requireNonNull(attachedDisks);
            return this;
        }

        public Builder setBootDisks(List<GetInstanceBootDisk> bootDisks) {
            this.bootDisks = Objects.requireNonNull(bootDisks);
            return this;
        }

        public Builder setCanIpForward(Boolean canIpForward) {
            this.canIpForward = Objects.requireNonNull(canIpForward);
            return this;
        }

        public Builder setConfidentialInstanceConfigs(List<GetInstanceConfidentialInstanceConfig> confidentialInstanceConfigs) {
            this.confidentialInstanceConfigs = Objects.requireNonNull(confidentialInstanceConfigs);
            return this;
        }

        public Builder setCpuPlatform(String cpuPlatform) {
            this.cpuPlatform = Objects.requireNonNull(cpuPlatform);
            return this;
        }

        public Builder setCurrentStatus(String currentStatus) {
            this.currentStatus = Objects.requireNonNull(currentStatus);
            return this;
        }

        public Builder setDeletionProtection(Boolean deletionProtection) {
            this.deletionProtection = Objects.requireNonNull(deletionProtection);
            return this;
        }

        public Builder setDescription(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }

        public Builder setDesiredStatus(String desiredStatus) {
            this.desiredStatus = Objects.requireNonNull(desiredStatus);
            return this;
        }

        public Builder setEnableDisplay(Boolean enableDisplay) {
            this.enableDisplay = Objects.requireNonNull(enableDisplay);
            return this;
        }

        public Builder setGuestAccelerators(List<GetInstanceGuestAccelerator> guestAccelerators) {
            this.guestAccelerators = Objects.requireNonNull(guestAccelerators);
            return this;
        }

        public Builder setHostname(String hostname) {
            this.hostname = Objects.requireNonNull(hostname);
            return this;
        }

        public Builder setId(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }

        public Builder setInstanceId(String instanceId) {
            this.instanceId = Objects.requireNonNull(instanceId);
            return this;
        }

        public Builder setLabelFingerprint(String labelFingerprint) {
            this.labelFingerprint = Objects.requireNonNull(labelFingerprint);
            return this;
        }

        public Builder setLabels(Map<String,String> labels) {
            this.labels = Objects.requireNonNull(labels);
            return this;
        }

        public Builder setMachineType(String machineType) {
            this.machineType = Objects.requireNonNull(machineType);
            return this;
        }

        public Builder setMetadata(Map<String,String> metadata) {
            this.metadata = Objects.requireNonNull(metadata);
            return this;
        }

        public Builder setMetadataFingerprint(String metadataFingerprint) {
            this.metadataFingerprint = Objects.requireNonNull(metadataFingerprint);
            return this;
        }

        public Builder setMetadataStartupScript(String metadataStartupScript) {
            this.metadataStartupScript = Objects.requireNonNull(metadataStartupScript);
            return this;
        }

        public Builder setMinCpuPlatform(String minCpuPlatform) {
            this.minCpuPlatform = Objects.requireNonNull(minCpuPlatform);
            return this;
        }

        public Builder setName(@Nullable String name) {
            this.name = name;
            return this;
        }

        public Builder setNetworkInterfaces(List<GetInstanceNetworkInterface> networkInterfaces) {
            this.networkInterfaces = Objects.requireNonNull(networkInterfaces);
            return this;
        }

        public Builder setNetworkPerformanceConfigs(List<GetInstanceNetworkPerformanceConfig> networkPerformanceConfigs) {
            this.networkPerformanceConfigs = Objects.requireNonNull(networkPerformanceConfigs);
            return this;
        }

        public Builder setProject(@Nullable String project) {
            this.project = project;
            return this;
        }

        public Builder setReservationAffinities(List<GetInstanceReservationAffinity> reservationAffinities) {
            this.reservationAffinities = Objects.requireNonNull(reservationAffinities);
            return this;
        }

        public Builder setResourcePolicies(List<String> resourcePolicies) {
            this.resourcePolicies = Objects.requireNonNull(resourcePolicies);
            return this;
        }

        public Builder setSchedulings(List<GetInstanceScheduling> schedulings) {
            this.schedulings = Objects.requireNonNull(schedulings);
            return this;
        }

        public Builder setScratchDisks(List<GetInstanceScratchDisk> scratchDisks) {
            this.scratchDisks = Objects.requireNonNull(scratchDisks);
            return this;
        }

        public Builder setSelfLink(@Nullable String selfLink) {
            this.selfLink = selfLink;
            return this;
        }

        public Builder setServiceAccounts(List<GetInstanceServiceAccount> serviceAccounts) {
            this.serviceAccounts = Objects.requireNonNull(serviceAccounts);
            return this;
        }

        public Builder setShieldedInstanceConfigs(List<GetInstanceShieldedInstanceConfig> shieldedInstanceConfigs) {
            this.shieldedInstanceConfigs = Objects.requireNonNull(shieldedInstanceConfigs);
            return this;
        }

        public Builder setTags(List<String> tags) {
            this.tags = Objects.requireNonNull(tags);
            return this;
        }

        public Builder setTagsFingerprint(String tagsFingerprint) {
            this.tagsFingerprint = Objects.requireNonNull(tagsFingerprint);
            return this;
        }

        public Builder setZone(@Nullable String zone) {
            this.zone = zone;
            return this;
        }

        public GetInstanceResult build() {
            return new GetInstanceResult(advancedMachineFeatures, allowStoppingForUpdate, attachedDisks, bootDisks, canIpForward, confidentialInstanceConfigs, cpuPlatform, currentStatus, deletionProtection, description, desiredStatus, enableDisplay, guestAccelerators, hostname, id, instanceId, labelFingerprint, labels, machineType, metadata, metadataFingerprint, metadataStartupScript, minCpuPlatform, name, networkInterfaces, networkPerformanceConfigs, project, reservationAffinities, resourcePolicies, schedulings, scratchDisks, selfLink, serviceAccounts, shieldedInstanceConfigs, tags, tagsFingerprint, zone);
        }
    }
}
