// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.compute.outputs;

import io.pulumi.core.annotations.OutputCustomType;
import io.pulumi.gcp.compute.outputs.GetInstanceAdvancedMachineFeature;
import io.pulumi.gcp.compute.outputs.GetInstanceAttachedDisk;
import io.pulumi.gcp.compute.outputs.GetInstanceBootDisk;
import io.pulumi.gcp.compute.outputs.GetInstanceConfidentialInstanceConfig;
import io.pulumi.gcp.compute.outputs.GetInstanceGuestAccelerator;
import io.pulumi.gcp.compute.outputs.GetInstanceNetworkInterface;
import io.pulumi.gcp.compute.outputs.GetInstanceNetworkPerformanceConfig;
import io.pulumi.gcp.compute.outputs.GetInstanceReservationAffinity;
import io.pulumi.gcp.compute.outputs.GetInstanceScheduling;
import io.pulumi.gcp.compute.outputs.GetInstanceScratchDisk;
import io.pulumi.gcp.compute.outputs.GetInstanceServiceAccount;
import io.pulumi.gcp.compute.outputs.GetInstanceShieldedInstanceConfig;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class GetInstanceResult {
    private final List<GetInstanceAdvancedMachineFeature> advancedMachineFeatures;
    private final Boolean allowStoppingForUpdate;
    /**
     * List of disks attached to the instance. Structure is documented below.
     * 
     */
    private final List<GetInstanceAttachedDisk> attachedDisks;
    /**
     * The boot disk for the instance. Structure is documented below.
     * 
     */
    private final List<GetInstanceBootDisk> bootDisks;
    /**
     * Whether sending and receiving of packets with non-matching source or destination IPs is allowed.
     * 
     */
    private final Boolean canIpForward;
    private final List<GetInstanceConfidentialInstanceConfig> confidentialInstanceConfigs;
    /**
     * The CPU platform used by this instance.
     * 
     */
    private final String cpuPlatform;
    private final String currentStatus;
    /**
     * Whether deletion protection is enabled on this instance.
     * 
     */
    private final Boolean deletionProtection;
    /**
     * A brief description of the resource.
     * 
     */
    private final String description;
    private final String desiredStatus;
    private final Boolean enableDisplay;
    /**
     * List of the type and count of accelerator cards attached to the instance. Structure is documented below.
     * 
     */
    private final List<GetInstanceGuestAccelerator> guestAccelerators;
    private final String hostname;
    /**
     * The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    /**
     * The server-assigned unique identifier of this instance.
     * 
     */
    private final String instanceId;
    /**
     * The unique fingerprint of the labels.
     * 
     */
    private final String labelFingerprint;
    /**
     * A set of key/value label pairs assigned to the instance.
     * 
     */
    private final Map<String,String> labels;
    /**
     * The machine type to create.
     * 
     */
    private final String machineType;
    /**
     * Metadata key/value pairs made available within the instance.
     * 
     */
    private final Map<String,String> metadata;
    /**
     * The unique fingerprint of the metadata.
     * 
     */
    private final String metadataFingerprint;
    private final String metadataStartupScript;
    /**
     * The minimum CPU platform specified for the VM instance.
     * 
     */
    private final String minCpuPlatform;
    private final @Nullable String name;
    /**
     * The networks attached to the instance. Structure is documented below.
     * 
     */
    private final List<GetInstanceNetworkInterface> networkInterfaces;
    /**
     * The network performance configuration setting for the instance, if set. Structure is documented below.
     * 
     */
    private final List<GetInstanceNetworkPerformanceConfig> networkPerformanceConfigs;
    private final @Nullable String project;
    private final List<GetInstanceReservationAffinity> reservationAffinities;
    private final List<String> resourcePolicies;
    /**
     * The scheduling strategy being used by the instance. Structure is documented below
     * 
     */
    private final List<GetInstanceScheduling> schedulings;
    /**
     * The scratch disks attached to the instance. Structure is documented below.
     * 
     */
    private final List<GetInstanceScratchDisk> scratchDisks;
    /**
     * The URI of the created resource.
     * 
     */
    private final @Nullable String selfLink;
    /**
     * The service account to attach to the instance. Structure is documented below.
     * 
     */
    private final List<GetInstanceServiceAccount> serviceAccounts;
    /**
     * The shielded vm config being used by the instance. Structure is documented below.
     * 
     */
    private final List<GetInstanceShieldedInstanceConfig> shieldedInstanceConfigs;
    /**
     * The list of tags attached to the instance.
     * 
     */
    private final List<String> tags;
    /**
     * The unique fingerprint of the tags.
     * 
     */
    private final String tagsFingerprint;
    private final @Nullable String zone;

    @OutputCustomType.Constructor
    private GetInstanceResult(
        @OutputCustomType.Parameter("advancedMachineFeatures") List<GetInstanceAdvancedMachineFeature> advancedMachineFeatures,
        @OutputCustomType.Parameter("allowStoppingForUpdate") Boolean allowStoppingForUpdate,
        @OutputCustomType.Parameter("attachedDisks") List<GetInstanceAttachedDisk> attachedDisks,
        @OutputCustomType.Parameter("bootDisks") List<GetInstanceBootDisk> bootDisks,
        @OutputCustomType.Parameter("canIpForward") Boolean canIpForward,
        @OutputCustomType.Parameter("confidentialInstanceConfigs") List<GetInstanceConfidentialInstanceConfig> confidentialInstanceConfigs,
        @OutputCustomType.Parameter("cpuPlatform") String cpuPlatform,
        @OutputCustomType.Parameter("currentStatus") String currentStatus,
        @OutputCustomType.Parameter("deletionProtection") Boolean deletionProtection,
        @OutputCustomType.Parameter("description") String description,
        @OutputCustomType.Parameter("desiredStatus") String desiredStatus,
        @OutputCustomType.Parameter("enableDisplay") Boolean enableDisplay,
        @OutputCustomType.Parameter("guestAccelerators") List<GetInstanceGuestAccelerator> guestAccelerators,
        @OutputCustomType.Parameter("hostname") String hostname,
        @OutputCustomType.Parameter("id") String id,
        @OutputCustomType.Parameter("instanceId") String instanceId,
        @OutputCustomType.Parameter("labelFingerprint") String labelFingerprint,
        @OutputCustomType.Parameter("labels") Map<String,String> labels,
        @OutputCustomType.Parameter("machineType") String machineType,
        @OutputCustomType.Parameter("metadata") Map<String,String> metadata,
        @OutputCustomType.Parameter("metadataFingerprint") String metadataFingerprint,
        @OutputCustomType.Parameter("metadataStartupScript") String metadataStartupScript,
        @OutputCustomType.Parameter("minCpuPlatform") String minCpuPlatform,
        @OutputCustomType.Parameter("name") @Nullable String name,
        @OutputCustomType.Parameter("networkInterfaces") List<GetInstanceNetworkInterface> networkInterfaces,
        @OutputCustomType.Parameter("networkPerformanceConfigs") List<GetInstanceNetworkPerformanceConfig> networkPerformanceConfigs,
        @OutputCustomType.Parameter("project") @Nullable String project,
        @OutputCustomType.Parameter("reservationAffinities") List<GetInstanceReservationAffinity> reservationAffinities,
        @OutputCustomType.Parameter("resourcePolicies") List<String> resourcePolicies,
        @OutputCustomType.Parameter("schedulings") List<GetInstanceScheduling> schedulings,
        @OutputCustomType.Parameter("scratchDisks") List<GetInstanceScratchDisk> scratchDisks,
        @OutputCustomType.Parameter("selfLink") @Nullable String selfLink,
        @OutputCustomType.Parameter("serviceAccounts") List<GetInstanceServiceAccount> serviceAccounts,
        @OutputCustomType.Parameter("shieldedInstanceConfigs") List<GetInstanceShieldedInstanceConfig> shieldedInstanceConfigs,
        @OutputCustomType.Parameter("tags") List<String> tags,
        @OutputCustomType.Parameter("tagsFingerprint") String tagsFingerprint,
        @OutputCustomType.Parameter("zone") @Nullable String zone) {
        this.advancedMachineFeatures = advancedMachineFeatures;
        this.allowStoppingForUpdate = allowStoppingForUpdate;
        this.attachedDisks = attachedDisks;
        this.bootDisks = bootDisks;
        this.canIpForward = canIpForward;
        this.confidentialInstanceConfigs = confidentialInstanceConfigs;
        this.cpuPlatform = cpuPlatform;
        this.currentStatus = currentStatus;
        this.deletionProtection = deletionProtection;
        this.description = description;
        this.desiredStatus = desiredStatus;
        this.enableDisplay = enableDisplay;
        this.guestAccelerators = guestAccelerators;
        this.hostname = hostname;
        this.id = id;
        this.instanceId = instanceId;
        this.labelFingerprint = labelFingerprint;
        this.labels = labels;
        this.machineType = machineType;
        this.metadata = metadata;
        this.metadataFingerprint = metadataFingerprint;
        this.metadataStartupScript = metadataStartupScript;
        this.minCpuPlatform = minCpuPlatform;
        this.name = name;
        this.networkInterfaces = networkInterfaces;
        this.networkPerformanceConfigs = networkPerformanceConfigs;
        this.project = project;
        this.reservationAffinities = reservationAffinities;
        this.resourcePolicies = resourcePolicies;
        this.schedulings = schedulings;
        this.scratchDisks = scratchDisks;
        this.selfLink = selfLink;
        this.serviceAccounts = serviceAccounts;
        this.shieldedInstanceConfigs = shieldedInstanceConfigs;
        this.tags = tags;
        this.tagsFingerprint = tagsFingerprint;
        this.zone = zone;
    }

    public List<GetInstanceAdvancedMachineFeature> getAdvancedMachineFeatures() {
        return this.advancedMachineFeatures;
    }
    public Boolean getAllowStoppingForUpdate() {
        return this.allowStoppingForUpdate;
    }
    /**
     * List of disks attached to the instance. Structure is documented below.
     * 
    */
    public List<GetInstanceAttachedDisk> getAttachedDisks() {
        return this.attachedDisks;
    }
    /**
     * The boot disk for the instance. Structure is documented below.
     * 
    */
    public List<GetInstanceBootDisk> getBootDisks() {
        return this.bootDisks;
    }
    /**
     * Whether sending and receiving of packets with non-matching source or destination IPs is allowed.
     * 
    */
    public Boolean getCanIpForward() {
        return this.canIpForward;
    }
    public List<GetInstanceConfidentialInstanceConfig> getConfidentialInstanceConfigs() {
        return this.confidentialInstanceConfigs;
    }
    /**
     * The CPU platform used by this instance.
     * 
    */
    public String getCpuPlatform() {
        return this.cpuPlatform;
    }
    public String getCurrentStatus() {
        return this.currentStatus;
    }
    /**
     * Whether deletion protection is enabled on this instance.
     * 
    */
    public Boolean getDeletionProtection() {
        return this.deletionProtection;
    }
    /**
     * A brief description of the resource.
     * 
    */
    public String getDescription() {
        return this.description;
    }
    public String getDesiredStatus() {
        return this.desiredStatus;
    }
    public Boolean getEnableDisplay() {
        return this.enableDisplay;
    }
    /**
     * List of the type and count of accelerator cards attached to the instance. Structure is documented below.
     * 
    */
    public List<GetInstanceGuestAccelerator> getGuestAccelerators() {
        return this.guestAccelerators;
    }
    public String getHostname() {
        return this.hostname;
    }
    /**
     * The provider-assigned unique ID for this managed resource.
     * 
    */
    public String getId() {
        return this.id;
    }
    /**
     * The server-assigned unique identifier of this instance.
     * 
    */
    public String getInstanceId() {
        return this.instanceId;
    }
    /**
     * The unique fingerprint of the labels.
     * 
    */
    public String getLabelFingerprint() {
        return this.labelFingerprint;
    }
    /**
     * A set of key/value label pairs assigned to the instance.
     * 
    */
    public Map<String,String> getLabels() {
        return this.labels;
    }
    /**
     * The machine type to create.
     * 
    */
    public String getMachineType() {
        return this.machineType;
    }
    /**
     * Metadata key/value pairs made available within the instance.
     * 
    */
    public Map<String,String> getMetadata() {
        return this.metadata;
    }
    /**
     * The unique fingerprint of the metadata.
     * 
    */
    public String getMetadataFingerprint() {
        return this.metadataFingerprint;
    }
    public String getMetadataStartupScript() {
        return this.metadataStartupScript;
    }
    /**
     * The minimum CPU platform specified for the VM instance.
     * 
    */
    public String getMinCpuPlatform() {
        return this.minCpuPlatform;
    }
    public Optional<String> getName() {
        return Optional.ofNullable(this.name);
    }
    /**
     * The networks attached to the instance. Structure is documented below.
     * 
    */
    public List<GetInstanceNetworkInterface> getNetworkInterfaces() {
        return this.networkInterfaces;
    }
    /**
     * The network performance configuration setting for the instance, if set. Structure is documented below.
     * 
    */
    public List<GetInstanceNetworkPerformanceConfig> getNetworkPerformanceConfigs() {
        return this.networkPerformanceConfigs;
    }
    public Optional<String> getProject() {
        return Optional.ofNullable(this.project);
    }
    public List<GetInstanceReservationAffinity> getReservationAffinities() {
        return this.reservationAffinities;
    }
    public List<String> getResourcePolicies() {
        return this.resourcePolicies;
    }
    /**
     * The scheduling strategy being used by the instance. Structure is documented below
     * 
    */
    public List<GetInstanceScheduling> getSchedulings() {
        return this.schedulings;
    }
    /**
     * The scratch disks attached to the instance. Structure is documented below.
     * 
    */
    public List<GetInstanceScratchDisk> getScratchDisks() {
        return this.scratchDisks;
    }
    /**
     * The URI of the created resource.
     * 
    */
    public Optional<String> getSelfLink() {
        return Optional.ofNullable(this.selfLink);
    }
    /**
     * The service account to attach to the instance. Structure is documented below.
     * 
    */
    public List<GetInstanceServiceAccount> getServiceAccounts() {
        return this.serviceAccounts;
    }
    /**
     * The shielded vm config being used by the instance. Structure is documented below.
     * 
    */
    public List<GetInstanceShieldedInstanceConfig> getShieldedInstanceConfigs() {
        return this.shieldedInstanceConfigs;
    }
    /**
     * The list of tags attached to the instance.
     * 
    */
    public List<String> getTags() {
        return this.tags;
    }
    /**
     * The unique fingerprint of the tags.
     * 
    */
    public String getTagsFingerprint() {
        return this.tagsFingerprint;
    }
    public Optional<String> getZone() {
        return Optional.ofNullable(this.zone);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetInstanceResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<GetInstanceAdvancedMachineFeature> advancedMachineFeatures;
        private Boolean allowStoppingForUpdate;
        private List<GetInstanceAttachedDisk> attachedDisks;
        private List<GetInstanceBootDisk> bootDisks;
        private Boolean canIpForward;
        private List<GetInstanceConfidentialInstanceConfig> confidentialInstanceConfigs;
        private String cpuPlatform;
        private String currentStatus;
        private Boolean deletionProtection;
        private String description;
        private String desiredStatus;
        private Boolean enableDisplay;
        private List<GetInstanceGuestAccelerator> guestAccelerators;
        private String hostname;
        private String id;
        private String instanceId;
        private String labelFingerprint;
        private Map<String,String> labels;
        private String machineType;
        private Map<String,String> metadata;
        private String metadataFingerprint;
        private String metadataStartupScript;
        private String minCpuPlatform;
        private @Nullable String name;
        private List<GetInstanceNetworkInterface> networkInterfaces;
        private List<GetInstanceNetworkPerformanceConfig> networkPerformanceConfigs;
        private @Nullable String project;
        private List<GetInstanceReservationAffinity> reservationAffinities;
        private List<String> resourcePolicies;
        private List<GetInstanceScheduling> schedulings;
        private List<GetInstanceScratchDisk> scratchDisks;
        private @Nullable String selfLink;
        private List<GetInstanceServiceAccount> serviceAccounts;
        private List<GetInstanceShieldedInstanceConfig> shieldedInstanceConfigs;
        private List<String> tags;
        private String tagsFingerprint;
        private @Nullable String zone;

        public Builder() {
    	      // Empty
        }

        public Builder(GetInstanceResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.advancedMachineFeatures = defaults.advancedMachineFeatures;
    	      this.allowStoppingForUpdate = defaults.allowStoppingForUpdate;
    	      this.attachedDisks = defaults.attachedDisks;
    	      this.bootDisks = defaults.bootDisks;
    	      this.canIpForward = defaults.canIpForward;
    	      this.confidentialInstanceConfigs = defaults.confidentialInstanceConfigs;
    	      this.cpuPlatform = defaults.cpuPlatform;
    	      this.currentStatus = defaults.currentStatus;
    	      this.deletionProtection = defaults.deletionProtection;
    	      this.description = defaults.description;
    	      this.desiredStatus = defaults.desiredStatus;
    	      this.enableDisplay = defaults.enableDisplay;
    	      this.guestAccelerators = defaults.guestAccelerators;
    	      this.hostname = defaults.hostname;
    	      this.id = defaults.id;
    	      this.instanceId = defaults.instanceId;
    	      this.labelFingerprint = defaults.labelFingerprint;
    	      this.labels = defaults.labels;
    	      this.machineType = defaults.machineType;
    	      this.metadata = defaults.metadata;
    	      this.metadataFingerprint = defaults.metadataFingerprint;
    	      this.metadataStartupScript = defaults.metadataStartupScript;
    	      this.minCpuPlatform = defaults.minCpuPlatform;
    	      this.name = defaults.name;
    	      this.networkInterfaces = defaults.networkInterfaces;
    	      this.networkPerformanceConfigs = defaults.networkPerformanceConfigs;
    	      this.project = defaults.project;
    	      this.reservationAffinities = defaults.reservationAffinities;
    	      this.resourcePolicies = defaults.resourcePolicies;
    	      this.schedulings = defaults.schedulings;
    	      this.scratchDisks = defaults.scratchDisks;
    	      this.selfLink = defaults.selfLink;
    	      this.serviceAccounts = defaults.serviceAccounts;
    	      this.shieldedInstanceConfigs = defaults.shieldedInstanceConfigs;
    	      this.tags = defaults.tags;
    	      this.tagsFingerprint = defaults.tagsFingerprint;
    	      this.zone = defaults.zone;
        }

        public Builder advancedMachineFeatures(List<GetInstanceAdvancedMachineFeature> advancedMachineFeatures) {
            this.advancedMachineFeatures = Objects.requireNonNull(advancedMachineFeatures);
            return this;
        }

        public Builder allowStoppingForUpdate(Boolean allowStoppingForUpdate) {
            this.allowStoppingForUpdate = Objects.requireNonNull(allowStoppingForUpdate);
            return this;
        }

        public Builder attachedDisks(List<GetInstanceAttachedDisk> attachedDisks) {
            this.attachedDisks = Objects.requireNonNull(attachedDisks);
            return this;
        }

        public Builder bootDisks(List<GetInstanceBootDisk> bootDisks) {
            this.bootDisks = Objects.requireNonNull(bootDisks);
            return this;
        }

        public Builder canIpForward(Boolean canIpForward) {
            this.canIpForward = Objects.requireNonNull(canIpForward);
            return this;
        }

        public Builder confidentialInstanceConfigs(List<GetInstanceConfidentialInstanceConfig> confidentialInstanceConfigs) {
            this.confidentialInstanceConfigs = Objects.requireNonNull(confidentialInstanceConfigs);
            return this;
        }

        public Builder cpuPlatform(String cpuPlatform) {
            this.cpuPlatform = Objects.requireNonNull(cpuPlatform);
            return this;
        }

        public Builder currentStatus(String currentStatus) {
            this.currentStatus = Objects.requireNonNull(currentStatus);
            return this;
        }

        public Builder deletionProtection(Boolean deletionProtection) {
            this.deletionProtection = Objects.requireNonNull(deletionProtection);
            return this;
        }

        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }

        public Builder desiredStatus(String desiredStatus) {
            this.desiredStatus = Objects.requireNonNull(desiredStatus);
            return this;
        }

        public Builder enableDisplay(Boolean enableDisplay) {
            this.enableDisplay = Objects.requireNonNull(enableDisplay);
            return this;
        }

        public Builder guestAccelerators(List<GetInstanceGuestAccelerator> guestAccelerators) {
            this.guestAccelerators = Objects.requireNonNull(guestAccelerators);
            return this;
        }

        public Builder hostname(String hostname) {
            this.hostname = Objects.requireNonNull(hostname);
            return this;
        }

        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }

        public Builder instanceId(String instanceId) {
            this.instanceId = Objects.requireNonNull(instanceId);
            return this;
        }

        public Builder labelFingerprint(String labelFingerprint) {
            this.labelFingerprint = Objects.requireNonNull(labelFingerprint);
            return this;
        }

        public Builder labels(Map<String,String> labels) {
            this.labels = Objects.requireNonNull(labels);
            return this;
        }

        public Builder machineType(String machineType) {
            this.machineType = Objects.requireNonNull(machineType);
            return this;
        }

        public Builder metadata(Map<String,String> metadata) {
            this.metadata = Objects.requireNonNull(metadata);
            return this;
        }

        public Builder metadataFingerprint(String metadataFingerprint) {
            this.metadataFingerprint = Objects.requireNonNull(metadataFingerprint);
            return this;
        }

        public Builder metadataStartupScript(String metadataStartupScript) {
            this.metadataStartupScript = Objects.requireNonNull(metadataStartupScript);
            return this;
        }

        public Builder minCpuPlatform(String minCpuPlatform) {
            this.minCpuPlatform = Objects.requireNonNull(minCpuPlatform);
            return this;
        }

        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }

        public Builder networkInterfaces(List<GetInstanceNetworkInterface> networkInterfaces) {
            this.networkInterfaces = Objects.requireNonNull(networkInterfaces);
            return this;
        }

        public Builder networkPerformanceConfigs(List<GetInstanceNetworkPerformanceConfig> networkPerformanceConfigs) {
            this.networkPerformanceConfigs = Objects.requireNonNull(networkPerformanceConfigs);
            return this;
        }

        public Builder project(@Nullable String project) {
            this.project = project;
            return this;
        }

        public Builder reservationAffinities(List<GetInstanceReservationAffinity> reservationAffinities) {
            this.reservationAffinities = Objects.requireNonNull(reservationAffinities);
            return this;
        }

        public Builder resourcePolicies(List<String> resourcePolicies) {
            this.resourcePolicies = Objects.requireNonNull(resourcePolicies);
            return this;
        }

        public Builder schedulings(List<GetInstanceScheduling> schedulings) {
            this.schedulings = Objects.requireNonNull(schedulings);
            return this;
        }

        public Builder scratchDisks(List<GetInstanceScratchDisk> scratchDisks) {
            this.scratchDisks = Objects.requireNonNull(scratchDisks);
            return this;
        }

        public Builder selfLink(@Nullable String selfLink) {
            this.selfLink = selfLink;
            return this;
        }

        public Builder serviceAccounts(List<GetInstanceServiceAccount> serviceAccounts) {
            this.serviceAccounts = Objects.requireNonNull(serviceAccounts);
            return this;
        }

        public Builder shieldedInstanceConfigs(List<GetInstanceShieldedInstanceConfig> shieldedInstanceConfigs) {
            this.shieldedInstanceConfigs = Objects.requireNonNull(shieldedInstanceConfigs);
            return this;
        }

        public Builder tags(List<String> tags) {
            this.tags = Objects.requireNonNull(tags);
            return this;
        }

        public Builder tagsFingerprint(String tagsFingerprint) {
            this.tagsFingerprint = Objects.requireNonNull(tagsFingerprint);
            return this;
        }

        public Builder zone(@Nullable String zone) {
            this.zone = zone;
            return this;
        }
        public GetInstanceResult build() {
            return new GetInstanceResult(advancedMachineFeatures, allowStoppingForUpdate, attachedDisks, bootDisks, canIpForward, confidentialInstanceConfigs, cpuPlatform, currentStatus, deletionProtection, description, desiredStatus, enableDisplay, guestAccelerators, hostname, id, instanceId, labelFingerprint, labels, machineType, metadata, metadataFingerprint, metadataStartupScript, minCpuPlatform, name, networkInterfaces, networkPerformanceConfigs, project, reservationAffinities, resourcePolicies, schedulings, scratchDisks, selfLink, serviceAccounts, shieldedInstanceConfigs, tags, tagsFingerprint, zone);
        }
    }
}
