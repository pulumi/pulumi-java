// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.cloudrun.outputs;

import io.pulumi.core.annotations.OutputCustomType;
import java.lang.String;
import java.util.Objects;

@OutputCustomType
public final class GetServiceStatusCondition {
    private final String message;
    private final String reason;
    private final String status;
    private final String type;

    @OutputCustomType.Constructor({"message","reason","status","type"})
    private GetServiceStatusCondition(
        String message,
        String reason,
        String status,
        String type) {
        this.message = Objects.requireNonNull(message);
        this.reason = Objects.requireNonNull(reason);
        this.status = Objects.requireNonNull(status);
        this.type = Objects.requireNonNull(type);
    }

    public String getMessage() {
        return this.message;
    }
    public String getReason() {
        return this.reason;
    }
    public String getStatus() {
        return this.status;
    }
    public String getType() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetServiceStatusCondition defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String message;
        private String reason;
        private String status;
        private String type;

        public Builder() {
    	      // Empty
        }

        public Builder(GetServiceStatusCondition defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.message = defaults.message;
    	      this.reason = defaults.reason;
    	      this.status = defaults.status;
    	      this.type = defaults.type;
        }

        public Builder setMessage(String message) {
            this.message = Objects.requireNonNull(message);
            return this;
        }

        public Builder setReason(String reason) {
            this.reason = Objects.requireNonNull(reason);
            return this;
        }

        public Builder setStatus(String status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }

        public Builder setType(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public GetServiceStatusCondition build() {
            return new GetServiceStatusCondition(message, reason, status, type);
        }
    }
}
