// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.healthcare;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import io.pulumi.gcp.healthcare.inputs.Hl7StoreNotificationConfigArgs;
import io.pulumi.gcp.healthcare.inputs.Hl7StoreNotificationConfigsArgs;
import io.pulumi.gcp.healthcare.inputs.Hl7StoreParserConfigArgs;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class Hl7StoreArgs extends io.pulumi.resources.ResourceArgs {

    public static final Hl7StoreArgs Empty = new Hl7StoreArgs();

    @InputImport(name="dataset", required=true)
    private final Input<String> dataset;

    public Input<String> getDataset() {
        return this.dataset;
    }

    @InputImport(name="labels")
    private final @Nullable Input<Map<String,String>> labels;

    public Input<Map<String,String>> getLabels() {
        return this.labels == null ? Input.empty() : this.labels;
    }

    @InputImport(name="name")
    private final @Nullable Input<String> name;

    public Input<String> getName() {
        return this.name == null ? Input.empty() : this.name;
    }

    @InputImport(name="notificationConfig")
    private final @Nullable Input<Hl7StoreNotificationConfigArgs> notificationConfig;

    @Deprecated /* This field has been replaced by notificationConfigs */
    public Input<Hl7StoreNotificationConfigArgs> getNotificationConfig() {
        return this.notificationConfig == null ? Input.empty() : this.notificationConfig;
    }

    @InputImport(name="notificationConfigs")
    private final @Nullable Input<List<Hl7StoreNotificationConfigsArgs>> notificationConfigs;

    public Input<List<Hl7StoreNotificationConfigsArgs>> getNotificationConfigs() {
        return this.notificationConfigs == null ? Input.empty() : this.notificationConfigs;
    }

    @InputImport(name="parserConfig")
    private final @Nullable Input<Hl7StoreParserConfigArgs> parserConfig;

    public Input<Hl7StoreParserConfigArgs> getParserConfig() {
        return this.parserConfig == null ? Input.empty() : this.parserConfig;
    }

    public Hl7StoreArgs(
        Input<String> dataset,
        @Nullable Input<Map<String,String>> labels,
        @Nullable Input<String> name,
        @Nullable Input<Hl7StoreNotificationConfigArgs> notificationConfig,
        @Nullable Input<List<Hl7StoreNotificationConfigsArgs>> notificationConfigs,
        @Nullable Input<Hl7StoreParserConfigArgs> parserConfig) {
        this.dataset = Objects.requireNonNull(dataset, "expected parameter 'dataset' to be non-null");
        this.labels = labels;
        this.name = name;
        this.notificationConfig = notificationConfig;
        this.notificationConfigs = notificationConfigs;
        this.parserConfig = parserConfig;
    }

    private Hl7StoreArgs() {
        this.dataset = Input.empty();
        this.labels = Input.empty();
        this.name = Input.empty();
        this.notificationConfig = Input.empty();
        this.notificationConfigs = Input.empty();
        this.parserConfig = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(Hl7StoreArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<String> dataset;
        private @Nullable Input<Map<String,String>> labels;
        private @Nullable Input<String> name;
        private @Nullable Input<Hl7StoreNotificationConfigArgs> notificationConfig;
        private @Nullable Input<List<Hl7StoreNotificationConfigsArgs>> notificationConfigs;
        private @Nullable Input<Hl7StoreParserConfigArgs> parserConfig;

        public Builder() {
    	      // Empty
        }

        public Builder(Hl7StoreArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dataset = defaults.dataset;
    	      this.labels = defaults.labels;
    	      this.name = defaults.name;
    	      this.notificationConfig = defaults.notificationConfig;
    	      this.notificationConfigs = defaults.notificationConfigs;
    	      this.parserConfig = defaults.parserConfig;
        }

        public Builder setDataset(Input<String> dataset) {
            this.dataset = Objects.requireNonNull(dataset);
            return this;
        }

        public Builder setDataset(String dataset) {
            this.dataset = Input.of(Objects.requireNonNull(dataset));
            return this;
        }

        public Builder setLabels(@Nullable Input<Map<String,String>> labels) {
            this.labels = labels;
            return this;
        }

        public Builder setLabels(@Nullable Map<String,String> labels) {
            this.labels = Input.ofNullable(labels);
            return this;
        }

        public Builder setName(@Nullable Input<String> name) {
            this.name = name;
            return this;
        }

        public Builder setName(@Nullable String name) {
            this.name = Input.ofNullable(name);
            return this;
        }

        public Builder setNotificationConfig(@Nullable Input<Hl7StoreNotificationConfigArgs> notificationConfig) {
            this.notificationConfig = notificationConfig;
            return this;
        }

        public Builder setNotificationConfig(@Nullable Hl7StoreNotificationConfigArgs notificationConfig) {
            this.notificationConfig = Input.ofNullable(notificationConfig);
            return this;
        }

        public Builder setNotificationConfigs(@Nullable Input<List<Hl7StoreNotificationConfigsArgs>> notificationConfigs) {
            this.notificationConfigs = notificationConfigs;
            return this;
        }

        public Builder setNotificationConfigs(@Nullable List<Hl7StoreNotificationConfigsArgs> notificationConfigs) {
            this.notificationConfigs = Input.ofNullable(notificationConfigs);
            return this;
        }

        public Builder setParserConfig(@Nullable Input<Hl7StoreParserConfigArgs> parserConfig) {
            this.parserConfig = parserConfig;
            return this;
        }

        public Builder setParserConfig(@Nullable Hl7StoreParserConfigArgs parserConfig) {
            this.parserConfig = Input.ofNullable(parserConfig);
            return this;
        }

        public Hl7StoreArgs build() {
            return new Hl7StoreArgs(dataset, labels, name, notificationConfig, notificationConfigs, parserConfig);
        }
    }
}
