// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.compute.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import io.pulumi.gcp.compute.inputs.ResourcePolicySnapshotSchedulePolicyRetentionPolicyGetArgs;
import io.pulumi.gcp.compute.inputs.ResourcePolicySnapshotSchedulePolicyScheduleGetArgs;
import io.pulumi.gcp.compute.inputs.ResourcePolicySnapshotSchedulePolicySnapshotPropertiesGetArgs;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ResourcePolicySnapshotSchedulePolicyGetArgs extends io.pulumi.resources.ResourceArgs {

    public static final ResourcePolicySnapshotSchedulePolicyGetArgs Empty = new ResourcePolicySnapshotSchedulePolicyGetArgs();

    /**
     * Retention policy applied to snapshots created by this resource policy.
     * Structure is documented below.
     * 
     */
    @InputImport(name="retentionPolicy")
        private final @Nullable Input<ResourcePolicySnapshotSchedulePolicyRetentionPolicyGetArgs> retentionPolicy;

    public Input<ResourcePolicySnapshotSchedulePolicyRetentionPolicyGetArgs> getRetentionPolicy() {
        return this.retentionPolicy == null ? Input.empty() : this.retentionPolicy;
    }

    /**
     * Specifies the frequency for the operation, using the unix-cron format.
     * 
     */
    @InputImport(name="schedule", required=true)
        private final Input<ResourcePolicySnapshotSchedulePolicyScheduleGetArgs> schedule;

    public Input<ResourcePolicySnapshotSchedulePolicyScheduleGetArgs> getSchedule() {
        return this.schedule;
    }

    /**
     * Properties with which the snapshots are created, such as labels.
     * Structure is documented below.
     * 
     */
    @InputImport(name="snapshotProperties")
        private final @Nullable Input<ResourcePolicySnapshotSchedulePolicySnapshotPropertiesGetArgs> snapshotProperties;

    public Input<ResourcePolicySnapshotSchedulePolicySnapshotPropertiesGetArgs> getSnapshotProperties() {
        return this.snapshotProperties == null ? Input.empty() : this.snapshotProperties;
    }

    public ResourcePolicySnapshotSchedulePolicyGetArgs(
        @Nullable Input<ResourcePolicySnapshotSchedulePolicyRetentionPolicyGetArgs> retentionPolicy,
        Input<ResourcePolicySnapshotSchedulePolicyScheduleGetArgs> schedule,
        @Nullable Input<ResourcePolicySnapshotSchedulePolicySnapshotPropertiesGetArgs> snapshotProperties) {
        this.retentionPolicy = retentionPolicy;
        this.schedule = Objects.requireNonNull(schedule, "expected parameter 'schedule' to be non-null");
        this.snapshotProperties = snapshotProperties;
    }

    private ResourcePolicySnapshotSchedulePolicyGetArgs() {
        this.retentionPolicy = Input.empty();
        this.schedule = Input.empty();
        this.snapshotProperties = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ResourcePolicySnapshotSchedulePolicyGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<ResourcePolicySnapshotSchedulePolicyRetentionPolicyGetArgs> retentionPolicy;
        private Input<ResourcePolicySnapshotSchedulePolicyScheduleGetArgs> schedule;
        private @Nullable Input<ResourcePolicySnapshotSchedulePolicySnapshotPropertiesGetArgs> snapshotProperties;

        public Builder() {
    	      // Empty
        }

        public Builder(ResourcePolicySnapshotSchedulePolicyGetArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.retentionPolicy = defaults.retentionPolicy;
    	      this.schedule = defaults.schedule;
    	      this.snapshotProperties = defaults.snapshotProperties;
        }

        public Builder setRetentionPolicy(@Nullable Input<ResourcePolicySnapshotSchedulePolicyRetentionPolicyGetArgs> retentionPolicy) {
            this.retentionPolicy = retentionPolicy;
            return this;
        }

        public Builder setRetentionPolicy(@Nullable ResourcePolicySnapshotSchedulePolicyRetentionPolicyGetArgs retentionPolicy) {
            this.retentionPolicy = Input.ofNullable(retentionPolicy);
            return this;
        }

        public Builder setSchedule(Input<ResourcePolicySnapshotSchedulePolicyScheduleGetArgs> schedule) {
            this.schedule = Objects.requireNonNull(schedule);
            return this;
        }

        public Builder setSchedule(ResourcePolicySnapshotSchedulePolicyScheduleGetArgs schedule) {
            this.schedule = Input.of(Objects.requireNonNull(schedule));
            return this;
        }

        public Builder setSnapshotProperties(@Nullable Input<ResourcePolicySnapshotSchedulePolicySnapshotPropertiesGetArgs> snapshotProperties) {
            this.snapshotProperties = snapshotProperties;
            return this;
        }

        public Builder setSnapshotProperties(@Nullable ResourcePolicySnapshotSchedulePolicySnapshotPropertiesGetArgs snapshotProperties) {
            this.snapshotProperties = Input.ofNullable(snapshotProperties);
            return this;
        }
        public ResourcePolicySnapshotSchedulePolicyGetArgs build() {
            return new ResourcePolicySnapshotSchedulePolicyGetArgs(retentionPolicy, schedule, snapshotProperties);
        }
    }
}
