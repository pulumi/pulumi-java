// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.compute.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import io.pulumi.gcp.compute.inputs.InstanceTemplateDiskDiskEncryptionKeyGetArgs;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class InstanceTemplateDiskGetArgs extends io.pulumi.resources.ResourceArgs {

    public static final InstanceTemplateDiskGetArgs Empty = new InstanceTemplateDiskGetArgs();

    @InputImport(name="autoDelete")
    private final @Nullable Input<Boolean> autoDelete;

    public Input<Boolean> getAutoDelete() {
        return this.autoDelete == null ? Input.empty() : this.autoDelete;
    }

    @InputImport(name="boot")
    private final @Nullable Input<Boolean> boot;

    public Input<Boolean> getBoot() {
        return this.boot == null ? Input.empty() : this.boot;
    }

    @InputImport(name="deviceName")
    private final @Nullable Input<String> deviceName;

    public Input<String> getDeviceName() {
        return this.deviceName == null ? Input.empty() : this.deviceName;
    }

    @InputImport(name="diskEncryptionKey")
    private final @Nullable Input<InstanceTemplateDiskDiskEncryptionKeyGetArgs> diskEncryptionKey;

    public Input<InstanceTemplateDiskDiskEncryptionKeyGetArgs> getDiskEncryptionKey() {
        return this.diskEncryptionKey == null ? Input.empty() : this.diskEncryptionKey;
    }

    @InputImport(name="diskName")
    private final @Nullable Input<String> diskName;

    public Input<String> getDiskName() {
        return this.diskName == null ? Input.empty() : this.diskName;
    }

    @InputImport(name="diskSizeGb")
    private final @Nullable Input<Integer> diskSizeGb;

    public Input<Integer> getDiskSizeGb() {
        return this.diskSizeGb == null ? Input.empty() : this.diskSizeGb;
    }

    @InputImport(name="diskType")
    private final @Nullable Input<String> diskType;

    public Input<String> getDiskType() {
        return this.diskType == null ? Input.empty() : this.diskType;
    }

    @InputImport(name="interface")
    private final @Nullable Input<String> $interface;

    public Input<String> get$interface() {
        return this.$interface == null ? Input.empty() : this.$interface;
    }

    @InputImport(name="labels")
    private final @Nullable Input<Map<String,String>> labels;

    public Input<Map<String,String>> getLabels() {
        return this.labels == null ? Input.empty() : this.labels;
    }

    @InputImport(name="mode")
    private final @Nullable Input<String> mode;

    public Input<String> getMode() {
        return this.mode == null ? Input.empty() : this.mode;
    }

    @InputImport(name="resourcePolicies")
    private final @Nullable Input<String> resourcePolicies;

    public Input<String> getResourcePolicies() {
        return this.resourcePolicies == null ? Input.empty() : this.resourcePolicies;
    }

    @InputImport(name="source")
    private final @Nullable Input<String> source;

    public Input<String> getSource() {
        return this.source == null ? Input.empty() : this.source;
    }

    @InputImport(name="sourceImage")
    private final @Nullable Input<String> sourceImage;

    public Input<String> getSourceImage() {
        return this.sourceImage == null ? Input.empty() : this.sourceImage;
    }

    @InputImport(name="type")
    private final @Nullable Input<String> type;

    public Input<String> getType() {
        return this.type == null ? Input.empty() : this.type;
    }

    public InstanceTemplateDiskGetArgs(
        @Nullable Input<Boolean> autoDelete,
        @Nullable Input<Boolean> boot,
        @Nullable Input<String> deviceName,
        @Nullable Input<InstanceTemplateDiskDiskEncryptionKeyGetArgs> diskEncryptionKey,
        @Nullable Input<String> diskName,
        @Nullable Input<Integer> diskSizeGb,
        @Nullable Input<String> diskType,
        @Nullable Input<String> $interface,
        @Nullable Input<Map<String,String>> labels,
        @Nullable Input<String> mode,
        @Nullable Input<String> resourcePolicies,
        @Nullable Input<String> source,
        @Nullable Input<String> sourceImage,
        @Nullable Input<String> type) {
        this.autoDelete = autoDelete;
        this.boot = boot;
        this.deviceName = deviceName;
        this.diskEncryptionKey = diskEncryptionKey;
        this.diskName = diskName;
        this.diskSizeGb = diskSizeGb;
        this.diskType = diskType;
        this.$interface = $interface;
        this.labels = labels;
        this.mode = mode;
        this.resourcePolicies = resourcePolicies;
        this.source = source;
        this.sourceImage = sourceImage;
        this.type = type;
    }

    private InstanceTemplateDiskGetArgs() {
        this.autoDelete = Input.empty();
        this.boot = Input.empty();
        this.deviceName = Input.empty();
        this.diskEncryptionKey = Input.empty();
        this.diskName = Input.empty();
        this.diskSizeGb = Input.empty();
        this.diskType = Input.empty();
        this.$interface = Input.empty();
        this.labels = Input.empty();
        this.mode = Input.empty();
        this.resourcePolicies = Input.empty();
        this.source = Input.empty();
        this.sourceImage = Input.empty();
        this.type = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(InstanceTemplateDiskGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<Boolean> autoDelete;
        private @Nullable Input<Boolean> boot;
        private @Nullable Input<String> deviceName;
        private @Nullable Input<InstanceTemplateDiskDiskEncryptionKeyGetArgs> diskEncryptionKey;
        private @Nullable Input<String> diskName;
        private @Nullable Input<Integer> diskSizeGb;
        private @Nullable Input<String> diskType;
        private @Nullable Input<String> $interface;
        private @Nullable Input<Map<String,String>> labels;
        private @Nullable Input<String> mode;
        private @Nullable Input<String> resourcePolicies;
        private @Nullable Input<String> source;
        private @Nullable Input<String> sourceImage;
        private @Nullable Input<String> type;

        public Builder() {
    	      // Empty
        }

        public Builder(InstanceTemplateDiskGetArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.autoDelete = defaults.autoDelete;
    	      this.boot = defaults.boot;
    	      this.deviceName = defaults.deviceName;
    	      this.diskEncryptionKey = defaults.diskEncryptionKey;
    	      this.diskName = defaults.diskName;
    	      this.diskSizeGb = defaults.diskSizeGb;
    	      this.diskType = defaults.diskType;
    	      this.$interface = defaults.$interface;
    	      this.labels = defaults.labels;
    	      this.mode = defaults.mode;
    	      this.resourcePolicies = defaults.resourcePolicies;
    	      this.source = defaults.source;
    	      this.sourceImage = defaults.sourceImage;
    	      this.type = defaults.type;
        }

        public Builder setAutoDelete(@Nullable Input<Boolean> autoDelete) {
            this.autoDelete = autoDelete;
            return this;
        }

        public Builder setAutoDelete(@Nullable Boolean autoDelete) {
            this.autoDelete = Input.ofNullable(autoDelete);
            return this;
        }

        public Builder setBoot(@Nullable Input<Boolean> boot) {
            this.boot = boot;
            return this;
        }

        public Builder setBoot(@Nullable Boolean boot) {
            this.boot = Input.ofNullable(boot);
            return this;
        }

        public Builder setDeviceName(@Nullable Input<String> deviceName) {
            this.deviceName = deviceName;
            return this;
        }

        public Builder setDeviceName(@Nullable String deviceName) {
            this.deviceName = Input.ofNullable(deviceName);
            return this;
        }

        public Builder setDiskEncryptionKey(@Nullable Input<InstanceTemplateDiskDiskEncryptionKeyGetArgs> diskEncryptionKey) {
            this.diskEncryptionKey = diskEncryptionKey;
            return this;
        }

        public Builder setDiskEncryptionKey(@Nullable InstanceTemplateDiskDiskEncryptionKeyGetArgs diskEncryptionKey) {
            this.diskEncryptionKey = Input.ofNullable(diskEncryptionKey);
            return this;
        }

        public Builder setDiskName(@Nullable Input<String> diskName) {
            this.diskName = diskName;
            return this;
        }

        public Builder setDiskName(@Nullable String diskName) {
            this.diskName = Input.ofNullable(diskName);
            return this;
        }

        public Builder setDiskSizeGb(@Nullable Input<Integer> diskSizeGb) {
            this.diskSizeGb = diskSizeGb;
            return this;
        }

        public Builder setDiskSizeGb(@Nullable Integer diskSizeGb) {
            this.diskSizeGb = Input.ofNullable(diskSizeGb);
            return this;
        }

        public Builder setDiskType(@Nullable Input<String> diskType) {
            this.diskType = diskType;
            return this;
        }

        public Builder setDiskType(@Nullable String diskType) {
            this.diskType = Input.ofNullable(diskType);
            return this;
        }

        public Builder set$interface(@Nullable Input<String> $interface) {
            this.$interface = $interface;
            return this;
        }

        public Builder set$interface(@Nullable String $interface) {
            this.$interface = Input.ofNullable($interface);
            return this;
        }

        public Builder setLabels(@Nullable Input<Map<String,String>> labels) {
            this.labels = labels;
            return this;
        }

        public Builder setLabels(@Nullable Map<String,String> labels) {
            this.labels = Input.ofNullable(labels);
            return this;
        }

        public Builder setMode(@Nullable Input<String> mode) {
            this.mode = mode;
            return this;
        }

        public Builder setMode(@Nullable String mode) {
            this.mode = Input.ofNullable(mode);
            return this;
        }

        public Builder setResourcePolicies(@Nullable Input<String> resourcePolicies) {
            this.resourcePolicies = resourcePolicies;
            return this;
        }

        public Builder setResourcePolicies(@Nullable String resourcePolicies) {
            this.resourcePolicies = Input.ofNullable(resourcePolicies);
            return this;
        }

        public Builder setSource(@Nullable Input<String> source) {
            this.source = source;
            return this;
        }

        public Builder setSource(@Nullable String source) {
            this.source = Input.ofNullable(source);
            return this;
        }

        public Builder setSourceImage(@Nullable Input<String> sourceImage) {
            this.sourceImage = sourceImage;
            return this;
        }

        public Builder setSourceImage(@Nullable String sourceImage) {
            this.sourceImage = Input.ofNullable(sourceImage);
            return this;
        }

        public Builder setType(@Nullable Input<String> type) {
            this.type = type;
            return this;
        }

        public Builder setType(@Nullable String type) {
            this.type = Input.ofNullable(type);
            return this;
        }

        public InstanceTemplateDiskGetArgs build() {
            return new InstanceTemplateDiskGetArgs(autoDelete, boot, deviceName, diskEncryptionKey, diskName, diskSizeGb, diskType, $interface, labels, mode, resourcePolicies, source, sourceImage, type);
        }
    }
}
