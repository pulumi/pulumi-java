// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.secretmanager.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class SecretVersionState extends io.pulumi.resources.ResourceArgs {

    public static final SecretVersionState Empty = new SecretVersionState();

    /**
     * The time at which the Secret was created.
     * 
     */
    @Import(name="createTime")
      private final @Nullable Output<String> createTime;

    public Output<String> createTime() {
        return this.createTime == null ? Codegen.empty() : this.createTime;
    }

    /**
     * The time at which the Secret was destroyed. Only present if state is DESTROYED.
     * 
     */
    @Import(name="destroyTime")
      private final @Nullable Output<String> destroyTime;

    public Output<String> destroyTime() {
        return this.destroyTime == null ? Codegen.empty() : this.destroyTime;
    }

    /**
     * The current state of the SecretVersion.
     * 
     */
    @Import(name="enabled")
      private final @Nullable Output<Boolean> enabled;

    public Output<Boolean> enabled() {
        return this.enabled == null ? Codegen.empty() : this.enabled;
    }

    /**
     * The resource name of the SecretVersion. Format: 'projects/{{project}}/secrets/{{secret_id}}/versions/{{version}}'
     * 
     */
    @Import(name="name")
      private final @Nullable Output<String> name;

    public Output<String> name() {
        return this.name == null ? Codegen.empty() : this.name;
    }

    /**
     * Secret Manager secret resource
     * 
     */
    @Import(name="secret")
      private final @Nullable Output<String> secret;

    public Output<String> secret() {
        return this.secret == null ? Codegen.empty() : this.secret;
    }

    /**
     * The secret data. Must be no larger than 64KiB.
     * **Note**: This property is sensitive and will not be displayed in the plan.
     * 
     */
    @Import(name="secretData")
      private final @Nullable Output<String> secretData;

    public Output<String> secretData() {
        return this.secretData == null ? Codegen.empty() : this.secretData;
    }

    public SecretVersionState(
        @Nullable Output<String> createTime,
        @Nullable Output<String> destroyTime,
        @Nullable Output<Boolean> enabled,
        @Nullable Output<String> name,
        @Nullable Output<String> secret,
        @Nullable Output<String> secretData) {
        this.createTime = createTime;
        this.destroyTime = destroyTime;
        this.enabled = enabled;
        this.name = name;
        this.secret = secret;
        this.secretData = secretData;
    }

    private SecretVersionState() {
        this.createTime = Codegen.empty();
        this.destroyTime = Codegen.empty();
        this.enabled = Codegen.empty();
        this.name = Codegen.empty();
        this.secret = Codegen.empty();
        this.secretData = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SecretVersionState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> createTime;
        private @Nullable Output<String> destroyTime;
        private @Nullable Output<Boolean> enabled;
        private @Nullable Output<String> name;
        private @Nullable Output<String> secret;
        private @Nullable Output<String> secretData;

        public Builder() {
    	      // Empty
        }

        public Builder(SecretVersionState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.createTime = defaults.createTime;
    	      this.destroyTime = defaults.destroyTime;
    	      this.enabled = defaults.enabled;
    	      this.name = defaults.name;
    	      this.secret = defaults.secret;
    	      this.secretData = defaults.secretData;
        }

        public Builder createTime(@Nullable Output<String> createTime) {
            this.createTime = createTime;
            return this;
        }
        public Builder createTime(@Nullable String createTime) {
            this.createTime = Codegen.ofNullable(createTime);
            return this;
        }
        public Builder destroyTime(@Nullable Output<String> destroyTime) {
            this.destroyTime = destroyTime;
            return this;
        }
        public Builder destroyTime(@Nullable String destroyTime) {
            this.destroyTime = Codegen.ofNullable(destroyTime);
            return this;
        }
        public Builder enabled(@Nullable Output<Boolean> enabled) {
            this.enabled = enabled;
            return this;
        }
        public Builder enabled(@Nullable Boolean enabled) {
            this.enabled = Codegen.ofNullable(enabled);
            return this;
        }
        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }
        public Builder name(@Nullable String name) {
            this.name = Codegen.ofNullable(name);
            return this;
        }
        public Builder secret(@Nullable Output<String> secret) {
            this.secret = secret;
            return this;
        }
        public Builder secret(@Nullable String secret) {
            this.secret = Codegen.ofNullable(secret);
            return this;
        }
        public Builder secretData(@Nullable Output<String> secretData) {
            this.secretData = secretData;
            return this;
        }
        public Builder secretData(@Nullable String secretData) {
            this.secretData = Codegen.ofNullable(secretData);
            return this;
        }        public SecretVersionState build() {
            return new SecretVersionState(createTime, destroyTime, enabled, name, secret, secretData);
        }
    }
}
