// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.dataproc.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import io.pulumi.gcp.dataproc.inputs.WorkflowTemplateJobGetArgs;
import io.pulumi.gcp.dataproc.inputs.WorkflowTemplateParameterGetArgs;
import io.pulumi.gcp.dataproc.inputs.WorkflowTemplatePlacementGetArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class WorkflowTemplateState extends io.pulumi.resources.ResourceArgs {

    public static final WorkflowTemplateState Empty = new WorkflowTemplateState();

    @InputImport(name="createTime")
    private final @Nullable Input<String> createTime;

    public Input<String> getCreateTime() {
        return this.createTime == null ? Input.empty() : this.createTime;
    }

    @InputImport(name="dagTimeout")
    private final @Nullable Input<String> dagTimeout;

    public Input<String> getDagTimeout() {
        return this.dagTimeout == null ? Input.empty() : this.dagTimeout;
    }

    @InputImport(name="jobs")
    private final @Nullable Input<List<WorkflowTemplateJobGetArgs>> jobs;

    public Input<List<WorkflowTemplateJobGetArgs>> getJobs() {
        return this.jobs == null ? Input.empty() : this.jobs;
    }

    @InputImport(name="labels")
    private final @Nullable Input<Map<String,String>> labels;

    public Input<Map<String,String>> getLabels() {
        return this.labels == null ? Input.empty() : this.labels;
    }

    @InputImport(name="location")
    private final @Nullable Input<String> location;

    public Input<String> getLocation() {
        return this.location == null ? Input.empty() : this.location;
    }

    @InputImport(name="name")
    private final @Nullable Input<String> name;

    public Input<String> getName() {
        return this.name == null ? Input.empty() : this.name;
    }

    @InputImport(name="parameters")
    private final @Nullable Input<List<WorkflowTemplateParameterGetArgs>> parameters;

    public Input<List<WorkflowTemplateParameterGetArgs>> getParameters() {
        return this.parameters == null ? Input.empty() : this.parameters;
    }

    @InputImport(name="placement")
    private final @Nullable Input<WorkflowTemplatePlacementGetArgs> placement;

    public Input<WorkflowTemplatePlacementGetArgs> getPlacement() {
        return this.placement == null ? Input.empty() : this.placement;
    }

    @InputImport(name="project")
    private final @Nullable Input<String> project;

    public Input<String> getProject() {
        return this.project == null ? Input.empty() : this.project;
    }

    @InputImport(name="updateTime")
    private final @Nullable Input<String> updateTime;

    public Input<String> getUpdateTime() {
        return this.updateTime == null ? Input.empty() : this.updateTime;
    }

    @InputImport(name="version")
    private final @Nullable Input<Integer> version;

    @Deprecated /* version is not useful as a configurable field, and will be removed in the future. */
    public Input<Integer> getVersion() {
        return this.version == null ? Input.empty() : this.version;
    }

    public WorkflowTemplateState(
        @Nullable Input<String> createTime,
        @Nullable Input<String> dagTimeout,
        @Nullable Input<List<WorkflowTemplateJobGetArgs>> jobs,
        @Nullable Input<Map<String,String>> labels,
        @Nullable Input<String> location,
        @Nullable Input<String> name,
        @Nullable Input<List<WorkflowTemplateParameterGetArgs>> parameters,
        @Nullable Input<WorkflowTemplatePlacementGetArgs> placement,
        @Nullable Input<String> project,
        @Nullable Input<String> updateTime,
        @Nullable Input<Integer> version) {
        this.createTime = createTime;
        this.dagTimeout = dagTimeout;
        this.jobs = jobs;
        this.labels = labels;
        this.location = location;
        this.name = name;
        this.parameters = parameters;
        this.placement = placement;
        this.project = project;
        this.updateTime = updateTime;
        this.version = version;
    }

    private WorkflowTemplateState() {
        this.createTime = Input.empty();
        this.dagTimeout = Input.empty();
        this.jobs = Input.empty();
        this.labels = Input.empty();
        this.location = Input.empty();
        this.name = Input.empty();
        this.parameters = Input.empty();
        this.placement = Input.empty();
        this.project = Input.empty();
        this.updateTime = Input.empty();
        this.version = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(WorkflowTemplateState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> createTime;
        private @Nullable Input<String> dagTimeout;
        private @Nullable Input<List<WorkflowTemplateJobGetArgs>> jobs;
        private @Nullable Input<Map<String,String>> labels;
        private @Nullable Input<String> location;
        private @Nullable Input<String> name;
        private @Nullable Input<List<WorkflowTemplateParameterGetArgs>> parameters;
        private @Nullable Input<WorkflowTemplatePlacementGetArgs> placement;
        private @Nullable Input<String> project;
        private @Nullable Input<String> updateTime;
        private @Nullable Input<Integer> version;

        public Builder() {
    	      // Empty
        }

        public Builder(WorkflowTemplateState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.createTime = defaults.createTime;
    	      this.dagTimeout = defaults.dagTimeout;
    	      this.jobs = defaults.jobs;
    	      this.labels = defaults.labels;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.parameters = defaults.parameters;
    	      this.placement = defaults.placement;
    	      this.project = defaults.project;
    	      this.updateTime = defaults.updateTime;
    	      this.version = defaults.version;
        }

        public Builder setCreateTime(@Nullable Input<String> createTime) {
            this.createTime = createTime;
            return this;
        }

        public Builder setCreateTime(@Nullable String createTime) {
            this.createTime = Input.ofNullable(createTime);
            return this;
        }

        public Builder setDagTimeout(@Nullable Input<String> dagTimeout) {
            this.dagTimeout = dagTimeout;
            return this;
        }

        public Builder setDagTimeout(@Nullable String dagTimeout) {
            this.dagTimeout = Input.ofNullable(dagTimeout);
            return this;
        }

        public Builder setJobs(@Nullable Input<List<WorkflowTemplateJobGetArgs>> jobs) {
            this.jobs = jobs;
            return this;
        }

        public Builder setJobs(@Nullable List<WorkflowTemplateJobGetArgs> jobs) {
            this.jobs = Input.ofNullable(jobs);
            return this;
        }

        public Builder setLabels(@Nullable Input<Map<String,String>> labels) {
            this.labels = labels;
            return this;
        }

        public Builder setLabels(@Nullable Map<String,String> labels) {
            this.labels = Input.ofNullable(labels);
            return this;
        }

        public Builder setLocation(@Nullable Input<String> location) {
            this.location = location;
            return this;
        }

        public Builder setLocation(@Nullable String location) {
            this.location = Input.ofNullable(location);
            return this;
        }

        public Builder setName(@Nullable Input<String> name) {
            this.name = name;
            return this;
        }

        public Builder setName(@Nullable String name) {
            this.name = Input.ofNullable(name);
            return this;
        }

        public Builder setParameters(@Nullable Input<List<WorkflowTemplateParameterGetArgs>> parameters) {
            this.parameters = parameters;
            return this;
        }

        public Builder setParameters(@Nullable List<WorkflowTemplateParameterGetArgs> parameters) {
            this.parameters = Input.ofNullable(parameters);
            return this;
        }

        public Builder setPlacement(@Nullable Input<WorkflowTemplatePlacementGetArgs> placement) {
            this.placement = placement;
            return this;
        }

        public Builder setPlacement(@Nullable WorkflowTemplatePlacementGetArgs placement) {
            this.placement = Input.ofNullable(placement);
            return this;
        }

        public Builder setProject(@Nullable Input<String> project) {
            this.project = project;
            return this;
        }

        public Builder setProject(@Nullable String project) {
            this.project = Input.ofNullable(project);
            return this;
        }

        public Builder setUpdateTime(@Nullable Input<String> updateTime) {
            this.updateTime = updateTime;
            return this;
        }

        public Builder setUpdateTime(@Nullable String updateTime) {
            this.updateTime = Input.ofNullable(updateTime);
            return this;
        }

        public Builder setVersion(@Nullable Input<Integer> version) {
            this.version = version;
            return this;
        }

        public Builder setVersion(@Nullable Integer version) {
            this.version = Input.ofNullable(version);
            return this;
        }

        public WorkflowTemplateState build() {
            return new WorkflowTemplateState(createTime, dagTimeout, jobs, labels, location, name, parameters, placement, project, updateTime, version);
        }
    }
}
