// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.organizations;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import io.pulumi.gcp.organizations.inputs.IamAuditConfigAuditLogConfigArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class IamAuditConfigArgs extends io.pulumi.resources.ResourceArgs {

    public static final IamAuditConfigArgs Empty = new IamAuditConfigArgs();

    @InputImport(name="auditLogConfigs", required=true)
    private final Input<List<IamAuditConfigAuditLogConfigArgs>> auditLogConfigs;

    public Input<List<IamAuditConfigAuditLogConfigArgs>> getAuditLogConfigs() {
        return this.auditLogConfigs;
    }

    @InputImport(name="orgId", required=true)
    private final Input<String> orgId;

    public Input<String> getOrgId() {
        return this.orgId;
    }

    @InputImport(name="service", required=true)
    private final Input<String> service;

    public Input<String> getService() {
        return this.service;
    }

    public IamAuditConfigArgs(
        Input<List<IamAuditConfigAuditLogConfigArgs>> auditLogConfigs,
        Input<String> orgId,
        Input<String> service) {
        this.auditLogConfigs = Objects.requireNonNull(auditLogConfigs, "expected parameter 'auditLogConfigs' to be non-null");
        this.orgId = Objects.requireNonNull(orgId, "expected parameter 'orgId' to be non-null");
        this.service = Objects.requireNonNull(service, "expected parameter 'service' to be non-null");
    }

    private IamAuditConfigArgs() {
        this.auditLogConfigs = Input.empty();
        this.orgId = Input.empty();
        this.service = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(IamAuditConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<List<IamAuditConfigAuditLogConfigArgs>> auditLogConfigs;
        private Input<String> orgId;
        private Input<String> service;

        public Builder() {
    	      // Empty
        }

        public Builder(IamAuditConfigArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.auditLogConfigs = defaults.auditLogConfigs;
    	      this.orgId = defaults.orgId;
    	      this.service = defaults.service;
        }

        public Builder setAuditLogConfigs(Input<List<IamAuditConfigAuditLogConfigArgs>> auditLogConfigs) {
            this.auditLogConfigs = Objects.requireNonNull(auditLogConfigs);
            return this;
        }

        public Builder setAuditLogConfigs(List<IamAuditConfigAuditLogConfigArgs> auditLogConfigs) {
            this.auditLogConfigs = Input.of(Objects.requireNonNull(auditLogConfigs));
            return this;
        }

        public Builder setOrgId(Input<String> orgId) {
            this.orgId = Objects.requireNonNull(orgId);
            return this;
        }

        public Builder setOrgId(String orgId) {
            this.orgId = Input.of(Objects.requireNonNull(orgId));
            return this;
        }

        public Builder setService(Input<String> service) {
            this.service = Objects.requireNonNull(service);
            return this;
        }

        public Builder setService(String service) {
            this.service = Input.of(Objects.requireNonNull(service));
            return this;
        }

        public IamAuditConfigArgs build() {
            return new IamAuditConfigArgs(auditLogConfigs, orgId, service);
        }
    }
}
