// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.iap;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;


public final class ClientArgs extends io.pulumi.resources.ResourceArgs {

    public static final ClientArgs Empty = new ClientArgs();

    /**
     * Identifier of the brand to which this client
     * is attached to. The format is
     * `projects/{project_number}/brands/{brand_id}/identityAwareProxyClients/{client_id}`.
     * 
     */
    @InputImport(name="brand", required=true)
        private final Input<String> brand;

    public Input<String> getBrand() {
        return this.brand;
    }

    /**
     * Human-friendly name given to the OAuth client.
     * 
     */
    @InputImport(name="displayName", required=true)
        private final Input<String> displayName;

    public Input<String> getDisplayName() {
        return this.displayName;
    }

    public ClientArgs(
        Input<String> brand,
        Input<String> displayName) {
        this.brand = Objects.requireNonNull(brand, "expected parameter 'brand' to be non-null");
        this.displayName = Objects.requireNonNull(displayName, "expected parameter 'displayName' to be non-null");
    }

    private ClientArgs() {
        this.brand = Input.empty();
        this.displayName = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ClientArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<String> brand;
        private Input<String> displayName;

        public Builder() {
    	      // Empty
        }

        public Builder(ClientArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.brand = defaults.brand;
    	      this.displayName = defaults.displayName;
        }

        public Builder setBrand(Input<String> brand) {
            this.brand = Objects.requireNonNull(brand);
            return this;
        }

        public Builder setBrand(String brand) {
            this.brand = Input.of(Objects.requireNonNull(brand));
            return this;
        }

        public Builder setDisplayName(Input<String> displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }

        public Builder setDisplayName(String displayName) {
            this.displayName = Input.of(Objects.requireNonNull(displayName));
            return this;
        }
        public ClientArgs build() {
            return new ClientArgs(brand, displayName);
        }
    }
}
