// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.endpoints;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ServiceArgs extends io.pulumi.resources.ResourceArgs {

    public static final ServiceArgs Empty = new ServiceArgs();

    /**
     * The full text of the Service Config YAML file (Example located here). If provided, must also provide
     * protoc_output_base64. open_api config must not be provided.
     * 
     */
    @InputImport(name="grpcConfig")
    private final @Nullable Input<String> grpcConfig;

    public Input<String> getGrpcConfig() {
        return this.grpcConfig == null ? Input.empty() : this.grpcConfig;
    }

    /**
     * The full text of the OpenAPI YAML configuration as described here. Either this, or both of grpc_config and
     * protoc_output_base64 must be specified.
     * 
     */
    @InputImport(name="openapiConfig")
    private final @Nullable Input<String> openapiConfig;

    public Input<String> getOpenapiConfig() {
        return this.openapiConfig == null ? Input.empty() : this.openapiConfig;
    }

    /**
     * The project ID that the service belongs to. If not provided, provider project is used.
     * 
     */
    @InputImport(name="project")
    private final @Nullable Input<String> project;

    public Input<String> getProject() {
        return this.project == null ? Input.empty() : this.project;
    }

    /**
     * The full contents of the Service Descriptor File generated by protoc. This should be a compiled .pb file,
     * base64-encoded.
     * 
     */
    @InputImport(name="protocOutputBase64")
    private final @Nullable Input<String> protocOutputBase64;

    public Input<String> getProtocOutputBase64() {
        return this.protocOutputBase64 == null ? Input.empty() : this.protocOutputBase64;
    }

    /**
     * The name of the service. Usually of the form $apiname.endpoints.$projectid.cloud.goog.
     * 
     */
    @InputImport(name="serviceName", required=true)
    private final Input<String> serviceName;

    public Input<String> getServiceName() {
        return this.serviceName;
    }

    public ServiceArgs(
        @Nullable Input<String> grpcConfig,
        @Nullable Input<String> openapiConfig,
        @Nullable Input<String> project,
        @Nullable Input<String> protocOutputBase64,
        Input<String> serviceName) {
        this.grpcConfig = grpcConfig;
        this.openapiConfig = openapiConfig;
        this.project = project;
        this.protocOutputBase64 = protocOutputBase64;
        this.serviceName = Objects.requireNonNull(serviceName, "expected parameter 'serviceName' to be non-null");
    }

    private ServiceArgs() {
        this.grpcConfig = Input.empty();
        this.openapiConfig = Input.empty();
        this.project = Input.empty();
        this.protocOutputBase64 = Input.empty();
        this.serviceName = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ServiceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> grpcConfig;
        private @Nullable Input<String> openapiConfig;
        private @Nullable Input<String> project;
        private @Nullable Input<String> protocOutputBase64;
        private Input<String> serviceName;

        public Builder() {
    	      // Empty
        }

        public Builder(ServiceArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.grpcConfig = defaults.grpcConfig;
    	      this.openapiConfig = defaults.openapiConfig;
    	      this.project = defaults.project;
    	      this.protocOutputBase64 = defaults.protocOutputBase64;
    	      this.serviceName = defaults.serviceName;
        }

        public Builder setGrpcConfig(@Nullable Input<String> grpcConfig) {
            this.grpcConfig = grpcConfig;
            return this;
        }

        public Builder setGrpcConfig(@Nullable String grpcConfig) {
            this.grpcConfig = Input.ofNullable(grpcConfig);
            return this;
        }

        public Builder setOpenapiConfig(@Nullable Input<String> openapiConfig) {
            this.openapiConfig = openapiConfig;
            return this;
        }

        public Builder setOpenapiConfig(@Nullable String openapiConfig) {
            this.openapiConfig = Input.ofNullable(openapiConfig);
            return this;
        }

        public Builder setProject(@Nullable Input<String> project) {
            this.project = project;
            return this;
        }

        public Builder setProject(@Nullable String project) {
            this.project = Input.ofNullable(project);
            return this;
        }

        public Builder setProtocOutputBase64(@Nullable Input<String> protocOutputBase64) {
            this.protocOutputBase64 = protocOutputBase64;
            return this;
        }

        public Builder setProtocOutputBase64(@Nullable String protocOutputBase64) {
            this.protocOutputBase64 = Input.ofNullable(protocOutputBase64);
            return this;
        }

        public Builder setServiceName(Input<String> serviceName) {
            this.serviceName = Objects.requireNonNull(serviceName);
            return this;
        }

        public Builder setServiceName(String serviceName) {
            this.serviceName = Input.of(Objects.requireNonNull(serviceName));
            return this;
        }

        public ServiceArgs build() {
            return new ServiceArgs(grpcConfig, openapiConfig, project, protocOutputBase64, serviceName);
        }
    }
}
