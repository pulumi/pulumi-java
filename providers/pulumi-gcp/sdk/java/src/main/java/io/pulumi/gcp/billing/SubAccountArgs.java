// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.billing;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class SubAccountArgs extends io.pulumi.resources.ResourceArgs {

    public static final SubAccountArgs Empty = new SubAccountArgs();

    /**
     * If set to "RENAME_ON_DESTROY" the billing account display_name
     * will be changed to "Destroyed" along with a timestamp.  If set to "" this will not occur.
     * Default is "".
     * 
     */
    @Import(name="deletionPolicy")
      private final @Nullable Output<String> deletionPolicy;

    public Output<String> getDeletionPolicy() {
        return this.deletionPolicy == null ? Codegen.empty() : this.deletionPolicy;
    }

    /**
     * The display name of the billing account.
     * 
     */
    @Import(name="displayName", required=true)
      private final Output<String> displayName;

    public Output<String> getDisplayName() {
        return this.displayName;
    }

    /**
     * The name of the master billing account that the subaccount
     * will be created under in the form `{billing_account_id}` or `billingAccounts/{billing_account_id}`.
     * 
     */
    @Import(name="masterBillingAccount", required=true)
      private final Output<String> masterBillingAccount;

    public Output<String> getMasterBillingAccount() {
        return this.masterBillingAccount;
    }

    public SubAccountArgs(
        @Nullable Output<String> deletionPolicy,
        Output<String> displayName,
        Output<String> masterBillingAccount) {
        this.deletionPolicy = deletionPolicy;
        this.displayName = Objects.requireNonNull(displayName, "expected parameter 'displayName' to be non-null");
        this.masterBillingAccount = Objects.requireNonNull(masterBillingAccount, "expected parameter 'masterBillingAccount' to be non-null");
    }

    private SubAccountArgs() {
        this.deletionPolicy = Codegen.empty();
        this.displayName = Codegen.empty();
        this.masterBillingAccount = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SubAccountArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> deletionPolicy;
        private Output<String> displayName;
        private Output<String> masterBillingAccount;

        public Builder() {
    	      // Empty
        }

        public Builder(SubAccountArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.deletionPolicy = defaults.deletionPolicy;
    	      this.displayName = defaults.displayName;
    	      this.masterBillingAccount = defaults.masterBillingAccount;
        }

        public Builder deletionPolicy(@Nullable Output<String> deletionPolicy) {
            this.deletionPolicy = deletionPolicy;
            return this;
        }
        public Builder deletionPolicy(@Nullable String deletionPolicy) {
            this.deletionPolicy = Codegen.ofNullable(deletionPolicy);
            return this;
        }
        public Builder displayName(Output<String> displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }
        public Builder displayName(String displayName) {
            this.displayName = Output.of(Objects.requireNonNull(displayName));
            return this;
        }
        public Builder masterBillingAccount(Output<String> masterBillingAccount) {
            this.masterBillingAccount = Objects.requireNonNull(masterBillingAccount);
            return this;
        }
        public Builder masterBillingAccount(String masterBillingAccount) {
            this.masterBillingAccount = Output.of(Objects.requireNonNull(masterBillingAccount));
            return this;
        }        public SubAccountArgs build() {
            return new SubAccountArgs(deletionPolicy, displayName, masterBillingAccount);
        }
    }
}
