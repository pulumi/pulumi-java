// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.bigquery;

import io.pulumi.core.Input;
import io.pulumi.core.Output;
import io.pulumi.core.internal.annotations.OutputExport;
import io.pulumi.core.internal.annotations.ResourceType;
import io.pulumi.gcp.Utilities;
import io.pulumi.gcp.bigquery.TableArgs;
import io.pulumi.gcp.bigquery.inputs.TableState;
import io.pulumi.gcp.bigquery.outputs.TableEncryptionConfiguration;
import io.pulumi.gcp.bigquery.outputs.TableExternalDataConfiguration;
import io.pulumi.gcp.bigquery.outputs.TableMaterializedView;
import io.pulumi.gcp.bigquery.outputs.TableRangePartitioning;
import io.pulumi.gcp.bigquery.outputs.TableTimePartitioning;
import io.pulumi.gcp.bigquery.outputs.TableView;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;

@ResourceType(type="gcp:bigquery/table:Table")
public class Table extends io.pulumi.resources.CustomResource {
    @OutputExport(name="clusterings", type=List.class, parameters={String.class})
    private Output</* @Nullable */ List<String>> clusterings;

    public Output</* @Nullable */ List<String>> getClusterings() {
        return this.clusterings;
    }
    @OutputExport(name="creationTime", type=Integer.class, parameters={})
    private Output<Integer> creationTime;

    public Output<Integer> getCreationTime() {
        return this.creationTime;
    }
    @OutputExport(name="datasetId", type=String.class, parameters={})
    private Output<String> datasetId;

    public Output<String> getDatasetId() {
        return this.datasetId;
    }
    @OutputExport(name="deletionProtection", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> deletionProtection;

    public Output</* @Nullable */ Boolean> getDeletionProtection() {
        return this.deletionProtection;
    }
    @OutputExport(name="description", type=String.class, parameters={})
    private Output</* @Nullable */ String> description;

    public Output</* @Nullable */ String> getDescription() {
        return this.description;
    }
    @OutputExport(name="encryptionConfiguration", type=TableEncryptionConfiguration.class, parameters={})
    private Output</* @Nullable */ TableEncryptionConfiguration> encryptionConfiguration;

    public Output</* @Nullable */ TableEncryptionConfiguration> getEncryptionConfiguration() {
        return this.encryptionConfiguration;
    }
    @OutputExport(name="etag", type=String.class, parameters={})
    private Output<String> etag;

    public Output<String> getEtag() {
        return this.etag;
    }
    @OutputExport(name="expirationTime", type=Integer.class, parameters={})
    private Output<Integer> expirationTime;

    public Output<Integer> getExpirationTime() {
        return this.expirationTime;
    }
    @OutputExport(name="externalDataConfiguration", type=TableExternalDataConfiguration.class, parameters={})
    private Output</* @Nullable */ TableExternalDataConfiguration> externalDataConfiguration;

    public Output</* @Nullable */ TableExternalDataConfiguration> getExternalDataConfiguration() {
        return this.externalDataConfiguration;
    }
    @OutputExport(name="friendlyName", type=String.class, parameters={})
    private Output</* @Nullable */ String> friendlyName;

    public Output</* @Nullable */ String> getFriendlyName() {
        return this.friendlyName;
    }
    @OutputExport(name="labels", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> labels;

    public Output</* @Nullable */ Map<String,String>> getLabels() {
        return this.labels;
    }
    @OutputExport(name="lastModifiedTime", type=Integer.class, parameters={})
    private Output<Integer> lastModifiedTime;

    public Output<Integer> getLastModifiedTime() {
        return this.lastModifiedTime;
    }
    @OutputExport(name="location", type=String.class, parameters={})
    private Output<String> location;

    public Output<String> getLocation() {
        return this.location;
    }
    @OutputExport(name="materializedView", type=TableMaterializedView.class, parameters={})
    private Output</* @Nullable */ TableMaterializedView> materializedView;

    public Output</* @Nullable */ TableMaterializedView> getMaterializedView() {
        return this.materializedView;
    }
    @OutputExport(name="numBytes", type=Integer.class, parameters={})
    private Output<Integer> numBytes;

    public Output<Integer> getNumBytes() {
        return this.numBytes;
    }
    @OutputExport(name="numLongTermBytes", type=Integer.class, parameters={})
    private Output<Integer> numLongTermBytes;

    public Output<Integer> getNumLongTermBytes() {
        return this.numLongTermBytes;
    }
    @OutputExport(name="numRows", type=Integer.class, parameters={})
    private Output<Integer> numRows;

    public Output<Integer> getNumRows() {
        return this.numRows;
    }
    @OutputExport(name="project", type=String.class, parameters={})
    private Output<String> project;

    public Output<String> getProject() {
        return this.project;
    }
    @OutputExport(name="rangePartitioning", type=TableRangePartitioning.class, parameters={})
    private Output</* @Nullable */ TableRangePartitioning> rangePartitioning;

    public Output</* @Nullable */ TableRangePartitioning> getRangePartitioning() {
        return this.rangePartitioning;
    }
    @OutputExport(name="schema", type=String.class, parameters={})
    private Output<String> schema;

    public Output<String> getSchema() {
        return this.schema;
    }
    @OutputExport(name="selfLink", type=String.class, parameters={})
    private Output<String> selfLink;

    public Output<String> getSelfLink() {
        return this.selfLink;
    }
    @OutputExport(name="tableId", type=String.class, parameters={})
    private Output<String> tableId;

    public Output<String> getTableId() {
        return this.tableId;
    }
    @OutputExport(name="timePartitioning", type=TableTimePartitioning.class, parameters={})
    private Output</* @Nullable */ TableTimePartitioning> timePartitioning;

    public Output</* @Nullable */ TableTimePartitioning> getTimePartitioning() {
        return this.timePartitioning;
    }
    @OutputExport(name="type", type=String.class, parameters={})
    private Output<String> type;

    public Output<String> getType() {
        return this.type;
    }
    @OutputExport(name="view", type=TableView.class, parameters={})
    private Output</* @Nullable */ TableView> view;

    public Output</* @Nullable */ TableView> getView() {
        return this.view;
    }

    public Table(String name, TableArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("gcp:bigquery/table:Table", name, args == null ? TableArgs.Empty : args, makeResourceOptions(options, Input.empty()));
    }

    private Table(String name, Input<String> id, @Nullable TableState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("gcp:bigquery/table:Table", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Input<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .setVersion(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    public static Table get(String name, Input<String> id, @Nullable TableState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new Table(name, id, state, options);
    }
}
