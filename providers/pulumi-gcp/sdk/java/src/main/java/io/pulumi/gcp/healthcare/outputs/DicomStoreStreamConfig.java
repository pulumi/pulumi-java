// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.healthcare.outputs;

import io.pulumi.core.annotations.OutputCustomType;
import io.pulumi.gcp.healthcare.outputs.DicomStoreStreamConfigBigqueryDestination;
import java.util.Objects;

@OutputCustomType
public final class DicomStoreStreamConfig {
    /**
     * BigQueryDestination to include a fully qualified BigQuery table URI where DICOM instance metadata will be streamed.
     * Structure is documented below.
     * 
     */
    private final DicomStoreStreamConfigBigqueryDestination bigqueryDestination;

    @OutputCustomType.Constructor
    private DicomStoreStreamConfig(@OutputCustomType.Parameter("bigqueryDestination") DicomStoreStreamConfigBigqueryDestination bigqueryDestination) {
        this.bigqueryDestination = bigqueryDestination;
    }

    /**
     * BigQueryDestination to include a fully qualified BigQuery table URI where DICOM instance metadata will be streamed.
     * Structure is documented below.
     * 
    */
    public DicomStoreStreamConfigBigqueryDestination getBigqueryDestination() {
        return this.bigqueryDestination;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DicomStoreStreamConfig defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DicomStoreStreamConfigBigqueryDestination bigqueryDestination;

        public Builder() {
    	      // Empty
        }

        public Builder(DicomStoreStreamConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bigqueryDestination = defaults.bigqueryDestination;
        }

        public Builder setBigqueryDestination(DicomStoreStreamConfigBigqueryDestination bigqueryDestination) {
            this.bigqueryDestination = Objects.requireNonNull(bigqueryDestination);
            return this;
        }
        public DicomStoreStreamConfig build() {
            return new DicomStoreStreamConfig(bigqueryDestination);
        }
    }
}
