// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.appengine.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class FlexibleAppVersionAutomaticScalingRequestUtilizationGetArgs extends io.pulumi.resources.ResourceArgs {

    public static final FlexibleAppVersionAutomaticScalingRequestUtilizationGetArgs Empty = new FlexibleAppVersionAutomaticScalingRequestUtilizationGetArgs();

    /**
     * Target number of concurrent requests.
     * 
     */
    @InputImport(name="targetConcurrentRequests")
      private final @Nullable Input<Double> targetConcurrentRequests;

    public Input<Double> getTargetConcurrentRequests() {
        return this.targetConcurrentRequests == null ? Input.empty() : this.targetConcurrentRequests;
    }

    /**
     * Target requests per second.
     * 
     */
    @InputImport(name="targetRequestCountPerSecond")
      private final @Nullable Input<String> targetRequestCountPerSecond;

    public Input<String> getTargetRequestCountPerSecond() {
        return this.targetRequestCountPerSecond == null ? Input.empty() : this.targetRequestCountPerSecond;
    }

    public FlexibleAppVersionAutomaticScalingRequestUtilizationGetArgs(
        @Nullable Input<Double> targetConcurrentRequests,
        @Nullable Input<String> targetRequestCountPerSecond) {
        this.targetConcurrentRequests = targetConcurrentRequests;
        this.targetRequestCountPerSecond = targetRequestCountPerSecond;
    }

    private FlexibleAppVersionAutomaticScalingRequestUtilizationGetArgs() {
        this.targetConcurrentRequests = Input.empty();
        this.targetRequestCountPerSecond = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FlexibleAppVersionAutomaticScalingRequestUtilizationGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<Double> targetConcurrentRequests;
        private @Nullable Input<String> targetRequestCountPerSecond;

        public Builder() {
    	      // Empty
        }

        public Builder(FlexibleAppVersionAutomaticScalingRequestUtilizationGetArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.targetConcurrentRequests = defaults.targetConcurrentRequests;
    	      this.targetRequestCountPerSecond = defaults.targetRequestCountPerSecond;
        }

        public Builder setTargetConcurrentRequests(@Nullable Input<Double> targetConcurrentRequests) {
            this.targetConcurrentRequests = targetConcurrentRequests;
            return this;
        }

        public Builder setTargetConcurrentRequests(@Nullable Double targetConcurrentRequests) {
            this.targetConcurrentRequests = Input.ofNullable(targetConcurrentRequests);
            return this;
        }

        public Builder setTargetRequestCountPerSecond(@Nullable Input<String> targetRequestCountPerSecond) {
            this.targetRequestCountPerSecond = targetRequestCountPerSecond;
            return this;
        }

        public Builder setTargetRequestCountPerSecond(@Nullable String targetRequestCountPerSecond) {
            this.targetRequestCountPerSecond = Input.ofNullable(targetRequestCountPerSecond);
            return this;
        }
        public FlexibleAppVersionAutomaticScalingRequestUtilizationGetArgs build() {
            return new FlexibleAppVersionAutomaticScalingRequestUtilizationGetArgs(targetConcurrentRequests, targetRequestCountPerSecond);
        }
    }
}
