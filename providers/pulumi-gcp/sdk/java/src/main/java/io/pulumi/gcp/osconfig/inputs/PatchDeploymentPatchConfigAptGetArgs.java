// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.osconfig.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class PatchDeploymentPatchConfigAptGetArgs extends io.pulumi.resources.ResourceArgs {

    public static final PatchDeploymentPatchConfigAptGetArgs Empty = new PatchDeploymentPatchConfigAptGetArgs();

    /**
     * List of KBs to exclude from update.
     * 
     */
    @InputImport(name="excludes")
      private final @Nullable Output<List<String>> excludes;

    public Output<List<String>> getExcludes() {
        return this.excludes == null ? Output.empty() : this.excludes;
    }

    /**
     * An exclusive list of packages to be updated. These are the only packages that will be updated.
     * If these packages are not installed, they will be ignored. This field cannot be specified with
     * any other patch configuration fields.
     * 
     */
    @InputImport(name="exclusivePackages")
      private final @Nullable Output<List<String>> exclusivePackages;

    public Output<List<String>> getExclusivePackages() {
        return this.exclusivePackages == null ? Output.empty() : this.exclusivePackages;
    }

    /**
     * By changing the type to DIST, the patching is performed using apt-get dist-upgrade instead.
     * Possible values are `DIST` and `UPGRADE`.
     * 
     */
    @InputImport(name="type")
      private final @Nullable Output<String> type;

    public Output<String> getType() {
        return this.type == null ? Output.empty() : this.type;
    }

    public PatchDeploymentPatchConfigAptGetArgs(
        @Nullable Output<List<String>> excludes,
        @Nullable Output<List<String>> exclusivePackages,
        @Nullable Output<String> type) {
        this.excludes = excludes;
        this.exclusivePackages = exclusivePackages;
        this.type = type;
    }

    private PatchDeploymentPatchConfigAptGetArgs() {
        this.excludes = Output.empty();
        this.exclusivePackages = Output.empty();
        this.type = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PatchDeploymentPatchConfigAptGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<List<String>> excludes;
        private @Nullable Output<List<String>> exclusivePackages;
        private @Nullable Output<String> type;

        public Builder() {
    	      // Empty
        }

        public Builder(PatchDeploymentPatchConfigAptGetArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.excludes = defaults.excludes;
    	      this.exclusivePackages = defaults.exclusivePackages;
    	      this.type = defaults.type;
        }

        public Builder excludes(@Nullable Output<List<String>> excludes) {
            this.excludes = excludes;
            return this;
        }

        public Builder excludes(@Nullable List<String> excludes) {
            this.excludes = Output.ofNullable(excludes);
            return this;
        }

        public Builder exclusivePackages(@Nullable Output<List<String>> exclusivePackages) {
            this.exclusivePackages = exclusivePackages;
            return this;
        }

        public Builder exclusivePackages(@Nullable List<String> exclusivePackages) {
            this.exclusivePackages = Output.ofNullable(exclusivePackages);
            return this;
        }

        public Builder type(@Nullable Output<String> type) {
            this.type = type;
            return this;
        }

        public Builder type(@Nullable String type) {
            this.type = Output.ofNullable(type);
            return this;
        }
        public PatchDeploymentPatchConfigAptGetArgs build() {
            return new PatchDeploymentPatchConfigAptGetArgs(excludes, exclusivePackages, type);
        }
    }
}
