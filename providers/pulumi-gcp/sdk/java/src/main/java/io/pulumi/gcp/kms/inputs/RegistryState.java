// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.kms.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.InputImport;
import io.pulumi.gcp.kms.inputs.RegistryCredentialGetArgs;
import io.pulumi.gcp.kms.inputs.RegistryEventNotificationConfigItemGetArgs;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class RegistryState extends io.pulumi.resources.ResourceArgs {

    public static final RegistryState Empty = new RegistryState();

    /**
     * List of public key certificates to authenticate devices.
     * 
     */
    @InputImport(name="credentials")
      private final @Nullable Output<List<RegistryCredentialGetArgs>> credentials;

    public Output<List<RegistryCredentialGetArgs>> getCredentials() {
        return this.credentials == null ? Output.empty() : this.credentials;
    }

    /**
     * List of configurations for event notifications, such as PubSub topics to publish device events to.
     * 
     */
    @InputImport(name="eventNotificationConfigs")
      private final @Nullable Output<List<RegistryEventNotificationConfigItemGetArgs>> eventNotificationConfigs;

    public Output<List<RegistryEventNotificationConfigItemGetArgs>> getEventNotificationConfigs() {
        return this.eventNotificationConfigs == null ? Output.empty() : this.eventNotificationConfigs;
    }

    /**
     * Activate or deactivate HTTP.
     * 
     */
    @InputImport(name="httpConfig")
      private final @Nullable Output<Map<String,Object>> httpConfig;

    public Output<Map<String,Object>> getHttpConfig() {
        return this.httpConfig == null ? Output.empty() : this.httpConfig;
    }

    /**
     * The default logging verbosity for activity from devices in this registry. Specifies which events should be written to
     * logs. For example, if the LogLevel is ERROR, only events that terminate in errors will be logged. LogLevel is inclusive;
     * enabling INFO logging will also enable ERROR logging. Default value: "NONE" Possible values: ["NONE", "ERROR", "INFO",
     * "DEBUG"]
     * 
     */
    @InputImport(name="logLevel")
      private final @Nullable Output<String> logLevel;

    public Output<String> getLogLevel() {
        return this.logLevel == null ? Output.empty() : this.logLevel;
    }

    /**
     * Activate or deactivate MQTT.
     * 
     */
    @InputImport(name="mqttConfig")
      private final @Nullable Output<Map<String,Object>> mqttConfig;

    public Output<Map<String,Object>> getMqttConfig() {
        return this.mqttConfig == null ? Output.empty() : this.mqttConfig;
    }

    /**
     * A unique name for the resource, required by device registry.
     * 
     */
    @InputImport(name="name")
      private final @Nullable Output<String> name;

    public Output<String> getName() {
        return this.name == null ? Output.empty() : this.name;
    }

    @InputImport(name="project")
      private final @Nullable Output<String> project;

    public Output<String> getProject() {
        return this.project == null ? Output.empty() : this.project;
    }

    /**
     * The region in which the created registry should reside. If it is not provided, the provider region is used.
     * 
     */
    @InputImport(name="region")
      private final @Nullable Output<String> region;

    public Output<String> getRegion() {
        return this.region == null ? Output.empty() : this.region;
    }

    /**
     * A PubSub topic to publish device state updates.
     * 
     */
    @InputImport(name="stateNotificationConfig")
      private final @Nullable Output<Map<String,Object>> stateNotificationConfig;

    public Output<Map<String,Object>> getStateNotificationConfig() {
        return this.stateNotificationConfig == null ? Output.empty() : this.stateNotificationConfig;
    }

    public RegistryState(
        @Nullable Output<List<RegistryCredentialGetArgs>> credentials,
        @Nullable Output<List<RegistryEventNotificationConfigItemGetArgs>> eventNotificationConfigs,
        @Nullable Output<Map<String,Object>> httpConfig,
        @Nullable Output<String> logLevel,
        @Nullable Output<Map<String,Object>> mqttConfig,
        @Nullable Output<String> name,
        @Nullable Output<String> project,
        @Nullable Output<String> region,
        @Nullable Output<Map<String,Object>> stateNotificationConfig) {
        this.credentials = credentials;
        this.eventNotificationConfigs = eventNotificationConfigs;
        this.httpConfig = httpConfig;
        this.logLevel = logLevel;
        this.mqttConfig = mqttConfig;
        this.name = name;
        this.project = project;
        this.region = region;
        this.stateNotificationConfig = stateNotificationConfig;
    }

    private RegistryState() {
        this.credentials = Output.empty();
        this.eventNotificationConfigs = Output.empty();
        this.httpConfig = Output.empty();
        this.logLevel = Output.empty();
        this.mqttConfig = Output.empty();
        this.name = Output.empty();
        this.project = Output.empty();
        this.region = Output.empty();
        this.stateNotificationConfig = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RegistryState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<List<RegistryCredentialGetArgs>> credentials;
        private @Nullable Output<List<RegistryEventNotificationConfigItemGetArgs>> eventNotificationConfigs;
        private @Nullable Output<Map<String,Object>> httpConfig;
        private @Nullable Output<String> logLevel;
        private @Nullable Output<Map<String,Object>> mqttConfig;
        private @Nullable Output<String> name;
        private @Nullable Output<String> project;
        private @Nullable Output<String> region;
        private @Nullable Output<Map<String,Object>> stateNotificationConfig;

        public Builder() {
    	      // Empty
        }

        public Builder(RegistryState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.credentials = defaults.credentials;
    	      this.eventNotificationConfigs = defaults.eventNotificationConfigs;
    	      this.httpConfig = defaults.httpConfig;
    	      this.logLevel = defaults.logLevel;
    	      this.mqttConfig = defaults.mqttConfig;
    	      this.name = defaults.name;
    	      this.project = defaults.project;
    	      this.region = defaults.region;
    	      this.stateNotificationConfig = defaults.stateNotificationConfig;
        }

        public Builder credentials(@Nullable Output<List<RegistryCredentialGetArgs>> credentials) {
            this.credentials = credentials;
            return this;
        }

        public Builder credentials(@Nullable List<RegistryCredentialGetArgs> credentials) {
            this.credentials = Output.ofNullable(credentials);
            return this;
        }

        public Builder eventNotificationConfigs(@Nullable Output<List<RegistryEventNotificationConfigItemGetArgs>> eventNotificationConfigs) {
            this.eventNotificationConfigs = eventNotificationConfigs;
            return this;
        }

        public Builder eventNotificationConfigs(@Nullable List<RegistryEventNotificationConfigItemGetArgs> eventNotificationConfigs) {
            this.eventNotificationConfigs = Output.ofNullable(eventNotificationConfigs);
            return this;
        }

        public Builder httpConfig(@Nullable Output<Map<String,Object>> httpConfig) {
            this.httpConfig = httpConfig;
            return this;
        }

        public Builder httpConfig(@Nullable Map<String,Object> httpConfig) {
            this.httpConfig = Output.ofNullable(httpConfig);
            return this;
        }

        public Builder logLevel(@Nullable Output<String> logLevel) {
            this.logLevel = logLevel;
            return this;
        }

        public Builder logLevel(@Nullable String logLevel) {
            this.logLevel = Output.ofNullable(logLevel);
            return this;
        }

        public Builder mqttConfig(@Nullable Output<Map<String,Object>> mqttConfig) {
            this.mqttConfig = mqttConfig;
            return this;
        }

        public Builder mqttConfig(@Nullable Map<String,Object> mqttConfig) {
            this.mqttConfig = Output.ofNullable(mqttConfig);
            return this;
        }

        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }

        public Builder name(@Nullable String name) {
            this.name = Output.ofNullable(name);
            return this;
        }

        public Builder project(@Nullable Output<String> project) {
            this.project = project;
            return this;
        }

        public Builder project(@Nullable String project) {
            this.project = Output.ofNullable(project);
            return this;
        }

        public Builder region(@Nullable Output<String> region) {
            this.region = region;
            return this;
        }

        public Builder region(@Nullable String region) {
            this.region = Output.ofNullable(region);
            return this;
        }

        public Builder stateNotificationConfig(@Nullable Output<Map<String,Object>> stateNotificationConfig) {
            this.stateNotificationConfig = stateNotificationConfig;
            return this;
        }

        public Builder stateNotificationConfig(@Nullable Map<String,Object> stateNotificationConfig) {
            this.stateNotificationConfig = Output.ofNullable(stateNotificationConfig);
            return this;
        }
        public RegistryState build() {
            return new RegistryState(credentials, eventNotificationConfigs, httpConfig, logLevel, mqttConfig, name, project, region, stateNotificationConfig);
        }
    }
}
