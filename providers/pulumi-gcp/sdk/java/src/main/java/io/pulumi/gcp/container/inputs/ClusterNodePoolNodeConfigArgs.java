// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.container.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.InputImport;
import io.pulumi.gcp.container.inputs.ClusterNodePoolNodeConfigEphemeralStorageConfigArgs;
import io.pulumi.gcp.container.inputs.ClusterNodePoolNodeConfigGcfsConfigArgs;
import io.pulumi.gcp.container.inputs.ClusterNodePoolNodeConfigGuestAcceleratorArgs;
import io.pulumi.gcp.container.inputs.ClusterNodePoolNodeConfigKubeletConfigArgs;
import io.pulumi.gcp.container.inputs.ClusterNodePoolNodeConfigLinuxNodeConfigArgs;
import io.pulumi.gcp.container.inputs.ClusterNodePoolNodeConfigSandboxConfigArgs;
import io.pulumi.gcp.container.inputs.ClusterNodePoolNodeConfigShieldedInstanceConfigArgs;
import io.pulumi.gcp.container.inputs.ClusterNodePoolNodeConfigTaintArgs;
import io.pulumi.gcp.container.inputs.ClusterNodePoolNodeConfigWorkloadMetadataConfigArgs;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ClusterNodePoolNodeConfigArgs extends io.pulumi.resources.ResourceArgs {

    public static final ClusterNodePoolNodeConfigArgs Empty = new ClusterNodePoolNodeConfigArgs();

    /**
     * The Customer Managed Encryption Key used to encrypt the boot disk attached to each node in the node pool. This should be of the form projects/[KEY_PROJECT_ID]/locations/[LOCATION]/keyRings/[RING_NAME]/cryptoKeys/[KEY_NAME]. For more information about protecting resources with Cloud KMS Keys please see: <https://cloud.google.com/compute/docs/disks/customer-managed-encryption>
     * 
     */
    @InputImport(name="bootDiskKmsKey")
      private final @Nullable Output<String> bootDiskKmsKey;

    public Output<String> getBootDiskKmsKey() {
        return this.bootDiskKmsKey == null ? Output.empty() : this.bootDiskKmsKey;
    }

    /**
     * Size of the disk attached to each node, specified
     * in GB. The smallest allowed disk size is 10GB. Defaults to 100GB.
     * 
     */
    @InputImport(name="diskSizeGb")
      private final @Nullable Output<Integer> diskSizeGb;

    public Output<Integer> getDiskSizeGb() {
        return this.diskSizeGb == null ? Output.empty() : this.diskSizeGb;
    }

    /**
     * Type of the disk attached to each node
     * (e.g. 'pd-standard', 'pd-balanced' or 'pd-ssd'). If unspecified, the default disk type is 'pd-standard'
     * 
     */
    @InputImport(name="diskType")
      private final @Nullable Output<String> diskType;

    public Output<String> getDiskType() {
        return this.diskType == null ? Output.empty() : this.diskType;
    }

    /**
     * Parameters for the ephemeral storage filesystem. If unspecified, ephemeral storage is backed by the boot disk. Structure is documented below.
     * 
     */
    @InputImport(name="ephemeralStorageConfig")
      private final @Nullable Output<ClusterNodePoolNodeConfigEphemeralStorageConfigArgs> ephemeralStorageConfig;

    public Output<ClusterNodePoolNodeConfigEphemeralStorageConfigArgs> getEphemeralStorageConfig() {
        return this.ephemeralStorageConfig == null ? Output.empty() : this.ephemeralStorageConfig;
    }

    /**
     * Parameters for the Google Container Filesystem (GCFS).
     * If unspecified, GCFS will not be enabled on the node pool. When enabling this feature you must specify `image_type = "COS_CONTAINERD"` and `node_version` from GKE versions 1.19 or later to use it.
     * For GKE versions 1.19, 1.20, and 1.21, the recommended minimum `node_version` would be 1.19.15-gke.1300, 1.20.11-gke.1300, and 1.21.5-gke.1300 respectively.
     * A `machine_type` that has more than 16 GiB of memory is also recommended.
     * GCFS must be enabled in order to use [image streaming](https://cloud.google.com/kubernetes-engine/docs/how-to/image-streaming).
     * Structure is documented below.
     * 
     */
    @InputImport(name="gcfsConfig")
      private final @Nullable Output<ClusterNodePoolNodeConfigGcfsConfigArgs> gcfsConfig;

    public Output<ClusterNodePoolNodeConfigGcfsConfigArgs> getGcfsConfig() {
        return this.gcfsConfig == null ? Output.empty() : this.gcfsConfig;
    }

    /**
     * List of the type and count of accelerator cards attached to the instance.
     * Structure documented below.
     * 
     */
    @InputImport(name="guestAccelerators")
      private final @Nullable Output<List<ClusterNodePoolNodeConfigGuestAcceleratorArgs>> guestAccelerators;

    public Output<List<ClusterNodePoolNodeConfigGuestAcceleratorArgs>> getGuestAccelerators() {
        return this.guestAccelerators == null ? Output.empty() : this.guestAccelerators;
    }

    /**
     * The image type to use for this node. Note that changing the image type
     * will delete and recreate all nodes in the node pool.
     * 
     */
    @InputImport(name="imageType")
      private final @Nullable Output<String> imageType;

    public Output<String> getImageType() {
        return this.imageType == null ? Output.empty() : this.imageType;
    }

    /**
     * Kubelet configuration, currently supported attributes can be found [here](https://cloud.google.com/sdk/gcloud/reference/beta/container/node-pools/create#--system-config-from-file).
     * Structure is documented below.
     * 
     */
    @InputImport(name="kubeletConfig")
      private final @Nullable Output<ClusterNodePoolNodeConfigKubeletConfigArgs> kubeletConfig;

    public Output<ClusterNodePoolNodeConfigKubeletConfigArgs> getKubeletConfig() {
        return this.kubeletConfig == null ? Output.empty() : this.kubeletConfig;
    }

    /**
     * The Kubernetes labels (key/value pairs) to be applied to each node. The kubernetes.io/ and k8s.io/ prefixes are
     * reserved by Kubernetes Core components and cannot be specified.
     * 
     */
    @InputImport(name="labels")
      private final @Nullable Output<Map<String,String>> labels;

    public Output<Map<String,String>> getLabels() {
        return this.labels == null ? Output.empty() : this.labels;
    }

    /**
     * Linux node configuration, currently supported attributes can be found [here](https://cloud.google.com/sdk/gcloud/reference/beta/container/node-pools/create#--system-config-from-file).
     * Note that validations happen all server side. All attributes are optional.
     * Structure is documented below.
     * 
     */
    @InputImport(name="linuxNodeConfig")
      private final @Nullable Output<ClusterNodePoolNodeConfigLinuxNodeConfigArgs> linuxNodeConfig;

    public Output<ClusterNodePoolNodeConfigLinuxNodeConfigArgs> getLinuxNodeConfig() {
        return this.linuxNodeConfig == null ? Output.empty() : this.linuxNodeConfig;
    }

    /**
     * Number of local SSDs to use to back ephemeral storage. Uses NVMe interfaces. Each local SSD is 375 GB in size. If zero, it means to disable using local SSDs as ephemeral storage.
     * 
     */
    @InputImport(name="localSsdCount")
      private final @Nullable Output<Integer> localSsdCount;

    public Output<Integer> getLocalSsdCount() {
        return this.localSsdCount == null ? Output.empty() : this.localSsdCount;
    }

    /**
     * The name of a Google Compute Engine machine type.
     * Defaults to `e2-medium`. To create a custom machine type, value should be set as specified
     * [here](https://cloud.google.com/compute/docs/reference/latest/instances#machineType).
     * 
     */
    @InputImport(name="machineType")
      private final @Nullable Output<String> machineType;

    public Output<String> getMachineType() {
        return this.machineType == null ? Output.empty() : this.machineType;
    }

    /**
     * The metadata key/value pairs assigned to instances in
     * the cluster. From GKE `1.12` onwards, `disable-legacy-endpoints` is set to
     * `true` by the API; if `metadata` is set but that default value is not
     * included, the provider will attempt to unset the value. To avoid this, set the
     * value in your config.
     * 
     */
    @InputImport(name="metadata")
      private final @Nullable Output<Map<String,String>> metadata;

    public Output<Map<String,String>> getMetadata() {
        return this.metadata == null ? Output.empty() : this.metadata;
    }

    /**
     * Minimum CPU platform to be used by this instance.
     * The instance may be scheduled on the specified or newer CPU platform. Applicable
     * values are the friendly names of CPU platforms, such as `Intel Haswell`. See the
     * [official documentation](https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform)
     * for more information.
     * 
     */
    @InputImport(name="minCpuPlatform")
      private final @Nullable Output<String> minCpuPlatform;

    public Output<String> getMinCpuPlatform() {
        return this.minCpuPlatform == null ? Output.empty() : this.minCpuPlatform;
    }

    /**
     * Setting this field will assign instances of this pool to run on the specified node group. This is useful for running workloads on [sole tenant nodes](https://cloud.google.com/compute/docs/nodes/sole-tenant-nodes).
     * 
     */
    @InputImport(name="nodeGroup")
      private final @Nullable Output<String> nodeGroup;

    public Output<String> getNodeGroup() {
        return this.nodeGroup == null ? Output.empty() : this.nodeGroup;
    }

    /**
     * The set of Google API scopes to be made available
     * on all of the node VMs under the "default" service account.
     * Use the "https://www.googleapis.com/auth/cloud-platform" scope to grant access to all APIs. It is recommended that you set `service_account` to a non-default service account and grant IAM roles to that service account for only the resources that it needs.
     * 
     */
    @InputImport(name="oauthScopes")
      private final @Nullable Output<List<String>> oauthScopes;

    public Output<List<String>> getOauthScopes() {
        return this.oauthScopes == null ? Output.empty() : this.oauthScopes;
    }

    /**
     * A boolean that represents whether or not the underlying node VMs
     * are preemptible. See the [official documentation](https://cloud.google.com/container-engine/docs/preemptible-vm)
     * for more information. Defaults to false.
     * 
     */
    @InputImport(name="preemptible")
      private final @Nullable Output<Boolean> preemptible;

    public Output<Boolean> getPreemptible() {
        return this.preemptible == null ? Output.empty() : this.preemptible;
    }

    /**
     * [GKE Sandbox](https://cloud.google.com/kubernetes-engine/docs/how-to/sandbox-pods) configuration. When enabling this feature you must specify `image_type = "COS_CONTAINERD"` and `node_version = "1.12.7-gke.17"` or later to use it.
     * Structure is documented below.
     * 
     */
    @InputImport(name="sandboxConfig")
      private final @Nullable Output<ClusterNodePoolNodeConfigSandboxConfigArgs> sandboxConfig;

    public Output<ClusterNodePoolNodeConfigSandboxConfigArgs> getSandboxConfig() {
        return this.sandboxConfig == null ? Output.empty() : this.sandboxConfig;
    }

    /**
     * The service account to be used by the Node VMs.
     * If not specified, the "default" service account is used.
     * 
     */
    @InputImport(name="serviceAccount")
      private final @Nullable Output<String> serviceAccount;

    public Output<String> getServiceAccount() {
        return this.serviceAccount == null ? Output.empty() : this.serviceAccount;
    }

    /**
     * Shielded Instance options. Structure is documented below.
     * 
     */
    @InputImport(name="shieldedInstanceConfig")
      private final @Nullable Output<ClusterNodePoolNodeConfigShieldedInstanceConfigArgs> shieldedInstanceConfig;

    public Output<ClusterNodePoolNodeConfigShieldedInstanceConfigArgs> getShieldedInstanceConfig() {
        return this.shieldedInstanceConfig == null ? Output.empty() : this.shieldedInstanceConfig;
    }

    /**
     * ) A boolean
     * that represents whether the underlying node VMs are spot. See the [official documentation](https://cloud.google.com/kubernetes-engine/docs/concepts/spot-vms)
     * for more information. Defaults to false.
     * 
     */
    @InputImport(name="spot")
      private final @Nullable Output<Boolean> spot;

    public Output<Boolean> getSpot() {
        return this.spot == null ? Output.empty() : this.spot;
    }

    /**
     * The list of instance tags applied to all nodes. Tags are used to identify
     * valid sources or targets for network firewalls.
     * 
     */
    @InputImport(name="tags")
      private final @Nullable Output<List<String>> tags;

    public Output<List<String>> getTags() {
        return this.tags == null ? Output.empty() : this.tags;
    }

    /**
     * A list of [Kubernetes taints](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/)
     * to apply to nodes. GKE's API can only set this field on cluster creation.
     * However, GKE will add taints to your nodes if you enable certain features such
     * as GPUs. If this field is set, any diffs on this field will cause the provider to
     * recreate the underlying resource. Taint values can be updated safely in
     * Kubernetes (eg. through `kubectl`), and it's recommended that you do not use
     * this field to manage taints. If you do, `lifecycle.ignore_changes` is
     * recommended. Structure is documented below.
     * 
     */
    @InputImport(name="taints")
      private final @Nullable Output<List<ClusterNodePoolNodeConfigTaintArgs>> taints;

    public Output<List<ClusterNodePoolNodeConfigTaintArgs>> getTaints() {
        return this.taints == null ? Output.empty() : this.taints;
    }

    /**
     * Metadata configuration to expose to workloads on the node pool.
     * Structure is documented below.
     * 
     */
    @InputImport(name="workloadMetadataConfig")
      private final @Nullable Output<ClusterNodePoolNodeConfigWorkloadMetadataConfigArgs> workloadMetadataConfig;

    public Output<ClusterNodePoolNodeConfigWorkloadMetadataConfigArgs> getWorkloadMetadataConfig() {
        return this.workloadMetadataConfig == null ? Output.empty() : this.workloadMetadataConfig;
    }

    public ClusterNodePoolNodeConfigArgs(
        @Nullable Output<String> bootDiskKmsKey,
        @Nullable Output<Integer> diskSizeGb,
        @Nullable Output<String> diskType,
        @Nullable Output<ClusterNodePoolNodeConfigEphemeralStorageConfigArgs> ephemeralStorageConfig,
        @Nullable Output<ClusterNodePoolNodeConfigGcfsConfigArgs> gcfsConfig,
        @Nullable Output<List<ClusterNodePoolNodeConfigGuestAcceleratorArgs>> guestAccelerators,
        @Nullable Output<String> imageType,
        @Nullable Output<ClusterNodePoolNodeConfigKubeletConfigArgs> kubeletConfig,
        @Nullable Output<Map<String,String>> labels,
        @Nullable Output<ClusterNodePoolNodeConfigLinuxNodeConfigArgs> linuxNodeConfig,
        @Nullable Output<Integer> localSsdCount,
        @Nullable Output<String> machineType,
        @Nullable Output<Map<String,String>> metadata,
        @Nullable Output<String> minCpuPlatform,
        @Nullable Output<String> nodeGroup,
        @Nullable Output<List<String>> oauthScopes,
        @Nullable Output<Boolean> preemptible,
        @Nullable Output<ClusterNodePoolNodeConfigSandboxConfigArgs> sandboxConfig,
        @Nullable Output<String> serviceAccount,
        @Nullable Output<ClusterNodePoolNodeConfigShieldedInstanceConfigArgs> shieldedInstanceConfig,
        @Nullable Output<Boolean> spot,
        @Nullable Output<List<String>> tags,
        @Nullable Output<List<ClusterNodePoolNodeConfigTaintArgs>> taints,
        @Nullable Output<ClusterNodePoolNodeConfigWorkloadMetadataConfigArgs> workloadMetadataConfig) {
        this.bootDiskKmsKey = bootDiskKmsKey;
        this.diskSizeGb = diskSizeGb;
        this.diskType = diskType;
        this.ephemeralStorageConfig = ephemeralStorageConfig;
        this.gcfsConfig = gcfsConfig;
        this.guestAccelerators = guestAccelerators;
        this.imageType = imageType;
        this.kubeletConfig = kubeletConfig;
        this.labels = labels;
        this.linuxNodeConfig = linuxNodeConfig;
        this.localSsdCount = localSsdCount;
        this.machineType = machineType;
        this.metadata = metadata;
        this.minCpuPlatform = minCpuPlatform;
        this.nodeGroup = nodeGroup;
        this.oauthScopes = oauthScopes;
        this.preemptible = preemptible;
        this.sandboxConfig = sandboxConfig;
        this.serviceAccount = serviceAccount;
        this.shieldedInstanceConfig = shieldedInstanceConfig;
        this.spot = spot;
        this.tags = tags;
        this.taints = taints;
        this.workloadMetadataConfig = workloadMetadataConfig;
    }

    private ClusterNodePoolNodeConfigArgs() {
        this.bootDiskKmsKey = Output.empty();
        this.diskSizeGb = Output.empty();
        this.diskType = Output.empty();
        this.ephemeralStorageConfig = Output.empty();
        this.gcfsConfig = Output.empty();
        this.guestAccelerators = Output.empty();
        this.imageType = Output.empty();
        this.kubeletConfig = Output.empty();
        this.labels = Output.empty();
        this.linuxNodeConfig = Output.empty();
        this.localSsdCount = Output.empty();
        this.machineType = Output.empty();
        this.metadata = Output.empty();
        this.minCpuPlatform = Output.empty();
        this.nodeGroup = Output.empty();
        this.oauthScopes = Output.empty();
        this.preemptible = Output.empty();
        this.sandboxConfig = Output.empty();
        this.serviceAccount = Output.empty();
        this.shieldedInstanceConfig = Output.empty();
        this.spot = Output.empty();
        this.tags = Output.empty();
        this.taints = Output.empty();
        this.workloadMetadataConfig = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ClusterNodePoolNodeConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> bootDiskKmsKey;
        private @Nullable Output<Integer> diskSizeGb;
        private @Nullable Output<String> diskType;
        private @Nullable Output<ClusterNodePoolNodeConfigEphemeralStorageConfigArgs> ephemeralStorageConfig;
        private @Nullable Output<ClusterNodePoolNodeConfigGcfsConfigArgs> gcfsConfig;
        private @Nullable Output<List<ClusterNodePoolNodeConfigGuestAcceleratorArgs>> guestAccelerators;
        private @Nullable Output<String> imageType;
        private @Nullable Output<ClusterNodePoolNodeConfigKubeletConfigArgs> kubeletConfig;
        private @Nullable Output<Map<String,String>> labels;
        private @Nullable Output<ClusterNodePoolNodeConfigLinuxNodeConfigArgs> linuxNodeConfig;
        private @Nullable Output<Integer> localSsdCount;
        private @Nullable Output<String> machineType;
        private @Nullable Output<Map<String,String>> metadata;
        private @Nullable Output<String> minCpuPlatform;
        private @Nullable Output<String> nodeGroup;
        private @Nullable Output<List<String>> oauthScopes;
        private @Nullable Output<Boolean> preemptible;
        private @Nullable Output<ClusterNodePoolNodeConfigSandboxConfigArgs> sandboxConfig;
        private @Nullable Output<String> serviceAccount;
        private @Nullable Output<ClusterNodePoolNodeConfigShieldedInstanceConfigArgs> shieldedInstanceConfig;
        private @Nullable Output<Boolean> spot;
        private @Nullable Output<List<String>> tags;
        private @Nullable Output<List<ClusterNodePoolNodeConfigTaintArgs>> taints;
        private @Nullable Output<ClusterNodePoolNodeConfigWorkloadMetadataConfigArgs> workloadMetadataConfig;

        public Builder() {
    	      // Empty
        }

        public Builder(ClusterNodePoolNodeConfigArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bootDiskKmsKey = defaults.bootDiskKmsKey;
    	      this.diskSizeGb = defaults.diskSizeGb;
    	      this.diskType = defaults.diskType;
    	      this.ephemeralStorageConfig = defaults.ephemeralStorageConfig;
    	      this.gcfsConfig = defaults.gcfsConfig;
    	      this.guestAccelerators = defaults.guestAccelerators;
    	      this.imageType = defaults.imageType;
    	      this.kubeletConfig = defaults.kubeletConfig;
    	      this.labels = defaults.labels;
    	      this.linuxNodeConfig = defaults.linuxNodeConfig;
    	      this.localSsdCount = defaults.localSsdCount;
    	      this.machineType = defaults.machineType;
    	      this.metadata = defaults.metadata;
    	      this.minCpuPlatform = defaults.minCpuPlatform;
    	      this.nodeGroup = defaults.nodeGroup;
    	      this.oauthScopes = defaults.oauthScopes;
    	      this.preemptible = defaults.preemptible;
    	      this.sandboxConfig = defaults.sandboxConfig;
    	      this.serviceAccount = defaults.serviceAccount;
    	      this.shieldedInstanceConfig = defaults.shieldedInstanceConfig;
    	      this.spot = defaults.spot;
    	      this.tags = defaults.tags;
    	      this.taints = defaults.taints;
    	      this.workloadMetadataConfig = defaults.workloadMetadataConfig;
        }

        public Builder bootDiskKmsKey(@Nullable Output<String> bootDiskKmsKey) {
            this.bootDiskKmsKey = bootDiskKmsKey;
            return this;
        }

        public Builder bootDiskKmsKey(@Nullable String bootDiskKmsKey) {
            this.bootDiskKmsKey = Output.ofNullable(bootDiskKmsKey);
            return this;
        }

        public Builder diskSizeGb(@Nullable Output<Integer> diskSizeGb) {
            this.diskSizeGb = diskSizeGb;
            return this;
        }

        public Builder diskSizeGb(@Nullable Integer diskSizeGb) {
            this.diskSizeGb = Output.ofNullable(diskSizeGb);
            return this;
        }

        public Builder diskType(@Nullable Output<String> diskType) {
            this.diskType = diskType;
            return this;
        }

        public Builder diskType(@Nullable String diskType) {
            this.diskType = Output.ofNullable(diskType);
            return this;
        }

        public Builder ephemeralStorageConfig(@Nullable Output<ClusterNodePoolNodeConfigEphemeralStorageConfigArgs> ephemeralStorageConfig) {
            this.ephemeralStorageConfig = ephemeralStorageConfig;
            return this;
        }

        public Builder ephemeralStorageConfig(@Nullable ClusterNodePoolNodeConfigEphemeralStorageConfigArgs ephemeralStorageConfig) {
            this.ephemeralStorageConfig = Output.ofNullable(ephemeralStorageConfig);
            return this;
        }

        public Builder gcfsConfig(@Nullable Output<ClusterNodePoolNodeConfigGcfsConfigArgs> gcfsConfig) {
            this.gcfsConfig = gcfsConfig;
            return this;
        }

        public Builder gcfsConfig(@Nullable ClusterNodePoolNodeConfigGcfsConfigArgs gcfsConfig) {
            this.gcfsConfig = Output.ofNullable(gcfsConfig);
            return this;
        }

        public Builder guestAccelerators(@Nullable Output<List<ClusterNodePoolNodeConfigGuestAcceleratorArgs>> guestAccelerators) {
            this.guestAccelerators = guestAccelerators;
            return this;
        }

        public Builder guestAccelerators(@Nullable List<ClusterNodePoolNodeConfigGuestAcceleratorArgs> guestAccelerators) {
            this.guestAccelerators = Output.ofNullable(guestAccelerators);
            return this;
        }

        public Builder imageType(@Nullable Output<String> imageType) {
            this.imageType = imageType;
            return this;
        }

        public Builder imageType(@Nullable String imageType) {
            this.imageType = Output.ofNullable(imageType);
            return this;
        }

        public Builder kubeletConfig(@Nullable Output<ClusterNodePoolNodeConfigKubeletConfigArgs> kubeletConfig) {
            this.kubeletConfig = kubeletConfig;
            return this;
        }

        public Builder kubeletConfig(@Nullable ClusterNodePoolNodeConfigKubeletConfigArgs kubeletConfig) {
            this.kubeletConfig = Output.ofNullable(kubeletConfig);
            return this;
        }

        public Builder labels(@Nullable Output<Map<String,String>> labels) {
            this.labels = labels;
            return this;
        }

        public Builder labels(@Nullable Map<String,String> labels) {
            this.labels = Output.ofNullable(labels);
            return this;
        }

        public Builder linuxNodeConfig(@Nullable Output<ClusterNodePoolNodeConfigLinuxNodeConfigArgs> linuxNodeConfig) {
            this.linuxNodeConfig = linuxNodeConfig;
            return this;
        }

        public Builder linuxNodeConfig(@Nullable ClusterNodePoolNodeConfigLinuxNodeConfigArgs linuxNodeConfig) {
            this.linuxNodeConfig = Output.ofNullable(linuxNodeConfig);
            return this;
        }

        public Builder localSsdCount(@Nullable Output<Integer> localSsdCount) {
            this.localSsdCount = localSsdCount;
            return this;
        }

        public Builder localSsdCount(@Nullable Integer localSsdCount) {
            this.localSsdCount = Output.ofNullable(localSsdCount);
            return this;
        }

        public Builder machineType(@Nullable Output<String> machineType) {
            this.machineType = machineType;
            return this;
        }

        public Builder machineType(@Nullable String machineType) {
            this.machineType = Output.ofNullable(machineType);
            return this;
        }

        public Builder metadata(@Nullable Output<Map<String,String>> metadata) {
            this.metadata = metadata;
            return this;
        }

        public Builder metadata(@Nullable Map<String,String> metadata) {
            this.metadata = Output.ofNullable(metadata);
            return this;
        }

        public Builder minCpuPlatform(@Nullable Output<String> minCpuPlatform) {
            this.minCpuPlatform = minCpuPlatform;
            return this;
        }

        public Builder minCpuPlatform(@Nullable String minCpuPlatform) {
            this.minCpuPlatform = Output.ofNullable(minCpuPlatform);
            return this;
        }

        public Builder nodeGroup(@Nullable Output<String> nodeGroup) {
            this.nodeGroup = nodeGroup;
            return this;
        }

        public Builder nodeGroup(@Nullable String nodeGroup) {
            this.nodeGroup = Output.ofNullable(nodeGroup);
            return this;
        }

        public Builder oauthScopes(@Nullable Output<List<String>> oauthScopes) {
            this.oauthScopes = oauthScopes;
            return this;
        }

        public Builder oauthScopes(@Nullable List<String> oauthScopes) {
            this.oauthScopes = Output.ofNullable(oauthScopes);
            return this;
        }

        public Builder preemptible(@Nullable Output<Boolean> preemptible) {
            this.preemptible = preemptible;
            return this;
        }

        public Builder preemptible(@Nullable Boolean preemptible) {
            this.preemptible = Output.ofNullable(preemptible);
            return this;
        }

        public Builder sandboxConfig(@Nullable Output<ClusterNodePoolNodeConfigSandboxConfigArgs> sandboxConfig) {
            this.sandboxConfig = sandboxConfig;
            return this;
        }

        public Builder sandboxConfig(@Nullable ClusterNodePoolNodeConfigSandboxConfigArgs sandboxConfig) {
            this.sandboxConfig = Output.ofNullable(sandboxConfig);
            return this;
        }

        public Builder serviceAccount(@Nullable Output<String> serviceAccount) {
            this.serviceAccount = serviceAccount;
            return this;
        }

        public Builder serviceAccount(@Nullable String serviceAccount) {
            this.serviceAccount = Output.ofNullable(serviceAccount);
            return this;
        }

        public Builder shieldedInstanceConfig(@Nullable Output<ClusterNodePoolNodeConfigShieldedInstanceConfigArgs> shieldedInstanceConfig) {
            this.shieldedInstanceConfig = shieldedInstanceConfig;
            return this;
        }

        public Builder shieldedInstanceConfig(@Nullable ClusterNodePoolNodeConfigShieldedInstanceConfigArgs shieldedInstanceConfig) {
            this.shieldedInstanceConfig = Output.ofNullable(shieldedInstanceConfig);
            return this;
        }

        public Builder spot(@Nullable Output<Boolean> spot) {
            this.spot = spot;
            return this;
        }

        public Builder spot(@Nullable Boolean spot) {
            this.spot = Output.ofNullable(spot);
            return this;
        }

        public Builder tags(@Nullable Output<List<String>> tags) {
            this.tags = tags;
            return this;
        }

        public Builder tags(@Nullable List<String> tags) {
            this.tags = Output.ofNullable(tags);
            return this;
        }

        public Builder taints(@Nullable Output<List<ClusterNodePoolNodeConfigTaintArgs>> taints) {
            this.taints = taints;
            return this;
        }

        public Builder taints(@Nullable List<ClusterNodePoolNodeConfigTaintArgs> taints) {
            this.taints = Output.ofNullable(taints);
            return this;
        }

        public Builder workloadMetadataConfig(@Nullable Output<ClusterNodePoolNodeConfigWorkloadMetadataConfigArgs> workloadMetadataConfig) {
            this.workloadMetadataConfig = workloadMetadataConfig;
            return this;
        }

        public Builder workloadMetadataConfig(@Nullable ClusterNodePoolNodeConfigWorkloadMetadataConfigArgs workloadMetadataConfig) {
            this.workloadMetadataConfig = Output.ofNullable(workloadMetadataConfig);
            return this;
        }
        public ClusterNodePoolNodeConfigArgs build() {
            return new ClusterNodePoolNodeConfigArgs(bootDiskKmsKey, diskSizeGb, diskType, ephemeralStorageConfig, gcfsConfig, guestAccelerators, imageType, kubeletConfig, labels, linuxNodeConfig, localSsdCount, machineType, metadata, minCpuPlatform, nodeGroup, oauthScopes, preemptible, sandboxConfig, serviceAccount, shieldedInstanceConfig, spot, tags, taints, workloadMetadataConfig);
        }
    }
}
