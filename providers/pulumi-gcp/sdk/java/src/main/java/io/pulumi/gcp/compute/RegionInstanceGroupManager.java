// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.compute;

import io.pulumi.core.Input;
import io.pulumi.core.Output;
import io.pulumi.core.internal.annotations.OutputExport;
import io.pulumi.core.internal.annotations.ResourceType;
import io.pulumi.gcp.Utilities;
import io.pulumi.gcp.compute.RegionInstanceGroupManagerArgs;
import io.pulumi.gcp.compute.inputs.RegionInstanceGroupManagerState;
import io.pulumi.gcp.compute.outputs.RegionInstanceGroupManagerAutoHealingPolicies;
import io.pulumi.gcp.compute.outputs.RegionInstanceGroupManagerNamedPort;
import io.pulumi.gcp.compute.outputs.RegionInstanceGroupManagerStatefulDisk;
import io.pulumi.gcp.compute.outputs.RegionInstanceGroupManagerStatus;
import io.pulumi.gcp.compute.outputs.RegionInstanceGroupManagerUpdatePolicy;
import io.pulumi.gcp.compute.outputs.RegionInstanceGroupManagerVersion;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

@ResourceType(type="gcp:compute/regionInstanceGroupManager:RegionInstanceGroupManager")
public class RegionInstanceGroupManager extends io.pulumi.resources.CustomResource {
    @OutputExport(name="autoHealingPolicies", type=RegionInstanceGroupManagerAutoHealingPolicies.class, parameters={})
    private Output</* @Nullable */ RegionInstanceGroupManagerAutoHealingPolicies> autoHealingPolicies;

    public Output</* @Nullable */ RegionInstanceGroupManagerAutoHealingPolicies> getAutoHealingPolicies() {
        return this.autoHealingPolicies;
    }
    @OutputExport(name="baseInstanceName", type=String.class, parameters={})
    private Output<String> baseInstanceName;

    public Output<String> getBaseInstanceName() {
        return this.baseInstanceName;
    }
    @OutputExport(name="description", type=String.class, parameters={})
    private Output</* @Nullable */ String> description;

    public Output</* @Nullable */ String> getDescription() {
        return this.description;
    }
    @OutputExport(name="distributionPolicyTargetShape", type=String.class, parameters={})
    private Output<String> distributionPolicyTargetShape;

    public Output<String> getDistributionPolicyTargetShape() {
        return this.distributionPolicyTargetShape;
    }
    @OutputExport(name="distributionPolicyZones", type=List.class, parameters={String.class})
    private Output<List<String>> distributionPolicyZones;

    public Output<List<String>> getDistributionPolicyZones() {
        return this.distributionPolicyZones;
    }
    @OutputExport(name="fingerprint", type=String.class, parameters={})
    private Output<String> fingerprint;

    public Output<String> getFingerprint() {
        return this.fingerprint;
    }
    @OutputExport(name="instanceGroup", type=String.class, parameters={})
    private Output<String> instanceGroup;

    public Output<String> getInstanceGroup() {
        return this.instanceGroup;
    }
    @OutputExport(name="name", type=String.class, parameters={})
    private Output<String> name;

    public Output<String> getName() {
        return this.name;
    }
    @OutputExport(name="namedPorts", type=List.class, parameters={RegionInstanceGroupManagerNamedPort.class})
    private Output</* @Nullable */ List<RegionInstanceGroupManagerNamedPort>> namedPorts;

    public Output</* @Nullable */ List<RegionInstanceGroupManagerNamedPort>> getNamedPorts() {
        return this.namedPorts;
    }
    @OutputExport(name="project", type=String.class, parameters={})
    private Output<String> project;

    public Output<String> getProject() {
        return this.project;
    }
    @OutputExport(name="region", type=String.class, parameters={})
    private Output<String> region;

    public Output<String> getRegion() {
        return this.region;
    }
    @OutputExport(name="selfLink", type=String.class, parameters={})
    private Output<String> selfLink;

    public Output<String> getSelfLink() {
        return this.selfLink;
    }
    @OutputExport(name="statefulDisks", type=List.class, parameters={RegionInstanceGroupManagerStatefulDisk.class})
    private Output</* @Nullable */ List<RegionInstanceGroupManagerStatefulDisk>> statefulDisks;

    public Output</* @Nullable */ List<RegionInstanceGroupManagerStatefulDisk>> getStatefulDisks() {
        return this.statefulDisks;
    }
    @OutputExport(name="statuses", type=List.class, parameters={RegionInstanceGroupManagerStatus.class})
    private Output<List<RegionInstanceGroupManagerStatus>> statuses;

    public Output<List<RegionInstanceGroupManagerStatus>> getStatuses() {
        return this.statuses;
    }
    @OutputExport(name="targetPools", type=List.class, parameters={String.class})
    private Output</* @Nullable */ List<String>> targetPools;

    public Output</* @Nullable */ List<String>> getTargetPools() {
        return this.targetPools;
    }
    @OutputExport(name="targetSize", type=Integer.class, parameters={})
    private Output<Integer> targetSize;

    public Output<Integer> getTargetSize() {
        return this.targetSize;
    }
    @OutputExport(name="updatePolicy", type=RegionInstanceGroupManagerUpdatePolicy.class, parameters={})
    private Output<RegionInstanceGroupManagerUpdatePolicy> updatePolicy;

    public Output<RegionInstanceGroupManagerUpdatePolicy> getUpdatePolicy() {
        return this.updatePolicy;
    }
    @OutputExport(name="versions", type=List.class, parameters={RegionInstanceGroupManagerVersion.class})
    private Output<List<RegionInstanceGroupManagerVersion>> versions;

    public Output<List<RegionInstanceGroupManagerVersion>> getVersions() {
        return this.versions;
    }
    @OutputExport(name="waitForInstances", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> waitForInstances;

    public Output</* @Nullable */ Boolean> getWaitForInstances() {
        return this.waitForInstances;
    }
    @OutputExport(name="waitForInstancesStatus", type=String.class, parameters={})
    private Output</* @Nullable */ String> waitForInstancesStatus;

    public Output</* @Nullable */ String> getWaitForInstancesStatus() {
        return this.waitForInstancesStatus;
    }

    public RegionInstanceGroupManager(String name, RegionInstanceGroupManagerArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("gcp:compute/regionInstanceGroupManager:RegionInstanceGroupManager", name, args == null ? RegionInstanceGroupManagerArgs.Empty : args, makeResourceOptions(options, Input.empty()));
    }

    private RegionInstanceGroupManager(String name, Input<String> id, @Nullable RegionInstanceGroupManagerState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("gcp:compute/regionInstanceGroupManager:RegionInstanceGroupManager", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Input<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .setVersion(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    public static RegionInstanceGroupManager get(String name, Input<String> id, @Nullable RegionInstanceGroupManagerState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new RegionInstanceGroupManager(name, id, state, options);
    }
}
