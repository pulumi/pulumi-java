// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.cloudbuild;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.gcp.cloudbuild.inputs.WorkerPoolNetworkConfigArgs;
import io.pulumi.gcp.cloudbuild.inputs.WorkerPoolWorkerConfigArgs;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class WorkerPoolArgs extends io.pulumi.resources.ResourceArgs {

    public static final WorkerPoolArgs Empty = new WorkerPoolArgs();

    /**
     * User specified annotations. See https://google.aip.dev/128#annotations for more details such as format and size
     * limitations.
     * 
     */
    @Import(name="annotations")
      private final @Nullable Output<Map<String,String>> annotations;

    public Output<Map<String,String>> getAnnotations() {
        return this.annotations == null ? Output.empty() : this.annotations;
    }

    /**
     * A user-specified, human-readable name for the `WorkerPool`. If provided, this value must be 1-63 characters.
     * 
     */
    @Import(name="displayName")
      private final @Nullable Output<String> displayName;

    public Output<String> getDisplayName() {
        return this.displayName == null ? Output.empty() : this.displayName;
    }

    /**
     * The location for the resource
     * 
     */
    @Import(name="location", required=true)
      private final Output<String> location;

    public Output<String> getLocation() {
        return this.location;
    }

    /**
     * User-defined name of the `WorkerPool`.
     * 
     */
    @Import(name="name")
      private final @Nullable Output<String> name;

    public Output<String> getName() {
        return this.name == null ? Output.empty() : this.name;
    }

    /**
     * Network configuration for the `WorkerPool`. Structure is documented below.
     * 
     */
    @Import(name="networkConfig")
      private final @Nullable Output<WorkerPoolNetworkConfigArgs> networkConfig;

    public Output<WorkerPoolNetworkConfigArgs> getNetworkConfig() {
        return this.networkConfig == null ? Output.empty() : this.networkConfig;
    }

    /**
     * The project for the resource
     * 
     */
    @Import(name="project")
      private final @Nullable Output<String> project;

    public Output<String> getProject() {
        return this.project == null ? Output.empty() : this.project;
    }

    /**
     * Configuration to be used for a creating workers in the `WorkerPool`. Structure is documented below.
     * 
     */
    @Import(name="workerConfig")
      private final @Nullable Output<WorkerPoolWorkerConfigArgs> workerConfig;

    public Output<WorkerPoolWorkerConfigArgs> getWorkerConfig() {
        return this.workerConfig == null ? Output.empty() : this.workerConfig;
    }

    public WorkerPoolArgs(
        @Nullable Output<Map<String,String>> annotations,
        @Nullable Output<String> displayName,
        Output<String> location,
        @Nullable Output<String> name,
        @Nullable Output<WorkerPoolNetworkConfigArgs> networkConfig,
        @Nullable Output<String> project,
        @Nullable Output<WorkerPoolWorkerConfigArgs> workerConfig) {
        this.annotations = annotations;
        this.displayName = displayName;
        this.location = Objects.requireNonNull(location, "expected parameter 'location' to be non-null");
        this.name = name;
        this.networkConfig = networkConfig;
        this.project = project;
        this.workerConfig = workerConfig;
    }

    private WorkerPoolArgs() {
        this.annotations = Output.empty();
        this.displayName = Output.empty();
        this.location = Output.empty();
        this.name = Output.empty();
        this.networkConfig = Output.empty();
        this.project = Output.empty();
        this.workerConfig = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(WorkerPoolArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<Map<String,String>> annotations;
        private @Nullable Output<String> displayName;
        private Output<String> location;
        private @Nullable Output<String> name;
        private @Nullable Output<WorkerPoolNetworkConfigArgs> networkConfig;
        private @Nullable Output<String> project;
        private @Nullable Output<WorkerPoolWorkerConfigArgs> workerConfig;

        public Builder() {
    	      // Empty
        }

        public Builder(WorkerPoolArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.annotations = defaults.annotations;
    	      this.displayName = defaults.displayName;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.networkConfig = defaults.networkConfig;
    	      this.project = defaults.project;
    	      this.workerConfig = defaults.workerConfig;
        }

        public Builder annotations(@Nullable Output<Map<String,String>> annotations) {
            this.annotations = annotations;
            return this;
        }
        public Builder annotations(@Nullable Map<String,String> annotations) {
            this.annotations = Output.ofNullable(annotations);
            return this;
        }
        public Builder displayName(@Nullable Output<String> displayName) {
            this.displayName = displayName;
            return this;
        }
        public Builder displayName(@Nullable String displayName) {
            this.displayName = Output.ofNullable(displayName);
            return this;
        }
        public Builder location(Output<String> location) {
            this.location = Objects.requireNonNull(location);
            return this;
        }
        public Builder location(String location) {
            this.location = Output.of(Objects.requireNonNull(location));
            return this;
        }
        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }
        public Builder name(@Nullable String name) {
            this.name = Output.ofNullable(name);
            return this;
        }
        public Builder networkConfig(@Nullable Output<WorkerPoolNetworkConfigArgs> networkConfig) {
            this.networkConfig = networkConfig;
            return this;
        }
        public Builder networkConfig(@Nullable WorkerPoolNetworkConfigArgs networkConfig) {
            this.networkConfig = Output.ofNullable(networkConfig);
            return this;
        }
        public Builder project(@Nullable Output<String> project) {
            this.project = project;
            return this;
        }
        public Builder project(@Nullable String project) {
            this.project = Output.ofNullable(project);
            return this;
        }
        public Builder workerConfig(@Nullable Output<WorkerPoolWorkerConfigArgs> workerConfig) {
            this.workerConfig = workerConfig;
            return this;
        }
        public Builder workerConfig(@Nullable WorkerPoolWorkerConfigArgs workerConfig) {
            this.workerConfig = Output.ofNullable(workerConfig);
            return this;
        }        public WorkerPoolArgs build() {
            return new WorkerPoolArgs(annotations, displayName, location, name, networkConfig, project, workerConfig);
        }
    }
}
