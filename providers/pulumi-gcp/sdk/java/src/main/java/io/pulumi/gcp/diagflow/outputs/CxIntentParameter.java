// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.diagflow.outputs;

import io.pulumi.core.annotations.OutputCustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class CxIntentParameter {
    /**
     * The entity type of the parameter.
     * Format: projects/-/locations/-/agents/-/entityTypes/<System Entity Type ID> for system entity types (for example, projects/-/locations/-/agents/-/entityTypes/sys.date), or projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>/entityTypes/<Entity Type ID> for developer entity types.
     * 
     */
    private final String entityType;
    /**
     * The unique identifier of the parameter. This field is used by training phrases to annotate their parts.
     * 
     */
    private final String id;
    /**
     * Indicates whether the parameter represents a list of values.
     * 
     */
    private final @Nullable Boolean isList;
    /**
     * Indicates whether the parameter content should be redacted in log. If redaction is enabled, the parameter content will be replaced by parameter name during logging.
     * Note: the parameter content is subject to redaction if either parameter level redaction or entity type level redaction is enabled.
     * 
     */
    private final @Nullable Boolean redact;

    @OutputCustomType.Constructor
    private CxIntentParameter(
        @OutputCustomType.Parameter("entityType") String entityType,
        @OutputCustomType.Parameter("id") String id,
        @OutputCustomType.Parameter("isList") @Nullable Boolean isList,
        @OutputCustomType.Parameter("redact") @Nullable Boolean redact) {
        this.entityType = entityType;
        this.id = id;
        this.isList = isList;
        this.redact = redact;
    }

    /**
     * The entity type of the parameter.
     * Format: projects/-/locations/-/agents/-/entityTypes/<System Entity Type ID> for system entity types (for example, projects/-/locations/-/agents/-/entityTypes/sys.date), or projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>/entityTypes/<Entity Type ID> for developer entity types.
     * 
    */
    public String getEntityType() {
        return this.entityType;
    }
    /**
     * The unique identifier of the parameter. This field is used by training phrases to annotate their parts.
     * 
    */
    public String getId() {
        return this.id;
    }
    /**
     * Indicates whether the parameter represents a list of values.
     * 
    */
    public Optional<Boolean> getIsList() {
        return Optional.ofNullable(this.isList);
    }
    /**
     * Indicates whether the parameter content should be redacted in log. If redaction is enabled, the parameter content will be replaced by parameter name during logging.
     * Note: the parameter content is subject to redaction if either parameter level redaction or entity type level redaction is enabled.
     * 
    */
    public Optional<Boolean> getRedact() {
        return Optional.ofNullable(this.redact);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CxIntentParameter defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String entityType;
        private String id;
        private @Nullable Boolean isList;
        private @Nullable Boolean redact;

        public Builder() {
    	      // Empty
        }

        public Builder(CxIntentParameter defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.entityType = defaults.entityType;
    	      this.id = defaults.id;
    	      this.isList = defaults.isList;
    	      this.redact = defaults.redact;
        }

        public Builder setEntityType(String entityType) {
            this.entityType = Objects.requireNonNull(entityType);
            return this;
        }

        public Builder setId(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }

        public Builder setIsList(@Nullable Boolean isList) {
            this.isList = isList;
            return this;
        }

        public Builder setRedact(@Nullable Boolean redact) {
            this.redact = redact;
            return this;
        }
        public CxIntentParameter build() {
            return new CxIntentParameter(entityType, id, isList, redact);
        }
    }
}
