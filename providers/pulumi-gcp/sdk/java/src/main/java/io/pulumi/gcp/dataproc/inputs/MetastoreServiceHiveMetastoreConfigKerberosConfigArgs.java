// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.dataproc.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import io.pulumi.gcp.dataproc.inputs.MetastoreServiceHiveMetastoreConfigKerberosConfigKeytabArgs;
import java.lang.String;
import java.util.Objects;


public final class MetastoreServiceHiveMetastoreConfigKerberosConfigArgs extends io.pulumi.resources.ResourceArgs {

    public static final MetastoreServiceHiveMetastoreConfigKerberosConfigArgs Empty = new MetastoreServiceHiveMetastoreConfigKerberosConfigArgs();

    /**
     * A Kerberos keytab file that can be used to authenticate a service principal with a Kerberos Key Distribution Center (KDC).
     * Structure is documented below.
     * 
     */
    @Import(name="keytab", required=true)
      private final Output<MetastoreServiceHiveMetastoreConfigKerberosConfigKeytabArgs> keytab;

    public Output<MetastoreServiceHiveMetastoreConfigKerberosConfigKeytabArgs> getKeytab() {
        return this.keytab;
    }

    /**
     * A Cloud Storage URI that specifies the path to a krb5.conf file. It is of the form gs://{bucket_name}/path/to/krb5.conf, although the file does not need to be named krb5.conf explicitly.
     * 
     */
    @Import(name="krb5ConfigGcsUri", required=true)
      private final Output<String> krb5ConfigGcsUri;

    public Output<String> getKrb5ConfigGcsUri() {
        return this.krb5ConfigGcsUri;
    }

    /**
     * A Kerberos principal that exists in the both the keytab the KDC to authenticate as. A typical principal is of the form "primary/instance@REALM", but there is no exact format.
     * 
     */
    @Import(name="principal", required=true)
      private final Output<String> principal;

    public Output<String> getPrincipal() {
        return this.principal;
    }

    public MetastoreServiceHiveMetastoreConfigKerberosConfigArgs(
        Output<MetastoreServiceHiveMetastoreConfigKerberosConfigKeytabArgs> keytab,
        Output<String> krb5ConfigGcsUri,
        Output<String> principal) {
        this.keytab = Objects.requireNonNull(keytab, "expected parameter 'keytab' to be non-null");
        this.krb5ConfigGcsUri = Objects.requireNonNull(krb5ConfigGcsUri, "expected parameter 'krb5ConfigGcsUri' to be non-null");
        this.principal = Objects.requireNonNull(principal, "expected parameter 'principal' to be non-null");
    }

    private MetastoreServiceHiveMetastoreConfigKerberosConfigArgs() {
        this.keytab = Codegen.empty();
        this.krb5ConfigGcsUri = Codegen.empty();
        this.principal = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MetastoreServiceHiveMetastoreConfigKerberosConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<MetastoreServiceHiveMetastoreConfigKerberosConfigKeytabArgs> keytab;
        private Output<String> krb5ConfigGcsUri;
        private Output<String> principal;

        public Builder() {
    	      // Empty
        }

        public Builder(MetastoreServiceHiveMetastoreConfigKerberosConfigArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.keytab = defaults.keytab;
    	      this.krb5ConfigGcsUri = defaults.krb5ConfigGcsUri;
    	      this.principal = defaults.principal;
        }

        public Builder keytab(Output<MetastoreServiceHiveMetastoreConfigKerberosConfigKeytabArgs> keytab) {
            this.keytab = Objects.requireNonNull(keytab);
            return this;
        }
        public Builder keytab(MetastoreServiceHiveMetastoreConfigKerberosConfigKeytabArgs keytab) {
            this.keytab = Output.of(Objects.requireNonNull(keytab));
            return this;
        }
        public Builder krb5ConfigGcsUri(Output<String> krb5ConfigGcsUri) {
            this.krb5ConfigGcsUri = Objects.requireNonNull(krb5ConfigGcsUri);
            return this;
        }
        public Builder krb5ConfigGcsUri(String krb5ConfigGcsUri) {
            this.krb5ConfigGcsUri = Output.of(Objects.requireNonNull(krb5ConfigGcsUri));
            return this;
        }
        public Builder principal(Output<String> principal) {
            this.principal = Objects.requireNonNull(principal);
            return this;
        }
        public Builder principal(String principal) {
            this.principal = Output.of(Objects.requireNonNull(principal));
            return this;
        }        public MetastoreServiceHiveMetastoreConfigKerberosConfigArgs build() {
            return new MetastoreServiceHiveMetastoreConfigKerberosConfigArgs(keytab, krb5ConfigGcsUri, principal);
        }
    }
}
