// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.bigquery.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.gcp.bigquery.inputs.AppProfileSingleClusterRoutingGetArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class AppProfileState extends io.pulumi.resources.ResourceArgs {

    public static final AppProfileState Empty = new AppProfileState();

    /**
     * The unique name of the app profile in the form `[_a-zA-Z0-9][-_.a-zA-Z0-9]*`.
     * 
     */
    @Import(name="appProfileId")
      private final @Nullable Output<String> appProfileId;

    public Output<String> getAppProfileId() {
        return this.appProfileId == null ? Output.empty() : this.appProfileId;
    }

    /**
     * Long form description of the use case for this app profile.
     * 
     */
    @Import(name="description")
      private final @Nullable Output<String> description;

    public Output<String> getDescription() {
        return this.description == null ? Output.empty() : this.description;
    }

    /**
     * If true, ignore safety checks when deleting/updating the app profile.
     * 
     */
    @Import(name="ignoreWarnings")
      private final @Nullable Output<Boolean> ignoreWarnings;

    public Output<Boolean> getIgnoreWarnings() {
        return this.ignoreWarnings == null ? Output.empty() : this.ignoreWarnings;
    }

    /**
     * The name of the instance to create the app profile within.
     * 
     */
    @Import(name="instance")
      private final @Nullable Output<String> instance;

    public Output<String> getInstance() {
        return this.instance == null ? Output.empty() : this.instance;
    }

    /**
     * If true, read/write requests are routed to the nearest cluster in the instance, and will fail over to the nearest cluster that is available
     * in the event of transient errors or delays. Clusters in a region are considered equidistant. Choosing this option sacrifices read-your-writes
     * consistency to improve availability.
     * 
     */
    @Import(name="multiClusterRoutingUseAny")
      private final @Nullable Output<Boolean> multiClusterRoutingUseAny;

    public Output<Boolean> getMultiClusterRoutingUseAny() {
        return this.multiClusterRoutingUseAny == null ? Output.empty() : this.multiClusterRoutingUseAny;
    }

    /**
     * The unique name of the requested app profile. Values are of the form
     * 'projects/<project>/instances/<instance>/appProfiles/<appProfileId>'.
     * 
     */
    @Import(name="name")
      private final @Nullable Output<String> name;

    public Output<String> getName() {
        return this.name == null ? Output.empty() : this.name;
    }

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Import(name="project")
      private final @Nullable Output<String> project;

    public Output<String> getProject() {
        return this.project == null ? Output.empty() : this.project;
    }

    /**
     * Use a single-cluster routing policy.
     * Structure is documented below.
     * 
     */
    @Import(name="singleClusterRouting")
      private final @Nullable Output<AppProfileSingleClusterRoutingGetArgs> singleClusterRouting;

    public Output<AppProfileSingleClusterRoutingGetArgs> getSingleClusterRouting() {
        return this.singleClusterRouting == null ? Output.empty() : this.singleClusterRouting;
    }

    public AppProfileState(
        @Nullable Output<String> appProfileId,
        @Nullable Output<String> description,
        @Nullable Output<Boolean> ignoreWarnings,
        @Nullable Output<String> instance,
        @Nullable Output<Boolean> multiClusterRoutingUseAny,
        @Nullable Output<String> name,
        @Nullable Output<String> project,
        @Nullable Output<AppProfileSingleClusterRoutingGetArgs> singleClusterRouting) {
        this.appProfileId = appProfileId;
        this.description = description;
        this.ignoreWarnings = ignoreWarnings;
        this.instance = instance;
        this.multiClusterRoutingUseAny = multiClusterRoutingUseAny;
        this.name = name;
        this.project = project;
        this.singleClusterRouting = singleClusterRouting;
    }

    private AppProfileState() {
        this.appProfileId = Output.empty();
        this.description = Output.empty();
        this.ignoreWarnings = Output.empty();
        this.instance = Output.empty();
        this.multiClusterRoutingUseAny = Output.empty();
        this.name = Output.empty();
        this.project = Output.empty();
        this.singleClusterRouting = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AppProfileState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> appProfileId;
        private @Nullable Output<String> description;
        private @Nullable Output<Boolean> ignoreWarnings;
        private @Nullable Output<String> instance;
        private @Nullable Output<Boolean> multiClusterRoutingUseAny;
        private @Nullable Output<String> name;
        private @Nullable Output<String> project;
        private @Nullable Output<AppProfileSingleClusterRoutingGetArgs> singleClusterRouting;

        public Builder() {
    	      // Empty
        }

        public Builder(AppProfileState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.appProfileId = defaults.appProfileId;
    	      this.description = defaults.description;
    	      this.ignoreWarnings = defaults.ignoreWarnings;
    	      this.instance = defaults.instance;
    	      this.multiClusterRoutingUseAny = defaults.multiClusterRoutingUseAny;
    	      this.name = defaults.name;
    	      this.project = defaults.project;
    	      this.singleClusterRouting = defaults.singleClusterRouting;
        }

        public Builder appProfileId(@Nullable Output<String> appProfileId) {
            this.appProfileId = appProfileId;
            return this;
        }

        public Builder appProfileId(@Nullable String appProfileId) {
            this.appProfileId = Output.ofNullable(appProfileId);
            return this;
        }

        public Builder description(@Nullable Output<String> description) {
            this.description = description;
            return this;
        }

        public Builder description(@Nullable String description) {
            this.description = Output.ofNullable(description);
            return this;
        }

        public Builder ignoreWarnings(@Nullable Output<Boolean> ignoreWarnings) {
            this.ignoreWarnings = ignoreWarnings;
            return this;
        }

        public Builder ignoreWarnings(@Nullable Boolean ignoreWarnings) {
            this.ignoreWarnings = Output.ofNullable(ignoreWarnings);
            return this;
        }

        public Builder instance(@Nullable Output<String> instance) {
            this.instance = instance;
            return this;
        }

        public Builder instance(@Nullable String instance) {
            this.instance = Output.ofNullable(instance);
            return this;
        }

        public Builder multiClusterRoutingUseAny(@Nullable Output<Boolean> multiClusterRoutingUseAny) {
            this.multiClusterRoutingUseAny = multiClusterRoutingUseAny;
            return this;
        }

        public Builder multiClusterRoutingUseAny(@Nullable Boolean multiClusterRoutingUseAny) {
            this.multiClusterRoutingUseAny = Output.ofNullable(multiClusterRoutingUseAny);
            return this;
        }

        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }

        public Builder name(@Nullable String name) {
            this.name = Output.ofNullable(name);
            return this;
        }

        public Builder project(@Nullable Output<String> project) {
            this.project = project;
            return this;
        }

        public Builder project(@Nullable String project) {
            this.project = Output.ofNullable(project);
            return this;
        }

        public Builder singleClusterRouting(@Nullable Output<AppProfileSingleClusterRoutingGetArgs> singleClusterRouting) {
            this.singleClusterRouting = singleClusterRouting;
            return this;
        }

        public Builder singleClusterRouting(@Nullable AppProfileSingleClusterRoutingGetArgs singleClusterRouting) {
            this.singleClusterRouting = Output.ofNullable(singleClusterRouting);
            return this;
        }
        public AppProfileState build() {
            return new AppProfileState(appProfileId, description, ignoreWarnings, instance, multiClusterRoutingUseAny, name, project, singleClusterRouting);
        }
    }
}
