// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.compute;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Export;
import io.pulumi.core.annotations.ResourceType;
import io.pulumi.gcp.Utilities;
import io.pulumi.gcp.compute.InstanceGroupNamedPortArgs;
import io.pulumi.gcp.compute.inputs.InstanceGroupNamedPortState;
import java.lang.Integer;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * Mange the named ports setting for a managed instance group without
 * managing the group as whole. This resource is primarily intended for use
 * with GKE-generated groups that shouldn't otherwise be managed by other
 * tools.
 * 
 * 
 * To get more information about InstanceGroupNamedPort, see:
 * 
 * * [API documentation](https://cloud.google.com/compute/docs/reference/rest/v1/instanceGroup)
 * * How-to Guides
 *     * [Official Documentation](https://cloud.google.com/compute/docs/instance-groups/)
 * 
 * {{% examples %}}
 * ## Example Usage
 * {{% example %}}
 * ### Instance Group Named Port Gke
 * 
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 * 
 * const containerNetwork = new gcp.compute.Network("containerNetwork", {autoCreateSubnetworks: false});
 * const containerSubnetwork = new gcp.compute.Subnetwork("containerSubnetwork", {
 *     region: "us-central1",
 *     network: containerNetwork.name,
 *     ipCidrRange: "10.0.36.0/24",
 * });
 * const myCluster = new gcp.container.Cluster("myCluster", {
 *     location: "us-central1-a",
 *     initialNodeCount: 1,
 *     network: containerNetwork.name,
 *     subnetwork: containerSubnetwork.name,
 *     ipAllocationPolicy: {
 *         clusterIpv4CidrBlock: "/19",
 *         servicesIpv4CidrBlock: "/22",
 *     },
 * });
 * const myPort = new gcp.compute.InstanceGroupNamedPort("myPort", {
 *     group: myCluster.nodePools.apply(nodePools => nodePools[0].instanceGroupUrls?[0]),
 *     zone: "us-central1-a",
 *     port: 8080,
 * });
 * const myPorts = new gcp.compute.InstanceGroupNamedPort("myPorts", {
 *     group: myCluster.nodePools.apply(nodePools => nodePools[0].instanceGroupUrls?[0]),
 *     zone: "us-central1-a",
 *     port: 4443,
 * });
 * ```
 * ```python
 * import pulumi
 * import pulumi_gcp as gcp
 * 
 * container_network = gcp.compute.Network("containerNetwork", auto_create_subnetworks=False)
 * container_subnetwork = gcp.compute.Subnetwork("containerSubnetwork",
 *     region="us-central1",
 *     network=container_network.name,
 *     ip_cidr_range="10.0.36.0/24")
 * my_cluster = gcp.container.Cluster("myCluster",
 *     location="us-central1-a",
 *     initial_node_count=1,
 *     network=container_network.name,
 *     subnetwork=container_subnetwork.name,
 *     ip_allocation_policy=gcp.container.ClusterIpAllocationPolicyArgs(
 *         cluster_ipv4_cidr_block="/19",
 *         services_ipv4_cidr_block="/22",
 *     ))
 * my_port = gcp.compute.InstanceGroupNamedPort("myPort",
 *     group=my_cluster.node_pools[0].instance_group_urls[0],
 *     zone="us-central1-a",
 *     port=8080)
 * my_ports = gcp.compute.InstanceGroupNamedPort("myPorts",
 *     group=my_cluster.node_pools[0].instance_group_urls[0],
 *     zone="us-central1-a",
 *     port=4443)
 * ```
 * ```csharp
 * using Pulumi;
 * using Gcp = Pulumi.Gcp;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var containerNetwork = new Gcp.Compute.Network("containerNetwork", new Gcp.Compute.NetworkArgs
 *         {
 *             AutoCreateSubnetworks = false,
 *         });
 *         var containerSubnetwork = new Gcp.Compute.Subnetwork("containerSubnetwork", new Gcp.Compute.SubnetworkArgs
 *         {
 *             Region = "us-central1",
 *             Network = containerNetwork.Name,
 *             IpCidrRange = "10.0.36.0/24",
 *         });
 *         var myCluster = new Gcp.Container.Cluster("myCluster", new Gcp.Container.ClusterArgs
 *         {
 *             Location = "us-central1-a",
 *             InitialNodeCount = 1,
 *             Network = containerNetwork.Name,
 *             Subnetwork = containerSubnetwork.Name,
 *             IpAllocationPolicy = new Gcp.Container.Inputs.ClusterIpAllocationPolicyArgs
 *             {
 *                 ClusterIpv4CidrBlock = "/19",
 *                 ServicesIpv4CidrBlock = "/22",
 *             },
 *         });
 *         var myPort = new Gcp.Compute.InstanceGroupNamedPort("myPort", new Gcp.Compute.InstanceGroupNamedPortArgs
 *         {
 *             Group = myCluster.NodePools.Apply(nodePools => nodePools[0].InstanceGroupUrls?[0]),
 *             Zone = "us-central1-a",
 *             Port = 8080,
 *         });
 *         var myPorts = new Gcp.Compute.InstanceGroupNamedPort("myPorts", new Gcp.Compute.InstanceGroupNamedPortArgs
 *         {
 *             Group = myCluster.NodePools.Apply(nodePools => nodePools[0].InstanceGroupUrls?[0]),
 *             Zone = "us-central1-a",
 *             Port = 4443,
 *         });
 *     }
 * 
 * }
 * ```
 * ```go
 * package main
 * 
 * import (
 * 	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/compute"
 * 	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/container"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		containerNetwork, err := compute.NewNetwork(ctx, "containerNetwork", &compute.NetworkArgs{
 * 			AutoCreateSubnetworks: pulumi.Bool(false),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		containerSubnetwork, err := compute.NewSubnetwork(ctx, "containerSubnetwork", &compute.SubnetworkArgs{
 * 			Region:      pulumi.String("us-central1"),
 * 			Network:     containerNetwork.Name,
 * 			IpCidrRange: pulumi.String("10.0.36.0/24"),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		myCluster, err := container.NewCluster(ctx, "myCluster", &container.ClusterArgs{
 * 			Location:         pulumi.String("us-central1-a"),
 * 			InitialNodeCount: pulumi.Int(1),
 * 			Network:          containerNetwork.Name,
 * 			Subnetwork:       containerSubnetwork.Name,
 * 			IpAllocationPolicy: &container.ClusterIpAllocationPolicyArgs{
 * 				ClusterIpv4CidrBlock:  pulumi.String("/19"),
 * 				ServicesIpv4CidrBlock: pulumi.String("/22"),
 * 			},
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		_, err = compute.NewInstanceGroupNamedPort(ctx, "myPort", &compute.InstanceGroupNamedPortArgs{
 * 			Group: myCluster.NodePools.ApplyT(func(nodePools []container.ClusterNodePool) (string, error) {
 * 				return nodePools[0].InstanceGroupUrls[0], nil
 * 			}).(pulumi.StringOutput),
 * 			Zone: pulumi.String("us-central1-a"),
 * 			Port: pulumi.Int(8080),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		_, err = compute.NewInstanceGroupNamedPort(ctx, "myPorts", &compute.InstanceGroupNamedPortArgs{
 * 			Group: myCluster.NodePools.ApplyT(func(nodePools []container.ClusterNodePool) (string, error) {
 * 				return nodePools[0].InstanceGroupUrls[0], nil
 * 			}).(pulumi.StringOutput),
 * 			Zone: pulumi.String("us-central1-a"),
 * 			Port: pulumi.Int(4443),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * ```
 * {{% /example %}}
 * {{% /examples %}}
 * 
 * ## Import
 * 
 * InstanceGroupNamedPort can be imported using any of these accepted formats
 * 
 * ```sh
 *  $ pulumi import gcp:compute/instanceGroupNamedPort:InstanceGroupNamedPort default projects/{{project}}/zones/{{zone}}/instanceGroups/{{group}}/{{port}}/{{name}}
 * ```
 * 
 * 
 * 
 * ```sh
 *  $ pulumi import gcp:compute/instanceGroupNamedPort:InstanceGroupNamedPort default {{project}}/{{zone}}/{{group}}/{{port}}/{{name}}
 * ```
 * 
 * 
 * 
 * ```sh
 *  $ pulumi import gcp:compute/instanceGroupNamedPort:InstanceGroupNamedPort default {{zone}}/{{group}}/{{port}}/{{name}}
 * ```
 * 
 * 
 * 
 * ```sh
 *  $ pulumi import gcp:compute/instanceGroupNamedPort:InstanceGroupNamedPort default {{group}}/{{port}}/{{name}}
 * ```
 * 
 *  
 */
@ResourceType(type="gcp:compute/instanceGroupNamedPort:InstanceGroupNamedPort")
public class InstanceGroupNamedPort extends io.pulumi.resources.CustomResource {
    /**
     * The name of the instance group.
     * 
     */
    @Export(name="group", type=String.class, parameters={})
    private Output<String> group;

    /**
     * @return The name of the instance group.
     * 
     */
    public Output<String> getGroup() {
        return this.group;
    }
    /**
     * The name for this named port. The name must be 1-63 characters
     * long, and comply with RFC1035.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The name for this named port. The name must be 1-63 characters
     * long, and comply with RFC1035.
     * 
     */
    public Output<String> getName() {
        return this.name;
    }
    /**
     * The port number, which can be a value between 1 and 65535.
     * 
     */
    @Export(name="port", type=Integer.class, parameters={})
    private Output<Integer> port;

    /**
     * @return The port number, which can be a value between 1 and 65535.
     * 
     */
    public Output<Integer> getPort() {
        return this.port;
    }
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Export(name="project", type=String.class, parameters={})
    private Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Output<String> getProject() {
        return this.project;
    }
    /**
     * The zone of the instance group.
     * 
     */
    @Export(name="zone", type=String.class, parameters={})
    private Output<String> zone;

    /**
     * @return The zone of the instance group.
     * 
     */
    public Output<String> getZone() {
        return this.zone;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public InstanceGroupNamedPort(String name) {
        this(name, InstanceGroupNamedPortArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public InstanceGroupNamedPort(String name, InstanceGroupNamedPortArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public InstanceGroupNamedPort(String name, InstanceGroupNamedPortArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("gcp:compute/instanceGroupNamedPort:InstanceGroupNamedPort", name, args == null ? InstanceGroupNamedPortArgs.Empty : args, makeResourceOptions(options, Output.empty()));
    }

    private InstanceGroupNamedPort(String name, Output<String> id, @Nullable InstanceGroupNamedPortState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("gcp:compute/instanceGroupNamedPort:InstanceGroupNamedPort", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static InstanceGroupNamedPort get(String name, Output<String> id, @Nullable InstanceGroupNamedPortState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new InstanceGroupNamedPort(name, id, state, options);
    }
}
