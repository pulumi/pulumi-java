// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.bigtable.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class InstanceClusterArgs extends io.pulumi.resources.ResourceArgs {

    public static final InstanceClusterArgs Empty = new InstanceClusterArgs();

    /**
     * The ID of the Cloud Bigtable cluster.
     * 
     */
    @Import(name="clusterId", required=true)
      private final Output<String> clusterId;

    public Output<String> getClusterId() {
        return this.clusterId;
    }

    /**
     * Describes the Cloud KMS encryption key that will be used to protect the destination Bigtable cluster. The requirements for this key are: 1) The Cloud Bigtable service account associated with the project that contains this cluster must be granted the `cloudkms.cryptoKeyEncrypterDecrypter` role on the CMEK key. 2) Only regional keys can be used and the region of the CMEK key must match the region of the cluster. 3) All clusters within an instance must use the same CMEK key. Values are of the form `projects/{project}/locations/{location}/keyRings/{keyring}/cryptoKeys/{key}`
     * 
     */
    @Import(name="kmsKeyName")
      private final @Nullable Output<String> kmsKeyName;

    public Output<String> getKmsKeyName() {
        return this.kmsKeyName == null ? Output.empty() : this.kmsKeyName;
    }

    /**
     * The number of nodes in your Cloud Bigtable cluster.
     * Required, with a minimum of `1` for a `PRODUCTION` instance. Must be left unset
     * for a `DEVELOPMENT` instance.
     * 
     */
    @Import(name="numNodes")
      private final @Nullable Output<Integer> numNodes;

    public Output<Integer> getNumNodes() {
        return this.numNodes == null ? Output.empty() : this.numNodes;
    }

    /**
     * The storage type to use. One of `"SSD"` or
     * `"HDD"`. Defaults to `"SSD"`.
     * 
     */
    @Import(name="storageType")
      private final @Nullable Output<String> storageType;

    public Output<String> getStorageType() {
        return this.storageType == null ? Output.empty() : this.storageType;
    }

    /**
     * The zone to create the Cloud Bigtable cluster in. If it not
     * specified, the provider zone is used. Each cluster must have a different zone in the same region. Zones that support
     * Bigtable instances are noted on the [Cloud Bigtable locations page](https://cloud.google.com/bigtable/docs/locations).
     * 
     */
    @Import(name="zone")
      private final @Nullable Output<String> zone;

    public Output<String> getZone() {
        return this.zone == null ? Output.empty() : this.zone;
    }

    public InstanceClusterArgs(
        Output<String> clusterId,
        @Nullable Output<String> kmsKeyName,
        @Nullable Output<Integer> numNodes,
        @Nullable Output<String> storageType,
        @Nullable Output<String> zone) {
        this.clusterId = Objects.requireNonNull(clusterId, "expected parameter 'clusterId' to be non-null");
        this.kmsKeyName = kmsKeyName;
        this.numNodes = numNodes;
        this.storageType = storageType;
        this.zone = zone;
    }

    private InstanceClusterArgs() {
        this.clusterId = Output.empty();
        this.kmsKeyName = Output.empty();
        this.numNodes = Output.empty();
        this.storageType = Output.empty();
        this.zone = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(InstanceClusterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> clusterId;
        private @Nullable Output<String> kmsKeyName;
        private @Nullable Output<Integer> numNodes;
        private @Nullable Output<String> storageType;
        private @Nullable Output<String> zone;

        public Builder() {
    	      // Empty
        }

        public Builder(InstanceClusterArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.clusterId = defaults.clusterId;
    	      this.kmsKeyName = defaults.kmsKeyName;
    	      this.numNodes = defaults.numNodes;
    	      this.storageType = defaults.storageType;
    	      this.zone = defaults.zone;
        }

        public Builder clusterId(Output<String> clusterId) {
            this.clusterId = Objects.requireNonNull(clusterId);
            return this;
        }
        public Builder clusterId(String clusterId) {
            this.clusterId = Output.of(Objects.requireNonNull(clusterId));
            return this;
        }
        public Builder kmsKeyName(@Nullable Output<String> kmsKeyName) {
            this.kmsKeyName = kmsKeyName;
            return this;
        }
        public Builder kmsKeyName(@Nullable String kmsKeyName) {
            this.kmsKeyName = Output.ofNullable(kmsKeyName);
            return this;
        }
        public Builder numNodes(@Nullable Output<Integer> numNodes) {
            this.numNodes = numNodes;
            return this;
        }
        public Builder numNodes(@Nullable Integer numNodes) {
            this.numNodes = Output.ofNullable(numNodes);
            return this;
        }
        public Builder storageType(@Nullable Output<String> storageType) {
            this.storageType = storageType;
            return this;
        }
        public Builder storageType(@Nullable String storageType) {
            this.storageType = Output.ofNullable(storageType);
            return this;
        }
        public Builder zone(@Nullable Output<String> zone) {
            this.zone = zone;
            return this;
        }
        public Builder zone(@Nullable String zone) {
            this.zone = Output.ofNullable(zone);
            return this;
        }        public InstanceClusterArgs build() {
            return new InstanceClusterArgs(clusterId, kmsKeyName, numNodes, storageType, zone);
        }
    }
}
