// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.filestore.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import io.pulumi.gcp.filestore.inputs.InstanceFileSharesGetArgs;
import io.pulumi.gcp.filestore.inputs.InstanceNetworkGetArgs;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class InstanceState extends io.pulumi.resources.ResourceArgs {

    public static final InstanceState Empty = new InstanceState();

    /**
     * Creation timestamp in RFC3339 text format.
     * 
     */
    @Import(name="createTime")
      private final @Nullable Output<String> createTime;

    public Output<String> getCreateTime() {
        return this.createTime == null ? Codegen.empty() : this.createTime;
    }

    /**
     * A description of the instance.
     * 
     */
    @Import(name="description")
      private final @Nullable Output<String> description;

    public Output<String> getDescription() {
        return this.description == null ? Codegen.empty() : this.description;
    }

    /**
     * Server-specified ETag for the instance resource to prevent simultaneous updates from overwriting each other.
     * 
     */
    @Import(name="etag")
      private final @Nullable Output<String> etag;

    public Output<String> getEtag() {
        return this.etag == null ? Codegen.empty() : this.etag;
    }

    /**
     * File system shares on the instance. For this version, only a
     * single file share is supported.
     * Structure is documented below.
     * 
     */
    @Import(name="fileShares")
      private final @Nullable Output<InstanceFileSharesGetArgs> fileShares;

    public Output<InstanceFileSharesGetArgs> getFileShares() {
        return this.fileShares == null ? Codegen.empty() : this.fileShares;
    }

    /**
     * Resource labels to represent user-provided metadata.
     * 
     */
    @Import(name="labels")
      private final @Nullable Output<Map<String,String>> labels;

    public Output<Map<String,String>> getLabels() {
        return this.labels == null ? Codegen.empty() : this.labels;
    }

    /**
     * The name of the location of the instance. This can be a region for ENTERPRISE tier instances.
     * 
     */
    @Import(name="location")
      private final @Nullable Output<String> location;

    public Output<String> getLocation() {
        return this.location == null ? Codegen.empty() : this.location;
    }

    /**
     * The name of the fileshare (16 characters or less)
     * 
     */
    @Import(name="name")
      private final @Nullable Output<String> name;

    public Output<String> getName() {
        return this.name == null ? Codegen.empty() : this.name;
    }

    /**
     * VPC networks to which the instance is connected. For this version,
     * only a single network is supported.
     * Structure is documented below.
     * 
     */
    @Import(name="networks")
      private final @Nullable Output<List<InstanceNetworkGetArgs>> networks;

    public Output<List<InstanceNetworkGetArgs>> getNetworks() {
        return this.networks == null ? Codegen.empty() : this.networks;
    }

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Import(name="project")
      private final @Nullable Output<String> project;

    public Output<String> getProject() {
        return this.project == null ? Codegen.empty() : this.project;
    }

    /**
     * The service tier of the instance.
     * Possible values include: STANDARD, PREMIUM, BASIC_HDD, BASIC_SSD, HIGH_SCALE_SSD and ENTERPRISE (beta only)
     * 
     */
    @Import(name="tier")
      private final @Nullable Output<String> tier;

    public Output<String> getTier() {
        return this.tier == null ? Codegen.empty() : this.tier;
    }

    /**
     * - 
     * (Optional, Deprecated)
     * The name of the Filestore zone of the instance.
     * 
     * @Deprecated
     * Deprecated in favor of location.
     * 
     */
    @Deprecated /* Deprecated in favor of location. */
    @Import(name="zone")
      private final @Nullable Output<String> zone;

    @Deprecated /* Deprecated in favor of location. */
    public Output<String> getZone() {
        return this.zone == null ? Codegen.empty() : this.zone;
    }

    public InstanceState(
        @Nullable Output<String> createTime,
        @Nullable Output<String> description,
        @Nullable Output<String> etag,
        @Nullable Output<InstanceFileSharesGetArgs> fileShares,
        @Nullable Output<Map<String,String>> labels,
        @Nullable Output<String> location,
        @Nullable Output<String> name,
        @Nullable Output<List<InstanceNetworkGetArgs>> networks,
        @Nullable Output<String> project,
        @Nullable Output<String> tier,
        @Nullable Output<String> zone) {
        this.createTime = createTime;
        this.description = description;
        this.etag = etag;
        this.fileShares = fileShares;
        this.labels = labels;
        this.location = location;
        this.name = name;
        this.networks = networks;
        this.project = project;
        this.tier = tier;
        this.zone = zone;
    }

    private InstanceState() {
        this.createTime = Codegen.empty();
        this.description = Codegen.empty();
        this.etag = Codegen.empty();
        this.fileShares = Codegen.empty();
        this.labels = Codegen.empty();
        this.location = Codegen.empty();
        this.name = Codegen.empty();
        this.networks = Codegen.empty();
        this.project = Codegen.empty();
        this.tier = Codegen.empty();
        this.zone = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(InstanceState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> createTime;
        private @Nullable Output<String> description;
        private @Nullable Output<String> etag;
        private @Nullable Output<InstanceFileSharesGetArgs> fileShares;
        private @Nullable Output<Map<String,String>> labels;
        private @Nullable Output<String> location;
        private @Nullable Output<String> name;
        private @Nullable Output<List<InstanceNetworkGetArgs>> networks;
        private @Nullable Output<String> project;
        private @Nullable Output<String> tier;
        private @Nullable Output<String> zone;

        public Builder() {
    	      // Empty
        }

        public Builder(InstanceState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.createTime = defaults.createTime;
    	      this.description = defaults.description;
    	      this.etag = defaults.etag;
    	      this.fileShares = defaults.fileShares;
    	      this.labels = defaults.labels;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.networks = defaults.networks;
    	      this.project = defaults.project;
    	      this.tier = defaults.tier;
    	      this.zone = defaults.zone;
        }

        public Builder createTime(@Nullable Output<String> createTime) {
            this.createTime = createTime;
            return this;
        }
        public Builder createTime(@Nullable String createTime) {
            this.createTime = Codegen.ofNullable(createTime);
            return this;
        }
        public Builder description(@Nullable Output<String> description) {
            this.description = description;
            return this;
        }
        public Builder description(@Nullable String description) {
            this.description = Codegen.ofNullable(description);
            return this;
        }
        public Builder etag(@Nullable Output<String> etag) {
            this.etag = etag;
            return this;
        }
        public Builder etag(@Nullable String etag) {
            this.etag = Codegen.ofNullable(etag);
            return this;
        }
        public Builder fileShares(@Nullable Output<InstanceFileSharesGetArgs> fileShares) {
            this.fileShares = fileShares;
            return this;
        }
        public Builder fileShares(@Nullable InstanceFileSharesGetArgs fileShares) {
            this.fileShares = Codegen.ofNullable(fileShares);
            return this;
        }
        public Builder labels(@Nullable Output<Map<String,String>> labels) {
            this.labels = labels;
            return this;
        }
        public Builder labels(@Nullable Map<String,String> labels) {
            this.labels = Codegen.ofNullable(labels);
            return this;
        }
        public Builder location(@Nullable Output<String> location) {
            this.location = location;
            return this;
        }
        public Builder location(@Nullable String location) {
            this.location = Codegen.ofNullable(location);
            return this;
        }
        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }
        public Builder name(@Nullable String name) {
            this.name = Codegen.ofNullable(name);
            return this;
        }
        public Builder networks(@Nullable Output<List<InstanceNetworkGetArgs>> networks) {
            this.networks = networks;
            return this;
        }
        public Builder networks(@Nullable List<InstanceNetworkGetArgs> networks) {
            this.networks = Codegen.ofNullable(networks);
            return this;
        }
        public Builder networks(InstanceNetworkGetArgs... networks) {
            return networks(List.of(networks));
        }
        public Builder project(@Nullable Output<String> project) {
            this.project = project;
            return this;
        }
        public Builder project(@Nullable String project) {
            this.project = Codegen.ofNullable(project);
            return this;
        }
        public Builder tier(@Nullable Output<String> tier) {
            this.tier = tier;
            return this;
        }
        public Builder tier(@Nullable String tier) {
            this.tier = Codegen.ofNullable(tier);
            return this;
        }
        public Builder zone(@Nullable Output<String> zone) {
            this.zone = zone;
            return this;
        }
        public Builder zone(@Nullable String zone) {
            this.zone = Codegen.ofNullable(zone);
            return this;
        }        public InstanceState build() {
            return new InstanceState(createTime, description, etag, fileShares, labels, location, name, networks, project, tier, zone);
        }
    }
}
