// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.compute;

import io.pulumi.core.Input;
import io.pulumi.core.Output;
import io.pulumi.core.internal.annotations.OutputExport;
import io.pulumi.core.internal.annotations.ResourceType;
import io.pulumi.gcp.Utilities;
import io.pulumi.gcp.compute.VPNTunnelArgs;
import io.pulumi.gcp.compute.inputs.VPNTunnelState;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;

@ResourceType(type="gcp:compute/vPNTunnel:VPNTunnel")
public class VPNTunnel extends io.pulumi.resources.CustomResource {
    @OutputExport(name="creationTimestamp", type=String.class, parameters={})
    private Output<String> creationTimestamp;

    public Output<String> getCreationTimestamp() {
        return this.creationTimestamp;
    }
    @OutputExport(name="description", type=String.class, parameters={})
    private Output</* @Nullable */ String> description;

    public Output</* @Nullable */ String> getDescription() {
        return this.description;
    }
    @OutputExport(name="detailedStatus", type=String.class, parameters={})
    private Output<String> detailedStatus;

    public Output<String> getDetailedStatus() {
        return this.detailedStatus;
    }
    @OutputExport(name="ikeVersion", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> ikeVersion;

    public Output</* @Nullable */ Integer> getIkeVersion() {
        return this.ikeVersion;
    }
    @OutputExport(name="labelFingerprint", type=String.class, parameters={})
    private Output<String> labelFingerprint;

    public Output<String> getLabelFingerprint() {
        return this.labelFingerprint;
    }
    @OutputExport(name="labels", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> labels;

    public Output</* @Nullable */ Map<String,String>> getLabels() {
        return this.labels;
    }
    @OutputExport(name="localTrafficSelectors", type=List.class, parameters={String.class})
    private Output<List<String>> localTrafficSelectors;

    public Output<List<String>> getLocalTrafficSelectors() {
        return this.localTrafficSelectors;
    }
    @OutputExport(name="name", type=String.class, parameters={})
    private Output<String> name;

    public Output<String> getName() {
        return this.name;
    }
    @OutputExport(name="peerExternalGateway", type=String.class, parameters={})
    private Output</* @Nullable */ String> peerExternalGateway;

    public Output</* @Nullable */ String> getPeerExternalGateway() {
        return this.peerExternalGateway;
    }
    @OutputExport(name="peerExternalGatewayInterface", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> peerExternalGatewayInterface;

    public Output</* @Nullable */ Integer> getPeerExternalGatewayInterface() {
        return this.peerExternalGatewayInterface;
    }
    @OutputExport(name="peerGcpGateway", type=String.class, parameters={})
    private Output</* @Nullable */ String> peerGcpGateway;

    public Output</* @Nullable */ String> getPeerGcpGateway() {
        return this.peerGcpGateway;
    }
    @OutputExport(name="peerIp", type=String.class, parameters={})
    private Output<String> peerIp;

    public Output<String> getPeerIp() {
        return this.peerIp;
    }
    @OutputExport(name="project", type=String.class, parameters={})
    private Output<String> project;

    public Output<String> getProject() {
        return this.project;
    }
    @OutputExport(name="region", type=String.class, parameters={})
    private Output<String> region;

    public Output<String> getRegion() {
        return this.region;
    }
    @OutputExport(name="remoteTrafficSelectors", type=List.class, parameters={String.class})
    private Output<List<String>> remoteTrafficSelectors;

    public Output<List<String>> getRemoteTrafficSelectors() {
        return this.remoteTrafficSelectors;
    }
    @OutputExport(name="router", type=String.class, parameters={})
    private Output</* @Nullable */ String> router;

    public Output</* @Nullable */ String> getRouter() {
        return this.router;
    }
    @OutputExport(name="selfLink", type=String.class, parameters={})
    private Output<String> selfLink;

    public Output<String> getSelfLink() {
        return this.selfLink;
    }
    @OutputExport(name="sharedSecret", type=String.class, parameters={})
    private Output<String> sharedSecret;

    public Output<String> getSharedSecret() {
        return this.sharedSecret;
    }
    @OutputExport(name="sharedSecretHash", type=String.class, parameters={})
    private Output<String> sharedSecretHash;

    public Output<String> getSharedSecretHash() {
        return this.sharedSecretHash;
    }
    @OutputExport(name="targetVpnGateway", type=String.class, parameters={})
    private Output</* @Nullable */ String> targetVpnGateway;

    public Output</* @Nullable */ String> getTargetVpnGateway() {
        return this.targetVpnGateway;
    }
    @OutputExport(name="tunnelId", type=String.class, parameters={})
    private Output<String> tunnelId;

    public Output<String> getTunnelId() {
        return this.tunnelId;
    }
    @OutputExport(name="vpnGateway", type=String.class, parameters={})
    private Output</* @Nullable */ String> vpnGateway;

    public Output</* @Nullable */ String> getVpnGateway() {
        return this.vpnGateway;
    }
    @OutputExport(name="vpnGatewayInterface", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> vpnGatewayInterface;

    public Output</* @Nullable */ Integer> getVpnGatewayInterface() {
        return this.vpnGatewayInterface;
    }

    public VPNTunnel(String name, VPNTunnelArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("gcp:compute/vPNTunnel:VPNTunnel", name, args == null ? VPNTunnelArgs.Empty : args, makeResourceOptions(options, Input.empty()));
    }

    private VPNTunnel(String name, Input<String> id, @Nullable VPNTunnelState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("gcp:compute/vPNTunnel:VPNTunnel", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Input<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .setVersion(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    public static VPNTunnel get(String name, Input<String> id, @Nullable VPNTunnelState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new VPNTunnel(name, id, state, options);
    }
}
