// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.securitycenter;

import io.pulumi.core.Input;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.OutputExport;
import io.pulumi.core.annotations.ResourceType;
import io.pulumi.gcp.Utilities;
import io.pulumi.gcp.securitycenter.NotificationConfigArgs;
import io.pulumi.gcp.securitycenter.inputs.NotificationConfigState;
import io.pulumi.gcp.securitycenter.outputs.NotificationConfigStreamingConfig;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * A Cloud Security Command Center (Cloud SCC) notification configs. A
 * notification config is a Cloud SCC resource that contains the
 * configuration to send notifications for create/update events of
 * findings, assets and etc.
 * > **Note:** In order to use Cloud SCC resources, your organization must be enrolled
 * in [SCC Standard/Premium](https://cloud.google.com/security-command-center/docs/quickstart-security-command-center).
 * Without doing so, you may run into errors during resource creation.
 * 
 * To get more information about NotificationConfig, see:
 * 
 * * [API documentation](https://cloud.google.com/security-command-center/docs/reference/rest/v1/organizations.notificationConfigs)
 * * How-to Guides
 *     * [Official Documentation](https://cloud.google.com/security-command-center/docs)
 * 
 * ## Example Usage
 * 
 * ## Import
 * 
 * NotificationConfig can be imported using any of these accepted formats
 * 
 * ```sh
 *  $ pulumi import gcp:securitycenter/notificationConfig:NotificationConfig default organizations/{{organization}}/notificationConfigs/{{name}}
 * ```
 * 
 * ```sh
 *  $ pulumi import gcp:securitycenter/notificationConfig:NotificationConfig default {{organization}}/{{name}}
 * ```
 * 
 */
@ResourceType(type="gcp:securitycenter/notificationConfig:NotificationConfig")
public class NotificationConfig extends io.pulumi.resources.CustomResource {
    /**
     * This must be unique within the organization.
     * 
     */
    @OutputExport(name="configId", type=String.class, parameters={})
    private Output<String> configId;

    /**
     * @return This must be unique within the organization.
     * 
     */
    public Output<String> getConfigId() {
        return this.configId;
    }
    /**
     * The description of the notification config (max of 1024 characters).
     * 
     */
    @OutputExport(name="description", type=String.class, parameters={})
    private Output</* @Nullable */ String> description;

    /**
     * @return The description of the notification config (max of 1024 characters).
     * 
     */
    public Output</* @Nullable */ String> getDescription() {
        return this.description;
    }
    /**
     * The resource name of this notification config, in the format
     * 'organizations/{{organization}}/notificationConfigs/{{config_id}}'.
     * 
     */
    @OutputExport(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The resource name of this notification config, in the format
     * 'organizations/{{organization}}/notificationConfigs/{{config_id}}'.
     * 
     */
    public Output<String> getName() {
        return this.name;
    }
    /**
     * The organization whose Cloud Security Command Center the Notification
     * Config lives in.
     * 
     */
    @OutputExport(name="organization", type=String.class, parameters={})
    private Output<String> organization;

    /**
     * @return The organization whose Cloud Security Command Center the Notification
     * Config lives in.
     * 
     */
    public Output<String> getOrganization() {
        return this.organization;
    }
    /**
     * The Pub/Sub topic to send notifications to. Its format is
     * "projects/[project_id]/topics/[topic]".
     * 
     */
    @OutputExport(name="pubsubTopic", type=String.class, parameters={})
    private Output<String> pubsubTopic;

    /**
     * @return The Pub/Sub topic to send notifications to. Its format is
     * "projects/[project_id]/topics/[topic]".
     * 
     */
    public Output<String> getPubsubTopic() {
        return this.pubsubTopic;
    }
    /**
     * The service account that needs "pubsub.topics.publish" permission to publish to the Pub/Sub topic.
     * 
     */
    @OutputExport(name="serviceAccount", type=String.class, parameters={})
    private Output<String> serviceAccount;

    /**
     * @return The service account that needs "pubsub.topics.publish" permission to publish to the Pub/Sub topic.
     * 
     */
    public Output<String> getServiceAccount() {
        return this.serviceAccount;
    }
    /**
     * The config for triggering streaming-based notifications.
     * Structure is documented below.
     * 
     */
    @OutputExport(name="streamingConfig", type=NotificationConfigStreamingConfig.class, parameters={})
    private Output<NotificationConfigStreamingConfig> streamingConfig;

    /**
     * @return The config for triggering streaming-based notifications.
     * Structure is documented below.
     * 
     */
    public Output<NotificationConfigStreamingConfig> getStreamingConfig() {
        return this.streamingConfig;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public NotificationConfig(String name) {
        this(name, NotificationConfigArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public NotificationConfig(String name, NotificationConfigArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public NotificationConfig(String name, NotificationConfigArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("gcp:securitycenter/notificationConfig:NotificationConfig", name, args == null ? NotificationConfigArgs.Empty : args, makeResourceOptions(options, Input.empty()));
    }

    private NotificationConfig(String name, Input<String> id, @Nullable NotificationConfigState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("gcp:securitycenter/notificationConfig:NotificationConfig", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Input<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .setVersion(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static NotificationConfig get(String name, Input<String> id, @Nullable NotificationConfigState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new NotificationConfig(name, id, state, options);
    }
}
