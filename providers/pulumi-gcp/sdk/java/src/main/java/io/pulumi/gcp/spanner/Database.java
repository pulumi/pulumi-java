// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.spanner;

import io.pulumi.core.Input;
import io.pulumi.core.Output;
import io.pulumi.core.internal.annotations.OutputExport;
import io.pulumi.core.internal.annotations.ResourceType;
import io.pulumi.gcp.Utilities;
import io.pulumi.gcp.spanner.DatabaseArgs;
import io.pulumi.gcp.spanner.inputs.DatabaseState;
import io.pulumi.gcp.spanner.outputs.DatabaseEncryptionConfig;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

@ResourceType(type="gcp:spanner/database:Database")
public class Database extends io.pulumi.resources.CustomResource {
    @OutputExport(name="ddls", type=List.class, parameters={String.class})
    private Output</* @Nullable */ List<String>> ddls;

    public Output</* @Nullable */ List<String>> getDdls() {
        return this.ddls;
    }
    @OutputExport(name="deletionProtection", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> deletionProtection;

    public Output</* @Nullable */ Boolean> getDeletionProtection() {
        return this.deletionProtection;
    }
    @OutputExport(name="encryptionConfig", type=DatabaseEncryptionConfig.class, parameters={})
    private Output</* @Nullable */ DatabaseEncryptionConfig> encryptionConfig;

    public Output</* @Nullable */ DatabaseEncryptionConfig> getEncryptionConfig() {
        return this.encryptionConfig;
    }
    @OutputExport(name="instance", type=String.class, parameters={})
    private Output<String> instance;

    public Output<String> getInstance() {
        return this.instance;
    }
    @OutputExport(name="name", type=String.class, parameters={})
    private Output<String> name;

    public Output<String> getName() {
        return this.name;
    }
    @OutputExport(name="project", type=String.class, parameters={})
    private Output<String> project;

    public Output<String> getProject() {
        return this.project;
    }
    @OutputExport(name="state", type=String.class, parameters={})
    private Output<String> state;

    public Output<String> getState() {
        return this.state;
    }

    public Database(String name, DatabaseArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("gcp:spanner/database:Database", name, args == null ? DatabaseArgs.Empty : args, makeResourceOptions(options, Input.empty()));
    }

    private Database(String name, Input<String> id, @Nullable DatabaseState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("gcp:spanner/database:Database", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Input<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .setVersion(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    public static Database get(String name, Input<String> id, @Nullable DatabaseState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new Database(name, id, state, options);
    }
}
