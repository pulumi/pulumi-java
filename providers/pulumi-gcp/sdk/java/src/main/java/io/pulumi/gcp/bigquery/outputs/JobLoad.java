// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.bigquery.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import io.pulumi.gcp.bigquery.outputs.JobLoadDestinationEncryptionConfiguration;
import io.pulumi.gcp.bigquery.outputs.JobLoadDestinationTable;
import io.pulumi.gcp.bigquery.outputs.JobLoadTimePartitioning;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class JobLoad {
    private final @Nullable Boolean allowJaggedRows;
    private final @Nullable Boolean allowQuotedNewlines;
    private final @Nullable Boolean autodetect;
    private final @Nullable String createDisposition;
    private final @Nullable JobLoadDestinationEncryptionConfiguration destinationEncryptionConfiguration;
    private final JobLoadDestinationTable destinationTable;
    private final @Nullable String encoding;
    private final @Nullable String fieldDelimiter;
    private final @Nullable Boolean ignoreUnknownValues;
    private final @Nullable Integer maxBadRecords;
    private final @Nullable String nullMarker;
    private final @Nullable List<String> projectionFields;
    private final @Nullable String quote;
    private final @Nullable List<String> schemaUpdateOptions;
    private final @Nullable Integer skipLeadingRows;
    private final @Nullable String sourceFormat;
    private final List<String> sourceUris;
    private final @Nullable JobLoadTimePartitioning timePartitioning;
    private final @Nullable String writeDisposition;

    @OutputCustomType.Constructor({"allowJaggedRows","allowQuotedNewlines","autodetect","createDisposition","destinationEncryptionConfiguration","destinationTable","encoding","fieldDelimiter","ignoreUnknownValues","maxBadRecords","nullMarker","projectionFields","quote","schemaUpdateOptions","skipLeadingRows","sourceFormat","sourceUris","timePartitioning","writeDisposition"})
    private JobLoad(
        @Nullable Boolean allowJaggedRows,
        @Nullable Boolean allowQuotedNewlines,
        @Nullable Boolean autodetect,
        @Nullable String createDisposition,
        @Nullable JobLoadDestinationEncryptionConfiguration destinationEncryptionConfiguration,
        JobLoadDestinationTable destinationTable,
        @Nullable String encoding,
        @Nullable String fieldDelimiter,
        @Nullable Boolean ignoreUnknownValues,
        @Nullable Integer maxBadRecords,
        @Nullable String nullMarker,
        @Nullable List<String> projectionFields,
        @Nullable String quote,
        @Nullable List<String> schemaUpdateOptions,
        @Nullable Integer skipLeadingRows,
        @Nullable String sourceFormat,
        List<String> sourceUris,
        @Nullable JobLoadTimePartitioning timePartitioning,
        @Nullable String writeDisposition) {
        this.allowJaggedRows = allowJaggedRows;
        this.allowQuotedNewlines = allowQuotedNewlines;
        this.autodetect = autodetect;
        this.createDisposition = createDisposition;
        this.destinationEncryptionConfiguration = destinationEncryptionConfiguration;
        this.destinationTable = Objects.requireNonNull(destinationTable);
        this.encoding = encoding;
        this.fieldDelimiter = fieldDelimiter;
        this.ignoreUnknownValues = ignoreUnknownValues;
        this.maxBadRecords = maxBadRecords;
        this.nullMarker = nullMarker;
        this.projectionFields = projectionFields;
        this.quote = quote;
        this.schemaUpdateOptions = schemaUpdateOptions;
        this.skipLeadingRows = skipLeadingRows;
        this.sourceFormat = sourceFormat;
        this.sourceUris = Objects.requireNonNull(sourceUris);
        this.timePartitioning = timePartitioning;
        this.writeDisposition = writeDisposition;
    }

    public Optional<Boolean> getAllowJaggedRows() {
        return Optional.ofNullable(this.allowJaggedRows);
    }
    public Optional<Boolean> getAllowQuotedNewlines() {
        return Optional.ofNullable(this.allowQuotedNewlines);
    }
    public Optional<Boolean> getAutodetect() {
        return Optional.ofNullable(this.autodetect);
    }
    public Optional<String> getCreateDisposition() {
        return Optional.ofNullable(this.createDisposition);
    }
    public Optional<JobLoadDestinationEncryptionConfiguration> getDestinationEncryptionConfiguration() {
        return Optional.ofNullable(this.destinationEncryptionConfiguration);
    }
    public JobLoadDestinationTable getDestinationTable() {
        return this.destinationTable;
    }
    public Optional<String> getEncoding() {
        return Optional.ofNullable(this.encoding);
    }
    public Optional<String> getFieldDelimiter() {
        return Optional.ofNullable(this.fieldDelimiter);
    }
    public Optional<Boolean> getIgnoreUnknownValues() {
        return Optional.ofNullable(this.ignoreUnknownValues);
    }
    public Optional<Integer> getMaxBadRecords() {
        return Optional.ofNullable(this.maxBadRecords);
    }
    public Optional<String> getNullMarker() {
        return Optional.ofNullable(this.nullMarker);
    }
    public List<String> getProjectionFields() {
        return this.projectionFields == null ? List.of() : this.projectionFields;
    }
    public Optional<String> getQuote() {
        return Optional.ofNullable(this.quote);
    }
    public List<String> getSchemaUpdateOptions() {
        return this.schemaUpdateOptions == null ? List.of() : this.schemaUpdateOptions;
    }
    public Optional<Integer> getSkipLeadingRows() {
        return Optional.ofNullable(this.skipLeadingRows);
    }
    public Optional<String> getSourceFormat() {
        return Optional.ofNullable(this.sourceFormat);
    }
    public List<String> getSourceUris() {
        return this.sourceUris;
    }
    public Optional<JobLoadTimePartitioning> getTimePartitioning() {
        return Optional.ofNullable(this.timePartitioning);
    }
    public Optional<String> getWriteDisposition() {
        return Optional.ofNullable(this.writeDisposition);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(JobLoad defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Boolean allowJaggedRows;
        private @Nullable Boolean allowQuotedNewlines;
        private @Nullable Boolean autodetect;
        private @Nullable String createDisposition;
        private @Nullable JobLoadDestinationEncryptionConfiguration destinationEncryptionConfiguration;
        private JobLoadDestinationTable destinationTable;
        private @Nullable String encoding;
        private @Nullable String fieldDelimiter;
        private @Nullable Boolean ignoreUnknownValues;
        private @Nullable Integer maxBadRecords;
        private @Nullable String nullMarker;
        private @Nullable List<String> projectionFields;
        private @Nullable String quote;
        private @Nullable List<String> schemaUpdateOptions;
        private @Nullable Integer skipLeadingRows;
        private @Nullable String sourceFormat;
        private List<String> sourceUris;
        private @Nullable JobLoadTimePartitioning timePartitioning;
        private @Nullable String writeDisposition;

        public Builder() {
    	      // Empty
        }

        public Builder(JobLoad defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allowJaggedRows = defaults.allowJaggedRows;
    	      this.allowQuotedNewlines = defaults.allowQuotedNewlines;
    	      this.autodetect = defaults.autodetect;
    	      this.createDisposition = defaults.createDisposition;
    	      this.destinationEncryptionConfiguration = defaults.destinationEncryptionConfiguration;
    	      this.destinationTable = defaults.destinationTable;
    	      this.encoding = defaults.encoding;
    	      this.fieldDelimiter = defaults.fieldDelimiter;
    	      this.ignoreUnknownValues = defaults.ignoreUnknownValues;
    	      this.maxBadRecords = defaults.maxBadRecords;
    	      this.nullMarker = defaults.nullMarker;
    	      this.projectionFields = defaults.projectionFields;
    	      this.quote = defaults.quote;
    	      this.schemaUpdateOptions = defaults.schemaUpdateOptions;
    	      this.skipLeadingRows = defaults.skipLeadingRows;
    	      this.sourceFormat = defaults.sourceFormat;
    	      this.sourceUris = defaults.sourceUris;
    	      this.timePartitioning = defaults.timePartitioning;
    	      this.writeDisposition = defaults.writeDisposition;
        }

        public Builder setAllowJaggedRows(@Nullable Boolean allowJaggedRows) {
            this.allowJaggedRows = allowJaggedRows;
            return this;
        }

        public Builder setAllowQuotedNewlines(@Nullable Boolean allowQuotedNewlines) {
            this.allowQuotedNewlines = allowQuotedNewlines;
            return this;
        }

        public Builder setAutodetect(@Nullable Boolean autodetect) {
            this.autodetect = autodetect;
            return this;
        }

        public Builder setCreateDisposition(@Nullable String createDisposition) {
            this.createDisposition = createDisposition;
            return this;
        }

        public Builder setDestinationEncryptionConfiguration(@Nullable JobLoadDestinationEncryptionConfiguration destinationEncryptionConfiguration) {
            this.destinationEncryptionConfiguration = destinationEncryptionConfiguration;
            return this;
        }

        public Builder setDestinationTable(JobLoadDestinationTable destinationTable) {
            this.destinationTable = Objects.requireNonNull(destinationTable);
            return this;
        }

        public Builder setEncoding(@Nullable String encoding) {
            this.encoding = encoding;
            return this;
        }

        public Builder setFieldDelimiter(@Nullable String fieldDelimiter) {
            this.fieldDelimiter = fieldDelimiter;
            return this;
        }

        public Builder setIgnoreUnknownValues(@Nullable Boolean ignoreUnknownValues) {
            this.ignoreUnknownValues = ignoreUnknownValues;
            return this;
        }

        public Builder setMaxBadRecords(@Nullable Integer maxBadRecords) {
            this.maxBadRecords = maxBadRecords;
            return this;
        }

        public Builder setNullMarker(@Nullable String nullMarker) {
            this.nullMarker = nullMarker;
            return this;
        }

        public Builder setProjectionFields(@Nullable List<String> projectionFields) {
            this.projectionFields = projectionFields;
            return this;
        }

        public Builder setQuote(@Nullable String quote) {
            this.quote = quote;
            return this;
        }

        public Builder setSchemaUpdateOptions(@Nullable List<String> schemaUpdateOptions) {
            this.schemaUpdateOptions = schemaUpdateOptions;
            return this;
        }

        public Builder setSkipLeadingRows(@Nullable Integer skipLeadingRows) {
            this.skipLeadingRows = skipLeadingRows;
            return this;
        }

        public Builder setSourceFormat(@Nullable String sourceFormat) {
            this.sourceFormat = sourceFormat;
            return this;
        }

        public Builder setSourceUris(List<String> sourceUris) {
            this.sourceUris = Objects.requireNonNull(sourceUris);
            return this;
        }

        public Builder setTimePartitioning(@Nullable JobLoadTimePartitioning timePartitioning) {
            this.timePartitioning = timePartitioning;
            return this;
        }

        public Builder setWriteDisposition(@Nullable String writeDisposition) {
            this.writeDisposition = writeDisposition;
            return this;
        }

        public JobLoad build() {
            return new JobLoad(allowJaggedRows, allowQuotedNewlines, autodetect, createDisposition, destinationEncryptionConfiguration, destinationTable, encoding, fieldDelimiter, ignoreUnknownValues, maxBadRecords, nullMarker, projectionFields, quote, schemaUpdateOptions, skipLeadingRows, sourceFormat, sourceUris, timePartitioning, writeDisposition);
        }
    }
}
