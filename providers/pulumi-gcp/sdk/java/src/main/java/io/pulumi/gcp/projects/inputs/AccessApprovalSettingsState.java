// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.projects.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import io.pulumi.gcp.projects.inputs.AccessApprovalSettingsEnrolledServiceGetArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class AccessApprovalSettingsState extends io.pulumi.resources.ResourceArgs {

    public static final AccessApprovalSettingsState Empty = new AccessApprovalSettingsState();

    @InputImport(name="enrolledAncestor")
    private final @Nullable Input<Boolean> enrolledAncestor;

    public Input<Boolean> getEnrolledAncestor() {
        return this.enrolledAncestor == null ? Input.empty() : this.enrolledAncestor;
    }

    @InputImport(name="enrolledServices")
    private final @Nullable Input<List<AccessApprovalSettingsEnrolledServiceGetArgs>> enrolledServices;

    public Input<List<AccessApprovalSettingsEnrolledServiceGetArgs>> getEnrolledServices() {
        return this.enrolledServices == null ? Input.empty() : this.enrolledServices;
    }

    @InputImport(name="name")
    private final @Nullable Input<String> name;

    public Input<String> getName() {
        return this.name == null ? Input.empty() : this.name;
    }

    @InputImport(name="notificationEmails")
    private final @Nullable Input<List<String>> notificationEmails;

    public Input<List<String>> getNotificationEmails() {
        return this.notificationEmails == null ? Input.empty() : this.notificationEmails;
    }

    @InputImport(name="project")
    private final @Nullable Input<String> project;

    @Deprecated /* Deprecated in favor of `project_id` */
    public Input<String> getProject() {
        return this.project == null ? Input.empty() : this.project;
    }

    @InputImport(name="projectId")
    private final @Nullable Input<String> projectId;

    public Input<String> getProjectId() {
        return this.projectId == null ? Input.empty() : this.projectId;
    }

    public AccessApprovalSettingsState(
        @Nullable Input<Boolean> enrolledAncestor,
        @Nullable Input<List<AccessApprovalSettingsEnrolledServiceGetArgs>> enrolledServices,
        @Nullable Input<String> name,
        @Nullable Input<List<String>> notificationEmails,
        @Nullable Input<String> project,
        @Nullable Input<String> projectId) {
        this.enrolledAncestor = enrolledAncestor;
        this.enrolledServices = enrolledServices;
        this.name = name;
        this.notificationEmails = notificationEmails;
        this.project = project;
        this.projectId = projectId;
    }

    private AccessApprovalSettingsState() {
        this.enrolledAncestor = Input.empty();
        this.enrolledServices = Input.empty();
        this.name = Input.empty();
        this.notificationEmails = Input.empty();
        this.project = Input.empty();
        this.projectId = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AccessApprovalSettingsState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<Boolean> enrolledAncestor;
        private @Nullable Input<List<AccessApprovalSettingsEnrolledServiceGetArgs>> enrolledServices;
        private @Nullable Input<String> name;
        private @Nullable Input<List<String>> notificationEmails;
        private @Nullable Input<String> project;
        private @Nullable Input<String> projectId;

        public Builder() {
    	      // Empty
        }

        public Builder(AccessApprovalSettingsState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.enrolledAncestor = defaults.enrolledAncestor;
    	      this.enrolledServices = defaults.enrolledServices;
    	      this.name = defaults.name;
    	      this.notificationEmails = defaults.notificationEmails;
    	      this.project = defaults.project;
    	      this.projectId = defaults.projectId;
        }

        public Builder setEnrolledAncestor(@Nullable Input<Boolean> enrolledAncestor) {
            this.enrolledAncestor = enrolledAncestor;
            return this;
        }

        public Builder setEnrolledAncestor(@Nullable Boolean enrolledAncestor) {
            this.enrolledAncestor = Input.ofNullable(enrolledAncestor);
            return this;
        }

        public Builder setEnrolledServices(@Nullable Input<List<AccessApprovalSettingsEnrolledServiceGetArgs>> enrolledServices) {
            this.enrolledServices = enrolledServices;
            return this;
        }

        public Builder setEnrolledServices(@Nullable List<AccessApprovalSettingsEnrolledServiceGetArgs> enrolledServices) {
            this.enrolledServices = Input.ofNullable(enrolledServices);
            return this;
        }

        public Builder setName(@Nullable Input<String> name) {
            this.name = name;
            return this;
        }

        public Builder setName(@Nullable String name) {
            this.name = Input.ofNullable(name);
            return this;
        }

        public Builder setNotificationEmails(@Nullable Input<List<String>> notificationEmails) {
            this.notificationEmails = notificationEmails;
            return this;
        }

        public Builder setNotificationEmails(@Nullable List<String> notificationEmails) {
            this.notificationEmails = Input.ofNullable(notificationEmails);
            return this;
        }

        public Builder setProject(@Nullable Input<String> project) {
            this.project = project;
            return this;
        }

        public Builder setProject(@Nullable String project) {
            this.project = Input.ofNullable(project);
            return this;
        }

        public Builder setProjectId(@Nullable Input<String> projectId) {
            this.projectId = projectId;
            return this;
        }

        public Builder setProjectId(@Nullable String projectId) {
            this.projectId = Input.ofNullable(projectId);
            return this;
        }

        public AccessApprovalSettingsState build() {
            return new AccessApprovalSettingsState(enrolledAncestor, enrolledServices, name, notificationEmails, project, projectId);
        }
    }
}
