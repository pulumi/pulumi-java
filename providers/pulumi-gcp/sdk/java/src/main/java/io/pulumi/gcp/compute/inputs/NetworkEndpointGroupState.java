// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.compute.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class NetworkEndpointGroupState extends io.pulumi.resources.ResourceArgs {

    public static final NetworkEndpointGroupState Empty = new NetworkEndpointGroupState();

    /**
     * The default port used if the port number is not specified in the
     * network endpoint.
     * 
     */
    @InputImport(name="defaultPort")
    private final @Nullable Input<Integer> defaultPort;

    public Input<Integer> getDefaultPort() {
        return this.defaultPort == null ? Input.empty() : this.defaultPort;
    }

    /**
     * An optional description of this resource. Provide this property when
     * you create the resource.
     * 
     */
    @InputImport(name="description")
    private final @Nullable Input<String> description;

    public Input<String> getDescription() {
        return this.description == null ? Input.empty() : this.description;
    }

    /**
     * Name of the resource; provided by the client when the resource is
     * created. The name must be 1-63 characters long, and comply with
     * RFC1035. Specifically, the name must be 1-63 characters long and match
     * the regular expression `a-z?` which means the
     * first character must be a lowercase letter, and all following
     * characters must be a dash, lowercase letter, or digit, except the last
     * character, which cannot be a dash.
     * 
     */
    @InputImport(name="name")
    private final @Nullable Input<String> name;

    public Input<String> getName() {
        return this.name == null ? Input.empty() : this.name;
    }

    /**
     * The network to which all network endpoints in the NEG belong.
     * Uses "default" project network if unspecified.
     * 
     */
    @InputImport(name="network")
    private final @Nullable Input<String> network;

    public Input<String> getNetwork() {
        return this.network == null ? Input.empty() : this.network;
    }

    /**
     * Type of network endpoints in this network endpoint group.
     * Default value is `GCE_VM_IP_PORT`.
     * Possible values are `GCE_VM_IP_PORT`.
     * 
     */
    @InputImport(name="networkEndpointType")
    private final @Nullable Input<String> networkEndpointType;

    public Input<String> getNetworkEndpointType() {
        return this.networkEndpointType == null ? Input.empty() : this.networkEndpointType;
    }

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @InputImport(name="project")
    private final @Nullable Input<String> project;

    public Input<String> getProject() {
        return this.project == null ? Input.empty() : this.project;
    }

    /**
     * The URI of the created resource.
     * 
     */
    @InputImport(name="selfLink")
    private final @Nullable Input<String> selfLink;

    public Input<String> getSelfLink() {
        return this.selfLink == null ? Input.empty() : this.selfLink;
    }

    /**
     * Number of network endpoints in the network endpoint group.
     * 
     */
    @InputImport(name="size")
    private final @Nullable Input<Integer> size;

    public Input<Integer> getSize() {
        return this.size == null ? Input.empty() : this.size;
    }

    /**
     * Optional subnetwork to which all network endpoints in the NEG belong.
     * 
     */
    @InputImport(name="subnetwork")
    private final @Nullable Input<String> subnetwork;

    public Input<String> getSubnetwork() {
        return this.subnetwork == null ? Input.empty() : this.subnetwork;
    }

    /**
     * Zone where the network endpoint group is located.
     * 
     */
    @InputImport(name="zone")
    private final @Nullable Input<String> zone;

    public Input<String> getZone() {
        return this.zone == null ? Input.empty() : this.zone;
    }

    public NetworkEndpointGroupState(
        @Nullable Input<Integer> defaultPort,
        @Nullable Input<String> description,
        @Nullable Input<String> name,
        @Nullable Input<String> network,
        @Nullable Input<String> networkEndpointType,
        @Nullable Input<String> project,
        @Nullable Input<String> selfLink,
        @Nullable Input<Integer> size,
        @Nullable Input<String> subnetwork,
        @Nullable Input<String> zone) {
        this.defaultPort = defaultPort;
        this.description = description;
        this.name = name;
        this.network = network;
        this.networkEndpointType = networkEndpointType;
        this.project = project;
        this.selfLink = selfLink;
        this.size = size;
        this.subnetwork = subnetwork;
        this.zone = zone;
    }

    private NetworkEndpointGroupState() {
        this.defaultPort = Input.empty();
        this.description = Input.empty();
        this.name = Input.empty();
        this.network = Input.empty();
        this.networkEndpointType = Input.empty();
        this.project = Input.empty();
        this.selfLink = Input.empty();
        this.size = Input.empty();
        this.subnetwork = Input.empty();
        this.zone = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(NetworkEndpointGroupState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<Integer> defaultPort;
        private @Nullable Input<String> description;
        private @Nullable Input<String> name;
        private @Nullable Input<String> network;
        private @Nullable Input<String> networkEndpointType;
        private @Nullable Input<String> project;
        private @Nullable Input<String> selfLink;
        private @Nullable Input<Integer> size;
        private @Nullable Input<String> subnetwork;
        private @Nullable Input<String> zone;

        public Builder() {
    	      // Empty
        }

        public Builder(NetworkEndpointGroupState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.defaultPort = defaults.defaultPort;
    	      this.description = defaults.description;
    	      this.name = defaults.name;
    	      this.network = defaults.network;
    	      this.networkEndpointType = defaults.networkEndpointType;
    	      this.project = defaults.project;
    	      this.selfLink = defaults.selfLink;
    	      this.size = defaults.size;
    	      this.subnetwork = defaults.subnetwork;
    	      this.zone = defaults.zone;
        }

        public Builder setDefaultPort(@Nullable Input<Integer> defaultPort) {
            this.defaultPort = defaultPort;
            return this;
        }

        public Builder setDefaultPort(@Nullable Integer defaultPort) {
            this.defaultPort = Input.ofNullable(defaultPort);
            return this;
        }

        public Builder setDescription(@Nullable Input<String> description) {
            this.description = description;
            return this;
        }

        public Builder setDescription(@Nullable String description) {
            this.description = Input.ofNullable(description);
            return this;
        }

        public Builder setName(@Nullable Input<String> name) {
            this.name = name;
            return this;
        }

        public Builder setName(@Nullable String name) {
            this.name = Input.ofNullable(name);
            return this;
        }

        public Builder setNetwork(@Nullable Input<String> network) {
            this.network = network;
            return this;
        }

        public Builder setNetwork(@Nullable String network) {
            this.network = Input.ofNullable(network);
            return this;
        }

        public Builder setNetworkEndpointType(@Nullable Input<String> networkEndpointType) {
            this.networkEndpointType = networkEndpointType;
            return this;
        }

        public Builder setNetworkEndpointType(@Nullable String networkEndpointType) {
            this.networkEndpointType = Input.ofNullable(networkEndpointType);
            return this;
        }

        public Builder setProject(@Nullable Input<String> project) {
            this.project = project;
            return this;
        }

        public Builder setProject(@Nullable String project) {
            this.project = Input.ofNullable(project);
            return this;
        }

        public Builder setSelfLink(@Nullable Input<String> selfLink) {
            this.selfLink = selfLink;
            return this;
        }

        public Builder setSelfLink(@Nullable String selfLink) {
            this.selfLink = Input.ofNullable(selfLink);
            return this;
        }

        public Builder setSize(@Nullable Input<Integer> size) {
            this.size = size;
            return this;
        }

        public Builder setSize(@Nullable Integer size) {
            this.size = Input.ofNullable(size);
            return this;
        }

        public Builder setSubnetwork(@Nullable Input<String> subnetwork) {
            this.subnetwork = subnetwork;
            return this;
        }

        public Builder setSubnetwork(@Nullable String subnetwork) {
            this.subnetwork = Input.ofNullable(subnetwork);
            return this;
        }

        public Builder setZone(@Nullable Input<String> zone) {
            this.zone = zone;
            return this;
        }

        public Builder setZone(@Nullable String zone) {
            this.zone = Input.ofNullable(zone);
            return this;
        }

        public NetworkEndpointGroupState build() {
            return new NetworkEndpointGroupState(defaultPort, description, name, network, networkEndpointType, project, selfLink, size, subnetwork, zone);
        }
    }
}
