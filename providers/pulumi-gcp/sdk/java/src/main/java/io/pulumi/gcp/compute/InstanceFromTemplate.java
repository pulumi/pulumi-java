// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.compute;

import io.pulumi.core.Input;
import io.pulumi.core.Output;
import io.pulumi.core.internal.annotations.OutputExport;
import io.pulumi.core.internal.annotations.ResourceType;
import io.pulumi.gcp.Utilities;
import io.pulumi.gcp.compute.InstanceFromTemplateArgs;
import io.pulumi.gcp.compute.inputs.InstanceFromTemplateState;
import io.pulumi.gcp.compute.outputs.InstanceFromTemplateAdvancedMachineFeatures;
import io.pulumi.gcp.compute.outputs.InstanceFromTemplateAttachedDisk;
import io.pulumi.gcp.compute.outputs.InstanceFromTemplateBootDisk;
import io.pulumi.gcp.compute.outputs.InstanceFromTemplateConfidentialInstanceConfig;
import io.pulumi.gcp.compute.outputs.InstanceFromTemplateGuestAccelerator;
import io.pulumi.gcp.compute.outputs.InstanceFromTemplateNetworkInterface;
import io.pulumi.gcp.compute.outputs.InstanceFromTemplateNetworkPerformanceConfig;
import io.pulumi.gcp.compute.outputs.InstanceFromTemplateReservationAffinity;
import io.pulumi.gcp.compute.outputs.InstanceFromTemplateScheduling;
import io.pulumi.gcp.compute.outputs.InstanceFromTemplateScratchDisk;
import io.pulumi.gcp.compute.outputs.InstanceFromTemplateServiceAccount;
import io.pulumi.gcp.compute.outputs.InstanceFromTemplateShieldedInstanceConfig;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;

@ResourceType(type="gcp:compute/instanceFromTemplate:InstanceFromTemplate")
public class InstanceFromTemplate extends io.pulumi.resources.CustomResource {
    @OutputExport(name="advancedMachineFeatures", type=InstanceFromTemplateAdvancedMachineFeatures.class, parameters={})
    private Output<InstanceFromTemplateAdvancedMachineFeatures> advancedMachineFeatures;

    public Output<InstanceFromTemplateAdvancedMachineFeatures> getAdvancedMachineFeatures() {
        return this.advancedMachineFeatures;
    }
    @OutputExport(name="allowStoppingForUpdate", type=Boolean.class, parameters={})
    private Output<Boolean> allowStoppingForUpdate;

    public Output<Boolean> getAllowStoppingForUpdate() {
        return this.allowStoppingForUpdate;
    }
    @OutputExport(name="attachedDisks", type=List.class, parameters={InstanceFromTemplateAttachedDisk.class})
    private Output<List<InstanceFromTemplateAttachedDisk>> attachedDisks;

    public Output<List<InstanceFromTemplateAttachedDisk>> getAttachedDisks() {
        return this.attachedDisks;
    }
    @OutputExport(name="bootDisk", type=InstanceFromTemplateBootDisk.class, parameters={})
    private Output<InstanceFromTemplateBootDisk> bootDisk;

    public Output<InstanceFromTemplateBootDisk> getBootDisk() {
        return this.bootDisk;
    }
    @OutputExport(name="canIpForward", type=Boolean.class, parameters={})
    private Output<Boolean> canIpForward;

    public Output<Boolean> getCanIpForward() {
        return this.canIpForward;
    }
    @OutputExport(name="confidentialInstanceConfig", type=InstanceFromTemplateConfidentialInstanceConfig.class, parameters={})
    private Output<InstanceFromTemplateConfidentialInstanceConfig> confidentialInstanceConfig;

    public Output<InstanceFromTemplateConfidentialInstanceConfig> getConfidentialInstanceConfig() {
        return this.confidentialInstanceConfig;
    }
    @OutputExport(name="cpuPlatform", type=String.class, parameters={})
    private Output<String> cpuPlatform;

    public Output<String> getCpuPlatform() {
        return this.cpuPlatform;
    }
    @OutputExport(name="currentStatus", type=String.class, parameters={})
    private Output<String> currentStatus;

    public Output<String> getCurrentStatus() {
        return this.currentStatus;
    }
    @OutputExport(name="deletionProtection", type=Boolean.class, parameters={})
    private Output<Boolean> deletionProtection;

    public Output<Boolean> getDeletionProtection() {
        return this.deletionProtection;
    }
    @OutputExport(name="description", type=String.class, parameters={})
    private Output<String> description;

    public Output<String> getDescription() {
        return this.description;
    }
    @OutputExport(name="desiredStatus", type=String.class, parameters={})
    private Output<String> desiredStatus;

    public Output<String> getDesiredStatus() {
        return this.desiredStatus;
    }
    @OutputExport(name="enableDisplay", type=Boolean.class, parameters={})
    private Output<Boolean> enableDisplay;

    public Output<Boolean> getEnableDisplay() {
        return this.enableDisplay;
    }
    @OutputExport(name="guestAccelerators", type=List.class, parameters={InstanceFromTemplateGuestAccelerator.class})
    private Output<List<InstanceFromTemplateGuestAccelerator>> guestAccelerators;

    public Output<List<InstanceFromTemplateGuestAccelerator>> getGuestAccelerators() {
        return this.guestAccelerators;
    }
    @OutputExport(name="hostname", type=String.class, parameters={})
    private Output<String> hostname;

    public Output<String> getHostname() {
        return this.hostname;
    }
    @OutputExport(name="instanceId", type=String.class, parameters={})
    private Output<String> instanceId;

    public Output<String> getInstanceId() {
        return this.instanceId;
    }
    @OutputExport(name="labelFingerprint", type=String.class, parameters={})
    private Output<String> labelFingerprint;

    public Output<String> getLabelFingerprint() {
        return this.labelFingerprint;
    }
    @OutputExport(name="labels", type=Map.class, parameters={String.class, String.class})
    private Output<Map<String,String>> labels;

    public Output<Map<String,String>> getLabels() {
        return this.labels;
    }
    @OutputExport(name="machineType", type=String.class, parameters={})
    private Output<String> machineType;

    public Output<String> getMachineType() {
        return this.machineType;
    }
    @OutputExport(name="metadata", type=Map.class, parameters={String.class, String.class})
    private Output<Map<String,String>> metadata;

    public Output<Map<String,String>> getMetadata() {
        return this.metadata;
    }
    @OutputExport(name="metadataFingerprint", type=String.class, parameters={})
    private Output<String> metadataFingerprint;

    public Output<String> getMetadataFingerprint() {
        return this.metadataFingerprint;
    }
    @OutputExport(name="metadataStartupScript", type=String.class, parameters={})
    private Output<String> metadataStartupScript;

    public Output<String> getMetadataStartupScript() {
        return this.metadataStartupScript;
    }
    @OutputExport(name="minCpuPlatform", type=String.class, parameters={})
    private Output<String> minCpuPlatform;

    public Output<String> getMinCpuPlatform() {
        return this.minCpuPlatform;
    }
    @OutputExport(name="name", type=String.class, parameters={})
    private Output<String> name;

    public Output<String> getName() {
        return this.name;
    }
    @OutputExport(name="networkInterfaces", type=List.class, parameters={InstanceFromTemplateNetworkInterface.class})
    private Output<List<InstanceFromTemplateNetworkInterface>> networkInterfaces;

    public Output<List<InstanceFromTemplateNetworkInterface>> getNetworkInterfaces() {
        return this.networkInterfaces;
    }
    @OutputExport(name="networkPerformanceConfig", type=InstanceFromTemplateNetworkPerformanceConfig.class, parameters={})
    private Output<InstanceFromTemplateNetworkPerformanceConfig> networkPerformanceConfig;

    public Output<InstanceFromTemplateNetworkPerformanceConfig> getNetworkPerformanceConfig() {
        return this.networkPerformanceConfig;
    }
    @OutputExport(name="project", type=String.class, parameters={})
    private Output<String> project;

    public Output<String> getProject() {
        return this.project;
    }
    @OutputExport(name="reservationAffinity", type=InstanceFromTemplateReservationAffinity.class, parameters={})
    private Output<InstanceFromTemplateReservationAffinity> reservationAffinity;

    public Output<InstanceFromTemplateReservationAffinity> getReservationAffinity() {
        return this.reservationAffinity;
    }
    @OutputExport(name="resourcePolicies", type=String.class, parameters={})
    private Output<String> resourcePolicies;

    public Output<String> getResourcePolicies() {
        return this.resourcePolicies;
    }
    @OutputExport(name="scheduling", type=InstanceFromTemplateScheduling.class, parameters={})
    private Output<InstanceFromTemplateScheduling> scheduling;

    public Output<InstanceFromTemplateScheduling> getScheduling() {
        return this.scheduling;
    }
    @OutputExport(name="scratchDisks", type=List.class, parameters={InstanceFromTemplateScratchDisk.class})
    private Output<List<InstanceFromTemplateScratchDisk>> scratchDisks;

    public Output<List<InstanceFromTemplateScratchDisk>> getScratchDisks() {
        return this.scratchDisks;
    }
    @OutputExport(name="selfLink", type=String.class, parameters={})
    private Output<String> selfLink;

    public Output<String> getSelfLink() {
        return this.selfLink;
    }
    @OutputExport(name="serviceAccount", type=InstanceFromTemplateServiceAccount.class, parameters={})
    private Output<InstanceFromTemplateServiceAccount> serviceAccount;

    public Output<InstanceFromTemplateServiceAccount> getServiceAccount() {
        return this.serviceAccount;
    }
    @OutputExport(name="shieldedInstanceConfig", type=InstanceFromTemplateShieldedInstanceConfig.class, parameters={})
    private Output<InstanceFromTemplateShieldedInstanceConfig> shieldedInstanceConfig;

    public Output<InstanceFromTemplateShieldedInstanceConfig> getShieldedInstanceConfig() {
        return this.shieldedInstanceConfig;
    }
    @OutputExport(name="sourceInstanceTemplate", type=String.class, parameters={})
    private Output<String> sourceInstanceTemplate;

    public Output<String> getSourceInstanceTemplate() {
        return this.sourceInstanceTemplate;
    }
    @OutputExport(name="tags", type=List.class, parameters={String.class})
    private Output<List<String>> tags;

    public Output<List<String>> getTags() {
        return this.tags;
    }
    @OutputExport(name="tagsFingerprint", type=String.class, parameters={})
    private Output<String> tagsFingerprint;

    public Output<String> getTagsFingerprint() {
        return this.tagsFingerprint;
    }
    @OutputExport(name="zone", type=String.class, parameters={})
    private Output<String> zone;

    public Output<String> getZone() {
        return this.zone;
    }

    public InstanceFromTemplate(String name, InstanceFromTemplateArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("gcp:compute/instanceFromTemplate:InstanceFromTemplate", name, args == null ? InstanceFromTemplateArgs.Empty : args, makeResourceOptions(options, Input.empty()));
    }

    private InstanceFromTemplate(String name, Input<String> id, @Nullable InstanceFromTemplateState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("gcp:compute/instanceFromTemplate:InstanceFromTemplate", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Input<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .setVersion(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    public static InstanceFromTemplate get(String name, Input<String> id, @Nullable InstanceFromTemplateState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new InstanceFromTemplate(name, id, state, options);
    }
}
