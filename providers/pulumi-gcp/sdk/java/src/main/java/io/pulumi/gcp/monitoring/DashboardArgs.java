// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.monitoring;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class DashboardArgs extends io.pulumi.resources.ResourceArgs {

    public static final DashboardArgs Empty = new DashboardArgs();

    /**
     * The JSON representation of a dashboard, following the format at https://cloud.google.com/monitoring/api/ref_v3/rest/v1/projects.dashboards.
     * The representation of an existing dashboard can be found by using the [API Explorer](https://cloud.google.com/monitoring/api/ref_v3/rest/v1/projects.dashboards/get)
     * 
     */
    @Import(name="dashboardJson", required=true)
      private final Output<String> dashboardJson;

    public Output<String> getDashboardJson() {
        return this.dashboardJson;
    }

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Import(name="project")
      private final @Nullable Output<String> project;

    public Output<String> getProject() {
        return this.project == null ? Output.empty() : this.project;
    }

    public DashboardArgs(
        Output<String> dashboardJson,
        @Nullable Output<String> project) {
        this.dashboardJson = Objects.requireNonNull(dashboardJson, "expected parameter 'dashboardJson' to be non-null");
        this.project = project;
    }

    private DashboardArgs() {
        this.dashboardJson = Output.empty();
        this.project = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DashboardArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> dashboardJson;
        private @Nullable Output<String> project;

        public Builder() {
    	      // Empty
        }

        public Builder(DashboardArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dashboardJson = defaults.dashboardJson;
    	      this.project = defaults.project;
        }

        public Builder dashboardJson(Output<String> dashboardJson) {
            this.dashboardJson = Objects.requireNonNull(dashboardJson);
            return this;
        }
        public Builder dashboardJson(String dashboardJson) {
            this.dashboardJson = Output.of(Objects.requireNonNull(dashboardJson));
            return this;
        }
        public Builder project(@Nullable Output<String> project) {
            this.project = project;
            return this;
        }
        public Builder project(@Nullable String project) {
            this.project = Output.ofNullable(project);
            return this;
        }        public DashboardArgs build() {
            return new DashboardArgs(dashboardJson, project);
        }
    }
}
