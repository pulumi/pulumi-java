// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.container.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import io.pulumi.gcp.container.outputs.AzureClusterControlPlaneDatabaseEncryption;
import io.pulumi.gcp.container.outputs.AzureClusterControlPlaneMainVolume;
import io.pulumi.gcp.container.outputs.AzureClusterControlPlaneProxyConfig;
import io.pulumi.gcp.container.outputs.AzureClusterControlPlaneReplicaPlacement;
import io.pulumi.gcp.container.outputs.AzureClusterControlPlaneRootVolume;
import io.pulumi.gcp.container.outputs.AzureClusterControlPlaneSshConfig;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class AzureClusterControlPlane {
    private final @Nullable AzureClusterControlPlaneDatabaseEncryption databaseEncryption;
    private final @Nullable AzureClusterControlPlaneMainVolume mainVolume;
    private final @Nullable AzureClusterControlPlaneProxyConfig proxyConfig;
    private final @Nullable List<AzureClusterControlPlaneReplicaPlacement> replicaPlacements;
    private final @Nullable AzureClusterControlPlaneRootVolume rootVolume;
    private final AzureClusterControlPlaneSshConfig sshConfig;
    private final String subnetId;
    private final @Nullable Map<String,String> tags;
    private final String version;
    private final @Nullable String vmSize;

    @OutputCustomType.Constructor({"databaseEncryption","mainVolume","proxyConfig","replicaPlacements","rootVolume","sshConfig","subnetId","tags","version","vmSize"})
    private AzureClusterControlPlane(
        @Nullable AzureClusterControlPlaneDatabaseEncryption databaseEncryption,
        @Nullable AzureClusterControlPlaneMainVolume mainVolume,
        @Nullable AzureClusterControlPlaneProxyConfig proxyConfig,
        @Nullable List<AzureClusterControlPlaneReplicaPlacement> replicaPlacements,
        @Nullable AzureClusterControlPlaneRootVolume rootVolume,
        AzureClusterControlPlaneSshConfig sshConfig,
        String subnetId,
        @Nullable Map<String,String> tags,
        String version,
        @Nullable String vmSize) {
        this.databaseEncryption = databaseEncryption;
        this.mainVolume = mainVolume;
        this.proxyConfig = proxyConfig;
        this.replicaPlacements = replicaPlacements;
        this.rootVolume = rootVolume;
        this.sshConfig = Objects.requireNonNull(sshConfig);
        this.subnetId = Objects.requireNonNull(subnetId);
        this.tags = tags;
        this.version = Objects.requireNonNull(version);
        this.vmSize = vmSize;
    }

    public Optional<AzureClusterControlPlaneDatabaseEncryption> getDatabaseEncryption() {
        return Optional.ofNullable(this.databaseEncryption);
    }
    public Optional<AzureClusterControlPlaneMainVolume> getMainVolume() {
        return Optional.ofNullable(this.mainVolume);
    }
    public Optional<AzureClusterControlPlaneProxyConfig> getProxyConfig() {
        return Optional.ofNullable(this.proxyConfig);
    }
    public List<AzureClusterControlPlaneReplicaPlacement> getReplicaPlacements() {
        return this.replicaPlacements == null ? List.of() : this.replicaPlacements;
    }
    public Optional<AzureClusterControlPlaneRootVolume> getRootVolume() {
        return Optional.ofNullable(this.rootVolume);
    }
    public AzureClusterControlPlaneSshConfig getSshConfig() {
        return this.sshConfig;
    }
    public String getSubnetId() {
        return this.subnetId;
    }
    public Map<String,String> getTags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    public String getVersion() {
        return this.version;
    }
    public Optional<String> getVmSize() {
        return Optional.ofNullable(this.vmSize);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AzureClusterControlPlane defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable AzureClusterControlPlaneDatabaseEncryption databaseEncryption;
        private @Nullable AzureClusterControlPlaneMainVolume mainVolume;
        private @Nullable AzureClusterControlPlaneProxyConfig proxyConfig;
        private @Nullable List<AzureClusterControlPlaneReplicaPlacement> replicaPlacements;
        private @Nullable AzureClusterControlPlaneRootVolume rootVolume;
        private AzureClusterControlPlaneSshConfig sshConfig;
        private String subnetId;
        private @Nullable Map<String,String> tags;
        private String version;
        private @Nullable String vmSize;

        public Builder() {
    	      // Empty
        }

        public Builder(AzureClusterControlPlane defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.databaseEncryption = defaults.databaseEncryption;
    	      this.mainVolume = defaults.mainVolume;
    	      this.proxyConfig = defaults.proxyConfig;
    	      this.replicaPlacements = defaults.replicaPlacements;
    	      this.rootVolume = defaults.rootVolume;
    	      this.sshConfig = defaults.sshConfig;
    	      this.subnetId = defaults.subnetId;
    	      this.tags = defaults.tags;
    	      this.version = defaults.version;
    	      this.vmSize = defaults.vmSize;
        }

        public Builder setDatabaseEncryption(@Nullable AzureClusterControlPlaneDatabaseEncryption databaseEncryption) {
            this.databaseEncryption = databaseEncryption;
            return this;
        }

        public Builder setMainVolume(@Nullable AzureClusterControlPlaneMainVolume mainVolume) {
            this.mainVolume = mainVolume;
            return this;
        }

        public Builder setProxyConfig(@Nullable AzureClusterControlPlaneProxyConfig proxyConfig) {
            this.proxyConfig = proxyConfig;
            return this;
        }

        public Builder setReplicaPlacements(@Nullable List<AzureClusterControlPlaneReplicaPlacement> replicaPlacements) {
            this.replicaPlacements = replicaPlacements;
            return this;
        }

        public Builder setRootVolume(@Nullable AzureClusterControlPlaneRootVolume rootVolume) {
            this.rootVolume = rootVolume;
            return this;
        }

        public Builder setSshConfig(AzureClusterControlPlaneSshConfig sshConfig) {
            this.sshConfig = Objects.requireNonNull(sshConfig);
            return this;
        }

        public Builder setSubnetId(String subnetId) {
            this.subnetId = Objects.requireNonNull(subnetId);
            return this;
        }

        public Builder setTags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }

        public Builder setVersion(String version) {
            this.version = Objects.requireNonNull(version);
            return this;
        }

        public Builder setVmSize(@Nullable String vmSize) {
            this.vmSize = vmSize;
            return this;
        }

        public AzureClusterControlPlane build() {
            return new AzureClusterControlPlane(databaseEncryption, mainVolume, proxyConfig, replicaPlacements, rootVolume, sshConfig, subnetId, tags, version, vmSize);
        }
    }
}
