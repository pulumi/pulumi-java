// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.sql;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Export;
import io.pulumi.core.annotations.ResourceType;
import io.pulumi.gcp.Utilities;
import io.pulumi.gcp.sql.UserArgs;
import io.pulumi.gcp.sql.inputs.UserState;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * Creates a new Google SQL User on a Google SQL User Instance. For more information, see the [official documentation](https://cloud.google.com/sql/), or the [JSON API](https://cloud.google.com/sql/docs/admin-api/v1beta4/users).
 * 
 * {{% examples %}}
 * ## Example Usage
 * {{% example %}}
 * 
 * Example creating a SQL User.
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 * import * as random from "@pulumi/random";
 * 
 * const dbNameSuffix = new random.RandomId("dbNameSuffix", {byteLength: 4});
 * const master = new gcp.sql.DatabaseInstance("master", {
 *     databaseVersion: "MYSQL_5_7",
 *     settings: {
 *         tier: "db-f1-micro",
 *     },
 * });
 * const users = new gcp.sql.User("users", {
 *     instance: master.name,
 *     host: "me.com",
 *     password: "changeme",
 * });
 * ```
 * ```python
 * import pulumi
 * import pulumi_gcp as gcp
 * import pulumi_random as random
 * 
 * db_name_suffix = random.RandomId("dbNameSuffix", byte_length=4)
 * master = gcp.sql.DatabaseInstance("master",
 *     database_version="MYSQL_5_7",
 *     settings=gcp.sql.DatabaseInstanceSettingsArgs(
 *         tier="db-f1-micro",
 *     ))
 * users = gcp.sql.User("users",
 *     instance=master.name,
 *     host="me.com",
 *     password="changeme")
 * ```
 * ```csharp
 * using Pulumi;
 * using Gcp = Pulumi.Gcp;
 * using Random = Pulumi.Random;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var dbNameSuffix = new Random.RandomId("dbNameSuffix", new Random.RandomIdArgs
 *         {
 *             ByteLength = 4,
 *         });
 *         var master = new Gcp.Sql.DatabaseInstance("master", new Gcp.Sql.DatabaseInstanceArgs
 *         {
 *             DatabaseVersion = "MYSQL_5_7",
 *             Settings = new Gcp.Sql.Inputs.DatabaseInstanceSettingsArgs
 *             {
 *                 Tier = "db-f1-micro",
 *             },
 *         });
 *         var users = new Gcp.Sql.User("users", new Gcp.Sql.UserArgs
 *         {
 *             Instance = master.Name,
 *             Host = "me.com",
 *             Password = "changeme",
 *         });
 *     }
 * 
 * }
 * ```
 * ```go
 * package main
 * 
 * import (
 * 	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/sql"
 * 	"github.com/pulumi/pulumi-random/sdk/v4/go/random"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		_, err := random.NewRandomId(ctx, "dbNameSuffix", &random.RandomIdArgs{
 * 			ByteLength: pulumi.Int(4),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		master, err := sql.NewDatabaseInstance(ctx, "master", &sql.DatabaseInstanceArgs{
 * 			DatabaseVersion: pulumi.String("MYSQL_5_7"),
 * 			Settings: &sql.DatabaseInstanceSettingsArgs{
 * 				Tier: pulumi.String("db-f1-micro"),
 * 			},
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		_, err = sql.NewUser(ctx, "users", &sql.UserArgs{
 * 			Instance: master.Name,
 * 			Host:     pulumi.String("me.com"),
 * 			Password: pulumi.String("changeme"),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * ```
 * 
 * Example creating a Cloud IAM User. (For MySQL, specify `cloudsql_iam_authentication`)
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 * import * as random from "@pulumi/random";
 * 
 * const dbNameSuffix = new random.RandomId("dbNameSuffix", {byteLength: 4});
 * const master = new gcp.sql.DatabaseInstance("master", {
 *     databaseVersion: "POSTGRES_9_6",
 *     settings: {
 *         tier: "db-f1-micro",
 *         databaseFlags: [{
 *             name: "cloudsql.iam_authentication",
 *             value: "on",
 *         }],
 *     },
 * });
 * const users = new gcp.sql.User("users", {
 *     instance: master.name,
 *     type: "CLOUD_IAM_USER",
 * });
 * ```
 * ```python
 * import pulumi
 * import pulumi_gcp as gcp
 * import pulumi_random as random
 * 
 * db_name_suffix = random.RandomId("dbNameSuffix", byte_length=4)
 * master = gcp.sql.DatabaseInstance("master",
 *     database_version="POSTGRES_9_6",
 *     settings=gcp.sql.DatabaseInstanceSettingsArgs(
 *         tier="db-f1-micro",
 *         database_flags=[gcp.sql.DatabaseInstanceSettingsDatabaseFlagArgs(
 *             name="cloudsql.iam_authentication",
 *             value="on",
 *         )],
 *     ))
 * users = gcp.sql.User("users",
 *     instance=master.name,
 *     type="CLOUD_IAM_USER")
 * ```
 * ```csharp
 * using Pulumi;
 * using Gcp = Pulumi.Gcp;
 * using Random = Pulumi.Random;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var dbNameSuffix = new Random.RandomId("dbNameSuffix", new Random.RandomIdArgs
 *         {
 *             ByteLength = 4,
 *         });
 *         var master = new Gcp.Sql.DatabaseInstance("master", new Gcp.Sql.DatabaseInstanceArgs
 *         {
 *             DatabaseVersion = "POSTGRES_9_6",
 *             Settings = new Gcp.Sql.Inputs.DatabaseInstanceSettingsArgs
 *             {
 *                 Tier = "db-f1-micro",
 *                 DatabaseFlags = 
 *                 {
 *                     new Gcp.Sql.Inputs.DatabaseInstanceSettingsDatabaseFlagArgs
 *                     {
 *                         Name = "cloudsql.iam_authentication",
 *                         Value = "on",
 *                     },
 *                 },
 *             },
 *         });
 *         var users = new Gcp.Sql.User("users", new Gcp.Sql.UserArgs
 *         {
 *             Instance = master.Name,
 *             Type = "CLOUD_IAM_USER",
 *         });
 *     }
 * 
 * }
 * ```
 * ```go
 * package main
 * 
 * import (
 * 	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/sql"
 * 	"github.com/pulumi/pulumi-random/sdk/v4/go/random"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		_, err := random.NewRandomId(ctx, "dbNameSuffix", &random.RandomIdArgs{
 * 			ByteLength: pulumi.Int(4),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		master, err := sql.NewDatabaseInstance(ctx, "master", &sql.DatabaseInstanceArgs{
 * 			DatabaseVersion: pulumi.String("POSTGRES_9_6"),
 * 			Settings: &sql.DatabaseInstanceSettingsArgs{
 * 				Tier: pulumi.String("db-f1-micro"),
 * 				DatabaseFlags: sql.DatabaseInstanceSettingsDatabaseFlagArray{
 * 					&sql.DatabaseInstanceSettingsDatabaseFlagArgs{
 * 						Name:  pulumi.String("cloudsql.iam_authentication"),
 * 						Value: pulumi.String("on"),
 * 					},
 * 				},
 * 			},
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		_, err = sql.NewUser(ctx, "users", &sql.UserArgs{
 * 			Instance: master.Name,
 * 			Type:     pulumi.String("CLOUD_IAM_USER"),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * ```
 * {{% /example %}}
 * {{% /examples %}}
 * 
 * ## Import
 * 
 * SQL users for MySQL databases can be imported using the `project`, `instance`, `host` and `name`, e.g.
 * 
 * ```sh
 *  $ pulumi import gcp:sql/user:User users my-project/master-instance/my-domain.com/me
 * ```
 * 
 *  SQL users for PostgreSQL databases can be imported using the `project`, `instance` and `name`, e.g.
 * 
 * ```sh
 *  $ pulumi import gcp:sql/user:User users my-project/master-instance/me
 * ```
 * 
 *  
 */
@ResourceType(type="gcp:sql/user:User")
public class User extends io.pulumi.resources.CustomResource {
    /**
     * The deletion policy for the user.
     * Setting `ABANDON` allows the resource to be abandoned rather than deleted. This is useful
     * for Postgres, where users cannot be deleted from the API if they have been granted SQL roles.
     * 
     */
    @Export(name="deletionPolicy", type=String.class, parameters={})
    private Output</* @Nullable */ String> deletionPolicy;

    /**
     * @return The deletion policy for the user.
     * Setting `ABANDON` allows the resource to be abandoned rather than deleted. This is useful
     * for Postgres, where users cannot be deleted from the API if they have been granted SQL roles.
     * 
     */
    public Output</* @Nullable */ String> getDeletionPolicy() {
        return this.deletionPolicy;
    }
    /**
     * The host the user can connect from. This is only supported
     * for MySQL instances. Don't set this field for PostgreSQL instances.
     * Can be an IP address. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="host", type=String.class, parameters={})
    private Output<String> host;

    /**
     * @return The host the user can connect from. This is only supported
     * for MySQL instances. Don't set this field for PostgreSQL instances.
     * Can be an IP address. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> getHost() {
        return this.host;
    }
    /**
     * The name of the Cloud SQL instance. Changing this
     * forces a new resource to be created.
     * 
     */
    @Export(name="instance", type=String.class, parameters={})
    private Output<String> instance;

    /**
     * @return The name of the Cloud SQL instance. Changing this
     * forces a new resource to be created.
     * 
     */
    public Output<String> getInstance() {
        return this.instance;
    }
    /**
     * The name of the user. Changing this forces a new resource
     * to be created.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The name of the user. Changing this forces a new resource
     * to be created.
     * 
     */
    public Output<String> getName() {
        return this.name;
    }
    /**
     * The password for the user. Can be updated. For Postgres
     * instances this is a Required field.
     * 
     */
    @Export(name="password", type=String.class, parameters={})
    private Output</* @Nullable */ String> password;

    /**
     * @return The password for the user. Can be updated. For Postgres
     * instances this is a Required field.
     * 
     */
    public Output</* @Nullable */ String> getPassword() {
        return this.password;
    }
    /**
     * The ID of the project in which the resource belongs. If it
     * is not provided, the provider project is used.
     * 
     */
    @Export(name="project", type=String.class, parameters={})
    private Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs. If it
     * is not provided, the provider project is used.
     * 
     */
    public Output<String> getProject() {
        return this.project;
    }
    /**
     * The user type. It determines the method to authenticate the
     * user during login. The default is the database's built-in user type. Flags
     * include "BUILT_IN", "CLOUD_IAM_USER", or "CLOUD_IAM_SERVICE_ACCOUNT".
     * 
     */
    @Export(name="type", type=String.class, parameters={})
    private Output</* @Nullable */ String> type;

    /**
     * @return The user type. It determines the method to authenticate the
     * user during login. The default is the database's built-in user type. Flags
     * include "BUILT_IN", "CLOUD_IAM_USER", or "CLOUD_IAM_SERVICE_ACCOUNT".
     * 
     */
    public Output</* @Nullable */ String> getType() {
        return this.type;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public User(String name) {
        this(name, UserArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public User(String name, UserArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public User(String name, UserArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("gcp:sql/user:User", name, args == null ? UserArgs.Empty : args, makeResourceOptions(options, Output.empty()));
    }

    private User(String name, Output<String> id, @Nullable UserState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("gcp:sql/user:User", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static User get(String name, Output<String> id, @Nullable UserState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new User(name, id, state, options);
    }
}
