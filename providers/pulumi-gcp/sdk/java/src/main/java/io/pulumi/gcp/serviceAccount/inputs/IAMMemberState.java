// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.serviceAccount.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.gcp.serviceAccount.inputs.IAMMemberConditionGetArgs;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class IAMMemberState extends io.pulumi.resources.ResourceArgs {

    public static final IAMMemberState Empty = new IAMMemberState();

    /**
     * An [IAM Condition](https://cloud.google.com/iam/docs/conditions-overview) for a given binding.
     * Structure is documented below.
     * 
     */
    @Import(name="condition")
      private final @Nullable Output<IAMMemberConditionGetArgs> condition;

    public Output<IAMMemberConditionGetArgs> getCondition() {
        return this.condition == null ? Output.empty() : this.condition;
    }

    /**
     * (Computed) The etag of the service account IAM policy.
     * 
     */
    @Import(name="etag")
      private final @Nullable Output<String> etag;

    public Output<String> getEtag() {
        return this.etag == null ? Output.empty() : this.etag;
    }

    @Import(name="member")
      private final @Nullable Output<String> member;

    public Output<String> getMember() {
        return this.member == null ? Output.empty() : this.member;
    }

    /**
     * The role that should be applied. Only one
     * `gcp.serviceAccount.IAMBinding` can be used per role. Note that custom roles must be of the format
     * `[projects|organizations]/{parent-name}/roles/{role-name}`.
     * 
     */
    @Import(name="role")
      private final @Nullable Output<String> role;

    public Output<String> getRole() {
        return this.role == null ? Output.empty() : this.role;
    }

    /**
     * The fully-qualified name of the service account to apply policy to.
     * 
     */
    @Import(name="serviceAccountId")
      private final @Nullable Output<String> serviceAccountId;

    public Output<String> getServiceAccountId() {
        return this.serviceAccountId == null ? Output.empty() : this.serviceAccountId;
    }

    public IAMMemberState(
        @Nullable Output<IAMMemberConditionGetArgs> condition,
        @Nullable Output<String> etag,
        @Nullable Output<String> member,
        @Nullable Output<String> role,
        @Nullable Output<String> serviceAccountId) {
        this.condition = condition;
        this.etag = etag;
        this.member = member;
        this.role = role;
        this.serviceAccountId = serviceAccountId;
    }

    private IAMMemberState() {
        this.condition = Output.empty();
        this.etag = Output.empty();
        this.member = Output.empty();
        this.role = Output.empty();
        this.serviceAccountId = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(IAMMemberState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<IAMMemberConditionGetArgs> condition;
        private @Nullable Output<String> etag;
        private @Nullable Output<String> member;
        private @Nullable Output<String> role;
        private @Nullable Output<String> serviceAccountId;

        public Builder() {
    	      // Empty
        }

        public Builder(IAMMemberState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.condition = defaults.condition;
    	      this.etag = defaults.etag;
    	      this.member = defaults.member;
    	      this.role = defaults.role;
    	      this.serviceAccountId = defaults.serviceAccountId;
        }

        public Builder condition(@Nullable Output<IAMMemberConditionGetArgs> condition) {
            this.condition = condition;
            return this;
        }

        public Builder condition(@Nullable IAMMemberConditionGetArgs condition) {
            this.condition = Output.ofNullable(condition);
            return this;
        }

        public Builder etag(@Nullable Output<String> etag) {
            this.etag = etag;
            return this;
        }

        public Builder etag(@Nullable String etag) {
            this.etag = Output.ofNullable(etag);
            return this;
        }

        public Builder member(@Nullable Output<String> member) {
            this.member = member;
            return this;
        }

        public Builder member(@Nullable String member) {
            this.member = Output.ofNullable(member);
            return this;
        }

        public Builder role(@Nullable Output<String> role) {
            this.role = role;
            return this;
        }

        public Builder role(@Nullable String role) {
            this.role = Output.ofNullable(role);
            return this;
        }

        public Builder serviceAccountId(@Nullable Output<String> serviceAccountId) {
            this.serviceAccountId = serviceAccountId;
            return this;
        }

        public Builder serviceAccountId(@Nullable String serviceAccountId) {
            this.serviceAccountId = Output.ofNullable(serviceAccountId);
            return this;
        }
        public IAMMemberState build() {
            return new IAMMemberState(condition, etag, member, role, serviceAccountId);
        }
    }
}
