// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.gcp.compute.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class SecurityPolicyRuleMatchConfigArgs extends io.pulumi.resources.ResourceArgs {

    public static final SecurityPolicyRuleMatchConfigArgs Empty = new SecurityPolicyRuleMatchConfigArgs();

    /**
     * Set of IP addresses or ranges (IPV4 or IPV6) in CIDR notation
     * to match against inbound traffic. There is a limit of 10 IP ranges per rule. A value of '\*' matches all IPs
     * (can be used to override the default behavior).
     * 
     */
    @Import(name="srcIpRanges", required=true)
      private final Output<List<String>> srcIpRanges;

    public Output<List<String>> getSrcIpRanges() {
        return this.srcIpRanges;
    }

    public SecurityPolicyRuleMatchConfigArgs(Output<List<String>> srcIpRanges) {
        this.srcIpRanges = Objects.requireNonNull(srcIpRanges, "expected parameter 'srcIpRanges' to be non-null");
    }

    private SecurityPolicyRuleMatchConfigArgs() {
        this.srcIpRanges = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SecurityPolicyRuleMatchConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<List<String>> srcIpRanges;

        public Builder() {
    	      // Empty
        }

        public Builder(SecurityPolicyRuleMatchConfigArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.srcIpRanges = defaults.srcIpRanges;
        }

        public Builder srcIpRanges(Output<List<String>> srcIpRanges) {
            this.srcIpRanges = Objects.requireNonNull(srcIpRanges);
            return this;
        }
        public Builder srcIpRanges(List<String> srcIpRanges) {
            this.srcIpRanges = Output.of(Objects.requireNonNull(srcIpRanges));
            return this;
        }
        public Builder srcIpRanges(String... srcIpRanges) {
            return srcIpRanges(List.of(srcIpRanges));
        }        public SecurityPolicyRuleMatchConfigArgs build() {
            return new SecurityPolicyRuleMatchConfigArgs(srcIpRanges);
        }
    }
}
