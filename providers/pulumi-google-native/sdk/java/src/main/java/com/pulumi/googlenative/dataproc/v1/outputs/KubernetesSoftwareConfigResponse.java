// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.dataproc.v1.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class KubernetesSoftwareConfigResponse {
    /**
     * @return The components that should be installed in this Dataproc cluster. The key must be a string from the KubernetesComponent enumeration. The value is the version of the software to be installed. At least one entry must be specified.
     * 
     */
    private final Map<String,String> componentVersion;
    /**
     * @return The properties to set on daemon config files.Property keys are specified in prefix:property format, for example spark:spark.kubernetes.container.image. The following are supported prefixes and their mappings: spark: spark-defaults.confFor more information, see Cluster properties (https://cloud.google.com/dataproc/docs/concepts/cluster-properties).
     * 
     */
    private final Map<String,String> properties;

    @CustomType.Constructor
    private KubernetesSoftwareConfigResponse(
        @CustomType.Parameter("componentVersion") Map<String,String> componentVersion,
        @CustomType.Parameter("properties") Map<String,String> properties) {
        this.componentVersion = componentVersion;
        this.properties = properties;
    }

    /**
     * @return The components that should be installed in this Dataproc cluster. The key must be a string from the KubernetesComponent enumeration. The value is the version of the software to be installed. At least one entry must be specified.
     * 
     */
    public Map<String,String> componentVersion() {
        return this.componentVersion;
    }
    /**
     * @return The properties to set on daemon config files.Property keys are specified in prefix:property format, for example spark:spark.kubernetes.container.image. The following are supported prefixes and their mappings: spark: spark-defaults.confFor more information, see Cluster properties (https://cloud.google.com/dataproc/docs/concepts/cluster-properties).
     * 
     */
    public Map<String,String> properties() {
        return this.properties;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(KubernetesSoftwareConfigResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Map<String,String> componentVersion;
        private Map<String,String> properties;

        public Builder() {
    	      // Empty
        }

        public Builder(KubernetesSoftwareConfigResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.componentVersion = defaults.componentVersion;
    	      this.properties = defaults.properties;
        }

        public Builder componentVersion(Map<String,String> componentVersion) {
            this.componentVersion = Objects.requireNonNull(componentVersion);
            return this;
        }
        public Builder properties(Map<String,String> properties) {
            this.properties = Objects.requireNonNull(properties);
            return this;
        }        public KubernetesSoftwareConfigResponse build() {
            return new KubernetesSoftwareConfigResponse(componentVersion, properties);
        }
    }
}
