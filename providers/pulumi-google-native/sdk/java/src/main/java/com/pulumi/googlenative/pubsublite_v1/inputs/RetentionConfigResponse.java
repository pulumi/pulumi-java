// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.pubsublite_v1.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * The settings for a topic&#39;s message retention.
 * 
 */
public final class RetentionConfigResponse extends com.pulumi.resources.InvokeArgs {

    public static final RetentionConfigResponse Empty = new RetentionConfigResponse();

    /**
     * The provisioned storage, in bytes, per partition. If the number of bytes stored in any of the topic&#39;s partitions grows beyond this value, older messages will be dropped to make room for newer ones, regardless of the value of `period`.
     * 
     */
    @Import(name="perPartitionBytes", required=true)
    private String perPartitionBytes;

    /**
     * @return The provisioned storage, in bytes, per partition. If the number of bytes stored in any of the topic&#39;s partitions grows beyond this value, older messages will be dropped to make room for newer ones, regardless of the value of `period`.
     * 
     */
    public String perPartitionBytes() {
        return this.perPartitionBytes;
    }

    /**
     * How long a published message is retained. If unset, messages will be retained as long as the bytes retained for each partition is below `per_partition_bytes`.
     * 
     */
    @Import(name="period", required=true)
    private String period;

    /**
     * @return How long a published message is retained. If unset, messages will be retained as long as the bytes retained for each partition is below `per_partition_bytes`.
     * 
     */
    public String period() {
        return this.period;
    }

    private RetentionConfigResponse() {}

    private RetentionConfigResponse(RetentionConfigResponse $) {
        this.perPartitionBytes = $.perPartitionBytes;
        this.period = $.period;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RetentionConfigResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RetentionConfigResponse $;

        public Builder() {
            $ = new RetentionConfigResponse();
        }

        public Builder(RetentionConfigResponse defaults) {
            $ = new RetentionConfigResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param perPartitionBytes The provisioned storage, in bytes, per partition. If the number of bytes stored in any of the topic&#39;s partitions grows beyond this value, older messages will be dropped to make room for newer ones, regardless of the value of `period`.
         * 
         * @return builder
         * 
         */
        public Builder perPartitionBytes(String perPartitionBytes) {
            $.perPartitionBytes = perPartitionBytes;
            return this;
        }

        /**
         * @param period How long a published message is retained. If unset, messages will be retained as long as the bytes retained for each partition is below `per_partition_bytes`.
         * 
         * @return builder
         * 
         */
        public Builder period(String period) {
            $.period = period;
            return this;
        }

        public RetentionConfigResponse build() {
            $.perPartitionBytes = Objects.requireNonNull($.perPartitionBytes, "expected parameter 'perPartitionBytes' to be non-null");
            $.period = Objects.requireNonNull($.period, "expected parameter 'period' to be non-null");
            return $;
        }
    }

}
