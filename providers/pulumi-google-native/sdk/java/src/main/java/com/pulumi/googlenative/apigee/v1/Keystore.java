// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.apigee.v1;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.googlenative.Utilities;
import com.pulumi.googlenative.apigee.v1.KeystoreArgs;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * Creates a keystore or truststore. - Keystore: Contains certificates and their associated keys. - Truststore: Contains trusted certificates used to validate a server&#39;s certificate. These certificates are typically self-signed certificates or certificates that are not signed by a trusted CA.
 * 
 */
@ResourceType(type="google-native:apigee/v1:Keystore")
public class Keystore extends com.pulumi.resources.CustomResource {
    /**
     * Aliases in this keystore.
     * 
     */
    @Export(name="aliases", type=List.class, parameters={String.class})
    private Output<List<String>> aliases;

    /**
     * @return Aliases in this keystore.
     * 
     */
    public Output<List<String>> aliases() {
        return this.aliases;
    }
    @Export(name="environmentId", type=String.class, parameters={})
    private Output<String> environmentId;

    public Output<String> environmentId() {
        return this.environmentId;
    }
    /**
     * Optional. Name of the keystore. Overrides the value in Keystore.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return Optional. Name of the keystore. Overrides the value in Keystore.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    @Export(name="organizationId", type=String.class, parameters={})
    private Output<String> organizationId;

    public Output<String> organizationId() {
        return this.organizationId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Keystore(String name) {
        this(name, KeystoreArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Keystore(String name, KeystoreArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Keystore(String name, KeystoreArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("google-native:apigee/v1:Keystore", name, args == null ? KeystoreArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Keystore(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("google-native:apigee/v1:Keystore", name, null, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Keystore get(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Keystore(name, id, options);
    }
}
