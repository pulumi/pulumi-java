// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.networkservices.v1beta1;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.googlenative.Utilities;
import com.pulumi.googlenative.networkservices.v1beta1.TlsRouteArgs;
import com.pulumi.googlenative.networkservices.v1beta1.outputs.TlsRouteRouteRuleResponse;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * Creates a new TlsRoute in a given project and location.
 * 
 */
@ResourceType(type="google-native:networkservices/v1beta1:TlsRoute")
public class TlsRoute extends com.pulumi.resources.CustomResource {
    /**
     * The timestamp when the resource was created.
     * 
     */
    @Export(name="createTime", type=String.class, parameters={})
    private Output<String> createTime;

    /**
     * @return The timestamp when the resource was created.
     * 
     */
    public Output<String> createTime() {
        return this.createTime;
    }
    /**
     * Optional. A free-text description of the resource. Max length 1024 characters.
     * 
     */
    @Export(name="description", type=String.class, parameters={})
    private Output<String> description;

    /**
     * @return Optional. A free-text description of the resource. Max length 1024 characters.
     * 
     */
    public Output<String> description() {
        return this.description;
    }
    /**
     * Optional. Gateways defines a list of gateways this TlsRoute is attached to, as one of the routing rules to route the requests served by the gateway. Each gateway reference should match the pattern: `projects/*{@literal /}locations/global/gateways/`
     * 
     */
    @Export(name="gateways", type=List.class, parameters={String.class})
    private Output<List<String>> gateways;

    /**
     * @return Optional. Gateways defines a list of gateways this TlsRoute is attached to, as one of the routing rules to route the requests served by the gateway. Each gateway reference should match the pattern: `projects/*{@literal /}locations/global/gateways/`
     * 
     */
    public Output<List<String>> gateways() {
        return this.gateways;
    }
    @Export(name="location", type=String.class, parameters={})
    private Output<String> location;

    public Output<String> location() {
        return this.location;
    }
    /**
     * Optional. Meshes defines a list of meshes this TlsRoute is attached to, as one of the routing rules to route the requests served by the mesh. Each mesh reference should match the pattern: `projects/*{@literal /}locations/global/meshes/` The attached Mesh should be of a type SIDECAR
     * 
     */
    @Export(name="meshes", type=List.class, parameters={String.class})
    private Output<List<String>> meshes;

    /**
     * @return Optional. Meshes defines a list of meshes this TlsRoute is attached to, as one of the routing rules to route the requests served by the mesh. Each mesh reference should match the pattern: `projects/*{@literal /}locations/global/meshes/` The attached Mesh should be of a type SIDECAR
     * 
     */
    public Output<List<String>> meshes() {
        return this.meshes;
    }
    /**
     * Name of the TlsRoute resource. It matches pattern `projects/*{@literal /}locations/global/tlsRoutes/tls_route_name&gt;`.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return Name of the TlsRoute resource. It matches pattern `projects/*{@literal /}locations/global/tlsRoutes/tls_route_name&gt;`.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    @Export(name="project", type=String.class, parameters={})
    private Output<String> project;

    public Output<String> project() {
        return this.project;
    }
    /**
     * Rules that define how traffic is routed and handled. At least one RouteRule must be supplied. If there are multiple rules then the action taken will be the first rule to match.
     * 
     */
    @Export(name="rules", type=List.class, parameters={TlsRouteRouteRuleResponse.class})
    private Output<List<TlsRouteRouteRuleResponse>> rules;

    /**
     * @return Rules that define how traffic is routed and handled. At least one RouteRule must be supplied. If there are multiple rules then the action taken will be the first rule to match.
     * 
     */
    public Output<List<TlsRouteRouteRuleResponse>> rules() {
        return this.rules;
    }
    /**
     * Server-defined URL of this resource
     * 
     */
    @Export(name="selfLink", type=String.class, parameters={})
    private Output<String> selfLink;

    /**
     * @return Server-defined URL of this resource
     * 
     */
    public Output<String> selfLink() {
        return this.selfLink;
    }
    /**
     * Required. Short name of the TlsRoute resource to be created. E.g. TODO(Add an example).
     * 
     */
    @Export(name="tlsRouteId", type=String.class, parameters={})
    private Output<String> tlsRouteId;

    /**
     * @return Required. Short name of the TlsRoute resource to be created. E.g. TODO(Add an example).
     * 
     */
    public Output<String> tlsRouteId() {
        return this.tlsRouteId;
    }
    /**
     * The timestamp when the resource was updated.
     * 
     */
    @Export(name="updateTime", type=String.class, parameters={})
    private Output<String> updateTime;

    /**
     * @return The timestamp when the resource was updated.
     * 
     */
    public Output<String> updateTime() {
        return this.updateTime;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public TlsRoute(String name) {
        this(name, TlsRouteArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public TlsRoute(String name, TlsRouteArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public TlsRoute(String name, TlsRouteArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("google-native:networkservices/v1beta1:TlsRoute", name, args == null ? TlsRouteArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private TlsRoute(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("google-native:networkservices/v1beta1:TlsRoute", name, null, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static TlsRoute get(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new TlsRoute(name, id, options);
    }
}
