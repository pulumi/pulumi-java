// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.dlp_v2.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.dlp_v2.inputs.GooglePrivacyDlpV2ValueResponse;
import java.lang.String;
import java.util.List;
import java.util.Objects;


/**
 * The set of columns&#39; values that share the same ldiversity value
 * 
 */
public final class GooglePrivacyDlpV2KAnonymityEquivalenceClassResponse extends com.pulumi.resources.InvokeArgs {

    public static final GooglePrivacyDlpV2KAnonymityEquivalenceClassResponse Empty = new GooglePrivacyDlpV2KAnonymityEquivalenceClassResponse();

    /**
     * Size of the equivalence class, for example number of rows with the above set of values.
     * 
     */
    @Import(name="equivalenceClassSize", required=true)
    private String equivalenceClassSize;

    public String equivalenceClassSize() {
        return this.equivalenceClassSize;
    }

    /**
     * Set of values defining the equivalence class. One value per quasi-identifier column in the original KAnonymity metric message. The order is always the same as the original request.
     * 
     */
    @Import(name="quasiIdsValues", required=true)
    private List<GooglePrivacyDlpV2ValueResponse> quasiIdsValues;

    public List<GooglePrivacyDlpV2ValueResponse> quasiIdsValues() {
        return this.quasiIdsValues;
    }

    private GooglePrivacyDlpV2KAnonymityEquivalenceClassResponse() {}

    private GooglePrivacyDlpV2KAnonymityEquivalenceClassResponse(GooglePrivacyDlpV2KAnonymityEquivalenceClassResponse $) {
        this.equivalenceClassSize = $.equivalenceClassSize;
        this.quasiIdsValues = $.quasiIdsValues;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GooglePrivacyDlpV2KAnonymityEquivalenceClassResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GooglePrivacyDlpV2KAnonymityEquivalenceClassResponse $;

        public Builder() {
            $ = new GooglePrivacyDlpV2KAnonymityEquivalenceClassResponse();
        }

        public Builder(GooglePrivacyDlpV2KAnonymityEquivalenceClassResponse defaults) {
            $ = new GooglePrivacyDlpV2KAnonymityEquivalenceClassResponse(Objects.requireNonNull(defaults));
        }

        public Builder equivalenceClassSize(String equivalenceClassSize) {
            $.equivalenceClassSize = equivalenceClassSize;
            return this;
        }

        public Builder quasiIdsValues(List<GooglePrivacyDlpV2ValueResponse> quasiIdsValues) {
            $.quasiIdsValues = quasiIdsValues;
            return this;
        }

        public Builder quasiIdsValues(GooglePrivacyDlpV2ValueResponse... quasiIdsValues) {
            return quasiIdsValues(List.of(quasiIdsValues));
        }

        public GooglePrivacyDlpV2KAnonymityEquivalenceClassResponse build() {
            $.equivalenceClassSize = Objects.requireNonNull($.equivalenceClassSize, "expected parameter 'equivalenceClassSize' to be non-null");
            $.quasiIdsValues = Objects.requireNonNull($.quasiIdsValues, "expected parameter 'quasiIdsValues' to be non-null");
            return $;
        }
    }

}
