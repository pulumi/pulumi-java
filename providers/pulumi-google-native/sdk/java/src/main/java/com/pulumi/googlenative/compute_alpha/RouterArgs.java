// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.compute_alpha;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.compute_alpha.inputs.RouterBgpArgs;
import com.pulumi.googlenative.compute_alpha.inputs.RouterBgpPeerArgs;
import com.pulumi.googlenative.compute_alpha.inputs.RouterInterfaceArgs;
import com.pulumi.googlenative.compute_alpha.inputs.RouterMd5AuthenticationKeyArgs;
import com.pulumi.googlenative.compute_alpha.inputs.RouterNatArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RouterArgs extends com.pulumi.resources.ResourceArgs {

    public static final RouterArgs Empty = new RouterArgs();

    /**
     * BGP information specific to this router.
     * 
     */
    @Import(name="bgp")
    private @Nullable Output<RouterBgpArgs> bgp;

    public Optional<Output<RouterBgpArgs>> bgp() {
        return Optional.ofNullable(this.bgp);
    }

    /**
     * BGP information that must be configured into the routing stack to establish BGP peering. This information must specify the peer ASN and either the interface name, IP address, or peer IP address. Please refer to RFC4273.
     * 
     */
    @Import(name="bgpPeers")
    private @Nullable Output<List<RouterBgpPeerArgs>> bgpPeers;

    public Optional<Output<List<RouterBgpPeerArgs>>> bgpPeers() {
        return Optional.ofNullable(this.bgpPeers);
    }

    /**
     * An optional description of this resource. Provide this property when you create the resource.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Indicates if a router is dedicated for use with encrypted VLAN attachments (interconnectAttachments). Not currently available publicly.
     * 
     */
    @Import(name="encryptedInterconnectRouter")
    private @Nullable Output<Boolean> encryptedInterconnectRouter;

    public Optional<Output<Boolean>> encryptedInterconnectRouter() {
        return Optional.ofNullable(this.encryptedInterconnectRouter);
    }

    /**
     * Router interfaces. Each interface requires either one linked resource, (for example, linkedVpnTunnel), or IP address and IP address range (for example, ipRange), or both.
     * 
     */
    @Import(name="interfaces")
    private @Nullable Output<List<RouterInterfaceArgs>> interfaces;

    public Optional<Output<List<RouterInterfaceArgs>>> interfaces() {
        return Optional.ofNullable(this.interfaces);
    }

    /**
     * Keys used for MD5 authentication.
     * 
     */
    @Import(name="md5AuthenticationKeys")
    private @Nullable Output<List<RouterMd5AuthenticationKeyArgs>> md5AuthenticationKeys;

    public Optional<Output<List<RouterMd5AuthenticationKeyArgs>>> md5AuthenticationKeys() {
        return Optional.ofNullable(this.md5AuthenticationKeys);
    }

    /**
     * Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * A list of NAT services created in this router.
     * 
     */
    @Import(name="nats")
    private @Nullable Output<List<RouterNatArgs>> nats;

    public Optional<Output<List<RouterNatArgs>>> nats() {
        return Optional.ofNullable(this.nats);
    }

    /**
     * URI of the network to which this router belongs.
     * 
     */
    @Import(name="network")
    private @Nullable Output<String> network;

    public Optional<Output<String>> network() {
        return Optional.ofNullable(this.network);
    }

    @Import(name="project")
    private @Nullable Output<String> project;

    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    @Import(name="region", required=true)
    private Output<String> region;

    public Output<String> region() {
        return this.region;
    }

    @Import(name="requestId")
    private @Nullable Output<String> requestId;

    public Optional<Output<String>> requestId() {
        return Optional.ofNullable(this.requestId);
    }

    private RouterArgs() {}

    private RouterArgs(RouterArgs $) {
        this.bgp = $.bgp;
        this.bgpPeers = $.bgpPeers;
        this.description = $.description;
        this.encryptedInterconnectRouter = $.encryptedInterconnectRouter;
        this.interfaces = $.interfaces;
        this.md5AuthenticationKeys = $.md5AuthenticationKeys;
        this.name = $.name;
        this.nats = $.nats;
        this.network = $.network;
        this.project = $.project;
        this.region = $.region;
        this.requestId = $.requestId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RouterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RouterArgs $;

        public Builder() {
            $ = new RouterArgs();
        }

        public Builder(RouterArgs defaults) {
            $ = new RouterArgs(Objects.requireNonNull(defaults));
        }

        public Builder bgp(@Nullable Output<RouterBgpArgs> bgp) {
            $.bgp = bgp;
            return this;
        }

        public Builder bgp(RouterBgpArgs bgp) {
            return bgp(Output.of(bgp));
        }

        public Builder bgpPeers(@Nullable Output<List<RouterBgpPeerArgs>> bgpPeers) {
            $.bgpPeers = bgpPeers;
            return this;
        }

        public Builder bgpPeers(List<RouterBgpPeerArgs> bgpPeers) {
            return bgpPeers(Output.of(bgpPeers));
        }

        public Builder bgpPeers(RouterBgpPeerArgs... bgpPeers) {
            return bgpPeers(List.of(bgpPeers));
        }

        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        public Builder description(String description) {
            return description(Output.of(description));
        }

        public Builder encryptedInterconnectRouter(@Nullable Output<Boolean> encryptedInterconnectRouter) {
            $.encryptedInterconnectRouter = encryptedInterconnectRouter;
            return this;
        }

        public Builder encryptedInterconnectRouter(Boolean encryptedInterconnectRouter) {
            return encryptedInterconnectRouter(Output.of(encryptedInterconnectRouter));
        }

        public Builder interfaces(@Nullable Output<List<RouterInterfaceArgs>> interfaces) {
            $.interfaces = interfaces;
            return this;
        }

        public Builder interfaces(List<RouterInterfaceArgs> interfaces) {
            return interfaces(Output.of(interfaces));
        }

        public Builder interfaces(RouterInterfaceArgs... interfaces) {
            return interfaces(List.of(interfaces));
        }

        public Builder md5AuthenticationKeys(@Nullable Output<List<RouterMd5AuthenticationKeyArgs>> md5AuthenticationKeys) {
            $.md5AuthenticationKeys = md5AuthenticationKeys;
            return this;
        }

        public Builder md5AuthenticationKeys(List<RouterMd5AuthenticationKeyArgs> md5AuthenticationKeys) {
            return md5AuthenticationKeys(Output.of(md5AuthenticationKeys));
        }

        public Builder md5AuthenticationKeys(RouterMd5AuthenticationKeyArgs... md5AuthenticationKeys) {
            return md5AuthenticationKeys(List.of(md5AuthenticationKeys));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder nats(@Nullable Output<List<RouterNatArgs>> nats) {
            $.nats = nats;
            return this;
        }

        public Builder nats(List<RouterNatArgs> nats) {
            return nats(Output.of(nats));
        }

        public Builder nats(RouterNatArgs... nats) {
            return nats(List.of(nats));
        }

        public Builder network(@Nullable Output<String> network) {
            $.network = network;
            return this;
        }

        public Builder network(String network) {
            return network(Output.of(network));
        }

        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        public Builder project(String project) {
            return project(Output.of(project));
        }

        public Builder region(Output<String> region) {
            $.region = region;
            return this;
        }

        public Builder region(String region) {
            return region(Output.of(region));
        }

        public Builder requestId(@Nullable Output<String> requestId) {
            $.requestId = requestId;
            return this;
        }

        public Builder requestId(String requestId) {
            return requestId(Output.of(requestId));
        }

        public RouterArgs build() {
            $.region = Objects.requireNonNull($.region, "expected parameter 'region' to be non-null");
            return $;
        }
    }

}
