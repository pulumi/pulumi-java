// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.logging.v2.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.logging.v2.enums.IndexConfigType;
import java.lang.String;
import java.util.Objects;


/**
 * Configuration for an indexed field.
 * 
 */
public final class IndexConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final IndexConfigArgs Empty = new IndexConfigArgs();

    /**
     * The LogEntry field path to index.Note that some paths are automatically indexed, and other paths are not eligible for indexing. See indexing documentation( https://cloud.google.com/logging/docs/view/advanced-queries#indexed-fields) for details.For example: jsonPayload.request.status
     * 
     */
    @Import(name="fieldPath", required=true)
    private Output<String> fieldPath;

    /**
     * @return The LogEntry field path to index.Note that some paths are automatically indexed, and other paths are not eligible for indexing. See indexing documentation( https://cloud.google.com/logging/docs/view/advanced-queries#indexed-fields) for details.For example: jsonPayload.request.status
     * 
     */
    public Output<String> fieldPath() {
        return this.fieldPath;
    }

    /**
     * The type of data in this index.
     * 
     */
    @Import(name="type", required=true)
    private Output<IndexConfigType> type;

    /**
     * @return The type of data in this index.
     * 
     */
    public Output<IndexConfigType> type() {
        return this.type;
    }

    private IndexConfigArgs() {}

    private IndexConfigArgs(IndexConfigArgs $) {
        this.fieldPath = $.fieldPath;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(IndexConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private IndexConfigArgs $;

        public Builder() {
            $ = new IndexConfigArgs();
        }

        public Builder(IndexConfigArgs defaults) {
            $ = new IndexConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param fieldPath The LogEntry field path to index.Note that some paths are automatically indexed, and other paths are not eligible for indexing. See indexing documentation( https://cloud.google.com/logging/docs/view/advanced-queries#indexed-fields) for details.For example: jsonPayload.request.status
         * 
         * @return builder
         * 
         */
        public Builder fieldPath(Output<String> fieldPath) {
            $.fieldPath = fieldPath;
            return this;
        }

        /**
         * @param fieldPath The LogEntry field path to index.Note that some paths are automatically indexed, and other paths are not eligible for indexing. See indexing documentation( https://cloud.google.com/logging/docs/view/advanced-queries#indexed-fields) for details.For example: jsonPayload.request.status
         * 
         * @return builder
         * 
         */
        public Builder fieldPath(String fieldPath) {
            return fieldPath(Output.of(fieldPath));
        }

        /**
         * @param type The type of data in this index.
         * 
         * @return builder
         * 
         */
        public Builder type(Output<IndexConfigType> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type The type of data in this index.
         * 
         * @return builder
         * 
         */
        public Builder type(IndexConfigType type) {
            return type(Output.of(type));
        }

        public IndexConfigArgs build() {
            $.fieldPath = Objects.requireNonNull($.fieldPath, "expected parameter 'fieldPath' to be non-null");
            $.type = Objects.requireNonNull($.type, "expected parameter 'type' to be non-null");
            return $;
        }
    }

}
