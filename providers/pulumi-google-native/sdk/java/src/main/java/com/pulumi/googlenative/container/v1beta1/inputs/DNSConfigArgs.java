// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.container.v1beta1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.container.v1beta1.enums.DNSConfigClusterDns;
import com.pulumi.googlenative.container.v1beta1.enums.DNSConfigClusterDnsScope;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * DNSConfig contains the desired set of options for configuring clusterDNS.
 * 
 */
public final class DNSConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final DNSConfigArgs Empty = new DNSConfigArgs();

    /**
     * cluster_dns indicates which in-cluster DNS provider should be used.
     * 
     */
    @Import(name="clusterDns")
    private @Nullable Output<DNSConfigClusterDns> clusterDns;

    /**
     * @return cluster_dns indicates which in-cluster DNS provider should be used.
     * 
     */
    public Optional<Output<DNSConfigClusterDns>> clusterDns() {
        return Optional.ofNullable(this.clusterDns);
    }

    /**
     * cluster_dns_domain is the suffix used for all cluster service records.
     * 
     */
    @Import(name="clusterDnsDomain")
    private @Nullable Output<String> clusterDnsDomain;

    /**
     * @return cluster_dns_domain is the suffix used for all cluster service records.
     * 
     */
    public Optional<Output<String>> clusterDnsDomain() {
        return Optional.ofNullable(this.clusterDnsDomain);
    }

    /**
     * cluster_dns_scope indicates the scope of access to cluster DNS records.
     * 
     */
    @Import(name="clusterDnsScope")
    private @Nullable Output<DNSConfigClusterDnsScope> clusterDnsScope;

    /**
     * @return cluster_dns_scope indicates the scope of access to cluster DNS records.
     * 
     */
    public Optional<Output<DNSConfigClusterDnsScope>> clusterDnsScope() {
        return Optional.ofNullable(this.clusterDnsScope);
    }

    private DNSConfigArgs() {}

    private DNSConfigArgs(DNSConfigArgs $) {
        this.clusterDns = $.clusterDns;
        this.clusterDnsDomain = $.clusterDnsDomain;
        this.clusterDnsScope = $.clusterDnsScope;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DNSConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DNSConfigArgs $;

        public Builder() {
            $ = new DNSConfigArgs();
        }

        public Builder(DNSConfigArgs defaults) {
            $ = new DNSConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param clusterDns cluster_dns indicates which in-cluster DNS provider should be used.
         * 
         * @return builder
         * 
         */
        public Builder clusterDns(@Nullable Output<DNSConfigClusterDns> clusterDns) {
            $.clusterDns = clusterDns;
            return this;
        }

        /**
         * @param clusterDns cluster_dns indicates which in-cluster DNS provider should be used.
         * 
         * @return builder
         * 
         */
        public Builder clusterDns(DNSConfigClusterDns clusterDns) {
            return clusterDns(Output.of(clusterDns));
        }

        /**
         * @param clusterDnsDomain cluster_dns_domain is the suffix used for all cluster service records.
         * 
         * @return builder
         * 
         */
        public Builder clusterDnsDomain(@Nullable Output<String> clusterDnsDomain) {
            $.clusterDnsDomain = clusterDnsDomain;
            return this;
        }

        /**
         * @param clusterDnsDomain cluster_dns_domain is the suffix used for all cluster service records.
         * 
         * @return builder
         * 
         */
        public Builder clusterDnsDomain(String clusterDnsDomain) {
            return clusterDnsDomain(Output.of(clusterDnsDomain));
        }

        /**
         * @param clusterDnsScope cluster_dns_scope indicates the scope of access to cluster DNS records.
         * 
         * @return builder
         * 
         */
        public Builder clusterDnsScope(@Nullable Output<DNSConfigClusterDnsScope> clusterDnsScope) {
            $.clusterDnsScope = clusterDnsScope;
            return this;
        }

        /**
         * @param clusterDnsScope cluster_dns_scope indicates the scope of access to cluster DNS records.
         * 
         * @return builder
         * 
         */
        public Builder clusterDnsScope(DNSConfigClusterDnsScope clusterDnsScope) {
            return clusterDnsScope(Output.of(clusterDnsScope));
        }

        public DNSConfigArgs build() {
            return $;
        }
    }

}
