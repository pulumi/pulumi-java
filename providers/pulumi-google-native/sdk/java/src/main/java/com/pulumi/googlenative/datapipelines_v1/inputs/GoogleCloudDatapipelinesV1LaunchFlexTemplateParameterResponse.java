// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.datapipelines_v1.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.datapipelines_v1.inputs.GoogleCloudDatapipelinesV1FlexTemplateRuntimeEnvironmentResponse;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Objects;


/**
 * Launch Flex Template parameter.
 * 
 */
public final class GoogleCloudDatapipelinesV1LaunchFlexTemplateParameterResponse extends com.pulumi.resources.InvokeArgs {

    public static final GoogleCloudDatapipelinesV1LaunchFlexTemplateParameterResponse Empty = new GoogleCloudDatapipelinesV1LaunchFlexTemplateParameterResponse();

    /**
     * Cloud Storage path to a file with a JSON-serialized ContainerSpec as content.
     * 
     */
    @Import(name="containerSpecGcsPath", required=true)
    private String containerSpecGcsPath;

    public String containerSpecGcsPath() {
        return this.containerSpecGcsPath;
    }

    /**
     * The runtime environment for the Flex Template job.
     * 
     */
    @Import(name="environment", required=true)
    private GoogleCloudDatapipelinesV1FlexTemplateRuntimeEnvironmentResponse environment;

    public GoogleCloudDatapipelinesV1FlexTemplateRuntimeEnvironmentResponse environment() {
        return this.environment;
    }

    /**
     * The job name to use for the created job. For an update job request, the job name should be the same as the existing running job.
     * 
     */
    @Import(name="jobName", required=true)
    private String jobName;

    public String jobName() {
        return this.jobName;
    }

    /**
     * Launch options for this Flex Template job. This is a common set of options across languages and templates. This should not be used to pass job parameters.
     * 
     */
    @Import(name="launchOptions", required=true)
    private Map<String,String> launchOptions;

    public Map<String,String> launchOptions() {
        return this.launchOptions;
    }

    /**
     * The parameters for the Flex Template. Example: `{&#34;num_workers&#34;:&#34;5&#34;}`
     * 
     */
    @Import(name="parameters", required=true)
    private Map<String,String> parameters;

    public Map<String,String> parameters() {
        return this.parameters;
    }

    /**
     * Use this to pass transform name mappings for streaming update jobs. Example: `{&#34;oldTransformName&#34;:&#34;newTransformName&#34;,...}`
     * 
     */
    @Import(name="transformNameMappings", required=true)
    private Map<String,String> transformNameMappings;

    public Map<String,String> transformNameMappings() {
        return this.transformNameMappings;
    }

    /**
     * Set this to true if you are sending a request to update a running streaming job. When set, the job name should be the same as the running job.
     * 
     */
    @Import(name="update", required=true)
    private Boolean update;

    public Boolean update() {
        return this.update;
    }

    private GoogleCloudDatapipelinesV1LaunchFlexTemplateParameterResponse() {}

    private GoogleCloudDatapipelinesV1LaunchFlexTemplateParameterResponse(GoogleCloudDatapipelinesV1LaunchFlexTemplateParameterResponse $) {
        this.containerSpecGcsPath = $.containerSpecGcsPath;
        this.environment = $.environment;
        this.jobName = $.jobName;
        this.launchOptions = $.launchOptions;
        this.parameters = $.parameters;
        this.transformNameMappings = $.transformNameMappings;
        this.update = $.update;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GoogleCloudDatapipelinesV1LaunchFlexTemplateParameterResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GoogleCloudDatapipelinesV1LaunchFlexTemplateParameterResponse $;

        public Builder() {
            $ = new GoogleCloudDatapipelinesV1LaunchFlexTemplateParameterResponse();
        }

        public Builder(GoogleCloudDatapipelinesV1LaunchFlexTemplateParameterResponse defaults) {
            $ = new GoogleCloudDatapipelinesV1LaunchFlexTemplateParameterResponse(Objects.requireNonNull(defaults));
        }

        public Builder containerSpecGcsPath(String containerSpecGcsPath) {
            $.containerSpecGcsPath = containerSpecGcsPath;
            return this;
        }

        public Builder environment(GoogleCloudDatapipelinesV1FlexTemplateRuntimeEnvironmentResponse environment) {
            $.environment = environment;
            return this;
        }

        public Builder jobName(String jobName) {
            $.jobName = jobName;
            return this;
        }

        public Builder launchOptions(Map<String,String> launchOptions) {
            $.launchOptions = launchOptions;
            return this;
        }

        public Builder parameters(Map<String,String> parameters) {
            $.parameters = parameters;
            return this;
        }

        public Builder transformNameMappings(Map<String,String> transformNameMappings) {
            $.transformNameMappings = transformNameMappings;
            return this;
        }

        public Builder update(Boolean update) {
            $.update = update;
            return this;
        }

        public GoogleCloudDatapipelinesV1LaunchFlexTemplateParameterResponse build() {
            $.containerSpecGcsPath = Objects.requireNonNull($.containerSpecGcsPath, "expected parameter 'containerSpecGcsPath' to be non-null");
            $.environment = Objects.requireNonNull($.environment, "expected parameter 'environment' to be non-null");
            $.jobName = Objects.requireNonNull($.jobName, "expected parameter 'jobName' to be non-null");
            $.launchOptions = Objects.requireNonNull($.launchOptions, "expected parameter 'launchOptions' to be non-null");
            $.parameters = Objects.requireNonNull($.parameters, "expected parameter 'parameters' to be non-null");
            $.transformNameMappings = Objects.requireNonNull($.transformNameMappings, "expected parameter 'transformNameMappings' to be non-null");
            $.update = Objects.requireNonNull($.update, "expected parameter 'update' to be non-null");
            return $;
        }
    }

}
