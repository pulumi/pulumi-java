// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.storagetransfer.v1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.storagetransfer.v1.inputs.AzureCredentialsArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * An AzureBlobStorageData resource can be a data source, but not a data sink. An AzureBlobStorageData resource represents one Azure container. The storage account determines the [Azure endpoint](https://docs.microsoft.com/en-us/azure/storage/common/storage-create-storage-account#storage-account-endpoints). In an AzureBlobStorageData resource, a blobs&#39;s name is the [Azure Blob Storage blob&#39;s key name](https://docs.microsoft.com/en-us/rest/api/storageservices/naming-and-referencing-containers--blobs--and-metadata#blob-names).
 * 
 */
public final class AzureBlobStorageDataArgs extends com.pulumi.resources.ResourceArgs {

    public static final AzureBlobStorageDataArgs Empty = new AzureBlobStorageDataArgs();

    /**
     * Input only. Credentials used to authenticate API requests to Azure. For information on our data retention policy for user credentials, see [User credentials](/storage-transfer/docs/data-retention#user-credentials).
     * 
     */
    @Import(name="azureCredentials", required=true)
    private Output<AzureCredentialsArgs> azureCredentials;

    /**
     * @return Input only. Credentials used to authenticate API requests to Azure. For information on our data retention policy for user credentials, see [User credentials](/storage-transfer/docs/data-retention#user-credentials).
     * 
     */
    public Output<AzureCredentialsArgs> azureCredentials() {
        return this.azureCredentials;
    }

    /**
     * The container to transfer from the Azure Storage account.
     * 
     */
    @Import(name="container", required=true)
    private Output<String> container;

    /**
     * @return The container to transfer from the Azure Storage account.
     * 
     */
    public Output<String> container() {
        return this.container;
    }

    /**
     * Root path to transfer objects. Must be an empty string or full path name that ends with a &#39;/&#39;. This field is treated as an object prefix. As such, it should generally not begin with a &#39;/&#39;.
     * 
     */
    @Import(name="path")
    private @Nullable Output<String> path;

    /**
     * @return Root path to transfer objects. Must be an empty string or full path name that ends with a &#39;/&#39;. This field is treated as an object prefix. As such, it should generally not begin with a &#39;/&#39;.
     * 
     */
    public Optional<Output<String>> path() {
        return Optional.ofNullable(this.path);
    }

    /**
     * The name of the Azure Storage account.
     * 
     */
    @Import(name="storageAccount", required=true)
    private Output<String> storageAccount;

    /**
     * @return The name of the Azure Storage account.
     * 
     */
    public Output<String> storageAccount() {
        return this.storageAccount;
    }

    private AzureBlobStorageDataArgs() {}

    private AzureBlobStorageDataArgs(AzureBlobStorageDataArgs $) {
        this.azureCredentials = $.azureCredentials;
        this.container = $.container;
        this.path = $.path;
        this.storageAccount = $.storageAccount;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AzureBlobStorageDataArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AzureBlobStorageDataArgs $;

        public Builder() {
            $ = new AzureBlobStorageDataArgs();
        }

        public Builder(AzureBlobStorageDataArgs defaults) {
            $ = new AzureBlobStorageDataArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param azureCredentials Input only. Credentials used to authenticate API requests to Azure. For information on our data retention policy for user credentials, see [User credentials](/storage-transfer/docs/data-retention#user-credentials).
         * 
         * @return builder
         * 
         */
        public Builder azureCredentials(Output<AzureCredentialsArgs> azureCredentials) {
            $.azureCredentials = azureCredentials;
            return this;
        }

        /**
         * @param azureCredentials Input only. Credentials used to authenticate API requests to Azure. For information on our data retention policy for user credentials, see [User credentials](/storage-transfer/docs/data-retention#user-credentials).
         * 
         * @return builder
         * 
         */
        public Builder azureCredentials(AzureCredentialsArgs azureCredentials) {
            return azureCredentials(Output.of(azureCredentials));
        }

        /**
         * @param container The container to transfer from the Azure Storage account.
         * 
         * @return builder
         * 
         */
        public Builder container(Output<String> container) {
            $.container = container;
            return this;
        }

        /**
         * @param container The container to transfer from the Azure Storage account.
         * 
         * @return builder
         * 
         */
        public Builder container(String container) {
            return container(Output.of(container));
        }

        /**
         * @param path Root path to transfer objects. Must be an empty string or full path name that ends with a &#39;/&#39;. This field is treated as an object prefix. As such, it should generally not begin with a &#39;/&#39;.
         * 
         * @return builder
         * 
         */
        public Builder path(@Nullable Output<String> path) {
            $.path = path;
            return this;
        }

        /**
         * @param path Root path to transfer objects. Must be an empty string or full path name that ends with a &#39;/&#39;. This field is treated as an object prefix. As such, it should generally not begin with a &#39;/&#39;.
         * 
         * @return builder
         * 
         */
        public Builder path(String path) {
            return path(Output.of(path));
        }

        /**
         * @param storageAccount The name of the Azure Storage account.
         * 
         * @return builder
         * 
         */
        public Builder storageAccount(Output<String> storageAccount) {
            $.storageAccount = storageAccount;
            return this;
        }

        /**
         * @param storageAccount The name of the Azure Storage account.
         * 
         * @return builder
         * 
         */
        public Builder storageAccount(String storageAccount) {
            return storageAccount(Output.of(storageAccount));
        }

        public AzureBlobStorageDataArgs build() {
            $.azureCredentials = Objects.requireNonNull($.azureCredentials, "expected parameter 'azureCredentials' to be non-null");
            $.container = Objects.requireNonNull($.container, "expected parameter 'container' to be non-null");
            $.storageAccount = Objects.requireNonNull($.storageAccount, "expected parameter 'storageAccount' to be non-null");
            return $;
        }
    }

}
