// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.dlp_v2.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.dlp_v2.inputs.GooglePrivacyDlpV2InfoTypeResponse;
import com.pulumi.googlenative.dlp_v2.inputs.GooglePrivacyDlpV2PrimitiveTransformationResponse;
import java.util.List;
import java.util.Objects;


/**
 * A transformation to apply to text that is identified as a specific info_type.
 * 
 */
public final class GooglePrivacyDlpV2InfoTypeTransformationResponse extends com.pulumi.resources.InvokeArgs {

    public static final GooglePrivacyDlpV2InfoTypeTransformationResponse Empty = new GooglePrivacyDlpV2InfoTypeTransformationResponse();

    /**
     * InfoTypes to apply the transformation to. An empty list will cause this transformation to apply to all findings that correspond to infoTypes that were requested in `InspectConfig`.
     * 
     */
    @Import(name="infoTypes", required=true)
    private List<GooglePrivacyDlpV2InfoTypeResponse> infoTypes;

    public List<GooglePrivacyDlpV2InfoTypeResponse> infoTypes() {
        return this.infoTypes;
    }

    /**
     * Primitive transformation to apply to the infoType.
     * 
     */
    @Import(name="primitiveTransformation", required=true)
    private GooglePrivacyDlpV2PrimitiveTransformationResponse primitiveTransformation;

    public GooglePrivacyDlpV2PrimitiveTransformationResponse primitiveTransformation() {
        return this.primitiveTransformation;
    }

    private GooglePrivacyDlpV2InfoTypeTransformationResponse() {}

    private GooglePrivacyDlpV2InfoTypeTransformationResponse(GooglePrivacyDlpV2InfoTypeTransformationResponse $) {
        this.infoTypes = $.infoTypes;
        this.primitiveTransformation = $.primitiveTransformation;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GooglePrivacyDlpV2InfoTypeTransformationResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GooglePrivacyDlpV2InfoTypeTransformationResponse $;

        public Builder() {
            $ = new GooglePrivacyDlpV2InfoTypeTransformationResponse();
        }

        public Builder(GooglePrivacyDlpV2InfoTypeTransformationResponse defaults) {
            $ = new GooglePrivacyDlpV2InfoTypeTransformationResponse(Objects.requireNonNull(defaults));
        }

        public Builder infoTypes(List<GooglePrivacyDlpV2InfoTypeResponse> infoTypes) {
            $.infoTypes = infoTypes;
            return this;
        }

        public Builder infoTypes(GooglePrivacyDlpV2InfoTypeResponse... infoTypes) {
            return infoTypes(List.of(infoTypes));
        }

        public Builder primitiveTransformation(GooglePrivacyDlpV2PrimitiveTransformationResponse primitiveTransformation) {
            $.primitiveTransformation = primitiveTransformation;
            return this;
        }

        public GooglePrivacyDlpV2InfoTypeTransformationResponse build() {
            $.infoTypes = Objects.requireNonNull($.infoTypes, "expected parameter 'infoTypes' to be non-null");
            $.primitiveTransformation = Objects.requireNonNull($.primitiveTransformation, "expected parameter 'primitiveTransformation' to be non-null");
            return $;
        }
    }

}
