// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.remotebuildexecution_v1alpha.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * AcceleratorConfig defines the accelerator cards to attach to the VM.
 * 
 */
public final class GoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfigResponse extends com.pulumi.resources.InvokeArgs {

    public static final GoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfigResponse Empty = new GoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfigResponse();

    /**
     * The number of guest accelerator cards exposed to each VM.
     * 
     */
    @Import(name="acceleratorCount", required=true)
    private String acceleratorCount;

    /**
     * @return The number of guest accelerator cards exposed to each VM.
     * 
     */
    public String acceleratorCount() {
        return this.acceleratorCount;
    }

    /**
     * The type of accelerator to attach to each VM, e.g. &#34;nvidia-tesla-k80&#34; for nVidia Tesla K80.
     * 
     */
    @Import(name="acceleratorType", required=true)
    private String acceleratorType;

    /**
     * @return The type of accelerator to attach to each VM, e.g. &#34;nvidia-tesla-k80&#34; for nVidia Tesla K80.
     * 
     */
    public String acceleratorType() {
        return this.acceleratorType;
    }

    private GoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfigResponse() {}

    private GoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfigResponse(GoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfigResponse $) {
        this.acceleratorCount = $.acceleratorCount;
        this.acceleratorType = $.acceleratorType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfigResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfigResponse $;

        public Builder() {
            $ = new GoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfigResponse();
        }

        public Builder(GoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfigResponse defaults) {
            $ = new GoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfigResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param acceleratorCount The number of guest accelerator cards exposed to each VM.
         * 
         * @return builder
         * 
         */
        public Builder acceleratorCount(String acceleratorCount) {
            $.acceleratorCount = acceleratorCount;
            return this;
        }

        /**
         * @param acceleratorType The type of accelerator to attach to each VM, e.g. &#34;nvidia-tesla-k80&#34; for nVidia Tesla K80.
         * 
         * @return builder
         * 
         */
        public Builder acceleratorType(String acceleratorType) {
            $.acceleratorType = acceleratorType;
            return this;
        }

        public GoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfigResponse build() {
            $.acceleratorCount = Objects.requireNonNull($.acceleratorCount, "expected parameter 'acceleratorCount' to be non-null");
            $.acceleratorType = Objects.requireNonNull($.acceleratorType, "expected parameter 'acceleratorType' to be non-null");
            return $;
        }
    }

}
