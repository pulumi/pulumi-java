// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.testing_v1.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.testing_v1.inputs.ClientInfoDetailResponse;
import java.lang.String;
import java.util.List;
import java.util.Objects;


/**
 * Information about the client which invoked the test.
 * 
 */
public final class ClientInfoResponse extends com.pulumi.resources.InvokeArgs {

    public static final ClientInfoResponse Empty = new ClientInfoResponse();

    /**
     * The list of detailed information about client.
     * 
     */
    @Import(name="clientInfoDetails", required=true)
    private List<ClientInfoDetailResponse> clientInfoDetails;

    /**
     * @return The list of detailed information about client.
     * 
     */
    public List<ClientInfoDetailResponse> clientInfoDetails() {
        return this.clientInfoDetails;
    }

    /**
     * Client name, such as gcloud.
     * 
     */
    @Import(name="name", required=true)
    private String name;

    /**
     * @return Client name, such as gcloud.
     * 
     */
    public String name() {
        return this.name;
    }

    private ClientInfoResponse() {}

    private ClientInfoResponse(ClientInfoResponse $) {
        this.clientInfoDetails = $.clientInfoDetails;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClientInfoResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClientInfoResponse $;

        public Builder() {
            $ = new ClientInfoResponse();
        }

        public Builder(ClientInfoResponse defaults) {
            $ = new ClientInfoResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param clientInfoDetails The list of detailed information about client.
         * 
         * @return builder
         * 
         */
        public Builder clientInfoDetails(List<ClientInfoDetailResponse> clientInfoDetails) {
            $.clientInfoDetails = clientInfoDetails;
            return this;
        }

        /**
         * @param clientInfoDetails The list of detailed information about client.
         * 
         * @return builder
         * 
         */
        public Builder clientInfoDetails(ClientInfoDetailResponse... clientInfoDetails) {
            return clientInfoDetails(List.of(clientInfoDetails));
        }

        /**
         * @param name Client name, such as gcloud.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            $.name = name;
            return this;
        }

        public ClientInfoResponse build() {
            $.clientInfoDetails = Objects.requireNonNull($.clientInfoDetails, "expected parameter 'clientInfoDetails' to be non-null");
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            return $;
        }
    }

}
