// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.retail.v2beta;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.retail.v2beta.enums.ProductAvailability;
import com.pulumi.googlenative.retail.v2beta.enums.ProductType;
import com.pulumi.googlenative.retail.v2beta.inputs.GoogleCloudRetailV2betaAudienceArgs;
import com.pulumi.googlenative.retail.v2beta.inputs.GoogleCloudRetailV2betaColorInfoArgs;
import com.pulumi.googlenative.retail.v2beta.inputs.GoogleCloudRetailV2betaFulfillmentInfoArgs;
import com.pulumi.googlenative.retail.v2beta.inputs.GoogleCloudRetailV2betaImageArgs;
import com.pulumi.googlenative.retail.v2beta.inputs.GoogleCloudRetailV2betaPriceInfoArgs;
import com.pulumi.googlenative.retail.v2beta.inputs.GoogleCloudRetailV2betaPromotionArgs;
import com.pulumi.googlenative.retail.v2beta.inputs.GoogleCloudRetailV2betaRatingArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ProductArgs extends com.pulumi.resources.ResourceArgs {

    public static final ProductArgs Empty = new ProductArgs();

    /**
     * Highly encouraged. Extra product attributes to be included. For example, for products, this could include the store name, vendor, style, color, etc. These are very strong signals for recommendation model, thus we highly recommend providing the attributes here. Features that can take on one of a limited number of possible values. Two types of features can be set are: Textual features. some examples would be the brand/maker of a product, or country of a customer. Numerical features. Some examples would be the height/weight of a product, or age of a customer. For example: `{ &#34;vendor&#34;: {&#34;text&#34;: [&#34;vendor123&#34;, &#34;vendor456&#34;]}, &#34;lengths_cm&#34;: {&#34;numbers&#34;:[2.3, 15.4]}, &#34;heights_cm&#34;: {&#34;numbers&#34;:[8.1, 6.4]} }`. This field needs to pass all below criteria, otherwise an INVALID_ARGUMENT error is returned: * Max entries count: 200. * The key must be a UTF-8 encoded string with a length limit of 128 characters. * For indexable attribute, the key must match the pattern: `a-zA-Z0-9*`. For example, `key0LikeThis` or `KEY_1_LIKE_THIS`. * For text attributes, at most 400 values are allowed. Empty values are not allowed. Each value must be a non-empty UTF-8 encoded string with a length limit of 256 characters. * For number attributes, at most 400 values are allowed.
     * 
     */
    @Import(name="attributes")
    private @Nullable Output<Map<String,String>> attributes;

    /**
     * @return Highly encouraged. Extra product attributes to be included. For example, for products, this could include the store name, vendor, style, color, etc. These are very strong signals for recommendation model, thus we highly recommend providing the attributes here. Features that can take on one of a limited number of possible values. Two types of features can be set are: Textual features. some examples would be the brand/maker of a product, or country of a customer. Numerical features. Some examples would be the height/weight of a product, or age of a customer. For example: `{ &#34;vendor&#34;: {&#34;text&#34;: [&#34;vendor123&#34;, &#34;vendor456&#34;]}, &#34;lengths_cm&#34;: {&#34;numbers&#34;:[2.3, 15.4]}, &#34;heights_cm&#34;: {&#34;numbers&#34;:[8.1, 6.4]} }`. This field needs to pass all below criteria, otherwise an INVALID_ARGUMENT error is returned: * Max entries count: 200. * The key must be a UTF-8 encoded string with a length limit of 128 characters. * For indexable attribute, the key must match the pattern: `a-zA-Z0-9*`. For example, `key0LikeThis` or `KEY_1_LIKE_THIS`. * For text attributes, at most 400 values are allowed. Empty values are not allowed. Each value must be a non-empty UTF-8 encoded string with a length limit of 256 characters. * For number attributes, at most 400 values are allowed.
     * 
     */
    public Optional<Output<Map<String,String>>> attributes() {
        return Optional.ofNullable(this.attributes);
    }

    /**
     * The target group associated with a given audience (e.g. male, veterans, car owners, musicians, etc.) of the product.
     * 
     */
    @Import(name="audience")
    private @Nullable Output<GoogleCloudRetailV2betaAudienceArgs> audience;

    /**
     * @return The target group associated with a given audience (e.g. male, veterans, car owners, musicians, etc.) of the product.
     * 
     */
    public Optional<Output<GoogleCloudRetailV2betaAudienceArgs>> audience() {
        return Optional.ofNullable(this.audience);
    }

    /**
     * The online availability of the Product. Default to Availability.IN_STOCK. Corresponding properties: Google Merchant Center property [availability](https://support.google.com/merchants/answer/6324448). Schema.org property [Offer.availability](https://schema.org/availability).
     * 
     */
    @Import(name="availability")
    private @Nullable Output<ProductAvailability> availability;

    /**
     * @return The online availability of the Product. Default to Availability.IN_STOCK. Corresponding properties: Google Merchant Center property [availability](https://support.google.com/merchants/answer/6324448). Schema.org property [Offer.availability](https://schema.org/availability).
     * 
     */
    public Optional<Output<ProductAvailability>> availability() {
        return Optional.ofNullable(this.availability);
    }

    /**
     * The available quantity of the item.
     * 
     */
    @Import(name="availableQuantity")
    private @Nullable Output<Integer> availableQuantity;

    /**
     * @return The available quantity of the item.
     * 
     */
    public Optional<Output<Integer>> availableQuantity() {
        return Optional.ofNullable(this.availableQuantity);
    }

    /**
     * The timestamp when this Product becomes available for SearchService.Search.
     * 
     */
    @Import(name="availableTime")
    private @Nullable Output<String> availableTime;

    /**
     * @return The timestamp when this Product becomes available for SearchService.Search.
     * 
     */
    public Optional<Output<String>> availableTime() {
        return Optional.ofNullable(this.availableTime);
    }

    @Import(name="branchId", required=true)
    private Output<String> branchId;

    public Output<String> branchId() {
        return this.branchId;
    }

    /**
     * The brands of the product. A maximum of 30 brands are allowed. Each brand must be a UTF-8 encoded string with a length limit of 1,000 characters. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties: Google Merchant Center property [brand](https://support.google.com/merchants/answer/6324351). Schema.org property [Product.brand](https://schema.org/brand).
     * 
     */
    @Import(name="brands")
    private @Nullable Output<List<String>> brands;

    /**
     * @return The brands of the product. A maximum of 30 brands are allowed. Each brand must be a UTF-8 encoded string with a length limit of 1,000 characters. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties: Google Merchant Center property [brand](https://support.google.com/merchants/answer/6324351). Schema.org property [Product.brand](https://schema.org/brand).
     * 
     */
    public Optional<Output<List<String>>> brands() {
        return Optional.ofNullable(this.brands);
    }

    @Import(name="catalogId", required=true)
    private Output<String> catalogId;

    public Output<String> catalogId() {
        return this.catalogId;
    }

    /**
     * Product categories. This field is repeated for supporting one product belonging to several parallel categories. Strongly recommended using the full path for better search / recommendation quality. To represent full path of category, use &#39;&gt;&#39; sign to separate different hierarchies. If &#39;&gt;&#39; is part of the category name, please replace it with other character(s). For example, if a shoes product belongs to both [&#34;Shoes &amp; Accessories&#34; -&gt; &#34;Shoes&#34;] and [&#34;Sports &amp; Fitness&#34; -&gt; &#34;Athletic Clothing&#34; -&gt; &#34;Shoes&#34;], it could be represented as: &#34;categories&#34;: [ &#34;Shoes &amp; Accessories &gt; Shoes&#34;, &#34;Sports &amp; Fitness &gt; Athletic Clothing &gt; Shoes&#34; ] Must be set for Type.PRIMARY Product otherwise an INVALID_ARGUMENT error is returned. At most 250 values are allowed per Product. Empty values are not allowed. Each value must be a UTF-8 encoded string with a length limit of 5,000 characters. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties: Google Merchant Center property google_product_category. Schema.org property [Product.category] (https://schema.org/category). [mc_google_product_category]: https://support.google.com/merchants/answer/6324436
     * 
     */
    @Import(name="categories")
    private @Nullable Output<List<String>> categories;

    /**
     * @return Product categories. This field is repeated for supporting one product belonging to several parallel categories. Strongly recommended using the full path for better search / recommendation quality. To represent full path of category, use &#39;&gt;&#39; sign to separate different hierarchies. If &#39;&gt;&#39; is part of the category name, please replace it with other character(s). For example, if a shoes product belongs to both [&#34;Shoes &amp; Accessories&#34; -&gt; &#34;Shoes&#34;] and [&#34;Sports &amp; Fitness&#34; -&gt; &#34;Athletic Clothing&#34; -&gt; &#34;Shoes&#34;], it could be represented as: &#34;categories&#34;: [ &#34;Shoes &amp; Accessories &gt; Shoes&#34;, &#34;Sports &amp; Fitness &gt; Athletic Clothing &gt; Shoes&#34; ] Must be set for Type.PRIMARY Product otherwise an INVALID_ARGUMENT error is returned. At most 250 values are allowed per Product. Empty values are not allowed. Each value must be a UTF-8 encoded string with a length limit of 5,000 characters. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties: Google Merchant Center property google_product_category. Schema.org property [Product.category] (https://schema.org/category). [mc_google_product_category]: https://support.google.com/merchants/answer/6324436
     * 
     */
    public Optional<Output<List<String>>> categories() {
        return Optional.ofNullable(this.categories);
    }

    /**
     * The id of the collection members when type is Type.COLLECTION. Non-existent product ids are allowed. The type of the members must be either Type.PRIMARY or Type.VARIANT otherwise and INVALID_ARGUMENT error is thrown. Should not set it for other types. A maximum of 1000 values are allowed. Otherwise, an INVALID_ARGUMENT error is return.
     * 
     */
    @Import(name="collectionMemberIds")
    private @Nullable Output<List<String>> collectionMemberIds;

    /**
     * @return The id of the collection members when type is Type.COLLECTION. Non-existent product ids are allowed. The type of the members must be either Type.PRIMARY or Type.VARIANT otherwise and INVALID_ARGUMENT error is thrown. Should not set it for other types. A maximum of 1000 values are allowed. Otherwise, an INVALID_ARGUMENT error is return.
     * 
     */
    public Optional<Output<List<String>>> collectionMemberIds() {
        return Optional.ofNullable(this.collectionMemberIds);
    }

    /**
     * The color of the product. Corresponding properties: Google Merchant Center property [color](https://support.google.com/merchants/answer/6324487). Schema.org property [Product.color](https://schema.org/color).
     * 
     */
    @Import(name="colorInfo")
    private @Nullable Output<GoogleCloudRetailV2betaColorInfoArgs> colorInfo;

    /**
     * @return The color of the product. Corresponding properties: Google Merchant Center property [color](https://support.google.com/merchants/answer/6324487). Schema.org property [Product.color](https://schema.org/color).
     * 
     */
    public Optional<Output<GoogleCloudRetailV2betaColorInfoArgs>> colorInfo() {
        return Optional.ofNullable(this.colorInfo);
    }

    /**
     * The condition of the product. Strongly encouraged to use the standard values: &#34;new&#34;, &#34;refurbished&#34;, &#34;used&#34;. A maximum of 1 value is allowed per Product. Each value must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties: Google Merchant Center property [condition](https://support.google.com/merchants/answer/6324469). Schema.org property [Offer.itemCondition](https://schema.org/itemCondition).
     * 
     */
    @Import(name="conditions")
    private @Nullable Output<List<String>> conditions;

    /**
     * @return The condition of the product. Strongly encouraged to use the standard values: &#34;new&#34;, &#34;refurbished&#34;, &#34;used&#34;. A maximum of 1 value is allowed per Product. Each value must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties: Google Merchant Center property [condition](https://support.google.com/merchants/answer/6324469). Schema.org property [Offer.itemCondition](https://schema.org/itemCondition).
     * 
     */
    public Optional<Output<List<String>>> conditions() {
        return Optional.ofNullable(this.conditions);
    }

    /**
     * Product description. This field must be a UTF-8 encoded string with a length limit of 5,000 characters. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties: Google Merchant Center property [description](https://support.google.com/merchants/answer/6324468). Schema.org property [Product.description](https://schema.org/description).
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Product description. This field must be a UTF-8 encoded string with a length limit of 5,000 characters. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties: Google Merchant Center property [description](https://support.google.com/merchants/answer/6324468). Schema.org property [Product.description](https://schema.org/description).
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The timestamp when this product becomes unavailable for SearchService.Search. If it is set, the Product is not available for SearchService.Search after expire_time. However, the product can still be retrieved by ProductService.GetProduct and ProductService.ListProducts. expire_time must be later than available_time and publish_time, otherwise an INVALID_ARGUMENT error is thrown. Corresponding properties: Google Merchant Center property [expiration_date](https://support.google.com/merchants/answer/6324499).
     * 
     */
    @Import(name="expireTime")
    private @Nullable Output<String> expireTime;

    /**
     * @return The timestamp when this product becomes unavailable for SearchService.Search. If it is set, the Product is not available for SearchService.Search after expire_time. However, the product can still be retrieved by ProductService.GetProduct and ProductService.ListProducts. expire_time must be later than available_time and publish_time, otherwise an INVALID_ARGUMENT error is thrown. Corresponding properties: Google Merchant Center property [expiration_date](https://support.google.com/merchants/answer/6324499).
     * 
     */
    public Optional<Output<String>> expireTime() {
        return Optional.ofNullable(this.expireTime);
    }

    /**
     * Fulfillment information, such as the store IDs for in-store pickup or region IDs for different shipping methods. All the elements must have distinct FulfillmentInfo.type. Otherwise, an INVALID_ARGUMENT error is returned.
     * 
     */
    @Import(name="fulfillmentInfo")
    private @Nullable Output<List<GoogleCloudRetailV2betaFulfillmentInfoArgs>> fulfillmentInfo;

    /**
     * @return Fulfillment information, such as the store IDs for in-store pickup or region IDs for different shipping methods. All the elements must have distinct FulfillmentInfo.type. Otherwise, an INVALID_ARGUMENT error is returned.
     * 
     */
    public Optional<Output<List<GoogleCloudRetailV2betaFulfillmentInfoArgs>>> fulfillmentInfo() {
        return Optional.ofNullable(this.fulfillmentInfo);
    }

    /**
     * The Global Trade Item Number (GTIN) of the product. This field must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned. This field must be a Unigram. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties: Google Merchant Center property [gtin](https://support.google.com/merchants/answer/6324461). Schema.org property [Product.isbn](https://schema.org/isbn), [Product.gtin8](https://schema.org/gtin8), [Product.gtin12](https://schema.org/gtin12), [Product.gtin13](https://schema.org/gtin13), or [Product.gtin14](https://schema.org/gtin14). If the value is not a valid GTIN, an INVALID_ARGUMENT error is returned.
     * 
     */
    @Import(name="gtin")
    private @Nullable Output<String> gtin;

    /**
     * @return The Global Trade Item Number (GTIN) of the product. This field must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned. This field must be a Unigram. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties: Google Merchant Center property [gtin](https://support.google.com/merchants/answer/6324461). Schema.org property [Product.isbn](https://schema.org/isbn), [Product.gtin8](https://schema.org/gtin8), [Product.gtin12](https://schema.org/gtin12), [Product.gtin13](https://schema.org/gtin13), or [Product.gtin14](https://schema.org/gtin14). If the value is not a valid GTIN, an INVALID_ARGUMENT error is returned.
     * 
     */
    public Optional<Output<String>> gtin() {
        return Optional.ofNullable(this.gtin);
    }

    /**
     * Immutable. Product identifier, which is the final component of name. For example, this field is &#34;id_1&#34;, if name is `projects/*{@literal /}locations/global/catalogs/default_catalog/branches/default_branch/products/id_1`. This field must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties: Google Merchant Center property [id](https://support.google.com/merchants/answer/6324405). Schema.org property [Product.sku](https://schema.org/sku).
     * 
     */
    @Import(name="id")
    private @Nullable Output<String> id;

    /**
     * @return Immutable. Product identifier, which is the final component of name. For example, this field is &#34;id_1&#34;, if name is `projects/*{@literal /}locations/global/catalogs/default_catalog/branches/default_branch/products/id_1`. This field must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties: Google Merchant Center property [id](https://support.google.com/merchants/answer/6324405). Schema.org property [Product.sku](https://schema.org/sku).
     * 
     */
    public Optional<Output<String>> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * Product images for the product. We highly recommend putting the main image first. A maximum of 300 images are allowed. Corresponding properties: Google Merchant Center property [image_link](https://support.google.com/merchants/answer/6324350). Schema.org property [Product.image](https://schema.org/image).
     * 
     */
    @Import(name="images")
    private @Nullable Output<List<GoogleCloudRetailV2betaImageArgs>> images;

    /**
     * @return Product images for the product. We highly recommend putting the main image first. A maximum of 300 images are allowed. Corresponding properties: Google Merchant Center property [image_link](https://support.google.com/merchants/answer/6324350). Schema.org property [Product.image](https://schema.org/image).
     * 
     */
    public Optional<Output<List<GoogleCloudRetailV2betaImageArgs>>> images() {
        return Optional.ofNullable(this.images);
    }

    /**
     * Language of the title/description and other string attributes. Use language tags defined by [BCP 47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt). For product prediction, this field is ignored and the model automatically detects the text language. The Product can include text in different languages, but duplicating Products to provide text in multiple languages can result in degraded model performance. For product search this field is in use. It defaults to &#34;en-US&#34; if unset.
     * 
     */
    @Import(name="languageCode")
    private @Nullable Output<String> languageCode;

    /**
     * @return Language of the title/description and other string attributes. Use language tags defined by [BCP 47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt). For product prediction, this field is ignored and the model automatically detects the text language. The Product can include text in different languages, but duplicating Products to provide text in multiple languages can result in degraded model performance. For product search this field is in use. It defaults to &#34;en-US&#34; if unset.
     * 
     */
    public Optional<Output<String>> languageCode() {
        return Optional.ofNullable(this.languageCode);
    }

    @Import(name="location")
    private @Nullable Output<String> location;

    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * The material of the product. For example, &#34;leather&#34;, &#34;wooden&#34;. A maximum of 20 values are allowed. Each value must be a UTF-8 encoded string with a length limit of 200 characters. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties: Google Merchant Center property [material](https://support.google.com/merchants/answer/6324410). Schema.org property [Product.material](https://schema.org/material).
     * 
     */
    @Import(name="materials")
    private @Nullable Output<List<String>> materials;

    /**
     * @return The material of the product. For example, &#34;leather&#34;, &#34;wooden&#34;. A maximum of 20 values are allowed. Each value must be a UTF-8 encoded string with a length limit of 200 characters. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties: Google Merchant Center property [material](https://support.google.com/merchants/answer/6324410). Schema.org property [Product.material](https://schema.org/material).
     * 
     */
    public Optional<Output<List<String>>> materials() {
        return Optional.ofNullable(this.materials);
    }

    /**
     * Immutable. Full resource name of the product, such as `projects/*{@literal /}locations/global/catalogs/default_catalog/branches/default_branch/products/product_id`.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Immutable. Full resource name of the product, such as `projects/*{@literal /}locations/global/catalogs/default_catalog/branches/default_branch/products/product_id`.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The pattern or graphic print of the product. For example, &#34;striped&#34;, &#34;polka dot&#34;, &#34;paisley&#34;. A maximum of 20 values are allowed per Product. Each value must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties: Google Merchant Center property [pattern](https://support.google.com/merchants/answer/6324483). Schema.org property [Product.pattern](https://schema.org/pattern).
     * 
     */
    @Import(name="patterns")
    private @Nullable Output<List<String>> patterns;

    /**
     * @return The pattern or graphic print of the product. For example, &#34;striped&#34;, &#34;polka dot&#34;, &#34;paisley&#34;. A maximum of 20 values are allowed per Product. Each value must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties: Google Merchant Center property [pattern](https://support.google.com/merchants/answer/6324483). Schema.org property [Product.pattern](https://schema.org/pattern).
     * 
     */
    public Optional<Output<List<String>>> patterns() {
        return Optional.ofNullable(this.patterns);
    }

    /**
     * Product price and cost information. Corresponding properties: Google Merchant Center property [price](https://support.google.com/merchants/answer/6324371).
     * 
     */
    @Import(name="priceInfo")
    private @Nullable Output<GoogleCloudRetailV2betaPriceInfoArgs> priceInfo;

    /**
     * @return Product price and cost information. Corresponding properties: Google Merchant Center property [price](https://support.google.com/merchants/answer/6324371).
     * 
     */
    public Optional<Output<GoogleCloudRetailV2betaPriceInfoArgs>> priceInfo() {
        return Optional.ofNullable(this.priceInfo);
    }

    /**
     * Variant group identifier. Must be an id, with the same parent branch with this product. Otherwise, an error is thrown. For Type.PRIMARY Products, this field can only be empty or set to the same value as id. For VARIANT Products, this field cannot be empty. A maximum of 2,000 products are allowed to share the same Type.PRIMARY Product. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties: Google Merchant Center property [item_group_id](https://support.google.com/merchants/answer/6324507). Schema.org property [Product.inProductGroupWithID](https://schema.org/inProductGroupWithID).
     * 
     */
    @Import(name="primaryProductId")
    private @Nullable Output<String> primaryProductId;

    /**
     * @return Variant group identifier. Must be an id, with the same parent branch with this product. Otherwise, an error is thrown. For Type.PRIMARY Products, this field can only be empty or set to the same value as id. For VARIANT Products, this field cannot be empty. A maximum of 2,000 products are allowed to share the same Type.PRIMARY Product. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties: Google Merchant Center property [item_group_id](https://support.google.com/merchants/answer/6324507). Schema.org property [Product.inProductGroupWithID](https://schema.org/inProductGroupWithID).
     * 
     */
    public Optional<Output<String>> primaryProductId() {
        return Optional.ofNullable(this.primaryProductId);
    }

    /**
     * Required. The ID to use for the Product, which will become the final component of the Product.name. If the caller does not have permission to create the Product, regardless of whether or not it exists, a PERMISSION_DENIED error is returned. This field must be unique among all Products with the same parent. Otherwise, an ALREADY_EXISTS error is returned. This field must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned.
     * 
     */
    @Import(name="productId", required=true)
    private Output<String> productId;

    /**
     * @return Required. The ID to use for the Product, which will become the final component of the Product.name. If the caller does not have permission to create the Product, regardless of whether or not it exists, a PERMISSION_DENIED error is returned. This field must be unique among all Products with the same parent. Otherwise, an ALREADY_EXISTS error is returned. This field must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned.
     * 
     */
    public Output<String> productId() {
        return this.productId;
    }

    @Import(name="project")
    private @Nullable Output<String> project;

    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * The promotions applied to the product. A maximum of 10 values are allowed per Product. Only Promotion.promotion_id will be used, other fields will be ignored if set.
     * 
     */
    @Import(name="promotions")
    private @Nullable Output<List<GoogleCloudRetailV2betaPromotionArgs>> promotions;

    /**
     * @return The promotions applied to the product. A maximum of 10 values are allowed per Product. Only Promotion.promotion_id will be used, other fields will be ignored if set.
     * 
     */
    public Optional<Output<List<GoogleCloudRetailV2betaPromotionArgs>>> promotions() {
        return Optional.ofNullable(this.promotions);
    }

    /**
     * The timestamp when the product is published by the retailer for the first time, which indicates the freshness of the products. Note that this field is different from available_time, given it purely describes product freshness regardless of when it is available on search and recommendation.
     * 
     */
    @Import(name="publishTime")
    private @Nullable Output<String> publishTime;

    /**
     * @return The timestamp when the product is published by the retailer for the first time, which indicates the freshness of the products. Note that this field is different from available_time, given it purely describes product freshness regardless of when it is available on search and recommendation.
     * 
     */
    public Optional<Output<String>> publishTime() {
        return Optional.ofNullable(this.publishTime);
    }

    /**
     * The rating of this product.
     * 
     */
    @Import(name="rating")
    private @Nullable Output<GoogleCloudRetailV2betaRatingArgs> rating;

    /**
     * @return The rating of this product.
     * 
     */
    public Optional<Output<GoogleCloudRetailV2betaRatingArgs>> rating() {
        return Optional.ofNullable(this.rating);
    }

    /**
     * Indicates which fields in the Products are returned in SearchResponse. Supported fields for all types: * audience * availability * brands * color_info * conditions * gtin * materials * name * patterns * price_info * rating * sizes * title * uri Supported fields only for Type.PRIMARY and Type.COLLECTION: * categories * description * images Supported fields only for Type.VARIANT: * Only the first image in images To mark attributes as retrievable, include paths of the form &#34;attributes.key&#34; where &#34;key&#34; is the key of a custom attribute, as specified in attributes. For Type.PRIMARY and Type.COLLECTION, the following fields are always returned in SearchResponse by default: * name For Type.VARIANT, the following fields are always returned in by default: * name * color_info The maximum number of paths is 30. Otherwise, an INVALID_ARGUMENT error is returned. Note: Returning more fields in SearchResponse can increase response payload size and serving latency.
     * 
     */
    @Import(name="retrievableFields")
    private @Nullable Output<String> retrievableFields;

    /**
     * @return Indicates which fields in the Products are returned in SearchResponse. Supported fields for all types: * audience * availability * brands * color_info * conditions * gtin * materials * name * patterns * price_info * rating * sizes * title * uri Supported fields only for Type.PRIMARY and Type.COLLECTION: * categories * description * images Supported fields only for Type.VARIANT: * Only the first image in images To mark attributes as retrievable, include paths of the form &#34;attributes.key&#34; where &#34;key&#34; is the key of a custom attribute, as specified in attributes. For Type.PRIMARY and Type.COLLECTION, the following fields are always returned in SearchResponse by default: * name For Type.VARIANT, the following fields are always returned in by default: * name * color_info The maximum number of paths is 30. Otherwise, an INVALID_ARGUMENT error is returned. Note: Returning more fields in SearchResponse can increase response payload size and serving latency.
     * 
     */
    public Optional<Output<String>> retrievableFields() {
        return Optional.ofNullable(this.retrievableFields);
    }

    /**
     * The size of the product. To represent different size systems or size types, consider using this format: [[[size_system:]size_type:]size_value]. For example, in &#34;US:MENS:M&#34;, &#34;US&#34; represents size system; &#34;MENS&#34; represents size type; &#34;M&#34; represents size value. In &#34;GIRLS:27&#34;, size system is empty; &#34;GIRLS&#34; represents size type; &#34;27&#34; represents size value. In &#34;32 inches&#34;, both size system and size type are empty, while size value is &#34;32 inches&#34;. A maximum of 20 values are allowed per Product. Each value must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties: Google Merchant Center property [size](https://support.google.com/merchants/answer/6324492), [size_type](https://support.google.com/merchants/answer/6324497), and [size_system](https://support.google.com/merchants/answer/6324502). Schema.org property [Product.size](https://schema.org/size).
     * 
     */
    @Import(name="sizes")
    private @Nullable Output<List<String>> sizes;

    /**
     * @return The size of the product. To represent different size systems or size types, consider using this format: [[[size_system:]size_type:]size_value]. For example, in &#34;US:MENS:M&#34;, &#34;US&#34; represents size system; &#34;MENS&#34; represents size type; &#34;M&#34; represents size value. In &#34;GIRLS:27&#34;, size system is empty; &#34;GIRLS&#34; represents size type; &#34;27&#34; represents size value. In &#34;32 inches&#34;, both size system and size type are empty, while size value is &#34;32 inches&#34;. A maximum of 20 values are allowed per Product. Each value must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties: Google Merchant Center property [size](https://support.google.com/merchants/answer/6324492), [size_type](https://support.google.com/merchants/answer/6324497), and [size_system](https://support.google.com/merchants/answer/6324502). Schema.org property [Product.size](https://schema.org/size).
     * 
     */
    public Optional<Output<List<String>>> sizes() {
        return Optional.ofNullable(this.sizes);
    }

    /**
     * Custom tags associated with the product. At most 250 values are allowed per Product. This value must be a UTF-8 encoded string with a length limit of 1,000 characters. Otherwise, an INVALID_ARGUMENT error is returned. This tag can be used for filtering recommendation results by passing the tag as part of the PredictRequest.filter. Corresponding properties: Google Merchant Center property [custom_label_0–4](https://support.google.com/merchants/answer/6324473).
     * 
     */
    @Import(name="tags")
    private @Nullable Output<List<String>> tags;

    /**
     * @return Custom tags associated with the product. At most 250 values are allowed per Product. This value must be a UTF-8 encoded string with a length limit of 1,000 characters. Otherwise, an INVALID_ARGUMENT error is returned. This tag can be used for filtering recommendation results by passing the tag as part of the PredictRequest.filter. Corresponding properties: Google Merchant Center property [custom_label_0–4](https://support.google.com/merchants/answer/6324473).
     * 
     */
    public Optional<Output<List<String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * Product title. This field must be a UTF-8 encoded string with a length limit of 1,000 characters. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties: Google Merchant Center property [title](https://support.google.com/merchants/answer/6324415). Schema.org property [Product.name](https://schema.org/name).
     * 
     */
    @Import(name="title", required=true)
    private Output<String> title;

    /**
     * @return Product title. This field must be a UTF-8 encoded string with a length limit of 1,000 characters. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties: Google Merchant Center property [title](https://support.google.com/merchants/answer/6324415). Schema.org property [Product.name](https://schema.org/name).
     * 
     */
    public Output<String> title() {
        return this.title;
    }

    /**
     * Input only. The TTL (time to live) of the product. If it is set, it must be a non-negative value, and expire_time is set as current timestamp plus ttl. The derived expire_time is returned in the output and ttl is left blank when retrieving the Product. If it is set, the product is not available for SearchService.Search after current timestamp plus ttl. However, the product can still be retrieved by ProductService.GetProduct and ProductService.ListProducts.
     * 
     */
    @Import(name="ttl")
    private @Nullable Output<String> ttl;

    /**
     * @return Input only. The TTL (time to live) of the product. If it is set, it must be a non-negative value, and expire_time is set as current timestamp plus ttl. The derived expire_time is returned in the output and ttl is left blank when retrieving the Product. If it is set, the product is not available for SearchService.Search after current timestamp plus ttl. However, the product can still be retrieved by ProductService.GetProduct and ProductService.ListProducts.
     * 
     */
    public Optional<Output<String>> ttl() {
        return Optional.ofNullable(this.ttl);
    }

    /**
     * Immutable. The type of the product. Default to Catalog.product_level_config.ingestion_product_type if unset.
     * 
     */
    @Import(name="type")
    private @Nullable Output<ProductType> type;

    /**
     * @return Immutable. The type of the product. Default to Catalog.product_level_config.ingestion_product_type if unset.
     * 
     */
    public Optional<Output<ProductType>> type() {
        return Optional.ofNullable(this.type);
    }

    /**
     * Canonical URL directly linking to the product detail page. It is strongly recommended to provide a valid uri for the product, otherwise the service performance could be significantly degraded. This field must be a UTF-8 encoded string with a length limit of 5,000 characters. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties: Google Merchant Center property [link](https://support.google.com/merchants/answer/6324416). Schema.org property [Offer.url](https://schema.org/url).
     * 
     */
    @Import(name="uri")
    private @Nullable Output<String> uri;

    /**
     * @return Canonical URL directly linking to the product detail page. It is strongly recommended to provide a valid uri for the product, otherwise the service performance could be significantly degraded. This field must be a UTF-8 encoded string with a length limit of 5,000 characters. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties: Google Merchant Center property [link](https://support.google.com/merchants/answer/6324416). Schema.org property [Offer.url](https://schema.org/url).
     * 
     */
    public Optional<Output<String>> uri() {
        return Optional.ofNullable(this.uri);
    }

    private ProductArgs() {}

    private ProductArgs(ProductArgs $) {
        this.attributes = $.attributes;
        this.audience = $.audience;
        this.availability = $.availability;
        this.availableQuantity = $.availableQuantity;
        this.availableTime = $.availableTime;
        this.branchId = $.branchId;
        this.brands = $.brands;
        this.catalogId = $.catalogId;
        this.categories = $.categories;
        this.collectionMemberIds = $.collectionMemberIds;
        this.colorInfo = $.colorInfo;
        this.conditions = $.conditions;
        this.description = $.description;
        this.expireTime = $.expireTime;
        this.fulfillmentInfo = $.fulfillmentInfo;
        this.gtin = $.gtin;
        this.id = $.id;
        this.images = $.images;
        this.languageCode = $.languageCode;
        this.location = $.location;
        this.materials = $.materials;
        this.name = $.name;
        this.patterns = $.patterns;
        this.priceInfo = $.priceInfo;
        this.primaryProductId = $.primaryProductId;
        this.productId = $.productId;
        this.project = $.project;
        this.promotions = $.promotions;
        this.publishTime = $.publishTime;
        this.rating = $.rating;
        this.retrievableFields = $.retrievableFields;
        this.sizes = $.sizes;
        this.tags = $.tags;
        this.title = $.title;
        this.ttl = $.ttl;
        this.type = $.type;
        this.uri = $.uri;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ProductArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ProductArgs $;

        public Builder() {
            $ = new ProductArgs();
        }

        public Builder(ProductArgs defaults) {
            $ = new ProductArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param attributes Highly encouraged. Extra product attributes to be included. For example, for products, this could include the store name, vendor, style, color, etc. These are very strong signals for recommendation model, thus we highly recommend providing the attributes here. Features that can take on one of a limited number of possible values. Two types of features can be set are: Textual features. some examples would be the brand/maker of a product, or country of a customer. Numerical features. Some examples would be the height/weight of a product, or age of a customer. For example: `{ &#34;vendor&#34;: {&#34;text&#34;: [&#34;vendor123&#34;, &#34;vendor456&#34;]}, &#34;lengths_cm&#34;: {&#34;numbers&#34;:[2.3, 15.4]}, &#34;heights_cm&#34;: {&#34;numbers&#34;:[8.1, 6.4]} }`. This field needs to pass all below criteria, otherwise an INVALID_ARGUMENT error is returned: * Max entries count: 200. * The key must be a UTF-8 encoded string with a length limit of 128 characters. * For indexable attribute, the key must match the pattern: `a-zA-Z0-9*`. For example, `key0LikeThis` or `KEY_1_LIKE_THIS`. * For text attributes, at most 400 values are allowed. Empty values are not allowed. Each value must be a non-empty UTF-8 encoded string with a length limit of 256 characters. * For number attributes, at most 400 values are allowed.
         * 
         * @return builder
         * 
         */
        public Builder attributes(@Nullable Output<Map<String,String>> attributes) {
            $.attributes = attributes;
            return this;
        }

        /**
         * @param attributes Highly encouraged. Extra product attributes to be included. For example, for products, this could include the store name, vendor, style, color, etc. These are very strong signals for recommendation model, thus we highly recommend providing the attributes here. Features that can take on one of a limited number of possible values. Two types of features can be set are: Textual features. some examples would be the brand/maker of a product, or country of a customer. Numerical features. Some examples would be the height/weight of a product, or age of a customer. For example: `{ &#34;vendor&#34;: {&#34;text&#34;: [&#34;vendor123&#34;, &#34;vendor456&#34;]}, &#34;lengths_cm&#34;: {&#34;numbers&#34;:[2.3, 15.4]}, &#34;heights_cm&#34;: {&#34;numbers&#34;:[8.1, 6.4]} }`. This field needs to pass all below criteria, otherwise an INVALID_ARGUMENT error is returned: * Max entries count: 200. * The key must be a UTF-8 encoded string with a length limit of 128 characters. * For indexable attribute, the key must match the pattern: `a-zA-Z0-9*`. For example, `key0LikeThis` or `KEY_1_LIKE_THIS`. * For text attributes, at most 400 values are allowed. Empty values are not allowed. Each value must be a non-empty UTF-8 encoded string with a length limit of 256 characters. * For number attributes, at most 400 values are allowed.
         * 
         * @return builder
         * 
         */
        public Builder attributes(Map<String,String> attributes) {
            return attributes(Output.of(attributes));
        }

        /**
         * @param audience The target group associated with a given audience (e.g. male, veterans, car owners, musicians, etc.) of the product.
         * 
         * @return builder
         * 
         */
        public Builder audience(@Nullable Output<GoogleCloudRetailV2betaAudienceArgs> audience) {
            $.audience = audience;
            return this;
        }

        /**
         * @param audience The target group associated with a given audience (e.g. male, veterans, car owners, musicians, etc.) of the product.
         * 
         * @return builder
         * 
         */
        public Builder audience(GoogleCloudRetailV2betaAudienceArgs audience) {
            return audience(Output.of(audience));
        }

        /**
         * @param availability The online availability of the Product. Default to Availability.IN_STOCK. Corresponding properties: Google Merchant Center property [availability](https://support.google.com/merchants/answer/6324448). Schema.org property [Offer.availability](https://schema.org/availability).
         * 
         * @return builder
         * 
         */
        public Builder availability(@Nullable Output<ProductAvailability> availability) {
            $.availability = availability;
            return this;
        }

        /**
         * @param availability The online availability of the Product. Default to Availability.IN_STOCK. Corresponding properties: Google Merchant Center property [availability](https://support.google.com/merchants/answer/6324448). Schema.org property [Offer.availability](https://schema.org/availability).
         * 
         * @return builder
         * 
         */
        public Builder availability(ProductAvailability availability) {
            return availability(Output.of(availability));
        }

        /**
         * @param availableQuantity The available quantity of the item.
         * 
         * @return builder
         * 
         */
        public Builder availableQuantity(@Nullable Output<Integer> availableQuantity) {
            $.availableQuantity = availableQuantity;
            return this;
        }

        /**
         * @param availableQuantity The available quantity of the item.
         * 
         * @return builder
         * 
         */
        public Builder availableQuantity(Integer availableQuantity) {
            return availableQuantity(Output.of(availableQuantity));
        }

        /**
         * @param availableTime The timestamp when this Product becomes available for SearchService.Search.
         * 
         * @return builder
         * 
         */
        public Builder availableTime(@Nullable Output<String> availableTime) {
            $.availableTime = availableTime;
            return this;
        }

        /**
         * @param availableTime The timestamp when this Product becomes available for SearchService.Search.
         * 
         * @return builder
         * 
         */
        public Builder availableTime(String availableTime) {
            return availableTime(Output.of(availableTime));
        }

        public Builder branchId(Output<String> branchId) {
            $.branchId = branchId;
            return this;
        }

        public Builder branchId(String branchId) {
            return branchId(Output.of(branchId));
        }

        /**
         * @param brands The brands of the product. A maximum of 30 brands are allowed. Each brand must be a UTF-8 encoded string with a length limit of 1,000 characters. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties: Google Merchant Center property [brand](https://support.google.com/merchants/answer/6324351). Schema.org property [Product.brand](https://schema.org/brand).
         * 
         * @return builder
         * 
         */
        public Builder brands(@Nullable Output<List<String>> brands) {
            $.brands = brands;
            return this;
        }

        /**
         * @param brands The brands of the product. A maximum of 30 brands are allowed. Each brand must be a UTF-8 encoded string with a length limit of 1,000 characters. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties: Google Merchant Center property [brand](https://support.google.com/merchants/answer/6324351). Schema.org property [Product.brand](https://schema.org/brand).
         * 
         * @return builder
         * 
         */
        public Builder brands(List<String> brands) {
            return brands(Output.of(brands));
        }

        /**
         * @param brands The brands of the product. A maximum of 30 brands are allowed. Each brand must be a UTF-8 encoded string with a length limit of 1,000 characters. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties: Google Merchant Center property [brand](https://support.google.com/merchants/answer/6324351). Schema.org property [Product.brand](https://schema.org/brand).
         * 
         * @return builder
         * 
         */
        public Builder brands(String... brands) {
            return brands(List.of(brands));
        }

        public Builder catalogId(Output<String> catalogId) {
            $.catalogId = catalogId;
            return this;
        }

        public Builder catalogId(String catalogId) {
            return catalogId(Output.of(catalogId));
        }

        /**
         * @param categories Product categories. This field is repeated for supporting one product belonging to several parallel categories. Strongly recommended using the full path for better search / recommendation quality. To represent full path of category, use &#39;&gt;&#39; sign to separate different hierarchies. If &#39;&gt;&#39; is part of the category name, please replace it with other character(s). For example, if a shoes product belongs to both [&#34;Shoes &amp; Accessories&#34; -&gt; &#34;Shoes&#34;] and [&#34;Sports &amp; Fitness&#34; -&gt; &#34;Athletic Clothing&#34; -&gt; &#34;Shoes&#34;], it could be represented as: &#34;categories&#34;: [ &#34;Shoes &amp; Accessories &gt; Shoes&#34;, &#34;Sports &amp; Fitness &gt; Athletic Clothing &gt; Shoes&#34; ] Must be set for Type.PRIMARY Product otherwise an INVALID_ARGUMENT error is returned. At most 250 values are allowed per Product. Empty values are not allowed. Each value must be a UTF-8 encoded string with a length limit of 5,000 characters. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties: Google Merchant Center property google_product_category. Schema.org property [Product.category] (https://schema.org/category). [mc_google_product_category]: https://support.google.com/merchants/answer/6324436
         * 
         * @return builder
         * 
         */
        public Builder categories(@Nullable Output<List<String>> categories) {
            $.categories = categories;
            return this;
        }

        /**
         * @param categories Product categories. This field is repeated for supporting one product belonging to several parallel categories. Strongly recommended using the full path for better search / recommendation quality. To represent full path of category, use &#39;&gt;&#39; sign to separate different hierarchies. If &#39;&gt;&#39; is part of the category name, please replace it with other character(s). For example, if a shoes product belongs to both [&#34;Shoes &amp; Accessories&#34; -&gt; &#34;Shoes&#34;] and [&#34;Sports &amp; Fitness&#34; -&gt; &#34;Athletic Clothing&#34; -&gt; &#34;Shoes&#34;], it could be represented as: &#34;categories&#34;: [ &#34;Shoes &amp; Accessories &gt; Shoes&#34;, &#34;Sports &amp; Fitness &gt; Athletic Clothing &gt; Shoes&#34; ] Must be set for Type.PRIMARY Product otherwise an INVALID_ARGUMENT error is returned. At most 250 values are allowed per Product. Empty values are not allowed. Each value must be a UTF-8 encoded string with a length limit of 5,000 characters. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties: Google Merchant Center property google_product_category. Schema.org property [Product.category] (https://schema.org/category). [mc_google_product_category]: https://support.google.com/merchants/answer/6324436
         * 
         * @return builder
         * 
         */
        public Builder categories(List<String> categories) {
            return categories(Output.of(categories));
        }

        /**
         * @param categories Product categories. This field is repeated for supporting one product belonging to several parallel categories. Strongly recommended using the full path for better search / recommendation quality. To represent full path of category, use &#39;&gt;&#39; sign to separate different hierarchies. If &#39;&gt;&#39; is part of the category name, please replace it with other character(s). For example, if a shoes product belongs to both [&#34;Shoes &amp; Accessories&#34; -&gt; &#34;Shoes&#34;] and [&#34;Sports &amp; Fitness&#34; -&gt; &#34;Athletic Clothing&#34; -&gt; &#34;Shoes&#34;], it could be represented as: &#34;categories&#34;: [ &#34;Shoes &amp; Accessories &gt; Shoes&#34;, &#34;Sports &amp; Fitness &gt; Athletic Clothing &gt; Shoes&#34; ] Must be set for Type.PRIMARY Product otherwise an INVALID_ARGUMENT error is returned. At most 250 values are allowed per Product. Empty values are not allowed. Each value must be a UTF-8 encoded string with a length limit of 5,000 characters. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties: Google Merchant Center property google_product_category. Schema.org property [Product.category] (https://schema.org/category). [mc_google_product_category]: https://support.google.com/merchants/answer/6324436
         * 
         * @return builder
         * 
         */
        public Builder categories(String... categories) {
            return categories(List.of(categories));
        }

        /**
         * @param collectionMemberIds The id of the collection members when type is Type.COLLECTION. Non-existent product ids are allowed. The type of the members must be either Type.PRIMARY or Type.VARIANT otherwise and INVALID_ARGUMENT error is thrown. Should not set it for other types. A maximum of 1000 values are allowed. Otherwise, an INVALID_ARGUMENT error is return.
         * 
         * @return builder
         * 
         */
        public Builder collectionMemberIds(@Nullable Output<List<String>> collectionMemberIds) {
            $.collectionMemberIds = collectionMemberIds;
            return this;
        }

        /**
         * @param collectionMemberIds The id of the collection members when type is Type.COLLECTION. Non-existent product ids are allowed. The type of the members must be either Type.PRIMARY or Type.VARIANT otherwise and INVALID_ARGUMENT error is thrown. Should not set it for other types. A maximum of 1000 values are allowed. Otherwise, an INVALID_ARGUMENT error is return.
         * 
         * @return builder
         * 
         */
        public Builder collectionMemberIds(List<String> collectionMemberIds) {
            return collectionMemberIds(Output.of(collectionMemberIds));
        }

        /**
         * @param collectionMemberIds The id of the collection members when type is Type.COLLECTION. Non-existent product ids are allowed. The type of the members must be either Type.PRIMARY or Type.VARIANT otherwise and INVALID_ARGUMENT error is thrown. Should not set it for other types. A maximum of 1000 values are allowed. Otherwise, an INVALID_ARGUMENT error is return.
         * 
         * @return builder
         * 
         */
        public Builder collectionMemberIds(String... collectionMemberIds) {
            return collectionMemberIds(List.of(collectionMemberIds));
        }

        /**
         * @param colorInfo The color of the product. Corresponding properties: Google Merchant Center property [color](https://support.google.com/merchants/answer/6324487). Schema.org property [Product.color](https://schema.org/color).
         * 
         * @return builder
         * 
         */
        public Builder colorInfo(@Nullable Output<GoogleCloudRetailV2betaColorInfoArgs> colorInfo) {
            $.colorInfo = colorInfo;
            return this;
        }

        /**
         * @param colorInfo The color of the product. Corresponding properties: Google Merchant Center property [color](https://support.google.com/merchants/answer/6324487). Schema.org property [Product.color](https://schema.org/color).
         * 
         * @return builder
         * 
         */
        public Builder colorInfo(GoogleCloudRetailV2betaColorInfoArgs colorInfo) {
            return colorInfo(Output.of(colorInfo));
        }

        /**
         * @param conditions The condition of the product. Strongly encouraged to use the standard values: &#34;new&#34;, &#34;refurbished&#34;, &#34;used&#34;. A maximum of 1 value is allowed per Product. Each value must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties: Google Merchant Center property [condition](https://support.google.com/merchants/answer/6324469). Schema.org property [Offer.itemCondition](https://schema.org/itemCondition).
         * 
         * @return builder
         * 
         */
        public Builder conditions(@Nullable Output<List<String>> conditions) {
            $.conditions = conditions;
            return this;
        }

        /**
         * @param conditions The condition of the product. Strongly encouraged to use the standard values: &#34;new&#34;, &#34;refurbished&#34;, &#34;used&#34;. A maximum of 1 value is allowed per Product. Each value must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties: Google Merchant Center property [condition](https://support.google.com/merchants/answer/6324469). Schema.org property [Offer.itemCondition](https://schema.org/itemCondition).
         * 
         * @return builder
         * 
         */
        public Builder conditions(List<String> conditions) {
            return conditions(Output.of(conditions));
        }

        /**
         * @param conditions The condition of the product. Strongly encouraged to use the standard values: &#34;new&#34;, &#34;refurbished&#34;, &#34;used&#34;. A maximum of 1 value is allowed per Product. Each value must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties: Google Merchant Center property [condition](https://support.google.com/merchants/answer/6324469). Schema.org property [Offer.itemCondition](https://schema.org/itemCondition).
         * 
         * @return builder
         * 
         */
        public Builder conditions(String... conditions) {
            return conditions(List.of(conditions));
        }

        /**
         * @param description Product description. This field must be a UTF-8 encoded string with a length limit of 5,000 characters. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties: Google Merchant Center property [description](https://support.google.com/merchants/answer/6324468). Schema.org property [Product.description](https://schema.org/description).
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Product description. This field must be a UTF-8 encoded string with a length limit of 5,000 characters. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties: Google Merchant Center property [description](https://support.google.com/merchants/answer/6324468). Schema.org property [Product.description](https://schema.org/description).
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param expireTime The timestamp when this product becomes unavailable for SearchService.Search. If it is set, the Product is not available for SearchService.Search after expire_time. However, the product can still be retrieved by ProductService.GetProduct and ProductService.ListProducts. expire_time must be later than available_time and publish_time, otherwise an INVALID_ARGUMENT error is thrown. Corresponding properties: Google Merchant Center property [expiration_date](https://support.google.com/merchants/answer/6324499).
         * 
         * @return builder
         * 
         */
        public Builder expireTime(@Nullable Output<String> expireTime) {
            $.expireTime = expireTime;
            return this;
        }

        /**
         * @param expireTime The timestamp when this product becomes unavailable for SearchService.Search. If it is set, the Product is not available for SearchService.Search after expire_time. However, the product can still be retrieved by ProductService.GetProduct and ProductService.ListProducts. expire_time must be later than available_time and publish_time, otherwise an INVALID_ARGUMENT error is thrown. Corresponding properties: Google Merchant Center property [expiration_date](https://support.google.com/merchants/answer/6324499).
         * 
         * @return builder
         * 
         */
        public Builder expireTime(String expireTime) {
            return expireTime(Output.of(expireTime));
        }

        /**
         * @param fulfillmentInfo Fulfillment information, such as the store IDs for in-store pickup or region IDs for different shipping methods. All the elements must have distinct FulfillmentInfo.type. Otherwise, an INVALID_ARGUMENT error is returned.
         * 
         * @return builder
         * 
         */
        public Builder fulfillmentInfo(@Nullable Output<List<GoogleCloudRetailV2betaFulfillmentInfoArgs>> fulfillmentInfo) {
            $.fulfillmentInfo = fulfillmentInfo;
            return this;
        }

        /**
         * @param fulfillmentInfo Fulfillment information, such as the store IDs for in-store pickup or region IDs for different shipping methods. All the elements must have distinct FulfillmentInfo.type. Otherwise, an INVALID_ARGUMENT error is returned.
         * 
         * @return builder
         * 
         */
        public Builder fulfillmentInfo(List<GoogleCloudRetailV2betaFulfillmentInfoArgs> fulfillmentInfo) {
            return fulfillmentInfo(Output.of(fulfillmentInfo));
        }

        /**
         * @param fulfillmentInfo Fulfillment information, such as the store IDs for in-store pickup or region IDs for different shipping methods. All the elements must have distinct FulfillmentInfo.type. Otherwise, an INVALID_ARGUMENT error is returned.
         * 
         * @return builder
         * 
         */
        public Builder fulfillmentInfo(GoogleCloudRetailV2betaFulfillmentInfoArgs... fulfillmentInfo) {
            return fulfillmentInfo(List.of(fulfillmentInfo));
        }

        /**
         * @param gtin The Global Trade Item Number (GTIN) of the product. This field must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned. This field must be a Unigram. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties: Google Merchant Center property [gtin](https://support.google.com/merchants/answer/6324461). Schema.org property [Product.isbn](https://schema.org/isbn), [Product.gtin8](https://schema.org/gtin8), [Product.gtin12](https://schema.org/gtin12), [Product.gtin13](https://schema.org/gtin13), or [Product.gtin14](https://schema.org/gtin14). If the value is not a valid GTIN, an INVALID_ARGUMENT error is returned.
         * 
         * @return builder
         * 
         */
        public Builder gtin(@Nullable Output<String> gtin) {
            $.gtin = gtin;
            return this;
        }

        /**
         * @param gtin The Global Trade Item Number (GTIN) of the product. This field must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned. This field must be a Unigram. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties: Google Merchant Center property [gtin](https://support.google.com/merchants/answer/6324461). Schema.org property [Product.isbn](https://schema.org/isbn), [Product.gtin8](https://schema.org/gtin8), [Product.gtin12](https://schema.org/gtin12), [Product.gtin13](https://schema.org/gtin13), or [Product.gtin14](https://schema.org/gtin14). If the value is not a valid GTIN, an INVALID_ARGUMENT error is returned.
         * 
         * @return builder
         * 
         */
        public Builder gtin(String gtin) {
            return gtin(Output.of(gtin));
        }

        /**
         * @param id Immutable. Product identifier, which is the final component of name. For example, this field is &#34;id_1&#34;, if name is `projects/*{@literal /}locations/global/catalogs/default_catalog/branches/default_branch/products/id_1`. This field must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties: Google Merchant Center property [id](https://support.google.com/merchants/answer/6324405). Schema.org property [Product.sku](https://schema.org/sku).
         * 
         * @return builder
         * 
         */
        public Builder id(@Nullable Output<String> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id Immutable. Product identifier, which is the final component of name. For example, this field is &#34;id_1&#34;, if name is `projects/*{@literal /}locations/global/catalogs/default_catalog/branches/default_branch/products/id_1`. This field must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties: Google Merchant Center property [id](https://support.google.com/merchants/answer/6324405). Schema.org property [Product.sku](https://schema.org/sku).
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            return id(Output.of(id));
        }

        /**
         * @param images Product images for the product. We highly recommend putting the main image first. A maximum of 300 images are allowed. Corresponding properties: Google Merchant Center property [image_link](https://support.google.com/merchants/answer/6324350). Schema.org property [Product.image](https://schema.org/image).
         * 
         * @return builder
         * 
         */
        public Builder images(@Nullable Output<List<GoogleCloudRetailV2betaImageArgs>> images) {
            $.images = images;
            return this;
        }

        /**
         * @param images Product images for the product. We highly recommend putting the main image first. A maximum of 300 images are allowed. Corresponding properties: Google Merchant Center property [image_link](https://support.google.com/merchants/answer/6324350). Schema.org property [Product.image](https://schema.org/image).
         * 
         * @return builder
         * 
         */
        public Builder images(List<GoogleCloudRetailV2betaImageArgs> images) {
            return images(Output.of(images));
        }

        /**
         * @param images Product images for the product. We highly recommend putting the main image first. A maximum of 300 images are allowed. Corresponding properties: Google Merchant Center property [image_link](https://support.google.com/merchants/answer/6324350). Schema.org property [Product.image](https://schema.org/image).
         * 
         * @return builder
         * 
         */
        public Builder images(GoogleCloudRetailV2betaImageArgs... images) {
            return images(List.of(images));
        }

        /**
         * @param languageCode Language of the title/description and other string attributes. Use language tags defined by [BCP 47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt). For product prediction, this field is ignored and the model automatically detects the text language. The Product can include text in different languages, but duplicating Products to provide text in multiple languages can result in degraded model performance. For product search this field is in use. It defaults to &#34;en-US&#34; if unset.
         * 
         * @return builder
         * 
         */
        public Builder languageCode(@Nullable Output<String> languageCode) {
            $.languageCode = languageCode;
            return this;
        }

        /**
         * @param languageCode Language of the title/description and other string attributes. Use language tags defined by [BCP 47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt). For product prediction, this field is ignored and the model automatically detects the text language. The Product can include text in different languages, but duplicating Products to provide text in multiple languages can result in degraded model performance. For product search this field is in use. It defaults to &#34;en-US&#34; if unset.
         * 
         * @return builder
         * 
         */
        public Builder languageCode(String languageCode) {
            return languageCode(Output.of(languageCode));
        }

        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param materials The material of the product. For example, &#34;leather&#34;, &#34;wooden&#34;. A maximum of 20 values are allowed. Each value must be a UTF-8 encoded string with a length limit of 200 characters. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties: Google Merchant Center property [material](https://support.google.com/merchants/answer/6324410). Schema.org property [Product.material](https://schema.org/material).
         * 
         * @return builder
         * 
         */
        public Builder materials(@Nullable Output<List<String>> materials) {
            $.materials = materials;
            return this;
        }

        /**
         * @param materials The material of the product. For example, &#34;leather&#34;, &#34;wooden&#34;. A maximum of 20 values are allowed. Each value must be a UTF-8 encoded string with a length limit of 200 characters. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties: Google Merchant Center property [material](https://support.google.com/merchants/answer/6324410). Schema.org property [Product.material](https://schema.org/material).
         * 
         * @return builder
         * 
         */
        public Builder materials(List<String> materials) {
            return materials(Output.of(materials));
        }

        /**
         * @param materials The material of the product. For example, &#34;leather&#34;, &#34;wooden&#34;. A maximum of 20 values are allowed. Each value must be a UTF-8 encoded string with a length limit of 200 characters. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties: Google Merchant Center property [material](https://support.google.com/merchants/answer/6324410). Schema.org property [Product.material](https://schema.org/material).
         * 
         * @return builder
         * 
         */
        public Builder materials(String... materials) {
            return materials(List.of(materials));
        }

        /**
         * @param name Immutable. Full resource name of the product, such as `projects/*{@literal /}locations/global/catalogs/default_catalog/branches/default_branch/products/product_id`.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Immutable. Full resource name of the product, such as `projects/*{@literal /}locations/global/catalogs/default_catalog/branches/default_branch/products/product_id`.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param patterns The pattern or graphic print of the product. For example, &#34;striped&#34;, &#34;polka dot&#34;, &#34;paisley&#34;. A maximum of 20 values are allowed per Product. Each value must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties: Google Merchant Center property [pattern](https://support.google.com/merchants/answer/6324483). Schema.org property [Product.pattern](https://schema.org/pattern).
         * 
         * @return builder
         * 
         */
        public Builder patterns(@Nullable Output<List<String>> patterns) {
            $.patterns = patterns;
            return this;
        }

        /**
         * @param patterns The pattern or graphic print of the product. For example, &#34;striped&#34;, &#34;polka dot&#34;, &#34;paisley&#34;. A maximum of 20 values are allowed per Product. Each value must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties: Google Merchant Center property [pattern](https://support.google.com/merchants/answer/6324483). Schema.org property [Product.pattern](https://schema.org/pattern).
         * 
         * @return builder
         * 
         */
        public Builder patterns(List<String> patterns) {
            return patterns(Output.of(patterns));
        }

        /**
         * @param patterns The pattern or graphic print of the product. For example, &#34;striped&#34;, &#34;polka dot&#34;, &#34;paisley&#34;. A maximum of 20 values are allowed per Product. Each value must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties: Google Merchant Center property [pattern](https://support.google.com/merchants/answer/6324483). Schema.org property [Product.pattern](https://schema.org/pattern).
         * 
         * @return builder
         * 
         */
        public Builder patterns(String... patterns) {
            return patterns(List.of(patterns));
        }

        /**
         * @param priceInfo Product price and cost information. Corresponding properties: Google Merchant Center property [price](https://support.google.com/merchants/answer/6324371).
         * 
         * @return builder
         * 
         */
        public Builder priceInfo(@Nullable Output<GoogleCloudRetailV2betaPriceInfoArgs> priceInfo) {
            $.priceInfo = priceInfo;
            return this;
        }

        /**
         * @param priceInfo Product price and cost information. Corresponding properties: Google Merchant Center property [price](https://support.google.com/merchants/answer/6324371).
         * 
         * @return builder
         * 
         */
        public Builder priceInfo(GoogleCloudRetailV2betaPriceInfoArgs priceInfo) {
            return priceInfo(Output.of(priceInfo));
        }

        /**
         * @param primaryProductId Variant group identifier. Must be an id, with the same parent branch with this product. Otherwise, an error is thrown. For Type.PRIMARY Products, this field can only be empty or set to the same value as id. For VARIANT Products, this field cannot be empty. A maximum of 2,000 products are allowed to share the same Type.PRIMARY Product. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties: Google Merchant Center property [item_group_id](https://support.google.com/merchants/answer/6324507). Schema.org property [Product.inProductGroupWithID](https://schema.org/inProductGroupWithID).
         * 
         * @return builder
         * 
         */
        public Builder primaryProductId(@Nullable Output<String> primaryProductId) {
            $.primaryProductId = primaryProductId;
            return this;
        }

        /**
         * @param primaryProductId Variant group identifier. Must be an id, with the same parent branch with this product. Otherwise, an error is thrown. For Type.PRIMARY Products, this field can only be empty or set to the same value as id. For VARIANT Products, this field cannot be empty. A maximum of 2,000 products are allowed to share the same Type.PRIMARY Product. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties: Google Merchant Center property [item_group_id](https://support.google.com/merchants/answer/6324507). Schema.org property [Product.inProductGroupWithID](https://schema.org/inProductGroupWithID).
         * 
         * @return builder
         * 
         */
        public Builder primaryProductId(String primaryProductId) {
            return primaryProductId(Output.of(primaryProductId));
        }

        /**
         * @param productId Required. The ID to use for the Product, which will become the final component of the Product.name. If the caller does not have permission to create the Product, regardless of whether or not it exists, a PERMISSION_DENIED error is returned. This field must be unique among all Products with the same parent. Otherwise, an ALREADY_EXISTS error is returned. This field must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned.
         * 
         * @return builder
         * 
         */
        public Builder productId(Output<String> productId) {
            $.productId = productId;
            return this;
        }

        /**
         * @param productId Required. The ID to use for the Product, which will become the final component of the Product.name. If the caller does not have permission to create the Product, regardless of whether or not it exists, a PERMISSION_DENIED error is returned. This field must be unique among all Products with the same parent. Otherwise, an ALREADY_EXISTS error is returned. This field must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned.
         * 
         * @return builder
         * 
         */
        public Builder productId(String productId) {
            return productId(Output.of(productId));
        }

        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        public Builder project(String project) {
            return project(Output.of(project));
        }

        /**
         * @param promotions The promotions applied to the product. A maximum of 10 values are allowed per Product. Only Promotion.promotion_id will be used, other fields will be ignored if set.
         * 
         * @return builder
         * 
         */
        public Builder promotions(@Nullable Output<List<GoogleCloudRetailV2betaPromotionArgs>> promotions) {
            $.promotions = promotions;
            return this;
        }

        /**
         * @param promotions The promotions applied to the product. A maximum of 10 values are allowed per Product. Only Promotion.promotion_id will be used, other fields will be ignored if set.
         * 
         * @return builder
         * 
         */
        public Builder promotions(List<GoogleCloudRetailV2betaPromotionArgs> promotions) {
            return promotions(Output.of(promotions));
        }

        /**
         * @param promotions The promotions applied to the product. A maximum of 10 values are allowed per Product. Only Promotion.promotion_id will be used, other fields will be ignored if set.
         * 
         * @return builder
         * 
         */
        public Builder promotions(GoogleCloudRetailV2betaPromotionArgs... promotions) {
            return promotions(List.of(promotions));
        }

        /**
         * @param publishTime The timestamp when the product is published by the retailer for the first time, which indicates the freshness of the products. Note that this field is different from available_time, given it purely describes product freshness regardless of when it is available on search and recommendation.
         * 
         * @return builder
         * 
         */
        public Builder publishTime(@Nullable Output<String> publishTime) {
            $.publishTime = publishTime;
            return this;
        }

        /**
         * @param publishTime The timestamp when the product is published by the retailer for the first time, which indicates the freshness of the products. Note that this field is different from available_time, given it purely describes product freshness regardless of when it is available on search and recommendation.
         * 
         * @return builder
         * 
         */
        public Builder publishTime(String publishTime) {
            return publishTime(Output.of(publishTime));
        }

        /**
         * @param rating The rating of this product.
         * 
         * @return builder
         * 
         */
        public Builder rating(@Nullable Output<GoogleCloudRetailV2betaRatingArgs> rating) {
            $.rating = rating;
            return this;
        }

        /**
         * @param rating The rating of this product.
         * 
         * @return builder
         * 
         */
        public Builder rating(GoogleCloudRetailV2betaRatingArgs rating) {
            return rating(Output.of(rating));
        }

        /**
         * @param retrievableFields Indicates which fields in the Products are returned in SearchResponse. Supported fields for all types: * audience * availability * brands * color_info * conditions * gtin * materials * name * patterns * price_info * rating * sizes * title * uri Supported fields only for Type.PRIMARY and Type.COLLECTION: * categories * description * images Supported fields only for Type.VARIANT: * Only the first image in images To mark attributes as retrievable, include paths of the form &#34;attributes.key&#34; where &#34;key&#34; is the key of a custom attribute, as specified in attributes. For Type.PRIMARY and Type.COLLECTION, the following fields are always returned in SearchResponse by default: * name For Type.VARIANT, the following fields are always returned in by default: * name * color_info The maximum number of paths is 30. Otherwise, an INVALID_ARGUMENT error is returned. Note: Returning more fields in SearchResponse can increase response payload size and serving latency.
         * 
         * @return builder
         * 
         */
        public Builder retrievableFields(@Nullable Output<String> retrievableFields) {
            $.retrievableFields = retrievableFields;
            return this;
        }

        /**
         * @param retrievableFields Indicates which fields in the Products are returned in SearchResponse. Supported fields for all types: * audience * availability * brands * color_info * conditions * gtin * materials * name * patterns * price_info * rating * sizes * title * uri Supported fields only for Type.PRIMARY and Type.COLLECTION: * categories * description * images Supported fields only for Type.VARIANT: * Only the first image in images To mark attributes as retrievable, include paths of the form &#34;attributes.key&#34; where &#34;key&#34; is the key of a custom attribute, as specified in attributes. For Type.PRIMARY and Type.COLLECTION, the following fields are always returned in SearchResponse by default: * name For Type.VARIANT, the following fields are always returned in by default: * name * color_info The maximum number of paths is 30. Otherwise, an INVALID_ARGUMENT error is returned. Note: Returning more fields in SearchResponse can increase response payload size and serving latency.
         * 
         * @return builder
         * 
         */
        public Builder retrievableFields(String retrievableFields) {
            return retrievableFields(Output.of(retrievableFields));
        }

        /**
         * @param sizes The size of the product. To represent different size systems or size types, consider using this format: [[[size_system:]size_type:]size_value]. For example, in &#34;US:MENS:M&#34;, &#34;US&#34; represents size system; &#34;MENS&#34; represents size type; &#34;M&#34; represents size value. In &#34;GIRLS:27&#34;, size system is empty; &#34;GIRLS&#34; represents size type; &#34;27&#34; represents size value. In &#34;32 inches&#34;, both size system and size type are empty, while size value is &#34;32 inches&#34;. A maximum of 20 values are allowed per Product. Each value must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties: Google Merchant Center property [size](https://support.google.com/merchants/answer/6324492), [size_type](https://support.google.com/merchants/answer/6324497), and [size_system](https://support.google.com/merchants/answer/6324502). Schema.org property [Product.size](https://schema.org/size).
         * 
         * @return builder
         * 
         */
        public Builder sizes(@Nullable Output<List<String>> sizes) {
            $.sizes = sizes;
            return this;
        }

        /**
         * @param sizes The size of the product. To represent different size systems or size types, consider using this format: [[[size_system:]size_type:]size_value]. For example, in &#34;US:MENS:M&#34;, &#34;US&#34; represents size system; &#34;MENS&#34; represents size type; &#34;M&#34; represents size value. In &#34;GIRLS:27&#34;, size system is empty; &#34;GIRLS&#34; represents size type; &#34;27&#34; represents size value. In &#34;32 inches&#34;, both size system and size type are empty, while size value is &#34;32 inches&#34;. A maximum of 20 values are allowed per Product. Each value must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties: Google Merchant Center property [size](https://support.google.com/merchants/answer/6324492), [size_type](https://support.google.com/merchants/answer/6324497), and [size_system](https://support.google.com/merchants/answer/6324502). Schema.org property [Product.size](https://schema.org/size).
         * 
         * @return builder
         * 
         */
        public Builder sizes(List<String> sizes) {
            return sizes(Output.of(sizes));
        }

        /**
         * @param sizes The size of the product. To represent different size systems or size types, consider using this format: [[[size_system:]size_type:]size_value]. For example, in &#34;US:MENS:M&#34;, &#34;US&#34; represents size system; &#34;MENS&#34; represents size type; &#34;M&#34; represents size value. In &#34;GIRLS:27&#34;, size system is empty; &#34;GIRLS&#34; represents size type; &#34;27&#34; represents size value. In &#34;32 inches&#34;, both size system and size type are empty, while size value is &#34;32 inches&#34;. A maximum of 20 values are allowed per Product. Each value must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties: Google Merchant Center property [size](https://support.google.com/merchants/answer/6324492), [size_type](https://support.google.com/merchants/answer/6324497), and [size_system](https://support.google.com/merchants/answer/6324502). Schema.org property [Product.size](https://schema.org/size).
         * 
         * @return builder
         * 
         */
        public Builder sizes(String... sizes) {
            return sizes(List.of(sizes));
        }

        /**
         * @param tags Custom tags associated with the product. At most 250 values are allowed per Product. This value must be a UTF-8 encoded string with a length limit of 1,000 characters. Otherwise, an INVALID_ARGUMENT error is returned. This tag can be used for filtering recommendation results by passing the tag as part of the PredictRequest.filter. Corresponding properties: Google Merchant Center property [custom_label_0–4](https://support.google.com/merchants/answer/6324473).
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<List<String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags Custom tags associated with the product. At most 250 values are allowed per Product. This value must be a UTF-8 encoded string with a length limit of 1,000 characters. Otherwise, an INVALID_ARGUMENT error is returned. This tag can be used for filtering recommendation results by passing the tag as part of the PredictRequest.filter. Corresponding properties: Google Merchant Center property [custom_label_0–4](https://support.google.com/merchants/answer/6324473).
         * 
         * @return builder
         * 
         */
        public Builder tags(List<String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param tags Custom tags associated with the product. At most 250 values are allowed per Product. This value must be a UTF-8 encoded string with a length limit of 1,000 characters. Otherwise, an INVALID_ARGUMENT error is returned. This tag can be used for filtering recommendation results by passing the tag as part of the PredictRequest.filter. Corresponding properties: Google Merchant Center property [custom_label_0–4](https://support.google.com/merchants/answer/6324473).
         * 
         * @return builder
         * 
         */
        public Builder tags(String... tags) {
            return tags(List.of(tags));
        }

        /**
         * @param title Product title. This field must be a UTF-8 encoded string with a length limit of 1,000 characters. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties: Google Merchant Center property [title](https://support.google.com/merchants/answer/6324415). Schema.org property [Product.name](https://schema.org/name).
         * 
         * @return builder
         * 
         */
        public Builder title(Output<String> title) {
            $.title = title;
            return this;
        }

        /**
         * @param title Product title. This field must be a UTF-8 encoded string with a length limit of 1,000 characters. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties: Google Merchant Center property [title](https://support.google.com/merchants/answer/6324415). Schema.org property [Product.name](https://schema.org/name).
         * 
         * @return builder
         * 
         */
        public Builder title(String title) {
            return title(Output.of(title));
        }

        /**
         * @param ttl Input only. The TTL (time to live) of the product. If it is set, it must be a non-negative value, and expire_time is set as current timestamp plus ttl. The derived expire_time is returned in the output and ttl is left blank when retrieving the Product. If it is set, the product is not available for SearchService.Search after current timestamp plus ttl. However, the product can still be retrieved by ProductService.GetProduct and ProductService.ListProducts.
         * 
         * @return builder
         * 
         */
        public Builder ttl(@Nullable Output<String> ttl) {
            $.ttl = ttl;
            return this;
        }

        /**
         * @param ttl Input only. The TTL (time to live) of the product. If it is set, it must be a non-negative value, and expire_time is set as current timestamp plus ttl. The derived expire_time is returned in the output and ttl is left blank when retrieving the Product. If it is set, the product is not available for SearchService.Search after current timestamp plus ttl. However, the product can still be retrieved by ProductService.GetProduct and ProductService.ListProducts.
         * 
         * @return builder
         * 
         */
        public Builder ttl(String ttl) {
            return ttl(Output.of(ttl));
        }

        /**
         * @param type Immutable. The type of the product. Default to Catalog.product_level_config.ingestion_product_type if unset.
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable Output<ProductType> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type Immutable. The type of the product. Default to Catalog.product_level_config.ingestion_product_type if unset.
         * 
         * @return builder
         * 
         */
        public Builder type(ProductType type) {
            return type(Output.of(type));
        }

        /**
         * @param uri Canonical URL directly linking to the product detail page. It is strongly recommended to provide a valid uri for the product, otherwise the service performance could be significantly degraded. This field must be a UTF-8 encoded string with a length limit of 5,000 characters. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties: Google Merchant Center property [link](https://support.google.com/merchants/answer/6324416). Schema.org property [Offer.url](https://schema.org/url).
         * 
         * @return builder
         * 
         */
        public Builder uri(@Nullable Output<String> uri) {
            $.uri = uri;
            return this;
        }

        /**
         * @param uri Canonical URL directly linking to the product detail page. It is strongly recommended to provide a valid uri for the product, otherwise the service performance could be significantly degraded. This field must be a UTF-8 encoded string with a length limit of 5,000 characters. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties: Google Merchant Center property [link](https://support.google.com/merchants/answer/6324416). Schema.org property [Offer.url](https://schema.org/url).
         * 
         * @return builder
         * 
         */
        public Builder uri(String uri) {
            return uri(Output.of(uri));
        }

        public ProductArgs build() {
            $.branchId = Objects.requireNonNull($.branchId, "expected parameter 'branchId' to be non-null");
            $.catalogId = Objects.requireNonNull($.catalogId, "expected parameter 'catalogId' to be non-null");
            $.productId = Objects.requireNonNull($.productId, "expected parameter 'productId' to be non-null");
            $.title = Objects.requireNonNull($.title, "expected parameter 'title' to be non-null");
            return $;
        }
    }

}
