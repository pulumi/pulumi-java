// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.authorization;

import com.pulumi.core.TypeShape;
import com.pulumi.deployment.Deployment;
import com.pulumi.deployment.InvokeOptions;
import com.pulumi.googlenative.Utilities;
import com.pulumi.googlenative.authorization.outputs.GetClientConfigResult;
import com.pulumi.googlenative.authorization.outputs.GetClientTokenResult;
import com.pulumi.resources.InvokeArgs;
import java.util.concurrent.CompletableFuture;

public final class AuthorizationFunctions {
    /**
     * Use this function to access the current configuration of the native Google provider.
     * 
     */
    public static CompletableFuture<GetClientConfigResult> getClientConfig() {
        return getClientConfig(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetClientConfigResult> getClientConfig(InvokeArgs args) {
        return getClientConfig(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetClientConfigResult> getClientConfig(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("google-native:authorization:getClientConfig", TypeShape.of(GetClientConfigResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this function to get an Google authentication token for the current login context.
     * 
     */
    public static CompletableFuture<GetClientTokenResult> getClientToken() {
        return getClientToken(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetClientTokenResult> getClientToken(InvokeArgs args) {
        return getClientToken(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetClientTokenResult> getClientToken(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("google-native:authorization:getClientToken", TypeShape.of(GetClientTokenResult.class), args, Utilities.withVersion(options));
    }
}
