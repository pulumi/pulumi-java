// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.containeranalysis_v1beta1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.containeranalysis_v1beta1.inputs.KnowledgeBaseArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class WindowsDetailArgs extends com.pulumi.resources.ResourceArgs {

    public static final WindowsDetailArgs Empty = new WindowsDetailArgs();

    /**
     * The CPE URI in [cpe format](https://cpe.mitre.org/specification/) in which the vulnerability manifests. Examples include distro or storage location for vulnerable jar.
     * 
     */
    @Import(name="cpeUri", required=true)
    private Output<String> cpeUri;

    public Output<String> cpeUri() {
        return this.cpeUri;
    }

    /**
     * The description of the vulnerability.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The names of the KBs which have hotfixes to mitigate this vulnerability. Note that there may be multiple hotfixes (and thus multiple KBs) that mitigate a given vulnerability. Currently any listed kb&#39;s presence is considered a fix.
     * 
     */
    @Import(name="fixingKbs", required=true)
    private Output<List<KnowledgeBaseArgs>> fixingKbs;

    public Output<List<KnowledgeBaseArgs>> fixingKbs() {
        return this.fixingKbs;
    }

    /**
     * The name of the vulnerability.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    public Output<String> name() {
        return this.name;
    }

    private WindowsDetailArgs() {}

    private WindowsDetailArgs(WindowsDetailArgs $) {
        this.cpeUri = $.cpeUri;
        this.description = $.description;
        this.fixingKbs = $.fixingKbs;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WindowsDetailArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WindowsDetailArgs $;

        public Builder() {
            $ = new WindowsDetailArgs();
        }

        public Builder(WindowsDetailArgs defaults) {
            $ = new WindowsDetailArgs(Objects.requireNonNull(defaults));
        }

        public Builder cpeUri(Output<String> cpeUri) {
            $.cpeUri = cpeUri;
            return this;
        }

        public Builder cpeUri(String cpeUri) {
            return cpeUri(Output.of(cpeUri));
        }

        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        public Builder description(String description) {
            return description(Output.of(description));
        }

        public Builder fixingKbs(Output<List<KnowledgeBaseArgs>> fixingKbs) {
            $.fixingKbs = fixingKbs;
            return this;
        }

        public Builder fixingKbs(List<KnowledgeBaseArgs> fixingKbs) {
            return fixingKbs(Output.of(fixingKbs));
        }

        public Builder fixingKbs(KnowledgeBaseArgs... fixingKbs) {
            return fixingKbs(List.of(fixingKbs));
        }

        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public WindowsDetailArgs build() {
            $.cpeUri = Objects.requireNonNull($.cpeUri, "expected parameter 'cpeUri' to be non-null");
            $.fixingKbs = Objects.requireNonNull($.fixingKbs, "expected parameter 'fixingKbs' to be non-null");
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            return $;
        }
    }

}
