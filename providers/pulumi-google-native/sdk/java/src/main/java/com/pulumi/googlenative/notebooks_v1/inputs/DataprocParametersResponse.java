// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.notebooks_v1.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * Parameters used in Dataproc JobType executions.
 * 
 */
public final class DataprocParametersResponse extends com.pulumi.resources.InvokeArgs {

    public static final DataprocParametersResponse Empty = new DataprocParametersResponse();

    /**
     * URI for cluster used to run Dataproc execution. Format: `projects/{PROJECT_ID}/regions/{REGION}/clusters/{CLUSTER_NAME}`
     * 
     */
    @Import(name="cluster", required=true)
    private String cluster;

    /**
     * @return URI for cluster used to run Dataproc execution. Format: `projects/{PROJECT_ID}/regions/{REGION}/clusters/{CLUSTER_NAME}`
     * 
     */
    public String cluster() {
        return this.cluster;
    }

    private DataprocParametersResponse() {}

    private DataprocParametersResponse(DataprocParametersResponse $) {
        this.cluster = $.cluster;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DataprocParametersResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DataprocParametersResponse $;

        public Builder() {
            $ = new DataprocParametersResponse();
        }

        public Builder(DataprocParametersResponse defaults) {
            $ = new DataprocParametersResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param cluster URI for cluster used to run Dataproc execution. Format: `projects/{PROJECT_ID}/regions/{REGION}/clusters/{CLUSTER_NAME}`
         * 
         * @return builder
         * 
         */
        public Builder cluster(String cluster) {
            $.cluster = cluster;
            return this;
        }

        public DataprocParametersResponse build() {
            $.cluster = Objects.requireNonNull($.cluster, "expected parameter 'cluster' to be non-null");
            return $;
        }
    }

}
