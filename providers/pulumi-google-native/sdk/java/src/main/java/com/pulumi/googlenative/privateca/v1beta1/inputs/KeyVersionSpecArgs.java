// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.privateca.v1beta1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.privateca.v1beta1.enums.KeyVersionSpecAlgorithm;
import java.lang.String;
import java.util.Objects;


/**
 * A Cloud KMS key configuration that a CertificateAuthority will use.
 * 
 */
public final class KeyVersionSpecArgs extends com.pulumi.resources.ResourceArgs {

    public static final KeyVersionSpecArgs Empty = new KeyVersionSpecArgs();

    /**
     * The algorithm to use for creating a managed Cloud KMS key for a for a simplified experience. All managed keys will be have their ProtectionLevel as `HSM`.
     * 
     */
    @Import(name="algorithm", required=true)
    private Output<KeyVersionSpecAlgorithm> algorithm;

    /**
     * @return The algorithm to use for creating a managed Cloud KMS key for a for a simplified experience. All managed keys will be have their ProtectionLevel as `HSM`.
     * 
     */
    public Output<KeyVersionSpecAlgorithm> algorithm() {
        return this.algorithm;
    }

    /**
     * The resource name for an existing Cloud KMS CryptoKeyVersion in the format `projects/*{@literal /}locations/*{@literal /}keyRings/*{@literal /}cryptoKeys/*{@literal /}cryptoKeyVersions/*`. This option enables full flexibility in the key&#39;s capabilities and properties.
     * 
     */
    @Import(name="cloudKmsKeyVersion", required=true)
    private Output<String> cloudKmsKeyVersion;

    /**
     * @return The resource name for an existing Cloud KMS CryptoKeyVersion in the format `projects/*{@literal /}locations/*{@literal /}keyRings/*{@literal /}cryptoKeys/*{@literal /}cryptoKeyVersions/*`. This option enables full flexibility in the key&#39;s capabilities and properties.
     * 
     */
    public Output<String> cloudKmsKeyVersion() {
        return this.cloudKmsKeyVersion;
    }

    private KeyVersionSpecArgs() {}

    private KeyVersionSpecArgs(KeyVersionSpecArgs $) {
        this.algorithm = $.algorithm;
        this.cloudKmsKeyVersion = $.cloudKmsKeyVersion;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(KeyVersionSpecArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private KeyVersionSpecArgs $;

        public Builder() {
            $ = new KeyVersionSpecArgs();
        }

        public Builder(KeyVersionSpecArgs defaults) {
            $ = new KeyVersionSpecArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param algorithm The algorithm to use for creating a managed Cloud KMS key for a for a simplified experience. All managed keys will be have their ProtectionLevel as `HSM`.
         * 
         * @return builder
         * 
         */
        public Builder algorithm(Output<KeyVersionSpecAlgorithm> algorithm) {
            $.algorithm = algorithm;
            return this;
        }

        /**
         * @param algorithm The algorithm to use for creating a managed Cloud KMS key for a for a simplified experience. All managed keys will be have their ProtectionLevel as `HSM`.
         * 
         * @return builder
         * 
         */
        public Builder algorithm(KeyVersionSpecAlgorithm algorithm) {
            return algorithm(Output.of(algorithm));
        }

        /**
         * @param cloudKmsKeyVersion The resource name for an existing Cloud KMS CryptoKeyVersion in the format `projects/*{@literal /}locations/*{@literal /}keyRings/*{@literal /}cryptoKeys/*{@literal /}cryptoKeyVersions/*`. This option enables full flexibility in the key&#39;s capabilities and properties.
         * 
         * @return builder
         * 
         */
        public Builder cloudKmsKeyVersion(Output<String> cloudKmsKeyVersion) {
            $.cloudKmsKeyVersion = cloudKmsKeyVersion;
            return this;
        }

        /**
         * @param cloudKmsKeyVersion The resource name for an existing Cloud KMS CryptoKeyVersion in the format `projects/*{@literal /}locations/*{@literal /}keyRings/*{@literal /}cryptoKeys/*{@literal /}cryptoKeyVersions/*`. This option enables full flexibility in the key&#39;s capabilities and properties.
         * 
         * @return builder
         * 
         */
        public Builder cloudKmsKeyVersion(String cloudKmsKeyVersion) {
            return cloudKmsKeyVersion(Output.of(cloudKmsKeyVersion));
        }

        public KeyVersionSpecArgs build() {
            $.algorithm = Objects.requireNonNull($.algorithm, "expected parameter 'algorithm' to be non-null");
            $.cloudKmsKeyVersion = Objects.requireNonNull($.cloudKmsKeyVersion, "expected parameter 'cloudKmsKeyVersion' to be non-null");
            return $;
        }
    }

}
