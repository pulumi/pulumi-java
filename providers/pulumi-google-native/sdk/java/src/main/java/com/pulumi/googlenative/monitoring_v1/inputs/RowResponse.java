// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.monitoring_v1.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.monitoring_v1.inputs.WidgetResponse;
import java.lang.String;
import java.util.List;
import java.util.Objects;


/**
 * Defines the layout properties and content for a row.
 * 
 */
public final class RowResponse extends com.pulumi.resources.InvokeArgs {

    public static final RowResponse Empty = new RowResponse();

    /**
     * The relative weight of this row. The row weight is used to adjust the height of rows on the screen (relative to peers). Greater the weight, greater the height of the row on the screen. If omitted, a value of 1 is used while rendering.
     * 
     */
    @Import(name="weight", required=true)
    private String weight;

    /**
     * @return The relative weight of this row. The row weight is used to adjust the height of rows on the screen (relative to peers). Greater the weight, greater the height of the row on the screen. If omitted, a value of 1 is used while rendering.
     * 
     */
    public String weight() {
        return this.weight;
    }

    /**
     * The display widgets arranged horizontally in this row.
     * 
     */
    @Import(name="widgets", required=true)
    private List<WidgetResponse> widgets;

    /**
     * @return The display widgets arranged horizontally in this row.
     * 
     */
    public List<WidgetResponse> widgets() {
        return this.widgets;
    }

    private RowResponse() {}

    private RowResponse(RowResponse $) {
        this.weight = $.weight;
        this.widgets = $.widgets;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RowResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RowResponse $;

        public Builder() {
            $ = new RowResponse();
        }

        public Builder(RowResponse defaults) {
            $ = new RowResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param weight The relative weight of this row. The row weight is used to adjust the height of rows on the screen (relative to peers). Greater the weight, greater the height of the row on the screen. If omitted, a value of 1 is used while rendering.
         * 
         * @return builder
         * 
         */
        public Builder weight(String weight) {
            $.weight = weight;
            return this;
        }

        /**
         * @param widgets The display widgets arranged horizontally in this row.
         * 
         * @return builder
         * 
         */
        public Builder widgets(List<WidgetResponse> widgets) {
            $.widgets = widgets;
            return this;
        }

        /**
         * @param widgets The display widgets arranged horizontally in this row.
         * 
         * @return builder
         * 
         */
        public Builder widgets(WidgetResponse... widgets) {
            return widgets(List.of(widgets));
        }

        public RowResponse build() {
            $.weight = Objects.requireNonNull($.weight, "expected parameter 'weight' to be non-null");
            $.widgets = Objects.requireNonNull($.widgets, "expected parameter 'widgets' to be non-null");
            return $;
        }
    }

}
