// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.gkehub_v1.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * Status specifies state for the subcomponent.
 * 
 */
public final class StatusResponse extends com.pulumi.resources.InvokeArgs {

    public static final StatusResponse Empty = new StatusResponse();

    /**
     * Code specifies AppDevExperienceFeature&#39;s subcomponent ready state.
     * 
     */
    @Import(name="code", required=true)
    private String code;

    /**
     * @return Code specifies AppDevExperienceFeature&#39;s subcomponent ready state.
     * 
     */
    public String code() {
        return this.code;
    }

    /**
     * Description is populated if Code is Failed, explaining why it has failed.
     * 
     */
    @Import(name="description", required=true)
    private String description;

    /**
     * @return Description is populated if Code is Failed, explaining why it has failed.
     * 
     */
    public String description() {
        return this.description;
    }

    private StatusResponse() {}

    private StatusResponse(StatusResponse $) {
        this.code = $.code;
        this.description = $.description;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(StatusResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private StatusResponse $;

        public Builder() {
            $ = new StatusResponse();
        }

        public Builder(StatusResponse defaults) {
            $ = new StatusResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param code Code specifies AppDevExperienceFeature&#39;s subcomponent ready state.
         * 
         * @return builder
         * 
         */
        public Builder code(String code) {
            $.code = code;
            return this;
        }

        /**
         * @param description Description is populated if Code is Failed, explaining why it has failed.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            $.description = description;
            return this;
        }

        public StatusResponse build() {
            $.code = Objects.requireNonNull($.code, "expected parameter 'code' to be non-null");
            $.description = Objects.requireNonNull($.description, "expected parameter 'description' to be non-null");
            return $;
        }
    }

}
