// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.storage_v1.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;


/**
 * The bucket&#39;s uniform bucket-level access configuration. The feature was formerly known as Bucket Policy Only. For backward compatibility, this field will be populated with identical information as the uniformBucketLevelAccess field. We recommend using the uniformBucketLevelAccess field to enable and disable the feature.
 * 
 */
public final class BucketIamConfigurationBucketPolicyOnlyResponse extends com.pulumi.resources.InvokeArgs {

    public static final BucketIamConfigurationBucketPolicyOnlyResponse Empty = new BucketIamConfigurationBucketPolicyOnlyResponse();

    /**
     * If set, access is controlled only by bucket-level or above IAM policies.
     * 
     */
    @Import(name="enabled", required=true)
    private Boolean enabled;

    /**
     * @return If set, access is controlled only by bucket-level or above IAM policies.
     * 
     */
    public Boolean enabled() {
        return this.enabled;
    }

    /**
     * The deadline for changing iamConfiguration.bucketPolicyOnly.enabled from true to false in RFC 3339 format. iamConfiguration.bucketPolicyOnly.enabled may be changed from true to false until the locked time, after which the field is immutable.
     * 
     */
    @Import(name="lockedTime", required=true)
    private String lockedTime;

    /**
     * @return The deadline for changing iamConfiguration.bucketPolicyOnly.enabled from true to false in RFC 3339 format. iamConfiguration.bucketPolicyOnly.enabled may be changed from true to false until the locked time, after which the field is immutable.
     * 
     */
    public String lockedTime() {
        return this.lockedTime;
    }

    private BucketIamConfigurationBucketPolicyOnlyResponse() {}

    private BucketIamConfigurationBucketPolicyOnlyResponse(BucketIamConfigurationBucketPolicyOnlyResponse $) {
        this.enabled = $.enabled;
        this.lockedTime = $.lockedTime;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BucketIamConfigurationBucketPolicyOnlyResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BucketIamConfigurationBucketPolicyOnlyResponse $;

        public Builder() {
            $ = new BucketIamConfigurationBucketPolicyOnlyResponse();
        }

        public Builder(BucketIamConfigurationBucketPolicyOnlyResponse defaults) {
            $ = new BucketIamConfigurationBucketPolicyOnlyResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param enabled If set, access is controlled only by bucket-level or above IAM policies.
         * 
         * @return builder
         * 
         */
        public Builder enabled(Boolean enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param lockedTime The deadline for changing iamConfiguration.bucketPolicyOnly.enabled from true to false in RFC 3339 format. iamConfiguration.bucketPolicyOnly.enabled may be changed from true to false until the locked time, after which the field is immutable.
         * 
         * @return builder
         * 
         */
        public Builder lockedTime(String lockedTime) {
            $.lockedTime = lockedTime;
            return this;
        }

        public BucketIamConfigurationBucketPolicyOnlyResponse build() {
            $.enabled = Objects.requireNonNull($.enabled, "expected parameter 'enabled' to be non-null");
            $.lockedTime = Objects.requireNonNull($.lockedTime, "expected parameter 'lockedTime' to be non-null");
            return $;
        }
    }

}
