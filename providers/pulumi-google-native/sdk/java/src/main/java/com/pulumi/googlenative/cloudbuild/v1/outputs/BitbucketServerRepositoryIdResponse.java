// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.cloudbuild.v1.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class BitbucketServerRepositoryIdResponse {
    /**
     * @return Identifier for the project storing the repository.
     * 
     */
    private final String projectKey;
    /**
     * @return Identifier for the repository.
     * 
     */
    private final String repoSlug;
    /**
     * @return The ID of the webhook that was created for receiving events from this repo. We only create and manage a single webhook for each repo.
     * 
     */
    private final Integer webhookId;

    @CustomType.Constructor
    private BitbucketServerRepositoryIdResponse(
        @CustomType.Parameter("projectKey") String projectKey,
        @CustomType.Parameter("repoSlug") String repoSlug,
        @CustomType.Parameter("webhookId") Integer webhookId) {
        this.projectKey = projectKey;
        this.repoSlug = repoSlug;
        this.webhookId = webhookId;
    }

    /**
     * @return Identifier for the project storing the repository.
     * 
     */
    public String projectKey() {
        return this.projectKey;
    }
    /**
     * @return Identifier for the repository.
     * 
     */
    public String repoSlug() {
        return this.repoSlug;
    }
    /**
     * @return The ID of the webhook that was created for receiving events from this repo. We only create and manage a single webhook for each repo.
     * 
     */
    public Integer webhookId() {
        return this.webhookId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BitbucketServerRepositoryIdResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String projectKey;
        private String repoSlug;
        private Integer webhookId;

        public Builder() {
    	      // Empty
        }

        public Builder(BitbucketServerRepositoryIdResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.projectKey = defaults.projectKey;
    	      this.repoSlug = defaults.repoSlug;
    	      this.webhookId = defaults.webhookId;
        }

        public Builder projectKey(String projectKey) {
            this.projectKey = Objects.requireNonNull(projectKey);
            return this;
        }
        public Builder repoSlug(String repoSlug) {
            this.repoSlug = Objects.requireNonNull(repoSlug);
            return this;
        }
        public Builder webhookId(Integer webhookId) {
            this.webhookId = Objects.requireNonNull(webhookId);
            return this;
        }        public BitbucketServerRepositoryIdResponse build() {
            return new BitbucketServerRepositoryIdResponse(projectKey, repoSlug, webhookId);
        }
    }
}
