// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.osconfig_v1.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.osconfig_v1.inputs.WeekDayOfMonthResponse;
import java.lang.Integer;
import java.util.Objects;


/**
 * Represents a monthly schedule. An example of a valid monthly schedule is &#34;on the third Tuesday of the month&#34; or &#34;on the 15th of the month&#34;.
 * 
 */
public final class MonthlyScheduleResponse extends com.pulumi.resources.InvokeArgs {

    public static final MonthlyScheduleResponse Empty = new MonthlyScheduleResponse();

    /**
     * One day of the month. 1-31 indicates the 1st to the 31st day. -1 indicates the last day of the month. Months without the target day will be skipped. For example, a schedule to run &#34;every month on the 31st&#34; will not run in February, April, June, etc.
     * 
     */
    @Import(name="monthDay", required=true)
    private Integer monthDay;

    public Integer monthDay() {
        return this.monthDay;
    }

    /**
     * Week day in a month.
     * 
     */
    @Import(name="weekDayOfMonth", required=true)
    private WeekDayOfMonthResponse weekDayOfMonth;

    public WeekDayOfMonthResponse weekDayOfMonth() {
        return this.weekDayOfMonth;
    }

    private MonthlyScheduleResponse() {}

    private MonthlyScheduleResponse(MonthlyScheduleResponse $) {
        this.monthDay = $.monthDay;
        this.weekDayOfMonth = $.weekDayOfMonth;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MonthlyScheduleResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MonthlyScheduleResponse $;

        public Builder() {
            $ = new MonthlyScheduleResponse();
        }

        public Builder(MonthlyScheduleResponse defaults) {
            $ = new MonthlyScheduleResponse(Objects.requireNonNull(defaults));
        }

        public Builder monthDay(Integer monthDay) {
            $.monthDay = monthDay;
            return this;
        }

        public Builder weekDayOfMonth(WeekDayOfMonthResponse weekDayOfMonth) {
            $.weekDayOfMonth = weekDayOfMonth;
            return this;
        }

        public MonthlyScheduleResponse build() {
            $.monthDay = Objects.requireNonNull($.monthDay, "expected parameter 'monthDay' to be non-null");
            $.weekDayOfMonth = Objects.requireNonNull($.weekDayOfMonth, "expected parameter 'weekDayOfMonth' to be non-null");
            return $;
        }
    }

}
