// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.toolresults_v1beta3.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * A test of an iOS application that uses the XCTest framework.
 * 
 */
public final class IosXcTestArgs extends com.pulumi.resources.ResourceArgs {

    public static final IosXcTestArgs Empty = new IosXcTestArgs();

    /**
     * Bundle ID of the app.
     * 
     */
    @Import(name="bundleId")
    private @Nullable Output<String> bundleId;

    public Optional<Output<String>> bundleId() {
        return Optional.ofNullable(this.bundleId);
    }

    /**
     * Xcode version that the test was run with.
     * 
     */
    @Import(name="xcodeVersion")
    private @Nullable Output<String> xcodeVersion;

    public Optional<Output<String>> xcodeVersion() {
        return Optional.ofNullable(this.xcodeVersion);
    }

    private IosXcTestArgs() {}

    private IosXcTestArgs(IosXcTestArgs $) {
        this.bundleId = $.bundleId;
        this.xcodeVersion = $.xcodeVersion;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(IosXcTestArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private IosXcTestArgs $;

        public Builder() {
            $ = new IosXcTestArgs();
        }

        public Builder(IosXcTestArgs defaults) {
            $ = new IosXcTestArgs(Objects.requireNonNull(defaults));
        }

        public Builder bundleId(@Nullable Output<String> bundleId) {
            $.bundleId = bundleId;
            return this;
        }

        public Builder bundleId(String bundleId) {
            return bundleId(Output.of(bundleId));
        }

        public Builder xcodeVersion(@Nullable Output<String> xcodeVersion) {
            $.xcodeVersion = xcodeVersion;
            return this;
        }

        public Builder xcodeVersion(String xcodeVersion) {
            return xcodeVersion(Output.of(xcodeVersion));
        }

        public IosXcTestArgs build() {
            return $;
        }
    }

}
