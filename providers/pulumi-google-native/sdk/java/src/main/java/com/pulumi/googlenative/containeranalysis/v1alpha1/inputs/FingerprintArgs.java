// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.containeranalysis.v1alpha1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * A set of properties that uniquely identify a given Docker image.
 * 
 */
public final class FingerprintArgs extends com.pulumi.resources.ResourceArgs {

    public static final FingerprintArgs Empty = new FingerprintArgs();

    /**
     * The layer-id of the final layer in the Docker image&#39;s v1 representation. This field can be used as a filter in list requests.
     * 
     */
    @Import(name="v1Name")
    private @Nullable Output<String> v1Name;

    /**
     * @return The layer-id of the final layer in the Docker image&#39;s v1 representation. This field can be used as a filter in list requests.
     * 
     */
    public Optional<Output<String>> v1Name() {
        return Optional.ofNullable(this.v1Name);
    }

    /**
     * The ordered list of v2 blobs that represent a given image.
     * 
     */
    @Import(name="v2Blob")
    private @Nullable Output<List<String>> v2Blob;

    /**
     * @return The ordered list of v2 blobs that represent a given image.
     * 
     */
    public Optional<Output<List<String>>> v2Blob() {
        return Optional.ofNullable(this.v2Blob);
    }

    private FingerprintArgs() {}

    private FingerprintArgs(FingerprintArgs $) {
        this.v1Name = $.v1Name;
        this.v2Blob = $.v2Blob;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FingerprintArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FingerprintArgs $;

        public Builder() {
            $ = new FingerprintArgs();
        }

        public Builder(FingerprintArgs defaults) {
            $ = new FingerprintArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param v1Name The layer-id of the final layer in the Docker image&#39;s v1 representation. This field can be used as a filter in list requests.
         * 
         * @return builder
         * 
         */
        public Builder v1Name(@Nullable Output<String> v1Name) {
            $.v1Name = v1Name;
            return this;
        }

        /**
         * @param v1Name The layer-id of the final layer in the Docker image&#39;s v1 representation. This field can be used as a filter in list requests.
         * 
         * @return builder
         * 
         */
        public Builder v1Name(String v1Name) {
            return v1Name(Output.of(v1Name));
        }

        /**
         * @param v2Blob The ordered list of v2 blobs that represent a given image.
         * 
         * @return builder
         * 
         */
        public Builder v2Blob(@Nullable Output<List<String>> v2Blob) {
            $.v2Blob = v2Blob;
            return this;
        }

        /**
         * @param v2Blob The ordered list of v2 blobs that represent a given image.
         * 
         * @return builder
         * 
         */
        public Builder v2Blob(List<String> v2Blob) {
            return v2Blob(Output.of(v2Blob));
        }

        /**
         * @param v2Blob The ordered list of v2 blobs that represent a given image.
         * 
         * @return builder
         * 
         */
        public Builder v2Blob(String... v2Blob) {
            return v2Blob(List.of(v2Blob));
        }

        public FingerprintArgs build() {
            return $;
        }
    }

}
