// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.ml_v1.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.util.Objects;


/**
 * Represents a network port in a single container. This message is a subset of the [Kubernetes ContainerPort v1 core specification](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#containerport-v1-core).
 * 
 */
public final class GoogleCloudMlV1__ContainerPortResponse extends com.pulumi.resources.InvokeArgs {

    public static final GoogleCloudMlV1__ContainerPortResponse Empty = new GoogleCloudMlV1__ContainerPortResponse();

    /**
     * Number of the port to expose on the container. This must be a valid port number: 0 &lt; PORT_NUMBER &lt; 65536.
     * 
     */
    @Import(name="containerPort", required=true)
    private Integer containerPort;

    public Integer containerPort() {
        return this.containerPort;
    }

    private GoogleCloudMlV1__ContainerPortResponse() {}

    private GoogleCloudMlV1__ContainerPortResponse(GoogleCloudMlV1__ContainerPortResponse $) {
        this.containerPort = $.containerPort;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GoogleCloudMlV1__ContainerPortResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GoogleCloudMlV1__ContainerPortResponse $;

        public Builder() {
            $ = new GoogleCloudMlV1__ContainerPortResponse();
        }

        public Builder(GoogleCloudMlV1__ContainerPortResponse defaults) {
            $ = new GoogleCloudMlV1__ContainerPortResponse(Objects.requireNonNull(defaults));
        }

        public Builder containerPort(Integer containerPort) {
            $.containerPort = containerPort;
            return this;
        }

        public GoogleCloudMlV1__ContainerPortResponse build() {
            $.containerPort = Objects.requireNonNull($.containerPort, "expected parameter 'containerPort' to be non-null");
            return $;
        }
    }

}
