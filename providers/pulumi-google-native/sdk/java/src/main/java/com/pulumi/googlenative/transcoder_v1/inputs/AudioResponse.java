// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.transcoder_v1.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Double;
import java.util.Objects;


/**
 * Audio preprocessing configuration.
 * 
 */
public final class AudioResponse extends com.pulumi.resources.InvokeArgs {

    public static final AudioResponse Empty = new AudioResponse();

    /**
     * Enable boosting high frequency components. The default is `false`.
     * 
     */
    @Import(name="highBoost", required=true)
    private Boolean highBoost;

    /**
     * @return Enable boosting high frequency components. The default is `false`.
     * 
     */
    public Boolean highBoost() {
        return this.highBoost;
    }

    /**
     * Enable boosting low frequency components. The default is `false`.
     * 
     */
    @Import(name="lowBoost", required=true)
    private Boolean lowBoost;

    /**
     * @return Enable boosting low frequency components. The default is `false`.
     * 
     */
    public Boolean lowBoost() {
        return this.lowBoost;
    }

    /**
     * Specify audio loudness normalization in loudness units relative to full scale (LUFS). Enter a value between -24 and 0 (the default), where: * -24 is the Advanced Television Systems Committee (ATSC A/85) standard * -23 is the EU R128 broadcast standard * -19 is the prior standard for online mono audio * -18 is the ReplayGain standard * -16 is the prior standard for stereo audio * -14 is the new online audio standard recommended by Spotify, as well as Amazon Echo * 0 disables normalization
     * 
     */
    @Import(name="lufs", required=true)
    private Double lufs;

    /**
     * @return Specify audio loudness normalization in loudness units relative to full scale (LUFS). Enter a value between -24 and 0 (the default), where: * -24 is the Advanced Television Systems Committee (ATSC A/85) standard * -23 is the EU R128 broadcast standard * -19 is the prior standard for online mono audio * -18 is the ReplayGain standard * -16 is the prior standard for stereo audio * -14 is the new online audio standard recommended by Spotify, as well as Amazon Echo * 0 disables normalization
     * 
     */
    public Double lufs() {
        return this.lufs;
    }

    private AudioResponse() {}

    private AudioResponse(AudioResponse $) {
        this.highBoost = $.highBoost;
        this.lowBoost = $.lowBoost;
        this.lufs = $.lufs;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AudioResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AudioResponse $;

        public Builder() {
            $ = new AudioResponse();
        }

        public Builder(AudioResponse defaults) {
            $ = new AudioResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param highBoost Enable boosting high frequency components. The default is `false`.
         * 
         * @return builder
         * 
         */
        public Builder highBoost(Boolean highBoost) {
            $.highBoost = highBoost;
            return this;
        }

        /**
         * @param lowBoost Enable boosting low frequency components. The default is `false`.
         * 
         * @return builder
         * 
         */
        public Builder lowBoost(Boolean lowBoost) {
            $.lowBoost = lowBoost;
            return this;
        }

        /**
         * @param lufs Specify audio loudness normalization in loudness units relative to full scale (LUFS). Enter a value between -24 and 0 (the default), where: * -24 is the Advanced Television Systems Committee (ATSC A/85) standard * -23 is the EU R128 broadcast standard * -19 is the prior standard for online mono audio * -18 is the ReplayGain standard * -16 is the prior standard for stereo audio * -14 is the new online audio standard recommended by Spotify, as well as Amazon Echo * 0 disables normalization
         * 
         * @return builder
         * 
         */
        public Builder lufs(Double lufs) {
            $.lufs = lufs;
            return this;
        }

        public AudioResponse build() {
            $.highBoost = Objects.requireNonNull($.highBoost, "expected parameter 'highBoost' to be non-null");
            $.lowBoost = Objects.requireNonNull($.lowBoost, "expected parameter 'lowBoost' to be non-null");
            $.lufs = Objects.requireNonNull($.lufs, "expected parameter 'lufs' to be non-null");
            return $;
        }
    }

}
