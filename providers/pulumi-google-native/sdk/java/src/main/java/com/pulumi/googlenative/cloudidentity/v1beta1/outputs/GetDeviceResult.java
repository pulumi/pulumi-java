// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.cloudidentity.v1beta1.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.googlenative.cloudidentity.v1beta1.outputs.AndroidAttributesResponse;
import com.pulumi.googlenative.cloudidentity.v1beta1.outputs.EndpointVerificationSpecificAttributesResponse;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetDeviceResult {
    /**
     * @return Attributes specific to Android devices.
     * 
     */
    private final AndroidAttributesResponse androidSpecificAttributes;
    /**
     * @return Asset tag of the device.
     * 
     */
    private final String assetTag;
    /**
     * @return Baseband version of the device.
     * 
     */
    private final String basebandVersion;
    /**
     * @return Device bootloader version. Example: 0.6.7.
     * 
     */
    private final String bootloaderVersion;
    /**
     * @return Device brand. Example: Samsung.
     * 
     */
    private final String brand;
    /**
     * @return Build number of the device.
     * 
     */
    private final String buildNumber;
    /**
     * @return Represents whether the Device is compromised.
     * 
     */
    private final String compromisedState;
    /**
     * @return When the Company-Owned device was imported. This field is empty for BYOD devices.
     * 
     */
    private final String createTime;
    /**
     * @return Unique identifier for the device.
     * 
     */
    private final String deviceId;
    /**
     * @return Type of device.
     * 
     */
    private final String deviceType;
    /**
     * @return Whether developer options is enabled on device.
     * 
     */
    private final Boolean enabledDeveloperOptions;
    /**
     * @return Whether USB debugging is enabled on device.
     * 
     */
    private final Boolean enabledUsbDebugging;
    /**
     * @return Device encryption state.
     * 
     */
    private final String encryptionState;
    /**
     * @return Attributes specific to Endpoint Verification devices.
     * 
     */
    private final EndpointVerificationSpecificAttributesResponse endpointVerificationSpecificAttributes;
    /**
     * @return IMEI number of device if GSM device; empty otherwise.
     * 
     */
    private final String imei;
    /**
     * @return Kernel version of the device.
     * 
     */
    private final String kernelVersion;
    /**
     * @return Most recent time when device synced with this service.
     * 
     */
    private final String lastSyncTime;
    /**
     * @return Management state of the device
     * 
     */
    private final String managementState;
    /**
     * @return Device manufacturer. Example: Motorola.
     * 
     */
    private final String manufacturer;
    /**
     * @return MEID number of device if CDMA device; empty otherwise.
     * 
     */
    private final String meid;
    /**
     * @return Model name of device. Example: Pixel 3.
     * 
     */
    private final String model;
    /**
     * @return [Resource name](https://cloud.google.com/apis/design/resource_names) of the Device in format: `devices/{device_id}`, where device_id is the unique id assigned to the Device.
     * 
     */
    private final String name;
    /**
     * @return Mobile or network operator of device, if available.
     * 
     */
    private final String networkOperator;
    /**
     * @return OS version of the device. Example: Android 8.1.0.
     * 
     */
    private final String osVersion;
    /**
     * @return Domain name for Google accounts on device. Type for other accounts on device. On Android, will only be populated if |ownership_privilege| is |PROFILE_OWNER| or |DEVICE_OWNER|. Does not include the account signed in to the device policy app if that account&#39;s domain has only one account. Examples: &#34;com.example&#34;, &#34;xyz.com&#34;.
     * 
     */
    private final List<String> otherAccounts;
    /**
     * @return Whether the device is owned by the company or an individual
     * 
     */
    private final String ownerType;
    /**
     * @return OS release version. Example: 6.0.
     * 
     */
    private final String releaseVersion;
    /**
     * @return OS security patch update time on device.
     * 
     */
    private final String securityPatchTime;
    /**
     * @return Serial Number of device. Example: HT82V1A01076.
     * 
     */
    private final String serialNumber;
    /**
     * @return WiFi MAC addresses of device.
     * 
     */
    private final List<String> wifiMacAddresses;

    @CustomType.Constructor
    private GetDeviceResult(
        @CustomType.Parameter("androidSpecificAttributes") AndroidAttributesResponse androidSpecificAttributes,
        @CustomType.Parameter("assetTag") String assetTag,
        @CustomType.Parameter("basebandVersion") String basebandVersion,
        @CustomType.Parameter("bootloaderVersion") String bootloaderVersion,
        @CustomType.Parameter("brand") String brand,
        @CustomType.Parameter("buildNumber") String buildNumber,
        @CustomType.Parameter("compromisedState") String compromisedState,
        @CustomType.Parameter("createTime") String createTime,
        @CustomType.Parameter("deviceId") String deviceId,
        @CustomType.Parameter("deviceType") String deviceType,
        @CustomType.Parameter("enabledDeveloperOptions") Boolean enabledDeveloperOptions,
        @CustomType.Parameter("enabledUsbDebugging") Boolean enabledUsbDebugging,
        @CustomType.Parameter("encryptionState") String encryptionState,
        @CustomType.Parameter("endpointVerificationSpecificAttributes") EndpointVerificationSpecificAttributesResponse endpointVerificationSpecificAttributes,
        @CustomType.Parameter("imei") String imei,
        @CustomType.Parameter("kernelVersion") String kernelVersion,
        @CustomType.Parameter("lastSyncTime") String lastSyncTime,
        @CustomType.Parameter("managementState") String managementState,
        @CustomType.Parameter("manufacturer") String manufacturer,
        @CustomType.Parameter("meid") String meid,
        @CustomType.Parameter("model") String model,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("networkOperator") String networkOperator,
        @CustomType.Parameter("osVersion") String osVersion,
        @CustomType.Parameter("otherAccounts") List<String> otherAccounts,
        @CustomType.Parameter("ownerType") String ownerType,
        @CustomType.Parameter("releaseVersion") String releaseVersion,
        @CustomType.Parameter("securityPatchTime") String securityPatchTime,
        @CustomType.Parameter("serialNumber") String serialNumber,
        @CustomType.Parameter("wifiMacAddresses") List<String> wifiMacAddresses) {
        this.androidSpecificAttributes = androidSpecificAttributes;
        this.assetTag = assetTag;
        this.basebandVersion = basebandVersion;
        this.bootloaderVersion = bootloaderVersion;
        this.brand = brand;
        this.buildNumber = buildNumber;
        this.compromisedState = compromisedState;
        this.createTime = createTime;
        this.deviceId = deviceId;
        this.deviceType = deviceType;
        this.enabledDeveloperOptions = enabledDeveloperOptions;
        this.enabledUsbDebugging = enabledUsbDebugging;
        this.encryptionState = encryptionState;
        this.endpointVerificationSpecificAttributes = endpointVerificationSpecificAttributes;
        this.imei = imei;
        this.kernelVersion = kernelVersion;
        this.lastSyncTime = lastSyncTime;
        this.managementState = managementState;
        this.manufacturer = manufacturer;
        this.meid = meid;
        this.model = model;
        this.name = name;
        this.networkOperator = networkOperator;
        this.osVersion = osVersion;
        this.otherAccounts = otherAccounts;
        this.ownerType = ownerType;
        this.releaseVersion = releaseVersion;
        this.securityPatchTime = securityPatchTime;
        this.serialNumber = serialNumber;
        this.wifiMacAddresses = wifiMacAddresses;
    }

    /**
     * @return Attributes specific to Android devices.
     * 
     */
    public AndroidAttributesResponse androidSpecificAttributes() {
        return this.androidSpecificAttributes;
    }
    /**
     * @return Asset tag of the device.
     * 
     */
    public String assetTag() {
        return this.assetTag;
    }
    /**
     * @return Baseband version of the device.
     * 
     */
    public String basebandVersion() {
        return this.basebandVersion;
    }
    /**
     * @return Device bootloader version. Example: 0.6.7.
     * 
     */
    public String bootloaderVersion() {
        return this.bootloaderVersion;
    }
    /**
     * @return Device brand. Example: Samsung.
     * 
     */
    public String brand() {
        return this.brand;
    }
    /**
     * @return Build number of the device.
     * 
     */
    public String buildNumber() {
        return this.buildNumber;
    }
    /**
     * @return Represents whether the Device is compromised.
     * 
     */
    public String compromisedState() {
        return this.compromisedState;
    }
    /**
     * @return When the Company-Owned device was imported. This field is empty for BYOD devices.
     * 
     */
    public String createTime() {
        return this.createTime;
    }
    /**
     * @return Unique identifier for the device.
     * 
     */
    public String deviceId() {
        return this.deviceId;
    }
    /**
     * @return Type of device.
     * 
     */
    public String deviceType() {
        return this.deviceType;
    }
    /**
     * @return Whether developer options is enabled on device.
     * 
     */
    public Boolean enabledDeveloperOptions() {
        return this.enabledDeveloperOptions;
    }
    /**
     * @return Whether USB debugging is enabled on device.
     * 
     */
    public Boolean enabledUsbDebugging() {
        return this.enabledUsbDebugging;
    }
    /**
     * @return Device encryption state.
     * 
     */
    public String encryptionState() {
        return this.encryptionState;
    }
    /**
     * @return Attributes specific to Endpoint Verification devices.
     * 
     */
    public EndpointVerificationSpecificAttributesResponse endpointVerificationSpecificAttributes() {
        return this.endpointVerificationSpecificAttributes;
    }
    /**
     * @return IMEI number of device if GSM device; empty otherwise.
     * 
     */
    public String imei() {
        return this.imei;
    }
    /**
     * @return Kernel version of the device.
     * 
     */
    public String kernelVersion() {
        return this.kernelVersion;
    }
    /**
     * @return Most recent time when device synced with this service.
     * 
     */
    public String lastSyncTime() {
        return this.lastSyncTime;
    }
    /**
     * @return Management state of the device
     * 
     */
    public String managementState() {
        return this.managementState;
    }
    /**
     * @return Device manufacturer. Example: Motorola.
     * 
     */
    public String manufacturer() {
        return this.manufacturer;
    }
    /**
     * @return MEID number of device if CDMA device; empty otherwise.
     * 
     */
    public String meid() {
        return this.meid;
    }
    /**
     * @return Model name of device. Example: Pixel 3.
     * 
     */
    public String model() {
        return this.model;
    }
    /**
     * @return [Resource name](https://cloud.google.com/apis/design/resource_names) of the Device in format: `devices/{device_id}`, where device_id is the unique id assigned to the Device.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Mobile or network operator of device, if available.
     * 
     */
    public String networkOperator() {
        return this.networkOperator;
    }
    /**
     * @return OS version of the device. Example: Android 8.1.0.
     * 
     */
    public String osVersion() {
        return this.osVersion;
    }
    /**
     * @return Domain name for Google accounts on device. Type for other accounts on device. On Android, will only be populated if |ownership_privilege| is |PROFILE_OWNER| or |DEVICE_OWNER|. Does not include the account signed in to the device policy app if that account&#39;s domain has only one account. Examples: &#34;com.example&#34;, &#34;xyz.com&#34;.
     * 
     */
    public List<String> otherAccounts() {
        return this.otherAccounts;
    }
    /**
     * @return Whether the device is owned by the company or an individual
     * 
     */
    public String ownerType() {
        return this.ownerType;
    }
    /**
     * @return OS release version. Example: 6.0.
     * 
     */
    public String releaseVersion() {
        return this.releaseVersion;
    }
    /**
     * @return OS security patch update time on device.
     * 
     */
    public String securityPatchTime() {
        return this.securityPatchTime;
    }
    /**
     * @return Serial Number of device. Example: HT82V1A01076.
     * 
     */
    public String serialNumber() {
        return this.serialNumber;
    }
    /**
     * @return WiFi MAC addresses of device.
     * 
     */
    public List<String> wifiMacAddresses() {
        return this.wifiMacAddresses;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDeviceResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AndroidAttributesResponse androidSpecificAttributes;
        private String assetTag;
        private String basebandVersion;
        private String bootloaderVersion;
        private String brand;
        private String buildNumber;
        private String compromisedState;
        private String createTime;
        private String deviceId;
        private String deviceType;
        private Boolean enabledDeveloperOptions;
        private Boolean enabledUsbDebugging;
        private String encryptionState;
        private EndpointVerificationSpecificAttributesResponse endpointVerificationSpecificAttributes;
        private String imei;
        private String kernelVersion;
        private String lastSyncTime;
        private String managementState;
        private String manufacturer;
        private String meid;
        private String model;
        private String name;
        private String networkOperator;
        private String osVersion;
        private List<String> otherAccounts;
        private String ownerType;
        private String releaseVersion;
        private String securityPatchTime;
        private String serialNumber;
        private List<String> wifiMacAddresses;

        public Builder() {
    	      // Empty
        }

        public Builder(GetDeviceResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.androidSpecificAttributes = defaults.androidSpecificAttributes;
    	      this.assetTag = defaults.assetTag;
    	      this.basebandVersion = defaults.basebandVersion;
    	      this.bootloaderVersion = defaults.bootloaderVersion;
    	      this.brand = defaults.brand;
    	      this.buildNumber = defaults.buildNumber;
    	      this.compromisedState = defaults.compromisedState;
    	      this.createTime = defaults.createTime;
    	      this.deviceId = defaults.deviceId;
    	      this.deviceType = defaults.deviceType;
    	      this.enabledDeveloperOptions = defaults.enabledDeveloperOptions;
    	      this.enabledUsbDebugging = defaults.enabledUsbDebugging;
    	      this.encryptionState = defaults.encryptionState;
    	      this.endpointVerificationSpecificAttributes = defaults.endpointVerificationSpecificAttributes;
    	      this.imei = defaults.imei;
    	      this.kernelVersion = defaults.kernelVersion;
    	      this.lastSyncTime = defaults.lastSyncTime;
    	      this.managementState = defaults.managementState;
    	      this.manufacturer = defaults.manufacturer;
    	      this.meid = defaults.meid;
    	      this.model = defaults.model;
    	      this.name = defaults.name;
    	      this.networkOperator = defaults.networkOperator;
    	      this.osVersion = defaults.osVersion;
    	      this.otherAccounts = defaults.otherAccounts;
    	      this.ownerType = defaults.ownerType;
    	      this.releaseVersion = defaults.releaseVersion;
    	      this.securityPatchTime = defaults.securityPatchTime;
    	      this.serialNumber = defaults.serialNumber;
    	      this.wifiMacAddresses = defaults.wifiMacAddresses;
        }

        public Builder androidSpecificAttributes(AndroidAttributesResponse androidSpecificAttributes) {
            this.androidSpecificAttributes = Objects.requireNonNull(androidSpecificAttributes);
            return this;
        }
        public Builder assetTag(String assetTag) {
            this.assetTag = Objects.requireNonNull(assetTag);
            return this;
        }
        public Builder basebandVersion(String basebandVersion) {
            this.basebandVersion = Objects.requireNonNull(basebandVersion);
            return this;
        }
        public Builder bootloaderVersion(String bootloaderVersion) {
            this.bootloaderVersion = Objects.requireNonNull(bootloaderVersion);
            return this;
        }
        public Builder brand(String brand) {
            this.brand = Objects.requireNonNull(brand);
            return this;
        }
        public Builder buildNumber(String buildNumber) {
            this.buildNumber = Objects.requireNonNull(buildNumber);
            return this;
        }
        public Builder compromisedState(String compromisedState) {
            this.compromisedState = Objects.requireNonNull(compromisedState);
            return this;
        }
        public Builder createTime(String createTime) {
            this.createTime = Objects.requireNonNull(createTime);
            return this;
        }
        public Builder deviceId(String deviceId) {
            this.deviceId = Objects.requireNonNull(deviceId);
            return this;
        }
        public Builder deviceType(String deviceType) {
            this.deviceType = Objects.requireNonNull(deviceType);
            return this;
        }
        public Builder enabledDeveloperOptions(Boolean enabledDeveloperOptions) {
            this.enabledDeveloperOptions = Objects.requireNonNull(enabledDeveloperOptions);
            return this;
        }
        public Builder enabledUsbDebugging(Boolean enabledUsbDebugging) {
            this.enabledUsbDebugging = Objects.requireNonNull(enabledUsbDebugging);
            return this;
        }
        public Builder encryptionState(String encryptionState) {
            this.encryptionState = Objects.requireNonNull(encryptionState);
            return this;
        }
        public Builder endpointVerificationSpecificAttributes(EndpointVerificationSpecificAttributesResponse endpointVerificationSpecificAttributes) {
            this.endpointVerificationSpecificAttributes = Objects.requireNonNull(endpointVerificationSpecificAttributes);
            return this;
        }
        public Builder imei(String imei) {
            this.imei = Objects.requireNonNull(imei);
            return this;
        }
        public Builder kernelVersion(String kernelVersion) {
            this.kernelVersion = Objects.requireNonNull(kernelVersion);
            return this;
        }
        public Builder lastSyncTime(String lastSyncTime) {
            this.lastSyncTime = Objects.requireNonNull(lastSyncTime);
            return this;
        }
        public Builder managementState(String managementState) {
            this.managementState = Objects.requireNonNull(managementState);
            return this;
        }
        public Builder manufacturer(String manufacturer) {
            this.manufacturer = Objects.requireNonNull(manufacturer);
            return this;
        }
        public Builder meid(String meid) {
            this.meid = Objects.requireNonNull(meid);
            return this;
        }
        public Builder model(String model) {
            this.model = Objects.requireNonNull(model);
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder networkOperator(String networkOperator) {
            this.networkOperator = Objects.requireNonNull(networkOperator);
            return this;
        }
        public Builder osVersion(String osVersion) {
            this.osVersion = Objects.requireNonNull(osVersion);
            return this;
        }
        public Builder otherAccounts(List<String> otherAccounts) {
            this.otherAccounts = Objects.requireNonNull(otherAccounts);
            return this;
        }
        public Builder otherAccounts(String... otherAccounts) {
            return otherAccounts(List.of(otherAccounts));
        }
        public Builder ownerType(String ownerType) {
            this.ownerType = Objects.requireNonNull(ownerType);
            return this;
        }
        public Builder releaseVersion(String releaseVersion) {
            this.releaseVersion = Objects.requireNonNull(releaseVersion);
            return this;
        }
        public Builder securityPatchTime(String securityPatchTime) {
            this.securityPatchTime = Objects.requireNonNull(securityPatchTime);
            return this;
        }
        public Builder serialNumber(String serialNumber) {
            this.serialNumber = Objects.requireNonNull(serialNumber);
            return this;
        }
        public Builder wifiMacAddresses(List<String> wifiMacAddresses) {
            this.wifiMacAddresses = Objects.requireNonNull(wifiMacAddresses);
            return this;
        }
        public Builder wifiMacAddresses(String... wifiMacAddresses) {
            return wifiMacAddresses(List.of(wifiMacAddresses));
        }        public GetDeviceResult build() {
            return new GetDeviceResult(androidSpecificAttributes, assetTag, basebandVersion, bootloaderVersion, brand, buildNumber, compromisedState, createTime, deviceId, deviceType, enabledDeveloperOptions, enabledUsbDebugging, encryptionState, endpointVerificationSpecificAttributes, imei, kernelVersion, lastSyncTime, managementState, manufacturer, meid, model, name, networkOperator, osVersion, otherAccounts, ownerType, releaseVersion, securityPatchTime, serialNumber, wifiMacAddresses);
        }
    }
}
