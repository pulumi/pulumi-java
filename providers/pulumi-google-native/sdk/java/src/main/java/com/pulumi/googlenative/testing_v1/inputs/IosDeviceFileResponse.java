// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.testing_v1.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.testing_v1.inputs.FileReferenceResponse;
import java.lang.String;
import java.util.Objects;


/**
 * A file or directory to install on the device before the test starts.
 * 
 */
public final class IosDeviceFileResponse extends com.pulumi.resources.InvokeArgs {

    public static final IosDeviceFileResponse Empty = new IosDeviceFileResponse();

    /**
     * The bundle id of the app where this file lives. iOS apps sandbox their own filesystem, so app files must specify which app installed on the device.
     * 
     */
    @Import(name="bundleId", required=true)
    private String bundleId;

    public String bundleId() {
        return this.bundleId;
    }

    /**
     * The source file
     * 
     */
    @Import(name="content", required=true)
    private FileReferenceResponse content;

    public FileReferenceResponse content() {
        return this.content;
    }

    /**
     * Location of the file on the device, inside the app&#39;s sandboxed filesystem
     * 
     */
    @Import(name="devicePath", required=true)
    private String devicePath;

    public String devicePath() {
        return this.devicePath;
    }

    private IosDeviceFileResponse() {}

    private IosDeviceFileResponse(IosDeviceFileResponse $) {
        this.bundleId = $.bundleId;
        this.content = $.content;
        this.devicePath = $.devicePath;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(IosDeviceFileResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private IosDeviceFileResponse $;

        public Builder() {
            $ = new IosDeviceFileResponse();
        }

        public Builder(IosDeviceFileResponse defaults) {
            $ = new IosDeviceFileResponse(Objects.requireNonNull(defaults));
        }

        public Builder bundleId(String bundleId) {
            $.bundleId = bundleId;
            return this;
        }

        public Builder content(FileReferenceResponse content) {
            $.content = content;
            return this;
        }

        public Builder devicePath(String devicePath) {
            $.devicePath = devicePath;
            return this;
        }

        public IosDeviceFileResponse build() {
            $.bundleId = Objects.requireNonNull($.bundleId, "expected parameter 'bundleId' to be non-null");
            $.content = Objects.requireNonNull($.content, "expected parameter 'content' to be non-null");
            $.devicePath = Objects.requireNonNull($.devicePath, "expected parameter 'devicePath' to be non-null");
            return $;
        }
    }

}
