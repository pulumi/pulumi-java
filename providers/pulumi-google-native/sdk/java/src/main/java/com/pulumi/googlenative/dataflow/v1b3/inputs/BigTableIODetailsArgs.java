// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.dataflow.v1b3.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Metadata for a Cloud Bigtable connector used by the job.
 * 
 */
public final class BigTableIODetailsArgs extends com.pulumi.resources.ResourceArgs {

    public static final BigTableIODetailsArgs Empty = new BigTableIODetailsArgs();

    /**
     * InstanceId accessed in the connection.
     * 
     */
    @Import(name="instanceId")
    private @Nullable Output<String> instanceId;

    /**
     * @return InstanceId accessed in the connection.
     * 
     */
    public Optional<Output<String>> instanceId() {
        return Optional.ofNullable(this.instanceId);
    }

    /**
     * ProjectId accessed in the connection.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return ProjectId accessed in the connection.
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * TableId accessed in the connection.
     * 
     */
    @Import(name="tableId")
    private @Nullable Output<String> tableId;

    /**
     * @return TableId accessed in the connection.
     * 
     */
    public Optional<Output<String>> tableId() {
        return Optional.ofNullable(this.tableId);
    }

    private BigTableIODetailsArgs() {}

    private BigTableIODetailsArgs(BigTableIODetailsArgs $) {
        this.instanceId = $.instanceId;
        this.project = $.project;
        this.tableId = $.tableId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BigTableIODetailsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BigTableIODetailsArgs $;

        public Builder() {
            $ = new BigTableIODetailsArgs();
        }

        public Builder(BigTableIODetailsArgs defaults) {
            $ = new BigTableIODetailsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param instanceId InstanceId accessed in the connection.
         * 
         * @return builder
         * 
         */
        public Builder instanceId(@Nullable Output<String> instanceId) {
            $.instanceId = instanceId;
            return this;
        }

        /**
         * @param instanceId InstanceId accessed in the connection.
         * 
         * @return builder
         * 
         */
        public Builder instanceId(String instanceId) {
            return instanceId(Output.of(instanceId));
        }

        /**
         * @param project ProjectId accessed in the connection.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project ProjectId accessed in the connection.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        /**
         * @param tableId TableId accessed in the connection.
         * 
         * @return builder
         * 
         */
        public Builder tableId(@Nullable Output<String> tableId) {
            $.tableId = tableId;
            return this;
        }

        /**
         * @param tableId TableId accessed in the connection.
         * 
         * @return builder
         * 
         */
        public Builder tableId(String tableId) {
            return tableId(Output.of(tableId));
        }

        public BigTableIODetailsArgs build() {
            return $;
        }
    }

}
