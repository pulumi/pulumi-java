// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.dataflow_v1b3.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * Metadata for a Datastore connector used by the job.
 * 
 */
public final class DatastoreIODetailsResponse extends com.pulumi.resources.InvokeArgs {

    public static final DatastoreIODetailsResponse Empty = new DatastoreIODetailsResponse();

    /**
     * Namespace used in the connection.
     * 
     */
    @Import(name="namespace", required=true)
    private String namespace;

    public String namespace() {
        return this.namespace;
    }

    /**
     * ProjectId accessed in the connection.
     * 
     */
    @Import(name="project", required=true)
    private String project;

    public String project() {
        return this.project;
    }

    private DatastoreIODetailsResponse() {}

    private DatastoreIODetailsResponse(DatastoreIODetailsResponse $) {
        this.namespace = $.namespace;
        this.project = $.project;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DatastoreIODetailsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DatastoreIODetailsResponse $;

        public Builder() {
            $ = new DatastoreIODetailsResponse();
        }

        public Builder(DatastoreIODetailsResponse defaults) {
            $ = new DatastoreIODetailsResponse(Objects.requireNonNull(defaults));
        }

        public Builder namespace(String namespace) {
            $.namespace = namespace;
            return this;
        }

        public Builder project(String project) {
            $.project = project;
            return this;
        }

        public DatastoreIODetailsResponse build() {
            $.namespace = Objects.requireNonNull($.namespace, "expected parameter 'namespace' to be non-null");
            $.project = Objects.requireNonNull($.project, "expected parameter 'project' to be non-null");
            return $;
        }
    }

}
