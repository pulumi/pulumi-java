// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.cloudkms_v1.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * A CryptoKeyVersionTemplate specifies the properties to use when creating a new CryptoKeyVersion, either manually with CreateCryptoKeyVersion or automatically as a result of auto-rotation.
 * 
 */
public final class CryptoKeyVersionTemplateResponse extends com.pulumi.resources.InvokeArgs {

    public static final CryptoKeyVersionTemplateResponse Empty = new CryptoKeyVersionTemplateResponse();

    /**
     * Algorithm to use when creating a CryptoKeyVersion based on this template. For backwards compatibility, GOOGLE_SYMMETRIC_ENCRYPTION is implied if both this field is omitted and CryptoKey.purpose is ENCRYPT_DECRYPT.
     * 
     */
    @Import(name="algorithm", required=true)
    private String algorithm;

    /**
     * @return Algorithm to use when creating a CryptoKeyVersion based on this template. For backwards compatibility, GOOGLE_SYMMETRIC_ENCRYPTION is implied if both this field is omitted and CryptoKey.purpose is ENCRYPT_DECRYPT.
     * 
     */
    public String algorithm() {
        return this.algorithm;
    }

    /**
     * ProtectionLevel to use when creating a CryptoKeyVersion based on this template. Immutable. Defaults to SOFTWARE.
     * 
     */
    @Import(name="protectionLevel", required=true)
    private String protectionLevel;

    /**
     * @return ProtectionLevel to use when creating a CryptoKeyVersion based on this template. Immutable. Defaults to SOFTWARE.
     * 
     */
    public String protectionLevel() {
        return this.protectionLevel;
    }

    private CryptoKeyVersionTemplateResponse() {}

    private CryptoKeyVersionTemplateResponse(CryptoKeyVersionTemplateResponse $) {
        this.algorithm = $.algorithm;
        this.protectionLevel = $.protectionLevel;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CryptoKeyVersionTemplateResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CryptoKeyVersionTemplateResponse $;

        public Builder() {
            $ = new CryptoKeyVersionTemplateResponse();
        }

        public Builder(CryptoKeyVersionTemplateResponse defaults) {
            $ = new CryptoKeyVersionTemplateResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param algorithm Algorithm to use when creating a CryptoKeyVersion based on this template. For backwards compatibility, GOOGLE_SYMMETRIC_ENCRYPTION is implied if both this field is omitted and CryptoKey.purpose is ENCRYPT_DECRYPT.
         * 
         * @return builder
         * 
         */
        public Builder algorithm(String algorithm) {
            $.algorithm = algorithm;
            return this;
        }

        /**
         * @param protectionLevel ProtectionLevel to use when creating a CryptoKeyVersion based on this template. Immutable. Defaults to SOFTWARE.
         * 
         * @return builder
         * 
         */
        public Builder protectionLevel(String protectionLevel) {
            $.protectionLevel = protectionLevel;
            return this;
        }

        public CryptoKeyVersionTemplateResponse build() {
            $.algorithm = Objects.requireNonNull($.algorithm, "expected parameter 'algorithm' to be non-null");
            $.protectionLevel = Objects.requireNonNull($.protectionLevel, "expected parameter 'protectionLevel' to be non-null");
            return $;
        }
    }

}
