// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.transcoder_v1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import com.pulumi.googlenative.transcoder_v1.inputs.PreprocessingConfigArgs;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Input asset.
 * 
 */
public final class InputArgs extends com.pulumi.resources.ResourceArgs {

    public static final InputArgs Empty = new InputArgs();

    /**
     * A unique key for this input. Must be specified when using advanced mapping and edit lists.
     * 
     */
    @Import(name="key")
      private final @Nullable Output<String> key;

    public Output<String> key() {
        return this.key == null ? Codegen.empty() : this.key;
    }

    /**
     * Preprocessing configurations.
     * 
     */
    @Import(name="preprocessingConfig")
      private final @Nullable Output<PreprocessingConfigArgs> preprocessingConfig;

    public Output<PreprocessingConfigArgs> preprocessingConfig() {
        return this.preprocessingConfig == null ? Codegen.empty() : this.preprocessingConfig;
    }

    /**
     * URI of the media. Input files must be at least 5 seconds in duration and stored in Cloud Storage (for example, `gs://bucket/inputs/file.mp4`). If empty, the value will be populated from `Job.input_uri`.
     * 
     */
    @Import(name="uri")
      private final @Nullable Output<String> uri;

    public Output<String> uri() {
        return this.uri == null ? Codegen.empty() : this.uri;
    }

    public InputArgs(
        @Nullable Output<String> key,
        @Nullable Output<PreprocessingConfigArgs> preprocessingConfig,
        @Nullable Output<String> uri) {
        this.key = key;
        this.preprocessingConfig = preprocessingConfig;
        this.uri = uri;
    }

    private InputArgs() {
        this.key = Codegen.empty();
        this.preprocessingConfig = Codegen.empty();
        this.uri = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(InputArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> key;
        private @Nullable Output<PreprocessingConfigArgs> preprocessingConfig;
        private @Nullable Output<String> uri;

        public Builder() {
    	      // Empty
        }

        public Builder(InputArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.key = defaults.key;
    	      this.preprocessingConfig = defaults.preprocessingConfig;
    	      this.uri = defaults.uri;
        }

        public Builder key(@Nullable Output<String> key) {
            this.key = key;
            return this;
        }
        public Builder key(@Nullable String key) {
            this.key = Codegen.ofNullable(key);
            return this;
        }
        public Builder preprocessingConfig(@Nullable Output<PreprocessingConfigArgs> preprocessingConfig) {
            this.preprocessingConfig = preprocessingConfig;
            return this;
        }
        public Builder preprocessingConfig(@Nullable PreprocessingConfigArgs preprocessingConfig) {
            this.preprocessingConfig = Codegen.ofNullable(preprocessingConfig);
            return this;
        }
        public Builder uri(@Nullable Output<String> uri) {
            this.uri = uri;
            return this;
        }
        public Builder uri(@Nullable String uri) {
            this.uri = Codegen.ofNullable(uri);
            return this;
        }        public InputArgs build() {
            return new InputArgs(key, preprocessingConfig, uri);
        }
    }
}
