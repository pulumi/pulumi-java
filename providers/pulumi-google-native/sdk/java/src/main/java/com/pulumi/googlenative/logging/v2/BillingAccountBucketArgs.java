// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.logging.v2;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.logging.v2.inputs.CmekSettingsArgs;
import com.pulumi.googlenative.logging.v2.inputs.IndexConfigArgs;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BillingAccountBucketArgs extends com.pulumi.resources.ResourceArgs {

    public static final BillingAccountBucketArgs Empty = new BillingAccountBucketArgs();

    @Import(name="billingAccountId", required=true)
    private Output<String> billingAccountId;

    public Output<String> billingAccountId() {
        return this.billingAccountId;
    }

    /**
     * Required. A client-assigned identifier such as &#34;my-bucket&#34;. Identifiers are limited to 100 characters and can include only letters, digits, underscores, hyphens, and periods.
     * 
     */
    @Import(name="bucketId", required=true)
    private Output<String> bucketId;

    /**
     * @return Required. A client-assigned identifier such as &#34;my-bucket&#34;. Identifiers are limited to 100 characters and can include only letters, digits, underscores, hyphens, and periods.
     * 
     */
    public Output<String> bucketId() {
        return this.bucketId;
    }

    /**
     * The CMEK settings of the log bucket. If present, new log entries written to this log bucket are encrypted using the CMEK key provided in this configuration. If a log bucket has CMEK settings, the CMEK settings cannot be disabled later by updating the log bucket. Changing the KMS key is allowed.
     * 
     */
    @Import(name="cmekSettings")
    private @Nullable Output<CmekSettingsArgs> cmekSettings;

    /**
     * @return The CMEK settings of the log bucket. If present, new log entries written to this log bucket are encrypted using the CMEK key provided in this configuration. If a log bucket has CMEK settings, the CMEK settings cannot be disabled later by updating the log bucket. Changing the KMS key is allowed.
     * 
     */
    public Optional<Output<CmekSettingsArgs>> cmekSettings() {
        return Optional.ofNullable(this.cmekSettings);
    }

    /**
     * Describes this bucket.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Describes this bucket.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * A list of indexed fields and related configuration data.
     * 
     */
    @Import(name="indexConfigs")
    private @Nullable Output<List<IndexConfigArgs>> indexConfigs;

    /**
     * @return A list of indexed fields and related configuration data.
     * 
     */
    public Optional<Output<List<IndexConfigArgs>>> indexConfigs() {
        return Optional.ofNullable(this.indexConfigs);
    }

    @Import(name="location")
    private @Nullable Output<String> location;

    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * Whether the bucket is locked.The retention period on a locked bucket cannot be changed. Locked buckets may only be deleted if they are empty.
     * 
     */
    @Import(name="locked")
    private @Nullable Output<Boolean> locked;

    /**
     * @return Whether the bucket is locked.The retention period on a locked bucket cannot be changed. Locked buckets may only be deleted if they are empty.
     * 
     */
    public Optional<Output<Boolean>> locked() {
        return Optional.ofNullable(this.locked);
    }

    /**
     * Log entry field paths that are denied access in this bucket.The following fields and their children are eligible: textPayload, jsonPayload, protoPayload, httpRequest, labels, sourceLocation.Restricting a repeated field will restrict all values. Adding a parent will block all child fields. (e.g. foo.bar will block foo.bar.baz)
     * 
     */
    @Import(name="restrictedFields")
    private @Nullable Output<List<String>> restrictedFields;

    /**
     * @return Log entry field paths that are denied access in this bucket.The following fields and their children are eligible: textPayload, jsonPayload, protoPayload, httpRequest, labels, sourceLocation.Restricting a repeated field will restrict all values. Adding a parent will block all child fields. (e.g. foo.bar will block foo.bar.baz)
     * 
     */
    public Optional<Output<List<String>>> restrictedFields() {
        return Optional.ofNullable(this.restrictedFields);
    }

    /**
     * Logs will be retained by default for this amount of time, after which they will automatically be deleted. The minimum retention period is 1 day. If this value is set to zero at bucket creation time, the default time of 30 days will be used.
     * 
     */
    @Import(name="retentionDays")
    private @Nullable Output<Integer> retentionDays;

    /**
     * @return Logs will be retained by default for this amount of time, after which they will automatically be deleted. The minimum retention period is 1 day. If this value is set to zero at bucket creation time, the default time of 30 days will be used.
     * 
     */
    public Optional<Output<Integer>> retentionDays() {
        return Optional.ofNullable(this.retentionDays);
    }

    private BillingAccountBucketArgs() {}

    private BillingAccountBucketArgs(BillingAccountBucketArgs $) {
        this.billingAccountId = $.billingAccountId;
        this.bucketId = $.bucketId;
        this.cmekSettings = $.cmekSettings;
        this.description = $.description;
        this.indexConfigs = $.indexConfigs;
        this.location = $.location;
        this.locked = $.locked;
        this.restrictedFields = $.restrictedFields;
        this.retentionDays = $.retentionDays;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BillingAccountBucketArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BillingAccountBucketArgs $;

        public Builder() {
            $ = new BillingAccountBucketArgs();
        }

        public Builder(BillingAccountBucketArgs defaults) {
            $ = new BillingAccountBucketArgs(Objects.requireNonNull(defaults));
        }

        public Builder billingAccountId(Output<String> billingAccountId) {
            $.billingAccountId = billingAccountId;
            return this;
        }

        public Builder billingAccountId(String billingAccountId) {
            return billingAccountId(Output.of(billingAccountId));
        }

        /**
         * @param bucketId Required. A client-assigned identifier such as &#34;my-bucket&#34;. Identifiers are limited to 100 characters and can include only letters, digits, underscores, hyphens, and periods.
         * 
         * @return builder
         * 
         */
        public Builder bucketId(Output<String> bucketId) {
            $.bucketId = bucketId;
            return this;
        }

        /**
         * @param bucketId Required. A client-assigned identifier such as &#34;my-bucket&#34;. Identifiers are limited to 100 characters and can include only letters, digits, underscores, hyphens, and periods.
         * 
         * @return builder
         * 
         */
        public Builder bucketId(String bucketId) {
            return bucketId(Output.of(bucketId));
        }

        /**
         * @param cmekSettings The CMEK settings of the log bucket. If present, new log entries written to this log bucket are encrypted using the CMEK key provided in this configuration. If a log bucket has CMEK settings, the CMEK settings cannot be disabled later by updating the log bucket. Changing the KMS key is allowed.
         * 
         * @return builder
         * 
         */
        public Builder cmekSettings(@Nullable Output<CmekSettingsArgs> cmekSettings) {
            $.cmekSettings = cmekSettings;
            return this;
        }

        /**
         * @param cmekSettings The CMEK settings of the log bucket. If present, new log entries written to this log bucket are encrypted using the CMEK key provided in this configuration. If a log bucket has CMEK settings, the CMEK settings cannot be disabled later by updating the log bucket. Changing the KMS key is allowed.
         * 
         * @return builder
         * 
         */
        public Builder cmekSettings(CmekSettingsArgs cmekSettings) {
            return cmekSettings(Output.of(cmekSettings));
        }

        /**
         * @param description Describes this bucket.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Describes this bucket.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param indexConfigs A list of indexed fields and related configuration data.
         * 
         * @return builder
         * 
         */
        public Builder indexConfigs(@Nullable Output<List<IndexConfigArgs>> indexConfigs) {
            $.indexConfigs = indexConfigs;
            return this;
        }

        /**
         * @param indexConfigs A list of indexed fields and related configuration data.
         * 
         * @return builder
         * 
         */
        public Builder indexConfigs(List<IndexConfigArgs> indexConfigs) {
            return indexConfigs(Output.of(indexConfigs));
        }

        /**
         * @param indexConfigs A list of indexed fields and related configuration data.
         * 
         * @return builder
         * 
         */
        public Builder indexConfigs(IndexConfigArgs... indexConfigs) {
            return indexConfigs(List.of(indexConfigs));
        }

        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param locked Whether the bucket is locked.The retention period on a locked bucket cannot be changed. Locked buckets may only be deleted if they are empty.
         * 
         * @return builder
         * 
         */
        public Builder locked(@Nullable Output<Boolean> locked) {
            $.locked = locked;
            return this;
        }

        /**
         * @param locked Whether the bucket is locked.The retention period on a locked bucket cannot be changed. Locked buckets may only be deleted if they are empty.
         * 
         * @return builder
         * 
         */
        public Builder locked(Boolean locked) {
            return locked(Output.of(locked));
        }

        /**
         * @param restrictedFields Log entry field paths that are denied access in this bucket.The following fields and their children are eligible: textPayload, jsonPayload, protoPayload, httpRequest, labels, sourceLocation.Restricting a repeated field will restrict all values. Adding a parent will block all child fields. (e.g. foo.bar will block foo.bar.baz)
         * 
         * @return builder
         * 
         */
        public Builder restrictedFields(@Nullable Output<List<String>> restrictedFields) {
            $.restrictedFields = restrictedFields;
            return this;
        }

        /**
         * @param restrictedFields Log entry field paths that are denied access in this bucket.The following fields and their children are eligible: textPayload, jsonPayload, protoPayload, httpRequest, labels, sourceLocation.Restricting a repeated field will restrict all values. Adding a parent will block all child fields. (e.g. foo.bar will block foo.bar.baz)
         * 
         * @return builder
         * 
         */
        public Builder restrictedFields(List<String> restrictedFields) {
            return restrictedFields(Output.of(restrictedFields));
        }

        /**
         * @param restrictedFields Log entry field paths that are denied access in this bucket.The following fields and their children are eligible: textPayload, jsonPayload, protoPayload, httpRequest, labels, sourceLocation.Restricting a repeated field will restrict all values. Adding a parent will block all child fields. (e.g. foo.bar will block foo.bar.baz)
         * 
         * @return builder
         * 
         */
        public Builder restrictedFields(String... restrictedFields) {
            return restrictedFields(List.of(restrictedFields));
        }

        /**
         * @param retentionDays Logs will be retained by default for this amount of time, after which they will automatically be deleted. The minimum retention period is 1 day. If this value is set to zero at bucket creation time, the default time of 30 days will be used.
         * 
         * @return builder
         * 
         */
        public Builder retentionDays(@Nullable Output<Integer> retentionDays) {
            $.retentionDays = retentionDays;
            return this;
        }

        /**
         * @param retentionDays Logs will be retained by default for this amount of time, after which they will automatically be deleted. The minimum retention period is 1 day. If this value is set to zero at bucket creation time, the default time of 30 days will be used.
         * 
         * @return builder
         * 
         */
        public Builder retentionDays(Integer retentionDays) {
            return retentionDays(Output.of(retentionDays));
        }

        public BillingAccountBucketArgs build() {
            $.billingAccountId = Objects.requireNonNull($.billingAccountId, "expected parameter 'billingAccountId' to be non-null");
            $.bucketId = Objects.requireNonNull($.bucketId, "expected parameter 'bucketId' to be non-null");
            return $;
        }
    }

}
