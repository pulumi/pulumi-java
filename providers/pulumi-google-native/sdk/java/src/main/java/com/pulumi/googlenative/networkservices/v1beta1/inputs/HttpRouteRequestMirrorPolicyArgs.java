// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.networkservices.v1beta1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.networkservices.v1beta1.inputs.HttpRouteDestinationArgs;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Specifies the policy on how requests are shadowed to a separate mirrored destination service. The proxy does not wait for responses from the shadow service. Prior to sending traffic to the shadow service, the host/authority header is suffixed with -shadow.
 * 
 */
public final class HttpRouteRequestMirrorPolicyArgs extends com.pulumi.resources.ResourceArgs {

    public static final HttpRouteRequestMirrorPolicyArgs Empty = new HttpRouteRequestMirrorPolicyArgs();

    /**
     * The destination the requests will be mirrored to. The weight of the destination will be ignored.
     * 
     */
    @Import(name="destination")
    private @Nullable Output<HttpRouteDestinationArgs> destination;

    /**
     * @return The destination the requests will be mirrored to. The weight of the destination will be ignored.
     * 
     */
    public Optional<Output<HttpRouteDestinationArgs>> destination() {
        return Optional.ofNullable(this.destination);
    }

    private HttpRouteRequestMirrorPolicyArgs() {}

    private HttpRouteRequestMirrorPolicyArgs(HttpRouteRequestMirrorPolicyArgs $) {
        this.destination = $.destination;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(HttpRouteRequestMirrorPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private HttpRouteRequestMirrorPolicyArgs $;

        public Builder() {
            $ = new HttpRouteRequestMirrorPolicyArgs();
        }

        public Builder(HttpRouteRequestMirrorPolicyArgs defaults) {
            $ = new HttpRouteRequestMirrorPolicyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param destination The destination the requests will be mirrored to. The weight of the destination will be ignored.
         * 
         * @return builder
         * 
         */
        public Builder destination(@Nullable Output<HttpRouteDestinationArgs> destination) {
            $.destination = destination;
            return this;
        }

        /**
         * @param destination The destination the requests will be mirrored to. The weight of the destination will be ignored.
         * 
         * @return builder
         * 
         */
        public Builder destination(HttpRouteDestinationArgs destination) {
            return destination(Output.of(destination));
        }

        public HttpRouteRequestMirrorPolicyArgs build() {
            return $;
        }
    }

}
