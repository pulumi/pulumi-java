// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.cloudfunctions.v1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.cloudfunctions.v1.inputs.RetryArgs;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Describes the policy in case of function&#39;s execution failure. If empty, then defaults to ignoring failures (i.e. not retrying them).
 * 
 */
public final class FailurePolicyArgs extends com.pulumi.resources.ResourceArgs {

    public static final FailurePolicyArgs Empty = new FailurePolicyArgs();

    /**
     * If specified, then the function will be retried in case of a failure.
     * 
     */
    @Import(name="retry")
    private @Nullable Output<RetryArgs> retry;

    /**
     * @return If specified, then the function will be retried in case of a failure.
     * 
     */
    public Optional<Output<RetryArgs>> retry() {
        return Optional.ofNullable(this.retry);
    }

    private FailurePolicyArgs() {}

    private FailurePolicyArgs(FailurePolicyArgs $) {
        this.retry = $.retry;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FailurePolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FailurePolicyArgs $;

        public Builder() {
            $ = new FailurePolicyArgs();
        }

        public Builder(FailurePolicyArgs defaults) {
            $ = new FailurePolicyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param retry If specified, then the function will be retried in case of a failure.
         * 
         * @return builder
         * 
         */
        public Builder retry(@Nullable Output<RetryArgs> retry) {
            $.retry = retry;
            return this;
        }

        /**
         * @param retry If specified, then the function will be retried in case of a failure.
         * 
         * @return builder
         * 
         */
        public Builder retry(RetryArgs retry) {
            return retry(Output.of(retry));
        }

        public FailurePolicyArgs build() {
            return $;
        }
    }

}
