// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.pubsublite_v1.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.pubsublite_v1.inputs.CapacityResponse;
import java.lang.String;
import java.util.Objects;


/**
 * The settings for a topic&#39;s partitions.
 * 
 */
public final class PartitionConfigResponse extends com.pulumi.resources.InvokeArgs {

    public static final PartitionConfigResponse Empty = new PartitionConfigResponse();

    /**
     * The capacity configuration.
     * 
     */
    @Import(name="capacity", required=true)
    private CapacityResponse capacity;

    public CapacityResponse capacity() {
        return this.capacity;
    }

    /**
     * The number of partitions in the topic. Must be at least 1. Once a topic has been created the number of partitions can be increased but not decreased. Message ordering is not guaranteed across a topic resize. For more information see https://cloud.google.com/pubsub/lite/docs/topics#scaling_capacity
     * 
     */
    @Import(name="count", required=true)
    private String count;

    public String count() {
        return this.count;
    }

    private PartitionConfigResponse() {}

    private PartitionConfigResponse(PartitionConfigResponse $) {
        this.capacity = $.capacity;
        this.count = $.count;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PartitionConfigResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PartitionConfigResponse $;

        public Builder() {
            $ = new PartitionConfigResponse();
        }

        public Builder(PartitionConfigResponse defaults) {
            $ = new PartitionConfigResponse(Objects.requireNonNull(defaults));
        }

        public Builder capacity(CapacityResponse capacity) {
            $.capacity = capacity;
            return this;
        }

        public Builder count(String count) {
            $.count = count;
            return this;
        }

        public PartitionConfigResponse build() {
            $.capacity = Objects.requireNonNull($.capacity, "expected parameter 'capacity' to be non-null");
            $.count = Objects.requireNonNull($.count, "expected parameter 'count' to be non-null");
            return $;
        }
    }

}
