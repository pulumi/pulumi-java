// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.certificatemanager.v1;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.googlenative.Utilities;
import com.pulumi.googlenative.certificatemanager.v1.CertificateMapEntryArgs;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;

/**
 * Creates a new CertificateMapEntry in a given project and location.
 * 
 */
@ResourceType(type="google-native:certificatemanager/v1:CertificateMapEntry")
public class CertificateMapEntry extends com.pulumi.resources.CustomResource {
    /**
     * Required. A user-provided name of the certificate map entry.
     * 
     */
    @Export(name="certificateMapEntryId", type=String.class, parameters={})
    private Output<String> certificateMapEntryId;

    /**
     * @return Required. A user-provided name of the certificate map entry.
     * 
     */
    public Output<String> certificateMapEntryId() {
        return this.certificateMapEntryId;
    }
    @Export(name="certificateMapId", type=String.class, parameters={})
    private Output<String> certificateMapId;

    public Output<String> certificateMapId() {
        return this.certificateMapId;
    }
    /**
     * A set of Certificates defines for the given `hostname`. There can be defined up to fifteen certificates in each Certificate Map Entry. Each certificate must match pattern `projects/*{@literal /}locations/*{@literal /}certificates/*`.
     * 
     */
    @Export(name="certificates", type=List.class, parameters={String.class})
    private Output<List<String>> certificates;

    /**
     * @return A set of Certificates defines for the given `hostname`. There can be defined up to fifteen certificates in each Certificate Map Entry. Each certificate must match pattern `projects/*{@literal /}locations/*{@literal /}certificates/*`.
     * 
     */
    public Output<List<String>> certificates() {
        return this.certificates;
    }
    /**
     * The creation timestamp of a Certificate Map Entry.
     * 
     */
    @Export(name="createTime", type=String.class, parameters={})
    private Output<String> createTime;

    /**
     * @return The creation timestamp of a Certificate Map Entry.
     * 
     */
    public Output<String> createTime() {
        return this.createTime;
    }
    /**
     * One or more paragraphs of text description of a certificate map entry.
     * 
     */
    @Export(name="description", type=String.class, parameters={})
    private Output<String> description;

    /**
     * @return One or more paragraphs of text description of a certificate map entry.
     * 
     */
    public Output<String> description() {
        return this.description;
    }
    /**
     * A Hostname (FQDN, e.g. `example.com`) or a wildcard hostname expression (`*.example.com`) for a set of hostnames with common suffix. Used as Server Name Indication (SNI) for selecting a proper certificate.
     * 
     */
    @Export(name="hostname", type=String.class, parameters={})
    private Output<String> hostname;

    /**
     * @return A Hostname (FQDN, e.g. `example.com`) or a wildcard hostname expression (`*.example.com`) for a set of hostnames with common suffix. Used as Server Name Indication (SNI) for selecting a proper certificate.
     * 
     */
    public Output<String> hostname() {
        return this.hostname;
    }
    /**
     * Set of labels associated with a Certificate Map Entry.
     * 
     */
    @Export(name="labels", type=Map.class, parameters={String.class, String.class})
    private Output<Map<String,String>> labels;

    /**
     * @return Set of labels associated with a Certificate Map Entry.
     * 
     */
    public Output<Map<String,String>> labels() {
        return this.labels;
    }
    @Export(name="location", type=String.class, parameters={})
    private Output<String> location;

    public Output<String> location() {
        return this.location;
    }
    /**
     * A predefined matcher for particular cases, other than SNI selection.
     * 
     */
    @Export(name="matcher", type=String.class, parameters={})
    private Output<String> matcher;

    /**
     * @return A predefined matcher for particular cases, other than SNI selection.
     * 
     */
    public Output<String> matcher() {
        return this.matcher;
    }
    /**
     * A user-defined name of the Certificate Map Entry. Certificate Map Entry names must be unique globally and match pattern `projects/*{@literal /}locations/*{@literal /}certificateMaps/*{@literal /}certificateMapEntries/*`.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return A user-defined name of the Certificate Map Entry. Certificate Map Entry names must be unique globally and match pattern `projects/*{@literal /}locations/*{@literal /}certificateMaps/*{@literal /}certificateMapEntries/*`.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    @Export(name="project", type=String.class, parameters={})
    private Output<String> project;

    public Output<String> project() {
        return this.project;
    }
    /**
     * A serving state of this Certificate Map Entry.
     * 
     */
    @Export(name="state", type=String.class, parameters={})
    private Output<String> state;

    /**
     * @return A serving state of this Certificate Map Entry.
     * 
     */
    public Output<String> state() {
        return this.state;
    }
    /**
     * The update timestamp of a Certificate Map Entry.
     * 
     */
    @Export(name="updateTime", type=String.class, parameters={})
    private Output<String> updateTime;

    /**
     * @return The update timestamp of a Certificate Map Entry.
     * 
     */
    public Output<String> updateTime() {
        return this.updateTime;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public CertificateMapEntry(String name) {
        this(name, CertificateMapEntryArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public CertificateMapEntry(String name, CertificateMapEntryArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public CertificateMapEntry(String name, CertificateMapEntryArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("google-native:certificatemanager/v1:CertificateMapEntry", name, args == null ? CertificateMapEntryArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private CertificateMapEntry(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("google-native:certificatemanager/v1:CertificateMapEntry", name, null, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static CertificateMapEntry get(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new CertificateMapEntry(name, id, options);
    }
}
