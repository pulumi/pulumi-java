// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.networkservices.v1.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class TlsRouteRouteMatchResponse {
    /**
     * @return Optional. ALPN (Application-Layer Protocol Negotiation) to match against. Examples: &#34;http/1.1&#34;, &#34;h2&#34;. At least one of sni_host and alpn is required. Up to 5 alpns across all matches can be set.
     * 
     */
    private final List<String> alpn;
    /**
     * @return Optional. SNI (server name indicator) to match against. SNI will be matched against all wildcard domains, i.e. www.example.com will be first matched against www.example.com, then *.example.com, then *.com. Partial wildcards are not supported, and values like *w.example.com are invalid. At least one of sni_host and alpn is required. Up to 5 sni hosts across all matches can be set.
     * 
     */
    private final List<String> sniHost;

    @CustomType.Constructor
    private TlsRouteRouteMatchResponse(
        @CustomType.Parameter("alpn") List<String> alpn,
        @CustomType.Parameter("sniHost") List<String> sniHost) {
        this.alpn = alpn;
        this.sniHost = sniHost;
    }

    /**
     * @return Optional. ALPN (Application-Layer Protocol Negotiation) to match against. Examples: &#34;http/1.1&#34;, &#34;h2&#34;. At least one of sni_host and alpn is required. Up to 5 alpns across all matches can be set.
     * 
     */
    public List<String> alpn() {
        return this.alpn;
    }
    /**
     * @return Optional. SNI (server name indicator) to match against. SNI will be matched against all wildcard domains, i.e. www.example.com will be first matched against www.example.com, then *.example.com, then *.com. Partial wildcards are not supported, and values like *w.example.com are invalid. At least one of sni_host and alpn is required. Up to 5 sni hosts across all matches can be set.
     * 
     */
    public List<String> sniHost() {
        return this.sniHost;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TlsRouteRouteMatchResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<String> alpn;
        private List<String> sniHost;

        public Builder() {
    	      // Empty
        }

        public Builder(TlsRouteRouteMatchResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.alpn = defaults.alpn;
    	      this.sniHost = defaults.sniHost;
        }

        public Builder alpn(List<String> alpn) {
            this.alpn = Objects.requireNonNull(alpn);
            return this;
        }
        public Builder alpn(String... alpn) {
            return alpn(List.of(alpn));
        }
        public Builder sniHost(List<String> sniHost) {
            this.sniHost = Objects.requireNonNull(sniHost);
            return this;
        }
        public Builder sniHost(String... sniHost) {
            return sniHost(List.of(sniHost));
        }        public TlsRouteRouteMatchResponse build() {
            return new TlsRouteRouteMatchResponse(alpn, sniHost);
        }
    }
}
