// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.beyondcorp.v1alpha.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GatewayResponse {
    /**
     * @return The type of hosting used by the gateway.
     * 
     */
    private final String type;
    /**
     * @return Server-defined URI for this resource.
     * 
     */
    private final String uri;
    /**
     * @return User port reserved on the gateways for this connection, if not specified or zero, the default port is 19443.
     * 
     */
    private final Integer userPort;

    @CustomType.Constructor
    private GatewayResponse(
        @CustomType.Parameter("type") String type,
        @CustomType.Parameter("uri") String uri,
        @CustomType.Parameter("userPort") Integer userPort) {
        this.type = type;
        this.uri = uri;
        this.userPort = userPort;
    }

    /**
     * @return The type of hosting used by the gateway.
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return Server-defined URI for this resource.
     * 
     */
    public String uri() {
        return this.uri;
    }
    /**
     * @return User port reserved on the gateways for this connection, if not specified or zero, the default port is 19443.
     * 
     */
    public Integer userPort() {
        return this.userPort;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GatewayResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String type;
        private String uri;
        private Integer userPort;

        public Builder() {
    	      // Empty
        }

        public Builder(GatewayResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.type = defaults.type;
    	      this.uri = defaults.uri;
    	      this.userPort = defaults.userPort;
        }

        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public Builder uri(String uri) {
            this.uri = Objects.requireNonNull(uri);
            return this;
        }
        public Builder userPort(Integer userPort) {
            this.userPort = Objects.requireNonNull(userPort);
            return this;
        }        public GatewayResponse build() {
            return new GatewayResponse(type, uri, userPort);
        }
    }
}
