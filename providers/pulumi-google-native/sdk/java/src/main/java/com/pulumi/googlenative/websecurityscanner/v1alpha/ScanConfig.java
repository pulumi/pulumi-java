// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.websecurityscanner.v1alpha;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.googlenative.Utilities;
import com.pulumi.googlenative.websecurityscanner.v1alpha.ScanConfigArgs;
import com.pulumi.googlenative.websecurityscanner.v1alpha.outputs.AuthenticationResponse;
import com.pulumi.googlenative.websecurityscanner.v1alpha.outputs.ScanRunResponse;
import com.pulumi.googlenative.websecurityscanner.v1alpha.outputs.ScheduleResponse;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * Creates a new ScanConfig.
 * 
 */
@ResourceType(type="google-native:websecurityscanner/v1alpha:ScanConfig")
public class ScanConfig extends com.pulumi.resources.CustomResource {
    /**
     * The authentication configuration. If specified, service will use the authentication configuration during scanning.
     * 
     */
    @Export(name="authentication", type=AuthenticationResponse.class, parameters={})
    private Output<AuthenticationResponse> authentication;

    /**
     * @return The authentication configuration. If specified, service will use the authentication configuration during scanning.
     * 
     */
    public Output<AuthenticationResponse> authentication() {
        return this.authentication;
    }
    /**
     * The excluded URL patterns as described in https://cloud.google.com/security-command-center/docs/how-to-use-web-security-scanner#excluding_urls
     * 
     */
    @Export(name="blacklistPatterns", type=List.class, parameters={String.class})
    private Output<List<String>> blacklistPatterns;

    /**
     * @return The excluded URL patterns as described in https://cloud.google.com/security-command-center/docs/how-to-use-web-security-scanner#excluding_urls
     * 
     */
    public Output<List<String>> blacklistPatterns() {
        return this.blacklistPatterns;
    }
    /**
     * The user provided display name of the ScanConfig.
     * 
     */
    @Export(name="displayName", type=String.class, parameters={})
    private Output<String> displayName;

    /**
     * @return The user provided display name of the ScanConfig.
     * 
     */
    public Output<String> displayName() {
        return this.displayName;
    }
    /**
     * Latest ScanRun if available.
     * 
     */
    @Export(name="latestRun", type=ScanRunResponse.class, parameters={})
    private Output<ScanRunResponse> latestRun;

    /**
     * @return Latest ScanRun if available.
     * 
     */
    public Output<ScanRunResponse> latestRun() {
        return this.latestRun;
    }
    /**
     * The maximum QPS during scanning. A valid value ranges from 5 to 20 inclusively. If the field is unspecified or its value is set 0, server will default to 15. Other values outside of [5, 20] range will be rejected with INVALID_ARGUMENT error.
     * 
     */
    @Export(name="maxQps", type=Integer.class, parameters={})
    private Output<Integer> maxQps;

    /**
     * @return The maximum QPS during scanning. A valid value ranges from 5 to 20 inclusively. If the field is unspecified or its value is set 0, server will default to 15. Other values outside of [5, 20] range will be rejected with INVALID_ARGUMENT error.
     * 
     */
    public Output<Integer> maxQps() {
        return this.maxQps;
    }
    /**
     * The resource name of the ScanConfig. The name follows the format of &#39;projects/{projectId}/scanConfigs/{scanConfigId}&#39;. The ScanConfig IDs are generated by the system.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The resource name of the ScanConfig. The name follows the format of &#39;projects/{projectId}/scanConfigs/{scanConfigId}&#39;. The ScanConfig IDs are generated by the system.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    @Export(name="project", type=String.class, parameters={})
    private Output<String> project;

    public Output<String> project() {
        return this.project;
    }
    /**
     * The schedule of the ScanConfig.
     * 
     */
    @Export(name="schedule", type=ScheduleResponse.class, parameters={})
    private Output<ScheduleResponse> schedule;

    /**
     * @return The schedule of the ScanConfig.
     * 
     */
    public Output<ScheduleResponse> schedule() {
        return this.schedule;
    }
    /**
     * The starting URLs from which the scanner finds site pages.
     * 
     */
    @Export(name="startingUrls", type=List.class, parameters={String.class})
    private Output<List<String>> startingUrls;

    /**
     * @return The starting URLs from which the scanner finds site pages.
     * 
     */
    public Output<List<String>> startingUrls() {
        return this.startingUrls;
    }
    /**
     * Set of Google Cloud platforms targeted by the scan. If empty, APP_ENGINE will be used as a default.
     * 
     */
    @Export(name="targetPlatforms", type=List.class, parameters={String.class})
    private Output<List<String>> targetPlatforms;

    /**
     * @return Set of Google Cloud platforms targeted by the scan. If empty, APP_ENGINE will be used as a default.
     * 
     */
    public Output<List<String>> targetPlatforms() {
        return this.targetPlatforms;
    }
    /**
     * The user agent used during scanning.
     * 
     */
    @Export(name="userAgent", type=String.class, parameters={})
    private Output<String> userAgent;

    /**
     * @return The user agent used during scanning.
     * 
     */
    public Output<String> userAgent() {
        return this.userAgent;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ScanConfig(String name) {
        this(name, ScanConfigArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ScanConfig(String name, ScanConfigArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ScanConfig(String name, ScanConfigArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("google-native:websecurityscanner/v1alpha:ScanConfig", name, args == null ? ScanConfigArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private ScanConfig(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("google-native:websecurityscanner/v1alpha:ScanConfig", name, null, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ScanConfig get(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ScanConfig(name, id, options);
    }
}
