// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.toolresults.v1beta3.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.googlenative.toolresults.v1beta3.outputs.FailureDetailResponse;
import com.pulumi.googlenative.toolresults.v1beta3.outputs.InconclusiveDetailResponse;
import com.pulumi.googlenative.toolresults.v1beta3.outputs.SkippedDetailResponse;
import com.pulumi.googlenative.toolresults.v1beta3.outputs.SuccessDetailResponse;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class OutcomeResponse {
    /**
     * @return More information about a FAILURE outcome. Returns INVALID_ARGUMENT if this field is set but the summary is not FAILURE. Optional
     * 
     */
    private final FailureDetailResponse failureDetail;
    /**
     * @return More information about an INCONCLUSIVE outcome. Returns INVALID_ARGUMENT if this field is set but the summary is not INCONCLUSIVE. Optional
     * 
     */
    private final InconclusiveDetailResponse inconclusiveDetail;
    /**
     * @return More information about a SKIPPED outcome. Returns INVALID_ARGUMENT if this field is set but the summary is not SKIPPED. Optional
     * 
     */
    private final SkippedDetailResponse skippedDetail;
    /**
     * @return More information about a SUCCESS outcome. Returns INVALID_ARGUMENT if this field is set but the summary is not SUCCESS. Optional
     * 
     */
    private final SuccessDetailResponse successDetail;
    /**
     * @return The simplest way to interpret a result. Required
     * 
     */
    private final String summary;

    @CustomType.Constructor
    private OutcomeResponse(
        @CustomType.Parameter("failureDetail") FailureDetailResponse failureDetail,
        @CustomType.Parameter("inconclusiveDetail") InconclusiveDetailResponse inconclusiveDetail,
        @CustomType.Parameter("skippedDetail") SkippedDetailResponse skippedDetail,
        @CustomType.Parameter("successDetail") SuccessDetailResponse successDetail,
        @CustomType.Parameter("summary") String summary) {
        this.failureDetail = failureDetail;
        this.inconclusiveDetail = inconclusiveDetail;
        this.skippedDetail = skippedDetail;
        this.successDetail = successDetail;
        this.summary = summary;
    }

    /**
     * @return More information about a FAILURE outcome. Returns INVALID_ARGUMENT if this field is set but the summary is not FAILURE. Optional
     * 
     */
    public FailureDetailResponse failureDetail() {
        return this.failureDetail;
    }
    /**
     * @return More information about an INCONCLUSIVE outcome. Returns INVALID_ARGUMENT if this field is set but the summary is not INCONCLUSIVE. Optional
     * 
     */
    public InconclusiveDetailResponse inconclusiveDetail() {
        return this.inconclusiveDetail;
    }
    /**
     * @return More information about a SKIPPED outcome. Returns INVALID_ARGUMENT if this field is set but the summary is not SKIPPED. Optional
     * 
     */
    public SkippedDetailResponse skippedDetail() {
        return this.skippedDetail;
    }
    /**
     * @return More information about a SUCCESS outcome. Returns INVALID_ARGUMENT if this field is set but the summary is not SUCCESS. Optional
     * 
     */
    public SuccessDetailResponse successDetail() {
        return this.successDetail;
    }
    /**
     * @return The simplest way to interpret a result. Required
     * 
     */
    public String summary() {
        return this.summary;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(OutcomeResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FailureDetailResponse failureDetail;
        private InconclusiveDetailResponse inconclusiveDetail;
        private SkippedDetailResponse skippedDetail;
        private SuccessDetailResponse successDetail;
        private String summary;

        public Builder() {
    	      // Empty
        }

        public Builder(OutcomeResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.failureDetail = defaults.failureDetail;
    	      this.inconclusiveDetail = defaults.inconclusiveDetail;
    	      this.skippedDetail = defaults.skippedDetail;
    	      this.successDetail = defaults.successDetail;
    	      this.summary = defaults.summary;
        }

        public Builder failureDetail(FailureDetailResponse failureDetail) {
            this.failureDetail = Objects.requireNonNull(failureDetail);
            return this;
        }
        public Builder inconclusiveDetail(InconclusiveDetailResponse inconclusiveDetail) {
            this.inconclusiveDetail = Objects.requireNonNull(inconclusiveDetail);
            return this;
        }
        public Builder skippedDetail(SkippedDetailResponse skippedDetail) {
            this.skippedDetail = Objects.requireNonNull(skippedDetail);
            return this;
        }
        public Builder successDetail(SuccessDetailResponse successDetail) {
            this.successDetail = Objects.requireNonNull(successDetail);
            return this;
        }
        public Builder summary(String summary) {
            this.summary = Objects.requireNonNull(summary);
            return this;
        }        public OutcomeResponse build() {
            return new OutcomeResponse(failureDetail, inconclusiveDetail, skippedDetail, successDetail, summary);
        }
    }
}
