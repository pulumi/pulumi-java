// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.servicemanagement.v1;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ServiceArgs extends com.pulumi.resources.ResourceArgs {

    public static final ServiceArgs Empty = new ServiceArgs();

    /**
     * ID of the project that produces and owns this service.
     * 
     */
    @Import(name="producerProjectId")
    private @Nullable Output<String> producerProjectId;

    /**
     * @return ID of the project that produces and owns this service.
     * 
     */
    public Optional<Output<String>> producerProjectId() {
        return Optional.ofNullable(this.producerProjectId);
    }

    /**
     * The name of the service. See the [overview](https://cloud.google.com/service-infrastructure/docs/overview) for naming requirements.
     * 
     */
    @Import(name="serviceName")
    private @Nullable Output<String> serviceName;

    /**
     * @return The name of the service. See the [overview](https://cloud.google.com/service-infrastructure/docs/overview) for naming requirements.
     * 
     */
    public Optional<Output<String>> serviceName() {
        return Optional.ofNullable(this.serviceName);
    }

    private ServiceArgs() {}

    private ServiceArgs(ServiceArgs $) {
        this.producerProjectId = $.producerProjectId;
        this.serviceName = $.serviceName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServiceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServiceArgs $;

        public Builder() {
            $ = new ServiceArgs();
        }

        public Builder(ServiceArgs defaults) {
            $ = new ServiceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param producerProjectId ID of the project that produces and owns this service.
         * 
         * @return builder
         * 
         */
        public Builder producerProjectId(@Nullable Output<String> producerProjectId) {
            $.producerProjectId = producerProjectId;
            return this;
        }

        /**
         * @param producerProjectId ID of the project that produces and owns this service.
         * 
         * @return builder
         * 
         */
        public Builder producerProjectId(String producerProjectId) {
            return producerProjectId(Output.of(producerProjectId));
        }

        /**
         * @param serviceName The name of the service. See the [overview](https://cloud.google.com/service-infrastructure/docs/overview) for naming requirements.
         * 
         * @return builder
         * 
         */
        public Builder serviceName(@Nullable Output<String> serviceName) {
            $.serviceName = serviceName;
            return this;
        }

        /**
         * @param serviceName The name of the service. See the [overview](https://cloud.google.com/service-infrastructure/docs/overview) for naming requirements.
         * 
         * @return builder
         * 
         */
        public Builder serviceName(String serviceName) {
            return serviceName(Output.of(serviceName));
        }

        public ServiceArgs build() {
            return $;
        }
    }

}
