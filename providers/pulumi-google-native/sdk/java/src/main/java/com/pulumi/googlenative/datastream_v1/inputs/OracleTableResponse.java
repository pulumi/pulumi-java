// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.datastream_v1.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.datastream_v1.inputs.OracleColumnResponse;
import java.lang.String;
import java.util.List;
import java.util.Objects;


/**
 * Oracle table.
 * 
 */
public final class OracleTableResponse extends com.pulumi.resources.InvokeArgs {

    public static final OracleTableResponse Empty = new OracleTableResponse();

    /**
     * Oracle columns in the schema. When unspecified as part of inclue/exclude lists, includes/excludes everything.
     * 
     */
    @Import(name="oracleColumns", required=true)
    private List<OracleColumnResponse> oracleColumns;

    public List<OracleColumnResponse> oracleColumns() {
        return this.oracleColumns;
    }

    /**
     * Table name.
     * 
     */
    @Import(name="table", required=true)
    private String table;

    public String table() {
        return this.table;
    }

    private OracleTableResponse() {}

    private OracleTableResponse(OracleTableResponse $) {
        this.oracleColumns = $.oracleColumns;
        this.table = $.table;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OracleTableResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OracleTableResponse $;

        public Builder() {
            $ = new OracleTableResponse();
        }

        public Builder(OracleTableResponse defaults) {
            $ = new OracleTableResponse(Objects.requireNonNull(defaults));
        }

        public Builder oracleColumns(List<OracleColumnResponse> oracleColumns) {
            $.oracleColumns = oracleColumns;
            return this;
        }

        public Builder oracleColumns(OracleColumnResponse... oracleColumns) {
            return oracleColumns(List.of(oracleColumns));
        }

        public Builder table(String table) {
            $.table = table;
            return this;
        }

        public OracleTableResponse build() {
            $.oracleColumns = Objects.requireNonNull($.oracleColumns, "expected parameter 'oracleColumns' to be non-null");
            $.table = Objects.requireNonNull($.table, "expected parameter 'table' to be non-null");
            return $;
        }
    }

}
