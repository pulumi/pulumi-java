// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.dlp.v2.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.googlenative.dlp.v2.outputs.GooglePrivacyDlpV2InfoTypeTransformationsResponse;
import com.pulumi.googlenative.dlp.v2.outputs.GooglePrivacyDlpV2RecordTransformationsResponse;
import com.pulumi.googlenative.dlp.v2.outputs.GooglePrivacyDlpV2TransformationErrorHandlingResponse;
import java.util.Objects;

@CustomType
public final class GooglePrivacyDlpV2DeidentifyConfigResponse {
    /**
     * @return Treat the dataset as free-form text and apply the same free text transformation everywhere.
     * 
     */
    private final GooglePrivacyDlpV2InfoTypeTransformationsResponse infoTypeTransformations;
    /**
     * @return Treat the dataset as structured. Transformations can be applied to specific locations within structured datasets, such as transforming a column within a table.
     * 
     */
    private final GooglePrivacyDlpV2RecordTransformationsResponse recordTransformations;
    /**
     * @return Mode for handling transformation errors. If left unspecified, the default mode is `TransformationErrorHandling.ThrowError`.
     * 
     */
    private final GooglePrivacyDlpV2TransformationErrorHandlingResponse transformationErrorHandling;

    @CustomType.Constructor
    private GooglePrivacyDlpV2DeidentifyConfigResponse(
        @CustomType.Parameter("infoTypeTransformations") GooglePrivacyDlpV2InfoTypeTransformationsResponse infoTypeTransformations,
        @CustomType.Parameter("recordTransformations") GooglePrivacyDlpV2RecordTransformationsResponse recordTransformations,
        @CustomType.Parameter("transformationErrorHandling") GooglePrivacyDlpV2TransformationErrorHandlingResponse transformationErrorHandling) {
        this.infoTypeTransformations = infoTypeTransformations;
        this.recordTransformations = recordTransformations;
        this.transformationErrorHandling = transformationErrorHandling;
    }

    /**
     * @return Treat the dataset as free-form text and apply the same free text transformation everywhere.
     * 
     */
    public GooglePrivacyDlpV2InfoTypeTransformationsResponse infoTypeTransformations() {
        return this.infoTypeTransformations;
    }
    /**
     * @return Treat the dataset as structured. Transformations can be applied to specific locations within structured datasets, such as transforming a column within a table.
     * 
     */
    public GooglePrivacyDlpV2RecordTransformationsResponse recordTransformations() {
        return this.recordTransformations;
    }
    /**
     * @return Mode for handling transformation errors. If left unspecified, the default mode is `TransformationErrorHandling.ThrowError`.
     * 
     */
    public GooglePrivacyDlpV2TransformationErrorHandlingResponse transformationErrorHandling() {
        return this.transformationErrorHandling;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GooglePrivacyDlpV2DeidentifyConfigResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GooglePrivacyDlpV2InfoTypeTransformationsResponse infoTypeTransformations;
        private GooglePrivacyDlpV2RecordTransformationsResponse recordTransformations;
        private GooglePrivacyDlpV2TransformationErrorHandlingResponse transformationErrorHandling;

        public Builder() {
    	      // Empty
        }

        public Builder(GooglePrivacyDlpV2DeidentifyConfigResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.infoTypeTransformations = defaults.infoTypeTransformations;
    	      this.recordTransformations = defaults.recordTransformations;
    	      this.transformationErrorHandling = defaults.transformationErrorHandling;
        }

        public Builder infoTypeTransformations(GooglePrivacyDlpV2InfoTypeTransformationsResponse infoTypeTransformations) {
            this.infoTypeTransformations = Objects.requireNonNull(infoTypeTransformations);
            return this;
        }
        public Builder recordTransformations(GooglePrivacyDlpV2RecordTransformationsResponse recordTransformations) {
            this.recordTransformations = Objects.requireNonNull(recordTransformations);
            return this;
        }
        public Builder transformationErrorHandling(GooglePrivacyDlpV2TransformationErrorHandlingResponse transformationErrorHandling) {
            this.transformationErrorHandling = Objects.requireNonNull(transformationErrorHandling);
            return this;
        }        public GooglePrivacyDlpV2DeidentifyConfigResponse build() {
            return new GooglePrivacyDlpV2DeidentifyConfigResponse(infoTypeTransformations, recordTransformations, transformationErrorHandling);
        }
    }
}
