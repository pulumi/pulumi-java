// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.ml_v1.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.ml_v1.inputs.GoogleCloudMlV1_StudyConfigParameterSpec_CategoricalValueSpecResponse;
import com.pulumi.googlenative.ml_v1.inputs.GoogleCloudMlV1_StudyConfigParameterSpec_DiscreteValueSpecResponse;
import com.pulumi.googlenative.ml_v1.inputs.GoogleCloudMlV1_StudyConfigParameterSpec_DoubleValueSpecResponse;
import com.pulumi.googlenative.ml_v1.inputs.GoogleCloudMlV1_StudyConfigParameterSpec_IntegerValueSpecResponse;
import com.pulumi.googlenative.ml_v1.inputs.GoogleCloudMlV1_StudyConfigParameterSpec_MatchingParentCategoricalValueSpecResponse;
import com.pulumi.googlenative.ml_v1.inputs.GoogleCloudMlV1_StudyConfigParameterSpec_MatchingParentDiscreteValueSpecResponse;
import com.pulumi.googlenative.ml_v1.inputs.GoogleCloudMlV1_StudyConfigParameterSpec_MatchingParentIntValueSpecResponse;
import java.lang.String;
import java.util.List;
import java.util.Objects;


/**
 * Represents a single parameter to optimize.
 * 
 */
public final class GoogleCloudMlV1_StudyConfig_ParameterSpecResponse extends com.pulumi.resources.InvokeArgs {

    public static final GoogleCloudMlV1_StudyConfig_ParameterSpecResponse Empty = new GoogleCloudMlV1_StudyConfig_ParameterSpecResponse();

    /**
     * The value spec for a &#39;CATEGORICAL&#39; parameter.
     * 
     */
    @Import(name="categoricalValueSpec", required=true)
    private GoogleCloudMlV1_StudyConfigParameterSpec_CategoricalValueSpecResponse categoricalValueSpec;

    /**
     * @return The value spec for a &#39;CATEGORICAL&#39; parameter.
     * 
     */
    public GoogleCloudMlV1_StudyConfigParameterSpec_CategoricalValueSpecResponse categoricalValueSpec() {
        return this.categoricalValueSpec;
    }

    /**
     * A child node is active if the parameter&#39;s value matches the child node&#39;s matching_parent_values. If two items in child_parameter_specs have the same name, they must have disjoint matching_parent_values.
     * 
     */
    @Import(name="childParameterSpecs", required=true)
    private List<GoogleCloudMlV1_StudyConfig_ParameterSpecResponse> childParameterSpecs;

    /**
     * @return A child node is active if the parameter&#39;s value matches the child node&#39;s matching_parent_values. If two items in child_parameter_specs have the same name, they must have disjoint matching_parent_values.
     * 
     */
    public List<GoogleCloudMlV1_StudyConfig_ParameterSpecResponse> childParameterSpecs() {
        return this.childParameterSpecs;
    }

    /**
     * The value spec for a &#39;DISCRETE&#39; parameter.
     * 
     */
    @Import(name="discreteValueSpec", required=true)
    private GoogleCloudMlV1_StudyConfigParameterSpec_DiscreteValueSpecResponse discreteValueSpec;

    /**
     * @return The value spec for a &#39;DISCRETE&#39; parameter.
     * 
     */
    public GoogleCloudMlV1_StudyConfigParameterSpec_DiscreteValueSpecResponse discreteValueSpec() {
        return this.discreteValueSpec;
    }

    /**
     * The value spec for a &#39;DOUBLE&#39; parameter.
     * 
     */
    @Import(name="doubleValueSpec", required=true)
    private GoogleCloudMlV1_StudyConfigParameterSpec_DoubleValueSpecResponse doubleValueSpec;

    /**
     * @return The value spec for a &#39;DOUBLE&#39; parameter.
     * 
     */
    public GoogleCloudMlV1_StudyConfigParameterSpec_DoubleValueSpecResponse doubleValueSpec() {
        return this.doubleValueSpec;
    }

    /**
     * The value spec for an &#39;INTEGER&#39; parameter.
     * 
     */
    @Import(name="integerValueSpec", required=true)
    private GoogleCloudMlV1_StudyConfigParameterSpec_IntegerValueSpecResponse integerValueSpec;

    /**
     * @return The value spec for an &#39;INTEGER&#39; parameter.
     * 
     */
    public GoogleCloudMlV1_StudyConfigParameterSpec_IntegerValueSpecResponse integerValueSpec() {
        return this.integerValueSpec;
    }

    /**
     * The parameter name must be unique amongst all ParameterSpecs.
     * 
     */
    @Import(name="parameter", required=true)
    private String parameter;

    /**
     * @return The parameter name must be unique amongst all ParameterSpecs.
     * 
     */
    public String parameter() {
        return this.parameter;
    }

    @Import(name="parentCategoricalValues", required=true)
    private GoogleCloudMlV1_StudyConfigParameterSpec_MatchingParentCategoricalValueSpecResponse parentCategoricalValues;

    public GoogleCloudMlV1_StudyConfigParameterSpec_MatchingParentCategoricalValueSpecResponse parentCategoricalValues() {
        return this.parentCategoricalValues;
    }

    @Import(name="parentDiscreteValues", required=true)
    private GoogleCloudMlV1_StudyConfigParameterSpec_MatchingParentDiscreteValueSpecResponse parentDiscreteValues;

    public GoogleCloudMlV1_StudyConfigParameterSpec_MatchingParentDiscreteValueSpecResponse parentDiscreteValues() {
        return this.parentDiscreteValues;
    }

    @Import(name="parentIntValues", required=true)
    private GoogleCloudMlV1_StudyConfigParameterSpec_MatchingParentIntValueSpecResponse parentIntValues;

    public GoogleCloudMlV1_StudyConfigParameterSpec_MatchingParentIntValueSpecResponse parentIntValues() {
        return this.parentIntValues;
    }

    /**
     * How the parameter should be scaled. Leave unset for categorical parameters.
     * 
     */
    @Import(name="scaleType", required=true)
    private String scaleType;

    /**
     * @return How the parameter should be scaled. Leave unset for categorical parameters.
     * 
     */
    public String scaleType() {
        return this.scaleType;
    }

    /**
     * The type of the parameter.
     * 
     */
    @Import(name="type", required=true)
    private String type;

    /**
     * @return The type of the parameter.
     * 
     */
    public String type() {
        return this.type;
    }

    private GoogleCloudMlV1_StudyConfig_ParameterSpecResponse() {}

    private GoogleCloudMlV1_StudyConfig_ParameterSpecResponse(GoogleCloudMlV1_StudyConfig_ParameterSpecResponse $) {
        this.categoricalValueSpec = $.categoricalValueSpec;
        this.childParameterSpecs = $.childParameterSpecs;
        this.discreteValueSpec = $.discreteValueSpec;
        this.doubleValueSpec = $.doubleValueSpec;
        this.integerValueSpec = $.integerValueSpec;
        this.parameter = $.parameter;
        this.parentCategoricalValues = $.parentCategoricalValues;
        this.parentDiscreteValues = $.parentDiscreteValues;
        this.parentIntValues = $.parentIntValues;
        this.scaleType = $.scaleType;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GoogleCloudMlV1_StudyConfig_ParameterSpecResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GoogleCloudMlV1_StudyConfig_ParameterSpecResponse $;

        public Builder() {
            $ = new GoogleCloudMlV1_StudyConfig_ParameterSpecResponse();
        }

        public Builder(GoogleCloudMlV1_StudyConfig_ParameterSpecResponse defaults) {
            $ = new GoogleCloudMlV1_StudyConfig_ParameterSpecResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param categoricalValueSpec The value spec for a &#39;CATEGORICAL&#39; parameter.
         * 
         * @return builder
         * 
         */
        public Builder categoricalValueSpec(GoogleCloudMlV1_StudyConfigParameterSpec_CategoricalValueSpecResponse categoricalValueSpec) {
            $.categoricalValueSpec = categoricalValueSpec;
            return this;
        }

        /**
         * @param childParameterSpecs A child node is active if the parameter&#39;s value matches the child node&#39;s matching_parent_values. If two items in child_parameter_specs have the same name, they must have disjoint matching_parent_values.
         * 
         * @return builder
         * 
         */
        public Builder childParameterSpecs(List<GoogleCloudMlV1_StudyConfig_ParameterSpecResponse> childParameterSpecs) {
            $.childParameterSpecs = childParameterSpecs;
            return this;
        }

        /**
         * @param childParameterSpecs A child node is active if the parameter&#39;s value matches the child node&#39;s matching_parent_values. If two items in child_parameter_specs have the same name, they must have disjoint matching_parent_values.
         * 
         * @return builder
         * 
         */
        public Builder childParameterSpecs(GoogleCloudMlV1_StudyConfig_ParameterSpecResponse... childParameterSpecs) {
            return childParameterSpecs(List.of(childParameterSpecs));
        }

        /**
         * @param discreteValueSpec The value spec for a &#39;DISCRETE&#39; parameter.
         * 
         * @return builder
         * 
         */
        public Builder discreteValueSpec(GoogleCloudMlV1_StudyConfigParameterSpec_DiscreteValueSpecResponse discreteValueSpec) {
            $.discreteValueSpec = discreteValueSpec;
            return this;
        }

        /**
         * @param doubleValueSpec The value spec for a &#39;DOUBLE&#39; parameter.
         * 
         * @return builder
         * 
         */
        public Builder doubleValueSpec(GoogleCloudMlV1_StudyConfigParameterSpec_DoubleValueSpecResponse doubleValueSpec) {
            $.doubleValueSpec = doubleValueSpec;
            return this;
        }

        /**
         * @param integerValueSpec The value spec for an &#39;INTEGER&#39; parameter.
         * 
         * @return builder
         * 
         */
        public Builder integerValueSpec(GoogleCloudMlV1_StudyConfigParameterSpec_IntegerValueSpecResponse integerValueSpec) {
            $.integerValueSpec = integerValueSpec;
            return this;
        }

        /**
         * @param parameter The parameter name must be unique amongst all ParameterSpecs.
         * 
         * @return builder
         * 
         */
        public Builder parameter(String parameter) {
            $.parameter = parameter;
            return this;
        }

        public Builder parentCategoricalValues(GoogleCloudMlV1_StudyConfigParameterSpec_MatchingParentCategoricalValueSpecResponse parentCategoricalValues) {
            $.parentCategoricalValues = parentCategoricalValues;
            return this;
        }

        public Builder parentDiscreteValues(GoogleCloudMlV1_StudyConfigParameterSpec_MatchingParentDiscreteValueSpecResponse parentDiscreteValues) {
            $.parentDiscreteValues = parentDiscreteValues;
            return this;
        }

        public Builder parentIntValues(GoogleCloudMlV1_StudyConfigParameterSpec_MatchingParentIntValueSpecResponse parentIntValues) {
            $.parentIntValues = parentIntValues;
            return this;
        }

        /**
         * @param scaleType How the parameter should be scaled. Leave unset for categorical parameters.
         * 
         * @return builder
         * 
         */
        public Builder scaleType(String scaleType) {
            $.scaleType = scaleType;
            return this;
        }

        /**
         * @param type The type of the parameter.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            $.type = type;
            return this;
        }

        public GoogleCloudMlV1_StudyConfig_ParameterSpecResponse build() {
            $.categoricalValueSpec = Objects.requireNonNull($.categoricalValueSpec, "expected parameter 'categoricalValueSpec' to be non-null");
            $.childParameterSpecs = Objects.requireNonNull($.childParameterSpecs, "expected parameter 'childParameterSpecs' to be non-null");
            $.discreteValueSpec = Objects.requireNonNull($.discreteValueSpec, "expected parameter 'discreteValueSpec' to be non-null");
            $.doubleValueSpec = Objects.requireNonNull($.doubleValueSpec, "expected parameter 'doubleValueSpec' to be non-null");
            $.integerValueSpec = Objects.requireNonNull($.integerValueSpec, "expected parameter 'integerValueSpec' to be non-null");
            $.parameter = Objects.requireNonNull($.parameter, "expected parameter 'parameter' to be non-null");
            $.parentCategoricalValues = Objects.requireNonNull($.parentCategoricalValues, "expected parameter 'parentCategoricalValues' to be non-null");
            $.parentDiscreteValues = Objects.requireNonNull($.parentDiscreteValues, "expected parameter 'parentDiscreteValues' to be non-null");
            $.parentIntValues = Objects.requireNonNull($.parentIntValues, "expected parameter 'parentIntValues' to be non-null");
            $.scaleType = Objects.requireNonNull($.scaleType, "expected parameter 'scaleType' to be non-null");
            $.type = Objects.requireNonNull($.type, "expected parameter 'type' to be non-null");
            return $;
        }
    }

}
