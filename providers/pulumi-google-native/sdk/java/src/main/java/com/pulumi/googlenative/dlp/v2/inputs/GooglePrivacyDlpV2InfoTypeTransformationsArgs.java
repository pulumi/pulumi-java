// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.dlp.v2.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.dlp.v2.inputs.GooglePrivacyDlpV2InfoTypeTransformationArgs;
import java.util.List;
import java.util.Objects;


/**
 * A type of transformation that will scan unstructured text and apply various `PrimitiveTransformation`s to each finding, where the transformation is applied to only values that were identified as a specific info_type.
 * 
 */
public final class GooglePrivacyDlpV2InfoTypeTransformationsArgs extends com.pulumi.resources.ResourceArgs {

    public static final GooglePrivacyDlpV2InfoTypeTransformationsArgs Empty = new GooglePrivacyDlpV2InfoTypeTransformationsArgs();

    /**
     * Transformation for each infoType. Cannot specify more than one for a given infoType.
     * 
     */
    @Import(name="transformations", required=true)
    private Output<List<GooglePrivacyDlpV2InfoTypeTransformationArgs>> transformations;

    /**
     * @return Transformation for each infoType. Cannot specify more than one for a given infoType.
     * 
     */
    public Output<List<GooglePrivacyDlpV2InfoTypeTransformationArgs>> transformations() {
        return this.transformations;
    }

    private GooglePrivacyDlpV2InfoTypeTransformationsArgs() {}

    private GooglePrivacyDlpV2InfoTypeTransformationsArgs(GooglePrivacyDlpV2InfoTypeTransformationsArgs $) {
        this.transformations = $.transformations;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GooglePrivacyDlpV2InfoTypeTransformationsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GooglePrivacyDlpV2InfoTypeTransformationsArgs $;

        public Builder() {
            $ = new GooglePrivacyDlpV2InfoTypeTransformationsArgs();
        }

        public Builder(GooglePrivacyDlpV2InfoTypeTransformationsArgs defaults) {
            $ = new GooglePrivacyDlpV2InfoTypeTransformationsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param transformations Transformation for each infoType. Cannot specify more than one for a given infoType.
         * 
         * @return builder
         * 
         */
        public Builder transformations(Output<List<GooglePrivacyDlpV2InfoTypeTransformationArgs>> transformations) {
            $.transformations = transformations;
            return this;
        }

        /**
         * @param transformations Transformation for each infoType. Cannot specify more than one for a given infoType.
         * 
         * @return builder
         * 
         */
        public Builder transformations(List<GooglePrivacyDlpV2InfoTypeTransformationArgs> transformations) {
            return transformations(Output.of(transformations));
        }

        /**
         * @param transformations Transformation for each infoType. Cannot specify more than one for a given infoType.
         * 
         * @return builder
         * 
         */
        public Builder transformations(GooglePrivacyDlpV2InfoTypeTransformationArgs... transformations) {
            return transformations(List.of(transformations));
        }

        public GooglePrivacyDlpV2InfoTypeTransformationsArgs build() {
            $.transformations = Objects.requireNonNull($.transformations, "expected parameter 'transformations' to be non-null");
            return $;
        }
    }

}
