// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.baremetalsolution.v2;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.googlenative.Utilities;
import com.pulumi.googlenative.baremetalsolution.v2.ProvisioningConfigArgs;
import com.pulumi.googlenative.baremetalsolution.v2.outputs.InstanceConfigResponse;
import com.pulumi.googlenative.baremetalsolution.v2.outputs.NetworkConfigResponse;
import com.pulumi.googlenative.baremetalsolution.v2.outputs.VolumeConfigResponse;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * Create new ProvisioningConfig.
 * Auto-naming is currently not supported for this resource.
 * Note - this resource&#39;s API doesn&#39;t support deletion. When deleted, the resource will persist
 * on Google Cloud even though it will be deleted from Pulumi state.
 * 
 */
@ResourceType(type="google-native:baremetalsolution/v2:ProvisioningConfig")
public class ProvisioningConfig extends com.pulumi.resources.CustomResource {
    /**
     * URI to Cloud Console UI view of this provisioning config.
     * 
     */
    @Export(name="cloudConsoleUri", type=String.class, parameters={})
    private Output<String> cloudConsoleUri;

    /**
     * @return URI to Cloud Console UI view of this provisioning config.
     * 
     */
    public Output<String> cloudConsoleUri() {
        return this.cloudConsoleUri;
    }
    /**
     * Optional. Email provided to send a confirmation with provisioning config to.
     * 
     */
    @Export(name="email", type=String.class, parameters={})
    private Output<String> email;

    /**
     * @return Optional. Email provided to send a confirmation with provisioning config to.
     * 
     */
    public Output<String> email() {
        return this.email;
    }
    /**
     * A service account to enable customers to access instance credentials upon handover.
     * 
     */
    @Export(name="handoverServiceAccount", type=String.class, parameters={})
    private Output<String> handoverServiceAccount;

    /**
     * @return A service account to enable customers to access instance credentials upon handover.
     * 
     */
    public Output<String> handoverServiceAccount() {
        return this.handoverServiceAccount;
    }
    /**
     * Instances to be created.
     * 
     */
    @Export(name="instances", type=List.class, parameters={InstanceConfigResponse.class})
    private Output<List<InstanceConfigResponse>> instances;

    /**
     * @return Instances to be created.
     * 
     */
    public Output<List<InstanceConfigResponse>> instances() {
        return this.instances;
    }
    @Export(name="location", type=String.class, parameters={})
    private Output<String> location;

    public Output<String> location() {
        return this.location;
    }
    /**
     * The name of the provisioning config.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The name of the provisioning config.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Networks to be created.
     * 
     */
    @Export(name="networks", type=List.class, parameters={NetworkConfigResponse.class})
    private Output<List<NetworkConfigResponse>> networks;

    /**
     * @return Networks to be created.
     * 
     */
    public Output<List<NetworkConfigResponse>> networks() {
        return this.networks;
    }
    @Export(name="project", type=String.class, parameters={})
    private Output<String> project;

    public Output<String> project() {
        return this.project;
    }
    /**
     * State of ProvisioningConfig.
     * 
     */
    @Export(name="state", type=String.class, parameters={})
    private Output<String> state;

    /**
     * @return State of ProvisioningConfig.
     * 
     */
    public Output<String> state() {
        return this.state;
    }
    /**
     * Optional status messages associated with the FAILED state.
     * 
     */
    @Export(name="statusMessage", type=String.class, parameters={})
    private Output<String> statusMessage;

    /**
     * @return Optional status messages associated with the FAILED state.
     * 
     */
    public Output<String> statusMessage() {
        return this.statusMessage;
    }
    /**
     * A generated ticket id to track provisioning request.
     * 
     */
    @Export(name="ticketId", type=String.class, parameters={})
    private Output<String> ticketId;

    /**
     * @return A generated ticket id to track provisioning request.
     * 
     */
    public Output<String> ticketId() {
        return this.ticketId;
    }
    /**
     * Last update timestamp.
     * 
     */
    @Export(name="updateTime", type=String.class, parameters={})
    private Output<String> updateTime;

    /**
     * @return Last update timestamp.
     * 
     */
    public Output<String> updateTime() {
        return this.updateTime;
    }
    /**
     * Volumes to be created.
     * 
     */
    @Export(name="volumes", type=List.class, parameters={VolumeConfigResponse.class})
    private Output<List<VolumeConfigResponse>> volumes;

    /**
     * @return Volumes to be created.
     * 
     */
    public Output<List<VolumeConfigResponse>> volumes() {
        return this.volumes;
    }
    /**
     * If true, VPC SC is enabled for the cluster.
     * 
     */
    @Export(name="vpcScEnabled", type=Boolean.class, parameters={})
    private Output<Boolean> vpcScEnabled;

    /**
     * @return If true, VPC SC is enabled for the cluster.
     * 
     */
    public Output<Boolean> vpcScEnabled() {
        return this.vpcScEnabled;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ProvisioningConfig(String name) {
        this(name, ProvisioningConfigArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ProvisioningConfig(String name, @Nullable ProvisioningConfigArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ProvisioningConfig(String name, @Nullable ProvisioningConfigArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("google-native:baremetalsolution/v2:ProvisioningConfig", name, args == null ? ProvisioningConfigArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private ProvisioningConfig(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("google-native:baremetalsolution/v2:ProvisioningConfig", name, null, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ProvisioningConfig get(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ProvisioningConfig(name, id, options);
    }
}
