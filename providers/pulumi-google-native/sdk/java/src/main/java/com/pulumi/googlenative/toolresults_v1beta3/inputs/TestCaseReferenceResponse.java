// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.toolresults_v1beta3.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * A reference to a test case. Test case references are canonically ordered lexicographically by these three factors: * First, by test_suite_name. * Second, by class_name. * Third, by name.
 * 
 */
public final class TestCaseReferenceResponse extends com.pulumi.resources.InvokeArgs {

    public static final TestCaseReferenceResponse Empty = new TestCaseReferenceResponse();

    /**
     * The name of the class.
     * 
     */
    @Import(name="className", required=true)
    private String className;

    /**
     * @return The name of the class.
     * 
     */
    public String className() {
        return this.className;
    }

    /**
     * The name of the test case. Required.
     * 
     */
    @Import(name="name", required=true)
    private String name;

    /**
     * @return The name of the test case. Required.
     * 
     */
    public String name() {
        return this.name;
    }

    /**
     * The name of the test suite to which this test case belongs.
     * 
     */
    @Import(name="testSuiteName", required=true)
    private String testSuiteName;

    /**
     * @return The name of the test suite to which this test case belongs.
     * 
     */
    public String testSuiteName() {
        return this.testSuiteName;
    }

    private TestCaseReferenceResponse() {}

    private TestCaseReferenceResponse(TestCaseReferenceResponse $) {
        this.className = $.className;
        this.name = $.name;
        this.testSuiteName = $.testSuiteName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TestCaseReferenceResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TestCaseReferenceResponse $;

        public Builder() {
            $ = new TestCaseReferenceResponse();
        }

        public Builder(TestCaseReferenceResponse defaults) {
            $ = new TestCaseReferenceResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param className The name of the class.
         * 
         * @return builder
         * 
         */
        public Builder className(String className) {
            $.className = className;
            return this;
        }

        /**
         * @param name The name of the test case. Required.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            $.name = name;
            return this;
        }

        /**
         * @param testSuiteName The name of the test suite to which this test case belongs.
         * 
         * @return builder
         * 
         */
        public Builder testSuiteName(String testSuiteName) {
            $.testSuiteName = testSuiteName;
            return this;
        }

        public TestCaseReferenceResponse build() {
            $.className = Objects.requireNonNull($.className, "expected parameter 'className' to be non-null");
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            $.testSuiteName = Objects.requireNonNull($.testSuiteName, "expected parameter 'testSuiteName' to be non-null");
            return $;
        }
    }

}
