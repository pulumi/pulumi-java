// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.securitycenter.v1.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetFolderBigQueryExportResult {
    /**
     * @return The time at which the big query export was created. This field is set by the server and will be ignored if provided on export on creation.
     * 
     */
    private final String createTime;
    /**
     * @return The dataset to write findings&#39; updates to. Its format is &#34;projects/[project_id]/datasets/[bigquery_dataset_id]&#34;. BigQuery Dataset unique ID must contain only letters (a-z, A-Z), numbers (0-9), or underscores (_).
     * 
     */
    private final String dataset;
    /**
     * @return The description of the export (max of 1024 characters).
     * 
     */
    private final String description;
    /**
     * @return Expression that defines the filter to apply across create/update events of findings. The expression is a list of zero or more restrictions combined via logical operators `AND` and `OR`. Parentheses are supported, and `OR` has higher precedence than `AND`. Restrictions have the form ` ` and may have a `-` character in front of them to indicate negation. The fields map to those defined in the corresponding resource. The supported operators are: * `=` for all value types. * `&gt;`, `&lt;`, `&gt;=`, `&lt;=` for integer values. * `:`, meaning substring matching, for strings. The supported value types are: * string literals in quotes. * integer literals without quotes. * boolean literals `true` and `false` without quotes.
     * 
     */
    private final String filter;
    /**
     * @return Email address of the user who last edited the big query export. This field is set by the server and will be ignored if provided on export creation or update.
     * 
     */
    private final String mostRecentEditor;
    /**
     * @return The relative resource name of this export. See: https://cloud.google.com/apis/design/resource_names#relative_resource_name. Example format: &#34;organizations/{organization_id}/bigQueryExports/{export_id}&#34; Example format: &#34;folders/{folder_id}/bigQueryExports/{export_id}&#34; Example format: &#34;projects/{project_id}/bigQueryExports/{export_id}&#34; This field is provided in responses, and is ignored when provided in create requests.
     * 
     */
    private final String name;
    /**
     * @return The service account that needs permission to create table, upload data to the big query dataset.
     * 
     */
    private final String principal;
    /**
     * @return The most recent time at which the big export was updated. This field is set by the server and will be ignored if provided on export creation or update.
     * 
     */
    private final String updateTime;

    @CustomType.Constructor
    private GetFolderBigQueryExportResult(
        @CustomType.Parameter("createTime") String createTime,
        @CustomType.Parameter("dataset") String dataset,
        @CustomType.Parameter("description") String description,
        @CustomType.Parameter("filter") String filter,
        @CustomType.Parameter("mostRecentEditor") String mostRecentEditor,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("principal") String principal,
        @CustomType.Parameter("updateTime") String updateTime) {
        this.createTime = createTime;
        this.dataset = dataset;
        this.description = description;
        this.filter = filter;
        this.mostRecentEditor = mostRecentEditor;
        this.name = name;
        this.principal = principal;
        this.updateTime = updateTime;
    }

    /**
     * @return The time at which the big query export was created. This field is set by the server and will be ignored if provided on export on creation.
     * 
     */
    public String createTime() {
        return this.createTime;
    }
    /**
     * @return The dataset to write findings&#39; updates to. Its format is &#34;projects/[project_id]/datasets/[bigquery_dataset_id]&#34;. BigQuery Dataset unique ID must contain only letters (a-z, A-Z), numbers (0-9), or underscores (_).
     * 
     */
    public String dataset() {
        return this.dataset;
    }
    /**
     * @return The description of the export (max of 1024 characters).
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return Expression that defines the filter to apply across create/update events of findings. The expression is a list of zero or more restrictions combined via logical operators `AND` and `OR`. Parentheses are supported, and `OR` has higher precedence than `AND`. Restrictions have the form ` ` and may have a `-` character in front of them to indicate negation. The fields map to those defined in the corresponding resource. The supported operators are: * `=` for all value types. * `&gt;`, `&lt;`, `&gt;=`, `&lt;=` for integer values. * `:`, meaning substring matching, for strings. The supported value types are: * string literals in quotes. * integer literals without quotes. * boolean literals `true` and `false` without quotes.
     * 
     */
    public String filter() {
        return this.filter;
    }
    /**
     * @return Email address of the user who last edited the big query export. This field is set by the server and will be ignored if provided on export creation or update.
     * 
     */
    public String mostRecentEditor() {
        return this.mostRecentEditor;
    }
    /**
     * @return The relative resource name of this export. See: https://cloud.google.com/apis/design/resource_names#relative_resource_name. Example format: &#34;organizations/{organization_id}/bigQueryExports/{export_id}&#34; Example format: &#34;folders/{folder_id}/bigQueryExports/{export_id}&#34; Example format: &#34;projects/{project_id}/bigQueryExports/{export_id}&#34; This field is provided in responses, and is ignored when provided in create requests.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The service account that needs permission to create table, upload data to the big query dataset.
     * 
     */
    public String principal() {
        return this.principal;
    }
    /**
     * @return The most recent time at which the big export was updated. This field is set by the server and will be ignored if provided on export creation or update.
     * 
     */
    public String updateTime() {
        return this.updateTime;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetFolderBigQueryExportResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String createTime;
        private String dataset;
        private String description;
        private String filter;
        private String mostRecentEditor;
        private String name;
        private String principal;
        private String updateTime;

        public Builder() {
    	      // Empty
        }

        public Builder(GetFolderBigQueryExportResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.createTime = defaults.createTime;
    	      this.dataset = defaults.dataset;
    	      this.description = defaults.description;
    	      this.filter = defaults.filter;
    	      this.mostRecentEditor = defaults.mostRecentEditor;
    	      this.name = defaults.name;
    	      this.principal = defaults.principal;
    	      this.updateTime = defaults.updateTime;
        }

        public Builder createTime(String createTime) {
            this.createTime = Objects.requireNonNull(createTime);
            return this;
        }
        public Builder dataset(String dataset) {
            this.dataset = Objects.requireNonNull(dataset);
            return this;
        }
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        public Builder filter(String filter) {
            this.filter = Objects.requireNonNull(filter);
            return this;
        }
        public Builder mostRecentEditor(String mostRecentEditor) {
            this.mostRecentEditor = Objects.requireNonNull(mostRecentEditor);
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder principal(String principal) {
            this.principal = Objects.requireNonNull(principal);
            return this;
        }
        public Builder updateTime(String updateTime) {
            this.updateTime = Objects.requireNonNull(updateTime);
            return this;
        }        public GetFolderBigQueryExportResult build() {
            return new GetFolderBigQueryExportResult(createTime, dataset, description, filter, mostRecentEditor, name, principal, updateTime);
        }
    }
}
