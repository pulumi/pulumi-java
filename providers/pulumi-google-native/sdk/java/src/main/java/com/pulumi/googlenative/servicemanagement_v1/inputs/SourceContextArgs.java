// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.servicemanagement_v1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * `SourceContext` represents information about the source of a protobuf element, like the file in which it is defined.
 * 
 */
public final class SourceContextArgs extends com.pulumi.resources.ResourceArgs {

    public static final SourceContextArgs Empty = new SourceContextArgs();

    /**
     * The path-qualified name of the .proto file that contained the associated protobuf element. For example: `&#34;google/protobuf/source_context.proto&#34;`.
     * 
     */
    @Import(name="fileName")
      private final @Nullable Output<String> fileName;

    public Output<String> fileName() {
        return this.fileName == null ? Codegen.empty() : this.fileName;
    }

    public SourceContextArgs(@Nullable Output<String> fileName) {
        this.fileName = fileName;
    }

    private SourceContextArgs() {
        this.fileName = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SourceContextArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> fileName;

        public Builder() {
    	      // Empty
        }

        public Builder(SourceContextArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.fileName = defaults.fileName;
        }

        public Builder fileName(@Nullable Output<String> fileName) {
            this.fileName = fileName;
            return this;
        }
        public Builder fileName(@Nullable String fileName) {
            this.fileName = Codegen.ofNullable(fileName);
            return this;
        }        public SourceContextArgs build() {
            return new SourceContextArgs(fileName);
        }
    }
}
