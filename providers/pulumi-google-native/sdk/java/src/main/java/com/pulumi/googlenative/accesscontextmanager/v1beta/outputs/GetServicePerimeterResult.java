// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.accesscontextmanager.v1beta.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.googlenative.accesscontextmanager.v1beta.outputs.ServicePerimeterConfigResponse;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetServicePerimeterResult {
    /**
     * @return Description of the `ServicePerimeter` and its use. Does not affect behavior.
     * 
     */
    private final String description;
    /**
     * @return Resource name for the ServicePerimeter. The `short_name` component must begin with a letter and only include alphanumeric and &#39;_&#39;. Format: `accessPolicies/{policy_id}/servicePerimeters/{short_name}`
     * 
     */
    private final String name;
    /**
     * @return Perimeter type indicator. A single project is allowed to be a member of single regular perimeter, but multiple service perimeter bridges. A project cannot be a included in a perimeter bridge without being included in regular perimeter. For perimeter bridges, restricted/unrestricted service lists as well as access lists must be empty.
     * 
     */
    private final String perimeterType;
    /**
     * @return Current ServicePerimeter configuration. Specifies sets of resources, restricted/unrestricted services and access levels that determine perimeter content and boundaries.
     * 
     */
    private final ServicePerimeterConfigResponse status;
    /**
     * @return Human readable title. Must be unique within the Policy.
     * 
     */
    private final String title;

    @CustomType.Constructor
    private GetServicePerimeterResult(
        @CustomType.Parameter("description") String description,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("perimeterType") String perimeterType,
        @CustomType.Parameter("status") ServicePerimeterConfigResponse status,
        @CustomType.Parameter("title") String title) {
        this.description = description;
        this.name = name;
        this.perimeterType = perimeterType;
        this.status = status;
        this.title = title;
    }

    /**
     * @return Description of the `ServicePerimeter` and its use. Does not affect behavior.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return Resource name for the ServicePerimeter. The `short_name` component must begin with a letter and only include alphanumeric and &#39;_&#39;. Format: `accessPolicies/{policy_id}/servicePerimeters/{short_name}`
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Perimeter type indicator. A single project is allowed to be a member of single regular perimeter, but multiple service perimeter bridges. A project cannot be a included in a perimeter bridge without being included in regular perimeter. For perimeter bridges, restricted/unrestricted service lists as well as access lists must be empty.
     * 
     */
    public String perimeterType() {
        return this.perimeterType;
    }
    /**
     * @return Current ServicePerimeter configuration. Specifies sets of resources, restricted/unrestricted services and access levels that determine perimeter content and boundaries.
     * 
     */
    public ServicePerimeterConfigResponse status() {
        return this.status;
    }
    /**
     * @return Human readable title. Must be unique within the Policy.
     * 
     */
    public String title() {
        return this.title;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetServicePerimeterResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String description;
        private String name;
        private String perimeterType;
        private ServicePerimeterConfigResponse status;
        private String title;

        public Builder() {
    	      // Empty
        }

        public Builder(GetServicePerimeterResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.name = defaults.name;
    	      this.perimeterType = defaults.perimeterType;
    	      this.status = defaults.status;
    	      this.title = defaults.title;
        }

        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder perimeterType(String perimeterType) {
            this.perimeterType = Objects.requireNonNull(perimeterType);
            return this;
        }
        public Builder status(ServicePerimeterConfigResponse status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }
        public Builder title(String title) {
            this.title = Objects.requireNonNull(title);
            return this;
        }        public GetServicePerimeterResult build() {
            return new GetServicePerimeterResult(description, name, perimeterType, status, title);
        }
    }
}
