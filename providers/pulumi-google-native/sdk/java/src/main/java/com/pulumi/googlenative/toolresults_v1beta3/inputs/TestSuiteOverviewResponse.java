// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.toolresults_v1beta3.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.toolresults_v1beta3.inputs.DurationResponse;
import com.pulumi.googlenative.toolresults_v1beta3.inputs.FileReferenceResponse;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;


/**
 * A summary of a test suite result either parsed from XML or uploaded directly by a user. Note: the API related comments are for StepService only. This message is also being used in ExecutionService in a read only mode for the corresponding step.
 * 
 */
public final class TestSuiteOverviewResponse extends com.pulumi.resources.InvokeArgs {

    public static final TestSuiteOverviewResponse Empty = new TestSuiteOverviewResponse();

    /**
     * Elapsed time of test suite.
     * 
     */
    @Import(name="elapsedTime", required=true)
    private DurationResponse elapsedTime;

    /**
     * @return Elapsed time of test suite.
     * 
     */
    public DurationResponse elapsedTime() {
        return this.elapsedTime;
    }

    /**
     * Number of test cases in error, typically set by the service by parsing the xml_source. - In create/response: always set - In update request: never
     * 
     */
    @Import(name="errorCount", required=true)
    private Integer errorCount;

    /**
     * @return Number of test cases in error, typically set by the service by parsing the xml_source. - In create/response: always set - In update request: never
     * 
     */
    public Integer errorCount() {
        return this.errorCount;
    }

    /**
     * Number of failed test cases, typically set by the service by parsing the xml_source. May also be set by the user. - In create/response: always set - In update request: never
     * 
     */
    @Import(name="failureCount", required=true)
    private Integer failureCount;

    /**
     * @return Number of failed test cases, typically set by the service by parsing the xml_source. May also be set by the user. - In create/response: always set - In update request: never
     * 
     */
    public Integer failureCount() {
        return this.failureCount;
    }

    /**
     * Number of flaky test cases, set by the service by rolling up flaky test attempts. Present only for rollup test suite overview at environment level. A step cannot have flaky test cases.
     * 
     */
    @Import(name="flakyCount", required=true)
    private Integer flakyCount;

    /**
     * @return Number of flaky test cases, set by the service by rolling up flaky test attempts. Present only for rollup test suite overview at environment level. A step cannot have flaky test cases.
     * 
     */
    public Integer flakyCount() {
        return this.flakyCount;
    }

    /**
     * The name of the test suite. - In create/response: always set - In update request: never
     * 
     */
    @Import(name="name", required=true)
    private String name;

    /**
     * @return The name of the test suite. - In create/response: always set - In update request: never
     * 
     */
    public String name() {
        return this.name;
    }

    /**
     * Number of test cases not run, typically set by the service by parsing the xml_source. - In create/response: always set - In update request: never
     * 
     */
    @Import(name="skippedCount", required=true)
    private Integer skippedCount;

    /**
     * @return Number of test cases not run, typically set by the service by parsing the xml_source. - In create/response: always set - In update request: never
     * 
     */
    public Integer skippedCount() {
        return this.skippedCount;
    }

    /**
     * Number of test cases, typically set by the service by parsing the xml_source. - In create/response: always set - In update request: never
     * 
     */
    @Import(name="totalCount", required=true)
    private Integer totalCount;

    /**
     * @return Number of test cases, typically set by the service by parsing the xml_source. - In create/response: always set - In update request: never
     * 
     */
    public Integer totalCount() {
        return this.totalCount;
    }

    /**
     * If this test suite was parsed from XML, this is the URI where the original XML file is stored. Note: Multiple test suites can share the same xml_source Returns INVALID_ARGUMENT if the uri format is not supported. - In create/response: optional - In update request: never
     * 
     */
    @Import(name="xmlSource", required=true)
    private FileReferenceResponse xmlSource;

    /**
     * @return If this test suite was parsed from XML, this is the URI where the original XML file is stored. Note: Multiple test suites can share the same xml_source Returns INVALID_ARGUMENT if the uri format is not supported. - In create/response: optional - In update request: never
     * 
     */
    public FileReferenceResponse xmlSource() {
        return this.xmlSource;
    }

    private TestSuiteOverviewResponse() {}

    private TestSuiteOverviewResponse(TestSuiteOverviewResponse $) {
        this.elapsedTime = $.elapsedTime;
        this.errorCount = $.errorCount;
        this.failureCount = $.failureCount;
        this.flakyCount = $.flakyCount;
        this.name = $.name;
        this.skippedCount = $.skippedCount;
        this.totalCount = $.totalCount;
        this.xmlSource = $.xmlSource;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TestSuiteOverviewResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TestSuiteOverviewResponse $;

        public Builder() {
            $ = new TestSuiteOverviewResponse();
        }

        public Builder(TestSuiteOverviewResponse defaults) {
            $ = new TestSuiteOverviewResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param elapsedTime Elapsed time of test suite.
         * 
         * @return builder
         * 
         */
        public Builder elapsedTime(DurationResponse elapsedTime) {
            $.elapsedTime = elapsedTime;
            return this;
        }

        /**
         * @param errorCount Number of test cases in error, typically set by the service by parsing the xml_source. - In create/response: always set - In update request: never
         * 
         * @return builder
         * 
         */
        public Builder errorCount(Integer errorCount) {
            $.errorCount = errorCount;
            return this;
        }

        /**
         * @param failureCount Number of failed test cases, typically set by the service by parsing the xml_source. May also be set by the user. - In create/response: always set - In update request: never
         * 
         * @return builder
         * 
         */
        public Builder failureCount(Integer failureCount) {
            $.failureCount = failureCount;
            return this;
        }

        /**
         * @param flakyCount Number of flaky test cases, set by the service by rolling up flaky test attempts. Present only for rollup test suite overview at environment level. A step cannot have flaky test cases.
         * 
         * @return builder
         * 
         */
        public Builder flakyCount(Integer flakyCount) {
            $.flakyCount = flakyCount;
            return this;
        }

        /**
         * @param name The name of the test suite. - In create/response: always set - In update request: never
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            $.name = name;
            return this;
        }

        /**
         * @param skippedCount Number of test cases not run, typically set by the service by parsing the xml_source. - In create/response: always set - In update request: never
         * 
         * @return builder
         * 
         */
        public Builder skippedCount(Integer skippedCount) {
            $.skippedCount = skippedCount;
            return this;
        }

        /**
         * @param totalCount Number of test cases, typically set by the service by parsing the xml_source. - In create/response: always set - In update request: never
         * 
         * @return builder
         * 
         */
        public Builder totalCount(Integer totalCount) {
            $.totalCount = totalCount;
            return this;
        }

        /**
         * @param xmlSource If this test suite was parsed from XML, this is the URI where the original XML file is stored. Note: Multiple test suites can share the same xml_source Returns INVALID_ARGUMENT if the uri format is not supported. - In create/response: optional - In update request: never
         * 
         * @return builder
         * 
         */
        public Builder xmlSource(FileReferenceResponse xmlSource) {
            $.xmlSource = xmlSource;
            return this;
        }

        public TestSuiteOverviewResponse build() {
            $.elapsedTime = Objects.requireNonNull($.elapsedTime, "expected parameter 'elapsedTime' to be non-null");
            $.errorCount = Objects.requireNonNull($.errorCount, "expected parameter 'errorCount' to be non-null");
            $.failureCount = Objects.requireNonNull($.failureCount, "expected parameter 'failureCount' to be non-null");
            $.flakyCount = Objects.requireNonNull($.flakyCount, "expected parameter 'flakyCount' to be non-null");
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            $.skippedCount = Objects.requireNonNull($.skippedCount, "expected parameter 'skippedCount' to be non-null");
            $.totalCount = Objects.requireNonNull($.totalCount, "expected parameter 'totalCount' to be non-null");
            $.xmlSource = Objects.requireNonNull($.xmlSource, "expected parameter 'xmlSource' to be non-null");
            return $;
        }
    }

}
