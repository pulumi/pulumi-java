// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.transcoder_v1.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;


/**
 * The mapping for the `Job.edit_list` atoms with text `EditAtom.inputs`.
 * 
 */
public final class TextMappingResponse extends com.pulumi.resources.InvokeArgs {

    public static final TextMappingResponse Empty = new TextMappingResponse();

    /**
     * The `EditAtom.key` that references atom with text inputs in the `Job.edit_list`.
     * 
     */
    @Import(name="atomKey", required=true)
    private String atomKey;

    /**
     * @return The `EditAtom.key` that references atom with text inputs in the `Job.edit_list`.
     * 
     */
    public String atomKey() {
        return this.atomKey;
    }

    /**
     * The `Input.key` that identifies the input file.
     * 
     */
    @Import(name="inputKey", required=true)
    private String inputKey;

    /**
     * @return The `Input.key` that identifies the input file.
     * 
     */
    public String inputKey() {
        return this.inputKey;
    }

    /**
     * The zero-based index of the track in the input file.
     * 
     */
    @Import(name="inputTrack", required=true)
    private Integer inputTrack;

    /**
     * @return The zero-based index of the track in the input file.
     * 
     */
    public Integer inputTrack() {
        return this.inputTrack;
    }

    private TextMappingResponse() {}

    private TextMappingResponse(TextMappingResponse $) {
        this.atomKey = $.atomKey;
        this.inputKey = $.inputKey;
        this.inputTrack = $.inputTrack;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TextMappingResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TextMappingResponse $;

        public Builder() {
            $ = new TextMappingResponse();
        }

        public Builder(TextMappingResponse defaults) {
            $ = new TextMappingResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param atomKey The `EditAtom.key` that references atom with text inputs in the `Job.edit_list`.
         * 
         * @return builder
         * 
         */
        public Builder atomKey(String atomKey) {
            $.atomKey = atomKey;
            return this;
        }

        /**
         * @param inputKey The `Input.key` that identifies the input file.
         * 
         * @return builder
         * 
         */
        public Builder inputKey(String inputKey) {
            $.inputKey = inputKey;
            return this;
        }

        /**
         * @param inputTrack The zero-based index of the track in the input file.
         * 
         * @return builder
         * 
         */
        public Builder inputTrack(Integer inputTrack) {
            $.inputTrack = inputTrack;
            return this;
        }

        public TextMappingResponse build() {
            $.atomKey = Objects.requireNonNull($.atomKey, "expected parameter 'atomKey' to be non-null");
            $.inputKey = Objects.requireNonNull($.inputKey, "expected parameter 'inputKey' to be non-null");
            $.inputTrack = Objects.requireNonNull($.inputTrack, "expected parameter 'inputTrack' to be non-null");
            return $;
        }
    }

}
