// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.iam.v1;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.iam.v1.enums.KeyKeyAlgorithm;
import com.pulumi.googlenative.iam.v1.enums.KeyPrivateKeyType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class KeyArgs extends com.pulumi.resources.ResourceArgs {

    public static final KeyArgs Empty = new KeyArgs();

    /**
     * Which type of key and algorithm to use for the key. The default is currently a 2K RSA key. However this may change in the future.
     * 
     */
    @Import(name="keyAlgorithm")
    private @Nullable Output<KeyKeyAlgorithm> keyAlgorithm;

    /**
     * @return Which type of key and algorithm to use for the key. The default is currently a 2K RSA key. However this may change in the future.
     * 
     */
    public Optional<Output<KeyKeyAlgorithm>> keyAlgorithm() {
        return Optional.ofNullable(this.keyAlgorithm);
    }

    /**
     * The output format of the private key. The default value is `TYPE_GOOGLE_CREDENTIALS_FILE`, which is the Google Credentials File format.
     * 
     */
    @Import(name="privateKeyType")
    private @Nullable Output<KeyPrivateKeyType> privateKeyType;

    /**
     * @return The output format of the private key. The default value is `TYPE_GOOGLE_CREDENTIALS_FILE`, which is the Google Credentials File format.
     * 
     */
    public Optional<Output<KeyPrivateKeyType>> privateKeyType() {
        return Optional.ofNullable(this.privateKeyType);
    }

    @Import(name="project")
    private @Nullable Output<String> project;

    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    @Import(name="serviceAccountId", required=true)
    private Output<String> serviceAccountId;

    public Output<String> serviceAccountId() {
        return this.serviceAccountId;
    }

    private KeyArgs() {}

    private KeyArgs(KeyArgs $) {
        this.keyAlgorithm = $.keyAlgorithm;
        this.privateKeyType = $.privateKeyType;
        this.project = $.project;
        this.serviceAccountId = $.serviceAccountId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(KeyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private KeyArgs $;

        public Builder() {
            $ = new KeyArgs();
        }

        public Builder(KeyArgs defaults) {
            $ = new KeyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param keyAlgorithm Which type of key and algorithm to use for the key. The default is currently a 2K RSA key. However this may change in the future.
         * 
         * @return builder
         * 
         */
        public Builder keyAlgorithm(@Nullable Output<KeyKeyAlgorithm> keyAlgorithm) {
            $.keyAlgorithm = keyAlgorithm;
            return this;
        }

        /**
         * @param keyAlgorithm Which type of key and algorithm to use for the key. The default is currently a 2K RSA key. However this may change in the future.
         * 
         * @return builder
         * 
         */
        public Builder keyAlgorithm(KeyKeyAlgorithm keyAlgorithm) {
            return keyAlgorithm(Output.of(keyAlgorithm));
        }

        /**
         * @param privateKeyType The output format of the private key. The default value is `TYPE_GOOGLE_CREDENTIALS_FILE`, which is the Google Credentials File format.
         * 
         * @return builder
         * 
         */
        public Builder privateKeyType(@Nullable Output<KeyPrivateKeyType> privateKeyType) {
            $.privateKeyType = privateKeyType;
            return this;
        }

        /**
         * @param privateKeyType The output format of the private key. The default value is `TYPE_GOOGLE_CREDENTIALS_FILE`, which is the Google Credentials File format.
         * 
         * @return builder
         * 
         */
        public Builder privateKeyType(KeyPrivateKeyType privateKeyType) {
            return privateKeyType(Output.of(privateKeyType));
        }

        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        public Builder project(String project) {
            return project(Output.of(project));
        }

        public Builder serviceAccountId(Output<String> serviceAccountId) {
            $.serviceAccountId = serviceAccountId;
            return this;
        }

        public Builder serviceAccountId(String serviceAccountId) {
            return serviceAccountId(Output.of(serviceAccountId));
        }

        public KeyArgs build() {
            $.serviceAccountId = Objects.requireNonNull($.serviceAccountId, "expected parameter 'serviceAccountId' to be non-null");
            return $;
        }
    }

}
