// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.containeranalysis_v1alpha1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.containeranalysis_v1alpha1.inputs.DistributionArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * This represents a particular package that is distributed over various channels. e.g. glibc (aka libc6) is distributed by many, at various versions.
 * 
 */
public final class PackageArgs extends com.pulumi.resources.ResourceArgs {

    public static final PackageArgs Empty = new PackageArgs();

    /**
     * The various channels by which a package is distributed.
     * 
     */
    @Import(name="distribution")
    private @Nullable Output<List<DistributionArgs>> distribution;

    /**
     * @return The various channels by which a package is distributed.
     * 
     */
    public Optional<Output<List<DistributionArgs>>> distribution() {
        return Optional.ofNullable(this.distribution);
    }

    /**
     * The name of the package.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the package.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    private PackageArgs() {}

    private PackageArgs(PackageArgs $) {
        this.distribution = $.distribution;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PackageArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PackageArgs $;

        public Builder() {
            $ = new PackageArgs();
        }

        public Builder(PackageArgs defaults) {
            $ = new PackageArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param distribution The various channels by which a package is distributed.
         * 
         * @return builder
         * 
         */
        public Builder distribution(@Nullable Output<List<DistributionArgs>> distribution) {
            $.distribution = distribution;
            return this;
        }

        /**
         * @param distribution The various channels by which a package is distributed.
         * 
         * @return builder
         * 
         */
        public Builder distribution(List<DistributionArgs> distribution) {
            return distribution(Output.of(distribution));
        }

        /**
         * @param distribution The various channels by which a package is distributed.
         * 
         * @return builder
         * 
         */
        public Builder distribution(DistributionArgs... distribution) {
            return distribution(List.of(distribution));
        }

        /**
         * @param name The name of the package.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the package.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public PackageArgs build() {
            return $;
        }
    }

}
