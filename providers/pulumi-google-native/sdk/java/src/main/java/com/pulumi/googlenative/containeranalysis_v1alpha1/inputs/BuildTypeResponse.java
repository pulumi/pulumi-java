// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.containeranalysis_v1alpha1.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.containeranalysis_v1alpha1.inputs.BuildSignatureResponse;
import java.lang.String;
import java.util.Objects;


/**
 * Note holding the version of the provider&#39;s builder and the signature of the provenance message in linked BuildDetails.
 * 
 */
public final class BuildTypeResponse extends com.pulumi.resources.InvokeArgs {

    public static final BuildTypeResponse Empty = new BuildTypeResponse();

    /**
     * Version of the builder which produced this Note.
     * 
     */
    @Import(name="builderVersion", required=true)
    private String builderVersion;

    public String builderVersion() {
        return this.builderVersion;
    }

    /**
     * Signature of the build in Occurrences pointing to the Note containing this `BuilderDetails`.
     * 
     */
    @Import(name="signature", required=true)
    private BuildSignatureResponse signature;

    public BuildSignatureResponse signature() {
        return this.signature;
    }

    private BuildTypeResponse() {}

    private BuildTypeResponse(BuildTypeResponse $) {
        this.builderVersion = $.builderVersion;
        this.signature = $.signature;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BuildTypeResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BuildTypeResponse $;

        public Builder() {
            $ = new BuildTypeResponse();
        }

        public Builder(BuildTypeResponse defaults) {
            $ = new BuildTypeResponse(Objects.requireNonNull(defaults));
        }

        public Builder builderVersion(String builderVersion) {
            $.builderVersion = builderVersion;
            return this;
        }

        public Builder signature(BuildSignatureResponse signature) {
            $.signature = signature;
            return this;
        }

        public BuildTypeResponse build() {
            $.builderVersion = Objects.requireNonNull($.builderVersion, "expected parameter 'builderVersion' to be non-null");
            $.signature = Objects.requireNonNull($.signature, "expected parameter 'signature' to be non-null");
            return $;
        }
    }

}
