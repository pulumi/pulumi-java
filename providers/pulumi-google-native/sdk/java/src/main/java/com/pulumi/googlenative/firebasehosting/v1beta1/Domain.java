// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.firebasehosting.v1beta1;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.googlenative.Utilities;
import com.pulumi.googlenative.firebasehosting.v1beta1.DomainArgs;
import com.pulumi.googlenative.firebasehosting.v1beta1.outputs.DomainProvisioningResponse;
import com.pulumi.googlenative.firebasehosting.v1beta1.outputs.DomainRedirectResponse;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * Creates a domain mapping on the specified site.
 * Auto-naming is currently not supported for this resource.
 * 
 */
@ResourceType(type="google-native:firebasehosting/v1beta1:Domain")
public class Domain extends com.pulumi.resources.CustomResource {
    /**
     * The domain name of the association.
     * 
     */
    @Export(name="domainName", type=String.class, parameters={})
    private Output<String> domainName;

    /**
     * @return The domain name of the association.
     * 
     */
    public Output<String> domainName() {
        return this.domainName;
    }
    /**
     * If set, the domain should redirect with the provided parameters.
     * 
     */
    @Export(name="domainRedirect", type=DomainRedirectResponse.class, parameters={})
    private Output<DomainRedirectResponse> domainRedirect;

    /**
     * @return If set, the domain should redirect with the provided parameters.
     * 
     */
    public Output<DomainRedirectResponse> domainRedirect() {
        return this.domainRedirect;
    }
    @Export(name="project", type=String.class, parameters={})
    private Output<String> project;

    public Output<String> project() {
        return this.project;
    }
    /**
     * Information about the provisioning of certificates and the health of the DNS resolution for the domain.
     * 
     */
    @Export(name="provisioning", type=DomainProvisioningResponse.class, parameters={})
    private Output<DomainProvisioningResponse> provisioning;

    /**
     * @return Information about the provisioning of certificates and the health of the DNS resolution for the domain.
     * 
     */
    public Output<DomainProvisioningResponse> provisioning() {
        return this.provisioning;
    }
    /**
     * The site name of the association.
     * 
     */
    @Export(name="site", type=String.class, parameters={})
    private Output<String> site;

    /**
     * @return The site name of the association.
     * 
     */
    public Output<String> site() {
        return this.site;
    }
    @Export(name="siteId", type=String.class, parameters={})
    private Output<String> siteId;

    public Output<String> siteId() {
        return this.siteId;
    }
    /**
     * Additional status of the domain association.
     * 
     */
    @Export(name="status", type=String.class, parameters={})
    private Output<String> status;

    /**
     * @return Additional status of the domain association.
     * 
     */
    public Output<String> status() {
        return this.status;
    }
    /**
     * The time at which the domain was last updated.
     * 
     */
    @Export(name="updateTime", type=String.class, parameters={})
    private Output<String> updateTime;

    /**
     * @return The time at which the domain was last updated.
     * 
     */
    public Output<String> updateTime() {
        return this.updateTime;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Domain(String name) {
        this(name, DomainArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Domain(String name, DomainArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Domain(String name, DomainArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("google-native:firebasehosting/v1beta1:Domain", name, args == null ? DomainArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Domain(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("google-native:firebasehosting/v1beta1:Domain", name, null, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Domain get(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Domain(name, id, options);
    }
}
