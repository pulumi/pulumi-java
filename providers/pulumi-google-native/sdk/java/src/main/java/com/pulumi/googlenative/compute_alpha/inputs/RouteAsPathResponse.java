// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.compute_alpha.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class RouteAsPathResponse extends com.pulumi.resources.InvokeArgs {

    public static final RouteAsPathResponse Empty = new RouteAsPathResponse();

    /**
     * The AS numbers of the AS Path.
     * 
     */
    @Import(name="asLists", required=true)
    private List<Integer> asLists;

    /**
     * @return The AS numbers of the AS Path.
     * 
     */
    public List<Integer> asLists() {
        return this.asLists;
    }

    /**
     * The type of the AS Path, which can be one of the following values: - &#39;AS_SET&#39;: unordered set of autonomous systems that the route in has traversed - &#39;AS_SEQUENCE&#39;: ordered set of autonomous systems that the route has traversed - &#39;AS_CONFED_SEQUENCE&#39;: ordered set of Member Autonomous Systems in the local confederation that the route has traversed - &#39;AS_CONFED_SET&#39;: unordered set of Member Autonomous Systems in the local confederation that the route has traversed
     * 
     */
    @Import(name="pathSegmentType", required=true)
    private String pathSegmentType;

    /**
     * @return The type of the AS Path, which can be one of the following values: - &#39;AS_SET&#39;: unordered set of autonomous systems that the route in has traversed - &#39;AS_SEQUENCE&#39;: ordered set of autonomous systems that the route has traversed - &#39;AS_CONFED_SEQUENCE&#39;: ordered set of Member Autonomous Systems in the local confederation that the route has traversed - &#39;AS_CONFED_SET&#39;: unordered set of Member Autonomous Systems in the local confederation that the route has traversed
     * 
     */
    public String pathSegmentType() {
        return this.pathSegmentType;
    }

    private RouteAsPathResponse() {}

    private RouteAsPathResponse(RouteAsPathResponse $) {
        this.asLists = $.asLists;
        this.pathSegmentType = $.pathSegmentType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RouteAsPathResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RouteAsPathResponse $;

        public Builder() {
            $ = new RouteAsPathResponse();
        }

        public Builder(RouteAsPathResponse defaults) {
            $ = new RouteAsPathResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param asLists The AS numbers of the AS Path.
         * 
         * @return builder
         * 
         */
        public Builder asLists(List<Integer> asLists) {
            $.asLists = asLists;
            return this;
        }

        /**
         * @param asLists The AS numbers of the AS Path.
         * 
         * @return builder
         * 
         */
        public Builder asLists(Integer... asLists) {
            return asLists(List.of(asLists));
        }

        /**
         * @param pathSegmentType The type of the AS Path, which can be one of the following values: - &#39;AS_SET&#39;: unordered set of autonomous systems that the route in has traversed - &#39;AS_SEQUENCE&#39;: ordered set of autonomous systems that the route has traversed - &#39;AS_CONFED_SEQUENCE&#39;: ordered set of Member Autonomous Systems in the local confederation that the route has traversed - &#39;AS_CONFED_SET&#39;: unordered set of Member Autonomous Systems in the local confederation that the route has traversed
         * 
         * @return builder
         * 
         */
        public Builder pathSegmentType(String pathSegmentType) {
            $.pathSegmentType = pathSegmentType;
            return this;
        }

        public RouteAsPathResponse build() {
            $.asLists = Objects.requireNonNull($.asLists, "expected parameter 'asLists' to be non-null");
            $.pathSegmentType = Objects.requireNonNull($.pathSegmentType, "expected parameter 'pathSegmentType' to be non-null");
            return $;
        }
    }

}
