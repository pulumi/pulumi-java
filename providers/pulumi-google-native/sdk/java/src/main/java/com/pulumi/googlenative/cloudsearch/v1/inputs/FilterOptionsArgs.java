// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.cloudsearch.v1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.cloudsearch.v1.inputs.FilterArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Filter options to be applied on query.
 * 
 */
public final class FilterOptionsArgs extends com.pulumi.resources.ResourceArgs {

    public static final FilterOptionsArgs Empty = new FilterOptionsArgs();

    /**
     * Generic filter to restrict the search, such as `lang:en`, `site:xyz`.
     * 
     */
    @Import(name="filter")
    private @Nullable Output<FilterArgs> filter;

    /**
     * @return Generic filter to restrict the search, such as `lang:en`, `site:xyz`.
     * 
     */
    public Optional<Output<FilterArgs>> filter() {
        return Optional.ofNullable(this.filter);
    }

    /**
     * If object_type is set, only objects of that type are returned. This should correspond to the name of the object that was registered within the definition of schema. The maximum length is 256 characters.
     * 
     */
    @Import(name="objectType")
    private @Nullable Output<String> objectType;

    /**
     * @return If object_type is set, only objects of that type are returned. This should correspond to the name of the object that was registered within the definition of schema. The maximum length is 256 characters.
     * 
     */
    public Optional<Output<String>> objectType() {
        return Optional.ofNullable(this.objectType);
    }

    private FilterOptionsArgs() {}

    private FilterOptionsArgs(FilterOptionsArgs $) {
        this.filter = $.filter;
        this.objectType = $.objectType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FilterOptionsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FilterOptionsArgs $;

        public Builder() {
            $ = new FilterOptionsArgs();
        }

        public Builder(FilterOptionsArgs defaults) {
            $ = new FilterOptionsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param filter Generic filter to restrict the search, such as `lang:en`, `site:xyz`.
         * 
         * @return builder
         * 
         */
        public Builder filter(@Nullable Output<FilterArgs> filter) {
            $.filter = filter;
            return this;
        }

        /**
         * @param filter Generic filter to restrict the search, such as `lang:en`, `site:xyz`.
         * 
         * @return builder
         * 
         */
        public Builder filter(FilterArgs filter) {
            return filter(Output.of(filter));
        }

        /**
         * @param objectType If object_type is set, only objects of that type are returned. This should correspond to the name of the object that was registered within the definition of schema. The maximum length is 256 characters.
         * 
         * @return builder
         * 
         */
        public Builder objectType(@Nullable Output<String> objectType) {
            $.objectType = objectType;
            return this;
        }

        /**
         * @param objectType If object_type is set, only objects of that type are returned. This should correspond to the name of the object that was registered within the definition of schema. The maximum length is 256 characters.
         * 
         * @return builder
         * 
         */
        public Builder objectType(String objectType) {
            return objectType(Output.of(objectType));
        }

        public FilterOptionsArgs build() {
            return $;
        }
    }

}
