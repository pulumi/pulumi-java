// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.compute_v1.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * This is deprecated and has no effect. Do not use.
 * 
 */
public final class LogConfigDataAccessOptionsResponse extends com.pulumi.resources.InvokeArgs {

    public static final LogConfigDataAccessOptionsResponse Empty = new LogConfigDataAccessOptionsResponse();

    /**
     * This is deprecated and has no effect. Do not use.
     * 
     */
    @Import(name="logMode", required=true)
    private String logMode;

    /**
     * @return This is deprecated and has no effect. Do not use.
     * 
     */
    public String logMode() {
        return this.logMode;
    }

    private LogConfigDataAccessOptionsResponse() {}

    private LogConfigDataAccessOptionsResponse(LogConfigDataAccessOptionsResponse $) {
        this.logMode = $.logMode;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LogConfigDataAccessOptionsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LogConfigDataAccessOptionsResponse $;

        public Builder() {
            $ = new LogConfigDataAccessOptionsResponse();
        }

        public Builder(LogConfigDataAccessOptionsResponse defaults) {
            $ = new LogConfigDataAccessOptionsResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param logMode This is deprecated and has no effect. Do not use.
         * 
         * @return builder
         * 
         */
        public Builder logMode(String logMode) {
            $.logMode = logMode;
            return this;
        }

        public LogConfigDataAccessOptionsResponse build() {
            $.logMode = Objects.requireNonNull($.logMode, "expected parameter 'logMode' to be non-null");
            return $;
        }
    }

}
