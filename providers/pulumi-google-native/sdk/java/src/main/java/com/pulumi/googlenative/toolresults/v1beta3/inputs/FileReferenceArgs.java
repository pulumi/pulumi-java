// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.toolresults.v1beta3.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * A reference to a file.
 * 
 */
public final class FileReferenceArgs extends com.pulumi.resources.ResourceArgs {

    public static final FileReferenceArgs Empty = new FileReferenceArgs();

    /**
     * The URI of a file stored in Google Cloud Storage. For example: http://storage.googleapis.com/mybucket/path/to/test.xml or in gsutil format: gs://mybucket/path/to/test.xml with version-specific info, gs://mybucket/path/to/test.xml#1360383693690000 An INVALID_ARGUMENT error will be returned if the URI format is not supported. - In response: always set - In create/update request: always set
     * 
     */
    @Import(name="fileUri")
    private @Nullable Output<String> fileUri;

    /**
     * @return The URI of a file stored in Google Cloud Storage. For example: http://storage.googleapis.com/mybucket/path/to/test.xml or in gsutil format: gs://mybucket/path/to/test.xml with version-specific info, gs://mybucket/path/to/test.xml#1360383693690000 An INVALID_ARGUMENT error will be returned if the URI format is not supported. - In response: always set - In create/update request: always set
     * 
     */
    public Optional<Output<String>> fileUri() {
        return Optional.ofNullable(this.fileUri);
    }

    private FileReferenceArgs() {}

    private FileReferenceArgs(FileReferenceArgs $) {
        this.fileUri = $.fileUri;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FileReferenceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FileReferenceArgs $;

        public Builder() {
            $ = new FileReferenceArgs();
        }

        public Builder(FileReferenceArgs defaults) {
            $ = new FileReferenceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param fileUri The URI of a file stored in Google Cloud Storage. For example: http://storage.googleapis.com/mybucket/path/to/test.xml or in gsutil format: gs://mybucket/path/to/test.xml with version-specific info, gs://mybucket/path/to/test.xml#1360383693690000 An INVALID_ARGUMENT error will be returned if the URI format is not supported. - In response: always set - In create/update request: always set
         * 
         * @return builder
         * 
         */
        public Builder fileUri(@Nullable Output<String> fileUri) {
            $.fileUri = fileUri;
            return this;
        }

        /**
         * @param fileUri The URI of a file stored in Google Cloud Storage. For example: http://storage.googleapis.com/mybucket/path/to/test.xml or in gsutil format: gs://mybucket/path/to/test.xml with version-specific info, gs://mybucket/path/to/test.xml#1360383693690000 An INVALID_ARGUMENT error will be returned if the URI format is not supported. - In response: always set - In create/update request: always set
         * 
         * @return builder
         * 
         */
        public Builder fileUri(String fileUri) {
            return fileUri(Output.of(fileUri));
        }

        public FileReferenceArgs build() {
            return $;
        }
    }

}
