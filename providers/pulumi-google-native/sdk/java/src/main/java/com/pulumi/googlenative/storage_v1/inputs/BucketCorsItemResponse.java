// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.storage_v1.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class BucketCorsItemResponse extends com.pulumi.resources.InvokeArgs {

    public static final BucketCorsItemResponse Empty = new BucketCorsItemResponse();

    /**
     * The value, in seconds, to return in the  Access-Control-Max-Age header used in preflight responses.
     * 
     */
    @Import(name="maxAgeSeconds", required=true)
    private Integer maxAgeSeconds;

    /**
     * @return The value, in seconds, to return in the  Access-Control-Max-Age header used in preflight responses.
     * 
     */
    public Integer maxAgeSeconds() {
        return this.maxAgeSeconds;
    }

    /**
     * The list of HTTP methods on which to include CORS response headers, (GET, OPTIONS, POST, etc) Note: &#34;*&#34; is permitted in the list of methods, and means &#34;any method&#34;.
     * 
     */
    @Import(name="method", required=true)
    private List<String> method;

    /**
     * @return The list of HTTP methods on which to include CORS response headers, (GET, OPTIONS, POST, etc) Note: &#34;*&#34; is permitted in the list of methods, and means &#34;any method&#34;.
     * 
     */
    public List<String> method() {
        return this.method;
    }

    /**
     * The list of Origins eligible to receive CORS response headers. Note: &#34;*&#34; is permitted in the list of origins, and means &#34;any Origin&#34;.
     * 
     */
    @Import(name="origin", required=true)
    private List<String> origin;

    /**
     * @return The list of Origins eligible to receive CORS response headers. Note: &#34;*&#34; is permitted in the list of origins, and means &#34;any Origin&#34;.
     * 
     */
    public List<String> origin() {
        return this.origin;
    }

    /**
     * The list of HTTP headers other than the simple response headers to give permission for the user-agent to share across domains.
     * 
     */
    @Import(name="responseHeader", required=true)
    private List<String> responseHeader;

    /**
     * @return The list of HTTP headers other than the simple response headers to give permission for the user-agent to share across domains.
     * 
     */
    public List<String> responseHeader() {
        return this.responseHeader;
    }

    private BucketCorsItemResponse() {}

    private BucketCorsItemResponse(BucketCorsItemResponse $) {
        this.maxAgeSeconds = $.maxAgeSeconds;
        this.method = $.method;
        this.origin = $.origin;
        this.responseHeader = $.responseHeader;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BucketCorsItemResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BucketCorsItemResponse $;

        public Builder() {
            $ = new BucketCorsItemResponse();
        }

        public Builder(BucketCorsItemResponse defaults) {
            $ = new BucketCorsItemResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param maxAgeSeconds The value, in seconds, to return in the  Access-Control-Max-Age header used in preflight responses.
         * 
         * @return builder
         * 
         */
        public Builder maxAgeSeconds(Integer maxAgeSeconds) {
            $.maxAgeSeconds = maxAgeSeconds;
            return this;
        }

        /**
         * @param method The list of HTTP methods on which to include CORS response headers, (GET, OPTIONS, POST, etc) Note: &#34;*&#34; is permitted in the list of methods, and means &#34;any method&#34;.
         * 
         * @return builder
         * 
         */
        public Builder method(List<String> method) {
            $.method = method;
            return this;
        }

        /**
         * @param method The list of HTTP methods on which to include CORS response headers, (GET, OPTIONS, POST, etc) Note: &#34;*&#34; is permitted in the list of methods, and means &#34;any method&#34;.
         * 
         * @return builder
         * 
         */
        public Builder method(String... method) {
            return method(List.of(method));
        }

        /**
         * @param origin The list of Origins eligible to receive CORS response headers. Note: &#34;*&#34; is permitted in the list of origins, and means &#34;any Origin&#34;.
         * 
         * @return builder
         * 
         */
        public Builder origin(List<String> origin) {
            $.origin = origin;
            return this;
        }

        /**
         * @param origin The list of Origins eligible to receive CORS response headers. Note: &#34;*&#34; is permitted in the list of origins, and means &#34;any Origin&#34;.
         * 
         * @return builder
         * 
         */
        public Builder origin(String... origin) {
            return origin(List.of(origin));
        }

        /**
         * @param responseHeader The list of HTTP headers other than the simple response headers to give permission for the user-agent to share across domains.
         * 
         * @return builder
         * 
         */
        public Builder responseHeader(List<String> responseHeader) {
            $.responseHeader = responseHeader;
            return this;
        }

        /**
         * @param responseHeader The list of HTTP headers other than the simple response headers to give permission for the user-agent to share across domains.
         * 
         * @return builder
         * 
         */
        public Builder responseHeader(String... responseHeader) {
            return responseHeader(List.of(responseHeader));
        }

        public BucketCorsItemResponse build() {
            $.maxAgeSeconds = Objects.requireNonNull($.maxAgeSeconds, "expected parameter 'maxAgeSeconds' to be non-null");
            $.method = Objects.requireNonNull($.method, "expected parameter 'method' to be non-null");
            $.origin = Objects.requireNonNull($.origin, "expected parameter 'origin' to be non-null");
            $.responseHeader = Objects.requireNonNull($.responseHeader, "expected parameter 'responseHeader' to be non-null");
            return $;
        }
    }

}
