// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.vmmigration.v1alpha1.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.googlenative.vmmigration.v1alpha1.outputs.InstantiatingMigratedVMStepResponse;
import com.pulumi.googlenative.vmmigration.v1alpha1.outputs.PreparingVMDisksStepResponse;
import com.pulumi.googlenative.vmmigration.v1alpha1.outputs.ReplicationCycleResponse;
import com.pulumi.googlenative.vmmigration.v1alpha1.outputs.ShuttingDownSourceVMStepResponse;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class CutoverStepResponse {
    /**
     * @return The time the step has ended.
     * 
     */
    private final String endTime;
    /**
     * @return Final sync step.
     * 
     */
    private final ReplicationCycleResponse finalSync;
    /**
     * @return Instantiating migrated VM step.
     * 
     */
    private final InstantiatingMigratedVMStepResponse instantiatingMigratedVm;
    /**
     * @return Preparing VM disks step.
     * 
     */
    private final PreparingVMDisksStepResponse preparingVmDisks;
    /**
     * @return A replication cycle prior cutover step.
     * 
     */
    private final ReplicationCycleResponse previousReplicationCycle;
    /**
     * @return Shutting down VM step.
     * 
     */
    private final ShuttingDownSourceVMStepResponse shuttingDownSourceVm;
    /**
     * @return The time the step has started.
     * 
     */
    private final String startTime;

    @CustomType.Constructor
    private CutoverStepResponse(
        @CustomType.Parameter("endTime") String endTime,
        @CustomType.Parameter("finalSync") ReplicationCycleResponse finalSync,
        @CustomType.Parameter("instantiatingMigratedVm") InstantiatingMigratedVMStepResponse instantiatingMigratedVm,
        @CustomType.Parameter("preparingVmDisks") PreparingVMDisksStepResponse preparingVmDisks,
        @CustomType.Parameter("previousReplicationCycle") ReplicationCycleResponse previousReplicationCycle,
        @CustomType.Parameter("shuttingDownSourceVm") ShuttingDownSourceVMStepResponse shuttingDownSourceVm,
        @CustomType.Parameter("startTime") String startTime) {
        this.endTime = endTime;
        this.finalSync = finalSync;
        this.instantiatingMigratedVm = instantiatingMigratedVm;
        this.preparingVmDisks = preparingVmDisks;
        this.previousReplicationCycle = previousReplicationCycle;
        this.shuttingDownSourceVm = shuttingDownSourceVm;
        this.startTime = startTime;
    }

    /**
     * @return The time the step has ended.
     * 
     */
    public String endTime() {
        return this.endTime;
    }
    /**
     * @return Final sync step.
     * 
     */
    public ReplicationCycleResponse finalSync() {
        return this.finalSync;
    }
    /**
     * @return Instantiating migrated VM step.
     * 
     */
    public InstantiatingMigratedVMStepResponse instantiatingMigratedVm() {
        return this.instantiatingMigratedVm;
    }
    /**
     * @return Preparing VM disks step.
     * 
     */
    public PreparingVMDisksStepResponse preparingVmDisks() {
        return this.preparingVmDisks;
    }
    /**
     * @return A replication cycle prior cutover step.
     * 
     */
    public ReplicationCycleResponse previousReplicationCycle() {
        return this.previousReplicationCycle;
    }
    /**
     * @return Shutting down VM step.
     * 
     */
    public ShuttingDownSourceVMStepResponse shuttingDownSourceVm() {
        return this.shuttingDownSourceVm;
    }
    /**
     * @return The time the step has started.
     * 
     */
    public String startTime() {
        return this.startTime;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CutoverStepResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String endTime;
        private ReplicationCycleResponse finalSync;
        private InstantiatingMigratedVMStepResponse instantiatingMigratedVm;
        private PreparingVMDisksStepResponse preparingVmDisks;
        private ReplicationCycleResponse previousReplicationCycle;
        private ShuttingDownSourceVMStepResponse shuttingDownSourceVm;
        private String startTime;

        public Builder() {
    	      // Empty
        }

        public Builder(CutoverStepResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.endTime = defaults.endTime;
    	      this.finalSync = defaults.finalSync;
    	      this.instantiatingMigratedVm = defaults.instantiatingMigratedVm;
    	      this.preparingVmDisks = defaults.preparingVmDisks;
    	      this.previousReplicationCycle = defaults.previousReplicationCycle;
    	      this.shuttingDownSourceVm = defaults.shuttingDownSourceVm;
    	      this.startTime = defaults.startTime;
        }

        public Builder endTime(String endTime) {
            this.endTime = Objects.requireNonNull(endTime);
            return this;
        }
        public Builder finalSync(ReplicationCycleResponse finalSync) {
            this.finalSync = Objects.requireNonNull(finalSync);
            return this;
        }
        public Builder instantiatingMigratedVm(InstantiatingMigratedVMStepResponse instantiatingMigratedVm) {
            this.instantiatingMigratedVm = Objects.requireNonNull(instantiatingMigratedVm);
            return this;
        }
        public Builder preparingVmDisks(PreparingVMDisksStepResponse preparingVmDisks) {
            this.preparingVmDisks = Objects.requireNonNull(preparingVmDisks);
            return this;
        }
        public Builder previousReplicationCycle(ReplicationCycleResponse previousReplicationCycle) {
            this.previousReplicationCycle = Objects.requireNonNull(previousReplicationCycle);
            return this;
        }
        public Builder shuttingDownSourceVm(ShuttingDownSourceVMStepResponse shuttingDownSourceVm) {
            this.shuttingDownSourceVm = Objects.requireNonNull(shuttingDownSourceVm);
            return this;
        }
        public Builder startTime(String startTime) {
            this.startTime = Objects.requireNonNull(startTime);
            return this;
        }        public CutoverStepResponse build() {
            return new CutoverStepResponse(endTime, finalSync, instantiatingMigratedVm, preparingVmDisks, previousReplicationCycle, shuttingDownSourceVm, startTime);
        }
    }
}
