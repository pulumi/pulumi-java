// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.dataplex.v1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.dataplex.v1.inputs.GoogleCloudDataplexV1TaskInfrastructureSpecArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * User-specified config for running a Spark task.
 * 
 */
public final class GoogleCloudDataplexV1TaskSparkTaskConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final GoogleCloudDataplexV1TaskSparkTaskConfigArgs Empty = new GoogleCloudDataplexV1TaskSparkTaskConfigArgs();

    /**
     * Optional. Cloud Storage URIs of archives to be extracted into the working directory of each executor. Supported file types: .jar, .tar, .tar.gz, .tgz, and .zip.
     * 
     */
    @Import(name="archiveUris")
    private @Nullable Output<List<String>> archiveUris;

    /**
     * @return Optional. Cloud Storage URIs of archives to be extracted into the working directory of each executor. Supported file types: .jar, .tar, .tar.gz, .tgz, and .zip.
     * 
     */
    public Optional<Output<List<String>>> archiveUris() {
        return Optional.ofNullable(this.archiveUris);
    }

    /**
     * Optional. Cloud Storage URIs of files to be placed in the working directory of each executor.
     * 
     */
    @Import(name="fileUris")
    private @Nullable Output<List<String>> fileUris;

    /**
     * @return Optional. Cloud Storage URIs of files to be placed in the working directory of each executor.
     * 
     */
    public Optional<Output<List<String>>> fileUris() {
        return Optional.ofNullable(this.fileUris);
    }

    /**
     * Optional. Infrastructure specification for the execution.
     * 
     */
    @Import(name="infrastructureSpec")
    private @Nullable Output<GoogleCloudDataplexV1TaskInfrastructureSpecArgs> infrastructureSpec;

    /**
     * @return Optional. Infrastructure specification for the execution.
     * 
     */
    public Optional<Output<GoogleCloudDataplexV1TaskInfrastructureSpecArgs>> infrastructureSpec() {
        return Optional.ofNullable(this.infrastructureSpec);
    }

    /**
     * The name of the driver&#39;s main class. The jar file that contains the class must be in the default CLASSPATH or specified in jar_file_uris. The execution args are passed in as a sequence of named process arguments (--key=value).
     * 
     */
    @Import(name="mainClass")
    private @Nullable Output<String> mainClass;

    /**
     * @return The name of the driver&#39;s main class. The jar file that contains the class must be in the default CLASSPATH or specified in jar_file_uris. The execution args are passed in as a sequence of named process arguments (--key=value).
     * 
     */
    public Optional<Output<String>> mainClass() {
        return Optional.ofNullable(this.mainClass);
    }

    /**
     * The Cloud Storage URI of the jar file that contains the main class. The execution args are passed in as a sequence of named process arguments (--key=value).
     * 
     */
    @Import(name="mainJarFileUri")
    private @Nullable Output<String> mainJarFileUri;

    /**
     * @return The Cloud Storage URI of the jar file that contains the main class. The execution args are passed in as a sequence of named process arguments (--key=value).
     * 
     */
    public Optional<Output<String>> mainJarFileUri() {
        return Optional.ofNullable(this.mainJarFileUri);
    }

    /**
     * The Gcloud Storage URI of the main Python file to use as the driver. Must be a .py file. The execution args are passed in as a sequence of named process arguments (--key=value).
     * 
     */
    @Import(name="pythonScriptFile")
    private @Nullable Output<String> pythonScriptFile;

    /**
     * @return The Gcloud Storage URI of the main Python file to use as the driver. Must be a .py file. The execution args are passed in as a sequence of named process arguments (--key=value).
     * 
     */
    public Optional<Output<String>> pythonScriptFile() {
        return Optional.ofNullable(this.pythonScriptFile);
    }

    /**
     * The query text. The execution args are used to declare a set of script variables (set key=&#34;value&#34;;).
     * 
     */
    @Import(name="sqlScript")
    private @Nullable Output<String> sqlScript;

    /**
     * @return The query text. The execution args are used to declare a set of script variables (set key=&#34;value&#34;;).
     * 
     */
    public Optional<Output<String>> sqlScript() {
        return Optional.ofNullable(this.sqlScript);
    }

    /**
     * A reference to a query file. This can be the Cloud Storage URI of the query file or it can the path to a SqlScript Content. The execution args are used to declare a set of script variables (set key=&#34;value&#34;;).
     * 
     */
    @Import(name="sqlScriptFile")
    private @Nullable Output<String> sqlScriptFile;

    /**
     * @return A reference to a query file. This can be the Cloud Storage URI of the query file or it can the path to a SqlScript Content. The execution args are used to declare a set of script variables (set key=&#34;value&#34;;).
     * 
     */
    public Optional<Output<String>> sqlScriptFile() {
        return Optional.ofNullable(this.sqlScriptFile);
    }

    private GoogleCloudDataplexV1TaskSparkTaskConfigArgs() {}

    private GoogleCloudDataplexV1TaskSparkTaskConfigArgs(GoogleCloudDataplexV1TaskSparkTaskConfigArgs $) {
        this.archiveUris = $.archiveUris;
        this.fileUris = $.fileUris;
        this.infrastructureSpec = $.infrastructureSpec;
        this.mainClass = $.mainClass;
        this.mainJarFileUri = $.mainJarFileUri;
        this.pythonScriptFile = $.pythonScriptFile;
        this.sqlScript = $.sqlScript;
        this.sqlScriptFile = $.sqlScriptFile;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GoogleCloudDataplexV1TaskSparkTaskConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GoogleCloudDataplexV1TaskSparkTaskConfigArgs $;

        public Builder() {
            $ = new GoogleCloudDataplexV1TaskSparkTaskConfigArgs();
        }

        public Builder(GoogleCloudDataplexV1TaskSparkTaskConfigArgs defaults) {
            $ = new GoogleCloudDataplexV1TaskSparkTaskConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param archiveUris Optional. Cloud Storage URIs of archives to be extracted into the working directory of each executor. Supported file types: .jar, .tar, .tar.gz, .tgz, and .zip.
         * 
         * @return builder
         * 
         */
        public Builder archiveUris(@Nullable Output<List<String>> archiveUris) {
            $.archiveUris = archiveUris;
            return this;
        }

        /**
         * @param archiveUris Optional. Cloud Storage URIs of archives to be extracted into the working directory of each executor. Supported file types: .jar, .tar, .tar.gz, .tgz, and .zip.
         * 
         * @return builder
         * 
         */
        public Builder archiveUris(List<String> archiveUris) {
            return archiveUris(Output.of(archiveUris));
        }

        /**
         * @param archiveUris Optional. Cloud Storage URIs of archives to be extracted into the working directory of each executor. Supported file types: .jar, .tar, .tar.gz, .tgz, and .zip.
         * 
         * @return builder
         * 
         */
        public Builder archiveUris(String... archiveUris) {
            return archiveUris(List.of(archiveUris));
        }

        /**
         * @param fileUris Optional. Cloud Storage URIs of files to be placed in the working directory of each executor.
         * 
         * @return builder
         * 
         */
        public Builder fileUris(@Nullable Output<List<String>> fileUris) {
            $.fileUris = fileUris;
            return this;
        }

        /**
         * @param fileUris Optional. Cloud Storage URIs of files to be placed in the working directory of each executor.
         * 
         * @return builder
         * 
         */
        public Builder fileUris(List<String> fileUris) {
            return fileUris(Output.of(fileUris));
        }

        /**
         * @param fileUris Optional. Cloud Storage URIs of files to be placed in the working directory of each executor.
         * 
         * @return builder
         * 
         */
        public Builder fileUris(String... fileUris) {
            return fileUris(List.of(fileUris));
        }

        /**
         * @param infrastructureSpec Optional. Infrastructure specification for the execution.
         * 
         * @return builder
         * 
         */
        public Builder infrastructureSpec(@Nullable Output<GoogleCloudDataplexV1TaskInfrastructureSpecArgs> infrastructureSpec) {
            $.infrastructureSpec = infrastructureSpec;
            return this;
        }

        /**
         * @param infrastructureSpec Optional. Infrastructure specification for the execution.
         * 
         * @return builder
         * 
         */
        public Builder infrastructureSpec(GoogleCloudDataplexV1TaskInfrastructureSpecArgs infrastructureSpec) {
            return infrastructureSpec(Output.of(infrastructureSpec));
        }

        /**
         * @param mainClass The name of the driver&#39;s main class. The jar file that contains the class must be in the default CLASSPATH or specified in jar_file_uris. The execution args are passed in as a sequence of named process arguments (--key=value).
         * 
         * @return builder
         * 
         */
        public Builder mainClass(@Nullable Output<String> mainClass) {
            $.mainClass = mainClass;
            return this;
        }

        /**
         * @param mainClass The name of the driver&#39;s main class. The jar file that contains the class must be in the default CLASSPATH or specified in jar_file_uris. The execution args are passed in as a sequence of named process arguments (--key=value).
         * 
         * @return builder
         * 
         */
        public Builder mainClass(String mainClass) {
            return mainClass(Output.of(mainClass));
        }

        /**
         * @param mainJarFileUri The Cloud Storage URI of the jar file that contains the main class. The execution args are passed in as a sequence of named process arguments (--key=value).
         * 
         * @return builder
         * 
         */
        public Builder mainJarFileUri(@Nullable Output<String> mainJarFileUri) {
            $.mainJarFileUri = mainJarFileUri;
            return this;
        }

        /**
         * @param mainJarFileUri The Cloud Storage URI of the jar file that contains the main class. The execution args are passed in as a sequence of named process arguments (--key=value).
         * 
         * @return builder
         * 
         */
        public Builder mainJarFileUri(String mainJarFileUri) {
            return mainJarFileUri(Output.of(mainJarFileUri));
        }

        /**
         * @param pythonScriptFile The Gcloud Storage URI of the main Python file to use as the driver. Must be a .py file. The execution args are passed in as a sequence of named process arguments (--key=value).
         * 
         * @return builder
         * 
         */
        public Builder pythonScriptFile(@Nullable Output<String> pythonScriptFile) {
            $.pythonScriptFile = pythonScriptFile;
            return this;
        }

        /**
         * @param pythonScriptFile The Gcloud Storage URI of the main Python file to use as the driver. Must be a .py file. The execution args are passed in as a sequence of named process arguments (--key=value).
         * 
         * @return builder
         * 
         */
        public Builder pythonScriptFile(String pythonScriptFile) {
            return pythonScriptFile(Output.of(pythonScriptFile));
        }

        /**
         * @param sqlScript The query text. The execution args are used to declare a set of script variables (set key=&#34;value&#34;;).
         * 
         * @return builder
         * 
         */
        public Builder sqlScript(@Nullable Output<String> sqlScript) {
            $.sqlScript = sqlScript;
            return this;
        }

        /**
         * @param sqlScript The query text. The execution args are used to declare a set of script variables (set key=&#34;value&#34;;).
         * 
         * @return builder
         * 
         */
        public Builder sqlScript(String sqlScript) {
            return sqlScript(Output.of(sqlScript));
        }

        /**
         * @param sqlScriptFile A reference to a query file. This can be the Cloud Storage URI of the query file or it can the path to a SqlScript Content. The execution args are used to declare a set of script variables (set key=&#34;value&#34;;).
         * 
         * @return builder
         * 
         */
        public Builder sqlScriptFile(@Nullable Output<String> sqlScriptFile) {
            $.sqlScriptFile = sqlScriptFile;
            return this;
        }

        /**
         * @param sqlScriptFile A reference to a query file. This can be the Cloud Storage URI of the query file or it can the path to a SqlScript Content. The execution args are used to declare a set of script variables (set key=&#34;value&#34;;).
         * 
         * @return builder
         * 
         */
        public Builder sqlScriptFile(String sqlScriptFile) {
            return sqlScriptFile(Output.of(sqlScriptFile));
        }

        public GoogleCloudDataplexV1TaskSparkTaskConfigArgs build() {
            return $;
        }
    }

}
