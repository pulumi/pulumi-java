// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.toolresults_v1beta3.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.toolresults_v1beta3.inputs.FailureDetailResponse;
import com.pulumi.googlenative.toolresults_v1beta3.inputs.InconclusiveDetailResponse;
import com.pulumi.googlenative.toolresults_v1beta3.inputs.SkippedDetailResponse;
import com.pulumi.googlenative.toolresults_v1beta3.inputs.SuccessDetailResponse;
import java.lang.String;
import java.util.Objects;


/**
 * Interprets a result so that humans and machines can act on it.
 * 
 */
public final class OutcomeResponse extends com.pulumi.resources.InvokeArgs {

    public static final OutcomeResponse Empty = new OutcomeResponse();

    /**
     * More information about a FAILURE outcome. Returns INVALID_ARGUMENT if this field is set but the summary is not FAILURE. Optional
     * 
     */
    @Import(name="failureDetail", required=true)
    private FailureDetailResponse failureDetail;

    public FailureDetailResponse failureDetail() {
        return this.failureDetail;
    }

    /**
     * More information about an INCONCLUSIVE outcome. Returns INVALID_ARGUMENT if this field is set but the summary is not INCONCLUSIVE. Optional
     * 
     */
    @Import(name="inconclusiveDetail", required=true)
    private InconclusiveDetailResponse inconclusiveDetail;

    public InconclusiveDetailResponse inconclusiveDetail() {
        return this.inconclusiveDetail;
    }

    /**
     * More information about a SKIPPED outcome. Returns INVALID_ARGUMENT if this field is set but the summary is not SKIPPED. Optional
     * 
     */
    @Import(name="skippedDetail", required=true)
    private SkippedDetailResponse skippedDetail;

    public SkippedDetailResponse skippedDetail() {
        return this.skippedDetail;
    }

    /**
     * More information about a SUCCESS outcome. Returns INVALID_ARGUMENT if this field is set but the summary is not SUCCESS. Optional
     * 
     */
    @Import(name="successDetail", required=true)
    private SuccessDetailResponse successDetail;

    public SuccessDetailResponse successDetail() {
        return this.successDetail;
    }

    /**
     * The simplest way to interpret a result. Required
     * 
     */
    @Import(name="summary", required=true)
    private String summary;

    public String summary() {
        return this.summary;
    }

    private OutcomeResponse() {}

    private OutcomeResponse(OutcomeResponse $) {
        this.failureDetail = $.failureDetail;
        this.inconclusiveDetail = $.inconclusiveDetail;
        this.skippedDetail = $.skippedDetail;
        this.successDetail = $.successDetail;
        this.summary = $.summary;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OutcomeResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OutcomeResponse $;

        public Builder() {
            $ = new OutcomeResponse();
        }

        public Builder(OutcomeResponse defaults) {
            $ = new OutcomeResponse(Objects.requireNonNull(defaults));
        }

        public Builder failureDetail(FailureDetailResponse failureDetail) {
            $.failureDetail = failureDetail;
            return this;
        }

        public Builder inconclusiveDetail(InconclusiveDetailResponse inconclusiveDetail) {
            $.inconclusiveDetail = inconclusiveDetail;
            return this;
        }

        public Builder skippedDetail(SkippedDetailResponse skippedDetail) {
            $.skippedDetail = skippedDetail;
            return this;
        }

        public Builder successDetail(SuccessDetailResponse successDetail) {
            $.successDetail = successDetail;
            return this;
        }

        public Builder summary(String summary) {
            $.summary = summary;
            return this;
        }

        public OutcomeResponse build() {
            $.failureDetail = Objects.requireNonNull($.failureDetail, "expected parameter 'failureDetail' to be non-null");
            $.inconclusiveDetail = Objects.requireNonNull($.inconclusiveDetail, "expected parameter 'inconclusiveDetail' to be non-null");
            $.skippedDetail = Objects.requireNonNull($.skippedDetail, "expected parameter 'skippedDetail' to be non-null");
            $.successDetail = Objects.requireNonNull($.successDetail, "expected parameter 'successDetail' to be non-null");
            $.summary = Objects.requireNonNull($.summary, "expected parameter 'summary' to be non-null");
            return $;
        }
    }

}
