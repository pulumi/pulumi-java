// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.testing_v1.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * A single iOS device.
 * 
 */
public final class IosDeviceResponse extends com.pulumi.resources.InvokeArgs {

    public static final IosDeviceResponse Empty = new IosDeviceResponse();

    /**
     * The id of the iOS device to be used. Use the TestEnvironmentDiscoveryService to get supported options.
     * 
     */
    @Import(name="iosModelId", required=true)
      private final String iosModelId;

    public String iosModelId() {
        return this.iosModelId;
    }

    /**
     * The id of the iOS major software version to be used. Use the TestEnvironmentDiscoveryService to get supported options.
     * 
     */
    @Import(name="iosVersionId", required=true)
      private final String iosVersionId;

    public String iosVersionId() {
        return this.iosVersionId;
    }

    /**
     * The locale the test device used for testing. Use the TestEnvironmentDiscoveryService to get supported options.
     * 
     */
    @Import(name="locale", required=true)
      private final String locale;

    public String locale() {
        return this.locale;
    }

    /**
     * How the device is oriented during the test. Use the TestEnvironmentDiscoveryService to get supported options.
     * 
     */
    @Import(name="orientation", required=true)
      private final String orientation;

    public String orientation() {
        return this.orientation;
    }

    public IosDeviceResponse(
        String iosModelId,
        String iosVersionId,
        String locale,
        String orientation) {
        this.iosModelId = Objects.requireNonNull(iosModelId, "expected parameter 'iosModelId' to be non-null");
        this.iosVersionId = Objects.requireNonNull(iosVersionId, "expected parameter 'iosVersionId' to be non-null");
        this.locale = Objects.requireNonNull(locale, "expected parameter 'locale' to be non-null");
        this.orientation = Objects.requireNonNull(orientation, "expected parameter 'orientation' to be non-null");
    }

    private IosDeviceResponse() {
        this.iosModelId = null;
        this.iosVersionId = null;
        this.locale = null;
        this.orientation = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(IosDeviceResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String iosModelId;
        private String iosVersionId;
        private String locale;
        private String orientation;

        public Builder() {
    	      // Empty
        }

        public Builder(IosDeviceResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.iosModelId = defaults.iosModelId;
    	      this.iosVersionId = defaults.iosVersionId;
    	      this.locale = defaults.locale;
    	      this.orientation = defaults.orientation;
        }

        public Builder iosModelId(String iosModelId) {
            this.iosModelId = Objects.requireNonNull(iosModelId);
            return this;
        }
        public Builder iosVersionId(String iosVersionId) {
            this.iosVersionId = Objects.requireNonNull(iosVersionId);
            return this;
        }
        public Builder locale(String locale) {
            this.locale = Objects.requireNonNull(locale);
            return this;
        }
        public Builder orientation(String orientation) {
            this.orientation = Objects.requireNonNull(orientation);
            return this;
        }        public IosDeviceResponse build() {
            return new IosDeviceResponse(iosModelId, iosVersionId, locale, orientation);
        }
    }
}
