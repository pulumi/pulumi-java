// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.compute.v1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.compute.v1.inputs.FileContentBufferArgs;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Initial State for shielded instance, these are public keys which are safe to store in public
 * 
 */
public final class InitialStateConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final InitialStateConfigArgs Empty = new InitialStateConfigArgs();

    /**
     * The Key Database (db).
     * 
     */
    @Import(name="dbs")
    private @Nullable Output<List<FileContentBufferArgs>> dbs;

    /**
     * @return The Key Database (db).
     * 
     */
    public Optional<Output<List<FileContentBufferArgs>>> dbs() {
        return Optional.ofNullable(this.dbs);
    }

    /**
     * The forbidden key database (dbx).
     * 
     */
    @Import(name="dbxs")
    private @Nullable Output<List<FileContentBufferArgs>> dbxs;

    /**
     * @return The forbidden key database (dbx).
     * 
     */
    public Optional<Output<List<FileContentBufferArgs>>> dbxs() {
        return Optional.ofNullable(this.dbxs);
    }

    /**
     * The Key Exchange Key (KEK).
     * 
     */
    @Import(name="keks")
    private @Nullable Output<List<FileContentBufferArgs>> keks;

    /**
     * @return The Key Exchange Key (KEK).
     * 
     */
    public Optional<Output<List<FileContentBufferArgs>>> keks() {
        return Optional.ofNullable(this.keks);
    }

    /**
     * The Platform Key (PK).
     * 
     */
    @Import(name="pk")
    private @Nullable Output<FileContentBufferArgs> pk;

    /**
     * @return The Platform Key (PK).
     * 
     */
    public Optional<Output<FileContentBufferArgs>> pk() {
        return Optional.ofNullable(this.pk);
    }

    private InitialStateConfigArgs() {}

    private InitialStateConfigArgs(InitialStateConfigArgs $) {
        this.dbs = $.dbs;
        this.dbxs = $.dbxs;
        this.keks = $.keks;
        this.pk = $.pk;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InitialStateConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InitialStateConfigArgs $;

        public Builder() {
            $ = new InitialStateConfigArgs();
        }

        public Builder(InitialStateConfigArgs defaults) {
            $ = new InitialStateConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param dbs The Key Database (db).
         * 
         * @return builder
         * 
         */
        public Builder dbs(@Nullable Output<List<FileContentBufferArgs>> dbs) {
            $.dbs = dbs;
            return this;
        }

        /**
         * @param dbs The Key Database (db).
         * 
         * @return builder
         * 
         */
        public Builder dbs(List<FileContentBufferArgs> dbs) {
            return dbs(Output.of(dbs));
        }

        /**
         * @param dbs The Key Database (db).
         * 
         * @return builder
         * 
         */
        public Builder dbs(FileContentBufferArgs... dbs) {
            return dbs(List.of(dbs));
        }

        /**
         * @param dbxs The forbidden key database (dbx).
         * 
         * @return builder
         * 
         */
        public Builder dbxs(@Nullable Output<List<FileContentBufferArgs>> dbxs) {
            $.dbxs = dbxs;
            return this;
        }

        /**
         * @param dbxs The forbidden key database (dbx).
         * 
         * @return builder
         * 
         */
        public Builder dbxs(List<FileContentBufferArgs> dbxs) {
            return dbxs(Output.of(dbxs));
        }

        /**
         * @param dbxs The forbidden key database (dbx).
         * 
         * @return builder
         * 
         */
        public Builder dbxs(FileContentBufferArgs... dbxs) {
            return dbxs(List.of(dbxs));
        }

        /**
         * @param keks The Key Exchange Key (KEK).
         * 
         * @return builder
         * 
         */
        public Builder keks(@Nullable Output<List<FileContentBufferArgs>> keks) {
            $.keks = keks;
            return this;
        }

        /**
         * @param keks The Key Exchange Key (KEK).
         * 
         * @return builder
         * 
         */
        public Builder keks(List<FileContentBufferArgs> keks) {
            return keks(Output.of(keks));
        }

        /**
         * @param keks The Key Exchange Key (KEK).
         * 
         * @return builder
         * 
         */
        public Builder keks(FileContentBufferArgs... keks) {
            return keks(List.of(keks));
        }

        /**
         * @param pk The Platform Key (PK).
         * 
         * @return builder
         * 
         */
        public Builder pk(@Nullable Output<FileContentBufferArgs> pk) {
            $.pk = pk;
            return this;
        }

        /**
         * @param pk The Platform Key (PK).
         * 
         * @return builder
         * 
         */
        public Builder pk(FileContentBufferArgs pk) {
            return pk(Output.of(pk));
        }

        public InitialStateConfigArgs build() {
            return $;
        }
    }

}
