// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.datalabeling_v1beta1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import com.pulumi.googlenative.datalabeling_v1beta1.enums.GoogleCloudDatalabelingV1beta1ImageClassificationConfigAnswerAggregationType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Config for image classification human labeling task.
 * 
 */
public final class GoogleCloudDatalabelingV1beta1ImageClassificationConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final GoogleCloudDatalabelingV1beta1ImageClassificationConfigArgs Empty = new GoogleCloudDatalabelingV1beta1ImageClassificationConfigArgs();

    /**
     * Optional. If allow_multi_label is true, contributors are able to choose multiple labels for one image.
     * 
     */
    @Import(name="allowMultiLabel")
      private final @Nullable Output<Boolean> allowMultiLabel;

    public Output<Boolean> allowMultiLabel() {
        return this.allowMultiLabel == null ? Codegen.empty() : this.allowMultiLabel;
    }

    /**
     * Annotation spec set resource name.
     * 
     */
    @Import(name="annotationSpecSet", required=true)
      private final Output<String> annotationSpecSet;

    public Output<String> annotationSpecSet() {
        return this.annotationSpecSet;
    }

    /**
     * Optional. The type of how to aggregate answers.
     * 
     */
    @Import(name="answerAggregationType")
      private final @Nullable Output<GoogleCloudDatalabelingV1beta1ImageClassificationConfigAnswerAggregationType> answerAggregationType;

    public Output<GoogleCloudDatalabelingV1beta1ImageClassificationConfigAnswerAggregationType> answerAggregationType() {
        return this.answerAggregationType == null ? Codegen.empty() : this.answerAggregationType;
    }

    public GoogleCloudDatalabelingV1beta1ImageClassificationConfigArgs(
        @Nullable Output<Boolean> allowMultiLabel,
        Output<String> annotationSpecSet,
        @Nullable Output<GoogleCloudDatalabelingV1beta1ImageClassificationConfigAnswerAggregationType> answerAggregationType) {
        this.allowMultiLabel = allowMultiLabel;
        this.annotationSpecSet = Objects.requireNonNull(annotationSpecSet, "expected parameter 'annotationSpecSet' to be non-null");
        this.answerAggregationType = answerAggregationType;
    }

    private GoogleCloudDatalabelingV1beta1ImageClassificationConfigArgs() {
        this.allowMultiLabel = Codegen.empty();
        this.annotationSpecSet = Codegen.empty();
        this.answerAggregationType = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GoogleCloudDatalabelingV1beta1ImageClassificationConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<Boolean> allowMultiLabel;
        private Output<String> annotationSpecSet;
        private @Nullable Output<GoogleCloudDatalabelingV1beta1ImageClassificationConfigAnswerAggregationType> answerAggregationType;

        public Builder() {
    	      // Empty
        }

        public Builder(GoogleCloudDatalabelingV1beta1ImageClassificationConfigArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allowMultiLabel = defaults.allowMultiLabel;
    	      this.annotationSpecSet = defaults.annotationSpecSet;
    	      this.answerAggregationType = defaults.answerAggregationType;
        }

        public Builder allowMultiLabel(@Nullable Output<Boolean> allowMultiLabel) {
            this.allowMultiLabel = allowMultiLabel;
            return this;
        }
        public Builder allowMultiLabel(@Nullable Boolean allowMultiLabel) {
            this.allowMultiLabel = Codegen.ofNullable(allowMultiLabel);
            return this;
        }
        public Builder annotationSpecSet(Output<String> annotationSpecSet) {
            this.annotationSpecSet = Objects.requireNonNull(annotationSpecSet);
            return this;
        }
        public Builder annotationSpecSet(String annotationSpecSet) {
            this.annotationSpecSet = Output.of(Objects.requireNonNull(annotationSpecSet));
            return this;
        }
        public Builder answerAggregationType(@Nullable Output<GoogleCloudDatalabelingV1beta1ImageClassificationConfigAnswerAggregationType> answerAggregationType) {
            this.answerAggregationType = answerAggregationType;
            return this;
        }
        public Builder answerAggregationType(@Nullable GoogleCloudDatalabelingV1beta1ImageClassificationConfigAnswerAggregationType answerAggregationType) {
            this.answerAggregationType = Codegen.ofNullable(answerAggregationType);
            return this;
        }        public GoogleCloudDatalabelingV1beta1ImageClassificationConfigArgs build() {
            return new GoogleCloudDatalabelingV1beta1ImageClassificationConfigArgs(allowMultiLabel, annotationSpecSet, answerAggregationType);
        }
    }
}
