// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.osconfig.v1beta.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Represents a time zone from the [IANA Time Zone Database](https://www.iana.org/time-zones).
 * 
 */
public final class TimeZoneArgs extends com.pulumi.resources.ResourceArgs {

    public static final TimeZoneArgs Empty = new TimeZoneArgs();

    /**
     * IANA Time Zone Database time zone, e.g. &#34;America/New_York&#34;.
     * 
     */
    @Import(name="id")
    private @Nullable Output<String> id;

    /**
     * @return IANA Time Zone Database time zone, e.g. &#34;America/New_York&#34;.
     * 
     */
    public Optional<Output<String>> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * Optional. IANA Time Zone Database version number, e.g. &#34;2019a&#34;.
     * 
     */
    @Import(name="version")
    private @Nullable Output<String> version;

    /**
     * @return Optional. IANA Time Zone Database version number, e.g. &#34;2019a&#34;.
     * 
     */
    public Optional<Output<String>> version() {
        return Optional.ofNullable(this.version);
    }

    private TimeZoneArgs() {}

    private TimeZoneArgs(TimeZoneArgs $) {
        this.id = $.id;
        this.version = $.version;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TimeZoneArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TimeZoneArgs $;

        public Builder() {
            $ = new TimeZoneArgs();
        }

        public Builder(TimeZoneArgs defaults) {
            $ = new TimeZoneArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param id IANA Time Zone Database time zone, e.g. &#34;America/New_York&#34;.
         * 
         * @return builder
         * 
         */
        public Builder id(@Nullable Output<String> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id IANA Time Zone Database time zone, e.g. &#34;America/New_York&#34;.
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            return id(Output.of(id));
        }

        /**
         * @param version Optional. IANA Time Zone Database version number, e.g. &#34;2019a&#34;.
         * 
         * @return builder
         * 
         */
        public Builder version(@Nullable Output<String> version) {
            $.version = version;
            return this;
        }

        /**
         * @param version Optional. IANA Time Zone Database version number, e.g. &#34;2019a&#34;.
         * 
         * @return builder
         * 
         */
        public Builder version(String version) {
            return version(Output.of(version));
        }

        public TimeZoneArgs build() {
            return $;
        }
    }

}
