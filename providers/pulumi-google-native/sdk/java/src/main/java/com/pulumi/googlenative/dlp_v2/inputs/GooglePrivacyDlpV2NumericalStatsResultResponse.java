// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.dlp_v2.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.dlp_v2.inputs.GooglePrivacyDlpV2ValueResponse;
import java.util.List;
import java.util.Objects;


/**
 * Result of the numerical stats computation.
 * 
 */
public final class GooglePrivacyDlpV2NumericalStatsResultResponse extends com.pulumi.resources.InvokeArgs {

    public static final GooglePrivacyDlpV2NumericalStatsResultResponse Empty = new GooglePrivacyDlpV2NumericalStatsResultResponse();

    /**
     * Maximum value appearing in the column.
     * 
     */
    @Import(name="maxValue", required=true)
    private GooglePrivacyDlpV2ValueResponse maxValue;

    /**
     * @return Maximum value appearing in the column.
     * 
     */
    public GooglePrivacyDlpV2ValueResponse maxValue() {
        return this.maxValue;
    }

    /**
     * Minimum value appearing in the column.
     * 
     */
    @Import(name="minValue", required=true)
    private GooglePrivacyDlpV2ValueResponse minValue;

    /**
     * @return Minimum value appearing in the column.
     * 
     */
    public GooglePrivacyDlpV2ValueResponse minValue() {
        return this.minValue;
    }

    /**
     * List of 99 values that partition the set of field values into 100 equal sized buckets.
     * 
     */
    @Import(name="quantileValues", required=true)
    private List<GooglePrivacyDlpV2ValueResponse> quantileValues;

    /**
     * @return List of 99 values that partition the set of field values into 100 equal sized buckets.
     * 
     */
    public List<GooglePrivacyDlpV2ValueResponse> quantileValues() {
        return this.quantileValues;
    }

    private GooglePrivacyDlpV2NumericalStatsResultResponse() {}

    private GooglePrivacyDlpV2NumericalStatsResultResponse(GooglePrivacyDlpV2NumericalStatsResultResponse $) {
        this.maxValue = $.maxValue;
        this.minValue = $.minValue;
        this.quantileValues = $.quantileValues;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GooglePrivacyDlpV2NumericalStatsResultResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GooglePrivacyDlpV2NumericalStatsResultResponse $;

        public Builder() {
            $ = new GooglePrivacyDlpV2NumericalStatsResultResponse();
        }

        public Builder(GooglePrivacyDlpV2NumericalStatsResultResponse defaults) {
            $ = new GooglePrivacyDlpV2NumericalStatsResultResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param maxValue Maximum value appearing in the column.
         * 
         * @return builder
         * 
         */
        public Builder maxValue(GooglePrivacyDlpV2ValueResponse maxValue) {
            $.maxValue = maxValue;
            return this;
        }

        /**
         * @param minValue Minimum value appearing in the column.
         * 
         * @return builder
         * 
         */
        public Builder minValue(GooglePrivacyDlpV2ValueResponse minValue) {
            $.minValue = minValue;
            return this;
        }

        /**
         * @param quantileValues List of 99 values that partition the set of field values into 100 equal sized buckets.
         * 
         * @return builder
         * 
         */
        public Builder quantileValues(List<GooglePrivacyDlpV2ValueResponse> quantileValues) {
            $.quantileValues = quantileValues;
            return this;
        }

        /**
         * @param quantileValues List of 99 values that partition the set of field values into 100 equal sized buckets.
         * 
         * @return builder
         * 
         */
        public Builder quantileValues(GooglePrivacyDlpV2ValueResponse... quantileValues) {
            return quantileValues(List.of(quantileValues));
        }

        public GooglePrivacyDlpV2NumericalStatsResultResponse build() {
            $.maxValue = Objects.requireNonNull($.maxValue, "expected parameter 'maxValue' to be non-null");
            $.minValue = Objects.requireNonNull($.minValue, "expected parameter 'minValue' to be non-null");
            $.quantileValues = Objects.requireNonNull($.quantileValues, "expected parameter 'quantileValues' to be non-null");
            return $;
        }
    }

}
