// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.notebooks_v1.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;


/**
 * Parameters used in Vertex AI JobType executions.
 * 
 */
public final class VertexAIParametersResponse extends com.pulumi.resources.InvokeArgs {

    public static final VertexAIParametersResponse Empty = new VertexAIParametersResponse();

    /**
     * Environment variables. At most 100 environment variables can be specified and unique. Example: GCP_BUCKET=gs://my-bucket/samples/
     * 
     */
    @Import(name="env", required=true)
    private Map<String,String> env;

    /**
     * @return Environment variables. At most 100 environment variables can be specified and unique. Example: GCP_BUCKET=gs://my-bucket/samples/
     * 
     */
    public Map<String,String> env() {
        return this.env;
    }

    /**
     * The full name of the Compute Engine [network](/compute/docs/networks-and-firewalls#networks) to which the Job should be peered. For example, `projects/12345/global/networks/myVPC`. [Format](https://cloud.google.com/compute/docs/reference/rest/v1/networks/insert) is of the form `projects/{project}/global/networks/{network}`. Where {project} is a project number, as in `12345`, and {network} is a network name. Private services access must already be configured for the network. If left unspecified, the job is not peered with any network.
     * 
     */
    @Import(name="network", required=true)
    private String network;

    /**
     * @return The full name of the Compute Engine [network](/compute/docs/networks-and-firewalls#networks) to which the Job should be peered. For example, `projects/12345/global/networks/myVPC`. [Format](https://cloud.google.com/compute/docs/reference/rest/v1/networks/insert) is of the form `projects/{project}/global/networks/{network}`. Where {project} is a project number, as in `12345`, and {network} is a network name. Private services access must already be configured for the network. If left unspecified, the job is not peered with any network.
     * 
     */
    public String network() {
        return this.network;
    }

    private VertexAIParametersResponse() {}

    private VertexAIParametersResponse(VertexAIParametersResponse $) {
        this.env = $.env;
        this.network = $.network;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VertexAIParametersResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VertexAIParametersResponse $;

        public Builder() {
            $ = new VertexAIParametersResponse();
        }

        public Builder(VertexAIParametersResponse defaults) {
            $ = new VertexAIParametersResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param env Environment variables. At most 100 environment variables can be specified and unique. Example: GCP_BUCKET=gs://my-bucket/samples/
         * 
         * @return builder
         * 
         */
        public Builder env(Map<String,String> env) {
            $.env = env;
            return this;
        }

        /**
         * @param network The full name of the Compute Engine [network](/compute/docs/networks-and-firewalls#networks) to which the Job should be peered. For example, `projects/12345/global/networks/myVPC`. [Format](https://cloud.google.com/compute/docs/reference/rest/v1/networks/insert) is of the form `projects/{project}/global/networks/{network}`. Where {project} is a project number, as in `12345`, and {network} is a network name. Private services access must already be configured for the network. If left unspecified, the job is not peered with any network.
         * 
         * @return builder
         * 
         */
        public Builder network(String network) {
            $.network = network;
            return this;
        }

        public VertexAIParametersResponse build() {
            $.env = Objects.requireNonNull($.env, "expected parameter 'env' to be non-null");
            $.network = Objects.requireNonNull($.network, "expected parameter 'network' to be non-null");
            return $;
        }
    }

}
