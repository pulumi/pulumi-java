// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.dialogflow_v2beta1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class GetEntityTypeArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetEntityTypeArgs Empty = new GetEntityTypeArgs();

    @Import(name="entityTypeId", required=true)
    private Output<String> entityTypeId;

    public Output<String> entityTypeId() {
        return this.entityTypeId;
    }

    @Import(name="languageCode")
    private Output</* @Nullable */ String> languageCode;

    public Output</* @Nullable */ String> languageCode() {
        return this.languageCode;
    }

    @Import(name="location", required=true)
    private Output<String> location;

    public Output<String> location() {
        return this.location;
    }

    @Import(name="project")
    private Output</* @Nullable */ String> project;

    public Output</* @Nullable */ String> project() {
        return this.project;
    }

    private GetEntityTypeArgs() {}

    private GetEntityTypeArgs(GetEntityTypeArgs $) {
        this.entityTypeId = $.entityTypeId;
        this.languageCode = $.languageCode;
        this.location = $.location;
        this.project = $.project;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetEntityTypeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetEntityTypeArgs $;

        public Builder() {
            $ = new GetEntityTypeArgs();
        }

        public Builder(GetEntityTypeArgs defaults) {
            $ = new GetEntityTypeArgs(Objects.requireNonNull(defaults));
        }

        public Builder entityTypeId(Output<String> entityTypeId) {
            $.entityTypeId = entityTypeId;
            return this;
        }

        public Builder entityTypeId(String entityTypeId) {
            return entityTypeId(Output.of(entityTypeId));
        }

        public Builder languageCode(Output</* @Nullable */ String> languageCode) {
            $.languageCode = languageCode;
            return this;
        }

        public Builder languageCode(@Nullable String languageCode) {
            return languageCode(Output.of(languageCode));
        }

        public Builder location(Output<String> location) {
            $.location = location;
            return this;
        }

        public Builder location(String location) {
            return location(Output.of(location));
        }

        public Builder project(Output</* @Nullable */ String> project) {
            $.project = project;
            return this;
        }

        public Builder project(@Nullable String project) {
            return project(Output.of(project));
        }

        public GetEntityTypeArgs build() {
            $.entityTypeId = Objects.requireNonNull($.entityTypeId, "expected parameter 'entityTypeId' to be non-null");
            $.location = Objects.requireNonNull($.location, "expected parameter 'location' to be non-null");
            return $;
        }
    }

}
