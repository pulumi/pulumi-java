// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.dialogflow.v3.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.googlenative.dialogflow.v3.outputs.GoogleCloudDialogflowCxV3EntityTypeEntityResponse;
import com.pulumi.googlenative.dialogflow.v3.outputs.GoogleCloudDialogflowCxV3EntityTypeExcludedPhraseResponse;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetEntityTypeResult {
    /**
     * @return Indicates whether the entity type can be automatically expanded.
     * 
     */
    private final String autoExpansionMode;
    /**
     * @return The human-readable name of the entity type, unique within the agent.
     * 
     */
    private final String displayName;
    /**
     * @return Enables fuzzy entity extraction during classification.
     * 
     */
    private final Boolean enableFuzzyExtraction;
    /**
     * @return The collection of entity entries associated with the entity type.
     * 
     */
    private final List<GoogleCloudDialogflowCxV3EntityTypeEntityResponse> entities;
    /**
     * @return Collection of exceptional words and phrases that shouldn&#39;t be matched. For example, if you have a size entity type with entry `giant`(an adjective), you might consider adding `giants`(a noun) as an exclusion. If the kind of entity type is `KIND_MAP`, then the phrases specified by entities and excluded phrases should be mutually exclusive.
     * 
     */
    private final List<GoogleCloudDialogflowCxV3EntityTypeExcludedPhraseResponse> excludedPhrases;
    /**
     * @return Indicates the kind of entity type.
     * 
     */
    private final String kind;
    /**
     * @return The unique identifier of the entity type. Required for EntityTypes.UpdateEntityType. Format: `projects//locations//agents//entityTypes/`.
     * 
     */
    private final String name;
    /**
     * @return Indicates whether parameters of the entity type should be redacted in log. If redaction is enabled, page parameters and intent parameters referring to the entity type will be replaced by parameter name when logging.
     * 
     */
    private final Boolean redact;

    @CustomType.Constructor
    private GetEntityTypeResult(
        @CustomType.Parameter("autoExpansionMode") String autoExpansionMode,
        @CustomType.Parameter("displayName") String displayName,
        @CustomType.Parameter("enableFuzzyExtraction") Boolean enableFuzzyExtraction,
        @CustomType.Parameter("entities") List<GoogleCloudDialogflowCxV3EntityTypeEntityResponse> entities,
        @CustomType.Parameter("excludedPhrases") List<GoogleCloudDialogflowCxV3EntityTypeExcludedPhraseResponse> excludedPhrases,
        @CustomType.Parameter("kind") String kind,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("redact") Boolean redact) {
        this.autoExpansionMode = autoExpansionMode;
        this.displayName = displayName;
        this.enableFuzzyExtraction = enableFuzzyExtraction;
        this.entities = entities;
        this.excludedPhrases = excludedPhrases;
        this.kind = kind;
        this.name = name;
        this.redact = redact;
    }

    /**
     * @return Indicates whether the entity type can be automatically expanded.
     * 
     */
    public String autoExpansionMode() {
        return this.autoExpansionMode;
    }
    /**
     * @return The human-readable name of the entity type, unique within the agent.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return Enables fuzzy entity extraction during classification.
     * 
     */
    public Boolean enableFuzzyExtraction() {
        return this.enableFuzzyExtraction;
    }
    /**
     * @return The collection of entity entries associated with the entity type.
     * 
     */
    public List<GoogleCloudDialogflowCxV3EntityTypeEntityResponse> entities() {
        return this.entities;
    }
    /**
     * @return Collection of exceptional words and phrases that shouldn&#39;t be matched. For example, if you have a size entity type with entry `giant`(an adjective), you might consider adding `giants`(a noun) as an exclusion. If the kind of entity type is `KIND_MAP`, then the phrases specified by entities and excluded phrases should be mutually exclusive.
     * 
     */
    public List<GoogleCloudDialogflowCxV3EntityTypeExcludedPhraseResponse> excludedPhrases() {
        return this.excludedPhrases;
    }
    /**
     * @return Indicates the kind of entity type.
     * 
     */
    public String kind() {
        return this.kind;
    }
    /**
     * @return The unique identifier of the entity type. Required for EntityTypes.UpdateEntityType. Format: `projects//locations//agents//entityTypes/`.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Indicates whether parameters of the entity type should be redacted in log. If redaction is enabled, page parameters and intent parameters referring to the entity type will be replaced by parameter name when logging.
     * 
     */
    public Boolean redact() {
        return this.redact;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetEntityTypeResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String autoExpansionMode;
        private String displayName;
        private Boolean enableFuzzyExtraction;
        private List<GoogleCloudDialogflowCxV3EntityTypeEntityResponse> entities;
        private List<GoogleCloudDialogflowCxV3EntityTypeExcludedPhraseResponse> excludedPhrases;
        private String kind;
        private String name;
        private Boolean redact;

        public Builder() {
    	      // Empty
        }

        public Builder(GetEntityTypeResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.autoExpansionMode = defaults.autoExpansionMode;
    	      this.displayName = defaults.displayName;
    	      this.enableFuzzyExtraction = defaults.enableFuzzyExtraction;
    	      this.entities = defaults.entities;
    	      this.excludedPhrases = defaults.excludedPhrases;
    	      this.kind = defaults.kind;
    	      this.name = defaults.name;
    	      this.redact = defaults.redact;
        }

        public Builder autoExpansionMode(String autoExpansionMode) {
            this.autoExpansionMode = Objects.requireNonNull(autoExpansionMode);
            return this;
        }
        public Builder displayName(String displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }
        public Builder enableFuzzyExtraction(Boolean enableFuzzyExtraction) {
            this.enableFuzzyExtraction = Objects.requireNonNull(enableFuzzyExtraction);
            return this;
        }
        public Builder entities(List<GoogleCloudDialogflowCxV3EntityTypeEntityResponse> entities) {
            this.entities = Objects.requireNonNull(entities);
            return this;
        }
        public Builder entities(GoogleCloudDialogflowCxV3EntityTypeEntityResponse... entities) {
            return entities(List.of(entities));
        }
        public Builder excludedPhrases(List<GoogleCloudDialogflowCxV3EntityTypeExcludedPhraseResponse> excludedPhrases) {
            this.excludedPhrases = Objects.requireNonNull(excludedPhrases);
            return this;
        }
        public Builder excludedPhrases(GoogleCloudDialogflowCxV3EntityTypeExcludedPhraseResponse... excludedPhrases) {
            return excludedPhrases(List.of(excludedPhrases));
        }
        public Builder kind(String kind) {
            this.kind = Objects.requireNonNull(kind);
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder redact(Boolean redact) {
            this.redact = Objects.requireNonNull(redact);
            return this;
        }        public GetEntityTypeResult build() {
            return new GetEntityTypeResult(autoExpansionMode, displayName, enableFuzzyExtraction, entities, excludedPhrases, kind, name, redact);
        }
    }
}
