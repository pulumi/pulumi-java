// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.containeranalysis_v1beta1.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.containeranalysis_v1beta1.inputs.CVSSv3Response;
import com.pulumi.googlenative.containeranalysis_v1beta1.inputs.DetailResponse;
import com.pulumi.googlenative.containeranalysis_v1beta1.inputs.WindowsDetailResponse;
import java.lang.Double;
import java.lang.String;
import java.util.List;
import java.util.Objects;


/**
 * Vulnerability provides metadata about a security vulnerability in a Note.
 * 
 */
public final class VulnerabilityResponse extends com.pulumi.resources.InvokeArgs {

    public static final VulnerabilityResponse Empty = new VulnerabilityResponse();

    /**
     * The CVSS score for this vulnerability.
     * 
     */
    @Import(name="cvssScore", required=true)
    private Double cvssScore;

    public Double cvssScore() {
        return this.cvssScore;
    }

    /**
     * The full description of the CVSSv3.
     * 
     */
    @Import(name="cvssV3", required=true)
    private CVSSv3Response cvssV3;

    public CVSSv3Response cvssV3() {
        return this.cvssV3;
    }

    /**
     * All information about the package to specifically identify this vulnerability. One entry per (version range and cpe_uri) the package vulnerability has manifested in.
     * 
     */
    @Import(name="details", required=true)
    private List<DetailResponse> details;

    public List<DetailResponse> details() {
        return this.details;
    }

    /**
     * Note provider assigned impact of the vulnerability.
     * 
     */
    @Import(name="severity", required=true)
    private String severity;

    public String severity() {
        return this.severity;
    }

    /**
     * The time this information was last changed at the source. This is an upstream timestamp from the underlying information source - e.g. Ubuntu security tracker.
     * 
     */
    @Import(name="sourceUpdateTime", required=true)
    private String sourceUpdateTime;

    public String sourceUpdateTime() {
        return this.sourceUpdateTime;
    }

    /**
     * Windows details get their own format because the information format and model don&#39;t match a normal detail. Specifically Windows updates are done as patches, thus Windows vulnerabilities really are a missing package, rather than a package being at an incorrect version.
     * 
     */
    @Import(name="windowsDetails", required=true)
    private List<WindowsDetailResponse> windowsDetails;

    public List<WindowsDetailResponse> windowsDetails() {
        return this.windowsDetails;
    }

    private VulnerabilityResponse() {}

    private VulnerabilityResponse(VulnerabilityResponse $) {
        this.cvssScore = $.cvssScore;
        this.cvssV3 = $.cvssV3;
        this.details = $.details;
        this.severity = $.severity;
        this.sourceUpdateTime = $.sourceUpdateTime;
        this.windowsDetails = $.windowsDetails;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VulnerabilityResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VulnerabilityResponse $;

        public Builder() {
            $ = new VulnerabilityResponse();
        }

        public Builder(VulnerabilityResponse defaults) {
            $ = new VulnerabilityResponse(Objects.requireNonNull(defaults));
        }

        public Builder cvssScore(Double cvssScore) {
            $.cvssScore = cvssScore;
            return this;
        }

        public Builder cvssV3(CVSSv3Response cvssV3) {
            $.cvssV3 = cvssV3;
            return this;
        }

        public Builder details(List<DetailResponse> details) {
            $.details = details;
            return this;
        }

        public Builder details(DetailResponse... details) {
            return details(List.of(details));
        }

        public Builder severity(String severity) {
            $.severity = severity;
            return this;
        }

        public Builder sourceUpdateTime(String sourceUpdateTime) {
            $.sourceUpdateTime = sourceUpdateTime;
            return this;
        }

        public Builder windowsDetails(List<WindowsDetailResponse> windowsDetails) {
            $.windowsDetails = windowsDetails;
            return this;
        }

        public Builder windowsDetails(WindowsDetailResponse... windowsDetails) {
            return windowsDetails(List.of(windowsDetails));
        }

        public VulnerabilityResponse build() {
            $.cvssScore = Objects.requireNonNull($.cvssScore, "expected parameter 'cvssScore' to be non-null");
            $.cvssV3 = Objects.requireNonNull($.cvssV3, "expected parameter 'cvssV3' to be non-null");
            $.details = Objects.requireNonNull($.details, "expected parameter 'details' to be non-null");
            $.severity = Objects.requireNonNull($.severity, "expected parameter 'severity' to be non-null");
            $.sourceUpdateTime = Objects.requireNonNull($.sourceUpdateTime, "expected parameter 'sourceUpdateTime' to be non-null");
            $.windowsDetails = Objects.requireNonNull($.windowsDetails, "expected parameter 'windowsDetails' to be non-null");
            return $;
        }
    }

}
