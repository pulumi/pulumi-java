// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.sqladmin_v1.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;


/**
 * Maintenance window. This specifies when a Cloud SQL instance is restarted for system maintenance purposes.
 * 
 */
public final class MaintenanceWindowResponse extends com.pulumi.resources.InvokeArgs {

    public static final MaintenanceWindowResponse Empty = new MaintenanceWindowResponse();

    /**
     * day of week (1-7), starting on Monday.
     * 
     */
    @Import(name="day", required=true)
    private Integer day;

    /**
     * @return day of week (1-7), starting on Monday.
     * 
     */
    public Integer day() {
        return this.day;
    }

    /**
     * hour of day - 0 to 23.
     * 
     */
    @Import(name="hour", required=true)
    private Integer hour;

    /**
     * @return hour of day - 0 to 23.
     * 
     */
    public Integer hour() {
        return this.hour;
    }

    /**
     * This is always `sql#maintenanceWindow`.
     * 
     */
    @Import(name="kind", required=true)
    private String kind;

    /**
     * @return This is always `sql#maintenanceWindow`.
     * 
     */
    public String kind() {
        return this.kind;
    }

    /**
     * Maintenance timing setting: `canary` (Earlier) or `stable` (Later). [Learn more](https://cloud.google.com/sql/docs/mysql/instance-settings#maintenance-timing-2ndgen).
     * 
     */
    @Import(name="updateTrack", required=true)
    private String updateTrack;

    /**
     * @return Maintenance timing setting: `canary` (Earlier) or `stable` (Later). [Learn more](https://cloud.google.com/sql/docs/mysql/instance-settings#maintenance-timing-2ndgen).
     * 
     */
    public String updateTrack() {
        return this.updateTrack;
    }

    private MaintenanceWindowResponse() {}

    private MaintenanceWindowResponse(MaintenanceWindowResponse $) {
        this.day = $.day;
        this.hour = $.hour;
        this.kind = $.kind;
        this.updateTrack = $.updateTrack;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MaintenanceWindowResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MaintenanceWindowResponse $;

        public Builder() {
            $ = new MaintenanceWindowResponse();
        }

        public Builder(MaintenanceWindowResponse defaults) {
            $ = new MaintenanceWindowResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param day day of week (1-7), starting on Monday.
         * 
         * @return builder
         * 
         */
        public Builder day(Integer day) {
            $.day = day;
            return this;
        }

        /**
         * @param hour hour of day - 0 to 23.
         * 
         * @return builder
         * 
         */
        public Builder hour(Integer hour) {
            $.hour = hour;
            return this;
        }

        /**
         * @param kind This is always `sql#maintenanceWindow`.
         * 
         * @return builder
         * 
         */
        public Builder kind(String kind) {
            $.kind = kind;
            return this;
        }

        /**
         * @param updateTrack Maintenance timing setting: `canary` (Earlier) or `stable` (Later). [Learn more](https://cloud.google.com/sql/docs/mysql/instance-settings#maintenance-timing-2ndgen).
         * 
         * @return builder
         * 
         */
        public Builder updateTrack(String updateTrack) {
            $.updateTrack = updateTrack;
            return this;
        }

        public MaintenanceWindowResponse build() {
            $.day = Objects.requireNonNull($.day, "expected parameter 'day' to be non-null");
            $.hour = Objects.requireNonNull($.hour, "expected parameter 'hour' to be non-null");
            $.kind = Objects.requireNonNull($.kind, "expected parameter 'kind' to be non-null");
            $.updateTrack = Objects.requireNonNull($.updateTrack, "expected parameter 'updateTrack' to be non-null");
            return $;
        }
    }

}
