// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.connectors.v1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Determines whether or no a connection is locked. If locked, a reason must be specified.
 * 
 */
public final class LockConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final LockConfigArgs Empty = new LockConfigArgs();

    /**
     * Indicates whether or not the connection is locked.
     * 
     */
    @Import(name="locked")
    private @Nullable Output<Boolean> locked;

    /**
     * @return Indicates whether or not the connection is locked.
     * 
     */
    public Optional<Output<Boolean>> locked() {
        return Optional.ofNullable(this.locked);
    }

    /**
     * Describes why a connection is locked.
     * 
     */
    @Import(name="reason")
    private @Nullable Output<String> reason;

    /**
     * @return Describes why a connection is locked.
     * 
     */
    public Optional<Output<String>> reason() {
        return Optional.ofNullable(this.reason);
    }

    private LockConfigArgs() {}

    private LockConfigArgs(LockConfigArgs $) {
        this.locked = $.locked;
        this.reason = $.reason;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LockConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LockConfigArgs $;

        public Builder() {
            $ = new LockConfigArgs();
        }

        public Builder(LockConfigArgs defaults) {
            $ = new LockConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param locked Indicates whether or not the connection is locked.
         * 
         * @return builder
         * 
         */
        public Builder locked(@Nullable Output<Boolean> locked) {
            $.locked = locked;
            return this;
        }

        /**
         * @param locked Indicates whether or not the connection is locked.
         * 
         * @return builder
         * 
         */
        public Builder locked(Boolean locked) {
            return locked(Output.of(locked));
        }

        /**
         * @param reason Describes why a connection is locked.
         * 
         * @return builder
         * 
         */
        public Builder reason(@Nullable Output<String> reason) {
            $.reason = reason;
            return this;
        }

        /**
         * @param reason Describes why a connection is locked.
         * 
         * @return builder
         * 
         */
        public Builder reason(String reason) {
            return reason(Output.of(reason));
        }

        public LockConfigArgs build() {
            return $;
        }
    }

}
