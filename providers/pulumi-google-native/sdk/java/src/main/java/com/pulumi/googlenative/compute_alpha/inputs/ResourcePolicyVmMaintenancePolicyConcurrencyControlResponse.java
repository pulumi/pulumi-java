// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.compute_alpha.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.util.Objects;


/**
 * A concurrency control configuration. Defines a group config that, when attached to an instance, recognizes that instance as part of a group of instances where only up the concurrency_limit of instances in that group can undergo simultaneous maintenance. For more information: go/concurrency-control-design-doc
 * 
 */
public final class ResourcePolicyVmMaintenancePolicyConcurrencyControlResponse extends com.pulumi.resources.InvokeArgs {

    public static final ResourcePolicyVmMaintenancePolicyConcurrencyControlResponse Empty = new ResourcePolicyVmMaintenancePolicyConcurrencyControlResponse();

    @Import(name="concurrencyLimit", required=true)
    private Integer concurrencyLimit;

    public Integer concurrencyLimit() {
        return this.concurrencyLimit;
    }

    private ResourcePolicyVmMaintenancePolicyConcurrencyControlResponse() {}

    private ResourcePolicyVmMaintenancePolicyConcurrencyControlResponse(ResourcePolicyVmMaintenancePolicyConcurrencyControlResponse $) {
        this.concurrencyLimit = $.concurrencyLimit;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ResourcePolicyVmMaintenancePolicyConcurrencyControlResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ResourcePolicyVmMaintenancePolicyConcurrencyControlResponse $;

        public Builder() {
            $ = new ResourcePolicyVmMaintenancePolicyConcurrencyControlResponse();
        }

        public Builder(ResourcePolicyVmMaintenancePolicyConcurrencyControlResponse defaults) {
            $ = new ResourcePolicyVmMaintenancePolicyConcurrencyControlResponse(Objects.requireNonNull(defaults));
        }

        public Builder concurrencyLimit(Integer concurrencyLimit) {
            $.concurrencyLimit = concurrencyLimit;
            return this;
        }

        public ResourcePolicyVmMaintenancePolicyConcurrencyControlResponse build() {
            $.concurrencyLimit = Objects.requireNonNull($.concurrencyLimit, "expected parameter 'concurrencyLimit' to be non-null");
            return $;
        }
    }

}
