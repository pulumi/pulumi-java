// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.dataproc.v1.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class DiskConfigResponse {
    /**
     * @return Optional. Size in GB of the boot disk (default is 500GB).
     * 
     */
    private final Integer bootDiskSizeGb;
    /**
     * @return Optional. Type of the boot disk (default is &#34;pd-standard&#34;). Valid values: &#34;pd-balanced&#34; (Persistent Disk Balanced Solid State Drive), &#34;pd-ssd&#34; (Persistent Disk Solid State Drive), or &#34;pd-standard&#34; (Persistent Disk Hard Disk Drive). See Disk types (https://cloud.google.com/compute/docs/disks#disk-types).
     * 
     */
    private final String bootDiskType;
    /**
     * @return Optional. Interface type of local SSDs (default is &#34;scsi&#34;). Valid values: &#34;scsi&#34; (Small Computer System Interface), &#34;nvme&#34; (Non-Volatile Memory Express). See local SSD performance (https://cloud.google.com/compute/docs/disks/local-ssd#performance).
     * 
     */
    private final String localSsdInterface;
    /**
     * @return Optional. Number of attached SSDs, from 0 to 8 (default is 0). If SSDs are not attached, the boot disk is used to store runtime logs and HDFS (https://hadoop.apache.org/docs/r1.2.1/hdfs_user_guide.html) data. If one or more SSDs are attached, this runtime bulk data is spread across them, and the boot disk contains only basic config and installed binaries.Note: Local SSD options may vary by machine type and number of vCPUs selected.
     * 
     */
    private final Integer numLocalSsds;

    @CustomType.Constructor
    private DiskConfigResponse(
        @CustomType.Parameter("bootDiskSizeGb") Integer bootDiskSizeGb,
        @CustomType.Parameter("bootDiskType") String bootDiskType,
        @CustomType.Parameter("localSsdInterface") String localSsdInterface,
        @CustomType.Parameter("numLocalSsds") Integer numLocalSsds) {
        this.bootDiskSizeGb = bootDiskSizeGb;
        this.bootDiskType = bootDiskType;
        this.localSsdInterface = localSsdInterface;
        this.numLocalSsds = numLocalSsds;
    }

    /**
     * @return Optional. Size in GB of the boot disk (default is 500GB).
     * 
     */
    public Integer bootDiskSizeGb() {
        return this.bootDiskSizeGb;
    }
    /**
     * @return Optional. Type of the boot disk (default is &#34;pd-standard&#34;). Valid values: &#34;pd-balanced&#34; (Persistent Disk Balanced Solid State Drive), &#34;pd-ssd&#34; (Persistent Disk Solid State Drive), or &#34;pd-standard&#34; (Persistent Disk Hard Disk Drive). See Disk types (https://cloud.google.com/compute/docs/disks#disk-types).
     * 
     */
    public String bootDiskType() {
        return this.bootDiskType;
    }
    /**
     * @return Optional. Interface type of local SSDs (default is &#34;scsi&#34;). Valid values: &#34;scsi&#34; (Small Computer System Interface), &#34;nvme&#34; (Non-Volatile Memory Express). See local SSD performance (https://cloud.google.com/compute/docs/disks/local-ssd#performance).
     * 
     */
    public String localSsdInterface() {
        return this.localSsdInterface;
    }
    /**
     * @return Optional. Number of attached SSDs, from 0 to 8 (default is 0). If SSDs are not attached, the boot disk is used to store runtime logs and HDFS (https://hadoop.apache.org/docs/r1.2.1/hdfs_user_guide.html) data. If one or more SSDs are attached, this runtime bulk data is spread across them, and the boot disk contains only basic config and installed binaries.Note: Local SSD options may vary by machine type and number of vCPUs selected.
     * 
     */
    public Integer numLocalSsds() {
        return this.numLocalSsds;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DiskConfigResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Integer bootDiskSizeGb;
        private String bootDiskType;
        private String localSsdInterface;
        private Integer numLocalSsds;

        public Builder() {
    	      // Empty
        }

        public Builder(DiskConfigResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bootDiskSizeGb = defaults.bootDiskSizeGb;
    	      this.bootDiskType = defaults.bootDiskType;
    	      this.localSsdInterface = defaults.localSsdInterface;
    	      this.numLocalSsds = defaults.numLocalSsds;
        }

        public Builder bootDiskSizeGb(Integer bootDiskSizeGb) {
            this.bootDiskSizeGb = Objects.requireNonNull(bootDiskSizeGb);
            return this;
        }
        public Builder bootDiskType(String bootDiskType) {
            this.bootDiskType = Objects.requireNonNull(bootDiskType);
            return this;
        }
        public Builder localSsdInterface(String localSsdInterface) {
            this.localSsdInterface = Objects.requireNonNull(localSsdInterface);
            return this;
        }
        public Builder numLocalSsds(Integer numLocalSsds) {
            this.numLocalSsds = Objects.requireNonNull(numLocalSsds);
            return this;
        }        public DiskConfigResponse build() {
            return new DiskConfigResponse(bootDiskSizeGb, bootDiskType, localSsdInterface, numLocalSsds);
        }
    }
}
