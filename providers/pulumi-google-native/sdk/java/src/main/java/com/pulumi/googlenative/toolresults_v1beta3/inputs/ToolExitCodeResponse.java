// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.toolresults_v1beta3.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.util.Objects;


/**
 * Exit code from a tool execution.
 * 
 */
public final class ToolExitCodeResponse extends com.pulumi.resources.InvokeArgs {

    public static final ToolExitCodeResponse Empty = new ToolExitCodeResponse();

    /**
     * Tool execution exit code. A value of 0 means that the execution was successful. - In response: always set - In create/update request: always set
     * 
     */
    @Import(name="number", required=true)
    private Integer number;

    /**
     * @return Tool execution exit code. A value of 0 means that the execution was successful. - In response: always set - In create/update request: always set
     * 
     */
    public Integer number() {
        return this.number;
    }

    private ToolExitCodeResponse() {}

    private ToolExitCodeResponse(ToolExitCodeResponse $) {
        this.number = $.number;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ToolExitCodeResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ToolExitCodeResponse $;

        public Builder() {
            $ = new ToolExitCodeResponse();
        }

        public Builder(ToolExitCodeResponse defaults) {
            $ = new ToolExitCodeResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param number Tool execution exit code. A value of 0 means that the execution was successful. - In response: always set - In create/update request: always set
         * 
         * @return builder
         * 
         */
        public Builder number(Integer number) {
            $.number = number;
            return this;
        }

        public ToolExitCodeResponse build() {
            $.number = Objects.requireNonNull($.number, "expected parameter 'number' to be non-null");
            return $;
        }
    }

}
