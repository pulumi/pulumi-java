// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.monitoring.v3.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetMetricDescriptorArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetMetricDescriptorArgs Empty = new GetMetricDescriptorArgs();

    @Import(name="metricDescriptorId", required=true)
    private Output<String> metricDescriptorId;

    public Output<String> metricDescriptorId() {
        return this.metricDescriptorId;
    }

    @Import(name="project")
    private @Nullable Output<String> project;

    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    private GetMetricDescriptorArgs() {}

    private GetMetricDescriptorArgs(GetMetricDescriptorArgs $) {
        this.metricDescriptorId = $.metricDescriptorId;
        this.project = $.project;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetMetricDescriptorArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetMetricDescriptorArgs $;

        public Builder() {
            $ = new GetMetricDescriptorArgs();
        }

        public Builder(GetMetricDescriptorArgs defaults) {
            $ = new GetMetricDescriptorArgs(Objects.requireNonNull(defaults));
        }

        public Builder metricDescriptorId(Output<String> metricDescriptorId) {
            $.metricDescriptorId = metricDescriptorId;
            return this;
        }

        public Builder metricDescriptorId(String metricDescriptorId) {
            return metricDescriptorId(Output.of(metricDescriptorId));
        }

        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        public Builder project(String project) {
            return project(Output.of(project));
        }

        public GetMetricDescriptorArgs build() {
            $.metricDescriptorId = Objects.requireNonNull($.metricDescriptorId, "expected parameter 'metricDescriptorId' to be non-null");
            return $;
        }
    }

}
