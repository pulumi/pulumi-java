// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.testing.v1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.testing.v1.inputs.GoogleCloudStorageArgs;
import com.pulumi.googlenative.testing.v1.inputs.ToolResultsHistoryArgs;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Locations where the results of running the test are stored.
 * 
 */
public final class ResultStorageArgs extends com.pulumi.resources.ResourceArgs {

    public static final ResultStorageArgs Empty = new ResultStorageArgs();

    /**
     * Required.
     * 
     */
    @Import(name="googleCloudStorage", required=true)
    private Output<GoogleCloudStorageArgs> googleCloudStorage;

    /**
     * @return Required.
     * 
     */
    public Output<GoogleCloudStorageArgs> googleCloudStorage() {
        return this.googleCloudStorage;
    }

    /**
     * The tool results history that contains the tool results execution that results are written to. If not provided, the service will choose an appropriate value.
     * 
     */
    @Import(name="toolResultsHistory")
    private @Nullable Output<ToolResultsHistoryArgs> toolResultsHistory;

    /**
     * @return The tool results history that contains the tool results execution that results are written to. If not provided, the service will choose an appropriate value.
     * 
     */
    public Optional<Output<ToolResultsHistoryArgs>> toolResultsHistory() {
        return Optional.ofNullable(this.toolResultsHistory);
    }

    private ResultStorageArgs() {}

    private ResultStorageArgs(ResultStorageArgs $) {
        this.googleCloudStorage = $.googleCloudStorage;
        this.toolResultsHistory = $.toolResultsHistory;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ResultStorageArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ResultStorageArgs $;

        public Builder() {
            $ = new ResultStorageArgs();
        }

        public Builder(ResultStorageArgs defaults) {
            $ = new ResultStorageArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param googleCloudStorage Required.
         * 
         * @return builder
         * 
         */
        public Builder googleCloudStorage(Output<GoogleCloudStorageArgs> googleCloudStorage) {
            $.googleCloudStorage = googleCloudStorage;
            return this;
        }

        /**
         * @param googleCloudStorage Required.
         * 
         * @return builder
         * 
         */
        public Builder googleCloudStorage(GoogleCloudStorageArgs googleCloudStorage) {
            return googleCloudStorage(Output.of(googleCloudStorage));
        }

        /**
         * @param toolResultsHistory The tool results history that contains the tool results execution that results are written to. If not provided, the service will choose an appropriate value.
         * 
         * @return builder
         * 
         */
        public Builder toolResultsHistory(@Nullable Output<ToolResultsHistoryArgs> toolResultsHistory) {
            $.toolResultsHistory = toolResultsHistory;
            return this;
        }

        /**
         * @param toolResultsHistory The tool results history that contains the tool results execution that results are written to. If not provided, the service will choose an appropriate value.
         * 
         * @return builder
         * 
         */
        public Builder toolResultsHistory(ToolResultsHistoryArgs toolResultsHistory) {
            return toolResultsHistory(Output.of(toolResultsHistory));
        }

        public ResultStorageArgs build() {
            $.googleCloudStorage = Objects.requireNonNull($.googleCloudStorage, "expected parameter 'googleCloudStorage' to be non-null");
            return $;
        }
    }

}
