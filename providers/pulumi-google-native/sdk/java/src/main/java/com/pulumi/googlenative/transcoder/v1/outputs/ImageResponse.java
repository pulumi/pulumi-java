// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.transcoder.v1.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.googlenative.transcoder.v1.outputs.NormalizedCoordinateResponse;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class ImageResponse {
    /**
     * @return Target image opacity. Valid values are from `1.0` (solid, default) to `0.0` (transparent), exclusive. Set this to a value greater than `0.0`.
     * 
     */
    private final Double alpha;
    /**
     * @return Normalized image resolution, based on output video resolution. Valid values: `0.0`–`1.0`. To respect the original image aspect ratio, set either `x` or `y` to `0.0`. To use the original image resolution, set both `x` and `y` to `0.0`.
     * 
     */
    private final NormalizedCoordinateResponse resolution;
    /**
     * @return URI of the JPEG image in Cloud Storage. For example, `gs://bucket/inputs/image.jpeg`. JPEG is the only supported image type.
     * 
     */
    private final String uri;

    @CustomType.Constructor
    private ImageResponse(
        @CustomType.Parameter("alpha") Double alpha,
        @CustomType.Parameter("resolution") NormalizedCoordinateResponse resolution,
        @CustomType.Parameter("uri") String uri) {
        this.alpha = alpha;
        this.resolution = resolution;
        this.uri = uri;
    }

    /**
     * @return Target image opacity. Valid values are from `1.0` (solid, default) to `0.0` (transparent), exclusive. Set this to a value greater than `0.0`.
     * 
     */
    public Double alpha() {
        return this.alpha;
    }
    /**
     * @return Normalized image resolution, based on output video resolution. Valid values: `0.0`–`1.0`. To respect the original image aspect ratio, set either `x` or `y` to `0.0`. To use the original image resolution, set both `x` and `y` to `0.0`.
     * 
     */
    public NormalizedCoordinateResponse resolution() {
        return this.resolution;
    }
    /**
     * @return URI of the JPEG image in Cloud Storage. For example, `gs://bucket/inputs/image.jpeg`. JPEG is the only supported image type.
     * 
     */
    public String uri() {
        return this.uri;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ImageResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Double alpha;
        private NormalizedCoordinateResponse resolution;
        private String uri;

        public Builder() {
    	      // Empty
        }

        public Builder(ImageResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.alpha = defaults.alpha;
    	      this.resolution = defaults.resolution;
    	      this.uri = defaults.uri;
        }

        public Builder alpha(Double alpha) {
            this.alpha = Objects.requireNonNull(alpha);
            return this;
        }
        public Builder resolution(NormalizedCoordinateResponse resolution) {
            this.resolution = Objects.requireNonNull(resolution);
            return this;
        }
        public Builder uri(String uri) {
            this.uri = Objects.requireNonNull(uri);
            return this;
        }        public ImageResponse build() {
            return new ImageResponse(alpha, resolution, uri);
        }
    }
}
