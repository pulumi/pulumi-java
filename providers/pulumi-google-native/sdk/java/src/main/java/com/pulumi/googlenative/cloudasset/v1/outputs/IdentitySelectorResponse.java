// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.cloudasset.v1.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class IdentitySelectorResponse {
    /**
     * @return The identity appear in the form of principals in [IAM policy binding](https://cloud.google.com/iam/reference/rest/v1/Binding). The examples of supported forms are: &#34;user:mike@example.com&#34;, &#34;group:admins@example.com&#34;, &#34;domain:google.com&#34;, &#34;serviceAccount:my-project-id@appspot.gserviceaccount.com&#34;. Notice that wildcard characters (such as * and ?) are not supported. You must give a specific identity.
     * 
     */
    private final String identity;

    @CustomType.Constructor
    private IdentitySelectorResponse(@CustomType.Parameter("identity") String identity) {
        this.identity = identity;
    }

    /**
     * @return The identity appear in the form of principals in [IAM policy binding](https://cloud.google.com/iam/reference/rest/v1/Binding). The examples of supported forms are: &#34;user:mike@example.com&#34;, &#34;group:admins@example.com&#34;, &#34;domain:google.com&#34;, &#34;serviceAccount:my-project-id@appspot.gserviceaccount.com&#34;. Notice that wildcard characters (such as * and ?) are not supported. You must give a specific identity.
     * 
     */
    public String identity() {
        return this.identity;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(IdentitySelectorResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String identity;

        public Builder() {
    	      // Empty
        }

        public Builder(IdentitySelectorResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.identity = defaults.identity;
        }

        public Builder identity(String identity) {
            this.identity = Objects.requireNonNull(identity);
            return this;
        }        public IdentitySelectorResponse build() {
            return new IdentitySelectorResponse(identity);
        }
    }
}
