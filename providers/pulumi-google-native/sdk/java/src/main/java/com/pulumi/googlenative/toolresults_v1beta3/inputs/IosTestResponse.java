// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.toolresults_v1beta3.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.toolresults_v1beta3.inputs.DurationResponse;
import com.pulumi.googlenative.toolresults_v1beta3.inputs.IosAppInfoResponse;
import com.pulumi.googlenative.toolresults_v1beta3.inputs.IosRoboTestResponse;
import com.pulumi.googlenative.toolresults_v1beta3.inputs.IosTestLoopResponse;
import com.pulumi.googlenative.toolresults_v1beta3.inputs.IosXcTestResponse;
import java.util.Objects;


/**
 * A iOS mobile test specification
 * 
 */
public final class IosTestResponse extends com.pulumi.resources.InvokeArgs {

    public static final IosTestResponse Empty = new IosTestResponse();

    /**
     * Information about the application under test.
     * 
     */
    @Import(name="iosAppInfo", required=true)
    private IosAppInfoResponse iosAppInfo;

    public IosAppInfoResponse iosAppInfo() {
        return this.iosAppInfo;
    }

    /**
     * An iOS Robo test.
     * 
     */
    @Import(name="iosRoboTest", required=true)
    private IosRoboTestResponse iosRoboTest;

    public IosRoboTestResponse iosRoboTest() {
        return this.iosRoboTest;
    }

    /**
     * An iOS test loop.
     * 
     */
    @Import(name="iosTestLoop", required=true)
    private IosTestLoopResponse iosTestLoop;

    public IosTestLoopResponse iosTestLoop() {
        return this.iosTestLoop;
    }

    /**
     * An iOS XCTest.
     * 
     */
    @Import(name="iosXcTest", required=true)
    private IosXcTestResponse iosXcTest;

    public IosXcTestResponse iosXcTest() {
        return this.iosXcTest;
    }

    /**
     * Max time a test is allowed to run before it is automatically cancelled.
     * 
     */
    @Import(name="testTimeout", required=true)
    private DurationResponse testTimeout;

    public DurationResponse testTimeout() {
        return this.testTimeout;
    }

    private IosTestResponse() {}

    private IosTestResponse(IosTestResponse $) {
        this.iosAppInfo = $.iosAppInfo;
        this.iosRoboTest = $.iosRoboTest;
        this.iosTestLoop = $.iosTestLoop;
        this.iosXcTest = $.iosXcTest;
        this.testTimeout = $.testTimeout;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(IosTestResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private IosTestResponse $;

        public Builder() {
            $ = new IosTestResponse();
        }

        public Builder(IosTestResponse defaults) {
            $ = new IosTestResponse(Objects.requireNonNull(defaults));
        }

        public Builder iosAppInfo(IosAppInfoResponse iosAppInfo) {
            $.iosAppInfo = iosAppInfo;
            return this;
        }

        public Builder iosRoboTest(IosRoboTestResponse iosRoboTest) {
            $.iosRoboTest = iosRoboTest;
            return this;
        }

        public Builder iosTestLoop(IosTestLoopResponse iosTestLoop) {
            $.iosTestLoop = iosTestLoop;
            return this;
        }

        public Builder iosXcTest(IosXcTestResponse iosXcTest) {
            $.iosXcTest = iosXcTest;
            return this;
        }

        public Builder testTimeout(DurationResponse testTimeout) {
            $.testTimeout = testTimeout;
            return this;
        }

        public IosTestResponse build() {
            $.iosAppInfo = Objects.requireNonNull($.iosAppInfo, "expected parameter 'iosAppInfo' to be non-null");
            $.iosRoboTest = Objects.requireNonNull($.iosRoboTest, "expected parameter 'iosRoboTest' to be non-null");
            $.iosTestLoop = Objects.requireNonNull($.iosTestLoop, "expected parameter 'iosTestLoop' to be non-null");
            $.iosXcTest = Objects.requireNonNull($.iosXcTest, "expected parameter 'iosXcTest' to be non-null");
            $.testTimeout = Objects.requireNonNull($.testTimeout, "expected parameter 'testTimeout' to be non-null");
            return $;
        }
    }

}
