// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.retail_v2alpha.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Prevents `query_term` from being associated with specified terms during search. Example: Don&#39;t associate &#34;gShoe&#34; and &#34;cheap&#34;.
 * 
 */
public final class GoogleCloudRetailV2alphaRuleDoNotAssociateActionArgs extends com.pulumi.resources.ResourceArgs {

    public static final GoogleCloudRetailV2alphaRuleDoNotAssociateActionArgs Empty = new GoogleCloudRetailV2alphaRuleDoNotAssociateActionArgs();

    /**
     * Cannot contain duplicates or the query term. Can specify up to 100 terms.
     * 
     */
    @Import(name="doNotAssociateTerms")
    private @Nullable Output<List<String>> doNotAssociateTerms;

    public Optional<Output<List<String>>> doNotAssociateTerms() {
        return Optional.ofNullable(this.doNotAssociateTerms);
    }

    /**
     * Terms from the search query. Will not consider do_not_associate_terms for search if in search query. Can specify up to 100 terms.
     * 
     */
    @Import(name="queryTerms")
    private @Nullable Output<List<String>> queryTerms;

    public Optional<Output<List<String>>> queryTerms() {
        return Optional.ofNullable(this.queryTerms);
    }

    /**
     * Will be [deprecated = true] post migration;
     * 
     */
    @Import(name="terms")
    private @Nullable Output<List<String>> terms;

    public Optional<Output<List<String>>> terms() {
        return Optional.ofNullable(this.terms);
    }

    private GoogleCloudRetailV2alphaRuleDoNotAssociateActionArgs() {}

    private GoogleCloudRetailV2alphaRuleDoNotAssociateActionArgs(GoogleCloudRetailV2alphaRuleDoNotAssociateActionArgs $) {
        this.doNotAssociateTerms = $.doNotAssociateTerms;
        this.queryTerms = $.queryTerms;
        this.terms = $.terms;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GoogleCloudRetailV2alphaRuleDoNotAssociateActionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GoogleCloudRetailV2alphaRuleDoNotAssociateActionArgs $;

        public Builder() {
            $ = new GoogleCloudRetailV2alphaRuleDoNotAssociateActionArgs();
        }

        public Builder(GoogleCloudRetailV2alphaRuleDoNotAssociateActionArgs defaults) {
            $ = new GoogleCloudRetailV2alphaRuleDoNotAssociateActionArgs(Objects.requireNonNull(defaults));
        }

        public Builder doNotAssociateTerms(@Nullable Output<List<String>> doNotAssociateTerms) {
            $.doNotAssociateTerms = doNotAssociateTerms;
            return this;
        }

        public Builder doNotAssociateTerms(List<String> doNotAssociateTerms) {
            return doNotAssociateTerms(Output.of(doNotAssociateTerms));
        }

        public Builder doNotAssociateTerms(String... doNotAssociateTerms) {
            return doNotAssociateTerms(List.of(doNotAssociateTerms));
        }

        public Builder queryTerms(@Nullable Output<List<String>> queryTerms) {
            $.queryTerms = queryTerms;
            return this;
        }

        public Builder queryTerms(List<String> queryTerms) {
            return queryTerms(Output.of(queryTerms));
        }

        public Builder queryTerms(String... queryTerms) {
            return queryTerms(List.of(queryTerms));
        }

        public Builder terms(@Nullable Output<List<String>> terms) {
            $.terms = terms;
            return this;
        }

        public Builder terms(List<String> terms) {
            return terms(Output.of(terms));
        }

        public Builder terms(String... terms) {
            return terms(List.of(terms));
        }

        public GoogleCloudRetailV2alphaRuleDoNotAssociateActionArgs build() {
            return $;
        }
    }

}
