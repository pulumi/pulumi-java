// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.monitoring_v1.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.monitoring_v1.inputs.AggregationResponse;
import java.lang.String;
import java.util.Objects;


/**
 * Describes a query to build the numerator or denominator of a TimeSeriesFilterRatio.
 * 
 */
public final class RatioPartResponse extends com.pulumi.resources.InvokeArgs {

    public static final RatioPartResponse Empty = new RatioPartResponse();

    /**
     * By default, the raw time series data is returned. Use this field to combine multiple time series for different views of the data.
     * 
     */
    @Import(name="aggregation", required=true)
    private AggregationResponse aggregation;

    public AggregationResponse aggregation() {
        return this.aggregation;
    }

    /**
     * The monitoring filter (https://cloud.google.com/monitoring/api/v3/filters) that identifies the metric types, resources, and projects to query.
     * 
     */
    @Import(name="filter", required=true)
    private String filter;

    public String filter() {
        return this.filter;
    }

    private RatioPartResponse() {}

    private RatioPartResponse(RatioPartResponse $) {
        this.aggregation = $.aggregation;
        this.filter = $.filter;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RatioPartResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RatioPartResponse $;

        public Builder() {
            $ = new RatioPartResponse();
        }

        public Builder(RatioPartResponse defaults) {
            $ = new RatioPartResponse(Objects.requireNonNull(defaults));
        }

        public Builder aggregation(AggregationResponse aggregation) {
            $.aggregation = aggregation;
            return this;
        }

        public Builder filter(String filter) {
            $.filter = filter;
            return this;
        }

        public RatioPartResponse build() {
            $.aggregation = Objects.requireNonNull($.aggregation, "expected parameter 'aggregation' to be non-null");
            $.filter = Objects.requireNonNull($.filter, "expected parameter 'filter' to be non-null");
            return $;
        }
    }

}
