// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.cloudsearch.v1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.cloudsearch.v1.inputs.FilterOptionsArgs;
import com.pulumi.googlenative.cloudsearch.v1.inputs.SourceArgs;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Restriction on Datasource.
 * 
 */
public final class DataSourceRestrictionArgs extends com.pulumi.resources.ResourceArgs {

    public static final DataSourceRestrictionArgs Empty = new DataSourceRestrictionArgs();

    /**
     * Filter options restricting the results. If multiple filters are present, they are grouped by object type before joining. Filters with the same object type are joined conjunctively, then the resulting expressions are joined disjunctively. The maximum number of elements is 20. NOTE: Suggest API supports only few filters at the moment: &#34;objecttype&#34;, &#34;type&#34; and &#34;mimetype&#34;. For now, schema specific filters cannot be used to filter suggestions.
     * 
     */
    @Import(name="filterOptions")
    private @Nullable Output<List<FilterOptionsArgs>> filterOptions;

    /**
     * @return Filter options restricting the results. If multiple filters are present, they are grouped by object type before joining. Filters with the same object type are joined conjunctively, then the resulting expressions are joined disjunctively. The maximum number of elements is 20. NOTE: Suggest API supports only few filters at the moment: &#34;objecttype&#34;, &#34;type&#34; and &#34;mimetype&#34;. For now, schema specific filters cannot be used to filter suggestions.
     * 
     */
    public Optional<Output<List<FilterOptionsArgs>>> filterOptions() {
        return Optional.ofNullable(this.filterOptions);
    }

    /**
     * The source of restriction.
     * 
     */
    @Import(name="source")
    private @Nullable Output<SourceArgs> source;

    /**
     * @return The source of restriction.
     * 
     */
    public Optional<Output<SourceArgs>> source() {
        return Optional.ofNullable(this.source);
    }

    private DataSourceRestrictionArgs() {}

    private DataSourceRestrictionArgs(DataSourceRestrictionArgs $) {
        this.filterOptions = $.filterOptions;
        this.source = $.source;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DataSourceRestrictionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DataSourceRestrictionArgs $;

        public Builder() {
            $ = new DataSourceRestrictionArgs();
        }

        public Builder(DataSourceRestrictionArgs defaults) {
            $ = new DataSourceRestrictionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param filterOptions Filter options restricting the results. If multiple filters are present, they are grouped by object type before joining. Filters with the same object type are joined conjunctively, then the resulting expressions are joined disjunctively. The maximum number of elements is 20. NOTE: Suggest API supports only few filters at the moment: &#34;objecttype&#34;, &#34;type&#34; and &#34;mimetype&#34;. For now, schema specific filters cannot be used to filter suggestions.
         * 
         * @return builder
         * 
         */
        public Builder filterOptions(@Nullable Output<List<FilterOptionsArgs>> filterOptions) {
            $.filterOptions = filterOptions;
            return this;
        }

        /**
         * @param filterOptions Filter options restricting the results. If multiple filters are present, they are grouped by object type before joining. Filters with the same object type are joined conjunctively, then the resulting expressions are joined disjunctively. The maximum number of elements is 20. NOTE: Suggest API supports only few filters at the moment: &#34;objecttype&#34;, &#34;type&#34; and &#34;mimetype&#34;. For now, schema specific filters cannot be used to filter suggestions.
         * 
         * @return builder
         * 
         */
        public Builder filterOptions(List<FilterOptionsArgs> filterOptions) {
            return filterOptions(Output.of(filterOptions));
        }

        /**
         * @param filterOptions Filter options restricting the results. If multiple filters are present, they are grouped by object type before joining. Filters with the same object type are joined conjunctively, then the resulting expressions are joined disjunctively. The maximum number of elements is 20. NOTE: Suggest API supports only few filters at the moment: &#34;objecttype&#34;, &#34;type&#34; and &#34;mimetype&#34;. For now, schema specific filters cannot be used to filter suggestions.
         * 
         * @return builder
         * 
         */
        public Builder filterOptions(FilterOptionsArgs... filterOptions) {
            return filterOptions(List.of(filterOptions));
        }

        /**
         * @param source The source of restriction.
         * 
         * @return builder
         * 
         */
        public Builder source(@Nullable Output<SourceArgs> source) {
            $.source = source;
            return this;
        }

        /**
         * @param source The source of restriction.
         * 
         * @return builder
         * 
         */
        public Builder source(SourceArgs source) {
            return source(Output.of(source));
        }

        public DataSourceRestrictionArgs build() {
            return $;
        }
    }

}
