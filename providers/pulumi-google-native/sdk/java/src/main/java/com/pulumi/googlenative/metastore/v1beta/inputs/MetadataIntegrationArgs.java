// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.metastore.v1beta.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.metastore.v1beta.inputs.DataCatalogConfigArgs;
import com.pulumi.googlenative.metastore.v1beta.inputs.DataplexConfigArgs;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Specifies how metastore metadata should be integrated with external services.
 * 
 */
public final class MetadataIntegrationArgs extends com.pulumi.resources.ResourceArgs {

    public static final MetadataIntegrationArgs Empty = new MetadataIntegrationArgs();

    /**
     * The integration config for the Data Catalog service.
     * 
     */
    @Import(name="dataCatalogConfig")
    private @Nullable Output<DataCatalogConfigArgs> dataCatalogConfig;

    /**
     * @return The integration config for the Data Catalog service.
     * 
     */
    public Optional<Output<DataCatalogConfigArgs>> dataCatalogConfig() {
        return Optional.ofNullable(this.dataCatalogConfig);
    }

    /**
     * The integration config for the Dataplex service.
     * 
     */
    @Import(name="dataplexConfig")
    private @Nullable Output<DataplexConfigArgs> dataplexConfig;

    /**
     * @return The integration config for the Dataplex service.
     * 
     */
    public Optional<Output<DataplexConfigArgs>> dataplexConfig() {
        return Optional.ofNullable(this.dataplexConfig);
    }

    private MetadataIntegrationArgs() {}

    private MetadataIntegrationArgs(MetadataIntegrationArgs $) {
        this.dataCatalogConfig = $.dataCatalogConfig;
        this.dataplexConfig = $.dataplexConfig;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MetadataIntegrationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MetadataIntegrationArgs $;

        public Builder() {
            $ = new MetadataIntegrationArgs();
        }

        public Builder(MetadataIntegrationArgs defaults) {
            $ = new MetadataIntegrationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param dataCatalogConfig The integration config for the Data Catalog service.
         * 
         * @return builder
         * 
         */
        public Builder dataCatalogConfig(@Nullable Output<DataCatalogConfigArgs> dataCatalogConfig) {
            $.dataCatalogConfig = dataCatalogConfig;
            return this;
        }

        /**
         * @param dataCatalogConfig The integration config for the Data Catalog service.
         * 
         * @return builder
         * 
         */
        public Builder dataCatalogConfig(DataCatalogConfigArgs dataCatalogConfig) {
            return dataCatalogConfig(Output.of(dataCatalogConfig));
        }

        /**
         * @param dataplexConfig The integration config for the Dataplex service.
         * 
         * @return builder
         * 
         */
        public Builder dataplexConfig(@Nullable Output<DataplexConfigArgs> dataplexConfig) {
            $.dataplexConfig = dataplexConfig;
            return this;
        }

        /**
         * @param dataplexConfig The integration config for the Dataplex service.
         * 
         * @return builder
         * 
         */
        public Builder dataplexConfig(DataplexConfigArgs dataplexConfig) {
            return dataplexConfig(Output.of(dataplexConfig));
        }

        public MetadataIntegrationArgs build() {
            return $;
        }
    }

}
