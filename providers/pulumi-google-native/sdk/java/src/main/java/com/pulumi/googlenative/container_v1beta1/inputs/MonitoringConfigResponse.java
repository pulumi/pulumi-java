// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.container_v1beta1.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.container_v1beta1.inputs.ManagedPrometheusConfigResponse;
import com.pulumi.googlenative.container_v1beta1.inputs.MonitoringComponentConfigResponse;
import java.util.Objects;


/**
 * MonitoringConfig is cluster monitoring configuration.
 * 
 */
public final class MonitoringConfigResponse extends com.pulumi.resources.InvokeArgs {

    public static final MonitoringConfigResponse Empty = new MonitoringConfigResponse();

    /**
     * Monitoring components configuration
     * 
     */
    @Import(name="componentConfig", required=true)
    private MonitoringComponentConfigResponse componentConfig;

    public MonitoringComponentConfigResponse componentConfig() {
        return this.componentConfig;
    }

    /**
     * Enable Google Cloud Managed Service for Prometheus in the cluster.
     * 
     */
    @Import(name="managedPrometheusConfig", required=true)
    private ManagedPrometheusConfigResponse managedPrometheusConfig;

    public ManagedPrometheusConfigResponse managedPrometheusConfig() {
        return this.managedPrometheusConfig;
    }

    private MonitoringConfigResponse() {}

    private MonitoringConfigResponse(MonitoringConfigResponse $) {
        this.componentConfig = $.componentConfig;
        this.managedPrometheusConfig = $.managedPrometheusConfig;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MonitoringConfigResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MonitoringConfigResponse $;

        public Builder() {
            $ = new MonitoringConfigResponse();
        }

        public Builder(MonitoringConfigResponse defaults) {
            $ = new MonitoringConfigResponse(Objects.requireNonNull(defaults));
        }

        public Builder componentConfig(MonitoringComponentConfigResponse componentConfig) {
            $.componentConfig = componentConfig;
            return this;
        }

        public Builder managedPrometheusConfig(ManagedPrometheusConfigResponse managedPrometheusConfig) {
            $.managedPrometheusConfig = managedPrometheusConfig;
            return this;
        }

        public MonitoringConfigResponse build() {
            $.componentConfig = Objects.requireNonNull($.componentConfig, "expected parameter 'componentConfig' to be non-null");
            $.managedPrometheusConfig = Objects.requireNonNull($.managedPrometheusConfig, "expected parameter 'managedPrometheusConfig' to be non-null");
            return $;
        }
    }

}
