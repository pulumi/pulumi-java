// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.vmmigration_v1.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;


/**
 * ReplicationCycle contains information about the current replication cycle status.
 * 
 */
public final class ReplicationCycleResponse extends com.pulumi.resources.InvokeArgs {

    public static final ReplicationCycleResponse Empty = new ReplicationCycleResponse();

    /**
     * The current progress in percentage of this cycle.
     * 
     */
    @Import(name="progressPercent", required=true)
      private final Integer progressPercent;

    public Integer progressPercent() {
        return this.progressPercent;
    }

    /**
     * The time the replication cycle has started.
     * 
     */
    @Import(name="startTime", required=true)
      private final String startTime;

    public String startTime() {
        return this.startTime;
    }

    public ReplicationCycleResponse(
        Integer progressPercent,
        String startTime) {
        this.progressPercent = Objects.requireNonNull(progressPercent, "expected parameter 'progressPercent' to be non-null");
        this.startTime = Objects.requireNonNull(startTime, "expected parameter 'startTime' to be non-null");
    }

    private ReplicationCycleResponse() {
        this.progressPercent = null;
        this.startTime = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ReplicationCycleResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Integer progressPercent;
        private String startTime;

        public Builder() {
    	      // Empty
        }

        public Builder(ReplicationCycleResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.progressPercent = defaults.progressPercent;
    	      this.startTime = defaults.startTime;
        }

        public Builder progressPercent(Integer progressPercent) {
            this.progressPercent = Objects.requireNonNull(progressPercent);
            return this;
        }
        public Builder startTime(String startTime) {
            this.startTime = Objects.requireNonNull(startTime);
            return this;
        }        public ReplicationCycleResponse build() {
            return new ReplicationCycleResponse(progressPercent, startTime);
        }
    }
}
