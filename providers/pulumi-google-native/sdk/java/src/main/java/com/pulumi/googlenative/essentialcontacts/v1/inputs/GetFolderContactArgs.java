// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.essentialcontacts.v1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GetFolderContactArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetFolderContactArgs Empty = new GetFolderContactArgs();

    @Import(name="contactId", required=true)
    private Output<String> contactId;

    public Output<String> contactId() {
        return this.contactId;
    }

    @Import(name="folderId", required=true)
    private Output<String> folderId;

    public Output<String> folderId() {
        return this.folderId;
    }

    private GetFolderContactArgs() {}

    private GetFolderContactArgs(GetFolderContactArgs $) {
        this.contactId = $.contactId;
        this.folderId = $.folderId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetFolderContactArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetFolderContactArgs $;

        public Builder() {
            $ = new GetFolderContactArgs();
        }

        public Builder(GetFolderContactArgs defaults) {
            $ = new GetFolderContactArgs(Objects.requireNonNull(defaults));
        }

        public Builder contactId(Output<String> contactId) {
            $.contactId = contactId;
            return this;
        }

        public Builder contactId(String contactId) {
            return contactId(Output.of(contactId));
        }

        public Builder folderId(Output<String> folderId) {
            $.folderId = folderId;
            return this;
        }

        public Builder folderId(String folderId) {
            return folderId(Output.of(folderId));
        }

        public GetFolderContactArgs build() {
            $.contactId = Objects.requireNonNull($.contactId, "expected parameter 'contactId' to be non-null");
            $.folderId = Objects.requireNonNull($.folderId, "expected parameter 'folderId' to be non-null");
            return $;
        }
    }

}
