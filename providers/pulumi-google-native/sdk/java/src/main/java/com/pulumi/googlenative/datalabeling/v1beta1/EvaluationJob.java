// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.datalabeling.v1beta1;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.googlenative.Utilities;
import com.pulumi.googlenative.datalabeling.v1beta1.EvaluationJobArgs;
import com.pulumi.googlenative.datalabeling.v1beta1.outputs.GoogleCloudDatalabelingV1beta1AttemptResponse;
import com.pulumi.googlenative.datalabeling.v1beta1.outputs.GoogleCloudDatalabelingV1beta1EvaluationJobConfigResponse;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * Creates an evaluation job.
 * Auto-naming is currently not supported for this resource.
 * 
 */
@ResourceType(type="google-native:datalabeling/v1beta1:EvaluationJob")
public class EvaluationJob extends com.pulumi.resources.CustomResource {
    /**
     * Name of the AnnotationSpecSet describing all the labels that your machine learning model outputs. You must create this resource before you create an evaluation job and provide its name in the following format: &#34;projects/{project_id}/annotationSpecSets/{annotation_spec_set_id}&#34;
     * 
     */
    @Export(name="annotationSpecSet", type=String.class, parameters={})
    private Output<String> annotationSpecSet;

    /**
     * @return Name of the AnnotationSpecSet describing all the labels that your machine learning model outputs. You must create this resource before you create an evaluation job and provide its name in the following format: &#34;projects/{project_id}/annotationSpecSets/{annotation_spec_set_id}&#34;
     * 
     */
    public Output<String> annotationSpecSet() {
        return this.annotationSpecSet;
    }
    /**
     * Every time the evaluation job runs and an error occurs, the failed attempt is appended to this array.
     * 
     */
    @Export(name="attempts", type=List.class, parameters={GoogleCloudDatalabelingV1beta1AttemptResponse.class})
    private Output<List<GoogleCloudDatalabelingV1beta1AttemptResponse>> attempts;

    /**
     * @return Every time the evaluation job runs and an error occurs, the failed attempt is appended to this array.
     * 
     */
    public Output<List<GoogleCloudDatalabelingV1beta1AttemptResponse>> attempts() {
        return this.attempts;
    }
    /**
     * Timestamp of when this evaluation job was created.
     * 
     */
    @Export(name="createTime", type=String.class, parameters={})
    private Output<String> createTime;

    /**
     * @return Timestamp of when this evaluation job was created.
     * 
     */
    public Output<String> createTime() {
        return this.createTime;
    }
    /**
     * Description of the job. The description can be up to 25,000 characters long.
     * 
     */
    @Export(name="description", type=String.class, parameters={})
    private Output<String> description;

    /**
     * @return Description of the job. The description can be up to 25,000 characters long.
     * 
     */
    public Output<String> description() {
        return this.description;
    }
    /**
     * Configuration details for the evaluation job.
     * 
     */
    @Export(name="evaluationJobConfig", type=GoogleCloudDatalabelingV1beta1EvaluationJobConfigResponse.class, parameters={})
    private Output<GoogleCloudDatalabelingV1beta1EvaluationJobConfigResponse> evaluationJobConfig;

    /**
     * @return Configuration details for the evaluation job.
     * 
     */
    public Output<GoogleCloudDatalabelingV1beta1EvaluationJobConfigResponse> evaluationJobConfig() {
        return this.evaluationJobConfig;
    }
    /**
     * Whether you want Data Labeling Service to provide ground truth labels for prediction input. If you want the service to assign human labelers to annotate your data, set this to `true`. If you want to provide your own ground truth labels in the evaluation job&#39;s BigQuery table, set this to `false`.
     * 
     */
    @Export(name="labelMissingGroundTruth", type=Boolean.class, parameters={})
    private Output<Boolean> labelMissingGroundTruth;

    /**
     * @return Whether you want Data Labeling Service to provide ground truth labels for prediction input. If you want the service to assign human labelers to annotate your data, set this to `true`. If you want to provide your own ground truth labels in the evaluation job&#39;s BigQuery table, set this to `false`.
     * 
     */
    public Output<Boolean> labelMissingGroundTruth() {
        return this.labelMissingGroundTruth;
    }
    /**
     * The [AI Platform Prediction model version](/ml-engine/docs/prediction-overview) to be evaluated. Prediction input and output is sampled from this model version. When creating an evaluation job, specify the model version in the following format: &#34;projects/{project_id}/models/{model_name}/versions/{version_name}&#34; There can only be one evaluation job per model version.
     * 
     */
    @Export(name="modelVersion", type=String.class, parameters={})
    private Output<String> modelVersion;

    /**
     * @return The [AI Platform Prediction model version](/ml-engine/docs/prediction-overview) to be evaluated. Prediction input and output is sampled from this model version. When creating an evaluation job, specify the model version in the following format: &#34;projects/{project_id}/models/{model_name}/versions/{version_name}&#34; There can only be one evaluation job per model version.
     * 
     */
    public Output<String> modelVersion() {
        return this.modelVersion;
    }
    /**
     * After you create a job, Data Labeling Service assigns a name to the job with the following format: &#34;projects/{project_id}/evaluationJobs/ {evaluation_job_id}&#34;
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return After you create a job, Data Labeling Service assigns a name to the job with the following format: &#34;projects/{project_id}/evaluationJobs/ {evaluation_job_id}&#34;
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    @Export(name="project", type=String.class, parameters={})
    private Output<String> project;

    public Output<String> project() {
        return this.project;
    }
    /**
     * Describes the interval at which the job runs. This interval must be at least 1 day, and it is rounded to the nearest day. For example, if you specify a 50-hour interval, the job runs every 2 days. You can provide the schedule in [crontab format](/scheduler/docs/configuring/cron-job-schedules) or in an [English-like format](/appengine/docs/standard/python/config/cronref#schedule_format). Regardless of what you specify, the job will run at 10:00 AM UTC. Only the interval from this schedule is used, not the specific time of day.
     * 
     */
    @Export(name="schedule", type=String.class, parameters={})
    private Output<String> schedule;

    /**
     * @return Describes the interval at which the job runs. This interval must be at least 1 day, and it is rounded to the nearest day. For example, if you specify a 50-hour interval, the job runs every 2 days. You can provide the schedule in [crontab format](/scheduler/docs/configuring/cron-job-schedules) or in an [English-like format](/appengine/docs/standard/python/config/cronref#schedule_format). Regardless of what you specify, the job will run at 10:00 AM UTC. Only the interval from this schedule is used, not the specific time of day.
     * 
     */
    public Output<String> schedule() {
        return this.schedule;
    }
    /**
     * Describes the current state of the job.
     * 
     */
    @Export(name="state", type=String.class, parameters={})
    private Output<String> state;

    /**
     * @return Describes the current state of the job.
     * 
     */
    public Output<String> state() {
        return this.state;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public EvaluationJob(String name) {
        this(name, EvaluationJobArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public EvaluationJob(String name, EvaluationJobArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public EvaluationJob(String name, EvaluationJobArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("google-native:datalabeling/v1beta1:EvaluationJob", name, args == null ? EvaluationJobArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private EvaluationJob(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("google-native:datalabeling/v1beta1:EvaluationJob", name, null, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static EvaluationJob get(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new EvaluationJob(name, id, options);
    }
}
