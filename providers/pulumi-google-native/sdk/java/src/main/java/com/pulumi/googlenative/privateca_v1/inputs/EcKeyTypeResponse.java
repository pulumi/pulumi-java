// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.privateca_v1.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * Describes an Elliptic Curve key that may be used in a Certificate issued from a CaPool.
 * 
 */
public final class EcKeyTypeResponse extends com.pulumi.resources.InvokeArgs {

    public static final EcKeyTypeResponse Empty = new EcKeyTypeResponse();

    /**
     * Optional. A signature algorithm that must be used. If this is omitted, any EC-based signature algorithm will be allowed.
     * 
     */
    @Import(name="signatureAlgorithm", required=true)
    private String signatureAlgorithm;

    /**
     * @return Optional. A signature algorithm that must be used. If this is omitted, any EC-based signature algorithm will be allowed.
     * 
     */
    public String signatureAlgorithm() {
        return this.signatureAlgorithm;
    }

    private EcKeyTypeResponse() {}

    private EcKeyTypeResponse(EcKeyTypeResponse $) {
        this.signatureAlgorithm = $.signatureAlgorithm;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EcKeyTypeResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EcKeyTypeResponse $;

        public Builder() {
            $ = new EcKeyTypeResponse();
        }

        public Builder(EcKeyTypeResponse defaults) {
            $ = new EcKeyTypeResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param signatureAlgorithm Optional. A signature algorithm that must be used. If this is omitted, any EC-based signature algorithm will be allowed.
         * 
         * @return builder
         * 
         */
        public Builder signatureAlgorithm(String signatureAlgorithm) {
            $.signatureAlgorithm = signatureAlgorithm;
            return this;
        }

        public EcKeyTypeResponse build() {
            $.signatureAlgorithm = Objects.requireNonNull($.signatureAlgorithm, "expected parameter 'signatureAlgorithm' to be non-null");
            return $;
        }
    }

}
