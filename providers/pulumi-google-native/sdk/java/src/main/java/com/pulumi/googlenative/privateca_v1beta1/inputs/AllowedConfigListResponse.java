// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.privateca_v1beta1.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.privateca_v1beta1.inputs.ReusableConfigWrapperResponse;
import java.util.List;
import java.util.Objects;


public final class AllowedConfigListResponse extends com.pulumi.resources.InvokeArgs {

    public static final AllowedConfigListResponse Empty = new AllowedConfigListResponse();

    /**
     * All Certificates issued by the CertificateAuthority must match at least one listed ReusableConfigWrapper. If a ReusableConfigWrapper has an empty field, any value will be allowed for that field.
     * 
     */
    @Import(name="allowedConfigValues", required=true)
    private List<ReusableConfigWrapperResponse> allowedConfigValues;

    public List<ReusableConfigWrapperResponse> allowedConfigValues() {
        return this.allowedConfigValues;
    }

    private AllowedConfigListResponse() {}

    private AllowedConfigListResponse(AllowedConfigListResponse $) {
        this.allowedConfigValues = $.allowedConfigValues;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AllowedConfigListResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AllowedConfigListResponse $;

        public Builder() {
            $ = new AllowedConfigListResponse();
        }

        public Builder(AllowedConfigListResponse defaults) {
            $ = new AllowedConfigListResponse(Objects.requireNonNull(defaults));
        }

        public Builder allowedConfigValues(List<ReusableConfigWrapperResponse> allowedConfigValues) {
            $.allowedConfigValues = allowedConfigValues;
            return this;
        }

        public Builder allowedConfigValues(ReusableConfigWrapperResponse... allowedConfigValues) {
            return allowedConfigValues(List.of(allowedConfigValues));
        }

        public AllowedConfigListResponse build() {
            $.allowedConfigValues = Objects.requireNonNull($.allowedConfigValues, "expected parameter 'allowedConfigValues' to be non-null");
            return $;
        }
    }

}
