// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.logging.v2.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.googlenative.logging.v2.outputs.BigQueryOptionsResponse;
import com.pulumi.googlenative.logging.v2.outputs.LogExclusionResponse;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetBillingAccountSinkResult {
    /**
     * @return Optional. Options that affect sinks exporting data to BigQuery.
     * 
     */
    private final BigQueryOptionsResponse bigqueryOptions;
    /**
     * @return The creation timestamp of the sink.This field may not be present for older sinks.
     * 
     */
    private final String createTime;
    /**
     * @return Optional. A description of this sink.The maximum length of the description is 8000 characters.
     * 
     */
    private final String description;
    /**
     * @return The export destination: &#34;storage.googleapis.com/[GCS_BUCKET]&#34; &#34;bigquery.googleapis.com/projects/[PROJECT_ID]/datasets/[DATASET]&#34; &#34;pubsub.googleapis.com/projects/[PROJECT_ID]/topics/[TOPIC_ID]&#34; The sink&#39;s writer_identity, set when the sink is created, must have permission to write to the destination or else the log entries are not exported. For more information, see Exporting Logs with Sinks (https://cloud.google.com/logging/docs/api/tasks/exporting-logs).
     * 
     */
    private final String destination;
    /**
     * @return Optional. If set to true, then this sink is disabled and it does not export any log entries.
     * 
     */
    private final Boolean disabled;
    /**
     * @return Optional. Log entries that match any of these exclusion filters will not be exported.If a log entry is matched by both filter and one of exclusion_filters it will not be exported.
     * 
     */
    private final List<LogExclusionResponse> exclusions;
    /**
     * @return Optional. An advanced logs filter (https://cloud.google.com/logging/docs/view/advanced-queries). The only exported log entries are those that are in the resource owning the sink and that match the filter.For example:logName=&#34;projects/[PROJECT_ID]/logs/[LOG_ID]&#34; AND severity&gt;=ERROR
     * 
     */
    private final String filter;
    /**
     * @return Optional. This field applies only to sinks owned by organizations and folders. If the field is false, the default, only the logs owned by the sink&#39;s parent resource are available for export. If the field is true, then log entries from all the projects, folders, and billing accounts contained in the sink&#39;s parent resource are also available for export. Whether a particular log entry from the children is exported depends on the sink&#39;s filter expression.For example, if this field is true, then the filter resource.type=gce_instance would export all Compute Engine VM instance log entries from all projects in the sink&#39;s parent.To only export entries from certain child projects, filter on the project part of the log name:logName:(&#34;projects/test-project1/&#34; OR &#34;projects/test-project2/&#34;) AND resource.type=gce_instance
     * 
     */
    private final Boolean includeChildren;
    /**
     * @return The client-assigned sink identifier, unique within the project.For example: &#34;my-syslog-errors-to-pubsub&#34;. Sink identifiers are limited to 100 characters and can include only the following characters: upper and lower-case alphanumeric characters, underscores, hyphens, and periods. First character has to be alphanumeric.
     * 
     */
    private final String name;
    /**
     * @return Deprecated. This field is unused.
     * 
     * @deprecated
     * Deprecated. This field is unused.
     * 
     */
    @Deprecated /* Deprecated. This field is unused. */
    private final String outputVersionFormat;
    /**
     * @return The last update timestamp of the sink.This field may not be present for older sinks.
     * 
     */
    private final String updateTime;
    /**
     * @return An IAM identity—a service account or group—under which Cloud Logging writes the exported log entries to the sink&#39;s destination. This field is set by sinks.create and sinks.update based on the value of unique_writer_identity in those methods.Until you grant this identity write-access to the destination, log entry exports from this sink will fail. For more information, see Granting Access for a Resource (https://cloud.google.com/iam/docs/granting-roles-to-service-accounts#granting_access_to_a_service_account_for_a_resource). Consult the destination service&#39;s documentation to determine the appropriate IAM roles to assign to the identity.Sinks that have a destination that is a log bucket in the same project as the sink do not have a writer_identity and no additional permissions are required.
     * 
     */
    private final String writerIdentity;

    @CustomType.Constructor
    private GetBillingAccountSinkResult(
        @CustomType.Parameter("bigqueryOptions") BigQueryOptionsResponse bigqueryOptions,
        @CustomType.Parameter("createTime") String createTime,
        @CustomType.Parameter("description") String description,
        @CustomType.Parameter("destination") String destination,
        @CustomType.Parameter("disabled") Boolean disabled,
        @CustomType.Parameter("exclusions") List<LogExclusionResponse> exclusions,
        @CustomType.Parameter("filter") String filter,
        @CustomType.Parameter("includeChildren") Boolean includeChildren,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("outputVersionFormat") String outputVersionFormat,
        @CustomType.Parameter("updateTime") String updateTime,
        @CustomType.Parameter("writerIdentity") String writerIdentity) {
        this.bigqueryOptions = bigqueryOptions;
        this.createTime = createTime;
        this.description = description;
        this.destination = destination;
        this.disabled = disabled;
        this.exclusions = exclusions;
        this.filter = filter;
        this.includeChildren = includeChildren;
        this.name = name;
        this.outputVersionFormat = outputVersionFormat;
        this.updateTime = updateTime;
        this.writerIdentity = writerIdentity;
    }

    /**
     * @return Optional. Options that affect sinks exporting data to BigQuery.
     * 
     */
    public BigQueryOptionsResponse bigqueryOptions() {
        return this.bigqueryOptions;
    }
    /**
     * @return The creation timestamp of the sink.This field may not be present for older sinks.
     * 
     */
    public String createTime() {
        return this.createTime;
    }
    /**
     * @return Optional. A description of this sink.The maximum length of the description is 8000 characters.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return The export destination: &#34;storage.googleapis.com/[GCS_BUCKET]&#34; &#34;bigquery.googleapis.com/projects/[PROJECT_ID]/datasets/[DATASET]&#34; &#34;pubsub.googleapis.com/projects/[PROJECT_ID]/topics/[TOPIC_ID]&#34; The sink&#39;s writer_identity, set when the sink is created, must have permission to write to the destination or else the log entries are not exported. For more information, see Exporting Logs with Sinks (https://cloud.google.com/logging/docs/api/tasks/exporting-logs).
     * 
     */
    public String destination() {
        return this.destination;
    }
    /**
     * @return Optional. If set to true, then this sink is disabled and it does not export any log entries.
     * 
     */
    public Boolean disabled() {
        return this.disabled;
    }
    /**
     * @return Optional. Log entries that match any of these exclusion filters will not be exported.If a log entry is matched by both filter and one of exclusion_filters it will not be exported.
     * 
     */
    public List<LogExclusionResponse> exclusions() {
        return this.exclusions;
    }
    /**
     * @return Optional. An advanced logs filter (https://cloud.google.com/logging/docs/view/advanced-queries). The only exported log entries are those that are in the resource owning the sink and that match the filter.For example:logName=&#34;projects/[PROJECT_ID]/logs/[LOG_ID]&#34; AND severity&gt;=ERROR
     * 
     */
    public String filter() {
        return this.filter;
    }
    /**
     * @return Optional. This field applies only to sinks owned by organizations and folders. If the field is false, the default, only the logs owned by the sink&#39;s parent resource are available for export. If the field is true, then log entries from all the projects, folders, and billing accounts contained in the sink&#39;s parent resource are also available for export. Whether a particular log entry from the children is exported depends on the sink&#39;s filter expression.For example, if this field is true, then the filter resource.type=gce_instance would export all Compute Engine VM instance log entries from all projects in the sink&#39;s parent.To only export entries from certain child projects, filter on the project part of the log name:logName:(&#34;projects/test-project1/&#34; OR &#34;projects/test-project2/&#34;) AND resource.type=gce_instance
     * 
     */
    public Boolean includeChildren() {
        return this.includeChildren;
    }
    /**
     * @return The client-assigned sink identifier, unique within the project.For example: &#34;my-syslog-errors-to-pubsub&#34;. Sink identifiers are limited to 100 characters and can include only the following characters: upper and lower-case alphanumeric characters, underscores, hyphens, and periods. First character has to be alphanumeric.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Deprecated. This field is unused.
     * 
     * @deprecated
     * Deprecated. This field is unused.
     * 
     */
    @Deprecated /* Deprecated. This field is unused. */
    public String outputVersionFormat() {
        return this.outputVersionFormat;
    }
    /**
     * @return The last update timestamp of the sink.This field may not be present for older sinks.
     * 
     */
    public String updateTime() {
        return this.updateTime;
    }
    /**
     * @return An IAM identity—a service account or group—under which Cloud Logging writes the exported log entries to the sink&#39;s destination. This field is set by sinks.create and sinks.update based on the value of unique_writer_identity in those methods.Until you grant this identity write-access to the destination, log entry exports from this sink will fail. For more information, see Granting Access for a Resource (https://cloud.google.com/iam/docs/granting-roles-to-service-accounts#granting_access_to_a_service_account_for_a_resource). Consult the destination service&#39;s documentation to determine the appropriate IAM roles to assign to the identity.Sinks that have a destination that is a log bucket in the same project as the sink do not have a writer_identity and no additional permissions are required.
     * 
     */
    public String writerIdentity() {
        return this.writerIdentity;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetBillingAccountSinkResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BigQueryOptionsResponse bigqueryOptions;
        private String createTime;
        private String description;
        private String destination;
        private Boolean disabled;
        private List<LogExclusionResponse> exclusions;
        private String filter;
        private Boolean includeChildren;
        private String name;
        private String outputVersionFormat;
        private String updateTime;
        private String writerIdentity;

        public Builder() {
    	      // Empty
        }

        public Builder(GetBillingAccountSinkResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bigqueryOptions = defaults.bigqueryOptions;
    	      this.createTime = defaults.createTime;
    	      this.description = defaults.description;
    	      this.destination = defaults.destination;
    	      this.disabled = defaults.disabled;
    	      this.exclusions = defaults.exclusions;
    	      this.filter = defaults.filter;
    	      this.includeChildren = defaults.includeChildren;
    	      this.name = defaults.name;
    	      this.outputVersionFormat = defaults.outputVersionFormat;
    	      this.updateTime = defaults.updateTime;
    	      this.writerIdentity = defaults.writerIdentity;
        }

        public Builder bigqueryOptions(BigQueryOptionsResponse bigqueryOptions) {
            this.bigqueryOptions = Objects.requireNonNull(bigqueryOptions);
            return this;
        }
        public Builder createTime(String createTime) {
            this.createTime = Objects.requireNonNull(createTime);
            return this;
        }
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        public Builder destination(String destination) {
            this.destination = Objects.requireNonNull(destination);
            return this;
        }
        public Builder disabled(Boolean disabled) {
            this.disabled = Objects.requireNonNull(disabled);
            return this;
        }
        public Builder exclusions(List<LogExclusionResponse> exclusions) {
            this.exclusions = Objects.requireNonNull(exclusions);
            return this;
        }
        public Builder exclusions(LogExclusionResponse... exclusions) {
            return exclusions(List.of(exclusions));
        }
        public Builder filter(String filter) {
            this.filter = Objects.requireNonNull(filter);
            return this;
        }
        public Builder includeChildren(Boolean includeChildren) {
            this.includeChildren = Objects.requireNonNull(includeChildren);
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder outputVersionFormat(String outputVersionFormat) {
            this.outputVersionFormat = Objects.requireNonNull(outputVersionFormat);
            return this;
        }
        public Builder updateTime(String updateTime) {
            this.updateTime = Objects.requireNonNull(updateTime);
            return this;
        }
        public Builder writerIdentity(String writerIdentity) {
            this.writerIdentity = Objects.requireNonNull(writerIdentity);
            return this;
        }        public GetBillingAccountSinkResult build() {
            return new GetBillingAccountSinkResult(bigqueryOptions, createTime, description, destination, disabled, exclusions, filter, includeChildren, name, outputVersionFormat, updateTime, writerIdentity);
        }
    }
}
