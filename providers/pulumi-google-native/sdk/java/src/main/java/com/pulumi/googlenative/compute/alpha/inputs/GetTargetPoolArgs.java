// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.compute.alpha.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetTargetPoolArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetTargetPoolArgs Empty = new GetTargetPoolArgs();

    @Import(name="project")
    private @Nullable Output<String> project;

    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    @Import(name="region", required=true)
    private Output<String> region;

    public Output<String> region() {
        return this.region;
    }

    @Import(name="targetPool", required=true)
    private Output<String> targetPool;

    public Output<String> targetPool() {
        return this.targetPool;
    }

    private GetTargetPoolArgs() {}

    private GetTargetPoolArgs(GetTargetPoolArgs $) {
        this.project = $.project;
        this.region = $.region;
        this.targetPool = $.targetPool;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetTargetPoolArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetTargetPoolArgs $;

        public Builder() {
            $ = new GetTargetPoolArgs();
        }

        public Builder(GetTargetPoolArgs defaults) {
            $ = new GetTargetPoolArgs(Objects.requireNonNull(defaults));
        }

        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        public Builder project(String project) {
            return project(Output.of(project));
        }

        public Builder region(Output<String> region) {
            $.region = region;
            return this;
        }

        public Builder region(String region) {
            return region(Output.of(region));
        }

        public Builder targetPool(Output<String> targetPool) {
            $.targetPool = targetPool;
            return this;
        }

        public Builder targetPool(String targetPool) {
            return targetPool(Output.of(targetPool));
        }

        public GetTargetPoolArgs build() {
            $.region = Objects.requireNonNull($.region, "expected parameter 'region' to be non-null");
            $.targetPool = Objects.requireNonNull($.targetPool, "expected parameter 'targetPool' to be non-null");
            return $;
        }
    }

}
