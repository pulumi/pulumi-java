// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.container_v1beta1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Configuration for the use of Kubernetes Service Accounts in GCP IAM policies.
 * 
 */
public final class WorkloadIdentityConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final WorkloadIdentityConfigArgs Empty = new WorkloadIdentityConfigArgs();

    /**
     * IAM Identity Namespace to attach all Kubernetes Service Accounts to.
     * 
     */
    @Import(name="identityNamespace")
      private final @Nullable Output<String> identityNamespace;

    public Output<String> identityNamespace() {
        return this.identityNamespace == null ? Codegen.empty() : this.identityNamespace;
    }

    /**
     * identity provider is the third party identity provider.
     * 
     */
    @Import(name="identityProvider")
      private final @Nullable Output<String> identityProvider;

    public Output<String> identityProvider() {
        return this.identityProvider == null ? Codegen.empty() : this.identityProvider;
    }

    /**
     * The workload pool to attach all Kubernetes service accounts to.
     * 
     */
    @Import(name="workloadPool")
      private final @Nullable Output<String> workloadPool;

    public Output<String> workloadPool() {
        return this.workloadPool == null ? Codegen.empty() : this.workloadPool;
    }

    public WorkloadIdentityConfigArgs(
        @Nullable Output<String> identityNamespace,
        @Nullable Output<String> identityProvider,
        @Nullable Output<String> workloadPool) {
        this.identityNamespace = identityNamespace;
        this.identityProvider = identityProvider;
        this.workloadPool = workloadPool;
    }

    private WorkloadIdentityConfigArgs() {
        this.identityNamespace = Codegen.empty();
        this.identityProvider = Codegen.empty();
        this.workloadPool = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(WorkloadIdentityConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> identityNamespace;
        private @Nullable Output<String> identityProvider;
        private @Nullable Output<String> workloadPool;

        public Builder() {
    	      // Empty
        }

        public Builder(WorkloadIdentityConfigArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.identityNamespace = defaults.identityNamespace;
    	      this.identityProvider = defaults.identityProvider;
    	      this.workloadPool = defaults.workloadPool;
        }

        public Builder identityNamespace(@Nullable Output<String> identityNamespace) {
            this.identityNamespace = identityNamespace;
            return this;
        }
        public Builder identityNamespace(@Nullable String identityNamespace) {
            this.identityNamespace = Codegen.ofNullable(identityNamespace);
            return this;
        }
        public Builder identityProvider(@Nullable Output<String> identityProvider) {
            this.identityProvider = identityProvider;
            return this;
        }
        public Builder identityProvider(@Nullable String identityProvider) {
            this.identityProvider = Codegen.ofNullable(identityProvider);
            return this;
        }
        public Builder workloadPool(@Nullable Output<String> workloadPool) {
            this.workloadPool = workloadPool;
            return this;
        }
        public Builder workloadPool(@Nullable String workloadPool) {
            this.workloadPool = Codegen.ofNullable(workloadPool);
            return this;
        }        public WorkloadIdentityConfigArgs build() {
            return new WorkloadIdentityConfigArgs(identityNamespace, identityProvider, workloadPool);
        }
    }
}
