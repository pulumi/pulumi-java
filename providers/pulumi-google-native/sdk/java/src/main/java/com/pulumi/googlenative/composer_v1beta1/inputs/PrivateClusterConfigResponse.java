// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.composer_v1beta1.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;


/**
 * Configuration options for the private GKE cluster in a Cloud Composer environment.
 * 
 */
public final class PrivateClusterConfigResponse extends com.pulumi.resources.InvokeArgs {

    public static final PrivateClusterConfigResponse Empty = new PrivateClusterConfigResponse();

    /**
     * Optional. If `true`, access to the public endpoint of the GKE cluster is denied.
     * 
     */
    @Import(name="enablePrivateEndpoint", required=true)
    private Boolean enablePrivateEndpoint;

    public Boolean enablePrivateEndpoint() {
        return this.enablePrivateEndpoint;
    }

    /**
     * Optional. The CIDR block from which IPv4 range for GKE master will be reserved. If left blank, the default value of &#39;172.16.0.0/23&#39; is used.
     * 
     */
    @Import(name="masterIpv4CidrBlock", required=true)
    private String masterIpv4CidrBlock;

    public String masterIpv4CidrBlock() {
        return this.masterIpv4CidrBlock;
    }

    /**
     * The IP range in CIDR notation to use for the hosted master network. This range is used for assigning internal IP addresses to the cluster master or set of masters and to the internal load balancer virtual IP. This range must not overlap with any other ranges in use within the cluster&#39;s network.
     * 
     */
    @Import(name="masterIpv4ReservedRange", required=true)
    private String masterIpv4ReservedRange;

    public String masterIpv4ReservedRange() {
        return this.masterIpv4ReservedRange;
    }

    private PrivateClusterConfigResponse() {}

    private PrivateClusterConfigResponse(PrivateClusterConfigResponse $) {
        this.enablePrivateEndpoint = $.enablePrivateEndpoint;
        this.masterIpv4CidrBlock = $.masterIpv4CidrBlock;
        this.masterIpv4ReservedRange = $.masterIpv4ReservedRange;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PrivateClusterConfigResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PrivateClusterConfigResponse $;

        public Builder() {
            $ = new PrivateClusterConfigResponse();
        }

        public Builder(PrivateClusterConfigResponse defaults) {
            $ = new PrivateClusterConfigResponse(Objects.requireNonNull(defaults));
        }

        public Builder enablePrivateEndpoint(Boolean enablePrivateEndpoint) {
            $.enablePrivateEndpoint = enablePrivateEndpoint;
            return this;
        }

        public Builder masterIpv4CidrBlock(String masterIpv4CidrBlock) {
            $.masterIpv4CidrBlock = masterIpv4CidrBlock;
            return this;
        }

        public Builder masterIpv4ReservedRange(String masterIpv4ReservedRange) {
            $.masterIpv4ReservedRange = masterIpv4ReservedRange;
            return this;
        }

        public PrivateClusterConfigResponse build() {
            $.enablePrivateEndpoint = Objects.requireNonNull($.enablePrivateEndpoint, "expected parameter 'enablePrivateEndpoint' to be non-null");
            $.masterIpv4CidrBlock = Objects.requireNonNull($.masterIpv4CidrBlock, "expected parameter 'masterIpv4CidrBlock' to be non-null");
            $.masterIpv4ReservedRange = Objects.requireNonNull($.masterIpv4ReservedRange, "expected parameter 'masterIpv4ReservedRange' to be non-null");
            return $;
        }
    }

}
