// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.dataproc.v1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.dataproc.v1.inputs.GkeClusterConfigArgs;
import com.pulumi.googlenative.dataproc.v1.inputs.KubernetesSoftwareConfigArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The configuration for running the Dataproc cluster on Kubernetes.
 * 
 */
public final class KubernetesClusterConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final KubernetesClusterConfigArgs Empty = new KubernetesClusterConfigArgs();

    /**
     * The configuration for running the Dataproc cluster on GKE.
     * 
     */
    @Import(name="gkeClusterConfig", required=true)
    private Output<GkeClusterConfigArgs> gkeClusterConfig;

    /**
     * @return The configuration for running the Dataproc cluster on GKE.
     * 
     */
    public Output<GkeClusterConfigArgs> gkeClusterConfig() {
        return this.gkeClusterConfig;
    }

    /**
     * Optional. A namespace within the Kubernetes cluster to deploy into. If this namespace does not exist, it is created. If it exists, Dataproc verifies that another Dataproc VirtualCluster is not installed into it. If not specified, the name of the Dataproc Cluster is used.
     * 
     */
    @Import(name="kubernetesNamespace")
    private @Nullable Output<String> kubernetesNamespace;

    /**
     * @return Optional. A namespace within the Kubernetes cluster to deploy into. If this namespace does not exist, it is created. If it exists, Dataproc verifies that another Dataproc VirtualCluster is not installed into it. If not specified, the name of the Dataproc Cluster is used.
     * 
     */
    public Optional<Output<String>> kubernetesNamespace() {
        return Optional.ofNullable(this.kubernetesNamespace);
    }

    /**
     * Optional. The software configuration for this Dataproc cluster running on Kubernetes.
     * 
     */
    @Import(name="kubernetesSoftwareConfig")
    private @Nullable Output<KubernetesSoftwareConfigArgs> kubernetesSoftwareConfig;

    /**
     * @return Optional. The software configuration for this Dataproc cluster running on Kubernetes.
     * 
     */
    public Optional<Output<KubernetesSoftwareConfigArgs>> kubernetesSoftwareConfig() {
        return Optional.ofNullable(this.kubernetesSoftwareConfig);
    }

    private KubernetesClusterConfigArgs() {}

    private KubernetesClusterConfigArgs(KubernetesClusterConfigArgs $) {
        this.gkeClusterConfig = $.gkeClusterConfig;
        this.kubernetesNamespace = $.kubernetesNamespace;
        this.kubernetesSoftwareConfig = $.kubernetesSoftwareConfig;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(KubernetesClusterConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private KubernetesClusterConfigArgs $;

        public Builder() {
            $ = new KubernetesClusterConfigArgs();
        }

        public Builder(KubernetesClusterConfigArgs defaults) {
            $ = new KubernetesClusterConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param gkeClusterConfig The configuration for running the Dataproc cluster on GKE.
         * 
         * @return builder
         * 
         */
        public Builder gkeClusterConfig(Output<GkeClusterConfigArgs> gkeClusterConfig) {
            $.gkeClusterConfig = gkeClusterConfig;
            return this;
        }

        /**
         * @param gkeClusterConfig The configuration for running the Dataproc cluster on GKE.
         * 
         * @return builder
         * 
         */
        public Builder gkeClusterConfig(GkeClusterConfigArgs gkeClusterConfig) {
            return gkeClusterConfig(Output.of(gkeClusterConfig));
        }

        /**
         * @param kubernetesNamespace Optional. A namespace within the Kubernetes cluster to deploy into. If this namespace does not exist, it is created. If it exists, Dataproc verifies that another Dataproc VirtualCluster is not installed into it. If not specified, the name of the Dataproc Cluster is used.
         * 
         * @return builder
         * 
         */
        public Builder kubernetesNamespace(@Nullable Output<String> kubernetesNamespace) {
            $.kubernetesNamespace = kubernetesNamespace;
            return this;
        }

        /**
         * @param kubernetesNamespace Optional. A namespace within the Kubernetes cluster to deploy into. If this namespace does not exist, it is created. If it exists, Dataproc verifies that another Dataproc VirtualCluster is not installed into it. If not specified, the name of the Dataproc Cluster is used.
         * 
         * @return builder
         * 
         */
        public Builder kubernetesNamespace(String kubernetesNamespace) {
            return kubernetesNamespace(Output.of(kubernetesNamespace));
        }

        /**
         * @param kubernetesSoftwareConfig Optional. The software configuration for this Dataproc cluster running on Kubernetes.
         * 
         * @return builder
         * 
         */
        public Builder kubernetesSoftwareConfig(@Nullable Output<KubernetesSoftwareConfigArgs> kubernetesSoftwareConfig) {
            $.kubernetesSoftwareConfig = kubernetesSoftwareConfig;
            return this;
        }

        /**
         * @param kubernetesSoftwareConfig Optional. The software configuration for this Dataproc cluster running on Kubernetes.
         * 
         * @return builder
         * 
         */
        public Builder kubernetesSoftwareConfig(KubernetesSoftwareConfigArgs kubernetesSoftwareConfig) {
            return kubernetesSoftwareConfig(Output.of(kubernetesSoftwareConfig));
        }

        public KubernetesClusterConfigArgs build() {
            $.gkeClusterConfig = Objects.requireNonNull($.gkeClusterConfig, "expected parameter 'gkeClusterConfig' to be non-null");
            return $;
        }
    }

}
