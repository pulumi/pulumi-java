// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.dlp_v2.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.dlp_v2.inputs.GooglePrivacyDlpV2LikelihoodAdjustmentResponse;
import com.pulumi.googlenative.dlp_v2.inputs.GooglePrivacyDlpV2ProximityResponse;
import com.pulumi.googlenative.dlp_v2.inputs.GooglePrivacyDlpV2RegexResponse;
import java.util.Objects;


/**
 * The rule that adjusts the likelihood of findings within a certain proximity of hotwords.
 * 
 */
public final class GooglePrivacyDlpV2HotwordRuleResponse extends com.pulumi.resources.InvokeArgs {

    public static final GooglePrivacyDlpV2HotwordRuleResponse Empty = new GooglePrivacyDlpV2HotwordRuleResponse();

    /**
     * Regular expression pattern defining what qualifies as a hotword.
     * 
     */
    @Import(name="hotwordRegex", required=true)
    private GooglePrivacyDlpV2RegexResponse hotwordRegex;

    /**
     * @return Regular expression pattern defining what qualifies as a hotword.
     * 
     */
    public GooglePrivacyDlpV2RegexResponse hotwordRegex() {
        return this.hotwordRegex;
    }

    /**
     * Likelihood adjustment to apply to all matching findings.
     * 
     */
    @Import(name="likelihoodAdjustment", required=true)
    private GooglePrivacyDlpV2LikelihoodAdjustmentResponse likelihoodAdjustment;

    /**
     * @return Likelihood adjustment to apply to all matching findings.
     * 
     */
    public GooglePrivacyDlpV2LikelihoodAdjustmentResponse likelihoodAdjustment() {
        return this.likelihoodAdjustment;
    }

    /**
     * Proximity of the finding within which the entire hotword must reside. The total length of the window cannot exceed 1000 characters. Note that the finding itself will be included in the window, so that hotwords may be used to match substrings of the finding itself. For example, the certainty of a phone number regex &#34;\(\d{3}\) \d{3}-\d{4}&#34; could be adjusted upwards if the area code is known to be the local area code of a company office using the hotword regex &#34;\(xxx\)&#34;, where &#34;xxx&#34; is the area code in question.
     * 
     */
    @Import(name="proximity", required=true)
    private GooglePrivacyDlpV2ProximityResponse proximity;

    /**
     * @return Proximity of the finding within which the entire hotword must reside. The total length of the window cannot exceed 1000 characters. Note that the finding itself will be included in the window, so that hotwords may be used to match substrings of the finding itself. For example, the certainty of a phone number regex &#34;\(\d{3}\) \d{3}-\d{4}&#34; could be adjusted upwards if the area code is known to be the local area code of a company office using the hotword regex &#34;\(xxx\)&#34;, where &#34;xxx&#34; is the area code in question.
     * 
     */
    public GooglePrivacyDlpV2ProximityResponse proximity() {
        return this.proximity;
    }

    private GooglePrivacyDlpV2HotwordRuleResponse() {}

    private GooglePrivacyDlpV2HotwordRuleResponse(GooglePrivacyDlpV2HotwordRuleResponse $) {
        this.hotwordRegex = $.hotwordRegex;
        this.likelihoodAdjustment = $.likelihoodAdjustment;
        this.proximity = $.proximity;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GooglePrivacyDlpV2HotwordRuleResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GooglePrivacyDlpV2HotwordRuleResponse $;

        public Builder() {
            $ = new GooglePrivacyDlpV2HotwordRuleResponse();
        }

        public Builder(GooglePrivacyDlpV2HotwordRuleResponse defaults) {
            $ = new GooglePrivacyDlpV2HotwordRuleResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param hotwordRegex Regular expression pattern defining what qualifies as a hotword.
         * 
         * @return builder
         * 
         */
        public Builder hotwordRegex(GooglePrivacyDlpV2RegexResponse hotwordRegex) {
            $.hotwordRegex = hotwordRegex;
            return this;
        }

        /**
         * @param likelihoodAdjustment Likelihood adjustment to apply to all matching findings.
         * 
         * @return builder
         * 
         */
        public Builder likelihoodAdjustment(GooglePrivacyDlpV2LikelihoodAdjustmentResponse likelihoodAdjustment) {
            $.likelihoodAdjustment = likelihoodAdjustment;
            return this;
        }

        /**
         * @param proximity Proximity of the finding within which the entire hotword must reside. The total length of the window cannot exceed 1000 characters. Note that the finding itself will be included in the window, so that hotwords may be used to match substrings of the finding itself. For example, the certainty of a phone number regex &#34;\(\d{3}\) \d{3}-\d{4}&#34; could be adjusted upwards if the area code is known to be the local area code of a company office using the hotword regex &#34;\(xxx\)&#34;, where &#34;xxx&#34; is the area code in question.
         * 
         * @return builder
         * 
         */
        public Builder proximity(GooglePrivacyDlpV2ProximityResponse proximity) {
            $.proximity = proximity;
            return this;
        }

        public GooglePrivacyDlpV2HotwordRuleResponse build() {
            $.hotwordRegex = Objects.requireNonNull($.hotwordRegex, "expected parameter 'hotwordRegex' to be non-null");
            $.likelihoodAdjustment = Objects.requireNonNull($.likelihoodAdjustment, "expected parameter 'likelihoodAdjustment' to be non-null");
            $.proximity = Objects.requireNonNull($.proximity, "expected parameter 'proximity' to be non-null");
            return $;
        }
    }

}
