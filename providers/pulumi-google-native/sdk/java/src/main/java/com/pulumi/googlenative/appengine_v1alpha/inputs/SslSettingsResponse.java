// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.appengine_v1alpha.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;


/**
 * SSL configuration for a DomainMapping resource.
 * 
 */
public final class SslSettingsResponse extends com.pulumi.resources.InvokeArgs {

    public static final SslSettingsResponse Empty = new SslSettingsResponse();

    /**
     * ID of the AuthorizedCertificate resource configuring SSL for the application. Clearing this field will remove SSL support.By default, a managed certificate is automatically created for every domain mapping. To omit SSL support or to configure SSL manually, specify no_managed_certificate on a CREATE or UPDATE request. You must be authorized to administer the AuthorizedCertificate resource to manually map it to a DomainMapping resource. Example: 12345.
     * 
     */
    @Import(name="certificateId", required=true)
    private String certificateId;

    public String certificateId() {
        return this.certificateId;
    }

    /**
     * Whether the mapped certificate is an App Engine managed certificate. Managed certificates are created by default with a domain mapping. To opt out, specify no_managed_certificate on a CREATE or UPDATE request.
     * 
     */
    @Import(name="isManagedCertificate", required=true)
    private Boolean isManagedCertificate;

    public Boolean isManagedCertificate() {
        return this.isManagedCertificate;
    }

    private SslSettingsResponse() {}

    private SslSettingsResponse(SslSettingsResponse $) {
        this.certificateId = $.certificateId;
        this.isManagedCertificate = $.isManagedCertificate;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SslSettingsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SslSettingsResponse $;

        public Builder() {
            $ = new SslSettingsResponse();
        }

        public Builder(SslSettingsResponse defaults) {
            $ = new SslSettingsResponse(Objects.requireNonNull(defaults));
        }

        public Builder certificateId(String certificateId) {
            $.certificateId = certificateId;
            return this;
        }

        public Builder isManagedCertificate(Boolean isManagedCertificate) {
            $.isManagedCertificate = isManagedCertificate;
            return this;
        }

        public SslSettingsResponse build() {
            $.certificateId = Objects.requireNonNull($.certificateId, "expected parameter 'certificateId' to be non-null");
            $.isManagedCertificate = Objects.requireNonNull($.isManagedCertificate, "expected parameter 'isManagedCertificate' to be non-null");
            return $;
        }
    }

}
