// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.testing_v1.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.testing_v1.inputs.AndroidDeviceListResponse;
import com.pulumi.googlenative.testing_v1.inputs.AndroidMatrixResponse;
import com.pulumi.googlenative.testing_v1.inputs.IosDeviceListResponse;
import java.util.Objects;


/**
 * The matrix of environments in which the test is to be executed.
 * 
 */
public final class EnvironmentMatrixResponse extends com.pulumi.resources.InvokeArgs {

    public static final EnvironmentMatrixResponse Empty = new EnvironmentMatrixResponse();

    /**
     * A list of Android devices; the test will be run only on the specified devices.
     * 
     */
    @Import(name="androidDeviceList", required=true)
    private AndroidDeviceListResponse androidDeviceList;

    /**
     * @return A list of Android devices; the test will be run only on the specified devices.
     * 
     */
    public AndroidDeviceListResponse androidDeviceList() {
        return this.androidDeviceList;
    }

    /**
     * A matrix of Android devices.
     * 
     */
    @Import(name="androidMatrix", required=true)
    private AndroidMatrixResponse androidMatrix;

    /**
     * @return A matrix of Android devices.
     * 
     */
    public AndroidMatrixResponse androidMatrix() {
        return this.androidMatrix;
    }

    /**
     * A list of iOS devices.
     * 
     */
    @Import(name="iosDeviceList", required=true)
    private IosDeviceListResponse iosDeviceList;

    /**
     * @return A list of iOS devices.
     * 
     */
    public IosDeviceListResponse iosDeviceList() {
        return this.iosDeviceList;
    }

    private EnvironmentMatrixResponse() {}

    private EnvironmentMatrixResponse(EnvironmentMatrixResponse $) {
        this.androidDeviceList = $.androidDeviceList;
        this.androidMatrix = $.androidMatrix;
        this.iosDeviceList = $.iosDeviceList;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EnvironmentMatrixResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EnvironmentMatrixResponse $;

        public Builder() {
            $ = new EnvironmentMatrixResponse();
        }

        public Builder(EnvironmentMatrixResponse defaults) {
            $ = new EnvironmentMatrixResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param androidDeviceList A list of Android devices; the test will be run only on the specified devices.
         * 
         * @return builder
         * 
         */
        public Builder androidDeviceList(AndroidDeviceListResponse androidDeviceList) {
            $.androidDeviceList = androidDeviceList;
            return this;
        }

        /**
         * @param androidMatrix A matrix of Android devices.
         * 
         * @return builder
         * 
         */
        public Builder androidMatrix(AndroidMatrixResponse androidMatrix) {
            $.androidMatrix = androidMatrix;
            return this;
        }

        /**
         * @param iosDeviceList A list of iOS devices.
         * 
         * @return builder
         * 
         */
        public Builder iosDeviceList(IosDeviceListResponse iosDeviceList) {
            $.iosDeviceList = iosDeviceList;
            return this;
        }

        public EnvironmentMatrixResponse build() {
            $.androidDeviceList = Objects.requireNonNull($.androidDeviceList, "expected parameter 'androidDeviceList' to be non-null");
            $.androidMatrix = Objects.requireNonNull($.androidMatrix, "expected parameter 'androidMatrix' to be non-null");
            $.iosDeviceList = Objects.requireNonNull($.iosDeviceList, "expected parameter 'iosDeviceList' to be non-null");
            return $;
        }
    }

}
