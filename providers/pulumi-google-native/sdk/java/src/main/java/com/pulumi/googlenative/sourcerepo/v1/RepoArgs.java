// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.sourcerepo.v1;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.sourcerepo.v1.inputs.MirrorConfigArgs;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RepoArgs extends com.pulumi.resources.ResourceArgs {

    public static final RepoArgs Empty = new RepoArgs();

    /**
     * How this repository mirrors a repository managed by another service. Read-only field.
     * 
     */
    @Import(name="mirrorConfig")
    private @Nullable Output<MirrorConfigArgs> mirrorConfig;

    /**
     * @return How this repository mirrors a repository managed by another service. Read-only field.
     * 
     */
    public Optional<Output<MirrorConfigArgs>> mirrorConfig() {
        return Optional.ofNullable(this.mirrorConfig);
    }

    /**
     * Resource name of the repository, of the form `projects//repos/`. The repo name may contain slashes. eg, `projects/myproject/repos/name/with/slash`
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Resource name of the repository, of the form `projects//repos/`. The repo name may contain slashes. eg, `projects/myproject/repos/name/with/slash`
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="project")
    private @Nullable Output<String> project;

    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * How this repository publishes a change in the repository through Cloud Pub/Sub. Keyed by the topic names.
     * 
     */
    @Import(name="pubsubConfigs")
    private @Nullable Output<Map<String,String>> pubsubConfigs;

    /**
     * @return How this repository publishes a change in the repository through Cloud Pub/Sub. Keyed by the topic names.
     * 
     */
    public Optional<Output<Map<String,String>>> pubsubConfigs() {
        return Optional.ofNullable(this.pubsubConfigs);
    }

    /**
     * The disk usage of the repo, in bytes. Read-only field. Size is only returned by GetRepo.
     * 
     */
    @Import(name="size")
    private @Nullable Output<String> size;

    /**
     * @return The disk usage of the repo, in bytes. Read-only field. Size is only returned by GetRepo.
     * 
     */
    public Optional<Output<String>> size() {
        return Optional.ofNullable(this.size);
    }

    /**
     * URL to clone the repository from Google Cloud Source Repositories. Read-only field.
     * 
     */
    @Import(name="url")
    private @Nullable Output<String> url;

    /**
     * @return URL to clone the repository from Google Cloud Source Repositories. Read-only field.
     * 
     */
    public Optional<Output<String>> url() {
        return Optional.ofNullable(this.url);
    }

    private RepoArgs() {}

    private RepoArgs(RepoArgs $) {
        this.mirrorConfig = $.mirrorConfig;
        this.name = $.name;
        this.project = $.project;
        this.pubsubConfigs = $.pubsubConfigs;
        this.size = $.size;
        this.url = $.url;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RepoArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RepoArgs $;

        public Builder() {
            $ = new RepoArgs();
        }

        public Builder(RepoArgs defaults) {
            $ = new RepoArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param mirrorConfig How this repository mirrors a repository managed by another service. Read-only field.
         * 
         * @return builder
         * 
         */
        public Builder mirrorConfig(@Nullable Output<MirrorConfigArgs> mirrorConfig) {
            $.mirrorConfig = mirrorConfig;
            return this;
        }

        /**
         * @param mirrorConfig How this repository mirrors a repository managed by another service. Read-only field.
         * 
         * @return builder
         * 
         */
        public Builder mirrorConfig(MirrorConfigArgs mirrorConfig) {
            return mirrorConfig(Output.of(mirrorConfig));
        }

        /**
         * @param name Resource name of the repository, of the form `projects//repos/`. The repo name may contain slashes. eg, `projects/myproject/repos/name/with/slash`
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Resource name of the repository, of the form `projects//repos/`. The repo name may contain slashes. eg, `projects/myproject/repos/name/with/slash`
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        public Builder project(String project) {
            return project(Output.of(project));
        }

        /**
         * @param pubsubConfigs How this repository publishes a change in the repository through Cloud Pub/Sub. Keyed by the topic names.
         * 
         * @return builder
         * 
         */
        public Builder pubsubConfigs(@Nullable Output<Map<String,String>> pubsubConfigs) {
            $.pubsubConfigs = pubsubConfigs;
            return this;
        }

        /**
         * @param pubsubConfigs How this repository publishes a change in the repository through Cloud Pub/Sub. Keyed by the topic names.
         * 
         * @return builder
         * 
         */
        public Builder pubsubConfigs(Map<String,String> pubsubConfigs) {
            return pubsubConfigs(Output.of(pubsubConfigs));
        }

        /**
         * @param size The disk usage of the repo, in bytes. Read-only field. Size is only returned by GetRepo.
         * 
         * @return builder
         * 
         */
        public Builder size(@Nullable Output<String> size) {
            $.size = size;
            return this;
        }

        /**
         * @param size The disk usage of the repo, in bytes. Read-only field. Size is only returned by GetRepo.
         * 
         * @return builder
         * 
         */
        public Builder size(String size) {
            return size(Output.of(size));
        }

        /**
         * @param url URL to clone the repository from Google Cloud Source Repositories. Read-only field.
         * 
         * @return builder
         * 
         */
        public Builder url(@Nullable Output<String> url) {
            $.url = url;
            return this;
        }

        /**
         * @param url URL to clone the repository from Google Cloud Source Repositories. Read-only field.
         * 
         * @return builder
         * 
         */
        public Builder url(String url) {
            return url(Output.of(url));
        }

        public RepoArgs build() {
            return $;
        }
    }

}
