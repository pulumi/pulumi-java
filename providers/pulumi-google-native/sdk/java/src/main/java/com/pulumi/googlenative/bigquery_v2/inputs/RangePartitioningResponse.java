// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.bigquery_v2.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.bigquery_v2.inputs.RangePartitioningRangeResponse;
import java.lang.String;
import java.util.Objects;


public final class RangePartitioningResponse extends com.pulumi.resources.InvokeArgs {

    public static final RangePartitioningResponse Empty = new RangePartitioningResponse();

    /**
     * [TrustedTester] [Required] The table is partitioned by this field. The field must be a top-level NULLABLE/REQUIRED field. The only supported type is INTEGER/INT64.
     * 
     */
    @Import(name="field", required=true)
    private String field;

    /**
     * @return [TrustedTester] [Required] The table is partitioned by this field. The field must be a top-level NULLABLE/REQUIRED field. The only supported type is INTEGER/INT64.
     * 
     */
    public String field() {
        return this.field;
    }

    /**
     * [TrustedTester] [Required] Defines the ranges for range partitioning.
     * 
     */
    @Import(name="range", required=true)
    private RangePartitioningRangeResponse range;

    /**
     * @return [TrustedTester] [Required] Defines the ranges for range partitioning.
     * 
     */
    public RangePartitioningRangeResponse range() {
        return this.range;
    }

    private RangePartitioningResponse() {}

    private RangePartitioningResponse(RangePartitioningResponse $) {
        this.field = $.field;
        this.range = $.range;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RangePartitioningResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RangePartitioningResponse $;

        public Builder() {
            $ = new RangePartitioningResponse();
        }

        public Builder(RangePartitioningResponse defaults) {
            $ = new RangePartitioningResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param field [TrustedTester] [Required] The table is partitioned by this field. The field must be a top-level NULLABLE/REQUIRED field. The only supported type is INTEGER/INT64.
         * 
         * @return builder
         * 
         */
        public Builder field(String field) {
            $.field = field;
            return this;
        }

        /**
         * @param range [TrustedTester] [Required] Defines the ranges for range partitioning.
         * 
         * @return builder
         * 
         */
        public Builder range(RangePartitioningRangeResponse range) {
            $.range = range;
            return this;
        }

        public RangePartitioningResponse build() {
            $.field = Objects.requireNonNull($.field, "expected parameter 'field' to be non-null");
            $.range = Objects.requireNonNull($.range, "expected parameter 'range' to be non-null");
            return $;
        }
    }

}
