// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.datacatalog_v1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.datacatalog_v1.enums.GoogleCloudDatacatalogV1DataplexExternalTableSystem;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * External table registered by Dataplex. Dataplex publishes data discovered from an asset into multiple other systems (BigQuery, DPMS) in form of tables. We call them &#34;external tables&#34;. External tables are also synced into the Data Catalog. This message contains pointers to those external tables (fully qualified name, resource name et cetera) within the Data Catalog.
 * 
 */
public final class GoogleCloudDatacatalogV1DataplexExternalTableArgs extends com.pulumi.resources.ResourceArgs {

    public static final GoogleCloudDatacatalogV1DataplexExternalTableArgs Empty = new GoogleCloudDatacatalogV1DataplexExternalTableArgs();

    /**
     * Name of the Data Catalog entry representing the external table.
     * 
     */
    @Import(name="dataCatalogEntry")
    private @Nullable Output<String> dataCatalogEntry;

    /**
     * @return Name of the Data Catalog entry representing the external table.
     * 
     */
    public Optional<Output<String>> dataCatalogEntry() {
        return Optional.ofNullable(this.dataCatalogEntry);
    }

    /**
     * Fully qualified name (FQN) of the external table.
     * 
     */
    @Import(name="fullyQualifiedName")
    private @Nullable Output<String> fullyQualifiedName;

    /**
     * @return Fully qualified name (FQN) of the external table.
     * 
     */
    public Optional<Output<String>> fullyQualifiedName() {
        return Optional.ofNullable(this.fullyQualifiedName);
    }

    /**
     * Google Cloud resource name of the external table.
     * 
     */
    @Import(name="googleCloudResource")
    private @Nullable Output<String> googleCloudResource;

    /**
     * @return Google Cloud resource name of the external table.
     * 
     */
    public Optional<Output<String>> googleCloudResource() {
        return Optional.ofNullable(this.googleCloudResource);
    }

    /**
     * Service in which the external table is registered.
     * 
     */
    @Import(name="system")
    private @Nullable Output<GoogleCloudDatacatalogV1DataplexExternalTableSystem> system;

    /**
     * @return Service in which the external table is registered.
     * 
     */
    public Optional<Output<GoogleCloudDatacatalogV1DataplexExternalTableSystem>> system() {
        return Optional.ofNullable(this.system);
    }

    private GoogleCloudDatacatalogV1DataplexExternalTableArgs() {}

    private GoogleCloudDatacatalogV1DataplexExternalTableArgs(GoogleCloudDatacatalogV1DataplexExternalTableArgs $) {
        this.dataCatalogEntry = $.dataCatalogEntry;
        this.fullyQualifiedName = $.fullyQualifiedName;
        this.googleCloudResource = $.googleCloudResource;
        this.system = $.system;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GoogleCloudDatacatalogV1DataplexExternalTableArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GoogleCloudDatacatalogV1DataplexExternalTableArgs $;

        public Builder() {
            $ = new GoogleCloudDatacatalogV1DataplexExternalTableArgs();
        }

        public Builder(GoogleCloudDatacatalogV1DataplexExternalTableArgs defaults) {
            $ = new GoogleCloudDatacatalogV1DataplexExternalTableArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param dataCatalogEntry Name of the Data Catalog entry representing the external table.
         * 
         * @return builder
         * 
         */
        public Builder dataCatalogEntry(@Nullable Output<String> dataCatalogEntry) {
            $.dataCatalogEntry = dataCatalogEntry;
            return this;
        }

        /**
         * @param dataCatalogEntry Name of the Data Catalog entry representing the external table.
         * 
         * @return builder
         * 
         */
        public Builder dataCatalogEntry(String dataCatalogEntry) {
            return dataCatalogEntry(Output.of(dataCatalogEntry));
        }

        /**
         * @param fullyQualifiedName Fully qualified name (FQN) of the external table.
         * 
         * @return builder
         * 
         */
        public Builder fullyQualifiedName(@Nullable Output<String> fullyQualifiedName) {
            $.fullyQualifiedName = fullyQualifiedName;
            return this;
        }

        /**
         * @param fullyQualifiedName Fully qualified name (FQN) of the external table.
         * 
         * @return builder
         * 
         */
        public Builder fullyQualifiedName(String fullyQualifiedName) {
            return fullyQualifiedName(Output.of(fullyQualifiedName));
        }

        /**
         * @param googleCloudResource Google Cloud resource name of the external table.
         * 
         * @return builder
         * 
         */
        public Builder googleCloudResource(@Nullable Output<String> googleCloudResource) {
            $.googleCloudResource = googleCloudResource;
            return this;
        }

        /**
         * @param googleCloudResource Google Cloud resource name of the external table.
         * 
         * @return builder
         * 
         */
        public Builder googleCloudResource(String googleCloudResource) {
            return googleCloudResource(Output.of(googleCloudResource));
        }

        /**
         * @param system Service in which the external table is registered.
         * 
         * @return builder
         * 
         */
        public Builder system(@Nullable Output<GoogleCloudDatacatalogV1DataplexExternalTableSystem> system) {
            $.system = system;
            return this;
        }

        /**
         * @param system Service in which the external table is registered.
         * 
         * @return builder
         * 
         */
        public Builder system(GoogleCloudDatacatalogV1DataplexExternalTableSystem system) {
            return system(Output.of(system));
        }

        public GoogleCloudDatacatalogV1DataplexExternalTableArgs build() {
            return $;
        }
    }

}
