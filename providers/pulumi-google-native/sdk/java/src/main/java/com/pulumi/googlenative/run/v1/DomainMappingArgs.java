// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.run.v1;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.run.v1.inputs.DomainMappingSpecArgs;
import com.pulumi.googlenative.run.v1.inputs.ObjectMetaArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DomainMappingArgs extends com.pulumi.resources.ResourceArgs {

    public static final DomainMappingArgs Empty = new DomainMappingArgs();

    /**
     * The API version for this call such as &#34;domains.cloudrun.com/v1&#34;.
     * 
     */
    @Import(name="apiVersion")
    private @Nullable Output<String> apiVersion;

    /**
     * @return The API version for this call such as &#34;domains.cloudrun.com/v1&#34;.
     * 
     */
    public Optional<Output<String>> apiVersion() {
        return Optional.ofNullable(this.apiVersion);
    }

    /**
     * Indicates that the server should validate the request and populate default values without persisting the request. Supported values: `all`
     * 
     */
    @Import(name="dryRun")
    private @Nullable Output<String> dryRun;

    /**
     * @return Indicates that the server should validate the request and populate default values without persisting the request. Supported values: `all`
     * 
     */
    public Optional<Output<String>> dryRun() {
        return Optional.ofNullable(this.dryRun);
    }

    /**
     * The kind of resource, in this case &#34;DomainMapping&#34;.
     * 
     */
    @Import(name="kind")
    private @Nullable Output<String> kind;

    /**
     * @return The kind of resource, in this case &#34;DomainMapping&#34;.
     * 
     */
    public Optional<Output<String>> kind() {
        return Optional.ofNullable(this.kind);
    }

    @Import(name="location")
    private @Nullable Output<String> location;

    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * Metadata associated with this BuildTemplate.
     * 
     */
    @Import(name="metadata")
    private @Nullable Output<ObjectMetaArgs> metadata;

    /**
     * @return Metadata associated with this BuildTemplate.
     * 
     */
    public Optional<Output<ObjectMetaArgs>> metadata() {
        return Optional.ofNullable(this.metadata);
    }

    @Import(name="project")
    private @Nullable Output<String> project;

    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * The spec for this DomainMapping.
     * 
     */
    @Import(name="spec")
    private @Nullable Output<DomainMappingSpecArgs> spec;

    /**
     * @return The spec for this DomainMapping.
     * 
     */
    public Optional<Output<DomainMappingSpecArgs>> spec() {
        return Optional.ofNullable(this.spec);
    }

    private DomainMappingArgs() {}

    private DomainMappingArgs(DomainMappingArgs $) {
        this.apiVersion = $.apiVersion;
        this.dryRun = $.dryRun;
        this.kind = $.kind;
        this.location = $.location;
        this.metadata = $.metadata;
        this.project = $.project;
        this.spec = $.spec;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DomainMappingArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DomainMappingArgs $;

        public Builder() {
            $ = new DomainMappingArgs();
        }

        public Builder(DomainMappingArgs defaults) {
            $ = new DomainMappingArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param apiVersion The API version for this call such as &#34;domains.cloudrun.com/v1&#34;.
         * 
         * @return builder
         * 
         */
        public Builder apiVersion(@Nullable Output<String> apiVersion) {
            $.apiVersion = apiVersion;
            return this;
        }

        /**
         * @param apiVersion The API version for this call such as &#34;domains.cloudrun.com/v1&#34;.
         * 
         * @return builder
         * 
         */
        public Builder apiVersion(String apiVersion) {
            return apiVersion(Output.of(apiVersion));
        }

        /**
         * @param dryRun Indicates that the server should validate the request and populate default values without persisting the request. Supported values: `all`
         * 
         * @return builder
         * 
         */
        public Builder dryRun(@Nullable Output<String> dryRun) {
            $.dryRun = dryRun;
            return this;
        }

        /**
         * @param dryRun Indicates that the server should validate the request and populate default values without persisting the request. Supported values: `all`
         * 
         * @return builder
         * 
         */
        public Builder dryRun(String dryRun) {
            return dryRun(Output.of(dryRun));
        }

        /**
         * @param kind The kind of resource, in this case &#34;DomainMapping&#34;.
         * 
         * @return builder
         * 
         */
        public Builder kind(@Nullable Output<String> kind) {
            $.kind = kind;
            return this;
        }

        /**
         * @param kind The kind of resource, in this case &#34;DomainMapping&#34;.
         * 
         * @return builder
         * 
         */
        public Builder kind(String kind) {
            return kind(Output.of(kind));
        }

        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param metadata Metadata associated with this BuildTemplate.
         * 
         * @return builder
         * 
         */
        public Builder metadata(@Nullable Output<ObjectMetaArgs> metadata) {
            $.metadata = metadata;
            return this;
        }

        /**
         * @param metadata Metadata associated with this BuildTemplate.
         * 
         * @return builder
         * 
         */
        public Builder metadata(ObjectMetaArgs metadata) {
            return metadata(Output.of(metadata));
        }

        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        public Builder project(String project) {
            return project(Output.of(project));
        }

        /**
         * @param spec The spec for this DomainMapping.
         * 
         * @return builder
         * 
         */
        public Builder spec(@Nullable Output<DomainMappingSpecArgs> spec) {
            $.spec = spec;
            return this;
        }

        /**
         * @param spec The spec for this DomainMapping.
         * 
         * @return builder
         * 
         */
        public Builder spec(DomainMappingSpecArgs spec) {
            return spec(Output.of(spec));
        }

        public DomainMappingArgs build() {
            return $;
        }
    }

}
