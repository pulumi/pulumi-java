// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.run_v1.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;


/**
 * ResourceRequirements describes the compute resource requirements.
 * 
 */
public final class ResourceRequirementsResponse extends com.pulumi.resources.InvokeArgs {

    public static final ResourceRequirementsResponse Empty = new ResourceRequirementsResponse();

    /**
     * (Optional) Only memory and CPU are supported. Limits describes the maximum amount of compute resources allowed. The values of the map is string form of the &#39;quantity&#39; k8s type: https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apimachinery/pkg/api/resource/quantity.go
     * 
     */
    @Import(name="limits", required=true)
    private Map<String,String> limits;

    public Map<String,String> limits() {
        return this.limits;
    }

    /**
     * (Optional) Only memory and CPU are supported. Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. The values of the map is string form of the &#39;quantity&#39; k8s type: https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apimachinery/pkg/api/resource/quantity.go
     * 
     */
    @Import(name="requests", required=true)
    private Map<String,String> requests;

    public Map<String,String> requests() {
        return this.requests;
    }

    private ResourceRequirementsResponse() {}

    private ResourceRequirementsResponse(ResourceRequirementsResponse $) {
        this.limits = $.limits;
        this.requests = $.requests;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ResourceRequirementsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ResourceRequirementsResponse $;

        public Builder() {
            $ = new ResourceRequirementsResponse();
        }

        public Builder(ResourceRequirementsResponse defaults) {
            $ = new ResourceRequirementsResponse(Objects.requireNonNull(defaults));
        }

        public Builder limits(Map<String,String> limits) {
            $.limits = limits;
            return this;
        }

        public Builder requests(Map<String,String> requests) {
            $.requests = requests;
            return this;
        }

        public ResourceRequirementsResponse build() {
            $.limits = Objects.requireNonNull($.limits, "expected parameter 'limits' to be non-null");
            $.requests = Objects.requireNonNull($.requests, "expected parameter 'requests' to be non-null");
            return $;
        }
    }

}
