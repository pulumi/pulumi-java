// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.deploymentmanager.alpha.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.deploymentmanager.alpha.inputs.BasicAuthArgs;
import com.pulumi.googlenative.deploymentmanager.alpha.inputs.ServiceAccountArgs;
import java.lang.Boolean;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The credential used by Deployment Manager and TypeProvider. Only one of the options is permitted.
 * 
 */
public final class CredentialArgs extends com.pulumi.resources.ResourceArgs {

    public static final CredentialArgs Empty = new CredentialArgs();

    /**
     * Basic Auth Credential, only used by TypeProvider.
     * 
     */
    @Import(name="basicAuth")
    private @Nullable Output<BasicAuthArgs> basicAuth;

    /**
     * @return Basic Auth Credential, only used by TypeProvider.
     * 
     */
    public Optional<Output<BasicAuthArgs>> basicAuth() {
        return Optional.ofNullable(this.basicAuth);
    }

    /**
     * Service Account Credential, only used by Deployment.
     * 
     */
    @Import(name="serviceAccount")
    private @Nullable Output<ServiceAccountArgs> serviceAccount;

    /**
     * @return Service Account Credential, only used by Deployment.
     * 
     */
    public Optional<Output<ServiceAccountArgs>> serviceAccount() {
        return Optional.ofNullable(this.serviceAccount);
    }

    /**
     * Specify to use the project default credential, only supported by Deployment.
     * 
     */
    @Import(name="useProjectDefault")
    private @Nullable Output<Boolean> useProjectDefault;

    /**
     * @return Specify to use the project default credential, only supported by Deployment.
     * 
     */
    public Optional<Output<Boolean>> useProjectDefault() {
        return Optional.ofNullable(this.useProjectDefault);
    }

    private CredentialArgs() {}

    private CredentialArgs(CredentialArgs $) {
        this.basicAuth = $.basicAuth;
        this.serviceAccount = $.serviceAccount;
        this.useProjectDefault = $.useProjectDefault;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CredentialArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CredentialArgs $;

        public Builder() {
            $ = new CredentialArgs();
        }

        public Builder(CredentialArgs defaults) {
            $ = new CredentialArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param basicAuth Basic Auth Credential, only used by TypeProvider.
         * 
         * @return builder
         * 
         */
        public Builder basicAuth(@Nullable Output<BasicAuthArgs> basicAuth) {
            $.basicAuth = basicAuth;
            return this;
        }

        /**
         * @param basicAuth Basic Auth Credential, only used by TypeProvider.
         * 
         * @return builder
         * 
         */
        public Builder basicAuth(BasicAuthArgs basicAuth) {
            return basicAuth(Output.of(basicAuth));
        }

        /**
         * @param serviceAccount Service Account Credential, only used by Deployment.
         * 
         * @return builder
         * 
         */
        public Builder serviceAccount(@Nullable Output<ServiceAccountArgs> serviceAccount) {
            $.serviceAccount = serviceAccount;
            return this;
        }

        /**
         * @param serviceAccount Service Account Credential, only used by Deployment.
         * 
         * @return builder
         * 
         */
        public Builder serviceAccount(ServiceAccountArgs serviceAccount) {
            return serviceAccount(Output.of(serviceAccount));
        }

        /**
         * @param useProjectDefault Specify to use the project default credential, only supported by Deployment.
         * 
         * @return builder
         * 
         */
        public Builder useProjectDefault(@Nullable Output<Boolean> useProjectDefault) {
            $.useProjectDefault = useProjectDefault;
            return this;
        }

        /**
         * @param useProjectDefault Specify to use the project default credential, only supported by Deployment.
         * 
         * @return builder
         * 
         */
        public Builder useProjectDefault(Boolean useProjectDefault) {
            return useProjectDefault(Output.of(useProjectDefault));
        }

        public CredentialArgs build() {
            return $;
        }
    }

}
