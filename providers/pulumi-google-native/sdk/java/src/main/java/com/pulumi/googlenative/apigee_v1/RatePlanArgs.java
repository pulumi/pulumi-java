// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.apigee_v1;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.apigee_v1.enums.RatePlanBillingPeriod;
import com.pulumi.googlenative.apigee_v1.enums.RatePlanConsumptionPricingType;
import com.pulumi.googlenative.apigee_v1.enums.RatePlanRevenueShareType;
import com.pulumi.googlenative.apigee_v1.enums.RatePlanState;
import com.pulumi.googlenative.apigee_v1.inputs.GoogleCloudApigeeV1RateRangeArgs;
import com.pulumi.googlenative.apigee_v1.inputs.GoogleCloudApigeeV1RevenueShareRangeArgs;
import com.pulumi.googlenative.apigee_v1.inputs.GoogleTypeMoneyArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RatePlanArgs extends com.pulumi.resources.ResourceArgs {

    public static final RatePlanArgs Empty = new RatePlanArgs();

    /**
     * Name of the API product that the rate plan is associated with.
     * 
     */
    @Import(name="apiproduct")
    private @Nullable Output<String> apiproduct;

    public Optional<Output<String>> apiproduct() {
        return Optional.ofNullable(this.apiproduct);
    }

    @Import(name="apiproductId", required=true)
    private Output<String> apiproductId;

    public Output<String> apiproductId() {
        return this.apiproductId;
    }

    /**
     * Frequency at which the customer will be billed.
     * 
     */
    @Import(name="billingPeriod")
    private @Nullable Output<RatePlanBillingPeriod> billingPeriod;

    public Optional<Output<RatePlanBillingPeriod>> billingPeriod() {
        return Optional.ofNullable(this.billingPeriod);
    }

    /**
     * API call volume ranges and the fees charged when the total number of API calls is within a given range. The method used to calculate the final fee depends on the selected pricing model. For example, if the pricing model is `STAIRSTEP` and the ranges are defined as follows: ```{ &#34;start&#34;: 1, &#34;end&#34;: 100, &#34;fee&#34;: 75 }, { &#34;start&#34;: 101, &#34;end&#34;: 200, &#34;fee&#34;: 100 }, }``` Then the following fees would be charged based on the total number of API calls (assuming the currency selected is `USD`): * 1 call costs $75 * 50 calls cost $75 * 150 calls cost $100 The number of API calls cannot exceed 200.
     * 
     */
    @Import(name="consumptionPricingRates")
    private @Nullable Output<List<GoogleCloudApigeeV1RateRangeArgs>> consumptionPricingRates;

    public Optional<Output<List<GoogleCloudApigeeV1RateRangeArgs>>> consumptionPricingRates() {
        return Optional.ofNullable(this.consumptionPricingRates);
    }

    /**
     * Pricing model used for consumption-based charges.
     * 
     */
    @Import(name="consumptionPricingType")
    private @Nullable Output<RatePlanConsumptionPricingType> consumptionPricingType;

    public Optional<Output<RatePlanConsumptionPricingType>> consumptionPricingType() {
        return Optional.ofNullable(this.consumptionPricingType);
    }

    /**
     * Currency to be used for billing. Consists of a three-letter code as defined by the [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) standard.
     * 
     */
    @Import(name="currencyCode")
    private @Nullable Output<String> currencyCode;

    public Optional<Output<String>> currencyCode() {
        return Optional.ofNullable(this.currencyCode);
    }

    /**
     * Description of the rate plan.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Display name of the rate plan.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * Time when the rate plan will expire in milliseconds since epoch. Set to 0 or `null` to indicate that the rate plan should never expire.
     * 
     */
    @Import(name="endTime")
    private @Nullable Output<String> endTime;

    public Optional<Output<String>> endTime() {
        return Optional.ofNullable(this.endTime);
    }

    /**
     * Frequency at which the fixed fee is charged.
     * 
     */
    @Import(name="fixedFeeFrequency")
    private @Nullable Output<Integer> fixedFeeFrequency;

    public Optional<Output<Integer>> fixedFeeFrequency() {
        return Optional.ofNullable(this.fixedFeeFrequency);
    }

    /**
     * Fixed amount that is charged at a defined interval and billed in advance of use of the API product. The fee will be prorated for the first billing period.
     * 
     */
    @Import(name="fixedRecurringFee")
    private @Nullable Output<GoogleTypeMoneyArgs> fixedRecurringFee;

    public Optional<Output<GoogleTypeMoneyArgs>> fixedRecurringFee() {
        return Optional.ofNullable(this.fixedRecurringFee);
    }

    @Import(name="organizationId", required=true)
    private Output<String> organizationId;

    public Output<String> organizationId() {
        return this.organizationId;
    }

    /**
     * Details of the revenue sharing model.
     * 
     */
    @Import(name="revenueShareRates")
    private @Nullable Output<List<GoogleCloudApigeeV1RevenueShareRangeArgs>> revenueShareRates;

    public Optional<Output<List<GoogleCloudApigeeV1RevenueShareRangeArgs>>> revenueShareRates() {
        return Optional.ofNullable(this.revenueShareRates);
    }

    /**
     * Method used to calculate the revenue that is shared with developers.
     * 
     */
    @Import(name="revenueShareType")
    private @Nullable Output<RatePlanRevenueShareType> revenueShareType;

    public Optional<Output<RatePlanRevenueShareType>> revenueShareType() {
        return Optional.ofNullable(this.revenueShareType);
    }

    /**
     * Initial, one-time fee paid when purchasing the API product.
     * 
     */
    @Import(name="setupFee")
    private @Nullable Output<GoogleTypeMoneyArgs> setupFee;

    public Optional<Output<GoogleTypeMoneyArgs>> setupFee() {
        return Optional.ofNullable(this.setupFee);
    }

    /**
     * Time when the rate plan becomes active in milliseconds since epoch.
     * 
     */
    @Import(name="startTime")
    private @Nullable Output<String> startTime;

    public Optional<Output<String>> startTime() {
        return Optional.ofNullable(this.startTime);
    }

    /**
     * Current state of the rate plan (draft or published).
     * 
     */
    @Import(name="state")
    private @Nullable Output<RatePlanState> state;

    public Optional<Output<RatePlanState>> state() {
        return Optional.ofNullable(this.state);
    }

    private RatePlanArgs() {}

    private RatePlanArgs(RatePlanArgs $) {
        this.apiproduct = $.apiproduct;
        this.apiproductId = $.apiproductId;
        this.billingPeriod = $.billingPeriod;
        this.consumptionPricingRates = $.consumptionPricingRates;
        this.consumptionPricingType = $.consumptionPricingType;
        this.currencyCode = $.currencyCode;
        this.description = $.description;
        this.displayName = $.displayName;
        this.endTime = $.endTime;
        this.fixedFeeFrequency = $.fixedFeeFrequency;
        this.fixedRecurringFee = $.fixedRecurringFee;
        this.organizationId = $.organizationId;
        this.revenueShareRates = $.revenueShareRates;
        this.revenueShareType = $.revenueShareType;
        this.setupFee = $.setupFee;
        this.startTime = $.startTime;
        this.state = $.state;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RatePlanArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RatePlanArgs $;

        public Builder() {
            $ = new RatePlanArgs();
        }

        public Builder(RatePlanArgs defaults) {
            $ = new RatePlanArgs(Objects.requireNonNull(defaults));
        }

        public Builder apiproduct(@Nullable Output<String> apiproduct) {
            $.apiproduct = apiproduct;
            return this;
        }

        public Builder apiproduct(String apiproduct) {
            return apiproduct(Output.of(apiproduct));
        }

        public Builder apiproductId(Output<String> apiproductId) {
            $.apiproductId = apiproductId;
            return this;
        }

        public Builder apiproductId(String apiproductId) {
            return apiproductId(Output.of(apiproductId));
        }

        public Builder billingPeriod(@Nullable Output<RatePlanBillingPeriod> billingPeriod) {
            $.billingPeriod = billingPeriod;
            return this;
        }

        public Builder billingPeriod(RatePlanBillingPeriod billingPeriod) {
            return billingPeriod(Output.of(billingPeriod));
        }

        public Builder consumptionPricingRates(@Nullable Output<List<GoogleCloudApigeeV1RateRangeArgs>> consumptionPricingRates) {
            $.consumptionPricingRates = consumptionPricingRates;
            return this;
        }

        public Builder consumptionPricingRates(List<GoogleCloudApigeeV1RateRangeArgs> consumptionPricingRates) {
            return consumptionPricingRates(Output.of(consumptionPricingRates));
        }

        public Builder consumptionPricingRates(GoogleCloudApigeeV1RateRangeArgs... consumptionPricingRates) {
            return consumptionPricingRates(List.of(consumptionPricingRates));
        }

        public Builder consumptionPricingType(@Nullable Output<RatePlanConsumptionPricingType> consumptionPricingType) {
            $.consumptionPricingType = consumptionPricingType;
            return this;
        }

        public Builder consumptionPricingType(RatePlanConsumptionPricingType consumptionPricingType) {
            return consumptionPricingType(Output.of(consumptionPricingType));
        }

        public Builder currencyCode(@Nullable Output<String> currencyCode) {
            $.currencyCode = currencyCode;
            return this;
        }

        public Builder currencyCode(String currencyCode) {
            return currencyCode(Output.of(currencyCode));
        }

        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        public Builder description(String description) {
            return description(Output.of(description));
        }

        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        public Builder endTime(@Nullable Output<String> endTime) {
            $.endTime = endTime;
            return this;
        }

        public Builder endTime(String endTime) {
            return endTime(Output.of(endTime));
        }

        public Builder fixedFeeFrequency(@Nullable Output<Integer> fixedFeeFrequency) {
            $.fixedFeeFrequency = fixedFeeFrequency;
            return this;
        }

        public Builder fixedFeeFrequency(Integer fixedFeeFrequency) {
            return fixedFeeFrequency(Output.of(fixedFeeFrequency));
        }

        public Builder fixedRecurringFee(@Nullable Output<GoogleTypeMoneyArgs> fixedRecurringFee) {
            $.fixedRecurringFee = fixedRecurringFee;
            return this;
        }

        public Builder fixedRecurringFee(GoogleTypeMoneyArgs fixedRecurringFee) {
            return fixedRecurringFee(Output.of(fixedRecurringFee));
        }

        public Builder organizationId(Output<String> organizationId) {
            $.organizationId = organizationId;
            return this;
        }

        public Builder organizationId(String organizationId) {
            return organizationId(Output.of(organizationId));
        }

        public Builder revenueShareRates(@Nullable Output<List<GoogleCloudApigeeV1RevenueShareRangeArgs>> revenueShareRates) {
            $.revenueShareRates = revenueShareRates;
            return this;
        }

        public Builder revenueShareRates(List<GoogleCloudApigeeV1RevenueShareRangeArgs> revenueShareRates) {
            return revenueShareRates(Output.of(revenueShareRates));
        }

        public Builder revenueShareRates(GoogleCloudApigeeV1RevenueShareRangeArgs... revenueShareRates) {
            return revenueShareRates(List.of(revenueShareRates));
        }

        public Builder revenueShareType(@Nullable Output<RatePlanRevenueShareType> revenueShareType) {
            $.revenueShareType = revenueShareType;
            return this;
        }

        public Builder revenueShareType(RatePlanRevenueShareType revenueShareType) {
            return revenueShareType(Output.of(revenueShareType));
        }

        public Builder setupFee(@Nullable Output<GoogleTypeMoneyArgs> setupFee) {
            $.setupFee = setupFee;
            return this;
        }

        public Builder setupFee(GoogleTypeMoneyArgs setupFee) {
            return setupFee(Output.of(setupFee));
        }

        public Builder startTime(@Nullable Output<String> startTime) {
            $.startTime = startTime;
            return this;
        }

        public Builder startTime(String startTime) {
            return startTime(Output.of(startTime));
        }

        public Builder state(@Nullable Output<RatePlanState> state) {
            $.state = state;
            return this;
        }

        public Builder state(RatePlanState state) {
            return state(Output.of(state));
        }

        public RatePlanArgs build() {
            $.apiproductId = Objects.requireNonNull($.apiproductId, "expected parameter 'apiproductId' to be non-null");
            $.organizationId = Objects.requireNonNull($.organizationId, "expected parameter 'organizationId' to be non-null");
            return $;
        }
    }

}
