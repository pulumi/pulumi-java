// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.websecurityscanner.v1beta.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.websecurityscanner.v1beta.enums.ScanConfigErrorCode;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Defines a custom error message used by CreateScanConfig and UpdateScanConfig APIs when scan configuration validation fails. It is also reported as part of a ScanRunErrorTrace message if scan validation fails due to a scan configuration error.
 * 
 */
public final class ScanConfigErrorArgs extends com.pulumi.resources.ResourceArgs {

    public static final ScanConfigErrorArgs Empty = new ScanConfigErrorArgs();

    /**
     * Indicates the reason code for a configuration failure.
     * 
     */
    @Import(name="code")
    private @Nullable Output<ScanConfigErrorCode> code;

    /**
     * @return Indicates the reason code for a configuration failure.
     * 
     */
    public Optional<Output<ScanConfigErrorCode>> code() {
        return Optional.ofNullable(this.code);
    }

    /**
     * Indicates the full name of the ScanConfig field that triggers this error, for example &#34;scan_config.max_qps&#34;. This field is provided for troubleshooting purposes only and its actual value can change in the future.
     * 
     */
    @Import(name="fieldName")
    private @Nullable Output<String> fieldName;

    /**
     * @return Indicates the full name of the ScanConfig field that triggers this error, for example &#34;scan_config.max_qps&#34;. This field is provided for troubleshooting purposes only and its actual value can change in the future.
     * 
     */
    public Optional<Output<String>> fieldName() {
        return Optional.ofNullable(this.fieldName);
    }

    private ScanConfigErrorArgs() {}

    private ScanConfigErrorArgs(ScanConfigErrorArgs $) {
        this.code = $.code;
        this.fieldName = $.fieldName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ScanConfigErrorArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ScanConfigErrorArgs $;

        public Builder() {
            $ = new ScanConfigErrorArgs();
        }

        public Builder(ScanConfigErrorArgs defaults) {
            $ = new ScanConfigErrorArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param code Indicates the reason code for a configuration failure.
         * 
         * @return builder
         * 
         */
        public Builder code(@Nullable Output<ScanConfigErrorCode> code) {
            $.code = code;
            return this;
        }

        /**
         * @param code Indicates the reason code for a configuration failure.
         * 
         * @return builder
         * 
         */
        public Builder code(ScanConfigErrorCode code) {
            return code(Output.of(code));
        }

        /**
         * @param fieldName Indicates the full name of the ScanConfig field that triggers this error, for example &#34;scan_config.max_qps&#34;. This field is provided for troubleshooting purposes only and its actual value can change in the future.
         * 
         * @return builder
         * 
         */
        public Builder fieldName(@Nullable Output<String> fieldName) {
            $.fieldName = fieldName;
            return this;
        }

        /**
         * @param fieldName Indicates the full name of the ScanConfig field that triggers this error, for example &#34;scan_config.max_qps&#34;. This field is provided for troubleshooting purposes only and its actual value can change in the future.
         * 
         * @return builder
         * 
         */
        public Builder fieldName(String fieldName) {
            return fieldName(Output.of(fieldName));
        }

        public ScanConfigErrorArgs build() {
            return $;
        }
    }

}
