// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.cloudidentity_v1.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;


/**
 * Resource representing the Android specific attributes of a Device.
 * 
 */
public final class GoogleAppsCloudidentityDevicesV1AndroidAttributesResponse extends com.pulumi.resources.InvokeArgs {

    public static final GoogleAppsCloudidentityDevicesV1AndroidAttributesResponse Empty = new GoogleAppsCloudidentityDevicesV1AndroidAttributesResponse();

    /**
     * Whether applications from unknown sources can be installed on device.
     * 
     */
    @Import(name="enabledUnknownSources", required=true)
    private Boolean enabledUnknownSources;

    /**
     * @return Whether applications from unknown sources can be installed on device.
     * 
     */
    public Boolean enabledUnknownSources() {
        return this.enabledUnknownSources;
    }

    /**
     * Whether this account is on an owner/primary profile. For phones, only true for owner profiles. Android 4+ devices can have secondary or restricted user profiles.
     * 
     */
    @Import(name="ownerProfileAccount", required=true)
    private Boolean ownerProfileAccount;

    /**
     * @return Whether this account is on an owner/primary profile. For phones, only true for owner profiles. Android 4+ devices can have secondary or restricted user profiles.
     * 
     */
    public Boolean ownerProfileAccount() {
        return this.ownerProfileAccount;
    }

    /**
     * Ownership privileges on device.
     * 
     */
    @Import(name="ownershipPrivilege", required=true)
    private String ownershipPrivilege;

    /**
     * @return Ownership privileges on device.
     * 
     */
    public String ownershipPrivilege() {
        return this.ownershipPrivilege;
    }

    /**
     * Whether device supports Android work profiles. If false, this service will not block access to corp data even if an administrator turns on the &#34;Enforce Work Profile&#34; policy.
     * 
     */
    @Import(name="supportsWorkProfile", required=true)
    private Boolean supportsWorkProfile;

    /**
     * @return Whether device supports Android work profiles. If false, this service will not block access to corp data even if an administrator turns on the &#34;Enforce Work Profile&#34; policy.
     * 
     */
    public Boolean supportsWorkProfile() {
        return this.supportsWorkProfile;
    }

    private GoogleAppsCloudidentityDevicesV1AndroidAttributesResponse() {}

    private GoogleAppsCloudidentityDevicesV1AndroidAttributesResponse(GoogleAppsCloudidentityDevicesV1AndroidAttributesResponse $) {
        this.enabledUnknownSources = $.enabledUnknownSources;
        this.ownerProfileAccount = $.ownerProfileAccount;
        this.ownershipPrivilege = $.ownershipPrivilege;
        this.supportsWorkProfile = $.supportsWorkProfile;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GoogleAppsCloudidentityDevicesV1AndroidAttributesResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GoogleAppsCloudidentityDevicesV1AndroidAttributesResponse $;

        public Builder() {
            $ = new GoogleAppsCloudidentityDevicesV1AndroidAttributesResponse();
        }

        public Builder(GoogleAppsCloudidentityDevicesV1AndroidAttributesResponse defaults) {
            $ = new GoogleAppsCloudidentityDevicesV1AndroidAttributesResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param enabledUnknownSources Whether applications from unknown sources can be installed on device.
         * 
         * @return builder
         * 
         */
        public Builder enabledUnknownSources(Boolean enabledUnknownSources) {
            $.enabledUnknownSources = enabledUnknownSources;
            return this;
        }

        /**
         * @param ownerProfileAccount Whether this account is on an owner/primary profile. For phones, only true for owner profiles. Android 4+ devices can have secondary or restricted user profiles.
         * 
         * @return builder
         * 
         */
        public Builder ownerProfileAccount(Boolean ownerProfileAccount) {
            $.ownerProfileAccount = ownerProfileAccount;
            return this;
        }

        /**
         * @param ownershipPrivilege Ownership privileges on device.
         * 
         * @return builder
         * 
         */
        public Builder ownershipPrivilege(String ownershipPrivilege) {
            $.ownershipPrivilege = ownershipPrivilege;
            return this;
        }

        /**
         * @param supportsWorkProfile Whether device supports Android work profiles. If false, this service will not block access to corp data even if an administrator turns on the &#34;Enforce Work Profile&#34; policy.
         * 
         * @return builder
         * 
         */
        public Builder supportsWorkProfile(Boolean supportsWorkProfile) {
            $.supportsWorkProfile = supportsWorkProfile;
            return this;
        }

        public GoogleAppsCloudidentityDevicesV1AndroidAttributesResponse build() {
            $.enabledUnknownSources = Objects.requireNonNull($.enabledUnknownSources, "expected parameter 'enabledUnknownSources' to be non-null");
            $.ownerProfileAccount = Objects.requireNonNull($.ownerProfileAccount, "expected parameter 'ownerProfileAccount' to be non-null");
            $.ownershipPrivilege = Objects.requireNonNull($.ownershipPrivilege, "expected parameter 'ownershipPrivilege' to be non-null");
            $.supportsWorkProfile = Objects.requireNonNull($.supportsWorkProfile, "expected parameter 'supportsWorkProfile' to be non-null");
            return $;
        }
    }

}
