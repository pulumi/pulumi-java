// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.apigee.v1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GetDebugSessionArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetDebugSessionArgs Empty = new GetDebugSessionArgs();

    @Import(name="apiId", required=true)
    private Output<String> apiId;

    public Output<String> apiId() {
        return this.apiId;
    }

    @Import(name="debugsessionId", required=true)
    private Output<String> debugsessionId;

    public Output<String> debugsessionId() {
        return this.debugsessionId;
    }

    @Import(name="environmentId", required=true)
    private Output<String> environmentId;

    public Output<String> environmentId() {
        return this.environmentId;
    }

    @Import(name="organizationId", required=true)
    private Output<String> organizationId;

    public Output<String> organizationId() {
        return this.organizationId;
    }

    @Import(name="revisionId", required=true)
    private Output<String> revisionId;

    public Output<String> revisionId() {
        return this.revisionId;
    }

    private GetDebugSessionArgs() {}

    private GetDebugSessionArgs(GetDebugSessionArgs $) {
        this.apiId = $.apiId;
        this.debugsessionId = $.debugsessionId;
        this.environmentId = $.environmentId;
        this.organizationId = $.organizationId;
        this.revisionId = $.revisionId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetDebugSessionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetDebugSessionArgs $;

        public Builder() {
            $ = new GetDebugSessionArgs();
        }

        public Builder(GetDebugSessionArgs defaults) {
            $ = new GetDebugSessionArgs(Objects.requireNonNull(defaults));
        }

        public Builder apiId(Output<String> apiId) {
            $.apiId = apiId;
            return this;
        }

        public Builder apiId(String apiId) {
            return apiId(Output.of(apiId));
        }

        public Builder debugsessionId(Output<String> debugsessionId) {
            $.debugsessionId = debugsessionId;
            return this;
        }

        public Builder debugsessionId(String debugsessionId) {
            return debugsessionId(Output.of(debugsessionId));
        }

        public Builder environmentId(Output<String> environmentId) {
            $.environmentId = environmentId;
            return this;
        }

        public Builder environmentId(String environmentId) {
            return environmentId(Output.of(environmentId));
        }

        public Builder organizationId(Output<String> organizationId) {
            $.organizationId = organizationId;
            return this;
        }

        public Builder organizationId(String organizationId) {
            return organizationId(Output.of(organizationId));
        }

        public Builder revisionId(Output<String> revisionId) {
            $.revisionId = revisionId;
            return this;
        }

        public Builder revisionId(String revisionId) {
            return revisionId(Output.of(revisionId));
        }

        public GetDebugSessionArgs build() {
            $.apiId = Objects.requireNonNull($.apiId, "expected parameter 'apiId' to be non-null");
            $.debugsessionId = Objects.requireNonNull($.debugsessionId, "expected parameter 'debugsessionId' to be non-null");
            $.environmentId = Objects.requireNonNull($.environmentId, "expected parameter 'environmentId' to be non-null");
            $.organizationId = Objects.requireNonNull($.organizationId, "expected parameter 'organizationId' to be non-null");
            $.revisionId = Objects.requireNonNull($.revisionId, "expected parameter 'revisionId' to be non-null");
            return $;
        }
    }

}
