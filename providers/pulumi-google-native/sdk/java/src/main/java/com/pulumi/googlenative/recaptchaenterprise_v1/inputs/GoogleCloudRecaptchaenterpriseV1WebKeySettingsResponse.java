// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.recaptchaenterprise_v1.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;


/**
 * Settings specific to keys that can be used by websites.
 * 
 */
public final class GoogleCloudRecaptchaenterpriseV1WebKeySettingsResponse extends com.pulumi.resources.InvokeArgs {

    public static final GoogleCloudRecaptchaenterpriseV1WebKeySettingsResponse Empty = new GoogleCloudRecaptchaenterpriseV1WebKeySettingsResponse();

    /**
     * If set to true, it means allowed_domains will not be enforced.
     * 
     */
    @Import(name="allowAllDomains", required=true)
    private Boolean allowAllDomains;

    /**
     * @return If set to true, it means allowed_domains will not be enforced.
     * 
     */
    public Boolean allowAllDomains() {
        return this.allowAllDomains;
    }

    /**
     * If set to true, the key can be used on AMP (Accelerated Mobile Pages) websites. This is supported only for the SCORE integration type.
     * 
     */
    @Import(name="allowAmpTraffic", required=true)
    private Boolean allowAmpTraffic;

    /**
     * @return If set to true, the key can be used on AMP (Accelerated Mobile Pages) websites. This is supported only for the SCORE integration type.
     * 
     */
    public Boolean allowAmpTraffic() {
        return this.allowAmpTraffic;
    }

    /**
     * Domains or subdomains of websites allowed to use the key. All subdomains of an allowed domain are automatically allowed. A valid domain requires a host and must not include any path, port, query or fragment. Examples: &#39;example.com&#39; or &#39;subdomain.example.com&#39;
     * 
     */
    @Import(name="allowedDomains", required=true)
    private List<String> allowedDomains;

    /**
     * @return Domains or subdomains of websites allowed to use the key. All subdomains of an allowed domain are automatically allowed. A valid domain requires a host and must not include any path, port, query or fragment. Examples: &#39;example.com&#39; or &#39;subdomain.example.com&#39;
     * 
     */
    public List<String> allowedDomains() {
        return this.allowedDomains;
    }

    /**
     * Settings for the frequency and difficulty at which this key triggers captcha challenges. This should only be specified for IntegrationTypes CHECKBOX and INVISIBLE.
     * 
     */
    @Import(name="challengeSecurityPreference", required=true)
    private String challengeSecurityPreference;

    /**
     * @return Settings for the frequency and difficulty at which this key triggers captcha challenges. This should only be specified for IntegrationTypes CHECKBOX and INVISIBLE.
     * 
     */
    public String challengeSecurityPreference() {
        return this.challengeSecurityPreference;
    }

    /**
     * Describes how this key is integrated with the website.
     * 
     */
    @Import(name="integrationType", required=true)
    private String integrationType;

    /**
     * @return Describes how this key is integrated with the website.
     * 
     */
    public String integrationType() {
        return this.integrationType;
    }

    private GoogleCloudRecaptchaenterpriseV1WebKeySettingsResponse() {}

    private GoogleCloudRecaptchaenterpriseV1WebKeySettingsResponse(GoogleCloudRecaptchaenterpriseV1WebKeySettingsResponse $) {
        this.allowAllDomains = $.allowAllDomains;
        this.allowAmpTraffic = $.allowAmpTraffic;
        this.allowedDomains = $.allowedDomains;
        this.challengeSecurityPreference = $.challengeSecurityPreference;
        this.integrationType = $.integrationType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GoogleCloudRecaptchaenterpriseV1WebKeySettingsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GoogleCloudRecaptchaenterpriseV1WebKeySettingsResponse $;

        public Builder() {
            $ = new GoogleCloudRecaptchaenterpriseV1WebKeySettingsResponse();
        }

        public Builder(GoogleCloudRecaptchaenterpriseV1WebKeySettingsResponse defaults) {
            $ = new GoogleCloudRecaptchaenterpriseV1WebKeySettingsResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param allowAllDomains If set to true, it means allowed_domains will not be enforced.
         * 
         * @return builder
         * 
         */
        public Builder allowAllDomains(Boolean allowAllDomains) {
            $.allowAllDomains = allowAllDomains;
            return this;
        }

        /**
         * @param allowAmpTraffic If set to true, the key can be used on AMP (Accelerated Mobile Pages) websites. This is supported only for the SCORE integration type.
         * 
         * @return builder
         * 
         */
        public Builder allowAmpTraffic(Boolean allowAmpTraffic) {
            $.allowAmpTraffic = allowAmpTraffic;
            return this;
        }

        /**
         * @param allowedDomains Domains or subdomains of websites allowed to use the key. All subdomains of an allowed domain are automatically allowed. A valid domain requires a host and must not include any path, port, query or fragment. Examples: &#39;example.com&#39; or &#39;subdomain.example.com&#39;
         * 
         * @return builder
         * 
         */
        public Builder allowedDomains(List<String> allowedDomains) {
            $.allowedDomains = allowedDomains;
            return this;
        }

        /**
         * @param allowedDomains Domains or subdomains of websites allowed to use the key. All subdomains of an allowed domain are automatically allowed. A valid domain requires a host and must not include any path, port, query or fragment. Examples: &#39;example.com&#39; or &#39;subdomain.example.com&#39;
         * 
         * @return builder
         * 
         */
        public Builder allowedDomains(String... allowedDomains) {
            return allowedDomains(List.of(allowedDomains));
        }

        /**
         * @param challengeSecurityPreference Settings for the frequency and difficulty at which this key triggers captcha challenges. This should only be specified for IntegrationTypes CHECKBOX and INVISIBLE.
         * 
         * @return builder
         * 
         */
        public Builder challengeSecurityPreference(String challengeSecurityPreference) {
            $.challengeSecurityPreference = challengeSecurityPreference;
            return this;
        }

        /**
         * @param integrationType Describes how this key is integrated with the website.
         * 
         * @return builder
         * 
         */
        public Builder integrationType(String integrationType) {
            $.integrationType = integrationType;
            return this;
        }

        public GoogleCloudRecaptchaenterpriseV1WebKeySettingsResponse build() {
            $.allowAllDomains = Objects.requireNonNull($.allowAllDomains, "expected parameter 'allowAllDomains' to be non-null");
            $.allowAmpTraffic = Objects.requireNonNull($.allowAmpTraffic, "expected parameter 'allowAmpTraffic' to be non-null");
            $.allowedDomains = Objects.requireNonNull($.allowedDomains, "expected parameter 'allowedDomains' to be non-null");
            $.challengeSecurityPreference = Objects.requireNonNull($.challengeSecurityPreference, "expected parameter 'challengeSecurityPreference' to be non-null");
            $.integrationType = Objects.requireNonNull($.integrationType, "expected parameter 'integrationType' to be non-null");
            return $;
        }
    }

}
