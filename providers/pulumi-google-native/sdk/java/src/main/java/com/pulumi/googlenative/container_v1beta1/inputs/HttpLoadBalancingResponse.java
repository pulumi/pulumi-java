// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.container_v1beta1.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.util.Objects;


/**
 * Configuration options for the HTTP (L7) load balancing controller addon, which makes it easy to set up HTTP load balancers for services in a cluster.
 * 
 */
public final class HttpLoadBalancingResponse extends com.pulumi.resources.InvokeArgs {

    public static final HttpLoadBalancingResponse Empty = new HttpLoadBalancingResponse();

    /**
     * Whether the HTTP Load Balancing controller is enabled in the cluster. When enabled, it runs a small pod in the cluster that manages the load balancers.
     * 
     */
    @Import(name="disabled", required=true)
    private Boolean disabled;

    /**
     * @return Whether the HTTP Load Balancing controller is enabled in the cluster. When enabled, it runs a small pod in the cluster that manages the load balancers.
     * 
     */
    public Boolean disabled() {
        return this.disabled;
    }

    private HttpLoadBalancingResponse() {}

    private HttpLoadBalancingResponse(HttpLoadBalancingResponse $) {
        this.disabled = $.disabled;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(HttpLoadBalancingResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private HttpLoadBalancingResponse $;

        public Builder() {
            $ = new HttpLoadBalancingResponse();
        }

        public Builder(HttpLoadBalancingResponse defaults) {
            $ = new HttpLoadBalancingResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param disabled Whether the HTTP Load Balancing controller is enabled in the cluster. When enabled, it runs a small pod in the cluster that manages the load balancers.
         * 
         * @return builder
         * 
         */
        public Builder disabled(Boolean disabled) {
            $.disabled = disabled;
            return this;
        }

        public HttpLoadBalancingResponse build() {
            $.disabled = Objects.requireNonNull($.disabled, "expected parameter 'disabled' to be non-null");
            return $;
        }
    }

}
