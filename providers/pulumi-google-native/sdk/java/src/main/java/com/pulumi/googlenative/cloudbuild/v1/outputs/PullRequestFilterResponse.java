// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.cloudbuild.v1.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class PullRequestFilterResponse {
    /**
     * @return Regex of branches to match. The syntax of the regular expressions accepted is the syntax accepted by RE2 and described at https://github.com/google/re2/wiki/Syntax
     * 
     */
    private final String branch;
    /**
     * @return Configure builds to run whether a repository owner or collaborator need to comment `/gcbrun`.
     * 
     */
    private final String commentControl;
    /**
     * @return If true, branches that do NOT match the git_ref will trigger a build.
     * 
     */
    private final Boolean invertRegex;

    @CustomType.Constructor
    private PullRequestFilterResponse(
        @CustomType.Parameter("branch") String branch,
        @CustomType.Parameter("commentControl") String commentControl,
        @CustomType.Parameter("invertRegex") Boolean invertRegex) {
        this.branch = branch;
        this.commentControl = commentControl;
        this.invertRegex = invertRegex;
    }

    /**
     * @return Regex of branches to match. The syntax of the regular expressions accepted is the syntax accepted by RE2 and described at https://github.com/google/re2/wiki/Syntax
     * 
     */
    public String branch() {
        return this.branch;
    }
    /**
     * @return Configure builds to run whether a repository owner or collaborator need to comment `/gcbrun`.
     * 
     */
    public String commentControl() {
        return this.commentControl;
    }
    /**
     * @return If true, branches that do NOT match the git_ref will trigger a build.
     * 
     */
    public Boolean invertRegex() {
        return this.invertRegex;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PullRequestFilterResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String branch;
        private String commentControl;
        private Boolean invertRegex;

        public Builder() {
    	      // Empty
        }

        public Builder(PullRequestFilterResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.branch = defaults.branch;
    	      this.commentControl = defaults.commentControl;
    	      this.invertRegex = defaults.invertRegex;
        }

        public Builder branch(String branch) {
            this.branch = Objects.requireNonNull(branch);
            return this;
        }
        public Builder commentControl(String commentControl) {
            this.commentControl = Objects.requireNonNull(commentControl);
            return this;
        }
        public Builder invertRegex(Boolean invertRegex) {
            this.invertRegex = Objects.requireNonNull(invertRegex);
            return this;
        }        public PullRequestFilterResponse build() {
            return new PullRequestFilterResponse(branch, commentControl, invertRegex);
        }
    }
}
