// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.beyondcorp.v1alpha.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.googlenative.beyondcorp.v1alpha.outputs.EgressResponse;
import com.pulumi.googlenative.beyondcorp.v1alpha.outputs.IngressResponse;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetClientConnectorServiceResult {
    /**
     * @return [Output only] Create time stamp.
     * 
     */
    private final String createTime;
    /**
     * @return Optional. User-provided name. The display name should follow certain format. * Must be 6 to 30 characters in length. * Can only contain lowercase letters, numbers, and hyphens. * Must start with a letter.
     * 
     */
    private final String displayName;
    /**
     * @return The details of the egress settings.
     * 
     */
    private final EgressResponse egress;
    /**
     * @return The details of the ingress settings.
     * 
     */
    private final IngressResponse ingress;
    /**
     * @return Name of resource. The name is ignored during creation.
     * 
     */
    private final String name;
    /**
     * @return The operational state of the ClientConnectorService.
     * 
     */
    private final String state;
    /**
     * @return [Output only] Update time stamp.
     * 
     */
    private final String updateTime;

    @CustomType.Constructor
    private GetClientConnectorServiceResult(
        @CustomType.Parameter("createTime") String createTime,
        @CustomType.Parameter("displayName") String displayName,
        @CustomType.Parameter("egress") EgressResponse egress,
        @CustomType.Parameter("ingress") IngressResponse ingress,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("state") String state,
        @CustomType.Parameter("updateTime") String updateTime) {
        this.createTime = createTime;
        this.displayName = displayName;
        this.egress = egress;
        this.ingress = ingress;
        this.name = name;
        this.state = state;
        this.updateTime = updateTime;
    }

    /**
     * @return [Output only] Create time stamp.
     * 
     */
    public String createTime() {
        return this.createTime;
    }
    /**
     * @return Optional. User-provided name. The display name should follow certain format. * Must be 6 to 30 characters in length. * Can only contain lowercase letters, numbers, and hyphens. * Must start with a letter.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return The details of the egress settings.
     * 
     */
    public EgressResponse egress() {
        return this.egress;
    }
    /**
     * @return The details of the ingress settings.
     * 
     */
    public IngressResponse ingress() {
        return this.ingress;
    }
    /**
     * @return Name of resource. The name is ignored during creation.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The operational state of the ClientConnectorService.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return [Output only] Update time stamp.
     * 
     */
    public String updateTime() {
        return this.updateTime;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetClientConnectorServiceResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String createTime;
        private String displayName;
        private EgressResponse egress;
        private IngressResponse ingress;
        private String name;
        private String state;
        private String updateTime;

        public Builder() {
    	      // Empty
        }

        public Builder(GetClientConnectorServiceResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.createTime = defaults.createTime;
    	      this.displayName = defaults.displayName;
    	      this.egress = defaults.egress;
    	      this.ingress = defaults.ingress;
    	      this.name = defaults.name;
    	      this.state = defaults.state;
    	      this.updateTime = defaults.updateTime;
        }

        public Builder createTime(String createTime) {
            this.createTime = Objects.requireNonNull(createTime);
            return this;
        }
        public Builder displayName(String displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }
        public Builder egress(EgressResponse egress) {
            this.egress = Objects.requireNonNull(egress);
            return this;
        }
        public Builder ingress(IngressResponse ingress) {
            this.ingress = Objects.requireNonNull(ingress);
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        public Builder updateTime(String updateTime) {
            this.updateTime = Objects.requireNonNull(updateTime);
            return this;
        }        public GetClientConnectorServiceResult build() {
            return new GetClientConnectorServiceResult(createTime, displayName, egress, ingress, name, state, updateTime);
        }
    }
}
