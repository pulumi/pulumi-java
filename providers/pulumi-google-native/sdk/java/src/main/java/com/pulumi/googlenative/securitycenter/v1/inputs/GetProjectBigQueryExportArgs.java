// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.securitycenter.v1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetProjectBigQueryExportArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetProjectBigQueryExportArgs Empty = new GetProjectBigQueryExportArgs();

    @Import(name="bigQueryExportId", required=true)
    private Output<String> bigQueryExportId;

    public Output<String> bigQueryExportId() {
        return this.bigQueryExportId;
    }

    @Import(name="project")
    private @Nullable Output<String> project;

    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    private GetProjectBigQueryExportArgs() {}

    private GetProjectBigQueryExportArgs(GetProjectBigQueryExportArgs $) {
        this.bigQueryExportId = $.bigQueryExportId;
        this.project = $.project;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetProjectBigQueryExportArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetProjectBigQueryExportArgs $;

        public Builder() {
            $ = new GetProjectBigQueryExportArgs();
        }

        public Builder(GetProjectBigQueryExportArgs defaults) {
            $ = new GetProjectBigQueryExportArgs(Objects.requireNonNull(defaults));
        }

        public Builder bigQueryExportId(Output<String> bigQueryExportId) {
            $.bigQueryExportId = bigQueryExportId;
            return this;
        }

        public Builder bigQueryExportId(String bigQueryExportId) {
            return bigQueryExportId(Output.of(bigQueryExportId));
        }

        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        public Builder project(String project) {
            return project(Output.of(project));
        }

        public GetProjectBigQueryExportArgs build() {
            $.bigQueryExportId = Objects.requireNonNull($.bigQueryExportId, "expected parameter 'bigQueryExportId' to be non-null");
            return $;
        }
    }

}
