// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.container.v1.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.googlenative.container.v1.outputs.AcceleratorConfigResponse;
import com.pulumi.googlenative.container.v1.outputs.AdvancedMachineFeaturesResponse;
import com.pulumi.googlenative.container.v1.outputs.ConfidentialNodesResponse;
import com.pulumi.googlenative.container.v1.outputs.GcfsConfigResponse;
import com.pulumi.googlenative.container.v1.outputs.LinuxNodeConfigResponse;
import com.pulumi.googlenative.container.v1.outputs.NodeKubeletConfigResponse;
import com.pulumi.googlenative.container.v1.outputs.NodeTaintResponse;
import com.pulumi.googlenative.container.v1.outputs.ReservationAffinityResponse;
import com.pulumi.googlenative.container.v1.outputs.SandboxConfigResponse;
import com.pulumi.googlenative.container.v1.outputs.ShieldedInstanceConfigResponse;
import com.pulumi.googlenative.container.v1.outputs.VirtualNICResponse;
import com.pulumi.googlenative.container.v1.outputs.WorkloadMetadataConfigResponse;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class NodeConfigResponse {
    /**
     * @return A list of hardware accelerators to be attached to each node. See https://cloud.google.com/compute/docs/gpus for more information about support for GPUs.
     * 
     */
    private final List<AcceleratorConfigResponse> accelerators;
    /**
     * @return Advanced features for the Compute Engine VM.
     * 
     */
    private final AdvancedMachineFeaturesResponse advancedMachineFeatures;
    /**
     * @return  The Customer Managed Encryption Key used to encrypt the boot disk attached to each node in the node pool. This should be of the form projects/[KEY_PROJECT_ID]/locations/[LOCATION]/keyRings/[RING_NAME]/cryptoKeys/[KEY_NAME]. For more information about protecting resources with Cloud KMS Keys please see: https://cloud.google.com/compute/docs/disks/customer-managed-encryption
     * 
     */
    private final String bootDiskKmsKey;
    /**
     * @return Confidential nodes config. All the nodes in the node pool will be Confidential VM once enabled.
     * 
     */
    private final ConfidentialNodesResponse confidentialNodes;
    /**
     * @return Size of the disk attached to each node, specified in GB. The smallest allowed disk size is 10GB. If unspecified, the default disk size is 100GB.
     * 
     */
    private final Integer diskSizeGb;
    /**
     * @return Type of the disk attached to each node (e.g. &#39;pd-standard&#39;, &#39;pd-ssd&#39; or &#39;pd-balanced&#39;) If unspecified, the default disk type is &#39;pd-standard&#39;
     * 
     */
    private final String diskType;
    /**
     * @return Google Container File System (image streaming) configs.
     * 
     */
    private final GcfsConfigResponse gcfsConfig;
    /**
     * @return Enable or disable gvnic in the node pool.
     * 
     */
    private final VirtualNICResponse gvnic;
    /**
     * @return The image type to use for this node. Note that for a given image type, the latest version of it will be used.
     * 
     */
    private final String imageType;
    /**
     * @return Node kubelet configs.
     * 
     */
    private final NodeKubeletConfigResponse kubeletConfig;
    /**
     * @return The map of Kubernetes labels (key/value pairs) to be applied to each node. These will added in addition to any default label(s) that Kubernetes may apply to the node. In case of conflict in label keys, the applied set may differ depending on the Kubernetes version -- it&#39;s best to assume the behavior is undefined and conflicts should be avoided. For more information, including usage and the valid values, see: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
     * 
     */
    private final Map<String,String> labels;
    /**
     * @return Parameters that can be configured on Linux nodes.
     * 
     */
    private final LinuxNodeConfigResponse linuxNodeConfig;
    /**
     * @return The number of local SSD disks to be attached to the node. The limit for this value is dependent upon the maximum number of disks available on a machine per zone. See: https://cloud.google.com/compute/docs/disks/local-ssd for more information.
     * 
     */
    private final Integer localSsdCount;
    /**
     * @return The name of a Google Compute Engine [machine type](https://cloud.google.com/compute/docs/machine-types) If unspecified, the default machine type is `e2-medium`.
     * 
     */
    private final String machineType;
    /**
     * @return The metadata key/value pairs assigned to instances in the cluster. Keys must conform to the regexp `[a-zA-Z0-9-_]+` and be less than 128 bytes in length. These are reflected as part of a URL in the metadata server. Additionally, to avoid ambiguity, keys must not conflict with any other metadata keys for the project or be one of the reserved keys: - &#34;cluster-location&#34; - &#34;cluster-name&#34; - &#34;cluster-uid&#34; - &#34;configure-sh&#34; - &#34;containerd-configure-sh&#34; - &#34;enable-os-login&#34; - &#34;gci-ensure-gke-docker&#34; - &#34;gci-metrics-enabled&#34; - &#34;gci-update-strategy&#34; - &#34;instance-template&#34; - &#34;kube-env&#34; - &#34;startup-script&#34; - &#34;user-data&#34; - &#34;disable-address-manager&#34; - &#34;windows-startup-script-ps1&#34; - &#34;common-psm1&#34; - &#34;k8s-node-setup-psm1&#34; - &#34;install-ssh-psm1&#34; - &#34;user-profile-psm1&#34; Values are free-form strings, and only have meaning as interpreted by the image running in the instance. The only restriction placed on them is that each value&#39;s size must be less than or equal to 32 KB. The total size of all keys and values must be less than 512 KB.
     * 
     */
    private final Map<String,String> metadata;
    /**
     * @return Minimum CPU platform to be used by this instance. The instance may be scheduled on the specified or newer CPU platform. Applicable values are the friendly names of CPU platforms, such as `minCpuPlatform: &#34;Intel Haswell&#34;` or `minCpuPlatform: &#34;Intel Sandy Bridge&#34;`. For more information, read [how to specify min CPU platform](https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform)
     * 
     */
    private final String minCpuPlatform;
    /**
     * @return Setting this field will assign instances of this pool to run on the specified node group. This is useful for running workloads on [sole tenant nodes](https://cloud.google.com/compute/docs/nodes/sole-tenant-nodes).
     * 
     */
    private final String nodeGroup;
    /**
     * @return The set of Google API scopes to be made available on all of the node VMs under the &#34;default&#34; service account. The following scopes are recommended, but not required, and by default are not included: * `https://www.googleapis.com/auth/compute` is required for mounting persistent storage on your nodes. * `https://www.googleapis.com/auth/devstorage.read_only` is required for communicating with **gcr.io** (the [Google Container Registry](https://cloud.google.com/container-registry/)). If unspecified, no scopes are added, unless Cloud Logging or Cloud Monitoring are enabled, in which case their required scopes will be added.
     * 
     */
    private final List<String> oauthScopes;
    /**
     * @return Whether the nodes are created as preemptible VM instances. See: https://cloud.google.com/compute/docs/instances/preemptible for more information about preemptible VM instances.
     * 
     */
    private final Boolean preemptible;
    /**
     * @return The optional reservation affinity. Setting this field will apply the specified [Zonal Compute Reservation](https://cloud.google.com/compute/docs/instances/reserving-zonal-resources) to this node pool.
     * 
     */
    private final ReservationAffinityResponse reservationAffinity;
    /**
     * @return Sandbox configuration for this node.
     * 
     */
    private final SandboxConfigResponse sandboxConfig;
    /**
     * @return The Google Cloud Platform Service Account to be used by the node VMs. Specify the email address of the Service Account; otherwise, if no Service Account is specified, the &#34;default&#34; service account is used.
     * 
     */
    private final String serviceAccount;
    /**
     * @return Shielded Instance options.
     * 
     */
    private final ShieldedInstanceConfigResponse shieldedInstanceConfig;
    /**
     * @return Spot flag for enabling Spot VM, which is a rebrand of the existing preemptible flag.
     * 
     */
    private final Boolean spot;
    /**
     * @return The list of instance tags applied to all nodes. Tags are used to identify valid sources or targets for network firewalls and are specified by the client during cluster or node pool creation. Each tag within the list must comply with RFC1035.
     * 
     */
    private final List<String> tags;
    /**
     * @return List of kubernetes taints to be applied to each node. For more information, including usage and the valid values, see: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
     * 
     */
    private final List<NodeTaintResponse> taints;
    /**
     * @return The workload metadata configuration for this node.
     * 
     */
    private final WorkloadMetadataConfigResponse workloadMetadataConfig;

    @CustomType.Constructor
    private NodeConfigResponse(
        @CustomType.Parameter("accelerators") List<AcceleratorConfigResponse> accelerators,
        @CustomType.Parameter("advancedMachineFeatures") AdvancedMachineFeaturesResponse advancedMachineFeatures,
        @CustomType.Parameter("bootDiskKmsKey") String bootDiskKmsKey,
        @CustomType.Parameter("confidentialNodes") ConfidentialNodesResponse confidentialNodes,
        @CustomType.Parameter("diskSizeGb") Integer diskSizeGb,
        @CustomType.Parameter("diskType") String diskType,
        @CustomType.Parameter("gcfsConfig") GcfsConfigResponse gcfsConfig,
        @CustomType.Parameter("gvnic") VirtualNICResponse gvnic,
        @CustomType.Parameter("imageType") String imageType,
        @CustomType.Parameter("kubeletConfig") NodeKubeletConfigResponse kubeletConfig,
        @CustomType.Parameter("labels") Map<String,String> labels,
        @CustomType.Parameter("linuxNodeConfig") LinuxNodeConfigResponse linuxNodeConfig,
        @CustomType.Parameter("localSsdCount") Integer localSsdCount,
        @CustomType.Parameter("machineType") String machineType,
        @CustomType.Parameter("metadata") Map<String,String> metadata,
        @CustomType.Parameter("minCpuPlatform") String minCpuPlatform,
        @CustomType.Parameter("nodeGroup") String nodeGroup,
        @CustomType.Parameter("oauthScopes") List<String> oauthScopes,
        @CustomType.Parameter("preemptible") Boolean preemptible,
        @CustomType.Parameter("reservationAffinity") ReservationAffinityResponse reservationAffinity,
        @CustomType.Parameter("sandboxConfig") SandboxConfigResponse sandboxConfig,
        @CustomType.Parameter("serviceAccount") String serviceAccount,
        @CustomType.Parameter("shieldedInstanceConfig") ShieldedInstanceConfigResponse shieldedInstanceConfig,
        @CustomType.Parameter("spot") Boolean spot,
        @CustomType.Parameter("tags") List<String> tags,
        @CustomType.Parameter("taints") List<NodeTaintResponse> taints,
        @CustomType.Parameter("workloadMetadataConfig") WorkloadMetadataConfigResponse workloadMetadataConfig) {
        this.accelerators = accelerators;
        this.advancedMachineFeatures = advancedMachineFeatures;
        this.bootDiskKmsKey = bootDiskKmsKey;
        this.confidentialNodes = confidentialNodes;
        this.diskSizeGb = diskSizeGb;
        this.diskType = diskType;
        this.gcfsConfig = gcfsConfig;
        this.gvnic = gvnic;
        this.imageType = imageType;
        this.kubeletConfig = kubeletConfig;
        this.labels = labels;
        this.linuxNodeConfig = linuxNodeConfig;
        this.localSsdCount = localSsdCount;
        this.machineType = machineType;
        this.metadata = metadata;
        this.minCpuPlatform = minCpuPlatform;
        this.nodeGroup = nodeGroup;
        this.oauthScopes = oauthScopes;
        this.preemptible = preemptible;
        this.reservationAffinity = reservationAffinity;
        this.sandboxConfig = sandboxConfig;
        this.serviceAccount = serviceAccount;
        this.shieldedInstanceConfig = shieldedInstanceConfig;
        this.spot = spot;
        this.tags = tags;
        this.taints = taints;
        this.workloadMetadataConfig = workloadMetadataConfig;
    }

    /**
     * @return A list of hardware accelerators to be attached to each node. See https://cloud.google.com/compute/docs/gpus for more information about support for GPUs.
     * 
     */
    public List<AcceleratorConfigResponse> accelerators() {
        return this.accelerators;
    }
    /**
     * @return Advanced features for the Compute Engine VM.
     * 
     */
    public AdvancedMachineFeaturesResponse advancedMachineFeatures() {
        return this.advancedMachineFeatures;
    }
    /**
     * @return  The Customer Managed Encryption Key used to encrypt the boot disk attached to each node in the node pool. This should be of the form projects/[KEY_PROJECT_ID]/locations/[LOCATION]/keyRings/[RING_NAME]/cryptoKeys/[KEY_NAME]. For more information about protecting resources with Cloud KMS Keys please see: https://cloud.google.com/compute/docs/disks/customer-managed-encryption
     * 
     */
    public String bootDiskKmsKey() {
        return this.bootDiskKmsKey;
    }
    /**
     * @return Confidential nodes config. All the nodes in the node pool will be Confidential VM once enabled.
     * 
     */
    public ConfidentialNodesResponse confidentialNodes() {
        return this.confidentialNodes;
    }
    /**
     * @return Size of the disk attached to each node, specified in GB. The smallest allowed disk size is 10GB. If unspecified, the default disk size is 100GB.
     * 
     */
    public Integer diskSizeGb() {
        return this.diskSizeGb;
    }
    /**
     * @return Type of the disk attached to each node (e.g. &#39;pd-standard&#39;, &#39;pd-ssd&#39; or &#39;pd-balanced&#39;) If unspecified, the default disk type is &#39;pd-standard&#39;
     * 
     */
    public String diskType() {
        return this.diskType;
    }
    /**
     * @return Google Container File System (image streaming) configs.
     * 
     */
    public GcfsConfigResponse gcfsConfig() {
        return this.gcfsConfig;
    }
    /**
     * @return Enable or disable gvnic in the node pool.
     * 
     */
    public VirtualNICResponse gvnic() {
        return this.gvnic;
    }
    /**
     * @return The image type to use for this node. Note that for a given image type, the latest version of it will be used.
     * 
     */
    public String imageType() {
        return this.imageType;
    }
    /**
     * @return Node kubelet configs.
     * 
     */
    public NodeKubeletConfigResponse kubeletConfig() {
        return this.kubeletConfig;
    }
    /**
     * @return The map of Kubernetes labels (key/value pairs) to be applied to each node. These will added in addition to any default label(s) that Kubernetes may apply to the node. In case of conflict in label keys, the applied set may differ depending on the Kubernetes version -- it&#39;s best to assume the behavior is undefined and conflicts should be avoided. For more information, including usage and the valid values, see: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
     * 
     */
    public Map<String,String> labels() {
        return this.labels;
    }
    /**
     * @return Parameters that can be configured on Linux nodes.
     * 
     */
    public LinuxNodeConfigResponse linuxNodeConfig() {
        return this.linuxNodeConfig;
    }
    /**
     * @return The number of local SSD disks to be attached to the node. The limit for this value is dependent upon the maximum number of disks available on a machine per zone. See: https://cloud.google.com/compute/docs/disks/local-ssd for more information.
     * 
     */
    public Integer localSsdCount() {
        return this.localSsdCount;
    }
    /**
     * @return The name of a Google Compute Engine [machine type](https://cloud.google.com/compute/docs/machine-types) If unspecified, the default machine type is `e2-medium`.
     * 
     */
    public String machineType() {
        return this.machineType;
    }
    /**
     * @return The metadata key/value pairs assigned to instances in the cluster. Keys must conform to the regexp `[a-zA-Z0-9-_]+` and be less than 128 bytes in length. These are reflected as part of a URL in the metadata server. Additionally, to avoid ambiguity, keys must not conflict with any other metadata keys for the project or be one of the reserved keys: - &#34;cluster-location&#34; - &#34;cluster-name&#34; - &#34;cluster-uid&#34; - &#34;configure-sh&#34; - &#34;containerd-configure-sh&#34; - &#34;enable-os-login&#34; - &#34;gci-ensure-gke-docker&#34; - &#34;gci-metrics-enabled&#34; - &#34;gci-update-strategy&#34; - &#34;instance-template&#34; - &#34;kube-env&#34; - &#34;startup-script&#34; - &#34;user-data&#34; - &#34;disable-address-manager&#34; - &#34;windows-startup-script-ps1&#34; - &#34;common-psm1&#34; - &#34;k8s-node-setup-psm1&#34; - &#34;install-ssh-psm1&#34; - &#34;user-profile-psm1&#34; Values are free-form strings, and only have meaning as interpreted by the image running in the instance. The only restriction placed on them is that each value&#39;s size must be less than or equal to 32 KB. The total size of all keys and values must be less than 512 KB.
     * 
     */
    public Map<String,String> metadata() {
        return this.metadata;
    }
    /**
     * @return Minimum CPU platform to be used by this instance. The instance may be scheduled on the specified or newer CPU platform. Applicable values are the friendly names of CPU platforms, such as `minCpuPlatform: &#34;Intel Haswell&#34;` or `minCpuPlatform: &#34;Intel Sandy Bridge&#34;`. For more information, read [how to specify min CPU platform](https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform)
     * 
     */
    public String minCpuPlatform() {
        return this.minCpuPlatform;
    }
    /**
     * @return Setting this field will assign instances of this pool to run on the specified node group. This is useful for running workloads on [sole tenant nodes](https://cloud.google.com/compute/docs/nodes/sole-tenant-nodes).
     * 
     */
    public String nodeGroup() {
        return this.nodeGroup;
    }
    /**
     * @return The set of Google API scopes to be made available on all of the node VMs under the &#34;default&#34; service account. The following scopes are recommended, but not required, and by default are not included: * `https://www.googleapis.com/auth/compute` is required for mounting persistent storage on your nodes. * `https://www.googleapis.com/auth/devstorage.read_only` is required for communicating with **gcr.io** (the [Google Container Registry](https://cloud.google.com/container-registry/)). If unspecified, no scopes are added, unless Cloud Logging or Cloud Monitoring are enabled, in which case their required scopes will be added.
     * 
     */
    public List<String> oauthScopes() {
        return this.oauthScopes;
    }
    /**
     * @return Whether the nodes are created as preemptible VM instances. See: https://cloud.google.com/compute/docs/instances/preemptible for more information about preemptible VM instances.
     * 
     */
    public Boolean preemptible() {
        return this.preemptible;
    }
    /**
     * @return The optional reservation affinity. Setting this field will apply the specified [Zonal Compute Reservation](https://cloud.google.com/compute/docs/instances/reserving-zonal-resources) to this node pool.
     * 
     */
    public ReservationAffinityResponse reservationAffinity() {
        return this.reservationAffinity;
    }
    /**
     * @return Sandbox configuration for this node.
     * 
     */
    public SandboxConfigResponse sandboxConfig() {
        return this.sandboxConfig;
    }
    /**
     * @return The Google Cloud Platform Service Account to be used by the node VMs. Specify the email address of the Service Account; otherwise, if no Service Account is specified, the &#34;default&#34; service account is used.
     * 
     */
    public String serviceAccount() {
        return this.serviceAccount;
    }
    /**
     * @return Shielded Instance options.
     * 
     */
    public ShieldedInstanceConfigResponse shieldedInstanceConfig() {
        return this.shieldedInstanceConfig;
    }
    /**
     * @return Spot flag for enabling Spot VM, which is a rebrand of the existing preemptible flag.
     * 
     */
    public Boolean spot() {
        return this.spot;
    }
    /**
     * @return The list of instance tags applied to all nodes. Tags are used to identify valid sources or targets for network firewalls and are specified by the client during cluster or node pool creation. Each tag within the list must comply with RFC1035.
     * 
     */
    public List<String> tags() {
        return this.tags;
    }
    /**
     * @return List of kubernetes taints to be applied to each node. For more information, including usage and the valid values, see: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
     * 
     */
    public List<NodeTaintResponse> taints() {
        return this.taints;
    }
    /**
     * @return The workload metadata configuration for this node.
     * 
     */
    public WorkloadMetadataConfigResponse workloadMetadataConfig() {
        return this.workloadMetadataConfig;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(NodeConfigResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<AcceleratorConfigResponse> accelerators;
        private AdvancedMachineFeaturesResponse advancedMachineFeatures;
        private String bootDiskKmsKey;
        private ConfidentialNodesResponse confidentialNodes;
        private Integer diskSizeGb;
        private String diskType;
        private GcfsConfigResponse gcfsConfig;
        private VirtualNICResponse gvnic;
        private String imageType;
        private NodeKubeletConfigResponse kubeletConfig;
        private Map<String,String> labels;
        private LinuxNodeConfigResponse linuxNodeConfig;
        private Integer localSsdCount;
        private String machineType;
        private Map<String,String> metadata;
        private String minCpuPlatform;
        private String nodeGroup;
        private List<String> oauthScopes;
        private Boolean preemptible;
        private ReservationAffinityResponse reservationAffinity;
        private SandboxConfigResponse sandboxConfig;
        private String serviceAccount;
        private ShieldedInstanceConfigResponse shieldedInstanceConfig;
        private Boolean spot;
        private List<String> tags;
        private List<NodeTaintResponse> taints;
        private WorkloadMetadataConfigResponse workloadMetadataConfig;

        public Builder() {
    	      // Empty
        }

        public Builder(NodeConfigResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accelerators = defaults.accelerators;
    	      this.advancedMachineFeatures = defaults.advancedMachineFeatures;
    	      this.bootDiskKmsKey = defaults.bootDiskKmsKey;
    	      this.confidentialNodes = defaults.confidentialNodes;
    	      this.diskSizeGb = defaults.diskSizeGb;
    	      this.diskType = defaults.diskType;
    	      this.gcfsConfig = defaults.gcfsConfig;
    	      this.gvnic = defaults.gvnic;
    	      this.imageType = defaults.imageType;
    	      this.kubeletConfig = defaults.kubeletConfig;
    	      this.labels = defaults.labels;
    	      this.linuxNodeConfig = defaults.linuxNodeConfig;
    	      this.localSsdCount = defaults.localSsdCount;
    	      this.machineType = defaults.machineType;
    	      this.metadata = defaults.metadata;
    	      this.minCpuPlatform = defaults.minCpuPlatform;
    	      this.nodeGroup = defaults.nodeGroup;
    	      this.oauthScopes = defaults.oauthScopes;
    	      this.preemptible = defaults.preemptible;
    	      this.reservationAffinity = defaults.reservationAffinity;
    	      this.sandboxConfig = defaults.sandboxConfig;
    	      this.serviceAccount = defaults.serviceAccount;
    	      this.shieldedInstanceConfig = defaults.shieldedInstanceConfig;
    	      this.spot = defaults.spot;
    	      this.tags = defaults.tags;
    	      this.taints = defaults.taints;
    	      this.workloadMetadataConfig = defaults.workloadMetadataConfig;
        }

        public Builder accelerators(List<AcceleratorConfigResponse> accelerators) {
            this.accelerators = Objects.requireNonNull(accelerators);
            return this;
        }
        public Builder accelerators(AcceleratorConfigResponse... accelerators) {
            return accelerators(List.of(accelerators));
        }
        public Builder advancedMachineFeatures(AdvancedMachineFeaturesResponse advancedMachineFeatures) {
            this.advancedMachineFeatures = Objects.requireNonNull(advancedMachineFeatures);
            return this;
        }
        public Builder bootDiskKmsKey(String bootDiskKmsKey) {
            this.bootDiskKmsKey = Objects.requireNonNull(bootDiskKmsKey);
            return this;
        }
        public Builder confidentialNodes(ConfidentialNodesResponse confidentialNodes) {
            this.confidentialNodes = Objects.requireNonNull(confidentialNodes);
            return this;
        }
        public Builder diskSizeGb(Integer diskSizeGb) {
            this.diskSizeGb = Objects.requireNonNull(diskSizeGb);
            return this;
        }
        public Builder diskType(String diskType) {
            this.diskType = Objects.requireNonNull(diskType);
            return this;
        }
        public Builder gcfsConfig(GcfsConfigResponse gcfsConfig) {
            this.gcfsConfig = Objects.requireNonNull(gcfsConfig);
            return this;
        }
        public Builder gvnic(VirtualNICResponse gvnic) {
            this.gvnic = Objects.requireNonNull(gvnic);
            return this;
        }
        public Builder imageType(String imageType) {
            this.imageType = Objects.requireNonNull(imageType);
            return this;
        }
        public Builder kubeletConfig(NodeKubeletConfigResponse kubeletConfig) {
            this.kubeletConfig = Objects.requireNonNull(kubeletConfig);
            return this;
        }
        public Builder labels(Map<String,String> labels) {
            this.labels = Objects.requireNonNull(labels);
            return this;
        }
        public Builder linuxNodeConfig(LinuxNodeConfigResponse linuxNodeConfig) {
            this.linuxNodeConfig = Objects.requireNonNull(linuxNodeConfig);
            return this;
        }
        public Builder localSsdCount(Integer localSsdCount) {
            this.localSsdCount = Objects.requireNonNull(localSsdCount);
            return this;
        }
        public Builder machineType(String machineType) {
            this.machineType = Objects.requireNonNull(machineType);
            return this;
        }
        public Builder metadata(Map<String,String> metadata) {
            this.metadata = Objects.requireNonNull(metadata);
            return this;
        }
        public Builder minCpuPlatform(String minCpuPlatform) {
            this.minCpuPlatform = Objects.requireNonNull(minCpuPlatform);
            return this;
        }
        public Builder nodeGroup(String nodeGroup) {
            this.nodeGroup = Objects.requireNonNull(nodeGroup);
            return this;
        }
        public Builder oauthScopes(List<String> oauthScopes) {
            this.oauthScopes = Objects.requireNonNull(oauthScopes);
            return this;
        }
        public Builder oauthScopes(String... oauthScopes) {
            return oauthScopes(List.of(oauthScopes));
        }
        public Builder preemptible(Boolean preemptible) {
            this.preemptible = Objects.requireNonNull(preemptible);
            return this;
        }
        public Builder reservationAffinity(ReservationAffinityResponse reservationAffinity) {
            this.reservationAffinity = Objects.requireNonNull(reservationAffinity);
            return this;
        }
        public Builder sandboxConfig(SandboxConfigResponse sandboxConfig) {
            this.sandboxConfig = Objects.requireNonNull(sandboxConfig);
            return this;
        }
        public Builder serviceAccount(String serviceAccount) {
            this.serviceAccount = Objects.requireNonNull(serviceAccount);
            return this;
        }
        public Builder shieldedInstanceConfig(ShieldedInstanceConfigResponse shieldedInstanceConfig) {
            this.shieldedInstanceConfig = Objects.requireNonNull(shieldedInstanceConfig);
            return this;
        }
        public Builder spot(Boolean spot) {
            this.spot = Objects.requireNonNull(spot);
            return this;
        }
        public Builder tags(List<String> tags) {
            this.tags = Objects.requireNonNull(tags);
            return this;
        }
        public Builder tags(String... tags) {
            return tags(List.of(tags));
        }
        public Builder taints(List<NodeTaintResponse> taints) {
            this.taints = Objects.requireNonNull(taints);
            return this;
        }
        public Builder taints(NodeTaintResponse... taints) {
            return taints(List.of(taints));
        }
        public Builder workloadMetadataConfig(WorkloadMetadataConfigResponse workloadMetadataConfig) {
            this.workloadMetadataConfig = Objects.requireNonNull(workloadMetadataConfig);
            return this;
        }        public NodeConfigResponse build() {
            return new NodeConfigResponse(accelerators, advancedMachineFeatures, bootDiskKmsKey, confidentialNodes, diskSizeGb, diskType, gcfsConfig, gvnic, imageType, kubeletConfig, labels, linuxNodeConfig, localSsdCount, machineType, metadata, minCpuPlatform, nodeGroup, oauthScopes, preemptible, reservationAffinity, sandboxConfig, serviceAccount, shieldedInstanceConfig, spot, tags, taints, workloadMetadataConfig);
        }
    }
}
