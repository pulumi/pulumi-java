// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.servicemanagement_v1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * A custom error rule.
 * 
 */
public final class CustomErrorRuleArgs extends com.pulumi.resources.ResourceArgs {

    public static final CustomErrorRuleArgs Empty = new CustomErrorRuleArgs();

    /**
     * Mark this message as possible payload in error response. Otherwise, objects of this type will be filtered when they appear in error payload.
     * 
     */
    @Import(name="isErrorType")
      private final @Nullable Output<Boolean> isErrorType;

    public Output<Boolean> isErrorType() {
        return this.isErrorType == null ? Codegen.empty() : this.isErrorType;
    }

    /**
     * Selects messages to which this rule applies. Refer to selector for syntax details.
     * 
     */
    @Import(name="selector")
      private final @Nullable Output<String> selector;

    public Output<String> selector() {
        return this.selector == null ? Codegen.empty() : this.selector;
    }

    public CustomErrorRuleArgs(
        @Nullable Output<Boolean> isErrorType,
        @Nullable Output<String> selector) {
        this.isErrorType = isErrorType;
        this.selector = selector;
    }

    private CustomErrorRuleArgs() {
        this.isErrorType = Codegen.empty();
        this.selector = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CustomErrorRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<Boolean> isErrorType;
        private @Nullable Output<String> selector;

        public Builder() {
    	      // Empty
        }

        public Builder(CustomErrorRuleArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.isErrorType = defaults.isErrorType;
    	      this.selector = defaults.selector;
        }

        public Builder isErrorType(@Nullable Output<Boolean> isErrorType) {
            this.isErrorType = isErrorType;
            return this;
        }
        public Builder isErrorType(@Nullable Boolean isErrorType) {
            this.isErrorType = Codegen.ofNullable(isErrorType);
            return this;
        }
        public Builder selector(@Nullable Output<String> selector) {
            this.selector = selector;
            return this;
        }
        public Builder selector(@Nullable String selector) {
            this.selector = Codegen.ofNullable(selector);
            return this;
        }        public CustomErrorRuleArgs build() {
            return new CustomErrorRuleArgs(isErrorType, selector);
        }
    }
}
