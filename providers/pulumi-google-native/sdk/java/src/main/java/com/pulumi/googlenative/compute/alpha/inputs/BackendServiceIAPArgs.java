// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.compute.alpha.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.compute.alpha.inputs.BackendServiceIAPOAuth2ClientInfoArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Identity-Aware Proxy
 * 
 */
public final class BackendServiceIAPArgs extends com.pulumi.resources.ResourceArgs {

    public static final BackendServiceIAPArgs Empty = new BackendServiceIAPArgs();

    /**
     * Whether the serving infrastructure will authenticate and authorize all incoming requests. If true, the oauth2ClientId and oauth2ClientSecret fields must be non-empty.
     * 
     */
    @Import(name="enabled")
    private @Nullable Output<Boolean> enabled;

    /**
     * @return Whether the serving infrastructure will authenticate and authorize all incoming requests. If true, the oauth2ClientId and oauth2ClientSecret fields must be non-empty.
     * 
     */
    public Optional<Output<Boolean>> enabled() {
        return Optional.ofNullable(this.enabled);
    }

    /**
     * OAuth2 client ID to use for the authentication flow.
     * 
     */
    @Import(name="oauth2ClientId")
    private @Nullable Output<String> oauth2ClientId;

    /**
     * @return OAuth2 client ID to use for the authentication flow.
     * 
     */
    public Optional<Output<String>> oauth2ClientId() {
        return Optional.ofNullable(this.oauth2ClientId);
    }

    /**
     * [Input Only] OAuth client info required to generate client id to be used for IAP.
     * 
     */
    @Import(name="oauth2ClientInfo")
    private @Nullable Output<BackendServiceIAPOAuth2ClientInfoArgs> oauth2ClientInfo;

    /**
     * @return [Input Only] OAuth client info required to generate client id to be used for IAP.
     * 
     */
    public Optional<Output<BackendServiceIAPOAuth2ClientInfoArgs>> oauth2ClientInfo() {
        return Optional.ofNullable(this.oauth2ClientInfo);
    }

    /**
     * OAuth2 client secret to use for the authentication flow. For security reasons, this value cannot be retrieved via the API. Instead, the SHA-256 hash of the value is returned in the oauth2ClientSecretSha256 field. @InputOnly
     * 
     */
    @Import(name="oauth2ClientSecret")
    private @Nullable Output<String> oauth2ClientSecret;

    /**
     * @return OAuth2 client secret to use for the authentication flow. For security reasons, this value cannot be retrieved via the API. Instead, the SHA-256 hash of the value is returned in the oauth2ClientSecretSha256 field. @InputOnly
     * 
     */
    public Optional<Output<String>> oauth2ClientSecret() {
        return Optional.ofNullable(this.oauth2ClientSecret);
    }

    private BackendServiceIAPArgs() {}

    private BackendServiceIAPArgs(BackendServiceIAPArgs $) {
        this.enabled = $.enabled;
        this.oauth2ClientId = $.oauth2ClientId;
        this.oauth2ClientInfo = $.oauth2ClientInfo;
        this.oauth2ClientSecret = $.oauth2ClientSecret;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BackendServiceIAPArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BackendServiceIAPArgs $;

        public Builder() {
            $ = new BackendServiceIAPArgs();
        }

        public Builder(BackendServiceIAPArgs defaults) {
            $ = new BackendServiceIAPArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param enabled Whether the serving infrastructure will authenticate and authorize all incoming requests. If true, the oauth2ClientId and oauth2ClientSecret fields must be non-empty.
         * 
         * @return builder
         * 
         */
        public Builder enabled(@Nullable Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param enabled Whether the serving infrastructure will authenticate and authorize all incoming requests. If true, the oauth2ClientId and oauth2ClientSecret fields must be non-empty.
         * 
         * @return builder
         * 
         */
        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        /**
         * @param oauth2ClientId OAuth2 client ID to use for the authentication flow.
         * 
         * @return builder
         * 
         */
        public Builder oauth2ClientId(@Nullable Output<String> oauth2ClientId) {
            $.oauth2ClientId = oauth2ClientId;
            return this;
        }

        /**
         * @param oauth2ClientId OAuth2 client ID to use for the authentication flow.
         * 
         * @return builder
         * 
         */
        public Builder oauth2ClientId(String oauth2ClientId) {
            return oauth2ClientId(Output.of(oauth2ClientId));
        }

        /**
         * @param oauth2ClientInfo [Input Only] OAuth client info required to generate client id to be used for IAP.
         * 
         * @return builder
         * 
         */
        public Builder oauth2ClientInfo(@Nullable Output<BackendServiceIAPOAuth2ClientInfoArgs> oauth2ClientInfo) {
            $.oauth2ClientInfo = oauth2ClientInfo;
            return this;
        }

        /**
         * @param oauth2ClientInfo [Input Only] OAuth client info required to generate client id to be used for IAP.
         * 
         * @return builder
         * 
         */
        public Builder oauth2ClientInfo(BackendServiceIAPOAuth2ClientInfoArgs oauth2ClientInfo) {
            return oauth2ClientInfo(Output.of(oauth2ClientInfo));
        }

        /**
         * @param oauth2ClientSecret OAuth2 client secret to use for the authentication flow. For security reasons, this value cannot be retrieved via the API. Instead, the SHA-256 hash of the value is returned in the oauth2ClientSecretSha256 field. @InputOnly
         * 
         * @return builder
         * 
         */
        public Builder oauth2ClientSecret(@Nullable Output<String> oauth2ClientSecret) {
            $.oauth2ClientSecret = oauth2ClientSecret;
            return this;
        }

        /**
         * @param oauth2ClientSecret OAuth2 client secret to use for the authentication flow. For security reasons, this value cannot be retrieved via the API. Instead, the SHA-256 hash of the value is returned in the oauth2ClientSecretSha256 field. @InputOnly
         * 
         * @return builder
         * 
         */
        public Builder oauth2ClientSecret(String oauth2ClientSecret) {
            return oauth2ClientSecret(Output.of(oauth2ClientSecret));
        }

        public BackendServiceIAPArgs build() {
            return $;
        }
    }

}
