// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.monitoring_v1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import com.pulumi.googlenative.monitoring_v1.inputs.WidgetArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Defines the layout properties and content for a row.
 * 
 */
public final class RowArgs extends com.pulumi.resources.ResourceArgs {

    public static final RowArgs Empty = new RowArgs();

    /**
     * The relative weight of this row. The row weight is used to adjust the height of rows on the screen (relative to peers). Greater the weight, greater the height of the row on the screen. If omitted, a value of 1 is used while rendering.
     * 
     */
    @Import(name="weight")
      private final @Nullable Output<String> weight;

    public Output<String> weight() {
        return this.weight == null ? Codegen.empty() : this.weight;
    }

    /**
     * The display widgets arranged horizontally in this row.
     * 
     */
    @Import(name="widgets")
      private final @Nullable Output<List<WidgetArgs>> widgets;

    public Output<List<WidgetArgs>> widgets() {
        return this.widgets == null ? Codegen.empty() : this.widgets;
    }

    public RowArgs(
        @Nullable Output<String> weight,
        @Nullable Output<List<WidgetArgs>> widgets) {
        this.weight = weight;
        this.widgets = widgets;
    }

    private RowArgs() {
        this.weight = Codegen.empty();
        this.widgets = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RowArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> weight;
        private @Nullable Output<List<WidgetArgs>> widgets;

        public Builder() {
    	      // Empty
        }

        public Builder(RowArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.weight = defaults.weight;
    	      this.widgets = defaults.widgets;
        }

        public Builder weight(@Nullable Output<String> weight) {
            this.weight = weight;
            return this;
        }
        public Builder weight(@Nullable String weight) {
            this.weight = Codegen.ofNullable(weight);
            return this;
        }
        public Builder widgets(@Nullable Output<List<WidgetArgs>> widgets) {
            this.widgets = widgets;
            return this;
        }
        public Builder widgets(@Nullable List<WidgetArgs> widgets) {
            this.widgets = Codegen.ofNullable(widgets);
            return this;
        }
        public Builder widgets(WidgetArgs... widgets) {
            return widgets(List.of(widgets));
        }        public RowArgs build() {
            return new RowArgs(weight, widgets);
        }
    }
}
