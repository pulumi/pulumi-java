// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.translate_v3.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * Used with unidirectional glossaries.
 * 
 */
public final class LanguageCodePairResponse extends com.pulumi.resources.InvokeArgs {

    public static final LanguageCodePairResponse Empty = new LanguageCodePairResponse();

    /**
     * The BCP-47 language code of the input text, for example, &#34;en-US&#34;. Expected to be an exact match for GlossaryTerm.language_code.
     * 
     */
    @Import(name="sourceLanguageCode", required=true)
    private String sourceLanguageCode;

    /**
     * @return The BCP-47 language code of the input text, for example, &#34;en-US&#34;. Expected to be an exact match for GlossaryTerm.language_code.
     * 
     */
    public String sourceLanguageCode() {
        return this.sourceLanguageCode;
    }

    /**
     * The BCP-47 language code for translation output, for example, &#34;zh-CN&#34;. Expected to be an exact match for GlossaryTerm.language_code.
     * 
     */
    @Import(name="targetLanguageCode", required=true)
    private String targetLanguageCode;

    /**
     * @return The BCP-47 language code for translation output, for example, &#34;zh-CN&#34;. Expected to be an exact match for GlossaryTerm.language_code.
     * 
     */
    public String targetLanguageCode() {
        return this.targetLanguageCode;
    }

    private LanguageCodePairResponse() {}

    private LanguageCodePairResponse(LanguageCodePairResponse $) {
        this.sourceLanguageCode = $.sourceLanguageCode;
        this.targetLanguageCode = $.targetLanguageCode;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LanguageCodePairResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LanguageCodePairResponse $;

        public Builder() {
            $ = new LanguageCodePairResponse();
        }

        public Builder(LanguageCodePairResponse defaults) {
            $ = new LanguageCodePairResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param sourceLanguageCode The BCP-47 language code of the input text, for example, &#34;en-US&#34;. Expected to be an exact match for GlossaryTerm.language_code.
         * 
         * @return builder
         * 
         */
        public Builder sourceLanguageCode(String sourceLanguageCode) {
            $.sourceLanguageCode = sourceLanguageCode;
            return this;
        }

        /**
         * @param targetLanguageCode The BCP-47 language code for translation output, for example, &#34;zh-CN&#34;. Expected to be an exact match for GlossaryTerm.language_code.
         * 
         * @return builder
         * 
         */
        public Builder targetLanguageCode(String targetLanguageCode) {
            $.targetLanguageCode = targetLanguageCode;
            return this;
        }

        public LanguageCodePairResponse build() {
            $.sourceLanguageCode = Objects.requireNonNull($.sourceLanguageCode, "expected parameter 'sourceLanguageCode' to be non-null");
            $.targetLanguageCode = Objects.requireNonNull($.targetLanguageCode, "expected parameter 'targetLanguageCode' to be non-null");
            return $;
        }
    }

}
