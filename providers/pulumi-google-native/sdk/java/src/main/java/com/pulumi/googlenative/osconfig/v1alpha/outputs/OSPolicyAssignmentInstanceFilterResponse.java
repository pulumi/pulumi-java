// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.osconfig.v1alpha.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.googlenative.osconfig.v1alpha.outputs.OSPolicyAssignmentInstanceFilterInventoryResponse;
import com.pulumi.googlenative.osconfig.v1alpha.outputs.OSPolicyAssignmentLabelSetResponse;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class OSPolicyAssignmentInstanceFilterResponse {
    /**
     * @return Target all VMs in the project. If true, no other criteria is permitted.
     * 
     */
    private final Boolean all;
    /**
     * @return List of label sets used for VM exclusion. If the list has more than one label set, the VM is excluded if any of the label sets are applicable for the VM.
     * 
     */
    private final List<OSPolicyAssignmentLabelSetResponse> exclusionLabels;
    /**
     * @return List of label sets used for VM inclusion. If the list has more than one `LabelSet`, the VM is included if any of the label sets are applicable for the VM.
     * 
     */
    private final List<OSPolicyAssignmentLabelSetResponse> inclusionLabels;
    /**
     * @return List of inventories to select VMs. A VM is selected if its inventory data matches at least one of the following inventories.
     * 
     */
    private final List<OSPolicyAssignmentInstanceFilterInventoryResponse> inventories;
    /**
     * @return Deprecated. Use the `inventories` field instead. A VM is selected if it&#39;s OS short name matches with any of the values provided in this list.
     * 
     * @deprecated
     * Deprecated. Use the `inventories` field instead. A VM is selected if it&#39;s OS short name matches with any of the values provided in this list.
     * 
     */
    @Deprecated /* Deprecated. Use the `inventories` field instead. A VM is selected if it's OS short name matches with any of the values provided in this list. */
    private final List<String> osShortNames;

    @CustomType.Constructor
    private OSPolicyAssignmentInstanceFilterResponse(
        @CustomType.Parameter("all") Boolean all,
        @CustomType.Parameter("exclusionLabels") List<OSPolicyAssignmentLabelSetResponse> exclusionLabels,
        @CustomType.Parameter("inclusionLabels") List<OSPolicyAssignmentLabelSetResponse> inclusionLabels,
        @CustomType.Parameter("inventories") List<OSPolicyAssignmentInstanceFilterInventoryResponse> inventories,
        @CustomType.Parameter("osShortNames") List<String> osShortNames) {
        this.all = all;
        this.exclusionLabels = exclusionLabels;
        this.inclusionLabels = inclusionLabels;
        this.inventories = inventories;
        this.osShortNames = osShortNames;
    }

    /**
     * @return Target all VMs in the project. If true, no other criteria is permitted.
     * 
     */
    public Boolean all() {
        return this.all;
    }
    /**
     * @return List of label sets used for VM exclusion. If the list has more than one label set, the VM is excluded if any of the label sets are applicable for the VM.
     * 
     */
    public List<OSPolicyAssignmentLabelSetResponse> exclusionLabels() {
        return this.exclusionLabels;
    }
    /**
     * @return List of label sets used for VM inclusion. If the list has more than one `LabelSet`, the VM is included if any of the label sets are applicable for the VM.
     * 
     */
    public List<OSPolicyAssignmentLabelSetResponse> inclusionLabels() {
        return this.inclusionLabels;
    }
    /**
     * @return List of inventories to select VMs. A VM is selected if its inventory data matches at least one of the following inventories.
     * 
     */
    public List<OSPolicyAssignmentInstanceFilterInventoryResponse> inventories() {
        return this.inventories;
    }
    /**
     * @return Deprecated. Use the `inventories` field instead. A VM is selected if it&#39;s OS short name matches with any of the values provided in this list.
     * 
     * @deprecated
     * Deprecated. Use the `inventories` field instead. A VM is selected if it&#39;s OS short name matches with any of the values provided in this list.
     * 
     */
    @Deprecated /* Deprecated. Use the `inventories` field instead. A VM is selected if it's OS short name matches with any of the values provided in this list. */
    public List<String> osShortNames() {
        return this.osShortNames;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(OSPolicyAssignmentInstanceFilterResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Boolean all;
        private List<OSPolicyAssignmentLabelSetResponse> exclusionLabels;
        private List<OSPolicyAssignmentLabelSetResponse> inclusionLabels;
        private List<OSPolicyAssignmentInstanceFilterInventoryResponse> inventories;
        private List<String> osShortNames;

        public Builder() {
    	      // Empty
        }

        public Builder(OSPolicyAssignmentInstanceFilterResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.all = defaults.all;
    	      this.exclusionLabels = defaults.exclusionLabels;
    	      this.inclusionLabels = defaults.inclusionLabels;
    	      this.inventories = defaults.inventories;
    	      this.osShortNames = defaults.osShortNames;
        }

        public Builder all(Boolean all) {
            this.all = Objects.requireNonNull(all);
            return this;
        }
        public Builder exclusionLabels(List<OSPolicyAssignmentLabelSetResponse> exclusionLabels) {
            this.exclusionLabels = Objects.requireNonNull(exclusionLabels);
            return this;
        }
        public Builder exclusionLabels(OSPolicyAssignmentLabelSetResponse... exclusionLabels) {
            return exclusionLabels(List.of(exclusionLabels));
        }
        public Builder inclusionLabels(List<OSPolicyAssignmentLabelSetResponse> inclusionLabels) {
            this.inclusionLabels = Objects.requireNonNull(inclusionLabels);
            return this;
        }
        public Builder inclusionLabels(OSPolicyAssignmentLabelSetResponse... inclusionLabels) {
            return inclusionLabels(List.of(inclusionLabels));
        }
        public Builder inventories(List<OSPolicyAssignmentInstanceFilterInventoryResponse> inventories) {
            this.inventories = Objects.requireNonNull(inventories);
            return this;
        }
        public Builder inventories(OSPolicyAssignmentInstanceFilterInventoryResponse... inventories) {
            return inventories(List.of(inventories));
        }
        public Builder osShortNames(List<String> osShortNames) {
            this.osShortNames = Objects.requireNonNull(osShortNames);
            return this;
        }
        public Builder osShortNames(String... osShortNames) {
            return osShortNames(List.of(osShortNames));
        }        public OSPolicyAssignmentInstanceFilterResponse build() {
            return new OSPolicyAssignmentInstanceFilterResponse(all, exclusionLabels, inclusionLabels, inventories, osShortNames);
        }
    }
}
