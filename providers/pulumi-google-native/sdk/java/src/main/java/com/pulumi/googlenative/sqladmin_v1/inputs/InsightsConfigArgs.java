// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.sqladmin_v1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.Integer;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Insights configuration. This specifies when Cloud SQL Insights feature is enabled and optional configuration.
 * 
 */
public final class InsightsConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final InsightsConfigArgs Empty = new InsightsConfigArgs();

    /**
     * Whether Query Insights feature is enabled.
     * 
     */
    @Import(name="queryInsightsEnabled")
      private final @Nullable Output<Boolean> queryInsightsEnabled;

    public Output<Boolean> queryInsightsEnabled() {
        return this.queryInsightsEnabled == null ? Codegen.empty() : this.queryInsightsEnabled;
    }

    /**
     * Number of query execution plans captured by Insights per minute for all queries combined. Default is 5.
     * 
     */
    @Import(name="queryPlansPerMinute")
      private final @Nullable Output<Integer> queryPlansPerMinute;

    public Output<Integer> queryPlansPerMinute() {
        return this.queryPlansPerMinute == null ? Codegen.empty() : this.queryPlansPerMinute;
    }

    /**
     * Maximum query length stored in bytes. Default value: 1024 bytes. Range: 256-4500 bytes. Query length more than this field value will be truncated to this value. When unset, query length will be the default value. Changing query length will restart the database.
     * 
     */
    @Import(name="queryStringLength")
      private final @Nullable Output<Integer> queryStringLength;

    public Output<Integer> queryStringLength() {
        return this.queryStringLength == null ? Codegen.empty() : this.queryStringLength;
    }

    /**
     * Whether Query Insights will record application tags from query when enabled.
     * 
     */
    @Import(name="recordApplicationTags")
      private final @Nullable Output<Boolean> recordApplicationTags;

    public Output<Boolean> recordApplicationTags() {
        return this.recordApplicationTags == null ? Codegen.empty() : this.recordApplicationTags;
    }

    /**
     * Whether Query Insights will record client address when enabled.
     * 
     */
    @Import(name="recordClientAddress")
      private final @Nullable Output<Boolean> recordClientAddress;

    public Output<Boolean> recordClientAddress() {
        return this.recordClientAddress == null ? Codegen.empty() : this.recordClientAddress;
    }

    public InsightsConfigArgs(
        @Nullable Output<Boolean> queryInsightsEnabled,
        @Nullable Output<Integer> queryPlansPerMinute,
        @Nullable Output<Integer> queryStringLength,
        @Nullable Output<Boolean> recordApplicationTags,
        @Nullable Output<Boolean> recordClientAddress) {
        this.queryInsightsEnabled = queryInsightsEnabled;
        this.queryPlansPerMinute = queryPlansPerMinute;
        this.queryStringLength = queryStringLength;
        this.recordApplicationTags = recordApplicationTags;
        this.recordClientAddress = recordClientAddress;
    }

    private InsightsConfigArgs() {
        this.queryInsightsEnabled = Codegen.empty();
        this.queryPlansPerMinute = Codegen.empty();
        this.queryStringLength = Codegen.empty();
        this.recordApplicationTags = Codegen.empty();
        this.recordClientAddress = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(InsightsConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<Boolean> queryInsightsEnabled;
        private @Nullable Output<Integer> queryPlansPerMinute;
        private @Nullable Output<Integer> queryStringLength;
        private @Nullable Output<Boolean> recordApplicationTags;
        private @Nullable Output<Boolean> recordClientAddress;

        public Builder() {
    	      // Empty
        }

        public Builder(InsightsConfigArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.queryInsightsEnabled = defaults.queryInsightsEnabled;
    	      this.queryPlansPerMinute = defaults.queryPlansPerMinute;
    	      this.queryStringLength = defaults.queryStringLength;
    	      this.recordApplicationTags = defaults.recordApplicationTags;
    	      this.recordClientAddress = defaults.recordClientAddress;
        }

        public Builder queryInsightsEnabled(@Nullable Output<Boolean> queryInsightsEnabled) {
            this.queryInsightsEnabled = queryInsightsEnabled;
            return this;
        }
        public Builder queryInsightsEnabled(@Nullable Boolean queryInsightsEnabled) {
            this.queryInsightsEnabled = Codegen.ofNullable(queryInsightsEnabled);
            return this;
        }
        public Builder queryPlansPerMinute(@Nullable Output<Integer> queryPlansPerMinute) {
            this.queryPlansPerMinute = queryPlansPerMinute;
            return this;
        }
        public Builder queryPlansPerMinute(@Nullable Integer queryPlansPerMinute) {
            this.queryPlansPerMinute = Codegen.ofNullable(queryPlansPerMinute);
            return this;
        }
        public Builder queryStringLength(@Nullable Output<Integer> queryStringLength) {
            this.queryStringLength = queryStringLength;
            return this;
        }
        public Builder queryStringLength(@Nullable Integer queryStringLength) {
            this.queryStringLength = Codegen.ofNullable(queryStringLength);
            return this;
        }
        public Builder recordApplicationTags(@Nullable Output<Boolean> recordApplicationTags) {
            this.recordApplicationTags = recordApplicationTags;
            return this;
        }
        public Builder recordApplicationTags(@Nullable Boolean recordApplicationTags) {
            this.recordApplicationTags = Codegen.ofNullable(recordApplicationTags);
            return this;
        }
        public Builder recordClientAddress(@Nullable Output<Boolean> recordClientAddress) {
            this.recordClientAddress = recordClientAddress;
            return this;
        }
        public Builder recordClientAddress(@Nullable Boolean recordClientAddress) {
            this.recordClientAddress = Codegen.ofNullable(recordClientAddress);
            return this;
        }        public InsightsConfigArgs build() {
            return new InsightsConfigArgs(queryInsightsEnabled, queryPlansPerMinute, queryStringLength, recordApplicationTags, recordClientAddress);
        }
    }
}
