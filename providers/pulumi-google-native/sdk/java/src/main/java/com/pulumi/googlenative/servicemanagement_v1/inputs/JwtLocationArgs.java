// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.servicemanagement_v1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Specifies a location to extract JWT from an API request.
 * 
 */
public final class JwtLocationArgs extends com.pulumi.resources.ResourceArgs {

    public static final JwtLocationArgs Empty = new JwtLocationArgs();

    /**
     * Specifies HTTP header name to extract JWT token.
     * 
     */
    @Import(name="header")
    private @Nullable Output<String> header;

    public Optional<Output<String>> header() {
        return Optional.ofNullable(this.header);
    }

    /**
     * Specifies URL query parameter name to extract JWT token.
     * 
     */
    @Import(name="query")
    private @Nullable Output<String> query;

    public Optional<Output<String>> query() {
        return Optional.ofNullable(this.query);
    }

    /**
     * The value prefix. The value format is &#34;value_prefix{token}&#34; Only applies to &#34;in&#34; header type. Must be empty for &#34;in&#34; query type. If not empty, the header value has to match (case sensitive) this prefix. If not matched, JWT will not be extracted. If matched, JWT will be extracted after the prefix is removed. For example, for &#34;Authorization: Bearer {JWT}&#34;, value_prefix=&#34;Bearer &#34; with a space at the end.
     * 
     */
    @Import(name="valuePrefix")
    private @Nullable Output<String> valuePrefix;

    public Optional<Output<String>> valuePrefix() {
        return Optional.ofNullable(this.valuePrefix);
    }

    private JwtLocationArgs() {}

    private JwtLocationArgs(JwtLocationArgs $) {
        this.header = $.header;
        this.query = $.query;
        this.valuePrefix = $.valuePrefix;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(JwtLocationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private JwtLocationArgs $;

        public Builder() {
            $ = new JwtLocationArgs();
        }

        public Builder(JwtLocationArgs defaults) {
            $ = new JwtLocationArgs(Objects.requireNonNull(defaults));
        }

        public Builder header(@Nullable Output<String> header) {
            $.header = header;
            return this;
        }

        public Builder header(String header) {
            return header(Output.of(header));
        }

        public Builder query(@Nullable Output<String> query) {
            $.query = query;
            return this;
        }

        public Builder query(String query) {
            return query(Output.of(query));
        }

        public Builder valuePrefix(@Nullable Output<String> valuePrefix) {
            $.valuePrefix = valuePrefix;
            return this;
        }

        public Builder valuePrefix(String valuePrefix) {
            return valuePrefix(Output.of(valuePrefix));
        }

        public JwtLocationArgs build() {
            return $;
        }
    }

}
