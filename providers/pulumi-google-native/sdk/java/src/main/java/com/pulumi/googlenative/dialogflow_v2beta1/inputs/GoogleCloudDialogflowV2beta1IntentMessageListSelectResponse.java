// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.dialogflow_v2beta1.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.dialogflow_v2beta1.inputs.GoogleCloudDialogflowV2beta1IntentMessageListSelectItemResponse;
import java.lang.String;
import java.util.List;
import java.util.Objects;


/**
 * The card for presenting a list of options to select from.
 * 
 */
public final class GoogleCloudDialogflowV2beta1IntentMessageListSelectResponse extends com.pulumi.resources.InvokeArgs {

    public static final GoogleCloudDialogflowV2beta1IntentMessageListSelectResponse Empty = new GoogleCloudDialogflowV2beta1IntentMessageListSelectResponse();

    /**
     * List items.
     * 
     */
    @Import(name="items", required=true)
    private List<GoogleCloudDialogflowV2beta1IntentMessageListSelectItemResponse> items;

    /**
     * @return List items.
     * 
     */
    public List<GoogleCloudDialogflowV2beta1IntentMessageListSelectItemResponse> items() {
        return this.items;
    }

    /**
     * Optional. Subtitle of the list.
     * 
     */
    @Import(name="subtitle", required=true)
    private String subtitle;

    /**
     * @return Optional. Subtitle of the list.
     * 
     */
    public String subtitle() {
        return this.subtitle;
    }

    /**
     * Optional. The overall title of the list.
     * 
     */
    @Import(name="title", required=true)
    private String title;

    /**
     * @return Optional. The overall title of the list.
     * 
     */
    public String title() {
        return this.title;
    }

    private GoogleCloudDialogflowV2beta1IntentMessageListSelectResponse() {}

    private GoogleCloudDialogflowV2beta1IntentMessageListSelectResponse(GoogleCloudDialogflowV2beta1IntentMessageListSelectResponse $) {
        this.items = $.items;
        this.subtitle = $.subtitle;
        this.title = $.title;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GoogleCloudDialogflowV2beta1IntentMessageListSelectResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GoogleCloudDialogflowV2beta1IntentMessageListSelectResponse $;

        public Builder() {
            $ = new GoogleCloudDialogflowV2beta1IntentMessageListSelectResponse();
        }

        public Builder(GoogleCloudDialogflowV2beta1IntentMessageListSelectResponse defaults) {
            $ = new GoogleCloudDialogflowV2beta1IntentMessageListSelectResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param items List items.
         * 
         * @return builder
         * 
         */
        public Builder items(List<GoogleCloudDialogflowV2beta1IntentMessageListSelectItemResponse> items) {
            $.items = items;
            return this;
        }

        /**
         * @param items List items.
         * 
         * @return builder
         * 
         */
        public Builder items(GoogleCloudDialogflowV2beta1IntentMessageListSelectItemResponse... items) {
            return items(List.of(items));
        }

        /**
         * @param subtitle Optional. Subtitle of the list.
         * 
         * @return builder
         * 
         */
        public Builder subtitle(String subtitle) {
            $.subtitle = subtitle;
            return this;
        }

        /**
         * @param title Optional. The overall title of the list.
         * 
         * @return builder
         * 
         */
        public Builder title(String title) {
            $.title = title;
            return this;
        }

        public GoogleCloudDialogflowV2beta1IntentMessageListSelectResponse build() {
            $.items = Objects.requireNonNull($.items, "expected parameter 'items' to be non-null");
            $.subtitle = Objects.requireNonNull($.subtitle, "expected parameter 'subtitle' to be non-null");
            $.title = Objects.requireNonNull($.title, "expected parameter 'title' to be non-null");
            return $;
        }
    }

}
