// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.iam.v1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Represents an OpenId Connect 1.0 identity provider.
 * 
 */
public final class OidcArgs extends com.pulumi.resources.ResourceArgs {

    public static final OidcArgs Empty = new OidcArgs();

    /**
     * Acceptable values for the `aud` field (audience) in the OIDC token. Token exchange requests are rejected if the token audience does not match one of the configured values. Each audience may be at most 256 characters. A maximum of 10 audiences may be configured. If this list is empty, the OIDC token audience must be equal to the full canonical resource name of the WorkloadIdentityPoolProvider, with or without the HTTPS prefix. For example: ```//iam.googleapis.com/projects//locations//workloadIdentityPools//providers/ https://iam.googleapis.com/projects//locations//workloadIdentityPools//providers/```
     * 
     */
    @Import(name="allowedAudiences")
    private @Nullable Output<List<String>> allowedAudiences;

    /**
     * @return Acceptable values for the `aud` field (audience) in the OIDC token. Token exchange requests are rejected if the token audience does not match one of the configured values. Each audience may be at most 256 characters. A maximum of 10 audiences may be configured. If this list is empty, the OIDC token audience must be equal to the full canonical resource name of the WorkloadIdentityPoolProvider, with or without the HTTPS prefix. For example: ```//iam.googleapis.com/projects//locations//workloadIdentityPools//providers/ https://iam.googleapis.com/projects//locations//workloadIdentityPools//providers/```
     * 
     */
    public Optional<Output<List<String>>> allowedAudiences() {
        return Optional.ofNullable(this.allowedAudiences);
    }

    /**
     * The OIDC issuer URL. Must be an HTTPS endpoint.
     * 
     */
    @Import(name="issuerUri", required=true)
    private Output<String> issuerUri;

    /**
     * @return The OIDC issuer URL. Must be an HTTPS endpoint.
     * 
     */
    public Output<String> issuerUri() {
        return this.issuerUri;
    }

    private OidcArgs() {}

    private OidcArgs(OidcArgs $) {
        this.allowedAudiences = $.allowedAudiences;
        this.issuerUri = $.issuerUri;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OidcArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OidcArgs $;

        public Builder() {
            $ = new OidcArgs();
        }

        public Builder(OidcArgs defaults) {
            $ = new OidcArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param allowedAudiences Acceptable values for the `aud` field (audience) in the OIDC token. Token exchange requests are rejected if the token audience does not match one of the configured values. Each audience may be at most 256 characters. A maximum of 10 audiences may be configured. If this list is empty, the OIDC token audience must be equal to the full canonical resource name of the WorkloadIdentityPoolProvider, with or without the HTTPS prefix. For example: ```//iam.googleapis.com/projects//locations//workloadIdentityPools//providers/ https://iam.googleapis.com/projects//locations//workloadIdentityPools//providers/```
         * 
         * @return builder
         * 
         */
        public Builder allowedAudiences(@Nullable Output<List<String>> allowedAudiences) {
            $.allowedAudiences = allowedAudiences;
            return this;
        }

        /**
         * @param allowedAudiences Acceptable values for the `aud` field (audience) in the OIDC token. Token exchange requests are rejected if the token audience does not match one of the configured values. Each audience may be at most 256 characters. A maximum of 10 audiences may be configured. If this list is empty, the OIDC token audience must be equal to the full canonical resource name of the WorkloadIdentityPoolProvider, with or without the HTTPS prefix. For example: ```//iam.googleapis.com/projects//locations//workloadIdentityPools//providers/ https://iam.googleapis.com/projects//locations//workloadIdentityPools//providers/```
         * 
         * @return builder
         * 
         */
        public Builder allowedAudiences(List<String> allowedAudiences) {
            return allowedAudiences(Output.of(allowedAudiences));
        }

        /**
         * @param allowedAudiences Acceptable values for the `aud` field (audience) in the OIDC token. Token exchange requests are rejected if the token audience does not match one of the configured values. Each audience may be at most 256 characters. A maximum of 10 audiences may be configured. If this list is empty, the OIDC token audience must be equal to the full canonical resource name of the WorkloadIdentityPoolProvider, with or without the HTTPS prefix. For example: ```//iam.googleapis.com/projects//locations//workloadIdentityPools//providers/ https://iam.googleapis.com/projects//locations//workloadIdentityPools//providers/```
         * 
         * @return builder
         * 
         */
        public Builder allowedAudiences(String... allowedAudiences) {
            return allowedAudiences(List.of(allowedAudiences));
        }

        /**
         * @param issuerUri The OIDC issuer URL. Must be an HTTPS endpoint.
         * 
         * @return builder
         * 
         */
        public Builder issuerUri(Output<String> issuerUri) {
            $.issuerUri = issuerUri;
            return this;
        }

        /**
         * @param issuerUri The OIDC issuer URL. Must be an HTTPS endpoint.
         * 
         * @return builder
         * 
         */
        public Builder issuerUri(String issuerUri) {
            return issuerUri(Output.of(issuerUri));
        }

        public OidcArgs build() {
            $.issuerUri = Objects.requireNonNull($.issuerUri, "expected parameter 'issuerUri' to be non-null");
            return $;
        }
    }

}
