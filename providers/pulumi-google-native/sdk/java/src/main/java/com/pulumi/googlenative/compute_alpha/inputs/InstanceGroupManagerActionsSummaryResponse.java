// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.compute_alpha.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.util.Objects;


public final class InstanceGroupManagerActionsSummaryResponse extends com.pulumi.resources.InvokeArgs {

    public static final InstanceGroupManagerActionsSummaryResponse Empty = new InstanceGroupManagerActionsSummaryResponse();

    /**
     * The total number of instances in the managed instance group that are scheduled to be abandoned. Abandoning an instance removes it from the managed instance group without deleting it.
     * 
     */
    @Import(name="abandoning", required=true)
    private Integer abandoning;

    public Integer abandoning() {
        return this.abandoning;
    }

    /**
     * The number of instances in the managed instance group that are scheduled to be created or are currently being created. If the group fails to create any of these instances, it tries again until it creates the instance successfully. If you have disabled creation retries, this field will not be populated; instead, the creatingWithoutRetries field will be populated.
     * 
     */
    @Import(name="creating", required=true)
    private Integer creating;

    public Integer creating() {
        return this.creating;
    }

    /**
     * The number of instances that the managed instance group will attempt to create. The group attempts to create each instance only once. If the group fails to create any of these instances, it decreases the group&#39;s targetSize value accordingly.
     * 
     */
    @Import(name="creatingWithoutRetries", required=true)
    private Integer creatingWithoutRetries;

    public Integer creatingWithoutRetries() {
        return this.creatingWithoutRetries;
    }

    /**
     * The number of instances in the managed instance group that are scheduled to be deleted or are currently being deleted.
     * 
     */
    @Import(name="deleting", required=true)
    private Integer deleting;

    public Integer deleting() {
        return this.deleting;
    }

    /**
     * The number of instances in the managed instance group that are running and have no scheduled actions.
     * 
     */
    @Import(name="none", required=true)
    private Integer none;

    public Integer none() {
        return this.none;
    }

    /**
     * The number of instances in the managed instance group that are scheduled to be recreated or are currently being being recreated. Recreating an instance deletes the existing root persistent disk and creates a new disk from the image that is defined in the instance template.
     * 
     */
    @Import(name="recreating", required=true)
    private Integer recreating;

    public Integer recreating() {
        return this.recreating;
    }

    /**
     * The number of instances in the managed instance group that are being reconfigured with properties that do not require a restart or a recreate action. For example, setting or removing target pools for the instance.
     * 
     */
    @Import(name="refreshing", required=true)
    private Integer refreshing;

    public Integer refreshing() {
        return this.refreshing;
    }

    /**
     * The number of instances in the managed instance group that are scheduled to be restarted or are currently being restarted.
     * 
     */
    @Import(name="restarting", required=true)
    private Integer restarting;

    public Integer restarting() {
        return this.restarting;
    }

    /**
     * The number of instances in the managed instance group that are scheduled to be resumed or are currently being resumed.
     * 
     */
    @Import(name="resuming", required=true)
    private Integer resuming;

    public Integer resuming() {
        return this.resuming;
    }

    /**
     * The number of instances in the managed instance group that are scheduled to be started or are currently being started.
     * 
     */
    @Import(name="starting", required=true)
    private Integer starting;

    public Integer starting() {
        return this.starting;
    }

    /**
     * The number of instances in the managed instance group that are scheduled to be stopped or are currently being stopped.
     * 
     */
    @Import(name="stopping", required=true)
    private Integer stopping;

    public Integer stopping() {
        return this.stopping;
    }

    /**
     * The number of instances in the managed instance group that are scheduled to be suspended or are currently being suspended.
     * 
     */
    @Import(name="suspending", required=true)
    private Integer suspending;

    public Integer suspending() {
        return this.suspending;
    }

    /**
     * The number of instances in the managed instance group that are being verified. See the managedInstances[].currentAction property in the listManagedInstances method documentation.
     * 
     */
    @Import(name="verifying", required=true)
    private Integer verifying;

    public Integer verifying() {
        return this.verifying;
    }

    private InstanceGroupManagerActionsSummaryResponse() {}

    private InstanceGroupManagerActionsSummaryResponse(InstanceGroupManagerActionsSummaryResponse $) {
        this.abandoning = $.abandoning;
        this.creating = $.creating;
        this.creatingWithoutRetries = $.creatingWithoutRetries;
        this.deleting = $.deleting;
        this.none = $.none;
        this.recreating = $.recreating;
        this.refreshing = $.refreshing;
        this.restarting = $.restarting;
        this.resuming = $.resuming;
        this.starting = $.starting;
        this.stopping = $.stopping;
        this.suspending = $.suspending;
        this.verifying = $.verifying;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InstanceGroupManagerActionsSummaryResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InstanceGroupManagerActionsSummaryResponse $;

        public Builder() {
            $ = new InstanceGroupManagerActionsSummaryResponse();
        }

        public Builder(InstanceGroupManagerActionsSummaryResponse defaults) {
            $ = new InstanceGroupManagerActionsSummaryResponse(Objects.requireNonNull(defaults));
        }

        public Builder abandoning(Integer abandoning) {
            $.abandoning = abandoning;
            return this;
        }

        public Builder creating(Integer creating) {
            $.creating = creating;
            return this;
        }

        public Builder creatingWithoutRetries(Integer creatingWithoutRetries) {
            $.creatingWithoutRetries = creatingWithoutRetries;
            return this;
        }

        public Builder deleting(Integer deleting) {
            $.deleting = deleting;
            return this;
        }

        public Builder none(Integer none) {
            $.none = none;
            return this;
        }

        public Builder recreating(Integer recreating) {
            $.recreating = recreating;
            return this;
        }

        public Builder refreshing(Integer refreshing) {
            $.refreshing = refreshing;
            return this;
        }

        public Builder restarting(Integer restarting) {
            $.restarting = restarting;
            return this;
        }

        public Builder resuming(Integer resuming) {
            $.resuming = resuming;
            return this;
        }

        public Builder starting(Integer starting) {
            $.starting = starting;
            return this;
        }

        public Builder stopping(Integer stopping) {
            $.stopping = stopping;
            return this;
        }

        public Builder suspending(Integer suspending) {
            $.suspending = suspending;
            return this;
        }

        public Builder verifying(Integer verifying) {
            $.verifying = verifying;
            return this;
        }

        public InstanceGroupManagerActionsSummaryResponse build() {
            $.abandoning = Objects.requireNonNull($.abandoning, "expected parameter 'abandoning' to be non-null");
            $.creating = Objects.requireNonNull($.creating, "expected parameter 'creating' to be non-null");
            $.creatingWithoutRetries = Objects.requireNonNull($.creatingWithoutRetries, "expected parameter 'creatingWithoutRetries' to be non-null");
            $.deleting = Objects.requireNonNull($.deleting, "expected parameter 'deleting' to be non-null");
            $.none = Objects.requireNonNull($.none, "expected parameter 'none' to be non-null");
            $.recreating = Objects.requireNonNull($.recreating, "expected parameter 'recreating' to be non-null");
            $.refreshing = Objects.requireNonNull($.refreshing, "expected parameter 'refreshing' to be non-null");
            $.restarting = Objects.requireNonNull($.restarting, "expected parameter 'restarting' to be non-null");
            $.resuming = Objects.requireNonNull($.resuming, "expected parameter 'resuming' to be non-null");
            $.starting = Objects.requireNonNull($.starting, "expected parameter 'starting' to be non-null");
            $.stopping = Objects.requireNonNull($.stopping, "expected parameter 'stopping' to be non-null");
            $.suspending = Objects.requireNonNull($.suspending, "expected parameter 'suspending' to be non-null");
            $.verifying = Objects.requireNonNull($.verifying, "expected parameter 'verifying' to be non-null");
            return $;
        }
    }

}
