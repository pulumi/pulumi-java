// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.dlp.v2.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetDlpJobArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetDlpJobArgs Empty = new GetDlpJobArgs();

    @Import(name="dlpJobId", required=true)
    private Output<String> dlpJobId;

    public Output<String> dlpJobId() {
        return this.dlpJobId;
    }

    @Import(name="location", required=true)
    private Output<String> location;

    public Output<String> location() {
        return this.location;
    }

    @Import(name="project")
    private @Nullable Output<String> project;

    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    private GetDlpJobArgs() {}

    private GetDlpJobArgs(GetDlpJobArgs $) {
        this.dlpJobId = $.dlpJobId;
        this.location = $.location;
        this.project = $.project;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetDlpJobArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetDlpJobArgs $;

        public Builder() {
            $ = new GetDlpJobArgs();
        }

        public Builder(GetDlpJobArgs defaults) {
            $ = new GetDlpJobArgs(Objects.requireNonNull(defaults));
        }

        public Builder dlpJobId(Output<String> dlpJobId) {
            $.dlpJobId = dlpJobId;
            return this;
        }

        public Builder dlpJobId(String dlpJobId) {
            return dlpJobId(Output.of(dlpJobId));
        }

        public Builder location(Output<String> location) {
            $.location = location;
            return this;
        }

        public Builder location(String location) {
            return location(Output.of(location));
        }

        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        public Builder project(String project) {
            return project(Output.of(project));
        }

        public GetDlpJobArgs build() {
            $.dlpJobId = Objects.requireNonNull($.dlpJobId, "expected parameter 'dlpJobId' to be non-null");
            $.location = Objects.requireNonNull($.location, "expected parameter 'location' to be non-null");
            return $;
        }
    }

}
