// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.osconfig.v1alpha.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.osconfig.v1alpha.inputs.OSPolicyResourceFileArgs;
import java.lang.Boolean;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * A deb package file. dpkg packages only support INSTALLED state.
 * 
 */
public final class OSPolicyResourcePackageResourceDebArgs extends com.pulumi.resources.ResourceArgs {

    public static final OSPolicyResourcePackageResourceDebArgs Empty = new OSPolicyResourcePackageResourceDebArgs();

    /**
     * Whether dependencies should also be installed. - install when false: `dpkg -i package` - install when true: `apt-get update &amp;&amp; apt-get -y install package.deb`
     * 
     */
    @Import(name="pullDeps")
    private @Nullable Output<Boolean> pullDeps;

    /**
     * @return Whether dependencies should also be installed. - install when false: `dpkg -i package` - install when true: `apt-get update &amp;&amp; apt-get -y install package.deb`
     * 
     */
    public Optional<Output<Boolean>> pullDeps() {
        return Optional.ofNullable(this.pullDeps);
    }

    /**
     * A deb package.
     * 
     */
    @Import(name="source", required=true)
    private Output<OSPolicyResourceFileArgs> source;

    /**
     * @return A deb package.
     * 
     */
    public Output<OSPolicyResourceFileArgs> source() {
        return this.source;
    }

    private OSPolicyResourcePackageResourceDebArgs() {}

    private OSPolicyResourcePackageResourceDebArgs(OSPolicyResourcePackageResourceDebArgs $) {
        this.pullDeps = $.pullDeps;
        this.source = $.source;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OSPolicyResourcePackageResourceDebArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OSPolicyResourcePackageResourceDebArgs $;

        public Builder() {
            $ = new OSPolicyResourcePackageResourceDebArgs();
        }

        public Builder(OSPolicyResourcePackageResourceDebArgs defaults) {
            $ = new OSPolicyResourcePackageResourceDebArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param pullDeps Whether dependencies should also be installed. - install when false: `dpkg -i package` - install when true: `apt-get update &amp;&amp; apt-get -y install package.deb`
         * 
         * @return builder
         * 
         */
        public Builder pullDeps(@Nullable Output<Boolean> pullDeps) {
            $.pullDeps = pullDeps;
            return this;
        }

        /**
         * @param pullDeps Whether dependencies should also be installed. - install when false: `dpkg -i package` - install when true: `apt-get update &amp;&amp; apt-get -y install package.deb`
         * 
         * @return builder
         * 
         */
        public Builder pullDeps(Boolean pullDeps) {
            return pullDeps(Output.of(pullDeps));
        }

        /**
         * @param source A deb package.
         * 
         * @return builder
         * 
         */
        public Builder source(Output<OSPolicyResourceFileArgs> source) {
            $.source = source;
            return this;
        }

        /**
         * @param source A deb package.
         * 
         * @return builder
         * 
         */
        public Builder source(OSPolicyResourceFileArgs source) {
            return source(Output.of(source));
        }

        public OSPolicyResourcePackageResourceDebArgs build() {
            $.source = Objects.requireNonNull($.source, "expected parameter 'source' to be non-null");
            return $;
        }
    }

}
