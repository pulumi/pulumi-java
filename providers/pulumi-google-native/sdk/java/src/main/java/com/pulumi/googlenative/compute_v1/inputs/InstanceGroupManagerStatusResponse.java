// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.compute_v1.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.compute_v1.inputs.InstanceGroupManagerStatusStatefulResponse;
import com.pulumi.googlenative.compute_v1.inputs.InstanceGroupManagerStatusVersionTargetResponse;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;


public final class InstanceGroupManagerStatusResponse extends com.pulumi.resources.InvokeArgs {

    public static final InstanceGroupManagerStatusResponse Empty = new InstanceGroupManagerStatusResponse();

    /**
     * The URL of the Autoscaler that targets this instance group manager.
     * 
     */
    @Import(name="autoscaler", required=true)
    private String autoscaler;

    /**
     * @return The URL of the Autoscaler that targets this instance group manager.
     * 
     */
    public String autoscaler() {
        return this.autoscaler;
    }

    /**
     * A bit indicating whether the managed instance group is in a stable state. A stable state means that: none of the instances in the managed instance group is currently undergoing any type of change (for example, creation, restart, or deletion); no future changes are scheduled for instances in the managed instance group; and the managed instance group itself is not being modified.
     * 
     */
    @Import(name="isStable", required=true)
    private Boolean isStable;

    /**
     * @return A bit indicating whether the managed instance group is in a stable state. A stable state means that: none of the instances in the managed instance group is currently undergoing any type of change (for example, creation, restart, or deletion); no future changes are scheduled for instances in the managed instance group; and the managed instance group itself is not being modified.
     * 
     */
    public Boolean isStable() {
        return this.isStable;
    }

    /**
     * Stateful status of the given Instance Group Manager.
     * 
     */
    @Import(name="stateful", required=true)
    private InstanceGroupManagerStatusStatefulResponse stateful;

    /**
     * @return Stateful status of the given Instance Group Manager.
     * 
     */
    public InstanceGroupManagerStatusStatefulResponse stateful() {
        return this.stateful;
    }

    /**
     * A status of consistency of Instances&#39; versions with their target version specified by version field on Instance Group Manager.
     * 
     */
    @Import(name="versionTarget", required=true)
    private InstanceGroupManagerStatusVersionTargetResponse versionTarget;

    /**
     * @return A status of consistency of Instances&#39; versions with their target version specified by version field on Instance Group Manager.
     * 
     */
    public InstanceGroupManagerStatusVersionTargetResponse versionTarget() {
        return this.versionTarget;
    }

    private InstanceGroupManagerStatusResponse() {}

    private InstanceGroupManagerStatusResponse(InstanceGroupManagerStatusResponse $) {
        this.autoscaler = $.autoscaler;
        this.isStable = $.isStable;
        this.stateful = $.stateful;
        this.versionTarget = $.versionTarget;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InstanceGroupManagerStatusResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InstanceGroupManagerStatusResponse $;

        public Builder() {
            $ = new InstanceGroupManagerStatusResponse();
        }

        public Builder(InstanceGroupManagerStatusResponse defaults) {
            $ = new InstanceGroupManagerStatusResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param autoscaler The URL of the Autoscaler that targets this instance group manager.
         * 
         * @return builder
         * 
         */
        public Builder autoscaler(String autoscaler) {
            $.autoscaler = autoscaler;
            return this;
        }

        /**
         * @param isStable A bit indicating whether the managed instance group is in a stable state. A stable state means that: none of the instances in the managed instance group is currently undergoing any type of change (for example, creation, restart, or deletion); no future changes are scheduled for instances in the managed instance group; and the managed instance group itself is not being modified.
         * 
         * @return builder
         * 
         */
        public Builder isStable(Boolean isStable) {
            $.isStable = isStable;
            return this;
        }

        /**
         * @param stateful Stateful status of the given Instance Group Manager.
         * 
         * @return builder
         * 
         */
        public Builder stateful(InstanceGroupManagerStatusStatefulResponse stateful) {
            $.stateful = stateful;
            return this;
        }

        /**
         * @param versionTarget A status of consistency of Instances&#39; versions with their target version specified by version field on Instance Group Manager.
         * 
         * @return builder
         * 
         */
        public Builder versionTarget(InstanceGroupManagerStatusVersionTargetResponse versionTarget) {
            $.versionTarget = versionTarget;
            return this;
        }

        public InstanceGroupManagerStatusResponse build() {
            $.autoscaler = Objects.requireNonNull($.autoscaler, "expected parameter 'autoscaler' to be non-null");
            $.isStable = Objects.requireNonNull($.isStable, "expected parameter 'isStable' to be non-null");
            $.stateful = Objects.requireNonNull($.stateful, "expected parameter 'stateful' to be non-null");
            $.versionTarget = Objects.requireNonNull($.versionTarget, "expected parameter 'versionTarget' to be non-null");
            return $;
        }
    }

}
