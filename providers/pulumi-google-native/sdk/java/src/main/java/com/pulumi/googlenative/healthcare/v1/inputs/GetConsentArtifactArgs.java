// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.healthcare.v1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetConsentArtifactArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetConsentArtifactArgs Empty = new GetConsentArtifactArgs();

    @Import(name="consentArtifactId", required=true)
    private Output<String> consentArtifactId;

    public Output<String> consentArtifactId() {
        return this.consentArtifactId;
    }

    @Import(name="consentStoreId", required=true)
    private Output<String> consentStoreId;

    public Output<String> consentStoreId() {
        return this.consentStoreId;
    }

    @Import(name="datasetId", required=true)
    private Output<String> datasetId;

    public Output<String> datasetId() {
        return this.datasetId;
    }

    @Import(name="location", required=true)
    private Output<String> location;

    public Output<String> location() {
        return this.location;
    }

    @Import(name="project")
    private @Nullable Output<String> project;

    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    private GetConsentArtifactArgs() {}

    private GetConsentArtifactArgs(GetConsentArtifactArgs $) {
        this.consentArtifactId = $.consentArtifactId;
        this.consentStoreId = $.consentStoreId;
        this.datasetId = $.datasetId;
        this.location = $.location;
        this.project = $.project;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetConsentArtifactArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetConsentArtifactArgs $;

        public Builder() {
            $ = new GetConsentArtifactArgs();
        }

        public Builder(GetConsentArtifactArgs defaults) {
            $ = new GetConsentArtifactArgs(Objects.requireNonNull(defaults));
        }

        public Builder consentArtifactId(Output<String> consentArtifactId) {
            $.consentArtifactId = consentArtifactId;
            return this;
        }

        public Builder consentArtifactId(String consentArtifactId) {
            return consentArtifactId(Output.of(consentArtifactId));
        }

        public Builder consentStoreId(Output<String> consentStoreId) {
            $.consentStoreId = consentStoreId;
            return this;
        }

        public Builder consentStoreId(String consentStoreId) {
            return consentStoreId(Output.of(consentStoreId));
        }

        public Builder datasetId(Output<String> datasetId) {
            $.datasetId = datasetId;
            return this;
        }

        public Builder datasetId(String datasetId) {
            return datasetId(Output.of(datasetId));
        }

        public Builder location(Output<String> location) {
            $.location = location;
            return this;
        }

        public Builder location(String location) {
            return location(Output.of(location));
        }

        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        public Builder project(String project) {
            return project(Output.of(project));
        }

        public GetConsentArtifactArgs build() {
            $.consentArtifactId = Objects.requireNonNull($.consentArtifactId, "expected parameter 'consentArtifactId' to be non-null");
            $.consentStoreId = Objects.requireNonNull($.consentStoreId, "expected parameter 'consentStoreId' to be non-null");
            $.datasetId = Objects.requireNonNull($.datasetId, "expected parameter 'datasetId' to be non-null");
            $.location = Objects.requireNonNull($.location, "expected parameter 'location' to be non-null");
            return $;
        }
    }

}
