// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.beyondcorp.v1alpha.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * The setting used to configure ClientGateways. It is adding routes to the client&#39;s routing table after the connection is established.
 * 
 */
public final class DestinationRouteArgs extends com.pulumi.resources.ResourceArgs {

    public static final DestinationRouteArgs Empty = new DestinationRouteArgs();

    /**
     * The network address of the subnet for which the packet is routed to the ClientGateway.
     * 
     */
    @Import(name="address", required=true)
    private Output<String> address;

    /**
     * @return The network address of the subnet for which the packet is routed to the ClientGateway.
     * 
     */
    public Output<String> address() {
        return this.address;
    }

    /**
     * The network mask of the subnet for which the packet is routed to the ClientGateway.
     * 
     */
    @Import(name="netmask", required=true)
    private Output<String> netmask;

    /**
     * @return The network mask of the subnet for which the packet is routed to the ClientGateway.
     * 
     */
    public Output<String> netmask() {
        return this.netmask;
    }

    private DestinationRouteArgs() {}

    private DestinationRouteArgs(DestinationRouteArgs $) {
        this.address = $.address;
        this.netmask = $.netmask;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DestinationRouteArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DestinationRouteArgs $;

        public Builder() {
            $ = new DestinationRouteArgs();
        }

        public Builder(DestinationRouteArgs defaults) {
            $ = new DestinationRouteArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param address The network address of the subnet for which the packet is routed to the ClientGateway.
         * 
         * @return builder
         * 
         */
        public Builder address(Output<String> address) {
            $.address = address;
            return this;
        }

        /**
         * @param address The network address of the subnet for which the packet is routed to the ClientGateway.
         * 
         * @return builder
         * 
         */
        public Builder address(String address) {
            return address(Output.of(address));
        }

        /**
         * @param netmask The network mask of the subnet for which the packet is routed to the ClientGateway.
         * 
         * @return builder
         * 
         */
        public Builder netmask(Output<String> netmask) {
            $.netmask = netmask;
            return this;
        }

        /**
         * @param netmask The network mask of the subnet for which the packet is routed to the ClientGateway.
         * 
         * @return builder
         * 
         */
        public Builder netmask(String netmask) {
            return netmask(Output.of(netmask));
        }

        public DestinationRouteArgs build() {
            $.address = Objects.requireNonNull($.address, "expected parameter 'address' to be non-null");
            $.netmask = Objects.requireNonNull($.netmask, "expected parameter 'netmask' to be non-null");
            return $;
        }
    }

}
