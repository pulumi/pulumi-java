// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.bigquery_v2.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;


public final class IterationResultResponse extends com.pulumi.resources.InvokeArgs {

    public static final IterationResultResponse Empty = new IterationResultResponse();

    /**
     * Time taken to run the iteration in milliseconds.
     * 
     */
    @Import(name="durationMs", required=true)
    private String durationMs;

    public String durationMs() {
        return this.durationMs;
    }

    /**
     * Loss computed on the eval data at the end of iteration.
     * 
     */
    @Import(name="evalLoss", required=true)
    private Double evalLoss;

    public Double evalLoss() {
        return this.evalLoss;
    }

    /**
     * Index of the iteration, 0 based.
     * 
     */
    @Import(name="index", required=true)
    private Integer index;

    public Integer index() {
        return this.index;
    }

    /**
     * Learn rate used for this iteration.
     * 
     */
    @Import(name="learnRate", required=true)
    private Double learnRate;

    public Double learnRate() {
        return this.learnRate;
    }

    /**
     * Loss computed on the training data at the end of iteration.
     * 
     */
    @Import(name="trainingLoss", required=true)
    private Double trainingLoss;

    public Double trainingLoss() {
        return this.trainingLoss;
    }

    private IterationResultResponse() {}

    private IterationResultResponse(IterationResultResponse $) {
        this.durationMs = $.durationMs;
        this.evalLoss = $.evalLoss;
        this.index = $.index;
        this.learnRate = $.learnRate;
        this.trainingLoss = $.trainingLoss;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(IterationResultResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private IterationResultResponse $;

        public Builder() {
            $ = new IterationResultResponse();
        }

        public Builder(IterationResultResponse defaults) {
            $ = new IterationResultResponse(Objects.requireNonNull(defaults));
        }

        public Builder durationMs(String durationMs) {
            $.durationMs = durationMs;
            return this;
        }

        public Builder evalLoss(Double evalLoss) {
            $.evalLoss = evalLoss;
            return this;
        }

        public Builder index(Integer index) {
            $.index = index;
            return this;
        }

        public Builder learnRate(Double learnRate) {
            $.learnRate = learnRate;
            return this;
        }

        public Builder trainingLoss(Double trainingLoss) {
            $.trainingLoss = trainingLoss;
            return this;
        }

        public IterationResultResponse build() {
            $.durationMs = Objects.requireNonNull($.durationMs, "expected parameter 'durationMs' to be non-null");
            $.evalLoss = Objects.requireNonNull($.evalLoss, "expected parameter 'evalLoss' to be non-null");
            $.index = Objects.requireNonNull($.index, "expected parameter 'index' to be non-null");
            $.learnRate = Objects.requireNonNull($.learnRate, "expected parameter 'learnRate' to be non-null");
            $.trainingLoss = Objects.requireNonNull($.trainingLoss, "expected parameter 'trainingLoss' to be non-null");
            return $;
        }
    }

}
