// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.dlp_v2.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * Characters to skip when doing deidentification of a value. These will be left alone and skipped.
 * 
 */
public final class GooglePrivacyDlpV2CharsToIgnoreResponse extends com.pulumi.resources.InvokeArgs {

    public static final GooglePrivacyDlpV2CharsToIgnoreResponse Empty = new GooglePrivacyDlpV2CharsToIgnoreResponse();

    /**
     * Characters to not transform when masking.
     * 
     */
    @Import(name="charactersToSkip", required=true)
    private String charactersToSkip;

    public String charactersToSkip() {
        return this.charactersToSkip;
    }

    /**
     * Common characters to not transform when masking. Useful to avoid removing punctuation.
     * 
     */
    @Import(name="commonCharactersToIgnore", required=true)
    private String commonCharactersToIgnore;

    public String commonCharactersToIgnore() {
        return this.commonCharactersToIgnore;
    }

    private GooglePrivacyDlpV2CharsToIgnoreResponse() {}

    private GooglePrivacyDlpV2CharsToIgnoreResponse(GooglePrivacyDlpV2CharsToIgnoreResponse $) {
        this.charactersToSkip = $.charactersToSkip;
        this.commonCharactersToIgnore = $.commonCharactersToIgnore;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GooglePrivacyDlpV2CharsToIgnoreResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GooglePrivacyDlpV2CharsToIgnoreResponse $;

        public Builder() {
            $ = new GooglePrivacyDlpV2CharsToIgnoreResponse();
        }

        public Builder(GooglePrivacyDlpV2CharsToIgnoreResponse defaults) {
            $ = new GooglePrivacyDlpV2CharsToIgnoreResponse(Objects.requireNonNull(defaults));
        }

        public Builder charactersToSkip(String charactersToSkip) {
            $.charactersToSkip = charactersToSkip;
            return this;
        }

        public Builder commonCharactersToIgnore(String commonCharactersToIgnore) {
            $.commonCharactersToIgnore = commonCharactersToIgnore;
            return this;
        }

        public GooglePrivacyDlpV2CharsToIgnoreResponse build() {
            $.charactersToSkip = Objects.requireNonNull($.charactersToSkip, "expected parameter 'charactersToSkip' to be non-null");
            $.commonCharactersToIgnore = Objects.requireNonNull($.commonCharactersToIgnore, "expected parameter 'commonCharactersToIgnore' to be non-null");
            return $;
        }
    }

}
