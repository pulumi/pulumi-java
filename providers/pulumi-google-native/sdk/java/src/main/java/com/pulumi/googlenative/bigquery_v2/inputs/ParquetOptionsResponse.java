// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.bigquery_v2.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.util.Objects;


public final class ParquetOptionsResponse extends com.pulumi.resources.InvokeArgs {

    public static final ParquetOptionsResponse Empty = new ParquetOptionsResponse();

    /**
     * [Optional] Indicates whether to use schema inference specifically for Parquet LIST logical type.
     * 
     */
    @Import(name="enableListInference", required=true)
    private Boolean enableListInference;

    public Boolean enableListInference() {
        return this.enableListInference;
    }

    /**
     * [Optional] Indicates whether to infer Parquet ENUM logical type as STRING instead of BYTES by default.
     * 
     */
    @Import(name="enumAsString", required=true)
    private Boolean enumAsString;

    public Boolean enumAsString() {
        return this.enumAsString;
    }

    private ParquetOptionsResponse() {}

    private ParquetOptionsResponse(ParquetOptionsResponse $) {
        this.enableListInference = $.enableListInference;
        this.enumAsString = $.enumAsString;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ParquetOptionsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ParquetOptionsResponse $;

        public Builder() {
            $ = new ParquetOptionsResponse();
        }

        public Builder(ParquetOptionsResponse defaults) {
            $ = new ParquetOptionsResponse(Objects.requireNonNull(defaults));
        }

        public Builder enableListInference(Boolean enableListInference) {
            $.enableListInference = enableListInference;
            return this;
        }

        public Builder enumAsString(Boolean enumAsString) {
            $.enumAsString = enumAsString;
            return this;
        }

        public ParquetOptionsResponse build() {
            $.enableListInference = Objects.requireNonNull($.enableListInference, "expected parameter 'enableListInference' to be non-null");
            $.enumAsString = Objects.requireNonNull($.enumAsString, "expected parameter 'enumAsString' to be non-null");
            return $;
        }
    }

}
