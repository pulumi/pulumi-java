// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.dlp_v2.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.dlp_v2.inputs.GooglePrivacyDlpV2JobNotificationEmailsResponse;
import com.pulumi.googlenative.dlp_v2.inputs.GooglePrivacyDlpV2PublishFindingsToCloudDataCatalogResponse;
import com.pulumi.googlenative.dlp_v2.inputs.GooglePrivacyDlpV2PublishSummaryToCsccResponse;
import com.pulumi.googlenative.dlp_v2.inputs.GooglePrivacyDlpV2PublishToPubSubResponse;
import com.pulumi.googlenative.dlp_v2.inputs.GooglePrivacyDlpV2PublishToStackdriverResponse;
import com.pulumi.googlenative.dlp_v2.inputs.GooglePrivacyDlpV2SaveFindingsResponse;
import java.util.Objects;


/**
 * A task to execute on the completion of a job. See https://cloud.google.com/dlp/docs/concepts-actions to learn more.
 * 
 */
public final class GooglePrivacyDlpV2ActionResponse extends com.pulumi.resources.InvokeArgs {

    public static final GooglePrivacyDlpV2ActionResponse Empty = new GooglePrivacyDlpV2ActionResponse();

    /**
     * Enable email notification for project owners and editors on job&#39;s completion/failure.
     * 
     */
    @Import(name="jobNotificationEmails", required=true)
      private final GooglePrivacyDlpV2JobNotificationEmailsResponse jobNotificationEmails;

    public GooglePrivacyDlpV2JobNotificationEmailsResponse jobNotificationEmails() {
        return this.jobNotificationEmails;
    }

    /**
     * Publish a notification to a pubsub topic.
     * 
     */
    @Import(name="pubSub", required=true)
      private final GooglePrivacyDlpV2PublishToPubSubResponse pubSub;

    public GooglePrivacyDlpV2PublishToPubSubResponse pubSub() {
        return this.pubSub;
    }

    /**
     * Publish findings to Cloud Datahub.
     * 
     */
    @Import(name="publishFindingsToCloudDataCatalog", required=true)
      private final GooglePrivacyDlpV2PublishFindingsToCloudDataCatalogResponse publishFindingsToCloudDataCatalog;

    public GooglePrivacyDlpV2PublishFindingsToCloudDataCatalogResponse publishFindingsToCloudDataCatalog() {
        return this.publishFindingsToCloudDataCatalog;
    }

    /**
     * Publish summary to Cloud Security Command Center (Alpha).
     * 
     */
    @Import(name="publishSummaryToCscc", required=true)
      private final GooglePrivacyDlpV2PublishSummaryToCsccResponse publishSummaryToCscc;

    public GooglePrivacyDlpV2PublishSummaryToCsccResponse publishSummaryToCscc() {
        return this.publishSummaryToCscc;
    }

    /**
     * Enable Stackdriver metric dlp.googleapis.com/finding_count.
     * 
     */
    @Import(name="publishToStackdriver", required=true)
      private final GooglePrivacyDlpV2PublishToStackdriverResponse publishToStackdriver;

    public GooglePrivacyDlpV2PublishToStackdriverResponse publishToStackdriver() {
        return this.publishToStackdriver;
    }

    /**
     * Save resulting findings in a provided location.
     * 
     */
    @Import(name="saveFindings", required=true)
      private final GooglePrivacyDlpV2SaveFindingsResponse saveFindings;

    public GooglePrivacyDlpV2SaveFindingsResponse saveFindings() {
        return this.saveFindings;
    }

    public GooglePrivacyDlpV2ActionResponse(
        GooglePrivacyDlpV2JobNotificationEmailsResponse jobNotificationEmails,
        GooglePrivacyDlpV2PublishToPubSubResponse pubSub,
        GooglePrivacyDlpV2PublishFindingsToCloudDataCatalogResponse publishFindingsToCloudDataCatalog,
        GooglePrivacyDlpV2PublishSummaryToCsccResponse publishSummaryToCscc,
        GooglePrivacyDlpV2PublishToStackdriverResponse publishToStackdriver,
        GooglePrivacyDlpV2SaveFindingsResponse saveFindings) {
        this.jobNotificationEmails = Objects.requireNonNull(jobNotificationEmails, "expected parameter 'jobNotificationEmails' to be non-null");
        this.pubSub = Objects.requireNonNull(pubSub, "expected parameter 'pubSub' to be non-null");
        this.publishFindingsToCloudDataCatalog = Objects.requireNonNull(publishFindingsToCloudDataCatalog, "expected parameter 'publishFindingsToCloudDataCatalog' to be non-null");
        this.publishSummaryToCscc = Objects.requireNonNull(publishSummaryToCscc, "expected parameter 'publishSummaryToCscc' to be non-null");
        this.publishToStackdriver = Objects.requireNonNull(publishToStackdriver, "expected parameter 'publishToStackdriver' to be non-null");
        this.saveFindings = Objects.requireNonNull(saveFindings, "expected parameter 'saveFindings' to be non-null");
    }

    private GooglePrivacyDlpV2ActionResponse() {
        this.jobNotificationEmails = null;
        this.pubSub = null;
        this.publishFindingsToCloudDataCatalog = null;
        this.publishSummaryToCscc = null;
        this.publishToStackdriver = null;
        this.saveFindings = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GooglePrivacyDlpV2ActionResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GooglePrivacyDlpV2JobNotificationEmailsResponse jobNotificationEmails;
        private GooglePrivacyDlpV2PublishToPubSubResponse pubSub;
        private GooglePrivacyDlpV2PublishFindingsToCloudDataCatalogResponse publishFindingsToCloudDataCatalog;
        private GooglePrivacyDlpV2PublishSummaryToCsccResponse publishSummaryToCscc;
        private GooglePrivacyDlpV2PublishToStackdriverResponse publishToStackdriver;
        private GooglePrivacyDlpV2SaveFindingsResponse saveFindings;

        public Builder() {
    	      // Empty
        }

        public Builder(GooglePrivacyDlpV2ActionResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.jobNotificationEmails = defaults.jobNotificationEmails;
    	      this.pubSub = defaults.pubSub;
    	      this.publishFindingsToCloudDataCatalog = defaults.publishFindingsToCloudDataCatalog;
    	      this.publishSummaryToCscc = defaults.publishSummaryToCscc;
    	      this.publishToStackdriver = defaults.publishToStackdriver;
    	      this.saveFindings = defaults.saveFindings;
        }

        public Builder jobNotificationEmails(GooglePrivacyDlpV2JobNotificationEmailsResponse jobNotificationEmails) {
            this.jobNotificationEmails = Objects.requireNonNull(jobNotificationEmails);
            return this;
        }
        public Builder pubSub(GooglePrivacyDlpV2PublishToPubSubResponse pubSub) {
            this.pubSub = Objects.requireNonNull(pubSub);
            return this;
        }
        public Builder publishFindingsToCloudDataCatalog(GooglePrivacyDlpV2PublishFindingsToCloudDataCatalogResponse publishFindingsToCloudDataCatalog) {
            this.publishFindingsToCloudDataCatalog = Objects.requireNonNull(publishFindingsToCloudDataCatalog);
            return this;
        }
        public Builder publishSummaryToCscc(GooglePrivacyDlpV2PublishSummaryToCsccResponse publishSummaryToCscc) {
            this.publishSummaryToCscc = Objects.requireNonNull(publishSummaryToCscc);
            return this;
        }
        public Builder publishToStackdriver(GooglePrivacyDlpV2PublishToStackdriverResponse publishToStackdriver) {
            this.publishToStackdriver = Objects.requireNonNull(publishToStackdriver);
            return this;
        }
        public Builder saveFindings(GooglePrivacyDlpV2SaveFindingsResponse saveFindings) {
            this.saveFindings = Objects.requireNonNull(saveFindings);
            return this;
        }        public GooglePrivacyDlpV2ActionResponse build() {
            return new GooglePrivacyDlpV2ActionResponse(jobNotificationEmails, pubSub, publishFindingsToCloudDataCatalog, publishSummaryToCscc, publishToStackdriver, saveFindings);
        }
    }
}
