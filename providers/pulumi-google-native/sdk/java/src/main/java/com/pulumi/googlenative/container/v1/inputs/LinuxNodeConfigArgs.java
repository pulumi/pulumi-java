// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.container.v1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Parameters that can be configured on Linux nodes.
 * 
 */
public final class LinuxNodeConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final LinuxNodeConfigArgs Empty = new LinuxNodeConfigArgs();

    /**
     * The Linux kernel parameters to be applied to the nodes and all pods running on the nodes. The following parameters are supported. net.core.busy_poll net.core.busy_read net.core.netdev_max_backlog net.core.rmem_max net.core.wmem_default net.core.wmem_max net.core.optmem_max net.core.somaxconn net.ipv4.tcp_rmem net.ipv4.tcp_wmem net.ipv4.tcp_tw_reuse
     * 
     */
    @Import(name="sysctls")
    private @Nullable Output<Map<String,String>> sysctls;

    /**
     * @return The Linux kernel parameters to be applied to the nodes and all pods running on the nodes. The following parameters are supported. net.core.busy_poll net.core.busy_read net.core.netdev_max_backlog net.core.rmem_max net.core.wmem_default net.core.wmem_max net.core.optmem_max net.core.somaxconn net.ipv4.tcp_rmem net.ipv4.tcp_wmem net.ipv4.tcp_tw_reuse
     * 
     */
    public Optional<Output<Map<String,String>>> sysctls() {
        return Optional.ofNullable(this.sysctls);
    }

    private LinuxNodeConfigArgs() {}

    private LinuxNodeConfigArgs(LinuxNodeConfigArgs $) {
        this.sysctls = $.sysctls;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LinuxNodeConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LinuxNodeConfigArgs $;

        public Builder() {
            $ = new LinuxNodeConfigArgs();
        }

        public Builder(LinuxNodeConfigArgs defaults) {
            $ = new LinuxNodeConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param sysctls The Linux kernel parameters to be applied to the nodes and all pods running on the nodes. The following parameters are supported. net.core.busy_poll net.core.busy_read net.core.netdev_max_backlog net.core.rmem_max net.core.wmem_default net.core.wmem_max net.core.optmem_max net.core.somaxconn net.ipv4.tcp_rmem net.ipv4.tcp_wmem net.ipv4.tcp_tw_reuse
         * 
         * @return builder
         * 
         */
        public Builder sysctls(@Nullable Output<Map<String,String>> sysctls) {
            $.sysctls = sysctls;
            return this;
        }

        /**
         * @param sysctls The Linux kernel parameters to be applied to the nodes and all pods running on the nodes. The following parameters are supported. net.core.busy_poll net.core.busy_read net.core.netdev_max_backlog net.core.rmem_max net.core.wmem_default net.core.wmem_max net.core.optmem_max net.core.somaxconn net.ipv4.tcp_rmem net.ipv4.tcp_wmem net.ipv4.tcp_tw_reuse
         * 
         * @return builder
         * 
         */
        public Builder sysctls(Map<String,String> sysctls) {
            return sysctls(Output.of(sysctls));
        }

        public LinuxNodeConfigArgs build() {
            return $;
        }
    }

}
