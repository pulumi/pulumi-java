// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.monitoring_v1.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.monitoring_v1.inputs.WidgetResponse;
import java.lang.String;
import java.util.List;
import java.util.Objects;


/**
 * Defines the layout properties and content for a column.
 * 
 */
public final class ColumnResponse extends com.pulumi.resources.InvokeArgs {

    public static final ColumnResponse Empty = new ColumnResponse();

    /**
     * The relative weight of this column. The column weight is used to adjust the width of columns on the screen (relative to peers). Greater the weight, greater the width of the column on the screen. If omitted, a value of 1 is used while rendering.
     * 
     */
    @Import(name="weight", required=true)
    private String weight;

    /**
     * @return The relative weight of this column. The column weight is used to adjust the width of columns on the screen (relative to peers). Greater the weight, greater the width of the column on the screen. If omitted, a value of 1 is used while rendering.
     * 
     */
    public String weight() {
        return this.weight;
    }

    /**
     * The display widgets arranged vertically in this column.
     * 
     */
    @Import(name="widgets", required=true)
    private List<WidgetResponse> widgets;

    /**
     * @return The display widgets arranged vertically in this column.
     * 
     */
    public List<WidgetResponse> widgets() {
        return this.widgets;
    }

    private ColumnResponse() {}

    private ColumnResponse(ColumnResponse $) {
        this.weight = $.weight;
        this.widgets = $.widgets;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ColumnResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ColumnResponse $;

        public Builder() {
            $ = new ColumnResponse();
        }

        public Builder(ColumnResponse defaults) {
            $ = new ColumnResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param weight The relative weight of this column. The column weight is used to adjust the width of columns on the screen (relative to peers). Greater the weight, greater the width of the column on the screen. If omitted, a value of 1 is used while rendering.
         * 
         * @return builder
         * 
         */
        public Builder weight(String weight) {
            $.weight = weight;
            return this;
        }

        /**
         * @param widgets The display widgets arranged vertically in this column.
         * 
         * @return builder
         * 
         */
        public Builder widgets(List<WidgetResponse> widgets) {
            $.widgets = widgets;
            return this;
        }

        /**
         * @param widgets The display widgets arranged vertically in this column.
         * 
         * @return builder
         * 
         */
        public Builder widgets(WidgetResponse... widgets) {
            return widgets(List.of(widgets));
        }

        public ColumnResponse build() {
            $.weight = Objects.requireNonNull($.weight, "expected parameter 'weight' to be non-null");
            $.widgets = Objects.requireNonNull($.widgets, "expected parameter 'widgets' to be non-null");
            return $;
        }
    }

}
