// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.dataproc_v1.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.dataproc_v1.inputs.ClusterSelectorResponse;
import com.pulumi.googlenative.dataproc_v1.inputs.ManagedClusterResponse;
import java.util.Objects;


/**
 * Specifies workflow execution target.Either managed_cluster or cluster_selector is required.
 * 
 */
public final class WorkflowTemplatePlacementResponse extends com.pulumi.resources.InvokeArgs {

    public static final WorkflowTemplatePlacementResponse Empty = new WorkflowTemplatePlacementResponse();

    /**
     * Optional. A selector that chooses target cluster for jobs based on metadata.The selector is evaluated at the time each job is submitted.
     * 
     */
    @Import(name="clusterSelector", required=true)
    private ClusterSelectorResponse clusterSelector;

    public ClusterSelectorResponse clusterSelector() {
        return this.clusterSelector;
    }

    /**
     * A cluster that is managed by the workflow.
     * 
     */
    @Import(name="managedCluster", required=true)
    private ManagedClusterResponse managedCluster;

    public ManagedClusterResponse managedCluster() {
        return this.managedCluster;
    }

    private WorkflowTemplatePlacementResponse() {}

    private WorkflowTemplatePlacementResponse(WorkflowTemplatePlacementResponse $) {
        this.clusterSelector = $.clusterSelector;
        this.managedCluster = $.managedCluster;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WorkflowTemplatePlacementResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WorkflowTemplatePlacementResponse $;

        public Builder() {
            $ = new WorkflowTemplatePlacementResponse();
        }

        public Builder(WorkflowTemplatePlacementResponse defaults) {
            $ = new WorkflowTemplatePlacementResponse(Objects.requireNonNull(defaults));
        }

        public Builder clusterSelector(ClusterSelectorResponse clusterSelector) {
            $.clusterSelector = clusterSelector;
            return this;
        }

        public Builder managedCluster(ManagedClusterResponse managedCluster) {
            $.managedCluster = managedCluster;
            return this;
        }

        public WorkflowTemplatePlacementResponse build() {
            $.clusterSelector = Objects.requireNonNull($.clusterSelector, "expected parameter 'clusterSelector' to be non-null");
            $.managedCluster = Objects.requireNonNull($.managedCluster, "expected parameter 'managedCluster' to be non-null");
            return $;
        }
    }

}
