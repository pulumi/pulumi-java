// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.beyondcorp.v1alpha;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.beyondcorp.v1alpha.enums.AppConnectionType;
import com.pulumi.googlenative.beyondcorp.v1alpha.inputs.GoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionApplicationEndpointArgs;
import com.pulumi.googlenative.beyondcorp.v1alpha.inputs.GoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionGatewayArgs;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AppConnectionArgs extends com.pulumi.resources.ResourceArgs {

    public static final AppConnectionArgs Empty = new AppConnectionArgs();

    /**
     * Optional. User-settable AppConnection resource ID. * Must start with a letter. * Must contain between 4-63 characters from `/a-z-/`. * Must end with a number or a letter.
     * 
     */
    @Import(name="appConnectionId")
    private @Nullable Output<String> appConnectionId;

    /**
     * @return Optional. User-settable AppConnection resource ID. * Must start with a letter. * Must contain between 4-63 characters from `/a-z-/`. * Must end with a number or a letter.
     * 
     */
    public Optional<Output<String>> appConnectionId() {
        return Optional.ofNullable(this.appConnectionId);
    }

    /**
     * Address of the remote application endpoint for the BeyondCorp AppConnection.
     * 
     */
    @Import(name="applicationEndpoint", required=true)
    private Output<GoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionApplicationEndpointArgs> applicationEndpoint;

    /**
     * @return Address of the remote application endpoint for the BeyondCorp AppConnection.
     * 
     */
    public Output<GoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionApplicationEndpointArgs> applicationEndpoint() {
        return this.applicationEndpoint;
    }

    /**
     * Optional. List of [google.cloud.beyondcorp.v1main.Connector.name] that are authorised to be associated with this AppConnection.
     * 
     */
    @Import(name="connectors")
    private @Nullable Output<List<String>> connectors;

    /**
     * @return Optional. List of [google.cloud.beyondcorp.v1main.Connector.name] that are authorised to be associated with this AppConnection.
     * 
     */
    public Optional<Output<List<String>>> connectors() {
        return Optional.ofNullable(this.connectors);
    }

    /**
     * Optional. An arbitrary user-provided name for the AppConnection. Cannot exceed 64 characters.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return Optional. An arbitrary user-provided name for the AppConnection. Cannot exceed 64 characters.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * Optional. Gateway used by the AppConnection.
     * 
     */
    @Import(name="gateway")
    private @Nullable Output<GoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionGatewayArgs> gateway;

    /**
     * @return Optional. Gateway used by the AppConnection.
     * 
     */
    public Optional<Output<GoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionGatewayArgs>> gateway() {
        return Optional.ofNullable(this.gateway);
    }

    /**
     * Optional. Resource labels to represent user provided metadata.
     * 
     */
    @Import(name="labels")
    private @Nullable Output<Map<String,String>> labels;

    /**
     * @return Optional. Resource labels to represent user provided metadata.
     * 
     */
    public Optional<Output<Map<String,String>>> labels() {
        return Optional.ofNullable(this.labels);
    }

    @Import(name="location")
    private @Nullable Output<String> location;

    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * Unique resource name of the AppConnection. The name is ignored when creating a AppConnection.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Unique resource name of the AppConnection. The name is ignored when creating a AppConnection.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="project")
    private @Nullable Output<String> project;

    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and t he request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
     * 
     */
    @Import(name="requestId")
    private @Nullable Output<String> requestId;

    /**
     * @return Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and t he request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
     * 
     */
    public Optional<Output<String>> requestId() {
        return Optional.ofNullable(this.requestId);
    }

    /**
     * The type of network connectivity used by the AppConnection.
     * 
     */
    @Import(name="type", required=true)
    private Output<AppConnectionType> type;

    /**
     * @return The type of network connectivity used by the AppConnection.
     * 
     */
    public Output<AppConnectionType> type() {
        return this.type;
    }

    /**
     * Optional. If set, validates request by executing a dry-run which would not alter the resource in any way.
     * 
     */
    @Import(name="validateOnly")
    private @Nullable Output<String> validateOnly;

    /**
     * @return Optional. If set, validates request by executing a dry-run which would not alter the resource in any way.
     * 
     */
    public Optional<Output<String>> validateOnly() {
        return Optional.ofNullable(this.validateOnly);
    }

    private AppConnectionArgs() {}

    private AppConnectionArgs(AppConnectionArgs $) {
        this.appConnectionId = $.appConnectionId;
        this.applicationEndpoint = $.applicationEndpoint;
        this.connectors = $.connectors;
        this.displayName = $.displayName;
        this.gateway = $.gateway;
        this.labels = $.labels;
        this.location = $.location;
        this.name = $.name;
        this.project = $.project;
        this.requestId = $.requestId;
        this.type = $.type;
        this.validateOnly = $.validateOnly;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AppConnectionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AppConnectionArgs $;

        public Builder() {
            $ = new AppConnectionArgs();
        }

        public Builder(AppConnectionArgs defaults) {
            $ = new AppConnectionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param appConnectionId Optional. User-settable AppConnection resource ID. * Must start with a letter. * Must contain between 4-63 characters from `/a-z-/`. * Must end with a number or a letter.
         * 
         * @return builder
         * 
         */
        public Builder appConnectionId(@Nullable Output<String> appConnectionId) {
            $.appConnectionId = appConnectionId;
            return this;
        }

        /**
         * @param appConnectionId Optional. User-settable AppConnection resource ID. * Must start with a letter. * Must contain between 4-63 characters from `/a-z-/`. * Must end with a number or a letter.
         * 
         * @return builder
         * 
         */
        public Builder appConnectionId(String appConnectionId) {
            return appConnectionId(Output.of(appConnectionId));
        }

        /**
         * @param applicationEndpoint Address of the remote application endpoint for the BeyondCorp AppConnection.
         * 
         * @return builder
         * 
         */
        public Builder applicationEndpoint(Output<GoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionApplicationEndpointArgs> applicationEndpoint) {
            $.applicationEndpoint = applicationEndpoint;
            return this;
        }

        /**
         * @param applicationEndpoint Address of the remote application endpoint for the BeyondCorp AppConnection.
         * 
         * @return builder
         * 
         */
        public Builder applicationEndpoint(GoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionApplicationEndpointArgs applicationEndpoint) {
            return applicationEndpoint(Output.of(applicationEndpoint));
        }

        /**
         * @param connectors Optional. List of [google.cloud.beyondcorp.v1main.Connector.name] that are authorised to be associated with this AppConnection.
         * 
         * @return builder
         * 
         */
        public Builder connectors(@Nullable Output<List<String>> connectors) {
            $.connectors = connectors;
            return this;
        }

        /**
         * @param connectors Optional. List of [google.cloud.beyondcorp.v1main.Connector.name] that are authorised to be associated with this AppConnection.
         * 
         * @return builder
         * 
         */
        public Builder connectors(List<String> connectors) {
            return connectors(Output.of(connectors));
        }

        /**
         * @param connectors Optional. List of [google.cloud.beyondcorp.v1main.Connector.name] that are authorised to be associated with this AppConnection.
         * 
         * @return builder
         * 
         */
        public Builder connectors(String... connectors) {
            return connectors(List.of(connectors));
        }

        /**
         * @param displayName Optional. An arbitrary user-provided name for the AppConnection. Cannot exceed 64 characters.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName Optional. An arbitrary user-provided name for the AppConnection. Cannot exceed 64 characters.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param gateway Optional. Gateway used by the AppConnection.
         * 
         * @return builder
         * 
         */
        public Builder gateway(@Nullable Output<GoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionGatewayArgs> gateway) {
            $.gateway = gateway;
            return this;
        }

        /**
         * @param gateway Optional. Gateway used by the AppConnection.
         * 
         * @return builder
         * 
         */
        public Builder gateway(GoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionGatewayArgs gateway) {
            return gateway(Output.of(gateway));
        }

        /**
         * @param labels Optional. Resource labels to represent user provided metadata.
         * 
         * @return builder
         * 
         */
        public Builder labels(@Nullable Output<Map<String,String>> labels) {
            $.labels = labels;
            return this;
        }

        /**
         * @param labels Optional. Resource labels to represent user provided metadata.
         * 
         * @return builder
         * 
         */
        public Builder labels(Map<String,String> labels) {
            return labels(Output.of(labels));
        }

        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param name Unique resource name of the AppConnection. The name is ignored when creating a AppConnection.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Unique resource name of the AppConnection. The name is ignored when creating a AppConnection.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        public Builder project(String project) {
            return project(Output.of(project));
        }

        /**
         * @param requestId Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and t he request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
         * 
         * @return builder
         * 
         */
        public Builder requestId(@Nullable Output<String> requestId) {
            $.requestId = requestId;
            return this;
        }

        /**
         * @param requestId Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and t he request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
         * 
         * @return builder
         * 
         */
        public Builder requestId(String requestId) {
            return requestId(Output.of(requestId));
        }

        /**
         * @param type The type of network connectivity used by the AppConnection.
         * 
         * @return builder
         * 
         */
        public Builder type(Output<AppConnectionType> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type The type of network connectivity used by the AppConnection.
         * 
         * @return builder
         * 
         */
        public Builder type(AppConnectionType type) {
            return type(Output.of(type));
        }

        /**
         * @param validateOnly Optional. If set, validates request by executing a dry-run which would not alter the resource in any way.
         * 
         * @return builder
         * 
         */
        public Builder validateOnly(@Nullable Output<String> validateOnly) {
            $.validateOnly = validateOnly;
            return this;
        }

        /**
         * @param validateOnly Optional. If set, validates request by executing a dry-run which would not alter the resource in any way.
         * 
         * @return builder
         * 
         */
        public Builder validateOnly(String validateOnly) {
            return validateOnly(Output.of(validateOnly));
        }

        public AppConnectionArgs build() {
            $.applicationEndpoint = Objects.requireNonNull($.applicationEndpoint, "expected parameter 'applicationEndpoint' to be non-null");
            $.type = Objects.requireNonNull($.type, "expected parameter 'type' to be non-null");
            return $;
        }
    }

}
