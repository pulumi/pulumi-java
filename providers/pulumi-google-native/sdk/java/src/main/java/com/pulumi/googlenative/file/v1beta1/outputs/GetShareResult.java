// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.file.v1beta1.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.googlenative.file.v1beta1.outputs.NfsExportOptionsResponse;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetShareResult {
    /**
     * @return File share capacity in gigabytes (GB). Cloud Filestore defines 1 GB as 1024^3 bytes. Must be greater than 0.
     * 
     */
    private final String capacityGb;
    /**
     * @return The time when the share was created.
     * 
     */
    private final String createTime;
    /**
     * @return A description of the share with 2048 characters or less. Requests with longer descriptions will be rejected.
     * 
     */
    private final String description;
    /**
     * @return Resource labels to represent user provided metadata.
     * 
     */
    private final Map<String,String> labels;
    /**
     * @return The mount name of the share. Must be 63 characters or less and consist of uppercase or lowercase letters, numbers, and underscores.
     * 
     */
    private final String mountName;
    /**
     * @return The resource name of the share, in the format `projects/{project_id}/locations/{location_id}/instances/{instance_id}/shares/{share_id}`.
     * 
     */
    private final String name;
    /**
     * @return Nfs Export Options. There is a limit of 10 export options per file share.
     * 
     */
    private final List<NfsExportOptionsResponse> nfsExportOptions;
    /**
     * @return The share state.
     * 
     */
    private final String state;

    @CustomType.Constructor
    private GetShareResult(
        @CustomType.Parameter("capacityGb") String capacityGb,
        @CustomType.Parameter("createTime") String createTime,
        @CustomType.Parameter("description") String description,
        @CustomType.Parameter("labels") Map<String,String> labels,
        @CustomType.Parameter("mountName") String mountName,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("nfsExportOptions") List<NfsExportOptionsResponse> nfsExportOptions,
        @CustomType.Parameter("state") String state) {
        this.capacityGb = capacityGb;
        this.createTime = createTime;
        this.description = description;
        this.labels = labels;
        this.mountName = mountName;
        this.name = name;
        this.nfsExportOptions = nfsExportOptions;
        this.state = state;
    }

    /**
     * @return File share capacity in gigabytes (GB). Cloud Filestore defines 1 GB as 1024^3 bytes. Must be greater than 0.
     * 
     */
    public String capacityGb() {
        return this.capacityGb;
    }
    /**
     * @return The time when the share was created.
     * 
     */
    public String createTime() {
        return this.createTime;
    }
    /**
     * @return A description of the share with 2048 characters or less. Requests with longer descriptions will be rejected.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return Resource labels to represent user provided metadata.
     * 
     */
    public Map<String,String> labels() {
        return this.labels;
    }
    /**
     * @return The mount name of the share. Must be 63 characters or less and consist of uppercase or lowercase letters, numbers, and underscores.
     * 
     */
    public String mountName() {
        return this.mountName;
    }
    /**
     * @return The resource name of the share, in the format `projects/{project_id}/locations/{location_id}/instances/{instance_id}/shares/{share_id}`.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Nfs Export Options. There is a limit of 10 export options per file share.
     * 
     */
    public List<NfsExportOptionsResponse> nfsExportOptions() {
        return this.nfsExportOptions;
    }
    /**
     * @return The share state.
     * 
     */
    public String state() {
        return this.state;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetShareResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String capacityGb;
        private String createTime;
        private String description;
        private Map<String,String> labels;
        private String mountName;
        private String name;
        private List<NfsExportOptionsResponse> nfsExportOptions;
        private String state;

        public Builder() {
    	      // Empty
        }

        public Builder(GetShareResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.capacityGb = defaults.capacityGb;
    	      this.createTime = defaults.createTime;
    	      this.description = defaults.description;
    	      this.labels = defaults.labels;
    	      this.mountName = defaults.mountName;
    	      this.name = defaults.name;
    	      this.nfsExportOptions = defaults.nfsExportOptions;
    	      this.state = defaults.state;
        }

        public Builder capacityGb(String capacityGb) {
            this.capacityGb = Objects.requireNonNull(capacityGb);
            return this;
        }
        public Builder createTime(String createTime) {
            this.createTime = Objects.requireNonNull(createTime);
            return this;
        }
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        public Builder labels(Map<String,String> labels) {
            this.labels = Objects.requireNonNull(labels);
            return this;
        }
        public Builder mountName(String mountName) {
            this.mountName = Objects.requireNonNull(mountName);
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder nfsExportOptions(List<NfsExportOptionsResponse> nfsExportOptions) {
            this.nfsExportOptions = Objects.requireNonNull(nfsExportOptions);
            return this;
        }
        public Builder nfsExportOptions(NfsExportOptionsResponse... nfsExportOptions) {
            return nfsExportOptions(List.of(nfsExportOptions));
        }
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }        public GetShareResult build() {
            return new GetShareResult(capacityGb, createTime, description, labels, mountName, name, nfsExportOptions, state);
        }
    }
}
