// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.dlp.v2.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.dlp.v2.inputs.GooglePrivacyDlpV2BigQueryTableArgs;
import com.pulumi.googlenative.dlp.v2.inputs.GooglePrivacyDlpV2FieldIdArgs;
import com.pulumi.googlenative.dlp.v2.inputs.GooglePrivacyDlpV2QuasiIdentifierFieldArgs;
import java.util.List;
import java.util.Objects;


/**
 * An auxiliary table containing statistical information on the relative frequency of different quasi-identifiers values. It has one or several quasi-identifiers columns, and one column that indicates the relative frequency of each quasi-identifier tuple. If a tuple is present in the data but not in the auxiliary table, the corresponding relative frequency is assumed to be zero (and thus, the tuple is highly reidentifiable).
 * 
 */
public final class GooglePrivacyDlpV2StatisticalTableArgs extends com.pulumi.resources.ResourceArgs {

    public static final GooglePrivacyDlpV2StatisticalTableArgs Empty = new GooglePrivacyDlpV2StatisticalTableArgs();

    /**
     * Quasi-identifier columns.
     * 
     */
    @Import(name="quasiIds", required=true)
    private Output<List<GooglePrivacyDlpV2QuasiIdentifierFieldArgs>> quasiIds;

    /**
     * @return Quasi-identifier columns.
     * 
     */
    public Output<List<GooglePrivacyDlpV2QuasiIdentifierFieldArgs>> quasiIds() {
        return this.quasiIds;
    }

    /**
     * The relative frequency column must contain a floating-point number between 0 and 1 (inclusive). Null values are assumed to be zero.
     * 
     */
    @Import(name="relativeFrequency", required=true)
    private Output<GooglePrivacyDlpV2FieldIdArgs> relativeFrequency;

    /**
     * @return The relative frequency column must contain a floating-point number between 0 and 1 (inclusive). Null values are assumed to be zero.
     * 
     */
    public Output<GooglePrivacyDlpV2FieldIdArgs> relativeFrequency() {
        return this.relativeFrequency;
    }

    /**
     * Auxiliary table location.
     * 
     */
    @Import(name="table", required=true)
    private Output<GooglePrivacyDlpV2BigQueryTableArgs> table;

    /**
     * @return Auxiliary table location.
     * 
     */
    public Output<GooglePrivacyDlpV2BigQueryTableArgs> table() {
        return this.table;
    }

    private GooglePrivacyDlpV2StatisticalTableArgs() {}

    private GooglePrivacyDlpV2StatisticalTableArgs(GooglePrivacyDlpV2StatisticalTableArgs $) {
        this.quasiIds = $.quasiIds;
        this.relativeFrequency = $.relativeFrequency;
        this.table = $.table;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GooglePrivacyDlpV2StatisticalTableArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GooglePrivacyDlpV2StatisticalTableArgs $;

        public Builder() {
            $ = new GooglePrivacyDlpV2StatisticalTableArgs();
        }

        public Builder(GooglePrivacyDlpV2StatisticalTableArgs defaults) {
            $ = new GooglePrivacyDlpV2StatisticalTableArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param quasiIds Quasi-identifier columns.
         * 
         * @return builder
         * 
         */
        public Builder quasiIds(Output<List<GooglePrivacyDlpV2QuasiIdentifierFieldArgs>> quasiIds) {
            $.quasiIds = quasiIds;
            return this;
        }

        /**
         * @param quasiIds Quasi-identifier columns.
         * 
         * @return builder
         * 
         */
        public Builder quasiIds(List<GooglePrivacyDlpV2QuasiIdentifierFieldArgs> quasiIds) {
            return quasiIds(Output.of(quasiIds));
        }

        /**
         * @param quasiIds Quasi-identifier columns.
         * 
         * @return builder
         * 
         */
        public Builder quasiIds(GooglePrivacyDlpV2QuasiIdentifierFieldArgs... quasiIds) {
            return quasiIds(List.of(quasiIds));
        }

        /**
         * @param relativeFrequency The relative frequency column must contain a floating-point number between 0 and 1 (inclusive). Null values are assumed to be zero.
         * 
         * @return builder
         * 
         */
        public Builder relativeFrequency(Output<GooglePrivacyDlpV2FieldIdArgs> relativeFrequency) {
            $.relativeFrequency = relativeFrequency;
            return this;
        }

        /**
         * @param relativeFrequency The relative frequency column must contain a floating-point number between 0 and 1 (inclusive). Null values are assumed to be zero.
         * 
         * @return builder
         * 
         */
        public Builder relativeFrequency(GooglePrivacyDlpV2FieldIdArgs relativeFrequency) {
            return relativeFrequency(Output.of(relativeFrequency));
        }

        /**
         * @param table Auxiliary table location.
         * 
         * @return builder
         * 
         */
        public Builder table(Output<GooglePrivacyDlpV2BigQueryTableArgs> table) {
            $.table = table;
            return this;
        }

        /**
         * @param table Auxiliary table location.
         * 
         * @return builder
         * 
         */
        public Builder table(GooglePrivacyDlpV2BigQueryTableArgs table) {
            return table(Output.of(table));
        }

        public GooglePrivacyDlpV2StatisticalTableArgs build() {
            $.quasiIds = Objects.requireNonNull($.quasiIds, "expected parameter 'quasiIds' to be non-null");
            $.relativeFrequency = Objects.requireNonNull($.relativeFrequency, "expected parameter 'relativeFrequency' to be non-null");
            $.table = Objects.requireNonNull($.table, "expected parameter 'table' to be non-null");
            return $;
        }
    }

}
