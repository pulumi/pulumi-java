// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.retail.v2.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.googlenative.retail.v2.outputs.GoogleCloudRetailV2AudienceResponse;
import com.pulumi.googlenative.retail.v2.outputs.GoogleCloudRetailV2ColorInfoResponse;
import com.pulumi.googlenative.retail.v2.outputs.GoogleCloudRetailV2FulfillmentInfoResponse;
import com.pulumi.googlenative.retail.v2.outputs.GoogleCloudRetailV2ImageResponse;
import com.pulumi.googlenative.retail.v2.outputs.GoogleCloudRetailV2PriceInfoResponse;
import com.pulumi.googlenative.retail.v2.outputs.GoogleCloudRetailV2PromotionResponse;
import com.pulumi.googlenative.retail.v2.outputs.GoogleCloudRetailV2RatingResponse;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GoogleCloudRetailV2ProductResponse {
    /**
     * @return Highly encouraged. Extra product attributes to be included. For example, for products, this could include the store name, vendor, style, color, etc. These are very strong signals for recommendation model, thus we highly recommend providing the attributes here. Features that can take on one of a limited number of possible values. Two types of features can be set are: Textual features. some examples would be the brand/maker of a product, or country of a customer. Numerical features. Some examples would be the height/weight of a product, or age of a customer. For example: `{ &#34;vendor&#34;: {&#34;text&#34;: [&#34;vendor123&#34;, &#34;vendor456&#34;]}, &#34;lengths_cm&#34;: {&#34;numbers&#34;:[2.3, 15.4]}, &#34;heights_cm&#34;: {&#34;numbers&#34;:[8.1, 6.4]} }`. This field needs to pass all below criteria, otherwise an INVALID_ARGUMENT error is returned: * Max entries count: 200. * The key must be a UTF-8 encoded string with a length limit of 128 characters. * For indexable attribute, the key must match the pattern: `a-zA-Z0-9*`. For example, `key0LikeThis` or `KEY_1_LIKE_THIS`. * For text attributes, at most 400 values are allowed. Empty values are not allowed. Each value must be a non-empty UTF-8 encoded string with a length limit of 256 characters. * For number attributes, at most 400 values are allowed.
     * 
     */
    private final Map<String,String> attributes;
    /**
     * @return The target group associated with a given audience (e.g. male, veterans, car owners, musicians, etc.) of the product.
     * 
     */
    private final GoogleCloudRetailV2AudienceResponse audience;
    /**
     * @return The online availability of the Product. Default to Availability.IN_STOCK. Corresponding properties: Google Merchant Center property [availability](https://support.google.com/merchants/answer/6324448). Schema.org property [Offer.availability](https://schema.org/availability).
     * 
     */
    private final String availability;
    /**
     * @return The available quantity of the item.
     * 
     */
    private final Integer availableQuantity;
    /**
     * @return The timestamp when this Product becomes available for SearchService.Search.
     * 
     */
    private final String availableTime;
    /**
     * @return The brands of the product. A maximum of 30 brands are allowed. Each brand must be a UTF-8 encoded string with a length limit of 1,000 characters. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties: Google Merchant Center property [brand](https://support.google.com/merchants/answer/6324351). Schema.org property [Product.brand](https://schema.org/brand).
     * 
     */
    private final List<String> brands;
    /**
     * @return Product categories. This field is repeated for supporting one product belonging to several parallel categories. Strongly recommended using the full path for better search / recommendation quality. To represent full path of category, use &#39;&gt;&#39; sign to separate different hierarchies. If &#39;&gt;&#39; is part of the category name, please replace it with other character(s). For example, if a shoes product belongs to both [&#34;Shoes &amp; Accessories&#34; -&gt; &#34;Shoes&#34;] and [&#34;Sports &amp; Fitness&#34; -&gt; &#34;Athletic Clothing&#34; -&gt; &#34;Shoes&#34;], it could be represented as: &#34;categories&#34;: [ &#34;Shoes &amp; Accessories &gt; Shoes&#34;, &#34;Sports &amp; Fitness &gt; Athletic Clothing &gt; Shoes&#34; ] Must be set for Type.PRIMARY Product otherwise an INVALID_ARGUMENT error is returned. At most 250 values are allowed per Product. Empty values are not allowed. Each value must be a UTF-8 encoded string with a length limit of 5,000 characters. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties: Google Merchant Center property google_product_category. Schema.org property [Product.category] (https://schema.org/category). [mc_google_product_category]: https://support.google.com/merchants/answer/6324436
     * 
     */
    private final List<String> categories;
    /**
     * @return The id of the collection members when type is Type.COLLECTION. Non-existent product ids are allowed. The type of the members must be either Type.PRIMARY or Type.VARIANT otherwise and INVALID_ARGUMENT error is thrown. Should not set it for other types. A maximum of 1000 values are allowed. Otherwise, an INVALID_ARGUMENT error is return.
     * 
     */
    private final List<String> collectionMemberIds;
    /**
     * @return The color of the product. Corresponding properties: Google Merchant Center property [color](https://support.google.com/merchants/answer/6324487). Schema.org property [Product.color](https://schema.org/color).
     * 
     */
    private final GoogleCloudRetailV2ColorInfoResponse colorInfo;
    /**
     * @return The condition of the product. Strongly encouraged to use the standard values: &#34;new&#34;, &#34;refurbished&#34;, &#34;used&#34;. A maximum of 1 value is allowed per Product. Each value must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties: Google Merchant Center property [condition](https://support.google.com/merchants/answer/6324469). Schema.org property [Offer.itemCondition](https://schema.org/itemCondition).
     * 
     */
    private final List<String> conditions;
    /**
     * @return Product description. This field must be a UTF-8 encoded string with a length limit of 5,000 characters. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties: Google Merchant Center property [description](https://support.google.com/merchants/answer/6324468). Schema.org property [Product.description](https://schema.org/description).
     * 
     */
    private final String description;
    /**
     * @return The timestamp when this product becomes unavailable for SearchService.Search. If it is set, the Product is not available for SearchService.Search after expire_time. However, the product can still be retrieved by ProductService.GetProduct and ProductService.ListProducts. expire_time must be later than available_time and publish_time, otherwise an INVALID_ARGUMENT error is thrown. Corresponding properties: Google Merchant Center property [expiration_date](https://support.google.com/merchants/answer/6324499).
     * 
     */
    private final String expireTime;
    /**
     * @return Fulfillment information, such as the store IDs for in-store pickup or region IDs for different shipping methods. All the elements must have distinct FulfillmentInfo.type. Otherwise, an INVALID_ARGUMENT error is returned.
     * 
     */
    private final List<GoogleCloudRetailV2FulfillmentInfoResponse> fulfillmentInfo;
    /**
     * @return The Global Trade Item Number (GTIN) of the product. This field must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned. This field must be a Unigram. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties: Google Merchant Center property [gtin](https://support.google.com/merchants/answer/6324461). Schema.org property [Product.isbn](https://schema.org/isbn), [Product.gtin8](https://schema.org/gtin8), [Product.gtin12](https://schema.org/gtin12), [Product.gtin13](https://schema.org/gtin13), or [Product.gtin14](https://schema.org/gtin14). If the value is not a valid GTIN, an INVALID_ARGUMENT error is returned.
     * 
     */
    private final String gtin;
    /**
     * @return Product images for the product. We highly recommend putting the main image first. A maximum of 300 images are allowed. Corresponding properties: Google Merchant Center property [image_link](https://support.google.com/merchants/answer/6324350). Schema.org property [Product.image](https://schema.org/image).
     * 
     */
    private final List<GoogleCloudRetailV2ImageResponse> images;
    /**
     * @return Language of the title/description and other string attributes. Use language tags defined by [BCP 47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt). For product prediction, this field is ignored and the model automatically detects the text language. The Product can include text in different languages, but duplicating Products to provide text in multiple languages can result in degraded model performance. For product search this field is in use. It defaults to &#34;en-US&#34; if unset.
     * 
     */
    private final String languageCode;
    /**
     * @return The material of the product. For example, &#34;leather&#34;, &#34;wooden&#34;. A maximum of 20 values are allowed. Each value must be a UTF-8 encoded string with a length limit of 200 characters. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties: Google Merchant Center property [material](https://support.google.com/merchants/answer/6324410). Schema.org property [Product.material](https://schema.org/material).
     * 
     */
    private final List<String> materials;
    /**
     * @return Immutable. Full resource name of the product, such as `projects/*{@literal /}locations/global/catalogs/default_catalog/branches/default_branch/products/product_id`.
     * 
     */
    private final String name;
    /**
     * @return The pattern or graphic print of the product. For example, &#34;striped&#34;, &#34;polka dot&#34;, &#34;paisley&#34;. A maximum of 20 values are allowed per Product. Each value must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties: Google Merchant Center property [pattern](https://support.google.com/merchants/answer/6324483). Schema.org property [Product.pattern](https://schema.org/pattern).
     * 
     */
    private final List<String> patterns;
    /**
     * @return Product price and cost information. Corresponding properties: Google Merchant Center property [price](https://support.google.com/merchants/answer/6324371).
     * 
     */
    private final GoogleCloudRetailV2PriceInfoResponse priceInfo;
    /**
     * @return Variant group identifier. Must be an id, with the same parent branch with this product. Otherwise, an error is thrown. For Type.PRIMARY Products, this field can only be empty or set to the same value as id. For VARIANT Products, this field cannot be empty. A maximum of 2,000 products are allowed to share the same Type.PRIMARY Product. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties: Google Merchant Center property [item_group_id](https://support.google.com/merchants/answer/6324507). Schema.org property [Product.inProductGroupWithID](https://schema.org/inProductGroupWithID).
     * 
     */
    private final String primaryProductId;
    /**
     * @return The promotions applied to the product. A maximum of 10 values are allowed per Product. Only Promotion.promotion_id will be used, other fields will be ignored if set.
     * 
     */
    private final List<GoogleCloudRetailV2PromotionResponse> promotions;
    /**
     * @return The timestamp when the product is published by the retailer for the first time, which indicates the freshness of the products. Note that this field is different from available_time, given it purely describes product freshness regardless of when it is available on search and recommendation.
     * 
     */
    private final String publishTime;
    /**
     * @return The rating of this product.
     * 
     */
    private final GoogleCloudRetailV2RatingResponse rating;
    /**
     * @return Indicates which fields in the Products are returned in SearchResponse. Supported fields for all types: * audience * availability * brands * color_info * conditions * gtin * materials * name * patterns * price_info * rating * sizes * title * uri Supported fields only for Type.PRIMARY and Type.COLLECTION: * categories * description * images Supported fields only for Type.VARIANT: * Only the first image in images To mark attributes as retrievable, include paths of the form &#34;attributes.key&#34; where &#34;key&#34; is the key of a custom attribute, as specified in attributes. For Type.PRIMARY and Type.COLLECTION, the following fields are always returned in SearchResponse by default: * name For Type.VARIANT, the following fields are always returned in by default: * name * color_info The maximum number of paths is 30. Otherwise, an INVALID_ARGUMENT error is returned. Note: Returning more fields in SearchResponse can increase response payload size and serving latency.
     * 
     */
    private final String retrievableFields;
    /**
     * @return The size of the product. To represent different size systems or size types, consider using this format: [[[size_system:]size_type:]size_value]. For example, in &#34;US:MENS:M&#34;, &#34;US&#34; represents size system; &#34;MENS&#34; represents size type; &#34;M&#34; represents size value. In &#34;GIRLS:27&#34;, size system is empty; &#34;GIRLS&#34; represents size type; &#34;27&#34; represents size value. In &#34;32 inches&#34;, both size system and size type are empty, while size value is &#34;32 inches&#34;. A maximum of 20 values are allowed per Product. Each value must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties: Google Merchant Center property [size](https://support.google.com/merchants/answer/6324492), [size_type](https://support.google.com/merchants/answer/6324497), and [size_system](https://support.google.com/merchants/answer/6324502). Schema.org property [Product.size](https://schema.org/size).
     * 
     */
    private final List<String> sizes;
    /**
     * @return Custom tags associated with the product. At most 250 values are allowed per Product. This value must be a UTF-8 encoded string with a length limit of 1,000 characters. Otherwise, an INVALID_ARGUMENT error is returned. This tag can be used for filtering recommendation results by passing the tag as part of the PredictRequest.filter. Corresponding properties: Google Merchant Center property [custom_label_0–4](https://support.google.com/merchants/answer/6324473).
     * 
     */
    private final List<String> tags;
    /**
     * @return Product title. This field must be a UTF-8 encoded string with a length limit of 1,000 characters. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties: Google Merchant Center property [title](https://support.google.com/merchants/answer/6324415). Schema.org property [Product.name](https://schema.org/name).
     * 
     */
    private final String title;
    /**
     * @return Input only. The TTL (time to live) of the product. If it is set, it must be a non-negative value, and expire_time is set as current timestamp plus ttl. The derived expire_time is returned in the output and ttl is left blank when retrieving the Product. If it is set, the product is not available for SearchService.Search after current timestamp plus ttl. However, the product can still be retrieved by ProductService.GetProduct and ProductService.ListProducts.
     * 
     */
    private final String ttl;
    /**
     * @return Immutable. The type of the product. Default to Catalog.product_level_config.ingestion_product_type if unset.
     * 
     */
    private final String type;
    /**
     * @return Canonical URL directly linking to the product detail page. It is strongly recommended to provide a valid uri for the product, otherwise the service performance could be significantly degraded. This field must be a UTF-8 encoded string with a length limit of 5,000 characters. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties: Google Merchant Center property [link](https://support.google.com/merchants/answer/6324416). Schema.org property [Offer.url](https://schema.org/url).
     * 
     */
    private final String uri;
    /**
     * @return Product variants grouped together on primary product which share similar product attributes. It&#39;s automatically grouped by primary_product_id for all the product variants. Only populated for Type.PRIMARY Products. Note: This field is OUTPUT_ONLY for ProductService.GetProduct. Do not set this field in API requests.
     * 
     */
    private final List<GoogleCloudRetailV2ProductResponse> variants;

    @CustomType.Constructor
    private GoogleCloudRetailV2ProductResponse(
        @CustomType.Parameter("attributes") Map<String,String> attributes,
        @CustomType.Parameter("audience") GoogleCloudRetailV2AudienceResponse audience,
        @CustomType.Parameter("availability") String availability,
        @CustomType.Parameter("availableQuantity") Integer availableQuantity,
        @CustomType.Parameter("availableTime") String availableTime,
        @CustomType.Parameter("brands") List<String> brands,
        @CustomType.Parameter("categories") List<String> categories,
        @CustomType.Parameter("collectionMemberIds") List<String> collectionMemberIds,
        @CustomType.Parameter("colorInfo") GoogleCloudRetailV2ColorInfoResponse colorInfo,
        @CustomType.Parameter("conditions") List<String> conditions,
        @CustomType.Parameter("description") String description,
        @CustomType.Parameter("expireTime") String expireTime,
        @CustomType.Parameter("fulfillmentInfo") List<GoogleCloudRetailV2FulfillmentInfoResponse> fulfillmentInfo,
        @CustomType.Parameter("gtin") String gtin,
        @CustomType.Parameter("images") List<GoogleCloudRetailV2ImageResponse> images,
        @CustomType.Parameter("languageCode") String languageCode,
        @CustomType.Parameter("materials") List<String> materials,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("patterns") List<String> patterns,
        @CustomType.Parameter("priceInfo") GoogleCloudRetailV2PriceInfoResponse priceInfo,
        @CustomType.Parameter("primaryProductId") String primaryProductId,
        @CustomType.Parameter("promotions") List<GoogleCloudRetailV2PromotionResponse> promotions,
        @CustomType.Parameter("publishTime") String publishTime,
        @CustomType.Parameter("rating") GoogleCloudRetailV2RatingResponse rating,
        @CustomType.Parameter("retrievableFields") String retrievableFields,
        @CustomType.Parameter("sizes") List<String> sizes,
        @CustomType.Parameter("tags") List<String> tags,
        @CustomType.Parameter("title") String title,
        @CustomType.Parameter("ttl") String ttl,
        @CustomType.Parameter("type") String type,
        @CustomType.Parameter("uri") String uri,
        @CustomType.Parameter("variants") List<GoogleCloudRetailV2ProductResponse> variants) {
        this.attributes = attributes;
        this.audience = audience;
        this.availability = availability;
        this.availableQuantity = availableQuantity;
        this.availableTime = availableTime;
        this.brands = brands;
        this.categories = categories;
        this.collectionMemberIds = collectionMemberIds;
        this.colorInfo = colorInfo;
        this.conditions = conditions;
        this.description = description;
        this.expireTime = expireTime;
        this.fulfillmentInfo = fulfillmentInfo;
        this.gtin = gtin;
        this.images = images;
        this.languageCode = languageCode;
        this.materials = materials;
        this.name = name;
        this.patterns = patterns;
        this.priceInfo = priceInfo;
        this.primaryProductId = primaryProductId;
        this.promotions = promotions;
        this.publishTime = publishTime;
        this.rating = rating;
        this.retrievableFields = retrievableFields;
        this.sizes = sizes;
        this.tags = tags;
        this.title = title;
        this.ttl = ttl;
        this.type = type;
        this.uri = uri;
        this.variants = variants;
    }

    /**
     * @return Highly encouraged. Extra product attributes to be included. For example, for products, this could include the store name, vendor, style, color, etc. These are very strong signals for recommendation model, thus we highly recommend providing the attributes here. Features that can take on one of a limited number of possible values. Two types of features can be set are: Textual features. some examples would be the brand/maker of a product, or country of a customer. Numerical features. Some examples would be the height/weight of a product, or age of a customer. For example: `{ &#34;vendor&#34;: {&#34;text&#34;: [&#34;vendor123&#34;, &#34;vendor456&#34;]}, &#34;lengths_cm&#34;: {&#34;numbers&#34;:[2.3, 15.4]}, &#34;heights_cm&#34;: {&#34;numbers&#34;:[8.1, 6.4]} }`. This field needs to pass all below criteria, otherwise an INVALID_ARGUMENT error is returned: * Max entries count: 200. * The key must be a UTF-8 encoded string with a length limit of 128 characters. * For indexable attribute, the key must match the pattern: `a-zA-Z0-9*`. For example, `key0LikeThis` or `KEY_1_LIKE_THIS`. * For text attributes, at most 400 values are allowed. Empty values are not allowed. Each value must be a non-empty UTF-8 encoded string with a length limit of 256 characters. * For number attributes, at most 400 values are allowed.
     * 
     */
    public Map<String,String> attributes() {
        return this.attributes;
    }
    /**
     * @return The target group associated with a given audience (e.g. male, veterans, car owners, musicians, etc.) of the product.
     * 
     */
    public GoogleCloudRetailV2AudienceResponse audience() {
        return this.audience;
    }
    /**
     * @return The online availability of the Product. Default to Availability.IN_STOCK. Corresponding properties: Google Merchant Center property [availability](https://support.google.com/merchants/answer/6324448). Schema.org property [Offer.availability](https://schema.org/availability).
     * 
     */
    public String availability() {
        return this.availability;
    }
    /**
     * @return The available quantity of the item.
     * 
     */
    public Integer availableQuantity() {
        return this.availableQuantity;
    }
    /**
     * @return The timestamp when this Product becomes available for SearchService.Search.
     * 
     */
    public String availableTime() {
        return this.availableTime;
    }
    /**
     * @return The brands of the product. A maximum of 30 brands are allowed. Each brand must be a UTF-8 encoded string with a length limit of 1,000 characters. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties: Google Merchant Center property [brand](https://support.google.com/merchants/answer/6324351). Schema.org property [Product.brand](https://schema.org/brand).
     * 
     */
    public List<String> brands() {
        return this.brands;
    }
    /**
     * @return Product categories. This field is repeated for supporting one product belonging to several parallel categories. Strongly recommended using the full path for better search / recommendation quality. To represent full path of category, use &#39;&gt;&#39; sign to separate different hierarchies. If &#39;&gt;&#39; is part of the category name, please replace it with other character(s). For example, if a shoes product belongs to both [&#34;Shoes &amp; Accessories&#34; -&gt; &#34;Shoes&#34;] and [&#34;Sports &amp; Fitness&#34; -&gt; &#34;Athletic Clothing&#34; -&gt; &#34;Shoes&#34;], it could be represented as: &#34;categories&#34;: [ &#34;Shoes &amp; Accessories &gt; Shoes&#34;, &#34;Sports &amp; Fitness &gt; Athletic Clothing &gt; Shoes&#34; ] Must be set for Type.PRIMARY Product otherwise an INVALID_ARGUMENT error is returned. At most 250 values are allowed per Product. Empty values are not allowed. Each value must be a UTF-8 encoded string with a length limit of 5,000 characters. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties: Google Merchant Center property google_product_category. Schema.org property [Product.category] (https://schema.org/category). [mc_google_product_category]: https://support.google.com/merchants/answer/6324436
     * 
     */
    public List<String> categories() {
        return this.categories;
    }
    /**
     * @return The id of the collection members when type is Type.COLLECTION. Non-existent product ids are allowed. The type of the members must be either Type.PRIMARY or Type.VARIANT otherwise and INVALID_ARGUMENT error is thrown. Should not set it for other types. A maximum of 1000 values are allowed. Otherwise, an INVALID_ARGUMENT error is return.
     * 
     */
    public List<String> collectionMemberIds() {
        return this.collectionMemberIds;
    }
    /**
     * @return The color of the product. Corresponding properties: Google Merchant Center property [color](https://support.google.com/merchants/answer/6324487). Schema.org property [Product.color](https://schema.org/color).
     * 
     */
    public GoogleCloudRetailV2ColorInfoResponse colorInfo() {
        return this.colorInfo;
    }
    /**
     * @return The condition of the product. Strongly encouraged to use the standard values: &#34;new&#34;, &#34;refurbished&#34;, &#34;used&#34;. A maximum of 1 value is allowed per Product. Each value must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties: Google Merchant Center property [condition](https://support.google.com/merchants/answer/6324469). Schema.org property [Offer.itemCondition](https://schema.org/itemCondition).
     * 
     */
    public List<String> conditions() {
        return this.conditions;
    }
    /**
     * @return Product description. This field must be a UTF-8 encoded string with a length limit of 5,000 characters. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties: Google Merchant Center property [description](https://support.google.com/merchants/answer/6324468). Schema.org property [Product.description](https://schema.org/description).
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return The timestamp when this product becomes unavailable for SearchService.Search. If it is set, the Product is not available for SearchService.Search after expire_time. However, the product can still be retrieved by ProductService.GetProduct and ProductService.ListProducts. expire_time must be later than available_time and publish_time, otherwise an INVALID_ARGUMENT error is thrown. Corresponding properties: Google Merchant Center property [expiration_date](https://support.google.com/merchants/answer/6324499).
     * 
     */
    public String expireTime() {
        return this.expireTime;
    }
    /**
     * @return Fulfillment information, such as the store IDs for in-store pickup or region IDs for different shipping methods. All the elements must have distinct FulfillmentInfo.type. Otherwise, an INVALID_ARGUMENT error is returned.
     * 
     */
    public List<GoogleCloudRetailV2FulfillmentInfoResponse> fulfillmentInfo() {
        return this.fulfillmentInfo;
    }
    /**
     * @return The Global Trade Item Number (GTIN) of the product. This field must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned. This field must be a Unigram. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties: Google Merchant Center property [gtin](https://support.google.com/merchants/answer/6324461). Schema.org property [Product.isbn](https://schema.org/isbn), [Product.gtin8](https://schema.org/gtin8), [Product.gtin12](https://schema.org/gtin12), [Product.gtin13](https://schema.org/gtin13), or [Product.gtin14](https://schema.org/gtin14). If the value is not a valid GTIN, an INVALID_ARGUMENT error is returned.
     * 
     */
    public String gtin() {
        return this.gtin;
    }
    /**
     * @return Product images for the product. We highly recommend putting the main image first. A maximum of 300 images are allowed. Corresponding properties: Google Merchant Center property [image_link](https://support.google.com/merchants/answer/6324350). Schema.org property [Product.image](https://schema.org/image).
     * 
     */
    public List<GoogleCloudRetailV2ImageResponse> images() {
        return this.images;
    }
    /**
     * @return Language of the title/description and other string attributes. Use language tags defined by [BCP 47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt). For product prediction, this field is ignored and the model automatically detects the text language. The Product can include text in different languages, but duplicating Products to provide text in multiple languages can result in degraded model performance. For product search this field is in use. It defaults to &#34;en-US&#34; if unset.
     * 
     */
    public String languageCode() {
        return this.languageCode;
    }
    /**
     * @return The material of the product. For example, &#34;leather&#34;, &#34;wooden&#34;. A maximum of 20 values are allowed. Each value must be a UTF-8 encoded string with a length limit of 200 characters. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties: Google Merchant Center property [material](https://support.google.com/merchants/answer/6324410). Schema.org property [Product.material](https://schema.org/material).
     * 
     */
    public List<String> materials() {
        return this.materials;
    }
    /**
     * @return Immutable. Full resource name of the product, such as `projects/*{@literal /}locations/global/catalogs/default_catalog/branches/default_branch/products/product_id`.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The pattern or graphic print of the product. For example, &#34;striped&#34;, &#34;polka dot&#34;, &#34;paisley&#34;. A maximum of 20 values are allowed per Product. Each value must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties: Google Merchant Center property [pattern](https://support.google.com/merchants/answer/6324483). Schema.org property [Product.pattern](https://schema.org/pattern).
     * 
     */
    public List<String> patterns() {
        return this.patterns;
    }
    /**
     * @return Product price and cost information. Corresponding properties: Google Merchant Center property [price](https://support.google.com/merchants/answer/6324371).
     * 
     */
    public GoogleCloudRetailV2PriceInfoResponse priceInfo() {
        return this.priceInfo;
    }
    /**
     * @return Variant group identifier. Must be an id, with the same parent branch with this product. Otherwise, an error is thrown. For Type.PRIMARY Products, this field can only be empty or set to the same value as id. For VARIANT Products, this field cannot be empty. A maximum of 2,000 products are allowed to share the same Type.PRIMARY Product. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties: Google Merchant Center property [item_group_id](https://support.google.com/merchants/answer/6324507). Schema.org property [Product.inProductGroupWithID](https://schema.org/inProductGroupWithID).
     * 
     */
    public String primaryProductId() {
        return this.primaryProductId;
    }
    /**
     * @return The promotions applied to the product. A maximum of 10 values are allowed per Product. Only Promotion.promotion_id will be used, other fields will be ignored if set.
     * 
     */
    public List<GoogleCloudRetailV2PromotionResponse> promotions() {
        return this.promotions;
    }
    /**
     * @return The timestamp when the product is published by the retailer for the first time, which indicates the freshness of the products. Note that this field is different from available_time, given it purely describes product freshness regardless of when it is available on search and recommendation.
     * 
     */
    public String publishTime() {
        return this.publishTime;
    }
    /**
     * @return The rating of this product.
     * 
     */
    public GoogleCloudRetailV2RatingResponse rating() {
        return this.rating;
    }
    /**
     * @return Indicates which fields in the Products are returned in SearchResponse. Supported fields for all types: * audience * availability * brands * color_info * conditions * gtin * materials * name * patterns * price_info * rating * sizes * title * uri Supported fields only for Type.PRIMARY and Type.COLLECTION: * categories * description * images Supported fields only for Type.VARIANT: * Only the first image in images To mark attributes as retrievable, include paths of the form &#34;attributes.key&#34; where &#34;key&#34; is the key of a custom attribute, as specified in attributes. For Type.PRIMARY and Type.COLLECTION, the following fields are always returned in SearchResponse by default: * name For Type.VARIANT, the following fields are always returned in by default: * name * color_info The maximum number of paths is 30. Otherwise, an INVALID_ARGUMENT error is returned. Note: Returning more fields in SearchResponse can increase response payload size and serving latency.
     * 
     */
    public String retrievableFields() {
        return this.retrievableFields;
    }
    /**
     * @return The size of the product. To represent different size systems or size types, consider using this format: [[[size_system:]size_type:]size_value]. For example, in &#34;US:MENS:M&#34;, &#34;US&#34; represents size system; &#34;MENS&#34; represents size type; &#34;M&#34; represents size value. In &#34;GIRLS:27&#34;, size system is empty; &#34;GIRLS&#34; represents size type; &#34;27&#34; represents size value. In &#34;32 inches&#34;, both size system and size type are empty, while size value is &#34;32 inches&#34;. A maximum of 20 values are allowed per Product. Each value must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties: Google Merchant Center property [size](https://support.google.com/merchants/answer/6324492), [size_type](https://support.google.com/merchants/answer/6324497), and [size_system](https://support.google.com/merchants/answer/6324502). Schema.org property [Product.size](https://schema.org/size).
     * 
     */
    public List<String> sizes() {
        return this.sizes;
    }
    /**
     * @return Custom tags associated with the product. At most 250 values are allowed per Product. This value must be a UTF-8 encoded string with a length limit of 1,000 characters. Otherwise, an INVALID_ARGUMENT error is returned. This tag can be used for filtering recommendation results by passing the tag as part of the PredictRequest.filter. Corresponding properties: Google Merchant Center property [custom_label_0–4](https://support.google.com/merchants/answer/6324473).
     * 
     */
    public List<String> tags() {
        return this.tags;
    }
    /**
     * @return Product title. This field must be a UTF-8 encoded string with a length limit of 1,000 characters. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties: Google Merchant Center property [title](https://support.google.com/merchants/answer/6324415). Schema.org property [Product.name](https://schema.org/name).
     * 
     */
    public String title() {
        return this.title;
    }
    /**
     * @return Input only. The TTL (time to live) of the product. If it is set, it must be a non-negative value, and expire_time is set as current timestamp plus ttl. The derived expire_time is returned in the output and ttl is left blank when retrieving the Product. If it is set, the product is not available for SearchService.Search after current timestamp plus ttl. However, the product can still be retrieved by ProductService.GetProduct and ProductService.ListProducts.
     * 
     */
    public String ttl() {
        return this.ttl;
    }
    /**
     * @return Immutable. The type of the product. Default to Catalog.product_level_config.ingestion_product_type if unset.
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return Canonical URL directly linking to the product detail page. It is strongly recommended to provide a valid uri for the product, otherwise the service performance could be significantly degraded. This field must be a UTF-8 encoded string with a length limit of 5,000 characters. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties: Google Merchant Center property [link](https://support.google.com/merchants/answer/6324416). Schema.org property [Offer.url](https://schema.org/url).
     * 
     */
    public String uri() {
        return this.uri;
    }
    /**
     * @return Product variants grouped together on primary product which share similar product attributes. It&#39;s automatically grouped by primary_product_id for all the product variants. Only populated for Type.PRIMARY Products. Note: This field is OUTPUT_ONLY for ProductService.GetProduct. Do not set this field in API requests.
     * 
     */
    public List<GoogleCloudRetailV2ProductResponse> variants() {
        return this.variants;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GoogleCloudRetailV2ProductResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Map<String,String> attributes;
        private GoogleCloudRetailV2AudienceResponse audience;
        private String availability;
        private Integer availableQuantity;
        private String availableTime;
        private List<String> brands;
        private List<String> categories;
        private List<String> collectionMemberIds;
        private GoogleCloudRetailV2ColorInfoResponse colorInfo;
        private List<String> conditions;
        private String description;
        private String expireTime;
        private List<GoogleCloudRetailV2FulfillmentInfoResponse> fulfillmentInfo;
        private String gtin;
        private List<GoogleCloudRetailV2ImageResponse> images;
        private String languageCode;
        private List<String> materials;
        private String name;
        private List<String> patterns;
        private GoogleCloudRetailV2PriceInfoResponse priceInfo;
        private String primaryProductId;
        private List<GoogleCloudRetailV2PromotionResponse> promotions;
        private String publishTime;
        private GoogleCloudRetailV2RatingResponse rating;
        private String retrievableFields;
        private List<String> sizes;
        private List<String> tags;
        private String title;
        private String ttl;
        private String type;
        private String uri;
        private List<GoogleCloudRetailV2ProductResponse> variants;

        public Builder() {
    	      // Empty
        }

        public Builder(GoogleCloudRetailV2ProductResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.attributes = defaults.attributes;
    	      this.audience = defaults.audience;
    	      this.availability = defaults.availability;
    	      this.availableQuantity = defaults.availableQuantity;
    	      this.availableTime = defaults.availableTime;
    	      this.brands = defaults.brands;
    	      this.categories = defaults.categories;
    	      this.collectionMemberIds = defaults.collectionMemberIds;
    	      this.colorInfo = defaults.colorInfo;
    	      this.conditions = defaults.conditions;
    	      this.description = defaults.description;
    	      this.expireTime = defaults.expireTime;
    	      this.fulfillmentInfo = defaults.fulfillmentInfo;
    	      this.gtin = defaults.gtin;
    	      this.images = defaults.images;
    	      this.languageCode = defaults.languageCode;
    	      this.materials = defaults.materials;
    	      this.name = defaults.name;
    	      this.patterns = defaults.patterns;
    	      this.priceInfo = defaults.priceInfo;
    	      this.primaryProductId = defaults.primaryProductId;
    	      this.promotions = defaults.promotions;
    	      this.publishTime = defaults.publishTime;
    	      this.rating = defaults.rating;
    	      this.retrievableFields = defaults.retrievableFields;
    	      this.sizes = defaults.sizes;
    	      this.tags = defaults.tags;
    	      this.title = defaults.title;
    	      this.ttl = defaults.ttl;
    	      this.type = defaults.type;
    	      this.uri = defaults.uri;
    	      this.variants = defaults.variants;
        }

        public Builder attributes(Map<String,String> attributes) {
            this.attributes = Objects.requireNonNull(attributes);
            return this;
        }
        public Builder audience(GoogleCloudRetailV2AudienceResponse audience) {
            this.audience = Objects.requireNonNull(audience);
            return this;
        }
        public Builder availability(String availability) {
            this.availability = Objects.requireNonNull(availability);
            return this;
        }
        public Builder availableQuantity(Integer availableQuantity) {
            this.availableQuantity = Objects.requireNonNull(availableQuantity);
            return this;
        }
        public Builder availableTime(String availableTime) {
            this.availableTime = Objects.requireNonNull(availableTime);
            return this;
        }
        public Builder brands(List<String> brands) {
            this.brands = Objects.requireNonNull(brands);
            return this;
        }
        public Builder brands(String... brands) {
            return brands(List.of(brands));
        }
        public Builder categories(List<String> categories) {
            this.categories = Objects.requireNonNull(categories);
            return this;
        }
        public Builder categories(String... categories) {
            return categories(List.of(categories));
        }
        public Builder collectionMemberIds(List<String> collectionMemberIds) {
            this.collectionMemberIds = Objects.requireNonNull(collectionMemberIds);
            return this;
        }
        public Builder collectionMemberIds(String... collectionMemberIds) {
            return collectionMemberIds(List.of(collectionMemberIds));
        }
        public Builder colorInfo(GoogleCloudRetailV2ColorInfoResponse colorInfo) {
            this.colorInfo = Objects.requireNonNull(colorInfo);
            return this;
        }
        public Builder conditions(List<String> conditions) {
            this.conditions = Objects.requireNonNull(conditions);
            return this;
        }
        public Builder conditions(String... conditions) {
            return conditions(List.of(conditions));
        }
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        public Builder expireTime(String expireTime) {
            this.expireTime = Objects.requireNonNull(expireTime);
            return this;
        }
        public Builder fulfillmentInfo(List<GoogleCloudRetailV2FulfillmentInfoResponse> fulfillmentInfo) {
            this.fulfillmentInfo = Objects.requireNonNull(fulfillmentInfo);
            return this;
        }
        public Builder fulfillmentInfo(GoogleCloudRetailV2FulfillmentInfoResponse... fulfillmentInfo) {
            return fulfillmentInfo(List.of(fulfillmentInfo));
        }
        public Builder gtin(String gtin) {
            this.gtin = Objects.requireNonNull(gtin);
            return this;
        }
        public Builder images(List<GoogleCloudRetailV2ImageResponse> images) {
            this.images = Objects.requireNonNull(images);
            return this;
        }
        public Builder images(GoogleCloudRetailV2ImageResponse... images) {
            return images(List.of(images));
        }
        public Builder languageCode(String languageCode) {
            this.languageCode = Objects.requireNonNull(languageCode);
            return this;
        }
        public Builder materials(List<String> materials) {
            this.materials = Objects.requireNonNull(materials);
            return this;
        }
        public Builder materials(String... materials) {
            return materials(List.of(materials));
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder patterns(List<String> patterns) {
            this.patterns = Objects.requireNonNull(patterns);
            return this;
        }
        public Builder patterns(String... patterns) {
            return patterns(List.of(patterns));
        }
        public Builder priceInfo(GoogleCloudRetailV2PriceInfoResponse priceInfo) {
            this.priceInfo = Objects.requireNonNull(priceInfo);
            return this;
        }
        public Builder primaryProductId(String primaryProductId) {
            this.primaryProductId = Objects.requireNonNull(primaryProductId);
            return this;
        }
        public Builder promotions(List<GoogleCloudRetailV2PromotionResponse> promotions) {
            this.promotions = Objects.requireNonNull(promotions);
            return this;
        }
        public Builder promotions(GoogleCloudRetailV2PromotionResponse... promotions) {
            return promotions(List.of(promotions));
        }
        public Builder publishTime(String publishTime) {
            this.publishTime = Objects.requireNonNull(publishTime);
            return this;
        }
        public Builder rating(GoogleCloudRetailV2RatingResponse rating) {
            this.rating = Objects.requireNonNull(rating);
            return this;
        }
        public Builder retrievableFields(String retrievableFields) {
            this.retrievableFields = Objects.requireNonNull(retrievableFields);
            return this;
        }
        public Builder sizes(List<String> sizes) {
            this.sizes = Objects.requireNonNull(sizes);
            return this;
        }
        public Builder sizes(String... sizes) {
            return sizes(List.of(sizes));
        }
        public Builder tags(List<String> tags) {
            this.tags = Objects.requireNonNull(tags);
            return this;
        }
        public Builder tags(String... tags) {
            return tags(List.of(tags));
        }
        public Builder title(String title) {
            this.title = Objects.requireNonNull(title);
            return this;
        }
        public Builder ttl(String ttl) {
            this.ttl = Objects.requireNonNull(ttl);
            return this;
        }
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public Builder uri(String uri) {
            this.uri = Objects.requireNonNull(uri);
            return this;
        }
        public Builder variants(List<GoogleCloudRetailV2ProductResponse> variants) {
            this.variants = Objects.requireNonNull(variants);
            return this;
        }
        public Builder variants(GoogleCloudRetailV2ProductResponse... variants) {
            return variants(List.of(variants));
        }        public GoogleCloudRetailV2ProductResponse build() {
            return new GoogleCloudRetailV2ProductResponse(attributes, audience, availability, availableQuantity, availableTime, brands, categories, collectionMemberIds, colorInfo, conditions, description, expireTime, fulfillmentInfo, gtin, images, languageCode, materials, name, patterns, priceInfo, primaryProductId, promotions, publishTime, rating, retrievableFields, sizes, tags, title, ttl, type, uri, variants);
        }
    }
}
