// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.dlp.v2.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetInspectTemplateArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetInspectTemplateArgs Empty = new GetInspectTemplateArgs();

    @Import(name="inspectTemplateId", required=true)
    private Output<String> inspectTemplateId;

    public Output<String> inspectTemplateId() {
        return this.inspectTemplateId;
    }

    @Import(name="location", required=true)
    private Output<String> location;

    public Output<String> location() {
        return this.location;
    }

    @Import(name="project")
    private @Nullable Output<String> project;

    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    private GetInspectTemplateArgs() {}

    private GetInspectTemplateArgs(GetInspectTemplateArgs $) {
        this.inspectTemplateId = $.inspectTemplateId;
        this.location = $.location;
        this.project = $.project;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetInspectTemplateArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetInspectTemplateArgs $;

        public Builder() {
            $ = new GetInspectTemplateArgs();
        }

        public Builder(GetInspectTemplateArgs defaults) {
            $ = new GetInspectTemplateArgs(Objects.requireNonNull(defaults));
        }

        public Builder inspectTemplateId(Output<String> inspectTemplateId) {
            $.inspectTemplateId = inspectTemplateId;
            return this;
        }

        public Builder inspectTemplateId(String inspectTemplateId) {
            return inspectTemplateId(Output.of(inspectTemplateId));
        }

        public Builder location(Output<String> location) {
            $.location = location;
            return this;
        }

        public Builder location(String location) {
            return location(Output.of(location));
        }

        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        public Builder project(String project) {
            return project(Output.of(project));
        }

        public GetInspectTemplateArgs build() {
            $.inspectTemplateId = Objects.requireNonNull($.inspectTemplateId, "expected parameter 'inspectTemplateId' to be non-null");
            $.location = Objects.requireNonNull($.location, "expected parameter 'location' to be non-null");
            return $;
        }
    }

}
