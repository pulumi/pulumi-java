// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.containeranalysis_v1alpha1.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.containeranalysis_v1alpha1.inputs.HashResponse;
import java.lang.String;
import java.util.Objects;


/**
 *  Resource is an entity that can have metadata. E.g., a Docker image.
 * 
 */
public final class ResourceResponse extends com.pulumi.resources.InvokeArgs {

    public static final ResourceResponse Empty = new ResourceResponse();

    /**
     * The hash of the resource content. E.g., the Docker digest.
     * 
     */
    @Import(name="contentHash", required=true)
    private HashResponse contentHash;

    public HashResponse contentHash() {
        return this.contentHash;
    }

    /**
     * The name of the resource. E.g., the name of a Docker image - &#34;Debian&#34;.
     * 
     */
    @Import(name="name", required=true)
    private String name;

    public String name() {
        return this.name;
    }

    /**
     * The unique URI of the resource. E.g., &#34;https://gcr.io/project/image@sha256:foo&#34; for a Docker image.
     * 
     */
    @Import(name="uri", required=true)
    private String uri;

    public String uri() {
        return this.uri;
    }

    private ResourceResponse() {}

    private ResourceResponse(ResourceResponse $) {
        this.contentHash = $.contentHash;
        this.name = $.name;
        this.uri = $.uri;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ResourceResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ResourceResponse $;

        public Builder() {
            $ = new ResourceResponse();
        }

        public Builder(ResourceResponse defaults) {
            $ = new ResourceResponse(Objects.requireNonNull(defaults));
        }

        public Builder contentHash(HashResponse contentHash) {
            $.contentHash = contentHash;
            return this;
        }

        public Builder name(String name) {
            $.name = name;
            return this;
        }

        public Builder uri(String uri) {
            $.uri = uri;
            return this;
        }

        public ResourceResponse build() {
            $.contentHash = Objects.requireNonNull($.contentHash, "expected parameter 'contentHash' to be non-null");
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            $.uri = Objects.requireNonNull($.uri, "expected parameter 'uri' to be non-null");
            return $;
        }
    }

}
