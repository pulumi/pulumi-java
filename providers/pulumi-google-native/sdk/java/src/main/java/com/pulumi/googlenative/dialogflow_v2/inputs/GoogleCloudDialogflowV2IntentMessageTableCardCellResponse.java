// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.dialogflow_v2.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * Cell of TableCardRow.
 * 
 */
public final class GoogleCloudDialogflowV2IntentMessageTableCardCellResponse extends com.pulumi.resources.InvokeArgs {

    public static final GoogleCloudDialogflowV2IntentMessageTableCardCellResponse Empty = new GoogleCloudDialogflowV2IntentMessageTableCardCellResponse();

    /**
     * Text in this cell.
     * 
     */
    @Import(name="text", required=true)
    private String text;

    /**
     * @return Text in this cell.
     * 
     */
    public String text() {
        return this.text;
    }

    private GoogleCloudDialogflowV2IntentMessageTableCardCellResponse() {}

    private GoogleCloudDialogflowV2IntentMessageTableCardCellResponse(GoogleCloudDialogflowV2IntentMessageTableCardCellResponse $) {
        this.text = $.text;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GoogleCloudDialogflowV2IntentMessageTableCardCellResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GoogleCloudDialogflowV2IntentMessageTableCardCellResponse $;

        public Builder() {
            $ = new GoogleCloudDialogflowV2IntentMessageTableCardCellResponse();
        }

        public Builder(GoogleCloudDialogflowV2IntentMessageTableCardCellResponse defaults) {
            $ = new GoogleCloudDialogflowV2IntentMessageTableCardCellResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param text Text in this cell.
         * 
         * @return builder
         * 
         */
        public Builder text(String text) {
            $.text = text;
            return this;
        }

        public GoogleCloudDialogflowV2IntentMessageTableCardCellResponse build() {
            $.text = Objects.requireNonNull($.text, "expected parameter 'text' to be non-null");
            return $;
        }
    }

}
