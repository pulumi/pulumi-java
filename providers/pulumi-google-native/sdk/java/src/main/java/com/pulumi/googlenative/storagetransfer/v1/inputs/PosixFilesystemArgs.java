// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.storagetransfer.v1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * A POSIX filesystem resource.
 * 
 */
public final class PosixFilesystemArgs extends com.pulumi.resources.ResourceArgs {

    public static final PosixFilesystemArgs Empty = new PosixFilesystemArgs();

    /**
     * Root directory path to the filesystem.
     * 
     */
    @Import(name="rootDirectory")
    private @Nullable Output<String> rootDirectory;

    /**
     * @return Root directory path to the filesystem.
     * 
     */
    public Optional<Output<String>> rootDirectory() {
        return Optional.ofNullable(this.rootDirectory);
    }

    private PosixFilesystemArgs() {}

    private PosixFilesystemArgs(PosixFilesystemArgs $) {
        this.rootDirectory = $.rootDirectory;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PosixFilesystemArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PosixFilesystemArgs $;

        public Builder() {
            $ = new PosixFilesystemArgs();
        }

        public Builder(PosixFilesystemArgs defaults) {
            $ = new PosixFilesystemArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param rootDirectory Root directory path to the filesystem.
         * 
         * @return builder
         * 
         */
        public Builder rootDirectory(@Nullable Output<String> rootDirectory) {
            $.rootDirectory = rootDirectory;
            return this;
        }

        /**
         * @param rootDirectory Root directory path to the filesystem.
         * 
         * @return builder
         * 
         */
        public Builder rootDirectory(String rootDirectory) {
            return rootDirectory(Output.of(rootDirectory));
        }

        public PosixFilesystemArgs build() {
            return $;
        }
    }

}
