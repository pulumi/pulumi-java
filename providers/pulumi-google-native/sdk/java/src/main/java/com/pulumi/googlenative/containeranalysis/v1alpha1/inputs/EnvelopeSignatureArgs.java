// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.containeranalysis.v1alpha1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * A DSSE signature
 * 
 */
public final class EnvelopeSignatureArgs extends com.pulumi.resources.ResourceArgs {

    public static final EnvelopeSignatureArgs Empty = new EnvelopeSignatureArgs();

    /**
     * A reference id to the key being used for signing
     * 
     */
    @Import(name="keyid")
    private @Nullable Output<String> keyid;

    /**
     * @return A reference id to the key being used for signing
     * 
     */
    public Optional<Output<String>> keyid() {
        return Optional.ofNullable(this.keyid);
    }

    /**
     * The signature itself
     * 
     */
    @Import(name="sig")
    private @Nullable Output<String> sig;

    /**
     * @return The signature itself
     * 
     */
    public Optional<Output<String>> sig() {
        return Optional.ofNullable(this.sig);
    }

    private EnvelopeSignatureArgs() {}

    private EnvelopeSignatureArgs(EnvelopeSignatureArgs $) {
        this.keyid = $.keyid;
        this.sig = $.sig;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EnvelopeSignatureArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EnvelopeSignatureArgs $;

        public Builder() {
            $ = new EnvelopeSignatureArgs();
        }

        public Builder(EnvelopeSignatureArgs defaults) {
            $ = new EnvelopeSignatureArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param keyid A reference id to the key being used for signing
         * 
         * @return builder
         * 
         */
        public Builder keyid(@Nullable Output<String> keyid) {
            $.keyid = keyid;
            return this;
        }

        /**
         * @param keyid A reference id to the key being used for signing
         * 
         * @return builder
         * 
         */
        public Builder keyid(String keyid) {
            return keyid(Output.of(keyid));
        }

        /**
         * @param sig The signature itself
         * 
         * @return builder
         * 
         */
        public Builder sig(@Nullable Output<String> sig) {
            $.sig = sig;
            return this;
        }

        /**
         * @param sig The signature itself
         * 
         * @return builder
         * 
         */
        public Builder sig(String sig) {
            return sig(Output.of(sig));
        }

        public EnvelopeSignatureArgs build() {
            return $;
        }
    }

}
