// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.container.v1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Constraints applied to pods.
 * 
 */
public final class MaxPodsConstraintArgs extends com.pulumi.resources.ResourceArgs {

    public static final MaxPodsConstraintArgs Empty = new MaxPodsConstraintArgs();

    /**
     * Constraint enforced on the max num of pods per node.
     * 
     */
    @Import(name="maxPodsPerNode")
    private @Nullable Output<String> maxPodsPerNode;

    /**
     * @return Constraint enforced on the max num of pods per node.
     * 
     */
    public Optional<Output<String>> maxPodsPerNode() {
        return Optional.ofNullable(this.maxPodsPerNode);
    }

    private MaxPodsConstraintArgs() {}

    private MaxPodsConstraintArgs(MaxPodsConstraintArgs $) {
        this.maxPodsPerNode = $.maxPodsPerNode;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MaxPodsConstraintArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MaxPodsConstraintArgs $;

        public Builder() {
            $ = new MaxPodsConstraintArgs();
        }

        public Builder(MaxPodsConstraintArgs defaults) {
            $ = new MaxPodsConstraintArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param maxPodsPerNode Constraint enforced on the max num of pods per node.
         * 
         * @return builder
         * 
         */
        public Builder maxPodsPerNode(@Nullable Output<String> maxPodsPerNode) {
            $.maxPodsPerNode = maxPodsPerNode;
            return this;
        }

        /**
         * @param maxPodsPerNode Constraint enforced on the max num of pods per node.
         * 
         * @return builder
         * 
         */
        public Builder maxPodsPerNode(String maxPodsPerNode) {
            return maxPodsPerNode(Output.of(maxPodsPerNode));
        }

        public MaxPodsConstraintArgs build() {
            return $;
        }
    }

}
