// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.datapipelines_v1.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;


/**
 * The environment values to be set at runtime for a Flex Template.
 * 
 */
public final class GoogleCloudDatapipelinesV1FlexTemplateRuntimeEnvironmentResponse extends com.pulumi.resources.InvokeArgs {

    public static final GoogleCloudDatapipelinesV1FlexTemplateRuntimeEnvironmentResponse Empty = new GoogleCloudDatapipelinesV1FlexTemplateRuntimeEnvironmentResponse();

    /**
     * Additional experiment flags for the job.
     * 
     */
    @Import(name="additionalExperiments", required=true)
    private List<String> additionalExperiments;

    /**
     * @return Additional experiment flags for the job.
     * 
     */
    public List<String> additionalExperiments() {
        return this.additionalExperiments;
    }

    /**
     * Additional user labels to be specified for the job. Keys and values must follow the restrictions specified in the [labeling restrictions](https://cloud.google.com/compute/docs/labeling-resources#restrictions). An object containing a list of key/value pairs. Example: `{ &#34;name&#34;: &#34;wrench&#34;, &#34;mass&#34;: &#34;1kg&#34;, &#34;count&#34;: &#34;3&#34; }`.
     * 
     */
    @Import(name="additionalUserLabels", required=true)
    private Map<String,String> additionalUserLabels;

    /**
     * @return Additional user labels to be specified for the job. Keys and values must follow the restrictions specified in the [labeling restrictions](https://cloud.google.com/compute/docs/labeling-resources#restrictions). An object containing a list of key/value pairs. Example: `{ &#34;name&#34;: &#34;wrench&#34;, &#34;mass&#34;: &#34;1kg&#34;, &#34;count&#34;: &#34;3&#34; }`.
     * 
     */
    public Map<String,String> additionalUserLabels() {
        return this.additionalUserLabels;
    }

    /**
     * Whether to enable Streaming Engine for the job.
     * 
     */
    @Import(name="enableStreamingEngine", required=true)
    private Boolean enableStreamingEngine;

    /**
     * @return Whether to enable Streaming Engine for the job.
     * 
     */
    public Boolean enableStreamingEngine() {
        return this.enableStreamingEngine;
    }

    /**
     * Set FlexRS goal for the job. https://cloud.google.com/dataflow/docs/guides/flexrs
     * 
     */
    @Import(name="flexrsGoal", required=true)
    private String flexrsGoal;

    /**
     * @return Set FlexRS goal for the job. https://cloud.google.com/dataflow/docs/guides/flexrs
     * 
     */
    public String flexrsGoal() {
        return this.flexrsGoal;
    }

    /**
     * Configuration for VM IPs.
     * 
     */
    @Import(name="ipConfiguration", required=true)
    private String ipConfiguration;

    /**
     * @return Configuration for VM IPs.
     * 
     */
    public String ipConfiguration() {
        return this.ipConfiguration;
    }

    /**
     * Name for the Cloud KMS key for the job. Key format is: projects//locations//keyRings//cryptoKeys/
     * 
     */
    @Import(name="kmsKeyName", required=true)
    private String kmsKeyName;

    /**
     * @return Name for the Cloud KMS key for the job. Key format is: projects//locations//keyRings//cryptoKeys/
     * 
     */
    public String kmsKeyName() {
        return this.kmsKeyName;
    }

    /**
     * The machine type to use for the job. Defaults to the value from the template if not specified.
     * 
     */
    @Import(name="machineType", required=true)
    private String machineType;

    /**
     * @return The machine type to use for the job. Defaults to the value from the template if not specified.
     * 
     */
    public String machineType() {
        return this.machineType;
    }

    /**
     * The maximum number of Compute Engine instances to be made available to your pipeline during execution, from 1 to 1000.
     * 
     */
    @Import(name="maxWorkers", required=true)
    private Integer maxWorkers;

    /**
     * @return The maximum number of Compute Engine instances to be made available to your pipeline during execution, from 1 to 1000.
     * 
     */
    public Integer maxWorkers() {
        return this.maxWorkers;
    }

    /**
     * Network to which VMs will be assigned. If empty or unspecified, the service will use the network &#34;default&#34;.
     * 
     */
    @Import(name="network", required=true)
    private String network;

    /**
     * @return Network to which VMs will be assigned. If empty or unspecified, the service will use the network &#34;default&#34;.
     * 
     */
    public String network() {
        return this.network;
    }

    /**
     * The initial number of Compute Engine instances for the job.
     * 
     */
    @Import(name="numWorkers", required=true)
    private Integer numWorkers;

    /**
     * @return The initial number of Compute Engine instances for the job.
     * 
     */
    public Integer numWorkers() {
        return this.numWorkers;
    }

    /**
     * The email address of the service account to run the job as.
     * 
     */
    @Import(name="serviceAccountEmail", required=true)
    private String serviceAccountEmail;

    /**
     * @return The email address of the service account to run the job as.
     * 
     */
    public String serviceAccountEmail() {
        return this.serviceAccountEmail;
    }

    /**
     * Subnetwork to which VMs will be assigned, if desired. You can specify a subnetwork using either a complete URL or an abbreviated path. Expected to be of the form &#34;https://www.googleapis.com/compute/v1/projects/HOST_PROJECT_ID/regions/REGION/subnetworks/SUBNETWORK&#34; or &#34;regions/REGION/subnetworks/SUBNETWORK&#34;. If the subnetwork is located in a Shared VPC network, you must use the complete URL.
     * 
     */
    @Import(name="subnetwork", required=true)
    private String subnetwork;

    /**
     * @return Subnetwork to which VMs will be assigned, if desired. You can specify a subnetwork using either a complete URL or an abbreviated path. Expected to be of the form &#34;https://www.googleapis.com/compute/v1/projects/HOST_PROJECT_ID/regions/REGION/subnetworks/SUBNETWORK&#34; or &#34;regions/REGION/subnetworks/SUBNETWORK&#34;. If the subnetwork is located in a Shared VPC network, you must use the complete URL.
     * 
     */
    public String subnetwork() {
        return this.subnetwork;
    }

    /**
     * The Cloud Storage path to use for temporary files. Must be a valid Cloud Storage URL, beginning with `gs://`.
     * 
     */
    @Import(name="tempLocation", required=true)
    private String tempLocation;

    /**
     * @return The Cloud Storage path to use for temporary files. Must be a valid Cloud Storage URL, beginning with `gs://`.
     * 
     */
    public String tempLocation() {
        return this.tempLocation;
    }

    /**
     * The Compute Engine region (https://cloud.google.com/compute/docs/regions-zones/regions-zones) in which worker processing should occur, e.g. &#34;us-west1&#34;. Mutually exclusive with worker_zone. If neither worker_region nor worker_zone is specified, defaults to the control plane region.
     * 
     */
    @Import(name="workerRegion", required=true)
    private String workerRegion;

    /**
     * @return The Compute Engine region (https://cloud.google.com/compute/docs/regions-zones/regions-zones) in which worker processing should occur, e.g. &#34;us-west1&#34;. Mutually exclusive with worker_zone. If neither worker_region nor worker_zone is specified, defaults to the control plane region.
     * 
     */
    public String workerRegion() {
        return this.workerRegion;
    }

    /**
     * The Compute Engine zone (https://cloud.google.com/compute/docs/regions-zones/regions-zones) in which worker processing should occur, e.g. &#34;us-west1-a&#34;. Mutually exclusive with worker_region. If neither worker_region nor worker_zone is specified, a zone in the control plane region is chosen based on available capacity. If both `worker_zone` and `zone` are set, `worker_zone` takes precedence.
     * 
     */
    @Import(name="workerZone", required=true)
    private String workerZone;

    /**
     * @return The Compute Engine zone (https://cloud.google.com/compute/docs/regions-zones/regions-zones) in which worker processing should occur, e.g. &#34;us-west1-a&#34;. Mutually exclusive with worker_region. If neither worker_region nor worker_zone is specified, a zone in the control plane region is chosen based on available capacity. If both `worker_zone` and `zone` are set, `worker_zone` takes precedence.
     * 
     */
    public String workerZone() {
        return this.workerZone;
    }

    /**
     * The Compute Engine [availability zone](https://cloud.google.com/compute/docs/regions-zones/regions-zones) for launching worker instances to run your pipeline. In the future, worker_zone will take precedence.
     * 
     */
    @Import(name="zone", required=true)
    private String zone;

    /**
     * @return The Compute Engine [availability zone](https://cloud.google.com/compute/docs/regions-zones/regions-zones) for launching worker instances to run your pipeline. In the future, worker_zone will take precedence.
     * 
     */
    public String zone() {
        return this.zone;
    }

    private GoogleCloudDatapipelinesV1FlexTemplateRuntimeEnvironmentResponse() {}

    private GoogleCloudDatapipelinesV1FlexTemplateRuntimeEnvironmentResponse(GoogleCloudDatapipelinesV1FlexTemplateRuntimeEnvironmentResponse $) {
        this.additionalExperiments = $.additionalExperiments;
        this.additionalUserLabels = $.additionalUserLabels;
        this.enableStreamingEngine = $.enableStreamingEngine;
        this.flexrsGoal = $.flexrsGoal;
        this.ipConfiguration = $.ipConfiguration;
        this.kmsKeyName = $.kmsKeyName;
        this.machineType = $.machineType;
        this.maxWorkers = $.maxWorkers;
        this.network = $.network;
        this.numWorkers = $.numWorkers;
        this.serviceAccountEmail = $.serviceAccountEmail;
        this.subnetwork = $.subnetwork;
        this.tempLocation = $.tempLocation;
        this.workerRegion = $.workerRegion;
        this.workerZone = $.workerZone;
        this.zone = $.zone;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GoogleCloudDatapipelinesV1FlexTemplateRuntimeEnvironmentResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GoogleCloudDatapipelinesV1FlexTemplateRuntimeEnvironmentResponse $;

        public Builder() {
            $ = new GoogleCloudDatapipelinesV1FlexTemplateRuntimeEnvironmentResponse();
        }

        public Builder(GoogleCloudDatapipelinesV1FlexTemplateRuntimeEnvironmentResponse defaults) {
            $ = new GoogleCloudDatapipelinesV1FlexTemplateRuntimeEnvironmentResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param additionalExperiments Additional experiment flags for the job.
         * 
         * @return builder
         * 
         */
        public Builder additionalExperiments(List<String> additionalExperiments) {
            $.additionalExperiments = additionalExperiments;
            return this;
        }

        /**
         * @param additionalExperiments Additional experiment flags for the job.
         * 
         * @return builder
         * 
         */
        public Builder additionalExperiments(String... additionalExperiments) {
            return additionalExperiments(List.of(additionalExperiments));
        }

        /**
         * @param additionalUserLabels Additional user labels to be specified for the job. Keys and values must follow the restrictions specified in the [labeling restrictions](https://cloud.google.com/compute/docs/labeling-resources#restrictions). An object containing a list of key/value pairs. Example: `{ &#34;name&#34;: &#34;wrench&#34;, &#34;mass&#34;: &#34;1kg&#34;, &#34;count&#34;: &#34;3&#34; }`.
         * 
         * @return builder
         * 
         */
        public Builder additionalUserLabels(Map<String,String> additionalUserLabels) {
            $.additionalUserLabels = additionalUserLabels;
            return this;
        }

        /**
         * @param enableStreamingEngine Whether to enable Streaming Engine for the job.
         * 
         * @return builder
         * 
         */
        public Builder enableStreamingEngine(Boolean enableStreamingEngine) {
            $.enableStreamingEngine = enableStreamingEngine;
            return this;
        }

        /**
         * @param flexrsGoal Set FlexRS goal for the job. https://cloud.google.com/dataflow/docs/guides/flexrs
         * 
         * @return builder
         * 
         */
        public Builder flexrsGoal(String flexrsGoal) {
            $.flexrsGoal = flexrsGoal;
            return this;
        }

        /**
         * @param ipConfiguration Configuration for VM IPs.
         * 
         * @return builder
         * 
         */
        public Builder ipConfiguration(String ipConfiguration) {
            $.ipConfiguration = ipConfiguration;
            return this;
        }

        /**
         * @param kmsKeyName Name for the Cloud KMS key for the job. Key format is: projects//locations//keyRings//cryptoKeys/
         * 
         * @return builder
         * 
         */
        public Builder kmsKeyName(String kmsKeyName) {
            $.kmsKeyName = kmsKeyName;
            return this;
        }

        /**
         * @param machineType The machine type to use for the job. Defaults to the value from the template if not specified.
         * 
         * @return builder
         * 
         */
        public Builder machineType(String machineType) {
            $.machineType = machineType;
            return this;
        }

        /**
         * @param maxWorkers The maximum number of Compute Engine instances to be made available to your pipeline during execution, from 1 to 1000.
         * 
         * @return builder
         * 
         */
        public Builder maxWorkers(Integer maxWorkers) {
            $.maxWorkers = maxWorkers;
            return this;
        }

        /**
         * @param network Network to which VMs will be assigned. If empty or unspecified, the service will use the network &#34;default&#34;.
         * 
         * @return builder
         * 
         */
        public Builder network(String network) {
            $.network = network;
            return this;
        }

        /**
         * @param numWorkers The initial number of Compute Engine instances for the job.
         * 
         * @return builder
         * 
         */
        public Builder numWorkers(Integer numWorkers) {
            $.numWorkers = numWorkers;
            return this;
        }

        /**
         * @param serviceAccountEmail The email address of the service account to run the job as.
         * 
         * @return builder
         * 
         */
        public Builder serviceAccountEmail(String serviceAccountEmail) {
            $.serviceAccountEmail = serviceAccountEmail;
            return this;
        }

        /**
         * @param subnetwork Subnetwork to which VMs will be assigned, if desired. You can specify a subnetwork using either a complete URL or an abbreviated path. Expected to be of the form &#34;https://www.googleapis.com/compute/v1/projects/HOST_PROJECT_ID/regions/REGION/subnetworks/SUBNETWORK&#34; or &#34;regions/REGION/subnetworks/SUBNETWORK&#34;. If the subnetwork is located in a Shared VPC network, you must use the complete URL.
         * 
         * @return builder
         * 
         */
        public Builder subnetwork(String subnetwork) {
            $.subnetwork = subnetwork;
            return this;
        }

        /**
         * @param tempLocation The Cloud Storage path to use for temporary files. Must be a valid Cloud Storage URL, beginning with `gs://`.
         * 
         * @return builder
         * 
         */
        public Builder tempLocation(String tempLocation) {
            $.tempLocation = tempLocation;
            return this;
        }

        /**
         * @param workerRegion The Compute Engine region (https://cloud.google.com/compute/docs/regions-zones/regions-zones) in which worker processing should occur, e.g. &#34;us-west1&#34;. Mutually exclusive with worker_zone. If neither worker_region nor worker_zone is specified, defaults to the control plane region.
         * 
         * @return builder
         * 
         */
        public Builder workerRegion(String workerRegion) {
            $.workerRegion = workerRegion;
            return this;
        }

        /**
         * @param workerZone The Compute Engine zone (https://cloud.google.com/compute/docs/regions-zones/regions-zones) in which worker processing should occur, e.g. &#34;us-west1-a&#34;. Mutually exclusive with worker_region. If neither worker_region nor worker_zone is specified, a zone in the control plane region is chosen based on available capacity. If both `worker_zone` and `zone` are set, `worker_zone` takes precedence.
         * 
         * @return builder
         * 
         */
        public Builder workerZone(String workerZone) {
            $.workerZone = workerZone;
            return this;
        }

        /**
         * @param zone The Compute Engine [availability zone](https://cloud.google.com/compute/docs/regions-zones/regions-zones) for launching worker instances to run your pipeline. In the future, worker_zone will take precedence.
         * 
         * @return builder
         * 
         */
        public Builder zone(String zone) {
            $.zone = zone;
            return this;
        }

        public GoogleCloudDatapipelinesV1FlexTemplateRuntimeEnvironmentResponse build() {
            $.additionalExperiments = Objects.requireNonNull($.additionalExperiments, "expected parameter 'additionalExperiments' to be non-null");
            $.additionalUserLabels = Objects.requireNonNull($.additionalUserLabels, "expected parameter 'additionalUserLabels' to be non-null");
            $.enableStreamingEngine = Objects.requireNonNull($.enableStreamingEngine, "expected parameter 'enableStreamingEngine' to be non-null");
            $.flexrsGoal = Objects.requireNonNull($.flexrsGoal, "expected parameter 'flexrsGoal' to be non-null");
            $.ipConfiguration = Objects.requireNonNull($.ipConfiguration, "expected parameter 'ipConfiguration' to be non-null");
            $.kmsKeyName = Objects.requireNonNull($.kmsKeyName, "expected parameter 'kmsKeyName' to be non-null");
            $.machineType = Objects.requireNonNull($.machineType, "expected parameter 'machineType' to be non-null");
            $.maxWorkers = Objects.requireNonNull($.maxWorkers, "expected parameter 'maxWorkers' to be non-null");
            $.network = Objects.requireNonNull($.network, "expected parameter 'network' to be non-null");
            $.numWorkers = Objects.requireNonNull($.numWorkers, "expected parameter 'numWorkers' to be non-null");
            $.serviceAccountEmail = Objects.requireNonNull($.serviceAccountEmail, "expected parameter 'serviceAccountEmail' to be non-null");
            $.subnetwork = Objects.requireNonNull($.subnetwork, "expected parameter 'subnetwork' to be non-null");
            $.tempLocation = Objects.requireNonNull($.tempLocation, "expected parameter 'tempLocation' to be non-null");
            $.workerRegion = Objects.requireNonNull($.workerRegion, "expected parameter 'workerRegion' to be non-null");
            $.workerZone = Objects.requireNonNull($.workerZone, "expected parameter 'workerZone' to be non-null");
            $.zone = Objects.requireNonNull($.zone, "expected parameter 'zone' to be non-null");
            return $;
        }
    }

}
