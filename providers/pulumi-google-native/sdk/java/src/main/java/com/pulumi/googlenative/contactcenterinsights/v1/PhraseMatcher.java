// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.contactcenterinsights.v1;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.googlenative.Utilities;
import com.pulumi.googlenative.contactcenterinsights.v1.PhraseMatcherArgs;
import com.pulumi.googlenative.contactcenterinsights.v1.outputs.GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroupResponse;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * Creates a phrase matcher.
 * 
 */
@ResourceType(type="google-native:contactcenterinsights/v1:PhraseMatcher")
public class PhraseMatcher extends com.pulumi.resources.CustomResource {
    /**
     * The most recent time at which the activation status was updated.
     * 
     */
    @Export(name="activationUpdateTime", type=String.class, parameters={})
    private Output<String> activationUpdateTime;

    /**
     * @return The most recent time at which the activation status was updated.
     * 
     */
    public Output<String> activationUpdateTime() {
        return this.activationUpdateTime;
    }
    /**
     * Applies the phrase matcher only when it is active.
     * 
     */
    @Export(name="active", type=Boolean.class, parameters={})
    private Output<Boolean> active;

    /**
     * @return Applies the phrase matcher only when it is active.
     * 
     */
    public Output<Boolean> active() {
        return this.active;
    }
    /**
     * The human-readable name of the phrase matcher.
     * 
     */
    @Export(name="displayName", type=String.class, parameters={})
    private Output<String> displayName;

    /**
     * @return The human-readable name of the phrase matcher.
     * 
     */
    public Output<String> displayName() {
        return this.displayName;
    }
    @Export(name="location", type=String.class, parameters={})
    private Output<String> location;

    public Output<String> location() {
        return this.location;
    }
    /**
     * The resource name of the phrase matcher. Format: projects/{project}/locations/{location}/phraseMatchers/{phrase_matcher}
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The resource name of the phrase matcher. Format: projects/{project}/locations/{location}/phraseMatchers/{phrase_matcher}
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * A list of phase match rule groups that are included in this matcher.
     * 
     */
    @Export(name="phraseMatchRuleGroups", type=List.class, parameters={GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroupResponse.class})
    private Output<List<GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroupResponse>> phraseMatchRuleGroups;

    /**
     * @return A list of phase match rule groups that are included in this matcher.
     * 
     */
    public Output<List<GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroupResponse>> phraseMatchRuleGroups() {
        return this.phraseMatchRuleGroups;
    }
    @Export(name="project", type=String.class, parameters={})
    private Output<String> project;

    public Output<String> project() {
        return this.project;
    }
    /**
     * The timestamp of when the revision was created. It is also the create time when a new matcher is added.
     * 
     */
    @Export(name="revisionCreateTime", type=String.class, parameters={})
    private Output<String> revisionCreateTime;

    /**
     * @return The timestamp of when the revision was created. It is also the create time when a new matcher is added.
     * 
     */
    public Output<String> revisionCreateTime() {
        return this.revisionCreateTime;
    }
    /**
     * Immutable. The revision ID of the phrase matcher. A new revision is committed whenever the matcher is changed, except when it is activated or deactivated. A server generated random ID will be used. Example: locations/global/phraseMatchers/my-first-matcher@1234567
     * 
     */
    @Export(name="revisionId", type=String.class, parameters={})
    private Output<String> revisionId;

    /**
     * @return Immutable. The revision ID of the phrase matcher. A new revision is committed whenever the matcher is changed, except when it is activated or deactivated. A server generated random ID will be used. Example: locations/global/phraseMatchers/my-first-matcher@1234567
     * 
     */
    public Output<String> revisionId() {
        return this.revisionId;
    }
    /**
     * The role whose utterances the phrase matcher should be matched against. If the role is ROLE_UNSPECIFIED it will be matched against any utterances in the transcript.
     * 
     */
    @Export(name="roleMatch", type=String.class, parameters={})
    private Output<String> roleMatch;

    /**
     * @return The role whose utterances the phrase matcher should be matched against. If the role is ROLE_UNSPECIFIED it will be matched against any utterances in the transcript.
     * 
     */
    public Output<String> roleMatch() {
        return this.roleMatch;
    }
    /**
     * The type of this phrase matcher.
     * 
     */
    @Export(name="type", type=String.class, parameters={})
    private Output<String> type;

    /**
     * @return The type of this phrase matcher.
     * 
     */
    public Output<String> type() {
        return this.type;
    }
    /**
     * The most recent time at which the phrase matcher was updated.
     * 
     */
    @Export(name="updateTime", type=String.class, parameters={})
    private Output<String> updateTime;

    /**
     * @return The most recent time at which the phrase matcher was updated.
     * 
     */
    public Output<String> updateTime() {
        return this.updateTime;
    }
    /**
     * The customized version tag to use for the phrase matcher. If not specified, it will default to `revision_id`.
     * 
     */
    @Export(name="versionTag", type=String.class, parameters={})
    private Output<String> versionTag;

    /**
     * @return The customized version tag to use for the phrase matcher. If not specified, it will default to `revision_id`.
     * 
     */
    public Output<String> versionTag() {
        return this.versionTag;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public PhraseMatcher(String name) {
        this(name, PhraseMatcherArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public PhraseMatcher(String name, PhraseMatcherArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public PhraseMatcher(String name, PhraseMatcherArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("google-native:contactcenterinsights/v1:PhraseMatcher", name, args == null ? PhraseMatcherArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private PhraseMatcher(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("google-native:contactcenterinsights/v1:PhraseMatcher", name, null, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static PhraseMatcher get(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new PhraseMatcher(name, id, options);
    }
}
