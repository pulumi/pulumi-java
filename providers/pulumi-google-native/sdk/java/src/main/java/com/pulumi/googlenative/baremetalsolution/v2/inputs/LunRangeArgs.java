// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.baremetalsolution.v2.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * A LUN(Logical Unit Number) range.
 * 
 */
public final class LunRangeArgs extends com.pulumi.resources.ResourceArgs {

    public static final LunRangeArgs Empty = new LunRangeArgs();

    /**
     * Number of LUNs to create.
     * 
     */
    @Import(name="quantity")
    private @Nullable Output<Integer> quantity;

    /**
     * @return Number of LUNs to create.
     * 
     */
    public Optional<Output<Integer>> quantity() {
        return Optional.ofNullable(this.quantity);
    }

    /**
     * The requested size of each LUN, in GB.
     * 
     */
    @Import(name="sizeGb")
    private @Nullable Output<Integer> sizeGb;

    /**
     * @return The requested size of each LUN, in GB.
     * 
     */
    public Optional<Output<Integer>> sizeGb() {
        return Optional.ofNullable(this.sizeGb);
    }

    private LunRangeArgs() {}

    private LunRangeArgs(LunRangeArgs $) {
        this.quantity = $.quantity;
        this.sizeGb = $.sizeGb;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LunRangeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LunRangeArgs $;

        public Builder() {
            $ = new LunRangeArgs();
        }

        public Builder(LunRangeArgs defaults) {
            $ = new LunRangeArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param quantity Number of LUNs to create.
         * 
         * @return builder
         * 
         */
        public Builder quantity(@Nullable Output<Integer> quantity) {
            $.quantity = quantity;
            return this;
        }

        /**
         * @param quantity Number of LUNs to create.
         * 
         * @return builder
         * 
         */
        public Builder quantity(Integer quantity) {
            return quantity(Output.of(quantity));
        }

        /**
         * @param sizeGb The requested size of each LUN, in GB.
         * 
         * @return builder
         * 
         */
        public Builder sizeGb(@Nullable Output<Integer> sizeGb) {
            $.sizeGb = sizeGb;
            return this;
        }

        /**
         * @param sizeGb The requested size of each LUN, in GB.
         * 
         * @return builder
         * 
         */
        public Builder sizeGb(Integer sizeGb) {
            return sizeGb(Output.of(sizeGb));
        }

        public LunRangeArgs build() {
            return $;
        }
    }

}
