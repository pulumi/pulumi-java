// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.dialogflow_v3;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import com.pulumi.googlenative.dialogflow_v3.inputs.GoogleCloudDialogflowCxV3EventHandlerArgs;
import com.pulumi.googlenative.dialogflow_v3.inputs.GoogleCloudDialogflowCxV3FormArgs;
import com.pulumi.googlenative.dialogflow_v3.inputs.GoogleCloudDialogflowCxV3FulfillmentArgs;
import com.pulumi.googlenative.dialogflow_v3.inputs.GoogleCloudDialogflowCxV3TransitionRouteArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class PageArgs extends com.pulumi.resources.ResourceArgs {

    public static final PageArgs Empty = new PageArgs();

    @Import(name="agentId", required=true)
      private final Output<String> agentId;

    public Output<String> agentId() {
        return this.agentId;
    }

    /**
     * The human-readable name of the page, unique within the agent.
     * 
     */
    @Import(name="displayName", required=true)
      private final Output<String> displayName;

    public Output<String> displayName() {
        return this.displayName;
    }

    /**
     * The fulfillment to call when the session is entering the page.
     * 
     */
    @Import(name="entryFulfillment")
      private final @Nullable Output<GoogleCloudDialogflowCxV3FulfillmentArgs> entryFulfillment;

    public Output<GoogleCloudDialogflowCxV3FulfillmentArgs> entryFulfillment() {
        return this.entryFulfillment == null ? Codegen.empty() : this.entryFulfillment;
    }

    /**
     * Handlers associated with the page to handle events such as webhook errors, no match or no input.
     * 
     */
    @Import(name="eventHandlers")
      private final @Nullable Output<List<GoogleCloudDialogflowCxV3EventHandlerArgs>> eventHandlers;

    public Output<List<GoogleCloudDialogflowCxV3EventHandlerArgs>> eventHandlers() {
        return this.eventHandlers == null ? Codegen.empty() : this.eventHandlers;
    }

    @Import(name="flowId", required=true)
      private final Output<String> flowId;

    public Output<String> flowId() {
        return this.flowId;
    }

    /**
     * The form associated with the page, used for collecting parameters relevant to the page.
     * 
     */
    @Import(name="form")
      private final @Nullable Output<GoogleCloudDialogflowCxV3FormArgs> form;

    public Output<GoogleCloudDialogflowCxV3FormArgs> form() {
        return this.form == null ? Codegen.empty() : this.form;
    }

    @Import(name="languageCode")
      private final @Nullable Output<String> languageCode;

    public Output<String> languageCode() {
        return this.languageCode == null ? Codegen.empty() : this.languageCode;
    }

    @Import(name="location")
      private final @Nullable Output<String> location;

    public Output<String> location() {
        return this.location == null ? Codegen.empty() : this.location;
    }

    /**
     * The unique identifier of the page. Required for the Pages.UpdatePage method. Pages.CreatePage populates the name automatically. Format: `projects//locations//agents//flows//pages/`.
     * 
     */
    @Import(name="name")
      private final @Nullable Output<String> name;

    public Output<String> name() {
        return this.name == null ? Codegen.empty() : this.name;
    }

    @Import(name="project")
      private final @Nullable Output<String> project;

    public Output<String> project() {
        return this.project == null ? Codegen.empty() : this.project;
    }

    /**
     * Ordered list of `TransitionRouteGroups` associated with the page. Transition route groups must be unique within a page. * If multiple transition routes within a page scope refer to the same intent, then the precedence order is: page&#39;s transition route -&gt; page&#39;s transition route group -&gt; flow&#39;s transition routes. * If multiple transition route groups within a page contain the same intent, then the first group in the ordered list takes precedence. Format:`projects//locations//agents//flows//transitionRouteGroups/`.
     * 
     */
    @Import(name="transitionRouteGroups")
      private final @Nullable Output<List<String>> transitionRouteGroups;

    public Output<List<String>> transitionRouteGroups() {
        return this.transitionRouteGroups == null ? Codegen.empty() : this.transitionRouteGroups;
    }

    /**
     * A list of transitions for the transition rules of this page. They route the conversation to another page in the same flow, or another flow. When we are in a certain page, the TransitionRoutes are evalauted in the following order: * TransitionRoutes defined in the page with intent specified. * TransitionRoutes defined in the transition route groups with intent specified. * TransitionRoutes defined in flow with intent specified. * TransitionRoutes defined in the transition route groups with intent specified. * TransitionRoutes defined in the page with only condition specified. * TransitionRoutes defined in the transition route groups with only condition specified.
     * 
     */
    @Import(name="transitionRoutes")
      private final @Nullable Output<List<GoogleCloudDialogflowCxV3TransitionRouteArgs>> transitionRoutes;

    public Output<List<GoogleCloudDialogflowCxV3TransitionRouteArgs>> transitionRoutes() {
        return this.transitionRoutes == null ? Codegen.empty() : this.transitionRoutes;
    }

    public PageArgs(
        Output<String> agentId,
        Output<String> displayName,
        @Nullable Output<GoogleCloudDialogflowCxV3FulfillmentArgs> entryFulfillment,
        @Nullable Output<List<GoogleCloudDialogflowCxV3EventHandlerArgs>> eventHandlers,
        Output<String> flowId,
        @Nullable Output<GoogleCloudDialogflowCxV3FormArgs> form,
        @Nullable Output<String> languageCode,
        @Nullable Output<String> location,
        @Nullable Output<String> name,
        @Nullable Output<String> project,
        @Nullable Output<List<String>> transitionRouteGroups,
        @Nullable Output<List<GoogleCloudDialogflowCxV3TransitionRouteArgs>> transitionRoutes) {
        this.agentId = Objects.requireNonNull(agentId, "expected parameter 'agentId' to be non-null");
        this.displayName = Objects.requireNonNull(displayName, "expected parameter 'displayName' to be non-null");
        this.entryFulfillment = entryFulfillment;
        this.eventHandlers = eventHandlers;
        this.flowId = Objects.requireNonNull(flowId, "expected parameter 'flowId' to be non-null");
        this.form = form;
        this.languageCode = languageCode;
        this.location = location;
        this.name = name;
        this.project = project;
        this.transitionRouteGroups = transitionRouteGroups;
        this.transitionRoutes = transitionRoutes;
    }

    private PageArgs() {
        this.agentId = Codegen.empty();
        this.displayName = Codegen.empty();
        this.entryFulfillment = Codegen.empty();
        this.eventHandlers = Codegen.empty();
        this.flowId = Codegen.empty();
        this.form = Codegen.empty();
        this.languageCode = Codegen.empty();
        this.location = Codegen.empty();
        this.name = Codegen.empty();
        this.project = Codegen.empty();
        this.transitionRouteGroups = Codegen.empty();
        this.transitionRoutes = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PageArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> agentId;
        private Output<String> displayName;
        private @Nullable Output<GoogleCloudDialogflowCxV3FulfillmentArgs> entryFulfillment;
        private @Nullable Output<List<GoogleCloudDialogflowCxV3EventHandlerArgs>> eventHandlers;
        private Output<String> flowId;
        private @Nullable Output<GoogleCloudDialogflowCxV3FormArgs> form;
        private @Nullable Output<String> languageCode;
        private @Nullable Output<String> location;
        private @Nullable Output<String> name;
        private @Nullable Output<String> project;
        private @Nullable Output<List<String>> transitionRouteGroups;
        private @Nullable Output<List<GoogleCloudDialogflowCxV3TransitionRouteArgs>> transitionRoutes;

        public Builder() {
    	      // Empty
        }

        public Builder(PageArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.agentId = defaults.agentId;
    	      this.displayName = defaults.displayName;
    	      this.entryFulfillment = defaults.entryFulfillment;
    	      this.eventHandlers = defaults.eventHandlers;
    	      this.flowId = defaults.flowId;
    	      this.form = defaults.form;
    	      this.languageCode = defaults.languageCode;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.project = defaults.project;
    	      this.transitionRouteGroups = defaults.transitionRouteGroups;
    	      this.transitionRoutes = defaults.transitionRoutes;
        }

        public Builder agentId(Output<String> agentId) {
            this.agentId = Objects.requireNonNull(agentId);
            return this;
        }
        public Builder agentId(String agentId) {
            this.agentId = Output.of(Objects.requireNonNull(agentId));
            return this;
        }
        public Builder displayName(Output<String> displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }
        public Builder displayName(String displayName) {
            this.displayName = Output.of(Objects.requireNonNull(displayName));
            return this;
        }
        public Builder entryFulfillment(@Nullable Output<GoogleCloudDialogflowCxV3FulfillmentArgs> entryFulfillment) {
            this.entryFulfillment = entryFulfillment;
            return this;
        }
        public Builder entryFulfillment(@Nullable GoogleCloudDialogflowCxV3FulfillmentArgs entryFulfillment) {
            this.entryFulfillment = Codegen.ofNullable(entryFulfillment);
            return this;
        }
        public Builder eventHandlers(@Nullable Output<List<GoogleCloudDialogflowCxV3EventHandlerArgs>> eventHandlers) {
            this.eventHandlers = eventHandlers;
            return this;
        }
        public Builder eventHandlers(@Nullable List<GoogleCloudDialogflowCxV3EventHandlerArgs> eventHandlers) {
            this.eventHandlers = Codegen.ofNullable(eventHandlers);
            return this;
        }
        public Builder eventHandlers(GoogleCloudDialogflowCxV3EventHandlerArgs... eventHandlers) {
            return eventHandlers(List.of(eventHandlers));
        }
        public Builder flowId(Output<String> flowId) {
            this.flowId = Objects.requireNonNull(flowId);
            return this;
        }
        public Builder flowId(String flowId) {
            this.flowId = Output.of(Objects.requireNonNull(flowId));
            return this;
        }
        public Builder form(@Nullable Output<GoogleCloudDialogflowCxV3FormArgs> form) {
            this.form = form;
            return this;
        }
        public Builder form(@Nullable GoogleCloudDialogflowCxV3FormArgs form) {
            this.form = Codegen.ofNullable(form);
            return this;
        }
        public Builder languageCode(@Nullable Output<String> languageCode) {
            this.languageCode = languageCode;
            return this;
        }
        public Builder languageCode(@Nullable String languageCode) {
            this.languageCode = Codegen.ofNullable(languageCode);
            return this;
        }
        public Builder location(@Nullable Output<String> location) {
            this.location = location;
            return this;
        }
        public Builder location(@Nullable String location) {
            this.location = Codegen.ofNullable(location);
            return this;
        }
        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }
        public Builder name(@Nullable String name) {
            this.name = Codegen.ofNullable(name);
            return this;
        }
        public Builder project(@Nullable Output<String> project) {
            this.project = project;
            return this;
        }
        public Builder project(@Nullable String project) {
            this.project = Codegen.ofNullable(project);
            return this;
        }
        public Builder transitionRouteGroups(@Nullable Output<List<String>> transitionRouteGroups) {
            this.transitionRouteGroups = transitionRouteGroups;
            return this;
        }
        public Builder transitionRouteGroups(@Nullable List<String> transitionRouteGroups) {
            this.transitionRouteGroups = Codegen.ofNullable(transitionRouteGroups);
            return this;
        }
        public Builder transitionRouteGroups(String... transitionRouteGroups) {
            return transitionRouteGroups(List.of(transitionRouteGroups));
        }
        public Builder transitionRoutes(@Nullable Output<List<GoogleCloudDialogflowCxV3TransitionRouteArgs>> transitionRoutes) {
            this.transitionRoutes = transitionRoutes;
            return this;
        }
        public Builder transitionRoutes(@Nullable List<GoogleCloudDialogflowCxV3TransitionRouteArgs> transitionRoutes) {
            this.transitionRoutes = Codegen.ofNullable(transitionRoutes);
            return this;
        }
        public Builder transitionRoutes(GoogleCloudDialogflowCxV3TransitionRouteArgs... transitionRoutes) {
            return transitionRoutes(List.of(transitionRoutes));
        }        public PageArgs build() {
            return new PageArgs(agentId, displayName, entryFulfillment, eventHandlers, flowId, form, languageCode, location, name, project, transitionRouteGroups, transitionRoutes);
        }
    }
}
