// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.datalabeling.v1beta1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Container of information related to one possible annotation that can be used in a labeling task. For example, an image classification task where images are labeled as `dog` or `cat` must reference an AnnotationSpec for `dog` and an AnnotationSpec for `cat`.
 * 
 */
public final class GoogleCloudDatalabelingV1beta1AnnotationSpecArgs extends com.pulumi.resources.ResourceArgs {

    public static final GoogleCloudDatalabelingV1beta1AnnotationSpecArgs Empty = new GoogleCloudDatalabelingV1beta1AnnotationSpecArgs();

    /**
     * Optional. User-provided description of the annotation specification. The description can be up to 10,000 characters long.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Optional. User-provided description of the annotation specification. The description can be up to 10,000 characters long.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The display name of the AnnotationSpec. Maximum of 64 characters.
     * 
     */
    @Import(name="displayName", required=true)
    private Output<String> displayName;

    /**
     * @return The display name of the AnnotationSpec. Maximum of 64 characters.
     * 
     */
    public Output<String> displayName() {
        return this.displayName;
    }

    private GoogleCloudDatalabelingV1beta1AnnotationSpecArgs() {}

    private GoogleCloudDatalabelingV1beta1AnnotationSpecArgs(GoogleCloudDatalabelingV1beta1AnnotationSpecArgs $) {
        this.description = $.description;
        this.displayName = $.displayName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GoogleCloudDatalabelingV1beta1AnnotationSpecArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GoogleCloudDatalabelingV1beta1AnnotationSpecArgs $;

        public Builder() {
            $ = new GoogleCloudDatalabelingV1beta1AnnotationSpecArgs();
        }

        public Builder(GoogleCloudDatalabelingV1beta1AnnotationSpecArgs defaults) {
            $ = new GoogleCloudDatalabelingV1beta1AnnotationSpecArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param description Optional. User-provided description of the annotation specification. The description can be up to 10,000 characters long.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Optional. User-provided description of the annotation specification. The description can be up to 10,000 characters long.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param displayName The display name of the AnnotationSpec. Maximum of 64 characters.
         * 
         * @return builder
         * 
         */
        public Builder displayName(Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName The display name of the AnnotationSpec. Maximum of 64 characters.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        public GoogleCloudDatalabelingV1beta1AnnotationSpecArgs build() {
            $.displayName = Objects.requireNonNull($.displayName, "expected parameter 'displayName' to be non-null");
            return $;
        }
    }

}
