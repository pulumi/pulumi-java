// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.bigquery_v2.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.bigquery_v2.inputs.ModelReferenceResponse;
import com.pulumi.googlenative.bigquery_v2.inputs.TableReferenceResponse;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class JobConfigurationExtractResponse extends com.pulumi.resources.InvokeArgs {

    public static final JobConfigurationExtractResponse Empty = new JobConfigurationExtractResponse();

    /**
     * [Optional] The compression type to use for exported files. Possible values include GZIP, DEFLATE, SNAPPY, and NONE. The default value is NONE. DEFLATE and SNAPPY are only supported for Avro. Not applicable when extracting models.
     * 
     */
    @Import(name="compression", required=true)
    private String compression;

    /**
     * @return [Optional] The compression type to use for exported files. Possible values include GZIP, DEFLATE, SNAPPY, and NONE. The default value is NONE. DEFLATE and SNAPPY are only supported for Avro. Not applicable when extracting models.
     * 
     */
    public String compression() {
        return this.compression;
    }

    /**
     * [Optional] The exported file format. Possible values include CSV, NEWLINE_DELIMITED_JSON, PARQUET or AVRO for tables and ML_TF_SAVED_MODEL or ML_XGBOOST_BOOSTER for models. The default value for tables is CSV. Tables with nested or repeated fields cannot be exported as CSV. The default value for models is ML_TF_SAVED_MODEL.
     * 
     */
    @Import(name="destinationFormat", required=true)
    private String destinationFormat;

    /**
     * @return [Optional] The exported file format. Possible values include CSV, NEWLINE_DELIMITED_JSON, PARQUET or AVRO for tables and ML_TF_SAVED_MODEL or ML_XGBOOST_BOOSTER for models. The default value for tables is CSV. Tables with nested or repeated fields cannot be exported as CSV. The default value for models is ML_TF_SAVED_MODEL.
     * 
     */
    public String destinationFormat() {
        return this.destinationFormat;
    }

    /**
     * [Pick one] DEPRECATED: Use destinationUris instead, passing only one URI as necessary. The fully-qualified Google Cloud Storage URI where the extracted table should be written.
     * 
     */
    @Import(name="destinationUri", required=true)
    private String destinationUri;

    /**
     * @return [Pick one] DEPRECATED: Use destinationUris instead, passing only one URI as necessary. The fully-qualified Google Cloud Storage URI where the extracted table should be written.
     * 
     */
    public String destinationUri() {
        return this.destinationUri;
    }

    /**
     * [Pick one] A list of fully-qualified Google Cloud Storage URIs where the extracted table should be written.
     * 
     */
    @Import(name="destinationUris", required=true)
    private List<String> destinationUris;

    /**
     * @return [Pick one] A list of fully-qualified Google Cloud Storage URIs where the extracted table should be written.
     * 
     */
    public List<String> destinationUris() {
        return this.destinationUris;
    }

    /**
     * [Optional] Delimiter to use between fields in the exported data. Default is &#39;,&#39;. Not applicable when extracting models.
     * 
     */
    @Import(name="fieldDelimiter", required=true)
    private String fieldDelimiter;

    /**
     * @return [Optional] Delimiter to use between fields in the exported data. Default is &#39;,&#39;. Not applicable when extracting models.
     * 
     */
    public String fieldDelimiter() {
        return this.fieldDelimiter;
    }

    /**
     * [Optional] Whether to print out a header row in the results. Default is true. Not applicable when extracting models.
     * 
     */
    @Import(name="printHeader", required=true)
    private Boolean printHeader;

    /**
     * @return [Optional] Whether to print out a header row in the results. Default is true. Not applicable when extracting models.
     * 
     */
    public Boolean printHeader() {
        return this.printHeader;
    }

    /**
     * A reference to the model being exported.
     * 
     */
    @Import(name="sourceModel", required=true)
    private ModelReferenceResponse sourceModel;

    /**
     * @return A reference to the model being exported.
     * 
     */
    public ModelReferenceResponse sourceModel() {
        return this.sourceModel;
    }

    /**
     * A reference to the table being exported.
     * 
     */
    @Import(name="sourceTable", required=true)
    private TableReferenceResponse sourceTable;

    /**
     * @return A reference to the table being exported.
     * 
     */
    public TableReferenceResponse sourceTable() {
        return this.sourceTable;
    }

    /**
     * [Optional] If destinationFormat is set to &#34;AVRO&#34;, this flag indicates whether to enable extracting applicable column types (such as TIMESTAMP) to their corresponding AVRO logical types (timestamp-micros), instead of only using their raw types (avro-long). Not applicable when extracting models.
     * 
     */
    @Import(name="useAvroLogicalTypes", required=true)
    private Boolean useAvroLogicalTypes;

    /**
     * @return [Optional] If destinationFormat is set to &#34;AVRO&#34;, this flag indicates whether to enable extracting applicable column types (such as TIMESTAMP) to their corresponding AVRO logical types (timestamp-micros), instead of only using their raw types (avro-long). Not applicable when extracting models.
     * 
     */
    public Boolean useAvroLogicalTypes() {
        return this.useAvroLogicalTypes;
    }

    private JobConfigurationExtractResponse() {}

    private JobConfigurationExtractResponse(JobConfigurationExtractResponse $) {
        this.compression = $.compression;
        this.destinationFormat = $.destinationFormat;
        this.destinationUri = $.destinationUri;
        this.destinationUris = $.destinationUris;
        this.fieldDelimiter = $.fieldDelimiter;
        this.printHeader = $.printHeader;
        this.sourceModel = $.sourceModel;
        this.sourceTable = $.sourceTable;
        this.useAvroLogicalTypes = $.useAvroLogicalTypes;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(JobConfigurationExtractResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private JobConfigurationExtractResponse $;

        public Builder() {
            $ = new JobConfigurationExtractResponse();
        }

        public Builder(JobConfigurationExtractResponse defaults) {
            $ = new JobConfigurationExtractResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param compression [Optional] The compression type to use for exported files. Possible values include GZIP, DEFLATE, SNAPPY, and NONE. The default value is NONE. DEFLATE and SNAPPY are only supported for Avro. Not applicable when extracting models.
         * 
         * @return builder
         * 
         */
        public Builder compression(String compression) {
            $.compression = compression;
            return this;
        }

        /**
         * @param destinationFormat [Optional] The exported file format. Possible values include CSV, NEWLINE_DELIMITED_JSON, PARQUET or AVRO for tables and ML_TF_SAVED_MODEL or ML_XGBOOST_BOOSTER for models. The default value for tables is CSV. Tables with nested or repeated fields cannot be exported as CSV. The default value for models is ML_TF_SAVED_MODEL.
         * 
         * @return builder
         * 
         */
        public Builder destinationFormat(String destinationFormat) {
            $.destinationFormat = destinationFormat;
            return this;
        }

        /**
         * @param destinationUri [Pick one] DEPRECATED: Use destinationUris instead, passing only one URI as necessary. The fully-qualified Google Cloud Storage URI where the extracted table should be written.
         * 
         * @return builder
         * 
         */
        public Builder destinationUri(String destinationUri) {
            $.destinationUri = destinationUri;
            return this;
        }

        /**
         * @param destinationUris [Pick one] A list of fully-qualified Google Cloud Storage URIs where the extracted table should be written.
         * 
         * @return builder
         * 
         */
        public Builder destinationUris(List<String> destinationUris) {
            $.destinationUris = destinationUris;
            return this;
        }

        /**
         * @param destinationUris [Pick one] A list of fully-qualified Google Cloud Storage URIs where the extracted table should be written.
         * 
         * @return builder
         * 
         */
        public Builder destinationUris(String... destinationUris) {
            return destinationUris(List.of(destinationUris));
        }

        /**
         * @param fieldDelimiter [Optional] Delimiter to use between fields in the exported data. Default is &#39;,&#39;. Not applicable when extracting models.
         * 
         * @return builder
         * 
         */
        public Builder fieldDelimiter(String fieldDelimiter) {
            $.fieldDelimiter = fieldDelimiter;
            return this;
        }

        /**
         * @param printHeader [Optional] Whether to print out a header row in the results. Default is true. Not applicable when extracting models.
         * 
         * @return builder
         * 
         */
        public Builder printHeader(Boolean printHeader) {
            $.printHeader = printHeader;
            return this;
        }

        /**
         * @param sourceModel A reference to the model being exported.
         * 
         * @return builder
         * 
         */
        public Builder sourceModel(ModelReferenceResponse sourceModel) {
            $.sourceModel = sourceModel;
            return this;
        }

        /**
         * @param sourceTable A reference to the table being exported.
         * 
         * @return builder
         * 
         */
        public Builder sourceTable(TableReferenceResponse sourceTable) {
            $.sourceTable = sourceTable;
            return this;
        }

        /**
         * @param useAvroLogicalTypes [Optional] If destinationFormat is set to &#34;AVRO&#34;, this flag indicates whether to enable extracting applicable column types (such as TIMESTAMP) to their corresponding AVRO logical types (timestamp-micros), instead of only using their raw types (avro-long). Not applicable when extracting models.
         * 
         * @return builder
         * 
         */
        public Builder useAvroLogicalTypes(Boolean useAvroLogicalTypes) {
            $.useAvroLogicalTypes = useAvroLogicalTypes;
            return this;
        }

        public JobConfigurationExtractResponse build() {
            $.compression = Objects.requireNonNull($.compression, "expected parameter 'compression' to be non-null");
            $.destinationFormat = Objects.requireNonNull($.destinationFormat, "expected parameter 'destinationFormat' to be non-null");
            $.destinationUri = Objects.requireNonNull($.destinationUri, "expected parameter 'destinationUri' to be non-null");
            $.destinationUris = Objects.requireNonNull($.destinationUris, "expected parameter 'destinationUris' to be non-null");
            $.fieldDelimiter = Objects.requireNonNull($.fieldDelimiter, "expected parameter 'fieldDelimiter' to be non-null");
            $.printHeader = Objects.requireNonNull($.printHeader, "expected parameter 'printHeader' to be non-null");
            $.sourceModel = Objects.requireNonNull($.sourceModel, "expected parameter 'sourceModel' to be non-null");
            $.sourceTable = Objects.requireNonNull($.sourceTable, "expected parameter 'sourceTable' to be non-null");
            $.useAvroLogicalTypes = Objects.requireNonNull($.useAvroLogicalTypes, "expected parameter 'useAvroLogicalTypes' to be non-null");
            return $;
        }
    }

}
