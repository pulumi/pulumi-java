// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.pubsublite_v1.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * The settings for this topic&#39;s Reservation usage.
 * 
 */
public final class ReservationConfigResponse extends com.pulumi.resources.InvokeArgs {

    public static final ReservationConfigResponse Empty = new ReservationConfigResponse();

    /**
     * The Reservation to use for this topic&#39;s throughput capacity. Structured like: projects/{project_number}/locations/{location}/reservations/{reservation_id}
     * 
     */
    @Import(name="throughputReservation", required=true)
    private String throughputReservation;

    /**
     * @return The Reservation to use for this topic&#39;s throughput capacity. Structured like: projects/{project_number}/locations/{location}/reservations/{reservation_id}
     * 
     */
    public String throughputReservation() {
        return this.throughputReservation;
    }

    private ReservationConfigResponse() {}

    private ReservationConfigResponse(ReservationConfigResponse $) {
        this.throughputReservation = $.throughputReservation;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ReservationConfigResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ReservationConfigResponse $;

        public Builder() {
            $ = new ReservationConfigResponse();
        }

        public Builder(ReservationConfigResponse defaults) {
            $ = new ReservationConfigResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param throughputReservation The Reservation to use for this topic&#39;s throughput capacity. Structured like: projects/{project_number}/locations/{location}/reservations/{reservation_id}
         * 
         * @return builder
         * 
         */
        public Builder throughputReservation(String throughputReservation) {
            $.throughputReservation = throughputReservation;
            return this;
        }

        public ReservationConfigResponse build() {
            $.throughputReservation = Objects.requireNonNull($.throughputReservation, "expected parameter 'throughputReservation' to be non-null");
            return $;
        }
    }

}
