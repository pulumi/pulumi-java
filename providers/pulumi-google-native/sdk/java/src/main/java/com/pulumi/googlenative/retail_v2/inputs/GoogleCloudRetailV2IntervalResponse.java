// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.retail_v2.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Double;
import java.util.Objects;


/**
 * A floating point interval.
 * 
 */
public final class GoogleCloudRetailV2IntervalResponse extends com.pulumi.resources.InvokeArgs {

    public static final GoogleCloudRetailV2IntervalResponse Empty = new GoogleCloudRetailV2IntervalResponse();

    /**
     * Exclusive upper bound.
     * 
     */
    @Import(name="exclusiveMaximum", required=true)
    private Double exclusiveMaximum;

    /**
     * @return Exclusive upper bound.
     * 
     */
    public Double exclusiveMaximum() {
        return this.exclusiveMaximum;
    }

    /**
     * Exclusive lower bound.
     * 
     */
    @Import(name="exclusiveMinimum", required=true)
    private Double exclusiveMinimum;

    /**
     * @return Exclusive lower bound.
     * 
     */
    public Double exclusiveMinimum() {
        return this.exclusiveMinimum;
    }

    /**
     * Inclusive upper bound.
     * 
     */
    @Import(name="maximum", required=true)
    private Double maximum;

    /**
     * @return Inclusive upper bound.
     * 
     */
    public Double maximum() {
        return this.maximum;
    }

    /**
     * Inclusive lower bound.
     * 
     */
    @Import(name="minimum", required=true)
    private Double minimum;

    /**
     * @return Inclusive lower bound.
     * 
     */
    public Double minimum() {
        return this.minimum;
    }

    private GoogleCloudRetailV2IntervalResponse() {}

    private GoogleCloudRetailV2IntervalResponse(GoogleCloudRetailV2IntervalResponse $) {
        this.exclusiveMaximum = $.exclusiveMaximum;
        this.exclusiveMinimum = $.exclusiveMinimum;
        this.maximum = $.maximum;
        this.minimum = $.minimum;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GoogleCloudRetailV2IntervalResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GoogleCloudRetailV2IntervalResponse $;

        public Builder() {
            $ = new GoogleCloudRetailV2IntervalResponse();
        }

        public Builder(GoogleCloudRetailV2IntervalResponse defaults) {
            $ = new GoogleCloudRetailV2IntervalResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param exclusiveMaximum Exclusive upper bound.
         * 
         * @return builder
         * 
         */
        public Builder exclusiveMaximum(Double exclusiveMaximum) {
            $.exclusiveMaximum = exclusiveMaximum;
            return this;
        }

        /**
         * @param exclusiveMinimum Exclusive lower bound.
         * 
         * @return builder
         * 
         */
        public Builder exclusiveMinimum(Double exclusiveMinimum) {
            $.exclusiveMinimum = exclusiveMinimum;
            return this;
        }

        /**
         * @param maximum Inclusive upper bound.
         * 
         * @return builder
         * 
         */
        public Builder maximum(Double maximum) {
            $.maximum = maximum;
            return this;
        }

        /**
         * @param minimum Inclusive lower bound.
         * 
         * @return builder
         * 
         */
        public Builder minimum(Double minimum) {
            $.minimum = minimum;
            return this;
        }

        public GoogleCloudRetailV2IntervalResponse build() {
            $.exclusiveMaximum = Objects.requireNonNull($.exclusiveMaximum, "expected parameter 'exclusiveMaximum' to be non-null");
            $.exclusiveMinimum = Objects.requireNonNull($.exclusiveMinimum, "expected parameter 'exclusiveMinimum' to be non-null");
            $.maximum = Objects.requireNonNull($.maximum, "expected parameter 'maximum' to be non-null");
            $.minimum = Objects.requireNonNull($.minimum, "expected parameter 'minimum' to be non-null");
            return $;
        }
    }

}
