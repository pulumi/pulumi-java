// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.networkmanagement_v1beta1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.networkmanagement_v1beta1.enums.EndpointNetworkType;
import com.pulumi.googlenative.networkmanagement_v1beta1.inputs.CloudFunctionEndpointArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Source or destination of the Connectivity Test.
 * 
 */
public final class EndpointArgs extends com.pulumi.resources.ResourceArgs {

    public static final EndpointArgs Empty = new EndpointArgs();

    /**
     * A [Cloud function](https://cloud.google.com/functions).
     * 
     */
    @Import(name="cloudFunction")
    private @Nullable Output<CloudFunctionEndpointArgs> cloudFunction;

    public Optional<Output<CloudFunctionEndpointArgs>> cloudFunction() {
        return Optional.ofNullable(this.cloudFunction);
    }

    /**
     * A [Cloud SQL](https://cloud.google.com/sql) instance URI.
     * 
     */
    @Import(name="cloudSqlInstance")
    private @Nullable Output<String> cloudSqlInstance;

    public Optional<Output<String>> cloudSqlInstance() {
        return Optional.ofNullable(this.cloudSqlInstance);
    }

    /**
     * A cluster URI for [Google Kubernetes Engine master](https://cloud.google.com/kubernetes-engine/docs/concepts/cluster-architecture).
     * 
     */
    @Import(name="gkeMasterCluster")
    private @Nullable Output<String> gkeMasterCluster;

    public Optional<Output<String>> gkeMasterCluster() {
        return Optional.ofNullable(this.gkeMasterCluster);
    }

    /**
     * A Compute Engine instance URI.
     * 
     */
    @Import(name="instance")
    private @Nullable Output<String> instance;

    public Optional<Output<String>> instance() {
        return Optional.ofNullable(this.instance);
    }

    /**
     * The IP address of the endpoint, which can be an external or internal IP. An IPv6 address is only allowed when the test&#39;s destination is a [global load balancer VIP](https://cloud.google.com/load-balancing/docs/load-balancing-overview).
     * 
     */
    @Import(name="ipAddress")
    private @Nullable Output<String> ipAddress;

    public Optional<Output<String>> ipAddress() {
        return Optional.ofNullable(this.ipAddress);
    }

    /**
     * A Compute Engine network URI.
     * 
     */
    @Import(name="network")
    private @Nullable Output<String> network;

    public Optional<Output<String>> network() {
        return Optional.ofNullable(this.network);
    }

    /**
     * Type of the network where the endpoint is located. Applicable only to source endpoint, as destination network type can be inferred from the source.
     * 
     */
    @Import(name="networkType")
    private @Nullable Output<EndpointNetworkType> networkType;

    public Optional<Output<EndpointNetworkType>> networkType() {
        return Optional.ofNullable(this.networkType);
    }

    /**
     * The IP protocol port of the endpoint. Only applicable when protocol is TCP or UDP.
     * 
     */
    @Import(name="port")
    private @Nullable Output<Integer> port;

    public Optional<Output<Integer>> port() {
        return Optional.ofNullable(this.port);
    }

    /**
     * Project ID where the endpoint is located. The Project ID can be derived from the URI if you provide a VM instance or network URI. The following are two cases where you must provide the project ID: 1. Only the IP address is specified, and the IP address is within a GCP project. 2. When you are using Shared VPC and the IP address that you provide is from the service project. In this case, the network that the IP address resides in is defined in the host project.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    private EndpointArgs() {}

    private EndpointArgs(EndpointArgs $) {
        this.cloudFunction = $.cloudFunction;
        this.cloudSqlInstance = $.cloudSqlInstance;
        this.gkeMasterCluster = $.gkeMasterCluster;
        this.instance = $.instance;
        this.ipAddress = $.ipAddress;
        this.network = $.network;
        this.networkType = $.networkType;
        this.port = $.port;
        this.project = $.project;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EndpointArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EndpointArgs $;

        public Builder() {
            $ = new EndpointArgs();
        }

        public Builder(EndpointArgs defaults) {
            $ = new EndpointArgs(Objects.requireNonNull(defaults));
        }

        public Builder cloudFunction(@Nullable Output<CloudFunctionEndpointArgs> cloudFunction) {
            $.cloudFunction = cloudFunction;
            return this;
        }

        public Builder cloudFunction(CloudFunctionEndpointArgs cloudFunction) {
            return cloudFunction(Output.of(cloudFunction));
        }

        public Builder cloudSqlInstance(@Nullable Output<String> cloudSqlInstance) {
            $.cloudSqlInstance = cloudSqlInstance;
            return this;
        }

        public Builder cloudSqlInstance(String cloudSqlInstance) {
            return cloudSqlInstance(Output.of(cloudSqlInstance));
        }

        public Builder gkeMasterCluster(@Nullable Output<String> gkeMasterCluster) {
            $.gkeMasterCluster = gkeMasterCluster;
            return this;
        }

        public Builder gkeMasterCluster(String gkeMasterCluster) {
            return gkeMasterCluster(Output.of(gkeMasterCluster));
        }

        public Builder instance(@Nullable Output<String> instance) {
            $.instance = instance;
            return this;
        }

        public Builder instance(String instance) {
            return instance(Output.of(instance));
        }

        public Builder ipAddress(@Nullable Output<String> ipAddress) {
            $.ipAddress = ipAddress;
            return this;
        }

        public Builder ipAddress(String ipAddress) {
            return ipAddress(Output.of(ipAddress));
        }

        public Builder network(@Nullable Output<String> network) {
            $.network = network;
            return this;
        }

        public Builder network(String network) {
            return network(Output.of(network));
        }

        public Builder networkType(@Nullable Output<EndpointNetworkType> networkType) {
            $.networkType = networkType;
            return this;
        }

        public Builder networkType(EndpointNetworkType networkType) {
            return networkType(Output.of(networkType));
        }

        public Builder port(@Nullable Output<Integer> port) {
            $.port = port;
            return this;
        }

        public Builder port(Integer port) {
            return port(Output.of(port));
        }

        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        public Builder project(String project) {
            return project(Output.of(project));
        }

        public EndpointArgs build() {
            return $;
        }
    }

}
