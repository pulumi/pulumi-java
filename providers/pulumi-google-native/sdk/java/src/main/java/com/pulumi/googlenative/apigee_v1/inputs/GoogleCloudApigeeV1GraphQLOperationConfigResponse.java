// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.apigee_v1.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.apigee_v1.inputs.GoogleCloudApigeeV1AttributeResponse;
import com.pulumi.googlenative.apigee_v1.inputs.GoogleCloudApigeeV1GraphQLOperationResponse;
import com.pulumi.googlenative.apigee_v1.inputs.GoogleCloudApigeeV1QuotaResponse;
import java.lang.String;
import java.util.List;
import java.util.Objects;


/**
 * Binds the resources in a proxy or remote service with the GraphQL operation and its associated quota enforcement.
 * 
 */
public final class GoogleCloudApigeeV1GraphQLOperationConfigResponse extends com.pulumi.resources.InvokeArgs {

    public static final GoogleCloudApigeeV1GraphQLOperationConfigResponse Empty = new GoogleCloudApigeeV1GraphQLOperationConfigResponse();

    /**
     * Name of the API proxy endpoint or remote service with which the GraphQL operation and quota are associated.
     * 
     */
    @Import(name="apiSource", required=true)
    private String apiSource;

    /**
     * @return Name of the API proxy endpoint or remote service with which the GraphQL operation and quota are associated.
     * 
     */
    public String apiSource() {
        return this.apiSource;
    }

    /**
     * Custom attributes associated with the operation.
     * 
     */
    @Import(name="attributes", required=true)
    private List<GoogleCloudApigeeV1AttributeResponse> attributes;

    /**
     * @return Custom attributes associated with the operation.
     * 
     */
    public List<GoogleCloudApigeeV1AttributeResponse> attributes() {
        return this.attributes;
    }

    /**
     * List of GraphQL name/operation type pairs for the proxy or remote service to which quota will be applied. If only operation types are specified, the quota will be applied to all GraphQL requests irrespective of the GraphQL name. **Note**: Currently, you can specify only a single GraphQLOperation. Specifying more than one will cause the operation to fail.
     * 
     */
    @Import(name="operations", required=true)
    private List<GoogleCloudApigeeV1GraphQLOperationResponse> operations;

    /**
     * @return List of GraphQL name/operation type pairs for the proxy or remote service to which quota will be applied. If only operation types are specified, the quota will be applied to all GraphQL requests irrespective of the GraphQL name. **Note**: Currently, you can specify only a single GraphQLOperation. Specifying more than one will cause the operation to fail.
     * 
     */
    public List<GoogleCloudApigeeV1GraphQLOperationResponse> operations() {
        return this.operations;
    }

    /**
     * Quota parameters to be enforced for the resources, methods, and API source combination. If none are specified, quota enforcement will not be done.
     * 
     */
    @Import(name="quota", required=true)
    private GoogleCloudApigeeV1QuotaResponse quota;

    /**
     * @return Quota parameters to be enforced for the resources, methods, and API source combination. If none are specified, quota enforcement will not be done.
     * 
     */
    public GoogleCloudApigeeV1QuotaResponse quota() {
        return this.quota;
    }

    private GoogleCloudApigeeV1GraphQLOperationConfigResponse() {}

    private GoogleCloudApigeeV1GraphQLOperationConfigResponse(GoogleCloudApigeeV1GraphQLOperationConfigResponse $) {
        this.apiSource = $.apiSource;
        this.attributes = $.attributes;
        this.operations = $.operations;
        this.quota = $.quota;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GoogleCloudApigeeV1GraphQLOperationConfigResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GoogleCloudApigeeV1GraphQLOperationConfigResponse $;

        public Builder() {
            $ = new GoogleCloudApigeeV1GraphQLOperationConfigResponse();
        }

        public Builder(GoogleCloudApigeeV1GraphQLOperationConfigResponse defaults) {
            $ = new GoogleCloudApigeeV1GraphQLOperationConfigResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param apiSource Name of the API proxy endpoint or remote service with which the GraphQL operation and quota are associated.
         * 
         * @return builder
         * 
         */
        public Builder apiSource(String apiSource) {
            $.apiSource = apiSource;
            return this;
        }

        /**
         * @param attributes Custom attributes associated with the operation.
         * 
         * @return builder
         * 
         */
        public Builder attributes(List<GoogleCloudApigeeV1AttributeResponse> attributes) {
            $.attributes = attributes;
            return this;
        }

        /**
         * @param attributes Custom attributes associated with the operation.
         * 
         * @return builder
         * 
         */
        public Builder attributes(GoogleCloudApigeeV1AttributeResponse... attributes) {
            return attributes(List.of(attributes));
        }

        /**
         * @param operations List of GraphQL name/operation type pairs for the proxy or remote service to which quota will be applied. If only operation types are specified, the quota will be applied to all GraphQL requests irrespective of the GraphQL name. **Note**: Currently, you can specify only a single GraphQLOperation. Specifying more than one will cause the operation to fail.
         * 
         * @return builder
         * 
         */
        public Builder operations(List<GoogleCloudApigeeV1GraphQLOperationResponse> operations) {
            $.operations = operations;
            return this;
        }

        /**
         * @param operations List of GraphQL name/operation type pairs for the proxy or remote service to which quota will be applied. If only operation types are specified, the quota will be applied to all GraphQL requests irrespective of the GraphQL name. **Note**: Currently, you can specify only a single GraphQLOperation. Specifying more than one will cause the operation to fail.
         * 
         * @return builder
         * 
         */
        public Builder operations(GoogleCloudApigeeV1GraphQLOperationResponse... operations) {
            return operations(List.of(operations));
        }

        /**
         * @param quota Quota parameters to be enforced for the resources, methods, and API source combination. If none are specified, quota enforcement will not be done.
         * 
         * @return builder
         * 
         */
        public Builder quota(GoogleCloudApigeeV1QuotaResponse quota) {
            $.quota = quota;
            return this;
        }

        public GoogleCloudApigeeV1GraphQLOperationConfigResponse build() {
            $.apiSource = Objects.requireNonNull($.apiSource, "expected parameter 'apiSource' to be non-null");
            $.attributes = Objects.requireNonNull($.attributes, "expected parameter 'attributes' to be non-null");
            $.operations = Objects.requireNonNull($.operations, "expected parameter 'operations' to be non-null");
            $.quota = Objects.requireNonNull($.quota, "expected parameter 'quota' to be non-null");
            return $;
        }
    }

}
