// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.containeranalysis_v1beta1.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.containeranalysis_v1beta1.inputs.FingerprintResponse;
import java.lang.String;
import java.util.Objects;


/**
 * Basis describes the base image portion (Note) of the DockerImage relationship. Linked occurrences are derived from this or an equivalent image via: FROM Or an equivalent reference, e.g. a tag of the resource_url.
 * 
 */
public final class BasisResponse extends com.pulumi.resources.InvokeArgs {

    public static final BasisResponse Empty = new BasisResponse();

    /**
     * Immutable. The fingerprint of the base image.
     * 
     */
    @Import(name="fingerprint", required=true)
      private final FingerprintResponse fingerprint;

    public FingerprintResponse fingerprint() {
        return this.fingerprint;
    }

    /**
     * Immutable. The resource_url for the resource representing the basis of associated occurrence images.
     * 
     */
    @Import(name="resourceUrl", required=true)
      private final String resourceUrl;

    public String resourceUrl() {
        return this.resourceUrl;
    }

    public BasisResponse(
        FingerprintResponse fingerprint,
        String resourceUrl) {
        this.fingerprint = Objects.requireNonNull(fingerprint, "expected parameter 'fingerprint' to be non-null");
        this.resourceUrl = Objects.requireNonNull(resourceUrl, "expected parameter 'resourceUrl' to be non-null");
    }

    private BasisResponse() {
        this.fingerprint = null;
        this.resourceUrl = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BasisResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FingerprintResponse fingerprint;
        private String resourceUrl;

        public Builder() {
    	      // Empty
        }

        public Builder(BasisResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.fingerprint = defaults.fingerprint;
    	      this.resourceUrl = defaults.resourceUrl;
        }

        public Builder fingerprint(FingerprintResponse fingerprint) {
            this.fingerprint = Objects.requireNonNull(fingerprint);
            return this;
        }
        public Builder resourceUrl(String resourceUrl) {
            this.resourceUrl = Objects.requireNonNull(resourceUrl);
            return this;
        }        public BasisResponse build() {
            return new BasisResponse(fingerprint, resourceUrl);
        }
    }
}
