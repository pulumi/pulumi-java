// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.dataplex.v1;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.googlenative.Utilities;
import com.pulumi.googlenative.dataplex.v1.EnvironmentArgs;
import com.pulumi.googlenative.dataplex.v1.outputs.GoogleCloudDataplexV1EnvironmentEndpointsResponse;
import com.pulumi.googlenative.dataplex.v1.outputs.GoogleCloudDataplexV1EnvironmentInfrastructureSpecResponse;
import com.pulumi.googlenative.dataplex.v1.outputs.GoogleCloudDataplexV1EnvironmentSessionSpecResponse;
import com.pulumi.googlenative.dataplex.v1.outputs.GoogleCloudDataplexV1EnvironmentSessionStatusResponse;
import java.lang.String;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Create an environment resource.
 * Auto-naming is currently not supported for this resource.
 * 
 */
@ResourceType(type="google-native:dataplex/v1:Environment")
public class Environment extends com.pulumi.resources.CustomResource {
    /**
     * Environment creation time.
     * 
     */
    @Export(name="createTime", type=String.class, parameters={})
    private Output<String> createTime;

    /**
     * @return Environment creation time.
     * 
     */
    public Output<String> createTime() {
        return this.createTime;
    }
    /**
     * Optional. Description of the environment.
     * 
     */
    @Export(name="description", type=String.class, parameters={})
    private Output<String> description;

    /**
     * @return Optional. Description of the environment.
     * 
     */
    public Output<String> description() {
        return this.description;
    }
    /**
     * Optional. User friendly display name.
     * 
     */
    @Export(name="displayName", type=String.class, parameters={})
    private Output<String> displayName;

    /**
     * @return Optional. User friendly display name.
     * 
     */
    public Output<String> displayName() {
        return this.displayName;
    }
    /**
     * URI Endpoints to access sessions associated with the Environment.
     * 
     */
    @Export(name="endpoints", type=GoogleCloudDataplexV1EnvironmentEndpointsResponse.class, parameters={})
    private Output<GoogleCloudDataplexV1EnvironmentEndpointsResponse> endpoints;

    /**
     * @return URI Endpoints to access sessions associated with the Environment.
     * 
     */
    public Output<GoogleCloudDataplexV1EnvironmentEndpointsResponse> endpoints() {
        return this.endpoints;
    }
    /**
     * Required. Environment identifier. * Must contain only lowercase letters, numbers and hyphens. * Must start with a letter. * Must be between 1-63 characters. * Must end with a number or a letter. * Must be unique within the lake.
     * 
     */
    @Export(name="environmentId", type=String.class, parameters={})
    private Output<String> environmentId;

    /**
     * @return Required. Environment identifier. * Must contain only lowercase letters, numbers and hyphens. * Must start with a letter. * Must be between 1-63 characters. * Must end with a number or a letter. * Must be unique within the lake.
     * 
     */
    public Output<String> environmentId() {
        return this.environmentId;
    }
    /**
     * Infrastructure specification for the Environment.
     * 
     */
    @Export(name="infrastructureSpec", type=GoogleCloudDataplexV1EnvironmentInfrastructureSpecResponse.class, parameters={})
    private Output<GoogleCloudDataplexV1EnvironmentInfrastructureSpecResponse> infrastructureSpec;

    /**
     * @return Infrastructure specification for the Environment.
     * 
     */
    public Output<GoogleCloudDataplexV1EnvironmentInfrastructureSpecResponse> infrastructureSpec() {
        return this.infrastructureSpec;
    }
    /**
     * Optional. User defined labels for the environment.
     * 
     */
    @Export(name="labels", type=Map.class, parameters={String.class, String.class})
    private Output<Map<String,String>> labels;

    /**
     * @return Optional. User defined labels for the environment.
     * 
     */
    public Output<Map<String,String>> labels() {
        return this.labels;
    }
    @Export(name="lakeId", type=String.class, parameters={})
    private Output<String> lakeId;

    public Output<String> lakeId() {
        return this.lakeId;
    }
    @Export(name="location", type=String.class, parameters={})
    private Output<String> location;

    public Output<String> location() {
        return this.location;
    }
    /**
     * The relative resource name of the environment, of the form: projects/{project_id}/locations/{location_id}/lakes/{lake_id}/environment/{environment_id}
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The relative resource name of the environment, of the form: projects/{project_id}/locations/{location_id}/lakes/{lake_id}/environment/{environment_id}
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    @Export(name="project", type=String.class, parameters={})
    private Output<String> project;

    public Output<String> project() {
        return this.project;
    }
    /**
     * Optional. Configuration for sessions created for this environment.
     * 
     */
    @Export(name="sessionSpec", type=GoogleCloudDataplexV1EnvironmentSessionSpecResponse.class, parameters={})
    private Output<GoogleCloudDataplexV1EnvironmentSessionSpecResponse> sessionSpec;

    /**
     * @return Optional. Configuration for sessions created for this environment.
     * 
     */
    public Output<GoogleCloudDataplexV1EnvironmentSessionSpecResponse> sessionSpec() {
        return this.sessionSpec;
    }
    /**
     * Status of sessions created for this environment.
     * 
     */
    @Export(name="sessionStatus", type=GoogleCloudDataplexV1EnvironmentSessionStatusResponse.class, parameters={})
    private Output<GoogleCloudDataplexV1EnvironmentSessionStatusResponse> sessionStatus;

    /**
     * @return Status of sessions created for this environment.
     * 
     */
    public Output<GoogleCloudDataplexV1EnvironmentSessionStatusResponse> sessionStatus() {
        return this.sessionStatus;
    }
    /**
     * Current state of the environment.
     * 
     */
    @Export(name="state", type=String.class, parameters={})
    private Output<String> state;

    /**
     * @return Current state of the environment.
     * 
     */
    public Output<String> state() {
        return this.state;
    }
    /**
     * System generated globally unique ID for the environment. This ID will be different if the environment is deleted and re-created with the same name.
     * 
     */
    @Export(name="uid", type=String.class, parameters={})
    private Output<String> uid;

    /**
     * @return System generated globally unique ID for the environment. This ID will be different if the environment is deleted and re-created with the same name.
     * 
     */
    public Output<String> uid() {
        return this.uid;
    }
    /**
     * The time when the environment was last updated.
     * 
     */
    @Export(name="updateTime", type=String.class, parameters={})
    private Output<String> updateTime;

    /**
     * @return The time when the environment was last updated.
     * 
     */
    public Output<String> updateTime() {
        return this.updateTime;
    }
    /**
     * Optional. Only validate the request, but do not perform mutations. The default is false.
     * 
     */
    @Export(name="validateOnly", type=String.class, parameters={})
    private Output</* @Nullable */ String> validateOnly;

    /**
     * @return Optional. Only validate the request, but do not perform mutations. The default is false.
     * 
     */
    public Output<Optional<String>> validateOnly() {
        return Codegen.optional(this.validateOnly);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Environment(String name) {
        this(name, EnvironmentArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Environment(String name, EnvironmentArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Environment(String name, EnvironmentArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("google-native:dataplex/v1:Environment", name, args == null ? EnvironmentArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Environment(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("google-native:dataplex/v1:Environment", name, null, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Environment get(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Environment(name, id, options);
    }
}
