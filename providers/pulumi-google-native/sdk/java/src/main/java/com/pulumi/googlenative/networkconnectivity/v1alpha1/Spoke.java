// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.networkconnectivity.v1alpha1;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.googlenative.Utilities;
import com.pulumi.googlenative.networkconnectivity.v1alpha1.SpokeArgs;
import com.pulumi.googlenative.networkconnectivity.v1alpha1.outputs.RouterApplianceInstanceResponse;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Creates a new Spoke in a given project and location.
 * 
 */
@ResourceType(type="google-native:networkconnectivity/v1alpha1:Spoke")
public class Spoke extends com.pulumi.resources.CustomResource {
    /**
     * The time when the Spoke was created.
     * 
     */
    @Export(name="createTime", type=String.class, parameters={})
    private Output<String> createTime;

    /**
     * @return The time when the Spoke was created.
     * 
     */
    public Output<String> createTime() {
        return this.createTime;
    }
    /**
     * Short description of the spoke resource
     * 
     */
    @Export(name="description", type=String.class, parameters={})
    private Output<String> description;

    /**
     * @return Short description of the spoke resource
     * 
     */
    public Output<String> description() {
        return this.description;
    }
    /**
     * The resource URL of the hub resource that the spoke is attached to
     * 
     */
    @Export(name="hub", type=String.class, parameters={})
    private Output<String> hub;

    /**
     * @return The resource URL of the hub resource that the spoke is attached to
     * 
     */
    public Output<String> hub() {
        return this.hub;
    }
    /**
     * User-defined labels.
     * 
     */
    @Export(name="labels", type=Map.class, parameters={String.class, String.class})
    private Output<Map<String,String>> labels;

    /**
     * @return User-defined labels.
     * 
     */
    public Output<Map<String,String>> labels() {
        return this.labels;
    }
    /**
     * The URIs of linked interconnect attachment resources
     * 
     */
    @Export(name="linkedInterconnectAttachments", type=List.class, parameters={String.class})
    private Output<List<String>> linkedInterconnectAttachments;

    /**
     * @return The URIs of linked interconnect attachment resources
     * 
     */
    public Output<List<String>> linkedInterconnectAttachments() {
        return this.linkedInterconnectAttachments;
    }
    /**
     * The URIs of linked Router appliance resources
     * 
     */
    @Export(name="linkedRouterApplianceInstances", type=List.class, parameters={RouterApplianceInstanceResponse.class})
    private Output<List<RouterApplianceInstanceResponse>> linkedRouterApplianceInstances;

    /**
     * @return The URIs of linked Router appliance resources
     * 
     */
    public Output<List<RouterApplianceInstanceResponse>> linkedRouterApplianceInstances() {
        return this.linkedRouterApplianceInstances;
    }
    /**
     * The URIs of linked VPN tunnel resources
     * 
     */
    @Export(name="linkedVpnTunnels", type=List.class, parameters={String.class})
    private Output<List<String>> linkedVpnTunnels;

    /**
     * @return The URIs of linked VPN tunnel resources
     * 
     */
    public Output<List<String>> linkedVpnTunnels() {
        return this.linkedVpnTunnels;
    }
    @Export(name="location", type=String.class, parameters={})
    private Output<String> location;

    public Output<String> location() {
        return this.location;
    }
    /**
     * Immutable. The name of a Spoke resource.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return Immutable. The name of a Spoke resource.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    @Export(name="project", type=String.class, parameters={})
    private Output<String> project;

    public Output<String> project() {
        return this.project;
    }
    /**
     * Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and t he request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
     * 
     */
    @Export(name="requestId", type=String.class, parameters={})
    private Output</* @Nullable */ String> requestId;

    /**
     * @return Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and t he request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
     * 
     */
    public Output<Optional<String>> requestId() {
        return Codegen.optional(this.requestId);
    }
    /**
     * Optional. Unique id for the Spoke to create.
     * 
     */
    @Export(name="spokeId", type=String.class, parameters={})
    private Output</* @Nullable */ String> spokeId;

    /**
     * @return Optional. Unique id for the Spoke to create.
     * 
     */
    public Output<Optional<String>> spokeId() {
        return Codegen.optional(this.spokeId);
    }
    /**
     * The current lifecycle state of this Hub.
     * 
     */
    @Export(name="state", type=String.class, parameters={})
    private Output<String> state;

    /**
     * @return The current lifecycle state of this Hub.
     * 
     */
    public Output<String> state() {
        return this.state;
    }
    /**
     * Google-generated UUID for this resource. This is unique across all Spoke resources. If a Spoke resource is deleted and another with the same name is created, it gets a different unique_id.
     * 
     */
    @Export(name="uniqueId", type=String.class, parameters={})
    private Output<String> uniqueId;

    /**
     * @return Google-generated UUID for this resource. This is unique across all Spoke resources. If a Spoke resource is deleted and another with the same name is created, it gets a different unique_id.
     * 
     */
    public Output<String> uniqueId() {
        return this.uniqueId;
    }
    /**
     * The time when the Spoke was updated.
     * 
     */
    @Export(name="updateTime", type=String.class, parameters={})
    private Output<String> updateTime;

    /**
     * @return The time when the Spoke was updated.
     * 
     */
    public Output<String> updateTime() {
        return this.updateTime;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Spoke(String name) {
        this(name, SpokeArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Spoke(String name, @Nullable SpokeArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Spoke(String name, @Nullable SpokeArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("google-native:networkconnectivity/v1alpha1:Spoke", name, args == null ? SpokeArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Spoke(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("google-native:networkconnectivity/v1alpha1:Spoke", name, null, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Spoke get(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Spoke(name, id, options);
    }
}
