// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.dataflow_v1b3.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Metadata for a Datastore connector used by the job.
 * 
 */
public final class DatastoreIODetailsArgs extends com.pulumi.resources.ResourceArgs {

    public static final DatastoreIODetailsArgs Empty = new DatastoreIODetailsArgs();

    /**
     * Namespace used in the connection.
     * 
     */
    @Import(name="namespace")
      private final @Nullable Output<String> namespace;

    public Output<String> namespace() {
        return this.namespace == null ? Codegen.empty() : this.namespace;
    }

    /**
     * ProjectId accessed in the connection.
     * 
     */
    @Import(name="project")
      private final @Nullable Output<String> project;

    public Output<String> project() {
        return this.project == null ? Codegen.empty() : this.project;
    }

    public DatastoreIODetailsArgs(
        @Nullable Output<String> namespace,
        @Nullable Output<String> project) {
        this.namespace = namespace;
        this.project = project;
    }

    private DatastoreIODetailsArgs() {
        this.namespace = Codegen.empty();
        this.project = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DatastoreIODetailsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> namespace;
        private @Nullable Output<String> project;

        public Builder() {
    	      // Empty
        }

        public Builder(DatastoreIODetailsArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.namespace = defaults.namespace;
    	      this.project = defaults.project;
        }

        public Builder namespace(@Nullable Output<String> namespace) {
            this.namespace = namespace;
            return this;
        }
        public Builder namespace(@Nullable String namespace) {
            this.namespace = Codegen.ofNullable(namespace);
            return this;
        }
        public Builder project(@Nullable Output<String> project) {
            this.project = project;
            return this;
        }
        public Builder project(@Nullable String project) {
            this.project = Codegen.ofNullable(project);
            return this;
        }        public DatastoreIODetailsArgs build() {
            return new DatastoreIODetailsArgs(namespace, project);
        }
    }
}
