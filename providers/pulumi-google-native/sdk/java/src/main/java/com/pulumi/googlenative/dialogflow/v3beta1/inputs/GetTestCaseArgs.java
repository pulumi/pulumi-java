// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.dialogflow.v3beta1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetTestCaseArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetTestCaseArgs Empty = new GetTestCaseArgs();

    @Import(name="agentId", required=true)
    private Output<String> agentId;

    public Output<String> agentId() {
        return this.agentId;
    }

    @Import(name="location", required=true)
    private Output<String> location;

    public Output<String> location() {
        return this.location;
    }

    @Import(name="project")
    private @Nullable Output<String> project;

    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    @Import(name="testCaseId", required=true)
    private Output<String> testCaseId;

    public Output<String> testCaseId() {
        return this.testCaseId;
    }

    private GetTestCaseArgs() {}

    private GetTestCaseArgs(GetTestCaseArgs $) {
        this.agentId = $.agentId;
        this.location = $.location;
        this.project = $.project;
        this.testCaseId = $.testCaseId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetTestCaseArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetTestCaseArgs $;

        public Builder() {
            $ = new GetTestCaseArgs();
        }

        public Builder(GetTestCaseArgs defaults) {
            $ = new GetTestCaseArgs(Objects.requireNonNull(defaults));
        }

        public Builder agentId(Output<String> agentId) {
            $.agentId = agentId;
            return this;
        }

        public Builder agentId(String agentId) {
            return agentId(Output.of(agentId));
        }

        public Builder location(Output<String> location) {
            $.location = location;
            return this;
        }

        public Builder location(String location) {
            return location(Output.of(location));
        }

        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        public Builder project(String project) {
            return project(Output.of(project));
        }

        public Builder testCaseId(Output<String> testCaseId) {
            $.testCaseId = testCaseId;
            return this;
        }

        public Builder testCaseId(String testCaseId) {
            return testCaseId(Output.of(testCaseId));
        }

        public GetTestCaseArgs build() {
            $.agentId = Objects.requireNonNull($.agentId, "expected parameter 'agentId' to be non-null");
            $.location = Objects.requireNonNull($.location, "expected parameter 'location' to be non-null");
            $.testCaseId = Objects.requireNonNull($.testCaseId, "expected parameter 'testCaseId' to be non-null");
            return $;
        }
    }

}
