// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.osconfig_v1.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.osconfig_v1.inputs.OSPolicyResourcePackageResourceAPTResponse;
import com.pulumi.googlenative.osconfig_v1.inputs.OSPolicyResourcePackageResourceDebResponse;
import com.pulumi.googlenative.osconfig_v1.inputs.OSPolicyResourcePackageResourceGooGetResponse;
import com.pulumi.googlenative.osconfig_v1.inputs.OSPolicyResourcePackageResourceMSIResponse;
import com.pulumi.googlenative.osconfig_v1.inputs.OSPolicyResourcePackageResourceRPMResponse;
import com.pulumi.googlenative.osconfig_v1.inputs.OSPolicyResourcePackageResourceYUMResponse;
import com.pulumi.googlenative.osconfig_v1.inputs.OSPolicyResourcePackageResourceZypperResponse;
import java.lang.String;
import java.util.Objects;


/**
 * A resource that manages a system package.
 * 
 */
public final class OSPolicyResourcePackageResourceResponse extends com.pulumi.resources.InvokeArgs {

    public static final OSPolicyResourcePackageResourceResponse Empty = new OSPolicyResourcePackageResourceResponse();

    /**
     * A package managed by Apt.
     * 
     */
    @Import(name="apt", required=true)
    private OSPolicyResourcePackageResourceAPTResponse apt;

    public OSPolicyResourcePackageResourceAPTResponse apt() {
        return this.apt;
    }

    /**
     * A deb package file.
     * 
     */
    @Import(name="deb", required=true)
    private OSPolicyResourcePackageResourceDebResponse deb;

    public OSPolicyResourcePackageResourceDebResponse deb() {
        return this.deb;
    }

    /**
     * The desired state the agent should maintain for this package.
     * 
     */
    @Import(name="desiredState", required=true)
    private String desiredState;

    public String desiredState() {
        return this.desiredState;
    }

    /**
     * A package managed by GooGet.
     * 
     */
    @Import(name="googet", required=true)
    private OSPolicyResourcePackageResourceGooGetResponse googet;

    public OSPolicyResourcePackageResourceGooGetResponse googet() {
        return this.googet;
    }

    /**
     * An MSI package.
     * 
     */
    @Import(name="msi", required=true)
    private OSPolicyResourcePackageResourceMSIResponse msi;

    public OSPolicyResourcePackageResourceMSIResponse msi() {
        return this.msi;
    }

    /**
     * An rpm package file.
     * 
     */
    @Import(name="rpm", required=true)
    private OSPolicyResourcePackageResourceRPMResponse rpm;

    public OSPolicyResourcePackageResourceRPMResponse rpm() {
        return this.rpm;
    }

    /**
     * A package managed by YUM.
     * 
     */
    @Import(name="yum", required=true)
    private OSPolicyResourcePackageResourceYUMResponse yum;

    public OSPolicyResourcePackageResourceYUMResponse yum() {
        return this.yum;
    }

    /**
     * A package managed by Zypper.
     * 
     */
    @Import(name="zypper", required=true)
    private OSPolicyResourcePackageResourceZypperResponse zypper;

    public OSPolicyResourcePackageResourceZypperResponse zypper() {
        return this.zypper;
    }

    private OSPolicyResourcePackageResourceResponse() {}

    private OSPolicyResourcePackageResourceResponse(OSPolicyResourcePackageResourceResponse $) {
        this.apt = $.apt;
        this.deb = $.deb;
        this.desiredState = $.desiredState;
        this.googet = $.googet;
        this.msi = $.msi;
        this.rpm = $.rpm;
        this.yum = $.yum;
        this.zypper = $.zypper;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OSPolicyResourcePackageResourceResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OSPolicyResourcePackageResourceResponse $;

        public Builder() {
            $ = new OSPolicyResourcePackageResourceResponse();
        }

        public Builder(OSPolicyResourcePackageResourceResponse defaults) {
            $ = new OSPolicyResourcePackageResourceResponse(Objects.requireNonNull(defaults));
        }

        public Builder apt(OSPolicyResourcePackageResourceAPTResponse apt) {
            $.apt = apt;
            return this;
        }

        public Builder deb(OSPolicyResourcePackageResourceDebResponse deb) {
            $.deb = deb;
            return this;
        }

        public Builder desiredState(String desiredState) {
            $.desiredState = desiredState;
            return this;
        }

        public Builder googet(OSPolicyResourcePackageResourceGooGetResponse googet) {
            $.googet = googet;
            return this;
        }

        public Builder msi(OSPolicyResourcePackageResourceMSIResponse msi) {
            $.msi = msi;
            return this;
        }

        public Builder rpm(OSPolicyResourcePackageResourceRPMResponse rpm) {
            $.rpm = rpm;
            return this;
        }

        public Builder yum(OSPolicyResourcePackageResourceYUMResponse yum) {
            $.yum = yum;
            return this;
        }

        public Builder zypper(OSPolicyResourcePackageResourceZypperResponse zypper) {
            $.zypper = zypper;
            return this;
        }

        public OSPolicyResourcePackageResourceResponse build() {
            $.apt = Objects.requireNonNull($.apt, "expected parameter 'apt' to be non-null");
            $.deb = Objects.requireNonNull($.deb, "expected parameter 'deb' to be non-null");
            $.desiredState = Objects.requireNonNull($.desiredState, "expected parameter 'desiredState' to be non-null");
            $.googet = Objects.requireNonNull($.googet, "expected parameter 'googet' to be non-null");
            $.msi = Objects.requireNonNull($.msi, "expected parameter 'msi' to be non-null");
            $.rpm = Objects.requireNonNull($.rpm, "expected parameter 'rpm' to be non-null");
            $.yum = Objects.requireNonNull($.yum, "expected parameter 'yum' to be non-null");
            $.zypper = Objects.requireNonNull($.zypper, "expected parameter 'zypper' to be non-null");
            return $;
        }
    }

}
