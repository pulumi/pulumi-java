// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.storage_v1;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import com.pulumi.googlenative.storage_v1.inputs.DefaultObjectAccessControlProjectTeamArgs;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class DefaultObjectAccessControlArgs extends com.pulumi.resources.ResourceArgs {

    public static final DefaultObjectAccessControlArgs Empty = new DefaultObjectAccessControlArgs();

    /**
     * The name of the bucket.
     * 
     */
    @Import(name="bucket", required=true)
      private final Output<String> bucket;

    public Output<String> bucket() {
        return this.bucket;
    }

    /**
     * The domain associated with the entity, if any.
     * 
     */
    @Import(name="domain")
      private final @Nullable Output<String> domain;

    public Output<String> domain() {
        return this.domain == null ? Codegen.empty() : this.domain;
    }

    /**
     * The email address associated with the entity, if any.
     * 
     */
    @Import(name="email")
      private final @Nullable Output<String> email;

    public Output<String> email() {
        return this.email == null ? Codegen.empty() : this.email;
    }

    /**
     * The entity holding the permission, in one of the following forms:
     * - user-userId
     * - user-email
     * - group-groupId
     * - group-email
     * - domain-domain
     * - project-team-projectId
     * - allUsers
     * - allAuthenticatedUsers Examples:
     * - The user liz@example.com would be user-liz@example.com.
     * - The group example@googlegroups.com would be group-example@googlegroups.com.
     * - To refer to all members of the Google Apps for Business domain example.com, the entity would be domain-example.com.
     * 
     */
    @Import(name="entity")
      private final @Nullable Output<String> entity;

    public Output<String> entity() {
        return this.entity == null ? Codegen.empty() : this.entity;
    }

    /**
     * The ID for the entity, if any.
     * 
     */
    @Import(name="entityId")
      private final @Nullable Output<String> entityId;

    public Output<String> entityId() {
        return this.entityId == null ? Codegen.empty() : this.entityId;
    }

    /**
     * HTTP 1.1 Entity tag for the access-control entry.
     * 
     */
    @Import(name="etag")
      private final @Nullable Output<String> etag;

    public Output<String> etag() {
        return this.etag == null ? Codegen.empty() : this.etag;
    }

    /**
     * The content generation of the object, if applied to an object.
     * 
     */
    @Import(name="generation")
      private final @Nullable Output<String> generation;

    public Output<String> generation() {
        return this.generation == null ? Codegen.empty() : this.generation;
    }

    /**
     * The ID of the access-control entry.
     * 
     */
    @Import(name="id")
      private final @Nullable Output<String> id;

    public Output<String> id() {
        return this.id == null ? Codegen.empty() : this.id;
    }

    /**
     * The kind of item this is. For object access control entries, this is always storage#objectAccessControl.
     * 
     */
    @Import(name="kind")
      private final @Nullable Output<String> kind;

    public Output<String> kind() {
        return this.kind == null ? Codegen.empty() : this.kind;
    }

    /**
     * The name of the object, if applied to an object.
     * 
     */
    @Import(name="object")
      private final @Nullable Output<String> object;

    public Output<String> object() {
        return this.object == null ? Codegen.empty() : this.object;
    }

    /**
     * The project team associated with the entity, if any.
     * 
     */
    @Import(name="projectTeam")
      private final @Nullable Output<DefaultObjectAccessControlProjectTeamArgs> projectTeam;

    public Output<DefaultObjectAccessControlProjectTeamArgs> projectTeam() {
        return this.projectTeam == null ? Codegen.empty() : this.projectTeam;
    }

    @Import(name="provisionalUserProject")
      private final @Nullable Output<String> provisionalUserProject;

    public Output<String> provisionalUserProject() {
        return this.provisionalUserProject == null ? Codegen.empty() : this.provisionalUserProject;
    }

    /**
     * The access permission for the entity.
     * 
     */
    @Import(name="role")
      private final @Nullable Output<String> role;

    public Output<String> role() {
        return this.role == null ? Codegen.empty() : this.role;
    }

    /**
     * The link to this access-control entry.
     * 
     */
    @Import(name="selfLink")
      private final @Nullable Output<String> selfLink;

    public Output<String> selfLink() {
        return this.selfLink == null ? Codegen.empty() : this.selfLink;
    }

    @Import(name="userProject")
      private final @Nullable Output<String> userProject;

    public Output<String> userProject() {
        return this.userProject == null ? Codegen.empty() : this.userProject;
    }

    public DefaultObjectAccessControlArgs(
        Output<String> bucket,
        @Nullable Output<String> domain,
        @Nullable Output<String> email,
        @Nullable Output<String> entity,
        @Nullable Output<String> entityId,
        @Nullable Output<String> etag,
        @Nullable Output<String> generation,
        @Nullable Output<String> id,
        @Nullable Output<String> kind,
        @Nullable Output<String> object,
        @Nullable Output<DefaultObjectAccessControlProjectTeamArgs> projectTeam,
        @Nullable Output<String> provisionalUserProject,
        @Nullable Output<String> role,
        @Nullable Output<String> selfLink,
        @Nullable Output<String> userProject) {
        this.bucket = Objects.requireNonNull(bucket, "expected parameter 'bucket' to be non-null");
        this.domain = domain;
        this.email = email;
        this.entity = entity;
        this.entityId = entityId;
        this.etag = etag;
        this.generation = generation;
        this.id = id;
        this.kind = kind;
        this.object = object;
        this.projectTeam = projectTeam;
        this.provisionalUserProject = provisionalUserProject;
        this.role = role;
        this.selfLink = selfLink;
        this.userProject = userProject;
    }

    private DefaultObjectAccessControlArgs() {
        this.bucket = Codegen.empty();
        this.domain = Codegen.empty();
        this.email = Codegen.empty();
        this.entity = Codegen.empty();
        this.entityId = Codegen.empty();
        this.etag = Codegen.empty();
        this.generation = Codegen.empty();
        this.id = Codegen.empty();
        this.kind = Codegen.empty();
        this.object = Codegen.empty();
        this.projectTeam = Codegen.empty();
        this.provisionalUserProject = Codegen.empty();
        this.role = Codegen.empty();
        this.selfLink = Codegen.empty();
        this.userProject = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DefaultObjectAccessControlArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> bucket;
        private @Nullable Output<String> domain;
        private @Nullable Output<String> email;
        private @Nullable Output<String> entity;
        private @Nullable Output<String> entityId;
        private @Nullable Output<String> etag;
        private @Nullable Output<String> generation;
        private @Nullable Output<String> id;
        private @Nullable Output<String> kind;
        private @Nullable Output<String> object;
        private @Nullable Output<DefaultObjectAccessControlProjectTeamArgs> projectTeam;
        private @Nullable Output<String> provisionalUserProject;
        private @Nullable Output<String> role;
        private @Nullable Output<String> selfLink;
        private @Nullable Output<String> userProject;

        public Builder() {
    	      // Empty
        }

        public Builder(DefaultObjectAccessControlArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bucket = defaults.bucket;
    	      this.domain = defaults.domain;
    	      this.email = defaults.email;
    	      this.entity = defaults.entity;
    	      this.entityId = defaults.entityId;
    	      this.etag = defaults.etag;
    	      this.generation = defaults.generation;
    	      this.id = defaults.id;
    	      this.kind = defaults.kind;
    	      this.object = defaults.object;
    	      this.projectTeam = defaults.projectTeam;
    	      this.provisionalUserProject = defaults.provisionalUserProject;
    	      this.role = defaults.role;
    	      this.selfLink = defaults.selfLink;
    	      this.userProject = defaults.userProject;
        }

        public Builder bucket(Output<String> bucket) {
            this.bucket = Objects.requireNonNull(bucket);
            return this;
        }
        public Builder bucket(String bucket) {
            this.bucket = Output.of(Objects.requireNonNull(bucket));
            return this;
        }
        public Builder domain(@Nullable Output<String> domain) {
            this.domain = domain;
            return this;
        }
        public Builder domain(@Nullable String domain) {
            this.domain = Codegen.ofNullable(domain);
            return this;
        }
        public Builder email(@Nullable Output<String> email) {
            this.email = email;
            return this;
        }
        public Builder email(@Nullable String email) {
            this.email = Codegen.ofNullable(email);
            return this;
        }
        public Builder entity(@Nullable Output<String> entity) {
            this.entity = entity;
            return this;
        }
        public Builder entity(@Nullable String entity) {
            this.entity = Codegen.ofNullable(entity);
            return this;
        }
        public Builder entityId(@Nullable Output<String> entityId) {
            this.entityId = entityId;
            return this;
        }
        public Builder entityId(@Nullable String entityId) {
            this.entityId = Codegen.ofNullable(entityId);
            return this;
        }
        public Builder etag(@Nullable Output<String> etag) {
            this.etag = etag;
            return this;
        }
        public Builder etag(@Nullable String etag) {
            this.etag = Codegen.ofNullable(etag);
            return this;
        }
        public Builder generation(@Nullable Output<String> generation) {
            this.generation = generation;
            return this;
        }
        public Builder generation(@Nullable String generation) {
            this.generation = Codegen.ofNullable(generation);
            return this;
        }
        public Builder id(@Nullable Output<String> id) {
            this.id = id;
            return this;
        }
        public Builder id(@Nullable String id) {
            this.id = Codegen.ofNullable(id);
            return this;
        }
        public Builder kind(@Nullable Output<String> kind) {
            this.kind = kind;
            return this;
        }
        public Builder kind(@Nullable String kind) {
            this.kind = Codegen.ofNullable(kind);
            return this;
        }
        public Builder object(@Nullable Output<String> object) {
            this.object = object;
            return this;
        }
        public Builder object(@Nullable String object) {
            this.object = Codegen.ofNullable(object);
            return this;
        }
        public Builder projectTeam(@Nullable Output<DefaultObjectAccessControlProjectTeamArgs> projectTeam) {
            this.projectTeam = projectTeam;
            return this;
        }
        public Builder projectTeam(@Nullable DefaultObjectAccessControlProjectTeamArgs projectTeam) {
            this.projectTeam = Codegen.ofNullable(projectTeam);
            return this;
        }
        public Builder provisionalUserProject(@Nullable Output<String> provisionalUserProject) {
            this.provisionalUserProject = provisionalUserProject;
            return this;
        }
        public Builder provisionalUserProject(@Nullable String provisionalUserProject) {
            this.provisionalUserProject = Codegen.ofNullable(provisionalUserProject);
            return this;
        }
        public Builder role(@Nullable Output<String> role) {
            this.role = role;
            return this;
        }
        public Builder role(@Nullable String role) {
            this.role = Codegen.ofNullable(role);
            return this;
        }
        public Builder selfLink(@Nullable Output<String> selfLink) {
            this.selfLink = selfLink;
            return this;
        }
        public Builder selfLink(@Nullable String selfLink) {
            this.selfLink = Codegen.ofNullable(selfLink);
            return this;
        }
        public Builder userProject(@Nullable Output<String> userProject) {
            this.userProject = userProject;
            return this;
        }
        public Builder userProject(@Nullable String userProject) {
            this.userProject = Codegen.ofNullable(userProject);
            return this;
        }        public DefaultObjectAccessControlArgs build() {
            return new DefaultObjectAccessControlArgs(bucket, domain, email, entity, entityId, etag, generation, id, kind, object, projectTeam, provisionalUserProject, role, selfLink, userProject);
        }
    }
}
