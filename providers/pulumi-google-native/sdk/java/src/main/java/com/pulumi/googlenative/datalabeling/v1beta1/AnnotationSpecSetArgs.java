// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.datalabeling.v1beta1;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.datalabeling.v1beta1.inputs.GoogleCloudDatalabelingV1beta1AnnotationSpecArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AnnotationSpecSetArgs extends com.pulumi.resources.ResourceArgs {

    public static final AnnotationSpecSetArgs Empty = new AnnotationSpecSetArgs();

    /**
     * The array of AnnotationSpecs that you define when you create the AnnotationSpecSet. These are the possible labels for the labeling task.
     * 
     */
    @Import(name="annotationSpecs", required=true)
    private Output<List<GoogleCloudDatalabelingV1beta1AnnotationSpecArgs>> annotationSpecs;

    /**
     * @return The array of AnnotationSpecs that you define when you create the AnnotationSpecSet. These are the possible labels for the labeling task.
     * 
     */
    public Output<List<GoogleCloudDatalabelingV1beta1AnnotationSpecArgs>> annotationSpecs() {
        return this.annotationSpecs;
    }

    /**
     * Optional. User-provided description of the annotation specification set. The description can be up to 10,000 characters long.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Optional. User-provided description of the annotation specification set. The description can be up to 10,000 characters long.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The display name for AnnotationSpecSet that you define when you create it. Maximum of 64 characters.
     * 
     */
    @Import(name="displayName", required=true)
    private Output<String> displayName;

    /**
     * @return The display name for AnnotationSpecSet that you define when you create it. Maximum of 64 characters.
     * 
     */
    public Output<String> displayName() {
        return this.displayName;
    }

    @Import(name="project")
    private @Nullable Output<String> project;

    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    private AnnotationSpecSetArgs() {}

    private AnnotationSpecSetArgs(AnnotationSpecSetArgs $) {
        this.annotationSpecs = $.annotationSpecs;
        this.description = $.description;
        this.displayName = $.displayName;
        this.project = $.project;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AnnotationSpecSetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AnnotationSpecSetArgs $;

        public Builder() {
            $ = new AnnotationSpecSetArgs();
        }

        public Builder(AnnotationSpecSetArgs defaults) {
            $ = new AnnotationSpecSetArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param annotationSpecs The array of AnnotationSpecs that you define when you create the AnnotationSpecSet. These are the possible labels for the labeling task.
         * 
         * @return builder
         * 
         */
        public Builder annotationSpecs(Output<List<GoogleCloudDatalabelingV1beta1AnnotationSpecArgs>> annotationSpecs) {
            $.annotationSpecs = annotationSpecs;
            return this;
        }

        /**
         * @param annotationSpecs The array of AnnotationSpecs that you define when you create the AnnotationSpecSet. These are the possible labels for the labeling task.
         * 
         * @return builder
         * 
         */
        public Builder annotationSpecs(List<GoogleCloudDatalabelingV1beta1AnnotationSpecArgs> annotationSpecs) {
            return annotationSpecs(Output.of(annotationSpecs));
        }

        /**
         * @param annotationSpecs The array of AnnotationSpecs that you define when you create the AnnotationSpecSet. These are the possible labels for the labeling task.
         * 
         * @return builder
         * 
         */
        public Builder annotationSpecs(GoogleCloudDatalabelingV1beta1AnnotationSpecArgs... annotationSpecs) {
            return annotationSpecs(List.of(annotationSpecs));
        }

        /**
         * @param description Optional. User-provided description of the annotation specification set. The description can be up to 10,000 characters long.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Optional. User-provided description of the annotation specification set. The description can be up to 10,000 characters long.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param displayName The display name for AnnotationSpecSet that you define when you create it. Maximum of 64 characters.
         * 
         * @return builder
         * 
         */
        public Builder displayName(Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName The display name for AnnotationSpecSet that you define when you create it. Maximum of 64 characters.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        public Builder project(String project) {
            return project(Output.of(project));
        }

        public AnnotationSpecSetArgs build() {
            $.annotationSpecs = Objects.requireNonNull($.annotationSpecs, "expected parameter 'annotationSpecs' to be non-null");
            $.displayName = Objects.requireNonNull($.displayName, "expected parameter 'displayName' to be non-null");
            return $;
        }
    }

}
