// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.dlp_v2.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * Schedule for inspect job triggers.
 * 
 */
public final class GooglePrivacyDlpV2ScheduleResponse extends com.pulumi.resources.InvokeArgs {

    public static final GooglePrivacyDlpV2ScheduleResponse Empty = new GooglePrivacyDlpV2ScheduleResponse();

    /**
     * With this option a job is started a regular periodic basis. For example: every day (86400 seconds). A scheduled start time will be skipped if the previous execution has not ended when its scheduled time occurs. This value must be set to a time duration greater than or equal to 1 day and can be no longer than 60 days.
     * 
     */
    @Import(name="recurrencePeriodDuration", required=true)
    private String recurrencePeriodDuration;

    public String recurrencePeriodDuration() {
        return this.recurrencePeriodDuration;
    }

    private GooglePrivacyDlpV2ScheduleResponse() {}

    private GooglePrivacyDlpV2ScheduleResponse(GooglePrivacyDlpV2ScheduleResponse $) {
        this.recurrencePeriodDuration = $.recurrencePeriodDuration;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GooglePrivacyDlpV2ScheduleResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GooglePrivacyDlpV2ScheduleResponse $;

        public Builder() {
            $ = new GooglePrivacyDlpV2ScheduleResponse();
        }

        public Builder(GooglePrivacyDlpV2ScheduleResponse defaults) {
            $ = new GooglePrivacyDlpV2ScheduleResponse(Objects.requireNonNull(defaults));
        }

        public Builder recurrencePeriodDuration(String recurrencePeriodDuration) {
            $.recurrencePeriodDuration = recurrencePeriodDuration;
            return this;
        }

        public GooglePrivacyDlpV2ScheduleResponse build() {
            $.recurrencePeriodDuration = Objects.requireNonNull($.recurrencePeriodDuration, "expected parameter 'recurrencePeriodDuration' to be non-null");
            return $;
        }
    }

}
