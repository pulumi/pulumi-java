// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.monitoring.v1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.monitoring.v1.enums.TextFormat;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * A widget that displays textual content.
 * 
 */
public final class TextArgs extends com.pulumi.resources.ResourceArgs {

    public static final TextArgs Empty = new TextArgs();

    /**
     * The text content to be displayed.
     * 
     */
    @Import(name="content")
    private @Nullable Output<String> content;

    /**
     * @return The text content to be displayed.
     * 
     */
    public Optional<Output<String>> content() {
        return Optional.ofNullable(this.content);
    }

    /**
     * How the text content is formatted.
     * 
     */
    @Import(name="format")
    private @Nullable Output<TextFormat> format;

    /**
     * @return How the text content is formatted.
     * 
     */
    public Optional<Output<TextFormat>> format() {
        return Optional.ofNullable(this.format);
    }

    private TextArgs() {}

    private TextArgs(TextArgs $) {
        this.content = $.content;
        this.format = $.format;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TextArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TextArgs $;

        public Builder() {
            $ = new TextArgs();
        }

        public Builder(TextArgs defaults) {
            $ = new TextArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param content The text content to be displayed.
         * 
         * @return builder
         * 
         */
        public Builder content(@Nullable Output<String> content) {
            $.content = content;
            return this;
        }

        /**
         * @param content The text content to be displayed.
         * 
         * @return builder
         * 
         */
        public Builder content(String content) {
            return content(Output.of(content));
        }

        /**
         * @param format How the text content is formatted.
         * 
         * @return builder
         * 
         */
        public Builder format(@Nullable Output<TextFormat> format) {
            $.format = format;
            return this;
        }

        /**
         * @param format How the text content is formatted.
         * 
         * @return builder
         * 
         */
        public Builder format(TextFormat format) {
            return format(Output.of(format));
        }

        public TextArgs build() {
            return $;
        }
    }

}
