// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.dataproc_v1beta2.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;


/**
 * Validation based on regular expressions.
 * 
 */
public final class RegexValidationResponse extends com.pulumi.resources.InvokeArgs {

    public static final RegexValidationResponse Empty = new RegexValidationResponse();

    /**
     * RE2 regular expressions used to validate the parameter&#39;s value. The value must match the regex in its entirety (substring matches are not sufficient).
     * 
     */
    @Import(name="regexes", required=true)
    private List<String> regexes;

    /**
     * @return RE2 regular expressions used to validate the parameter&#39;s value. The value must match the regex in its entirety (substring matches are not sufficient).
     * 
     */
    public List<String> regexes() {
        return this.regexes;
    }

    private RegexValidationResponse() {}

    private RegexValidationResponse(RegexValidationResponse $) {
        this.regexes = $.regexes;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RegexValidationResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RegexValidationResponse $;

        public Builder() {
            $ = new RegexValidationResponse();
        }

        public Builder(RegexValidationResponse defaults) {
            $ = new RegexValidationResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param regexes RE2 regular expressions used to validate the parameter&#39;s value. The value must match the regex in its entirety (substring matches are not sufficient).
         * 
         * @return builder
         * 
         */
        public Builder regexes(List<String> regexes) {
            $.regexes = regexes;
            return this;
        }

        /**
         * @param regexes RE2 regular expressions used to validate the parameter&#39;s value. The value must match the regex in its entirety (substring matches are not sufficient).
         * 
         * @return builder
         * 
         */
        public Builder regexes(String... regexes) {
            return regexes(List.of(regexes));
        }

        public RegexValidationResponse build() {
            $.regexes = Objects.requireNonNull($.regexes, "expected parameter 'regexes' to be non-null");
            return $;
        }
    }

}
