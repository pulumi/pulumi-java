// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.apigee.v1;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.apigee.v1.inputs.GoogleCloudApigeeV1AttributeArgs;
import com.pulumi.googlenative.apigee.v1.inputs.GoogleCloudApigeeV1GraphQLOperationGroupArgs;
import com.pulumi.googlenative.apigee.v1.inputs.GoogleCloudApigeeV1OperationGroupArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ApiProductArgs extends com.pulumi.resources.ResourceArgs {

    public static final ApiProductArgs Empty = new ApiProductArgs();

    @Import(name="apiResources")
    private @Nullable Output<List<String>> apiResources;

    public Optional<Output<List<String>>> apiResources() {
        return Optional.ofNullable(this.apiResources);
    }

    /**
     * Flag that specifies how API keys are approved to access the APIs defined by the API product. If set to `manual`, the consumer key is generated and returned in &#34;pending&#34; state. In this case, the API keys won&#39;t work until they have been explicitly approved. If set to `auto`, the consumer key is generated and returned in &#34;approved&#34; state and can be used immediately. **Note:** Typically, `auto` is used to provide access to free or trial API products that provide limited quota or capabilities.
     * 
     */
    @Import(name="approvalType")
    private @Nullable Output<String> approvalType;

    /**
     * @return Flag that specifies how API keys are approved to access the APIs defined by the API product. If set to `manual`, the consumer key is generated and returned in &#34;pending&#34; state. In this case, the API keys won&#39;t work until they have been explicitly approved. If set to `auto`, the consumer key is generated and returned in &#34;approved&#34; state and can be used immediately. **Note:** Typically, `auto` is used to provide access to free or trial API products that provide limited quota or capabilities.
     * 
     */
    public Optional<Output<String>> approvalType() {
        return Optional.ofNullable(this.approvalType);
    }

    /**
     * Array of attributes that may be used to extend the default API product profile with customer-specific metadata. You can specify a maximum of 18 attributes. Use this property to specify the access level of the API product as either `public`, `private`, or `internal`. Only products marked `public` are available to developers in the Apigee developer portal. For example, you can set a product to `internal` while it is in development and then change access to `public` when it is ready to release on the portal. API products marked as `private` do not appear on the portal, but can be accessed by external developers.
     * 
     */
    @Import(name="attributes")
    private @Nullable Output<List<GoogleCloudApigeeV1AttributeArgs>> attributes;

    /**
     * @return Array of attributes that may be used to extend the default API product profile with customer-specific metadata. You can specify a maximum of 18 attributes. Use this property to specify the access level of the API product as either `public`, `private`, or `internal`. Only products marked `public` are available to developers in the Apigee developer portal. For example, you can set a product to `internal` while it is in development and then change access to `public` when it is ready to release on the portal. API products marked as `private` do not appear on the portal, but can be accessed by external developers.
     * 
     */
    public Optional<Output<List<GoogleCloudApigeeV1AttributeArgs>>> attributes() {
        return Optional.ofNullable(this.attributes);
    }

    /**
     * Response only. Creation time of this environment as milliseconds since epoch.
     * 
     */
    @Import(name="createdAt")
    private @Nullable Output<String> createdAt;

    /**
     * @return Response only. Creation time of this environment as milliseconds since epoch.
     * 
     */
    public Optional<Output<String>> createdAt() {
        return Optional.ofNullable(this.createdAt);
    }

    /**
     * Description of the API product. Include key information about the API product that is not captured by other fields. Comma-separated list of API resources to be bundled in the API product. By default, the resource paths are mapped from the `proxy.pathsuffix` variable. The proxy path suffix is defined as the URI fragment following the ProxyEndpoint base path. For example, if the `apiResources` element is defined to be `/forecastrss` and the base path defined for the API proxy is `/weather`, then only requests to `/weather/forecastrss` are permitted by the API product. You can select a specific path, or you can select all subpaths with the following wildcard: - `/**`: Indicates that all sub-URIs are included. - `/*` : Indicates that only URIs one level down are included. By default, / supports the same resources as /** as well as the base path defined by the API proxy. For example, if the base path of the API proxy is `/v1/weatherapikey`, then the API product supports requests to `/v1/weatherapikey` and to any sub-URIs, such as `/v1/weatherapikey/forecastrss`, `/v1/weatherapikey/region/CA`, and so on. For more information, see Managing API products.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Description of the API product. Include key information about the API product that is not captured by other fields. Comma-separated list of API resources to be bundled in the API product. By default, the resource paths are mapped from the `proxy.pathsuffix` variable. The proxy path suffix is defined as the URI fragment following the ProxyEndpoint base path. For example, if the `apiResources` element is defined to be `/forecastrss` and the base path defined for the API proxy is `/weather`, then only requests to `/weather/forecastrss` are permitted by the API product. You can select a specific path, or you can select all subpaths with the following wildcard: - `/**`: Indicates that all sub-URIs are included. - `/*` : Indicates that only URIs one level down are included. By default, / supports the same resources as /** as well as the base path defined by the API proxy. For example, if the base path of the API proxy is `/v1/weatherapikey`, then the API product supports requests to `/v1/weatherapikey` and to any sub-URIs, such as `/v1/weatherapikey/forecastrss`, `/v1/weatherapikey/region/CA`, and so on. For more information, see Managing API products.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Name displayed in the UI or developer portal to developers registering for API access.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return Name displayed in the UI or developer portal to developers registering for API access.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * Comma-separated list of environment names to which the API product is bound. Requests to environments that are not listed are rejected. By specifying one or more environments, you can bind the resources listed in the API product to a specific environment, preventing developers from accessing those resources through API proxies deployed in another environment. This setting is used, for example, to prevent resources associated with API proxies in `prod` from being accessed by API proxies deployed in `test`.
     * 
     */
    @Import(name="environments")
    private @Nullable Output<List<String>> environments;

    /**
     * @return Comma-separated list of environment names to which the API product is bound. Requests to environments that are not listed are rejected. By specifying one or more environments, you can bind the resources listed in the API product to a specific environment, preventing developers from accessing those resources through API proxies deployed in another environment. This setting is used, for example, to prevent resources associated with API proxies in `prod` from being accessed by API proxies deployed in `test`.
     * 
     */
    public Optional<Output<List<String>>> environments() {
        return Optional.ofNullable(this.environments);
    }

    /**
     * Configuration used to group Apigee proxies or remote services with graphQL operation name, graphQL operation type and quotas. This grouping allows us to precisely set quota for a particular combination of graphQL name and operation type for a particular proxy request. If graphQL name is not set, this would imply quota will be applied on all graphQL requests matching the operation type.
     * 
     */
    @Import(name="graphqlOperationGroup")
    private @Nullable Output<GoogleCloudApigeeV1GraphQLOperationGroupArgs> graphqlOperationGroup;

    /**
     * @return Configuration used to group Apigee proxies or remote services with graphQL operation name, graphQL operation type and quotas. This grouping allows us to precisely set quota for a particular combination of graphQL name and operation type for a particular proxy request. If graphQL name is not set, this would imply quota will be applied on all graphQL requests matching the operation type.
     * 
     */
    public Optional<Output<GoogleCloudApigeeV1GraphQLOperationGroupArgs>> graphqlOperationGroup() {
        return Optional.ofNullable(this.graphqlOperationGroup);
    }

    /**
     * Response only. Modified time of this environment as milliseconds since epoch.
     * 
     */
    @Import(name="lastModifiedAt")
    private @Nullable Output<String> lastModifiedAt;

    /**
     * @return Response only. Modified time of this environment as milliseconds since epoch.
     * 
     */
    public Optional<Output<String>> lastModifiedAt() {
        return Optional.ofNullable(this.lastModifiedAt);
    }

    /**
     * Internal name of the API product. Characters you can use in the name are restricted to: `A-Z0-9._\-$ %`. **Note:** The internal name cannot be edited when updating the API product.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Internal name of the API product. Characters you can use in the name are restricted to: `A-Z0-9._\-$ %`. **Note:** The internal name cannot be edited when updating the API product.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Configuration used to group Apigee proxies or remote services with resources, method types, and quotas. The resource refers to the resource URI (excluding the base path). With this grouping, the API product creator is able to fine-tune and give precise control over which REST methods have access to specific resources and how many calls can be made (using the `quota` setting). **Note:** The `api_resources` setting cannot be specified for both the API product and operation group; otherwise the call will fail.
     * 
     */
    @Import(name="operationGroup")
    private @Nullable Output<GoogleCloudApigeeV1OperationGroupArgs> operationGroup;

    /**
     * @return Configuration used to group Apigee proxies or remote services with resources, method types, and quotas. The resource refers to the resource URI (excluding the base path). With this grouping, the API product creator is able to fine-tune and give precise control over which REST methods have access to specific resources and how many calls can be made (using the `quota` setting). **Note:** The `api_resources` setting cannot be specified for both the API product and operation group; otherwise the call will fail.
     * 
     */
    public Optional<Output<GoogleCloudApigeeV1OperationGroupArgs>> operationGroup() {
        return Optional.ofNullable(this.operationGroup);
    }

    @Import(name="organizationId", required=true)
    private Output<String> organizationId;

    public Output<String> organizationId() {
        return this.organizationId;
    }

    /**
     * Comma-separated list of API proxy names to which this API product is bound. By specifying API proxies, you can associate resources in the API product with specific API proxies, preventing developers from accessing those resources through other API proxies. Apigee rejects requests to API proxies that are not listed. **Note:** The API proxy names must already exist in the specified environment as they will be validated upon creation.
     * 
     */
    @Import(name="proxies")
    private @Nullable Output<List<String>> proxies;

    /**
     * @return Comma-separated list of API proxy names to which this API product is bound. By specifying API proxies, you can associate resources in the API product with specific API proxies, preventing developers from accessing those resources through other API proxies. Apigee rejects requests to API proxies that are not listed. **Note:** The API proxy names must already exist in the specified environment as they will be validated upon creation.
     * 
     */
    public Optional<Output<List<String>>> proxies() {
        return Optional.ofNullable(this.proxies);
    }

    /**
     * Number of request messages permitted per app by this API product for the specified `quotaInterval` and `quotaTimeUnit`. For example, a `quota` of 50, for a `quotaInterval` of 12 and a `quotaTimeUnit` of hours means 50 requests are allowed every 12 hours.
     * 
     */
    @Import(name="quota")
    private @Nullable Output<String> quota;

    /**
     * @return Number of request messages permitted per app by this API product for the specified `quotaInterval` and `quotaTimeUnit`. For example, a `quota` of 50, for a `quotaInterval` of 12 and a `quotaTimeUnit` of hours means 50 requests are allowed every 12 hours.
     * 
     */
    public Optional<Output<String>> quota() {
        return Optional.ofNullable(this.quota);
    }

    /**
     * Time interval over which the number of request messages is calculated.
     * 
     */
    @Import(name="quotaInterval")
    private @Nullable Output<String> quotaInterval;

    /**
     * @return Time interval over which the number of request messages is calculated.
     * 
     */
    public Optional<Output<String>> quotaInterval() {
        return Optional.ofNullable(this.quotaInterval);
    }

    /**
     * Time unit defined for the `quotaInterval`. Valid values include `minute`, `hour`, `day`, or `month`.
     * 
     */
    @Import(name="quotaTimeUnit")
    private @Nullable Output<String> quotaTimeUnit;

    /**
     * @return Time unit defined for the `quotaInterval`. Valid values include `minute`, `hour`, `day`, or `month`.
     * 
     */
    public Optional<Output<String>> quotaTimeUnit() {
        return Optional.ofNullable(this.quotaTimeUnit);
    }

    /**
     * Comma-separated list of OAuth scopes that are validated at runtime. Apigee validates that the scopes in any access token presented match the scopes defined in the OAuth policy associated with the API product.
     * 
     */
    @Import(name="scopes")
    private @Nullable Output<List<String>> scopes;

    /**
     * @return Comma-separated list of OAuth scopes that are validated at runtime. Apigee validates that the scopes in any access token presented match the scopes defined in the OAuth policy associated with the API product.
     * 
     */
    public Optional<Output<List<String>>> scopes() {
        return Optional.ofNullable(this.scopes);
    }

    private ApiProductArgs() {}

    private ApiProductArgs(ApiProductArgs $) {
        this.apiResources = $.apiResources;
        this.approvalType = $.approvalType;
        this.attributes = $.attributes;
        this.createdAt = $.createdAt;
        this.description = $.description;
        this.displayName = $.displayName;
        this.environments = $.environments;
        this.graphqlOperationGroup = $.graphqlOperationGroup;
        this.lastModifiedAt = $.lastModifiedAt;
        this.name = $.name;
        this.operationGroup = $.operationGroup;
        this.organizationId = $.organizationId;
        this.proxies = $.proxies;
        this.quota = $.quota;
        this.quotaInterval = $.quotaInterval;
        this.quotaTimeUnit = $.quotaTimeUnit;
        this.scopes = $.scopes;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ApiProductArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApiProductArgs $;

        public Builder() {
            $ = new ApiProductArgs();
        }

        public Builder(ApiProductArgs defaults) {
            $ = new ApiProductArgs(Objects.requireNonNull(defaults));
        }

        public Builder apiResources(@Nullable Output<List<String>> apiResources) {
            $.apiResources = apiResources;
            return this;
        }

        public Builder apiResources(List<String> apiResources) {
            return apiResources(Output.of(apiResources));
        }

        public Builder apiResources(String... apiResources) {
            return apiResources(List.of(apiResources));
        }

        /**
         * @param approvalType Flag that specifies how API keys are approved to access the APIs defined by the API product. If set to `manual`, the consumer key is generated and returned in &#34;pending&#34; state. In this case, the API keys won&#39;t work until they have been explicitly approved. If set to `auto`, the consumer key is generated and returned in &#34;approved&#34; state and can be used immediately. **Note:** Typically, `auto` is used to provide access to free or trial API products that provide limited quota or capabilities.
         * 
         * @return builder
         * 
         */
        public Builder approvalType(@Nullable Output<String> approvalType) {
            $.approvalType = approvalType;
            return this;
        }

        /**
         * @param approvalType Flag that specifies how API keys are approved to access the APIs defined by the API product. If set to `manual`, the consumer key is generated and returned in &#34;pending&#34; state. In this case, the API keys won&#39;t work until they have been explicitly approved. If set to `auto`, the consumer key is generated and returned in &#34;approved&#34; state and can be used immediately. **Note:** Typically, `auto` is used to provide access to free or trial API products that provide limited quota or capabilities.
         * 
         * @return builder
         * 
         */
        public Builder approvalType(String approvalType) {
            return approvalType(Output.of(approvalType));
        }

        /**
         * @param attributes Array of attributes that may be used to extend the default API product profile with customer-specific metadata. You can specify a maximum of 18 attributes. Use this property to specify the access level of the API product as either `public`, `private`, or `internal`. Only products marked `public` are available to developers in the Apigee developer portal. For example, you can set a product to `internal` while it is in development and then change access to `public` when it is ready to release on the portal. API products marked as `private` do not appear on the portal, but can be accessed by external developers.
         * 
         * @return builder
         * 
         */
        public Builder attributes(@Nullable Output<List<GoogleCloudApigeeV1AttributeArgs>> attributes) {
            $.attributes = attributes;
            return this;
        }

        /**
         * @param attributes Array of attributes that may be used to extend the default API product profile with customer-specific metadata. You can specify a maximum of 18 attributes. Use this property to specify the access level of the API product as either `public`, `private`, or `internal`. Only products marked `public` are available to developers in the Apigee developer portal. For example, you can set a product to `internal` while it is in development and then change access to `public` when it is ready to release on the portal. API products marked as `private` do not appear on the portal, but can be accessed by external developers.
         * 
         * @return builder
         * 
         */
        public Builder attributes(List<GoogleCloudApigeeV1AttributeArgs> attributes) {
            return attributes(Output.of(attributes));
        }

        /**
         * @param attributes Array of attributes that may be used to extend the default API product profile with customer-specific metadata. You can specify a maximum of 18 attributes. Use this property to specify the access level of the API product as either `public`, `private`, or `internal`. Only products marked `public` are available to developers in the Apigee developer portal. For example, you can set a product to `internal` while it is in development and then change access to `public` when it is ready to release on the portal. API products marked as `private` do not appear on the portal, but can be accessed by external developers.
         * 
         * @return builder
         * 
         */
        public Builder attributes(GoogleCloudApigeeV1AttributeArgs... attributes) {
            return attributes(List.of(attributes));
        }

        /**
         * @param createdAt Response only. Creation time of this environment as milliseconds since epoch.
         * 
         * @return builder
         * 
         */
        public Builder createdAt(@Nullable Output<String> createdAt) {
            $.createdAt = createdAt;
            return this;
        }

        /**
         * @param createdAt Response only. Creation time of this environment as milliseconds since epoch.
         * 
         * @return builder
         * 
         */
        public Builder createdAt(String createdAt) {
            return createdAt(Output.of(createdAt));
        }

        /**
         * @param description Description of the API product. Include key information about the API product that is not captured by other fields. Comma-separated list of API resources to be bundled in the API product. By default, the resource paths are mapped from the `proxy.pathsuffix` variable. The proxy path suffix is defined as the URI fragment following the ProxyEndpoint base path. For example, if the `apiResources` element is defined to be `/forecastrss` and the base path defined for the API proxy is `/weather`, then only requests to `/weather/forecastrss` are permitted by the API product. You can select a specific path, or you can select all subpaths with the following wildcard: - `/**`: Indicates that all sub-URIs are included. - `/*` : Indicates that only URIs one level down are included. By default, / supports the same resources as /** as well as the base path defined by the API proxy. For example, if the base path of the API proxy is `/v1/weatherapikey`, then the API product supports requests to `/v1/weatherapikey` and to any sub-URIs, such as `/v1/weatherapikey/forecastrss`, `/v1/weatherapikey/region/CA`, and so on. For more information, see Managing API products.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Description of the API product. Include key information about the API product that is not captured by other fields. Comma-separated list of API resources to be bundled in the API product. By default, the resource paths are mapped from the `proxy.pathsuffix` variable. The proxy path suffix is defined as the URI fragment following the ProxyEndpoint base path. For example, if the `apiResources` element is defined to be `/forecastrss` and the base path defined for the API proxy is `/weather`, then only requests to `/weather/forecastrss` are permitted by the API product. You can select a specific path, or you can select all subpaths with the following wildcard: - `/**`: Indicates that all sub-URIs are included. - `/*` : Indicates that only URIs one level down are included. By default, / supports the same resources as /** as well as the base path defined by the API proxy. For example, if the base path of the API proxy is `/v1/weatherapikey`, then the API product supports requests to `/v1/weatherapikey` and to any sub-URIs, such as `/v1/weatherapikey/forecastrss`, `/v1/weatherapikey/region/CA`, and so on. For more information, see Managing API products.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param displayName Name displayed in the UI or developer portal to developers registering for API access.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName Name displayed in the UI or developer portal to developers registering for API access.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param environments Comma-separated list of environment names to which the API product is bound. Requests to environments that are not listed are rejected. By specifying one or more environments, you can bind the resources listed in the API product to a specific environment, preventing developers from accessing those resources through API proxies deployed in another environment. This setting is used, for example, to prevent resources associated with API proxies in `prod` from being accessed by API proxies deployed in `test`.
         * 
         * @return builder
         * 
         */
        public Builder environments(@Nullable Output<List<String>> environments) {
            $.environments = environments;
            return this;
        }

        /**
         * @param environments Comma-separated list of environment names to which the API product is bound. Requests to environments that are not listed are rejected. By specifying one or more environments, you can bind the resources listed in the API product to a specific environment, preventing developers from accessing those resources through API proxies deployed in another environment. This setting is used, for example, to prevent resources associated with API proxies in `prod` from being accessed by API proxies deployed in `test`.
         * 
         * @return builder
         * 
         */
        public Builder environments(List<String> environments) {
            return environments(Output.of(environments));
        }

        /**
         * @param environments Comma-separated list of environment names to which the API product is bound. Requests to environments that are not listed are rejected. By specifying one or more environments, you can bind the resources listed in the API product to a specific environment, preventing developers from accessing those resources through API proxies deployed in another environment. This setting is used, for example, to prevent resources associated with API proxies in `prod` from being accessed by API proxies deployed in `test`.
         * 
         * @return builder
         * 
         */
        public Builder environments(String... environments) {
            return environments(List.of(environments));
        }

        /**
         * @param graphqlOperationGroup Configuration used to group Apigee proxies or remote services with graphQL operation name, graphQL operation type and quotas. This grouping allows us to precisely set quota for a particular combination of graphQL name and operation type for a particular proxy request. If graphQL name is not set, this would imply quota will be applied on all graphQL requests matching the operation type.
         * 
         * @return builder
         * 
         */
        public Builder graphqlOperationGroup(@Nullable Output<GoogleCloudApigeeV1GraphQLOperationGroupArgs> graphqlOperationGroup) {
            $.graphqlOperationGroup = graphqlOperationGroup;
            return this;
        }

        /**
         * @param graphqlOperationGroup Configuration used to group Apigee proxies or remote services with graphQL operation name, graphQL operation type and quotas. This grouping allows us to precisely set quota for a particular combination of graphQL name and operation type for a particular proxy request. If graphQL name is not set, this would imply quota will be applied on all graphQL requests matching the operation type.
         * 
         * @return builder
         * 
         */
        public Builder graphqlOperationGroup(GoogleCloudApigeeV1GraphQLOperationGroupArgs graphqlOperationGroup) {
            return graphqlOperationGroup(Output.of(graphqlOperationGroup));
        }

        /**
         * @param lastModifiedAt Response only. Modified time of this environment as milliseconds since epoch.
         * 
         * @return builder
         * 
         */
        public Builder lastModifiedAt(@Nullable Output<String> lastModifiedAt) {
            $.lastModifiedAt = lastModifiedAt;
            return this;
        }

        /**
         * @param lastModifiedAt Response only. Modified time of this environment as milliseconds since epoch.
         * 
         * @return builder
         * 
         */
        public Builder lastModifiedAt(String lastModifiedAt) {
            return lastModifiedAt(Output.of(lastModifiedAt));
        }

        /**
         * @param name Internal name of the API product. Characters you can use in the name are restricted to: `A-Z0-9._\-$ %`. **Note:** The internal name cannot be edited when updating the API product.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Internal name of the API product. Characters you can use in the name are restricted to: `A-Z0-9._\-$ %`. **Note:** The internal name cannot be edited when updating the API product.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param operationGroup Configuration used to group Apigee proxies or remote services with resources, method types, and quotas. The resource refers to the resource URI (excluding the base path). With this grouping, the API product creator is able to fine-tune and give precise control over which REST methods have access to specific resources and how many calls can be made (using the `quota` setting). **Note:** The `api_resources` setting cannot be specified for both the API product and operation group; otherwise the call will fail.
         * 
         * @return builder
         * 
         */
        public Builder operationGroup(@Nullable Output<GoogleCloudApigeeV1OperationGroupArgs> operationGroup) {
            $.operationGroup = operationGroup;
            return this;
        }

        /**
         * @param operationGroup Configuration used to group Apigee proxies or remote services with resources, method types, and quotas. The resource refers to the resource URI (excluding the base path). With this grouping, the API product creator is able to fine-tune and give precise control over which REST methods have access to specific resources and how many calls can be made (using the `quota` setting). **Note:** The `api_resources` setting cannot be specified for both the API product and operation group; otherwise the call will fail.
         * 
         * @return builder
         * 
         */
        public Builder operationGroup(GoogleCloudApigeeV1OperationGroupArgs operationGroup) {
            return operationGroup(Output.of(operationGroup));
        }

        public Builder organizationId(Output<String> organizationId) {
            $.organizationId = organizationId;
            return this;
        }

        public Builder organizationId(String organizationId) {
            return organizationId(Output.of(organizationId));
        }

        /**
         * @param proxies Comma-separated list of API proxy names to which this API product is bound. By specifying API proxies, you can associate resources in the API product with specific API proxies, preventing developers from accessing those resources through other API proxies. Apigee rejects requests to API proxies that are not listed. **Note:** The API proxy names must already exist in the specified environment as they will be validated upon creation.
         * 
         * @return builder
         * 
         */
        public Builder proxies(@Nullable Output<List<String>> proxies) {
            $.proxies = proxies;
            return this;
        }

        /**
         * @param proxies Comma-separated list of API proxy names to which this API product is bound. By specifying API proxies, you can associate resources in the API product with specific API proxies, preventing developers from accessing those resources through other API proxies. Apigee rejects requests to API proxies that are not listed. **Note:** The API proxy names must already exist in the specified environment as they will be validated upon creation.
         * 
         * @return builder
         * 
         */
        public Builder proxies(List<String> proxies) {
            return proxies(Output.of(proxies));
        }

        /**
         * @param proxies Comma-separated list of API proxy names to which this API product is bound. By specifying API proxies, you can associate resources in the API product with specific API proxies, preventing developers from accessing those resources through other API proxies. Apigee rejects requests to API proxies that are not listed. **Note:** The API proxy names must already exist in the specified environment as they will be validated upon creation.
         * 
         * @return builder
         * 
         */
        public Builder proxies(String... proxies) {
            return proxies(List.of(proxies));
        }

        /**
         * @param quota Number of request messages permitted per app by this API product for the specified `quotaInterval` and `quotaTimeUnit`. For example, a `quota` of 50, for a `quotaInterval` of 12 and a `quotaTimeUnit` of hours means 50 requests are allowed every 12 hours.
         * 
         * @return builder
         * 
         */
        public Builder quota(@Nullable Output<String> quota) {
            $.quota = quota;
            return this;
        }

        /**
         * @param quota Number of request messages permitted per app by this API product for the specified `quotaInterval` and `quotaTimeUnit`. For example, a `quota` of 50, for a `quotaInterval` of 12 and a `quotaTimeUnit` of hours means 50 requests are allowed every 12 hours.
         * 
         * @return builder
         * 
         */
        public Builder quota(String quota) {
            return quota(Output.of(quota));
        }

        /**
         * @param quotaInterval Time interval over which the number of request messages is calculated.
         * 
         * @return builder
         * 
         */
        public Builder quotaInterval(@Nullable Output<String> quotaInterval) {
            $.quotaInterval = quotaInterval;
            return this;
        }

        /**
         * @param quotaInterval Time interval over which the number of request messages is calculated.
         * 
         * @return builder
         * 
         */
        public Builder quotaInterval(String quotaInterval) {
            return quotaInterval(Output.of(quotaInterval));
        }

        /**
         * @param quotaTimeUnit Time unit defined for the `quotaInterval`. Valid values include `minute`, `hour`, `day`, or `month`.
         * 
         * @return builder
         * 
         */
        public Builder quotaTimeUnit(@Nullable Output<String> quotaTimeUnit) {
            $.quotaTimeUnit = quotaTimeUnit;
            return this;
        }

        /**
         * @param quotaTimeUnit Time unit defined for the `quotaInterval`. Valid values include `minute`, `hour`, `day`, or `month`.
         * 
         * @return builder
         * 
         */
        public Builder quotaTimeUnit(String quotaTimeUnit) {
            return quotaTimeUnit(Output.of(quotaTimeUnit));
        }

        /**
         * @param scopes Comma-separated list of OAuth scopes that are validated at runtime. Apigee validates that the scopes in any access token presented match the scopes defined in the OAuth policy associated with the API product.
         * 
         * @return builder
         * 
         */
        public Builder scopes(@Nullable Output<List<String>> scopes) {
            $.scopes = scopes;
            return this;
        }

        /**
         * @param scopes Comma-separated list of OAuth scopes that are validated at runtime. Apigee validates that the scopes in any access token presented match the scopes defined in the OAuth policy associated with the API product.
         * 
         * @return builder
         * 
         */
        public Builder scopes(List<String> scopes) {
            return scopes(Output.of(scopes));
        }

        /**
         * @param scopes Comma-separated list of OAuth scopes that are validated at runtime. Apigee validates that the scopes in any access token presented match the scopes defined in the OAuth policy associated with the API product.
         * 
         * @return builder
         * 
         */
        public Builder scopes(String... scopes) {
            return scopes(List.of(scopes));
        }

        public ApiProductArgs build() {
            $.organizationId = Objects.requireNonNull($.organizationId, "expected parameter 'organizationId' to be non-null");
            return $;
        }
    }

}
