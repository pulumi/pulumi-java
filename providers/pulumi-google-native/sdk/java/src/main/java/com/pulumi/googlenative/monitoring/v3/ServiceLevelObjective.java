// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.monitoring.v3;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.googlenative.Utilities;
import com.pulumi.googlenative.monitoring.v3.ServiceLevelObjectiveArgs;
import com.pulumi.googlenative.monitoring.v3.outputs.ServiceLevelIndicatorResponse;
import java.lang.Double;
import java.lang.String;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Create a ServiceLevelObjective for the given Service.
 * Auto-naming is currently not supported for this resource.
 * 
 */
@ResourceType(type="google-native:monitoring/v3:ServiceLevelObjective")
public class ServiceLevelObjective extends com.pulumi.resources.CustomResource {
    /**
     * A calendar period, semantically &#34;since the start of the current &#34;. At this time, only DAY, WEEK, FORTNIGHT, and MONTH are supported.
     * 
     */
    @Export(name="calendarPeriod", type=String.class, parameters={})
    private Output<String> calendarPeriod;

    /**
     * @return A calendar period, semantically &#34;since the start of the current &#34;. At this time, only DAY, WEEK, FORTNIGHT, and MONTH are supported.
     * 
     */
    public Output<String> calendarPeriod() {
        return this.calendarPeriod;
    }
    /**
     * Name used for UI elements listing this SLO.
     * 
     */
    @Export(name="displayName", type=String.class, parameters={})
    private Output<String> displayName;

    /**
     * @return Name used for UI elements listing this SLO.
     * 
     */
    public Output<String> displayName() {
        return this.displayName;
    }
    /**
     * The fraction of service that must be good in order for this objective to be met. 0 &lt; goal &lt;= 0.999.
     * 
     */
    @Export(name="goal", type=Double.class, parameters={})
    private Output<Double> goal;

    /**
     * @return The fraction of service that must be good in order for this objective to be met. 0 &lt; goal &lt;= 0.999.
     * 
     */
    public Output<Double> goal() {
        return this.goal;
    }
    /**
     * Resource name for this ServiceLevelObjective. The format is: projects/[PROJECT_ID_OR_NUMBER]/services/[SERVICE_ID]/serviceLevelObjectives/[SLO_NAME]
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return Resource name for this ServiceLevelObjective. The format is: projects/[PROJECT_ID_OR_NUMBER]/services/[SERVICE_ID]/serviceLevelObjectives/[SLO_NAME]
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * A rolling time period, semantically &#34;in the past &#34;. Must be an integer multiple of 1 day no larger than 30 days.
     * 
     */
    @Export(name="rollingPeriod", type=String.class, parameters={})
    private Output<String> rollingPeriod;

    /**
     * @return A rolling time period, semantically &#34;in the past &#34;. Must be an integer multiple of 1 day no larger than 30 days.
     * 
     */
    public Output<String> rollingPeriod() {
        return this.rollingPeriod;
    }
    @Export(name="serviceId", type=String.class, parameters={})
    private Output<String> serviceId;

    public Output<String> serviceId() {
        return this.serviceId;
    }
    /**
     * The definition of good service, used to measure and calculate the quality of the Service&#39;s performance with respect to a single aspect of service quality.
     * 
     */
    @Export(name="serviceLevelIndicator", type=ServiceLevelIndicatorResponse.class, parameters={})
    private Output<ServiceLevelIndicatorResponse> serviceLevelIndicator;

    /**
     * @return The definition of good service, used to measure and calculate the quality of the Service&#39;s performance with respect to a single aspect of service quality.
     * 
     */
    public Output<ServiceLevelIndicatorResponse> serviceLevelIndicator() {
        return this.serviceLevelIndicator;
    }
    /**
     * Optional. The ServiceLevelObjective id to use for this ServiceLevelObjective. If omitted, an id will be generated instead. Must match the pattern [a-z0-9\-]+
     * 
     */
    @Export(name="serviceLevelObjectiveId", type=String.class, parameters={})
    private Output</* @Nullable */ String> serviceLevelObjectiveId;

    /**
     * @return Optional. The ServiceLevelObjective id to use for this ServiceLevelObjective. If omitted, an id will be generated instead. Must match the pattern [a-z0-9\-]+
     * 
     */
    public Output<Optional<String>> serviceLevelObjectiveId() {
        return Codegen.optional(this.serviceLevelObjectiveId);
    }
    /**
     * Labels which have been used to annotate the service-level objective. Label keys must start with a letter. Label keys and values may contain lowercase letters, numbers, underscores, and dashes. Label keys and values have a maximum length of 63 characters, and must be less than 128 bytes in size. Up to 64 label entries may be stored. For labels which do not have a semantic value, the empty string may be supplied for the label value.
     * 
     */
    @Export(name="userLabels", type=Map.class, parameters={String.class, String.class})
    private Output<Map<String,String>> userLabels;

    /**
     * @return Labels which have been used to annotate the service-level objective. Label keys must start with a letter. Label keys and values may contain lowercase letters, numbers, underscores, and dashes. Label keys and values have a maximum length of 63 characters, and must be less than 128 bytes in size. Up to 64 label entries may be stored. For labels which do not have a semantic value, the empty string may be supplied for the label value.
     * 
     */
    public Output<Map<String,String>> userLabels() {
        return this.userLabels;
    }
    @Export(name="v3Id", type=String.class, parameters={})
    private Output<String> v3Id;

    public Output<String> v3Id() {
        return this.v3Id;
    }
    @Export(name="v3Id1", type=String.class, parameters={})
    private Output<String> v3Id1;

    public Output<String> v3Id1() {
        return this.v3Id1;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ServiceLevelObjective(String name) {
        this(name, ServiceLevelObjectiveArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ServiceLevelObjective(String name, ServiceLevelObjectiveArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ServiceLevelObjective(String name, ServiceLevelObjectiveArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("google-native:monitoring/v3:ServiceLevelObjective", name, args == null ? ServiceLevelObjectiveArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private ServiceLevelObjective(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("google-native:monitoring/v3:ServiceLevelObjective", name, null, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ServiceLevelObjective get(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ServiceLevelObjective(name, id, options);
    }
}
