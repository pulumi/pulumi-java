// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.osconfig_v1alpha.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.osconfig_v1alpha.inputs.OSPolicyResourceGroupResponse;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;


/**
 * An OS policy defines the desired state configuration for a VM.
 * 
 */
public final class OSPolicyResponse extends com.pulumi.resources.InvokeArgs {

    public static final OSPolicyResponse Empty = new OSPolicyResponse();

    /**
     * This flag determines the OS policy compliance status when none of the resource groups within the policy are applicable for a VM. Set this value to `true` if the policy needs to be reported as compliant even if the policy has nothing to validate or enforce.
     * 
     */
    @Import(name="allowNoResourceGroupMatch", required=true)
    private Boolean allowNoResourceGroupMatch;

    /**
     * @return This flag determines the OS policy compliance status when none of the resource groups within the policy are applicable for a VM. Set this value to `true` if the policy needs to be reported as compliant even if the policy has nothing to validate or enforce.
     * 
     */
    public Boolean allowNoResourceGroupMatch() {
        return this.allowNoResourceGroupMatch;
    }

    /**
     * Policy description. Length of the description is limited to 1024 characters.
     * 
     */
    @Import(name="description", required=true)
    private String description;

    /**
     * @return Policy description. Length of the description is limited to 1024 characters.
     * 
     */
    public String description() {
        return this.description;
    }

    /**
     * Policy mode
     * 
     */
    @Import(name="mode", required=true)
    private String mode;

    /**
     * @return Policy mode
     * 
     */
    public String mode() {
        return this.mode;
    }

    /**
     * List of resource groups for the policy. For a particular VM, resource groups are evaluated in the order specified and the first resource group that is applicable is selected and the rest are ignored. If none of the resource groups are applicable for a VM, the VM is considered to be non-compliant w.r.t this policy. This behavior can be toggled by the flag `allow_no_resource_group_match`
     * 
     */
    @Import(name="resourceGroups", required=true)
    private List<OSPolicyResourceGroupResponse> resourceGroups;

    /**
     * @return List of resource groups for the policy. For a particular VM, resource groups are evaluated in the order specified and the first resource group that is applicable is selected and the rest are ignored. If none of the resource groups are applicable for a VM, the VM is considered to be non-compliant w.r.t this policy. This behavior can be toggled by the flag `allow_no_resource_group_match`
     * 
     */
    public List<OSPolicyResourceGroupResponse> resourceGroups() {
        return this.resourceGroups;
    }

    private OSPolicyResponse() {}

    private OSPolicyResponse(OSPolicyResponse $) {
        this.allowNoResourceGroupMatch = $.allowNoResourceGroupMatch;
        this.description = $.description;
        this.mode = $.mode;
        this.resourceGroups = $.resourceGroups;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OSPolicyResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OSPolicyResponse $;

        public Builder() {
            $ = new OSPolicyResponse();
        }

        public Builder(OSPolicyResponse defaults) {
            $ = new OSPolicyResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param allowNoResourceGroupMatch This flag determines the OS policy compliance status when none of the resource groups within the policy are applicable for a VM. Set this value to `true` if the policy needs to be reported as compliant even if the policy has nothing to validate or enforce.
         * 
         * @return builder
         * 
         */
        public Builder allowNoResourceGroupMatch(Boolean allowNoResourceGroupMatch) {
            $.allowNoResourceGroupMatch = allowNoResourceGroupMatch;
            return this;
        }

        /**
         * @param description Policy description. Length of the description is limited to 1024 characters.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            $.description = description;
            return this;
        }

        /**
         * @param mode Policy mode
         * 
         * @return builder
         * 
         */
        public Builder mode(String mode) {
            $.mode = mode;
            return this;
        }

        /**
         * @param resourceGroups List of resource groups for the policy. For a particular VM, resource groups are evaluated in the order specified and the first resource group that is applicable is selected and the rest are ignored. If none of the resource groups are applicable for a VM, the VM is considered to be non-compliant w.r.t this policy. This behavior can be toggled by the flag `allow_no_resource_group_match`
         * 
         * @return builder
         * 
         */
        public Builder resourceGroups(List<OSPolicyResourceGroupResponse> resourceGroups) {
            $.resourceGroups = resourceGroups;
            return this;
        }

        /**
         * @param resourceGroups List of resource groups for the policy. For a particular VM, resource groups are evaluated in the order specified and the first resource group that is applicable is selected and the rest are ignored. If none of the resource groups are applicable for a VM, the VM is considered to be non-compliant w.r.t this policy. This behavior can be toggled by the flag `allow_no_resource_group_match`
         * 
         * @return builder
         * 
         */
        public Builder resourceGroups(OSPolicyResourceGroupResponse... resourceGroups) {
            return resourceGroups(List.of(resourceGroups));
        }

        public OSPolicyResponse build() {
            $.allowNoResourceGroupMatch = Objects.requireNonNull($.allowNoResourceGroupMatch, "expected parameter 'allowNoResourceGroupMatch' to be non-null");
            $.description = Objects.requireNonNull($.description, "expected parameter 'description' to be non-null");
            $.mode = Objects.requireNonNull($.mode, "expected parameter 'mode' to be non-null");
            $.resourceGroups = Objects.requireNonNull($.resourceGroups, "expected parameter 'resourceGroups' to be non-null");
            return $;
        }
    }

}
