// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.jobs.v3.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.googlenative.jobs.v3.outputs.CompensationRangeResponse;
import com.pulumi.googlenative.jobs.v3.outputs.MoneyResponse;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class CompensationEntryResponse {
    /**
     * @return Optional. Compensation amount.
     * 
     */
    private final MoneyResponse amount;
    /**
     * @return Optional. Compensation description. For example, could indicate equity terms or provide additional context to an estimated bonus.
     * 
     */
    private final String description;
    /**
     * @return Optional. Expected number of units paid each year. If not specified, when Job.employment_types is FULLTIME, a default value is inferred based on unit. Default values: - HOURLY: 2080 - DAILY: 260 - WEEKLY: 52 - MONTHLY: 12 - ANNUAL: 1
     * 
     */
    private final Double expectedUnitsPerYear;
    /**
     * @return Optional. Compensation range.
     * 
     */
    private final CompensationRangeResponse range;
    /**
     * @return Optional. Compensation type. Default is CompensationUnit.COMPENSATION_TYPE_UNSPECIFIED.
     * 
     */
    private final String type;
    /**
     * @return Optional. Frequency of the specified amount. Default is CompensationUnit.COMPENSATION_UNIT_UNSPECIFIED.
     * 
     */
    private final String unit;

    @CustomType.Constructor
    private CompensationEntryResponse(
        @CustomType.Parameter("amount") MoneyResponse amount,
        @CustomType.Parameter("description") String description,
        @CustomType.Parameter("expectedUnitsPerYear") Double expectedUnitsPerYear,
        @CustomType.Parameter("range") CompensationRangeResponse range,
        @CustomType.Parameter("type") String type,
        @CustomType.Parameter("unit") String unit) {
        this.amount = amount;
        this.description = description;
        this.expectedUnitsPerYear = expectedUnitsPerYear;
        this.range = range;
        this.type = type;
        this.unit = unit;
    }

    /**
     * @return Optional. Compensation amount.
     * 
     */
    public MoneyResponse amount() {
        return this.amount;
    }
    /**
     * @return Optional. Compensation description. For example, could indicate equity terms or provide additional context to an estimated bonus.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return Optional. Expected number of units paid each year. If not specified, when Job.employment_types is FULLTIME, a default value is inferred based on unit. Default values: - HOURLY: 2080 - DAILY: 260 - WEEKLY: 52 - MONTHLY: 12 - ANNUAL: 1
     * 
     */
    public Double expectedUnitsPerYear() {
        return this.expectedUnitsPerYear;
    }
    /**
     * @return Optional. Compensation range.
     * 
     */
    public CompensationRangeResponse range() {
        return this.range;
    }
    /**
     * @return Optional. Compensation type. Default is CompensationUnit.COMPENSATION_TYPE_UNSPECIFIED.
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return Optional. Frequency of the specified amount. Default is CompensationUnit.COMPENSATION_UNIT_UNSPECIFIED.
     * 
     */
    public String unit() {
        return this.unit;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CompensationEntryResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MoneyResponse amount;
        private String description;
        private Double expectedUnitsPerYear;
        private CompensationRangeResponse range;
        private String type;
        private String unit;

        public Builder() {
    	      // Empty
        }

        public Builder(CompensationEntryResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.amount = defaults.amount;
    	      this.description = defaults.description;
    	      this.expectedUnitsPerYear = defaults.expectedUnitsPerYear;
    	      this.range = defaults.range;
    	      this.type = defaults.type;
    	      this.unit = defaults.unit;
        }

        public Builder amount(MoneyResponse amount) {
            this.amount = Objects.requireNonNull(amount);
            return this;
        }
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        public Builder expectedUnitsPerYear(Double expectedUnitsPerYear) {
            this.expectedUnitsPerYear = Objects.requireNonNull(expectedUnitsPerYear);
            return this;
        }
        public Builder range(CompensationRangeResponse range) {
            this.range = Objects.requireNonNull(range);
            return this;
        }
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public Builder unit(String unit) {
            this.unit = Objects.requireNonNull(unit);
            return this;
        }        public CompensationEntryResponse build() {
            return new CompensationEntryResponse(amount, description, expectedUnitsPerYear, range, type, unit);
        }
    }
}
