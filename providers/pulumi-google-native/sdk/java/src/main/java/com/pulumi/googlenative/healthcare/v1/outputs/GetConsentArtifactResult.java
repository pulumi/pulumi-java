// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.healthcare.v1.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.googlenative.healthcare.v1.outputs.ImageResponse;
import com.pulumi.googlenative.healthcare.v1.outputs.SignatureResponse;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetConsentArtifactResult {
    /**
     * @return Optional. Screenshots, PDFs, or other binary information documenting the user&#39;s consent.
     * 
     */
    private final List<ImageResponse> consentContentScreenshots;
    /**
     * @return Optional. An string indicating the version of the consent information shown to the user.
     * 
     */
    private final String consentContentVersion;
    /**
     * @return Optional. A signature from a guardian.
     * 
     */
    private final SignatureResponse guardianSignature;
    /**
     * @return Optional. Metadata associated with the Consent artifact. For example, the consent locale or user agent version.
     * 
     */
    private final Map<String,String> metadata;
    /**
     * @return Resource name of the Consent artifact, of the form `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/consentStores/{consent_store_id}/consentArtifacts/{consent_artifact_id}`. Cannot be changed after creation.
     * 
     */
    private final String name;
    /**
     * @return User&#39;s UUID provided by the client.
     * 
     */
    private final String userId;
    /**
     * @return Optional. User&#39;s signature.
     * 
     */
    private final SignatureResponse userSignature;
    /**
     * @return Optional. A signature from a witness.
     * 
     */
    private final SignatureResponse witnessSignature;

    @CustomType.Constructor
    private GetConsentArtifactResult(
        @CustomType.Parameter("consentContentScreenshots") List<ImageResponse> consentContentScreenshots,
        @CustomType.Parameter("consentContentVersion") String consentContentVersion,
        @CustomType.Parameter("guardianSignature") SignatureResponse guardianSignature,
        @CustomType.Parameter("metadata") Map<String,String> metadata,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("userId") String userId,
        @CustomType.Parameter("userSignature") SignatureResponse userSignature,
        @CustomType.Parameter("witnessSignature") SignatureResponse witnessSignature) {
        this.consentContentScreenshots = consentContentScreenshots;
        this.consentContentVersion = consentContentVersion;
        this.guardianSignature = guardianSignature;
        this.metadata = metadata;
        this.name = name;
        this.userId = userId;
        this.userSignature = userSignature;
        this.witnessSignature = witnessSignature;
    }

    /**
     * @return Optional. Screenshots, PDFs, or other binary information documenting the user&#39;s consent.
     * 
     */
    public List<ImageResponse> consentContentScreenshots() {
        return this.consentContentScreenshots;
    }
    /**
     * @return Optional. An string indicating the version of the consent information shown to the user.
     * 
     */
    public String consentContentVersion() {
        return this.consentContentVersion;
    }
    /**
     * @return Optional. A signature from a guardian.
     * 
     */
    public SignatureResponse guardianSignature() {
        return this.guardianSignature;
    }
    /**
     * @return Optional. Metadata associated with the Consent artifact. For example, the consent locale or user agent version.
     * 
     */
    public Map<String,String> metadata() {
        return this.metadata;
    }
    /**
     * @return Resource name of the Consent artifact, of the form `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/consentStores/{consent_store_id}/consentArtifacts/{consent_artifact_id}`. Cannot be changed after creation.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return User&#39;s UUID provided by the client.
     * 
     */
    public String userId() {
        return this.userId;
    }
    /**
     * @return Optional. User&#39;s signature.
     * 
     */
    public SignatureResponse userSignature() {
        return this.userSignature;
    }
    /**
     * @return Optional. A signature from a witness.
     * 
     */
    public SignatureResponse witnessSignature() {
        return this.witnessSignature;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetConsentArtifactResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<ImageResponse> consentContentScreenshots;
        private String consentContentVersion;
        private SignatureResponse guardianSignature;
        private Map<String,String> metadata;
        private String name;
        private String userId;
        private SignatureResponse userSignature;
        private SignatureResponse witnessSignature;

        public Builder() {
    	      // Empty
        }

        public Builder(GetConsentArtifactResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.consentContentScreenshots = defaults.consentContentScreenshots;
    	      this.consentContentVersion = defaults.consentContentVersion;
    	      this.guardianSignature = defaults.guardianSignature;
    	      this.metadata = defaults.metadata;
    	      this.name = defaults.name;
    	      this.userId = defaults.userId;
    	      this.userSignature = defaults.userSignature;
    	      this.witnessSignature = defaults.witnessSignature;
        }

        public Builder consentContentScreenshots(List<ImageResponse> consentContentScreenshots) {
            this.consentContentScreenshots = Objects.requireNonNull(consentContentScreenshots);
            return this;
        }
        public Builder consentContentScreenshots(ImageResponse... consentContentScreenshots) {
            return consentContentScreenshots(List.of(consentContentScreenshots));
        }
        public Builder consentContentVersion(String consentContentVersion) {
            this.consentContentVersion = Objects.requireNonNull(consentContentVersion);
            return this;
        }
        public Builder guardianSignature(SignatureResponse guardianSignature) {
            this.guardianSignature = Objects.requireNonNull(guardianSignature);
            return this;
        }
        public Builder metadata(Map<String,String> metadata) {
            this.metadata = Objects.requireNonNull(metadata);
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder userId(String userId) {
            this.userId = Objects.requireNonNull(userId);
            return this;
        }
        public Builder userSignature(SignatureResponse userSignature) {
            this.userSignature = Objects.requireNonNull(userSignature);
            return this;
        }
        public Builder witnessSignature(SignatureResponse witnessSignature) {
            this.witnessSignature = Objects.requireNonNull(witnessSignature);
            return this;
        }        public GetConsentArtifactResult build() {
            return new GetConsentArtifactResult(consentContentScreenshots, consentContentVersion, guardianSignature, metadata, name, userId, userSignature, witnessSignature);
        }
    }
}
