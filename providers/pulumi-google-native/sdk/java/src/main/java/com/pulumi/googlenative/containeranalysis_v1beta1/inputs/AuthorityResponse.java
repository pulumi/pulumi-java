// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.containeranalysis_v1beta1.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.containeranalysis_v1beta1.inputs.HintResponse;
import java.util.Objects;


/**
 * Note kind that represents a logical attestation &#34;role&#34; or &#34;authority&#34;. For example, an organization might have one `Authority` for &#34;QA&#34; and one for &#34;build&#34;. This note is intended to act strictly as a grouping mechanism for the attached occurrences (Attestations). This grouping mechanism also provides a security boundary, since IAM ACLs gate the ability for a principle to attach an occurrence to a given note. It also provides a single point of lookup to find all attached attestation occurrences, even if they don&#39;t all live in the same project.
 * 
 */
public final class AuthorityResponse extends com.pulumi.resources.InvokeArgs {

    public static final AuthorityResponse Empty = new AuthorityResponse();

    /**
     * Hint hints at the purpose of the attestation authority.
     * 
     */
    @Import(name="hint", required=true)
    private HintResponse hint;

    public HintResponse hint() {
        return this.hint;
    }

    private AuthorityResponse() {}

    private AuthorityResponse(AuthorityResponse $) {
        this.hint = $.hint;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AuthorityResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AuthorityResponse $;

        public Builder() {
            $ = new AuthorityResponse();
        }

        public Builder(AuthorityResponse defaults) {
            $ = new AuthorityResponse(Objects.requireNonNull(defaults));
        }

        public Builder hint(HintResponse hint) {
            $.hint = hint;
            return this;
        }

        public AuthorityResponse build() {
            $.hint = Objects.requireNonNull($.hint, "expected parameter 'hint' to be non-null");
            return $;
        }
    }

}
