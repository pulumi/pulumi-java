// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.remotebuildexecution.v1alpha.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.googlenative.remotebuildexecution.v1alpha.outputs.GoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfigResponse;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigResponse {
    /**
     * @return The accelerator card attached to each VM.
     * 
     */
    private final GoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfigResponse accelerator;
    /**
     * @return Size of the disk attached to the worker, in GB. See https://cloud.google.com/compute/docs/disks/
     * 
     */
    private final String diskSizeGb;
    /**
     * @return Disk Type to use for the worker. See [Storage options](https://cloud.google.com/compute/docs/disks/#introduction). Currently only `pd-standard` and `pd-ssd` are supported.
     * 
     */
    private final String diskType;
    /**
     * @return Labels associated with the workers. Label keys and values can be no longer than 63 characters, can only contain lowercase letters, numeric characters, underscores and dashes. International letters are permitted. Label keys must start with a letter. Label values are optional. There can not be more than 64 labels per resource.
     * 
     */
    private final Map<String,String> labels;
    /**
     * @return Machine type of the worker, such as `e2-standard-2`. See https://cloud.google.com/compute/docs/machine-types for a list of supported machine types. Note that `f1-micro` and `g1-small` are not yet supported.
     * 
     */
    private final String machineType;
    /**
     * @return The maximum number of actions a worker can execute concurrently.
     * 
     */
    private final String maxConcurrentActions;
    /**
     * @return Minimum CPU platform to use when creating the worker. See [CPU Platforms](https://cloud.google.com/compute/docs/cpu-platforms).
     * 
     */
    private final String minCpuPlatform;
    /**
     * @return Determines the type of network access granted to workers. Possible values: - &#34;public&#34;: Workers can connect to the public internet. - &#34;private&#34;: Workers can only connect to Google APIs and services. - &#34;restricted-private&#34;: Workers can only connect to Google APIs that are reachable through `restricted.googleapis.com` (`199.36.153.4/30`).
     * 
     */
    private final String networkAccess;
    /**
     * @return Determines whether the worker is reserved (equivalent to a Compute Engine on-demand VM and therefore won&#39;t be preempted). See [Preemptible VMs](https://cloud.google.com/preemptible-vms/) for more details.
     * 
     */
    private final Boolean reserved;
    /**
     * @return The node type name to be used for sole-tenant nodes.
     * 
     */
    private final String soleTenantNodeType;
    /**
     * @return The name of the image used by each VM.
     * 
     */
    private final String vmImage;

    @CustomType.Constructor
    private GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigResponse(
        @CustomType.Parameter("accelerator") GoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfigResponse accelerator,
        @CustomType.Parameter("diskSizeGb") String diskSizeGb,
        @CustomType.Parameter("diskType") String diskType,
        @CustomType.Parameter("labels") Map<String,String> labels,
        @CustomType.Parameter("machineType") String machineType,
        @CustomType.Parameter("maxConcurrentActions") String maxConcurrentActions,
        @CustomType.Parameter("minCpuPlatform") String minCpuPlatform,
        @CustomType.Parameter("networkAccess") String networkAccess,
        @CustomType.Parameter("reserved") Boolean reserved,
        @CustomType.Parameter("soleTenantNodeType") String soleTenantNodeType,
        @CustomType.Parameter("vmImage") String vmImage) {
        this.accelerator = accelerator;
        this.diskSizeGb = diskSizeGb;
        this.diskType = diskType;
        this.labels = labels;
        this.machineType = machineType;
        this.maxConcurrentActions = maxConcurrentActions;
        this.minCpuPlatform = minCpuPlatform;
        this.networkAccess = networkAccess;
        this.reserved = reserved;
        this.soleTenantNodeType = soleTenantNodeType;
        this.vmImage = vmImage;
    }

    /**
     * @return The accelerator card attached to each VM.
     * 
     */
    public GoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfigResponse accelerator() {
        return this.accelerator;
    }
    /**
     * @return Size of the disk attached to the worker, in GB. See https://cloud.google.com/compute/docs/disks/
     * 
     */
    public String diskSizeGb() {
        return this.diskSizeGb;
    }
    /**
     * @return Disk Type to use for the worker. See [Storage options](https://cloud.google.com/compute/docs/disks/#introduction). Currently only `pd-standard` and `pd-ssd` are supported.
     * 
     */
    public String diskType() {
        return this.diskType;
    }
    /**
     * @return Labels associated with the workers. Label keys and values can be no longer than 63 characters, can only contain lowercase letters, numeric characters, underscores and dashes. International letters are permitted. Label keys must start with a letter. Label values are optional. There can not be more than 64 labels per resource.
     * 
     */
    public Map<String,String> labels() {
        return this.labels;
    }
    /**
     * @return Machine type of the worker, such as `e2-standard-2`. See https://cloud.google.com/compute/docs/machine-types for a list of supported machine types. Note that `f1-micro` and `g1-small` are not yet supported.
     * 
     */
    public String machineType() {
        return this.machineType;
    }
    /**
     * @return The maximum number of actions a worker can execute concurrently.
     * 
     */
    public String maxConcurrentActions() {
        return this.maxConcurrentActions;
    }
    /**
     * @return Minimum CPU platform to use when creating the worker. See [CPU Platforms](https://cloud.google.com/compute/docs/cpu-platforms).
     * 
     */
    public String minCpuPlatform() {
        return this.minCpuPlatform;
    }
    /**
     * @return Determines the type of network access granted to workers. Possible values: - &#34;public&#34;: Workers can connect to the public internet. - &#34;private&#34;: Workers can only connect to Google APIs and services. - &#34;restricted-private&#34;: Workers can only connect to Google APIs that are reachable through `restricted.googleapis.com` (`199.36.153.4/30`).
     * 
     */
    public String networkAccess() {
        return this.networkAccess;
    }
    /**
     * @return Determines whether the worker is reserved (equivalent to a Compute Engine on-demand VM and therefore won&#39;t be preempted). See [Preemptible VMs](https://cloud.google.com/preemptible-vms/) for more details.
     * 
     */
    public Boolean reserved() {
        return this.reserved;
    }
    /**
     * @return The node type name to be used for sole-tenant nodes.
     * 
     */
    public String soleTenantNodeType() {
        return this.soleTenantNodeType;
    }
    /**
     * @return The name of the image used by each VM.
     * 
     */
    public String vmImage() {
        return this.vmImage;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfigResponse accelerator;
        private String diskSizeGb;
        private String diskType;
        private Map<String,String> labels;
        private String machineType;
        private String maxConcurrentActions;
        private String minCpuPlatform;
        private String networkAccess;
        private Boolean reserved;
        private String soleTenantNodeType;
        private String vmImage;

        public Builder() {
    	      // Empty
        }

        public Builder(GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accelerator = defaults.accelerator;
    	      this.diskSizeGb = defaults.diskSizeGb;
    	      this.diskType = defaults.diskType;
    	      this.labels = defaults.labels;
    	      this.machineType = defaults.machineType;
    	      this.maxConcurrentActions = defaults.maxConcurrentActions;
    	      this.minCpuPlatform = defaults.minCpuPlatform;
    	      this.networkAccess = defaults.networkAccess;
    	      this.reserved = defaults.reserved;
    	      this.soleTenantNodeType = defaults.soleTenantNodeType;
    	      this.vmImage = defaults.vmImage;
        }

        public Builder accelerator(GoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfigResponse accelerator) {
            this.accelerator = Objects.requireNonNull(accelerator);
            return this;
        }
        public Builder diskSizeGb(String diskSizeGb) {
            this.diskSizeGb = Objects.requireNonNull(diskSizeGb);
            return this;
        }
        public Builder diskType(String diskType) {
            this.diskType = Objects.requireNonNull(diskType);
            return this;
        }
        public Builder labels(Map<String,String> labels) {
            this.labels = Objects.requireNonNull(labels);
            return this;
        }
        public Builder machineType(String machineType) {
            this.machineType = Objects.requireNonNull(machineType);
            return this;
        }
        public Builder maxConcurrentActions(String maxConcurrentActions) {
            this.maxConcurrentActions = Objects.requireNonNull(maxConcurrentActions);
            return this;
        }
        public Builder minCpuPlatform(String minCpuPlatform) {
            this.minCpuPlatform = Objects.requireNonNull(minCpuPlatform);
            return this;
        }
        public Builder networkAccess(String networkAccess) {
            this.networkAccess = Objects.requireNonNull(networkAccess);
            return this;
        }
        public Builder reserved(Boolean reserved) {
            this.reserved = Objects.requireNonNull(reserved);
            return this;
        }
        public Builder soleTenantNodeType(String soleTenantNodeType) {
            this.soleTenantNodeType = Objects.requireNonNull(soleTenantNodeType);
            return this;
        }
        public Builder vmImage(String vmImage) {
            this.vmImage = Objects.requireNonNull(vmImage);
            return this;
        }        public GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigResponse build() {
            return new GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigResponse(accelerator, diskSizeGb, diskType, labels, machineType, maxConcurrentActions, minCpuPlatform, networkAccess, reserved, soleTenantNodeType, vmImage);
        }
    }
}
