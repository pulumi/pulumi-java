// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.bigquery_v2.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class ErrorProtoResponse extends com.pulumi.resources.InvokeArgs {

    public static final ErrorProtoResponse Empty = new ErrorProtoResponse();

    /**
     * Debugging information. This property is internal to Google and should not be used.
     * 
     */
    @Import(name="debugInfo", required=true)
    private String debugInfo;

    public String debugInfo() {
        return this.debugInfo;
    }

    /**
     * Specifies where the error occurred, if present.
     * 
     */
    @Import(name="location", required=true)
    private String location;

    public String location() {
        return this.location;
    }

    /**
     * A human-readable description of the error.
     * 
     */
    @Import(name="message", required=true)
    private String message;

    public String message() {
        return this.message;
    }

    /**
     * A short error code that summarizes the error.
     * 
     */
    @Import(name="reason", required=true)
    private String reason;

    public String reason() {
        return this.reason;
    }

    private ErrorProtoResponse() {}

    private ErrorProtoResponse(ErrorProtoResponse $) {
        this.debugInfo = $.debugInfo;
        this.location = $.location;
        this.message = $.message;
        this.reason = $.reason;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ErrorProtoResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ErrorProtoResponse $;

        public Builder() {
            $ = new ErrorProtoResponse();
        }

        public Builder(ErrorProtoResponse defaults) {
            $ = new ErrorProtoResponse(Objects.requireNonNull(defaults));
        }

        public Builder debugInfo(String debugInfo) {
            $.debugInfo = debugInfo;
            return this;
        }

        public Builder location(String location) {
            $.location = location;
            return this;
        }

        public Builder message(String message) {
            $.message = message;
            return this;
        }

        public Builder reason(String reason) {
            $.reason = reason;
            return this;
        }

        public ErrorProtoResponse build() {
            $.debugInfo = Objects.requireNonNull($.debugInfo, "expected parameter 'debugInfo' to be non-null");
            $.location = Objects.requireNonNull($.location, "expected parameter 'location' to be non-null");
            $.message = Objects.requireNonNull($.message, "expected parameter 'message' to be non-null");
            $.reason = Objects.requireNonNull($.reason, "expected parameter 'reason' to be non-null");
            return $;
        }
    }

}
