// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.dlp.v2.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.dlp.v2.inputs.GooglePrivacyDlpV2KindExpressionArgs;
import com.pulumi.googlenative.dlp.v2.inputs.GooglePrivacyDlpV2PartitionIdArgs;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Options defining a data set within Google Cloud Datastore.
 * 
 */
public final class GooglePrivacyDlpV2DatastoreOptionsArgs extends com.pulumi.resources.ResourceArgs {

    public static final GooglePrivacyDlpV2DatastoreOptionsArgs Empty = new GooglePrivacyDlpV2DatastoreOptionsArgs();

    /**
     * The kind to process.
     * 
     */
    @Import(name="kind")
    private @Nullable Output<GooglePrivacyDlpV2KindExpressionArgs> kind;

    /**
     * @return The kind to process.
     * 
     */
    public Optional<Output<GooglePrivacyDlpV2KindExpressionArgs>> kind() {
        return Optional.ofNullable(this.kind);
    }

    /**
     * A partition ID identifies a grouping of entities. The grouping is always by project and namespace, however the namespace ID may be empty.
     * 
     */
    @Import(name="partitionId")
    private @Nullable Output<GooglePrivacyDlpV2PartitionIdArgs> partitionId;

    /**
     * @return A partition ID identifies a grouping of entities. The grouping is always by project and namespace, however the namespace ID may be empty.
     * 
     */
    public Optional<Output<GooglePrivacyDlpV2PartitionIdArgs>> partitionId() {
        return Optional.ofNullable(this.partitionId);
    }

    private GooglePrivacyDlpV2DatastoreOptionsArgs() {}

    private GooglePrivacyDlpV2DatastoreOptionsArgs(GooglePrivacyDlpV2DatastoreOptionsArgs $) {
        this.kind = $.kind;
        this.partitionId = $.partitionId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GooglePrivacyDlpV2DatastoreOptionsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GooglePrivacyDlpV2DatastoreOptionsArgs $;

        public Builder() {
            $ = new GooglePrivacyDlpV2DatastoreOptionsArgs();
        }

        public Builder(GooglePrivacyDlpV2DatastoreOptionsArgs defaults) {
            $ = new GooglePrivacyDlpV2DatastoreOptionsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param kind The kind to process.
         * 
         * @return builder
         * 
         */
        public Builder kind(@Nullable Output<GooglePrivacyDlpV2KindExpressionArgs> kind) {
            $.kind = kind;
            return this;
        }

        /**
         * @param kind The kind to process.
         * 
         * @return builder
         * 
         */
        public Builder kind(GooglePrivacyDlpV2KindExpressionArgs kind) {
            return kind(Output.of(kind));
        }

        /**
         * @param partitionId A partition ID identifies a grouping of entities. The grouping is always by project and namespace, however the namespace ID may be empty.
         * 
         * @return builder
         * 
         */
        public Builder partitionId(@Nullable Output<GooglePrivacyDlpV2PartitionIdArgs> partitionId) {
            $.partitionId = partitionId;
            return this;
        }

        /**
         * @param partitionId A partition ID identifies a grouping of entities. The grouping is always by project and namespace, however the namespace ID may be empty.
         * 
         * @return builder
         * 
         */
        public Builder partitionId(GooglePrivacyDlpV2PartitionIdArgs partitionId) {
            return partitionId(Output.of(partitionId));
        }

        public GooglePrivacyDlpV2DatastoreOptionsArgs build() {
            return $;
        }
    }

}
