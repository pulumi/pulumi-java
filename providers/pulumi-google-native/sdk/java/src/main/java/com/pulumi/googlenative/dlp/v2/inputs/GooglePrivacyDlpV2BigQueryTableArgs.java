// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.dlp.v2.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Message defining the location of a BigQuery table. A table is uniquely identified by its project_id, dataset_id, and table_name. Within a query a table is often referenced with a string in the format of: `:.` or `..`.
 * 
 */
public final class GooglePrivacyDlpV2BigQueryTableArgs extends com.pulumi.resources.ResourceArgs {

    public static final GooglePrivacyDlpV2BigQueryTableArgs Empty = new GooglePrivacyDlpV2BigQueryTableArgs();

    /**
     * Dataset ID of the table.
     * 
     */
    @Import(name="datasetId")
    private @Nullable Output<String> datasetId;

    /**
     * @return Dataset ID of the table.
     * 
     */
    public Optional<Output<String>> datasetId() {
        return Optional.ofNullable(this.datasetId);
    }

    /**
     * The Google Cloud Platform project ID of the project containing the table. If omitted, project ID is inferred from the API call.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return The Google Cloud Platform project ID of the project containing the table. If omitted, project ID is inferred from the API call.
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * Name of the table.
     * 
     */
    @Import(name="tableId")
    private @Nullable Output<String> tableId;

    /**
     * @return Name of the table.
     * 
     */
    public Optional<Output<String>> tableId() {
        return Optional.ofNullable(this.tableId);
    }

    private GooglePrivacyDlpV2BigQueryTableArgs() {}

    private GooglePrivacyDlpV2BigQueryTableArgs(GooglePrivacyDlpV2BigQueryTableArgs $) {
        this.datasetId = $.datasetId;
        this.project = $.project;
        this.tableId = $.tableId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GooglePrivacyDlpV2BigQueryTableArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GooglePrivacyDlpV2BigQueryTableArgs $;

        public Builder() {
            $ = new GooglePrivacyDlpV2BigQueryTableArgs();
        }

        public Builder(GooglePrivacyDlpV2BigQueryTableArgs defaults) {
            $ = new GooglePrivacyDlpV2BigQueryTableArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param datasetId Dataset ID of the table.
         * 
         * @return builder
         * 
         */
        public Builder datasetId(@Nullable Output<String> datasetId) {
            $.datasetId = datasetId;
            return this;
        }

        /**
         * @param datasetId Dataset ID of the table.
         * 
         * @return builder
         * 
         */
        public Builder datasetId(String datasetId) {
            return datasetId(Output.of(datasetId));
        }

        /**
         * @param project The Google Cloud Platform project ID of the project containing the table. If omitted, project ID is inferred from the API call.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The Google Cloud Platform project ID of the project containing the table. If omitted, project ID is inferred from the API call.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        /**
         * @param tableId Name of the table.
         * 
         * @return builder
         * 
         */
        public Builder tableId(@Nullable Output<String> tableId) {
            $.tableId = tableId;
            return this;
        }

        /**
         * @param tableId Name of the table.
         * 
         * @return builder
         * 
         */
        public Builder tableId(String tableId) {
            return tableId(Output.of(tableId));
        }

        public GooglePrivacyDlpV2BigQueryTableArgs build() {
            return $;
        }
    }

}
