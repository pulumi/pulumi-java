// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.dlp_v2.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.dlp_v2.inputs.GooglePrivacyDlpV2ActionResponse;
import com.pulumi.googlenative.dlp_v2.inputs.GooglePrivacyDlpV2InspectConfigResponse;
import com.pulumi.googlenative.dlp_v2.inputs.GooglePrivacyDlpV2StorageConfigResponse;
import java.lang.String;
import java.util.List;
import java.util.Objects;


/**
 * Controls what and how to inspect for findings.
 * 
 */
public final class GooglePrivacyDlpV2InspectJobConfigResponse extends com.pulumi.resources.InvokeArgs {

    public static final GooglePrivacyDlpV2InspectJobConfigResponse Empty = new GooglePrivacyDlpV2InspectJobConfigResponse();

    /**
     * Actions to execute at the completion of the job.
     * 
     */
    @Import(name="actions", required=true)
    private List<GooglePrivacyDlpV2ActionResponse> actions;

    /**
     * @return Actions to execute at the completion of the job.
     * 
     */
    public List<GooglePrivacyDlpV2ActionResponse> actions() {
        return this.actions;
    }

    /**
     * How and what to scan for.
     * 
     */
    @Import(name="inspectConfig", required=true)
    private GooglePrivacyDlpV2InspectConfigResponse inspectConfig;

    /**
     * @return How and what to scan for.
     * 
     */
    public GooglePrivacyDlpV2InspectConfigResponse inspectConfig() {
        return this.inspectConfig;
    }

    /**
     * If provided, will be used as the default for all values in InspectConfig. `inspect_config` will be merged into the values persisted as part of the template.
     * 
     */
    @Import(name="inspectTemplateName", required=true)
    private String inspectTemplateName;

    /**
     * @return If provided, will be used as the default for all values in InspectConfig. `inspect_config` will be merged into the values persisted as part of the template.
     * 
     */
    public String inspectTemplateName() {
        return this.inspectTemplateName;
    }

    /**
     * The data to scan.
     * 
     */
    @Import(name="storageConfig", required=true)
    private GooglePrivacyDlpV2StorageConfigResponse storageConfig;

    /**
     * @return The data to scan.
     * 
     */
    public GooglePrivacyDlpV2StorageConfigResponse storageConfig() {
        return this.storageConfig;
    }

    private GooglePrivacyDlpV2InspectJobConfigResponse() {}

    private GooglePrivacyDlpV2InspectJobConfigResponse(GooglePrivacyDlpV2InspectJobConfigResponse $) {
        this.actions = $.actions;
        this.inspectConfig = $.inspectConfig;
        this.inspectTemplateName = $.inspectTemplateName;
        this.storageConfig = $.storageConfig;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GooglePrivacyDlpV2InspectJobConfigResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GooglePrivacyDlpV2InspectJobConfigResponse $;

        public Builder() {
            $ = new GooglePrivacyDlpV2InspectJobConfigResponse();
        }

        public Builder(GooglePrivacyDlpV2InspectJobConfigResponse defaults) {
            $ = new GooglePrivacyDlpV2InspectJobConfigResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param actions Actions to execute at the completion of the job.
         * 
         * @return builder
         * 
         */
        public Builder actions(List<GooglePrivacyDlpV2ActionResponse> actions) {
            $.actions = actions;
            return this;
        }

        /**
         * @param actions Actions to execute at the completion of the job.
         * 
         * @return builder
         * 
         */
        public Builder actions(GooglePrivacyDlpV2ActionResponse... actions) {
            return actions(List.of(actions));
        }

        /**
         * @param inspectConfig How and what to scan for.
         * 
         * @return builder
         * 
         */
        public Builder inspectConfig(GooglePrivacyDlpV2InspectConfigResponse inspectConfig) {
            $.inspectConfig = inspectConfig;
            return this;
        }

        /**
         * @param inspectTemplateName If provided, will be used as the default for all values in InspectConfig. `inspect_config` will be merged into the values persisted as part of the template.
         * 
         * @return builder
         * 
         */
        public Builder inspectTemplateName(String inspectTemplateName) {
            $.inspectTemplateName = inspectTemplateName;
            return this;
        }

        /**
         * @param storageConfig The data to scan.
         * 
         * @return builder
         * 
         */
        public Builder storageConfig(GooglePrivacyDlpV2StorageConfigResponse storageConfig) {
            $.storageConfig = storageConfig;
            return this;
        }

        public GooglePrivacyDlpV2InspectJobConfigResponse build() {
            $.actions = Objects.requireNonNull($.actions, "expected parameter 'actions' to be non-null");
            $.inspectConfig = Objects.requireNonNull($.inspectConfig, "expected parameter 'inspectConfig' to be non-null");
            $.inspectTemplateName = Objects.requireNonNull($.inspectTemplateName, "expected parameter 'inspectTemplateName' to be non-null");
            $.storageConfig = Objects.requireNonNull($.storageConfig, "expected parameter 'storageConfig' to be non-null");
            return $;
        }
    }

}
