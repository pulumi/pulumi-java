// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.servicemanagement.v1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.servicemanagement.v1.inputs.LabelDescriptorArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * A description of a log type. Example in YAML format: - name: library.googleapis.com/activity_history description: The history of borrowing and returning library items. display_name: Activity labels: - key: /customer_id description: Identifier of a library customer
 * 
 */
public final class LogDescriptorArgs extends com.pulumi.resources.ResourceArgs {

    public static final LogDescriptorArgs Empty = new LogDescriptorArgs();

    /**
     * A human-readable description of this log. This information appears in the documentation and can contain details.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return A human-readable description of this log. This information appears in the documentation and can contain details.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The human-readable name for this log. This information appears on the user interface and should be concise.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return The human-readable name for this log. This information appears on the user interface and should be concise.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * The set of labels that are available to describe a specific log entry. Runtime requests that contain labels not specified here are considered invalid.
     * 
     */
    @Import(name="labels")
    private @Nullable Output<List<LabelDescriptorArgs>> labels;

    /**
     * @return The set of labels that are available to describe a specific log entry. Runtime requests that contain labels not specified here are considered invalid.
     * 
     */
    public Optional<Output<List<LabelDescriptorArgs>>> labels() {
        return Optional.ofNullable(this.labels);
    }

    /**
     * The name of the log. It must be less than 512 characters long and can include the following characters: upper- and lower-case alphanumeric characters [A-Za-z0-9], and punctuation characters including slash, underscore, hyphen, period [/_-.].
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the log. It must be less than 512 characters long and can include the following characters: upper- and lower-case alphanumeric characters [A-Za-z0-9], and punctuation characters including slash, underscore, hyphen, period [/_-.].
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    private LogDescriptorArgs() {}

    private LogDescriptorArgs(LogDescriptorArgs $) {
        this.description = $.description;
        this.displayName = $.displayName;
        this.labels = $.labels;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LogDescriptorArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LogDescriptorArgs $;

        public Builder() {
            $ = new LogDescriptorArgs();
        }

        public Builder(LogDescriptorArgs defaults) {
            $ = new LogDescriptorArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param description A human-readable description of this log. This information appears in the documentation and can contain details.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description A human-readable description of this log. This information appears in the documentation and can contain details.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param displayName The human-readable name for this log. This information appears on the user interface and should be concise.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName The human-readable name for this log. This information appears on the user interface and should be concise.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param labels The set of labels that are available to describe a specific log entry. Runtime requests that contain labels not specified here are considered invalid.
         * 
         * @return builder
         * 
         */
        public Builder labels(@Nullable Output<List<LabelDescriptorArgs>> labels) {
            $.labels = labels;
            return this;
        }

        /**
         * @param labels The set of labels that are available to describe a specific log entry. Runtime requests that contain labels not specified here are considered invalid.
         * 
         * @return builder
         * 
         */
        public Builder labels(List<LabelDescriptorArgs> labels) {
            return labels(Output.of(labels));
        }

        /**
         * @param labels The set of labels that are available to describe a specific log entry. Runtime requests that contain labels not specified here are considered invalid.
         * 
         * @return builder
         * 
         */
        public Builder labels(LabelDescriptorArgs... labels) {
            return labels(List.of(labels));
        }

        /**
         * @param name The name of the log. It must be less than 512 characters long and can include the following characters: upper- and lower-case alphanumeric characters [A-Za-z0-9], and punctuation characters including slash, underscore, hyphen, period [/_-.].
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the log. It must be less than 512 characters long and can include the following characters: upper- and lower-case alphanumeric characters [A-Za-z0-9], and punctuation characters including slash, underscore, hyphen, period [/_-.].
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public LogDescriptorArgs build() {
            return $;
        }
    }

}
