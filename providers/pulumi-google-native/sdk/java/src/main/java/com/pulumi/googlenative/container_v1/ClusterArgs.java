// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.container_v1;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.container_v1.inputs.AddonsConfigArgs;
import com.pulumi.googlenative.container_v1.inputs.AuthenticatorGroupsConfigArgs;
import com.pulumi.googlenative.container_v1.inputs.AutopilotArgs;
import com.pulumi.googlenative.container_v1.inputs.BinaryAuthorizationArgs;
import com.pulumi.googlenative.container_v1.inputs.ClusterAutoscalingArgs;
import com.pulumi.googlenative.container_v1.inputs.ConfidentialNodesArgs;
import com.pulumi.googlenative.container_v1.inputs.DatabaseEncryptionArgs;
import com.pulumi.googlenative.container_v1.inputs.IPAllocationPolicyArgs;
import com.pulumi.googlenative.container_v1.inputs.LegacyAbacArgs;
import com.pulumi.googlenative.container_v1.inputs.LoggingConfigArgs;
import com.pulumi.googlenative.container_v1.inputs.MaintenancePolicyArgs;
import com.pulumi.googlenative.container_v1.inputs.MasterAuthArgs;
import com.pulumi.googlenative.container_v1.inputs.MasterAuthorizedNetworksConfigArgs;
import com.pulumi.googlenative.container_v1.inputs.MaxPodsConstraintArgs;
import com.pulumi.googlenative.container_v1.inputs.MeshCertificatesArgs;
import com.pulumi.googlenative.container_v1.inputs.MonitoringConfigArgs;
import com.pulumi.googlenative.container_v1.inputs.NetworkConfigArgs;
import com.pulumi.googlenative.container_v1.inputs.NetworkPolicyArgs;
import com.pulumi.googlenative.container_v1.inputs.NodePoolArgs;
import com.pulumi.googlenative.container_v1.inputs.NodePoolDefaultsArgs;
import com.pulumi.googlenative.container_v1.inputs.NotificationConfigArgs;
import com.pulumi.googlenative.container_v1.inputs.PrivateClusterConfigArgs;
import com.pulumi.googlenative.container_v1.inputs.ReleaseChannelArgs;
import com.pulumi.googlenative.container_v1.inputs.ResourceUsageExportConfigArgs;
import com.pulumi.googlenative.container_v1.inputs.ShieldedNodesArgs;
import com.pulumi.googlenative.container_v1.inputs.StatusConditionArgs;
import com.pulumi.googlenative.container_v1.inputs.VerticalPodAutoscalingArgs;
import com.pulumi.googlenative.container_v1.inputs.WorkloadIdentityConfigArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ClusterArgs extends com.pulumi.resources.ResourceArgs {

    public static final ClusterArgs Empty = new ClusterArgs();

    /**
     * Configurations for the various addons available to run in the cluster.
     * 
     */
    @Import(name="addonsConfig")
    private @Nullable Output<AddonsConfigArgs> addonsConfig;

    public Optional<Output<AddonsConfigArgs>> addonsConfig() {
        return Optional.ofNullable(this.addonsConfig);
    }

    /**
     * Configuration controlling RBAC group membership information.
     * 
     */
    @Import(name="authenticatorGroupsConfig")
    private @Nullable Output<AuthenticatorGroupsConfigArgs> authenticatorGroupsConfig;

    public Optional<Output<AuthenticatorGroupsConfigArgs>> authenticatorGroupsConfig() {
        return Optional.ofNullable(this.authenticatorGroupsConfig);
    }

    /**
     * Autopilot configuration for the cluster.
     * 
     */
    @Import(name="autopilot")
    private @Nullable Output<AutopilotArgs> autopilot;

    public Optional<Output<AutopilotArgs>> autopilot() {
        return Optional.ofNullable(this.autopilot);
    }

    /**
     * Cluster-level autoscaling configuration.
     * 
     */
    @Import(name="autoscaling")
    private @Nullable Output<ClusterAutoscalingArgs> autoscaling;

    public Optional<Output<ClusterAutoscalingArgs>> autoscaling() {
        return Optional.ofNullable(this.autoscaling);
    }

    /**
     * Configuration for Binary Authorization.
     * 
     */
    @Import(name="binaryAuthorization")
    private @Nullable Output<BinaryAuthorizationArgs> binaryAuthorization;

    public Optional<Output<BinaryAuthorizationArgs>> binaryAuthorization() {
        return Optional.ofNullable(this.binaryAuthorization);
    }

    /**
     * The IP address range of the container pods in this cluster, in [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing) notation (e.g. `10.96.0.0/14`). Leave blank to have one automatically chosen or specify a `/14` block in `10.0.0.0/8`.
     * 
     */
    @Import(name="clusterIpv4Cidr")
    private @Nullable Output<String> clusterIpv4Cidr;

    public Optional<Output<String>> clusterIpv4Cidr() {
        return Optional.ofNullable(this.clusterIpv4Cidr);
    }

    /**
     * Which conditions caused the current cluster state.
     * 
     */
    @Import(name="conditions")
    private @Nullable Output<List<StatusConditionArgs>> conditions;

    public Optional<Output<List<StatusConditionArgs>>> conditions() {
        return Optional.ofNullable(this.conditions);
    }

    /**
     * Configuration of Confidential Nodes
     * 
     */
    @Import(name="confidentialNodes")
    private @Nullable Output<ConfidentialNodesArgs> confidentialNodes;

    public Optional<Output<ConfidentialNodesArgs>> confidentialNodes() {
        return Optional.ofNullable(this.confidentialNodes);
    }

    /**
     * Configuration of etcd encryption.
     * 
     */
    @Import(name="databaseEncryption")
    private @Nullable Output<DatabaseEncryptionArgs> databaseEncryption;

    public Optional<Output<DatabaseEncryptionArgs>> databaseEncryption() {
        return Optional.ofNullable(this.databaseEncryption);
    }

    /**
     * The default constraint on the maximum number of pods that can be run simultaneously on a node in the node pool of this cluster. Only honored if cluster created with IP Alias support.
     * 
     */
    @Import(name="defaultMaxPodsConstraint")
    private @Nullable Output<MaxPodsConstraintArgs> defaultMaxPodsConstraint;

    public Optional<Output<MaxPodsConstraintArgs>> defaultMaxPodsConstraint() {
        return Optional.ofNullable(this.defaultMaxPodsConstraint);
    }

    /**
     * An optional description of this cluster.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Kubernetes alpha features are enabled on this cluster. This includes alpha API groups (e.g. v1alpha1) and features that may not be production ready in the kubernetes version of the master and nodes. The cluster has no SLA for uptime and master/node upgrades are disabled. Alpha enabled clusters are automatically deleted thirty days after creation.
     * 
     */
    @Import(name="enableKubernetesAlpha")
    private @Nullable Output<Boolean> enableKubernetesAlpha;

    public Optional<Output<Boolean>> enableKubernetesAlpha() {
        return Optional.ofNullable(this.enableKubernetesAlpha);
    }

    /**
     * Enable the ability to use Cloud TPUs in this cluster.
     * 
     */
    @Import(name="enableTpu")
    private @Nullable Output<Boolean> enableTpu;

    public Optional<Output<Boolean>> enableTpu() {
        return Optional.ofNullable(this.enableTpu);
    }

    /**
     * The initial Kubernetes version for this cluster. Valid versions are those found in validMasterVersions returned by getServerConfig. The version can be upgraded over time; such upgrades are reflected in currentMasterVersion and currentNodeVersion. Users may specify either explicit versions offered by Kubernetes Engine or version aliases, which have the following behavior: - &#34;latest&#34;: picks the highest valid Kubernetes version - &#34;1.X&#34;: picks the highest valid patch+gke.N patch in the 1.X version - &#34;1.X.Y&#34;: picks the highest valid gke.N patch in the 1.X.Y version - &#34;1.X.Y-gke.N&#34;: picks an explicit Kubernetes version - &#34;&#34;,&#34;-&#34;: picks the default Kubernetes version
     * 
     */
    @Import(name="initialClusterVersion")
    private @Nullable Output<String> initialClusterVersion;

    public Optional<Output<String>> initialClusterVersion() {
        return Optional.ofNullable(this.initialClusterVersion);
    }

    /**
     * Configuration for cluster IP allocation.
     * 
     */
    @Import(name="ipAllocationPolicy")
    private @Nullable Output<IPAllocationPolicyArgs> ipAllocationPolicy;

    public Optional<Output<IPAllocationPolicyArgs>> ipAllocationPolicy() {
        return Optional.ofNullable(this.ipAllocationPolicy);
    }

    /**
     * Configuration for the legacy ABAC authorization mode.
     * 
     */
    @Import(name="legacyAbac")
    private @Nullable Output<LegacyAbacArgs> legacyAbac;

    public Optional<Output<LegacyAbacArgs>> legacyAbac() {
        return Optional.ofNullable(this.legacyAbac);
    }

    @Import(name="location")
    private @Nullable Output<String> location;

    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * The list of Google Compute Engine [zones](https://cloud.google.com/compute/docs/zones#available) in which the cluster&#39;s nodes should be located. This field provides a default value if [NodePool.Locations](https://cloud.google.com/kubernetes-engine/docs/reference/rest/v1/projects.locations.clusters.nodePools#NodePool.FIELDS.locations) are not specified during node pool creation. Warning: changing cluster locations will update the [NodePool.Locations](https://cloud.google.com/kubernetes-engine/docs/reference/rest/v1/projects.locations.clusters.nodePools#NodePool.FIELDS.locations) of all node pools and will result in nodes being added and/or removed.
     * 
     */
    @Import(name="locations")
    private @Nullable Output<List<String>> locations;

    public Optional<Output<List<String>>> locations() {
        return Optional.ofNullable(this.locations);
    }

    /**
     * Logging configuration for the cluster.
     * 
     */
    @Import(name="loggingConfig")
    private @Nullable Output<LoggingConfigArgs> loggingConfig;

    public Optional<Output<LoggingConfigArgs>> loggingConfig() {
        return Optional.ofNullable(this.loggingConfig);
    }

    /**
     * The logging service the cluster should use to write logs. Currently available options: * `logging.googleapis.com/kubernetes` - The Cloud Logging service with a Kubernetes-native resource model * `logging.googleapis.com` - The legacy Cloud Logging service (no longer available as of GKE 1.15). * `none` - no logs will be exported from the cluster. If left as an empty string,`logging.googleapis.com/kubernetes` will be used for GKE 1.14+ or `logging.googleapis.com` for earlier versions.
     * 
     */
    @Import(name="loggingService")
    private @Nullable Output<String> loggingService;

    public Optional<Output<String>> loggingService() {
        return Optional.ofNullable(this.loggingService);
    }

    /**
     * Configure the maintenance policy for this cluster.
     * 
     */
    @Import(name="maintenancePolicy")
    private @Nullable Output<MaintenancePolicyArgs> maintenancePolicy;

    public Optional<Output<MaintenancePolicyArgs>> maintenancePolicy() {
        return Optional.ofNullable(this.maintenancePolicy);
    }

    /**
     * The authentication information for accessing the master endpoint. If unspecified, the defaults are used: For clusters before v1.12, if master_auth is unspecified, `username` will be set to &#34;admin&#34;, a random password will be generated, and a client certificate will be issued.
     * 
     */
    @Import(name="masterAuth")
    private @Nullable Output<MasterAuthArgs> masterAuth;

    public Optional<Output<MasterAuthArgs>> masterAuth() {
        return Optional.ofNullable(this.masterAuth);
    }

    /**
     * The configuration options for master authorized networks feature.
     * 
     */
    @Import(name="masterAuthorizedNetworksConfig")
    private @Nullable Output<MasterAuthorizedNetworksConfigArgs> masterAuthorizedNetworksConfig;

    public Optional<Output<MasterAuthorizedNetworksConfigArgs>> masterAuthorizedNetworksConfig() {
        return Optional.ofNullable(this.masterAuthorizedNetworksConfig);
    }

    /**
     * Configuration for issuance of mTLS keys and certificates to Kubernetes pods.
     * 
     */
    @Import(name="meshCertificates")
    private @Nullable Output<MeshCertificatesArgs> meshCertificates;

    public Optional<Output<MeshCertificatesArgs>> meshCertificates() {
        return Optional.ofNullable(this.meshCertificates);
    }

    /**
     * Monitoring configuration for the cluster.
     * 
     */
    @Import(name="monitoringConfig")
    private @Nullable Output<MonitoringConfigArgs> monitoringConfig;

    public Optional<Output<MonitoringConfigArgs>> monitoringConfig() {
        return Optional.ofNullable(this.monitoringConfig);
    }

    /**
     * The monitoring service the cluster should use to write metrics. Currently available options: * &#34;monitoring.googleapis.com/kubernetes&#34; - The Cloud Monitoring service with a Kubernetes-native resource model * `monitoring.googleapis.com` - The legacy Cloud Monitoring service (no longer available as of GKE 1.15). * `none` - No metrics will be exported from the cluster. If left as an empty string,`monitoring.googleapis.com/kubernetes` will be used for GKE 1.14+ or `monitoring.googleapis.com` for earlier versions.
     * 
     */
    @Import(name="monitoringService")
    private @Nullable Output<String> monitoringService;

    public Optional<Output<String>> monitoringService() {
        return Optional.ofNullable(this.monitoringService);
    }

    /**
     * The name of this cluster. The name must be unique within this project and location (e.g. zone or region), and can be up to 40 characters with the following restrictions: * Lowercase letters, numbers, and hyphens only. * Must start with a letter. * Must end with a number or a letter.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The name of the Google Compute Engine [network](https://cloud.google.com/compute/docs/networks-and-firewalls#networks) to which the cluster is connected. If left unspecified, the `default` network will be used.
     * 
     */
    @Import(name="network")
    private @Nullable Output<String> network;

    public Optional<Output<String>> network() {
        return Optional.ofNullable(this.network);
    }

    /**
     * Configuration for cluster networking.
     * 
     */
    @Import(name="networkConfig")
    private @Nullable Output<NetworkConfigArgs> networkConfig;

    public Optional<Output<NetworkConfigArgs>> networkConfig() {
        return Optional.ofNullable(this.networkConfig);
    }

    /**
     * Configuration options for the NetworkPolicy feature.
     * 
     */
    @Import(name="networkPolicy")
    private @Nullable Output<NetworkPolicyArgs> networkPolicy;

    public Optional<Output<NetworkPolicyArgs>> networkPolicy() {
        return Optional.ofNullable(this.networkPolicy);
    }

    /**
     * Default NodePool settings for the entire cluster. These settings are overridden if specified on the specific NodePool object.
     * 
     */
    @Import(name="nodePoolDefaults")
    private @Nullable Output<NodePoolDefaultsArgs> nodePoolDefaults;

    public Optional<Output<NodePoolDefaultsArgs>> nodePoolDefaults() {
        return Optional.ofNullable(this.nodePoolDefaults);
    }

    /**
     * The node pools associated with this cluster. This field should not be set if &#34;node_config&#34; or &#34;initial_node_count&#34; are specified.
     * 
     */
    @Import(name="nodePools")
    private @Nullable Output<List<NodePoolArgs>> nodePools;

    public Optional<Output<List<NodePoolArgs>>> nodePools() {
        return Optional.ofNullable(this.nodePools);
    }

    /**
     * Notification configuration of the cluster.
     * 
     */
    @Import(name="notificationConfig")
    private @Nullable Output<NotificationConfigArgs> notificationConfig;

    public Optional<Output<NotificationConfigArgs>> notificationConfig() {
        return Optional.ofNullable(this.notificationConfig);
    }

    /**
     * The parent (project and location) where the cluster will be created. Specified in the format `projects/*{@literal /}locations/*`.
     * 
     */
    @Import(name="parent")
    private @Nullable Output<String> parent;

    public Optional<Output<String>> parent() {
        return Optional.ofNullable(this.parent);
    }

    /**
     * Configuration for private cluster.
     * 
     */
    @Import(name="privateClusterConfig")
    private @Nullable Output<PrivateClusterConfigArgs> privateClusterConfig;

    public Optional<Output<PrivateClusterConfigArgs>> privateClusterConfig() {
        return Optional.ofNullable(this.privateClusterConfig);
    }

    @Import(name="project")
    private @Nullable Output<String> project;

    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * Release channel configuration.
     * 
     */
    @Import(name="releaseChannel")
    private @Nullable Output<ReleaseChannelArgs> releaseChannel;

    public Optional<Output<ReleaseChannelArgs>> releaseChannel() {
        return Optional.ofNullable(this.releaseChannel);
    }

    /**
     * The resource labels for the cluster to use to annotate any related Google Compute Engine resources.
     * 
     */
    @Import(name="resourceLabels")
    private @Nullable Output<Map<String,String>> resourceLabels;

    public Optional<Output<Map<String,String>>> resourceLabels() {
        return Optional.ofNullable(this.resourceLabels);
    }

    /**
     * Configuration for exporting resource usages. Resource usage export is disabled when this config is unspecified.
     * 
     */
    @Import(name="resourceUsageExportConfig")
    private @Nullable Output<ResourceUsageExportConfigArgs> resourceUsageExportConfig;

    public Optional<Output<ResourceUsageExportConfigArgs>> resourceUsageExportConfig() {
        return Optional.ofNullable(this.resourceUsageExportConfig);
    }

    /**
     * Shielded Nodes configuration.
     * 
     */
    @Import(name="shieldedNodes")
    private @Nullable Output<ShieldedNodesArgs> shieldedNodes;

    public Optional<Output<ShieldedNodesArgs>> shieldedNodes() {
        return Optional.ofNullable(this.shieldedNodes);
    }

    /**
     * The name of the Google Compute Engine [subnetwork](https://cloud.google.com/compute/docs/subnetworks) to which the cluster is connected.
     * 
     */
    @Import(name="subnetwork")
    private @Nullable Output<String> subnetwork;

    public Optional<Output<String>> subnetwork() {
        return Optional.ofNullable(this.subnetwork);
    }

    /**
     * Cluster-level Vertical Pod Autoscaling configuration.
     * 
     */
    @Import(name="verticalPodAutoscaling")
    private @Nullable Output<VerticalPodAutoscalingArgs> verticalPodAutoscaling;

    public Optional<Output<VerticalPodAutoscalingArgs>> verticalPodAutoscaling() {
        return Optional.ofNullable(this.verticalPodAutoscaling);
    }

    /**
     * Configuration for the use of Kubernetes Service Accounts in GCP IAM policies.
     * 
     */
    @Import(name="workloadIdentityConfig")
    private @Nullable Output<WorkloadIdentityConfigArgs> workloadIdentityConfig;

    public Optional<Output<WorkloadIdentityConfigArgs>> workloadIdentityConfig() {
        return Optional.ofNullable(this.workloadIdentityConfig);
    }

    private ClusterArgs() {}

    private ClusterArgs(ClusterArgs $) {
        this.addonsConfig = $.addonsConfig;
        this.authenticatorGroupsConfig = $.authenticatorGroupsConfig;
        this.autopilot = $.autopilot;
        this.autoscaling = $.autoscaling;
        this.binaryAuthorization = $.binaryAuthorization;
        this.clusterIpv4Cidr = $.clusterIpv4Cidr;
        this.conditions = $.conditions;
        this.confidentialNodes = $.confidentialNodes;
        this.databaseEncryption = $.databaseEncryption;
        this.defaultMaxPodsConstraint = $.defaultMaxPodsConstraint;
        this.description = $.description;
        this.enableKubernetesAlpha = $.enableKubernetesAlpha;
        this.enableTpu = $.enableTpu;
        this.initialClusterVersion = $.initialClusterVersion;
        this.ipAllocationPolicy = $.ipAllocationPolicy;
        this.legacyAbac = $.legacyAbac;
        this.location = $.location;
        this.locations = $.locations;
        this.loggingConfig = $.loggingConfig;
        this.loggingService = $.loggingService;
        this.maintenancePolicy = $.maintenancePolicy;
        this.masterAuth = $.masterAuth;
        this.masterAuthorizedNetworksConfig = $.masterAuthorizedNetworksConfig;
        this.meshCertificates = $.meshCertificates;
        this.monitoringConfig = $.monitoringConfig;
        this.monitoringService = $.monitoringService;
        this.name = $.name;
        this.network = $.network;
        this.networkConfig = $.networkConfig;
        this.networkPolicy = $.networkPolicy;
        this.nodePoolDefaults = $.nodePoolDefaults;
        this.nodePools = $.nodePools;
        this.notificationConfig = $.notificationConfig;
        this.parent = $.parent;
        this.privateClusterConfig = $.privateClusterConfig;
        this.project = $.project;
        this.releaseChannel = $.releaseChannel;
        this.resourceLabels = $.resourceLabels;
        this.resourceUsageExportConfig = $.resourceUsageExportConfig;
        this.shieldedNodes = $.shieldedNodes;
        this.subnetwork = $.subnetwork;
        this.verticalPodAutoscaling = $.verticalPodAutoscaling;
        this.workloadIdentityConfig = $.workloadIdentityConfig;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClusterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClusterArgs $;

        public Builder() {
            $ = new ClusterArgs();
        }

        public Builder(ClusterArgs defaults) {
            $ = new ClusterArgs(Objects.requireNonNull(defaults));
        }

        public Builder addonsConfig(@Nullable Output<AddonsConfigArgs> addonsConfig) {
            $.addonsConfig = addonsConfig;
            return this;
        }

        public Builder addonsConfig(AddonsConfigArgs addonsConfig) {
            return addonsConfig(Output.of(addonsConfig));
        }

        public Builder authenticatorGroupsConfig(@Nullable Output<AuthenticatorGroupsConfigArgs> authenticatorGroupsConfig) {
            $.authenticatorGroupsConfig = authenticatorGroupsConfig;
            return this;
        }

        public Builder authenticatorGroupsConfig(AuthenticatorGroupsConfigArgs authenticatorGroupsConfig) {
            return authenticatorGroupsConfig(Output.of(authenticatorGroupsConfig));
        }

        public Builder autopilot(@Nullable Output<AutopilotArgs> autopilot) {
            $.autopilot = autopilot;
            return this;
        }

        public Builder autopilot(AutopilotArgs autopilot) {
            return autopilot(Output.of(autopilot));
        }

        public Builder autoscaling(@Nullable Output<ClusterAutoscalingArgs> autoscaling) {
            $.autoscaling = autoscaling;
            return this;
        }

        public Builder autoscaling(ClusterAutoscalingArgs autoscaling) {
            return autoscaling(Output.of(autoscaling));
        }

        public Builder binaryAuthorization(@Nullable Output<BinaryAuthorizationArgs> binaryAuthorization) {
            $.binaryAuthorization = binaryAuthorization;
            return this;
        }

        public Builder binaryAuthorization(BinaryAuthorizationArgs binaryAuthorization) {
            return binaryAuthorization(Output.of(binaryAuthorization));
        }

        public Builder clusterIpv4Cidr(@Nullable Output<String> clusterIpv4Cidr) {
            $.clusterIpv4Cidr = clusterIpv4Cidr;
            return this;
        }

        public Builder clusterIpv4Cidr(String clusterIpv4Cidr) {
            return clusterIpv4Cidr(Output.of(clusterIpv4Cidr));
        }

        public Builder conditions(@Nullable Output<List<StatusConditionArgs>> conditions) {
            $.conditions = conditions;
            return this;
        }

        public Builder conditions(List<StatusConditionArgs> conditions) {
            return conditions(Output.of(conditions));
        }

        public Builder conditions(StatusConditionArgs... conditions) {
            return conditions(List.of(conditions));
        }

        public Builder confidentialNodes(@Nullable Output<ConfidentialNodesArgs> confidentialNodes) {
            $.confidentialNodes = confidentialNodes;
            return this;
        }

        public Builder confidentialNodes(ConfidentialNodesArgs confidentialNodes) {
            return confidentialNodes(Output.of(confidentialNodes));
        }

        public Builder databaseEncryption(@Nullable Output<DatabaseEncryptionArgs> databaseEncryption) {
            $.databaseEncryption = databaseEncryption;
            return this;
        }

        public Builder databaseEncryption(DatabaseEncryptionArgs databaseEncryption) {
            return databaseEncryption(Output.of(databaseEncryption));
        }

        public Builder defaultMaxPodsConstraint(@Nullable Output<MaxPodsConstraintArgs> defaultMaxPodsConstraint) {
            $.defaultMaxPodsConstraint = defaultMaxPodsConstraint;
            return this;
        }

        public Builder defaultMaxPodsConstraint(MaxPodsConstraintArgs defaultMaxPodsConstraint) {
            return defaultMaxPodsConstraint(Output.of(defaultMaxPodsConstraint));
        }

        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        public Builder description(String description) {
            return description(Output.of(description));
        }

        public Builder enableKubernetesAlpha(@Nullable Output<Boolean> enableKubernetesAlpha) {
            $.enableKubernetesAlpha = enableKubernetesAlpha;
            return this;
        }

        public Builder enableKubernetesAlpha(Boolean enableKubernetesAlpha) {
            return enableKubernetesAlpha(Output.of(enableKubernetesAlpha));
        }

        public Builder enableTpu(@Nullable Output<Boolean> enableTpu) {
            $.enableTpu = enableTpu;
            return this;
        }

        public Builder enableTpu(Boolean enableTpu) {
            return enableTpu(Output.of(enableTpu));
        }

        public Builder initialClusterVersion(@Nullable Output<String> initialClusterVersion) {
            $.initialClusterVersion = initialClusterVersion;
            return this;
        }

        public Builder initialClusterVersion(String initialClusterVersion) {
            return initialClusterVersion(Output.of(initialClusterVersion));
        }

        public Builder ipAllocationPolicy(@Nullable Output<IPAllocationPolicyArgs> ipAllocationPolicy) {
            $.ipAllocationPolicy = ipAllocationPolicy;
            return this;
        }

        public Builder ipAllocationPolicy(IPAllocationPolicyArgs ipAllocationPolicy) {
            return ipAllocationPolicy(Output.of(ipAllocationPolicy));
        }

        public Builder legacyAbac(@Nullable Output<LegacyAbacArgs> legacyAbac) {
            $.legacyAbac = legacyAbac;
            return this;
        }

        public Builder legacyAbac(LegacyAbacArgs legacyAbac) {
            return legacyAbac(Output.of(legacyAbac));
        }

        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        public Builder location(String location) {
            return location(Output.of(location));
        }

        public Builder locations(@Nullable Output<List<String>> locations) {
            $.locations = locations;
            return this;
        }

        public Builder locations(List<String> locations) {
            return locations(Output.of(locations));
        }

        public Builder locations(String... locations) {
            return locations(List.of(locations));
        }

        public Builder loggingConfig(@Nullable Output<LoggingConfigArgs> loggingConfig) {
            $.loggingConfig = loggingConfig;
            return this;
        }

        public Builder loggingConfig(LoggingConfigArgs loggingConfig) {
            return loggingConfig(Output.of(loggingConfig));
        }

        public Builder loggingService(@Nullable Output<String> loggingService) {
            $.loggingService = loggingService;
            return this;
        }

        public Builder loggingService(String loggingService) {
            return loggingService(Output.of(loggingService));
        }

        public Builder maintenancePolicy(@Nullable Output<MaintenancePolicyArgs> maintenancePolicy) {
            $.maintenancePolicy = maintenancePolicy;
            return this;
        }

        public Builder maintenancePolicy(MaintenancePolicyArgs maintenancePolicy) {
            return maintenancePolicy(Output.of(maintenancePolicy));
        }

        public Builder masterAuth(@Nullable Output<MasterAuthArgs> masterAuth) {
            $.masterAuth = masterAuth;
            return this;
        }

        public Builder masterAuth(MasterAuthArgs masterAuth) {
            return masterAuth(Output.of(masterAuth));
        }

        public Builder masterAuthorizedNetworksConfig(@Nullable Output<MasterAuthorizedNetworksConfigArgs> masterAuthorizedNetworksConfig) {
            $.masterAuthorizedNetworksConfig = masterAuthorizedNetworksConfig;
            return this;
        }

        public Builder masterAuthorizedNetworksConfig(MasterAuthorizedNetworksConfigArgs masterAuthorizedNetworksConfig) {
            return masterAuthorizedNetworksConfig(Output.of(masterAuthorizedNetworksConfig));
        }

        public Builder meshCertificates(@Nullable Output<MeshCertificatesArgs> meshCertificates) {
            $.meshCertificates = meshCertificates;
            return this;
        }

        public Builder meshCertificates(MeshCertificatesArgs meshCertificates) {
            return meshCertificates(Output.of(meshCertificates));
        }

        public Builder monitoringConfig(@Nullable Output<MonitoringConfigArgs> monitoringConfig) {
            $.monitoringConfig = monitoringConfig;
            return this;
        }

        public Builder monitoringConfig(MonitoringConfigArgs monitoringConfig) {
            return monitoringConfig(Output.of(monitoringConfig));
        }

        public Builder monitoringService(@Nullable Output<String> monitoringService) {
            $.monitoringService = monitoringService;
            return this;
        }

        public Builder monitoringService(String monitoringService) {
            return monitoringService(Output.of(monitoringService));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder network(@Nullable Output<String> network) {
            $.network = network;
            return this;
        }

        public Builder network(String network) {
            return network(Output.of(network));
        }

        public Builder networkConfig(@Nullable Output<NetworkConfigArgs> networkConfig) {
            $.networkConfig = networkConfig;
            return this;
        }

        public Builder networkConfig(NetworkConfigArgs networkConfig) {
            return networkConfig(Output.of(networkConfig));
        }

        public Builder networkPolicy(@Nullable Output<NetworkPolicyArgs> networkPolicy) {
            $.networkPolicy = networkPolicy;
            return this;
        }

        public Builder networkPolicy(NetworkPolicyArgs networkPolicy) {
            return networkPolicy(Output.of(networkPolicy));
        }

        public Builder nodePoolDefaults(@Nullable Output<NodePoolDefaultsArgs> nodePoolDefaults) {
            $.nodePoolDefaults = nodePoolDefaults;
            return this;
        }

        public Builder nodePoolDefaults(NodePoolDefaultsArgs nodePoolDefaults) {
            return nodePoolDefaults(Output.of(nodePoolDefaults));
        }

        public Builder nodePools(@Nullable Output<List<NodePoolArgs>> nodePools) {
            $.nodePools = nodePools;
            return this;
        }

        public Builder nodePools(List<NodePoolArgs> nodePools) {
            return nodePools(Output.of(nodePools));
        }

        public Builder nodePools(NodePoolArgs... nodePools) {
            return nodePools(List.of(nodePools));
        }

        public Builder notificationConfig(@Nullable Output<NotificationConfigArgs> notificationConfig) {
            $.notificationConfig = notificationConfig;
            return this;
        }

        public Builder notificationConfig(NotificationConfigArgs notificationConfig) {
            return notificationConfig(Output.of(notificationConfig));
        }

        public Builder parent(@Nullable Output<String> parent) {
            $.parent = parent;
            return this;
        }

        public Builder parent(String parent) {
            return parent(Output.of(parent));
        }

        public Builder privateClusterConfig(@Nullable Output<PrivateClusterConfigArgs> privateClusterConfig) {
            $.privateClusterConfig = privateClusterConfig;
            return this;
        }

        public Builder privateClusterConfig(PrivateClusterConfigArgs privateClusterConfig) {
            return privateClusterConfig(Output.of(privateClusterConfig));
        }

        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        public Builder project(String project) {
            return project(Output.of(project));
        }

        public Builder releaseChannel(@Nullable Output<ReleaseChannelArgs> releaseChannel) {
            $.releaseChannel = releaseChannel;
            return this;
        }

        public Builder releaseChannel(ReleaseChannelArgs releaseChannel) {
            return releaseChannel(Output.of(releaseChannel));
        }

        public Builder resourceLabels(@Nullable Output<Map<String,String>> resourceLabels) {
            $.resourceLabels = resourceLabels;
            return this;
        }

        public Builder resourceLabels(Map<String,String> resourceLabels) {
            return resourceLabels(Output.of(resourceLabels));
        }

        public Builder resourceUsageExportConfig(@Nullable Output<ResourceUsageExportConfigArgs> resourceUsageExportConfig) {
            $.resourceUsageExportConfig = resourceUsageExportConfig;
            return this;
        }

        public Builder resourceUsageExportConfig(ResourceUsageExportConfigArgs resourceUsageExportConfig) {
            return resourceUsageExportConfig(Output.of(resourceUsageExportConfig));
        }

        public Builder shieldedNodes(@Nullable Output<ShieldedNodesArgs> shieldedNodes) {
            $.shieldedNodes = shieldedNodes;
            return this;
        }

        public Builder shieldedNodes(ShieldedNodesArgs shieldedNodes) {
            return shieldedNodes(Output.of(shieldedNodes));
        }

        public Builder subnetwork(@Nullable Output<String> subnetwork) {
            $.subnetwork = subnetwork;
            return this;
        }

        public Builder subnetwork(String subnetwork) {
            return subnetwork(Output.of(subnetwork));
        }

        public Builder verticalPodAutoscaling(@Nullable Output<VerticalPodAutoscalingArgs> verticalPodAutoscaling) {
            $.verticalPodAutoscaling = verticalPodAutoscaling;
            return this;
        }

        public Builder verticalPodAutoscaling(VerticalPodAutoscalingArgs verticalPodAutoscaling) {
            return verticalPodAutoscaling(Output.of(verticalPodAutoscaling));
        }

        public Builder workloadIdentityConfig(@Nullable Output<WorkloadIdentityConfigArgs> workloadIdentityConfig) {
            $.workloadIdentityConfig = workloadIdentityConfig;
            return this;
        }

        public Builder workloadIdentityConfig(WorkloadIdentityConfigArgs workloadIdentityConfig) {
            return workloadIdentityConfig(Output.of(workloadIdentityConfig));
        }

        public ClusterArgs build() {
            return $;
        }
    }

}
