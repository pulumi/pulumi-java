// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.tpu_v2alpha1.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * A node-attached disk resource. Next ID: 8;
 * 
 */
public final class AttachedDiskResponse extends com.pulumi.resources.InvokeArgs {

    public static final AttachedDiskResponse Empty = new AttachedDiskResponse();

    /**
     * The mode in which to attach this disk. If not specified, the default is READ_WRITE mode. Only applicable to data_disks.
     * 
     */
    @Import(name="mode", required=true)
    private String mode;

    public String mode() {
        return this.mode;
    }

    /**
     * Specifies the full path to an existing disk. For example: &#34;projects/my-project/zones/us-central1-c/disks/my-disk&#34;.
     * 
     */
    @Import(name="sourceDisk", required=true)
    private String sourceDisk;

    public String sourceDisk() {
        return this.sourceDisk;
    }

    private AttachedDiskResponse() {}

    private AttachedDiskResponse(AttachedDiskResponse $) {
        this.mode = $.mode;
        this.sourceDisk = $.sourceDisk;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AttachedDiskResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AttachedDiskResponse $;

        public Builder() {
            $ = new AttachedDiskResponse();
        }

        public Builder(AttachedDiskResponse defaults) {
            $ = new AttachedDiskResponse(Objects.requireNonNull(defaults));
        }

        public Builder mode(String mode) {
            $.mode = mode;
            return this;
        }

        public Builder sourceDisk(String sourceDisk) {
            $.sourceDisk = sourceDisk;
            return this;
        }

        public AttachedDiskResponse build() {
            $.mode = Objects.requireNonNull($.mode, "expected parameter 'mode' to be non-null");
            $.sourceDisk = Objects.requireNonNull($.sourceDisk, "expected parameter 'sourceDisk' to be non-null");
            return $;
        }
    }

}
