// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.deploymentmanager_alpha.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.deploymentmanager_alpha.inputs.PollingOptionsResponse;
import java.lang.String;
import java.util.Objects;


/**
 * Async options that determine when a resource should finish.
 * 
 */
public final class AsyncOptionsResponse extends com.pulumi.resources.InvokeArgs {

    public static final AsyncOptionsResponse Empty = new AsyncOptionsResponse();

    /**
     * Method regex where this policy will apply.
     * 
     */
    @Import(name="methodMatch", required=true)
    private String methodMatch;

    /**
     * @return Method regex where this policy will apply.
     * 
     */
    public String methodMatch() {
        return this.methodMatch;
    }

    /**
     * Deployment manager will poll instances for this API resource setting a RUNNING state, and blocking until polling conditions tell whether the resource is completed or failed.
     * 
     */
    @Import(name="pollingOptions", required=true)
    private PollingOptionsResponse pollingOptions;

    /**
     * @return Deployment manager will poll instances for this API resource setting a RUNNING state, and blocking until polling conditions tell whether the resource is completed or failed.
     * 
     */
    public PollingOptionsResponse pollingOptions() {
        return this.pollingOptions;
    }

    private AsyncOptionsResponse() {}

    private AsyncOptionsResponse(AsyncOptionsResponse $) {
        this.methodMatch = $.methodMatch;
        this.pollingOptions = $.pollingOptions;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AsyncOptionsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AsyncOptionsResponse $;

        public Builder() {
            $ = new AsyncOptionsResponse();
        }

        public Builder(AsyncOptionsResponse defaults) {
            $ = new AsyncOptionsResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param methodMatch Method regex where this policy will apply.
         * 
         * @return builder
         * 
         */
        public Builder methodMatch(String methodMatch) {
            $.methodMatch = methodMatch;
            return this;
        }

        /**
         * @param pollingOptions Deployment manager will poll instances for this API resource setting a RUNNING state, and blocking until polling conditions tell whether the resource is completed or failed.
         * 
         * @return builder
         * 
         */
        public Builder pollingOptions(PollingOptionsResponse pollingOptions) {
            $.pollingOptions = pollingOptions;
            return this;
        }

        public AsyncOptionsResponse build() {
            $.methodMatch = Objects.requireNonNull($.methodMatch, "expected parameter 'methodMatch' to be non-null");
            $.pollingOptions = Objects.requireNonNull($.pollingOptions, "expected parameter 'pollingOptions' to be non-null");
            return $;
        }
    }

}
