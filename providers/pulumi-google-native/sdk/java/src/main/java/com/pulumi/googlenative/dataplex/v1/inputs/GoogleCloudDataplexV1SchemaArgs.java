// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.dataplex.v1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.dataplex.v1.enums.GoogleCloudDataplexV1SchemaPartitionStyle;
import com.pulumi.googlenative.dataplex.v1.inputs.GoogleCloudDataplexV1SchemaPartitionFieldArgs;
import com.pulumi.googlenative.dataplex.v1.inputs.GoogleCloudDataplexV1SchemaSchemaFieldArgs;
import java.lang.Boolean;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Schema information describing the structure and layout of the data.
 * 
 */
public final class GoogleCloudDataplexV1SchemaArgs extends com.pulumi.resources.ResourceArgs {

    public static final GoogleCloudDataplexV1SchemaArgs Empty = new GoogleCloudDataplexV1SchemaArgs();

    /**
     * Optional. The sequence of fields describing data in table entities. Note: BigQuery SchemaFields are immutable.
     * 
     */
    @Import(name="fields")
    private @Nullable Output<List<GoogleCloudDataplexV1SchemaSchemaFieldArgs>> fields;

    /**
     * @return Optional. The sequence of fields describing data in table entities. Note: BigQuery SchemaFields are immutable.
     * 
     */
    public Optional<Output<List<GoogleCloudDataplexV1SchemaSchemaFieldArgs>>> fields() {
        return Optional.ofNullable(this.fields);
    }

    /**
     * Optional. The sequence of fields describing the partition structure in entities. If this field is empty, there are no partitions within the data.
     * 
     */
    @Import(name="partitionFields")
    private @Nullable Output<List<GoogleCloudDataplexV1SchemaPartitionFieldArgs>> partitionFields;

    /**
     * @return Optional. The sequence of fields describing the partition structure in entities. If this field is empty, there are no partitions within the data.
     * 
     */
    public Optional<Output<List<GoogleCloudDataplexV1SchemaPartitionFieldArgs>>> partitionFields() {
        return Optional.ofNullable(this.partitionFields);
    }

    /**
     * Optional. The structure of paths containing partition data within the entity.
     * 
     */
    @Import(name="partitionStyle")
    private @Nullable Output<GoogleCloudDataplexV1SchemaPartitionStyle> partitionStyle;

    /**
     * @return Optional. The structure of paths containing partition data within the entity.
     * 
     */
    public Optional<Output<GoogleCloudDataplexV1SchemaPartitionStyle>> partitionStyle() {
        return Optional.ofNullable(this.partitionStyle);
    }

    /**
     * Set to true if user-managed or false if managed by Dataplex. The default is false (managed by Dataplex). Set to falseto enable Dataplex discovery to update the schema. including new data discovery, schema inference, and schema evolution. Users retain the ability to input and edit the schema. Dataplex treats schema input by the user as though produced by a previous Dataplex discovery operation, and it will evolve the schema and take action based on that treatment. Set to true to fully manage the entity schema. This setting guarantees that Dataplex will not change schema fields.
     * 
     */
    @Import(name="userManaged", required=true)
    private Output<Boolean> userManaged;

    /**
     * @return Set to true if user-managed or false if managed by Dataplex. The default is false (managed by Dataplex). Set to falseto enable Dataplex discovery to update the schema. including new data discovery, schema inference, and schema evolution. Users retain the ability to input and edit the schema. Dataplex treats schema input by the user as though produced by a previous Dataplex discovery operation, and it will evolve the schema and take action based on that treatment. Set to true to fully manage the entity schema. This setting guarantees that Dataplex will not change schema fields.
     * 
     */
    public Output<Boolean> userManaged() {
        return this.userManaged;
    }

    private GoogleCloudDataplexV1SchemaArgs() {}

    private GoogleCloudDataplexV1SchemaArgs(GoogleCloudDataplexV1SchemaArgs $) {
        this.fields = $.fields;
        this.partitionFields = $.partitionFields;
        this.partitionStyle = $.partitionStyle;
        this.userManaged = $.userManaged;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GoogleCloudDataplexV1SchemaArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GoogleCloudDataplexV1SchemaArgs $;

        public Builder() {
            $ = new GoogleCloudDataplexV1SchemaArgs();
        }

        public Builder(GoogleCloudDataplexV1SchemaArgs defaults) {
            $ = new GoogleCloudDataplexV1SchemaArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param fields Optional. The sequence of fields describing data in table entities. Note: BigQuery SchemaFields are immutable.
         * 
         * @return builder
         * 
         */
        public Builder fields(@Nullable Output<List<GoogleCloudDataplexV1SchemaSchemaFieldArgs>> fields) {
            $.fields = fields;
            return this;
        }

        /**
         * @param fields Optional. The sequence of fields describing data in table entities. Note: BigQuery SchemaFields are immutable.
         * 
         * @return builder
         * 
         */
        public Builder fields(List<GoogleCloudDataplexV1SchemaSchemaFieldArgs> fields) {
            return fields(Output.of(fields));
        }

        /**
         * @param fields Optional. The sequence of fields describing data in table entities. Note: BigQuery SchemaFields are immutable.
         * 
         * @return builder
         * 
         */
        public Builder fields(GoogleCloudDataplexV1SchemaSchemaFieldArgs... fields) {
            return fields(List.of(fields));
        }

        /**
         * @param partitionFields Optional. The sequence of fields describing the partition structure in entities. If this field is empty, there are no partitions within the data.
         * 
         * @return builder
         * 
         */
        public Builder partitionFields(@Nullable Output<List<GoogleCloudDataplexV1SchemaPartitionFieldArgs>> partitionFields) {
            $.partitionFields = partitionFields;
            return this;
        }

        /**
         * @param partitionFields Optional. The sequence of fields describing the partition structure in entities. If this field is empty, there are no partitions within the data.
         * 
         * @return builder
         * 
         */
        public Builder partitionFields(List<GoogleCloudDataplexV1SchemaPartitionFieldArgs> partitionFields) {
            return partitionFields(Output.of(partitionFields));
        }

        /**
         * @param partitionFields Optional. The sequence of fields describing the partition structure in entities. If this field is empty, there are no partitions within the data.
         * 
         * @return builder
         * 
         */
        public Builder partitionFields(GoogleCloudDataplexV1SchemaPartitionFieldArgs... partitionFields) {
            return partitionFields(List.of(partitionFields));
        }

        /**
         * @param partitionStyle Optional. The structure of paths containing partition data within the entity.
         * 
         * @return builder
         * 
         */
        public Builder partitionStyle(@Nullable Output<GoogleCloudDataplexV1SchemaPartitionStyle> partitionStyle) {
            $.partitionStyle = partitionStyle;
            return this;
        }

        /**
         * @param partitionStyle Optional. The structure of paths containing partition data within the entity.
         * 
         * @return builder
         * 
         */
        public Builder partitionStyle(GoogleCloudDataplexV1SchemaPartitionStyle partitionStyle) {
            return partitionStyle(Output.of(partitionStyle));
        }

        /**
         * @param userManaged Set to true if user-managed or false if managed by Dataplex. The default is false (managed by Dataplex). Set to falseto enable Dataplex discovery to update the schema. including new data discovery, schema inference, and schema evolution. Users retain the ability to input and edit the schema. Dataplex treats schema input by the user as though produced by a previous Dataplex discovery operation, and it will evolve the schema and take action based on that treatment. Set to true to fully manage the entity schema. This setting guarantees that Dataplex will not change schema fields.
         * 
         * @return builder
         * 
         */
        public Builder userManaged(Output<Boolean> userManaged) {
            $.userManaged = userManaged;
            return this;
        }

        /**
         * @param userManaged Set to true if user-managed or false if managed by Dataplex. The default is false (managed by Dataplex). Set to falseto enable Dataplex discovery to update the schema. including new data discovery, schema inference, and schema evolution. Users retain the ability to input and edit the schema. Dataplex treats schema input by the user as though produced by a previous Dataplex discovery operation, and it will evolve the schema and take action based on that treatment. Set to true to fully manage the entity schema. This setting guarantees that Dataplex will not change schema fields.
         * 
         * @return builder
         * 
         */
        public Builder userManaged(Boolean userManaged) {
            return userManaged(Output.of(userManaged));
        }

        public GoogleCloudDataplexV1SchemaArgs build() {
            $.userManaged = Objects.requireNonNull($.userManaged, "expected parameter 'userManaged' to be non-null");
            return $;
        }
    }

}
