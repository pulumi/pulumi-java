// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.dialogflow.v2;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.dialogflow.v2.enums.IntentDefaultResponsePlatformsItem;
import com.pulumi.googlenative.dialogflow.v2.enums.IntentWebhookState;
import com.pulumi.googlenative.dialogflow.v2.inputs.GoogleCloudDialogflowV2ContextArgs;
import com.pulumi.googlenative.dialogflow.v2.inputs.GoogleCloudDialogflowV2IntentMessageArgs;
import com.pulumi.googlenative.dialogflow.v2.inputs.GoogleCloudDialogflowV2IntentParameterArgs;
import com.pulumi.googlenative.dialogflow.v2.inputs.GoogleCloudDialogflowV2IntentTrainingPhraseArgs;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class IntentArgs extends com.pulumi.resources.ResourceArgs {

    public static final IntentArgs Empty = new IntentArgs();

    /**
     * Optional. The name of the action associated with the intent. Note: The action name must not contain whitespaces.
     * 
     */
    @Import(name="action")
    private @Nullable Output<String> action;

    /**
     * @return Optional. The name of the action associated with the intent. Note: The action name must not contain whitespaces.
     * 
     */
    public Optional<Output<String>> action() {
        return Optional.ofNullable(this.action);
    }

    /**
     * Optional. The list of platforms for which the first responses will be copied from the messages in PLATFORM_UNSPECIFIED (i.e. default platform).
     * 
     */
    @Import(name="defaultResponsePlatforms")
    private @Nullable Output<List<IntentDefaultResponsePlatformsItem>> defaultResponsePlatforms;

    /**
     * @return Optional. The list of platforms for which the first responses will be copied from the messages in PLATFORM_UNSPECIFIED (i.e. default platform).
     * 
     */
    public Optional<Output<List<IntentDefaultResponsePlatformsItem>>> defaultResponsePlatforms() {
        return Optional.ofNullable(this.defaultResponsePlatforms);
    }

    /**
     * The name of this intent.
     * 
     */
    @Import(name="displayName", required=true)
    private Output<String> displayName;

    /**
     * @return The name of this intent.
     * 
     */
    public Output<String> displayName() {
        return this.displayName;
    }

    /**
     * Optional. Indicates that this intent ends an interaction. Some integrations (e.g., Actions on Google or Dialogflow phone gateway) use this information to close interaction with an end user. Default is false.
     * 
     */
    @Import(name="endInteraction")
    private @Nullable Output<Boolean> endInteraction;

    /**
     * @return Optional. Indicates that this intent ends an interaction. Some integrations (e.g., Actions on Google or Dialogflow phone gateway) use this information to close interaction with an end user. Default is false.
     * 
     */
    public Optional<Output<Boolean>> endInteraction() {
        return Optional.ofNullable(this.endInteraction);
    }

    /**
     * Optional. The collection of event names that trigger the intent. If the collection of input contexts is not empty, all of the contexts must be present in the active user session for an event to trigger this intent. Event names are limited to 150 characters.
     * 
     */
    @Import(name="events")
    private @Nullable Output<List<String>> events;

    /**
     * @return Optional. The collection of event names that trigger the intent. If the collection of input contexts is not empty, all of the contexts must be present in the active user session for an event to trigger this intent. Event names are limited to 150 characters.
     * 
     */
    public Optional<Output<List<String>>> events() {
        return Optional.ofNullable(this.events);
    }

    /**
     * Optional. The list of context names required for this intent to be triggered. Format: `projects//agent/sessions/-/contexts/`.
     * 
     */
    @Import(name="inputContextNames")
    private @Nullable Output<List<String>> inputContextNames;

    /**
     * @return Optional. The list of context names required for this intent to be triggered. Format: `projects//agent/sessions/-/contexts/`.
     * 
     */
    public Optional<Output<List<String>>> inputContextNames() {
        return Optional.ofNullable(this.inputContextNames);
    }

    /**
     * Optional. The resource view to apply to the returned intent.
     * 
     */
    @Import(name="intentView")
    private @Nullable Output<String> intentView;

    /**
     * @return Optional. The resource view to apply to the returned intent.
     * 
     */
    public Optional<Output<String>> intentView() {
        return Optional.ofNullable(this.intentView);
    }

    /**
     * Optional. Indicates whether this is a fallback intent.
     * 
     */
    @Import(name="isFallback")
    private @Nullable Output<Boolean> isFallback;

    /**
     * @return Optional. Indicates whether this is a fallback intent.
     * 
     */
    public Optional<Output<Boolean>> isFallback() {
        return Optional.ofNullable(this.isFallback);
    }

    /**
     * Optional. The language used to access language-specific data. If not specified, the agent&#39;s default language is used. For more information, see [Multilingual intent and entity data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity).
     * 
     */
    @Import(name="languageCode")
    private @Nullable Output<String> languageCode;

    /**
     * @return Optional. The language used to access language-specific data. If not specified, the agent&#39;s default language is used. For more information, see [Multilingual intent and entity data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity).
     * 
     */
    public Optional<Output<String>> languageCode() {
        return Optional.ofNullable(this.languageCode);
    }

    /**
     * Optional. Indicates that a live agent should be brought in to handle the interaction with the user. In most cases, when you set this flag to true, you would also want to set end_interaction to true as well. Default is false.
     * 
     */
    @Import(name="liveAgentHandoff")
    private @Nullable Output<Boolean> liveAgentHandoff;

    /**
     * @return Optional. Indicates that a live agent should be brought in to handle the interaction with the user. In most cases, when you set this flag to true, you would also want to set end_interaction to true as well. Default is false.
     * 
     */
    public Optional<Output<Boolean>> liveAgentHandoff() {
        return Optional.ofNullable(this.liveAgentHandoff);
    }

    @Import(name="location")
    private @Nullable Output<String> location;

    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * Optional. The collection of rich messages corresponding to the `Response` field in the Dialogflow console.
     * 
     */
    @Import(name="messages")
    private @Nullable Output<List<GoogleCloudDialogflowV2IntentMessageArgs>> messages;

    /**
     * @return Optional. The collection of rich messages corresponding to the `Response` field in the Dialogflow console.
     * 
     */
    public Optional<Output<List<GoogleCloudDialogflowV2IntentMessageArgs>>> messages() {
        return Optional.ofNullable(this.messages);
    }

    /**
     * Optional. Indicates whether Machine Learning is disabled for the intent. Note: If `ml_disabled` setting is set to true, then this intent is not taken into account during inference in `ML ONLY` match mode. Also, auto-markup in the UI is turned off.
     * 
     */
    @Import(name="mlDisabled")
    private @Nullable Output<Boolean> mlDisabled;

    /**
     * @return Optional. Indicates whether Machine Learning is disabled for the intent. Note: If `ml_disabled` setting is set to true, then this intent is not taken into account during inference in `ML ONLY` match mode. Also, auto-markup in the UI is turned off.
     * 
     */
    public Optional<Output<Boolean>> mlDisabled() {
        return Optional.ofNullable(this.mlDisabled);
    }

    /**
     * Optional. The unique identifier of this intent. Required for Intents.UpdateIntent and Intents.BatchUpdateIntents methods. Format: `projects//agent/intents/`.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Optional. The unique identifier of this intent. Required for Intents.UpdateIntent and Intents.BatchUpdateIntents methods. Format: `projects//agent/intents/`.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Optional. The collection of contexts that are activated when the intent is matched. Context messages in this collection should not set the parameters field. Setting the `lifespan_count` to 0 will reset the context when the intent is matched. Format: `projects//agent/sessions/-/contexts/`.
     * 
     */
    @Import(name="outputContexts")
    private @Nullable Output<List<GoogleCloudDialogflowV2ContextArgs>> outputContexts;

    /**
     * @return Optional. The collection of contexts that are activated when the intent is matched. Context messages in this collection should not set the parameters field. Setting the `lifespan_count` to 0 will reset the context when the intent is matched. Format: `projects//agent/sessions/-/contexts/`.
     * 
     */
    public Optional<Output<List<GoogleCloudDialogflowV2ContextArgs>>> outputContexts() {
        return Optional.ofNullable(this.outputContexts);
    }

    /**
     * Optional. The collection of parameters associated with the intent.
     * 
     */
    @Import(name="parameters")
    private @Nullable Output<List<GoogleCloudDialogflowV2IntentParameterArgs>> parameters;

    /**
     * @return Optional. The collection of parameters associated with the intent.
     * 
     */
    public Optional<Output<List<GoogleCloudDialogflowV2IntentParameterArgs>>> parameters() {
        return Optional.ofNullable(this.parameters);
    }

    /**
     * Read-only after creation. The unique identifier of the parent intent in the chain of followup intents. You can set this field when creating an intent, for example with CreateIntent or BatchUpdateIntents, in order to make this intent a followup intent. It identifies the parent followup intent. Format: `projects//agent/intents/`.
     * 
     */
    @Import(name="parentFollowupIntentName")
    private @Nullable Output<String> parentFollowupIntentName;

    /**
     * @return Read-only after creation. The unique identifier of the parent intent in the chain of followup intents. You can set this field when creating an intent, for example with CreateIntent or BatchUpdateIntents, in order to make this intent a followup intent. It identifies the parent followup intent. Format: `projects//agent/intents/`.
     * 
     */
    public Optional<Output<String>> parentFollowupIntentName() {
        return Optional.ofNullable(this.parentFollowupIntentName);
    }

    /**
     * Optional. The priority of this intent. Higher numbers represent higher priorities. - If the supplied value is unspecified or 0, the service translates the value to 500,000, which corresponds to the `Normal` priority in the console. - If the supplied value is negative, the intent is ignored in runtime detect intent requests.
     * 
     */
    @Import(name="priority")
    private @Nullable Output<Integer> priority;

    /**
     * @return Optional. The priority of this intent. Higher numbers represent higher priorities. - If the supplied value is unspecified or 0, the service translates the value to 500,000, which corresponds to the `Normal` priority in the console. - If the supplied value is negative, the intent is ignored in runtime detect intent requests.
     * 
     */
    public Optional<Output<Integer>> priority() {
        return Optional.ofNullable(this.priority);
    }

    @Import(name="project")
    private @Nullable Output<String> project;

    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * Optional. Indicates whether to delete all contexts in the current session when this intent is matched.
     * 
     */
    @Import(name="resetContexts")
    private @Nullable Output<Boolean> resetContexts;

    /**
     * @return Optional. Indicates whether to delete all contexts in the current session when this intent is matched.
     * 
     */
    public Optional<Output<Boolean>> resetContexts() {
        return Optional.ofNullable(this.resetContexts);
    }

    /**
     * Optional. The collection of examples that the agent is trained on.
     * 
     */
    @Import(name="trainingPhrases")
    private @Nullable Output<List<GoogleCloudDialogflowV2IntentTrainingPhraseArgs>> trainingPhrases;

    /**
     * @return Optional. The collection of examples that the agent is trained on.
     * 
     */
    public Optional<Output<List<GoogleCloudDialogflowV2IntentTrainingPhraseArgs>>> trainingPhrases() {
        return Optional.ofNullable(this.trainingPhrases);
    }

    /**
     * Optional. Indicates whether webhooks are enabled for the intent.
     * 
     */
    @Import(name="webhookState")
    private @Nullable Output<IntentWebhookState> webhookState;

    /**
     * @return Optional. Indicates whether webhooks are enabled for the intent.
     * 
     */
    public Optional<Output<IntentWebhookState>> webhookState() {
        return Optional.ofNullable(this.webhookState);
    }

    private IntentArgs() {}

    private IntentArgs(IntentArgs $) {
        this.action = $.action;
        this.defaultResponsePlatforms = $.defaultResponsePlatforms;
        this.displayName = $.displayName;
        this.endInteraction = $.endInteraction;
        this.events = $.events;
        this.inputContextNames = $.inputContextNames;
        this.intentView = $.intentView;
        this.isFallback = $.isFallback;
        this.languageCode = $.languageCode;
        this.liveAgentHandoff = $.liveAgentHandoff;
        this.location = $.location;
        this.messages = $.messages;
        this.mlDisabled = $.mlDisabled;
        this.name = $.name;
        this.outputContexts = $.outputContexts;
        this.parameters = $.parameters;
        this.parentFollowupIntentName = $.parentFollowupIntentName;
        this.priority = $.priority;
        this.project = $.project;
        this.resetContexts = $.resetContexts;
        this.trainingPhrases = $.trainingPhrases;
        this.webhookState = $.webhookState;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(IntentArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private IntentArgs $;

        public Builder() {
            $ = new IntentArgs();
        }

        public Builder(IntentArgs defaults) {
            $ = new IntentArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param action Optional. The name of the action associated with the intent. Note: The action name must not contain whitespaces.
         * 
         * @return builder
         * 
         */
        public Builder action(@Nullable Output<String> action) {
            $.action = action;
            return this;
        }

        /**
         * @param action Optional. The name of the action associated with the intent. Note: The action name must not contain whitespaces.
         * 
         * @return builder
         * 
         */
        public Builder action(String action) {
            return action(Output.of(action));
        }

        /**
         * @param defaultResponsePlatforms Optional. The list of platforms for which the first responses will be copied from the messages in PLATFORM_UNSPECIFIED (i.e. default platform).
         * 
         * @return builder
         * 
         */
        public Builder defaultResponsePlatforms(@Nullable Output<List<IntentDefaultResponsePlatformsItem>> defaultResponsePlatforms) {
            $.defaultResponsePlatforms = defaultResponsePlatforms;
            return this;
        }

        /**
         * @param defaultResponsePlatforms Optional. The list of platforms for which the first responses will be copied from the messages in PLATFORM_UNSPECIFIED (i.e. default platform).
         * 
         * @return builder
         * 
         */
        public Builder defaultResponsePlatforms(List<IntentDefaultResponsePlatformsItem> defaultResponsePlatforms) {
            return defaultResponsePlatforms(Output.of(defaultResponsePlatforms));
        }

        /**
         * @param defaultResponsePlatforms Optional. The list of platforms for which the first responses will be copied from the messages in PLATFORM_UNSPECIFIED (i.e. default platform).
         * 
         * @return builder
         * 
         */
        public Builder defaultResponsePlatforms(IntentDefaultResponsePlatformsItem... defaultResponsePlatforms) {
            return defaultResponsePlatforms(List.of(defaultResponsePlatforms));
        }

        /**
         * @param displayName The name of this intent.
         * 
         * @return builder
         * 
         */
        public Builder displayName(Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName The name of this intent.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param endInteraction Optional. Indicates that this intent ends an interaction. Some integrations (e.g., Actions on Google or Dialogflow phone gateway) use this information to close interaction with an end user. Default is false.
         * 
         * @return builder
         * 
         */
        public Builder endInteraction(@Nullable Output<Boolean> endInteraction) {
            $.endInteraction = endInteraction;
            return this;
        }

        /**
         * @param endInteraction Optional. Indicates that this intent ends an interaction. Some integrations (e.g., Actions on Google or Dialogflow phone gateway) use this information to close interaction with an end user. Default is false.
         * 
         * @return builder
         * 
         */
        public Builder endInteraction(Boolean endInteraction) {
            return endInteraction(Output.of(endInteraction));
        }

        /**
         * @param events Optional. The collection of event names that trigger the intent. If the collection of input contexts is not empty, all of the contexts must be present in the active user session for an event to trigger this intent. Event names are limited to 150 characters.
         * 
         * @return builder
         * 
         */
        public Builder events(@Nullable Output<List<String>> events) {
            $.events = events;
            return this;
        }

        /**
         * @param events Optional. The collection of event names that trigger the intent. If the collection of input contexts is not empty, all of the contexts must be present in the active user session for an event to trigger this intent. Event names are limited to 150 characters.
         * 
         * @return builder
         * 
         */
        public Builder events(List<String> events) {
            return events(Output.of(events));
        }

        /**
         * @param events Optional. The collection of event names that trigger the intent. If the collection of input contexts is not empty, all of the contexts must be present in the active user session for an event to trigger this intent. Event names are limited to 150 characters.
         * 
         * @return builder
         * 
         */
        public Builder events(String... events) {
            return events(List.of(events));
        }

        /**
         * @param inputContextNames Optional. The list of context names required for this intent to be triggered. Format: `projects//agent/sessions/-/contexts/`.
         * 
         * @return builder
         * 
         */
        public Builder inputContextNames(@Nullable Output<List<String>> inputContextNames) {
            $.inputContextNames = inputContextNames;
            return this;
        }

        /**
         * @param inputContextNames Optional. The list of context names required for this intent to be triggered. Format: `projects//agent/sessions/-/contexts/`.
         * 
         * @return builder
         * 
         */
        public Builder inputContextNames(List<String> inputContextNames) {
            return inputContextNames(Output.of(inputContextNames));
        }

        /**
         * @param inputContextNames Optional. The list of context names required for this intent to be triggered. Format: `projects//agent/sessions/-/contexts/`.
         * 
         * @return builder
         * 
         */
        public Builder inputContextNames(String... inputContextNames) {
            return inputContextNames(List.of(inputContextNames));
        }

        /**
         * @param intentView Optional. The resource view to apply to the returned intent.
         * 
         * @return builder
         * 
         */
        public Builder intentView(@Nullable Output<String> intentView) {
            $.intentView = intentView;
            return this;
        }

        /**
         * @param intentView Optional. The resource view to apply to the returned intent.
         * 
         * @return builder
         * 
         */
        public Builder intentView(String intentView) {
            return intentView(Output.of(intentView));
        }

        /**
         * @param isFallback Optional. Indicates whether this is a fallback intent.
         * 
         * @return builder
         * 
         */
        public Builder isFallback(@Nullable Output<Boolean> isFallback) {
            $.isFallback = isFallback;
            return this;
        }

        /**
         * @param isFallback Optional. Indicates whether this is a fallback intent.
         * 
         * @return builder
         * 
         */
        public Builder isFallback(Boolean isFallback) {
            return isFallback(Output.of(isFallback));
        }

        /**
         * @param languageCode Optional. The language used to access language-specific data. If not specified, the agent&#39;s default language is used. For more information, see [Multilingual intent and entity data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity).
         * 
         * @return builder
         * 
         */
        public Builder languageCode(@Nullable Output<String> languageCode) {
            $.languageCode = languageCode;
            return this;
        }

        /**
         * @param languageCode Optional. The language used to access language-specific data. If not specified, the agent&#39;s default language is used. For more information, see [Multilingual intent and entity data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity).
         * 
         * @return builder
         * 
         */
        public Builder languageCode(String languageCode) {
            return languageCode(Output.of(languageCode));
        }

        /**
         * @param liveAgentHandoff Optional. Indicates that a live agent should be brought in to handle the interaction with the user. In most cases, when you set this flag to true, you would also want to set end_interaction to true as well. Default is false.
         * 
         * @return builder
         * 
         */
        public Builder liveAgentHandoff(@Nullable Output<Boolean> liveAgentHandoff) {
            $.liveAgentHandoff = liveAgentHandoff;
            return this;
        }

        /**
         * @param liveAgentHandoff Optional. Indicates that a live agent should be brought in to handle the interaction with the user. In most cases, when you set this flag to true, you would also want to set end_interaction to true as well. Default is false.
         * 
         * @return builder
         * 
         */
        public Builder liveAgentHandoff(Boolean liveAgentHandoff) {
            return liveAgentHandoff(Output.of(liveAgentHandoff));
        }

        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param messages Optional. The collection of rich messages corresponding to the `Response` field in the Dialogflow console.
         * 
         * @return builder
         * 
         */
        public Builder messages(@Nullable Output<List<GoogleCloudDialogflowV2IntentMessageArgs>> messages) {
            $.messages = messages;
            return this;
        }

        /**
         * @param messages Optional. The collection of rich messages corresponding to the `Response` field in the Dialogflow console.
         * 
         * @return builder
         * 
         */
        public Builder messages(List<GoogleCloudDialogflowV2IntentMessageArgs> messages) {
            return messages(Output.of(messages));
        }

        /**
         * @param messages Optional. The collection of rich messages corresponding to the `Response` field in the Dialogflow console.
         * 
         * @return builder
         * 
         */
        public Builder messages(GoogleCloudDialogflowV2IntentMessageArgs... messages) {
            return messages(List.of(messages));
        }

        /**
         * @param mlDisabled Optional. Indicates whether Machine Learning is disabled for the intent. Note: If `ml_disabled` setting is set to true, then this intent is not taken into account during inference in `ML ONLY` match mode. Also, auto-markup in the UI is turned off.
         * 
         * @return builder
         * 
         */
        public Builder mlDisabled(@Nullable Output<Boolean> mlDisabled) {
            $.mlDisabled = mlDisabled;
            return this;
        }

        /**
         * @param mlDisabled Optional. Indicates whether Machine Learning is disabled for the intent. Note: If `ml_disabled` setting is set to true, then this intent is not taken into account during inference in `ML ONLY` match mode. Also, auto-markup in the UI is turned off.
         * 
         * @return builder
         * 
         */
        public Builder mlDisabled(Boolean mlDisabled) {
            return mlDisabled(Output.of(mlDisabled));
        }

        /**
         * @param name Optional. The unique identifier of this intent. Required for Intents.UpdateIntent and Intents.BatchUpdateIntents methods. Format: `projects//agent/intents/`.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Optional. The unique identifier of this intent. Required for Intents.UpdateIntent and Intents.BatchUpdateIntents methods. Format: `projects//agent/intents/`.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param outputContexts Optional. The collection of contexts that are activated when the intent is matched. Context messages in this collection should not set the parameters field. Setting the `lifespan_count` to 0 will reset the context when the intent is matched. Format: `projects//agent/sessions/-/contexts/`.
         * 
         * @return builder
         * 
         */
        public Builder outputContexts(@Nullable Output<List<GoogleCloudDialogflowV2ContextArgs>> outputContexts) {
            $.outputContexts = outputContexts;
            return this;
        }

        /**
         * @param outputContexts Optional. The collection of contexts that are activated when the intent is matched. Context messages in this collection should not set the parameters field. Setting the `lifespan_count` to 0 will reset the context when the intent is matched. Format: `projects//agent/sessions/-/contexts/`.
         * 
         * @return builder
         * 
         */
        public Builder outputContexts(List<GoogleCloudDialogflowV2ContextArgs> outputContexts) {
            return outputContexts(Output.of(outputContexts));
        }

        /**
         * @param outputContexts Optional. The collection of contexts that are activated when the intent is matched. Context messages in this collection should not set the parameters field. Setting the `lifespan_count` to 0 will reset the context when the intent is matched. Format: `projects//agent/sessions/-/contexts/`.
         * 
         * @return builder
         * 
         */
        public Builder outputContexts(GoogleCloudDialogflowV2ContextArgs... outputContexts) {
            return outputContexts(List.of(outputContexts));
        }

        /**
         * @param parameters Optional. The collection of parameters associated with the intent.
         * 
         * @return builder
         * 
         */
        public Builder parameters(@Nullable Output<List<GoogleCloudDialogflowV2IntentParameterArgs>> parameters) {
            $.parameters = parameters;
            return this;
        }

        /**
         * @param parameters Optional. The collection of parameters associated with the intent.
         * 
         * @return builder
         * 
         */
        public Builder parameters(List<GoogleCloudDialogflowV2IntentParameterArgs> parameters) {
            return parameters(Output.of(parameters));
        }

        /**
         * @param parameters Optional. The collection of parameters associated with the intent.
         * 
         * @return builder
         * 
         */
        public Builder parameters(GoogleCloudDialogflowV2IntentParameterArgs... parameters) {
            return parameters(List.of(parameters));
        }

        /**
         * @param parentFollowupIntentName Read-only after creation. The unique identifier of the parent intent in the chain of followup intents. You can set this field when creating an intent, for example with CreateIntent or BatchUpdateIntents, in order to make this intent a followup intent. It identifies the parent followup intent. Format: `projects//agent/intents/`.
         * 
         * @return builder
         * 
         */
        public Builder parentFollowupIntentName(@Nullable Output<String> parentFollowupIntentName) {
            $.parentFollowupIntentName = parentFollowupIntentName;
            return this;
        }

        /**
         * @param parentFollowupIntentName Read-only after creation. The unique identifier of the parent intent in the chain of followup intents. You can set this field when creating an intent, for example with CreateIntent or BatchUpdateIntents, in order to make this intent a followup intent. It identifies the parent followup intent. Format: `projects//agent/intents/`.
         * 
         * @return builder
         * 
         */
        public Builder parentFollowupIntentName(String parentFollowupIntentName) {
            return parentFollowupIntentName(Output.of(parentFollowupIntentName));
        }

        /**
         * @param priority Optional. The priority of this intent. Higher numbers represent higher priorities. - If the supplied value is unspecified or 0, the service translates the value to 500,000, which corresponds to the `Normal` priority in the console. - If the supplied value is negative, the intent is ignored in runtime detect intent requests.
         * 
         * @return builder
         * 
         */
        public Builder priority(@Nullable Output<Integer> priority) {
            $.priority = priority;
            return this;
        }

        /**
         * @param priority Optional. The priority of this intent. Higher numbers represent higher priorities. - If the supplied value is unspecified or 0, the service translates the value to 500,000, which corresponds to the `Normal` priority in the console. - If the supplied value is negative, the intent is ignored in runtime detect intent requests.
         * 
         * @return builder
         * 
         */
        public Builder priority(Integer priority) {
            return priority(Output.of(priority));
        }

        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        public Builder project(String project) {
            return project(Output.of(project));
        }

        /**
         * @param resetContexts Optional. Indicates whether to delete all contexts in the current session when this intent is matched.
         * 
         * @return builder
         * 
         */
        public Builder resetContexts(@Nullable Output<Boolean> resetContexts) {
            $.resetContexts = resetContexts;
            return this;
        }

        /**
         * @param resetContexts Optional. Indicates whether to delete all contexts in the current session when this intent is matched.
         * 
         * @return builder
         * 
         */
        public Builder resetContexts(Boolean resetContexts) {
            return resetContexts(Output.of(resetContexts));
        }

        /**
         * @param trainingPhrases Optional. The collection of examples that the agent is trained on.
         * 
         * @return builder
         * 
         */
        public Builder trainingPhrases(@Nullable Output<List<GoogleCloudDialogflowV2IntentTrainingPhraseArgs>> trainingPhrases) {
            $.trainingPhrases = trainingPhrases;
            return this;
        }

        /**
         * @param trainingPhrases Optional. The collection of examples that the agent is trained on.
         * 
         * @return builder
         * 
         */
        public Builder trainingPhrases(List<GoogleCloudDialogflowV2IntentTrainingPhraseArgs> trainingPhrases) {
            return trainingPhrases(Output.of(trainingPhrases));
        }

        /**
         * @param trainingPhrases Optional. The collection of examples that the agent is trained on.
         * 
         * @return builder
         * 
         */
        public Builder trainingPhrases(GoogleCloudDialogflowV2IntentTrainingPhraseArgs... trainingPhrases) {
            return trainingPhrases(List.of(trainingPhrases));
        }

        /**
         * @param webhookState Optional. Indicates whether webhooks are enabled for the intent.
         * 
         * @return builder
         * 
         */
        public Builder webhookState(@Nullable Output<IntentWebhookState> webhookState) {
            $.webhookState = webhookState;
            return this;
        }

        /**
         * @param webhookState Optional. Indicates whether webhooks are enabled for the intent.
         * 
         * @return builder
         * 
         */
        public Builder webhookState(IntentWebhookState webhookState) {
            return webhookState(Output.of(webhookState));
        }

        public IntentArgs build() {
            $.displayName = Objects.requireNonNull($.displayName, "expected parameter 'displayName' to be non-null");
            return $;
        }
    }

}
