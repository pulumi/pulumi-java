// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.toolresults_v1beta3.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Details for an outcome with a FAILURE outcome summary.
 * 
 */
public final class FailureDetailArgs extends com.pulumi.resources.ResourceArgs {

    public static final FailureDetailArgs Empty = new FailureDetailArgs();

    /**
     * If the failure was severe because the system (app) under test crashed.
     * 
     */
    @Import(name="crashed")
    private @Nullable Output<Boolean> crashed;

    public Optional<Output<Boolean>> crashed() {
        return Optional.ofNullable(this.crashed);
    }

    /**
     * If the device ran out of memory during a test, causing the test to crash.
     * 
     */
    @Import(name="deviceOutOfMemory")
    private @Nullable Output<Boolean> deviceOutOfMemory;

    public Optional<Output<Boolean>> deviceOutOfMemory() {
        return Optional.ofNullable(this.deviceOutOfMemory);
    }

    /**
     * If the Roboscript failed to complete successfully, e.g., because a Roboscript action or assertion failed or a Roboscript action could not be matched during the entire crawl.
     * 
     */
    @Import(name="failedRoboscript")
    private @Nullable Output<Boolean> failedRoboscript;

    public Optional<Output<Boolean>> failedRoboscript() {
        return Optional.ofNullable(this.failedRoboscript);
    }

    /**
     * If an app is not installed and thus no test can be run with the app. This might be caused by trying to run a test on an unsupported platform.
     * 
     */
    @Import(name="notInstalled")
    private @Nullable Output<Boolean> notInstalled;

    public Optional<Output<Boolean>> notInstalled() {
        return Optional.ofNullable(this.notInstalled);
    }

    /**
     * If a native process (including any other than the app) crashed.
     * 
     */
    @Import(name="otherNativeCrash")
    private @Nullable Output<Boolean> otherNativeCrash;

    public Optional<Output<Boolean>> otherNativeCrash() {
        return Optional.ofNullable(this.otherNativeCrash);
    }

    /**
     * If the test overran some time limit, and that is why it failed.
     * 
     */
    @Import(name="timedOut")
    private @Nullable Output<Boolean> timedOut;

    public Optional<Output<Boolean>> timedOut() {
        return Optional.ofNullable(this.timedOut);
    }

    /**
     * If the robo was unable to crawl the app; perhaps because the app did not start.
     * 
     */
    @Import(name="unableToCrawl")
    private @Nullable Output<Boolean> unableToCrawl;

    public Optional<Output<Boolean>> unableToCrawl() {
        return Optional.ofNullable(this.unableToCrawl);
    }

    private FailureDetailArgs() {}

    private FailureDetailArgs(FailureDetailArgs $) {
        this.crashed = $.crashed;
        this.deviceOutOfMemory = $.deviceOutOfMemory;
        this.failedRoboscript = $.failedRoboscript;
        this.notInstalled = $.notInstalled;
        this.otherNativeCrash = $.otherNativeCrash;
        this.timedOut = $.timedOut;
        this.unableToCrawl = $.unableToCrawl;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FailureDetailArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FailureDetailArgs $;

        public Builder() {
            $ = new FailureDetailArgs();
        }

        public Builder(FailureDetailArgs defaults) {
            $ = new FailureDetailArgs(Objects.requireNonNull(defaults));
        }

        public Builder crashed(@Nullable Output<Boolean> crashed) {
            $.crashed = crashed;
            return this;
        }

        public Builder crashed(Boolean crashed) {
            return crashed(Output.of(crashed));
        }

        public Builder deviceOutOfMemory(@Nullable Output<Boolean> deviceOutOfMemory) {
            $.deviceOutOfMemory = deviceOutOfMemory;
            return this;
        }

        public Builder deviceOutOfMemory(Boolean deviceOutOfMemory) {
            return deviceOutOfMemory(Output.of(deviceOutOfMemory));
        }

        public Builder failedRoboscript(@Nullable Output<Boolean> failedRoboscript) {
            $.failedRoboscript = failedRoboscript;
            return this;
        }

        public Builder failedRoboscript(Boolean failedRoboscript) {
            return failedRoboscript(Output.of(failedRoboscript));
        }

        public Builder notInstalled(@Nullable Output<Boolean> notInstalled) {
            $.notInstalled = notInstalled;
            return this;
        }

        public Builder notInstalled(Boolean notInstalled) {
            return notInstalled(Output.of(notInstalled));
        }

        public Builder otherNativeCrash(@Nullable Output<Boolean> otherNativeCrash) {
            $.otherNativeCrash = otherNativeCrash;
            return this;
        }

        public Builder otherNativeCrash(Boolean otherNativeCrash) {
            return otherNativeCrash(Output.of(otherNativeCrash));
        }

        public Builder timedOut(@Nullable Output<Boolean> timedOut) {
            $.timedOut = timedOut;
            return this;
        }

        public Builder timedOut(Boolean timedOut) {
            return timedOut(Output.of(timedOut));
        }

        public Builder unableToCrawl(@Nullable Output<Boolean> unableToCrawl) {
            $.unableToCrawl = unableToCrawl;
            return this;
        }

        public Builder unableToCrawl(Boolean unableToCrawl) {
            return unableToCrawl(Output.of(unableToCrawl));
        }

        public FailureDetailArgs build() {
            return $;
        }
    }

}
