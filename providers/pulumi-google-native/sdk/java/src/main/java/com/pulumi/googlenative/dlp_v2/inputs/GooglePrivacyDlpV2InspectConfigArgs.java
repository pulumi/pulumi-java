// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.dlp_v2.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import com.pulumi.googlenative.dlp_v2.enums.GooglePrivacyDlpV2InspectConfigMinLikelihood;
import com.pulumi.googlenative.dlp_v2.inputs.GooglePrivacyDlpV2CustomInfoTypeArgs;
import com.pulumi.googlenative.dlp_v2.inputs.GooglePrivacyDlpV2FindingLimitsArgs;
import com.pulumi.googlenative.dlp_v2.inputs.GooglePrivacyDlpV2InfoTypeArgs;
import com.pulumi.googlenative.dlp_v2.inputs.GooglePrivacyDlpV2InspectionRuleSetArgs;
import java.lang.Boolean;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Configuration description of the scanning process. When used with redactContent only info_types and min_likelihood are currently used.
 * 
 */
public final class GooglePrivacyDlpV2InspectConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final GooglePrivacyDlpV2InspectConfigArgs Empty = new GooglePrivacyDlpV2InspectConfigArgs();

    /**
     * CustomInfoTypes provided by the user. See https://cloud.google.com/dlp/docs/creating-custom-infotypes to learn more.
     * 
     */
    @Import(name="customInfoTypes")
      private final @Nullable Output<List<GooglePrivacyDlpV2CustomInfoTypeArgs>> customInfoTypes;

    public Output<List<GooglePrivacyDlpV2CustomInfoTypeArgs>> customInfoTypes() {
        return this.customInfoTypes == null ? Codegen.empty() : this.customInfoTypes;
    }

    /**
     * When true, excludes type information of the findings. This is not used for data profiling.
     * 
     */
    @Import(name="excludeInfoTypes")
      private final @Nullable Output<Boolean> excludeInfoTypes;

    public Output<Boolean> excludeInfoTypes() {
        return this.excludeInfoTypes == null ? Codegen.empty() : this.excludeInfoTypes;
    }

    /**
     * When true, a contextual quote from the data that triggered a finding is included in the response; see Finding.quote. This is not used for data profiling.
     * 
     */
    @Import(name="includeQuote")
      private final @Nullable Output<Boolean> includeQuote;

    public Output<Boolean> includeQuote() {
        return this.includeQuote == null ? Codegen.empty() : this.includeQuote;
    }

    /**
     * Restricts what info_types to look for. The values must correspond to InfoType values returned by ListInfoTypes or listed at https://cloud.google.com/dlp/docs/infotypes-reference. When no InfoTypes or CustomInfoTypes are specified in a request, the system may automatically choose what detectors to run. By default this may be all types, but may change over time as detectors are updated. If you need precise control and predictability as to what detectors are run you should specify specific InfoTypes listed in the reference, otherwise a default list will be used, which may change over time.
     * 
     */
    @Import(name="infoTypes")
      private final @Nullable Output<List<GooglePrivacyDlpV2InfoTypeArgs>> infoTypes;

    public Output<List<GooglePrivacyDlpV2InfoTypeArgs>> infoTypes() {
        return this.infoTypes == null ? Codegen.empty() : this.infoTypes;
    }

    /**
     * Configuration to control the number of findings returned. This is not used for data profiling.
     * 
     */
    @Import(name="limits")
      private final @Nullable Output<GooglePrivacyDlpV2FindingLimitsArgs> limits;

    public Output<GooglePrivacyDlpV2FindingLimitsArgs> limits() {
        return this.limits == null ? Codegen.empty() : this.limits;
    }

    /**
     * Only returns findings equal or above this threshold. The default is POSSIBLE. See https://cloud.google.com/dlp/docs/likelihood to learn more.
     * 
     */
    @Import(name="minLikelihood")
      private final @Nullable Output<GooglePrivacyDlpV2InspectConfigMinLikelihood> minLikelihood;

    public Output<GooglePrivacyDlpV2InspectConfigMinLikelihood> minLikelihood() {
        return this.minLikelihood == null ? Codegen.empty() : this.minLikelihood;
    }

    /**
     * Set of rules to apply to the findings for this InspectConfig. Exclusion rules, contained in the set are executed in the end, other rules are executed in the order they are specified for each info type.
     * 
     */
    @Import(name="ruleSet")
      private final @Nullable Output<List<GooglePrivacyDlpV2InspectionRuleSetArgs>> ruleSet;

    public Output<List<GooglePrivacyDlpV2InspectionRuleSetArgs>> ruleSet() {
        return this.ruleSet == null ? Codegen.empty() : this.ruleSet;
    }

    public GooglePrivacyDlpV2InspectConfigArgs(
        @Nullable Output<List<GooglePrivacyDlpV2CustomInfoTypeArgs>> customInfoTypes,
        @Nullable Output<Boolean> excludeInfoTypes,
        @Nullable Output<Boolean> includeQuote,
        @Nullable Output<List<GooglePrivacyDlpV2InfoTypeArgs>> infoTypes,
        @Nullable Output<GooglePrivacyDlpV2FindingLimitsArgs> limits,
        @Nullable Output<GooglePrivacyDlpV2InspectConfigMinLikelihood> minLikelihood,
        @Nullable Output<List<GooglePrivacyDlpV2InspectionRuleSetArgs>> ruleSet) {
        this.customInfoTypes = customInfoTypes;
        this.excludeInfoTypes = excludeInfoTypes;
        this.includeQuote = includeQuote;
        this.infoTypes = infoTypes;
        this.limits = limits;
        this.minLikelihood = minLikelihood;
        this.ruleSet = ruleSet;
    }

    private GooglePrivacyDlpV2InspectConfigArgs() {
        this.customInfoTypes = Codegen.empty();
        this.excludeInfoTypes = Codegen.empty();
        this.includeQuote = Codegen.empty();
        this.infoTypes = Codegen.empty();
        this.limits = Codegen.empty();
        this.minLikelihood = Codegen.empty();
        this.ruleSet = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GooglePrivacyDlpV2InspectConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<List<GooglePrivacyDlpV2CustomInfoTypeArgs>> customInfoTypes;
        private @Nullable Output<Boolean> excludeInfoTypes;
        private @Nullable Output<Boolean> includeQuote;
        private @Nullable Output<List<GooglePrivacyDlpV2InfoTypeArgs>> infoTypes;
        private @Nullable Output<GooglePrivacyDlpV2FindingLimitsArgs> limits;
        private @Nullable Output<GooglePrivacyDlpV2InspectConfigMinLikelihood> minLikelihood;
        private @Nullable Output<List<GooglePrivacyDlpV2InspectionRuleSetArgs>> ruleSet;

        public Builder() {
    	      // Empty
        }

        public Builder(GooglePrivacyDlpV2InspectConfigArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.customInfoTypes = defaults.customInfoTypes;
    	      this.excludeInfoTypes = defaults.excludeInfoTypes;
    	      this.includeQuote = defaults.includeQuote;
    	      this.infoTypes = defaults.infoTypes;
    	      this.limits = defaults.limits;
    	      this.minLikelihood = defaults.minLikelihood;
    	      this.ruleSet = defaults.ruleSet;
        }

        public Builder customInfoTypes(@Nullable Output<List<GooglePrivacyDlpV2CustomInfoTypeArgs>> customInfoTypes) {
            this.customInfoTypes = customInfoTypes;
            return this;
        }
        public Builder customInfoTypes(@Nullable List<GooglePrivacyDlpV2CustomInfoTypeArgs> customInfoTypes) {
            this.customInfoTypes = Codegen.ofNullable(customInfoTypes);
            return this;
        }
        public Builder customInfoTypes(GooglePrivacyDlpV2CustomInfoTypeArgs... customInfoTypes) {
            return customInfoTypes(List.of(customInfoTypes));
        }
        public Builder excludeInfoTypes(@Nullable Output<Boolean> excludeInfoTypes) {
            this.excludeInfoTypes = excludeInfoTypes;
            return this;
        }
        public Builder excludeInfoTypes(@Nullable Boolean excludeInfoTypes) {
            this.excludeInfoTypes = Codegen.ofNullable(excludeInfoTypes);
            return this;
        }
        public Builder includeQuote(@Nullable Output<Boolean> includeQuote) {
            this.includeQuote = includeQuote;
            return this;
        }
        public Builder includeQuote(@Nullable Boolean includeQuote) {
            this.includeQuote = Codegen.ofNullable(includeQuote);
            return this;
        }
        public Builder infoTypes(@Nullable Output<List<GooglePrivacyDlpV2InfoTypeArgs>> infoTypes) {
            this.infoTypes = infoTypes;
            return this;
        }
        public Builder infoTypes(@Nullable List<GooglePrivacyDlpV2InfoTypeArgs> infoTypes) {
            this.infoTypes = Codegen.ofNullable(infoTypes);
            return this;
        }
        public Builder infoTypes(GooglePrivacyDlpV2InfoTypeArgs... infoTypes) {
            return infoTypes(List.of(infoTypes));
        }
        public Builder limits(@Nullable Output<GooglePrivacyDlpV2FindingLimitsArgs> limits) {
            this.limits = limits;
            return this;
        }
        public Builder limits(@Nullable GooglePrivacyDlpV2FindingLimitsArgs limits) {
            this.limits = Codegen.ofNullable(limits);
            return this;
        }
        public Builder minLikelihood(@Nullable Output<GooglePrivacyDlpV2InspectConfigMinLikelihood> minLikelihood) {
            this.minLikelihood = minLikelihood;
            return this;
        }
        public Builder minLikelihood(@Nullable GooglePrivacyDlpV2InspectConfigMinLikelihood minLikelihood) {
            this.minLikelihood = Codegen.ofNullable(minLikelihood);
            return this;
        }
        public Builder ruleSet(@Nullable Output<List<GooglePrivacyDlpV2InspectionRuleSetArgs>> ruleSet) {
            this.ruleSet = ruleSet;
            return this;
        }
        public Builder ruleSet(@Nullable List<GooglePrivacyDlpV2InspectionRuleSetArgs> ruleSet) {
            this.ruleSet = Codegen.ofNullable(ruleSet);
            return this;
        }
        public Builder ruleSet(GooglePrivacyDlpV2InspectionRuleSetArgs... ruleSet) {
            return ruleSet(List.of(ruleSet));
        }        public GooglePrivacyDlpV2InspectConfigArgs build() {
            return new GooglePrivacyDlpV2InspectConfigArgs(customInfoTypes, excludeInfoTypes, includeQuote, infoTypes, limits, minLikelihood, ruleSet);
        }
    }
}
