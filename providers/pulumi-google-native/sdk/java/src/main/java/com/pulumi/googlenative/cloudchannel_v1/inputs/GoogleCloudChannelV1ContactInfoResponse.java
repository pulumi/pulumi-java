// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.cloudchannel_v1.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * Contact information for a customer account.
 * 
 */
public final class GoogleCloudChannelV1ContactInfoResponse extends com.pulumi.resources.InvokeArgs {

    public static final GoogleCloudChannelV1ContactInfoResponse Empty = new GoogleCloudChannelV1ContactInfoResponse();

    /**
     * The customer account contact&#39;s display name, formatted as a combination of the customer&#39;s first and last name.
     * 
     */
    @Import(name="displayName", required=true)
    private String displayName;

    /**
     * @return The customer account contact&#39;s display name, formatted as a combination of the customer&#39;s first and last name.
     * 
     */
    public String displayName() {
        return this.displayName;
    }

    /**
     * The customer account&#39;s contact email. Required for entitlements that create admin.google.com accounts, and serves as the customer&#39;s username for those accounts. Use this email to invite Team customers.
     * 
     */
    @Import(name="email", required=true)
    private String email;

    /**
     * @return The customer account&#39;s contact email. Required for entitlements that create admin.google.com accounts, and serves as the customer&#39;s username for those accounts. Use this email to invite Team customers.
     * 
     */
    public String email() {
        return this.email;
    }

    /**
     * The customer account contact&#39;s first name. Optional for Team customers.
     * 
     */
    @Import(name="firstName", required=true)
    private String firstName;

    /**
     * @return The customer account contact&#39;s first name. Optional for Team customers.
     * 
     */
    public String firstName() {
        return this.firstName;
    }

    /**
     * The customer account contact&#39;s last name. Optional for Team customers.
     * 
     */
    @Import(name="lastName", required=true)
    private String lastName;

    /**
     * @return The customer account contact&#39;s last name. Optional for Team customers.
     * 
     */
    public String lastName() {
        return this.lastName;
    }

    /**
     * The customer account&#39;s contact phone number.
     * 
     */
    @Import(name="phone", required=true)
    private String phone;

    /**
     * @return The customer account&#39;s contact phone number.
     * 
     */
    public String phone() {
        return this.phone;
    }

    /**
     * Optional. The customer account contact&#39;s job title.
     * 
     */
    @Import(name="title", required=true)
    private String title;

    /**
     * @return Optional. The customer account contact&#39;s job title.
     * 
     */
    public String title() {
        return this.title;
    }

    private GoogleCloudChannelV1ContactInfoResponse() {}

    private GoogleCloudChannelV1ContactInfoResponse(GoogleCloudChannelV1ContactInfoResponse $) {
        this.displayName = $.displayName;
        this.email = $.email;
        this.firstName = $.firstName;
        this.lastName = $.lastName;
        this.phone = $.phone;
        this.title = $.title;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GoogleCloudChannelV1ContactInfoResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GoogleCloudChannelV1ContactInfoResponse $;

        public Builder() {
            $ = new GoogleCloudChannelV1ContactInfoResponse();
        }

        public Builder(GoogleCloudChannelV1ContactInfoResponse defaults) {
            $ = new GoogleCloudChannelV1ContactInfoResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param displayName The customer account contact&#39;s display name, formatted as a combination of the customer&#39;s first and last name.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param email The customer account&#39;s contact email. Required for entitlements that create admin.google.com accounts, and serves as the customer&#39;s username for those accounts. Use this email to invite Team customers.
         * 
         * @return builder
         * 
         */
        public Builder email(String email) {
            $.email = email;
            return this;
        }

        /**
         * @param firstName The customer account contact&#39;s first name. Optional for Team customers.
         * 
         * @return builder
         * 
         */
        public Builder firstName(String firstName) {
            $.firstName = firstName;
            return this;
        }

        /**
         * @param lastName The customer account contact&#39;s last name. Optional for Team customers.
         * 
         * @return builder
         * 
         */
        public Builder lastName(String lastName) {
            $.lastName = lastName;
            return this;
        }

        /**
         * @param phone The customer account&#39;s contact phone number.
         * 
         * @return builder
         * 
         */
        public Builder phone(String phone) {
            $.phone = phone;
            return this;
        }

        /**
         * @param title Optional. The customer account contact&#39;s job title.
         * 
         * @return builder
         * 
         */
        public Builder title(String title) {
            $.title = title;
            return this;
        }

        public GoogleCloudChannelV1ContactInfoResponse build() {
            $.displayName = Objects.requireNonNull($.displayName, "expected parameter 'displayName' to be non-null");
            $.email = Objects.requireNonNull($.email, "expected parameter 'email' to be non-null");
            $.firstName = Objects.requireNonNull($.firstName, "expected parameter 'firstName' to be non-null");
            $.lastName = Objects.requireNonNull($.lastName, "expected parameter 'lastName' to be non-null");
            $.phone = Objects.requireNonNull($.phone, "expected parameter 'phone' to be non-null");
            $.title = Objects.requireNonNull($.title, "expected parameter 'title' to be non-null");
            return $;
        }
    }

}
