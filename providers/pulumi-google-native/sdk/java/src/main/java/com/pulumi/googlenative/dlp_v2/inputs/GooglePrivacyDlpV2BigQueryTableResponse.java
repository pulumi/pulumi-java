// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.dlp_v2.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * Message defining the location of a BigQuery table. A table is uniquely identified by its project_id, dataset_id, and table_name. Within a query a table is often referenced with a string in the format of: `:.` or `..`.
 * 
 */
public final class GooglePrivacyDlpV2BigQueryTableResponse extends com.pulumi.resources.InvokeArgs {

    public static final GooglePrivacyDlpV2BigQueryTableResponse Empty = new GooglePrivacyDlpV2BigQueryTableResponse();

    /**
     * Dataset ID of the table.
     * 
     */
    @Import(name="datasetId", required=true)
    private String datasetId;

    /**
     * @return Dataset ID of the table.
     * 
     */
    public String datasetId() {
        return this.datasetId;
    }

    /**
     * The Google Cloud Platform project ID of the project containing the table. If omitted, project ID is inferred from the API call.
     * 
     */
    @Import(name="project", required=true)
    private String project;

    /**
     * @return The Google Cloud Platform project ID of the project containing the table. If omitted, project ID is inferred from the API call.
     * 
     */
    public String project() {
        return this.project;
    }

    /**
     * Name of the table.
     * 
     */
    @Import(name="tableId", required=true)
    private String tableId;

    /**
     * @return Name of the table.
     * 
     */
    public String tableId() {
        return this.tableId;
    }

    private GooglePrivacyDlpV2BigQueryTableResponse() {}

    private GooglePrivacyDlpV2BigQueryTableResponse(GooglePrivacyDlpV2BigQueryTableResponse $) {
        this.datasetId = $.datasetId;
        this.project = $.project;
        this.tableId = $.tableId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GooglePrivacyDlpV2BigQueryTableResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GooglePrivacyDlpV2BigQueryTableResponse $;

        public Builder() {
            $ = new GooglePrivacyDlpV2BigQueryTableResponse();
        }

        public Builder(GooglePrivacyDlpV2BigQueryTableResponse defaults) {
            $ = new GooglePrivacyDlpV2BigQueryTableResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param datasetId Dataset ID of the table.
         * 
         * @return builder
         * 
         */
        public Builder datasetId(String datasetId) {
            $.datasetId = datasetId;
            return this;
        }

        /**
         * @param project The Google Cloud Platform project ID of the project containing the table. If omitted, project ID is inferred from the API call.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            $.project = project;
            return this;
        }

        /**
         * @param tableId Name of the table.
         * 
         * @return builder
         * 
         */
        public Builder tableId(String tableId) {
            $.tableId = tableId;
            return this;
        }

        public GooglePrivacyDlpV2BigQueryTableResponse build() {
            $.datasetId = Objects.requireNonNull($.datasetId, "expected parameter 'datasetId' to be non-null");
            $.project = Objects.requireNonNull($.project, "expected parameter 'project' to be non-null");
            $.tableId = Objects.requireNonNull($.tableId, "expected parameter 'tableId' to be non-null");
            return $;
        }
    }

}
