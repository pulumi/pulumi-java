// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.dlp_v2.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.dlp_v2.inputs.GooglePrivacyDlpV2ExpressionsResponse;
import java.util.Objects;


/**
 * A condition for determining whether a transformation should be applied to a field.
 * 
 */
public final class GooglePrivacyDlpV2RecordConditionResponse extends com.pulumi.resources.InvokeArgs {

    public static final GooglePrivacyDlpV2RecordConditionResponse Empty = new GooglePrivacyDlpV2RecordConditionResponse();

    /**
     * An expression.
     * 
     */
    @Import(name="expressions", required=true)
    private GooglePrivacyDlpV2ExpressionsResponse expressions;

    public GooglePrivacyDlpV2ExpressionsResponse expressions() {
        return this.expressions;
    }

    private GooglePrivacyDlpV2RecordConditionResponse() {}

    private GooglePrivacyDlpV2RecordConditionResponse(GooglePrivacyDlpV2RecordConditionResponse $) {
        this.expressions = $.expressions;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GooglePrivacyDlpV2RecordConditionResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GooglePrivacyDlpV2RecordConditionResponse $;

        public Builder() {
            $ = new GooglePrivacyDlpV2RecordConditionResponse();
        }

        public Builder(GooglePrivacyDlpV2RecordConditionResponse defaults) {
            $ = new GooglePrivacyDlpV2RecordConditionResponse(Objects.requireNonNull(defaults));
        }

        public Builder expressions(GooglePrivacyDlpV2ExpressionsResponse expressions) {
            $.expressions = expressions;
            return this;
        }

        public GooglePrivacyDlpV2RecordConditionResponse build() {
            $.expressions = Objects.requireNonNull($.expressions, "expected parameter 'expressions' to be non-null");
            return $;
        }
    }

}
