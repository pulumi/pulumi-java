// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.dlp_v2.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.dlp_v2.inputs.GooglePrivacyDlpV2FieldIdResponse;
import java.util.Objects;


/**
 * Compute numerical stats over an individual column, including min, max, and quantiles.
 * 
 */
public final class GooglePrivacyDlpV2NumericalStatsConfigResponse extends com.pulumi.resources.InvokeArgs {

    public static final GooglePrivacyDlpV2NumericalStatsConfigResponse Empty = new GooglePrivacyDlpV2NumericalStatsConfigResponse();

    /**
     * Field to compute numerical stats on. Supported types are integer, float, date, datetime, timestamp, time.
     * 
     */
    @Import(name="field", required=true)
    private GooglePrivacyDlpV2FieldIdResponse field;

    /**
     * @return Field to compute numerical stats on. Supported types are integer, float, date, datetime, timestamp, time.
     * 
     */
    public GooglePrivacyDlpV2FieldIdResponse field() {
        return this.field;
    }

    private GooglePrivacyDlpV2NumericalStatsConfigResponse() {}

    private GooglePrivacyDlpV2NumericalStatsConfigResponse(GooglePrivacyDlpV2NumericalStatsConfigResponse $) {
        this.field = $.field;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GooglePrivacyDlpV2NumericalStatsConfigResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GooglePrivacyDlpV2NumericalStatsConfigResponse $;

        public Builder() {
            $ = new GooglePrivacyDlpV2NumericalStatsConfigResponse();
        }

        public Builder(GooglePrivacyDlpV2NumericalStatsConfigResponse defaults) {
            $ = new GooglePrivacyDlpV2NumericalStatsConfigResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param field Field to compute numerical stats on. Supported types are integer, float, date, datetime, timestamp, time.
         * 
         * @return builder
         * 
         */
        public Builder field(GooglePrivacyDlpV2FieldIdResponse field) {
            $.field = field;
            return this;
        }

        public GooglePrivacyDlpV2NumericalStatsConfigResponse build() {
            $.field = Objects.requireNonNull($.field, "expected parameter 'field' to be non-null");
            return $;
        }
    }

}
