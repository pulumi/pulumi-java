// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.connectors_v1.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * JWT claims used for the jwt-bearer authorization grant.
 * 
 */
public final class JwtClaimsResponse extends com.pulumi.resources.InvokeArgs {

    public static final JwtClaimsResponse Empty = new JwtClaimsResponse();

    /**
     * Value for the &#34;aud&#34; claim.
     * 
     */
    @Import(name="audience", required=true)
    private String audience;

    /**
     * @return Value for the &#34;aud&#34; claim.
     * 
     */
    public String audience() {
        return this.audience;
    }

    /**
     * Value for the &#34;iss&#34; claim.
     * 
     */
    @Import(name="issuer", required=true)
    private String issuer;

    /**
     * @return Value for the &#34;iss&#34; claim.
     * 
     */
    public String issuer() {
        return this.issuer;
    }

    /**
     * Value for the &#34;sub&#34; claim.
     * 
     */
    @Import(name="subject", required=true)
    private String subject;

    /**
     * @return Value for the &#34;sub&#34; claim.
     * 
     */
    public String subject() {
        return this.subject;
    }

    private JwtClaimsResponse() {}

    private JwtClaimsResponse(JwtClaimsResponse $) {
        this.audience = $.audience;
        this.issuer = $.issuer;
        this.subject = $.subject;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(JwtClaimsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private JwtClaimsResponse $;

        public Builder() {
            $ = new JwtClaimsResponse();
        }

        public Builder(JwtClaimsResponse defaults) {
            $ = new JwtClaimsResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param audience Value for the &#34;aud&#34; claim.
         * 
         * @return builder
         * 
         */
        public Builder audience(String audience) {
            $.audience = audience;
            return this;
        }

        /**
         * @param issuer Value for the &#34;iss&#34; claim.
         * 
         * @return builder
         * 
         */
        public Builder issuer(String issuer) {
            $.issuer = issuer;
            return this;
        }

        /**
         * @param subject Value for the &#34;sub&#34; claim.
         * 
         * @return builder
         * 
         */
        public Builder subject(String subject) {
            $.subject = subject;
            return this;
        }

        public JwtClaimsResponse build() {
            $.audience = Objects.requireNonNull($.audience, "expected parameter 'audience' to be non-null");
            $.issuer = Objects.requireNonNull($.issuer, "expected parameter 'issuer' to be non-null");
            $.subject = Objects.requireNonNull($.subject, "expected parameter 'subject' to be non-null");
            return $;
        }
    }

}
