// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.bigquerydatatransfer.v1;

import com.pulumi.core.Output;
import com.pulumi.core.TypeShape;
import com.pulumi.deployment.Deployment;
import com.pulumi.deployment.InvokeOptions;
import com.pulumi.googlenative.Utilities;
import com.pulumi.googlenative.bigquerydatatransfer.v1.inputs.GetTransferConfigArgs;
import com.pulumi.googlenative.bigquerydatatransfer.v1.inputs.GetTransferConfigPlainArgs;
import com.pulumi.googlenative.bigquerydatatransfer.v1.outputs.GetTransferConfigResult;
import java.util.concurrent.CompletableFuture;

public final class Bigquerydatatransfer_v1Functions {
    /**
     * Returns information about a data transfer config.
     * 
     */
    public static Output<GetTransferConfigResult> getTransferConfig(GetTransferConfigArgs args) {
        return getTransferConfig(args, InvokeOptions.Empty);
    }
    /**
     * Returns information about a data transfer config.
     * 
     */
    public static CompletableFuture<GetTransferConfigResult> getTransferConfigPlain(GetTransferConfigPlainArgs args) {
        return getTransferConfigPlain(args, InvokeOptions.Empty);
    }
    /**
     * Returns information about a data transfer config.
     * 
     */
    public static Output<GetTransferConfigResult> getTransferConfig(GetTransferConfigArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("google-native:bigquerydatatransfer/v1:getTransferConfig", TypeShape.of(GetTransferConfigResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Returns information about a data transfer config.
     * 
     */
    public static CompletableFuture<GetTransferConfigResult> getTransferConfigPlain(GetTransferConfigPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("google-native:bigquerydatatransfer/v1:getTransferConfig", TypeShape.of(GetTransferConfigResult.class), args, Utilities.withVersion(options));
    }
}
