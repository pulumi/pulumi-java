// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.privateca_v1.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.util.Objects;


/**
 * IssuanceModes specifies the allowed ways in which Certificates may be requested from this CaPool.
 * 
 */
public final class IssuanceModesResponse extends com.pulumi.resources.InvokeArgs {

    public static final IssuanceModesResponse Empty = new IssuanceModesResponse();

    /**
     * Optional. When true, allows callers to create Certificates by specifying a CertificateConfig.
     * 
     */
    @Import(name="allowConfigBasedIssuance", required=true)
    private Boolean allowConfigBasedIssuance;

    /**
     * @return Optional. When true, allows callers to create Certificates by specifying a CertificateConfig.
     * 
     */
    public Boolean allowConfigBasedIssuance() {
        return this.allowConfigBasedIssuance;
    }

    /**
     * Optional. When true, allows callers to create Certificates by specifying a CSR.
     * 
     */
    @Import(name="allowCsrBasedIssuance", required=true)
    private Boolean allowCsrBasedIssuance;

    /**
     * @return Optional. When true, allows callers to create Certificates by specifying a CSR.
     * 
     */
    public Boolean allowCsrBasedIssuance() {
        return this.allowCsrBasedIssuance;
    }

    private IssuanceModesResponse() {}

    private IssuanceModesResponse(IssuanceModesResponse $) {
        this.allowConfigBasedIssuance = $.allowConfigBasedIssuance;
        this.allowCsrBasedIssuance = $.allowCsrBasedIssuance;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(IssuanceModesResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private IssuanceModesResponse $;

        public Builder() {
            $ = new IssuanceModesResponse();
        }

        public Builder(IssuanceModesResponse defaults) {
            $ = new IssuanceModesResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param allowConfigBasedIssuance Optional. When true, allows callers to create Certificates by specifying a CertificateConfig.
         * 
         * @return builder
         * 
         */
        public Builder allowConfigBasedIssuance(Boolean allowConfigBasedIssuance) {
            $.allowConfigBasedIssuance = allowConfigBasedIssuance;
            return this;
        }

        /**
         * @param allowCsrBasedIssuance Optional. When true, allows callers to create Certificates by specifying a CSR.
         * 
         * @return builder
         * 
         */
        public Builder allowCsrBasedIssuance(Boolean allowCsrBasedIssuance) {
            $.allowCsrBasedIssuance = allowCsrBasedIssuance;
            return this;
        }

        public IssuanceModesResponse build() {
            $.allowConfigBasedIssuance = Objects.requireNonNull($.allowConfigBasedIssuance, "expected parameter 'allowConfigBasedIssuance' to be non-null");
            $.allowCsrBasedIssuance = Objects.requireNonNull($.allowCsrBasedIssuance, "expected parameter 'allowCsrBasedIssuance' to be non-null");
            return $;
        }
    }

}
