// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.websecurityscanner_v1alpha.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;


/**
 * Scan schedule configuration.
 * 
 */
public final class ScheduleResponse extends com.pulumi.resources.InvokeArgs {

    public static final ScheduleResponse Empty = new ScheduleResponse();

    /**
     * The duration of time between executions in days.
     * 
     */
    @Import(name="intervalDurationDays", required=true)
    private Integer intervalDurationDays;

    /**
     * @return The duration of time between executions in days.
     * 
     */
    public Integer intervalDurationDays() {
        return this.intervalDurationDays;
    }

    /**
     * A timestamp indicates when the next run will be scheduled. The value is refreshed by the server after each run. If unspecified, it will default to current server time, which means the scan will be scheduled to start immediately.
     * 
     */
    @Import(name="scheduleTime", required=true)
    private String scheduleTime;

    /**
     * @return A timestamp indicates when the next run will be scheduled. The value is refreshed by the server after each run. If unspecified, it will default to current server time, which means the scan will be scheduled to start immediately.
     * 
     */
    public String scheduleTime() {
        return this.scheduleTime;
    }

    private ScheduleResponse() {}

    private ScheduleResponse(ScheduleResponse $) {
        this.intervalDurationDays = $.intervalDurationDays;
        this.scheduleTime = $.scheduleTime;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ScheduleResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ScheduleResponse $;

        public Builder() {
            $ = new ScheduleResponse();
        }

        public Builder(ScheduleResponse defaults) {
            $ = new ScheduleResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param intervalDurationDays The duration of time between executions in days.
         * 
         * @return builder
         * 
         */
        public Builder intervalDurationDays(Integer intervalDurationDays) {
            $.intervalDurationDays = intervalDurationDays;
            return this;
        }

        /**
         * @param scheduleTime A timestamp indicates when the next run will be scheduled. The value is refreshed by the server after each run. If unspecified, it will default to current server time, which means the scan will be scheduled to start immediately.
         * 
         * @return builder
         * 
         */
        public Builder scheduleTime(String scheduleTime) {
            $.scheduleTime = scheduleTime;
            return this;
        }

        public ScheduleResponse build() {
            $.intervalDurationDays = Objects.requireNonNull($.intervalDurationDays, "expected parameter 'intervalDurationDays' to be non-null");
            $.scheduleTime = Objects.requireNonNull($.scheduleTime, "expected parameter 'scheduleTime' to be non-null");
            return $;
        }
    }

}
