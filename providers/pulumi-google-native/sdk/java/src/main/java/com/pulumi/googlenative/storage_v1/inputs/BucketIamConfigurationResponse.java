// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.storage_v1.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.storage_v1.inputs.BucketIamConfigurationBucketPolicyOnlyResponse;
import com.pulumi.googlenative.storage_v1.inputs.BucketIamConfigurationUniformBucketLevelAccessResponse;
import java.lang.String;
import java.util.Objects;


/**
 * The bucket&#39;s IAM configuration.
 * 
 */
public final class BucketIamConfigurationResponse extends com.pulumi.resources.InvokeArgs {

    public static final BucketIamConfigurationResponse Empty = new BucketIamConfigurationResponse();

    /**
     * The bucket&#39;s uniform bucket-level access configuration. The feature was formerly known as Bucket Policy Only. For backward compatibility, this field will be populated with identical information as the uniformBucketLevelAccess field. We recommend using the uniformBucketLevelAccess field to enable and disable the feature.
     * 
     */
    @Import(name="bucketPolicyOnly", required=true)
    private BucketIamConfigurationBucketPolicyOnlyResponse bucketPolicyOnly;

    public BucketIamConfigurationBucketPolicyOnlyResponse bucketPolicyOnly() {
        return this.bucketPolicyOnly;
    }

    /**
     * The bucket&#39;s Public Access Prevention configuration. Currently, &#39;inherited&#39; and &#39;enforced&#39; are supported.
     * 
     */
    @Import(name="publicAccessPrevention", required=true)
    private String publicAccessPrevention;

    public String publicAccessPrevention() {
        return this.publicAccessPrevention;
    }

    /**
     * The bucket&#39;s uniform bucket-level access configuration.
     * 
     */
    @Import(name="uniformBucketLevelAccess", required=true)
    private BucketIamConfigurationUniformBucketLevelAccessResponse uniformBucketLevelAccess;

    public BucketIamConfigurationUniformBucketLevelAccessResponse uniformBucketLevelAccess() {
        return this.uniformBucketLevelAccess;
    }

    private BucketIamConfigurationResponse() {}

    private BucketIamConfigurationResponse(BucketIamConfigurationResponse $) {
        this.bucketPolicyOnly = $.bucketPolicyOnly;
        this.publicAccessPrevention = $.publicAccessPrevention;
        this.uniformBucketLevelAccess = $.uniformBucketLevelAccess;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BucketIamConfigurationResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BucketIamConfigurationResponse $;

        public Builder() {
            $ = new BucketIamConfigurationResponse();
        }

        public Builder(BucketIamConfigurationResponse defaults) {
            $ = new BucketIamConfigurationResponse(Objects.requireNonNull(defaults));
        }

        public Builder bucketPolicyOnly(BucketIamConfigurationBucketPolicyOnlyResponse bucketPolicyOnly) {
            $.bucketPolicyOnly = bucketPolicyOnly;
            return this;
        }

        public Builder publicAccessPrevention(String publicAccessPrevention) {
            $.publicAccessPrevention = publicAccessPrevention;
            return this;
        }

        public Builder uniformBucketLevelAccess(BucketIamConfigurationUniformBucketLevelAccessResponse uniformBucketLevelAccess) {
            $.uniformBucketLevelAccess = uniformBucketLevelAccess;
            return this;
        }

        public BucketIamConfigurationResponse build() {
            $.bucketPolicyOnly = Objects.requireNonNull($.bucketPolicyOnly, "expected parameter 'bucketPolicyOnly' to be non-null");
            $.publicAccessPrevention = Objects.requireNonNull($.publicAccessPrevention, "expected parameter 'publicAccessPrevention' to be non-null");
            $.uniformBucketLevelAccess = Objects.requireNonNull($.uniformBucketLevelAccess, "expected parameter 'uniformBucketLevelAccess' to be non-null");
            return $;
        }
    }

}
