// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.dlp_v2.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.dlp_v2.inputs.GooglePrivacyDlpV2ValueFrequencyResponse;
import java.lang.String;
import java.util.List;
import java.util.Objects;


/**
 * Histogram of value frequencies in the column.
 * 
 */
public final class GooglePrivacyDlpV2CategoricalStatsHistogramBucketResponse extends com.pulumi.resources.InvokeArgs {

    public static final GooglePrivacyDlpV2CategoricalStatsHistogramBucketResponse Empty = new GooglePrivacyDlpV2CategoricalStatsHistogramBucketResponse();

    /**
     * Total number of values in this bucket.
     * 
     */
    @Import(name="bucketSize", required=true)
    private String bucketSize;

    /**
     * @return Total number of values in this bucket.
     * 
     */
    public String bucketSize() {
        return this.bucketSize;
    }

    /**
     * Total number of distinct values in this bucket.
     * 
     */
    @Import(name="bucketValueCount", required=true)
    private String bucketValueCount;

    /**
     * @return Total number of distinct values in this bucket.
     * 
     */
    public String bucketValueCount() {
        return this.bucketValueCount;
    }

    /**
     * Sample of value frequencies in this bucket. The total number of values returned per bucket is capped at 20.
     * 
     */
    @Import(name="bucketValues", required=true)
    private List<GooglePrivacyDlpV2ValueFrequencyResponse> bucketValues;

    /**
     * @return Sample of value frequencies in this bucket. The total number of values returned per bucket is capped at 20.
     * 
     */
    public List<GooglePrivacyDlpV2ValueFrequencyResponse> bucketValues() {
        return this.bucketValues;
    }

    /**
     * Lower bound on the value frequency of the values in this bucket.
     * 
     */
    @Import(name="valueFrequencyLowerBound", required=true)
    private String valueFrequencyLowerBound;

    /**
     * @return Lower bound on the value frequency of the values in this bucket.
     * 
     */
    public String valueFrequencyLowerBound() {
        return this.valueFrequencyLowerBound;
    }

    /**
     * Upper bound on the value frequency of the values in this bucket.
     * 
     */
    @Import(name="valueFrequencyUpperBound", required=true)
    private String valueFrequencyUpperBound;

    /**
     * @return Upper bound on the value frequency of the values in this bucket.
     * 
     */
    public String valueFrequencyUpperBound() {
        return this.valueFrequencyUpperBound;
    }

    private GooglePrivacyDlpV2CategoricalStatsHistogramBucketResponse() {}

    private GooglePrivacyDlpV2CategoricalStatsHistogramBucketResponse(GooglePrivacyDlpV2CategoricalStatsHistogramBucketResponse $) {
        this.bucketSize = $.bucketSize;
        this.bucketValueCount = $.bucketValueCount;
        this.bucketValues = $.bucketValues;
        this.valueFrequencyLowerBound = $.valueFrequencyLowerBound;
        this.valueFrequencyUpperBound = $.valueFrequencyUpperBound;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GooglePrivacyDlpV2CategoricalStatsHistogramBucketResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GooglePrivacyDlpV2CategoricalStatsHistogramBucketResponse $;

        public Builder() {
            $ = new GooglePrivacyDlpV2CategoricalStatsHistogramBucketResponse();
        }

        public Builder(GooglePrivacyDlpV2CategoricalStatsHistogramBucketResponse defaults) {
            $ = new GooglePrivacyDlpV2CategoricalStatsHistogramBucketResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param bucketSize Total number of values in this bucket.
         * 
         * @return builder
         * 
         */
        public Builder bucketSize(String bucketSize) {
            $.bucketSize = bucketSize;
            return this;
        }

        /**
         * @param bucketValueCount Total number of distinct values in this bucket.
         * 
         * @return builder
         * 
         */
        public Builder bucketValueCount(String bucketValueCount) {
            $.bucketValueCount = bucketValueCount;
            return this;
        }

        /**
         * @param bucketValues Sample of value frequencies in this bucket. The total number of values returned per bucket is capped at 20.
         * 
         * @return builder
         * 
         */
        public Builder bucketValues(List<GooglePrivacyDlpV2ValueFrequencyResponse> bucketValues) {
            $.bucketValues = bucketValues;
            return this;
        }

        /**
         * @param bucketValues Sample of value frequencies in this bucket. The total number of values returned per bucket is capped at 20.
         * 
         * @return builder
         * 
         */
        public Builder bucketValues(GooglePrivacyDlpV2ValueFrequencyResponse... bucketValues) {
            return bucketValues(List.of(bucketValues));
        }

        /**
         * @param valueFrequencyLowerBound Lower bound on the value frequency of the values in this bucket.
         * 
         * @return builder
         * 
         */
        public Builder valueFrequencyLowerBound(String valueFrequencyLowerBound) {
            $.valueFrequencyLowerBound = valueFrequencyLowerBound;
            return this;
        }

        /**
         * @param valueFrequencyUpperBound Upper bound on the value frequency of the values in this bucket.
         * 
         * @return builder
         * 
         */
        public Builder valueFrequencyUpperBound(String valueFrequencyUpperBound) {
            $.valueFrequencyUpperBound = valueFrequencyUpperBound;
            return this;
        }

        public GooglePrivacyDlpV2CategoricalStatsHistogramBucketResponse build() {
            $.bucketSize = Objects.requireNonNull($.bucketSize, "expected parameter 'bucketSize' to be non-null");
            $.bucketValueCount = Objects.requireNonNull($.bucketValueCount, "expected parameter 'bucketValueCount' to be non-null");
            $.bucketValues = Objects.requireNonNull($.bucketValues, "expected parameter 'bucketValues' to be non-null");
            $.valueFrequencyLowerBound = Objects.requireNonNull($.valueFrequencyLowerBound, "expected parameter 'valueFrequencyLowerBound' to be non-null");
            $.valueFrequencyUpperBound = Objects.requireNonNull($.valueFrequencyUpperBound, "expected parameter 'valueFrequencyUpperBound' to be non-null");
            return $;
        }
    }

}
