// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.storage.v1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.storage.v1.inputs.BucketLifecycleRuleItemActionArgs;
import com.pulumi.googlenative.storage.v1.inputs.BucketLifecycleRuleItemConditionArgs;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BucketLifecycleRuleItemArgs extends com.pulumi.resources.ResourceArgs {

    public static final BucketLifecycleRuleItemArgs Empty = new BucketLifecycleRuleItemArgs();

    /**
     * The action to take.
     * 
     */
    @Import(name="action")
    private @Nullable Output<BucketLifecycleRuleItemActionArgs> action;

    /**
     * @return The action to take.
     * 
     */
    public Optional<Output<BucketLifecycleRuleItemActionArgs>> action() {
        return Optional.ofNullable(this.action);
    }

    /**
     * The condition(s) under which the action will be taken.
     * 
     */
    @Import(name="condition")
    private @Nullable Output<BucketLifecycleRuleItemConditionArgs> condition;

    /**
     * @return The condition(s) under which the action will be taken.
     * 
     */
    public Optional<Output<BucketLifecycleRuleItemConditionArgs>> condition() {
        return Optional.ofNullable(this.condition);
    }

    private BucketLifecycleRuleItemArgs() {}

    private BucketLifecycleRuleItemArgs(BucketLifecycleRuleItemArgs $) {
        this.action = $.action;
        this.condition = $.condition;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BucketLifecycleRuleItemArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BucketLifecycleRuleItemArgs $;

        public Builder() {
            $ = new BucketLifecycleRuleItemArgs();
        }

        public Builder(BucketLifecycleRuleItemArgs defaults) {
            $ = new BucketLifecycleRuleItemArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param action The action to take.
         * 
         * @return builder
         * 
         */
        public Builder action(@Nullable Output<BucketLifecycleRuleItemActionArgs> action) {
            $.action = action;
            return this;
        }

        /**
         * @param action The action to take.
         * 
         * @return builder
         * 
         */
        public Builder action(BucketLifecycleRuleItemActionArgs action) {
            return action(Output.of(action));
        }

        /**
         * @param condition The condition(s) under which the action will be taken.
         * 
         * @return builder
         * 
         */
        public Builder condition(@Nullable Output<BucketLifecycleRuleItemConditionArgs> condition) {
            $.condition = condition;
            return this;
        }

        /**
         * @param condition The condition(s) under which the action will be taken.
         * 
         * @return builder
         * 
         */
        public Builder condition(BucketLifecycleRuleItemConditionArgs condition) {
            return condition(Output.of(condition));
        }

        public BucketLifecycleRuleItemArgs build() {
            return $;
        }
    }

}
