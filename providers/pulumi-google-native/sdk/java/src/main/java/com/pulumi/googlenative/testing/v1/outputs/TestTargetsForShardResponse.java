// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.testing.v1.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class TestTargetsForShardResponse {
    /**
     * @return Group of packages, classes, and/or test methods to be run for each shard. The targets need to be specified in AndroidJUnitRunner argument format. For example, &#34;package com.my.packages&#34; &#34;class com.my.package.MyClass&#34;. The number of test_targets must be greater than 0.
     * 
     */
    private final List<String> testTargets;

    @CustomType.Constructor
    private TestTargetsForShardResponse(@CustomType.Parameter("testTargets") List<String> testTargets) {
        this.testTargets = testTargets;
    }

    /**
     * @return Group of packages, classes, and/or test methods to be run for each shard. The targets need to be specified in AndroidJUnitRunner argument format. For example, &#34;package com.my.packages&#34; &#34;class com.my.package.MyClass&#34;. The number of test_targets must be greater than 0.
     * 
     */
    public List<String> testTargets() {
        return this.testTargets;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TestTargetsForShardResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<String> testTargets;

        public Builder() {
    	      // Empty
        }

        public Builder(TestTargetsForShardResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.testTargets = defaults.testTargets;
        }

        public Builder testTargets(List<String> testTargets) {
            this.testTargets = Objects.requireNonNull(testTargets);
            return this;
        }
        public Builder testTargets(String... testTargets) {
            return testTargets(List.of(testTargets));
        }        public TestTargetsForShardResponse build() {
            return new TestTargetsForShardResponse(testTargets);
        }
    }
}
