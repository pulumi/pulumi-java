// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.bigquery_v2.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class JobStatistics4Response extends com.pulumi.resources.InvokeArgs {

    public static final JobStatistics4Response Empty = new JobStatistics4Response();

    /**
     * Number of files per destination URI or URI pattern specified in the extract configuration. These values will be in the same order as the URIs specified in the &#39;destinationUris&#39; field.
     * 
     */
    @Import(name="destinationUriFileCounts", required=true)
    private List<String> destinationUriFileCounts;

    /**
     * @return Number of files per destination URI or URI pattern specified in the extract configuration. These values will be in the same order as the URIs specified in the &#39;destinationUris&#39; field.
     * 
     */
    public List<String> destinationUriFileCounts() {
        return this.destinationUriFileCounts;
    }

    /**
     * Number of user bytes extracted into the result. This is the byte count as computed by BigQuery for billing purposes.
     * 
     */
    @Import(name="inputBytes", required=true)
    private String inputBytes;

    /**
     * @return Number of user bytes extracted into the result. This is the byte count as computed by BigQuery for billing purposes.
     * 
     */
    public String inputBytes() {
        return this.inputBytes;
    }

    private JobStatistics4Response() {}

    private JobStatistics4Response(JobStatistics4Response $) {
        this.destinationUriFileCounts = $.destinationUriFileCounts;
        this.inputBytes = $.inputBytes;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(JobStatistics4Response defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private JobStatistics4Response $;

        public Builder() {
            $ = new JobStatistics4Response();
        }

        public Builder(JobStatistics4Response defaults) {
            $ = new JobStatistics4Response(Objects.requireNonNull(defaults));
        }

        /**
         * @param destinationUriFileCounts Number of files per destination URI or URI pattern specified in the extract configuration. These values will be in the same order as the URIs specified in the &#39;destinationUris&#39; field.
         * 
         * @return builder
         * 
         */
        public Builder destinationUriFileCounts(List<String> destinationUriFileCounts) {
            $.destinationUriFileCounts = destinationUriFileCounts;
            return this;
        }

        /**
         * @param destinationUriFileCounts Number of files per destination URI or URI pattern specified in the extract configuration. These values will be in the same order as the URIs specified in the &#39;destinationUris&#39; field.
         * 
         * @return builder
         * 
         */
        public Builder destinationUriFileCounts(String... destinationUriFileCounts) {
            return destinationUriFileCounts(List.of(destinationUriFileCounts));
        }

        /**
         * @param inputBytes Number of user bytes extracted into the result. This is the byte count as computed by BigQuery for billing purposes.
         * 
         * @return builder
         * 
         */
        public Builder inputBytes(String inputBytes) {
            $.inputBytes = inputBytes;
            return this;
        }

        public JobStatistics4Response build() {
            $.destinationUriFileCounts = Objects.requireNonNull($.destinationUriFileCounts, "expected parameter 'destinationUriFileCounts' to be non-null");
            $.inputBytes = Objects.requireNonNull($.inputBytes, "expected parameter 'inputBytes' to be non-null");
            return $;
        }
    }

}
