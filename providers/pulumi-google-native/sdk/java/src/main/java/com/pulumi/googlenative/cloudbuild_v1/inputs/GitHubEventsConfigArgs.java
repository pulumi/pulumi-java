// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.cloudbuild_v1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import com.pulumi.googlenative.cloudbuild_v1.inputs.PullRequestFilterArgs;
import com.pulumi.googlenative.cloudbuild_v1.inputs.PushFilterArgs;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * GitHubEventsConfig describes the configuration of a trigger that creates a build whenever a GitHub event is received.
 * 
 */
public final class GitHubEventsConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final GitHubEventsConfigArgs Empty = new GitHubEventsConfigArgs();

    /**
     * Optional. The resource name of the github enterprise config that should be applied to this installation. For example: "projects/{$project_id}/githubEnterpriseConfigs/{$config_id}"
     * 
     */
    @Import(name="enterpriseConfigResourceName")
      private final @Nullable Output<String> enterpriseConfigResourceName;

    public Output<String> enterpriseConfigResourceName() {
        return this.enterpriseConfigResourceName == null ? Codegen.empty() : this.enterpriseConfigResourceName;
    }

    /**
     * The installationID that emits the GitHub event.
     * 
     */
    @Import(name="installationId")
      private final @Nullable Output<String> installationId;

    public Output<String> installationId() {
        return this.installationId == null ? Codegen.empty() : this.installationId;
    }

    /**
     * Name of the repository. For example: The name for https://github.com/googlecloudplatform/cloud-builders is "cloud-builders".
     * 
     */
    @Import(name="name")
      private final @Nullable Output<String> name;

    public Output<String> name() {
        return this.name == null ? Codegen.empty() : this.name;
    }

    /**
     * Owner of the repository. For example: The owner for https://github.com/googlecloudplatform/cloud-builders is "googlecloudplatform".
     * 
     */
    @Import(name="owner")
      private final @Nullable Output<String> owner;

    public Output<String> owner() {
        return this.owner == null ? Codegen.empty() : this.owner;
    }

    /**
     * filter to match changes in pull requests.
     * 
     */
    @Import(name="pullRequest")
      private final @Nullable Output<PullRequestFilterArgs> pullRequest;

    public Output<PullRequestFilterArgs> pullRequest() {
        return this.pullRequest == null ? Codegen.empty() : this.pullRequest;
    }

    /**
     * filter to match changes in refs like branches, tags.
     * 
     */
    @Import(name="push")
      private final @Nullable Output<PushFilterArgs> push;

    public Output<PushFilterArgs> push() {
        return this.push == null ? Codegen.empty() : this.push;
    }

    public GitHubEventsConfigArgs(
        @Nullable Output<String> enterpriseConfigResourceName,
        @Nullable Output<String> installationId,
        @Nullable Output<String> name,
        @Nullable Output<String> owner,
        @Nullable Output<PullRequestFilterArgs> pullRequest,
        @Nullable Output<PushFilterArgs> push) {
        this.enterpriseConfigResourceName = enterpriseConfigResourceName;
        this.installationId = installationId;
        this.name = name;
        this.owner = owner;
        this.pullRequest = pullRequest;
        this.push = push;
    }

    private GitHubEventsConfigArgs() {
        this.enterpriseConfigResourceName = Codegen.empty();
        this.installationId = Codegen.empty();
        this.name = Codegen.empty();
        this.owner = Codegen.empty();
        this.pullRequest = Codegen.empty();
        this.push = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GitHubEventsConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> enterpriseConfigResourceName;
        private @Nullable Output<String> installationId;
        private @Nullable Output<String> name;
        private @Nullable Output<String> owner;
        private @Nullable Output<PullRequestFilterArgs> pullRequest;
        private @Nullable Output<PushFilterArgs> push;

        public Builder() {
    	      // Empty
        }

        public Builder(GitHubEventsConfigArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.enterpriseConfigResourceName = defaults.enterpriseConfigResourceName;
    	      this.installationId = defaults.installationId;
    	      this.name = defaults.name;
    	      this.owner = defaults.owner;
    	      this.pullRequest = defaults.pullRequest;
    	      this.push = defaults.push;
        }

        public Builder enterpriseConfigResourceName(@Nullable Output<String> enterpriseConfigResourceName) {
            this.enterpriseConfigResourceName = enterpriseConfigResourceName;
            return this;
        }
        public Builder enterpriseConfigResourceName(@Nullable String enterpriseConfigResourceName) {
            this.enterpriseConfigResourceName = Codegen.ofNullable(enterpriseConfigResourceName);
            return this;
        }
        public Builder installationId(@Nullable Output<String> installationId) {
            this.installationId = installationId;
            return this;
        }
        public Builder installationId(@Nullable String installationId) {
            this.installationId = Codegen.ofNullable(installationId);
            return this;
        }
        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }
        public Builder name(@Nullable String name) {
            this.name = Codegen.ofNullable(name);
            return this;
        }
        public Builder owner(@Nullable Output<String> owner) {
            this.owner = owner;
            return this;
        }
        public Builder owner(@Nullable String owner) {
            this.owner = Codegen.ofNullable(owner);
            return this;
        }
        public Builder pullRequest(@Nullable Output<PullRequestFilterArgs> pullRequest) {
            this.pullRequest = pullRequest;
            return this;
        }
        public Builder pullRequest(@Nullable PullRequestFilterArgs pullRequest) {
            this.pullRequest = Codegen.ofNullable(pullRequest);
            return this;
        }
        public Builder push(@Nullable Output<PushFilterArgs> push) {
            this.push = push;
            return this;
        }
        public Builder push(@Nullable PushFilterArgs push) {
            this.push = Codegen.ofNullable(push);
            return this;
        }        public GitHubEventsConfigArgs build() {
            return new GitHubEventsConfigArgs(enterpriseConfigResourceName, installationId, name, owner, pullRequest, push);
        }
    }
}
