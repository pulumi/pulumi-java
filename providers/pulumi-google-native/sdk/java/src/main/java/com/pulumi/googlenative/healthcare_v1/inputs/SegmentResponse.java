// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.healthcare_v1.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;


/**
 * A segment in a structured format.
 * 
 */
public final class SegmentResponse extends com.pulumi.resources.InvokeArgs {

    public static final SegmentResponse Empty = new SegmentResponse();

    /**
     * A mapping from the positional location to the value. The key string uses zero-based indexes separated by dots to identify Fields, components and sub-components. A bracket notation is also used to identify different instances of a repeated field. Regex for key: (\d+)(\[\d+\])?(.\d+)?(.\d+)? Examples of (key, value) pairs: * (0.1, &#34;hemoglobin&#34;) denotes that the first component of Field 0 has the value &#34;hemoglobin&#34;. * (1.1.2, &#34;CBC&#34;) denotes that the second sub-component of the first component of Field 1 has the value &#34;CBC&#34;. * (1[0].1, &#34;HbA1c&#34;) denotes that the first component of the first Instance of Field 1, which is repeated, has the value &#34;HbA1c&#34;.
     * 
     */
    @Import(name="fields", required=true)
    private Map<String,String> fields;

    public Map<String,String> fields() {
        return this.fields;
    }

    /**
     * A string that indicates the type of segment. For example, EVN or PID.
     * 
     */
    @Import(name="segmentId", required=true)
    private String segmentId;

    public String segmentId() {
        return this.segmentId;
    }

    /**
     * Set ID for segments that can be in a set. This can be empty if it&#39;s missing or isn&#39;t applicable.
     * 
     */
    @Import(name="setId", required=true)
    private String setId;

    public String setId() {
        return this.setId;
    }

    private SegmentResponse() {}

    private SegmentResponse(SegmentResponse $) {
        this.fields = $.fields;
        this.segmentId = $.segmentId;
        this.setId = $.setId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SegmentResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SegmentResponse $;

        public Builder() {
            $ = new SegmentResponse();
        }

        public Builder(SegmentResponse defaults) {
            $ = new SegmentResponse(Objects.requireNonNull(defaults));
        }

        public Builder fields(Map<String,String> fields) {
            $.fields = fields;
            return this;
        }

        public Builder segmentId(String segmentId) {
            $.segmentId = segmentId;
            return this;
        }

        public Builder setId(String setId) {
            $.setId = setId;
            return this;
        }

        public SegmentResponse build() {
            $.fields = Objects.requireNonNull($.fields, "expected parameter 'fields' to be non-null");
            $.segmentId = Objects.requireNonNull($.segmentId, "expected parameter 'segmentId' to be non-null");
            $.setId = Objects.requireNonNull($.setId, "expected parameter 'setId' to be non-null");
            return $;
        }
    }

}
