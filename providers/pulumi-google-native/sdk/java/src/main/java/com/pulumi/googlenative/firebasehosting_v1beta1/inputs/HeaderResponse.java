// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.firebasehosting_v1beta1.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;


/**
 * A [`Header`](https://firebase.google.com/docs/hosting/full-config#headers) specifies a URL pattern that, if matched to the request URL path, triggers Hosting to apply the specified custom response headers.
 * 
 */
public final class HeaderResponse extends com.pulumi.resources.InvokeArgs {

    public static final HeaderResponse Empty = new HeaderResponse();

    /**
     * The user-supplied [glob](https://firebase.google.com/docs/hosting/full-config#glob_pattern_matching) to match against the request URL path.
     * 
     */
    @Import(name="glob", required=true)
    private String glob;

    /**
     * @return The user-supplied [glob](https://firebase.google.com/docs/hosting/full-config#glob_pattern_matching) to match against the request URL path.
     * 
     */
    public String glob() {
        return this.glob;
    }

    /**
     * The additional headers to add to the response.
     * 
     */
    @Import(name="headers", required=true)
    private Map<String,String> headers;

    /**
     * @return The additional headers to add to the response.
     * 
     */
    public Map<String,String> headers() {
        return this.headers;
    }

    /**
     * The user-supplied RE2 regular expression to match against the request URL path.
     * 
     */
    @Import(name="regex", required=true)
    private String regex;

    /**
     * @return The user-supplied RE2 regular expression to match against the request URL path.
     * 
     */
    public String regex() {
        return this.regex;
    }

    private HeaderResponse() {}

    private HeaderResponse(HeaderResponse $) {
        this.glob = $.glob;
        this.headers = $.headers;
        this.regex = $.regex;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(HeaderResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private HeaderResponse $;

        public Builder() {
            $ = new HeaderResponse();
        }

        public Builder(HeaderResponse defaults) {
            $ = new HeaderResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param glob The user-supplied [glob](https://firebase.google.com/docs/hosting/full-config#glob_pattern_matching) to match against the request URL path.
         * 
         * @return builder
         * 
         */
        public Builder glob(String glob) {
            $.glob = glob;
            return this;
        }

        /**
         * @param headers The additional headers to add to the response.
         * 
         * @return builder
         * 
         */
        public Builder headers(Map<String,String> headers) {
            $.headers = headers;
            return this;
        }

        /**
         * @param regex The user-supplied RE2 regular expression to match against the request URL path.
         * 
         * @return builder
         * 
         */
        public Builder regex(String regex) {
            $.regex = regex;
            return this;
        }

        public HeaderResponse build() {
            $.glob = Objects.requireNonNull($.glob, "expected parameter 'glob' to be non-null");
            $.headers = Objects.requireNonNull($.headers, "expected parameter 'headers' to be non-null");
            $.regex = Objects.requireNonNull($.regex, "expected parameter 'regex' to be non-null");
            return $;
        }
    }

}
