// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.datastore.v1;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.googlenative.Utilities;
import com.pulumi.googlenative.datastore.v1.IndexArgs;
import com.pulumi.googlenative.datastore.v1.outputs.GoogleDatastoreAdminV1IndexedPropertyResponse;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * Creates the specified index. A newly created index&#39;s initial state is `CREATING`. On completion of the returned google.longrunning.Operation, the state will be `READY`. If the index already exists, the call will return an `ALREADY_EXISTS` status. During index creation, the process could result in an error, in which case the index will move to the `ERROR` state. The process can be recovered by fixing the data that caused the error, removing the index with delete, then re-creating the index with create. Indexes with a single property cannot be created.
 * Auto-naming is currently not supported for this resource.
 * 
 */
@ResourceType(type="google-native:datastore/v1:Index")
public class Index extends com.pulumi.resources.CustomResource {
    /**
     * The index&#39;s ancestor mode. Must not be ANCESTOR_MODE_UNSPECIFIED.
     * 
     */
    @Export(name="ancestor", type=String.class, parameters={})
    private Output<String> ancestor;

    /**
     * @return The index&#39;s ancestor mode. Must not be ANCESTOR_MODE_UNSPECIFIED.
     * 
     */
    public Output<String> ancestor() {
        return this.ancestor;
    }
    /**
     * The resource ID of the index.
     * 
     */
    @Export(name="indexId", type=String.class, parameters={})
    private Output<String> indexId;

    /**
     * @return The resource ID of the index.
     * 
     */
    public Output<String> indexId() {
        return this.indexId;
    }
    /**
     * The entity kind to which this index applies.
     * 
     */
    @Export(name="kind", type=String.class, parameters={})
    private Output<String> kind;

    /**
     * @return The entity kind to which this index applies.
     * 
     */
    public Output<String> kind() {
        return this.kind;
    }
    @Export(name="project", type=String.class, parameters={})
    private Output<String> project;

    public Output<String> project() {
        return this.project;
    }
    /**
     * An ordered sequence of property names and their index attributes.
     * 
     */
    @Export(name="properties", type=List.class, parameters={GoogleDatastoreAdminV1IndexedPropertyResponse.class})
    private Output<List<GoogleDatastoreAdminV1IndexedPropertyResponse>> properties;

    /**
     * @return An ordered sequence of property names and their index attributes.
     * 
     */
    public Output<List<GoogleDatastoreAdminV1IndexedPropertyResponse>> properties() {
        return this.properties;
    }
    /**
     * The state of the index.
     * 
     */
    @Export(name="state", type=String.class, parameters={})
    private Output<String> state;

    /**
     * @return The state of the index.
     * 
     */
    public Output<String> state() {
        return this.state;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Index(String name) {
        this(name, IndexArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Index(String name, IndexArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Index(String name, IndexArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("google-native:datastore/v1:Index", name, args == null ? IndexArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Index(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("google-native:datastore/v1:Index", name, null, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Index get(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Index(name, id, options);
    }
}
