// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.compute_beta.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;


/**
 * Represents a sub PublicDelegatedPrefix.
 * 
 */
public final class PublicDelegatedPrefixPublicDelegatedSubPrefixResponse extends com.pulumi.resources.InvokeArgs {

    public static final PublicDelegatedPrefixPublicDelegatedSubPrefixResponse Empty = new PublicDelegatedPrefixPublicDelegatedSubPrefixResponse();

    /**
     * Name of the project scoping this PublicDelegatedSubPrefix.
     * 
     */
    @Import(name="delegateeProject", required=true)
    private String delegateeProject;

    /**
     * @return Name of the project scoping this PublicDelegatedSubPrefix.
     * 
     */
    public String delegateeProject() {
        return this.delegateeProject;
    }

    /**
     * An optional description of this resource. Provide this property when you create the resource.
     * 
     */
    @Import(name="description", required=true)
    private String description;

    /**
     * @return An optional description of this resource. Provide this property when you create the resource.
     * 
     */
    public String description() {
        return this.description;
    }

    /**
     * The IPv4 address range, in CIDR format, represented by this sub public delegated prefix.
     * 
     */
    @Import(name="ipCidrRange", required=true)
    private String ipCidrRange;

    /**
     * @return The IPv4 address range, in CIDR format, represented by this sub public delegated prefix.
     * 
     */
    public String ipCidrRange() {
        return this.ipCidrRange;
    }

    /**
     * Whether the sub prefix is delegated to create Address resources in the delegatee project.
     * 
     */
    @Import(name="isAddress", required=true)
    private Boolean isAddress;

    /**
     * @return Whether the sub prefix is delegated to create Address resources in the delegatee project.
     * 
     */
    public Boolean isAddress() {
        return this.isAddress;
    }

    /**
     * The name of the sub public delegated prefix.
     * 
     */
    @Import(name="name", required=true)
    private String name;

    /**
     * @return The name of the sub public delegated prefix.
     * 
     */
    public String name() {
        return this.name;
    }

    /**
     * The region of the sub public delegated prefix if it is regional. If absent, the sub prefix is global.
     * 
     */
    @Import(name="region", required=true)
    private String region;

    /**
     * @return The region of the sub public delegated prefix if it is regional. If absent, the sub prefix is global.
     * 
     */
    public String region() {
        return this.region;
    }

    /**
     * The status of the sub public delegated prefix.
     * 
     */
    @Import(name="status", required=true)
    private String status;

    /**
     * @return The status of the sub public delegated prefix.
     * 
     */
    public String status() {
        return this.status;
    }

    private PublicDelegatedPrefixPublicDelegatedSubPrefixResponse() {}

    private PublicDelegatedPrefixPublicDelegatedSubPrefixResponse(PublicDelegatedPrefixPublicDelegatedSubPrefixResponse $) {
        this.delegateeProject = $.delegateeProject;
        this.description = $.description;
        this.ipCidrRange = $.ipCidrRange;
        this.isAddress = $.isAddress;
        this.name = $.name;
        this.region = $.region;
        this.status = $.status;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PublicDelegatedPrefixPublicDelegatedSubPrefixResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PublicDelegatedPrefixPublicDelegatedSubPrefixResponse $;

        public Builder() {
            $ = new PublicDelegatedPrefixPublicDelegatedSubPrefixResponse();
        }

        public Builder(PublicDelegatedPrefixPublicDelegatedSubPrefixResponse defaults) {
            $ = new PublicDelegatedPrefixPublicDelegatedSubPrefixResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param delegateeProject Name of the project scoping this PublicDelegatedSubPrefix.
         * 
         * @return builder
         * 
         */
        public Builder delegateeProject(String delegateeProject) {
            $.delegateeProject = delegateeProject;
            return this;
        }

        /**
         * @param description An optional description of this resource. Provide this property when you create the resource.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            $.description = description;
            return this;
        }

        /**
         * @param ipCidrRange The IPv4 address range, in CIDR format, represented by this sub public delegated prefix.
         * 
         * @return builder
         * 
         */
        public Builder ipCidrRange(String ipCidrRange) {
            $.ipCidrRange = ipCidrRange;
            return this;
        }

        /**
         * @param isAddress Whether the sub prefix is delegated to create Address resources in the delegatee project.
         * 
         * @return builder
         * 
         */
        public Builder isAddress(Boolean isAddress) {
            $.isAddress = isAddress;
            return this;
        }

        /**
         * @param name The name of the sub public delegated prefix.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            $.name = name;
            return this;
        }

        /**
         * @param region The region of the sub public delegated prefix if it is regional. If absent, the sub prefix is global.
         * 
         * @return builder
         * 
         */
        public Builder region(String region) {
            $.region = region;
            return this;
        }

        /**
         * @param status The status of the sub public delegated prefix.
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            $.status = status;
            return this;
        }

        public PublicDelegatedPrefixPublicDelegatedSubPrefixResponse build() {
            $.delegateeProject = Objects.requireNonNull($.delegateeProject, "expected parameter 'delegateeProject' to be non-null");
            $.description = Objects.requireNonNull($.description, "expected parameter 'description' to be non-null");
            $.ipCidrRange = Objects.requireNonNull($.ipCidrRange, "expected parameter 'ipCidrRange' to be non-null");
            $.isAddress = Objects.requireNonNull($.isAddress, "expected parameter 'isAddress' to be non-null");
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            $.region = Objects.requireNonNull($.region, "expected parameter 'region' to be non-null");
            $.status = Objects.requireNonNull($.status, "expected parameter 'status' to be non-null");
            return $;
        }
    }

}
