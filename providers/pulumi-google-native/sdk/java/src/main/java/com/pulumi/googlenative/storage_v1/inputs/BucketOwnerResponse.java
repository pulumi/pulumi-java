// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.storage_v1.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * The owner of the bucket. This is always the project team&#39;s owner group.
 * 
 */
public final class BucketOwnerResponse extends com.pulumi.resources.InvokeArgs {

    public static final BucketOwnerResponse Empty = new BucketOwnerResponse();

    /**
     * The entity, in the form project-owner-projectId.
     * 
     */
    @Import(name="entity", required=true)
    private String entity;

    public String entity() {
        return this.entity;
    }

    /**
     * The ID for the entity.
     * 
     */
    @Import(name="entityId", required=true)
    private String entityId;

    public String entityId() {
        return this.entityId;
    }

    private BucketOwnerResponse() {}

    private BucketOwnerResponse(BucketOwnerResponse $) {
        this.entity = $.entity;
        this.entityId = $.entityId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BucketOwnerResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BucketOwnerResponse $;

        public Builder() {
            $ = new BucketOwnerResponse();
        }

        public Builder(BucketOwnerResponse defaults) {
            $ = new BucketOwnerResponse(Objects.requireNonNull(defaults));
        }

        public Builder entity(String entity) {
            $.entity = entity;
            return this;
        }

        public Builder entityId(String entityId) {
            $.entityId = entityId;
            return this;
        }

        public BucketOwnerResponse build() {
            $.entity = Objects.requireNonNull($.entity, "expected parameter 'entity' to be non-null");
            $.entityId = Objects.requireNonNull($.entityId, "expected parameter 'entityId' to be non-null");
            return $;
        }
    }

}
