// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.osconfig_v1beta.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;


/**
 * Installs a deb via dpkg.
 * 
 */
public final class SoftwareRecipeStepInstallDpkgArgs extends com.pulumi.resources.ResourceArgs {

    public static final SoftwareRecipeStepInstallDpkgArgs Empty = new SoftwareRecipeStepInstallDpkgArgs();

    /**
     * The id of the relevant artifact in the recipe.
     * 
     */
    @Import(name="artifactId", required=true)
      private final Output<String> artifactId;

    public Output<String> artifactId() {
        return this.artifactId;
    }

    public SoftwareRecipeStepInstallDpkgArgs(Output<String> artifactId) {
        this.artifactId = Objects.requireNonNull(artifactId, "expected parameter 'artifactId' to be non-null");
    }

    private SoftwareRecipeStepInstallDpkgArgs() {
        this.artifactId = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SoftwareRecipeStepInstallDpkgArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> artifactId;

        public Builder() {
    	      // Empty
        }

        public Builder(SoftwareRecipeStepInstallDpkgArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.artifactId = defaults.artifactId;
        }

        public Builder artifactId(Output<String> artifactId) {
            this.artifactId = Objects.requireNonNull(artifactId);
            return this;
        }
        public Builder artifactId(String artifactId) {
            this.artifactId = Output.of(Objects.requireNonNull(artifactId));
            return this;
        }        public SoftwareRecipeStepInstallDpkgArgs build() {
            return new SoftwareRecipeStepInstallDpkgArgs(artifactId);
        }
    }
}
