// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.dialogflow.v3.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.googlenative.dialogflow.v3.outputs.GoogleCloudDialogflowCxV3ExperimentDefinitionResponse;
import com.pulumi.googlenative.dialogflow.v3.outputs.GoogleCloudDialogflowCxV3ExperimentResultResponse;
import com.pulumi.googlenative.dialogflow.v3.outputs.GoogleCloudDialogflowCxV3RolloutConfigResponse;
import com.pulumi.googlenative.dialogflow.v3.outputs.GoogleCloudDialogflowCxV3RolloutStateResponse;
import com.pulumi.googlenative.dialogflow.v3.outputs.GoogleCloudDialogflowCxV3VariantsHistoryResponse;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetExperimentResult {
    /**
     * @return Creation time of this experiment.
     * 
     */
    private final String createTime;
    /**
     * @return The definition of the experiment.
     * 
     */
    private final GoogleCloudDialogflowCxV3ExperimentDefinitionResponse definition;
    /**
     * @return The human-readable description of the experiment.
     * 
     */
    private final String description;
    /**
     * @return The human-readable name of the experiment (unique in an environment). Limit of 64 characters.
     * 
     */
    private final String displayName;
    /**
     * @return End time of this experiment.
     * 
     */
    private final String endTime;
    /**
     * @return Maximum number of days to run the experiment/rollout. If auto-rollout is not enabled, default value and maximum will be 30 days. If auto-rollout is enabled, default value and maximum will be 6 days.
     * 
     */
    private final String experimentLength;
    /**
     * @return Last update time of this experiment.
     * 
     */
    private final String lastUpdateTime;
    /**
     * @return The name of the experiment. Format: projects//locations//agents//environments//experiments/..
     * 
     */
    private final String name;
    /**
     * @return Inference result of the experiment.
     * 
     */
    private final GoogleCloudDialogflowCxV3ExperimentResultResponse result;
    /**
     * @return The configuration for auto rollout. If set, there should be exactly two variants in the experiment (control variant being the default version of the flow), the traffic allocation for the non-control variant will gradually increase to 100% when conditions are met, and eventually replace the control variant to become the default version of the flow.
     * 
     */
    private final GoogleCloudDialogflowCxV3RolloutConfigResponse rolloutConfig;
    /**
     * @return The reason why rollout has failed. Should only be set when state is ROLLOUT_FAILED.
     * 
     */
    private final String rolloutFailureReason;
    /**
     * @return State of the auto rollout process.
     * 
     */
    private final GoogleCloudDialogflowCxV3RolloutStateResponse rolloutState;
    /**
     * @return Start time of this experiment.
     * 
     */
    private final String startTime;
    /**
     * @return The current state of the experiment. Transition triggered by Experiments.StartExperiment: DRAFT-&gt;RUNNING. Transition triggered by Experiments.CancelExperiment: DRAFT-&gt;DONE or RUNNING-&gt;DONE.
     * 
     */
    private final String state;
    /**
     * @return The history of updates to the experiment variants.
     * 
     */
    private final List<GoogleCloudDialogflowCxV3VariantsHistoryResponse> variantsHistory;

    @CustomType.Constructor
    private GetExperimentResult(
        @CustomType.Parameter("createTime") String createTime,
        @CustomType.Parameter("definition") GoogleCloudDialogflowCxV3ExperimentDefinitionResponse definition,
        @CustomType.Parameter("description") String description,
        @CustomType.Parameter("displayName") String displayName,
        @CustomType.Parameter("endTime") String endTime,
        @CustomType.Parameter("experimentLength") String experimentLength,
        @CustomType.Parameter("lastUpdateTime") String lastUpdateTime,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("result") GoogleCloudDialogflowCxV3ExperimentResultResponse result,
        @CustomType.Parameter("rolloutConfig") GoogleCloudDialogflowCxV3RolloutConfigResponse rolloutConfig,
        @CustomType.Parameter("rolloutFailureReason") String rolloutFailureReason,
        @CustomType.Parameter("rolloutState") GoogleCloudDialogflowCxV3RolloutStateResponse rolloutState,
        @CustomType.Parameter("startTime") String startTime,
        @CustomType.Parameter("state") String state,
        @CustomType.Parameter("variantsHistory") List<GoogleCloudDialogflowCxV3VariantsHistoryResponse> variantsHistory) {
        this.createTime = createTime;
        this.definition = definition;
        this.description = description;
        this.displayName = displayName;
        this.endTime = endTime;
        this.experimentLength = experimentLength;
        this.lastUpdateTime = lastUpdateTime;
        this.name = name;
        this.result = result;
        this.rolloutConfig = rolloutConfig;
        this.rolloutFailureReason = rolloutFailureReason;
        this.rolloutState = rolloutState;
        this.startTime = startTime;
        this.state = state;
        this.variantsHistory = variantsHistory;
    }

    /**
     * @return Creation time of this experiment.
     * 
     */
    public String createTime() {
        return this.createTime;
    }
    /**
     * @return The definition of the experiment.
     * 
     */
    public GoogleCloudDialogflowCxV3ExperimentDefinitionResponse definition() {
        return this.definition;
    }
    /**
     * @return The human-readable description of the experiment.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return The human-readable name of the experiment (unique in an environment). Limit of 64 characters.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return End time of this experiment.
     * 
     */
    public String endTime() {
        return this.endTime;
    }
    /**
     * @return Maximum number of days to run the experiment/rollout. If auto-rollout is not enabled, default value and maximum will be 30 days. If auto-rollout is enabled, default value and maximum will be 6 days.
     * 
     */
    public String experimentLength() {
        return this.experimentLength;
    }
    /**
     * @return Last update time of this experiment.
     * 
     */
    public String lastUpdateTime() {
        return this.lastUpdateTime;
    }
    /**
     * @return The name of the experiment. Format: projects//locations//agents//environments//experiments/..
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Inference result of the experiment.
     * 
     */
    public GoogleCloudDialogflowCxV3ExperimentResultResponse result() {
        return this.result;
    }
    /**
     * @return The configuration for auto rollout. If set, there should be exactly two variants in the experiment (control variant being the default version of the flow), the traffic allocation for the non-control variant will gradually increase to 100% when conditions are met, and eventually replace the control variant to become the default version of the flow.
     * 
     */
    public GoogleCloudDialogflowCxV3RolloutConfigResponse rolloutConfig() {
        return this.rolloutConfig;
    }
    /**
     * @return The reason why rollout has failed. Should only be set when state is ROLLOUT_FAILED.
     * 
     */
    public String rolloutFailureReason() {
        return this.rolloutFailureReason;
    }
    /**
     * @return State of the auto rollout process.
     * 
     */
    public GoogleCloudDialogflowCxV3RolloutStateResponse rolloutState() {
        return this.rolloutState;
    }
    /**
     * @return Start time of this experiment.
     * 
     */
    public String startTime() {
        return this.startTime;
    }
    /**
     * @return The current state of the experiment. Transition triggered by Experiments.StartExperiment: DRAFT-&gt;RUNNING. Transition triggered by Experiments.CancelExperiment: DRAFT-&gt;DONE or RUNNING-&gt;DONE.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return The history of updates to the experiment variants.
     * 
     */
    public List<GoogleCloudDialogflowCxV3VariantsHistoryResponse> variantsHistory() {
        return this.variantsHistory;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetExperimentResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String createTime;
        private GoogleCloudDialogflowCxV3ExperimentDefinitionResponse definition;
        private String description;
        private String displayName;
        private String endTime;
        private String experimentLength;
        private String lastUpdateTime;
        private String name;
        private GoogleCloudDialogflowCxV3ExperimentResultResponse result;
        private GoogleCloudDialogflowCxV3RolloutConfigResponse rolloutConfig;
        private String rolloutFailureReason;
        private GoogleCloudDialogflowCxV3RolloutStateResponse rolloutState;
        private String startTime;
        private String state;
        private List<GoogleCloudDialogflowCxV3VariantsHistoryResponse> variantsHistory;

        public Builder() {
    	      // Empty
        }

        public Builder(GetExperimentResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.createTime = defaults.createTime;
    	      this.definition = defaults.definition;
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.endTime = defaults.endTime;
    	      this.experimentLength = defaults.experimentLength;
    	      this.lastUpdateTime = defaults.lastUpdateTime;
    	      this.name = defaults.name;
    	      this.result = defaults.result;
    	      this.rolloutConfig = defaults.rolloutConfig;
    	      this.rolloutFailureReason = defaults.rolloutFailureReason;
    	      this.rolloutState = defaults.rolloutState;
    	      this.startTime = defaults.startTime;
    	      this.state = defaults.state;
    	      this.variantsHistory = defaults.variantsHistory;
        }

        public Builder createTime(String createTime) {
            this.createTime = Objects.requireNonNull(createTime);
            return this;
        }
        public Builder definition(GoogleCloudDialogflowCxV3ExperimentDefinitionResponse definition) {
            this.definition = Objects.requireNonNull(definition);
            return this;
        }
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        public Builder displayName(String displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }
        public Builder endTime(String endTime) {
            this.endTime = Objects.requireNonNull(endTime);
            return this;
        }
        public Builder experimentLength(String experimentLength) {
            this.experimentLength = Objects.requireNonNull(experimentLength);
            return this;
        }
        public Builder lastUpdateTime(String lastUpdateTime) {
            this.lastUpdateTime = Objects.requireNonNull(lastUpdateTime);
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder result(GoogleCloudDialogflowCxV3ExperimentResultResponse result) {
            this.result = Objects.requireNonNull(result);
            return this;
        }
        public Builder rolloutConfig(GoogleCloudDialogflowCxV3RolloutConfigResponse rolloutConfig) {
            this.rolloutConfig = Objects.requireNonNull(rolloutConfig);
            return this;
        }
        public Builder rolloutFailureReason(String rolloutFailureReason) {
            this.rolloutFailureReason = Objects.requireNonNull(rolloutFailureReason);
            return this;
        }
        public Builder rolloutState(GoogleCloudDialogflowCxV3RolloutStateResponse rolloutState) {
            this.rolloutState = Objects.requireNonNull(rolloutState);
            return this;
        }
        public Builder startTime(String startTime) {
            this.startTime = Objects.requireNonNull(startTime);
            return this;
        }
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        public Builder variantsHistory(List<GoogleCloudDialogflowCxV3VariantsHistoryResponse> variantsHistory) {
            this.variantsHistory = Objects.requireNonNull(variantsHistory);
            return this;
        }
        public Builder variantsHistory(GoogleCloudDialogflowCxV3VariantsHistoryResponse... variantsHistory) {
            return variantsHistory(List.of(variantsHistory));
        }        public GetExperimentResult build() {
            return new GetExperimentResult(createTime, definition, description, displayName, endTime, experimentLength, lastUpdateTime, name, result, rolloutConfig, rolloutFailureReason, rolloutState, startTime, state, variantsHistory);
        }
    }
}
