// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.run_v2.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * VolumeMount describes a mounting of a Volume within a container.
 * 
 */
public final class GoogleCloudRunOpV2VolumeMountResponse extends com.pulumi.resources.InvokeArgs {

    public static final GoogleCloudRunOpV2VolumeMountResponse Empty = new GoogleCloudRunOpV2VolumeMountResponse();

    /**
     * Path within the container at which the volume should be mounted. Must not contain &#39;:&#39;. For Cloud SQL volumes, it can be left empty, or must otherwise be `/cloudsql`. All instances defined in the Volume will be available as `/cloudsql/[instance]`. For more information on Cloud SQL volumes, visit https://cloud.google.com/sql/docs/mysql/connect-run
     * 
     */
    @Import(name="mountPath", required=true)
    private String mountPath;

    /**
     * @return Path within the container at which the volume should be mounted. Must not contain &#39;:&#39;. For Cloud SQL volumes, it can be left empty, or must otherwise be `/cloudsql`. All instances defined in the Volume will be available as `/cloudsql/[instance]`. For more information on Cloud SQL volumes, visit https://cloud.google.com/sql/docs/mysql/connect-run
     * 
     */
    public String mountPath() {
        return this.mountPath;
    }

    /**
     * This must match the Name of a Volume.
     * 
     */
    @Import(name="name", required=true)
    private String name;

    /**
     * @return This must match the Name of a Volume.
     * 
     */
    public String name() {
        return this.name;
    }

    private GoogleCloudRunOpV2VolumeMountResponse() {}

    private GoogleCloudRunOpV2VolumeMountResponse(GoogleCloudRunOpV2VolumeMountResponse $) {
        this.mountPath = $.mountPath;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GoogleCloudRunOpV2VolumeMountResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GoogleCloudRunOpV2VolumeMountResponse $;

        public Builder() {
            $ = new GoogleCloudRunOpV2VolumeMountResponse();
        }

        public Builder(GoogleCloudRunOpV2VolumeMountResponse defaults) {
            $ = new GoogleCloudRunOpV2VolumeMountResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param mountPath Path within the container at which the volume should be mounted. Must not contain &#39;:&#39;. For Cloud SQL volumes, it can be left empty, or must otherwise be `/cloudsql`. All instances defined in the Volume will be available as `/cloudsql/[instance]`. For more information on Cloud SQL volumes, visit https://cloud.google.com/sql/docs/mysql/connect-run
         * 
         * @return builder
         * 
         */
        public Builder mountPath(String mountPath) {
            $.mountPath = mountPath;
            return this;
        }

        /**
         * @param name This must match the Name of a Volume.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            $.name = name;
            return this;
        }

        public GoogleCloudRunOpV2VolumeMountResponse build() {
            $.mountPath = Objects.requireNonNull($.mountPath, "expected parameter 'mountPath' to be non-null");
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            return $;
        }
    }

}
