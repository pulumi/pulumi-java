// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.networkmanagement_v1beta1.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;


/**
 * For display only. Metadata associated with a VPC firewall rule, an implied VPC firewall rule, or a hierarchical firewall policy rule.
 * 
 */
public final class FirewallInfoResponse extends com.pulumi.resources.InvokeArgs {

    public static final FirewallInfoResponse Empty = new FirewallInfoResponse();

    /**
     * Possible values: ALLOW, DENY
     * 
     */
    @Import(name="action", required=true)
    private String action;

    /**
     * @return Possible values: ALLOW, DENY
     * 
     */
    public String action() {
        return this.action;
    }

    /**
     * Possible values: INGRESS, EGRESS
     * 
     */
    @Import(name="direction", required=true)
    private String direction;

    /**
     * @return Possible values: INGRESS, EGRESS
     * 
     */
    public String direction() {
        return this.direction;
    }

    /**
     * The display name of the VPC firewall rule. This field is not applicable to hierarchical firewall policy rules.
     * 
     */
    @Import(name="displayName", required=true)
    private String displayName;

    /**
     * @return The display name of the VPC firewall rule. This field is not applicable to hierarchical firewall policy rules.
     * 
     */
    public String displayName() {
        return this.displayName;
    }

    /**
     * The firewall rule&#39;s type.
     * 
     */
    @Import(name="firewallRuleType", required=true)
    private String firewallRuleType;

    /**
     * @return The firewall rule&#39;s type.
     * 
     */
    public String firewallRuleType() {
        return this.firewallRuleType;
    }

    /**
     * The URI of the VPC network that the firewall rule is associated with. This field is not applicable to hierarchical firewall policy rules.
     * 
     */
    @Import(name="networkUri", required=true)
    private String networkUri;

    /**
     * @return The URI of the VPC network that the firewall rule is associated with. This field is not applicable to hierarchical firewall policy rules.
     * 
     */
    public String networkUri() {
        return this.networkUri;
    }

    /**
     * The hierarchical firewall policy that this rule is associated with. This field is not applicable to VPC firewall rules.
     * 
     */
    @Import(name="policy", required=true)
    private String policy;

    /**
     * @return The hierarchical firewall policy that this rule is associated with. This field is not applicable to VPC firewall rules.
     * 
     */
    public String policy() {
        return this.policy;
    }

    /**
     * The priority of the firewall rule.
     * 
     */
    @Import(name="priority", required=true)
    private Integer priority;

    /**
     * @return The priority of the firewall rule.
     * 
     */
    public Integer priority() {
        return this.priority;
    }

    /**
     * The target service accounts specified by the firewall rule.
     * 
     */
    @Import(name="targetServiceAccounts", required=true)
    private List<String> targetServiceAccounts;

    /**
     * @return The target service accounts specified by the firewall rule.
     * 
     */
    public List<String> targetServiceAccounts() {
        return this.targetServiceAccounts;
    }

    /**
     * The target tags defined by the VPC firewall rule. This field is not applicable to hierarchical firewall policy rules.
     * 
     */
    @Import(name="targetTags", required=true)
    private List<String> targetTags;

    /**
     * @return The target tags defined by the VPC firewall rule. This field is not applicable to hierarchical firewall policy rules.
     * 
     */
    public List<String> targetTags() {
        return this.targetTags;
    }

    /**
     * The URI of the VPC firewall rule. This field is not applicable to implied firewall rules or hierarchical firewall policy rules.
     * 
     */
    @Import(name="uri", required=true)
    private String uri;

    /**
     * @return The URI of the VPC firewall rule. This field is not applicable to implied firewall rules or hierarchical firewall policy rules.
     * 
     */
    public String uri() {
        return this.uri;
    }

    private FirewallInfoResponse() {}

    private FirewallInfoResponse(FirewallInfoResponse $) {
        this.action = $.action;
        this.direction = $.direction;
        this.displayName = $.displayName;
        this.firewallRuleType = $.firewallRuleType;
        this.networkUri = $.networkUri;
        this.policy = $.policy;
        this.priority = $.priority;
        this.targetServiceAccounts = $.targetServiceAccounts;
        this.targetTags = $.targetTags;
        this.uri = $.uri;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FirewallInfoResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FirewallInfoResponse $;

        public Builder() {
            $ = new FirewallInfoResponse();
        }

        public Builder(FirewallInfoResponse defaults) {
            $ = new FirewallInfoResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param action Possible values: ALLOW, DENY
         * 
         * @return builder
         * 
         */
        public Builder action(String action) {
            $.action = action;
            return this;
        }

        /**
         * @param direction Possible values: INGRESS, EGRESS
         * 
         * @return builder
         * 
         */
        public Builder direction(String direction) {
            $.direction = direction;
            return this;
        }

        /**
         * @param displayName The display name of the VPC firewall rule. This field is not applicable to hierarchical firewall policy rules.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param firewallRuleType The firewall rule&#39;s type.
         * 
         * @return builder
         * 
         */
        public Builder firewallRuleType(String firewallRuleType) {
            $.firewallRuleType = firewallRuleType;
            return this;
        }

        /**
         * @param networkUri The URI of the VPC network that the firewall rule is associated with. This field is not applicable to hierarchical firewall policy rules.
         * 
         * @return builder
         * 
         */
        public Builder networkUri(String networkUri) {
            $.networkUri = networkUri;
            return this;
        }

        /**
         * @param policy The hierarchical firewall policy that this rule is associated with. This field is not applicable to VPC firewall rules.
         * 
         * @return builder
         * 
         */
        public Builder policy(String policy) {
            $.policy = policy;
            return this;
        }

        /**
         * @param priority The priority of the firewall rule.
         * 
         * @return builder
         * 
         */
        public Builder priority(Integer priority) {
            $.priority = priority;
            return this;
        }

        /**
         * @param targetServiceAccounts The target service accounts specified by the firewall rule.
         * 
         * @return builder
         * 
         */
        public Builder targetServiceAccounts(List<String> targetServiceAccounts) {
            $.targetServiceAccounts = targetServiceAccounts;
            return this;
        }

        /**
         * @param targetServiceAccounts The target service accounts specified by the firewall rule.
         * 
         * @return builder
         * 
         */
        public Builder targetServiceAccounts(String... targetServiceAccounts) {
            return targetServiceAccounts(List.of(targetServiceAccounts));
        }

        /**
         * @param targetTags The target tags defined by the VPC firewall rule. This field is not applicable to hierarchical firewall policy rules.
         * 
         * @return builder
         * 
         */
        public Builder targetTags(List<String> targetTags) {
            $.targetTags = targetTags;
            return this;
        }

        /**
         * @param targetTags The target tags defined by the VPC firewall rule. This field is not applicable to hierarchical firewall policy rules.
         * 
         * @return builder
         * 
         */
        public Builder targetTags(String... targetTags) {
            return targetTags(List.of(targetTags));
        }

        /**
         * @param uri The URI of the VPC firewall rule. This field is not applicable to implied firewall rules or hierarchical firewall policy rules.
         * 
         * @return builder
         * 
         */
        public Builder uri(String uri) {
            $.uri = uri;
            return this;
        }

        public FirewallInfoResponse build() {
            $.action = Objects.requireNonNull($.action, "expected parameter 'action' to be non-null");
            $.direction = Objects.requireNonNull($.direction, "expected parameter 'direction' to be non-null");
            $.displayName = Objects.requireNonNull($.displayName, "expected parameter 'displayName' to be non-null");
            $.firewallRuleType = Objects.requireNonNull($.firewallRuleType, "expected parameter 'firewallRuleType' to be non-null");
            $.networkUri = Objects.requireNonNull($.networkUri, "expected parameter 'networkUri' to be non-null");
            $.policy = Objects.requireNonNull($.policy, "expected parameter 'policy' to be non-null");
            $.priority = Objects.requireNonNull($.priority, "expected parameter 'priority' to be non-null");
            $.targetServiceAccounts = Objects.requireNonNull($.targetServiceAccounts, "expected parameter 'targetServiceAccounts' to be non-null");
            $.targetTags = Objects.requireNonNull($.targetTags, "expected parameter 'targetTags' to be non-null");
            $.uri = Objects.requireNonNull($.uri, "expected parameter 'uri' to be non-null");
            return $;
        }
    }

}
