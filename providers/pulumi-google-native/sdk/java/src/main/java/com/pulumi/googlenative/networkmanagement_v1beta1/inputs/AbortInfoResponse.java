// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.networkmanagement_v1beta1.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * Details of the final state &#34;abort&#34; and associated resource.
 * 
 */
public final class AbortInfoResponse extends com.pulumi.resources.InvokeArgs {

    public static final AbortInfoResponse Empty = new AbortInfoResponse();

    /**
     * Causes that the analysis is aborted.
     * 
     */
    @Import(name="cause", required=true)
    private String cause;

    public String cause() {
        return this.cause;
    }

    /**
     * URI of the resource that caused the abort.
     * 
     */
    @Import(name="resourceUri", required=true)
    private String resourceUri;

    public String resourceUri() {
        return this.resourceUri;
    }

    private AbortInfoResponse() {}

    private AbortInfoResponse(AbortInfoResponse $) {
        this.cause = $.cause;
        this.resourceUri = $.resourceUri;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AbortInfoResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AbortInfoResponse $;

        public Builder() {
            $ = new AbortInfoResponse();
        }

        public Builder(AbortInfoResponse defaults) {
            $ = new AbortInfoResponse(Objects.requireNonNull(defaults));
        }

        public Builder cause(String cause) {
            $.cause = cause;
            return this;
        }

        public Builder resourceUri(String resourceUri) {
            $.resourceUri = resourceUri;
            return this;
        }

        public AbortInfoResponse build() {
            $.cause = Objects.requireNonNull($.cause, "expected parameter 'cause' to be non-null");
            $.resourceUri = Objects.requireNonNull($.resourceUri, "expected parameter 'resourceUri' to be non-null");
            return $;
        }
    }

}
