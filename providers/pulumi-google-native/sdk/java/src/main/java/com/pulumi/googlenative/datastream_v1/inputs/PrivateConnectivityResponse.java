// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.datastream_v1.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * Private Connectivity
 * 
 */
public final class PrivateConnectivityResponse extends com.pulumi.resources.InvokeArgs {

    public static final PrivateConnectivityResponse Empty = new PrivateConnectivityResponse();

    /**
     * A reference to a private connection resource. Format: `projects/{project}/locations/{location}/privateConnections/{name}`
     * 
     */
    @Import(name="privateConnection", required=true)
    private String privateConnection;

    /**
     * @return A reference to a private connection resource. Format: `projects/{project}/locations/{location}/privateConnections/{name}`
     * 
     */
    public String privateConnection() {
        return this.privateConnection;
    }

    private PrivateConnectivityResponse() {}

    private PrivateConnectivityResponse(PrivateConnectivityResponse $) {
        this.privateConnection = $.privateConnection;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PrivateConnectivityResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PrivateConnectivityResponse $;

        public Builder() {
            $ = new PrivateConnectivityResponse();
        }

        public Builder(PrivateConnectivityResponse defaults) {
            $ = new PrivateConnectivityResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param privateConnection A reference to a private connection resource. Format: `projects/{project}/locations/{location}/privateConnections/{name}`
         * 
         * @return builder
         * 
         */
        public Builder privateConnection(String privateConnection) {
            $.privateConnection = privateConnection;
            return this;
        }

        public PrivateConnectivityResponse build() {
            $.privateConnection = Objects.requireNonNull($.privateConnection, "expected parameter 'privateConnection' to be non-null");
            return $;
        }
    }

}
