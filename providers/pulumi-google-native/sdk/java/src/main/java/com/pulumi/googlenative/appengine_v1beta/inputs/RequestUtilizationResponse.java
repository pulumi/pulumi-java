// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.appengine_v1beta.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.util.Objects;


/**
 * Target scaling by request utilization. Only applicable in the App Engine flexible environment.
 * 
 */
public final class RequestUtilizationResponse extends com.pulumi.resources.InvokeArgs {

    public static final RequestUtilizationResponse Empty = new RequestUtilizationResponse();

    /**
     * Target number of concurrent requests.
     * 
     */
    @Import(name="targetConcurrentRequests", required=true)
    private Integer targetConcurrentRequests;

    /**
     * @return Target number of concurrent requests.
     * 
     */
    public Integer targetConcurrentRequests() {
        return this.targetConcurrentRequests;
    }

    /**
     * Target requests per second.
     * 
     */
    @Import(name="targetRequestCountPerSecond", required=true)
    private Integer targetRequestCountPerSecond;

    /**
     * @return Target requests per second.
     * 
     */
    public Integer targetRequestCountPerSecond() {
        return this.targetRequestCountPerSecond;
    }

    private RequestUtilizationResponse() {}

    private RequestUtilizationResponse(RequestUtilizationResponse $) {
        this.targetConcurrentRequests = $.targetConcurrentRequests;
        this.targetRequestCountPerSecond = $.targetRequestCountPerSecond;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RequestUtilizationResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RequestUtilizationResponse $;

        public Builder() {
            $ = new RequestUtilizationResponse();
        }

        public Builder(RequestUtilizationResponse defaults) {
            $ = new RequestUtilizationResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param targetConcurrentRequests Target number of concurrent requests.
         * 
         * @return builder
         * 
         */
        public Builder targetConcurrentRequests(Integer targetConcurrentRequests) {
            $.targetConcurrentRequests = targetConcurrentRequests;
            return this;
        }

        /**
         * @param targetRequestCountPerSecond Target requests per second.
         * 
         * @return builder
         * 
         */
        public Builder targetRequestCountPerSecond(Integer targetRequestCountPerSecond) {
            $.targetRequestCountPerSecond = targetRequestCountPerSecond;
            return this;
        }

        public RequestUtilizationResponse build() {
            $.targetConcurrentRequests = Objects.requireNonNull($.targetConcurrentRequests, "expected parameter 'targetConcurrentRequests' to be non-null");
            $.targetRequestCountPerSecond = Objects.requireNonNull($.targetRequestCountPerSecond, "expected parameter 'targetRequestCountPerSecond' to be non-null");
            return $;
        }
    }

}
