// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.cloudasset_v1;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import com.pulumi.googlenative.cloudasset_v1.inputs.QueryContentArgs;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class SavedQueryArgs extends com.pulumi.resources.ResourceArgs {

    public static final SavedQueryArgs Empty = new SavedQueryArgs();

    /**
     * The query content.
     * 
     */
    @Import(name="content")
      private final @Nullable Output<QueryContentArgs> content;

    public Output<QueryContentArgs> content() {
        return this.content == null ? Codegen.empty() : this.content;
    }

    /**
     * The description of this saved query. This value should be fewer than 255 characters.
     * 
     */
    @Import(name="description")
      private final @Nullable Output<String> description;

    public Output<String> description() {
        return this.description == null ? Codegen.empty() : this.description;
    }

    /**
     * Labels applied on the resource. This value should not contain more than 10 entries. The key and value of each entry must be non-empty and fewer than 64 characters.
     * 
     */
    @Import(name="labels")
      private final @Nullable Output<Map<String,String>> labels;

    public Output<Map<String,String>> labels() {
        return this.labels == null ? Codegen.empty() : this.labels;
    }

    /**
     * The resource name of the saved query. The format must be: * projects/project_number/savedQueries/saved_query_id * folders/folder_number/savedQueries/saved_query_id * organizations/organization_number/savedQueries/saved_query_id
     * 
     */
    @Import(name="name")
      private final @Nullable Output<String> name;

    public Output<String> name() {
        return this.name == null ? Codegen.empty() : this.name;
    }

    @Import(name="savedQueryId", required=true)
      private final Output<String> savedQueryId;

    public Output<String> savedQueryId() {
        return this.savedQueryId;
    }

    @Import(name="v1Id", required=true)
      private final Output<String> v1Id;

    public Output<String> v1Id() {
        return this.v1Id;
    }

    @Import(name="v1Id1", required=true)
      private final Output<String> v1Id1;

    public Output<String> v1Id1() {
        return this.v1Id1;
    }

    public SavedQueryArgs(
        @Nullable Output<QueryContentArgs> content,
        @Nullable Output<String> description,
        @Nullable Output<Map<String,String>> labels,
        @Nullable Output<String> name,
        Output<String> savedQueryId,
        Output<String> v1Id,
        Output<String> v1Id1) {
        this.content = content;
        this.description = description;
        this.labels = labels;
        this.name = name;
        this.savedQueryId = Objects.requireNonNull(savedQueryId, "expected parameter 'savedQueryId' to be non-null");
        this.v1Id = Objects.requireNonNull(v1Id, "expected parameter 'v1Id' to be non-null");
        this.v1Id1 = Objects.requireNonNull(v1Id1, "expected parameter 'v1Id1' to be non-null");
    }

    private SavedQueryArgs() {
        this.content = Codegen.empty();
        this.description = Codegen.empty();
        this.labels = Codegen.empty();
        this.name = Codegen.empty();
        this.savedQueryId = Codegen.empty();
        this.v1Id = Codegen.empty();
        this.v1Id1 = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SavedQueryArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<QueryContentArgs> content;
        private @Nullable Output<String> description;
        private @Nullable Output<Map<String,String>> labels;
        private @Nullable Output<String> name;
        private Output<String> savedQueryId;
        private Output<String> v1Id;
        private Output<String> v1Id1;

        public Builder() {
    	      // Empty
        }

        public Builder(SavedQueryArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.content = defaults.content;
    	      this.description = defaults.description;
    	      this.labels = defaults.labels;
    	      this.name = defaults.name;
    	      this.savedQueryId = defaults.savedQueryId;
    	      this.v1Id = defaults.v1Id;
    	      this.v1Id1 = defaults.v1Id1;
        }

        public Builder content(@Nullable Output<QueryContentArgs> content) {
            this.content = content;
            return this;
        }
        public Builder content(@Nullable QueryContentArgs content) {
            this.content = Codegen.ofNullable(content);
            return this;
        }
        public Builder description(@Nullable Output<String> description) {
            this.description = description;
            return this;
        }
        public Builder description(@Nullable String description) {
            this.description = Codegen.ofNullable(description);
            return this;
        }
        public Builder labels(@Nullable Output<Map<String,String>> labels) {
            this.labels = labels;
            return this;
        }
        public Builder labels(@Nullable Map<String,String> labels) {
            this.labels = Codegen.ofNullable(labels);
            return this;
        }
        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }
        public Builder name(@Nullable String name) {
            this.name = Codegen.ofNullable(name);
            return this;
        }
        public Builder savedQueryId(Output<String> savedQueryId) {
            this.savedQueryId = Objects.requireNonNull(savedQueryId);
            return this;
        }
        public Builder savedQueryId(String savedQueryId) {
            this.savedQueryId = Output.of(Objects.requireNonNull(savedQueryId));
            return this;
        }
        public Builder v1Id(Output<String> v1Id) {
            this.v1Id = Objects.requireNonNull(v1Id);
            return this;
        }
        public Builder v1Id(String v1Id) {
            this.v1Id = Output.of(Objects.requireNonNull(v1Id));
            return this;
        }
        public Builder v1Id1(Output<String> v1Id1) {
            this.v1Id1 = Objects.requireNonNull(v1Id1);
            return this;
        }
        public Builder v1Id1(String v1Id1) {
            this.v1Id1 = Output.of(Objects.requireNonNull(v1Id1));
            return this;
        }        public SavedQueryArgs build() {
            return new SavedQueryArgs(content, description, labels, name, savedQueryId, v1Id, v1Id1);
        }
    }
}
