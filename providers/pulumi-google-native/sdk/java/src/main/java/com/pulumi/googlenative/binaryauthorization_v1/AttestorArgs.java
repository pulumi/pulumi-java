// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.binaryauthorization_v1;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.binaryauthorization_v1.inputs.UserOwnedGrafeasNoteArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AttestorArgs extends com.pulumi.resources.ResourceArgs {

    public static final AttestorArgs Empty = new AttestorArgs();

    @Import(name="attestorId", required=true)
    private Output<String> attestorId;

    public Output<String> attestorId() {
        return this.attestorId;
    }

    /**
     * Optional. A descriptive comment. This field may be updated. The field may be displayed in chooser dialogs.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The resource name, in the format: `projects/*{@literal /}attestors/*`. This field may not be updated.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="project")
    private @Nullable Output<String> project;

    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * This specifies how an attestation will be read, and how it will be used during policy enforcement.
     * 
     */
    @Import(name="userOwnedGrafeasNote")
    private @Nullable Output<UserOwnedGrafeasNoteArgs> userOwnedGrafeasNote;

    public Optional<Output<UserOwnedGrafeasNoteArgs>> userOwnedGrafeasNote() {
        return Optional.ofNullable(this.userOwnedGrafeasNote);
    }

    private AttestorArgs() {}

    private AttestorArgs(AttestorArgs $) {
        this.attestorId = $.attestorId;
        this.description = $.description;
        this.name = $.name;
        this.project = $.project;
        this.userOwnedGrafeasNote = $.userOwnedGrafeasNote;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AttestorArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AttestorArgs $;

        public Builder() {
            $ = new AttestorArgs();
        }

        public Builder(AttestorArgs defaults) {
            $ = new AttestorArgs(Objects.requireNonNull(defaults));
        }

        public Builder attestorId(Output<String> attestorId) {
            $.attestorId = attestorId;
            return this;
        }

        public Builder attestorId(String attestorId) {
            return attestorId(Output.of(attestorId));
        }

        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        public Builder description(String description) {
            return description(Output.of(description));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        public Builder project(String project) {
            return project(Output.of(project));
        }

        public Builder userOwnedGrafeasNote(@Nullable Output<UserOwnedGrafeasNoteArgs> userOwnedGrafeasNote) {
            $.userOwnedGrafeasNote = userOwnedGrafeasNote;
            return this;
        }

        public Builder userOwnedGrafeasNote(UserOwnedGrafeasNoteArgs userOwnedGrafeasNote) {
            return userOwnedGrafeasNote(Output.of(userOwnedGrafeasNote));
        }

        public AttestorArgs build() {
            $.attestorId = Objects.requireNonNull($.attestorId, "expected parameter 'attestorId' to be non-null");
            return $;
        }
    }

}
