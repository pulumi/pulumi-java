// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.cloudbuild_v1alpha1.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * Network describes the GCP network used to create workers in.
 * 
 */
public final class NetworkResponse extends com.pulumi.resources.InvokeArgs {

    public static final NetworkResponse Empty = new NetworkResponse();

    /**
     * Network on which the workers are created. &#34;default&#34; network is used if empty.
     * 
     */
    @Import(name="network", required=true)
    private String network;

    public String network() {
        return this.network;
    }

    /**
     * Project id containing the defined network and subnetwork. For a peered VPC, this will be the same as the project_id in which the workers are created. For a shared VPC, this will be the project sharing the network with the project_id project in which workers will be created. For custom workers with no VPC, this will be the same as project_id.
     * 
     */
    @Import(name="project", required=true)
    private String project;

    public String project() {
        return this.project;
    }

    /**
     * Subnetwork on which the workers are created. &#34;default&#34; subnetwork is used if empty.
     * 
     */
    @Import(name="subnetwork", required=true)
    private String subnetwork;

    public String subnetwork() {
        return this.subnetwork;
    }

    private NetworkResponse() {}

    private NetworkResponse(NetworkResponse $) {
        this.network = $.network;
        this.project = $.project;
        this.subnetwork = $.subnetwork;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NetworkResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NetworkResponse $;

        public Builder() {
            $ = new NetworkResponse();
        }

        public Builder(NetworkResponse defaults) {
            $ = new NetworkResponse(Objects.requireNonNull(defaults));
        }

        public Builder network(String network) {
            $.network = network;
            return this;
        }

        public Builder project(String project) {
            $.project = project;
            return this;
        }

        public Builder subnetwork(String subnetwork) {
            $.subnetwork = subnetwork;
            return this;
        }

        public NetworkResponse build() {
            $.network = Objects.requireNonNull($.network, "expected parameter 'network' to be non-null");
            $.project = Objects.requireNonNull($.project, "expected parameter 'project' to be non-null");
            $.subnetwork = Objects.requireNonNull($.subnetwork, "expected parameter 'subnetwork' to be non-null");
            return $;
        }
    }

}
