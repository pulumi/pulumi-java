// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.monitoring_v3.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.monitoring_v3.inputs.DistributionCutResponse;
import com.pulumi.googlenative.monitoring_v3.inputs.TimeSeriesRatioResponse;
import java.util.Objects;


/**
 * Service Level Indicators for which atomic units of service are counted directly.
 * 
 */
public final class RequestBasedSliResponse extends com.pulumi.resources.InvokeArgs {

    public static final RequestBasedSliResponse Empty = new RequestBasedSliResponse();

    /**
     * distribution_cut is used when good_service is a count of values aggregated in a Distribution that fall into a good range. The total_service is the total count of all values aggregated in the Distribution.
     * 
     */
    @Import(name="distributionCut", required=true)
    private DistributionCutResponse distributionCut;

    public DistributionCutResponse distributionCut() {
        return this.distributionCut;
    }

    /**
     * good_total_ratio is used when the ratio of good_service to total_service is computed from two TimeSeries.
     * 
     */
    @Import(name="goodTotalRatio", required=true)
    private TimeSeriesRatioResponse goodTotalRatio;

    public TimeSeriesRatioResponse goodTotalRatio() {
        return this.goodTotalRatio;
    }

    private RequestBasedSliResponse() {}

    private RequestBasedSliResponse(RequestBasedSliResponse $) {
        this.distributionCut = $.distributionCut;
        this.goodTotalRatio = $.goodTotalRatio;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RequestBasedSliResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RequestBasedSliResponse $;

        public Builder() {
            $ = new RequestBasedSliResponse();
        }

        public Builder(RequestBasedSliResponse defaults) {
            $ = new RequestBasedSliResponse(Objects.requireNonNull(defaults));
        }

        public Builder distributionCut(DistributionCutResponse distributionCut) {
            $.distributionCut = distributionCut;
            return this;
        }

        public Builder goodTotalRatio(TimeSeriesRatioResponse goodTotalRatio) {
            $.goodTotalRatio = goodTotalRatio;
            return this;
        }

        public RequestBasedSliResponse build() {
            $.distributionCut = Objects.requireNonNull($.distributionCut, "expected parameter 'distributionCut' to be non-null");
            $.goodTotalRatio = Objects.requireNonNull($.goodTotalRatio, "expected parameter 'goodTotalRatio' to be non-null");
            return $;
        }
    }

}
