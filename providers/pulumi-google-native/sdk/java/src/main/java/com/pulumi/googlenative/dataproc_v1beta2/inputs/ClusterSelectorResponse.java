// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.dataproc_v1beta2.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;


/**
 * A selector that chooses target cluster for jobs based on metadata.
 * 
 */
public final class ClusterSelectorResponse extends com.pulumi.resources.InvokeArgs {

    public static final ClusterSelectorResponse Empty = new ClusterSelectorResponse();

    /**
     * The cluster labels. Cluster must have all labels to match.
     * 
     */
    @Import(name="clusterLabels", required=true)
    private Map<String,String> clusterLabels;

    public Map<String,String> clusterLabels() {
        return this.clusterLabels;
    }

    /**
     * Optional. The zone where workflow process executes. This parameter does not affect the selection of the cluster.If unspecified, the zone of the first cluster matching the selector is used.
     * 
     */
    @Import(name="zone", required=true)
    private String zone;

    public String zone() {
        return this.zone;
    }

    private ClusterSelectorResponse() {}

    private ClusterSelectorResponse(ClusterSelectorResponse $) {
        this.clusterLabels = $.clusterLabels;
        this.zone = $.zone;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClusterSelectorResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClusterSelectorResponse $;

        public Builder() {
            $ = new ClusterSelectorResponse();
        }

        public Builder(ClusterSelectorResponse defaults) {
            $ = new ClusterSelectorResponse(Objects.requireNonNull(defaults));
        }

        public Builder clusterLabels(Map<String,String> clusterLabels) {
            $.clusterLabels = clusterLabels;
            return this;
        }

        public Builder zone(String zone) {
            $.zone = zone;
            return this;
        }

        public ClusterSelectorResponse build() {
            $.clusterLabels = Objects.requireNonNull($.clusterLabels, "expected parameter 'clusterLabels' to be non-null");
            $.zone = Objects.requireNonNull($.zone, "expected parameter 'zone' to be non-null");
            return $;
        }
    }

}
