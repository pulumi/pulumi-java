// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.apigeeregistry.v1.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetArtifactResult {
    /**
     * @return Input only. The contents of the artifact. Provided by API callers when artifacts are created or replaced. To access the contents of an artifact, use GetArtifactContents.
     * 
     */
    private final String contents;
    /**
     * @return Creation timestamp.
     * 
     */
    private final String createTime;
    /**
     * @return A SHA-256 hash of the artifact&#39;s contents. If the artifact is gzipped, this is the hash of the uncompressed artifact.
     * 
     */
    private final String hash;
    /**
     * @return A content type specifier for the artifact. Content type specifiers are Media Types (https://en.wikipedia.org/wiki/Media_type) with a possible &#34;schema&#34; parameter that specifies a schema for the stored information. Content types can specify compression. Currently only GZip compression is supported (indicated with &#34;+gzip&#34;).
     * 
     */
    private final String mimeType;
    /**
     * @return Resource name.
     * 
     */
    private final String name;
    /**
     * @return The size of the artifact in bytes. If the artifact is gzipped, this is the size of the uncompressed artifact.
     * 
     */
    private final Integer sizeBytes;
    /**
     * @return Last update timestamp.
     * 
     */
    private final String updateTime;

    @CustomType.Constructor
    private GetArtifactResult(
        @CustomType.Parameter("contents") String contents,
        @CustomType.Parameter("createTime") String createTime,
        @CustomType.Parameter("hash") String hash,
        @CustomType.Parameter("mimeType") String mimeType,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("sizeBytes") Integer sizeBytes,
        @CustomType.Parameter("updateTime") String updateTime) {
        this.contents = contents;
        this.createTime = createTime;
        this.hash = hash;
        this.mimeType = mimeType;
        this.name = name;
        this.sizeBytes = sizeBytes;
        this.updateTime = updateTime;
    }

    /**
     * @return Input only. The contents of the artifact. Provided by API callers when artifacts are created or replaced. To access the contents of an artifact, use GetArtifactContents.
     * 
     */
    public String contents() {
        return this.contents;
    }
    /**
     * @return Creation timestamp.
     * 
     */
    public String createTime() {
        return this.createTime;
    }
    /**
     * @return A SHA-256 hash of the artifact&#39;s contents. If the artifact is gzipped, this is the hash of the uncompressed artifact.
     * 
     */
    public String hash() {
        return this.hash;
    }
    /**
     * @return A content type specifier for the artifact. Content type specifiers are Media Types (https://en.wikipedia.org/wiki/Media_type) with a possible &#34;schema&#34; parameter that specifies a schema for the stored information. Content types can specify compression. Currently only GZip compression is supported (indicated with &#34;+gzip&#34;).
     * 
     */
    public String mimeType() {
        return this.mimeType;
    }
    /**
     * @return Resource name.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The size of the artifact in bytes. If the artifact is gzipped, this is the size of the uncompressed artifact.
     * 
     */
    public Integer sizeBytes() {
        return this.sizeBytes;
    }
    /**
     * @return Last update timestamp.
     * 
     */
    public String updateTime() {
        return this.updateTime;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetArtifactResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String contents;
        private String createTime;
        private String hash;
        private String mimeType;
        private String name;
        private Integer sizeBytes;
        private String updateTime;

        public Builder() {
    	      // Empty
        }

        public Builder(GetArtifactResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.contents = defaults.contents;
    	      this.createTime = defaults.createTime;
    	      this.hash = defaults.hash;
    	      this.mimeType = defaults.mimeType;
    	      this.name = defaults.name;
    	      this.sizeBytes = defaults.sizeBytes;
    	      this.updateTime = defaults.updateTime;
        }

        public Builder contents(String contents) {
            this.contents = Objects.requireNonNull(contents);
            return this;
        }
        public Builder createTime(String createTime) {
            this.createTime = Objects.requireNonNull(createTime);
            return this;
        }
        public Builder hash(String hash) {
            this.hash = Objects.requireNonNull(hash);
            return this;
        }
        public Builder mimeType(String mimeType) {
            this.mimeType = Objects.requireNonNull(mimeType);
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder sizeBytes(Integer sizeBytes) {
            this.sizeBytes = Objects.requireNonNull(sizeBytes);
            return this;
        }
        public Builder updateTime(String updateTime) {
            this.updateTime = Objects.requireNonNull(updateTime);
            return this;
        }        public GetArtifactResult build() {
            return new GetArtifactResult(contents, createTime, hash, mimeType, name, sizeBytes, updateTime);
        }
    }
}
