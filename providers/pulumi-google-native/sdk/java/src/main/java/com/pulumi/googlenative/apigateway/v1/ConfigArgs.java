// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.apigateway.v1;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.apigateway.v1.inputs.ApigatewayApiConfigFileArgs;
import com.pulumi.googlenative.apigateway.v1.inputs.ApigatewayApiConfigGrpcServiceDefinitionArgs;
import com.pulumi.googlenative.apigateway.v1.inputs.ApigatewayApiConfigOpenApiDocumentArgs;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final ConfigArgs Empty = new ConfigArgs();

    /**
     * Required. Identifier to assign to the API Config. Must be unique within scope of the parent resource.
     * 
     */
    @Import(name="apiConfigId", required=true)
    private Output<String> apiConfigId;

    /**
     * @return Required. Identifier to assign to the API Config. Must be unique within scope of the parent resource.
     * 
     */
    public Output<String> apiConfigId() {
        return this.apiConfigId;
    }

    @Import(name="apiId", required=true)
    private Output<String> apiId;

    public Output<String> apiId() {
        return this.apiId;
    }

    /**
     * Optional. Display name.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return Optional. Display name.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * Immutable. The Google Cloud IAM Service Account that Gateways serving this config should use to authenticate to other services. This may either be the Service Account&#39;s email (`{ACCOUNT_ID}@{PROJECT}.iam.gserviceaccount.com`) or its full resource name (`projects/{PROJECT}/accounts/{UNIQUE_ID}`). This is most often used when the service is a GCP resource such as a Cloud Run Service or an IAP-secured service.
     * 
     */
    @Import(name="gatewayServiceAccount")
    private @Nullable Output<String> gatewayServiceAccount;

    /**
     * @return Immutable. The Google Cloud IAM Service Account that Gateways serving this config should use to authenticate to other services. This may either be the Service Account&#39;s email (`{ACCOUNT_ID}@{PROJECT}.iam.gserviceaccount.com`) or its full resource name (`projects/{PROJECT}/accounts/{UNIQUE_ID}`). This is most often used when the service is a GCP resource such as a Cloud Run Service or an IAP-secured service.
     * 
     */
    public Optional<Output<String>> gatewayServiceAccount() {
        return Optional.ofNullable(this.gatewayServiceAccount);
    }

    /**
     * Optional. gRPC service definition files. If specified, openapi_documents must not be included.
     * 
     */
    @Import(name="grpcServices")
    private @Nullable Output<List<ApigatewayApiConfigGrpcServiceDefinitionArgs>> grpcServices;

    /**
     * @return Optional. gRPC service definition files. If specified, openapi_documents must not be included.
     * 
     */
    public Optional<Output<List<ApigatewayApiConfigGrpcServiceDefinitionArgs>>> grpcServices() {
        return Optional.ofNullable(this.grpcServices);
    }

    /**
     * Optional. Resource labels to represent user-provided metadata. Refer to cloud documentation on labels for more details. https://cloud.google.com/compute/docs/labeling-resources
     * 
     */
    @Import(name="labels")
    private @Nullable Output<Map<String,String>> labels;

    /**
     * @return Optional. Resource labels to represent user-provided metadata. Refer to cloud documentation on labels for more details. https://cloud.google.com/compute/docs/labeling-resources
     * 
     */
    public Optional<Output<Map<String,String>>> labels() {
        return Optional.ofNullable(this.labels);
    }

    @Import(name="location")
    private @Nullable Output<String> location;

    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * Optional. Service Configuration files. At least one must be included when using gRPC service definitions. See https://cloud.google.com/endpoints/docs/grpc/grpc-service-config#service_configuration_overview for the expected file contents. If multiple files are specified, the files are merged with the following rules: * All singular scalar fields are merged using &#34;last one wins&#34; semantics in the order of the files uploaded. * Repeated fields are concatenated. * Singular embedded messages are merged using these rules for nested fields.
     * 
     */
    @Import(name="managedServiceConfigs")
    private @Nullable Output<List<ApigatewayApiConfigFileArgs>> managedServiceConfigs;

    /**
     * @return Optional. Service Configuration files. At least one must be included when using gRPC service definitions. See https://cloud.google.com/endpoints/docs/grpc/grpc-service-config#service_configuration_overview for the expected file contents. If multiple files are specified, the files are merged with the following rules: * All singular scalar fields are merged using &#34;last one wins&#34; semantics in the order of the files uploaded. * Repeated fields are concatenated. * Singular embedded messages are merged using these rules for nested fields.
     * 
     */
    public Optional<Output<List<ApigatewayApiConfigFileArgs>>> managedServiceConfigs() {
        return Optional.ofNullable(this.managedServiceConfigs);
    }

    /**
     * Optional. OpenAPI specification documents. If specified, grpc_services and managed_service_configs must not be included.
     * 
     */
    @Import(name="openapiDocuments")
    private @Nullable Output<List<ApigatewayApiConfigOpenApiDocumentArgs>> openapiDocuments;

    /**
     * @return Optional. OpenAPI specification documents. If specified, grpc_services and managed_service_configs must not be included.
     * 
     */
    public Optional<Output<List<ApigatewayApiConfigOpenApiDocumentArgs>>> openapiDocuments() {
        return Optional.ofNullable(this.openapiDocuments);
    }

    @Import(name="project")
    private @Nullable Output<String> project;

    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    private ConfigArgs() {}

    private ConfigArgs(ConfigArgs $) {
        this.apiConfigId = $.apiConfigId;
        this.apiId = $.apiId;
        this.displayName = $.displayName;
        this.gatewayServiceAccount = $.gatewayServiceAccount;
        this.grpcServices = $.grpcServices;
        this.labels = $.labels;
        this.location = $.location;
        this.managedServiceConfigs = $.managedServiceConfigs;
        this.openapiDocuments = $.openapiDocuments;
        this.project = $.project;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ConfigArgs $;

        public Builder() {
            $ = new ConfigArgs();
        }

        public Builder(ConfigArgs defaults) {
            $ = new ConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param apiConfigId Required. Identifier to assign to the API Config. Must be unique within scope of the parent resource.
         * 
         * @return builder
         * 
         */
        public Builder apiConfigId(Output<String> apiConfigId) {
            $.apiConfigId = apiConfigId;
            return this;
        }

        /**
         * @param apiConfigId Required. Identifier to assign to the API Config. Must be unique within scope of the parent resource.
         * 
         * @return builder
         * 
         */
        public Builder apiConfigId(String apiConfigId) {
            return apiConfigId(Output.of(apiConfigId));
        }

        public Builder apiId(Output<String> apiId) {
            $.apiId = apiId;
            return this;
        }

        public Builder apiId(String apiId) {
            return apiId(Output.of(apiId));
        }

        /**
         * @param displayName Optional. Display name.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName Optional. Display name.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param gatewayServiceAccount Immutable. The Google Cloud IAM Service Account that Gateways serving this config should use to authenticate to other services. This may either be the Service Account&#39;s email (`{ACCOUNT_ID}@{PROJECT}.iam.gserviceaccount.com`) or its full resource name (`projects/{PROJECT}/accounts/{UNIQUE_ID}`). This is most often used when the service is a GCP resource such as a Cloud Run Service or an IAP-secured service.
         * 
         * @return builder
         * 
         */
        public Builder gatewayServiceAccount(@Nullable Output<String> gatewayServiceAccount) {
            $.gatewayServiceAccount = gatewayServiceAccount;
            return this;
        }

        /**
         * @param gatewayServiceAccount Immutable. The Google Cloud IAM Service Account that Gateways serving this config should use to authenticate to other services. This may either be the Service Account&#39;s email (`{ACCOUNT_ID}@{PROJECT}.iam.gserviceaccount.com`) or its full resource name (`projects/{PROJECT}/accounts/{UNIQUE_ID}`). This is most often used when the service is a GCP resource such as a Cloud Run Service or an IAP-secured service.
         * 
         * @return builder
         * 
         */
        public Builder gatewayServiceAccount(String gatewayServiceAccount) {
            return gatewayServiceAccount(Output.of(gatewayServiceAccount));
        }

        /**
         * @param grpcServices Optional. gRPC service definition files. If specified, openapi_documents must not be included.
         * 
         * @return builder
         * 
         */
        public Builder grpcServices(@Nullable Output<List<ApigatewayApiConfigGrpcServiceDefinitionArgs>> grpcServices) {
            $.grpcServices = grpcServices;
            return this;
        }

        /**
         * @param grpcServices Optional. gRPC service definition files. If specified, openapi_documents must not be included.
         * 
         * @return builder
         * 
         */
        public Builder grpcServices(List<ApigatewayApiConfigGrpcServiceDefinitionArgs> grpcServices) {
            return grpcServices(Output.of(grpcServices));
        }

        /**
         * @param grpcServices Optional. gRPC service definition files. If specified, openapi_documents must not be included.
         * 
         * @return builder
         * 
         */
        public Builder grpcServices(ApigatewayApiConfigGrpcServiceDefinitionArgs... grpcServices) {
            return grpcServices(List.of(grpcServices));
        }

        /**
         * @param labels Optional. Resource labels to represent user-provided metadata. Refer to cloud documentation on labels for more details. https://cloud.google.com/compute/docs/labeling-resources
         * 
         * @return builder
         * 
         */
        public Builder labels(@Nullable Output<Map<String,String>> labels) {
            $.labels = labels;
            return this;
        }

        /**
         * @param labels Optional. Resource labels to represent user-provided metadata. Refer to cloud documentation on labels for more details. https://cloud.google.com/compute/docs/labeling-resources
         * 
         * @return builder
         * 
         */
        public Builder labels(Map<String,String> labels) {
            return labels(Output.of(labels));
        }

        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param managedServiceConfigs Optional. Service Configuration files. At least one must be included when using gRPC service definitions. See https://cloud.google.com/endpoints/docs/grpc/grpc-service-config#service_configuration_overview for the expected file contents. If multiple files are specified, the files are merged with the following rules: * All singular scalar fields are merged using &#34;last one wins&#34; semantics in the order of the files uploaded. * Repeated fields are concatenated. * Singular embedded messages are merged using these rules for nested fields.
         * 
         * @return builder
         * 
         */
        public Builder managedServiceConfigs(@Nullable Output<List<ApigatewayApiConfigFileArgs>> managedServiceConfigs) {
            $.managedServiceConfigs = managedServiceConfigs;
            return this;
        }

        /**
         * @param managedServiceConfigs Optional. Service Configuration files. At least one must be included when using gRPC service definitions. See https://cloud.google.com/endpoints/docs/grpc/grpc-service-config#service_configuration_overview for the expected file contents. If multiple files are specified, the files are merged with the following rules: * All singular scalar fields are merged using &#34;last one wins&#34; semantics in the order of the files uploaded. * Repeated fields are concatenated. * Singular embedded messages are merged using these rules for nested fields.
         * 
         * @return builder
         * 
         */
        public Builder managedServiceConfigs(List<ApigatewayApiConfigFileArgs> managedServiceConfigs) {
            return managedServiceConfigs(Output.of(managedServiceConfigs));
        }

        /**
         * @param managedServiceConfigs Optional. Service Configuration files. At least one must be included when using gRPC service definitions. See https://cloud.google.com/endpoints/docs/grpc/grpc-service-config#service_configuration_overview for the expected file contents. If multiple files are specified, the files are merged with the following rules: * All singular scalar fields are merged using &#34;last one wins&#34; semantics in the order of the files uploaded. * Repeated fields are concatenated. * Singular embedded messages are merged using these rules for nested fields.
         * 
         * @return builder
         * 
         */
        public Builder managedServiceConfigs(ApigatewayApiConfigFileArgs... managedServiceConfigs) {
            return managedServiceConfigs(List.of(managedServiceConfigs));
        }

        /**
         * @param openapiDocuments Optional. OpenAPI specification documents. If specified, grpc_services and managed_service_configs must not be included.
         * 
         * @return builder
         * 
         */
        public Builder openapiDocuments(@Nullable Output<List<ApigatewayApiConfigOpenApiDocumentArgs>> openapiDocuments) {
            $.openapiDocuments = openapiDocuments;
            return this;
        }

        /**
         * @param openapiDocuments Optional. OpenAPI specification documents. If specified, grpc_services and managed_service_configs must not be included.
         * 
         * @return builder
         * 
         */
        public Builder openapiDocuments(List<ApigatewayApiConfigOpenApiDocumentArgs> openapiDocuments) {
            return openapiDocuments(Output.of(openapiDocuments));
        }

        /**
         * @param openapiDocuments Optional. OpenAPI specification documents. If specified, grpc_services and managed_service_configs must not be included.
         * 
         * @return builder
         * 
         */
        public Builder openapiDocuments(ApigatewayApiConfigOpenApiDocumentArgs... openapiDocuments) {
            return openapiDocuments(List.of(openapiDocuments));
        }

        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        public Builder project(String project) {
            return project(Output.of(project));
        }

        public ConfigArgs build() {
            $.apiConfigId = Objects.requireNonNull($.apiConfigId, "expected parameter 'apiConfigId' to be non-null");
            $.apiId = Objects.requireNonNull($.apiId, "expected parameter 'apiId' to be non-null");
            return $;
        }
    }

}
