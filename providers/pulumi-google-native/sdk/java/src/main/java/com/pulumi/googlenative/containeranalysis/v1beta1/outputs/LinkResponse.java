// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.containeranalysis.v1beta1.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.googlenative.containeranalysis.v1beta1.outputs.ByProductsResponse;
import com.pulumi.googlenative.containeranalysis.v1beta1.outputs.EnvironmentResponse;
import com.pulumi.googlenative.containeranalysis.v1beta1.outputs.GrafeasV1beta1IntotoArtifactResponse;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class LinkResponse {
    /**
     * @return ByProducts are data generated as part of a software supply chain step, but are not the actual result of the step.
     * 
     */
    private final ByProductsResponse byproducts;
    /**
     * @return This field contains the full command executed for the step. This can also be empty if links are generated for operations that aren&#39;t directly mapped to a specific command. Each term in the command is an independent string in the list. An example of a command in the in-toto metadata field is: &#34;command&#34;: [&#34;git&#34;, &#34;clone&#34;, &#34;https://github.com/in-toto/demo-project.git&#34;]
     * 
     */
    private final List<String> command;
    /**
     * @return This is a field that can be used to capture information about the environment. It is suggested for this field to contain information that details environment variables, filesystem information, and the present working directory. The recommended structure of this field is: &#34;environment&#34;: { &#34;custom_values&#34;: { &#34;variables&#34;: &#34;&#34;, &#34;filesystem&#34;: &#34;&#34;, &#34;workdir&#34;: &#34;&#34;, &#34;&#34;: &#34;...&#34; } }
     * 
     */
    private final EnvironmentResponse environment;
    /**
     * @return Materials are the supply chain artifacts that go into the step and are used for the operation performed. The key of the map is the path of the artifact and the structure contains the recorded hash information. An example is: &#34;materials&#34;: [ { &#34;resource_uri&#34;: &#34;foo/bar&#34;, &#34;hashes&#34;: { &#34;sha256&#34;: &#34;ebebf...&#34;, : } } ]
     * 
     */
    private final List<GrafeasV1beta1IntotoArtifactResponse> materials;
    /**
     * @return Products are the supply chain artifacts generated as a result of the step. The structure is identical to that of materials.
     * 
     */
    private final List<GrafeasV1beta1IntotoArtifactResponse> products;

    @CustomType.Constructor
    private LinkResponse(
        @CustomType.Parameter("byproducts") ByProductsResponse byproducts,
        @CustomType.Parameter("command") List<String> command,
        @CustomType.Parameter("environment") EnvironmentResponse environment,
        @CustomType.Parameter("materials") List<GrafeasV1beta1IntotoArtifactResponse> materials,
        @CustomType.Parameter("products") List<GrafeasV1beta1IntotoArtifactResponse> products) {
        this.byproducts = byproducts;
        this.command = command;
        this.environment = environment;
        this.materials = materials;
        this.products = products;
    }

    /**
     * @return ByProducts are data generated as part of a software supply chain step, but are not the actual result of the step.
     * 
     */
    public ByProductsResponse byproducts() {
        return this.byproducts;
    }
    /**
     * @return This field contains the full command executed for the step. This can also be empty if links are generated for operations that aren&#39;t directly mapped to a specific command. Each term in the command is an independent string in the list. An example of a command in the in-toto metadata field is: &#34;command&#34;: [&#34;git&#34;, &#34;clone&#34;, &#34;https://github.com/in-toto/demo-project.git&#34;]
     * 
     */
    public List<String> command() {
        return this.command;
    }
    /**
     * @return This is a field that can be used to capture information about the environment. It is suggested for this field to contain information that details environment variables, filesystem information, and the present working directory. The recommended structure of this field is: &#34;environment&#34;: { &#34;custom_values&#34;: { &#34;variables&#34;: &#34;&#34;, &#34;filesystem&#34;: &#34;&#34;, &#34;workdir&#34;: &#34;&#34;, &#34;&#34;: &#34;...&#34; } }
     * 
     */
    public EnvironmentResponse environment() {
        return this.environment;
    }
    /**
     * @return Materials are the supply chain artifacts that go into the step and are used for the operation performed. The key of the map is the path of the artifact and the structure contains the recorded hash information. An example is: &#34;materials&#34;: [ { &#34;resource_uri&#34;: &#34;foo/bar&#34;, &#34;hashes&#34;: { &#34;sha256&#34;: &#34;ebebf...&#34;, : } } ]
     * 
     */
    public List<GrafeasV1beta1IntotoArtifactResponse> materials() {
        return this.materials;
    }
    /**
     * @return Products are the supply chain artifacts generated as a result of the step. The structure is identical to that of materials.
     * 
     */
    public List<GrafeasV1beta1IntotoArtifactResponse> products() {
        return this.products;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(LinkResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ByProductsResponse byproducts;
        private List<String> command;
        private EnvironmentResponse environment;
        private List<GrafeasV1beta1IntotoArtifactResponse> materials;
        private List<GrafeasV1beta1IntotoArtifactResponse> products;

        public Builder() {
    	      // Empty
        }

        public Builder(LinkResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.byproducts = defaults.byproducts;
    	      this.command = defaults.command;
    	      this.environment = defaults.environment;
    	      this.materials = defaults.materials;
    	      this.products = defaults.products;
        }

        public Builder byproducts(ByProductsResponse byproducts) {
            this.byproducts = Objects.requireNonNull(byproducts);
            return this;
        }
        public Builder command(List<String> command) {
            this.command = Objects.requireNonNull(command);
            return this;
        }
        public Builder command(String... command) {
            return command(List.of(command));
        }
        public Builder environment(EnvironmentResponse environment) {
            this.environment = Objects.requireNonNull(environment);
            return this;
        }
        public Builder materials(List<GrafeasV1beta1IntotoArtifactResponse> materials) {
            this.materials = Objects.requireNonNull(materials);
            return this;
        }
        public Builder materials(GrafeasV1beta1IntotoArtifactResponse... materials) {
            return materials(List.of(materials));
        }
        public Builder products(List<GrafeasV1beta1IntotoArtifactResponse> products) {
            this.products = Objects.requireNonNull(products);
            return this;
        }
        public Builder products(GrafeasV1beta1IntotoArtifactResponse... products) {
            return products(List.of(products));
        }        public LinkResponse build() {
            return new LinkResponse(byproducts, command, environment, materials, products);
        }
    }
}
