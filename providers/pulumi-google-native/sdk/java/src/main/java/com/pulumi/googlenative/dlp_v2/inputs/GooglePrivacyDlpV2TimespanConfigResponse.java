// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.dlp_v2.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.dlp_v2.inputs.GooglePrivacyDlpV2FieldIdResponse;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;


/**
 * Configuration of the timespan of the items to include in scanning. Currently only supported when inspecting Google Cloud Storage and BigQuery.
 * 
 */
public final class GooglePrivacyDlpV2TimespanConfigResponse extends com.pulumi.resources.InvokeArgs {

    public static final GooglePrivacyDlpV2TimespanConfigResponse Empty = new GooglePrivacyDlpV2TimespanConfigResponse();

    /**
     * When the job is started by a JobTrigger we will automatically figure out a valid start_time to avoid scanning files that have not been modified since the last time the JobTrigger executed. This will be based on the time of the execution of the last run of the JobTrigger.
     * 
     */
    @Import(name="enableAutoPopulationOfTimespanConfig", required=true)
    private Boolean enableAutoPopulationOfTimespanConfig;

    public Boolean enableAutoPopulationOfTimespanConfig() {
        return this.enableAutoPopulationOfTimespanConfig;
    }

    /**
     * Exclude files, tables, or rows newer than this value. If not set, no upper time limit is applied.
     * 
     */
    @Import(name="endTime", required=true)
    private String endTime;

    public String endTime() {
        return this.endTime;
    }

    /**
     * Exclude files, tables, or rows older than this value. If not set, no lower time limit is applied.
     * 
     */
    @Import(name="startTime", required=true)
    private String startTime;

    public String startTime() {
        return this.startTime;
    }

    /**
     * Specification of the field containing the timestamp of scanned items. Used for data sources like Datastore and BigQuery. For BigQuery: If this value is not specified and the table was modified between the given start and end times, the entire table will be scanned. If this value is specified, then rows are filtered based on the given start and end times. Rows with a `NULL` value in the provided BigQuery column are skipped. Valid data types of the provided BigQuery column are: `INTEGER`, `DATE`, `TIMESTAMP`, and `DATETIME`. For Datastore: If this value is specified, then entities are filtered based on the given start and end times. If an entity does not contain the provided timestamp property or contains empty or invalid values, then it is included. Valid data types of the provided timestamp property are: `TIMESTAMP`.
     * 
     */
    @Import(name="timestampField", required=true)
    private GooglePrivacyDlpV2FieldIdResponse timestampField;

    public GooglePrivacyDlpV2FieldIdResponse timestampField() {
        return this.timestampField;
    }

    private GooglePrivacyDlpV2TimespanConfigResponse() {}

    private GooglePrivacyDlpV2TimespanConfigResponse(GooglePrivacyDlpV2TimespanConfigResponse $) {
        this.enableAutoPopulationOfTimespanConfig = $.enableAutoPopulationOfTimespanConfig;
        this.endTime = $.endTime;
        this.startTime = $.startTime;
        this.timestampField = $.timestampField;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GooglePrivacyDlpV2TimespanConfigResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GooglePrivacyDlpV2TimespanConfigResponse $;

        public Builder() {
            $ = new GooglePrivacyDlpV2TimespanConfigResponse();
        }

        public Builder(GooglePrivacyDlpV2TimespanConfigResponse defaults) {
            $ = new GooglePrivacyDlpV2TimespanConfigResponse(Objects.requireNonNull(defaults));
        }

        public Builder enableAutoPopulationOfTimespanConfig(Boolean enableAutoPopulationOfTimespanConfig) {
            $.enableAutoPopulationOfTimespanConfig = enableAutoPopulationOfTimespanConfig;
            return this;
        }

        public Builder endTime(String endTime) {
            $.endTime = endTime;
            return this;
        }

        public Builder startTime(String startTime) {
            $.startTime = startTime;
            return this;
        }

        public Builder timestampField(GooglePrivacyDlpV2FieldIdResponse timestampField) {
            $.timestampField = timestampField;
            return this;
        }

        public GooglePrivacyDlpV2TimespanConfigResponse build() {
            $.enableAutoPopulationOfTimespanConfig = Objects.requireNonNull($.enableAutoPopulationOfTimespanConfig, "expected parameter 'enableAutoPopulationOfTimespanConfig' to be non-null");
            $.endTime = Objects.requireNonNull($.endTime, "expected parameter 'endTime' to be non-null");
            $.startTime = Objects.requireNonNull($.startTime, "expected parameter 'startTime' to be non-null");
            $.timestampField = Objects.requireNonNull($.timestampField, "expected parameter 'timestampField' to be non-null");
            return $;
        }
    }

}
