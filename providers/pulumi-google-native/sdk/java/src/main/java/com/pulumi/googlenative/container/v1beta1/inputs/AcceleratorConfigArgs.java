// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.container.v1beta1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.container.v1beta1.inputs.GPUSharingConfigArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * AcceleratorConfig represents a Hardware Accelerator request.
 * 
 */
public final class AcceleratorConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final AcceleratorConfigArgs Empty = new AcceleratorConfigArgs();

    /**
     * The number of the accelerator cards exposed to an instance.
     * 
     */
    @Import(name="acceleratorCount")
    private @Nullable Output<String> acceleratorCount;

    /**
     * @return The number of the accelerator cards exposed to an instance.
     * 
     */
    public Optional<Output<String>> acceleratorCount() {
        return Optional.ofNullable(this.acceleratorCount);
    }

    /**
     * The accelerator type resource name. List of supported accelerators [here](https://cloud.google.com/compute/docs/gpus)
     * 
     */
    @Import(name="acceleratorType")
    private @Nullable Output<String> acceleratorType;

    /**
     * @return The accelerator type resource name. List of supported accelerators [here](https://cloud.google.com/compute/docs/gpus)
     * 
     */
    public Optional<Output<String>> acceleratorType() {
        return Optional.ofNullable(this.acceleratorType);
    }

    /**
     * Size of partitions to create on the GPU. Valid values are described in the NVIDIA [mig user guide](https://docs.nvidia.com/datacenter/tesla/mig-user-guide/#partitioning).
     * 
     */
    @Import(name="gpuPartitionSize")
    private @Nullable Output<String> gpuPartitionSize;

    /**
     * @return Size of partitions to create on the GPU. Valid values are described in the NVIDIA [mig user guide](https://docs.nvidia.com/datacenter/tesla/mig-user-guide/#partitioning).
     * 
     */
    public Optional<Output<String>> gpuPartitionSize() {
        return Optional.ofNullable(this.gpuPartitionSize);
    }

    /**
     * The configuration for GPU sharing options.
     * 
     */
    @Import(name="gpuSharingConfig")
    private @Nullable Output<GPUSharingConfigArgs> gpuSharingConfig;

    /**
     * @return The configuration for GPU sharing options.
     * 
     */
    public Optional<Output<GPUSharingConfigArgs>> gpuSharingConfig() {
        return Optional.ofNullable(this.gpuSharingConfig);
    }

    /**
     * The number of time-shared GPU resources to expose for each physical GPU.
     * 
     */
    @Import(name="maxTimeSharedClientsPerGpu")
    private @Nullable Output<String> maxTimeSharedClientsPerGpu;

    /**
     * @return The number of time-shared GPU resources to expose for each physical GPU.
     * 
     */
    public Optional<Output<String>> maxTimeSharedClientsPerGpu() {
        return Optional.ofNullable(this.maxTimeSharedClientsPerGpu);
    }

    private AcceleratorConfigArgs() {}

    private AcceleratorConfigArgs(AcceleratorConfigArgs $) {
        this.acceleratorCount = $.acceleratorCount;
        this.acceleratorType = $.acceleratorType;
        this.gpuPartitionSize = $.gpuPartitionSize;
        this.gpuSharingConfig = $.gpuSharingConfig;
        this.maxTimeSharedClientsPerGpu = $.maxTimeSharedClientsPerGpu;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AcceleratorConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AcceleratorConfigArgs $;

        public Builder() {
            $ = new AcceleratorConfigArgs();
        }

        public Builder(AcceleratorConfigArgs defaults) {
            $ = new AcceleratorConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param acceleratorCount The number of the accelerator cards exposed to an instance.
         * 
         * @return builder
         * 
         */
        public Builder acceleratorCount(@Nullable Output<String> acceleratorCount) {
            $.acceleratorCount = acceleratorCount;
            return this;
        }

        /**
         * @param acceleratorCount The number of the accelerator cards exposed to an instance.
         * 
         * @return builder
         * 
         */
        public Builder acceleratorCount(String acceleratorCount) {
            return acceleratorCount(Output.of(acceleratorCount));
        }

        /**
         * @param acceleratorType The accelerator type resource name. List of supported accelerators [here](https://cloud.google.com/compute/docs/gpus)
         * 
         * @return builder
         * 
         */
        public Builder acceleratorType(@Nullable Output<String> acceleratorType) {
            $.acceleratorType = acceleratorType;
            return this;
        }

        /**
         * @param acceleratorType The accelerator type resource name. List of supported accelerators [here](https://cloud.google.com/compute/docs/gpus)
         * 
         * @return builder
         * 
         */
        public Builder acceleratorType(String acceleratorType) {
            return acceleratorType(Output.of(acceleratorType));
        }

        /**
         * @param gpuPartitionSize Size of partitions to create on the GPU. Valid values are described in the NVIDIA [mig user guide](https://docs.nvidia.com/datacenter/tesla/mig-user-guide/#partitioning).
         * 
         * @return builder
         * 
         */
        public Builder gpuPartitionSize(@Nullable Output<String> gpuPartitionSize) {
            $.gpuPartitionSize = gpuPartitionSize;
            return this;
        }

        /**
         * @param gpuPartitionSize Size of partitions to create on the GPU. Valid values are described in the NVIDIA [mig user guide](https://docs.nvidia.com/datacenter/tesla/mig-user-guide/#partitioning).
         * 
         * @return builder
         * 
         */
        public Builder gpuPartitionSize(String gpuPartitionSize) {
            return gpuPartitionSize(Output.of(gpuPartitionSize));
        }

        /**
         * @param gpuSharingConfig The configuration for GPU sharing options.
         * 
         * @return builder
         * 
         */
        public Builder gpuSharingConfig(@Nullable Output<GPUSharingConfigArgs> gpuSharingConfig) {
            $.gpuSharingConfig = gpuSharingConfig;
            return this;
        }

        /**
         * @param gpuSharingConfig The configuration for GPU sharing options.
         * 
         * @return builder
         * 
         */
        public Builder gpuSharingConfig(GPUSharingConfigArgs gpuSharingConfig) {
            return gpuSharingConfig(Output.of(gpuSharingConfig));
        }

        /**
         * @param maxTimeSharedClientsPerGpu The number of time-shared GPU resources to expose for each physical GPU.
         * 
         * @return builder
         * 
         */
        public Builder maxTimeSharedClientsPerGpu(@Nullable Output<String> maxTimeSharedClientsPerGpu) {
            $.maxTimeSharedClientsPerGpu = maxTimeSharedClientsPerGpu;
            return this;
        }

        /**
         * @param maxTimeSharedClientsPerGpu The number of time-shared GPU resources to expose for each physical GPU.
         * 
         * @return builder
         * 
         */
        public Builder maxTimeSharedClientsPerGpu(String maxTimeSharedClientsPerGpu) {
            return maxTimeSharedClientsPerGpu(Output.of(maxTimeSharedClientsPerGpu));
        }

        public AcceleratorConfigArgs build() {
            return $;
        }
    }

}
