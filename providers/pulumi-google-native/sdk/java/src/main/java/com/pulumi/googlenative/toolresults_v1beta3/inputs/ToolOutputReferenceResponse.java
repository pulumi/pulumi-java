// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.toolresults_v1beta3.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.toolresults_v1beta3.inputs.FileReferenceResponse;
import com.pulumi.googlenative.toolresults_v1beta3.inputs.TestCaseReferenceResponse;
import com.pulumi.googlenative.toolresults_v1beta3.inputs.TimestampResponse;
import java.util.Objects;


/**
 * A reference to a ToolExecution output file.
 * 
 */
public final class ToolOutputReferenceResponse extends com.pulumi.resources.InvokeArgs {

    public static final ToolOutputReferenceResponse Empty = new ToolOutputReferenceResponse();

    /**
     * The creation time of the file. - In response: present if set by create/update request - In create/update request: optional
     * 
     */
    @Import(name="creationTime", required=true)
    private TimestampResponse creationTime;

    public TimestampResponse creationTime() {
        return this.creationTime;
    }

    /**
     * A FileReference to an output file. - In response: always set - In create/update request: always set
     * 
     */
    @Import(name="output", required=true)
    private FileReferenceResponse output;

    public FileReferenceResponse output() {
        return this.output;
    }

    /**
     * The test case to which this output file belongs. - In response: present if set by create/update request - In create/update request: optional
     * 
     */
    @Import(name="testCase", required=true)
    private TestCaseReferenceResponse testCase;

    public TestCaseReferenceResponse testCase() {
        return this.testCase;
    }

    private ToolOutputReferenceResponse() {}

    private ToolOutputReferenceResponse(ToolOutputReferenceResponse $) {
        this.creationTime = $.creationTime;
        this.output = $.output;
        this.testCase = $.testCase;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ToolOutputReferenceResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ToolOutputReferenceResponse $;

        public Builder() {
            $ = new ToolOutputReferenceResponse();
        }

        public Builder(ToolOutputReferenceResponse defaults) {
            $ = new ToolOutputReferenceResponse(Objects.requireNonNull(defaults));
        }

        public Builder creationTime(TimestampResponse creationTime) {
            $.creationTime = creationTime;
            return this;
        }

        public Builder output(FileReferenceResponse output) {
            $.output = output;
            return this;
        }

        public Builder testCase(TestCaseReferenceResponse testCase) {
            $.testCase = testCase;
            return this;
        }

        public ToolOutputReferenceResponse build() {
            $.creationTime = Objects.requireNonNull($.creationTime, "expected parameter 'creationTime' to be non-null");
            $.output = Objects.requireNonNull($.output, "expected parameter 'output' to be non-null");
            $.testCase = Objects.requireNonNull($.testCase, "expected parameter 'testCase' to be non-null");
            return $;
        }
    }

}
