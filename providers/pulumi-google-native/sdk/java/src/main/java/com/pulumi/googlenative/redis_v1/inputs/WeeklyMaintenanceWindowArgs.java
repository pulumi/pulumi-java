// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.redis_v1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.redis_v1.enums.WeeklyMaintenanceWindowDay;
import com.pulumi.googlenative.redis_v1.inputs.TimeOfDayArgs;
import java.util.Objects;


/**
 * Time window in which disruptive maintenance updates occur. Non-disruptive updates can occur inside or outside this window.
 * 
 */
public final class WeeklyMaintenanceWindowArgs extends com.pulumi.resources.ResourceArgs {

    public static final WeeklyMaintenanceWindowArgs Empty = new WeeklyMaintenanceWindowArgs();

    /**
     * The day of week that maintenance updates occur.
     * 
     */
    @Import(name="day", required=true)
    private Output<WeeklyMaintenanceWindowDay> day;

    public Output<WeeklyMaintenanceWindowDay> day() {
        return this.day;
    }

    /**
     * Start time of the window in UTC time.
     * 
     */
    @Import(name="startTime", required=true)
    private Output<TimeOfDayArgs> startTime;

    public Output<TimeOfDayArgs> startTime() {
        return this.startTime;
    }

    private WeeklyMaintenanceWindowArgs() {}

    private WeeklyMaintenanceWindowArgs(WeeklyMaintenanceWindowArgs $) {
        this.day = $.day;
        this.startTime = $.startTime;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WeeklyMaintenanceWindowArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WeeklyMaintenanceWindowArgs $;

        public Builder() {
            $ = new WeeklyMaintenanceWindowArgs();
        }

        public Builder(WeeklyMaintenanceWindowArgs defaults) {
            $ = new WeeklyMaintenanceWindowArgs(Objects.requireNonNull(defaults));
        }

        public Builder day(Output<WeeklyMaintenanceWindowDay> day) {
            $.day = day;
            return this;
        }

        public Builder day(WeeklyMaintenanceWindowDay day) {
            return day(Output.of(day));
        }

        public Builder startTime(Output<TimeOfDayArgs> startTime) {
            $.startTime = startTime;
            return this;
        }

        public Builder startTime(TimeOfDayArgs startTime) {
            return startTime(Output.of(startTime));
        }

        public WeeklyMaintenanceWindowArgs build() {
            $.day = Objects.requireNonNull($.day, "expected parameter 'day' to be non-null");
            $.startTime = Objects.requireNonNull($.startTime, "expected parameter 'startTime' to be non-null");
            return $;
        }
    }

}
