// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.networkmanagement_v1beta1.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;


/**
 * Latency percentile rank and value.
 * 
 */
public final class LatencyPercentileResponse extends com.pulumi.resources.InvokeArgs {

    public static final LatencyPercentileResponse Empty = new LatencyPercentileResponse();

    /**
     * percent-th percentile of latency observed, in microseconds. Fraction of percent/100 of samples have latency lower or equal to the value of this field.
     * 
     */
    @Import(name="latencyMicros", required=true)
    private String latencyMicros;

    public String latencyMicros() {
        return this.latencyMicros;
    }

    /**
     * Percentage of samples this data point applies to.
     * 
     */
    @Import(name="percent", required=true)
    private Integer percent;

    public Integer percent() {
        return this.percent;
    }

    private LatencyPercentileResponse() {}

    private LatencyPercentileResponse(LatencyPercentileResponse $) {
        this.latencyMicros = $.latencyMicros;
        this.percent = $.percent;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LatencyPercentileResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LatencyPercentileResponse $;

        public Builder() {
            $ = new LatencyPercentileResponse();
        }

        public Builder(LatencyPercentileResponse defaults) {
            $ = new LatencyPercentileResponse(Objects.requireNonNull(defaults));
        }

        public Builder latencyMicros(String latencyMicros) {
            $.latencyMicros = latencyMicros;
            return this;
        }

        public Builder percent(Integer percent) {
            $.percent = percent;
            return this;
        }

        public LatencyPercentileResponse build() {
            $.latencyMicros = Objects.requireNonNull($.latencyMicros, "expected parameter 'latencyMicros' to be non-null");
            $.percent = Objects.requireNonNull($.percent, "expected parameter 'percent' to be non-null");
            return $;
        }
    }

}
