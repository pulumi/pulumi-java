// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.contactcenterinsights.v1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.contactcenterinsights.v1.inputs.GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfigArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The data for a phrase match rule.
 * 
 */
public final class GoogleCloudContactcenterinsightsV1PhraseMatchRuleArgs extends com.pulumi.resources.ResourceArgs {

    public static final GoogleCloudContactcenterinsightsV1PhraseMatchRuleArgs Empty = new GoogleCloudContactcenterinsightsV1PhraseMatchRuleArgs();

    /**
     * Provides additional information about the rule that specifies how to apply the rule.
     * 
     */
    @Import(name="config")
    private @Nullable Output<GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfigArgs> config;

    /**
     * @return Provides additional information about the rule that specifies how to apply the rule.
     * 
     */
    public Optional<Output<GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfigArgs>> config() {
        return Optional.ofNullable(this.config);
    }

    /**
     * Specifies whether the phrase must be missing from the transcript segment or present in the transcript segment.
     * 
     */
    @Import(name="negated")
    private @Nullable Output<Boolean> negated;

    /**
     * @return Specifies whether the phrase must be missing from the transcript segment or present in the transcript segment.
     * 
     */
    public Optional<Output<Boolean>> negated() {
        return Optional.ofNullable(this.negated);
    }

    /**
     * The phrase to be matched.
     * 
     */
    @Import(name="query", required=true)
    private Output<String> query;

    /**
     * @return The phrase to be matched.
     * 
     */
    public Output<String> query() {
        return this.query;
    }

    private GoogleCloudContactcenterinsightsV1PhraseMatchRuleArgs() {}

    private GoogleCloudContactcenterinsightsV1PhraseMatchRuleArgs(GoogleCloudContactcenterinsightsV1PhraseMatchRuleArgs $) {
        this.config = $.config;
        this.negated = $.negated;
        this.query = $.query;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GoogleCloudContactcenterinsightsV1PhraseMatchRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GoogleCloudContactcenterinsightsV1PhraseMatchRuleArgs $;

        public Builder() {
            $ = new GoogleCloudContactcenterinsightsV1PhraseMatchRuleArgs();
        }

        public Builder(GoogleCloudContactcenterinsightsV1PhraseMatchRuleArgs defaults) {
            $ = new GoogleCloudContactcenterinsightsV1PhraseMatchRuleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param config Provides additional information about the rule that specifies how to apply the rule.
         * 
         * @return builder
         * 
         */
        public Builder config(@Nullable Output<GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfigArgs> config) {
            $.config = config;
            return this;
        }

        /**
         * @param config Provides additional information about the rule that specifies how to apply the rule.
         * 
         * @return builder
         * 
         */
        public Builder config(GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfigArgs config) {
            return config(Output.of(config));
        }

        /**
         * @param negated Specifies whether the phrase must be missing from the transcript segment or present in the transcript segment.
         * 
         * @return builder
         * 
         */
        public Builder negated(@Nullable Output<Boolean> negated) {
            $.negated = negated;
            return this;
        }

        /**
         * @param negated Specifies whether the phrase must be missing from the transcript segment or present in the transcript segment.
         * 
         * @return builder
         * 
         */
        public Builder negated(Boolean negated) {
            return negated(Output.of(negated));
        }

        /**
         * @param query The phrase to be matched.
         * 
         * @return builder
         * 
         */
        public Builder query(Output<String> query) {
            $.query = query;
            return this;
        }

        /**
         * @param query The phrase to be matched.
         * 
         * @return builder
         * 
         */
        public Builder query(String query) {
            return query(Output.of(query));
        }

        public GoogleCloudContactcenterinsightsV1PhraseMatchRuleArgs build() {
            $.query = Objects.requireNonNull($.query, "expected parameter 'query' to be non-null");
            return $;
        }
    }

}
