// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.datastream_v1alpha1.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.datastream_v1alpha1.inputs.OracleSchemaResponse;
import java.util.List;
import java.util.Objects;


/**
 * Oracle database structure.
 * 
 */
public final class OracleRdbmsResponse extends com.pulumi.resources.InvokeArgs {

    public static final OracleRdbmsResponse Empty = new OracleRdbmsResponse();

    /**
     * Oracle schemas/databases in the database server.
     * 
     */
    @Import(name="oracleSchemas", required=true)
    private List<OracleSchemaResponse> oracleSchemas;

    public List<OracleSchemaResponse> oracleSchemas() {
        return this.oracleSchemas;
    }

    private OracleRdbmsResponse() {}

    private OracleRdbmsResponse(OracleRdbmsResponse $) {
        this.oracleSchemas = $.oracleSchemas;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OracleRdbmsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OracleRdbmsResponse $;

        public Builder() {
            $ = new OracleRdbmsResponse();
        }

        public Builder(OracleRdbmsResponse defaults) {
            $ = new OracleRdbmsResponse(Objects.requireNonNull(defaults));
        }

        public Builder oracleSchemas(List<OracleSchemaResponse> oracleSchemas) {
            $.oracleSchemas = oracleSchemas;
            return this;
        }

        public Builder oracleSchemas(OracleSchemaResponse... oracleSchemas) {
            return oracleSchemas(List.of(oracleSchemas));
        }

        public OracleRdbmsResponse build() {
            $.oracleSchemas = Objects.requireNonNull($.oracleSchemas, "expected parameter 'oracleSchemas' to be non-null");
            return $;
        }
    }

}
