// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.containeranalysis_v1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import com.pulumi.googlenative.containeranalysis_v1.inputs.CloudRepoSourceContextArgs;
import com.pulumi.googlenative.containeranalysis_v1.inputs.GerritSourceContextArgs;
import com.pulumi.googlenative.containeranalysis_v1.inputs.GitSourceContextArgs;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * A SourceContext is a reference to a tree of files. A SourceContext together with a path point to a unique revision of a single file or directory.
 * 
 */
public final class SourceContextArgs extends com.pulumi.resources.ResourceArgs {

    public static final SourceContextArgs Empty = new SourceContextArgs();

    /**
     * A SourceContext referring to a revision in a Google Cloud Source Repo.
     * 
     */
    @Import(name="cloudRepo")
      private final @Nullable Output<CloudRepoSourceContextArgs> cloudRepo;

    public Output<CloudRepoSourceContextArgs> cloudRepo() {
        return this.cloudRepo == null ? Codegen.empty() : this.cloudRepo;
    }

    /**
     * A SourceContext referring to a Gerrit project.
     * 
     */
    @Import(name="gerrit")
      private final @Nullable Output<GerritSourceContextArgs> gerrit;

    public Output<GerritSourceContextArgs> gerrit() {
        return this.gerrit == null ? Codegen.empty() : this.gerrit;
    }

    /**
     * A SourceContext referring to any third party Git repo (e.g., GitHub).
     * 
     */
    @Import(name="git")
      private final @Nullable Output<GitSourceContextArgs> git;

    public Output<GitSourceContextArgs> git() {
        return this.git == null ? Codegen.empty() : this.git;
    }

    /**
     * Labels with user defined metadata.
     * 
     */
    @Import(name="labels")
      private final @Nullable Output<Map<String,String>> labels;

    public Output<Map<String,String>> labels() {
        return this.labels == null ? Codegen.empty() : this.labels;
    }

    public SourceContextArgs(
        @Nullable Output<CloudRepoSourceContextArgs> cloudRepo,
        @Nullable Output<GerritSourceContextArgs> gerrit,
        @Nullable Output<GitSourceContextArgs> git,
        @Nullable Output<Map<String,String>> labels) {
        this.cloudRepo = cloudRepo;
        this.gerrit = gerrit;
        this.git = git;
        this.labels = labels;
    }

    private SourceContextArgs() {
        this.cloudRepo = Codegen.empty();
        this.gerrit = Codegen.empty();
        this.git = Codegen.empty();
        this.labels = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SourceContextArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<CloudRepoSourceContextArgs> cloudRepo;
        private @Nullable Output<GerritSourceContextArgs> gerrit;
        private @Nullable Output<GitSourceContextArgs> git;
        private @Nullable Output<Map<String,String>> labels;

        public Builder() {
    	      // Empty
        }

        public Builder(SourceContextArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cloudRepo = defaults.cloudRepo;
    	      this.gerrit = defaults.gerrit;
    	      this.git = defaults.git;
    	      this.labels = defaults.labels;
        }

        public Builder cloudRepo(@Nullable Output<CloudRepoSourceContextArgs> cloudRepo) {
            this.cloudRepo = cloudRepo;
            return this;
        }
        public Builder cloudRepo(@Nullable CloudRepoSourceContextArgs cloudRepo) {
            this.cloudRepo = Codegen.ofNullable(cloudRepo);
            return this;
        }
        public Builder gerrit(@Nullable Output<GerritSourceContextArgs> gerrit) {
            this.gerrit = gerrit;
            return this;
        }
        public Builder gerrit(@Nullable GerritSourceContextArgs gerrit) {
            this.gerrit = Codegen.ofNullable(gerrit);
            return this;
        }
        public Builder git(@Nullable Output<GitSourceContextArgs> git) {
            this.git = git;
            return this;
        }
        public Builder git(@Nullable GitSourceContextArgs git) {
            this.git = Codegen.ofNullable(git);
            return this;
        }
        public Builder labels(@Nullable Output<Map<String,String>> labels) {
            this.labels = labels;
            return this;
        }
        public Builder labels(@Nullable Map<String,String> labels) {
            this.labels = Codegen.ofNullable(labels);
            return this;
        }        public SourceContextArgs build() {
            return new SourceContextArgs(cloudRepo, gerrit, git, labels);
        }
    }
}
