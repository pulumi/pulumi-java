// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.monitoring.v1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * A widget that displays a stream of log.
 * 
 */
public final class LogsPanelArgs extends com.pulumi.resources.ResourceArgs {

    public static final LogsPanelArgs Empty = new LogsPanelArgs();

    /**
     * A filter that chooses which log entries to return. See Advanced Logs Queries (https://cloud.google.com/logging/docs/view/advanced-queries). Only log entries that match the filter are returned. An empty filter matches all log entries.
     * 
     */
    @Import(name="filter")
    private @Nullable Output<String> filter;

    /**
     * @return A filter that chooses which log entries to return. See Advanced Logs Queries (https://cloud.google.com/logging/docs/view/advanced-queries). Only log entries that match the filter are returned. An empty filter matches all log entries.
     * 
     */
    public Optional<Output<String>> filter() {
        return Optional.ofNullable(this.filter);
    }

    /**
     * The names of logging resources to collect logs for. Currently only projects are supported. If empty, the widget will default to the host project.
     * 
     */
    @Import(name="resourceNames")
    private @Nullable Output<List<String>> resourceNames;

    /**
     * @return The names of logging resources to collect logs for. Currently only projects are supported. If empty, the widget will default to the host project.
     * 
     */
    public Optional<Output<List<String>>> resourceNames() {
        return Optional.ofNullable(this.resourceNames);
    }

    private LogsPanelArgs() {}

    private LogsPanelArgs(LogsPanelArgs $) {
        this.filter = $.filter;
        this.resourceNames = $.resourceNames;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LogsPanelArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LogsPanelArgs $;

        public Builder() {
            $ = new LogsPanelArgs();
        }

        public Builder(LogsPanelArgs defaults) {
            $ = new LogsPanelArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param filter A filter that chooses which log entries to return. See Advanced Logs Queries (https://cloud.google.com/logging/docs/view/advanced-queries). Only log entries that match the filter are returned. An empty filter matches all log entries.
         * 
         * @return builder
         * 
         */
        public Builder filter(@Nullable Output<String> filter) {
            $.filter = filter;
            return this;
        }

        /**
         * @param filter A filter that chooses which log entries to return. See Advanced Logs Queries (https://cloud.google.com/logging/docs/view/advanced-queries). Only log entries that match the filter are returned. An empty filter matches all log entries.
         * 
         * @return builder
         * 
         */
        public Builder filter(String filter) {
            return filter(Output.of(filter));
        }

        /**
         * @param resourceNames The names of logging resources to collect logs for. Currently only projects are supported. If empty, the widget will default to the host project.
         * 
         * @return builder
         * 
         */
        public Builder resourceNames(@Nullable Output<List<String>> resourceNames) {
            $.resourceNames = resourceNames;
            return this;
        }

        /**
         * @param resourceNames The names of logging resources to collect logs for. Currently only projects are supported. If empty, the widget will default to the host project.
         * 
         * @return builder
         * 
         */
        public Builder resourceNames(List<String> resourceNames) {
            return resourceNames(Output.of(resourceNames));
        }

        /**
         * @param resourceNames The names of logging resources to collect logs for. Currently only projects are supported. If empty, the widget will default to the host project.
         * 
         * @return builder
         * 
         */
        public Builder resourceNames(String... resourceNames) {
            return resourceNames(List.of(resourceNames));
        }

        public LogsPanelArgs build() {
            return $;
        }
    }

}
