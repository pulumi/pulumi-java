// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.contactcenterinsights_v1.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * Configs for the input data used to create the issue model.
 * 
 */
public final class GoogleCloudContactcenterinsightsV1IssueModelInputDataConfigResponse extends com.pulumi.resources.InvokeArgs {

    public static final GoogleCloudContactcenterinsightsV1IssueModelInputDataConfigResponse Empty = new GoogleCloudContactcenterinsightsV1IssueModelInputDataConfigResponse();

    /**
     * A filter to reduce the conversations used for training the model to a specific subset.
     * 
     */
    @Import(name="filter", required=true)
    private String filter;

    /**
     * @return A filter to reduce the conversations used for training the model to a specific subset.
     * 
     */
    public String filter() {
        return this.filter;
    }

    /**
     * Medium of conversations used in training data. This field is being deprecated. To specify the medium to be used in training a new issue model, set the `medium` field on `filter`.
     * 
     */
    @Import(name="medium", required=true)
    private String medium;

    /**
     * @return Medium of conversations used in training data. This field is being deprecated. To specify the medium to be used in training a new issue model, set the `medium` field on `filter`.
     * 
     */
    public String medium() {
        return this.medium;
    }

    /**
     * Number of conversations used in training. Output only.
     * 
     */
    @Import(name="trainingConversationsCount", required=true)
    private String trainingConversationsCount;

    /**
     * @return Number of conversations used in training. Output only.
     * 
     */
    public String trainingConversationsCount() {
        return this.trainingConversationsCount;
    }

    private GoogleCloudContactcenterinsightsV1IssueModelInputDataConfigResponse() {}

    private GoogleCloudContactcenterinsightsV1IssueModelInputDataConfigResponse(GoogleCloudContactcenterinsightsV1IssueModelInputDataConfigResponse $) {
        this.filter = $.filter;
        this.medium = $.medium;
        this.trainingConversationsCount = $.trainingConversationsCount;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GoogleCloudContactcenterinsightsV1IssueModelInputDataConfigResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GoogleCloudContactcenterinsightsV1IssueModelInputDataConfigResponse $;

        public Builder() {
            $ = new GoogleCloudContactcenterinsightsV1IssueModelInputDataConfigResponse();
        }

        public Builder(GoogleCloudContactcenterinsightsV1IssueModelInputDataConfigResponse defaults) {
            $ = new GoogleCloudContactcenterinsightsV1IssueModelInputDataConfigResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param filter A filter to reduce the conversations used for training the model to a specific subset.
         * 
         * @return builder
         * 
         */
        public Builder filter(String filter) {
            $.filter = filter;
            return this;
        }

        /**
         * @param medium Medium of conversations used in training data. This field is being deprecated. To specify the medium to be used in training a new issue model, set the `medium` field on `filter`.
         * 
         * @return builder
         * 
         */
        public Builder medium(String medium) {
            $.medium = medium;
            return this;
        }

        /**
         * @param trainingConversationsCount Number of conversations used in training. Output only.
         * 
         * @return builder
         * 
         */
        public Builder trainingConversationsCount(String trainingConversationsCount) {
            $.trainingConversationsCount = trainingConversationsCount;
            return this;
        }

        public GoogleCloudContactcenterinsightsV1IssueModelInputDataConfigResponse build() {
            $.filter = Objects.requireNonNull($.filter, "expected parameter 'filter' to be non-null");
            $.medium = Objects.requireNonNull($.medium, "expected parameter 'medium' to be non-null");
            $.trainingConversationsCount = Objects.requireNonNull($.trainingConversationsCount, "expected parameter 'trainingConversationsCount' to be non-null");
            return $;
        }
    }

}
