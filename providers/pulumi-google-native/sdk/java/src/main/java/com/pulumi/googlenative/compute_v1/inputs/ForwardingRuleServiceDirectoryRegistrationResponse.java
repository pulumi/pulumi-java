// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.compute_v1.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * Describes the auto-registration of the Forwarding Rule to Service Directory. The region and project of the Service Directory resource generated from this registration will be the same as this Forwarding Rule.
 * 
 */
public final class ForwardingRuleServiceDirectoryRegistrationResponse extends com.pulumi.resources.InvokeArgs {

    public static final ForwardingRuleServiceDirectoryRegistrationResponse Empty = new ForwardingRuleServiceDirectoryRegistrationResponse();

    /**
     * Service Directory namespace to register the forwarding rule under.
     * 
     */
    @Import(name="namespace", required=true)
    private String namespace;

    /**
     * @return Service Directory namespace to register the forwarding rule under.
     * 
     */
    public String namespace() {
        return this.namespace;
    }

    /**
     * Service Directory service to register the forwarding rule under.
     * 
     */
    @Import(name="service", required=true)
    private String service;

    /**
     * @return Service Directory service to register the forwarding rule under.
     * 
     */
    public String service() {
        return this.service;
    }

    /**
     * [Optional] Service Directory region to register this global forwarding rule under. Default to &#34;us-central1&#34;. Only used for PSC for Google APIs. All PSC for Google APIs Forwarding Rules on the same network should use the same Service Directory region.
     * 
     */
    @Import(name="serviceDirectoryRegion", required=true)
    private String serviceDirectoryRegion;

    /**
     * @return [Optional] Service Directory region to register this global forwarding rule under. Default to &#34;us-central1&#34;. Only used for PSC for Google APIs. All PSC for Google APIs Forwarding Rules on the same network should use the same Service Directory region.
     * 
     */
    public String serviceDirectoryRegion() {
        return this.serviceDirectoryRegion;
    }

    private ForwardingRuleServiceDirectoryRegistrationResponse() {}

    private ForwardingRuleServiceDirectoryRegistrationResponse(ForwardingRuleServiceDirectoryRegistrationResponse $) {
        this.namespace = $.namespace;
        this.service = $.service;
        this.serviceDirectoryRegion = $.serviceDirectoryRegion;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ForwardingRuleServiceDirectoryRegistrationResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ForwardingRuleServiceDirectoryRegistrationResponse $;

        public Builder() {
            $ = new ForwardingRuleServiceDirectoryRegistrationResponse();
        }

        public Builder(ForwardingRuleServiceDirectoryRegistrationResponse defaults) {
            $ = new ForwardingRuleServiceDirectoryRegistrationResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param namespace Service Directory namespace to register the forwarding rule under.
         * 
         * @return builder
         * 
         */
        public Builder namespace(String namespace) {
            $.namespace = namespace;
            return this;
        }

        /**
         * @param service Service Directory service to register the forwarding rule under.
         * 
         * @return builder
         * 
         */
        public Builder service(String service) {
            $.service = service;
            return this;
        }

        /**
         * @param serviceDirectoryRegion [Optional] Service Directory region to register this global forwarding rule under. Default to &#34;us-central1&#34;. Only used for PSC for Google APIs. All PSC for Google APIs Forwarding Rules on the same network should use the same Service Directory region.
         * 
         * @return builder
         * 
         */
        public Builder serviceDirectoryRegion(String serviceDirectoryRegion) {
            $.serviceDirectoryRegion = serviceDirectoryRegion;
            return this;
        }

        public ForwardingRuleServiceDirectoryRegistrationResponse build() {
            $.namespace = Objects.requireNonNull($.namespace, "expected parameter 'namespace' to be non-null");
            $.service = Objects.requireNonNull($.service, "expected parameter 'service' to be non-null");
            $.serviceDirectoryRegion = Objects.requireNonNull($.serviceDirectoryRegion, "expected parameter 'serviceDirectoryRegion' to be non-null");
            return $;
        }
    }

}
