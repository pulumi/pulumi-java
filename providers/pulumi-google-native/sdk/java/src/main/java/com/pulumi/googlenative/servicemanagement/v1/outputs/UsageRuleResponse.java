// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.servicemanagement.v1.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class UsageRuleResponse {
    /**
     * @return If true, the selected method allows unregistered calls, e.g. calls that don&#39;t identify any user or application.
     * 
     */
    private final Boolean allowUnregisteredCalls;
    /**
     * @return Selects the methods to which this rule applies. Use &#39;*&#39; to indicate all methods in all APIs. Refer to selector for syntax details.
     * 
     */
    private final String selector;
    /**
     * @return If true, the selected method should skip service control and the control plane features, such as quota and billing, will not be available. This flag is used by Google Cloud Endpoints to bypass checks for internal methods, such as service health check methods.
     * 
     */
    private final Boolean skipServiceControl;

    @CustomType.Constructor
    private UsageRuleResponse(
        @CustomType.Parameter("allowUnregisteredCalls") Boolean allowUnregisteredCalls,
        @CustomType.Parameter("selector") String selector,
        @CustomType.Parameter("skipServiceControl") Boolean skipServiceControl) {
        this.allowUnregisteredCalls = allowUnregisteredCalls;
        this.selector = selector;
        this.skipServiceControl = skipServiceControl;
    }

    /**
     * @return If true, the selected method allows unregistered calls, e.g. calls that don&#39;t identify any user or application.
     * 
     */
    public Boolean allowUnregisteredCalls() {
        return this.allowUnregisteredCalls;
    }
    /**
     * @return Selects the methods to which this rule applies. Use &#39;*&#39; to indicate all methods in all APIs. Refer to selector for syntax details.
     * 
     */
    public String selector() {
        return this.selector;
    }
    /**
     * @return If true, the selected method should skip service control and the control plane features, such as quota and billing, will not be available. This flag is used by Google Cloud Endpoints to bypass checks for internal methods, such as service health check methods.
     * 
     */
    public Boolean skipServiceControl() {
        return this.skipServiceControl;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(UsageRuleResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Boolean allowUnregisteredCalls;
        private String selector;
        private Boolean skipServiceControl;

        public Builder() {
    	      // Empty
        }

        public Builder(UsageRuleResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allowUnregisteredCalls = defaults.allowUnregisteredCalls;
    	      this.selector = defaults.selector;
    	      this.skipServiceControl = defaults.skipServiceControl;
        }

        public Builder allowUnregisteredCalls(Boolean allowUnregisteredCalls) {
            this.allowUnregisteredCalls = Objects.requireNonNull(allowUnregisteredCalls);
            return this;
        }
        public Builder selector(String selector) {
            this.selector = Objects.requireNonNull(selector);
            return this;
        }
        public Builder skipServiceControl(Boolean skipServiceControl) {
            this.skipServiceControl = Objects.requireNonNull(skipServiceControl);
            return this;
        }        public UsageRuleResponse build() {
            return new UsageRuleResponse(allowUnregisteredCalls, selector, skipServiceControl);
        }
    }
}
