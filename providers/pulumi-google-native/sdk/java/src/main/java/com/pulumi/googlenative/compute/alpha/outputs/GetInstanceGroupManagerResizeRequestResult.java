// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.compute.alpha.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.googlenative.compute.alpha.outputs.InstanceGroupManagerResizeRequestStatusResponse;
import com.pulumi.googlenative.compute.alpha.outputs.QueuingPolicyResponse;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetInstanceGroupManagerResizeRequestResult {
    /**
     * @return The count of instances to create as part of this resize request.
     * 
     */
    private final Integer count;
    /**
     * @return The creation timestamp for this resize request in RFC3339 text format.
     * 
     */
    private final String creationTimestamp;
    /**
     * @return An optional description of this resource.
     * 
     */
    private final String description;
    /**
     * @return The resource type, which is always compute#instanceGroupManagerResizeRequest for resize requests.
     * 
     */
    private final String kind;
    /**
     * @return The name of this resize request. The name must be 1-63 characters long, and comply with RFC1035.
     * 
     */
    private final String name;
    /**
     * @return When set, defines queing parameters for the requested deferred capacity. When unset, the request starts provisioning immediately, or fails if immediate provisioning is not possible.
     * 
     */
    private final QueuingPolicyResponse queuingPolicy;
    /**
     * @return The URL for this resize request. The server defines this URL.
     * 
     */
    private final String selfLink;
    /**
     * @return Server-defined URL for this resource with the resource id.
     * 
     */
    private final String selfLinkWithId;
    /**
     * @return [Output only] Current state of the request.
     * 
     */
    private final String state;
    /**
     * @return [Output only] Status of the request. The Status message is aligned with QueuedResource.status. ResizeRequest.queuing_policy contains the queuing policy as provided by the user; it could have either valid_until_time or valid_until_duration. ResizeRequest.status.queuing_policy always contains absolute time as calculated by the server when the request is queued.
     * 
     */
    private final InstanceGroupManagerResizeRequestStatusResponse status;
    /**
     * @return The URL of a zone where the resize request is located.
     * 
     */
    private final String zone;

    @CustomType.Constructor
    private GetInstanceGroupManagerResizeRequestResult(
        @CustomType.Parameter("count") Integer count,
        @CustomType.Parameter("creationTimestamp") String creationTimestamp,
        @CustomType.Parameter("description") String description,
        @CustomType.Parameter("kind") String kind,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("queuingPolicy") QueuingPolicyResponse queuingPolicy,
        @CustomType.Parameter("selfLink") String selfLink,
        @CustomType.Parameter("selfLinkWithId") String selfLinkWithId,
        @CustomType.Parameter("state") String state,
        @CustomType.Parameter("status") InstanceGroupManagerResizeRequestStatusResponse status,
        @CustomType.Parameter("zone") String zone) {
        this.count = count;
        this.creationTimestamp = creationTimestamp;
        this.description = description;
        this.kind = kind;
        this.name = name;
        this.queuingPolicy = queuingPolicy;
        this.selfLink = selfLink;
        this.selfLinkWithId = selfLinkWithId;
        this.state = state;
        this.status = status;
        this.zone = zone;
    }

    /**
     * @return The count of instances to create as part of this resize request.
     * 
     */
    public Integer count() {
        return this.count;
    }
    /**
     * @return The creation timestamp for this resize request in RFC3339 text format.
     * 
     */
    public String creationTimestamp() {
        return this.creationTimestamp;
    }
    /**
     * @return An optional description of this resource.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return The resource type, which is always compute#instanceGroupManagerResizeRequest for resize requests.
     * 
     */
    public String kind() {
        return this.kind;
    }
    /**
     * @return The name of this resize request. The name must be 1-63 characters long, and comply with RFC1035.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return When set, defines queing parameters for the requested deferred capacity. When unset, the request starts provisioning immediately, or fails if immediate provisioning is not possible.
     * 
     */
    public QueuingPolicyResponse queuingPolicy() {
        return this.queuingPolicy;
    }
    /**
     * @return The URL for this resize request. The server defines this URL.
     * 
     */
    public String selfLink() {
        return this.selfLink;
    }
    /**
     * @return Server-defined URL for this resource with the resource id.
     * 
     */
    public String selfLinkWithId() {
        return this.selfLinkWithId;
    }
    /**
     * @return [Output only] Current state of the request.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return [Output only] Status of the request. The Status message is aligned with QueuedResource.status. ResizeRequest.queuing_policy contains the queuing policy as provided by the user; it could have either valid_until_time or valid_until_duration. ResizeRequest.status.queuing_policy always contains absolute time as calculated by the server when the request is queued.
     * 
     */
    public InstanceGroupManagerResizeRequestStatusResponse status() {
        return this.status;
    }
    /**
     * @return The URL of a zone where the resize request is located.
     * 
     */
    public String zone() {
        return this.zone;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetInstanceGroupManagerResizeRequestResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Integer count;
        private String creationTimestamp;
        private String description;
        private String kind;
        private String name;
        private QueuingPolicyResponse queuingPolicy;
        private String selfLink;
        private String selfLinkWithId;
        private String state;
        private InstanceGroupManagerResizeRequestStatusResponse status;
        private String zone;

        public Builder() {
    	      // Empty
        }

        public Builder(GetInstanceGroupManagerResizeRequestResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.count = defaults.count;
    	      this.creationTimestamp = defaults.creationTimestamp;
    	      this.description = defaults.description;
    	      this.kind = defaults.kind;
    	      this.name = defaults.name;
    	      this.queuingPolicy = defaults.queuingPolicy;
    	      this.selfLink = defaults.selfLink;
    	      this.selfLinkWithId = defaults.selfLinkWithId;
    	      this.state = defaults.state;
    	      this.status = defaults.status;
    	      this.zone = defaults.zone;
        }

        public Builder count(Integer count) {
            this.count = Objects.requireNonNull(count);
            return this;
        }
        public Builder creationTimestamp(String creationTimestamp) {
            this.creationTimestamp = Objects.requireNonNull(creationTimestamp);
            return this;
        }
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        public Builder kind(String kind) {
            this.kind = Objects.requireNonNull(kind);
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder queuingPolicy(QueuingPolicyResponse queuingPolicy) {
            this.queuingPolicy = Objects.requireNonNull(queuingPolicy);
            return this;
        }
        public Builder selfLink(String selfLink) {
            this.selfLink = Objects.requireNonNull(selfLink);
            return this;
        }
        public Builder selfLinkWithId(String selfLinkWithId) {
            this.selfLinkWithId = Objects.requireNonNull(selfLinkWithId);
            return this;
        }
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        public Builder status(InstanceGroupManagerResizeRequestStatusResponse status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }
        public Builder zone(String zone) {
            this.zone = Objects.requireNonNull(zone);
            return this;
        }        public GetInstanceGroupManagerResizeRequestResult build() {
            return new GetInstanceGroupManagerResizeRequestResult(count, creationTimestamp, description, kind, name, queuingPolicy, selfLink, selfLinkWithId, state, status, zone);
        }
    }
}
