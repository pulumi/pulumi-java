// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.container.v1beta1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.container.v1beta1.enums.WorkloadConfigAuditMode;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * WorkloadConfig defines the flags to enable or disable the workload configurations for the cluster.
 * 
 */
public final class WorkloadConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final WorkloadConfigArgs Empty = new WorkloadConfigArgs();

    /**
     * Sets which mode of auditing should be used for the cluster&#39;s workloads.
     * 
     */
    @Import(name="auditMode")
    private @Nullable Output<WorkloadConfigAuditMode> auditMode;

    /**
     * @return Sets which mode of auditing should be used for the cluster&#39;s workloads.
     * 
     */
    public Optional<Output<WorkloadConfigAuditMode>> auditMode() {
        return Optional.ofNullable(this.auditMode);
    }

    private WorkloadConfigArgs() {}

    private WorkloadConfigArgs(WorkloadConfigArgs $) {
        this.auditMode = $.auditMode;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WorkloadConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WorkloadConfigArgs $;

        public Builder() {
            $ = new WorkloadConfigArgs();
        }

        public Builder(WorkloadConfigArgs defaults) {
            $ = new WorkloadConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param auditMode Sets which mode of auditing should be used for the cluster&#39;s workloads.
         * 
         * @return builder
         * 
         */
        public Builder auditMode(@Nullable Output<WorkloadConfigAuditMode> auditMode) {
            $.auditMode = auditMode;
            return this;
        }

        /**
         * @param auditMode Sets which mode of auditing should be used for the cluster&#39;s workloads.
         * 
         * @return builder
         * 
         */
        public Builder auditMode(WorkloadConfigAuditMode auditMode) {
            return auditMode(Output.of(auditMode));
        }

        public WorkloadConfigArgs build() {
            return $;
        }
    }

}
