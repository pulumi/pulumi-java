// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.run_v1alpha1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import com.pulumi.googlenative.run_v1alpha1.inputs.InstanceAttemptResultArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Instance represents the status of an instance of a Job.
 * 
 */
public final class InstanceStatusArgs extends com.pulumi.resources.ResourceArgs {

    public static final InstanceStatusArgs Empty = new InstanceStatusArgs();

    /**
     * Optional. Represents time when the instance was completed. It is not guaranteed to be set in happens-before order across separate operations. It is represented in RFC3339 form and is in UTC. +optional
     * 
     */
    @Import(name="completionTime")
      private final @Nullable Output<String> completionTime;

    public Output<String> completionTime() {
        return this.completionTime == null ? Codegen.empty() : this.completionTime;
    }

    /**
     * Optional. The number of times this instance exited with code > 0; +optional
     * 
     */
    @Import(name="failed")
      private final @Nullable Output<Integer> failed;

    public Output<Integer> failed() {
        return this.failed == null ? Codegen.empty() : this.failed;
    }

    /**
     * Index of the instance, unique per Job, and beginning at 0.
     * 
     */
    @Import(name="index", required=true)
      private final Output<Integer> index;

    public Output<Integer> index() {
        return this.index;
    }

    /**
     * Optional. Result of the last attempt of this instance. +optional
     * 
     */
    @Import(name="lastAttemptResult")
      private final @Nullable Output<InstanceAttemptResultArgs> lastAttemptResult;

    public Output<InstanceAttemptResultArgs> lastAttemptResult() {
        return this.lastAttemptResult == null ? Codegen.empty() : this.lastAttemptResult;
    }

    /**
     * Optional. Last exit code seen for this instance. +optional
     * 
     */
    @Import(name="lastExitCode")
      private final @Nullable Output<Integer> lastExitCode;

    public Output<Integer> lastExitCode() {
        return this.lastExitCode == null ? Codegen.empty() : this.lastExitCode;
    }

    /**
     * Optional. The number of times this instance was restarted. Instances are restarted according the restartPolicy configured in the Job template. +optional
     * 
     */
    @Import(name="restarted")
      private final @Nullable Output<Integer> restarted;

    public Output<Integer> restarted() {
        return this.restarted == null ? Codegen.empty() : this.restarted;
    }

    /**
     * Optional. Represents time when the instance was created by the job controller. It is not guaranteed to be set in happens-before order across separate operations. It is represented in RFC3339 form and is in UTC. +optional
     * 
     */
    @Import(name="startTime")
      private final @Nullable Output<String> startTime;

    public Output<String> startTime() {
        return this.startTime == null ? Codegen.empty() : this.startTime;
    }

    /**
     * Optional. The number of times this instance exited with code == 0. +optional
     * 
     */
    @Import(name="succeeded")
      private final @Nullable Output<Integer> succeeded;

    public Output<Integer> succeeded() {
        return this.succeeded == null ? Codegen.empty() : this.succeeded;
    }

    public InstanceStatusArgs(
        @Nullable Output<String> completionTime,
        @Nullable Output<Integer> failed,
        Output<Integer> index,
        @Nullable Output<InstanceAttemptResultArgs> lastAttemptResult,
        @Nullable Output<Integer> lastExitCode,
        @Nullable Output<Integer> restarted,
        @Nullable Output<String> startTime,
        @Nullable Output<Integer> succeeded) {
        this.completionTime = completionTime;
        this.failed = failed;
        this.index = Objects.requireNonNull(index, "expected parameter 'index' to be non-null");
        this.lastAttemptResult = lastAttemptResult;
        this.lastExitCode = lastExitCode;
        this.restarted = restarted;
        this.startTime = startTime;
        this.succeeded = succeeded;
    }

    private InstanceStatusArgs() {
        this.completionTime = Codegen.empty();
        this.failed = Codegen.empty();
        this.index = Codegen.empty();
        this.lastAttemptResult = Codegen.empty();
        this.lastExitCode = Codegen.empty();
        this.restarted = Codegen.empty();
        this.startTime = Codegen.empty();
        this.succeeded = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(InstanceStatusArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> completionTime;
        private @Nullable Output<Integer> failed;
        private Output<Integer> index;
        private @Nullable Output<InstanceAttemptResultArgs> lastAttemptResult;
        private @Nullable Output<Integer> lastExitCode;
        private @Nullable Output<Integer> restarted;
        private @Nullable Output<String> startTime;
        private @Nullable Output<Integer> succeeded;

        public Builder() {
    	      // Empty
        }

        public Builder(InstanceStatusArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.completionTime = defaults.completionTime;
    	      this.failed = defaults.failed;
    	      this.index = defaults.index;
    	      this.lastAttemptResult = defaults.lastAttemptResult;
    	      this.lastExitCode = defaults.lastExitCode;
    	      this.restarted = defaults.restarted;
    	      this.startTime = defaults.startTime;
    	      this.succeeded = defaults.succeeded;
        }

        public Builder completionTime(@Nullable Output<String> completionTime) {
            this.completionTime = completionTime;
            return this;
        }
        public Builder completionTime(@Nullable String completionTime) {
            this.completionTime = Codegen.ofNullable(completionTime);
            return this;
        }
        public Builder failed(@Nullable Output<Integer> failed) {
            this.failed = failed;
            return this;
        }
        public Builder failed(@Nullable Integer failed) {
            this.failed = Codegen.ofNullable(failed);
            return this;
        }
        public Builder index(Output<Integer> index) {
            this.index = Objects.requireNonNull(index);
            return this;
        }
        public Builder index(Integer index) {
            this.index = Output.of(Objects.requireNonNull(index));
            return this;
        }
        public Builder lastAttemptResult(@Nullable Output<InstanceAttemptResultArgs> lastAttemptResult) {
            this.lastAttemptResult = lastAttemptResult;
            return this;
        }
        public Builder lastAttemptResult(@Nullable InstanceAttemptResultArgs lastAttemptResult) {
            this.lastAttemptResult = Codegen.ofNullable(lastAttemptResult);
            return this;
        }
        public Builder lastExitCode(@Nullable Output<Integer> lastExitCode) {
            this.lastExitCode = lastExitCode;
            return this;
        }
        public Builder lastExitCode(@Nullable Integer lastExitCode) {
            this.lastExitCode = Codegen.ofNullable(lastExitCode);
            return this;
        }
        public Builder restarted(@Nullable Output<Integer> restarted) {
            this.restarted = restarted;
            return this;
        }
        public Builder restarted(@Nullable Integer restarted) {
            this.restarted = Codegen.ofNullable(restarted);
            return this;
        }
        public Builder startTime(@Nullable Output<String> startTime) {
            this.startTime = startTime;
            return this;
        }
        public Builder startTime(@Nullable String startTime) {
            this.startTime = Codegen.ofNullable(startTime);
            return this;
        }
        public Builder succeeded(@Nullable Output<Integer> succeeded) {
            this.succeeded = succeeded;
            return this;
        }
        public Builder succeeded(@Nullable Integer succeeded) {
            this.succeeded = Codegen.ofNullable(succeeded);
            return this;
        }        public InstanceStatusArgs build() {
            return new InstanceStatusArgs(completionTime, failed, index, lastAttemptResult, lastExitCode, restarted, startTime, succeeded);
        }
    }
}
