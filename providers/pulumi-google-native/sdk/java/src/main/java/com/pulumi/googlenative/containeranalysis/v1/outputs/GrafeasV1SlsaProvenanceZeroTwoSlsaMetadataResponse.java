// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.containeranalysis.v1.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.googlenative.containeranalysis.v1.outputs.GrafeasV1SlsaProvenanceZeroTwoSlsaCompletenessResponse;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GrafeasV1SlsaProvenanceZeroTwoSlsaMetadataResponse {
    private final String buildFinishedOn;
    private final String buildInvocationId;
    private final String buildStartedOn;
    private final GrafeasV1SlsaProvenanceZeroTwoSlsaCompletenessResponse completeness;
    private final Boolean reproducible;

    @CustomType.Constructor
    private GrafeasV1SlsaProvenanceZeroTwoSlsaMetadataResponse(
        @CustomType.Parameter("buildFinishedOn") String buildFinishedOn,
        @CustomType.Parameter("buildInvocationId") String buildInvocationId,
        @CustomType.Parameter("buildStartedOn") String buildStartedOn,
        @CustomType.Parameter("completeness") GrafeasV1SlsaProvenanceZeroTwoSlsaCompletenessResponse completeness,
        @CustomType.Parameter("reproducible") Boolean reproducible) {
        this.buildFinishedOn = buildFinishedOn;
        this.buildInvocationId = buildInvocationId;
        this.buildStartedOn = buildStartedOn;
        this.completeness = completeness;
        this.reproducible = reproducible;
    }

    public String buildFinishedOn() {
        return this.buildFinishedOn;
    }
    public String buildInvocationId() {
        return this.buildInvocationId;
    }
    public String buildStartedOn() {
        return this.buildStartedOn;
    }
    public GrafeasV1SlsaProvenanceZeroTwoSlsaCompletenessResponse completeness() {
        return this.completeness;
    }
    public Boolean reproducible() {
        return this.reproducible;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GrafeasV1SlsaProvenanceZeroTwoSlsaMetadataResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String buildFinishedOn;
        private String buildInvocationId;
        private String buildStartedOn;
        private GrafeasV1SlsaProvenanceZeroTwoSlsaCompletenessResponse completeness;
        private Boolean reproducible;

        public Builder() {
    	      // Empty
        }

        public Builder(GrafeasV1SlsaProvenanceZeroTwoSlsaMetadataResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.buildFinishedOn = defaults.buildFinishedOn;
    	      this.buildInvocationId = defaults.buildInvocationId;
    	      this.buildStartedOn = defaults.buildStartedOn;
    	      this.completeness = defaults.completeness;
    	      this.reproducible = defaults.reproducible;
        }

        public Builder buildFinishedOn(String buildFinishedOn) {
            this.buildFinishedOn = Objects.requireNonNull(buildFinishedOn);
            return this;
        }
        public Builder buildInvocationId(String buildInvocationId) {
            this.buildInvocationId = Objects.requireNonNull(buildInvocationId);
            return this;
        }
        public Builder buildStartedOn(String buildStartedOn) {
            this.buildStartedOn = Objects.requireNonNull(buildStartedOn);
            return this;
        }
        public Builder completeness(GrafeasV1SlsaProvenanceZeroTwoSlsaCompletenessResponse completeness) {
            this.completeness = Objects.requireNonNull(completeness);
            return this;
        }
        public Builder reproducible(Boolean reproducible) {
            this.reproducible = Objects.requireNonNull(reproducible);
            return this;
        }        public GrafeasV1SlsaProvenanceZeroTwoSlsaMetadataResponse build() {
            return new GrafeasV1SlsaProvenanceZeroTwoSlsaMetadataResponse(buildFinishedOn, buildInvocationId, buildStartedOn, completeness, reproducible);
        }
    }
}
