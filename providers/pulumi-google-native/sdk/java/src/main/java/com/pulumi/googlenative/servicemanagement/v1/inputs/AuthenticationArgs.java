// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.servicemanagement.v1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.servicemanagement.v1.inputs.AuthProviderArgs;
import com.pulumi.googlenative.servicemanagement.v1.inputs.AuthenticationRuleArgs;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * `Authentication` defines the authentication configuration for API methods provided by an API service. Example: name: calendar.googleapis.com authentication: providers: - id: google_calendar_auth jwks_uri: https://www.googleapis.com/oauth2/v1/certs issuer: https://securetoken.google.com rules: - selector: &#34;*&#34; requirements: provider_id: google_calendar_auth - selector: google.calendar.Delegate oauth: canonical_scopes: https://www.googleapis.com/auth/calendar.read
 * 
 */
public final class AuthenticationArgs extends com.pulumi.resources.ResourceArgs {

    public static final AuthenticationArgs Empty = new AuthenticationArgs();

    /**
     * Defines a set of authentication providers that a service supports.
     * 
     */
    @Import(name="providers")
    private @Nullable Output<List<AuthProviderArgs>> providers;

    /**
     * @return Defines a set of authentication providers that a service supports.
     * 
     */
    public Optional<Output<List<AuthProviderArgs>>> providers() {
        return Optional.ofNullable(this.providers);
    }

    /**
     * A list of authentication rules that apply to individual API methods. **NOTE:** All service configuration rules follow &#34;last one wins&#34; order.
     * 
     */
    @Import(name="rules")
    private @Nullable Output<List<AuthenticationRuleArgs>> rules;

    /**
     * @return A list of authentication rules that apply to individual API methods. **NOTE:** All service configuration rules follow &#34;last one wins&#34; order.
     * 
     */
    public Optional<Output<List<AuthenticationRuleArgs>>> rules() {
        return Optional.ofNullable(this.rules);
    }

    private AuthenticationArgs() {}

    private AuthenticationArgs(AuthenticationArgs $) {
        this.providers = $.providers;
        this.rules = $.rules;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AuthenticationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AuthenticationArgs $;

        public Builder() {
            $ = new AuthenticationArgs();
        }

        public Builder(AuthenticationArgs defaults) {
            $ = new AuthenticationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param providers Defines a set of authentication providers that a service supports.
         * 
         * @return builder
         * 
         */
        public Builder providers(@Nullable Output<List<AuthProviderArgs>> providers) {
            $.providers = providers;
            return this;
        }

        /**
         * @param providers Defines a set of authentication providers that a service supports.
         * 
         * @return builder
         * 
         */
        public Builder providers(List<AuthProviderArgs> providers) {
            return providers(Output.of(providers));
        }

        /**
         * @param providers Defines a set of authentication providers that a service supports.
         * 
         * @return builder
         * 
         */
        public Builder providers(AuthProviderArgs... providers) {
            return providers(List.of(providers));
        }

        /**
         * @param rules A list of authentication rules that apply to individual API methods. **NOTE:** All service configuration rules follow &#34;last one wins&#34; order.
         * 
         * @return builder
         * 
         */
        public Builder rules(@Nullable Output<List<AuthenticationRuleArgs>> rules) {
            $.rules = rules;
            return this;
        }

        /**
         * @param rules A list of authentication rules that apply to individual API methods. **NOTE:** All service configuration rules follow &#34;last one wins&#34; order.
         * 
         * @return builder
         * 
         */
        public Builder rules(List<AuthenticationRuleArgs> rules) {
            return rules(Output.of(rules));
        }

        /**
         * @param rules A list of authentication rules that apply to individual API methods. **NOTE:** All service configuration rules follow &#34;last one wins&#34; order.
         * 
         * @return builder
         * 
         */
        public Builder rules(AuthenticationRuleArgs... rules) {
            return rules(List.of(rules));
        }

        public AuthenticationArgs build() {
            return $;
        }
    }

}
