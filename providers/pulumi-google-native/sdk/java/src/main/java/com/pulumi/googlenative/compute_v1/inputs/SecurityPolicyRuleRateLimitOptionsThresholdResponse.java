// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.compute_v1.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.util.Objects;


public final class SecurityPolicyRuleRateLimitOptionsThresholdResponse extends com.pulumi.resources.InvokeArgs {

    public static final SecurityPolicyRuleRateLimitOptionsThresholdResponse Empty = new SecurityPolicyRuleRateLimitOptionsThresholdResponse();

    /**
     * Number of HTTP(S) requests for calculating the threshold.
     * 
     */
    @Import(name="count", required=true)
    private Integer count;

    public Integer count() {
        return this.count;
    }

    /**
     * Interval over which the threshold is computed.
     * 
     */
    @Import(name="intervalSec", required=true)
    private Integer intervalSec;

    public Integer intervalSec() {
        return this.intervalSec;
    }

    private SecurityPolicyRuleRateLimitOptionsThresholdResponse() {}

    private SecurityPolicyRuleRateLimitOptionsThresholdResponse(SecurityPolicyRuleRateLimitOptionsThresholdResponse $) {
        this.count = $.count;
        this.intervalSec = $.intervalSec;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SecurityPolicyRuleRateLimitOptionsThresholdResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SecurityPolicyRuleRateLimitOptionsThresholdResponse $;

        public Builder() {
            $ = new SecurityPolicyRuleRateLimitOptionsThresholdResponse();
        }

        public Builder(SecurityPolicyRuleRateLimitOptionsThresholdResponse defaults) {
            $ = new SecurityPolicyRuleRateLimitOptionsThresholdResponse(Objects.requireNonNull(defaults));
        }

        public Builder count(Integer count) {
            $.count = count;
            return this;
        }

        public Builder intervalSec(Integer intervalSec) {
            $.intervalSec = intervalSec;
            return this;
        }

        public SecurityPolicyRuleRateLimitOptionsThresholdResponse build() {
            $.count = Objects.requireNonNull($.count, "expected parameter 'count' to be non-null");
            $.intervalSec = Objects.requireNonNull($.intervalSec, "expected parameter 'intervalSec' to be non-null");
            return $;
        }
    }

}
