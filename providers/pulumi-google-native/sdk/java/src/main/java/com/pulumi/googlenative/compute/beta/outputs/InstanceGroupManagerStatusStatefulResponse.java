// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.compute.beta.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.googlenative.compute.beta.outputs.InstanceGroupManagerStatusStatefulPerInstanceConfigsResponse;
import java.lang.Boolean;
import java.util.Objects;

@CustomType
public final class InstanceGroupManagerStatusStatefulResponse {
    /**
     * @return A bit indicating whether the managed instance group has stateful configuration, that is, if you have configured any items in a stateful policy or in per-instance configs. The group might report that it has no stateful configuration even when there is still some preserved state on a managed instance, for example, if you have deleted all PICs but not yet applied those deletions.
     * 
     */
    private final Boolean hasStatefulConfig;
    /**
     * @return A bit indicating whether the managed instance group has stateful configuration, that is, if you have configured any items in a stateful policy or in per-instance configs. The group might report that it has no stateful configuration even when there is still some preserved state on a managed instance, for example, if you have deleted all PICs but not yet applied those deletions. This field is deprecated in favor of has_stateful_config.
     * 
     * @deprecated
     * [Output Only] A bit indicating whether the managed instance group has stateful configuration, that is, if you have configured any items in a stateful policy or in per-instance configs. The group might report that it has no stateful configuration even when there is still some preserved state on a managed instance, for example, if you have deleted all PICs but not yet applied those deletions. This field is deprecated in favor of has_stateful_config.
     * 
     */
    @Deprecated /* [Output Only] A bit indicating whether the managed instance group has stateful configuration, that is, if you have configured any items in a stateful policy or in per-instance configs. The group might report that it has no stateful configuration even when there is still some preserved state on a managed instance, for example, if you have deleted all PICs but not yet applied those deletions. This field is deprecated in favor of has_stateful_config. */
    private final Boolean isStateful;
    /**
     * @return Status of per-instance configurations on the instance.
     * 
     */
    private final InstanceGroupManagerStatusStatefulPerInstanceConfigsResponse perInstanceConfigs;

    @CustomType.Constructor
    private InstanceGroupManagerStatusStatefulResponse(
        @CustomType.Parameter("hasStatefulConfig") Boolean hasStatefulConfig,
        @CustomType.Parameter("isStateful") Boolean isStateful,
        @CustomType.Parameter("perInstanceConfigs") InstanceGroupManagerStatusStatefulPerInstanceConfigsResponse perInstanceConfigs) {
        this.hasStatefulConfig = hasStatefulConfig;
        this.isStateful = isStateful;
        this.perInstanceConfigs = perInstanceConfigs;
    }

    /**
     * @return A bit indicating whether the managed instance group has stateful configuration, that is, if you have configured any items in a stateful policy or in per-instance configs. The group might report that it has no stateful configuration even when there is still some preserved state on a managed instance, for example, if you have deleted all PICs but not yet applied those deletions.
     * 
     */
    public Boolean hasStatefulConfig() {
        return this.hasStatefulConfig;
    }
    /**
     * @return A bit indicating whether the managed instance group has stateful configuration, that is, if you have configured any items in a stateful policy or in per-instance configs. The group might report that it has no stateful configuration even when there is still some preserved state on a managed instance, for example, if you have deleted all PICs but not yet applied those deletions. This field is deprecated in favor of has_stateful_config.
     * 
     * @deprecated
     * [Output Only] A bit indicating whether the managed instance group has stateful configuration, that is, if you have configured any items in a stateful policy or in per-instance configs. The group might report that it has no stateful configuration even when there is still some preserved state on a managed instance, for example, if you have deleted all PICs but not yet applied those deletions. This field is deprecated in favor of has_stateful_config.
     * 
     */
    @Deprecated /* [Output Only] A bit indicating whether the managed instance group has stateful configuration, that is, if you have configured any items in a stateful policy or in per-instance configs. The group might report that it has no stateful configuration even when there is still some preserved state on a managed instance, for example, if you have deleted all PICs but not yet applied those deletions. This field is deprecated in favor of has_stateful_config. */
    public Boolean isStateful() {
        return this.isStateful;
    }
    /**
     * @return Status of per-instance configurations on the instance.
     * 
     */
    public InstanceGroupManagerStatusStatefulPerInstanceConfigsResponse perInstanceConfigs() {
        return this.perInstanceConfigs;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(InstanceGroupManagerStatusStatefulResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Boolean hasStatefulConfig;
        private Boolean isStateful;
        private InstanceGroupManagerStatusStatefulPerInstanceConfigsResponse perInstanceConfigs;

        public Builder() {
    	      // Empty
        }

        public Builder(InstanceGroupManagerStatusStatefulResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.hasStatefulConfig = defaults.hasStatefulConfig;
    	      this.isStateful = defaults.isStateful;
    	      this.perInstanceConfigs = defaults.perInstanceConfigs;
        }

        public Builder hasStatefulConfig(Boolean hasStatefulConfig) {
            this.hasStatefulConfig = Objects.requireNonNull(hasStatefulConfig);
            return this;
        }
        public Builder isStateful(Boolean isStateful) {
            this.isStateful = Objects.requireNonNull(isStateful);
            return this;
        }
        public Builder perInstanceConfigs(InstanceGroupManagerStatusStatefulPerInstanceConfigsResponse perInstanceConfigs) {
            this.perInstanceConfigs = Objects.requireNonNull(perInstanceConfigs);
            return this;
        }        public InstanceGroupManagerStatusStatefulResponse build() {
            return new InstanceGroupManagerStatusStatefulResponse(hasStatefulConfig, isStateful, perInstanceConfigs);
        }
    }
}
