// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.dataflow_v1b3.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import com.pulumi.googlenative.dataflow_v1b3.inputs.DisplayDataArgs;
import com.pulumi.googlenative.dataflow_v1b3.inputs.ExecutionStageSummaryArgs;
import com.pulumi.googlenative.dataflow_v1b3.inputs.TransformSummaryArgs;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * A descriptive representation of submitted pipeline as well as the executed form. This data is provided by the Dataflow service for ease of visualizing the pipeline and interpreting Dataflow provided metrics.
 * 
 */
public final class PipelineDescriptionArgs extends com.pulumi.resources.ResourceArgs {

    public static final PipelineDescriptionArgs Empty = new PipelineDescriptionArgs();

    /**
     * Pipeline level display data.
     * 
     */
    @Import(name="displayData")
      private final @Nullable Output<List<DisplayDataArgs>> displayData;

    public Output<List<DisplayDataArgs>> displayData() {
        return this.displayData == null ? Codegen.empty() : this.displayData;
    }

    /**
     * Description of each stage of execution of the pipeline.
     * 
     */
    @Import(name="executionPipelineStage")
      private final @Nullable Output<List<ExecutionStageSummaryArgs>> executionPipelineStage;

    public Output<List<ExecutionStageSummaryArgs>> executionPipelineStage() {
        return this.executionPipelineStage == null ? Codegen.empty() : this.executionPipelineStage;
    }

    /**
     * Description of each transform in the pipeline and collections between them.
     * 
     */
    @Import(name="originalPipelineTransform")
      private final @Nullable Output<List<TransformSummaryArgs>> originalPipelineTransform;

    public Output<List<TransformSummaryArgs>> originalPipelineTransform() {
        return this.originalPipelineTransform == null ? Codegen.empty() : this.originalPipelineTransform;
    }

    public PipelineDescriptionArgs(
        @Nullable Output<List<DisplayDataArgs>> displayData,
        @Nullable Output<List<ExecutionStageSummaryArgs>> executionPipelineStage,
        @Nullable Output<List<TransformSummaryArgs>> originalPipelineTransform) {
        this.displayData = displayData;
        this.executionPipelineStage = executionPipelineStage;
        this.originalPipelineTransform = originalPipelineTransform;
    }

    private PipelineDescriptionArgs() {
        this.displayData = Codegen.empty();
        this.executionPipelineStage = Codegen.empty();
        this.originalPipelineTransform = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PipelineDescriptionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<List<DisplayDataArgs>> displayData;
        private @Nullable Output<List<ExecutionStageSummaryArgs>> executionPipelineStage;
        private @Nullable Output<List<TransformSummaryArgs>> originalPipelineTransform;

        public Builder() {
    	      // Empty
        }

        public Builder(PipelineDescriptionArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.displayData = defaults.displayData;
    	      this.executionPipelineStage = defaults.executionPipelineStage;
    	      this.originalPipelineTransform = defaults.originalPipelineTransform;
        }

        public Builder displayData(@Nullable Output<List<DisplayDataArgs>> displayData) {
            this.displayData = displayData;
            return this;
        }
        public Builder displayData(@Nullable List<DisplayDataArgs> displayData) {
            this.displayData = Codegen.ofNullable(displayData);
            return this;
        }
        public Builder displayData(DisplayDataArgs... displayData) {
            return displayData(List.of(displayData));
        }
        public Builder executionPipelineStage(@Nullable Output<List<ExecutionStageSummaryArgs>> executionPipelineStage) {
            this.executionPipelineStage = executionPipelineStage;
            return this;
        }
        public Builder executionPipelineStage(@Nullable List<ExecutionStageSummaryArgs> executionPipelineStage) {
            this.executionPipelineStage = Codegen.ofNullable(executionPipelineStage);
            return this;
        }
        public Builder executionPipelineStage(ExecutionStageSummaryArgs... executionPipelineStage) {
            return executionPipelineStage(List.of(executionPipelineStage));
        }
        public Builder originalPipelineTransform(@Nullable Output<List<TransformSummaryArgs>> originalPipelineTransform) {
            this.originalPipelineTransform = originalPipelineTransform;
            return this;
        }
        public Builder originalPipelineTransform(@Nullable List<TransformSummaryArgs> originalPipelineTransform) {
            this.originalPipelineTransform = Codegen.ofNullable(originalPipelineTransform);
            return this;
        }
        public Builder originalPipelineTransform(TransformSummaryArgs... originalPipelineTransform) {
            return originalPipelineTransform(List.of(originalPipelineTransform));
        }        public PipelineDescriptionArgs build() {
            return new PipelineDescriptionArgs(displayData, executionPipelineStage, originalPipelineTransform);
        }
    }
}
