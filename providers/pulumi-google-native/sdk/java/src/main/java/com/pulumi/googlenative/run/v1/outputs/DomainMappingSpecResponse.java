// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.run.v1.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class DomainMappingSpecResponse {
    /**
     * @return The mode of the certificate.
     * 
     */
    private final String certificateMode;
    /**
     * @return If set, the mapping will override any mapping set before this spec was set. It is recommended that the user leaves this empty to receive an error warning about a potential conflict and only set it once the respective UI has given such a warning.
     * 
     */
    private final Boolean forceOverride;
    /**
     * @return The name of the Knative Route that this DomainMapping applies to. The route must exist.
     * 
     */
    private final String routeName;

    @CustomType.Constructor
    private DomainMappingSpecResponse(
        @CustomType.Parameter("certificateMode") String certificateMode,
        @CustomType.Parameter("forceOverride") Boolean forceOverride,
        @CustomType.Parameter("routeName") String routeName) {
        this.certificateMode = certificateMode;
        this.forceOverride = forceOverride;
        this.routeName = routeName;
    }

    /**
     * @return The mode of the certificate.
     * 
     */
    public String certificateMode() {
        return this.certificateMode;
    }
    /**
     * @return If set, the mapping will override any mapping set before this spec was set. It is recommended that the user leaves this empty to receive an error warning about a potential conflict and only set it once the respective UI has given such a warning.
     * 
     */
    public Boolean forceOverride() {
        return this.forceOverride;
    }
    /**
     * @return The name of the Knative Route that this DomainMapping applies to. The route must exist.
     * 
     */
    public String routeName() {
        return this.routeName;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DomainMappingSpecResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String certificateMode;
        private Boolean forceOverride;
        private String routeName;

        public Builder() {
    	      // Empty
        }

        public Builder(DomainMappingSpecResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.certificateMode = defaults.certificateMode;
    	      this.forceOverride = defaults.forceOverride;
    	      this.routeName = defaults.routeName;
        }

        public Builder certificateMode(String certificateMode) {
            this.certificateMode = Objects.requireNonNull(certificateMode);
            return this;
        }
        public Builder forceOverride(Boolean forceOverride) {
            this.forceOverride = Objects.requireNonNull(forceOverride);
            return this;
        }
        public Builder routeName(String routeName) {
            this.routeName = Objects.requireNonNull(routeName);
            return this;
        }        public DomainMappingSpecResponse build() {
            return new DomainMappingSpecResponse(certificateMode, forceOverride, routeName);
        }
    }
}
