// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.dataplex.v1.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.googlenative.dataplex.v1.outputs.GoogleCloudDataplexV1EntityCompatibilityStatusResponse;
import com.pulumi.googlenative.dataplex.v1.outputs.GoogleCloudDataplexV1SchemaResponse;
import com.pulumi.googlenative.dataplex.v1.outputs.GoogleCloudDataplexV1StorageFormatResponse;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetEntityResult {
    /**
     * @return Immutable. The ID of the asset associated with the storage location containing the entity data. The entity must be with in the same zone with the asset.
     * 
     */
    private final String asset;
    /**
     * @return The name of the associated Data Catalog entry.
     * 
     */
    private final String catalogEntry;
    /**
     * @return Metadata stores that the entity is compatible with.
     * 
     */
    private final GoogleCloudDataplexV1EntityCompatibilityStatusResponse compatibility;
    /**
     * @return The time when the entity was created.
     * 
     */
    private final String createTime;
    /**
     * @return Immutable. The storage path of the entity data. For Cloud Storage data, this is the fully-qualified path to the entity, such as gs://bucket/path/to/data. For BigQuery data, this is the name of the table resource, such as projects/project_id/datasets/dataset_id/tables/table_id.
     * 
     */
    private final String dataPath;
    /**
     * @return Optional. The set of items within the data path constituting the data in the entity, represented as a glob path. Example: gs://bucket/path/to/data/**{@literal /}*.csv.
     * 
     */
    private final String dataPathPattern;
    /**
     * @return Optional. User friendly longer description text. Must be shorter than or equal to 1024 characters.
     * 
     */
    private final String description;
    /**
     * @return Optional. Display name must be shorter than or equal to 256 characters.
     * 
     */
    private final String displayName;
    /**
     * @return Optional. The etag associated with the entity, which can be retrieved with a GetEntity request. Required for update and delete requests.
     * 
     */
    private final String etag;
    /**
     * @return Identifies the storage format of the entity data. It does not apply to entities with data stored in BigQuery.
     * 
     */
    private final GoogleCloudDataplexV1StorageFormatResponse format;
    /**
     * @return The resource name of the entity, of the form: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}/entities/{id}.
     * 
     */
    private final String name;
    /**
     * @return The description of the data structure and layout. The schema is not included in list responses. It is only included in SCHEMA and FULL entity views of a GetEntity response.
     * 
     */
    private final GoogleCloudDataplexV1SchemaResponse schema;
    /**
     * @return Immutable. Identifies the storage system of the entity data.
     * 
     */
    private final String system;
    /**
     * @return Immutable. The type of entity.
     * 
     */
    private final String type;
    /**
     * @return The time when the entity was last updated.
     * 
     */
    private final String updateTime;

    @CustomType.Constructor
    private GetEntityResult(
        @CustomType.Parameter("asset") String asset,
        @CustomType.Parameter("catalogEntry") String catalogEntry,
        @CustomType.Parameter("compatibility") GoogleCloudDataplexV1EntityCompatibilityStatusResponse compatibility,
        @CustomType.Parameter("createTime") String createTime,
        @CustomType.Parameter("dataPath") String dataPath,
        @CustomType.Parameter("dataPathPattern") String dataPathPattern,
        @CustomType.Parameter("description") String description,
        @CustomType.Parameter("displayName") String displayName,
        @CustomType.Parameter("etag") String etag,
        @CustomType.Parameter("format") GoogleCloudDataplexV1StorageFormatResponse format,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("schema") GoogleCloudDataplexV1SchemaResponse schema,
        @CustomType.Parameter("system") String system,
        @CustomType.Parameter("type") String type,
        @CustomType.Parameter("updateTime") String updateTime) {
        this.asset = asset;
        this.catalogEntry = catalogEntry;
        this.compatibility = compatibility;
        this.createTime = createTime;
        this.dataPath = dataPath;
        this.dataPathPattern = dataPathPattern;
        this.description = description;
        this.displayName = displayName;
        this.etag = etag;
        this.format = format;
        this.name = name;
        this.schema = schema;
        this.system = system;
        this.type = type;
        this.updateTime = updateTime;
    }

    /**
     * @return Immutable. The ID of the asset associated with the storage location containing the entity data. The entity must be with in the same zone with the asset.
     * 
     */
    public String asset() {
        return this.asset;
    }
    /**
     * @return The name of the associated Data Catalog entry.
     * 
     */
    public String catalogEntry() {
        return this.catalogEntry;
    }
    /**
     * @return Metadata stores that the entity is compatible with.
     * 
     */
    public GoogleCloudDataplexV1EntityCompatibilityStatusResponse compatibility() {
        return this.compatibility;
    }
    /**
     * @return The time when the entity was created.
     * 
     */
    public String createTime() {
        return this.createTime;
    }
    /**
     * @return Immutable. The storage path of the entity data. For Cloud Storage data, this is the fully-qualified path to the entity, such as gs://bucket/path/to/data. For BigQuery data, this is the name of the table resource, such as projects/project_id/datasets/dataset_id/tables/table_id.
     * 
     */
    public String dataPath() {
        return this.dataPath;
    }
    /**
     * @return Optional. The set of items within the data path constituting the data in the entity, represented as a glob path. Example: gs://bucket/path/to/data/**{@literal /}*.csv.
     * 
     */
    public String dataPathPattern() {
        return this.dataPathPattern;
    }
    /**
     * @return Optional. User friendly longer description text. Must be shorter than or equal to 1024 characters.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return Optional. Display name must be shorter than or equal to 256 characters.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return Optional. The etag associated with the entity, which can be retrieved with a GetEntity request. Required for update and delete requests.
     * 
     */
    public String etag() {
        return this.etag;
    }
    /**
     * @return Identifies the storage format of the entity data. It does not apply to entities with data stored in BigQuery.
     * 
     */
    public GoogleCloudDataplexV1StorageFormatResponse format() {
        return this.format;
    }
    /**
     * @return The resource name of the entity, of the form: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}/entities/{id}.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The description of the data structure and layout. The schema is not included in list responses. It is only included in SCHEMA and FULL entity views of a GetEntity response.
     * 
     */
    public GoogleCloudDataplexV1SchemaResponse schema() {
        return this.schema;
    }
    /**
     * @return Immutable. Identifies the storage system of the entity data.
     * 
     */
    public String system() {
        return this.system;
    }
    /**
     * @return Immutable. The type of entity.
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return The time when the entity was last updated.
     * 
     */
    public String updateTime() {
        return this.updateTime;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetEntityResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String asset;
        private String catalogEntry;
        private GoogleCloudDataplexV1EntityCompatibilityStatusResponse compatibility;
        private String createTime;
        private String dataPath;
        private String dataPathPattern;
        private String description;
        private String displayName;
        private String etag;
        private GoogleCloudDataplexV1StorageFormatResponse format;
        private String name;
        private GoogleCloudDataplexV1SchemaResponse schema;
        private String system;
        private String type;
        private String updateTime;

        public Builder() {
    	      // Empty
        }

        public Builder(GetEntityResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.asset = defaults.asset;
    	      this.catalogEntry = defaults.catalogEntry;
    	      this.compatibility = defaults.compatibility;
    	      this.createTime = defaults.createTime;
    	      this.dataPath = defaults.dataPath;
    	      this.dataPathPattern = defaults.dataPathPattern;
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.etag = defaults.etag;
    	      this.format = defaults.format;
    	      this.name = defaults.name;
    	      this.schema = defaults.schema;
    	      this.system = defaults.system;
    	      this.type = defaults.type;
    	      this.updateTime = defaults.updateTime;
        }

        public Builder asset(String asset) {
            this.asset = Objects.requireNonNull(asset);
            return this;
        }
        public Builder catalogEntry(String catalogEntry) {
            this.catalogEntry = Objects.requireNonNull(catalogEntry);
            return this;
        }
        public Builder compatibility(GoogleCloudDataplexV1EntityCompatibilityStatusResponse compatibility) {
            this.compatibility = Objects.requireNonNull(compatibility);
            return this;
        }
        public Builder createTime(String createTime) {
            this.createTime = Objects.requireNonNull(createTime);
            return this;
        }
        public Builder dataPath(String dataPath) {
            this.dataPath = Objects.requireNonNull(dataPath);
            return this;
        }
        public Builder dataPathPattern(String dataPathPattern) {
            this.dataPathPattern = Objects.requireNonNull(dataPathPattern);
            return this;
        }
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        public Builder displayName(String displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }
        public Builder etag(String etag) {
            this.etag = Objects.requireNonNull(etag);
            return this;
        }
        public Builder format(GoogleCloudDataplexV1StorageFormatResponse format) {
            this.format = Objects.requireNonNull(format);
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder schema(GoogleCloudDataplexV1SchemaResponse schema) {
            this.schema = Objects.requireNonNull(schema);
            return this;
        }
        public Builder system(String system) {
            this.system = Objects.requireNonNull(system);
            return this;
        }
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public Builder updateTime(String updateTime) {
            this.updateTime = Objects.requireNonNull(updateTime);
            return this;
        }        public GetEntityResult build() {
            return new GetEntityResult(asset, catalogEntry, compatibility, createTime, dataPath, dataPathPattern, description, displayName, etag, format, name, schema, system, type, updateTime);
        }
    }
}
