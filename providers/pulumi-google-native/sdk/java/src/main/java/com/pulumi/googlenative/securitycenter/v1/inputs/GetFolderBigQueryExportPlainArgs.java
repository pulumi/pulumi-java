// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.securitycenter.v1.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GetFolderBigQueryExportPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetFolderBigQueryExportPlainArgs Empty = new GetFolderBigQueryExportPlainArgs();

    @Import(name="bigQueryExportId", required=true)
    private String bigQueryExportId;

    public String bigQueryExportId() {
        return this.bigQueryExportId;
    }

    @Import(name="folderId", required=true)
    private String folderId;

    public String folderId() {
        return this.folderId;
    }

    private GetFolderBigQueryExportPlainArgs() {}

    private GetFolderBigQueryExportPlainArgs(GetFolderBigQueryExportPlainArgs $) {
        this.bigQueryExportId = $.bigQueryExportId;
        this.folderId = $.folderId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetFolderBigQueryExportPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetFolderBigQueryExportPlainArgs $;

        public Builder() {
            $ = new GetFolderBigQueryExportPlainArgs();
        }

        public Builder(GetFolderBigQueryExportPlainArgs defaults) {
            $ = new GetFolderBigQueryExportPlainArgs(Objects.requireNonNull(defaults));
        }

        public Builder bigQueryExportId(String bigQueryExportId) {
            $.bigQueryExportId = bigQueryExportId;
            return this;
        }

        public Builder folderId(String folderId) {
            $.folderId = folderId;
            return this;
        }

        public GetFolderBigQueryExportPlainArgs build() {
            $.bigQueryExportId = Objects.requireNonNull($.bigQueryExportId, "expected parameter 'bigQueryExportId' to be non-null");
            $.folderId = Objects.requireNonNull($.folderId, "expected parameter 'folderId' to be non-null");
            return $;
        }
    }

}
