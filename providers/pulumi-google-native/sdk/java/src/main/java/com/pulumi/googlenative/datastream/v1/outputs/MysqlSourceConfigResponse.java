// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.datastream.v1.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.googlenative.datastream.v1.outputs.MysqlRdbmsResponse;
import java.util.Objects;

@CustomType
public final class MysqlSourceConfigResponse {
    /**
     * @return MySQL objects to exclude from the stream.
     * 
     */
    private final MysqlRdbmsResponse excludeObjects;
    /**
     * @return MySQL objects to retrieve from the source.
     * 
     */
    private final MysqlRdbmsResponse includeObjects;

    @CustomType.Constructor
    private MysqlSourceConfigResponse(
        @CustomType.Parameter("excludeObjects") MysqlRdbmsResponse excludeObjects,
        @CustomType.Parameter("includeObjects") MysqlRdbmsResponse includeObjects) {
        this.excludeObjects = excludeObjects;
        this.includeObjects = includeObjects;
    }

    /**
     * @return MySQL objects to exclude from the stream.
     * 
     */
    public MysqlRdbmsResponse excludeObjects() {
        return this.excludeObjects;
    }
    /**
     * @return MySQL objects to retrieve from the source.
     * 
     */
    public MysqlRdbmsResponse includeObjects() {
        return this.includeObjects;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MysqlSourceConfigResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MysqlRdbmsResponse excludeObjects;
        private MysqlRdbmsResponse includeObjects;

        public Builder() {
    	      // Empty
        }

        public Builder(MysqlSourceConfigResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.excludeObjects = defaults.excludeObjects;
    	      this.includeObjects = defaults.includeObjects;
        }

        public Builder excludeObjects(MysqlRdbmsResponse excludeObjects) {
            this.excludeObjects = Objects.requireNonNull(excludeObjects);
            return this;
        }
        public Builder includeObjects(MysqlRdbmsResponse includeObjects) {
            this.includeObjects = Objects.requireNonNull(includeObjects);
            return this;
        }        public MysqlSourceConfigResponse build() {
            return new MysqlSourceConfigResponse(excludeObjects, includeObjects);
        }
    }
}
