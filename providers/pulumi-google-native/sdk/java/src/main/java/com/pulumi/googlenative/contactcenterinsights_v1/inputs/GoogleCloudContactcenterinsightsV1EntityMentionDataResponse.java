// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.contactcenterinsights_v1.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.contactcenterinsights_v1.inputs.GoogleCloudContactcenterinsightsV1SentimentDataResponse;
import java.lang.String;
import java.util.Objects;


/**
 * The data for an entity mention annotation. This represents a mention of an `Entity` in the conversation.
 * 
 */
public final class GoogleCloudContactcenterinsightsV1EntityMentionDataResponse extends com.pulumi.resources.InvokeArgs {

    public static final GoogleCloudContactcenterinsightsV1EntityMentionDataResponse Empty = new GoogleCloudContactcenterinsightsV1EntityMentionDataResponse();

    /**
     * The key of this entity in conversation entities. Can be used to retrieve the exact `Entity` this mention is attached to.
     * 
     */
    @Import(name="entityUniqueId", required=true)
    private String entityUniqueId;

    public String entityUniqueId() {
        return this.entityUniqueId;
    }

    /**
     * Sentiment expressed for this mention of the entity.
     * 
     */
    @Import(name="sentiment", required=true)
    private GoogleCloudContactcenterinsightsV1SentimentDataResponse sentiment;

    public GoogleCloudContactcenterinsightsV1SentimentDataResponse sentiment() {
        return this.sentiment;
    }

    /**
     * The type of the entity mention.
     * 
     */
    @Import(name="type", required=true)
    private String type;

    public String type() {
        return this.type;
    }

    private GoogleCloudContactcenterinsightsV1EntityMentionDataResponse() {}

    private GoogleCloudContactcenterinsightsV1EntityMentionDataResponse(GoogleCloudContactcenterinsightsV1EntityMentionDataResponse $) {
        this.entityUniqueId = $.entityUniqueId;
        this.sentiment = $.sentiment;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GoogleCloudContactcenterinsightsV1EntityMentionDataResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GoogleCloudContactcenterinsightsV1EntityMentionDataResponse $;

        public Builder() {
            $ = new GoogleCloudContactcenterinsightsV1EntityMentionDataResponse();
        }

        public Builder(GoogleCloudContactcenterinsightsV1EntityMentionDataResponse defaults) {
            $ = new GoogleCloudContactcenterinsightsV1EntityMentionDataResponse(Objects.requireNonNull(defaults));
        }

        public Builder entityUniqueId(String entityUniqueId) {
            $.entityUniqueId = entityUniqueId;
            return this;
        }

        public Builder sentiment(GoogleCloudContactcenterinsightsV1SentimentDataResponse sentiment) {
            $.sentiment = sentiment;
            return this;
        }

        public Builder type(String type) {
            $.type = type;
            return this;
        }

        public GoogleCloudContactcenterinsightsV1EntityMentionDataResponse build() {
            $.entityUniqueId = Objects.requireNonNull($.entityUniqueId, "expected parameter 'entityUniqueId' to be non-null");
            $.sentiment = Objects.requireNonNull($.sentiment, "expected parameter 'sentiment' to be non-null");
            $.type = Objects.requireNonNull($.type, "expected parameter 'type' to be non-null");
            return $;
        }
    }

}
