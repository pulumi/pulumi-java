// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.dataproc_v1beta2.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;


/**
 * Validation based on a list of allowed values.
 * 
 */
public final class ValueValidationResponse extends com.pulumi.resources.InvokeArgs {

    public static final ValueValidationResponse Empty = new ValueValidationResponse();

    /**
     * List of allowed values for the parameter.
     * 
     */
    @Import(name="values", required=true)
    private List<String> values;

    /**
     * @return List of allowed values for the parameter.
     * 
     */
    public List<String> values() {
        return this.values;
    }

    private ValueValidationResponse() {}

    private ValueValidationResponse(ValueValidationResponse $) {
        this.values = $.values;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ValueValidationResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ValueValidationResponse $;

        public Builder() {
            $ = new ValueValidationResponse();
        }

        public Builder(ValueValidationResponse defaults) {
            $ = new ValueValidationResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param values List of allowed values for the parameter.
         * 
         * @return builder
         * 
         */
        public Builder values(List<String> values) {
            $.values = values;
            return this;
        }

        /**
         * @param values List of allowed values for the parameter.
         * 
         * @return builder
         * 
         */
        public Builder values(String... values) {
            return values(List.of(values));
        }

        public ValueValidationResponse build() {
            $.values = Objects.requireNonNull($.values, "expected parameter 'values' to be non-null");
            return $;
        }
    }

}
