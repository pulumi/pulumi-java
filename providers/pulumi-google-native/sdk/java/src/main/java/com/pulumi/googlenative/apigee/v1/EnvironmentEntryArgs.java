// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.apigee.v1;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class EnvironmentEntryArgs extends com.pulumi.resources.ResourceArgs {

    public static final EnvironmentEntryArgs Empty = new EnvironmentEntryArgs();

    @Import(name="environmentId", required=true)
    private Output<String> environmentId;

    public Output<String> environmentId() {
        return this.environmentId;
    }

    @Import(name="keyvaluemapId", required=true)
    private Output<String> keyvaluemapId;

    public Output<String> keyvaluemapId() {
        return this.keyvaluemapId;
    }

    /**
     * Resource URI that can be used to identify the scope of the key value map entries.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Resource URI that can be used to identify the scope of the key value map entries.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="organizationId", required=true)
    private Output<String> organizationId;

    public Output<String> organizationId() {
        return this.organizationId;
    }

    /**
     * Data or payload that is being retrieved and associated with the unique key.
     * 
     */
    @Import(name="value", required=true)
    private Output<String> value;

    /**
     * @return Data or payload that is being retrieved and associated with the unique key.
     * 
     */
    public Output<String> value() {
        return this.value;
    }

    private EnvironmentEntryArgs() {}

    private EnvironmentEntryArgs(EnvironmentEntryArgs $) {
        this.environmentId = $.environmentId;
        this.keyvaluemapId = $.keyvaluemapId;
        this.name = $.name;
        this.organizationId = $.organizationId;
        this.value = $.value;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EnvironmentEntryArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EnvironmentEntryArgs $;

        public Builder() {
            $ = new EnvironmentEntryArgs();
        }

        public Builder(EnvironmentEntryArgs defaults) {
            $ = new EnvironmentEntryArgs(Objects.requireNonNull(defaults));
        }

        public Builder environmentId(Output<String> environmentId) {
            $.environmentId = environmentId;
            return this;
        }

        public Builder environmentId(String environmentId) {
            return environmentId(Output.of(environmentId));
        }

        public Builder keyvaluemapId(Output<String> keyvaluemapId) {
            $.keyvaluemapId = keyvaluemapId;
            return this;
        }

        public Builder keyvaluemapId(String keyvaluemapId) {
            return keyvaluemapId(Output.of(keyvaluemapId));
        }

        /**
         * @param name Resource URI that can be used to identify the scope of the key value map entries.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Resource URI that can be used to identify the scope of the key value map entries.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder organizationId(Output<String> organizationId) {
            $.organizationId = organizationId;
            return this;
        }

        public Builder organizationId(String organizationId) {
            return organizationId(Output.of(organizationId));
        }

        /**
         * @param value Data or payload that is being retrieved and associated with the unique key.
         * 
         * @return builder
         * 
         */
        public Builder value(Output<String> value) {
            $.value = value;
            return this;
        }

        /**
         * @param value Data or payload that is being retrieved and associated with the unique key.
         * 
         * @return builder
         * 
         */
        public Builder value(String value) {
            return value(Output.of(value));
        }

        public EnvironmentEntryArgs build() {
            $.environmentId = Objects.requireNonNull($.environmentId, "expected parameter 'environmentId' to be non-null");
            $.keyvaluemapId = Objects.requireNonNull($.keyvaluemapId, "expected parameter 'keyvaluemapId' to be non-null");
            $.organizationId = Objects.requireNonNull($.organizationId, "expected parameter 'organizationId' to be non-null");
            $.value = Objects.requireNonNull($.value, "expected parameter 'value' to be non-null");
            return $;
        }
    }

}
