// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.dataproc_v1.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.dataproc_v1.inputs.IdentityConfigResponse;
import com.pulumi.googlenative.dataproc_v1.inputs.KerberosConfigResponse;
import java.util.Objects;


/**
 * Security related configuration, including encryption, Kerberos, etc.
 * 
 */
public final class SecurityConfigResponse extends com.pulumi.resources.InvokeArgs {

    public static final SecurityConfigResponse Empty = new SecurityConfigResponse();

    /**
     * Optional. Identity related configuration, including service account based secure multi-tenancy user mappings.
     * 
     */
    @Import(name="identityConfig", required=true)
    private IdentityConfigResponse identityConfig;

    /**
     * @return Optional. Identity related configuration, including service account based secure multi-tenancy user mappings.
     * 
     */
    public IdentityConfigResponse identityConfig() {
        return this.identityConfig;
    }

    /**
     * Optional. Kerberos related configuration.
     * 
     */
    @Import(name="kerberosConfig", required=true)
    private KerberosConfigResponse kerberosConfig;

    /**
     * @return Optional. Kerberos related configuration.
     * 
     */
    public KerberosConfigResponse kerberosConfig() {
        return this.kerberosConfig;
    }

    private SecurityConfigResponse() {}

    private SecurityConfigResponse(SecurityConfigResponse $) {
        this.identityConfig = $.identityConfig;
        this.kerberosConfig = $.kerberosConfig;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SecurityConfigResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SecurityConfigResponse $;

        public Builder() {
            $ = new SecurityConfigResponse();
        }

        public Builder(SecurityConfigResponse defaults) {
            $ = new SecurityConfigResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param identityConfig Optional. Identity related configuration, including service account based secure multi-tenancy user mappings.
         * 
         * @return builder
         * 
         */
        public Builder identityConfig(IdentityConfigResponse identityConfig) {
            $.identityConfig = identityConfig;
            return this;
        }

        /**
         * @param kerberosConfig Optional. Kerberos related configuration.
         * 
         * @return builder
         * 
         */
        public Builder kerberosConfig(KerberosConfigResponse kerberosConfig) {
            $.kerberosConfig = kerberosConfig;
            return this;
        }

        public SecurityConfigResponse build() {
            $.identityConfig = Objects.requireNonNull($.identityConfig, "expected parameter 'identityConfig' to be non-null");
            $.kerberosConfig = Objects.requireNonNull($.kerberosConfig, "expected parameter 'kerberosConfig' to be non-null");
            return $;
        }
    }

}
