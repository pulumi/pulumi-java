// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.servicemanagement_v1.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * Specifies a location to extract JWT from an API request.
 * 
 */
public final class JwtLocationResponse extends com.pulumi.resources.InvokeArgs {

    public static final JwtLocationResponse Empty = new JwtLocationResponse();

    /**
     * Specifies HTTP header name to extract JWT token.
     * 
     */
    @Import(name="header", required=true)
    private String header;

    public String header() {
        return this.header;
    }

    /**
     * Specifies URL query parameter name to extract JWT token.
     * 
     */
    @Import(name="query", required=true)
    private String query;

    public String query() {
        return this.query;
    }

    /**
     * The value prefix. The value format is &#34;value_prefix{token}&#34; Only applies to &#34;in&#34; header type. Must be empty for &#34;in&#34; query type. If not empty, the header value has to match (case sensitive) this prefix. If not matched, JWT will not be extracted. If matched, JWT will be extracted after the prefix is removed. For example, for &#34;Authorization: Bearer {JWT}&#34;, value_prefix=&#34;Bearer &#34; with a space at the end.
     * 
     */
    @Import(name="valuePrefix", required=true)
    private String valuePrefix;

    public String valuePrefix() {
        return this.valuePrefix;
    }

    private JwtLocationResponse() {}

    private JwtLocationResponse(JwtLocationResponse $) {
        this.header = $.header;
        this.query = $.query;
        this.valuePrefix = $.valuePrefix;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(JwtLocationResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private JwtLocationResponse $;

        public Builder() {
            $ = new JwtLocationResponse();
        }

        public Builder(JwtLocationResponse defaults) {
            $ = new JwtLocationResponse(Objects.requireNonNull(defaults));
        }

        public Builder header(String header) {
            $.header = header;
            return this;
        }

        public Builder query(String query) {
            $.query = query;
            return this;
        }

        public Builder valuePrefix(String valuePrefix) {
            $.valuePrefix = valuePrefix;
            return this;
        }

        public JwtLocationResponse build() {
            $.header = Objects.requireNonNull($.header, "expected parameter 'header' to be non-null");
            $.query = Objects.requireNonNull($.query, "expected parameter 'query' to be non-null");
            $.valuePrefix = Objects.requireNonNull($.valuePrefix, "expected parameter 'valuePrefix' to be non-null");
            return $;
        }
    }

}
