// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.bigquery.v2.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DatasetReferenceArgs extends com.pulumi.resources.ResourceArgs {

    public static final DatasetReferenceArgs Empty = new DatasetReferenceArgs();

    /**
     * [Required] A unique ID for this dataset, without the project name. The ID must contain only letters (a-z, A-Z), numbers (0-9), or underscores (_). The maximum length is 1,024 characters.
     * 
     */
    @Import(name="datasetId")
    private @Nullable Output<String> datasetId;

    /**
     * @return [Required] A unique ID for this dataset, without the project name. The ID must contain only letters (a-z, A-Z), numbers (0-9), or underscores (_). The maximum length is 1,024 characters.
     * 
     */
    public Optional<Output<String>> datasetId() {
        return Optional.ofNullable(this.datasetId);
    }

    /**
     * [Optional] The ID of the project containing this dataset.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return [Optional] The ID of the project containing this dataset.
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    private DatasetReferenceArgs() {}

    private DatasetReferenceArgs(DatasetReferenceArgs $) {
        this.datasetId = $.datasetId;
        this.project = $.project;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DatasetReferenceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DatasetReferenceArgs $;

        public Builder() {
            $ = new DatasetReferenceArgs();
        }

        public Builder(DatasetReferenceArgs defaults) {
            $ = new DatasetReferenceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param datasetId [Required] A unique ID for this dataset, without the project name. The ID must contain only letters (a-z, A-Z), numbers (0-9), or underscores (_). The maximum length is 1,024 characters.
         * 
         * @return builder
         * 
         */
        public Builder datasetId(@Nullable Output<String> datasetId) {
            $.datasetId = datasetId;
            return this;
        }

        /**
         * @param datasetId [Required] A unique ID for this dataset, without the project name. The ID must contain only letters (a-z, A-Z), numbers (0-9), or underscores (_). The maximum length is 1,024 characters.
         * 
         * @return builder
         * 
         */
        public Builder datasetId(String datasetId) {
            return datasetId(Output.of(datasetId));
        }

        /**
         * @param project [Optional] The ID of the project containing this dataset.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project [Optional] The ID of the project containing this dataset.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        public DatasetReferenceArgs build() {
            return $;
        }
    }

}
