// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.apigee.v1;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.googlenative.Utilities;
import com.pulumi.googlenative.apigee.v1.ReportArgs;
import com.pulumi.googlenative.apigee.v1.outputs.GoogleCloudApigeeV1CustomReportMetricResponse;
import com.pulumi.googlenative.apigee.v1.outputs.GoogleCloudApigeeV1ReportPropertyResponse;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * Creates a Custom Report for an Organization. A Custom Report provides Apigee Customers to create custom dashboards in addition to the standard dashboards which are provided. The Custom Report in its simplest form contains specifications about metrics, dimensions and filters. It is important to note that the custom report by itself does not provide an executable entity. The Edge UI converts the custom report definition into an analytics query and displays the result in a chart.
 * 
 */
@ResourceType(type="google-native:apigee/v1:Report")
public class Report extends com.pulumi.resources.CustomResource {
    /**
     * This field contains the chart type for the report
     * 
     */
    @Export(name="chartType", type=String.class, parameters={})
    private Output<String> chartType;

    /**
     * @return This field contains the chart type for the report
     * 
     */
    public Output<String> chartType() {
        return this.chartType;
    }
    /**
     * Legacy field: not used. This field contains a list of comments associated with custom report
     * 
     */
    @Export(name="comments", type=List.class, parameters={String.class})
    private Output<List<String>> comments;

    /**
     * @return Legacy field: not used. This field contains a list of comments associated with custom report
     * 
     */
    public Output<List<String>> comments() {
        return this.comments;
    }
    /**
     * Unix time when the app was created json key: createdAt
     * 
     */
    @Export(name="createdAt", type=String.class, parameters={})
    private Output<String> createdAt;

    /**
     * @return Unix time when the app was created json key: createdAt
     * 
     */
    public Output<String> createdAt() {
        return this.createdAt;
    }
    /**
     * This contains the list of dimensions for the report
     * 
     */
    @Export(name="dimensions", type=List.class, parameters={String.class})
    private Output<List<String>> dimensions;

    /**
     * @return This contains the list of dimensions for the report
     * 
     */
    public Output<List<String>> dimensions() {
        return this.dimensions;
    }
    /**
     * This is the display name for the report
     * 
     */
    @Export(name="displayName", type=String.class, parameters={})
    private Output<String> displayName;

    /**
     * @return This is the display name for the report
     * 
     */
    public Output<String> displayName() {
        return this.displayName;
    }
    /**
     * Environment name
     * 
     */
    @Export(name="environment", type=String.class, parameters={})
    private Output<String> environment;

    /**
     * @return Environment name
     * 
     */
    public Output<String> environment() {
        return this.environment;
    }
    /**
     * This field contains the filter expression
     * 
     */
    @Export(name="filter", type=String.class, parameters={})
    private Output<String> filter;

    /**
     * @return This field contains the filter expression
     * 
     */
    public Output<String> filter() {
        return this.filter;
    }
    /**
     * Legacy field: not used. Contains the from time for the report
     * 
     */
    @Export(name="fromTime", type=String.class, parameters={})
    private Output<String> fromTime;

    /**
     * @return Legacy field: not used. Contains the from time for the report
     * 
     */
    public Output<String> fromTime() {
        return this.fromTime;
    }
    /**
     * Modified time of this entity as milliseconds since epoch. json key: lastModifiedAt
     * 
     */
    @Export(name="lastModifiedAt", type=String.class, parameters={})
    private Output<String> lastModifiedAt;

    /**
     * @return Modified time of this entity as milliseconds since epoch. json key: lastModifiedAt
     * 
     */
    public Output<String> lastModifiedAt() {
        return this.lastModifiedAt;
    }
    /**
     * Last viewed time of this entity as milliseconds since epoch
     * 
     */
    @Export(name="lastViewedAt", type=String.class, parameters={})
    private Output<String> lastViewedAt;

    /**
     * @return Last viewed time of this entity as milliseconds since epoch
     * 
     */
    public Output<String> lastViewedAt() {
        return this.lastViewedAt;
    }
    /**
     * Legacy field: not used This field contains the limit for the result retrieved
     * 
     */
    @Export(name="limit", type=String.class, parameters={})
    private Output<String> limit;

    /**
     * @return Legacy field: not used This field contains the limit for the result retrieved
     * 
     */
    public Output<String> limit() {
        return this.limit;
    }
    /**
     * This contains the list of metrics
     * 
     */
    @Export(name="metrics", type=List.class, parameters={GoogleCloudApigeeV1CustomReportMetricResponse.class})
    private Output<List<GoogleCloudApigeeV1CustomReportMetricResponse>> metrics;

    /**
     * @return This contains the list of metrics
     * 
     */
    public Output<List<GoogleCloudApigeeV1CustomReportMetricResponse>> metrics() {
        return this.metrics;
    }
    /**
     * Unique identifier for the report T his is a legacy field used to encode custom report unique id
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return Unique identifier for the report T his is a legacy field used to encode custom report unique id
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Legacy field: not used. This field contains the offset for the data
     * 
     */
    @Export(name="offset", type=String.class, parameters={})
    private Output<String> offset;

    /**
     * @return Legacy field: not used. This field contains the offset for the data
     * 
     */
    public Output<String> offset() {
        return this.offset;
    }
    /**
     * Organization name
     * 
     */
    @Export(name="organization", type=String.class, parameters={})
    private Output<String> organization;

    /**
     * @return Organization name
     * 
     */
    public Output<String> organization() {
        return this.organization;
    }
    @Export(name="organizationId", type=String.class, parameters={})
    private Output<String> organizationId;

    public Output<String> organizationId() {
        return this.organizationId;
    }
    /**
     * This field contains report properties such as ui metadata etc.
     * 
     */
    @Export(name="properties", type=List.class, parameters={GoogleCloudApigeeV1ReportPropertyResponse.class})
    private Output<List<GoogleCloudApigeeV1ReportPropertyResponse>> properties;

    /**
     * @return This field contains report properties such as ui metadata etc.
     * 
     */
    public Output<List<GoogleCloudApigeeV1ReportPropertyResponse>> properties() {
        return this.properties;
    }
    /**
     * Legacy field: not used much. Contains the list of sort by columns
     * 
     */
    @Export(name="sortByCols", type=List.class, parameters={String.class})
    private Output<List<String>> sortByCols;

    /**
     * @return Legacy field: not used much. Contains the list of sort by columns
     * 
     */
    public Output<List<String>> sortByCols() {
        return this.sortByCols;
    }
    /**
     * Legacy field: not used much. Contains the sort order for the sort columns
     * 
     */
    @Export(name="sortOrder", type=String.class, parameters={})
    private Output<String> sortOrder;

    /**
     * @return Legacy field: not used much. Contains the sort order for the sort columns
     * 
     */
    public Output<String> sortOrder() {
        return this.sortOrder;
    }
    /**
     * Legacy field: not used. This field contains a list of tags associated with custom report
     * 
     */
    @Export(name="tags", type=List.class, parameters={String.class})
    private Output<List<String>> tags;

    /**
     * @return Legacy field: not used. This field contains a list of tags associated with custom report
     * 
     */
    public Output<List<String>> tags() {
        return this.tags;
    }
    /**
     * This field contains the time unit of aggregation for the report
     * 
     */
    @Export(name="timeUnit", type=String.class, parameters={})
    private Output<String> timeUnit;

    /**
     * @return This field contains the time unit of aggregation for the report
     * 
     */
    public Output<String> timeUnit() {
        return this.timeUnit;
    }
    /**
     * Legacy field: not used. Contains the end time for the report
     * 
     */
    @Export(name="toTime", type=String.class, parameters={})
    private Output<String> toTime;

    /**
     * @return Legacy field: not used. Contains the end time for the report
     * 
     */
    public Output<String> toTime() {
        return this.toTime;
    }
    /**
     * Legacy field: not used. This field contains the top k parameter value for restricting the result
     * 
     */
    @Export(name="topk", type=String.class, parameters={})
    private Output<String> topk;

    /**
     * @return Legacy field: not used. This field contains the top k parameter value for restricting the result
     * 
     */
    public Output<String> topk() {
        return this.topk;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Report(String name) {
        this(name, ReportArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Report(String name, ReportArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Report(String name, ReportArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("google-native:apigee/v1:Report", name, args == null ? ReportArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Report(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("google-native:apigee/v1:Report", name, null, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Report get(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Report(name, id, options);
    }
}
