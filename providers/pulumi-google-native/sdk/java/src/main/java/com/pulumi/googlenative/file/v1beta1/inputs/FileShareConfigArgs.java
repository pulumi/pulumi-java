// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.file.v1beta1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.file.v1beta1.inputs.NfsExportOptionsArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * File share configuration for the instance.
 * 
 */
public final class FileShareConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final FileShareConfigArgs Empty = new FileShareConfigArgs();

    /**
     * File share capacity in gigabytes (GB). Cloud Filestore defines 1 GB as 1024^3 bytes.
     * 
     */
    @Import(name="capacityGb")
    private @Nullable Output<String> capacityGb;

    /**
     * @return File share capacity in gigabytes (GB). Cloud Filestore defines 1 GB as 1024^3 bytes.
     * 
     */
    public Optional<Output<String>> capacityGb() {
        return Optional.ofNullable(this.capacityGb);
    }

    /**
     * The name of the file share (must be 32 characters or less for Enterprise and High Scale SSD tiers and 16 characters or less for all other tiers).
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the file share (must be 32 characters or less for Enterprise and High Scale SSD tiers and 16 characters or less for all other tiers).
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Nfs Export Options. There is a limit of 10 export options per file share.
     * 
     */
    @Import(name="nfsExportOptions")
    private @Nullable Output<List<NfsExportOptionsArgs>> nfsExportOptions;

    /**
     * @return Nfs Export Options. There is a limit of 10 export options per file share.
     * 
     */
    public Optional<Output<List<NfsExportOptionsArgs>>> nfsExportOptions() {
        return Optional.ofNullable(this.nfsExportOptions);
    }

    /**
     * The resource name of the backup, in the format `projects/{project_id}/locations/{location_id}/backups/{backup_id}`, that this file share has been restored from.
     * 
     */
    @Import(name="sourceBackup")
    private @Nullable Output<String> sourceBackup;

    /**
     * @return The resource name of the backup, in the format `projects/{project_id}/locations/{location_id}/backups/{backup_id}`, that this file share has been restored from.
     * 
     */
    public Optional<Output<String>> sourceBackup() {
        return Optional.ofNullable(this.sourceBackup);
    }

    private FileShareConfigArgs() {}

    private FileShareConfigArgs(FileShareConfigArgs $) {
        this.capacityGb = $.capacityGb;
        this.name = $.name;
        this.nfsExportOptions = $.nfsExportOptions;
        this.sourceBackup = $.sourceBackup;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FileShareConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FileShareConfigArgs $;

        public Builder() {
            $ = new FileShareConfigArgs();
        }

        public Builder(FileShareConfigArgs defaults) {
            $ = new FileShareConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param capacityGb File share capacity in gigabytes (GB). Cloud Filestore defines 1 GB as 1024^3 bytes.
         * 
         * @return builder
         * 
         */
        public Builder capacityGb(@Nullable Output<String> capacityGb) {
            $.capacityGb = capacityGb;
            return this;
        }

        /**
         * @param capacityGb File share capacity in gigabytes (GB). Cloud Filestore defines 1 GB as 1024^3 bytes.
         * 
         * @return builder
         * 
         */
        public Builder capacityGb(String capacityGb) {
            return capacityGb(Output.of(capacityGb));
        }

        /**
         * @param name The name of the file share (must be 32 characters or less for Enterprise and High Scale SSD tiers and 16 characters or less for all other tiers).
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the file share (must be 32 characters or less for Enterprise and High Scale SSD tiers and 16 characters or less for all other tiers).
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param nfsExportOptions Nfs Export Options. There is a limit of 10 export options per file share.
         * 
         * @return builder
         * 
         */
        public Builder nfsExportOptions(@Nullable Output<List<NfsExportOptionsArgs>> nfsExportOptions) {
            $.nfsExportOptions = nfsExportOptions;
            return this;
        }

        /**
         * @param nfsExportOptions Nfs Export Options. There is a limit of 10 export options per file share.
         * 
         * @return builder
         * 
         */
        public Builder nfsExportOptions(List<NfsExportOptionsArgs> nfsExportOptions) {
            return nfsExportOptions(Output.of(nfsExportOptions));
        }

        /**
         * @param nfsExportOptions Nfs Export Options. There is a limit of 10 export options per file share.
         * 
         * @return builder
         * 
         */
        public Builder nfsExportOptions(NfsExportOptionsArgs... nfsExportOptions) {
            return nfsExportOptions(List.of(nfsExportOptions));
        }

        /**
         * @param sourceBackup The resource name of the backup, in the format `projects/{project_id}/locations/{location_id}/backups/{backup_id}`, that this file share has been restored from.
         * 
         * @return builder
         * 
         */
        public Builder sourceBackup(@Nullable Output<String> sourceBackup) {
            $.sourceBackup = sourceBackup;
            return this;
        }

        /**
         * @param sourceBackup The resource name of the backup, in the format `projects/{project_id}/locations/{location_id}/backups/{backup_id}`, that this file share has been restored from.
         * 
         * @return builder
         * 
         */
        public Builder sourceBackup(String sourceBackup) {
            return sourceBackup(Output.of(sourceBackup));
        }

        public FileShareConfigArgs build() {
            return $;
        }
    }

}
