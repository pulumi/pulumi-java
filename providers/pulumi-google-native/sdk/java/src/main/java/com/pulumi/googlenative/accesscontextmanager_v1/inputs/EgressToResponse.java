// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.accesscontextmanager_v1.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.accesscontextmanager_v1.inputs.ApiOperationResponse;
import java.lang.String;
import java.util.List;
import java.util.Objects;


/**
 * Defines the conditions under which an EgressPolicy matches a request. Conditions are based on information about the ApiOperation intended to be performed on the `resources` specified. Note that if the destination of the request is also protected by a ServicePerimeter, then that ServicePerimeter must have an IngressPolicy which allows access in order for this request to succeed. The request must match `operations` AND `resources` fields in order to be allowed egress out of the perimeter.
 * 
 */
public final class EgressToResponse extends com.pulumi.resources.InvokeArgs {

    public static final EgressToResponse Empty = new EgressToResponse();

    /**
     * A list of ApiOperations allowed to be performed by the sources specified in the corresponding EgressFrom. A request matches if it uses an operation/service in this list.
     * 
     */
    @Import(name="operations", required=true)
    private List<ApiOperationResponse> operations;

    /**
     * @return A list of ApiOperations allowed to be performed by the sources specified in the corresponding EgressFrom. A request matches if it uses an operation/service in this list.
     * 
     */
    public List<ApiOperationResponse> operations() {
        return this.operations;
    }

    /**
     * A list of resources, currently only projects in the form `projects/`, that are allowed to be accessed by sources defined in the corresponding EgressFrom. A request matches if it contains a resource in this list. If `*` is specified for `resources`, then this EgressTo rule will authorize access to all resources outside the perimeter.
     * 
     */
    @Import(name="resources", required=true)
    private List<String> resources;

    /**
     * @return A list of resources, currently only projects in the form `projects/`, that are allowed to be accessed by sources defined in the corresponding EgressFrom. A request matches if it contains a resource in this list. If `*` is specified for `resources`, then this EgressTo rule will authorize access to all resources outside the perimeter.
     * 
     */
    public List<String> resources() {
        return this.resources;
    }

    private EgressToResponse() {}

    private EgressToResponse(EgressToResponse $) {
        this.operations = $.operations;
        this.resources = $.resources;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EgressToResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EgressToResponse $;

        public Builder() {
            $ = new EgressToResponse();
        }

        public Builder(EgressToResponse defaults) {
            $ = new EgressToResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param operations A list of ApiOperations allowed to be performed by the sources specified in the corresponding EgressFrom. A request matches if it uses an operation/service in this list.
         * 
         * @return builder
         * 
         */
        public Builder operations(List<ApiOperationResponse> operations) {
            $.operations = operations;
            return this;
        }

        /**
         * @param operations A list of ApiOperations allowed to be performed by the sources specified in the corresponding EgressFrom. A request matches if it uses an operation/service in this list.
         * 
         * @return builder
         * 
         */
        public Builder operations(ApiOperationResponse... operations) {
            return operations(List.of(operations));
        }

        /**
         * @param resources A list of resources, currently only projects in the form `projects/`, that are allowed to be accessed by sources defined in the corresponding EgressFrom. A request matches if it contains a resource in this list. If `*` is specified for `resources`, then this EgressTo rule will authorize access to all resources outside the perimeter.
         * 
         * @return builder
         * 
         */
        public Builder resources(List<String> resources) {
            $.resources = resources;
            return this;
        }

        /**
         * @param resources A list of resources, currently only projects in the form `projects/`, that are allowed to be accessed by sources defined in the corresponding EgressFrom. A request matches if it contains a resource in this list. If `*` is specified for `resources`, then this EgressTo rule will authorize access to all resources outside the perimeter.
         * 
         * @return builder
         * 
         */
        public Builder resources(String... resources) {
            return resources(List.of(resources));
        }

        public EgressToResponse build() {
            $.operations = Objects.requireNonNull($.operations, "expected parameter 'operations' to be non-null");
            $.resources = Objects.requireNonNull($.resources, "expected parameter 'resources' to be non-null");
            return $;
        }
    }

}
