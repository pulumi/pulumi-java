// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.osconfig_v1beta.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.osconfig_v1beta.enums.PatchConfigRebootConfig;
import com.pulumi.googlenative.osconfig_v1beta.inputs.AptSettingsArgs;
import com.pulumi.googlenative.osconfig_v1beta.inputs.ExecStepArgs;
import com.pulumi.googlenative.osconfig_v1beta.inputs.GooSettingsArgs;
import com.pulumi.googlenative.osconfig_v1beta.inputs.WindowsUpdateSettingsArgs;
import com.pulumi.googlenative.osconfig_v1beta.inputs.YumSettingsArgs;
import com.pulumi.googlenative.osconfig_v1beta.inputs.ZypperSettingsArgs;
import java.lang.Boolean;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Patch configuration specifications. Contains details on how to apply the patch(es) to a VM instance.
 * 
 */
public final class PatchConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final PatchConfigArgs Empty = new PatchConfigArgs();

    /**
     * Apt update settings. Use this setting to override the default `apt` patch rules.
     * 
     */
    @Import(name="apt")
    private @Nullable Output<AptSettingsArgs> apt;

    public Optional<Output<AptSettingsArgs>> apt() {
        return Optional.ofNullable(this.apt);
    }

    /**
     * Goo update settings. Use this setting to override the default `goo` patch rules.
     * 
     */
    @Import(name="goo")
    private @Nullable Output<GooSettingsArgs> goo;

    public Optional<Output<GooSettingsArgs>> goo() {
        return Optional.ofNullable(this.goo);
    }

    /**
     * Allows the patch job to run on Managed instance groups (MIGs).
     * 
     */
    @Import(name="migInstancesAllowed")
    private @Nullable Output<Boolean> migInstancesAllowed;

    public Optional<Output<Boolean>> migInstancesAllowed() {
        return Optional.ofNullable(this.migInstancesAllowed);
    }

    /**
     * The `ExecStep` to run after the patch update.
     * 
     */
    @Import(name="postStep")
    private @Nullable Output<ExecStepArgs> postStep;

    public Optional<Output<ExecStepArgs>> postStep() {
        return Optional.ofNullable(this.postStep);
    }

    /**
     * The `ExecStep` to run before the patch update.
     * 
     */
    @Import(name="preStep")
    private @Nullable Output<ExecStepArgs> preStep;

    public Optional<Output<ExecStepArgs>> preStep() {
        return Optional.ofNullable(this.preStep);
    }

    /**
     * Post-patch reboot settings.
     * 
     */
    @Import(name="rebootConfig")
    private @Nullable Output<PatchConfigRebootConfig> rebootConfig;

    public Optional<Output<PatchConfigRebootConfig>> rebootConfig() {
        return Optional.ofNullable(this.rebootConfig);
    }

    /**
     * Windows update settings. Use this override the default windows patch rules.
     * 
     */
    @Import(name="windowsUpdate")
    private @Nullable Output<WindowsUpdateSettingsArgs> windowsUpdate;

    public Optional<Output<WindowsUpdateSettingsArgs>> windowsUpdate() {
        return Optional.ofNullable(this.windowsUpdate);
    }

    /**
     * Yum update settings. Use this setting to override the default `yum` patch rules.
     * 
     */
    @Import(name="yum")
    private @Nullable Output<YumSettingsArgs> yum;

    public Optional<Output<YumSettingsArgs>> yum() {
        return Optional.ofNullable(this.yum);
    }

    /**
     * Zypper update settings. Use this setting to override the default `zypper` patch rules.
     * 
     */
    @Import(name="zypper")
    private @Nullable Output<ZypperSettingsArgs> zypper;

    public Optional<Output<ZypperSettingsArgs>> zypper() {
        return Optional.ofNullable(this.zypper);
    }

    private PatchConfigArgs() {}

    private PatchConfigArgs(PatchConfigArgs $) {
        this.apt = $.apt;
        this.goo = $.goo;
        this.migInstancesAllowed = $.migInstancesAllowed;
        this.postStep = $.postStep;
        this.preStep = $.preStep;
        this.rebootConfig = $.rebootConfig;
        this.windowsUpdate = $.windowsUpdate;
        this.yum = $.yum;
        this.zypper = $.zypper;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PatchConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PatchConfigArgs $;

        public Builder() {
            $ = new PatchConfigArgs();
        }

        public Builder(PatchConfigArgs defaults) {
            $ = new PatchConfigArgs(Objects.requireNonNull(defaults));
        }

        public Builder apt(@Nullable Output<AptSettingsArgs> apt) {
            $.apt = apt;
            return this;
        }

        public Builder apt(AptSettingsArgs apt) {
            return apt(Output.of(apt));
        }

        public Builder goo(@Nullable Output<GooSettingsArgs> goo) {
            $.goo = goo;
            return this;
        }

        public Builder goo(GooSettingsArgs goo) {
            return goo(Output.of(goo));
        }

        public Builder migInstancesAllowed(@Nullable Output<Boolean> migInstancesAllowed) {
            $.migInstancesAllowed = migInstancesAllowed;
            return this;
        }

        public Builder migInstancesAllowed(Boolean migInstancesAllowed) {
            return migInstancesAllowed(Output.of(migInstancesAllowed));
        }

        public Builder postStep(@Nullable Output<ExecStepArgs> postStep) {
            $.postStep = postStep;
            return this;
        }

        public Builder postStep(ExecStepArgs postStep) {
            return postStep(Output.of(postStep));
        }

        public Builder preStep(@Nullable Output<ExecStepArgs> preStep) {
            $.preStep = preStep;
            return this;
        }

        public Builder preStep(ExecStepArgs preStep) {
            return preStep(Output.of(preStep));
        }

        public Builder rebootConfig(@Nullable Output<PatchConfigRebootConfig> rebootConfig) {
            $.rebootConfig = rebootConfig;
            return this;
        }

        public Builder rebootConfig(PatchConfigRebootConfig rebootConfig) {
            return rebootConfig(Output.of(rebootConfig));
        }

        public Builder windowsUpdate(@Nullable Output<WindowsUpdateSettingsArgs> windowsUpdate) {
            $.windowsUpdate = windowsUpdate;
            return this;
        }

        public Builder windowsUpdate(WindowsUpdateSettingsArgs windowsUpdate) {
            return windowsUpdate(Output.of(windowsUpdate));
        }

        public Builder yum(@Nullable Output<YumSettingsArgs> yum) {
            $.yum = yum;
            return this;
        }

        public Builder yum(YumSettingsArgs yum) {
            return yum(Output.of(yum));
        }

        public Builder zypper(@Nullable Output<ZypperSettingsArgs> zypper) {
            $.zypper = zypper;
            return this;
        }

        public Builder zypper(ZypperSettingsArgs zypper) {
            return zypper(Output.of(zypper));
        }

        public PatchConfigArgs build() {
            return $;
        }
    }

}
