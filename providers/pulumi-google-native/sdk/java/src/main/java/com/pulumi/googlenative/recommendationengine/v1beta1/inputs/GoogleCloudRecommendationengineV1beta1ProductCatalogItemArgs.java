// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.recommendationengine.v1beta1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.recommendationengine.v1beta1.enums.GoogleCloudRecommendationengineV1beta1ProductCatalogItemStockState;
import com.pulumi.googlenative.recommendationengine.v1beta1.inputs.GoogleCloudRecommendationengineV1beta1ImageArgs;
import com.pulumi.googlenative.recommendationengine.v1beta1.inputs.GoogleCloudRecommendationengineV1beta1ProductCatalogItemExactPriceArgs;
import com.pulumi.googlenative.recommendationengine.v1beta1.inputs.GoogleCloudRecommendationengineV1beta1ProductCatalogItemPriceRangeArgs;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * ProductCatalogItem captures item metadata specific to retail products.
 * 
 */
public final class GoogleCloudRecommendationengineV1beta1ProductCatalogItemArgs extends com.pulumi.resources.ResourceArgs {

    public static final GoogleCloudRecommendationengineV1beta1ProductCatalogItemArgs Empty = new GoogleCloudRecommendationengineV1beta1ProductCatalogItemArgs();

    /**
     * Optional. The available quantity of the item.
     * 
     */
    @Import(name="availableQuantity")
    private @Nullable Output<String> availableQuantity;

    /**
     * @return Optional. The available quantity of the item.
     * 
     */
    public Optional<Output<String>> availableQuantity() {
        return Optional.ofNullable(this.availableQuantity);
    }

    /**
     * Optional. Canonical URL directly linking to the item detail page with a length limit of 5 KiB..
     * 
     */
    @Import(name="canonicalProductUri")
    private @Nullable Output<String> canonicalProductUri;

    /**
     * @return Optional. Canonical URL directly linking to the item detail page with a length limit of 5 KiB..
     * 
     */
    public Optional<Output<String>> canonicalProductUri() {
        return Optional.ofNullable(this.canonicalProductUri);
    }

    /**
     * Optional. A map to pass the costs associated with the product. For example: {&#34;manufacturing&#34;: 45.5} The profit of selling this item is computed like so: * If &#39;exactPrice&#39; is provided, profit = displayPrice - sum(costs) * If &#39;priceRange&#39; is provided, profit = minPrice - sum(costs)
     * 
     */
    @Import(name="costs")
    private @Nullable Output<Map<String,String>> costs;

    /**
     * @return Optional. A map to pass the costs associated with the product. For example: {&#34;manufacturing&#34;: 45.5} The profit of selling this item is computed like so: * If &#39;exactPrice&#39; is provided, profit = displayPrice - sum(costs) * If &#39;priceRange&#39; is provided, profit = minPrice - sum(costs)
     * 
     */
    public Optional<Output<Map<String,String>>> costs() {
        return Optional.ofNullable(this.costs);
    }

    /**
     * Optional. Only required if the price is set. Currency code for price/costs. Use three-character ISO-4217 code.
     * 
     */
    @Import(name="currencyCode")
    private @Nullable Output<String> currencyCode;

    /**
     * @return Optional. Only required if the price is set. Currency code for price/costs. Use three-character ISO-4217 code.
     * 
     */
    public Optional<Output<String>> currencyCode() {
        return Optional.ofNullable(this.currencyCode);
    }

    /**
     * Optional. The exact product price.
     * 
     */
    @Import(name="exactPrice")
    private @Nullable Output<GoogleCloudRecommendationengineV1beta1ProductCatalogItemExactPriceArgs> exactPrice;

    /**
     * @return Optional. The exact product price.
     * 
     */
    public Optional<Output<GoogleCloudRecommendationengineV1beta1ProductCatalogItemExactPriceArgs>> exactPrice() {
        return Optional.ofNullable(this.exactPrice);
    }

    /**
     * Optional. Product images for the catalog item.
     * 
     */
    @Import(name="images")
    private @Nullable Output<List<GoogleCloudRecommendationengineV1beta1ImageArgs>> images;

    /**
     * @return Optional. Product images for the catalog item.
     * 
     */
    public Optional<Output<List<GoogleCloudRecommendationengineV1beta1ImageArgs>>> images() {
        return Optional.ofNullable(this.images);
    }

    /**
     * Optional. The product price range.
     * 
     */
    @Import(name="priceRange")
    private @Nullable Output<GoogleCloudRecommendationengineV1beta1ProductCatalogItemPriceRangeArgs> priceRange;

    /**
     * @return Optional. The product price range.
     * 
     */
    public Optional<Output<GoogleCloudRecommendationengineV1beta1ProductCatalogItemPriceRangeArgs>> priceRange() {
        return Optional.ofNullable(this.priceRange);
    }

    /**
     * Optional. Online stock state of the catalog item. Default is `IN_STOCK`.
     * 
     */
    @Import(name="stockState")
    private @Nullable Output<GoogleCloudRecommendationengineV1beta1ProductCatalogItemStockState> stockState;

    /**
     * @return Optional. Online stock state of the catalog item. Default is `IN_STOCK`.
     * 
     */
    public Optional<Output<GoogleCloudRecommendationengineV1beta1ProductCatalogItemStockState>> stockState() {
        return Optional.ofNullable(this.stockState);
    }

    private GoogleCloudRecommendationengineV1beta1ProductCatalogItemArgs() {}

    private GoogleCloudRecommendationengineV1beta1ProductCatalogItemArgs(GoogleCloudRecommendationengineV1beta1ProductCatalogItemArgs $) {
        this.availableQuantity = $.availableQuantity;
        this.canonicalProductUri = $.canonicalProductUri;
        this.costs = $.costs;
        this.currencyCode = $.currencyCode;
        this.exactPrice = $.exactPrice;
        this.images = $.images;
        this.priceRange = $.priceRange;
        this.stockState = $.stockState;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GoogleCloudRecommendationengineV1beta1ProductCatalogItemArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GoogleCloudRecommendationengineV1beta1ProductCatalogItemArgs $;

        public Builder() {
            $ = new GoogleCloudRecommendationengineV1beta1ProductCatalogItemArgs();
        }

        public Builder(GoogleCloudRecommendationengineV1beta1ProductCatalogItemArgs defaults) {
            $ = new GoogleCloudRecommendationengineV1beta1ProductCatalogItemArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param availableQuantity Optional. The available quantity of the item.
         * 
         * @return builder
         * 
         */
        public Builder availableQuantity(@Nullable Output<String> availableQuantity) {
            $.availableQuantity = availableQuantity;
            return this;
        }

        /**
         * @param availableQuantity Optional. The available quantity of the item.
         * 
         * @return builder
         * 
         */
        public Builder availableQuantity(String availableQuantity) {
            return availableQuantity(Output.of(availableQuantity));
        }

        /**
         * @param canonicalProductUri Optional. Canonical URL directly linking to the item detail page with a length limit of 5 KiB..
         * 
         * @return builder
         * 
         */
        public Builder canonicalProductUri(@Nullable Output<String> canonicalProductUri) {
            $.canonicalProductUri = canonicalProductUri;
            return this;
        }

        /**
         * @param canonicalProductUri Optional. Canonical URL directly linking to the item detail page with a length limit of 5 KiB..
         * 
         * @return builder
         * 
         */
        public Builder canonicalProductUri(String canonicalProductUri) {
            return canonicalProductUri(Output.of(canonicalProductUri));
        }

        /**
         * @param costs Optional. A map to pass the costs associated with the product. For example: {&#34;manufacturing&#34;: 45.5} The profit of selling this item is computed like so: * If &#39;exactPrice&#39; is provided, profit = displayPrice - sum(costs) * If &#39;priceRange&#39; is provided, profit = minPrice - sum(costs)
         * 
         * @return builder
         * 
         */
        public Builder costs(@Nullable Output<Map<String,String>> costs) {
            $.costs = costs;
            return this;
        }

        /**
         * @param costs Optional. A map to pass the costs associated with the product. For example: {&#34;manufacturing&#34;: 45.5} The profit of selling this item is computed like so: * If &#39;exactPrice&#39; is provided, profit = displayPrice - sum(costs) * If &#39;priceRange&#39; is provided, profit = minPrice - sum(costs)
         * 
         * @return builder
         * 
         */
        public Builder costs(Map<String,String> costs) {
            return costs(Output.of(costs));
        }

        /**
         * @param currencyCode Optional. Only required if the price is set. Currency code for price/costs. Use three-character ISO-4217 code.
         * 
         * @return builder
         * 
         */
        public Builder currencyCode(@Nullable Output<String> currencyCode) {
            $.currencyCode = currencyCode;
            return this;
        }

        /**
         * @param currencyCode Optional. Only required if the price is set. Currency code for price/costs. Use three-character ISO-4217 code.
         * 
         * @return builder
         * 
         */
        public Builder currencyCode(String currencyCode) {
            return currencyCode(Output.of(currencyCode));
        }

        /**
         * @param exactPrice Optional. The exact product price.
         * 
         * @return builder
         * 
         */
        public Builder exactPrice(@Nullable Output<GoogleCloudRecommendationengineV1beta1ProductCatalogItemExactPriceArgs> exactPrice) {
            $.exactPrice = exactPrice;
            return this;
        }

        /**
         * @param exactPrice Optional. The exact product price.
         * 
         * @return builder
         * 
         */
        public Builder exactPrice(GoogleCloudRecommendationengineV1beta1ProductCatalogItemExactPriceArgs exactPrice) {
            return exactPrice(Output.of(exactPrice));
        }

        /**
         * @param images Optional. Product images for the catalog item.
         * 
         * @return builder
         * 
         */
        public Builder images(@Nullable Output<List<GoogleCloudRecommendationengineV1beta1ImageArgs>> images) {
            $.images = images;
            return this;
        }

        /**
         * @param images Optional. Product images for the catalog item.
         * 
         * @return builder
         * 
         */
        public Builder images(List<GoogleCloudRecommendationengineV1beta1ImageArgs> images) {
            return images(Output.of(images));
        }

        /**
         * @param images Optional. Product images for the catalog item.
         * 
         * @return builder
         * 
         */
        public Builder images(GoogleCloudRecommendationengineV1beta1ImageArgs... images) {
            return images(List.of(images));
        }

        /**
         * @param priceRange Optional. The product price range.
         * 
         * @return builder
         * 
         */
        public Builder priceRange(@Nullable Output<GoogleCloudRecommendationengineV1beta1ProductCatalogItemPriceRangeArgs> priceRange) {
            $.priceRange = priceRange;
            return this;
        }

        /**
         * @param priceRange Optional. The product price range.
         * 
         * @return builder
         * 
         */
        public Builder priceRange(GoogleCloudRecommendationengineV1beta1ProductCatalogItemPriceRangeArgs priceRange) {
            return priceRange(Output.of(priceRange));
        }

        /**
         * @param stockState Optional. Online stock state of the catalog item. Default is `IN_STOCK`.
         * 
         * @return builder
         * 
         */
        public Builder stockState(@Nullable Output<GoogleCloudRecommendationengineV1beta1ProductCatalogItemStockState> stockState) {
            $.stockState = stockState;
            return this;
        }

        /**
         * @param stockState Optional. Online stock state of the catalog item. Default is `IN_STOCK`.
         * 
         * @return builder
         * 
         */
        public Builder stockState(GoogleCloudRecommendationengineV1beta1ProductCatalogItemStockState stockState) {
            return stockState(Output.of(stockState));
        }

        public GoogleCloudRecommendationengineV1beta1ProductCatalogItemArgs build() {
            return $;
        }
    }

}
