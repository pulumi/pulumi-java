// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.dataplex.v1;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.dataplex.v1.inputs.GoogleCloudDataplexV1TaskExecutionSpecArgs;
import com.pulumi.googlenative.dataplex.v1.inputs.GoogleCloudDataplexV1TaskSparkTaskConfigArgs;
import com.pulumi.googlenative.dataplex.v1.inputs.GoogleCloudDataplexV1TaskTriggerSpecArgs;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TaskArgs extends com.pulumi.resources.ResourceArgs {

    public static final TaskArgs Empty = new TaskArgs();

    /**
     * Optional. Description of the task.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Optional. Description of the task.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Optional. User friendly display name.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return Optional. User friendly display name.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * Spec related to how a task is executed.
     * 
     */
    @Import(name="executionSpec", required=true)
    private Output<GoogleCloudDataplexV1TaskExecutionSpecArgs> executionSpec;

    /**
     * @return Spec related to how a task is executed.
     * 
     */
    public Output<GoogleCloudDataplexV1TaskExecutionSpecArgs> executionSpec() {
        return this.executionSpec;
    }

    /**
     * Optional. User-defined labels for the task.
     * 
     */
    @Import(name="labels")
    private @Nullable Output<Map<String,String>> labels;

    /**
     * @return Optional. User-defined labels for the task.
     * 
     */
    public Optional<Output<Map<String,String>>> labels() {
        return Optional.ofNullable(this.labels);
    }

    @Import(name="lakeId", required=true)
    private Output<String> lakeId;

    public Output<String> lakeId() {
        return this.lakeId;
    }

    @Import(name="location")
    private @Nullable Output<String> location;

    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    @Import(name="project")
    private @Nullable Output<String> project;

    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * Config related to running custom Spark tasks.
     * 
     */
    @Import(name="spark")
    private @Nullable Output<GoogleCloudDataplexV1TaskSparkTaskConfigArgs> spark;

    /**
     * @return Config related to running custom Spark tasks.
     * 
     */
    public Optional<Output<GoogleCloudDataplexV1TaskSparkTaskConfigArgs>> spark() {
        return Optional.ofNullable(this.spark);
    }

    /**
     * Required. Task identifier.
     * 
     */
    @Import(name="taskId", required=true)
    private Output<String> taskId;

    /**
     * @return Required. Task identifier.
     * 
     */
    public Output<String> taskId() {
        return this.taskId;
    }

    /**
     * Spec related to how often and when a task should be triggered.
     * 
     */
    @Import(name="triggerSpec", required=true)
    private Output<GoogleCloudDataplexV1TaskTriggerSpecArgs> triggerSpec;

    /**
     * @return Spec related to how often and when a task should be triggered.
     * 
     */
    public Output<GoogleCloudDataplexV1TaskTriggerSpecArgs> triggerSpec() {
        return this.triggerSpec;
    }

    /**
     * Optional. Only validate the request, but do not perform mutations. The default is false.
     * 
     */
    @Import(name="validateOnly")
    private @Nullable Output<String> validateOnly;

    /**
     * @return Optional. Only validate the request, but do not perform mutations. The default is false.
     * 
     */
    public Optional<Output<String>> validateOnly() {
        return Optional.ofNullable(this.validateOnly);
    }

    private TaskArgs() {}

    private TaskArgs(TaskArgs $) {
        this.description = $.description;
        this.displayName = $.displayName;
        this.executionSpec = $.executionSpec;
        this.labels = $.labels;
        this.lakeId = $.lakeId;
        this.location = $.location;
        this.project = $.project;
        this.spark = $.spark;
        this.taskId = $.taskId;
        this.triggerSpec = $.triggerSpec;
        this.validateOnly = $.validateOnly;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TaskArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TaskArgs $;

        public Builder() {
            $ = new TaskArgs();
        }

        public Builder(TaskArgs defaults) {
            $ = new TaskArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param description Optional. Description of the task.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Optional. Description of the task.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param displayName Optional. User friendly display name.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName Optional. User friendly display name.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param executionSpec Spec related to how a task is executed.
         * 
         * @return builder
         * 
         */
        public Builder executionSpec(Output<GoogleCloudDataplexV1TaskExecutionSpecArgs> executionSpec) {
            $.executionSpec = executionSpec;
            return this;
        }

        /**
         * @param executionSpec Spec related to how a task is executed.
         * 
         * @return builder
         * 
         */
        public Builder executionSpec(GoogleCloudDataplexV1TaskExecutionSpecArgs executionSpec) {
            return executionSpec(Output.of(executionSpec));
        }

        /**
         * @param labels Optional. User-defined labels for the task.
         * 
         * @return builder
         * 
         */
        public Builder labels(@Nullable Output<Map<String,String>> labels) {
            $.labels = labels;
            return this;
        }

        /**
         * @param labels Optional. User-defined labels for the task.
         * 
         * @return builder
         * 
         */
        public Builder labels(Map<String,String> labels) {
            return labels(Output.of(labels));
        }

        public Builder lakeId(Output<String> lakeId) {
            $.lakeId = lakeId;
            return this;
        }

        public Builder lakeId(String lakeId) {
            return lakeId(Output.of(lakeId));
        }

        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        public Builder location(String location) {
            return location(Output.of(location));
        }

        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        public Builder project(String project) {
            return project(Output.of(project));
        }

        /**
         * @param spark Config related to running custom Spark tasks.
         * 
         * @return builder
         * 
         */
        public Builder spark(@Nullable Output<GoogleCloudDataplexV1TaskSparkTaskConfigArgs> spark) {
            $.spark = spark;
            return this;
        }

        /**
         * @param spark Config related to running custom Spark tasks.
         * 
         * @return builder
         * 
         */
        public Builder spark(GoogleCloudDataplexV1TaskSparkTaskConfigArgs spark) {
            return spark(Output.of(spark));
        }

        /**
         * @param taskId Required. Task identifier.
         * 
         * @return builder
         * 
         */
        public Builder taskId(Output<String> taskId) {
            $.taskId = taskId;
            return this;
        }

        /**
         * @param taskId Required. Task identifier.
         * 
         * @return builder
         * 
         */
        public Builder taskId(String taskId) {
            return taskId(Output.of(taskId));
        }

        /**
         * @param triggerSpec Spec related to how often and when a task should be triggered.
         * 
         * @return builder
         * 
         */
        public Builder triggerSpec(Output<GoogleCloudDataplexV1TaskTriggerSpecArgs> triggerSpec) {
            $.triggerSpec = triggerSpec;
            return this;
        }

        /**
         * @param triggerSpec Spec related to how often and when a task should be triggered.
         * 
         * @return builder
         * 
         */
        public Builder triggerSpec(GoogleCloudDataplexV1TaskTriggerSpecArgs triggerSpec) {
            return triggerSpec(Output.of(triggerSpec));
        }

        /**
         * @param validateOnly Optional. Only validate the request, but do not perform mutations. The default is false.
         * 
         * @return builder
         * 
         */
        public Builder validateOnly(@Nullable Output<String> validateOnly) {
            $.validateOnly = validateOnly;
            return this;
        }

        /**
         * @param validateOnly Optional. Only validate the request, but do not perform mutations. The default is false.
         * 
         * @return builder
         * 
         */
        public Builder validateOnly(String validateOnly) {
            return validateOnly(Output.of(validateOnly));
        }

        public TaskArgs build() {
            $.executionSpec = Objects.requireNonNull($.executionSpec, "expected parameter 'executionSpec' to be non-null");
            $.lakeId = Objects.requireNonNull($.lakeId, "expected parameter 'lakeId' to be non-null");
            $.taskId = Objects.requireNonNull($.taskId, "expected parameter 'taskId' to be non-null");
            $.triggerSpec = Objects.requireNonNull($.triggerSpec, "expected parameter 'triggerSpec' to be non-null");
            return $;
        }
    }

}
