// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.bigquery.v2.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetRoutineArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetRoutineArgs Empty = new GetRoutineArgs();

    @Import(name="datasetId", required=true)
    private Output<String> datasetId;

    public Output<String> datasetId() {
        return this.datasetId;
    }

    @Import(name="project")
    private @Nullable Output<String> project;

    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    @Import(name="readMask")
    private @Nullable Output<String> readMask;

    public Optional<Output<String>> readMask() {
        return Optional.ofNullable(this.readMask);
    }

    @Import(name="routineId", required=true)
    private Output<String> routineId;

    public Output<String> routineId() {
        return this.routineId;
    }

    private GetRoutineArgs() {}

    private GetRoutineArgs(GetRoutineArgs $) {
        this.datasetId = $.datasetId;
        this.project = $.project;
        this.readMask = $.readMask;
        this.routineId = $.routineId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetRoutineArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetRoutineArgs $;

        public Builder() {
            $ = new GetRoutineArgs();
        }

        public Builder(GetRoutineArgs defaults) {
            $ = new GetRoutineArgs(Objects.requireNonNull(defaults));
        }

        public Builder datasetId(Output<String> datasetId) {
            $.datasetId = datasetId;
            return this;
        }

        public Builder datasetId(String datasetId) {
            return datasetId(Output.of(datasetId));
        }

        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        public Builder project(String project) {
            return project(Output.of(project));
        }

        public Builder readMask(@Nullable Output<String> readMask) {
            $.readMask = readMask;
            return this;
        }

        public Builder readMask(String readMask) {
            return readMask(Output.of(readMask));
        }

        public Builder routineId(Output<String> routineId) {
            $.routineId = routineId;
            return this;
        }

        public Builder routineId(String routineId) {
            return routineId(Output.of(routineId));
        }

        public GetRoutineArgs build() {
            $.datasetId = Objects.requireNonNull($.datasetId, "expected parameter 'datasetId' to be non-null");
            $.routineId = Objects.requireNonNull($.routineId, "expected parameter 'routineId' to be non-null");
            return $;
        }
    }

}
