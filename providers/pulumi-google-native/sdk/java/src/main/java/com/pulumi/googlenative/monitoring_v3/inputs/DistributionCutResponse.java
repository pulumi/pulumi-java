// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.monitoring_v3.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.monitoring_v3.inputs.GoogleMonitoringV3RangeResponse;
import java.lang.String;
import java.util.Objects;


/**
 * A DistributionCut defines a TimeSeries and thresholds used for measuring good service and total service. The TimeSeries must have ValueType = DISTRIBUTION and MetricKind = DELTA or MetricKind = CUMULATIVE. The computed good_service will be the estimated count of values in the Distribution that fall within the specified min and max.
 * 
 */
public final class DistributionCutResponse extends com.pulumi.resources.InvokeArgs {

    public static final DistributionCutResponse Empty = new DistributionCutResponse();

    /**
     * A monitoring filter (https://cloud.google.com/monitoring/api/v3/filters) specifying a TimeSeries aggregating values. Must have ValueType = DISTRIBUTION and MetricKind = DELTA or MetricKind = CUMULATIVE.
     * 
     */
    @Import(name="distributionFilter", required=true)
    private String distributionFilter;

    public String distributionFilter() {
        return this.distributionFilter;
    }

    /**
     * Range of values considered &#34;good.&#34; For a one-sided range, set one bound to an infinite value.
     * 
     */
    @Import(name="range", required=true)
    private GoogleMonitoringV3RangeResponse range;

    public GoogleMonitoringV3RangeResponse range() {
        return this.range;
    }

    private DistributionCutResponse() {}

    private DistributionCutResponse(DistributionCutResponse $) {
        this.distributionFilter = $.distributionFilter;
        this.range = $.range;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DistributionCutResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DistributionCutResponse $;

        public Builder() {
            $ = new DistributionCutResponse();
        }

        public Builder(DistributionCutResponse defaults) {
            $ = new DistributionCutResponse(Objects.requireNonNull(defaults));
        }

        public Builder distributionFilter(String distributionFilter) {
            $.distributionFilter = distributionFilter;
            return this;
        }

        public Builder range(GoogleMonitoringV3RangeResponse range) {
            $.range = range;
            return this;
        }

        public DistributionCutResponse build() {
            $.distributionFilter = Objects.requireNonNull($.distributionFilter, "expected parameter 'distributionFilter' to be non-null");
            $.range = Objects.requireNonNull($.range, "expected parameter 'range' to be non-null");
            return $;
        }
    }

}
