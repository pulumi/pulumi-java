// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.monitoring_v3.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.monitoring_v3.inputs.NotificationRateLimitResponse;
import java.lang.String;
import java.util.Objects;


/**
 * Control over how the notification channels in notification_channels are notified when this alert fires.
 * 
 */
public final class AlertStrategyResponse extends com.pulumi.resources.InvokeArgs {

    public static final AlertStrategyResponse Empty = new AlertStrategyResponse();

    /**
     * If an alert policy that was active has no data for this long, any open incidents will close
     * 
     */
    @Import(name="autoClose", required=true)
    private String autoClose;

    /**
     * @return If an alert policy that was active has no data for this long, any open incidents will close
     * 
     */
    public String autoClose() {
        return this.autoClose;
    }

    /**
     * Required for alert policies with a LogMatch condition.This limit is not implemented for alert policies that are not log-based.
     * 
     */
    @Import(name="notificationRateLimit", required=true)
    private NotificationRateLimitResponse notificationRateLimit;

    /**
     * @return Required for alert policies with a LogMatch condition.This limit is not implemented for alert policies that are not log-based.
     * 
     */
    public NotificationRateLimitResponse notificationRateLimit() {
        return this.notificationRateLimit;
    }

    private AlertStrategyResponse() {}

    private AlertStrategyResponse(AlertStrategyResponse $) {
        this.autoClose = $.autoClose;
        this.notificationRateLimit = $.notificationRateLimit;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AlertStrategyResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AlertStrategyResponse $;

        public Builder() {
            $ = new AlertStrategyResponse();
        }

        public Builder(AlertStrategyResponse defaults) {
            $ = new AlertStrategyResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param autoClose If an alert policy that was active has no data for this long, any open incidents will close
         * 
         * @return builder
         * 
         */
        public Builder autoClose(String autoClose) {
            $.autoClose = autoClose;
            return this;
        }

        /**
         * @param notificationRateLimit Required for alert policies with a LogMatch condition.This limit is not implemented for alert policies that are not log-based.
         * 
         * @return builder
         * 
         */
        public Builder notificationRateLimit(NotificationRateLimitResponse notificationRateLimit) {
            $.notificationRateLimit = notificationRateLimit;
            return this;
        }

        public AlertStrategyResponse build() {
            $.autoClose = Objects.requireNonNull($.autoClose, "expected parameter 'autoClose' to be non-null");
            $.notificationRateLimit = Objects.requireNonNull($.notificationRateLimit, "expected parameter 'notificationRateLimit' to be non-null");
            return $;
        }
    }

}
