// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.testing_v1.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.testing_v1.inputs.TestTargetsForShardResponse;
import java.lang.Integer;
import java.util.Objects;


/**
 * Output only. Details about the shard.
 * 
 */
public final class ShardResponse extends com.pulumi.resources.InvokeArgs {

    public static final ShardResponse Empty = new ShardResponse();

    /**
     * The total number of shards.
     * 
     */
    @Import(name="numShards", required=true)
    private Integer numShards;

    public Integer numShards() {
        return this.numShards;
    }

    /**
     * The index of the shard among all the shards.
     * 
     */
    @Import(name="shardIndex", required=true)
    private Integer shardIndex;

    public Integer shardIndex() {
        return this.shardIndex;
    }

    /**
     * Test targets for each shard.
     * 
     */
    @Import(name="testTargetsForShard", required=true)
    private TestTargetsForShardResponse testTargetsForShard;

    public TestTargetsForShardResponse testTargetsForShard() {
        return this.testTargetsForShard;
    }

    private ShardResponse() {}

    private ShardResponse(ShardResponse $) {
        this.numShards = $.numShards;
        this.shardIndex = $.shardIndex;
        this.testTargetsForShard = $.testTargetsForShard;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ShardResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ShardResponse $;

        public Builder() {
            $ = new ShardResponse();
        }

        public Builder(ShardResponse defaults) {
            $ = new ShardResponse(Objects.requireNonNull(defaults));
        }

        public Builder numShards(Integer numShards) {
            $.numShards = numShards;
            return this;
        }

        public Builder shardIndex(Integer shardIndex) {
            $.shardIndex = shardIndex;
            return this;
        }

        public Builder testTargetsForShard(TestTargetsForShardResponse testTargetsForShard) {
            $.testTargetsForShard = testTargetsForShard;
            return this;
        }

        public ShardResponse build() {
            $.numShards = Objects.requireNonNull($.numShards, "expected parameter 'numShards' to be non-null");
            $.shardIndex = Objects.requireNonNull($.shardIndex, "expected parameter 'shardIndex' to be non-null");
            $.testTargetsForShard = Objects.requireNonNull($.testTargetsForShard, "expected parameter 'testTargetsForShard' to be non-null");
            return $;
        }
    }

}
