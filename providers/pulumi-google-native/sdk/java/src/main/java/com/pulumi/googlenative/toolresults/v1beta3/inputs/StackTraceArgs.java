// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.toolresults.v1beta3.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * A stacktrace.
 * 
 */
public final class StackTraceArgs extends com.pulumi.resources.ResourceArgs {

    public static final StackTraceArgs Empty = new StackTraceArgs();

    /**
     * The stack trace message. Required
     * 
     */
    @Import(name="exception")
    private @Nullable Output<String> exception;

    /**
     * @return The stack trace message. Required
     * 
     */
    public Optional<Output<String>> exception() {
        return Optional.ofNullable(this.exception);
    }

    private StackTraceArgs() {}

    private StackTraceArgs(StackTraceArgs $) {
        this.exception = $.exception;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(StackTraceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private StackTraceArgs $;

        public Builder() {
            $ = new StackTraceArgs();
        }

        public Builder(StackTraceArgs defaults) {
            $ = new StackTraceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param exception The stack trace message. Required
         * 
         * @return builder
         * 
         */
        public Builder exception(@Nullable Output<String> exception) {
            $.exception = exception;
            return this;
        }

        /**
         * @param exception The stack trace message. Required
         * 
         * @return builder
         * 
         */
        public Builder exception(String exception) {
            return exception(Output.of(exception));
        }

        public StackTraceArgs build() {
            return $;
        }
    }

}
