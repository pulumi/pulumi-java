// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.compute_beta.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.compute_beta.inputs.LogConfigCloudAuditOptionsResponse;
import com.pulumi.googlenative.compute_beta.inputs.LogConfigCounterOptionsResponse;
import com.pulumi.googlenative.compute_beta.inputs.LogConfigDataAccessOptionsResponse;
import java.util.Objects;


/**
 * This is deprecated and has no effect. Do not use.
 * 
 */
public final class LogConfigResponse extends com.pulumi.resources.InvokeArgs {

    public static final LogConfigResponse Empty = new LogConfigResponse();

    /**
     * This is deprecated and has no effect. Do not use.
     * 
     */
    @Import(name="cloudAudit", required=true)
    private LogConfigCloudAuditOptionsResponse cloudAudit;

    public LogConfigCloudAuditOptionsResponse cloudAudit() {
        return this.cloudAudit;
    }

    /**
     * This is deprecated and has no effect. Do not use.
     * 
     */
    @Import(name="counter", required=true)
    private LogConfigCounterOptionsResponse counter;

    public LogConfigCounterOptionsResponse counter() {
        return this.counter;
    }

    /**
     * This is deprecated and has no effect. Do not use.
     * 
     */
    @Import(name="dataAccess", required=true)
    private LogConfigDataAccessOptionsResponse dataAccess;

    public LogConfigDataAccessOptionsResponse dataAccess() {
        return this.dataAccess;
    }

    private LogConfigResponse() {}

    private LogConfigResponse(LogConfigResponse $) {
        this.cloudAudit = $.cloudAudit;
        this.counter = $.counter;
        this.dataAccess = $.dataAccess;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LogConfigResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LogConfigResponse $;

        public Builder() {
            $ = new LogConfigResponse();
        }

        public Builder(LogConfigResponse defaults) {
            $ = new LogConfigResponse(Objects.requireNonNull(defaults));
        }

        public Builder cloudAudit(LogConfigCloudAuditOptionsResponse cloudAudit) {
            $.cloudAudit = cloudAudit;
            return this;
        }

        public Builder counter(LogConfigCounterOptionsResponse counter) {
            $.counter = counter;
            return this;
        }

        public Builder dataAccess(LogConfigDataAccessOptionsResponse dataAccess) {
            $.dataAccess = dataAccess;
            return this;
        }

        public LogConfigResponse build() {
            $.cloudAudit = Objects.requireNonNull($.cloudAudit, "expected parameter 'cloudAudit' to be non-null");
            $.counter = Objects.requireNonNull($.counter, "expected parameter 'counter' to be non-null");
            $.dataAccess = Objects.requireNonNull($.dataAccess, "expected parameter 'dataAccess' to be non-null");
            return $;
        }
    }

}
