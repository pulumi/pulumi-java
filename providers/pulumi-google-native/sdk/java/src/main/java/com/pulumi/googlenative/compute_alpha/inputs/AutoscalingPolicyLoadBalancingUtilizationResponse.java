// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.compute_alpha.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Double;
import java.util.Objects;


/**
 * Configuration parameters of autoscaling based on load balancing.
 * 
 */
public final class AutoscalingPolicyLoadBalancingUtilizationResponse extends com.pulumi.resources.InvokeArgs {

    public static final AutoscalingPolicyLoadBalancingUtilizationResponse Empty = new AutoscalingPolicyLoadBalancingUtilizationResponse();

    /**
     * Fraction of backend capacity utilization (set in HTTP(S) load balancing configuration) that the autoscaler maintains. Must be a positive float value. If not defined, the default is 0.8.
     * 
     */
    @Import(name="utilizationTarget", required=true)
    private Double utilizationTarget;

    /**
     * @return Fraction of backend capacity utilization (set in HTTP(S) load balancing configuration) that the autoscaler maintains. Must be a positive float value. If not defined, the default is 0.8.
     * 
     */
    public Double utilizationTarget() {
        return this.utilizationTarget;
    }

    private AutoscalingPolicyLoadBalancingUtilizationResponse() {}

    private AutoscalingPolicyLoadBalancingUtilizationResponse(AutoscalingPolicyLoadBalancingUtilizationResponse $) {
        this.utilizationTarget = $.utilizationTarget;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AutoscalingPolicyLoadBalancingUtilizationResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AutoscalingPolicyLoadBalancingUtilizationResponse $;

        public Builder() {
            $ = new AutoscalingPolicyLoadBalancingUtilizationResponse();
        }

        public Builder(AutoscalingPolicyLoadBalancingUtilizationResponse defaults) {
            $ = new AutoscalingPolicyLoadBalancingUtilizationResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param utilizationTarget Fraction of backend capacity utilization (set in HTTP(S) load balancing configuration) that the autoscaler maintains. Must be a positive float value. If not defined, the default is 0.8.
         * 
         * @return builder
         * 
         */
        public Builder utilizationTarget(Double utilizationTarget) {
            $.utilizationTarget = utilizationTarget;
            return this;
        }

        public AutoscalingPolicyLoadBalancingUtilizationResponse build() {
            $.utilizationTarget = Objects.requireNonNull($.utilizationTarget, "expected parameter 'utilizationTarget' to be non-null");
            return $;
        }
    }

}
