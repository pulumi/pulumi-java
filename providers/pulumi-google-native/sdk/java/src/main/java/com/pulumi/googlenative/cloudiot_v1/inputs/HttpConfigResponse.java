// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.cloudiot_v1.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * The configuration of the HTTP bridge for a device registry.
 * 
 */
public final class HttpConfigResponse extends com.pulumi.resources.InvokeArgs {

    public static final HttpConfigResponse Empty = new HttpConfigResponse();

    /**
     * If enabled, allows devices to use DeviceService via the HTTP protocol. Otherwise, any requests to DeviceService will fail for this registry.
     * 
     */
    @Import(name="httpEnabledState", required=true)
    private String httpEnabledState;

    /**
     * @return If enabled, allows devices to use DeviceService via the HTTP protocol. Otherwise, any requests to DeviceService will fail for this registry.
     * 
     */
    public String httpEnabledState() {
        return this.httpEnabledState;
    }

    private HttpConfigResponse() {}

    private HttpConfigResponse(HttpConfigResponse $) {
        this.httpEnabledState = $.httpEnabledState;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(HttpConfigResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private HttpConfigResponse $;

        public Builder() {
            $ = new HttpConfigResponse();
        }

        public Builder(HttpConfigResponse defaults) {
            $ = new HttpConfigResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param httpEnabledState If enabled, allows devices to use DeviceService via the HTTP protocol. Otherwise, any requests to DeviceService will fail for this registry.
         * 
         * @return builder
         * 
         */
        public Builder httpEnabledState(String httpEnabledState) {
            $.httpEnabledState = httpEnabledState;
            return this;
        }

        public HttpConfigResponse build() {
            $.httpEnabledState = Objects.requireNonNull($.httpEnabledState, "expected parameter 'httpEnabledState' to be non-null");
            return $;
        }
    }

}
