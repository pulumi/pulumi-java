// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.translate_v3beta1.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * Used with unidirectional glossaries.
 * 
 */
public final class LanguageCodePairResponse extends com.pulumi.resources.InvokeArgs {

    public static final LanguageCodePairResponse Empty = new LanguageCodePairResponse();

    /**
     * The BCP-47 language code of the input text, for example, &#34;en-US&#34;. Expected to be an exact match for GlossaryTerm.language_code.
     * 
     */
    @Import(name="sourceLanguageCode", required=true)
      private final String sourceLanguageCode;

    public String sourceLanguageCode() {
        return this.sourceLanguageCode;
    }

    /**
     * The BCP-47 language code for translation output, for example, &#34;zh-CN&#34;. Expected to be an exact match for GlossaryTerm.language_code.
     * 
     */
    @Import(name="targetLanguageCode", required=true)
      private final String targetLanguageCode;

    public String targetLanguageCode() {
        return this.targetLanguageCode;
    }

    public LanguageCodePairResponse(
        String sourceLanguageCode,
        String targetLanguageCode) {
        this.sourceLanguageCode = Objects.requireNonNull(sourceLanguageCode, "expected parameter 'sourceLanguageCode' to be non-null");
        this.targetLanguageCode = Objects.requireNonNull(targetLanguageCode, "expected parameter 'targetLanguageCode' to be non-null");
    }

    private LanguageCodePairResponse() {
        this.sourceLanguageCode = null;
        this.targetLanguageCode = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(LanguageCodePairResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String sourceLanguageCode;
        private String targetLanguageCode;

        public Builder() {
    	      // Empty
        }

        public Builder(LanguageCodePairResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.sourceLanguageCode = defaults.sourceLanguageCode;
    	      this.targetLanguageCode = defaults.targetLanguageCode;
        }

        public Builder sourceLanguageCode(String sourceLanguageCode) {
            this.sourceLanguageCode = Objects.requireNonNull(sourceLanguageCode);
            return this;
        }
        public Builder targetLanguageCode(String targetLanguageCode) {
            this.targetLanguageCode = Objects.requireNonNull(targetLanguageCode);
            return this;
        }        public LanguageCodePairResponse build() {
            return new LanguageCodePairResponse(sourceLanguageCode, targetLanguageCode);
        }
    }
}
