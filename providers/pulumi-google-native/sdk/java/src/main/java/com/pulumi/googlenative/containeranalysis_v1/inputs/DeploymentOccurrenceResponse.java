// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.containeranalysis_v1.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;


/**
 * The period during which some deployable was active in a runtime.
 * 
 */
public final class DeploymentOccurrenceResponse extends com.pulumi.resources.InvokeArgs {

    public static final DeploymentOccurrenceResponse Empty = new DeploymentOccurrenceResponse();

    /**
     * Address of the runtime element hosting this deployment.
     * 
     */
    @Import(name="address", required=true)
    private String address;

    public String address() {
        return this.address;
    }

    /**
     * Configuration used to create this deployment.
     * 
     */
    @Import(name="config", required=true)
    private String config;

    public String config() {
        return this.config;
    }

    /**
     * Beginning of the lifetime of this deployment.
     * 
     */
    @Import(name="deployTime", required=true)
    private String deployTime;

    public String deployTime() {
        return this.deployTime;
    }

    /**
     * Platform hosting this deployment.
     * 
     */
    @Import(name="platform", required=true)
    private String platform;

    public String platform() {
        return this.platform;
    }

    /**
     * Resource URI for the artifact being deployed taken from the deployable field with the same name.
     * 
     */
    @Import(name="resourceUri", required=true)
    private List<String> resourceUri;

    public List<String> resourceUri() {
        return this.resourceUri;
    }

    /**
     * End of the lifetime of this deployment.
     * 
     */
    @Import(name="undeployTime", required=true)
    private String undeployTime;

    public String undeployTime() {
        return this.undeployTime;
    }

    /**
     * Identity of the user that triggered this deployment.
     * 
     */
    @Import(name="userEmail", required=true)
    private String userEmail;

    public String userEmail() {
        return this.userEmail;
    }

    private DeploymentOccurrenceResponse() {}

    private DeploymentOccurrenceResponse(DeploymentOccurrenceResponse $) {
        this.address = $.address;
        this.config = $.config;
        this.deployTime = $.deployTime;
        this.platform = $.platform;
        this.resourceUri = $.resourceUri;
        this.undeployTime = $.undeployTime;
        this.userEmail = $.userEmail;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DeploymentOccurrenceResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DeploymentOccurrenceResponse $;

        public Builder() {
            $ = new DeploymentOccurrenceResponse();
        }

        public Builder(DeploymentOccurrenceResponse defaults) {
            $ = new DeploymentOccurrenceResponse(Objects.requireNonNull(defaults));
        }

        public Builder address(String address) {
            $.address = address;
            return this;
        }

        public Builder config(String config) {
            $.config = config;
            return this;
        }

        public Builder deployTime(String deployTime) {
            $.deployTime = deployTime;
            return this;
        }

        public Builder platform(String platform) {
            $.platform = platform;
            return this;
        }

        public Builder resourceUri(List<String> resourceUri) {
            $.resourceUri = resourceUri;
            return this;
        }

        public Builder resourceUri(String... resourceUri) {
            return resourceUri(List.of(resourceUri));
        }

        public Builder undeployTime(String undeployTime) {
            $.undeployTime = undeployTime;
            return this;
        }

        public Builder userEmail(String userEmail) {
            $.userEmail = userEmail;
            return this;
        }

        public DeploymentOccurrenceResponse build() {
            $.address = Objects.requireNonNull($.address, "expected parameter 'address' to be non-null");
            $.config = Objects.requireNonNull($.config, "expected parameter 'config' to be non-null");
            $.deployTime = Objects.requireNonNull($.deployTime, "expected parameter 'deployTime' to be non-null");
            $.platform = Objects.requireNonNull($.platform, "expected parameter 'platform' to be non-null");
            $.resourceUri = Objects.requireNonNull($.resourceUri, "expected parameter 'resourceUri' to be non-null");
            $.undeployTime = Objects.requireNonNull($.undeployTime, "expected parameter 'undeployTime' to be non-null");
            $.userEmail = Objects.requireNonNull($.userEmail, "expected parameter 'userEmail' to be non-null");
            return $;
        }
    }

}
