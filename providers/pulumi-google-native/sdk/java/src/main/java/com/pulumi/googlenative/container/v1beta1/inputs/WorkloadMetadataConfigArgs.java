// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.container.v1beta1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.container.v1beta1.enums.WorkloadMetadataConfigMode;
import com.pulumi.googlenative.container.v1beta1.enums.WorkloadMetadataConfigNodeMetadata;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * WorkloadMetadataConfig defines the metadata configuration to expose to workloads on the node pool.
 * 
 */
public final class WorkloadMetadataConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final WorkloadMetadataConfigArgs Empty = new WorkloadMetadataConfigArgs();

    /**
     * Mode is the configuration for how to expose metadata to workloads running on the node pool.
     * 
     */
    @Import(name="mode")
    private @Nullable Output<WorkloadMetadataConfigMode> mode;

    /**
     * @return Mode is the configuration for how to expose metadata to workloads running on the node pool.
     * 
     */
    public Optional<Output<WorkloadMetadataConfigMode>> mode() {
        return Optional.ofNullable(this.mode);
    }

    /**
     * NodeMetadata is the configuration for how to expose metadata to the workloads running on the node.
     * 
     */
    @Import(name="nodeMetadata")
    private @Nullable Output<WorkloadMetadataConfigNodeMetadata> nodeMetadata;

    /**
     * @return NodeMetadata is the configuration for how to expose metadata to the workloads running on the node.
     * 
     */
    public Optional<Output<WorkloadMetadataConfigNodeMetadata>> nodeMetadata() {
        return Optional.ofNullable(this.nodeMetadata);
    }

    private WorkloadMetadataConfigArgs() {}

    private WorkloadMetadataConfigArgs(WorkloadMetadataConfigArgs $) {
        this.mode = $.mode;
        this.nodeMetadata = $.nodeMetadata;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WorkloadMetadataConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WorkloadMetadataConfigArgs $;

        public Builder() {
            $ = new WorkloadMetadataConfigArgs();
        }

        public Builder(WorkloadMetadataConfigArgs defaults) {
            $ = new WorkloadMetadataConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param mode Mode is the configuration for how to expose metadata to workloads running on the node pool.
         * 
         * @return builder
         * 
         */
        public Builder mode(@Nullable Output<WorkloadMetadataConfigMode> mode) {
            $.mode = mode;
            return this;
        }

        /**
         * @param mode Mode is the configuration for how to expose metadata to workloads running on the node pool.
         * 
         * @return builder
         * 
         */
        public Builder mode(WorkloadMetadataConfigMode mode) {
            return mode(Output.of(mode));
        }

        /**
         * @param nodeMetadata NodeMetadata is the configuration for how to expose metadata to the workloads running on the node.
         * 
         * @return builder
         * 
         */
        public Builder nodeMetadata(@Nullable Output<WorkloadMetadataConfigNodeMetadata> nodeMetadata) {
            $.nodeMetadata = nodeMetadata;
            return this;
        }

        /**
         * @param nodeMetadata NodeMetadata is the configuration for how to expose metadata to the workloads running on the node.
         * 
         * @return builder
         * 
         */
        public Builder nodeMetadata(WorkloadMetadataConfigNodeMetadata nodeMetadata) {
            return nodeMetadata(Output.of(nodeMetadata));
        }

        public WorkloadMetadataConfigArgs build() {
            return $;
        }
    }

}
