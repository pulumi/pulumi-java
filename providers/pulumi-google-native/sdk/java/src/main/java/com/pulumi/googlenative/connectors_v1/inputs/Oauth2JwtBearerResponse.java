// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.connectors_v1.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.connectors_v1.inputs.JwtClaimsResponse;
import com.pulumi.googlenative.connectors_v1.inputs.SecretResponse;
import java.util.Objects;


/**
 * Parameters to support JSON Web Token (JWT) Profile for Oauth 2.0 Authorization Grant based authentication. See https://tools.ietf.org/html/rfc7523 for more details.
 * 
 */
public final class Oauth2JwtBearerResponse extends com.pulumi.resources.InvokeArgs {

    public static final Oauth2JwtBearerResponse Empty = new Oauth2JwtBearerResponse();

    /**
     * Secret version reference containing a PKCS#8 PEM-encoded private key associated with the Client Certificate. This private key will be used to sign JWTs used for the jwt-bearer authorization grant. Specified in the form as: `projects/*{@literal /}secrets/*{@literal /}versions/*`.
     * 
     */
    @Import(name="clientKey", required=true)
    private SecretResponse clientKey;

    public SecretResponse clientKey() {
        return this.clientKey;
    }

    /**
     * JwtClaims providers fields to generate the token.
     * 
     */
    @Import(name="jwtClaims", required=true)
    private JwtClaimsResponse jwtClaims;

    public JwtClaimsResponse jwtClaims() {
        return this.jwtClaims;
    }

    private Oauth2JwtBearerResponse() {}

    private Oauth2JwtBearerResponse(Oauth2JwtBearerResponse $) {
        this.clientKey = $.clientKey;
        this.jwtClaims = $.jwtClaims;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(Oauth2JwtBearerResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Oauth2JwtBearerResponse $;

        public Builder() {
            $ = new Oauth2JwtBearerResponse();
        }

        public Builder(Oauth2JwtBearerResponse defaults) {
            $ = new Oauth2JwtBearerResponse(Objects.requireNonNull(defaults));
        }

        public Builder clientKey(SecretResponse clientKey) {
            $.clientKey = clientKey;
            return this;
        }

        public Builder jwtClaims(JwtClaimsResponse jwtClaims) {
            $.jwtClaims = jwtClaims;
            return this;
        }

        public Oauth2JwtBearerResponse build() {
            $.clientKey = Objects.requireNonNull($.clientKey, "expected parameter 'clientKey' to be non-null");
            $.jwtClaims = Objects.requireNonNull($.jwtClaims, "expected parameter 'jwtClaims' to be non-null");
            return $;
        }
    }

}
