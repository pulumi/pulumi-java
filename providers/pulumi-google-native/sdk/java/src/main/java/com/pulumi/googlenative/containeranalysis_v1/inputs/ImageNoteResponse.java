// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.containeranalysis_v1.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.containeranalysis_v1.inputs.FingerprintResponse;
import java.lang.String;
import java.util.Objects;


/**
 * Basis describes the base image portion (Note) of the DockerImage relationship. Linked occurrences are derived from this or an equivalent image via: FROM Or an equivalent reference, e.g., a tag of the resource_url.
 * 
 */
public final class ImageNoteResponse extends com.pulumi.resources.InvokeArgs {

    public static final ImageNoteResponse Empty = new ImageNoteResponse();

    /**
     * Immutable. The fingerprint of the base image.
     * 
     */
    @Import(name="fingerprint", required=true)
    private FingerprintResponse fingerprint;

    public FingerprintResponse fingerprint() {
        return this.fingerprint;
    }

    /**
     * Immutable. The resource_url for the resource representing the basis of associated occurrence images.
     * 
     */
    @Import(name="resourceUrl", required=true)
    private String resourceUrl;

    public String resourceUrl() {
        return this.resourceUrl;
    }

    private ImageNoteResponse() {}

    private ImageNoteResponse(ImageNoteResponse $) {
        this.fingerprint = $.fingerprint;
        this.resourceUrl = $.resourceUrl;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ImageNoteResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ImageNoteResponse $;

        public Builder() {
            $ = new ImageNoteResponse();
        }

        public Builder(ImageNoteResponse defaults) {
            $ = new ImageNoteResponse(Objects.requireNonNull(defaults));
        }

        public Builder fingerprint(FingerprintResponse fingerprint) {
            $.fingerprint = fingerprint;
            return this;
        }

        public Builder resourceUrl(String resourceUrl) {
            $.resourceUrl = resourceUrl;
            return this;
        }

        public ImageNoteResponse build() {
            $.fingerprint = Objects.requireNonNull($.fingerprint, "expected parameter 'fingerprint' to be non-null");
            $.resourceUrl = Objects.requireNonNull($.resourceUrl, "expected parameter 'resourceUrl' to be non-null");
            return $;
        }
    }

}
