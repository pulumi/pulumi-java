// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.containeranalysis.v1alpha1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.containeranalysis.v1alpha1.enums.VulnerabilityTypeSeverity;
import com.pulumi.googlenative.containeranalysis.v1alpha1.inputs.CVSSArgs;
import com.pulumi.googlenative.containeranalysis.v1alpha1.inputs.DetailArgs;
import java.lang.Double;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * VulnerabilityType provides metadata about a security vulnerability.
 * 
 */
public final class VulnerabilityTypeArgs extends com.pulumi.resources.ResourceArgs {

    public static final VulnerabilityTypeArgs Empty = new VulnerabilityTypeArgs();

    /**
     * The CVSS score for this Vulnerability.
     * 
     */
    @Import(name="cvssScore")
    private @Nullable Output<Double> cvssScore;

    /**
     * @return The CVSS score for this Vulnerability.
     * 
     */
    public Optional<Output<Double>> cvssScore() {
        return Optional.ofNullable(this.cvssScore);
    }

    /**
     * The full description of the CVSS for version 2.
     * 
     */
    @Import(name="cvssV2")
    private @Nullable Output<CVSSArgs> cvssV2;

    /**
     * @return The full description of the CVSS for version 2.
     * 
     */
    public Optional<Output<CVSSArgs>> cvssV2() {
        return Optional.ofNullable(this.cvssV2);
    }

    /**
     * A list of CWE for this vulnerability. For details, see: https://cwe.mitre.org/index.html
     * 
     */
    @Import(name="cwe")
    private @Nullable Output<List<String>> cwe;

    /**
     * @return A list of CWE for this vulnerability. For details, see: https://cwe.mitre.org/index.html
     * 
     */
    public Optional<Output<List<String>>> cwe() {
        return Optional.ofNullable(this.cwe);
    }

    /**
     * All information about the package to specifically identify this vulnerability. One entry per (version range and cpe_uri) the package vulnerability has manifested in.
     * 
     */
    @Import(name="details")
    private @Nullable Output<List<DetailArgs>> details;

    /**
     * @return All information about the package to specifically identify this vulnerability. One entry per (version range and cpe_uri) the package vulnerability has manifested in.
     * 
     */
    public Optional<Output<List<DetailArgs>>> details() {
        return Optional.ofNullable(this.details);
    }

    /**
     * Note provider assigned impact of the vulnerability
     * 
     */
    @Import(name="severity")
    private @Nullable Output<VulnerabilityTypeSeverity> severity;

    /**
     * @return Note provider assigned impact of the vulnerability
     * 
     */
    public Optional<Output<VulnerabilityTypeSeverity>> severity() {
        return Optional.ofNullable(this.severity);
    }

    private VulnerabilityTypeArgs() {}

    private VulnerabilityTypeArgs(VulnerabilityTypeArgs $) {
        this.cvssScore = $.cvssScore;
        this.cvssV2 = $.cvssV2;
        this.cwe = $.cwe;
        this.details = $.details;
        this.severity = $.severity;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VulnerabilityTypeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VulnerabilityTypeArgs $;

        public Builder() {
            $ = new VulnerabilityTypeArgs();
        }

        public Builder(VulnerabilityTypeArgs defaults) {
            $ = new VulnerabilityTypeArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param cvssScore The CVSS score for this Vulnerability.
         * 
         * @return builder
         * 
         */
        public Builder cvssScore(@Nullable Output<Double> cvssScore) {
            $.cvssScore = cvssScore;
            return this;
        }

        /**
         * @param cvssScore The CVSS score for this Vulnerability.
         * 
         * @return builder
         * 
         */
        public Builder cvssScore(Double cvssScore) {
            return cvssScore(Output.of(cvssScore));
        }

        /**
         * @param cvssV2 The full description of the CVSS for version 2.
         * 
         * @return builder
         * 
         */
        public Builder cvssV2(@Nullable Output<CVSSArgs> cvssV2) {
            $.cvssV2 = cvssV2;
            return this;
        }

        /**
         * @param cvssV2 The full description of the CVSS for version 2.
         * 
         * @return builder
         * 
         */
        public Builder cvssV2(CVSSArgs cvssV2) {
            return cvssV2(Output.of(cvssV2));
        }

        /**
         * @param cwe A list of CWE for this vulnerability. For details, see: https://cwe.mitre.org/index.html
         * 
         * @return builder
         * 
         */
        public Builder cwe(@Nullable Output<List<String>> cwe) {
            $.cwe = cwe;
            return this;
        }

        /**
         * @param cwe A list of CWE for this vulnerability. For details, see: https://cwe.mitre.org/index.html
         * 
         * @return builder
         * 
         */
        public Builder cwe(List<String> cwe) {
            return cwe(Output.of(cwe));
        }

        /**
         * @param cwe A list of CWE for this vulnerability. For details, see: https://cwe.mitre.org/index.html
         * 
         * @return builder
         * 
         */
        public Builder cwe(String... cwe) {
            return cwe(List.of(cwe));
        }

        /**
         * @param details All information about the package to specifically identify this vulnerability. One entry per (version range and cpe_uri) the package vulnerability has manifested in.
         * 
         * @return builder
         * 
         */
        public Builder details(@Nullable Output<List<DetailArgs>> details) {
            $.details = details;
            return this;
        }

        /**
         * @param details All information about the package to specifically identify this vulnerability. One entry per (version range and cpe_uri) the package vulnerability has manifested in.
         * 
         * @return builder
         * 
         */
        public Builder details(List<DetailArgs> details) {
            return details(Output.of(details));
        }

        /**
         * @param details All information about the package to specifically identify this vulnerability. One entry per (version range and cpe_uri) the package vulnerability has manifested in.
         * 
         * @return builder
         * 
         */
        public Builder details(DetailArgs... details) {
            return details(List.of(details));
        }

        /**
         * @param severity Note provider assigned impact of the vulnerability
         * 
         * @return builder
         * 
         */
        public Builder severity(@Nullable Output<VulnerabilityTypeSeverity> severity) {
            $.severity = severity;
            return this;
        }

        /**
         * @param severity Note provider assigned impact of the vulnerability
         * 
         * @return builder
         * 
         */
        public Builder severity(VulnerabilityTypeSeverity severity) {
            return severity(Output.of(severity));
        }

        public VulnerabilityTypeArgs build() {
            return $;
        }
    }

}
