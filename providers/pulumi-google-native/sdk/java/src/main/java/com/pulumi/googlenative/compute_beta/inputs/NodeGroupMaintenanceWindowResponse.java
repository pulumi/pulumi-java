// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.compute_beta.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.compute_beta.inputs.DurationResponse;
import java.lang.String;
import java.util.Objects;


/**
 * Time window specified for daily maintenance operations. GCE&#39;s internal maintenance will be performed within this window.
 * 
 */
public final class NodeGroupMaintenanceWindowResponse extends com.pulumi.resources.InvokeArgs {

    public static final NodeGroupMaintenanceWindowResponse Empty = new NodeGroupMaintenanceWindowResponse();

    /**
     * [Output only] A predetermined duration for the window, automatically chosen to be the smallest possible in the given scenario.
     * 
     */
    @Import(name="maintenanceDuration", required=true)
    private DurationResponse maintenanceDuration;

    /**
     * @return [Output only] A predetermined duration for the window, automatically chosen to be the smallest possible in the given scenario.
     * 
     */
    public DurationResponse maintenanceDuration() {
        return this.maintenanceDuration;
    }

    /**
     * Start time of the window. This must be in UTC format that resolves to one of 00:00, 04:00, 08:00, 12:00, 16:00, or 20:00. For example, both 13:00-5 and 08:00 are valid.
     * 
     */
    @Import(name="startTime", required=true)
    private String startTime;

    /**
     * @return Start time of the window. This must be in UTC format that resolves to one of 00:00, 04:00, 08:00, 12:00, 16:00, or 20:00. For example, both 13:00-5 and 08:00 are valid.
     * 
     */
    public String startTime() {
        return this.startTime;
    }

    private NodeGroupMaintenanceWindowResponse() {}

    private NodeGroupMaintenanceWindowResponse(NodeGroupMaintenanceWindowResponse $) {
        this.maintenanceDuration = $.maintenanceDuration;
        this.startTime = $.startTime;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NodeGroupMaintenanceWindowResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NodeGroupMaintenanceWindowResponse $;

        public Builder() {
            $ = new NodeGroupMaintenanceWindowResponse();
        }

        public Builder(NodeGroupMaintenanceWindowResponse defaults) {
            $ = new NodeGroupMaintenanceWindowResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param maintenanceDuration [Output only] A predetermined duration for the window, automatically chosen to be the smallest possible in the given scenario.
         * 
         * @return builder
         * 
         */
        public Builder maintenanceDuration(DurationResponse maintenanceDuration) {
            $.maintenanceDuration = maintenanceDuration;
            return this;
        }

        /**
         * @param startTime Start time of the window. This must be in UTC format that resolves to one of 00:00, 04:00, 08:00, 12:00, 16:00, or 20:00. For example, both 13:00-5 and 08:00 are valid.
         * 
         * @return builder
         * 
         */
        public Builder startTime(String startTime) {
            $.startTime = startTime;
            return this;
        }

        public NodeGroupMaintenanceWindowResponse build() {
            $.maintenanceDuration = Objects.requireNonNull($.maintenanceDuration, "expected parameter 'maintenanceDuration' to be non-null");
            $.startTime = Objects.requireNonNull($.startTime, "expected parameter 'startTime' to be non-null");
            return $;
        }
    }

}
