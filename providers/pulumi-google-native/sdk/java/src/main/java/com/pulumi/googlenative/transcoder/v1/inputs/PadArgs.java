// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.transcoder.v1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Pad filter configuration for the input video. The padded input video is scaled after padding with black to match the output resolution.
 * 
 */
public final class PadArgs extends com.pulumi.resources.ResourceArgs {

    public static final PadArgs Empty = new PadArgs();

    /**
     * The number of pixels to add to the bottom. The default is 0.
     * 
     */
    @Import(name="bottomPixels")
    private @Nullable Output<Integer> bottomPixels;

    /**
     * @return The number of pixels to add to the bottom. The default is 0.
     * 
     */
    public Optional<Output<Integer>> bottomPixels() {
        return Optional.ofNullable(this.bottomPixels);
    }

    /**
     * The number of pixels to add to the left. The default is 0.
     * 
     */
    @Import(name="leftPixels")
    private @Nullable Output<Integer> leftPixels;

    /**
     * @return The number of pixels to add to the left. The default is 0.
     * 
     */
    public Optional<Output<Integer>> leftPixels() {
        return Optional.ofNullable(this.leftPixels);
    }

    /**
     * The number of pixels to add to the right. The default is 0.
     * 
     */
    @Import(name="rightPixels")
    private @Nullable Output<Integer> rightPixels;

    /**
     * @return The number of pixels to add to the right. The default is 0.
     * 
     */
    public Optional<Output<Integer>> rightPixels() {
        return Optional.ofNullable(this.rightPixels);
    }

    /**
     * The number of pixels to add to the top. The default is 0.
     * 
     */
    @Import(name="topPixels")
    private @Nullable Output<Integer> topPixels;

    /**
     * @return The number of pixels to add to the top. The default is 0.
     * 
     */
    public Optional<Output<Integer>> topPixels() {
        return Optional.ofNullable(this.topPixels);
    }

    private PadArgs() {}

    private PadArgs(PadArgs $) {
        this.bottomPixels = $.bottomPixels;
        this.leftPixels = $.leftPixels;
        this.rightPixels = $.rightPixels;
        this.topPixels = $.topPixels;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PadArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PadArgs $;

        public Builder() {
            $ = new PadArgs();
        }

        public Builder(PadArgs defaults) {
            $ = new PadArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param bottomPixels The number of pixels to add to the bottom. The default is 0.
         * 
         * @return builder
         * 
         */
        public Builder bottomPixels(@Nullable Output<Integer> bottomPixels) {
            $.bottomPixels = bottomPixels;
            return this;
        }

        /**
         * @param bottomPixels The number of pixels to add to the bottom. The default is 0.
         * 
         * @return builder
         * 
         */
        public Builder bottomPixels(Integer bottomPixels) {
            return bottomPixels(Output.of(bottomPixels));
        }

        /**
         * @param leftPixels The number of pixels to add to the left. The default is 0.
         * 
         * @return builder
         * 
         */
        public Builder leftPixels(@Nullable Output<Integer> leftPixels) {
            $.leftPixels = leftPixels;
            return this;
        }

        /**
         * @param leftPixels The number of pixels to add to the left. The default is 0.
         * 
         * @return builder
         * 
         */
        public Builder leftPixels(Integer leftPixels) {
            return leftPixels(Output.of(leftPixels));
        }

        /**
         * @param rightPixels The number of pixels to add to the right. The default is 0.
         * 
         * @return builder
         * 
         */
        public Builder rightPixels(@Nullable Output<Integer> rightPixels) {
            $.rightPixels = rightPixels;
            return this;
        }

        /**
         * @param rightPixels The number of pixels to add to the right. The default is 0.
         * 
         * @return builder
         * 
         */
        public Builder rightPixels(Integer rightPixels) {
            return rightPixels(Output.of(rightPixels));
        }

        /**
         * @param topPixels The number of pixels to add to the top. The default is 0.
         * 
         * @return builder
         * 
         */
        public Builder topPixels(@Nullable Output<Integer> topPixels) {
            $.topPixels = topPixels;
            return this;
        }

        /**
         * @param topPixels The number of pixels to add to the top. The default is 0.
         * 
         * @return builder
         * 
         */
        public Builder topPixels(Integer topPixels) {
            return topPixels(Output.of(topPixels));
        }

        public PadArgs build() {
            return $;
        }
    }

}
