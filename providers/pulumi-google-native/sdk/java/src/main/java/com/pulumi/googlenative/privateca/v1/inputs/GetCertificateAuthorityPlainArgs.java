// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.privateca.v1.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetCertificateAuthorityPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetCertificateAuthorityPlainArgs Empty = new GetCertificateAuthorityPlainArgs();

    @Import(name="caPoolId", required=true)
    private String caPoolId;

    public String caPoolId() {
        return this.caPoolId;
    }

    @Import(name="certificateAuthorityId", required=true)
    private String certificateAuthorityId;

    public String certificateAuthorityId() {
        return this.certificateAuthorityId;
    }

    @Import(name="location", required=true)
    private String location;

    public String location() {
        return this.location;
    }

    @Import(name="project")
    private @Nullable String project;

    public Optional<String> project() {
        return Optional.ofNullable(this.project);
    }

    private GetCertificateAuthorityPlainArgs() {}

    private GetCertificateAuthorityPlainArgs(GetCertificateAuthorityPlainArgs $) {
        this.caPoolId = $.caPoolId;
        this.certificateAuthorityId = $.certificateAuthorityId;
        this.location = $.location;
        this.project = $.project;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetCertificateAuthorityPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetCertificateAuthorityPlainArgs $;

        public Builder() {
            $ = new GetCertificateAuthorityPlainArgs();
        }

        public Builder(GetCertificateAuthorityPlainArgs defaults) {
            $ = new GetCertificateAuthorityPlainArgs(Objects.requireNonNull(defaults));
        }

        public Builder caPoolId(String caPoolId) {
            $.caPoolId = caPoolId;
            return this;
        }

        public Builder certificateAuthorityId(String certificateAuthorityId) {
            $.certificateAuthorityId = certificateAuthorityId;
            return this;
        }

        public Builder location(String location) {
            $.location = location;
            return this;
        }

        public Builder project(@Nullable String project) {
            $.project = project;
            return this;
        }

        public GetCertificateAuthorityPlainArgs build() {
            $.caPoolId = Objects.requireNonNull($.caPoolId, "expected parameter 'caPoolId' to be non-null");
            $.certificateAuthorityId = Objects.requireNonNull($.certificateAuthorityId, "expected parameter 'certificateAuthorityId' to be non-null");
            $.location = Objects.requireNonNull($.location, "expected parameter 'location' to be non-null");
            return $;
        }
    }

}
