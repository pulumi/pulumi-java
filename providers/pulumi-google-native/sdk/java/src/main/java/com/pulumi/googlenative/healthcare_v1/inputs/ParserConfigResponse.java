// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.healthcare_v1.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.healthcare_v1.inputs.SchemaPackageResponse;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;


/**
 * The configuration for the parser. It determines how the server parses the messages.
 * 
 */
public final class ParserConfigResponse extends com.pulumi.resources.InvokeArgs {

    public static final ParserConfigResponse Empty = new ParserConfigResponse();

    /**
     * Determines whether messages with no header are allowed.
     * 
     */
    @Import(name="allowNullHeader", required=true)
    private Boolean allowNullHeader;

    public Boolean allowNullHeader() {
        return this.allowNullHeader;
    }

    /**
     * Schemas used to parse messages in this store, if schematized parsing is desired.
     * 
     */
    @Import(name="schema", required=true)
    private SchemaPackageResponse schema;

    public SchemaPackageResponse schema() {
        return this.schema;
    }

    /**
     * Byte(s) to use as the segment terminator. If this is unset, &#39;\r&#39; is used as segment terminator, matching the HL7 version 2 specification.
     * 
     */
    @Import(name="segmentTerminator", required=true)
    private String segmentTerminator;

    public String segmentTerminator() {
        return this.segmentTerminator;
    }

    /**
     * Immutable. Determines the version of both the default parser to be used when `schema` is not given, as well as the schematized parser used when `schema` is specified. This field is immutable after HL7v2 store creation.
     * 
     */
    @Import(name="version", required=true)
    private String version;

    public String version() {
        return this.version;
    }

    private ParserConfigResponse() {}

    private ParserConfigResponse(ParserConfigResponse $) {
        this.allowNullHeader = $.allowNullHeader;
        this.schema = $.schema;
        this.segmentTerminator = $.segmentTerminator;
        this.version = $.version;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ParserConfigResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ParserConfigResponse $;

        public Builder() {
            $ = new ParserConfigResponse();
        }

        public Builder(ParserConfigResponse defaults) {
            $ = new ParserConfigResponse(Objects.requireNonNull(defaults));
        }

        public Builder allowNullHeader(Boolean allowNullHeader) {
            $.allowNullHeader = allowNullHeader;
            return this;
        }

        public Builder schema(SchemaPackageResponse schema) {
            $.schema = schema;
            return this;
        }

        public Builder segmentTerminator(String segmentTerminator) {
            $.segmentTerminator = segmentTerminator;
            return this;
        }

        public Builder version(String version) {
            $.version = version;
            return this;
        }

        public ParserConfigResponse build() {
            $.allowNullHeader = Objects.requireNonNull($.allowNullHeader, "expected parameter 'allowNullHeader' to be non-null");
            $.schema = Objects.requireNonNull($.schema, "expected parameter 'schema' to be non-null");
            $.segmentTerminator = Objects.requireNonNull($.segmentTerminator, "expected parameter 'segmentTerminator' to be non-null");
            $.version = Objects.requireNonNull($.version, "expected parameter 'version' to be non-null");
            return $;
        }
    }

}
