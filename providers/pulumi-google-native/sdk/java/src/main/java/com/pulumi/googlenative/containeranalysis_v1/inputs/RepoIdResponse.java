// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.containeranalysis_v1.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.containeranalysis_v1.inputs.ProjectRepoIdResponse;
import java.lang.String;
import java.util.Objects;


/**
 * A unique identifier for a Cloud Repo.
 * 
 */
public final class RepoIdResponse extends com.pulumi.resources.InvokeArgs {

    public static final RepoIdResponse Empty = new RepoIdResponse();

    /**
     * A combination of a project ID and a repo name.
     * 
     */
    @Import(name="projectRepoId", required=true)
    private ProjectRepoIdResponse projectRepoId;

    /**
     * @return A combination of a project ID and a repo name.
     * 
     */
    public ProjectRepoIdResponse projectRepoId() {
        return this.projectRepoId;
    }

    /**
     * A server-assigned, globally unique identifier.
     * 
     */
    @Import(name="uid", required=true)
    private String uid;

    /**
     * @return A server-assigned, globally unique identifier.
     * 
     */
    public String uid() {
        return this.uid;
    }

    private RepoIdResponse() {}

    private RepoIdResponse(RepoIdResponse $) {
        this.projectRepoId = $.projectRepoId;
        this.uid = $.uid;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RepoIdResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RepoIdResponse $;

        public Builder() {
            $ = new RepoIdResponse();
        }

        public Builder(RepoIdResponse defaults) {
            $ = new RepoIdResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param projectRepoId A combination of a project ID and a repo name.
         * 
         * @return builder
         * 
         */
        public Builder projectRepoId(ProjectRepoIdResponse projectRepoId) {
            $.projectRepoId = projectRepoId;
            return this;
        }

        /**
         * @param uid A server-assigned, globally unique identifier.
         * 
         * @return builder
         * 
         */
        public Builder uid(String uid) {
            $.uid = uid;
            return this;
        }

        public RepoIdResponse build() {
            $.projectRepoId = Objects.requireNonNull($.projectRepoId, "expected parameter 'projectRepoId' to be non-null");
            $.uid = Objects.requireNonNull($.uid, "expected parameter 'uid' to be non-null");
            return $;
        }
    }

}
