// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.compute.alpha.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetTargetInstanceArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetTargetInstanceArgs Empty = new GetTargetInstanceArgs();

    @Import(name="project")
    private @Nullable Output<String> project;

    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    @Import(name="targetInstance", required=true)
    private Output<String> targetInstance;

    public Output<String> targetInstance() {
        return this.targetInstance;
    }

    @Import(name="zone", required=true)
    private Output<String> zone;

    public Output<String> zone() {
        return this.zone;
    }

    private GetTargetInstanceArgs() {}

    private GetTargetInstanceArgs(GetTargetInstanceArgs $) {
        this.project = $.project;
        this.targetInstance = $.targetInstance;
        this.zone = $.zone;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetTargetInstanceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetTargetInstanceArgs $;

        public Builder() {
            $ = new GetTargetInstanceArgs();
        }

        public Builder(GetTargetInstanceArgs defaults) {
            $ = new GetTargetInstanceArgs(Objects.requireNonNull(defaults));
        }

        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        public Builder project(String project) {
            return project(Output.of(project));
        }

        public Builder targetInstance(Output<String> targetInstance) {
            $.targetInstance = targetInstance;
            return this;
        }

        public Builder targetInstance(String targetInstance) {
            return targetInstance(Output.of(targetInstance));
        }

        public Builder zone(Output<String> zone) {
            $.zone = zone;
            return this;
        }

        public Builder zone(String zone) {
            return zone(Output.of(zone));
        }

        public GetTargetInstanceArgs build() {
            $.targetInstance = Objects.requireNonNull($.targetInstance, "expected parameter 'targetInstance' to be non-null");
            $.zone = Objects.requireNonNull($.zone, "expected parameter 'zone' to be non-null");
            return $;
        }
    }

}
