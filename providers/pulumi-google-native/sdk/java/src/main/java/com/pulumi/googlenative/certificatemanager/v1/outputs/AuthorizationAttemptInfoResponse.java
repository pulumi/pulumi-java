// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.certificatemanager.v1.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class AuthorizationAttemptInfoResponse {
    /**
     * @return Human readable explanation for reaching the state. Provided to help address the configuration issues. Not guaranteed to be stable. For programmatic access use Reason enum.
     * 
     */
    private final String details;
    /**
     * @return Domain name of the authorization attempt.
     * 
     */
    private final String domain;
    /**
     * @return Reason for failure of the authorization attempt for the domain.
     * 
     */
    private final String failureReason;
    /**
     * @return State of the domain for managed certificate issuance.
     * 
     */
    private final String state;

    @CustomType.Constructor
    private AuthorizationAttemptInfoResponse(
        @CustomType.Parameter("details") String details,
        @CustomType.Parameter("domain") String domain,
        @CustomType.Parameter("failureReason") String failureReason,
        @CustomType.Parameter("state") String state) {
        this.details = details;
        this.domain = domain;
        this.failureReason = failureReason;
        this.state = state;
    }

    /**
     * @return Human readable explanation for reaching the state. Provided to help address the configuration issues. Not guaranteed to be stable. For programmatic access use Reason enum.
     * 
     */
    public String details() {
        return this.details;
    }
    /**
     * @return Domain name of the authorization attempt.
     * 
     */
    public String domain() {
        return this.domain;
    }
    /**
     * @return Reason for failure of the authorization attempt for the domain.
     * 
     */
    public String failureReason() {
        return this.failureReason;
    }
    /**
     * @return State of the domain for managed certificate issuance.
     * 
     */
    public String state() {
        return this.state;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AuthorizationAttemptInfoResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String details;
        private String domain;
        private String failureReason;
        private String state;

        public Builder() {
    	      // Empty
        }

        public Builder(AuthorizationAttemptInfoResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.details = defaults.details;
    	      this.domain = defaults.domain;
    	      this.failureReason = defaults.failureReason;
    	      this.state = defaults.state;
        }

        public Builder details(String details) {
            this.details = Objects.requireNonNull(details);
            return this;
        }
        public Builder domain(String domain) {
            this.domain = Objects.requireNonNull(domain);
            return this;
        }
        public Builder failureReason(String failureReason) {
            this.failureReason = Objects.requireNonNull(failureReason);
            return this;
        }
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }        public AuthorizationAttemptInfoResponse build() {
            return new AuthorizationAttemptInfoResponse(details, domain, failureReason, state);
        }
    }
}
