// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.deploymentmanager_alpha.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * Deployment Manager will call these methods during the events of creation/deletion/update/get/setIamPolicy
 * 
 */
public final class MethodMapResponse extends com.pulumi.resources.InvokeArgs {

    public static final MethodMapResponse Empty = new MethodMapResponse();

    /**
     * The action identifier for the create method to be used for this collection
     * 
     */
    @Import(name="create", required=true)
    private String create;

    /**
     * @return The action identifier for the create method to be used for this collection
     * 
     */
    public String create() {
        return this.create;
    }

    /**
     * The action identifier for the delete method to be used for this collection
     * 
     */
    @Import(name="delete", required=true)
    private String delete;

    /**
     * @return The action identifier for the delete method to be used for this collection
     * 
     */
    public String delete() {
        return this.delete;
    }

    /**
     * The action identifier for the get method to be used for this collection
     * 
     */
    @Import(name="get", required=true)
    private String get;

    /**
     * @return The action identifier for the get method to be used for this collection
     * 
     */
    public String get() {
        return this.get;
    }

    /**
     * The action identifier for the setIamPolicy method to be used for this collection
     * 
     */
    @Import(name="setIamPolicy", required=true)
    private String setIamPolicy;

    /**
     * @return The action identifier for the setIamPolicy method to be used for this collection
     * 
     */
    public String setIamPolicy() {
        return this.setIamPolicy;
    }

    /**
     * The action identifier for the update method to be used for this collection
     * 
     */
    @Import(name="update", required=true)
    private String update;

    /**
     * @return The action identifier for the update method to be used for this collection
     * 
     */
    public String update() {
        return this.update;
    }

    private MethodMapResponse() {}

    private MethodMapResponse(MethodMapResponse $) {
        this.create = $.create;
        this.delete = $.delete;
        this.get = $.get;
        this.setIamPolicy = $.setIamPolicy;
        this.update = $.update;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MethodMapResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MethodMapResponse $;

        public Builder() {
            $ = new MethodMapResponse();
        }

        public Builder(MethodMapResponse defaults) {
            $ = new MethodMapResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param create The action identifier for the create method to be used for this collection
         * 
         * @return builder
         * 
         */
        public Builder create(String create) {
            $.create = create;
            return this;
        }

        /**
         * @param delete The action identifier for the delete method to be used for this collection
         * 
         * @return builder
         * 
         */
        public Builder delete(String delete) {
            $.delete = delete;
            return this;
        }

        /**
         * @param get The action identifier for the get method to be used for this collection
         * 
         * @return builder
         * 
         */
        public Builder get(String get) {
            $.get = get;
            return this;
        }

        /**
         * @param setIamPolicy The action identifier for the setIamPolicy method to be used for this collection
         * 
         * @return builder
         * 
         */
        public Builder setIamPolicy(String setIamPolicy) {
            $.setIamPolicy = setIamPolicy;
            return this;
        }

        /**
         * @param update The action identifier for the update method to be used for this collection
         * 
         * @return builder
         * 
         */
        public Builder update(String update) {
            $.update = update;
            return this;
        }

        public MethodMapResponse build() {
            $.create = Objects.requireNonNull($.create, "expected parameter 'create' to be non-null");
            $.delete = Objects.requireNonNull($.delete, "expected parameter 'delete' to be non-null");
            $.get = Objects.requireNonNull($.get, "expected parameter 'get' to be non-null");
            $.setIamPolicy = Objects.requireNonNull($.setIamPolicy, "expected parameter 'setIamPolicy' to be non-null");
            $.update = Objects.requireNonNull($.update, "expected parameter 'update' to be non-null");
            return $;
        }
    }

}
