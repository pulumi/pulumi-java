// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.dlp_v2.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.dlp_v2.inputs.GooglePrivacyDlpV2InfoTypeResponse;
import com.pulumi.googlenative.dlp_v2.inputs.GooglePrivacyDlpV2InspectionRuleResponse;
import java.util.List;
import java.util.Objects;


/**
 * Rule set for modifying a set of infoTypes to alter behavior under certain circumstances, depending on the specific details of the rules within the set.
 * 
 */
public final class GooglePrivacyDlpV2InspectionRuleSetResponse extends com.pulumi.resources.InvokeArgs {

    public static final GooglePrivacyDlpV2InspectionRuleSetResponse Empty = new GooglePrivacyDlpV2InspectionRuleSetResponse();

    /**
     * List of infoTypes this rule set is applied to.
     * 
     */
    @Import(name="infoTypes", required=true)
    private List<GooglePrivacyDlpV2InfoTypeResponse> infoTypes;

    public List<GooglePrivacyDlpV2InfoTypeResponse> infoTypes() {
        return this.infoTypes;
    }

    /**
     * Set of rules to be applied to infoTypes. The rules are applied in order.
     * 
     */
    @Import(name="rules", required=true)
    private List<GooglePrivacyDlpV2InspectionRuleResponse> rules;

    public List<GooglePrivacyDlpV2InspectionRuleResponse> rules() {
        return this.rules;
    }

    private GooglePrivacyDlpV2InspectionRuleSetResponse() {}

    private GooglePrivacyDlpV2InspectionRuleSetResponse(GooglePrivacyDlpV2InspectionRuleSetResponse $) {
        this.infoTypes = $.infoTypes;
        this.rules = $.rules;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GooglePrivacyDlpV2InspectionRuleSetResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GooglePrivacyDlpV2InspectionRuleSetResponse $;

        public Builder() {
            $ = new GooglePrivacyDlpV2InspectionRuleSetResponse();
        }

        public Builder(GooglePrivacyDlpV2InspectionRuleSetResponse defaults) {
            $ = new GooglePrivacyDlpV2InspectionRuleSetResponse(Objects.requireNonNull(defaults));
        }

        public Builder infoTypes(List<GooglePrivacyDlpV2InfoTypeResponse> infoTypes) {
            $.infoTypes = infoTypes;
            return this;
        }

        public Builder infoTypes(GooglePrivacyDlpV2InfoTypeResponse... infoTypes) {
            return infoTypes(List.of(infoTypes));
        }

        public Builder rules(List<GooglePrivacyDlpV2InspectionRuleResponse> rules) {
            $.rules = rules;
            return this;
        }

        public Builder rules(GooglePrivacyDlpV2InspectionRuleResponse... rules) {
            return rules(List.of(rules));
        }

        public GooglePrivacyDlpV2InspectionRuleSetResponse build() {
            $.infoTypes = Objects.requireNonNull($.infoTypes, "expected parameter 'infoTypes' to be non-null");
            $.rules = Objects.requireNonNull($.rules, "expected parameter 'rules' to be non-null");
            return $;
        }
    }

}
