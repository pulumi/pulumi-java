// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.redis.v1beta1;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.googlenative.Utilities;
import com.pulumi.googlenative.redis.v1beta1.InstanceArgs;
import com.pulumi.googlenative.redis.v1beta1.outputs.MaintenancePolicyResponse;
import com.pulumi.googlenative.redis.v1beta1.outputs.MaintenanceScheduleResponse;
import com.pulumi.googlenative.redis.v1beta1.outputs.NodeInfoResponse;
import com.pulumi.googlenative.redis.v1beta1.outputs.PersistenceConfigResponse;
import com.pulumi.googlenative.redis.v1beta1.outputs.TlsCertificateResponse;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;

/**
 * Creates a Redis instance based on the specified tier and memory size. By default, the instance is accessible from the project&#39;s [default network](https://cloud.google.com/vpc/docs/vpc). The creation is executed asynchronously and callers may check the returned operation to track its progress. Once the operation is completed the Redis instance will be fully functional. The completed longrunning.Operation will contain the new instance object in the response field. The returned operation is automatically deleted after a few hours, so there is no need to call DeleteOperation.
 * 
 */
@ResourceType(type="google-native:redis/v1beta1:Instance")
public class Instance extends com.pulumi.resources.CustomResource {
    /**
     * Optional. If specified, at least one node will be provisioned in this zone in addition to the zone specified in location_id. Only applicable to standard tier. If provided, it must be a different zone from the one provided in [location_id]. Additional nodes beyond the first 2 will be placed in zones selected by the service.
     * 
     */
    @Export(name="alternativeLocationId", type=String.class, parameters={})
    private Output<String> alternativeLocationId;

    /**
     * @return Optional. If specified, at least one node will be provisioned in this zone in addition to the zone specified in location_id. Only applicable to standard tier. If provided, it must be a different zone from the one provided in [location_id]. Additional nodes beyond the first 2 will be placed in zones selected by the service.
     * 
     */
    public Output<String> alternativeLocationId() {
        return this.alternativeLocationId;
    }
    /**
     * Optional. Indicates whether OSS Redis AUTH is enabled for the instance. If set to &#34;true&#34; AUTH is enabled on the instance. Default value is &#34;false&#34; meaning AUTH is disabled.
     * 
     */
    @Export(name="authEnabled", type=Boolean.class, parameters={})
    private Output<Boolean> authEnabled;

    /**
     * @return Optional. Indicates whether OSS Redis AUTH is enabled for the instance. If set to &#34;true&#34; AUTH is enabled on the instance. Default value is &#34;false&#34; meaning AUTH is disabled.
     * 
     */
    public Output<Boolean> authEnabled() {
        return this.authEnabled;
    }
    /**
     * Optional. The full name of the Google Compute Engine [network](https://cloud.google.com/vpc/docs/vpc) to which the instance is connected. If left unspecified, the `default` network will be used.
     * 
     */
    @Export(name="authorizedNetwork", type=String.class, parameters={})
    private Output<String> authorizedNetwork;

    /**
     * @return Optional. The full name of the Google Compute Engine [network](https://cloud.google.com/vpc/docs/vpc) to which the instance is connected. If left unspecified, the `default` network will be used.
     * 
     */
    public Output<String> authorizedNetwork() {
        return this.authorizedNetwork;
    }
    /**
     * Optional. The available maintenance versions that an instance could update to.
     * 
     */
    @Export(name="availableMaintenanceVersions", type=List.class, parameters={String.class})
    private Output<List<String>> availableMaintenanceVersions;

    /**
     * @return Optional. The available maintenance versions that an instance could update to.
     * 
     */
    public Output<List<String>> availableMaintenanceVersions() {
        return this.availableMaintenanceVersions;
    }
    /**
     * Optional. The network connect mode of the Redis instance. If not provided, the connect mode defaults to DIRECT_PEERING.
     * 
     */
    @Export(name="connectMode", type=String.class, parameters={})
    private Output<String> connectMode;

    /**
     * @return Optional. The network connect mode of the Redis instance. If not provided, the connect mode defaults to DIRECT_PEERING.
     * 
     */
    public Output<String> connectMode() {
        return this.connectMode;
    }
    /**
     * The time the instance was created.
     * 
     */
    @Export(name="createTime", type=String.class, parameters={})
    private Output<String> createTime;

    /**
     * @return The time the instance was created.
     * 
     */
    public Output<String> createTime() {
        return this.createTime;
    }
    /**
     * The current zone where the Redis primary node is located. In basic tier, this will always be the same as [location_id]. In standard tier, this can be the zone of any node in the instance.
     * 
     */
    @Export(name="currentLocationId", type=String.class, parameters={})
    private Output<String> currentLocationId;

    /**
     * @return The current zone where the Redis primary node is located. In basic tier, this will always be the same as [location_id]. In standard tier, this can be the zone of any node in the instance.
     * 
     */
    public Output<String> currentLocationId() {
        return this.currentLocationId;
    }
    /**
     * Optional. The KMS key reference that the customer provides when trying to create the instance.
     * 
     */
    @Export(name="customerManagedKey", type=String.class, parameters={})
    private Output<String> customerManagedKey;

    /**
     * @return Optional. The KMS key reference that the customer provides when trying to create the instance.
     * 
     */
    public Output<String> customerManagedKey() {
        return this.customerManagedKey;
    }
    /**
     * An arbitrary and optional user-provided name for the instance.
     * 
     */
    @Export(name="displayName", type=String.class, parameters={})
    private Output<String> displayName;

    /**
     * @return An arbitrary and optional user-provided name for the instance.
     * 
     */
    public Output<String> displayName() {
        return this.displayName;
    }
    /**
     * Hostname or IP address of the exposed Redis endpoint used by clients to connect to the service.
     * 
     */
    @Export(name="host", type=String.class, parameters={})
    private Output<String> host;

    /**
     * @return Hostname or IP address of the exposed Redis endpoint used by clients to connect to the service.
     * 
     */
    public Output<String> host() {
        return this.host;
    }
    /**
     * Required. The logical name of the Redis instance in the customer project with the following restrictions: * Must contain only lowercase letters, numbers, and hyphens. * Must start with a letter. * Must be between 1-40 characters. * Must end with a number or a letter. * Must be unique within the customer project / location
     * 
     */
    @Export(name="instanceId", type=String.class, parameters={})
    private Output<String> instanceId;

    /**
     * @return Required. The logical name of the Redis instance in the customer project with the following restrictions: * Must contain only lowercase letters, numbers, and hyphens. * Must start with a letter. * Must be between 1-40 characters. * Must end with a number or a letter. * Must be unique within the customer project / location
     * 
     */
    public Output<String> instanceId() {
        return this.instanceId;
    }
    /**
     * Resource labels to represent user provided metadata
     * 
     */
    @Export(name="labels", type=Map.class, parameters={String.class, String.class})
    private Output<Map<String,String>> labels;

    /**
     * @return Resource labels to represent user provided metadata
     * 
     */
    public Output<Map<String,String>> labels() {
        return this.labels;
    }
    @Export(name="location", type=String.class, parameters={})
    private Output<String> location;

    public Output<String> location() {
        return this.location;
    }
    /**
     * Optional. The maintenance policy for the instance. If not provided, maintenance events can be performed at any time.
     * 
     */
    @Export(name="maintenancePolicy", type=MaintenancePolicyResponse.class, parameters={})
    private Output<MaintenancePolicyResponse> maintenancePolicy;

    /**
     * @return Optional. The maintenance policy for the instance. If not provided, maintenance events can be performed at any time.
     * 
     */
    public Output<MaintenancePolicyResponse> maintenancePolicy() {
        return this.maintenancePolicy;
    }
    /**
     * Date and time of upcoming maintenance events which have been scheduled.
     * 
     */
    @Export(name="maintenanceSchedule", type=MaintenanceScheduleResponse.class, parameters={})
    private Output<MaintenanceScheduleResponse> maintenanceSchedule;

    /**
     * @return Date and time of upcoming maintenance events which have been scheduled.
     * 
     */
    public Output<MaintenanceScheduleResponse> maintenanceSchedule() {
        return this.maintenanceSchedule;
    }
    /**
     * Optional. The self service update maintenance version. The version is date based such as &#34;20210712_00_00&#34;.
     * 
     */
    @Export(name="maintenanceVersion", type=String.class, parameters={})
    private Output<String> maintenanceVersion;

    /**
     * @return Optional. The self service update maintenance version. The version is date based such as &#34;20210712_00_00&#34;.
     * 
     */
    public Output<String> maintenanceVersion() {
        return this.maintenanceVersion;
    }
    /**
     * Redis memory size in GiB.
     * 
     */
    @Export(name="memorySizeGb", type=Integer.class, parameters={})
    private Output<Integer> memorySizeGb;

    /**
     * @return Redis memory size in GiB.
     * 
     */
    public Output<Integer> memorySizeGb() {
        return this.memorySizeGb;
    }
    /**
     * Unique name of the resource in this scope including project and location using the form: `projects/{project_id}/locations/{location_id}/instances/{instance_id}` Note: Redis instances are managed and addressed at regional level so location_id here refers to a GCP region; however, users may choose which specific zone (or collection of zones for cross-zone instances) an instance should be provisioned in. Refer to location_id and alternative_location_id fields for more details.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return Unique name of the resource in this scope including project and location using the form: `projects/{project_id}/locations/{location_id}/instances/{instance_id}` Note: Redis instances are managed and addressed at regional level so location_id here refers to a GCP region; however, users may choose which specific zone (or collection of zones for cross-zone instances) an instance should be provisioned in. Refer to location_id and alternative_location_id fields for more details.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Info per node.
     * 
     */
    @Export(name="nodes", type=List.class, parameters={NodeInfoResponse.class})
    private Output<List<NodeInfoResponse>> nodes;

    /**
     * @return Info per node.
     * 
     */
    public Output<List<NodeInfoResponse>> nodes() {
        return this.nodes;
    }
    /**
     * Optional. Persistence configuration parameters
     * 
     */
    @Export(name="persistenceConfig", type=PersistenceConfigResponse.class, parameters={})
    private Output<PersistenceConfigResponse> persistenceConfig;

    /**
     * @return Optional. Persistence configuration parameters
     * 
     */
    public Output<PersistenceConfigResponse> persistenceConfig() {
        return this.persistenceConfig;
    }
    /**
     * Cloud IAM identity used by import / export operations to transfer data to/from Cloud Storage. Format is &#34;serviceAccount:&#34;. The value may change over time for a given instance so should be checked before each import/export operation.
     * 
     */
    @Export(name="persistenceIamIdentity", type=String.class, parameters={})
    private Output<String> persistenceIamIdentity;

    /**
     * @return Cloud IAM identity used by import / export operations to transfer data to/from Cloud Storage. Format is &#34;serviceAccount:&#34;. The value may change over time for a given instance so should be checked before each import/export operation.
     * 
     */
    public Output<String> persistenceIamIdentity() {
        return this.persistenceIamIdentity;
    }
    /**
     * The port number of the exposed Redis endpoint.
     * 
     */
    @Export(name="port", type=Integer.class, parameters={})
    private Output<Integer> port;

    /**
     * @return The port number of the exposed Redis endpoint.
     * 
     */
    public Output<Integer> port() {
        return this.port;
    }
    @Export(name="project", type=String.class, parameters={})
    private Output<String> project;

    public Output<String> project() {
        return this.project;
    }
    /**
     * Hostname or IP address of the exposed readonly Redis endpoint. Standard tier only. Targets all healthy replica nodes in instance. Replication is asynchronous and replica nodes will exhibit some lag behind the primary. Write requests must target &#39;host&#39;.
     * 
     */
    @Export(name="readEndpoint", type=String.class, parameters={})
    private Output<String> readEndpoint;

    /**
     * @return Hostname or IP address of the exposed readonly Redis endpoint. Standard tier only. Targets all healthy replica nodes in instance. Replication is asynchronous and replica nodes will exhibit some lag behind the primary. Write requests must target &#39;host&#39;.
     * 
     */
    public Output<String> readEndpoint() {
        return this.readEndpoint;
    }
    /**
     * The port number of the exposed readonly redis endpoint. Standard tier only. Write requests should target &#39;port&#39;.
     * 
     */
    @Export(name="readEndpointPort", type=Integer.class, parameters={})
    private Output<Integer> readEndpointPort;

    /**
     * @return The port number of the exposed readonly redis endpoint. Standard tier only. Write requests should target &#39;port&#39;.
     * 
     */
    public Output<Integer> readEndpointPort() {
        return this.readEndpointPort;
    }
    /**
     * Optional. Read replicas mode for the instance. Defaults to READ_REPLICAS_DISABLED.
     * 
     */
    @Export(name="readReplicasMode", type=String.class, parameters={})
    private Output<String> readReplicasMode;

    /**
     * @return Optional. Read replicas mode for the instance. Defaults to READ_REPLICAS_DISABLED.
     * 
     */
    public Output<String> readReplicasMode() {
        return this.readReplicasMode;
    }
    /**
     * Optional. Redis configuration parameters, according to http://redis.io/topics/config. Currently, the only supported parameters are: Redis version 3.2 and newer: * maxmemory-policy * notify-keyspace-events Redis version 4.0 and newer: * activedefrag * lfu-decay-time * lfu-log-factor * maxmemory-gb Redis version 5.0 and newer: * stream-node-max-bytes * stream-node-max-entries
     * 
     */
    @Export(name="redisConfigs", type=Map.class, parameters={String.class, String.class})
    private Output<Map<String,String>> redisConfigs;

    /**
     * @return Optional. Redis configuration parameters, according to http://redis.io/topics/config. Currently, the only supported parameters are: Redis version 3.2 and newer: * maxmemory-policy * notify-keyspace-events Redis version 4.0 and newer: * activedefrag * lfu-decay-time * lfu-log-factor * maxmemory-gb Redis version 5.0 and newer: * stream-node-max-bytes * stream-node-max-entries
     * 
     */
    public Output<Map<String,String>> redisConfigs() {
        return this.redisConfigs;
    }
    /**
     * Optional. The version of Redis software. If not provided, latest supported version will be used. Currently, the supported values are: * `REDIS_3_2` for Redis 3.2 compatibility * `REDIS_4_0` for Redis 4.0 compatibility (default) * `REDIS_5_0` for Redis 5.0 compatibility * `REDIS_6_X` for Redis 6.x compatibility
     * 
     */
    @Export(name="redisVersion", type=String.class, parameters={})
    private Output<String> redisVersion;

    /**
     * @return Optional. The version of Redis software. If not provided, latest supported version will be used. Currently, the supported values are: * `REDIS_3_2` for Redis 3.2 compatibility * `REDIS_4_0` for Redis 4.0 compatibility (default) * `REDIS_5_0` for Redis 5.0 compatibility * `REDIS_6_X` for Redis 6.x compatibility
     * 
     */
    public Output<String> redisVersion() {
        return this.redisVersion;
    }
    /**
     * Optional. The number of replica nodes. The valid range for the Standard Tier with read replicas enabled is [1-5] and defaults to 2. If read replicas are not enabled for a Standard Tier instance, the only valid value is 1 and the default is 1. The valid value for basic tier is 0 and the default is also 0.
     * 
     */
    @Export(name="replicaCount", type=Integer.class, parameters={})
    private Output<Integer> replicaCount;

    /**
     * @return Optional. The number of replica nodes. The valid range for the Standard Tier with read replicas enabled is [1-5] and defaults to 2. If read replicas are not enabled for a Standard Tier instance, the only valid value is 1 and the default is 1. The valid value for basic tier is 0 and the default is also 0.
     * 
     */
    public Output<Integer> replicaCount() {
        return this.replicaCount;
    }
    /**
     * Optional. For DIRECT_PEERING mode, the CIDR range of internal addresses that are reserved for this instance. Range must be unique and non-overlapping with existing subnets in an authorized network. For PRIVATE_SERVICE_ACCESS mode, the name of one allocated IP address ranges associated with this private service access connection. If not provided, the service will choose an unused /29 block, for example, 10.0.0.0/29 or 192.168.0.0/29. For READ_REPLICAS_ENABLED the default block size is /28.
     * 
     */
    @Export(name="reservedIpRange", type=String.class, parameters={})
    private Output<String> reservedIpRange;

    /**
     * @return Optional. For DIRECT_PEERING mode, the CIDR range of internal addresses that are reserved for this instance. Range must be unique and non-overlapping with existing subnets in an authorized network. For PRIVATE_SERVICE_ACCESS mode, the name of one allocated IP address ranges associated with this private service access connection. If not provided, the service will choose an unused /29 block, for example, 10.0.0.0/29 or 192.168.0.0/29. For READ_REPLICAS_ENABLED the default block size is /28.
     * 
     */
    public Output<String> reservedIpRange() {
        return this.reservedIpRange;
    }
    /**
     * Optional. Additional IP range for node placement. Required when enabling read replicas on an existing instance. For DIRECT_PEERING mode value must be a CIDR range of size /28, or &#34;auto&#34;. For PRIVATE_SERVICE_ACCESS mode value must be the name of an allocated address range associated with the private service access connection, or &#34;auto&#34;.
     * 
     */
    @Export(name="secondaryIpRange", type=String.class, parameters={})
    private Output<String> secondaryIpRange;

    /**
     * @return Optional. Additional IP range for node placement. Required when enabling read replicas on an existing instance. For DIRECT_PEERING mode value must be a CIDR range of size /28, or &#34;auto&#34;. For PRIVATE_SERVICE_ACCESS mode value must be the name of an allocated address range associated with the private service access connection, or &#34;auto&#34;.
     * 
     */
    public Output<String> secondaryIpRange() {
        return this.secondaryIpRange;
    }
    /**
     * List of server CA certificates for the instance.
     * 
     */
    @Export(name="serverCaCerts", type=List.class, parameters={TlsCertificateResponse.class})
    private Output<List<TlsCertificateResponse>> serverCaCerts;

    /**
     * @return List of server CA certificates for the instance.
     * 
     */
    public Output<List<TlsCertificateResponse>> serverCaCerts() {
        return this.serverCaCerts;
    }
    /**
     * The current state of this instance.
     * 
     */
    @Export(name="state", type=String.class, parameters={})
    private Output<String> state;

    /**
     * @return The current state of this instance.
     * 
     */
    public Output<String> state() {
        return this.state;
    }
    /**
     * Additional information about the current status of this instance, if available.
     * 
     */
    @Export(name="statusMessage", type=String.class, parameters={})
    private Output<String> statusMessage;

    /**
     * @return Additional information about the current status of this instance, if available.
     * 
     */
    public Output<String> statusMessage() {
        return this.statusMessage;
    }
    /**
     * Optional. reasons that causes instance in &#34;SUSPENDED&#34; state.
     * 
     */
    @Export(name="suspensionReasons", type=List.class, parameters={String.class})
    private Output<List<String>> suspensionReasons;

    /**
     * @return Optional. reasons that causes instance in &#34;SUSPENDED&#34; state.
     * 
     */
    public Output<List<String>> suspensionReasons() {
        return this.suspensionReasons;
    }
    /**
     * The service tier of the instance.
     * 
     */
    @Export(name="tier", type=String.class, parameters={})
    private Output<String> tier;

    /**
     * @return The service tier of the instance.
     * 
     */
    public Output<String> tier() {
        return this.tier;
    }
    /**
     * Optional. The TLS mode of the Redis instance. If not provided, TLS is disabled for the instance.
     * 
     */
    @Export(name="transitEncryptionMode", type=String.class, parameters={})
    private Output<String> transitEncryptionMode;

    /**
     * @return Optional. The TLS mode of the Redis instance. If not provided, TLS is disabled for the instance.
     * 
     */
    public Output<String> transitEncryptionMode() {
        return this.transitEncryptionMode;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Instance(String name) {
        this(name, InstanceArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Instance(String name, InstanceArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Instance(String name, InstanceArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("google-native:redis/v1beta1:Instance", name, args == null ? InstanceArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Instance(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("google-native:redis/v1beta1:Instance", name, null, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Instance get(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Instance(name, id, options);
    }
}
