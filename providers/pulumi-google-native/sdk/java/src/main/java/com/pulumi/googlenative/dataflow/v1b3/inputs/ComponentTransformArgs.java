// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.dataflow.v1b3.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Description of a transform executed as part of an execution stage.
 * 
 */
public final class ComponentTransformArgs extends com.pulumi.resources.ResourceArgs {

    public static final ComponentTransformArgs Empty = new ComponentTransformArgs();

    /**
     * Dataflow service generated name for this source.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Dataflow service generated name for this source.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * User name for the original user transform with which this transform is most closely associated.
     * 
     */
    @Import(name="originalTransform")
    private @Nullable Output<String> originalTransform;

    /**
     * @return User name for the original user transform with which this transform is most closely associated.
     * 
     */
    public Optional<Output<String>> originalTransform() {
        return Optional.ofNullable(this.originalTransform);
    }

    /**
     * Human-readable name for this transform; may be user or system generated.
     * 
     */
    @Import(name="userName")
    private @Nullable Output<String> userName;

    /**
     * @return Human-readable name for this transform; may be user or system generated.
     * 
     */
    public Optional<Output<String>> userName() {
        return Optional.ofNullable(this.userName);
    }

    private ComponentTransformArgs() {}

    private ComponentTransformArgs(ComponentTransformArgs $) {
        this.name = $.name;
        this.originalTransform = $.originalTransform;
        this.userName = $.userName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ComponentTransformArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ComponentTransformArgs $;

        public Builder() {
            $ = new ComponentTransformArgs();
        }

        public Builder(ComponentTransformArgs defaults) {
            $ = new ComponentTransformArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param name Dataflow service generated name for this source.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Dataflow service generated name for this source.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param originalTransform User name for the original user transform with which this transform is most closely associated.
         * 
         * @return builder
         * 
         */
        public Builder originalTransform(@Nullable Output<String> originalTransform) {
            $.originalTransform = originalTransform;
            return this;
        }

        /**
         * @param originalTransform User name for the original user transform with which this transform is most closely associated.
         * 
         * @return builder
         * 
         */
        public Builder originalTransform(String originalTransform) {
            return originalTransform(Output.of(originalTransform));
        }

        /**
         * @param userName Human-readable name for this transform; may be user or system generated.
         * 
         * @return builder
         * 
         */
        public Builder userName(@Nullable Output<String> userName) {
            $.userName = userName;
            return this;
        }

        /**
         * @param userName Human-readable name for this transform; may be user or system generated.
         * 
         * @return builder
         * 
         */
        public Builder userName(String userName) {
            return userName(Output.of(userName));
        }

        public ComponentTransformArgs build() {
            return $;
        }
    }

}
