// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.networkconnectivity_v1.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;


/**
 * RoutingVPC contains information about the VPC networks that are associated with a hub&#39;s spokes.
 * 
 */
public final class RoutingVPCResponse extends com.pulumi.resources.InvokeArgs {

    public static final RoutingVPCResponse Empty = new RoutingVPCResponse();

    /**
     * If true, indicates that this VPC network is currently associated with spokes that use the data transfer feature (spokes where the site_to_site_data_transfer field is set to true). If you create new spokes that use data transfer, they must be associated with this VPC network. At most, one VPC network will have this field set to true.
     * 
     */
    @Import(name="requiredForNewSiteToSiteDataTransferSpokes", required=true)
    private Boolean requiredForNewSiteToSiteDataTransferSpokes;

    public Boolean requiredForNewSiteToSiteDataTransferSpokes() {
        return this.requiredForNewSiteToSiteDataTransferSpokes;
    }

    /**
     * The URI of the VPC network.
     * 
     */
    @Import(name="uri", required=true)
    private String uri;

    public String uri() {
        return this.uri;
    }

    private RoutingVPCResponse() {}

    private RoutingVPCResponse(RoutingVPCResponse $) {
        this.requiredForNewSiteToSiteDataTransferSpokes = $.requiredForNewSiteToSiteDataTransferSpokes;
        this.uri = $.uri;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RoutingVPCResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RoutingVPCResponse $;

        public Builder() {
            $ = new RoutingVPCResponse();
        }

        public Builder(RoutingVPCResponse defaults) {
            $ = new RoutingVPCResponse(Objects.requireNonNull(defaults));
        }

        public Builder requiredForNewSiteToSiteDataTransferSpokes(Boolean requiredForNewSiteToSiteDataTransferSpokes) {
            $.requiredForNewSiteToSiteDataTransferSpokes = requiredForNewSiteToSiteDataTransferSpokes;
            return this;
        }

        public Builder uri(String uri) {
            $.uri = uri;
            return this;
        }

        public RoutingVPCResponse build() {
            $.requiredForNewSiteToSiteDataTransferSpokes = Objects.requireNonNull($.requiredForNewSiteToSiteDataTransferSpokes, "expected parameter 'requiredForNewSiteToSiteDataTransferSpokes' to be non-null");
            $.uri = Objects.requireNonNull($.uri, "expected parameter 'uri' to be non-null");
            return $;
        }
    }

}
