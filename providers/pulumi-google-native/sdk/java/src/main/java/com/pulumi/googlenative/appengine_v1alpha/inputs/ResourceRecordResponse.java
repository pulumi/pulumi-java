// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.appengine_v1alpha.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * A DNS resource record.
 * 
 */
public final class ResourceRecordResponse extends com.pulumi.resources.InvokeArgs {

    public static final ResourceRecordResponse Empty = new ResourceRecordResponse();

    /**
     * Relative name of the object affected by this record. Only applicable for CNAME records. Example: &#39;www&#39;.
     * 
     */
    @Import(name="name", required=true)
    private String name;

    public String name() {
        return this.name;
    }

    /**
     * Data for this record. Values vary by record type, as defined in RFC 1035 (section 5) and RFC 1034 (section 3.6.1).
     * 
     */
    @Import(name="rrdata", required=true)
    private String rrdata;

    public String rrdata() {
        return this.rrdata;
    }

    /**
     * Resource record type. Example: AAAA.
     * 
     */
    @Import(name="type", required=true)
    private String type;

    public String type() {
        return this.type;
    }

    private ResourceRecordResponse() {}

    private ResourceRecordResponse(ResourceRecordResponse $) {
        this.name = $.name;
        this.rrdata = $.rrdata;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ResourceRecordResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ResourceRecordResponse $;

        public Builder() {
            $ = new ResourceRecordResponse();
        }

        public Builder(ResourceRecordResponse defaults) {
            $ = new ResourceRecordResponse(Objects.requireNonNull(defaults));
        }

        public Builder name(String name) {
            $.name = name;
            return this;
        }

        public Builder rrdata(String rrdata) {
            $.rrdata = rrdata;
            return this;
        }

        public Builder type(String type) {
            $.type = type;
            return this;
        }

        public ResourceRecordResponse build() {
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            $.rrdata = Objects.requireNonNull($.rrdata, "expected parameter 'rrdata' to be non-null");
            $.type = Objects.requireNonNull($.type, "expected parameter 'type' to be non-null");
            return $;
        }
    }

}
