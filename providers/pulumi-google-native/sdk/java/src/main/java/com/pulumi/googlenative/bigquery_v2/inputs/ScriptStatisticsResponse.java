// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.bigquery_v2.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.bigquery_v2.inputs.ScriptStackFrameResponse;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class ScriptStatisticsResponse extends com.pulumi.resources.InvokeArgs {

    public static final ScriptStatisticsResponse Empty = new ScriptStatisticsResponse();

    /**
     * Whether this child job was a statement or expression.
     * 
     */
    @Import(name="evaluationKind", required=true)
    private String evaluationKind;

    public String evaluationKind() {
        return this.evaluationKind;
    }

    /**
     * Stack trace showing the line/column/procedure name of each frame on the stack at the point where the current evaluation happened. The leaf frame is first, the primary script is last. Never empty.
     * 
     */
    @Import(name="stackFrames", required=true)
    private List<ScriptStackFrameResponse> stackFrames;

    public List<ScriptStackFrameResponse> stackFrames() {
        return this.stackFrames;
    }

    private ScriptStatisticsResponse() {}

    private ScriptStatisticsResponse(ScriptStatisticsResponse $) {
        this.evaluationKind = $.evaluationKind;
        this.stackFrames = $.stackFrames;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ScriptStatisticsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ScriptStatisticsResponse $;

        public Builder() {
            $ = new ScriptStatisticsResponse();
        }

        public Builder(ScriptStatisticsResponse defaults) {
            $ = new ScriptStatisticsResponse(Objects.requireNonNull(defaults));
        }

        public Builder evaluationKind(String evaluationKind) {
            $.evaluationKind = evaluationKind;
            return this;
        }

        public Builder stackFrames(List<ScriptStackFrameResponse> stackFrames) {
            $.stackFrames = stackFrames;
            return this;
        }

        public Builder stackFrames(ScriptStackFrameResponse... stackFrames) {
            return stackFrames(List.of(stackFrames));
        }

        public ScriptStatisticsResponse build() {
            $.evaluationKind = Objects.requireNonNull($.evaluationKind, "expected parameter 'evaluationKind' to be non-null");
            $.stackFrames = Objects.requireNonNull($.stackFrames, "expected parameter 'stackFrames' to be non-null");
            return $;
        }
    }

}
