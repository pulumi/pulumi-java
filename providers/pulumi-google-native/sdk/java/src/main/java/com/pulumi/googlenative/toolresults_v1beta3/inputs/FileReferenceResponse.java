// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.toolresults_v1beta3.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * A reference to a file.
 * 
 */
public final class FileReferenceResponse extends com.pulumi.resources.InvokeArgs {

    public static final FileReferenceResponse Empty = new FileReferenceResponse();

    /**
     * The URI of a file stored in Google Cloud Storage. For example: http://storage.googleapis.com/mybucket/path/to/test.xml or in gsutil format: gs://mybucket/path/to/test.xml with version-specific info, gs://mybucket/path/to/test.xml#1360383693690000 An INVALID_ARGUMENT error will be returned if the URI format is not supported. - In response: always set - In create/update request: always set
     * 
     */
    @Import(name="fileUri", required=true)
    private String fileUri;

    public String fileUri() {
        return this.fileUri;
    }

    private FileReferenceResponse() {}

    private FileReferenceResponse(FileReferenceResponse $) {
        this.fileUri = $.fileUri;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FileReferenceResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FileReferenceResponse $;

        public Builder() {
            $ = new FileReferenceResponse();
        }

        public Builder(FileReferenceResponse defaults) {
            $ = new FileReferenceResponse(Objects.requireNonNull(defaults));
        }

        public Builder fileUri(String fileUri) {
            $.fileUri = fileUri;
            return this;
        }

        public FileReferenceResponse build() {
            $.fileUri = Objects.requireNonNull($.fileUri, "expected parameter 'fileUri' to be non-null");
            return $;
        }
    }

}
