// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.monitoring.v1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.monitoring.v1.inputs.AggregationArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Describes a query to build the numerator or denominator of a TimeSeriesFilterRatio.
 * 
 */
public final class RatioPartArgs extends com.pulumi.resources.ResourceArgs {

    public static final RatioPartArgs Empty = new RatioPartArgs();

    /**
     * By default, the raw time series data is returned. Use this field to combine multiple time series for different views of the data.
     * 
     */
    @Import(name="aggregation")
    private @Nullable Output<AggregationArgs> aggregation;

    /**
     * @return By default, the raw time series data is returned. Use this field to combine multiple time series for different views of the data.
     * 
     */
    public Optional<Output<AggregationArgs>> aggregation() {
        return Optional.ofNullable(this.aggregation);
    }

    /**
     * The monitoring filter (https://cloud.google.com/monitoring/api/v3/filters) that identifies the metric types, resources, and projects to query.
     * 
     */
    @Import(name="filter", required=true)
    private Output<String> filter;

    /**
     * @return The monitoring filter (https://cloud.google.com/monitoring/api/v3/filters) that identifies the metric types, resources, and projects to query.
     * 
     */
    public Output<String> filter() {
        return this.filter;
    }

    private RatioPartArgs() {}

    private RatioPartArgs(RatioPartArgs $) {
        this.aggregation = $.aggregation;
        this.filter = $.filter;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RatioPartArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RatioPartArgs $;

        public Builder() {
            $ = new RatioPartArgs();
        }

        public Builder(RatioPartArgs defaults) {
            $ = new RatioPartArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param aggregation By default, the raw time series data is returned. Use this field to combine multiple time series for different views of the data.
         * 
         * @return builder
         * 
         */
        public Builder aggregation(@Nullable Output<AggregationArgs> aggregation) {
            $.aggregation = aggregation;
            return this;
        }

        /**
         * @param aggregation By default, the raw time series data is returned. Use this field to combine multiple time series for different views of the data.
         * 
         * @return builder
         * 
         */
        public Builder aggregation(AggregationArgs aggregation) {
            return aggregation(Output.of(aggregation));
        }

        /**
         * @param filter The monitoring filter (https://cloud.google.com/monitoring/api/v3/filters) that identifies the metric types, resources, and projects to query.
         * 
         * @return builder
         * 
         */
        public Builder filter(Output<String> filter) {
            $.filter = filter;
            return this;
        }

        /**
         * @param filter The monitoring filter (https://cloud.google.com/monitoring/api/v3/filters) that identifies the metric types, resources, and projects to query.
         * 
         * @return builder
         * 
         */
        public Builder filter(String filter) {
            return filter(Output.of(filter));
        }

        public RatioPartArgs build() {
            $.filter = Objects.requireNonNull($.filter, "expected parameter 'filter' to be non-null");
            return $;
        }
    }

}
