// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.genomics_v1alpha2.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * The Docker execuctor specification.
 * 
 */
public final class DockerExecutorResponse extends com.pulumi.resources.InvokeArgs {

    public static final DockerExecutorResponse Empty = new DockerExecutorResponse();

    /**
     * The command or newline delimited script to run. The command string will be executed within a bash shell. If the command exits with a non-zero exit code, output parameter de-localization will be skipped and the pipeline operation&#39;s `error` field will be populated. Maximum command string length is 16384.
     * 
     */
    @Import(name="cmd", required=true)
    private String cmd;

    /**
     * @return The command or newline delimited script to run. The command string will be executed within a bash shell. If the command exits with a non-zero exit code, output parameter de-localization will be skipped and the pipeline operation&#39;s `error` field will be populated. Maximum command string length is 16384.
     * 
     */
    public String cmd() {
        return this.cmd;
    }

    /**
     * Image name from either Docker Hub or Google Container Registry. Users that run pipelines must have READ access to the image.
     * 
     */
    @Import(name="imageName", required=true)
    private String imageName;

    /**
     * @return Image name from either Docker Hub or Google Container Registry. Users that run pipelines must have READ access to the image.
     * 
     */
    public String imageName() {
        return this.imageName;
    }

    private DockerExecutorResponse() {}

    private DockerExecutorResponse(DockerExecutorResponse $) {
        this.cmd = $.cmd;
        this.imageName = $.imageName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DockerExecutorResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DockerExecutorResponse $;

        public Builder() {
            $ = new DockerExecutorResponse();
        }

        public Builder(DockerExecutorResponse defaults) {
            $ = new DockerExecutorResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param cmd The command or newline delimited script to run. The command string will be executed within a bash shell. If the command exits with a non-zero exit code, output parameter de-localization will be skipped and the pipeline operation&#39;s `error` field will be populated. Maximum command string length is 16384.
         * 
         * @return builder
         * 
         */
        public Builder cmd(String cmd) {
            $.cmd = cmd;
            return this;
        }

        /**
         * @param imageName Image name from either Docker Hub or Google Container Registry. Users that run pipelines must have READ access to the image.
         * 
         * @return builder
         * 
         */
        public Builder imageName(String imageName) {
            $.imageName = imageName;
            return this;
        }

        public DockerExecutorResponse build() {
            $.cmd = Objects.requireNonNull($.cmd, "expected parameter 'cmd' to be non-null");
            $.imageName = Objects.requireNonNull($.imageName, "expected parameter 'imageName' to be non-null");
            return $;
        }
    }

}
