// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.compute_alpha.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class SecurityPolicyAdvancedOptionsConfigResponse extends com.pulumi.resources.InvokeArgs {

    public static final SecurityPolicyAdvancedOptionsConfigResponse Empty = new SecurityPolicyAdvancedOptionsConfigResponse();

    @Import(name="jsonParsing", required=true)
    private String jsonParsing;

    public String jsonParsing() {
        return this.jsonParsing;
    }

    @Import(name="logLevel", required=true)
    private String logLevel;

    public String logLevel() {
        return this.logLevel;
    }

    private SecurityPolicyAdvancedOptionsConfigResponse() {}

    private SecurityPolicyAdvancedOptionsConfigResponse(SecurityPolicyAdvancedOptionsConfigResponse $) {
        this.jsonParsing = $.jsonParsing;
        this.logLevel = $.logLevel;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SecurityPolicyAdvancedOptionsConfigResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SecurityPolicyAdvancedOptionsConfigResponse $;

        public Builder() {
            $ = new SecurityPolicyAdvancedOptionsConfigResponse();
        }

        public Builder(SecurityPolicyAdvancedOptionsConfigResponse defaults) {
            $ = new SecurityPolicyAdvancedOptionsConfigResponse(Objects.requireNonNull(defaults));
        }

        public Builder jsonParsing(String jsonParsing) {
            $.jsonParsing = jsonParsing;
            return this;
        }

        public Builder logLevel(String logLevel) {
            $.logLevel = logLevel;
            return this;
        }

        public SecurityPolicyAdvancedOptionsConfigResponse build() {
            $.jsonParsing = Objects.requireNonNull($.jsonParsing, "expected parameter 'jsonParsing' to be non-null");
            $.logLevel = Objects.requireNonNull($.logLevel, "expected parameter 'logLevel' to be non-null");
            return $;
        }
    }

}
