// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.monitoring_v1.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.monitoring_v1.inputs.RowResponse;
import java.util.List;
import java.util.Objects;


/**
 * A simplified layout that divides the available space into rows and arranges a set of widgets horizontally in each row.
 * 
 */
public final class RowLayoutResponse extends com.pulumi.resources.InvokeArgs {

    public static final RowLayoutResponse Empty = new RowLayoutResponse();

    /**
     * The rows of content to display.
     * 
     */
    @Import(name="rows", required=true)
    private List<RowResponse> rows;

    /**
     * @return The rows of content to display.
     * 
     */
    public List<RowResponse> rows() {
        return this.rows;
    }

    private RowLayoutResponse() {}

    private RowLayoutResponse(RowLayoutResponse $) {
        this.rows = $.rows;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RowLayoutResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RowLayoutResponse $;

        public Builder() {
            $ = new RowLayoutResponse();
        }

        public Builder(RowLayoutResponse defaults) {
            $ = new RowLayoutResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param rows The rows of content to display.
         * 
         * @return builder
         * 
         */
        public Builder rows(List<RowResponse> rows) {
            $.rows = rows;
            return this;
        }

        /**
         * @param rows The rows of content to display.
         * 
         * @return builder
         * 
         */
        public Builder rows(RowResponse... rows) {
            return rows(List.of(rows));
        }

        public RowLayoutResponse build() {
            $.rows = Objects.requireNonNull($.rows, "expected parameter 'rows' to be non-null");
            return $;
        }
    }

}
