// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.dlp.v2;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.dlp.v2.inputs.GooglePrivacyDlpV2InspectConfigArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class OrganizationInspectTemplateArgs extends com.pulumi.resources.ResourceArgs {

    public static final OrganizationInspectTemplateArgs Empty = new OrganizationInspectTemplateArgs();

    /**
     * Short description (max 256 chars).
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Short description (max 256 chars).
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Display name (max 256 chars).
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return Display name (max 256 chars).
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * The core content of the template. Configuration of the scanning process.
     * 
     */
    @Import(name="inspectConfig")
    private @Nullable Output<GooglePrivacyDlpV2InspectConfigArgs> inspectConfig;

    /**
     * @return The core content of the template. Configuration of the scanning process.
     * 
     */
    public Optional<Output<GooglePrivacyDlpV2InspectConfigArgs>> inspectConfig() {
        return Optional.ofNullable(this.inspectConfig);
    }

    /**
     * Deprecated. This field has no effect.
     * 
     * @deprecated
     * Deprecated. This field has no effect.
     * 
     */
    @Deprecated /* Deprecated. This field has no effect. */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return Deprecated. This field has no effect.
     * 
     * @deprecated
     * Deprecated. This field has no effect.
     * 
     */
    @Deprecated /* Deprecated. This field has no effect. */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    @Import(name="organizationId", required=true)
    private Output<String> organizationId;

    public Output<String> organizationId() {
        return this.organizationId;
    }

    /**
     * The template id can contain uppercase and lowercase letters, numbers, and hyphens; that is, it must match the regular expression: `[a-zA-Z\d-_]+`. The maximum length is 100 characters. Can be empty to allow the system to generate one.
     * 
     */
    @Import(name="templateId")
    private @Nullable Output<String> templateId;

    /**
     * @return The template id can contain uppercase and lowercase letters, numbers, and hyphens; that is, it must match the regular expression: `[a-zA-Z\d-_]+`. The maximum length is 100 characters. Can be empty to allow the system to generate one.
     * 
     */
    public Optional<Output<String>> templateId() {
        return Optional.ofNullable(this.templateId);
    }

    private OrganizationInspectTemplateArgs() {}

    private OrganizationInspectTemplateArgs(OrganizationInspectTemplateArgs $) {
        this.description = $.description;
        this.displayName = $.displayName;
        this.inspectConfig = $.inspectConfig;
        this.location = $.location;
        this.organizationId = $.organizationId;
        this.templateId = $.templateId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OrganizationInspectTemplateArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OrganizationInspectTemplateArgs $;

        public Builder() {
            $ = new OrganizationInspectTemplateArgs();
        }

        public Builder(OrganizationInspectTemplateArgs defaults) {
            $ = new OrganizationInspectTemplateArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param description Short description (max 256 chars).
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Short description (max 256 chars).
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param displayName Display name (max 256 chars).
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName Display name (max 256 chars).
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param inspectConfig The core content of the template. Configuration of the scanning process.
         * 
         * @return builder
         * 
         */
        public Builder inspectConfig(@Nullable Output<GooglePrivacyDlpV2InspectConfigArgs> inspectConfig) {
            $.inspectConfig = inspectConfig;
            return this;
        }

        /**
         * @param inspectConfig The core content of the template. Configuration of the scanning process.
         * 
         * @return builder
         * 
         */
        public Builder inspectConfig(GooglePrivacyDlpV2InspectConfigArgs inspectConfig) {
            return inspectConfig(Output.of(inspectConfig));
        }

        /**
         * @param location Deprecated. This field has no effect.
         * 
         * @return builder
         * 
         * @deprecated
         * Deprecated. This field has no effect.
         * 
         */
        @Deprecated /* Deprecated. This field has no effect. */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location Deprecated. This field has no effect.
         * 
         * @return builder
         * 
         * @deprecated
         * Deprecated. This field has no effect.
         * 
         */
        @Deprecated /* Deprecated. This field has no effect. */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        public Builder organizationId(Output<String> organizationId) {
            $.organizationId = organizationId;
            return this;
        }

        public Builder organizationId(String organizationId) {
            return organizationId(Output.of(organizationId));
        }

        /**
         * @param templateId The template id can contain uppercase and lowercase letters, numbers, and hyphens; that is, it must match the regular expression: `[a-zA-Z\d-_]+`. The maximum length is 100 characters. Can be empty to allow the system to generate one.
         * 
         * @return builder
         * 
         */
        public Builder templateId(@Nullable Output<String> templateId) {
            $.templateId = templateId;
            return this;
        }

        /**
         * @param templateId The template id can contain uppercase and lowercase letters, numbers, and hyphens; that is, it must match the regular expression: `[a-zA-Z\d-_]+`. The maximum length is 100 characters. Can be empty to allow the system to generate one.
         * 
         * @return builder
         * 
         */
        public Builder templateId(String templateId) {
            return templateId(Output.of(templateId));
        }

        public OrganizationInspectTemplateArgs build() {
            $.organizationId = Objects.requireNonNull($.organizationId, "expected parameter 'organizationId' to be non-null");
            return $;
        }
    }

}
