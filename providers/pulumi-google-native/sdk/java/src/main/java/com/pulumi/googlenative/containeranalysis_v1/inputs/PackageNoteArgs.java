// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.containeranalysis_v1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.containeranalysis_v1.inputs.DistributionArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * This represents a particular package that is distributed over various channels. E.g., glibc (aka libc6) is distributed by many, at various versions.
 * 
 */
public final class PackageNoteArgs extends com.pulumi.resources.ResourceArgs {

    public static final PackageNoteArgs Empty = new PackageNoteArgs();

    /**
     * The various channels by which a package is distributed.
     * 
     */
    @Import(name="distribution")
    private @Nullable Output<List<DistributionArgs>> distribution;

    public Optional<Output<List<DistributionArgs>>> distribution() {
        return Optional.ofNullable(this.distribution);
    }

    /**
     * Immutable. The name of the package.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    public Output<String> name() {
        return this.name;
    }

    private PackageNoteArgs() {}

    private PackageNoteArgs(PackageNoteArgs $) {
        this.distribution = $.distribution;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PackageNoteArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PackageNoteArgs $;

        public Builder() {
            $ = new PackageNoteArgs();
        }

        public Builder(PackageNoteArgs defaults) {
            $ = new PackageNoteArgs(Objects.requireNonNull(defaults));
        }

        public Builder distribution(@Nullable Output<List<DistributionArgs>> distribution) {
            $.distribution = distribution;
            return this;
        }

        public Builder distribution(List<DistributionArgs> distribution) {
            return distribution(Output.of(distribution));
        }

        public Builder distribution(DistributionArgs... distribution) {
            return distribution(List.of(distribution));
        }

        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public PackageNoteArgs build() {
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            return $;
        }
    }

}
