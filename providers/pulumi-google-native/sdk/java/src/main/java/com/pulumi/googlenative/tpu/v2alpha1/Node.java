// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.tpu.v2alpha1;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.googlenative.Utilities;
import com.pulumi.googlenative.tpu.v2alpha1.NodeArgs;
import com.pulumi.googlenative.tpu.v2alpha1.outputs.AttachedDiskResponse;
import com.pulumi.googlenative.tpu.v2alpha1.outputs.NetworkConfigResponse;
import com.pulumi.googlenative.tpu.v2alpha1.outputs.NetworkEndpointResponse;
import com.pulumi.googlenative.tpu.v2alpha1.outputs.SchedulingConfigResponse;
import com.pulumi.googlenative.tpu.v2alpha1.outputs.ServiceAccountResponse;
import com.pulumi.googlenative.tpu.v2alpha1.outputs.SymptomResponse;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Creates a node.
 * Auto-naming is currently not supported for this resource.
 * 
 */
@ResourceType(type="google-native:tpu/v2alpha1:Node")
public class Node extends com.pulumi.resources.CustomResource {
    /**
     * The type of hardware accelerators associated with this node.
     * 
     */
    @Export(name="acceleratorType", type=String.class, parameters={})
    private Output<String> acceleratorType;

    /**
     * @return The type of hardware accelerators associated with this node.
     * 
     */
    public Output<String> acceleratorType() {
        return this.acceleratorType;
    }
    /**
     * The API version that created this Node.
     * 
     */
    @Export(name="apiVersion", type=String.class, parameters={})
    private Output<String> apiVersion;

    /**
     * @return The API version that created this Node.
     * 
     */
    public Output<String> apiVersion() {
        return this.apiVersion;
    }
    /**
     * The CIDR block that the TPU node will use when selecting an IP address. This CIDR block must be a /29 block; the Compute Engine networks API forbids a smaller block, and using a larger block would be wasteful (a node can only consume one IP address). Errors will occur if the CIDR block has already been used for a currently existing TPU node, the CIDR block conflicts with any subnetworks in the user&#39;s provided network, or the provided network is peered with another network that is using that CIDR block.
     * 
     */
    @Export(name="cidrBlock", type=String.class, parameters={})
    private Output<String> cidrBlock;

    /**
     * @return The CIDR block that the TPU node will use when selecting an IP address. This CIDR block must be a /29 block; the Compute Engine networks API forbids a smaller block, and using a larger block would be wasteful (a node can only consume one IP address). Errors will occur if the CIDR block has already been used for a currently existing TPU node, the CIDR block conflicts with any subnetworks in the user&#39;s provided network, or the provided network is peered with another network that is using that CIDR block.
     * 
     */
    public Output<String> cidrBlock() {
        return this.cidrBlock;
    }
    /**
     * The time when the node was created.
     * 
     */
    @Export(name="createTime", type=String.class, parameters={})
    private Output<String> createTime;

    /**
     * @return The time when the node was created.
     * 
     */
    public Output<String> createTime() {
        return this.createTime;
    }
    /**
     * The additional data disks for the Node.
     * 
     */
    @Export(name="dataDisks", type=List.class, parameters={AttachedDiskResponse.class})
    private Output<List<AttachedDiskResponse>> dataDisks;

    /**
     * @return The additional data disks for the Node.
     * 
     */
    public Output<List<AttachedDiskResponse>> dataDisks() {
        return this.dataDisks;
    }
    /**
     * The user-supplied description of the TPU. Maximum of 512 characters.
     * 
     */
    @Export(name="description", type=String.class, parameters={})
    private Output<String> description;

    /**
     * @return The user-supplied description of the TPU. Maximum of 512 characters.
     * 
     */
    public Output<String> description() {
        return this.description;
    }
    /**
     * The health status of the TPU node.
     * 
     */
    @Export(name="health", type=String.class, parameters={})
    private Output<String> health;

    /**
     * @return The health status of the TPU node.
     * 
     */
    public Output<String> health() {
        return this.health;
    }
    /**
     * If this field is populated, it contains a description of why the TPU Node is unhealthy.
     * 
     */
    @Export(name="healthDescription", type=String.class, parameters={})
    private Output<String> healthDescription;

    /**
     * @return If this field is populated, it contains a description of why the TPU Node is unhealthy.
     * 
     */
    public Output<String> healthDescription() {
        return this.healthDescription;
    }
    /**
     * Resource labels to represent user-provided metadata.
     * 
     */
    @Export(name="labels", type=Map.class, parameters={String.class, String.class})
    private Output<Map<String,String>> labels;

    /**
     * @return Resource labels to represent user-provided metadata.
     * 
     */
    public Output<Map<String,String>> labels() {
        return this.labels;
    }
    @Export(name="location", type=String.class, parameters={})
    private Output<String> location;

    public Output<String> location() {
        return this.location;
    }
    /**
     * Custom metadata to apply to the TPU Node. Can set startup-script and shutdown-script
     * 
     */
    @Export(name="metadata", type=Map.class, parameters={String.class, String.class})
    private Output<Map<String,String>> metadata;

    /**
     * @return Custom metadata to apply to the TPU Node. Can set startup-script and shutdown-script
     * 
     */
    public Output<Map<String,String>> metadata() {
        return this.metadata;
    }
    /**
     * Immutable. The name of the TPU.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return Immutable. The name of the TPU.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Network configurations for the TPU node.
     * 
     */
    @Export(name="networkConfig", type=NetworkConfigResponse.class, parameters={})
    private Output<NetworkConfigResponse> networkConfig;

    /**
     * @return Network configurations for the TPU node.
     * 
     */
    public Output<NetworkConfigResponse> networkConfig() {
        return this.networkConfig;
    }
    /**
     * The network endpoints where TPU workers can be accessed and sent work. It is recommended that runtime clients of the node reach out to the 0th entry in this map first.
     * 
     */
    @Export(name="networkEndpoints", type=List.class, parameters={NetworkEndpointResponse.class})
    private Output<List<NetworkEndpointResponse>> networkEndpoints;

    /**
     * @return The network endpoints where TPU workers can be accessed and sent work. It is recommended that runtime clients of the node reach out to the 0th entry in this map first.
     * 
     */
    public Output<List<NetworkEndpointResponse>> networkEndpoints() {
        return this.networkEndpoints;
    }
    /**
     * The unqualified resource name.
     * 
     */
    @Export(name="nodeId", type=String.class, parameters={})
    private Output</* @Nullable */ String> nodeId;

    /**
     * @return The unqualified resource name.
     * 
     */
    public Output<Optional<String>> nodeId() {
        return Codegen.optional(this.nodeId);
    }
    @Export(name="project", type=String.class, parameters={})
    private Output<String> project;

    public Output<String> project() {
        return this.project;
    }
    /**
     * Idempotent request UUID.
     * 
     */
    @Export(name="requestId", type=String.class, parameters={})
    private Output</* @Nullable */ String> requestId;

    /**
     * @return Idempotent request UUID.
     * 
     */
    public Output<Optional<String>> requestId() {
        return Codegen.optional(this.requestId);
    }
    /**
     * The runtime version running in the Node.
     * 
     */
    @Export(name="runtimeVersion", type=String.class, parameters={})
    private Output<String> runtimeVersion;

    /**
     * @return The runtime version running in the Node.
     * 
     */
    public Output<String> runtimeVersion() {
        return this.runtimeVersion;
    }
    /**
     * The scheduling options for this node.
     * 
     */
    @Export(name="schedulingConfig", type=SchedulingConfigResponse.class, parameters={})
    private Output<SchedulingConfigResponse> schedulingConfig;

    /**
     * @return The scheduling options for this node.
     * 
     */
    public Output<SchedulingConfigResponse> schedulingConfig() {
        return this.schedulingConfig;
    }
    /**
     * The Google Cloud Platform Service Account to be used by the TPU node VMs. If None is specified, the default compute service account will be used.
     * 
     */
    @Export(name="serviceAccount", type=ServiceAccountResponse.class, parameters={})
    private Output<ServiceAccountResponse> serviceAccount;

    /**
     * @return The Google Cloud Platform Service Account to be used by the TPU node VMs. If None is specified, the default compute service account will be used.
     * 
     */
    public Output<ServiceAccountResponse> serviceAccount() {
        return this.serviceAccount;
    }
    /**
     * The current state for the TPU Node.
     * 
     */
    @Export(name="state", type=String.class, parameters={})
    private Output<String> state;

    /**
     * @return The current state for the TPU Node.
     * 
     */
    public Output<String> state() {
        return this.state;
    }
    /**
     * The Symptoms that have occurred to the TPU Node.
     * 
     */
    @Export(name="symptoms", type=List.class, parameters={SymptomResponse.class})
    private Output<List<SymptomResponse>> symptoms;

    /**
     * @return The Symptoms that have occurred to the TPU Node.
     * 
     */
    public Output<List<SymptomResponse>> symptoms() {
        return this.symptoms;
    }
    /**
     * Tags to apply to the TPU Node. Tags are used to identify valid sources or targets for network firewalls.
     * 
     */
    @Export(name="tags", type=List.class, parameters={String.class})
    private Output<List<String>> tags;

    /**
     * @return Tags to apply to the TPU Node. Tags are used to identify valid sources or targets for network firewalls.
     * 
     */
    public Output<List<String>> tags() {
        return this.tags;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Node(String name) {
        this(name, NodeArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Node(String name, NodeArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Node(String name, NodeArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("google-native:tpu/v2alpha1:Node", name, args == null ? NodeArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Node(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("google-native:tpu/v2alpha1:Node", name, null, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Node get(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Node(name, id, options);
    }
}
