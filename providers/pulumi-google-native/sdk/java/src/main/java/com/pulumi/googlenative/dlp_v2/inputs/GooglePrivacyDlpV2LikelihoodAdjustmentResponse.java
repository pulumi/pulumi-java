// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.dlp_v2.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;


/**
 * Message for specifying an adjustment to the likelihood of a finding as part of a detection rule.
 * 
 */
public final class GooglePrivacyDlpV2LikelihoodAdjustmentResponse extends com.pulumi.resources.InvokeArgs {

    public static final GooglePrivacyDlpV2LikelihoodAdjustmentResponse Empty = new GooglePrivacyDlpV2LikelihoodAdjustmentResponse();

    /**
     * Set the likelihood of a finding to a fixed value.
     * 
     */
    @Import(name="fixedLikelihood", required=true)
    private String fixedLikelihood;

    /**
     * @return Set the likelihood of a finding to a fixed value.
     * 
     */
    public String fixedLikelihood() {
        return this.fixedLikelihood;
    }

    /**
     * Increase or decrease the likelihood by the specified number of levels. For example, if a finding would be `POSSIBLE` without the detection rule and `relative_likelihood` is 1, then it is upgraded to `LIKELY`, while a value of -1 would downgrade it to `UNLIKELY`. Likelihood may never drop below `VERY_UNLIKELY` or exceed `VERY_LIKELY`, so applying an adjustment of 1 followed by an adjustment of -1 when base likelihood is `VERY_LIKELY` will result in a final likelihood of `LIKELY`.
     * 
     */
    @Import(name="relativeLikelihood", required=true)
    private Integer relativeLikelihood;

    /**
     * @return Increase or decrease the likelihood by the specified number of levels. For example, if a finding would be `POSSIBLE` without the detection rule and `relative_likelihood` is 1, then it is upgraded to `LIKELY`, while a value of -1 would downgrade it to `UNLIKELY`. Likelihood may never drop below `VERY_UNLIKELY` or exceed `VERY_LIKELY`, so applying an adjustment of 1 followed by an adjustment of -1 when base likelihood is `VERY_LIKELY` will result in a final likelihood of `LIKELY`.
     * 
     */
    public Integer relativeLikelihood() {
        return this.relativeLikelihood;
    }

    private GooglePrivacyDlpV2LikelihoodAdjustmentResponse() {}

    private GooglePrivacyDlpV2LikelihoodAdjustmentResponse(GooglePrivacyDlpV2LikelihoodAdjustmentResponse $) {
        this.fixedLikelihood = $.fixedLikelihood;
        this.relativeLikelihood = $.relativeLikelihood;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GooglePrivacyDlpV2LikelihoodAdjustmentResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GooglePrivacyDlpV2LikelihoodAdjustmentResponse $;

        public Builder() {
            $ = new GooglePrivacyDlpV2LikelihoodAdjustmentResponse();
        }

        public Builder(GooglePrivacyDlpV2LikelihoodAdjustmentResponse defaults) {
            $ = new GooglePrivacyDlpV2LikelihoodAdjustmentResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param fixedLikelihood Set the likelihood of a finding to a fixed value.
         * 
         * @return builder
         * 
         */
        public Builder fixedLikelihood(String fixedLikelihood) {
            $.fixedLikelihood = fixedLikelihood;
            return this;
        }

        /**
         * @param relativeLikelihood Increase or decrease the likelihood by the specified number of levels. For example, if a finding would be `POSSIBLE` without the detection rule and `relative_likelihood` is 1, then it is upgraded to `LIKELY`, while a value of -1 would downgrade it to `UNLIKELY`. Likelihood may never drop below `VERY_UNLIKELY` or exceed `VERY_LIKELY`, so applying an adjustment of 1 followed by an adjustment of -1 when base likelihood is `VERY_LIKELY` will result in a final likelihood of `LIKELY`.
         * 
         * @return builder
         * 
         */
        public Builder relativeLikelihood(Integer relativeLikelihood) {
            $.relativeLikelihood = relativeLikelihood;
            return this;
        }

        public GooglePrivacyDlpV2LikelihoodAdjustmentResponse build() {
            $.fixedLikelihood = Objects.requireNonNull($.fixedLikelihood, "expected parameter 'fixedLikelihood' to be non-null");
            $.relativeLikelihood = Objects.requireNonNull($.relativeLikelihood, "expected parameter 'relativeLikelihood' to be non-null");
            return $;
        }
    }

}
