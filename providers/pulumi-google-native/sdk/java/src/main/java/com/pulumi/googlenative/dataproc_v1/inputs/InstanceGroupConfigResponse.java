// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.dataproc_v1.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.dataproc_v1.inputs.AcceleratorConfigResponse;
import com.pulumi.googlenative.dataproc_v1.inputs.DiskConfigResponse;
import com.pulumi.googlenative.dataproc_v1.inputs.InstanceReferenceResponse;
import com.pulumi.googlenative.dataproc_v1.inputs.ManagedGroupConfigResponse;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;


/**
 * The config settings for Compute Engine resources in an instance group, such as a master or worker group.
 * 
 */
public final class InstanceGroupConfigResponse extends com.pulumi.resources.InvokeArgs {

    public static final InstanceGroupConfigResponse Empty = new InstanceGroupConfigResponse();

    /**
     * Optional. The Compute Engine accelerator configuration for these instances.
     * 
     */
    @Import(name="accelerators", required=true)
    private List<AcceleratorConfigResponse> accelerators;

    /**
     * @return Optional. The Compute Engine accelerator configuration for these instances.
     * 
     */
    public List<AcceleratorConfigResponse> accelerators() {
        return this.accelerators;
    }

    /**
     * Optional. Disk option config settings.
     * 
     */
    @Import(name="diskConfig", required=true)
    private DiskConfigResponse diskConfig;

    /**
     * @return Optional. Disk option config settings.
     * 
     */
    public DiskConfigResponse diskConfig() {
        return this.diskConfig;
    }

    /**
     * Optional. The Compute Engine image resource used for cluster instances.The URI can represent an image or image family.Image examples: https://www.googleapis.com/compute/beta/projects/[project_id]/global/images/[image-id] projects/[project_id]/global/images/[image-id] image-idImage family examples. Dataproc will use the most recent image from the family: https://www.googleapis.com/compute/beta/projects/[project_id]/global/images/family/[custom-image-family-name] projects/[project_id]/global/images/family/[custom-image-family-name]If the URI is unspecified, it will be inferred from SoftwareConfig.image_version or the system default.
     * 
     */
    @Import(name="imageUri", required=true)
    private String imageUri;

    /**
     * @return Optional. The Compute Engine image resource used for cluster instances.The URI can represent an image or image family.Image examples: https://www.googleapis.com/compute/beta/projects/[project_id]/global/images/[image-id] projects/[project_id]/global/images/[image-id] image-idImage family examples. Dataproc will use the most recent image from the family: https://www.googleapis.com/compute/beta/projects/[project_id]/global/images/family/[custom-image-family-name] projects/[project_id]/global/images/family/[custom-image-family-name]If the URI is unspecified, it will be inferred from SoftwareConfig.image_version or the system default.
     * 
     */
    public String imageUri() {
        return this.imageUri;
    }

    /**
     * The list of instance names. Dataproc derives the names from cluster_name, num_instances, and the instance group.
     * 
     */
    @Import(name="instanceNames", required=true)
    private List<String> instanceNames;

    /**
     * @return The list of instance names. Dataproc derives the names from cluster_name, num_instances, and the instance group.
     * 
     */
    public List<String> instanceNames() {
        return this.instanceNames;
    }

    /**
     * List of references to Compute Engine instances.
     * 
     */
    @Import(name="instanceReferences", required=true)
    private List<InstanceReferenceResponse> instanceReferences;

    /**
     * @return List of references to Compute Engine instances.
     * 
     */
    public List<InstanceReferenceResponse> instanceReferences() {
        return this.instanceReferences;
    }

    /**
     * Specifies that this instance group contains preemptible instances.
     * 
     */
    @Import(name="isPreemptible", required=true)
    private Boolean isPreemptible;

    /**
     * @return Specifies that this instance group contains preemptible instances.
     * 
     */
    public Boolean isPreemptible() {
        return this.isPreemptible;
    }

    /**
     * Optional. The Compute Engine machine type used for cluster instances.A full URL, partial URI, or short name are valid. Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/zones/us-east1-a/machineTypes/n1-standard-2 projects/[project_id]/zones/us-east1-a/machineTypes/n1-standard-2 n1-standard-2Auto Zone Exception: If you are using the Dataproc Auto Zone Placement (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/auto-zone#using_auto_zone_placement) feature, you must use the short name of the machine type resource, for example, n1-standard-2.
     * 
     */
    @Import(name="machineTypeUri", required=true)
    private String machineTypeUri;

    /**
     * @return Optional. The Compute Engine machine type used for cluster instances.A full URL, partial URI, or short name are valid. Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/zones/us-east1-a/machineTypes/n1-standard-2 projects/[project_id]/zones/us-east1-a/machineTypes/n1-standard-2 n1-standard-2Auto Zone Exception: If you are using the Dataproc Auto Zone Placement (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/auto-zone#using_auto_zone_placement) feature, you must use the short name of the machine type resource, for example, n1-standard-2.
     * 
     */
    public String machineTypeUri() {
        return this.machineTypeUri;
    }

    /**
     * The config for Compute Engine Instance Group Manager that manages this group. This is only used for preemptible instance groups.
     * 
     */
    @Import(name="managedGroupConfig", required=true)
    private ManagedGroupConfigResponse managedGroupConfig;

    /**
     * @return The config for Compute Engine Instance Group Manager that manages this group. This is only used for preemptible instance groups.
     * 
     */
    public ManagedGroupConfigResponse managedGroupConfig() {
        return this.managedGroupConfig;
    }

    /**
     * Optional. Specifies the minimum cpu platform for the Instance Group. See Dataproc -&gt; Minimum CPU Platform (https://cloud.google.com/dataproc/docs/concepts/compute/dataproc-min-cpu).
     * 
     */
    @Import(name="minCpuPlatform", required=true)
    private String minCpuPlatform;

    /**
     * @return Optional. Specifies the minimum cpu platform for the Instance Group. See Dataproc -&gt; Minimum CPU Platform (https://cloud.google.com/dataproc/docs/concepts/compute/dataproc-min-cpu).
     * 
     */
    public String minCpuPlatform() {
        return this.minCpuPlatform;
    }

    /**
     * Optional. The number of VM instances in the instance group. For HA cluster master_config groups, must be set to 3. For standard cluster master_config groups, must be set to 1.
     * 
     */
    @Import(name="numInstances", required=true)
    private Integer numInstances;

    /**
     * @return Optional. The number of VM instances in the instance group. For HA cluster master_config groups, must be set to 3. For standard cluster master_config groups, must be set to 1.
     * 
     */
    public Integer numInstances() {
        return this.numInstances;
    }

    /**
     * Optional. Specifies the preemptibility of the instance group.The default value for master and worker groups is NON_PREEMPTIBLE. This default cannot be changed.The default value for secondary instances is PREEMPTIBLE.
     * 
     */
    @Import(name="preemptibility", required=true)
    private String preemptibility;

    /**
     * @return Optional. Specifies the preemptibility of the instance group.The default value for master and worker groups is NON_PREEMPTIBLE. This default cannot be changed.The default value for secondary instances is PREEMPTIBLE.
     * 
     */
    public String preemptibility() {
        return this.preemptibility;
    }

    private InstanceGroupConfigResponse() {}

    private InstanceGroupConfigResponse(InstanceGroupConfigResponse $) {
        this.accelerators = $.accelerators;
        this.diskConfig = $.diskConfig;
        this.imageUri = $.imageUri;
        this.instanceNames = $.instanceNames;
        this.instanceReferences = $.instanceReferences;
        this.isPreemptible = $.isPreemptible;
        this.machineTypeUri = $.machineTypeUri;
        this.managedGroupConfig = $.managedGroupConfig;
        this.minCpuPlatform = $.minCpuPlatform;
        this.numInstances = $.numInstances;
        this.preemptibility = $.preemptibility;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InstanceGroupConfigResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InstanceGroupConfigResponse $;

        public Builder() {
            $ = new InstanceGroupConfigResponse();
        }

        public Builder(InstanceGroupConfigResponse defaults) {
            $ = new InstanceGroupConfigResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param accelerators Optional. The Compute Engine accelerator configuration for these instances.
         * 
         * @return builder
         * 
         */
        public Builder accelerators(List<AcceleratorConfigResponse> accelerators) {
            $.accelerators = accelerators;
            return this;
        }

        /**
         * @param accelerators Optional. The Compute Engine accelerator configuration for these instances.
         * 
         * @return builder
         * 
         */
        public Builder accelerators(AcceleratorConfigResponse... accelerators) {
            return accelerators(List.of(accelerators));
        }

        /**
         * @param diskConfig Optional. Disk option config settings.
         * 
         * @return builder
         * 
         */
        public Builder diskConfig(DiskConfigResponse diskConfig) {
            $.diskConfig = diskConfig;
            return this;
        }

        /**
         * @param imageUri Optional. The Compute Engine image resource used for cluster instances.The URI can represent an image or image family.Image examples: https://www.googleapis.com/compute/beta/projects/[project_id]/global/images/[image-id] projects/[project_id]/global/images/[image-id] image-idImage family examples. Dataproc will use the most recent image from the family: https://www.googleapis.com/compute/beta/projects/[project_id]/global/images/family/[custom-image-family-name] projects/[project_id]/global/images/family/[custom-image-family-name]If the URI is unspecified, it will be inferred from SoftwareConfig.image_version or the system default.
         * 
         * @return builder
         * 
         */
        public Builder imageUri(String imageUri) {
            $.imageUri = imageUri;
            return this;
        }

        /**
         * @param instanceNames The list of instance names. Dataproc derives the names from cluster_name, num_instances, and the instance group.
         * 
         * @return builder
         * 
         */
        public Builder instanceNames(List<String> instanceNames) {
            $.instanceNames = instanceNames;
            return this;
        }

        /**
         * @param instanceNames The list of instance names. Dataproc derives the names from cluster_name, num_instances, and the instance group.
         * 
         * @return builder
         * 
         */
        public Builder instanceNames(String... instanceNames) {
            return instanceNames(List.of(instanceNames));
        }

        /**
         * @param instanceReferences List of references to Compute Engine instances.
         * 
         * @return builder
         * 
         */
        public Builder instanceReferences(List<InstanceReferenceResponse> instanceReferences) {
            $.instanceReferences = instanceReferences;
            return this;
        }

        /**
         * @param instanceReferences List of references to Compute Engine instances.
         * 
         * @return builder
         * 
         */
        public Builder instanceReferences(InstanceReferenceResponse... instanceReferences) {
            return instanceReferences(List.of(instanceReferences));
        }

        /**
         * @param isPreemptible Specifies that this instance group contains preemptible instances.
         * 
         * @return builder
         * 
         */
        public Builder isPreemptible(Boolean isPreemptible) {
            $.isPreemptible = isPreemptible;
            return this;
        }

        /**
         * @param machineTypeUri Optional. The Compute Engine machine type used for cluster instances.A full URL, partial URI, or short name are valid. Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/zones/us-east1-a/machineTypes/n1-standard-2 projects/[project_id]/zones/us-east1-a/machineTypes/n1-standard-2 n1-standard-2Auto Zone Exception: If you are using the Dataproc Auto Zone Placement (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/auto-zone#using_auto_zone_placement) feature, you must use the short name of the machine type resource, for example, n1-standard-2.
         * 
         * @return builder
         * 
         */
        public Builder machineTypeUri(String machineTypeUri) {
            $.machineTypeUri = machineTypeUri;
            return this;
        }

        /**
         * @param managedGroupConfig The config for Compute Engine Instance Group Manager that manages this group. This is only used for preemptible instance groups.
         * 
         * @return builder
         * 
         */
        public Builder managedGroupConfig(ManagedGroupConfigResponse managedGroupConfig) {
            $.managedGroupConfig = managedGroupConfig;
            return this;
        }

        /**
         * @param minCpuPlatform Optional. Specifies the minimum cpu platform for the Instance Group. See Dataproc -&gt; Minimum CPU Platform (https://cloud.google.com/dataproc/docs/concepts/compute/dataproc-min-cpu).
         * 
         * @return builder
         * 
         */
        public Builder minCpuPlatform(String minCpuPlatform) {
            $.minCpuPlatform = minCpuPlatform;
            return this;
        }

        /**
         * @param numInstances Optional. The number of VM instances in the instance group. For HA cluster master_config groups, must be set to 3. For standard cluster master_config groups, must be set to 1.
         * 
         * @return builder
         * 
         */
        public Builder numInstances(Integer numInstances) {
            $.numInstances = numInstances;
            return this;
        }

        /**
         * @param preemptibility Optional. Specifies the preemptibility of the instance group.The default value for master and worker groups is NON_PREEMPTIBLE. This default cannot be changed.The default value for secondary instances is PREEMPTIBLE.
         * 
         * @return builder
         * 
         */
        public Builder preemptibility(String preemptibility) {
            $.preemptibility = preemptibility;
            return this;
        }

        public InstanceGroupConfigResponse build() {
            $.accelerators = Objects.requireNonNull($.accelerators, "expected parameter 'accelerators' to be non-null");
            $.diskConfig = Objects.requireNonNull($.diskConfig, "expected parameter 'diskConfig' to be non-null");
            $.imageUri = Objects.requireNonNull($.imageUri, "expected parameter 'imageUri' to be non-null");
            $.instanceNames = Objects.requireNonNull($.instanceNames, "expected parameter 'instanceNames' to be non-null");
            $.instanceReferences = Objects.requireNonNull($.instanceReferences, "expected parameter 'instanceReferences' to be non-null");
            $.isPreemptible = Objects.requireNonNull($.isPreemptible, "expected parameter 'isPreemptible' to be non-null");
            $.machineTypeUri = Objects.requireNonNull($.machineTypeUri, "expected parameter 'machineTypeUri' to be non-null");
            $.managedGroupConfig = Objects.requireNonNull($.managedGroupConfig, "expected parameter 'managedGroupConfig' to be non-null");
            $.minCpuPlatform = Objects.requireNonNull($.minCpuPlatform, "expected parameter 'minCpuPlatform' to be non-null");
            $.numInstances = Objects.requireNonNull($.numInstances, "expected parameter 'numInstances' to be non-null");
            $.preemptibility = Objects.requireNonNull($.preemptibility, "expected parameter 'preemptibility' to be non-null");
            return $;
        }
    }

}
