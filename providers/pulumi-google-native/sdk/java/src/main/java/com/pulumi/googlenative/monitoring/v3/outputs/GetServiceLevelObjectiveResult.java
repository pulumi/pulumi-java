// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.monitoring.v3.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.googlenative.monitoring.v3.outputs.ServiceLevelIndicatorResponse;
import java.lang.Double;
import java.lang.String;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetServiceLevelObjectiveResult {
    /**
     * @return A calendar period, semantically &#34;since the start of the current &#34;. At this time, only DAY, WEEK, FORTNIGHT, and MONTH are supported.
     * 
     */
    private final String calendarPeriod;
    /**
     * @return Name used for UI elements listing this SLO.
     * 
     */
    private final String displayName;
    /**
     * @return The fraction of service that must be good in order for this objective to be met. 0 &lt; goal &lt;= 0.999.
     * 
     */
    private final Double goal;
    /**
     * @return Resource name for this ServiceLevelObjective. The format is: projects/[PROJECT_ID_OR_NUMBER]/services/[SERVICE_ID]/serviceLevelObjectives/[SLO_NAME]
     * 
     */
    private final String name;
    /**
     * @return A rolling time period, semantically &#34;in the past &#34;. Must be an integer multiple of 1 day no larger than 30 days.
     * 
     */
    private final String rollingPeriod;
    /**
     * @return The definition of good service, used to measure and calculate the quality of the Service&#39;s performance with respect to a single aspect of service quality.
     * 
     */
    private final ServiceLevelIndicatorResponse serviceLevelIndicator;
    /**
     * @return Labels which have been used to annotate the service-level objective. Label keys must start with a letter. Label keys and values may contain lowercase letters, numbers, underscores, and dashes. Label keys and values have a maximum length of 63 characters, and must be less than 128 bytes in size. Up to 64 label entries may be stored. For labels which do not have a semantic value, the empty string may be supplied for the label value.
     * 
     */
    private final Map<String,String> userLabels;

    @CustomType.Constructor
    private GetServiceLevelObjectiveResult(
        @CustomType.Parameter("calendarPeriod") String calendarPeriod,
        @CustomType.Parameter("displayName") String displayName,
        @CustomType.Parameter("goal") Double goal,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("rollingPeriod") String rollingPeriod,
        @CustomType.Parameter("serviceLevelIndicator") ServiceLevelIndicatorResponse serviceLevelIndicator,
        @CustomType.Parameter("userLabels") Map<String,String> userLabels) {
        this.calendarPeriod = calendarPeriod;
        this.displayName = displayName;
        this.goal = goal;
        this.name = name;
        this.rollingPeriod = rollingPeriod;
        this.serviceLevelIndicator = serviceLevelIndicator;
        this.userLabels = userLabels;
    }

    /**
     * @return A calendar period, semantically &#34;since the start of the current &#34;. At this time, only DAY, WEEK, FORTNIGHT, and MONTH are supported.
     * 
     */
    public String calendarPeriod() {
        return this.calendarPeriod;
    }
    /**
     * @return Name used for UI elements listing this SLO.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return The fraction of service that must be good in order for this objective to be met. 0 &lt; goal &lt;= 0.999.
     * 
     */
    public Double goal() {
        return this.goal;
    }
    /**
     * @return Resource name for this ServiceLevelObjective. The format is: projects/[PROJECT_ID_OR_NUMBER]/services/[SERVICE_ID]/serviceLevelObjectives/[SLO_NAME]
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return A rolling time period, semantically &#34;in the past &#34;. Must be an integer multiple of 1 day no larger than 30 days.
     * 
     */
    public String rollingPeriod() {
        return this.rollingPeriod;
    }
    /**
     * @return The definition of good service, used to measure and calculate the quality of the Service&#39;s performance with respect to a single aspect of service quality.
     * 
     */
    public ServiceLevelIndicatorResponse serviceLevelIndicator() {
        return this.serviceLevelIndicator;
    }
    /**
     * @return Labels which have been used to annotate the service-level objective. Label keys must start with a letter. Label keys and values may contain lowercase letters, numbers, underscores, and dashes. Label keys and values have a maximum length of 63 characters, and must be less than 128 bytes in size. Up to 64 label entries may be stored. For labels which do not have a semantic value, the empty string may be supplied for the label value.
     * 
     */
    public Map<String,String> userLabels() {
        return this.userLabels;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetServiceLevelObjectiveResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String calendarPeriod;
        private String displayName;
        private Double goal;
        private String name;
        private String rollingPeriod;
        private ServiceLevelIndicatorResponse serviceLevelIndicator;
        private Map<String,String> userLabels;

        public Builder() {
    	      // Empty
        }

        public Builder(GetServiceLevelObjectiveResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.calendarPeriod = defaults.calendarPeriod;
    	      this.displayName = defaults.displayName;
    	      this.goal = defaults.goal;
    	      this.name = defaults.name;
    	      this.rollingPeriod = defaults.rollingPeriod;
    	      this.serviceLevelIndicator = defaults.serviceLevelIndicator;
    	      this.userLabels = defaults.userLabels;
        }

        public Builder calendarPeriod(String calendarPeriod) {
            this.calendarPeriod = Objects.requireNonNull(calendarPeriod);
            return this;
        }
        public Builder displayName(String displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }
        public Builder goal(Double goal) {
            this.goal = Objects.requireNonNull(goal);
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder rollingPeriod(String rollingPeriod) {
            this.rollingPeriod = Objects.requireNonNull(rollingPeriod);
            return this;
        }
        public Builder serviceLevelIndicator(ServiceLevelIndicatorResponse serviceLevelIndicator) {
            this.serviceLevelIndicator = Objects.requireNonNull(serviceLevelIndicator);
            return this;
        }
        public Builder userLabels(Map<String,String> userLabels) {
            this.userLabels = Objects.requireNonNull(userLabels);
            return this;
        }        public GetServiceLevelObjectiveResult build() {
            return new GetServiceLevelObjectiveResult(calendarPeriod, displayName, goal, name, rollingPeriod, serviceLevelIndicator, userLabels);
        }
    }
}
