// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.recaptchaenterprise_v1.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;


/**
 * Options for user acceptance testing.
 * 
 */
public final class GoogleCloudRecaptchaenterpriseV1TestingOptionsResponse extends com.pulumi.resources.InvokeArgs {

    public static final GoogleCloudRecaptchaenterpriseV1TestingOptionsResponse Empty = new GoogleCloudRecaptchaenterpriseV1TestingOptionsResponse();

    /**
     * For challenge-based keys only (CHECKBOX, INVISIBLE), all challenge requests for this site will return nocaptcha if NOCAPTCHA, or an unsolvable challenge if CHALLENGE.
     * 
     */
    @Import(name="testingChallenge", required=true)
    private String testingChallenge;

    public String testingChallenge() {
        return this.testingChallenge;
    }

    /**
     * All assessments for this Key will return this score. Must be between 0 (likely not legitimate) and 1 (likely legitimate) inclusive.
     * 
     */
    @Import(name="testingScore", required=true)
    private Double testingScore;

    public Double testingScore() {
        return this.testingScore;
    }

    private GoogleCloudRecaptchaenterpriseV1TestingOptionsResponse() {}

    private GoogleCloudRecaptchaenterpriseV1TestingOptionsResponse(GoogleCloudRecaptchaenterpriseV1TestingOptionsResponse $) {
        this.testingChallenge = $.testingChallenge;
        this.testingScore = $.testingScore;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GoogleCloudRecaptchaenterpriseV1TestingOptionsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GoogleCloudRecaptchaenterpriseV1TestingOptionsResponse $;

        public Builder() {
            $ = new GoogleCloudRecaptchaenterpriseV1TestingOptionsResponse();
        }

        public Builder(GoogleCloudRecaptchaenterpriseV1TestingOptionsResponse defaults) {
            $ = new GoogleCloudRecaptchaenterpriseV1TestingOptionsResponse(Objects.requireNonNull(defaults));
        }

        public Builder testingChallenge(String testingChallenge) {
            $.testingChallenge = testingChallenge;
            return this;
        }

        public Builder testingScore(Double testingScore) {
            $.testingScore = testingScore;
            return this;
        }

        public GoogleCloudRecaptchaenterpriseV1TestingOptionsResponse build() {
            $.testingChallenge = Objects.requireNonNull($.testingChallenge, "expected parameter 'testingChallenge' to be non-null");
            $.testingScore = Objects.requireNonNull($.testingScore, "expected parameter 'testingScore' to be non-null");
            return $;
        }
    }

}
