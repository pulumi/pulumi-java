// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.cloudiot_v1.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * The configuration for forwarding telemetry events.
 * 
 */
public final class EventNotificationConfigResponse extends com.pulumi.resources.InvokeArgs {

    public static final EventNotificationConfigResponse Empty = new EventNotificationConfigResponse();

    /**
     * A Cloud Pub/Sub topic name. For example, `projects/myProject/topics/deviceEvents`.
     * 
     */
    @Import(name="pubsubTopicName", required=true)
    private String pubsubTopicName;

    public String pubsubTopicName() {
        return this.pubsubTopicName;
    }

    /**
     * If the subfolder name matches this string exactly, this configuration will be used. The string must not include the leading &#39;/&#39; character. If empty, all strings are matched. This field is used only for telemetry events; subfolders are not supported for state changes.
     * 
     */
    @Import(name="subfolderMatches", required=true)
    private String subfolderMatches;

    public String subfolderMatches() {
        return this.subfolderMatches;
    }

    private EventNotificationConfigResponse() {}

    private EventNotificationConfigResponse(EventNotificationConfigResponse $) {
        this.pubsubTopicName = $.pubsubTopicName;
        this.subfolderMatches = $.subfolderMatches;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EventNotificationConfigResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EventNotificationConfigResponse $;

        public Builder() {
            $ = new EventNotificationConfigResponse();
        }

        public Builder(EventNotificationConfigResponse defaults) {
            $ = new EventNotificationConfigResponse(Objects.requireNonNull(defaults));
        }

        public Builder pubsubTopicName(String pubsubTopicName) {
            $.pubsubTopicName = pubsubTopicName;
            return this;
        }

        public Builder subfolderMatches(String subfolderMatches) {
            $.subfolderMatches = subfolderMatches;
            return this;
        }

        public EventNotificationConfigResponse build() {
            $.pubsubTopicName = Objects.requireNonNull($.pubsubTopicName, "expected parameter 'pubsubTopicName' to be non-null");
            $.subfolderMatches = Objects.requireNonNull($.subfolderMatches, "expected parameter 'subfolderMatches' to be non-null");
            return $;
        }
    }

}
