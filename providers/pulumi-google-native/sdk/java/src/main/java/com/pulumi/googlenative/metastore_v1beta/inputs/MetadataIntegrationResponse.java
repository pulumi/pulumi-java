// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.metastore_v1beta.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.metastore_v1beta.inputs.DataCatalogConfigResponse;
import com.pulumi.googlenative.metastore_v1beta.inputs.DataplexConfigResponse;
import java.util.Objects;


/**
 * Specifies how metastore metadata should be integrated with external services.
 * 
 */
public final class MetadataIntegrationResponse extends com.pulumi.resources.InvokeArgs {

    public static final MetadataIntegrationResponse Empty = new MetadataIntegrationResponse();

    /**
     * The integration config for the Data Catalog service.
     * 
     */
    @Import(name="dataCatalogConfig", required=true)
    private DataCatalogConfigResponse dataCatalogConfig;

    /**
     * @return The integration config for the Data Catalog service.
     * 
     */
    public DataCatalogConfigResponse dataCatalogConfig() {
        return this.dataCatalogConfig;
    }

    /**
     * The integration config for the Dataplex service.
     * 
     */
    @Import(name="dataplexConfig", required=true)
    private DataplexConfigResponse dataplexConfig;

    /**
     * @return The integration config for the Dataplex service.
     * 
     */
    public DataplexConfigResponse dataplexConfig() {
        return this.dataplexConfig;
    }

    private MetadataIntegrationResponse() {}

    private MetadataIntegrationResponse(MetadataIntegrationResponse $) {
        this.dataCatalogConfig = $.dataCatalogConfig;
        this.dataplexConfig = $.dataplexConfig;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MetadataIntegrationResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MetadataIntegrationResponse $;

        public Builder() {
            $ = new MetadataIntegrationResponse();
        }

        public Builder(MetadataIntegrationResponse defaults) {
            $ = new MetadataIntegrationResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param dataCatalogConfig The integration config for the Data Catalog service.
         * 
         * @return builder
         * 
         */
        public Builder dataCatalogConfig(DataCatalogConfigResponse dataCatalogConfig) {
            $.dataCatalogConfig = dataCatalogConfig;
            return this;
        }

        /**
         * @param dataplexConfig The integration config for the Dataplex service.
         * 
         * @return builder
         * 
         */
        public Builder dataplexConfig(DataplexConfigResponse dataplexConfig) {
            $.dataplexConfig = dataplexConfig;
            return this;
        }

        public MetadataIntegrationResponse build() {
            $.dataCatalogConfig = Objects.requireNonNull($.dataCatalogConfig, "expected parameter 'dataCatalogConfig' to be non-null");
            $.dataplexConfig = Objects.requireNonNull($.dataplexConfig, "expected parameter 'dataplexConfig' to be non-null");
            return $;
        }
    }

}
