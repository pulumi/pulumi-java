// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.apigeeregistry.v1;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.googlenative.Utilities;
import com.pulumi.googlenative.apigeeregistry.v1.InstanceArgs;
import com.pulumi.googlenative.apigeeregistry.v1.outputs.ConfigResponse;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * Provisions instance resources for the Registry.
 * Auto-naming is currently not supported for this resource.
 * 
 */
@ResourceType(type="google-native:apigeeregistry/v1:Instance")
public class Instance extends com.pulumi.resources.CustomResource {
    /**
     * Config of the Instance.
     * 
     */
    @Export(name="config", type=ConfigResponse.class, parameters={})
    private Output<ConfigResponse> config;

    /**
     * @return Config of the Instance.
     * 
     */
    public Output<ConfigResponse> config() {
        return this.config;
    }
    /**
     * Creation timestamp.
     * 
     */
    @Export(name="createTime", type=String.class, parameters={})
    private Output<String> createTime;

    /**
     * @return Creation timestamp.
     * 
     */
    public Output<String> createTime() {
        return this.createTime;
    }
    /**
     * Required. Identifier to assign to the Instance. Must be unique within scope of the parent resource.
     * 
     */
    @Export(name="instanceId", type=String.class, parameters={})
    private Output<String> instanceId;

    /**
     * @return Required. Identifier to assign to the Instance. Must be unique within scope of the parent resource.
     * 
     */
    public Output<String> instanceId() {
        return this.instanceId;
    }
    @Export(name="location", type=String.class, parameters={})
    private Output<String> location;

    public Output<String> location() {
        return this.location;
    }
    /**
     * Format: `projects/*{@literal /}locations/*{@literal /}instance`. Currently only locations/global is supported.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return Format: `projects/*{@literal /}locations/*{@literal /}instance`. Currently only locations/global is supported.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    @Export(name="project", type=String.class, parameters={})
    private Output<String> project;

    public Output<String> project() {
        return this.project;
    }
    /**
     * The current state of the Instance.
     * 
     */
    @Export(name="state", type=String.class, parameters={})
    private Output<String> state;

    /**
     * @return The current state of the Instance.
     * 
     */
    public Output<String> state() {
        return this.state;
    }
    /**
     * Extra information of Instance.State if the state is `FAILED`.
     * 
     */
    @Export(name="stateMessage", type=String.class, parameters={})
    private Output<String> stateMessage;

    /**
     * @return Extra information of Instance.State if the state is `FAILED`.
     * 
     */
    public Output<String> stateMessage() {
        return this.stateMessage;
    }
    /**
     * Last update timestamp.
     * 
     */
    @Export(name="updateTime", type=String.class, parameters={})
    private Output<String> updateTime;

    /**
     * @return Last update timestamp.
     * 
     */
    public Output<String> updateTime() {
        return this.updateTime;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Instance(String name) {
        this(name, InstanceArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Instance(String name, InstanceArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Instance(String name, InstanceArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("google-native:apigeeregistry/v1:Instance", name, args == null ? InstanceArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Instance(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("google-native:apigeeregistry/v1:Instance", name, null, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Instance get(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Instance(name, id, options);
    }
}
