// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.composer_v1.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.composer_v1.inputs.SchedulerResourceResponse;
import com.pulumi.googlenative.composer_v1.inputs.WebServerResourceResponse;
import com.pulumi.googlenative.composer_v1.inputs.WorkerResourceResponse;
import java.util.Objects;


/**
 * The Kubernetes workloads configuration for GKE cluster associated with the Cloud Composer environment. Supported for Cloud Composer environments in versions composer-2.*.*-airflow-*.*.* and newer.
 * 
 */
public final class WorkloadsConfigResponse extends com.pulumi.resources.InvokeArgs {

    public static final WorkloadsConfigResponse Empty = new WorkloadsConfigResponse();

    /**
     * Optional. Resources used by Airflow schedulers.
     * 
     */
    @Import(name="scheduler", required=true)
    private SchedulerResourceResponse scheduler;

    /**
     * @return Optional. Resources used by Airflow schedulers.
     * 
     */
    public SchedulerResourceResponse scheduler() {
        return this.scheduler;
    }

    /**
     * Optional. Resources used by Airflow web server.
     * 
     */
    @Import(name="webServer", required=true)
    private WebServerResourceResponse webServer;

    /**
     * @return Optional. Resources used by Airflow web server.
     * 
     */
    public WebServerResourceResponse webServer() {
        return this.webServer;
    }

    /**
     * Optional. Resources used by Airflow workers.
     * 
     */
    @Import(name="worker", required=true)
    private WorkerResourceResponse worker;

    /**
     * @return Optional. Resources used by Airflow workers.
     * 
     */
    public WorkerResourceResponse worker() {
        return this.worker;
    }

    private WorkloadsConfigResponse() {}

    private WorkloadsConfigResponse(WorkloadsConfigResponse $) {
        this.scheduler = $.scheduler;
        this.webServer = $.webServer;
        this.worker = $.worker;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WorkloadsConfigResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WorkloadsConfigResponse $;

        public Builder() {
            $ = new WorkloadsConfigResponse();
        }

        public Builder(WorkloadsConfigResponse defaults) {
            $ = new WorkloadsConfigResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param scheduler Optional. Resources used by Airflow schedulers.
         * 
         * @return builder
         * 
         */
        public Builder scheduler(SchedulerResourceResponse scheduler) {
            $.scheduler = scheduler;
            return this;
        }

        /**
         * @param webServer Optional. Resources used by Airflow web server.
         * 
         * @return builder
         * 
         */
        public Builder webServer(WebServerResourceResponse webServer) {
            $.webServer = webServer;
            return this;
        }

        /**
         * @param worker Optional. Resources used by Airflow workers.
         * 
         * @return builder
         * 
         */
        public Builder worker(WorkerResourceResponse worker) {
            $.worker = worker;
            return this;
        }

        public WorkloadsConfigResponse build() {
            $.scheduler = Objects.requireNonNull($.scheduler, "expected parameter 'scheduler' to be non-null");
            $.webServer = Objects.requireNonNull($.webServer, "expected parameter 'webServer' to be non-null");
            $.worker = Objects.requireNonNull($.worker, "expected parameter 'worker' to be non-null");
            return $;
        }
    }

}
