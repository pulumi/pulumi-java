// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.cloudsearch_v1.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.cloudsearch_v1.inputs.FilterResponse;
import java.lang.String;
import java.util.Objects;


/**
 * Filter options to be applied on query.
 * 
 */
public final class FilterOptionsResponse extends com.pulumi.resources.InvokeArgs {

    public static final FilterOptionsResponse Empty = new FilterOptionsResponse();

    /**
     * Generic filter to restrict the search, such as `lang:en`, `site:xyz`.
     * 
     */
    @Import(name="filter", required=true)
    private FilterResponse filter;

    /**
     * @return Generic filter to restrict the search, such as `lang:en`, `site:xyz`.
     * 
     */
    public FilterResponse filter() {
        return this.filter;
    }

    /**
     * If object_type is set, only objects of that type are returned. This should correspond to the name of the object that was registered within the definition of schema. The maximum length is 256 characters.
     * 
     */
    @Import(name="objectType", required=true)
    private String objectType;

    /**
     * @return If object_type is set, only objects of that type are returned. This should correspond to the name of the object that was registered within the definition of schema. The maximum length is 256 characters.
     * 
     */
    public String objectType() {
        return this.objectType;
    }

    private FilterOptionsResponse() {}

    private FilterOptionsResponse(FilterOptionsResponse $) {
        this.filter = $.filter;
        this.objectType = $.objectType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FilterOptionsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FilterOptionsResponse $;

        public Builder() {
            $ = new FilterOptionsResponse();
        }

        public Builder(FilterOptionsResponse defaults) {
            $ = new FilterOptionsResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param filter Generic filter to restrict the search, such as `lang:en`, `site:xyz`.
         * 
         * @return builder
         * 
         */
        public Builder filter(FilterResponse filter) {
            $.filter = filter;
            return this;
        }

        /**
         * @param objectType If object_type is set, only objects of that type are returned. This should correspond to the name of the object that was registered within the definition of schema. The maximum length is 256 characters.
         * 
         * @return builder
         * 
         */
        public Builder objectType(String objectType) {
            $.objectType = objectType;
            return this;
        }

        public FilterOptionsResponse build() {
            $.filter = Objects.requireNonNull($.filter, "expected parameter 'filter' to be non-null");
            $.objectType = Objects.requireNonNull($.objectType, "expected parameter 'objectType' to be non-null");
            return $;
        }
    }

}
