// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.healthcare_v1beta1.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * Raw bytes representing consent artifact content.
 * 
 */
public final class ImageResponse extends com.pulumi.resources.InvokeArgs {

    public static final ImageResponse Empty = new ImageResponse();

    /**
     * Input only. Points to a Cloud Storage URI containing the consent artifact content. The URI must be in the following format: `gs://{bucket_id}/{object_id}`. The Cloud Healthcare API service account must have the `roles/storage.objectViewer` Cloud IAM role for this Cloud Storage location. The consent artifact content at this URI is copied to a Cloud Storage location managed by the Cloud Healthcare API. Responses to fetching requests return the consent artifact content in raw_bytes.
     * 
     */
    @Import(name="gcsUri", required=true)
    private String gcsUri;

    /**
     * @return Input only. Points to a Cloud Storage URI containing the consent artifact content. The URI must be in the following format: `gs://{bucket_id}/{object_id}`. The Cloud Healthcare API service account must have the `roles/storage.objectViewer` Cloud IAM role for this Cloud Storage location. The consent artifact content at this URI is copied to a Cloud Storage location managed by the Cloud Healthcare API. Responses to fetching requests return the consent artifact content in raw_bytes.
     * 
     */
    public String gcsUri() {
        return this.gcsUri;
    }

    /**
     * Consent artifact content represented as a stream of bytes. This field is populated when returned in GetConsentArtifact response, but not included in CreateConsentArtifact and ListConsentArtifact response.
     * 
     */
    @Import(name="rawBytes", required=true)
    private String rawBytes;

    /**
     * @return Consent artifact content represented as a stream of bytes. This field is populated when returned in GetConsentArtifact response, but not included in CreateConsentArtifact and ListConsentArtifact response.
     * 
     */
    public String rawBytes() {
        return this.rawBytes;
    }

    private ImageResponse() {}

    private ImageResponse(ImageResponse $) {
        this.gcsUri = $.gcsUri;
        this.rawBytes = $.rawBytes;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ImageResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ImageResponse $;

        public Builder() {
            $ = new ImageResponse();
        }

        public Builder(ImageResponse defaults) {
            $ = new ImageResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param gcsUri Input only. Points to a Cloud Storage URI containing the consent artifact content. The URI must be in the following format: `gs://{bucket_id}/{object_id}`. The Cloud Healthcare API service account must have the `roles/storage.objectViewer` Cloud IAM role for this Cloud Storage location. The consent artifact content at this URI is copied to a Cloud Storage location managed by the Cloud Healthcare API. Responses to fetching requests return the consent artifact content in raw_bytes.
         * 
         * @return builder
         * 
         */
        public Builder gcsUri(String gcsUri) {
            $.gcsUri = gcsUri;
            return this;
        }

        /**
         * @param rawBytes Consent artifact content represented as a stream of bytes. This field is populated when returned in GetConsentArtifact response, but not included in CreateConsentArtifact and ListConsentArtifact response.
         * 
         * @return builder
         * 
         */
        public Builder rawBytes(String rawBytes) {
            $.rawBytes = rawBytes;
            return this;
        }

        public ImageResponse build() {
            $.gcsUri = Objects.requireNonNull($.gcsUri, "expected parameter 'gcsUri' to be non-null");
            $.rawBytes = Objects.requireNonNull($.rawBytes, "expected parameter 'rawBytes' to be non-null");
            return $;
        }
    }

}
