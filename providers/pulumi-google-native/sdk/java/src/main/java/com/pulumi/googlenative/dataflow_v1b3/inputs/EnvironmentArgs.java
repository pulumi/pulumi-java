// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.dataflow_v1b3.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.dataflow_v1b3.enums.EnvironmentFlexResourceSchedulingGoal;
import com.pulumi.googlenative.dataflow_v1b3.inputs.DebugOptionsArgs;
import com.pulumi.googlenative.dataflow_v1b3.inputs.WorkerPoolArgs;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Describes the environment in which a Dataflow Job runs.
 * 
 */
public final class EnvironmentArgs extends com.pulumi.resources.ResourceArgs {

    public static final EnvironmentArgs Empty = new EnvironmentArgs();

    /**
     * The type of cluster manager API to use. If unknown or unspecified, the service will attempt to choose a reasonable default. This should be in the form of the API service name, e.g. &#34;compute.googleapis.com&#34;.
     * 
     */
    @Import(name="clusterManagerApiService")
    private @Nullable Output<String> clusterManagerApiService;

    public Optional<Output<String>> clusterManagerApiService() {
        return Optional.ofNullable(this.clusterManagerApiService);
    }

    /**
     * The dataset for the current project where various workflow related tables are stored. The supported resource type is: Google BigQuery: bigquery.googleapis.com/{dataset}
     * 
     */
    @Import(name="dataset")
    private @Nullable Output<String> dataset;

    public Optional<Output<String>> dataset() {
        return Optional.ofNullable(this.dataset);
    }

    /**
     * Any debugging options to be supplied to the job.
     * 
     */
    @Import(name="debugOptions")
    private @Nullable Output<DebugOptionsArgs> debugOptions;

    public Optional<Output<DebugOptionsArgs>> debugOptions() {
        return Optional.ofNullable(this.debugOptions);
    }

    /**
     * The list of experiments to enable. This field should be used for SDK related experiments and not for service related experiments. The proper field for service related experiments is service_options.
     * 
     */
    @Import(name="experiments")
    private @Nullable Output<List<String>> experiments;

    public Optional<Output<List<String>>> experiments() {
        return Optional.ofNullable(this.experiments);
    }

    /**
     * Which Flexible Resource Scheduling mode to run in.
     * 
     */
    @Import(name="flexResourceSchedulingGoal")
    private @Nullable Output<EnvironmentFlexResourceSchedulingGoal> flexResourceSchedulingGoal;

    public Optional<Output<EnvironmentFlexResourceSchedulingGoal>> flexResourceSchedulingGoal() {
        return Optional.ofNullable(this.flexResourceSchedulingGoal);
    }

    /**
     * Experimental settings.
     * 
     */
    @Import(name="internalExperiments")
    private @Nullable Output<Map<String,String>> internalExperiments;

    public Optional<Output<Map<String,String>>> internalExperiments() {
        return Optional.ofNullable(this.internalExperiments);
    }

    /**
     * The Cloud Dataflow SDK pipeline options specified by the user. These options are passed through the service and are used to recreate the SDK pipeline options on the worker in a language agnostic and platform independent way.
     * 
     */
    @Import(name="sdkPipelineOptions")
    private @Nullable Output<Map<String,String>> sdkPipelineOptions;

    public Optional<Output<Map<String,String>>> sdkPipelineOptions() {
        return Optional.ofNullable(this.sdkPipelineOptions);
    }

    /**
     * Identity to run virtual machines as. Defaults to the default account.
     * 
     */
    @Import(name="serviceAccountEmail")
    private @Nullable Output<String> serviceAccountEmail;

    public Optional<Output<String>> serviceAccountEmail() {
        return Optional.ofNullable(this.serviceAccountEmail);
    }

    /**
     * If set, contains the Cloud KMS key identifier used to encrypt data at rest, AKA a Customer Managed Encryption Key (CMEK). Format: projects/PROJECT_ID/locations/LOCATION/keyRings/KEY_RING/cryptoKeys/KEY
     * 
     */
    @Import(name="serviceKmsKeyName")
    private @Nullable Output<String> serviceKmsKeyName;

    public Optional<Output<String>> serviceKmsKeyName() {
        return Optional.ofNullable(this.serviceKmsKeyName);
    }

    /**
     * The list of service options to enable. This field should be used for service related experiments only. These experiments, when graduating to GA, should be replaced by dedicated fields or become default (i.e. always on).
     * 
     */
    @Import(name="serviceOptions")
    private @Nullable Output<List<String>> serviceOptions;

    public Optional<Output<List<String>>> serviceOptions() {
        return Optional.ofNullable(this.serviceOptions);
    }

    /**
     * The prefix of the resources the system should use for temporary storage. The system will append the suffix &#34;/temp-{JOBNAME} to this resource prefix, where {JOBNAME} is the value of the job_name field. The resulting bucket and object prefix is used as the prefix of the resources used to store temporary data needed during the job execution. NOTE: This will override the value in taskrunner_settings. The supported resource type is: Google Cloud Storage: storage.googleapis.com/{bucket}/{object} bucket.storage.googleapis.com/{object}
     * 
     */
    @Import(name="tempStoragePrefix")
    private @Nullable Output<String> tempStoragePrefix;

    public Optional<Output<String>> tempStoragePrefix() {
        return Optional.ofNullable(this.tempStoragePrefix);
    }

    /**
     * A description of the process that generated the request.
     * 
     */
    @Import(name="userAgent")
    private @Nullable Output<Map<String,String>> userAgent;

    public Optional<Output<Map<String,String>>> userAgent() {
        return Optional.ofNullable(this.userAgent);
    }

    /**
     * A structure describing which components and their versions of the service are required in order to run the job.
     * 
     */
    @Import(name="version")
    private @Nullable Output<Map<String,String>> version;

    public Optional<Output<Map<String,String>>> version() {
        return Optional.ofNullable(this.version);
    }

    /**
     * The worker pools. At least one &#34;harness&#34; worker pool must be specified in order for the job to have workers.
     * 
     */
    @Import(name="workerPools")
    private @Nullable Output<List<WorkerPoolArgs>> workerPools;

    public Optional<Output<List<WorkerPoolArgs>>> workerPools() {
        return Optional.ofNullable(this.workerPools);
    }

    /**
     * The Compute Engine region (https://cloud.google.com/compute/docs/regions-zones/regions-zones) in which worker processing should occur, e.g. &#34;us-west1&#34;. Mutually exclusive with worker_zone. If neither worker_region nor worker_zone is specified, default to the control plane&#39;s region.
     * 
     */
    @Import(name="workerRegion")
    private @Nullable Output<String> workerRegion;

    public Optional<Output<String>> workerRegion() {
        return Optional.ofNullable(this.workerRegion);
    }

    /**
     * The Compute Engine zone (https://cloud.google.com/compute/docs/regions-zones/regions-zones) in which worker processing should occur, e.g. &#34;us-west1-a&#34;. Mutually exclusive with worker_region. If neither worker_region nor worker_zone is specified, a zone in the control plane&#39;s region is chosen based on available capacity.
     * 
     */
    @Import(name="workerZone")
    private @Nullable Output<String> workerZone;

    public Optional<Output<String>> workerZone() {
        return Optional.ofNullable(this.workerZone);
    }

    private EnvironmentArgs() {}

    private EnvironmentArgs(EnvironmentArgs $) {
        this.clusterManagerApiService = $.clusterManagerApiService;
        this.dataset = $.dataset;
        this.debugOptions = $.debugOptions;
        this.experiments = $.experiments;
        this.flexResourceSchedulingGoal = $.flexResourceSchedulingGoal;
        this.internalExperiments = $.internalExperiments;
        this.sdkPipelineOptions = $.sdkPipelineOptions;
        this.serviceAccountEmail = $.serviceAccountEmail;
        this.serviceKmsKeyName = $.serviceKmsKeyName;
        this.serviceOptions = $.serviceOptions;
        this.tempStoragePrefix = $.tempStoragePrefix;
        this.userAgent = $.userAgent;
        this.version = $.version;
        this.workerPools = $.workerPools;
        this.workerRegion = $.workerRegion;
        this.workerZone = $.workerZone;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EnvironmentArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EnvironmentArgs $;

        public Builder() {
            $ = new EnvironmentArgs();
        }

        public Builder(EnvironmentArgs defaults) {
            $ = new EnvironmentArgs(Objects.requireNonNull(defaults));
        }

        public Builder clusterManagerApiService(@Nullable Output<String> clusterManagerApiService) {
            $.clusterManagerApiService = clusterManagerApiService;
            return this;
        }

        public Builder clusterManagerApiService(String clusterManagerApiService) {
            return clusterManagerApiService(Output.of(clusterManagerApiService));
        }

        public Builder dataset(@Nullable Output<String> dataset) {
            $.dataset = dataset;
            return this;
        }

        public Builder dataset(String dataset) {
            return dataset(Output.of(dataset));
        }

        public Builder debugOptions(@Nullable Output<DebugOptionsArgs> debugOptions) {
            $.debugOptions = debugOptions;
            return this;
        }

        public Builder debugOptions(DebugOptionsArgs debugOptions) {
            return debugOptions(Output.of(debugOptions));
        }

        public Builder experiments(@Nullable Output<List<String>> experiments) {
            $.experiments = experiments;
            return this;
        }

        public Builder experiments(List<String> experiments) {
            return experiments(Output.of(experiments));
        }

        public Builder experiments(String... experiments) {
            return experiments(List.of(experiments));
        }

        public Builder flexResourceSchedulingGoal(@Nullable Output<EnvironmentFlexResourceSchedulingGoal> flexResourceSchedulingGoal) {
            $.flexResourceSchedulingGoal = flexResourceSchedulingGoal;
            return this;
        }

        public Builder flexResourceSchedulingGoal(EnvironmentFlexResourceSchedulingGoal flexResourceSchedulingGoal) {
            return flexResourceSchedulingGoal(Output.of(flexResourceSchedulingGoal));
        }

        public Builder internalExperiments(@Nullable Output<Map<String,String>> internalExperiments) {
            $.internalExperiments = internalExperiments;
            return this;
        }

        public Builder internalExperiments(Map<String,String> internalExperiments) {
            return internalExperiments(Output.of(internalExperiments));
        }

        public Builder sdkPipelineOptions(@Nullable Output<Map<String,String>> sdkPipelineOptions) {
            $.sdkPipelineOptions = sdkPipelineOptions;
            return this;
        }

        public Builder sdkPipelineOptions(Map<String,String> sdkPipelineOptions) {
            return sdkPipelineOptions(Output.of(sdkPipelineOptions));
        }

        public Builder serviceAccountEmail(@Nullable Output<String> serviceAccountEmail) {
            $.serviceAccountEmail = serviceAccountEmail;
            return this;
        }

        public Builder serviceAccountEmail(String serviceAccountEmail) {
            return serviceAccountEmail(Output.of(serviceAccountEmail));
        }

        public Builder serviceKmsKeyName(@Nullable Output<String> serviceKmsKeyName) {
            $.serviceKmsKeyName = serviceKmsKeyName;
            return this;
        }

        public Builder serviceKmsKeyName(String serviceKmsKeyName) {
            return serviceKmsKeyName(Output.of(serviceKmsKeyName));
        }

        public Builder serviceOptions(@Nullable Output<List<String>> serviceOptions) {
            $.serviceOptions = serviceOptions;
            return this;
        }

        public Builder serviceOptions(List<String> serviceOptions) {
            return serviceOptions(Output.of(serviceOptions));
        }

        public Builder serviceOptions(String... serviceOptions) {
            return serviceOptions(List.of(serviceOptions));
        }

        public Builder tempStoragePrefix(@Nullable Output<String> tempStoragePrefix) {
            $.tempStoragePrefix = tempStoragePrefix;
            return this;
        }

        public Builder tempStoragePrefix(String tempStoragePrefix) {
            return tempStoragePrefix(Output.of(tempStoragePrefix));
        }

        public Builder userAgent(@Nullable Output<Map<String,String>> userAgent) {
            $.userAgent = userAgent;
            return this;
        }

        public Builder userAgent(Map<String,String> userAgent) {
            return userAgent(Output.of(userAgent));
        }

        public Builder version(@Nullable Output<Map<String,String>> version) {
            $.version = version;
            return this;
        }

        public Builder version(Map<String,String> version) {
            return version(Output.of(version));
        }

        public Builder workerPools(@Nullable Output<List<WorkerPoolArgs>> workerPools) {
            $.workerPools = workerPools;
            return this;
        }

        public Builder workerPools(List<WorkerPoolArgs> workerPools) {
            return workerPools(Output.of(workerPools));
        }

        public Builder workerPools(WorkerPoolArgs... workerPools) {
            return workerPools(List.of(workerPools));
        }

        public Builder workerRegion(@Nullable Output<String> workerRegion) {
            $.workerRegion = workerRegion;
            return this;
        }

        public Builder workerRegion(String workerRegion) {
            return workerRegion(Output.of(workerRegion));
        }

        public Builder workerZone(@Nullable Output<String> workerZone) {
            $.workerZone = workerZone;
            return this;
        }

        public Builder workerZone(String workerZone) {
            return workerZone(Output.of(workerZone));
        }

        public EnvironmentArgs build() {
            return $;
        }
    }

}
