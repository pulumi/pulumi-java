// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.bigquery_v2.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;


public final class MaterializedViewDefinitionResponse extends com.pulumi.resources.InvokeArgs {

    public static final MaterializedViewDefinitionResponse Empty = new MaterializedViewDefinitionResponse();

    /**
     * [Optional] [TrustedTester] Enable automatic refresh of the materialized view when the base table is updated. The default value is &#34;true&#34;.
     * 
     */
    @Import(name="enableRefresh", required=true)
    private Boolean enableRefresh;

    public Boolean enableRefresh() {
        return this.enableRefresh;
    }

    /**
     * [TrustedTester] The time when this materialized view was last modified, in milliseconds since the epoch.
     * 
     */
    @Import(name="lastRefreshTime", required=true)
    private String lastRefreshTime;

    public String lastRefreshTime() {
        return this.lastRefreshTime;
    }

    /**
     * [Required] A query whose result is persisted.
     * 
     */
    @Import(name="query", required=true)
    private String query;

    public String query() {
        return this.query;
    }

    /**
     * [Optional] [TrustedTester] The maximum frequency at which this materialized view will be refreshed. The default value is &#34;1800000&#34; (30 minutes).
     * 
     */
    @Import(name="refreshIntervalMs", required=true)
    private String refreshIntervalMs;

    public String refreshIntervalMs() {
        return this.refreshIntervalMs;
    }

    private MaterializedViewDefinitionResponse() {}

    private MaterializedViewDefinitionResponse(MaterializedViewDefinitionResponse $) {
        this.enableRefresh = $.enableRefresh;
        this.lastRefreshTime = $.lastRefreshTime;
        this.query = $.query;
        this.refreshIntervalMs = $.refreshIntervalMs;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MaterializedViewDefinitionResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MaterializedViewDefinitionResponse $;

        public Builder() {
            $ = new MaterializedViewDefinitionResponse();
        }

        public Builder(MaterializedViewDefinitionResponse defaults) {
            $ = new MaterializedViewDefinitionResponse(Objects.requireNonNull(defaults));
        }

        public Builder enableRefresh(Boolean enableRefresh) {
            $.enableRefresh = enableRefresh;
            return this;
        }

        public Builder lastRefreshTime(String lastRefreshTime) {
            $.lastRefreshTime = lastRefreshTime;
            return this;
        }

        public Builder query(String query) {
            $.query = query;
            return this;
        }

        public Builder refreshIntervalMs(String refreshIntervalMs) {
            $.refreshIntervalMs = refreshIntervalMs;
            return this;
        }

        public MaterializedViewDefinitionResponse build() {
            $.enableRefresh = Objects.requireNonNull($.enableRefresh, "expected parameter 'enableRefresh' to be non-null");
            $.lastRefreshTime = Objects.requireNonNull($.lastRefreshTime, "expected parameter 'lastRefreshTime' to be non-null");
            $.query = Objects.requireNonNull($.query, "expected parameter 'query' to be non-null");
            $.refreshIntervalMs = Objects.requireNonNull($.refreshIntervalMs, "expected parameter 'refreshIntervalMs' to be non-null");
            return $;
        }
    }

}
