// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.compute_alpha.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;


public final class NodeGroupAutoscalingPolicyResponse extends com.pulumi.resources.InvokeArgs {

    public static final NodeGroupAutoscalingPolicyResponse Empty = new NodeGroupAutoscalingPolicyResponse();

    /**
     * The maximum number of nodes that the group should have. Must be set if autoscaling is enabled. Maximum value allowed is 100.
     * 
     */
    @Import(name="maxNodes", required=true)
    private Integer maxNodes;

    /**
     * @return The maximum number of nodes that the group should have. Must be set if autoscaling is enabled. Maximum value allowed is 100.
     * 
     */
    public Integer maxNodes() {
        return this.maxNodes;
    }

    /**
     * The minimum number of nodes that the group should have.
     * 
     */
    @Import(name="minNodes", required=true)
    private Integer minNodes;

    /**
     * @return The minimum number of nodes that the group should have.
     * 
     */
    public Integer minNodes() {
        return this.minNodes;
    }

    /**
     * The autoscaling mode. Set to one of: ON, OFF, or ONLY_SCALE_OUT. For more information, see Autoscaler modes.
     * 
     */
    @Import(name="mode", required=true)
    private String mode;

    /**
     * @return The autoscaling mode. Set to one of: ON, OFF, or ONLY_SCALE_OUT. For more information, see Autoscaler modes.
     * 
     */
    public String mode() {
        return this.mode;
    }

    private NodeGroupAutoscalingPolicyResponse() {}

    private NodeGroupAutoscalingPolicyResponse(NodeGroupAutoscalingPolicyResponse $) {
        this.maxNodes = $.maxNodes;
        this.minNodes = $.minNodes;
        this.mode = $.mode;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NodeGroupAutoscalingPolicyResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NodeGroupAutoscalingPolicyResponse $;

        public Builder() {
            $ = new NodeGroupAutoscalingPolicyResponse();
        }

        public Builder(NodeGroupAutoscalingPolicyResponse defaults) {
            $ = new NodeGroupAutoscalingPolicyResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param maxNodes The maximum number of nodes that the group should have. Must be set if autoscaling is enabled. Maximum value allowed is 100.
         * 
         * @return builder
         * 
         */
        public Builder maxNodes(Integer maxNodes) {
            $.maxNodes = maxNodes;
            return this;
        }

        /**
         * @param minNodes The minimum number of nodes that the group should have.
         * 
         * @return builder
         * 
         */
        public Builder minNodes(Integer minNodes) {
            $.minNodes = minNodes;
            return this;
        }

        /**
         * @param mode The autoscaling mode. Set to one of: ON, OFF, or ONLY_SCALE_OUT. For more information, see Autoscaler modes.
         * 
         * @return builder
         * 
         */
        public Builder mode(String mode) {
            $.mode = mode;
            return this;
        }

        public NodeGroupAutoscalingPolicyResponse build() {
            $.maxNodes = Objects.requireNonNull($.maxNodes, "expected parameter 'maxNodes' to be non-null");
            $.minNodes = Objects.requireNonNull($.minNodes, "expected parameter 'minNodes' to be non-null");
            $.mode = Objects.requireNonNull($.mode, "expected parameter 'mode' to be non-null");
            return $;
        }
    }

}
