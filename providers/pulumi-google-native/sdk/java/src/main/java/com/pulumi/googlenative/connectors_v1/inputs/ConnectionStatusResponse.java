// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.connectors_v1.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * ConnectionStatus indicates the state of the connection.
 * 
 */
public final class ConnectionStatusResponse extends com.pulumi.resources.InvokeArgs {

    public static final ConnectionStatusResponse Empty = new ConnectionStatusResponse();

    /**
     * Description.
     * 
     */
    @Import(name="description", required=true)
    private String description;

    public String description() {
        return this.description;
    }

    /**
     * State.
     * 
     */
    @Import(name="state", required=true)
    private String state;

    public String state() {
        return this.state;
    }

    /**
     * Status provides detailed information for the state.
     * 
     */
    @Import(name="status", required=true)
    private String status;

    public String status() {
        return this.status;
    }

    private ConnectionStatusResponse() {}

    private ConnectionStatusResponse(ConnectionStatusResponse $) {
        this.description = $.description;
        this.state = $.state;
        this.status = $.status;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ConnectionStatusResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ConnectionStatusResponse $;

        public Builder() {
            $ = new ConnectionStatusResponse();
        }

        public Builder(ConnectionStatusResponse defaults) {
            $ = new ConnectionStatusResponse(Objects.requireNonNull(defaults));
        }

        public Builder description(String description) {
            $.description = description;
            return this;
        }

        public Builder state(String state) {
            $.state = state;
            return this;
        }

        public Builder status(String status) {
            $.status = status;
            return this;
        }

        public ConnectionStatusResponse build() {
            $.description = Objects.requireNonNull($.description, "expected parameter 'description' to be non-null");
            $.state = Objects.requireNonNull($.state, "expected parameter 'state' to be non-null");
            $.status = Objects.requireNonNull($.status, "expected parameter 'status' to be non-null");
            return $;
        }
    }

}
