// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.monitoring.v3;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.googlenative.Utilities;
import com.pulumi.googlenative.monitoring.v3.ServiceArgs;
import com.pulumi.googlenative.monitoring.v3.outputs.AppEngineResponse;
import com.pulumi.googlenative.monitoring.v3.outputs.CloudEndpointsResponse;
import com.pulumi.googlenative.monitoring.v3.outputs.CloudRunResponse;
import com.pulumi.googlenative.monitoring.v3.outputs.ClusterIstioResponse;
import com.pulumi.googlenative.monitoring.v3.outputs.CustomResponse;
import com.pulumi.googlenative.monitoring.v3.outputs.GkeNamespaceResponse;
import com.pulumi.googlenative.monitoring.v3.outputs.GkeServiceResponse;
import com.pulumi.googlenative.monitoring.v3.outputs.GkeWorkloadResponse;
import com.pulumi.googlenative.monitoring.v3.outputs.IstioCanonicalServiceResponse;
import com.pulumi.googlenative.monitoring.v3.outputs.MeshIstioResponse;
import com.pulumi.googlenative.monitoring.v3.outputs.TelemetryResponse;
import java.lang.String;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Create a Service.
 * Auto-naming is currently not supported for this resource.
 * 
 */
@ResourceType(type="google-native:monitoring/v3:Service")
public class Service extends com.pulumi.resources.CustomResource {
    /**
     * Type used for App Engine services.
     * 
     */
    @Export(name="appEngine", type=AppEngineResponse.class, parameters={})
    private Output<AppEngineResponse> appEngine;

    /**
     * @return Type used for App Engine services.
     * 
     */
    public Output<AppEngineResponse> appEngine() {
        return this.appEngine;
    }
    /**
     * Type used for Cloud Endpoints services.
     * 
     */
    @Export(name="cloudEndpoints", type=CloudEndpointsResponse.class, parameters={})
    private Output<CloudEndpointsResponse> cloudEndpoints;

    /**
     * @return Type used for Cloud Endpoints services.
     * 
     */
    public Output<CloudEndpointsResponse> cloudEndpoints() {
        return this.cloudEndpoints;
    }
    /**
     * Type used for Cloud Run services.
     * 
     */
    @Export(name="cloudRun", type=CloudRunResponse.class, parameters={})
    private Output<CloudRunResponse> cloudRun;

    /**
     * @return Type used for Cloud Run services.
     * 
     */
    public Output<CloudRunResponse> cloudRun() {
        return this.cloudRun;
    }
    /**
     * Type used for Istio services that live in a Kubernetes cluster.
     * 
     */
    @Export(name="clusterIstio", type=ClusterIstioResponse.class, parameters={})
    private Output<ClusterIstioResponse> clusterIstio;

    /**
     * @return Type used for Istio services that live in a Kubernetes cluster.
     * 
     */
    public Output<ClusterIstioResponse> clusterIstio() {
        return this.clusterIstio;
    }
    /**
     * Custom service type.
     * 
     */
    @Export(name="custom", type=CustomResponse.class, parameters={})
    private Output<CustomResponse> custom;

    /**
     * @return Custom service type.
     * 
     */
    public Output<CustomResponse> custom() {
        return this.custom;
    }
    /**
     * Name used for UI elements listing this Service.
     * 
     */
    @Export(name="displayName", type=String.class, parameters={})
    private Output<String> displayName;

    /**
     * @return Name used for UI elements listing this Service.
     * 
     */
    public Output<String> displayName() {
        return this.displayName;
    }
    /**
     * Type used for GKE Namespaces.
     * 
     */
    @Export(name="gkeNamespace", type=GkeNamespaceResponse.class, parameters={})
    private Output<GkeNamespaceResponse> gkeNamespace;

    /**
     * @return Type used for GKE Namespaces.
     * 
     */
    public Output<GkeNamespaceResponse> gkeNamespace() {
        return this.gkeNamespace;
    }
    /**
     * Type used for GKE Services (the Kubernetes concept of a service).
     * 
     */
    @Export(name="gkeService", type=GkeServiceResponse.class, parameters={})
    private Output<GkeServiceResponse> gkeService;

    /**
     * @return Type used for GKE Services (the Kubernetes concept of a service).
     * 
     */
    public Output<GkeServiceResponse> gkeService() {
        return this.gkeService;
    }
    /**
     * Type used for GKE Workloads.
     * 
     */
    @Export(name="gkeWorkload", type=GkeWorkloadResponse.class, parameters={})
    private Output<GkeWorkloadResponse> gkeWorkload;

    /**
     * @return Type used for GKE Workloads.
     * 
     */
    public Output<GkeWorkloadResponse> gkeWorkload() {
        return this.gkeWorkload;
    }
    /**
     * Type used for canonical services scoped to an Istio mesh. Metrics for Istio are documented here (https://istio.io/latest/docs/reference/config/metrics/)
     * 
     */
    @Export(name="istioCanonicalService", type=IstioCanonicalServiceResponse.class, parameters={})
    private Output<IstioCanonicalServiceResponse> istioCanonicalService;

    /**
     * @return Type used for canonical services scoped to an Istio mesh. Metrics for Istio are documented here (https://istio.io/latest/docs/reference/config/metrics/)
     * 
     */
    public Output<IstioCanonicalServiceResponse> istioCanonicalService() {
        return this.istioCanonicalService;
    }
    /**
     * Type used for Istio services scoped to an Istio mesh.
     * 
     */
    @Export(name="meshIstio", type=MeshIstioResponse.class, parameters={})
    private Output<MeshIstioResponse> meshIstio;

    /**
     * @return Type used for Istio services scoped to an Istio mesh.
     * 
     */
    public Output<MeshIstioResponse> meshIstio() {
        return this.meshIstio;
    }
    /**
     * Resource name for this Service. The format is: projects/[PROJECT_ID_OR_NUMBER]/services/[SERVICE_ID]
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return Resource name for this Service. The format is: projects/[PROJECT_ID_OR_NUMBER]/services/[SERVICE_ID]
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Optional. The Service id to use for this Service. If omitted, an id will be generated instead. Must match the pattern [a-z0-9\-]+
     * 
     */
    @Export(name="serviceId", type=String.class, parameters={})
    private Output</* @Nullable */ String> serviceId;

    /**
     * @return Optional. The Service id to use for this Service. If omitted, an id will be generated instead. Must match the pattern [a-z0-9\-]+
     * 
     */
    public Output<Optional<String>> serviceId() {
        return Codegen.optional(this.serviceId);
    }
    /**
     * Configuration for how to query telemetry on a Service.
     * 
     */
    @Export(name="telemetry", type=TelemetryResponse.class, parameters={})
    private Output<TelemetryResponse> telemetry;

    /**
     * @return Configuration for how to query telemetry on a Service.
     * 
     */
    public Output<TelemetryResponse> telemetry() {
        return this.telemetry;
    }
    /**
     * Labels which have been used to annotate the service. Label keys must start with a letter. Label keys and values may contain lowercase letters, numbers, underscores, and dashes. Label keys and values have a maximum length of 63 characters, and must be less than 128 bytes in size. Up to 64 label entries may be stored. For labels which do not have a semantic value, the empty string may be supplied for the label value.
     * 
     */
    @Export(name="userLabels", type=Map.class, parameters={String.class, String.class})
    private Output<Map<String,String>> userLabels;

    /**
     * @return Labels which have been used to annotate the service. Label keys must start with a letter. Label keys and values may contain lowercase letters, numbers, underscores, and dashes. Label keys and values have a maximum length of 63 characters, and must be less than 128 bytes in size. Up to 64 label entries may be stored. For labels which do not have a semantic value, the empty string may be supplied for the label value.
     * 
     */
    public Output<Map<String,String>> userLabels() {
        return this.userLabels;
    }
    @Export(name="v3Id", type=String.class, parameters={})
    private Output<String> v3Id;

    public Output<String> v3Id() {
        return this.v3Id;
    }
    @Export(name="v3Id1", type=String.class, parameters={})
    private Output<String> v3Id1;

    public Output<String> v3Id1() {
        return this.v3Id1;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Service(String name) {
        this(name, ServiceArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Service(String name, ServiceArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Service(String name, ServiceArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("google-native:monitoring/v3:Service", name, args == null ? ServiceArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Service(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("google-native:monitoring/v3:Service", name, null, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Service get(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Service(name, id, options);
    }
}
