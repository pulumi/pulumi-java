// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.ml.v1.enums;

import com.pulumi.core.annotations.EnumType;
import java.lang.String;
import java.util.Objects;
import java.util.StringJoiner;

    /**
     * Required. Specifies the machine types, the number of replicas for workers and parameter servers.
     * 
     */
    @EnumType
    public enum GoogleCloudMlV1__TrainingInputScaleTier {
        /**
         * A single worker instance. This tier is suitable for learning how to use Cloud ML, and for experimenting with new models using small datasets.
         * 
         */
        Basic("BASIC"),
        /**
         * Many workers and a few parameter servers.
         * 
         */
        Standard1("STANDARD_1"),
        /**
         * A large number of workers with many parameter servers.
         * 
         */
        Premium1("PREMIUM_1"),
        /**
         * A single worker instance [with a GPU](/ai-platform/training/docs/using-gpus).
         * 
         */
        BasicGpu("BASIC_GPU"),
        /**
         * A single worker instance with a [Cloud TPU](/ml-engine/docs/tensorflow/using-tpus).
         * 
         */
        BasicTpu("BASIC_TPU"),
        /**
         * The CUSTOM tier is not a set tier, but rather enables you to use your own cluster specification. When you use this tier, set values to configure your processing cluster according to these guidelines: * You _must_ set `TrainingInput.masterType` to specify the type of machine to use for your master node. This is the only required setting. * You _may_ set `TrainingInput.workerCount` to specify the number of workers to use. If you specify one or more workers, you _must_ also set `TrainingInput.workerType` to specify the type of machine to use for your worker nodes. * You _may_ set `TrainingInput.parameterServerCount` to specify the number of parameter servers to use. If you specify one or more parameter servers, you _must_ also set `TrainingInput.parameterServerType` to specify the type of machine to use for your parameter servers. Note that all of your workers must use the same machine type, which can be different from your parameter server type and master type. Your parameter servers must likewise use the same machine type, which can be different from your worker type and master type.
         * 
         */
        Custom("CUSTOM");

        private final String value;

        GoogleCloudMlV1__TrainingInputScaleTier(String value) {
            this.value = Objects.requireNonNull(value);
        }

        @EnumType.Converter
        public String getValue() {
            return this.value;
        }

        @Override
        public String toString() {
            return new StringJoiner(", ", "GoogleCloudMlV1__TrainingInputScaleTier[", "]")
                .add("value='" + this.value + "'")
                .toString();
        }
    }
