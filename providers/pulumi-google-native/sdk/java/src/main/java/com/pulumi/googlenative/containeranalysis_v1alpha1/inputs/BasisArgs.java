// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.containeranalysis_v1alpha1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import com.pulumi.googlenative.containeranalysis_v1alpha1.inputs.FingerprintArgs;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Basis describes the base image portion (Note) of the DockerImage relationship. Linked occurrences are derived from this or an equivalent image via: FROM Or an equivalent reference, e.g. a tag of the resource_url.
 * 
 */
public final class BasisArgs extends com.pulumi.resources.ResourceArgs {

    public static final BasisArgs Empty = new BasisArgs();

    /**
     * The fingerprint of the base image.
     * 
     */
    @Import(name="fingerprint")
      private final @Nullable Output<FingerprintArgs> fingerprint;

    public Output<FingerprintArgs> fingerprint() {
        return this.fingerprint == null ? Codegen.empty() : this.fingerprint;
    }

    /**
     * The resource_url for the resource representing the basis of associated occurrence images.
     * 
     */
    @Import(name="resourceUrl")
      private final @Nullable Output<String> resourceUrl;

    public Output<String> resourceUrl() {
        return this.resourceUrl == null ? Codegen.empty() : this.resourceUrl;
    }

    public BasisArgs(
        @Nullable Output<FingerprintArgs> fingerprint,
        @Nullable Output<String> resourceUrl) {
        this.fingerprint = fingerprint;
        this.resourceUrl = resourceUrl;
    }

    private BasisArgs() {
        this.fingerprint = Codegen.empty();
        this.resourceUrl = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BasisArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<FingerprintArgs> fingerprint;
        private @Nullable Output<String> resourceUrl;

        public Builder() {
    	      // Empty
        }

        public Builder(BasisArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.fingerprint = defaults.fingerprint;
    	      this.resourceUrl = defaults.resourceUrl;
        }

        public Builder fingerprint(@Nullable Output<FingerprintArgs> fingerprint) {
            this.fingerprint = fingerprint;
            return this;
        }
        public Builder fingerprint(@Nullable FingerprintArgs fingerprint) {
            this.fingerprint = Codegen.ofNullable(fingerprint);
            return this;
        }
        public Builder resourceUrl(@Nullable Output<String> resourceUrl) {
            this.resourceUrl = resourceUrl;
            return this;
        }
        public Builder resourceUrl(@Nullable String resourceUrl) {
            this.resourceUrl = Codegen.ofNullable(resourceUrl);
            return this;
        }        public BasisArgs build() {
            return new BasisArgs(fingerprint, resourceUrl);
        }
    }
}
