// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.transcoder_v1.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;


/**
 * Edit atom.
 * 
 */
public final class EditAtomResponse extends com.pulumi.resources.InvokeArgs {

    public static final EditAtomResponse Empty = new EditAtomResponse();

    /**
     * End time in seconds for the atom, relative to the input file timeline. When `end_time_offset` is not specified, the `inputs` are used until the end of the atom.
     * 
     */
    @Import(name="endTimeOffset", required=true)
    private String endTimeOffset;

    public String endTimeOffset() {
        return this.endTimeOffset;
    }

    /**
     * List of `Input.key`s identifying files that should be used in this atom. The listed `inputs` must have the same timeline.
     * 
     */
    @Import(name="inputs", required=true)
    private List<String> inputs;

    public List<String> inputs() {
        return this.inputs;
    }

    /**
     * A unique key for this atom. Must be specified when using advanced mapping.
     * 
     */
    @Import(name="key", required=true)
    private String key;

    public String key() {
        return this.key;
    }

    /**
     * Start time in seconds for the atom, relative to the input file timeline. The default is `0s`.
     * 
     */
    @Import(name="startTimeOffset", required=true)
    private String startTimeOffset;

    public String startTimeOffset() {
        return this.startTimeOffset;
    }

    private EditAtomResponse() {}

    private EditAtomResponse(EditAtomResponse $) {
        this.endTimeOffset = $.endTimeOffset;
        this.inputs = $.inputs;
        this.key = $.key;
        this.startTimeOffset = $.startTimeOffset;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EditAtomResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EditAtomResponse $;

        public Builder() {
            $ = new EditAtomResponse();
        }

        public Builder(EditAtomResponse defaults) {
            $ = new EditAtomResponse(Objects.requireNonNull(defaults));
        }

        public Builder endTimeOffset(String endTimeOffset) {
            $.endTimeOffset = endTimeOffset;
            return this;
        }

        public Builder inputs(List<String> inputs) {
            $.inputs = inputs;
            return this;
        }

        public Builder inputs(String... inputs) {
            return inputs(List.of(inputs));
        }

        public Builder key(String key) {
            $.key = key;
            return this;
        }

        public Builder startTimeOffset(String startTimeOffset) {
            $.startTimeOffset = startTimeOffset;
            return this;
        }

        public EditAtomResponse build() {
            $.endTimeOffset = Objects.requireNonNull($.endTimeOffset, "expected parameter 'endTimeOffset' to be non-null");
            $.inputs = Objects.requireNonNull($.inputs, "expected parameter 'inputs' to be non-null");
            $.key = Objects.requireNonNull($.key, "expected parameter 'key' to be non-null");
            $.startTimeOffset = Objects.requireNonNull($.startTimeOffset, "expected parameter 'startTimeOffset' to be non-null");
            return $;
        }
    }

}
