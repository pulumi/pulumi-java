// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.apigee.v1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetAppArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetAppArgs Empty = new GetAppArgs();

    @Import(name="appId", required=true)
    private Output<String> appId;

    public Output<String> appId() {
        return this.appId;
    }

    @Import(name="developerId", required=true)
    private Output<String> developerId;

    public Output<String> developerId() {
        return this.developerId;
    }

    @Import(name="entity")
    private @Nullable Output<String> entity;

    public Optional<Output<String>> entity() {
        return Optional.ofNullable(this.entity);
    }

    @Import(name="organizationId", required=true)
    private Output<String> organizationId;

    public Output<String> organizationId() {
        return this.organizationId;
    }

    @Import(name="query")
    private @Nullable Output<String> query;

    public Optional<Output<String>> query() {
        return Optional.ofNullable(this.query);
    }

    private GetAppArgs() {}

    private GetAppArgs(GetAppArgs $) {
        this.appId = $.appId;
        this.developerId = $.developerId;
        this.entity = $.entity;
        this.organizationId = $.organizationId;
        this.query = $.query;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetAppArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetAppArgs $;

        public Builder() {
            $ = new GetAppArgs();
        }

        public Builder(GetAppArgs defaults) {
            $ = new GetAppArgs(Objects.requireNonNull(defaults));
        }

        public Builder appId(Output<String> appId) {
            $.appId = appId;
            return this;
        }

        public Builder appId(String appId) {
            return appId(Output.of(appId));
        }

        public Builder developerId(Output<String> developerId) {
            $.developerId = developerId;
            return this;
        }

        public Builder developerId(String developerId) {
            return developerId(Output.of(developerId));
        }

        public Builder entity(@Nullable Output<String> entity) {
            $.entity = entity;
            return this;
        }

        public Builder entity(String entity) {
            return entity(Output.of(entity));
        }

        public Builder organizationId(Output<String> organizationId) {
            $.organizationId = organizationId;
            return this;
        }

        public Builder organizationId(String organizationId) {
            return organizationId(Output.of(organizationId));
        }

        public Builder query(@Nullable Output<String> query) {
            $.query = query;
            return this;
        }

        public Builder query(String query) {
            return query(Output.of(query));
        }

        public GetAppArgs build() {
            $.appId = Objects.requireNonNull($.appId, "expected parameter 'appId' to be non-null");
            $.developerId = Objects.requireNonNull($.developerId, "expected parameter 'developerId' to be non-null");
            $.organizationId = Objects.requireNonNull($.organizationId, "expected parameter 'organizationId' to be non-null");
            return $;
        }
    }

}
