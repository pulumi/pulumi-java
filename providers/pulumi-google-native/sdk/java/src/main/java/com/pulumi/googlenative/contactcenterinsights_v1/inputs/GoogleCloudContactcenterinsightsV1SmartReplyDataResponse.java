// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.contactcenterinsights_v1.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Double;
import java.lang.String;
import java.util.Map;
import java.util.Objects;


/**
 * Agent Assist Smart Reply data.
 * 
 */
public final class GoogleCloudContactcenterinsightsV1SmartReplyDataResponse extends com.pulumi.resources.InvokeArgs {

    public static final GoogleCloudContactcenterinsightsV1SmartReplyDataResponse Empty = new GoogleCloudContactcenterinsightsV1SmartReplyDataResponse();

    /**
     * The system&#39;s confidence score that this reply is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).
     * 
     */
    @Import(name="confidenceScore", required=true)
    private Double confidenceScore;

    /**
     * @return The system&#39;s confidence score that this reply is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).
     * 
     */
    public Double confidenceScore() {
        return this.confidenceScore;
    }

    /**
     * Map that contains metadata about the Smart Reply and the document from which it originates.
     * 
     */
    @Import(name="metadata", required=true)
    private Map<String,String> metadata;

    /**
     * @return Map that contains metadata about the Smart Reply and the document from which it originates.
     * 
     */
    public Map<String,String> metadata() {
        return this.metadata;
    }

    /**
     * Name of the query record. Format: projects/{project}/locations/{location}/queryRecords/{query_record}
     * 
     */
    @Import(name="queryRecord", required=true)
    private String queryRecord;

    /**
     * @return Name of the query record. Format: projects/{project}/locations/{location}/queryRecords/{query_record}
     * 
     */
    public String queryRecord() {
        return this.queryRecord;
    }

    /**
     * The content of the reply.
     * 
     */
    @Import(name="reply", required=true)
    private String reply;

    /**
     * @return The content of the reply.
     * 
     */
    public String reply() {
        return this.reply;
    }

    private GoogleCloudContactcenterinsightsV1SmartReplyDataResponse() {}

    private GoogleCloudContactcenterinsightsV1SmartReplyDataResponse(GoogleCloudContactcenterinsightsV1SmartReplyDataResponse $) {
        this.confidenceScore = $.confidenceScore;
        this.metadata = $.metadata;
        this.queryRecord = $.queryRecord;
        this.reply = $.reply;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GoogleCloudContactcenterinsightsV1SmartReplyDataResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GoogleCloudContactcenterinsightsV1SmartReplyDataResponse $;

        public Builder() {
            $ = new GoogleCloudContactcenterinsightsV1SmartReplyDataResponse();
        }

        public Builder(GoogleCloudContactcenterinsightsV1SmartReplyDataResponse defaults) {
            $ = new GoogleCloudContactcenterinsightsV1SmartReplyDataResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param confidenceScore The system&#39;s confidence score that this reply is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).
         * 
         * @return builder
         * 
         */
        public Builder confidenceScore(Double confidenceScore) {
            $.confidenceScore = confidenceScore;
            return this;
        }

        /**
         * @param metadata Map that contains metadata about the Smart Reply and the document from which it originates.
         * 
         * @return builder
         * 
         */
        public Builder metadata(Map<String,String> metadata) {
            $.metadata = metadata;
            return this;
        }

        /**
         * @param queryRecord Name of the query record. Format: projects/{project}/locations/{location}/queryRecords/{query_record}
         * 
         * @return builder
         * 
         */
        public Builder queryRecord(String queryRecord) {
            $.queryRecord = queryRecord;
            return this;
        }

        /**
         * @param reply The content of the reply.
         * 
         * @return builder
         * 
         */
        public Builder reply(String reply) {
            $.reply = reply;
            return this;
        }

        public GoogleCloudContactcenterinsightsV1SmartReplyDataResponse build() {
            $.confidenceScore = Objects.requireNonNull($.confidenceScore, "expected parameter 'confidenceScore' to be non-null");
            $.metadata = Objects.requireNonNull($.metadata, "expected parameter 'metadata' to be non-null");
            $.queryRecord = Objects.requireNonNull($.queryRecord, "expected parameter 'queryRecord' to be non-null");
            $.reply = Objects.requireNonNull($.reply, "expected parameter 'reply' to be non-null");
            return $;
        }
    }

}
