// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.vmmigration_v1alpha1;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DatacenterConnectorArgs extends com.pulumi.resources.ResourceArgs {

    public static final DatacenterConnectorArgs Empty = new DatacenterConnectorArgs();

    @Import(name="datacenterConnectorId", required=true)
    private Output<String> datacenterConnectorId;

    public Output<String> datacenterConnectorId() {
        return this.datacenterConnectorId;
    }

    @Import(name="location")
    private @Nullable Output<String> location;

    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    @Import(name="project")
    private @Nullable Output<String> project;

    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * Immutable. A unique key for this connector. This key is internal to the OVA connector and is supplied with its creation during the registration process and can not be modified.
     * 
     */
    @Import(name="registrationId")
    private @Nullable Output<String> registrationId;

    /**
     * @return Immutable. A unique key for this connector. This key is internal to the OVA connector and is supplied with its creation during the registration process and can not be modified.
     * 
     */
    public Optional<Output<String>> registrationId() {
        return Optional.ofNullable(this.registrationId);
    }

    @Import(name="requestId")
    private @Nullable Output<String> requestId;

    public Optional<Output<String>> requestId() {
        return Optional.ofNullable(this.requestId);
    }

    /**
     * The service account to use in the connector when communicating with the cloud.
     * 
     */
    @Import(name="serviceAccount")
    private @Nullable Output<String> serviceAccount;

    /**
     * @return The service account to use in the connector when communicating with the cloud.
     * 
     */
    public Optional<Output<String>> serviceAccount() {
        return Optional.ofNullable(this.serviceAccount);
    }

    @Import(name="sourceId", required=true)
    private Output<String> sourceId;

    public Output<String> sourceId() {
        return this.sourceId;
    }

    /**
     * The version running in the DatacenterConnector. This is supplied by the OVA connector during the registration process and can not be modified.
     * 
     */
    @Import(name="version")
    private @Nullable Output<String> version;

    /**
     * @return The version running in the DatacenterConnector. This is supplied by the OVA connector during the registration process and can not be modified.
     * 
     */
    public Optional<Output<String>> version() {
        return Optional.ofNullable(this.version);
    }

    private DatacenterConnectorArgs() {}

    private DatacenterConnectorArgs(DatacenterConnectorArgs $) {
        this.datacenterConnectorId = $.datacenterConnectorId;
        this.location = $.location;
        this.project = $.project;
        this.registrationId = $.registrationId;
        this.requestId = $.requestId;
        this.serviceAccount = $.serviceAccount;
        this.sourceId = $.sourceId;
        this.version = $.version;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DatacenterConnectorArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DatacenterConnectorArgs $;

        public Builder() {
            $ = new DatacenterConnectorArgs();
        }

        public Builder(DatacenterConnectorArgs defaults) {
            $ = new DatacenterConnectorArgs(Objects.requireNonNull(defaults));
        }

        public Builder datacenterConnectorId(Output<String> datacenterConnectorId) {
            $.datacenterConnectorId = datacenterConnectorId;
            return this;
        }

        public Builder datacenterConnectorId(String datacenterConnectorId) {
            return datacenterConnectorId(Output.of(datacenterConnectorId));
        }

        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        public Builder location(String location) {
            return location(Output.of(location));
        }

        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        public Builder project(String project) {
            return project(Output.of(project));
        }

        /**
         * @param registrationId Immutable. A unique key for this connector. This key is internal to the OVA connector and is supplied with its creation during the registration process and can not be modified.
         * 
         * @return builder
         * 
         */
        public Builder registrationId(@Nullable Output<String> registrationId) {
            $.registrationId = registrationId;
            return this;
        }

        /**
         * @param registrationId Immutable. A unique key for this connector. This key is internal to the OVA connector and is supplied with its creation during the registration process and can not be modified.
         * 
         * @return builder
         * 
         */
        public Builder registrationId(String registrationId) {
            return registrationId(Output.of(registrationId));
        }

        public Builder requestId(@Nullable Output<String> requestId) {
            $.requestId = requestId;
            return this;
        }

        public Builder requestId(String requestId) {
            return requestId(Output.of(requestId));
        }

        /**
         * @param serviceAccount The service account to use in the connector when communicating with the cloud.
         * 
         * @return builder
         * 
         */
        public Builder serviceAccount(@Nullable Output<String> serviceAccount) {
            $.serviceAccount = serviceAccount;
            return this;
        }

        /**
         * @param serviceAccount The service account to use in the connector when communicating with the cloud.
         * 
         * @return builder
         * 
         */
        public Builder serviceAccount(String serviceAccount) {
            return serviceAccount(Output.of(serviceAccount));
        }

        public Builder sourceId(Output<String> sourceId) {
            $.sourceId = sourceId;
            return this;
        }

        public Builder sourceId(String sourceId) {
            return sourceId(Output.of(sourceId));
        }

        /**
         * @param version The version running in the DatacenterConnector. This is supplied by the OVA connector during the registration process and can not be modified.
         * 
         * @return builder
         * 
         */
        public Builder version(@Nullable Output<String> version) {
            $.version = version;
            return this;
        }

        /**
         * @param version The version running in the DatacenterConnector. This is supplied by the OVA connector during the registration process and can not be modified.
         * 
         * @return builder
         * 
         */
        public Builder version(String version) {
            return version(Output.of(version));
        }

        public DatacenterConnectorArgs build() {
            $.datacenterConnectorId = Objects.requireNonNull($.datacenterConnectorId, "expected parameter 'datacenterConnectorId' to be non-null");
            $.sourceId = Objects.requireNonNull($.sourceId, "expected parameter 'sourceId' to be non-null");
            return $;
        }
    }

}
