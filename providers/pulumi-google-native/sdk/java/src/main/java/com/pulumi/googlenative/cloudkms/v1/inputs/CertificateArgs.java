// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.cloudkms.v1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * A Certificate represents an X.509 certificate used to authenticate HTTPS connections to EKM replicas.
 * 
 */
public final class CertificateArgs extends com.pulumi.resources.ResourceArgs {

    public static final CertificateArgs Empty = new CertificateArgs();

    /**
     * The raw certificate bytes in DER format.
     * 
     */
    @Import(name="rawDer", required=true)
    private Output<String> rawDer;

    /**
     * @return The raw certificate bytes in DER format.
     * 
     */
    public Output<String> rawDer() {
        return this.rawDer;
    }

    private CertificateArgs() {}

    private CertificateArgs(CertificateArgs $) {
        this.rawDer = $.rawDer;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CertificateArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CertificateArgs $;

        public Builder() {
            $ = new CertificateArgs();
        }

        public Builder(CertificateArgs defaults) {
            $ = new CertificateArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param rawDer The raw certificate bytes in DER format.
         * 
         * @return builder
         * 
         */
        public Builder rawDer(Output<String> rawDer) {
            $.rawDer = rawDer;
            return this;
        }

        /**
         * @param rawDer The raw certificate bytes in DER format.
         * 
         * @return builder
         * 
         */
        public Builder rawDer(String rawDer) {
            return rawDer(Output.of(rawDer));
        }

        public CertificateArgs build() {
            $.rawDer = Objects.requireNonNull($.rawDer, "expected parameter 'rawDer' to be non-null");
            return $;
        }
    }

}
