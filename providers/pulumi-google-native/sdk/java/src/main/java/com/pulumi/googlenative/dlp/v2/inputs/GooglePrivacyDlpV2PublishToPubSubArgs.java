// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.dlp.v2.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Publish a message into given Pub/Sub topic when DlpJob has completed. The message contains a single field, `DlpJobName`, which is equal to the finished job&#39;s [`DlpJob.name`](https://cloud.google.com/dlp/docs/reference/rest/v2/projects.dlpJobs#DlpJob). Compatible with: Inspect, Risk
 * 
 */
public final class GooglePrivacyDlpV2PublishToPubSubArgs extends com.pulumi.resources.ResourceArgs {

    public static final GooglePrivacyDlpV2PublishToPubSubArgs Empty = new GooglePrivacyDlpV2PublishToPubSubArgs();

    /**
     * Cloud Pub/Sub topic to send notifications to. The topic must have given publishing access rights to the DLP API service account executing the long running DlpJob sending the notifications. Format is projects/{project}/topics/{topic}.
     * 
     */
    @Import(name="topic")
    private @Nullable Output<String> topic;

    /**
     * @return Cloud Pub/Sub topic to send notifications to. The topic must have given publishing access rights to the DLP API service account executing the long running DlpJob sending the notifications. Format is projects/{project}/topics/{topic}.
     * 
     */
    public Optional<Output<String>> topic() {
        return Optional.ofNullable(this.topic);
    }

    private GooglePrivacyDlpV2PublishToPubSubArgs() {}

    private GooglePrivacyDlpV2PublishToPubSubArgs(GooglePrivacyDlpV2PublishToPubSubArgs $) {
        this.topic = $.topic;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GooglePrivacyDlpV2PublishToPubSubArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GooglePrivacyDlpV2PublishToPubSubArgs $;

        public Builder() {
            $ = new GooglePrivacyDlpV2PublishToPubSubArgs();
        }

        public Builder(GooglePrivacyDlpV2PublishToPubSubArgs defaults) {
            $ = new GooglePrivacyDlpV2PublishToPubSubArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param topic Cloud Pub/Sub topic to send notifications to. The topic must have given publishing access rights to the DLP API service account executing the long running DlpJob sending the notifications. Format is projects/{project}/topics/{topic}.
         * 
         * @return builder
         * 
         */
        public Builder topic(@Nullable Output<String> topic) {
            $.topic = topic;
            return this;
        }

        /**
         * @param topic Cloud Pub/Sub topic to send notifications to. The topic must have given publishing access rights to the DLP API service account executing the long running DlpJob sending the notifications. Format is projects/{project}/topics/{topic}.
         * 
         * @return builder
         * 
         */
        public Builder topic(String topic) {
            return topic(Output.of(topic));
        }

        public GooglePrivacyDlpV2PublishToPubSubArgs build() {
            return $;
        }
    }

}
