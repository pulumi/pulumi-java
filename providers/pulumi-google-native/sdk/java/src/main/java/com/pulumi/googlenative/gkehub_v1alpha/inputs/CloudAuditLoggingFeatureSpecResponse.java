// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.gkehub_v1alpha.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;


/**
 * **Cloud Audit Logging**: Spec for Audit Logging Allowlisting.
 * 
 */
public final class CloudAuditLoggingFeatureSpecResponse extends com.pulumi.resources.InvokeArgs {

    public static final CloudAuditLoggingFeatureSpecResponse Empty = new CloudAuditLoggingFeatureSpecResponse();

    /**
     * Service account that should be allowlisted to send the audit logs; eg cloudauditlogging@gcp-project.iam.gserviceaccount.com. These accounts must already exist, but do not need to have any permissions granted to them. The customer's entitlements will be checked prior to allowlisting (i.e. the customer must be an Anthos customer.)
     * 
     */
    @Import(name="allowlistedServiceAccounts", required=true)
      private final List<String> allowlistedServiceAccounts;

    public List<String> allowlistedServiceAccounts() {
        return this.allowlistedServiceAccounts;
    }

    public CloudAuditLoggingFeatureSpecResponse(List<String> allowlistedServiceAccounts) {
        this.allowlistedServiceAccounts = Objects.requireNonNull(allowlistedServiceAccounts, "expected parameter 'allowlistedServiceAccounts' to be non-null");
    }

    private CloudAuditLoggingFeatureSpecResponse() {
        this.allowlistedServiceAccounts = List.of();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CloudAuditLoggingFeatureSpecResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<String> allowlistedServiceAccounts;

        public Builder() {
    	      // Empty
        }

        public Builder(CloudAuditLoggingFeatureSpecResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allowlistedServiceAccounts = defaults.allowlistedServiceAccounts;
        }

        public Builder allowlistedServiceAccounts(List<String> allowlistedServiceAccounts) {
            this.allowlistedServiceAccounts = Objects.requireNonNull(allowlistedServiceAccounts);
            return this;
        }
        public Builder allowlistedServiceAccounts(String... allowlistedServiceAccounts) {
            return allowlistedServiceAccounts(List.of(allowlistedServiceAccounts));
        }        public CloudAuditLoggingFeatureSpecResponse build() {
            return new CloudAuditLoggingFeatureSpecResponse(allowlistedServiceAccounts);
        }
    }
}
