// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.gkehub_v1alpha.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;


/**
 * **Cloud Audit Logging**: Spec for Audit Logging Allowlisting.
 * 
 */
public final class CloudAuditLoggingFeatureSpecResponse extends com.pulumi.resources.InvokeArgs {

    public static final CloudAuditLoggingFeatureSpecResponse Empty = new CloudAuditLoggingFeatureSpecResponse();

    /**
     * Service account that should be allowlisted to send the audit logs; eg cloudauditlogging@gcp-project.iam.gserviceaccount.com. These accounts must already exist, but do not need to have any permissions granted to them. The customer&#39;s entitlements will be checked prior to allowlisting (i.e. the customer must be an Anthos customer.)
     * 
     */
    @Import(name="allowlistedServiceAccounts", required=true)
    private List<String> allowlistedServiceAccounts;

    /**
     * @return Service account that should be allowlisted to send the audit logs; eg cloudauditlogging@gcp-project.iam.gserviceaccount.com. These accounts must already exist, but do not need to have any permissions granted to them. The customer&#39;s entitlements will be checked prior to allowlisting (i.e. the customer must be an Anthos customer.)
     * 
     */
    public List<String> allowlistedServiceAccounts() {
        return this.allowlistedServiceAccounts;
    }

    private CloudAuditLoggingFeatureSpecResponse() {}

    private CloudAuditLoggingFeatureSpecResponse(CloudAuditLoggingFeatureSpecResponse $) {
        this.allowlistedServiceAccounts = $.allowlistedServiceAccounts;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CloudAuditLoggingFeatureSpecResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CloudAuditLoggingFeatureSpecResponse $;

        public Builder() {
            $ = new CloudAuditLoggingFeatureSpecResponse();
        }

        public Builder(CloudAuditLoggingFeatureSpecResponse defaults) {
            $ = new CloudAuditLoggingFeatureSpecResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param allowlistedServiceAccounts Service account that should be allowlisted to send the audit logs; eg cloudauditlogging@gcp-project.iam.gserviceaccount.com. These accounts must already exist, but do not need to have any permissions granted to them. The customer&#39;s entitlements will be checked prior to allowlisting (i.e. the customer must be an Anthos customer.)
         * 
         * @return builder
         * 
         */
        public Builder allowlistedServiceAccounts(List<String> allowlistedServiceAccounts) {
            $.allowlistedServiceAccounts = allowlistedServiceAccounts;
            return this;
        }

        /**
         * @param allowlistedServiceAccounts Service account that should be allowlisted to send the audit logs; eg cloudauditlogging@gcp-project.iam.gserviceaccount.com. These accounts must already exist, but do not need to have any permissions granted to them. The customer&#39;s entitlements will be checked prior to allowlisting (i.e. the customer must be an Anthos customer.)
         * 
         * @return builder
         * 
         */
        public Builder allowlistedServiceAccounts(String... allowlistedServiceAccounts) {
            return allowlistedServiceAccounts(List.of(allowlistedServiceAccounts));
        }

        public CloudAuditLoggingFeatureSpecResponse build() {
            $.allowlistedServiceAccounts = Objects.requireNonNull($.allowlistedServiceAccounts, "expected parameter 'allowlistedServiceAccounts' to be non-null");
            return $;
        }
    }

}
