// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.storage.v1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The bucket&#39;s uniform bucket-level access configuration.
 * 
 */
public final class BucketIamConfigurationUniformBucketLevelAccessArgs extends com.pulumi.resources.ResourceArgs {

    public static final BucketIamConfigurationUniformBucketLevelAccessArgs Empty = new BucketIamConfigurationUniformBucketLevelAccessArgs();

    /**
     * If set, access is controlled only by bucket-level or above IAM policies.
     * 
     */
    @Import(name="enabled")
    private @Nullable Output<Boolean> enabled;

    /**
     * @return If set, access is controlled only by bucket-level or above IAM policies.
     * 
     */
    public Optional<Output<Boolean>> enabled() {
        return Optional.ofNullable(this.enabled);
    }

    /**
     * The deadline for changing iamConfiguration.uniformBucketLevelAccess.enabled from true to false in RFC 3339  format. iamConfiguration.uniformBucketLevelAccess.enabled may be changed from true to false until the locked time, after which the field is immutable.
     * 
     */
    @Import(name="lockedTime")
    private @Nullable Output<String> lockedTime;

    /**
     * @return The deadline for changing iamConfiguration.uniformBucketLevelAccess.enabled from true to false in RFC 3339  format. iamConfiguration.uniformBucketLevelAccess.enabled may be changed from true to false until the locked time, after which the field is immutable.
     * 
     */
    public Optional<Output<String>> lockedTime() {
        return Optional.ofNullable(this.lockedTime);
    }

    private BucketIamConfigurationUniformBucketLevelAccessArgs() {}

    private BucketIamConfigurationUniformBucketLevelAccessArgs(BucketIamConfigurationUniformBucketLevelAccessArgs $) {
        this.enabled = $.enabled;
        this.lockedTime = $.lockedTime;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BucketIamConfigurationUniformBucketLevelAccessArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BucketIamConfigurationUniformBucketLevelAccessArgs $;

        public Builder() {
            $ = new BucketIamConfigurationUniformBucketLevelAccessArgs();
        }

        public Builder(BucketIamConfigurationUniformBucketLevelAccessArgs defaults) {
            $ = new BucketIamConfigurationUniformBucketLevelAccessArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param enabled If set, access is controlled only by bucket-level or above IAM policies.
         * 
         * @return builder
         * 
         */
        public Builder enabled(@Nullable Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param enabled If set, access is controlled only by bucket-level or above IAM policies.
         * 
         * @return builder
         * 
         */
        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        /**
         * @param lockedTime The deadline for changing iamConfiguration.uniformBucketLevelAccess.enabled from true to false in RFC 3339  format. iamConfiguration.uniformBucketLevelAccess.enabled may be changed from true to false until the locked time, after which the field is immutable.
         * 
         * @return builder
         * 
         */
        public Builder lockedTime(@Nullable Output<String> lockedTime) {
            $.lockedTime = lockedTime;
            return this;
        }

        /**
         * @param lockedTime The deadline for changing iamConfiguration.uniformBucketLevelAccess.enabled from true to false in RFC 3339  format. iamConfiguration.uniformBucketLevelAccess.enabled may be changed from true to false until the locked time, after which the field is immutable.
         * 
         * @return builder
         * 
         */
        public Builder lockedTime(String lockedTime) {
            return lockedTime(Output.of(lockedTime));
        }

        public BucketIamConfigurationUniformBucketLevelAccessArgs build() {
            return $;
        }
    }

}
