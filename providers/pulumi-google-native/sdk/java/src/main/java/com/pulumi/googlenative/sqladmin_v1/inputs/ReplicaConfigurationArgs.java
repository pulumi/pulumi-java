// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.sqladmin_v1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import com.pulumi.googlenative.sqladmin_v1.inputs.MySqlReplicaConfigurationArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Read-replica configuration for connecting to the primary instance.
 * 
 */
public final class ReplicaConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final ReplicaConfigurationArgs Empty = new ReplicaConfigurationArgs();

    /**
     * Specifies if the replica is the failover target. If the field is set to `true`, the replica will be designated as a failover replica. In case the primary instance fails, the replica instance will be promoted as the new primary instance. Only one replica can be specified as failover target, and the replica has to be in different zone with the primary instance.
     * 
     */
    @Import(name="failoverTarget")
      private final @Nullable Output<Boolean> failoverTarget;

    public Output<Boolean> failoverTarget() {
        return this.failoverTarget == null ? Codegen.empty() : this.failoverTarget;
    }

    /**
     * This is always `sql#replicaConfiguration`.
     * 
     */
    @Import(name="kind")
      private final @Nullable Output<String> kind;

    public Output<String> kind() {
        return this.kind == null ? Codegen.empty() : this.kind;
    }

    /**
     * MySQL specific configuration when replicating from a MySQL on-premises primary instance. Replication configuration information such as the username, password, certificates, and keys are not stored in the instance metadata. The configuration information is used only to set up the replication connection and is stored by MySQL in a file named `master.info` in the data directory.
     * 
     */
    @Import(name="mysqlReplicaConfiguration")
      private final @Nullable Output<MySqlReplicaConfigurationArgs> mysqlReplicaConfiguration;

    public Output<MySqlReplicaConfigurationArgs> mysqlReplicaConfiguration() {
        return this.mysqlReplicaConfiguration == null ? Codegen.empty() : this.mysqlReplicaConfiguration;
    }

    public ReplicaConfigurationArgs(
        @Nullable Output<Boolean> failoverTarget,
        @Nullable Output<String> kind,
        @Nullable Output<MySqlReplicaConfigurationArgs> mysqlReplicaConfiguration) {
        this.failoverTarget = failoverTarget;
        this.kind = kind;
        this.mysqlReplicaConfiguration = mysqlReplicaConfiguration;
    }

    private ReplicaConfigurationArgs() {
        this.failoverTarget = Codegen.empty();
        this.kind = Codegen.empty();
        this.mysqlReplicaConfiguration = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ReplicaConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<Boolean> failoverTarget;
        private @Nullable Output<String> kind;
        private @Nullable Output<MySqlReplicaConfigurationArgs> mysqlReplicaConfiguration;

        public Builder() {
    	      // Empty
        }

        public Builder(ReplicaConfigurationArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.failoverTarget = defaults.failoverTarget;
    	      this.kind = defaults.kind;
    	      this.mysqlReplicaConfiguration = defaults.mysqlReplicaConfiguration;
        }

        public Builder failoverTarget(@Nullable Output<Boolean> failoverTarget) {
            this.failoverTarget = failoverTarget;
            return this;
        }
        public Builder failoverTarget(@Nullable Boolean failoverTarget) {
            this.failoverTarget = Codegen.ofNullable(failoverTarget);
            return this;
        }
        public Builder kind(@Nullable Output<String> kind) {
            this.kind = kind;
            return this;
        }
        public Builder kind(@Nullable String kind) {
            this.kind = Codegen.ofNullable(kind);
            return this;
        }
        public Builder mysqlReplicaConfiguration(@Nullable Output<MySqlReplicaConfigurationArgs> mysqlReplicaConfiguration) {
            this.mysqlReplicaConfiguration = mysqlReplicaConfiguration;
            return this;
        }
        public Builder mysqlReplicaConfiguration(@Nullable MySqlReplicaConfigurationArgs mysqlReplicaConfiguration) {
            this.mysqlReplicaConfiguration = Codegen.ofNullable(mysqlReplicaConfiguration);
            return this;
        }        public ReplicaConfigurationArgs build() {
            return new ReplicaConfigurationArgs(failoverTarget, kind, mysqlReplicaConfiguration);
        }
    }
}
