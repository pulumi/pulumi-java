// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.compute_beta.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;


/**
 * The share setting for reservations and sole tenancy node groups.
 * 
 */
public final class ShareSettingsResponse extends com.pulumi.resources.InvokeArgs {

    public static final ShareSettingsResponse Empty = new ShareSettingsResponse();

    /**
     * A map of project id and project config. This is only valid when share_type&#39;s value is SPECIFIC_PROJECTS.
     * 
     */
    @Import(name="projectMap", required=true)
    private Map<String,String> projectMap;

    public Map<String,String> projectMap() {
        return this.projectMap;
    }

    /**
     * A List of Project names to specify consumer projects for this shared-reservation. This is only valid when share_type&#39;s value is SPECIFIC_PROJECTS.
     * 
     */
    @Import(name="projects", required=true)
    private List<String> projects;

    public List<String> projects() {
        return this.projects;
    }

    /**
     * Type of sharing for this shared-reservation
     * 
     */
    @Import(name="shareType", required=true)
    private String shareType;

    public String shareType() {
        return this.shareType;
    }

    private ShareSettingsResponse() {}

    private ShareSettingsResponse(ShareSettingsResponse $) {
        this.projectMap = $.projectMap;
        this.projects = $.projects;
        this.shareType = $.shareType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ShareSettingsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ShareSettingsResponse $;

        public Builder() {
            $ = new ShareSettingsResponse();
        }

        public Builder(ShareSettingsResponse defaults) {
            $ = new ShareSettingsResponse(Objects.requireNonNull(defaults));
        }

        public Builder projectMap(Map<String,String> projectMap) {
            $.projectMap = projectMap;
            return this;
        }

        public Builder projects(List<String> projects) {
            $.projects = projects;
            return this;
        }

        public Builder projects(String... projects) {
            return projects(List.of(projects));
        }

        public Builder shareType(String shareType) {
            $.shareType = shareType;
            return this;
        }

        public ShareSettingsResponse build() {
            $.projectMap = Objects.requireNonNull($.projectMap, "expected parameter 'projectMap' to be non-null");
            $.projects = Objects.requireNonNull($.projects, "expected parameter 'projects' to be non-null");
            $.shareType = Objects.requireNonNull($.shareType, "expected parameter 'shareType' to be non-null");
            return $;
        }
    }

}
