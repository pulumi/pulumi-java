// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.bigquery.v2.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetRowAccessPolicyIamPolicyArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetRowAccessPolicyIamPolicyArgs Empty = new GetRowAccessPolicyIamPolicyArgs();

    @Import(name="datasetId", required=true)
    private Output<String> datasetId;

    public Output<String> datasetId() {
        return this.datasetId;
    }

    @Import(name="project")
    private @Nullable Output<String> project;

    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    @Import(name="rowAccessPolicyId", required=true)
    private Output<String> rowAccessPolicyId;

    public Output<String> rowAccessPolicyId() {
        return this.rowAccessPolicyId;
    }

    @Import(name="tableId", required=true)
    private Output<String> tableId;

    public Output<String> tableId() {
        return this.tableId;
    }

    private GetRowAccessPolicyIamPolicyArgs() {}

    private GetRowAccessPolicyIamPolicyArgs(GetRowAccessPolicyIamPolicyArgs $) {
        this.datasetId = $.datasetId;
        this.project = $.project;
        this.rowAccessPolicyId = $.rowAccessPolicyId;
        this.tableId = $.tableId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetRowAccessPolicyIamPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetRowAccessPolicyIamPolicyArgs $;

        public Builder() {
            $ = new GetRowAccessPolicyIamPolicyArgs();
        }

        public Builder(GetRowAccessPolicyIamPolicyArgs defaults) {
            $ = new GetRowAccessPolicyIamPolicyArgs(Objects.requireNonNull(defaults));
        }

        public Builder datasetId(Output<String> datasetId) {
            $.datasetId = datasetId;
            return this;
        }

        public Builder datasetId(String datasetId) {
            return datasetId(Output.of(datasetId));
        }

        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        public Builder project(String project) {
            return project(Output.of(project));
        }

        public Builder rowAccessPolicyId(Output<String> rowAccessPolicyId) {
            $.rowAccessPolicyId = rowAccessPolicyId;
            return this;
        }

        public Builder rowAccessPolicyId(String rowAccessPolicyId) {
            return rowAccessPolicyId(Output.of(rowAccessPolicyId));
        }

        public Builder tableId(Output<String> tableId) {
            $.tableId = tableId;
            return this;
        }

        public Builder tableId(String tableId) {
            return tableId(Output.of(tableId));
        }

        public GetRowAccessPolicyIamPolicyArgs build() {
            $.datasetId = Objects.requireNonNull($.datasetId, "expected parameter 'datasetId' to be non-null");
            $.rowAccessPolicyId = Objects.requireNonNull($.rowAccessPolicyId, "expected parameter 'rowAccessPolicyId' to be non-null");
            $.tableId = Objects.requireNonNull($.tableId, "expected parameter 'tableId' to be non-null");
            return $;
        }
    }

}
