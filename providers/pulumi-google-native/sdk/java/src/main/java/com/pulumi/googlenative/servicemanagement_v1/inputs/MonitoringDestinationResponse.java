// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.servicemanagement_v1.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;


/**
 * Configuration of a specific monitoring destination (the producer project or the consumer project).
 * 
 */
public final class MonitoringDestinationResponse extends com.pulumi.resources.InvokeArgs {

    public static final MonitoringDestinationResponse Empty = new MonitoringDestinationResponse();

    /**
     * Types of the metrics to report to this monitoring destination. Each type must be defined in Service.metrics section.
     * 
     */
    @Import(name="metrics", required=true)
    private List<String> metrics;

    /**
     * @return Types of the metrics to report to this monitoring destination. Each type must be defined in Service.metrics section.
     * 
     */
    public List<String> metrics() {
        return this.metrics;
    }

    /**
     * The monitored resource type. The type must be defined in Service.monitored_resources section.
     * 
     */
    @Import(name="monitoredResource", required=true)
    private String monitoredResource;

    /**
     * @return The monitored resource type. The type must be defined in Service.monitored_resources section.
     * 
     */
    public String monitoredResource() {
        return this.monitoredResource;
    }

    private MonitoringDestinationResponse() {}

    private MonitoringDestinationResponse(MonitoringDestinationResponse $) {
        this.metrics = $.metrics;
        this.monitoredResource = $.monitoredResource;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MonitoringDestinationResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MonitoringDestinationResponse $;

        public Builder() {
            $ = new MonitoringDestinationResponse();
        }

        public Builder(MonitoringDestinationResponse defaults) {
            $ = new MonitoringDestinationResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param metrics Types of the metrics to report to this monitoring destination. Each type must be defined in Service.metrics section.
         * 
         * @return builder
         * 
         */
        public Builder metrics(List<String> metrics) {
            $.metrics = metrics;
            return this;
        }

        /**
         * @param metrics Types of the metrics to report to this monitoring destination. Each type must be defined in Service.metrics section.
         * 
         * @return builder
         * 
         */
        public Builder metrics(String... metrics) {
            return metrics(List.of(metrics));
        }

        /**
         * @param monitoredResource The monitored resource type. The type must be defined in Service.monitored_resources section.
         * 
         * @return builder
         * 
         */
        public Builder monitoredResource(String monitoredResource) {
            $.monitoredResource = monitoredResource;
            return this;
        }

        public MonitoringDestinationResponse build() {
            $.metrics = Objects.requireNonNull($.metrics, "expected parameter 'metrics' to be non-null");
            $.monitoredResource = Objects.requireNonNull($.monitoredResource, "expected parameter 'monitoredResource' to be non-null");
            return $;
        }
    }

}
