// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.containeranalysis_v1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.containeranalysis_v1.enums.VulnerabilityNoteSeverity;
import com.pulumi.googlenative.containeranalysis_v1.inputs.CVSSv3Args;
import com.pulumi.googlenative.containeranalysis_v1.inputs.DetailArgs;
import com.pulumi.googlenative.containeranalysis_v1.inputs.WindowsDetailArgs;
import java.lang.Double;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * A security vulnerability that can be found in resources.
 * 
 */
public final class VulnerabilityNoteArgs extends com.pulumi.resources.ResourceArgs {

    public static final VulnerabilityNoteArgs Empty = new VulnerabilityNoteArgs();

    /**
     * The CVSS score of this vulnerability. CVSS score is on a scale of 0 - 10 where 0 indicates low severity and 10 indicates high severity.
     * 
     */
    @Import(name="cvssScore")
    private @Nullable Output<Double> cvssScore;

    public Optional<Output<Double>> cvssScore() {
        return Optional.ofNullable(this.cvssScore);
    }

    /**
     * The full description of the CVSSv3 for this vulnerability.
     * 
     */
    @Import(name="cvssV3")
    private @Nullable Output<CVSSv3Args> cvssV3;

    public Optional<Output<CVSSv3Args>> cvssV3() {
        return Optional.ofNullable(this.cvssV3);
    }

    /**
     * Details of all known distros and packages affected by this vulnerability.
     * 
     */
    @Import(name="details")
    private @Nullable Output<List<DetailArgs>> details;

    public Optional<Output<List<DetailArgs>>> details() {
        return Optional.ofNullable(this.details);
    }

    /**
     * The note provider assigned severity of this vulnerability.
     * 
     */
    @Import(name="severity")
    private @Nullable Output<VulnerabilityNoteSeverity> severity;

    public Optional<Output<VulnerabilityNoteSeverity>> severity() {
        return Optional.ofNullable(this.severity);
    }

    /**
     * The time this information was last changed at the source. This is an upstream timestamp from the underlying information source - e.g. Ubuntu security tracker.
     * 
     */
    @Import(name="sourceUpdateTime")
    private @Nullable Output<String> sourceUpdateTime;

    public Optional<Output<String>> sourceUpdateTime() {
        return Optional.ofNullable(this.sourceUpdateTime);
    }

    /**
     * Windows details get their own format because the information format and model don&#39;t match a normal detail. Specifically Windows updates are done as patches, thus Windows vulnerabilities really are a missing package, rather than a package being at an incorrect version.
     * 
     */
    @Import(name="windowsDetails")
    private @Nullable Output<List<WindowsDetailArgs>> windowsDetails;

    public Optional<Output<List<WindowsDetailArgs>>> windowsDetails() {
        return Optional.ofNullable(this.windowsDetails);
    }

    private VulnerabilityNoteArgs() {}

    private VulnerabilityNoteArgs(VulnerabilityNoteArgs $) {
        this.cvssScore = $.cvssScore;
        this.cvssV3 = $.cvssV3;
        this.details = $.details;
        this.severity = $.severity;
        this.sourceUpdateTime = $.sourceUpdateTime;
        this.windowsDetails = $.windowsDetails;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VulnerabilityNoteArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VulnerabilityNoteArgs $;

        public Builder() {
            $ = new VulnerabilityNoteArgs();
        }

        public Builder(VulnerabilityNoteArgs defaults) {
            $ = new VulnerabilityNoteArgs(Objects.requireNonNull(defaults));
        }

        public Builder cvssScore(@Nullable Output<Double> cvssScore) {
            $.cvssScore = cvssScore;
            return this;
        }

        public Builder cvssScore(Double cvssScore) {
            return cvssScore(Output.of(cvssScore));
        }

        public Builder cvssV3(@Nullable Output<CVSSv3Args> cvssV3) {
            $.cvssV3 = cvssV3;
            return this;
        }

        public Builder cvssV3(CVSSv3Args cvssV3) {
            return cvssV3(Output.of(cvssV3));
        }

        public Builder details(@Nullable Output<List<DetailArgs>> details) {
            $.details = details;
            return this;
        }

        public Builder details(List<DetailArgs> details) {
            return details(Output.of(details));
        }

        public Builder details(DetailArgs... details) {
            return details(List.of(details));
        }

        public Builder severity(@Nullable Output<VulnerabilityNoteSeverity> severity) {
            $.severity = severity;
            return this;
        }

        public Builder severity(VulnerabilityNoteSeverity severity) {
            return severity(Output.of(severity));
        }

        public Builder sourceUpdateTime(@Nullable Output<String> sourceUpdateTime) {
            $.sourceUpdateTime = sourceUpdateTime;
            return this;
        }

        public Builder sourceUpdateTime(String sourceUpdateTime) {
            return sourceUpdateTime(Output.of(sourceUpdateTime));
        }

        public Builder windowsDetails(@Nullable Output<List<WindowsDetailArgs>> windowsDetails) {
            $.windowsDetails = windowsDetails;
            return this;
        }

        public Builder windowsDetails(List<WindowsDetailArgs> windowsDetails) {
            return windowsDetails(Output.of(windowsDetails));
        }

        public Builder windowsDetails(WindowsDetailArgs... windowsDetails) {
            return windowsDetails(List.of(windowsDetails));
        }

        public VulnerabilityNoteArgs build() {
            return $;
        }
    }

}
