// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.containeranalysis.v1beta1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.containeranalysis.v1beta1.enums.VulnerabilitySeverity;
import com.pulumi.googlenative.containeranalysis.v1beta1.inputs.CVSSArgs;
import com.pulumi.googlenative.containeranalysis.v1beta1.inputs.CVSSv3Args;
import com.pulumi.googlenative.containeranalysis.v1beta1.inputs.DetailArgs;
import com.pulumi.googlenative.containeranalysis.v1beta1.inputs.WindowsDetailArgs;
import java.lang.Double;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Vulnerability provides metadata about a security vulnerability in a Note.
 * 
 */
public final class VulnerabilityArgs extends com.pulumi.resources.ResourceArgs {

    public static final VulnerabilityArgs Empty = new VulnerabilityArgs();

    /**
     * The CVSS score for this vulnerability.
     * 
     */
    @Import(name="cvssScore")
    private @Nullable Output<Double> cvssScore;

    /**
     * @return The CVSS score for this vulnerability.
     * 
     */
    public Optional<Output<Double>> cvssScore() {
        return Optional.ofNullable(this.cvssScore);
    }

    /**
     * The full description of the CVSS for version 2.
     * 
     */
    @Import(name="cvssV2")
    private @Nullable Output<CVSSArgs> cvssV2;

    /**
     * @return The full description of the CVSS for version 2.
     * 
     */
    public Optional<Output<CVSSArgs>> cvssV2() {
        return Optional.ofNullable(this.cvssV2);
    }

    /**
     * The full description of the CVSS for version 3.
     * 
     */
    @Import(name="cvssV3")
    private @Nullable Output<CVSSv3Args> cvssV3;

    /**
     * @return The full description of the CVSS for version 3.
     * 
     */
    public Optional<Output<CVSSv3Args>> cvssV3() {
        return Optional.ofNullable(this.cvssV3);
    }

    /**
     * A list of CWE for this vulnerability. For details, see: https://cwe.mitre.org/index.html
     * 
     */
    @Import(name="cwe")
    private @Nullable Output<List<String>> cwe;

    /**
     * @return A list of CWE for this vulnerability. For details, see: https://cwe.mitre.org/index.html
     * 
     */
    public Optional<Output<List<String>>> cwe() {
        return Optional.ofNullable(this.cwe);
    }

    /**
     * All information about the package to specifically identify this vulnerability. One entry per (version range and cpe_uri) the package vulnerability has manifested in.
     * 
     */
    @Import(name="details")
    private @Nullable Output<List<DetailArgs>> details;

    /**
     * @return All information about the package to specifically identify this vulnerability. One entry per (version range and cpe_uri) the package vulnerability has manifested in.
     * 
     */
    public Optional<Output<List<DetailArgs>>> details() {
        return Optional.ofNullable(this.details);
    }

    /**
     * Note provider assigned impact of the vulnerability.
     * 
     */
    @Import(name="severity")
    private @Nullable Output<VulnerabilitySeverity> severity;

    /**
     * @return Note provider assigned impact of the vulnerability.
     * 
     */
    public Optional<Output<VulnerabilitySeverity>> severity() {
        return Optional.ofNullable(this.severity);
    }

    /**
     * The time this information was last changed at the source. This is an upstream timestamp from the underlying information source - e.g. Ubuntu security tracker.
     * 
     */
    @Import(name="sourceUpdateTime")
    private @Nullable Output<String> sourceUpdateTime;

    /**
     * @return The time this information was last changed at the source. This is an upstream timestamp from the underlying information source - e.g. Ubuntu security tracker.
     * 
     */
    public Optional<Output<String>> sourceUpdateTime() {
        return Optional.ofNullable(this.sourceUpdateTime);
    }

    /**
     * Windows details get their own format because the information format and model don&#39;t match a normal detail. Specifically Windows updates are done as patches, thus Windows vulnerabilities really are a missing package, rather than a package being at an incorrect version.
     * 
     */
    @Import(name="windowsDetails")
    private @Nullable Output<List<WindowsDetailArgs>> windowsDetails;

    /**
     * @return Windows details get their own format because the information format and model don&#39;t match a normal detail. Specifically Windows updates are done as patches, thus Windows vulnerabilities really are a missing package, rather than a package being at an incorrect version.
     * 
     */
    public Optional<Output<List<WindowsDetailArgs>>> windowsDetails() {
        return Optional.ofNullable(this.windowsDetails);
    }

    private VulnerabilityArgs() {}

    private VulnerabilityArgs(VulnerabilityArgs $) {
        this.cvssScore = $.cvssScore;
        this.cvssV2 = $.cvssV2;
        this.cvssV3 = $.cvssV3;
        this.cwe = $.cwe;
        this.details = $.details;
        this.severity = $.severity;
        this.sourceUpdateTime = $.sourceUpdateTime;
        this.windowsDetails = $.windowsDetails;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VulnerabilityArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VulnerabilityArgs $;

        public Builder() {
            $ = new VulnerabilityArgs();
        }

        public Builder(VulnerabilityArgs defaults) {
            $ = new VulnerabilityArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param cvssScore The CVSS score for this vulnerability.
         * 
         * @return builder
         * 
         */
        public Builder cvssScore(@Nullable Output<Double> cvssScore) {
            $.cvssScore = cvssScore;
            return this;
        }

        /**
         * @param cvssScore The CVSS score for this vulnerability.
         * 
         * @return builder
         * 
         */
        public Builder cvssScore(Double cvssScore) {
            return cvssScore(Output.of(cvssScore));
        }

        /**
         * @param cvssV2 The full description of the CVSS for version 2.
         * 
         * @return builder
         * 
         */
        public Builder cvssV2(@Nullable Output<CVSSArgs> cvssV2) {
            $.cvssV2 = cvssV2;
            return this;
        }

        /**
         * @param cvssV2 The full description of the CVSS for version 2.
         * 
         * @return builder
         * 
         */
        public Builder cvssV2(CVSSArgs cvssV2) {
            return cvssV2(Output.of(cvssV2));
        }

        /**
         * @param cvssV3 The full description of the CVSS for version 3.
         * 
         * @return builder
         * 
         */
        public Builder cvssV3(@Nullable Output<CVSSv3Args> cvssV3) {
            $.cvssV3 = cvssV3;
            return this;
        }

        /**
         * @param cvssV3 The full description of the CVSS for version 3.
         * 
         * @return builder
         * 
         */
        public Builder cvssV3(CVSSv3Args cvssV3) {
            return cvssV3(Output.of(cvssV3));
        }

        /**
         * @param cwe A list of CWE for this vulnerability. For details, see: https://cwe.mitre.org/index.html
         * 
         * @return builder
         * 
         */
        public Builder cwe(@Nullable Output<List<String>> cwe) {
            $.cwe = cwe;
            return this;
        }

        /**
         * @param cwe A list of CWE for this vulnerability. For details, see: https://cwe.mitre.org/index.html
         * 
         * @return builder
         * 
         */
        public Builder cwe(List<String> cwe) {
            return cwe(Output.of(cwe));
        }

        /**
         * @param cwe A list of CWE for this vulnerability. For details, see: https://cwe.mitre.org/index.html
         * 
         * @return builder
         * 
         */
        public Builder cwe(String... cwe) {
            return cwe(List.of(cwe));
        }

        /**
         * @param details All information about the package to specifically identify this vulnerability. One entry per (version range and cpe_uri) the package vulnerability has manifested in.
         * 
         * @return builder
         * 
         */
        public Builder details(@Nullable Output<List<DetailArgs>> details) {
            $.details = details;
            return this;
        }

        /**
         * @param details All information about the package to specifically identify this vulnerability. One entry per (version range and cpe_uri) the package vulnerability has manifested in.
         * 
         * @return builder
         * 
         */
        public Builder details(List<DetailArgs> details) {
            return details(Output.of(details));
        }

        /**
         * @param details All information about the package to specifically identify this vulnerability. One entry per (version range and cpe_uri) the package vulnerability has manifested in.
         * 
         * @return builder
         * 
         */
        public Builder details(DetailArgs... details) {
            return details(List.of(details));
        }

        /**
         * @param severity Note provider assigned impact of the vulnerability.
         * 
         * @return builder
         * 
         */
        public Builder severity(@Nullable Output<VulnerabilitySeverity> severity) {
            $.severity = severity;
            return this;
        }

        /**
         * @param severity Note provider assigned impact of the vulnerability.
         * 
         * @return builder
         * 
         */
        public Builder severity(VulnerabilitySeverity severity) {
            return severity(Output.of(severity));
        }

        /**
         * @param sourceUpdateTime The time this information was last changed at the source. This is an upstream timestamp from the underlying information source - e.g. Ubuntu security tracker.
         * 
         * @return builder
         * 
         */
        public Builder sourceUpdateTime(@Nullable Output<String> sourceUpdateTime) {
            $.sourceUpdateTime = sourceUpdateTime;
            return this;
        }

        /**
         * @param sourceUpdateTime The time this information was last changed at the source. This is an upstream timestamp from the underlying information source - e.g. Ubuntu security tracker.
         * 
         * @return builder
         * 
         */
        public Builder sourceUpdateTime(String sourceUpdateTime) {
            return sourceUpdateTime(Output.of(sourceUpdateTime));
        }

        /**
         * @param windowsDetails Windows details get their own format because the information format and model don&#39;t match a normal detail. Specifically Windows updates are done as patches, thus Windows vulnerabilities really are a missing package, rather than a package being at an incorrect version.
         * 
         * @return builder
         * 
         */
        public Builder windowsDetails(@Nullable Output<List<WindowsDetailArgs>> windowsDetails) {
            $.windowsDetails = windowsDetails;
            return this;
        }

        /**
         * @param windowsDetails Windows details get their own format because the information format and model don&#39;t match a normal detail. Specifically Windows updates are done as patches, thus Windows vulnerabilities really are a missing package, rather than a package being at an incorrect version.
         * 
         * @return builder
         * 
         */
        public Builder windowsDetails(List<WindowsDetailArgs> windowsDetails) {
            return windowsDetails(Output.of(windowsDetails));
        }

        /**
         * @param windowsDetails Windows details get their own format because the information format and model don&#39;t match a normal detail. Specifically Windows updates are done as patches, thus Windows vulnerabilities really are a missing package, rather than a package being at an incorrect version.
         * 
         * @return builder
         * 
         */
        public Builder windowsDetails(WindowsDetailArgs... windowsDetails) {
            return windowsDetails(List.of(windowsDetails));
        }

        public VulnerabilityArgs build() {
            return $;
        }
    }

}
