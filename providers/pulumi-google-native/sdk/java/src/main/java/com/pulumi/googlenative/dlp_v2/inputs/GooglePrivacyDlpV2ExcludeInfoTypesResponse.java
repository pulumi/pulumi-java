// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.dlp_v2.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.dlp_v2.inputs.GooglePrivacyDlpV2InfoTypeResponse;
import java.util.List;
import java.util.Objects;


/**
 * List of exclude infoTypes.
 * 
 */
public final class GooglePrivacyDlpV2ExcludeInfoTypesResponse extends com.pulumi.resources.InvokeArgs {

    public static final GooglePrivacyDlpV2ExcludeInfoTypesResponse Empty = new GooglePrivacyDlpV2ExcludeInfoTypesResponse();

    /**
     * InfoType list in ExclusionRule rule drops a finding when it overlaps or contained within with a finding of an infoType from this list. For example, for `InspectionRuleSet.info_types` containing &#34;PHONE_NUMBER&#34;`and`exclusion_rule`containing`exclude_info_types.info_types` with &#34;EMAIL_ADDRESS&#34; the phone number findings are dropped if they overlap with EMAIL_ADDRESS finding. That leads to &#34;555-222-2222@example.org&#34; to generate only a single finding, namely email address.
     * 
     */
    @Import(name="infoTypes", required=true)
    private List<GooglePrivacyDlpV2InfoTypeResponse> infoTypes;

    public List<GooglePrivacyDlpV2InfoTypeResponse> infoTypes() {
        return this.infoTypes;
    }

    private GooglePrivacyDlpV2ExcludeInfoTypesResponse() {}

    private GooglePrivacyDlpV2ExcludeInfoTypesResponse(GooglePrivacyDlpV2ExcludeInfoTypesResponse $) {
        this.infoTypes = $.infoTypes;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GooglePrivacyDlpV2ExcludeInfoTypesResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GooglePrivacyDlpV2ExcludeInfoTypesResponse $;

        public Builder() {
            $ = new GooglePrivacyDlpV2ExcludeInfoTypesResponse();
        }

        public Builder(GooglePrivacyDlpV2ExcludeInfoTypesResponse defaults) {
            $ = new GooglePrivacyDlpV2ExcludeInfoTypesResponse(Objects.requireNonNull(defaults));
        }

        public Builder infoTypes(List<GooglePrivacyDlpV2InfoTypeResponse> infoTypes) {
            $.infoTypes = infoTypes;
            return this;
        }

        public Builder infoTypes(GooglePrivacyDlpV2InfoTypeResponse... infoTypes) {
            return infoTypes(List.of(infoTypes));
        }

        public GooglePrivacyDlpV2ExcludeInfoTypesResponse build() {
            $.infoTypes = Objects.requireNonNull($.infoTypes, "expected parameter 'infoTypes' to be non-null");
            return $;
        }
    }

}
