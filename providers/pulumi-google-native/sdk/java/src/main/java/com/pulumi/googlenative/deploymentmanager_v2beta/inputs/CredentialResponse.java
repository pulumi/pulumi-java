// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.deploymentmanager_v2beta.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.deploymentmanager_v2beta.inputs.BasicAuthResponse;
import com.pulumi.googlenative.deploymentmanager_v2beta.inputs.ServiceAccountResponse;
import java.lang.Boolean;
import java.util.Objects;


/**
 * The credential used by Deployment Manager and TypeProvider. Only one of the options is permitted.
 * 
 */
public final class CredentialResponse extends com.pulumi.resources.InvokeArgs {

    public static final CredentialResponse Empty = new CredentialResponse();

    /**
     * Basic Auth Credential, only used by TypeProvider.
     * 
     */
    @Import(name="basicAuth", required=true)
    private BasicAuthResponse basicAuth;

    public BasicAuthResponse basicAuth() {
        return this.basicAuth;
    }

    /**
     * Service Account Credential, only used by Deployment.
     * 
     */
    @Import(name="serviceAccount", required=true)
    private ServiceAccountResponse serviceAccount;

    public ServiceAccountResponse serviceAccount() {
        return this.serviceAccount;
    }

    /**
     * Specify to use the project default credential, only supported by Deployment.
     * 
     */
    @Import(name="useProjectDefault", required=true)
    private Boolean useProjectDefault;

    public Boolean useProjectDefault() {
        return this.useProjectDefault;
    }

    private CredentialResponse() {}

    private CredentialResponse(CredentialResponse $) {
        this.basicAuth = $.basicAuth;
        this.serviceAccount = $.serviceAccount;
        this.useProjectDefault = $.useProjectDefault;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CredentialResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CredentialResponse $;

        public Builder() {
            $ = new CredentialResponse();
        }

        public Builder(CredentialResponse defaults) {
            $ = new CredentialResponse(Objects.requireNonNull(defaults));
        }

        public Builder basicAuth(BasicAuthResponse basicAuth) {
            $.basicAuth = basicAuth;
            return this;
        }

        public Builder serviceAccount(ServiceAccountResponse serviceAccount) {
            $.serviceAccount = serviceAccount;
            return this;
        }

        public Builder useProjectDefault(Boolean useProjectDefault) {
            $.useProjectDefault = useProjectDefault;
            return this;
        }

        public CredentialResponse build() {
            $.basicAuth = Objects.requireNonNull($.basicAuth, "expected parameter 'basicAuth' to be non-null");
            $.serviceAccount = Objects.requireNonNull($.serviceAccount, "expected parameter 'serviceAccount' to be non-null");
            $.useProjectDefault = Objects.requireNonNull($.useProjectDefault, "expected parameter 'useProjectDefault' to be non-null");
            return $;
        }
    }

}
