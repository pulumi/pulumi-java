// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.cloudsearch.v1;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.cloudsearch.v1.inputs.GSuitePrincipalArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DataSourceArgs extends com.pulumi.resources.ResourceArgs {

    public static final DataSourceArgs Empty = new DataSourceArgs();

    /**
     * If true, sets the datasource to read-only mode. In read-only mode, the Indexing API rejects any requests to index or delete items in this source. Enabling read-only mode does not stop the processing of previously accepted data.
     * 
     */
    @Import(name="disableModifications")
    private @Nullable Output<Boolean> disableModifications;

    /**
     * @return If true, sets the datasource to read-only mode. In read-only mode, the Indexing API rejects any requests to index or delete items in this source. Enabling read-only mode does not stop the processing of previously accepted data.
     * 
     */
    public Optional<Output<Boolean>> disableModifications() {
        return Optional.ofNullable(this.disableModifications);
    }

    /**
     * Disable serving any search or assist results.
     * 
     */
    @Import(name="disableServing")
    private @Nullable Output<Boolean> disableServing;

    /**
     * @return Disable serving any search or assist results.
     * 
     */
    public Optional<Output<Boolean>> disableServing() {
        return Optional.ofNullable(this.disableServing);
    }

    /**
     * Display name of the datasource The maximum length is 300 characters.
     * 
     */
    @Import(name="displayName", required=true)
    private Output<String> displayName;

    /**
     * @return Display name of the datasource The maximum length is 300 characters.
     * 
     */
    public Output<String> displayName() {
        return this.displayName;
    }

    /**
     * List of service accounts that have indexing access.
     * 
     */
    @Import(name="indexingServiceAccounts")
    private @Nullable Output<List<String>> indexingServiceAccounts;

    /**
     * @return List of service accounts that have indexing access.
     * 
     */
    public Optional<Output<List<String>>> indexingServiceAccounts() {
        return Optional.ofNullable(this.indexingServiceAccounts);
    }

    /**
     * This field restricts visibility to items at the datasource level. Items within the datasource are restricted to the union of users and groups included in this field. Note that, this does not ensure access to a specific item, as users need to have ACL permissions on the contained items. This ensures a high level access on the entire datasource, and that the individual items are not shared outside this visibility.
     * 
     */
    @Import(name="itemsVisibility")
    private @Nullable Output<List<GSuitePrincipalArgs>> itemsVisibility;

    /**
     * @return This field restricts visibility to items at the datasource level. Items within the datasource are restricted to the union of users and groups included in this field. Note that, this does not ensure access to a specific item, as users need to have ACL permissions on the contained items. This ensures a high level access on the entire datasource, and that the individual items are not shared outside this visibility.
     * 
     */
    public Optional<Output<List<GSuitePrincipalArgs>>> itemsVisibility() {
        return Optional.ofNullable(this.itemsVisibility);
    }

    /**
     * The name of the datasource resource. Format: datasources/{source_id}. The name is ignored when creating a datasource.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the datasource resource. Format: datasources/{source_id}. The name is ignored when creating a datasource.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * IDs of the Long Running Operations (LROs) currently running for this schema.
     * 
     */
    @Import(name="operationIds")
    private @Nullable Output<List<String>> operationIds;

    /**
     * @return IDs of the Long Running Operations (LROs) currently running for this schema.
     * 
     */
    public Optional<Output<List<String>>> operationIds() {
        return Optional.ofNullable(this.operationIds);
    }

    /**
     * Can a user request to get thumbnail URI for Items indexed in this data source.
     * 
     */
    @Import(name="returnThumbnailUrls")
    private @Nullable Output<Boolean> returnThumbnailUrls;

    /**
     * @return Can a user request to get thumbnail URI for Items indexed in this data source.
     * 
     */
    public Optional<Output<Boolean>> returnThumbnailUrls() {
        return Optional.ofNullable(this.returnThumbnailUrls);
    }

    /**
     * A short name or alias for the source. This value will be used to match the &#39;source&#39; operator. For example, if the short name is *&lt;value&gt;* then queries like *source:&lt;value&gt;* will only return results for this source. The value must be unique across all datasources. The value must only contain alphanumeric characters (a-zA-Z0-9). The value cannot start with &#39;google&#39; and cannot be one of the following: mail, gmail, docs, drive, groups, sites, calendar, hangouts, gplus, keep, people, teams. Its maximum length is 32 characters.
     * 
     */
    @Import(name="shortName")
    private @Nullable Output<String> shortName;

    /**
     * @return A short name or alias for the source. This value will be used to match the &#39;source&#39; operator. For example, if the short name is *&lt;value&gt;* then queries like *source:&lt;value&gt;* will only return results for this source. The value must be unique across all datasources. The value must only contain alphanumeric characters (a-zA-Z0-9). The value cannot start with &#39;google&#39; and cannot be one of the following: mail, gmail, docs, drive, groups, sites, calendar, hangouts, gplus, keep, people, teams. Its maximum length is 32 characters.
     * 
     */
    public Optional<Output<String>> shortName() {
        return Optional.ofNullable(this.shortName);
    }

    private DataSourceArgs() {}

    private DataSourceArgs(DataSourceArgs $) {
        this.disableModifications = $.disableModifications;
        this.disableServing = $.disableServing;
        this.displayName = $.displayName;
        this.indexingServiceAccounts = $.indexingServiceAccounts;
        this.itemsVisibility = $.itemsVisibility;
        this.name = $.name;
        this.operationIds = $.operationIds;
        this.returnThumbnailUrls = $.returnThumbnailUrls;
        this.shortName = $.shortName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DataSourceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DataSourceArgs $;

        public Builder() {
            $ = new DataSourceArgs();
        }

        public Builder(DataSourceArgs defaults) {
            $ = new DataSourceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param disableModifications If true, sets the datasource to read-only mode. In read-only mode, the Indexing API rejects any requests to index or delete items in this source. Enabling read-only mode does not stop the processing of previously accepted data.
         * 
         * @return builder
         * 
         */
        public Builder disableModifications(@Nullable Output<Boolean> disableModifications) {
            $.disableModifications = disableModifications;
            return this;
        }

        /**
         * @param disableModifications If true, sets the datasource to read-only mode. In read-only mode, the Indexing API rejects any requests to index or delete items in this source. Enabling read-only mode does not stop the processing of previously accepted data.
         * 
         * @return builder
         * 
         */
        public Builder disableModifications(Boolean disableModifications) {
            return disableModifications(Output.of(disableModifications));
        }

        /**
         * @param disableServing Disable serving any search or assist results.
         * 
         * @return builder
         * 
         */
        public Builder disableServing(@Nullable Output<Boolean> disableServing) {
            $.disableServing = disableServing;
            return this;
        }

        /**
         * @param disableServing Disable serving any search or assist results.
         * 
         * @return builder
         * 
         */
        public Builder disableServing(Boolean disableServing) {
            return disableServing(Output.of(disableServing));
        }

        /**
         * @param displayName Display name of the datasource The maximum length is 300 characters.
         * 
         * @return builder
         * 
         */
        public Builder displayName(Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName Display name of the datasource The maximum length is 300 characters.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param indexingServiceAccounts List of service accounts that have indexing access.
         * 
         * @return builder
         * 
         */
        public Builder indexingServiceAccounts(@Nullable Output<List<String>> indexingServiceAccounts) {
            $.indexingServiceAccounts = indexingServiceAccounts;
            return this;
        }

        /**
         * @param indexingServiceAccounts List of service accounts that have indexing access.
         * 
         * @return builder
         * 
         */
        public Builder indexingServiceAccounts(List<String> indexingServiceAccounts) {
            return indexingServiceAccounts(Output.of(indexingServiceAccounts));
        }

        /**
         * @param indexingServiceAccounts List of service accounts that have indexing access.
         * 
         * @return builder
         * 
         */
        public Builder indexingServiceAccounts(String... indexingServiceAccounts) {
            return indexingServiceAccounts(List.of(indexingServiceAccounts));
        }

        /**
         * @param itemsVisibility This field restricts visibility to items at the datasource level. Items within the datasource are restricted to the union of users and groups included in this field. Note that, this does not ensure access to a specific item, as users need to have ACL permissions on the contained items. This ensures a high level access on the entire datasource, and that the individual items are not shared outside this visibility.
         * 
         * @return builder
         * 
         */
        public Builder itemsVisibility(@Nullable Output<List<GSuitePrincipalArgs>> itemsVisibility) {
            $.itemsVisibility = itemsVisibility;
            return this;
        }

        /**
         * @param itemsVisibility This field restricts visibility to items at the datasource level. Items within the datasource are restricted to the union of users and groups included in this field. Note that, this does not ensure access to a specific item, as users need to have ACL permissions on the contained items. This ensures a high level access on the entire datasource, and that the individual items are not shared outside this visibility.
         * 
         * @return builder
         * 
         */
        public Builder itemsVisibility(List<GSuitePrincipalArgs> itemsVisibility) {
            return itemsVisibility(Output.of(itemsVisibility));
        }

        /**
         * @param itemsVisibility This field restricts visibility to items at the datasource level. Items within the datasource are restricted to the union of users and groups included in this field. Note that, this does not ensure access to a specific item, as users need to have ACL permissions on the contained items. This ensures a high level access on the entire datasource, and that the individual items are not shared outside this visibility.
         * 
         * @return builder
         * 
         */
        public Builder itemsVisibility(GSuitePrincipalArgs... itemsVisibility) {
            return itemsVisibility(List.of(itemsVisibility));
        }

        /**
         * @param name The name of the datasource resource. Format: datasources/{source_id}. The name is ignored when creating a datasource.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the datasource resource. Format: datasources/{source_id}. The name is ignored when creating a datasource.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param operationIds IDs of the Long Running Operations (LROs) currently running for this schema.
         * 
         * @return builder
         * 
         */
        public Builder operationIds(@Nullable Output<List<String>> operationIds) {
            $.operationIds = operationIds;
            return this;
        }

        /**
         * @param operationIds IDs of the Long Running Operations (LROs) currently running for this schema.
         * 
         * @return builder
         * 
         */
        public Builder operationIds(List<String> operationIds) {
            return operationIds(Output.of(operationIds));
        }

        /**
         * @param operationIds IDs of the Long Running Operations (LROs) currently running for this schema.
         * 
         * @return builder
         * 
         */
        public Builder operationIds(String... operationIds) {
            return operationIds(List.of(operationIds));
        }

        /**
         * @param returnThumbnailUrls Can a user request to get thumbnail URI for Items indexed in this data source.
         * 
         * @return builder
         * 
         */
        public Builder returnThumbnailUrls(@Nullable Output<Boolean> returnThumbnailUrls) {
            $.returnThumbnailUrls = returnThumbnailUrls;
            return this;
        }

        /**
         * @param returnThumbnailUrls Can a user request to get thumbnail URI for Items indexed in this data source.
         * 
         * @return builder
         * 
         */
        public Builder returnThumbnailUrls(Boolean returnThumbnailUrls) {
            return returnThumbnailUrls(Output.of(returnThumbnailUrls));
        }

        /**
         * @param shortName A short name or alias for the source. This value will be used to match the &#39;source&#39; operator. For example, if the short name is *&lt;value&gt;* then queries like *source:&lt;value&gt;* will only return results for this source. The value must be unique across all datasources. The value must only contain alphanumeric characters (a-zA-Z0-9). The value cannot start with &#39;google&#39; and cannot be one of the following: mail, gmail, docs, drive, groups, sites, calendar, hangouts, gplus, keep, people, teams. Its maximum length is 32 characters.
         * 
         * @return builder
         * 
         */
        public Builder shortName(@Nullable Output<String> shortName) {
            $.shortName = shortName;
            return this;
        }

        /**
         * @param shortName A short name or alias for the source. This value will be used to match the &#39;source&#39; operator. For example, if the short name is *&lt;value&gt;* then queries like *source:&lt;value&gt;* will only return results for this source. The value must be unique across all datasources. The value must only contain alphanumeric characters (a-zA-Z0-9). The value cannot start with &#39;google&#39; and cannot be one of the following: mail, gmail, docs, drive, groups, sites, calendar, hangouts, gplus, keep, people, teams. Its maximum length is 32 characters.
         * 
         * @return builder
         * 
         */
        public Builder shortName(String shortName) {
            return shortName(Output.of(shortName));
        }

        public DataSourceArgs build() {
            $.displayName = Objects.requireNonNull($.displayName, "expected parameter 'displayName' to be non-null");
            return $;
        }
    }

}
