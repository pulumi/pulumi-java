// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.datacatalog_v1.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.datacatalog_v1.inputs.GoogleCloudDatacatalogV1CloudSqlBigQueryConnectionSpecResponse;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;


/**
 * Specification for the BigQuery connection.
 * 
 */
public final class GoogleCloudDatacatalogV1BigQueryConnectionSpecResponse extends com.pulumi.resources.InvokeArgs {

    public static final GoogleCloudDatacatalogV1BigQueryConnectionSpecResponse Empty = new GoogleCloudDatacatalogV1BigQueryConnectionSpecResponse();

    /**
     * Specification for the BigQuery connection to a Cloud SQL instance.
     * 
     */
    @Import(name="cloudSql", required=true)
    private GoogleCloudDatacatalogV1CloudSqlBigQueryConnectionSpecResponse cloudSql;

    public GoogleCloudDatacatalogV1CloudSqlBigQueryConnectionSpecResponse cloudSql() {
        return this.cloudSql;
    }

    /**
     * The type of the BigQuery connection.
     * 
     */
    @Import(name="connectionType", required=true)
    private String connectionType;

    public String connectionType() {
        return this.connectionType;
    }

    /**
     * True if there are credentials attached to the BigQuery connection; false otherwise.
     * 
     */
    @Import(name="hasCredential", required=true)
    private Boolean hasCredential;

    public Boolean hasCredential() {
        return this.hasCredential;
    }

    private GoogleCloudDatacatalogV1BigQueryConnectionSpecResponse() {}

    private GoogleCloudDatacatalogV1BigQueryConnectionSpecResponse(GoogleCloudDatacatalogV1BigQueryConnectionSpecResponse $) {
        this.cloudSql = $.cloudSql;
        this.connectionType = $.connectionType;
        this.hasCredential = $.hasCredential;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GoogleCloudDatacatalogV1BigQueryConnectionSpecResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GoogleCloudDatacatalogV1BigQueryConnectionSpecResponse $;

        public Builder() {
            $ = new GoogleCloudDatacatalogV1BigQueryConnectionSpecResponse();
        }

        public Builder(GoogleCloudDatacatalogV1BigQueryConnectionSpecResponse defaults) {
            $ = new GoogleCloudDatacatalogV1BigQueryConnectionSpecResponse(Objects.requireNonNull(defaults));
        }

        public Builder cloudSql(GoogleCloudDatacatalogV1CloudSqlBigQueryConnectionSpecResponse cloudSql) {
            $.cloudSql = cloudSql;
            return this;
        }

        public Builder connectionType(String connectionType) {
            $.connectionType = connectionType;
            return this;
        }

        public Builder hasCredential(Boolean hasCredential) {
            $.hasCredential = hasCredential;
            return this;
        }

        public GoogleCloudDatacatalogV1BigQueryConnectionSpecResponse build() {
            $.cloudSql = Objects.requireNonNull($.cloudSql, "expected parameter 'cloudSql' to be non-null");
            $.connectionType = Objects.requireNonNull($.connectionType, "expected parameter 'connectionType' to be non-null");
            $.hasCredential = Objects.requireNonNull($.hasCredential, "expected parameter 'hasCredential' to be non-null");
            return $;
        }
    }

}
