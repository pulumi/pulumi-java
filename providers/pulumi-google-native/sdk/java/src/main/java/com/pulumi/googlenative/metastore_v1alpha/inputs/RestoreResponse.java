// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.metastore_v1alpha.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * The details of a metadata restore operation.
 * 
 */
public final class RestoreResponse extends com.pulumi.resources.InvokeArgs {

    public static final RestoreResponse Empty = new RestoreResponse();

    /**
     * The relative resource name of the metastore service backup to restore from, in the following form:projects/{project_id}/locations/{location_id}/services/{service_id}/backups/{backup_id}.
     * 
     */
    @Import(name="backup", required=true)
    private String backup;

    /**
     * @return The relative resource name of the metastore service backup to restore from, in the following form:projects/{project_id}/locations/{location_id}/services/{service_id}/backups/{backup_id}.
     * 
     */
    public String backup() {
        return this.backup;
    }

    /**
     * The restore details containing the revision of the service to be restored to, in format of JSON.
     * 
     */
    @Import(name="details", required=true)
    private String details;

    /**
     * @return The restore details containing the revision of the service to be restored to, in format of JSON.
     * 
     */
    public String details() {
        return this.details;
    }

    /**
     * The time when the restore ended.
     * 
     */
    @Import(name="endTime", required=true)
    private String endTime;

    /**
     * @return The time when the restore ended.
     * 
     */
    public String endTime() {
        return this.endTime;
    }

    /**
     * The time when the restore started.
     * 
     */
    @Import(name="startTime", required=true)
    private String startTime;

    /**
     * @return The time when the restore started.
     * 
     */
    public String startTime() {
        return this.startTime;
    }

    /**
     * The current state of the restore.
     * 
     */
    @Import(name="state", required=true)
    private String state;

    /**
     * @return The current state of the restore.
     * 
     */
    public String state() {
        return this.state;
    }

    /**
     * The type of restore.
     * 
     */
    @Import(name="type", required=true)
    private String type;

    /**
     * @return The type of restore.
     * 
     */
    public String type() {
        return this.type;
    }

    private RestoreResponse() {}

    private RestoreResponse(RestoreResponse $) {
        this.backup = $.backup;
        this.details = $.details;
        this.endTime = $.endTime;
        this.startTime = $.startTime;
        this.state = $.state;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RestoreResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RestoreResponse $;

        public Builder() {
            $ = new RestoreResponse();
        }

        public Builder(RestoreResponse defaults) {
            $ = new RestoreResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param backup The relative resource name of the metastore service backup to restore from, in the following form:projects/{project_id}/locations/{location_id}/services/{service_id}/backups/{backup_id}.
         * 
         * @return builder
         * 
         */
        public Builder backup(String backup) {
            $.backup = backup;
            return this;
        }

        /**
         * @param details The restore details containing the revision of the service to be restored to, in format of JSON.
         * 
         * @return builder
         * 
         */
        public Builder details(String details) {
            $.details = details;
            return this;
        }

        /**
         * @param endTime The time when the restore ended.
         * 
         * @return builder
         * 
         */
        public Builder endTime(String endTime) {
            $.endTime = endTime;
            return this;
        }

        /**
         * @param startTime The time when the restore started.
         * 
         * @return builder
         * 
         */
        public Builder startTime(String startTime) {
            $.startTime = startTime;
            return this;
        }

        /**
         * @param state The current state of the restore.
         * 
         * @return builder
         * 
         */
        public Builder state(String state) {
            $.state = state;
            return this;
        }

        /**
         * @param type The type of restore.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            $.type = type;
            return this;
        }

        public RestoreResponse build() {
            $.backup = Objects.requireNonNull($.backup, "expected parameter 'backup' to be non-null");
            $.details = Objects.requireNonNull($.details, "expected parameter 'details' to be non-null");
            $.endTime = Objects.requireNonNull($.endTime, "expected parameter 'endTime' to be non-null");
            $.startTime = Objects.requireNonNull($.startTime, "expected parameter 'startTime' to be non-null");
            $.state = Objects.requireNonNull($.state, "expected parameter 'state' to be non-null");
            $.type = Objects.requireNonNull($.type, "expected parameter 'type' to be non-null");
            return $;
        }
    }

}
