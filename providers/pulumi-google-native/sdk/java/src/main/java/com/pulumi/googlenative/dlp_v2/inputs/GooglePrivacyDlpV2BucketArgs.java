// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.dlp_v2.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.dlp_v2.inputs.GooglePrivacyDlpV2ValueArgs;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Bucket is represented as a range, along with replacement values.
 * 
 */
public final class GooglePrivacyDlpV2BucketArgs extends com.pulumi.resources.ResourceArgs {

    public static final GooglePrivacyDlpV2BucketArgs Empty = new GooglePrivacyDlpV2BucketArgs();

    /**
     * Upper bound of the range, exclusive; type must match min.
     * 
     */
    @Import(name="max")
    private @Nullable Output<GooglePrivacyDlpV2ValueArgs> max;

    public Optional<Output<GooglePrivacyDlpV2ValueArgs>> max() {
        return Optional.ofNullable(this.max);
    }

    /**
     * Lower bound of the range, inclusive. Type should be the same as max if used.
     * 
     */
    @Import(name="min")
    private @Nullable Output<GooglePrivacyDlpV2ValueArgs> min;

    public Optional<Output<GooglePrivacyDlpV2ValueArgs>> min() {
        return Optional.ofNullable(this.min);
    }

    /**
     * Replacement value for this bucket.
     * 
     */
    @Import(name="replacementValue", required=true)
    private Output<GooglePrivacyDlpV2ValueArgs> replacementValue;

    public Output<GooglePrivacyDlpV2ValueArgs> replacementValue() {
        return this.replacementValue;
    }

    private GooglePrivacyDlpV2BucketArgs() {}

    private GooglePrivacyDlpV2BucketArgs(GooglePrivacyDlpV2BucketArgs $) {
        this.max = $.max;
        this.min = $.min;
        this.replacementValue = $.replacementValue;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GooglePrivacyDlpV2BucketArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GooglePrivacyDlpV2BucketArgs $;

        public Builder() {
            $ = new GooglePrivacyDlpV2BucketArgs();
        }

        public Builder(GooglePrivacyDlpV2BucketArgs defaults) {
            $ = new GooglePrivacyDlpV2BucketArgs(Objects.requireNonNull(defaults));
        }

        public Builder max(@Nullable Output<GooglePrivacyDlpV2ValueArgs> max) {
            $.max = max;
            return this;
        }

        public Builder max(GooglePrivacyDlpV2ValueArgs max) {
            return max(Output.of(max));
        }

        public Builder min(@Nullable Output<GooglePrivacyDlpV2ValueArgs> min) {
            $.min = min;
            return this;
        }

        public Builder min(GooglePrivacyDlpV2ValueArgs min) {
            return min(Output.of(min));
        }

        public Builder replacementValue(Output<GooglePrivacyDlpV2ValueArgs> replacementValue) {
            $.replacementValue = replacementValue;
            return this;
        }

        public Builder replacementValue(GooglePrivacyDlpV2ValueArgs replacementValue) {
            return replacementValue(Output.of(replacementValue));
        }

        public GooglePrivacyDlpV2BucketArgs build() {
            $.replacementValue = Objects.requireNonNull($.replacementValue, "expected parameter 'replacementValue' to be non-null");
            return $;
        }
    }

}
