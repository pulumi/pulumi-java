// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.dialogflow_v2beta1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import com.pulumi.googlenative.dialogflow_v2beta1.enums.GoogleCloudDialogflowV2beta1NotificationConfigMessageFormat;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Defines notification behavior.
 * 
 */
public final class GoogleCloudDialogflowV2beta1NotificationConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final GoogleCloudDialogflowV2beta1NotificationConfigArgs Empty = new GoogleCloudDialogflowV2beta1NotificationConfigArgs();

    /**
     * Format of message.
     * 
     */
    @Import(name="messageFormat")
      private final @Nullable Output<GoogleCloudDialogflowV2beta1NotificationConfigMessageFormat> messageFormat;

    public Output<GoogleCloudDialogflowV2beta1NotificationConfigMessageFormat> messageFormat() {
        return this.messageFormat == null ? Codegen.empty() : this.messageFormat;
    }

    /**
     * Name of the Pub/Sub topic to publish conversation events like CONVERSATION_STARTED as serialized ConversationEvent protos. Notification works for phone calls, if this topic either is in the same project as the conversation or you grant `service-@gcp-sa-dialogflow.iam.gserviceaccount.com` the `Dialogflow Service Agent` role in the topic project. Format: `projects//locations//topics/`.
     * 
     */
    @Import(name="topic")
      private final @Nullable Output<String> topic;

    public Output<String> topic() {
        return this.topic == null ? Codegen.empty() : this.topic;
    }

    public GoogleCloudDialogflowV2beta1NotificationConfigArgs(
        @Nullable Output<GoogleCloudDialogflowV2beta1NotificationConfigMessageFormat> messageFormat,
        @Nullable Output<String> topic) {
        this.messageFormat = messageFormat;
        this.topic = topic;
    }

    private GoogleCloudDialogflowV2beta1NotificationConfigArgs() {
        this.messageFormat = Codegen.empty();
        this.topic = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GoogleCloudDialogflowV2beta1NotificationConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<GoogleCloudDialogflowV2beta1NotificationConfigMessageFormat> messageFormat;
        private @Nullable Output<String> topic;

        public Builder() {
    	      // Empty
        }

        public Builder(GoogleCloudDialogflowV2beta1NotificationConfigArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.messageFormat = defaults.messageFormat;
    	      this.topic = defaults.topic;
        }

        public Builder messageFormat(@Nullable Output<GoogleCloudDialogflowV2beta1NotificationConfigMessageFormat> messageFormat) {
            this.messageFormat = messageFormat;
            return this;
        }
        public Builder messageFormat(@Nullable GoogleCloudDialogflowV2beta1NotificationConfigMessageFormat messageFormat) {
            this.messageFormat = Codegen.ofNullable(messageFormat);
            return this;
        }
        public Builder topic(@Nullable Output<String> topic) {
            this.topic = topic;
            return this;
        }
        public Builder topic(@Nullable String topic) {
            this.topic = Codegen.ofNullable(topic);
            return this;
        }        public GoogleCloudDialogflowV2beta1NotificationConfigArgs build() {
            return new GoogleCloudDialogflowV2beta1NotificationConfigArgs(messageFormat, topic);
        }
    }
}
