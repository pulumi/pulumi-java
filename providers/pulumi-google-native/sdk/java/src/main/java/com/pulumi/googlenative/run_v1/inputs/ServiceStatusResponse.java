// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.run_v1.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.run_v1.inputs.AddressableResponse;
import com.pulumi.googlenative.run_v1.inputs.GoogleCloudRunV1ConditionResponse;
import com.pulumi.googlenative.run_v1.inputs.TrafficTargetResponse;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;


/**
 * The current state of the Service. Output only.
 * 
 */
public final class ServiceStatusResponse extends com.pulumi.resources.InvokeArgs {

    public static final ServiceStatusResponse Empty = new ServiceStatusResponse();

    /**
     * From RouteStatus. Similar to url, information on where the service is available on HTTP.
     * 
     */
    @Import(name="address", required=true)
    private AddressableResponse address;

    public AddressableResponse address() {
        return this.address;
    }

    /**
     * Conditions communicates information about ongoing/complete reconciliation processes that bring the &#34;spec&#34; inline with the observed state of the world. Service-specific conditions include: * &#34;ConfigurationsReady&#34;: true when the underlying Configuration is ready. * &#34;RoutesReady&#34;: true when the underlying Route is ready. * &#34;Ready&#34;: true when both the underlying Route and Configuration are ready.
     * 
     */
    @Import(name="conditions", required=true)
    private List<GoogleCloudRunV1ConditionResponse> conditions;

    public List<GoogleCloudRunV1ConditionResponse> conditions() {
        return this.conditions;
    }

    /**
     * From ConfigurationStatus. LatestCreatedRevisionName is the last revision that was created from this Service&#39;s Configuration. It might not be ready yet, for that use LatestReadyRevisionName.
     * 
     */
    @Import(name="latestCreatedRevisionName", required=true)
    private String latestCreatedRevisionName;

    public String latestCreatedRevisionName() {
        return this.latestCreatedRevisionName;
    }

    /**
     * From ConfigurationStatus. LatestReadyRevisionName holds the name of the latest Revision stamped out from this Service&#39;s Configuration that has had its &#34;Ready&#34; condition become &#34;True&#34;.
     * 
     */
    @Import(name="latestReadyRevisionName", required=true)
    private String latestReadyRevisionName;

    public String latestReadyRevisionName() {
        return this.latestReadyRevisionName;
    }

    /**
     * ObservedGeneration is the &#39;Generation&#39; of the Route that was last processed by the controller. Clients polling for completed reconciliation should poll until observedGeneration = metadata.generation and the Ready condition&#39;s status is True or False.
     * 
     */
    @Import(name="observedGeneration", required=true)
    private Integer observedGeneration;

    public Integer observedGeneration() {
        return this.observedGeneration;
    }

    /**
     * From RouteStatus. Traffic holds the configured traffic distribution. These entries will always contain RevisionName references. When ConfigurationName appears in the spec, this will hold the LatestReadyRevisionName that we last observed.
     * 
     */
    @Import(name="traffic", required=true)
    private List<TrafficTargetResponse> traffic;

    public List<TrafficTargetResponse> traffic() {
        return this.traffic;
    }

    /**
     * From RouteStatus. URL holds the url that will distribute traffic over the provided traffic targets. It generally has the form https://{route-hash}-{project-hash}-{cluster-level-suffix}.a.run.app
     * 
     */
    @Import(name="url", required=true)
    private String url;

    public String url() {
        return this.url;
    }

    private ServiceStatusResponse() {}

    private ServiceStatusResponse(ServiceStatusResponse $) {
        this.address = $.address;
        this.conditions = $.conditions;
        this.latestCreatedRevisionName = $.latestCreatedRevisionName;
        this.latestReadyRevisionName = $.latestReadyRevisionName;
        this.observedGeneration = $.observedGeneration;
        this.traffic = $.traffic;
        this.url = $.url;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServiceStatusResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServiceStatusResponse $;

        public Builder() {
            $ = new ServiceStatusResponse();
        }

        public Builder(ServiceStatusResponse defaults) {
            $ = new ServiceStatusResponse(Objects.requireNonNull(defaults));
        }

        public Builder address(AddressableResponse address) {
            $.address = address;
            return this;
        }

        public Builder conditions(List<GoogleCloudRunV1ConditionResponse> conditions) {
            $.conditions = conditions;
            return this;
        }

        public Builder conditions(GoogleCloudRunV1ConditionResponse... conditions) {
            return conditions(List.of(conditions));
        }

        public Builder latestCreatedRevisionName(String latestCreatedRevisionName) {
            $.latestCreatedRevisionName = latestCreatedRevisionName;
            return this;
        }

        public Builder latestReadyRevisionName(String latestReadyRevisionName) {
            $.latestReadyRevisionName = latestReadyRevisionName;
            return this;
        }

        public Builder observedGeneration(Integer observedGeneration) {
            $.observedGeneration = observedGeneration;
            return this;
        }

        public Builder traffic(List<TrafficTargetResponse> traffic) {
            $.traffic = traffic;
            return this;
        }

        public Builder traffic(TrafficTargetResponse... traffic) {
            return traffic(List.of(traffic));
        }

        public Builder url(String url) {
            $.url = url;
            return this;
        }

        public ServiceStatusResponse build() {
            $.address = Objects.requireNonNull($.address, "expected parameter 'address' to be non-null");
            $.conditions = Objects.requireNonNull($.conditions, "expected parameter 'conditions' to be non-null");
            $.latestCreatedRevisionName = Objects.requireNonNull($.latestCreatedRevisionName, "expected parameter 'latestCreatedRevisionName' to be non-null");
            $.latestReadyRevisionName = Objects.requireNonNull($.latestReadyRevisionName, "expected parameter 'latestReadyRevisionName' to be non-null");
            $.observedGeneration = Objects.requireNonNull($.observedGeneration, "expected parameter 'observedGeneration' to be non-null");
            $.traffic = Objects.requireNonNull($.traffic, "expected parameter 'traffic' to be non-null");
            $.url = Objects.requireNonNull($.url, "expected parameter 'url' to be non-null");
            return $;
        }
    }

}
