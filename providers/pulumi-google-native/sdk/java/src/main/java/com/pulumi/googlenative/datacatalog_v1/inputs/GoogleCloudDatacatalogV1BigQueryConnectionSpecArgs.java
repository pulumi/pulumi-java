// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.datacatalog_v1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.datacatalog_v1.enums.GoogleCloudDatacatalogV1BigQueryConnectionSpecConnectionType;
import com.pulumi.googlenative.datacatalog_v1.inputs.GoogleCloudDatacatalogV1CloudSqlBigQueryConnectionSpecArgs;
import java.lang.Boolean;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Specification for the BigQuery connection.
 * 
 */
public final class GoogleCloudDatacatalogV1BigQueryConnectionSpecArgs extends com.pulumi.resources.ResourceArgs {

    public static final GoogleCloudDatacatalogV1BigQueryConnectionSpecArgs Empty = new GoogleCloudDatacatalogV1BigQueryConnectionSpecArgs();

    /**
     * Specification for the BigQuery connection to a Cloud SQL instance.
     * 
     */
    @Import(name="cloudSql")
    private @Nullable Output<GoogleCloudDatacatalogV1CloudSqlBigQueryConnectionSpecArgs> cloudSql;

    public Optional<Output<GoogleCloudDatacatalogV1CloudSqlBigQueryConnectionSpecArgs>> cloudSql() {
        return Optional.ofNullable(this.cloudSql);
    }

    /**
     * The type of the BigQuery connection.
     * 
     */
    @Import(name="connectionType")
    private @Nullable Output<GoogleCloudDatacatalogV1BigQueryConnectionSpecConnectionType> connectionType;

    public Optional<Output<GoogleCloudDatacatalogV1BigQueryConnectionSpecConnectionType>> connectionType() {
        return Optional.ofNullable(this.connectionType);
    }

    /**
     * True if there are credentials attached to the BigQuery connection; false otherwise.
     * 
     */
    @Import(name="hasCredential")
    private @Nullable Output<Boolean> hasCredential;

    public Optional<Output<Boolean>> hasCredential() {
        return Optional.ofNullable(this.hasCredential);
    }

    private GoogleCloudDatacatalogV1BigQueryConnectionSpecArgs() {}

    private GoogleCloudDatacatalogV1BigQueryConnectionSpecArgs(GoogleCloudDatacatalogV1BigQueryConnectionSpecArgs $) {
        this.cloudSql = $.cloudSql;
        this.connectionType = $.connectionType;
        this.hasCredential = $.hasCredential;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GoogleCloudDatacatalogV1BigQueryConnectionSpecArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GoogleCloudDatacatalogV1BigQueryConnectionSpecArgs $;

        public Builder() {
            $ = new GoogleCloudDatacatalogV1BigQueryConnectionSpecArgs();
        }

        public Builder(GoogleCloudDatacatalogV1BigQueryConnectionSpecArgs defaults) {
            $ = new GoogleCloudDatacatalogV1BigQueryConnectionSpecArgs(Objects.requireNonNull(defaults));
        }

        public Builder cloudSql(@Nullable Output<GoogleCloudDatacatalogV1CloudSqlBigQueryConnectionSpecArgs> cloudSql) {
            $.cloudSql = cloudSql;
            return this;
        }

        public Builder cloudSql(GoogleCloudDatacatalogV1CloudSqlBigQueryConnectionSpecArgs cloudSql) {
            return cloudSql(Output.of(cloudSql));
        }

        public Builder connectionType(@Nullable Output<GoogleCloudDatacatalogV1BigQueryConnectionSpecConnectionType> connectionType) {
            $.connectionType = connectionType;
            return this;
        }

        public Builder connectionType(GoogleCloudDatacatalogV1BigQueryConnectionSpecConnectionType connectionType) {
            return connectionType(Output.of(connectionType));
        }

        public Builder hasCredential(@Nullable Output<Boolean> hasCredential) {
            $.hasCredential = hasCredential;
            return this;
        }

        public Builder hasCredential(Boolean hasCredential) {
            return hasCredential(Output.of(hasCredential));
        }

        public GoogleCloudDatacatalogV1BigQueryConnectionSpecArgs build() {
            return $;
        }
    }

}
