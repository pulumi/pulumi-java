// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.composer_v1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import com.pulumi.googlenative.composer_v1.inputs.SchedulerResourceArgs;
import com.pulumi.googlenative.composer_v1.inputs.WebServerResourceArgs;
import com.pulumi.googlenative.composer_v1.inputs.WorkerResourceArgs;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * The Kubernetes workloads configuration for GKE cluster associated with the Cloud Composer environment. Supported for Cloud Composer environments in versions composer-2.*.*-airflow-*.*.* and newer.
 * 
 */
public final class WorkloadsConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final WorkloadsConfigArgs Empty = new WorkloadsConfigArgs();

    /**
     * Optional. Resources used by Airflow schedulers.
     * 
     */
    @Import(name="scheduler")
      private final @Nullable Output<SchedulerResourceArgs> scheduler;

    public Output<SchedulerResourceArgs> scheduler() {
        return this.scheduler == null ? Codegen.empty() : this.scheduler;
    }

    /**
     * Optional. Resources used by Airflow web server.
     * 
     */
    @Import(name="webServer")
      private final @Nullable Output<WebServerResourceArgs> webServer;

    public Output<WebServerResourceArgs> webServer() {
        return this.webServer == null ? Codegen.empty() : this.webServer;
    }

    /**
     * Optional. Resources used by Airflow workers.
     * 
     */
    @Import(name="worker")
      private final @Nullable Output<WorkerResourceArgs> worker;

    public Output<WorkerResourceArgs> worker() {
        return this.worker == null ? Codegen.empty() : this.worker;
    }

    public WorkloadsConfigArgs(
        @Nullable Output<SchedulerResourceArgs> scheduler,
        @Nullable Output<WebServerResourceArgs> webServer,
        @Nullable Output<WorkerResourceArgs> worker) {
        this.scheduler = scheduler;
        this.webServer = webServer;
        this.worker = worker;
    }

    private WorkloadsConfigArgs() {
        this.scheduler = Codegen.empty();
        this.webServer = Codegen.empty();
        this.worker = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(WorkloadsConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<SchedulerResourceArgs> scheduler;
        private @Nullable Output<WebServerResourceArgs> webServer;
        private @Nullable Output<WorkerResourceArgs> worker;

        public Builder() {
    	      // Empty
        }

        public Builder(WorkloadsConfigArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.scheduler = defaults.scheduler;
    	      this.webServer = defaults.webServer;
    	      this.worker = defaults.worker;
        }

        public Builder scheduler(@Nullable Output<SchedulerResourceArgs> scheduler) {
            this.scheduler = scheduler;
            return this;
        }
        public Builder scheduler(@Nullable SchedulerResourceArgs scheduler) {
            this.scheduler = Codegen.ofNullable(scheduler);
            return this;
        }
        public Builder webServer(@Nullable Output<WebServerResourceArgs> webServer) {
            this.webServer = webServer;
            return this;
        }
        public Builder webServer(@Nullable WebServerResourceArgs webServer) {
            this.webServer = Codegen.ofNullable(webServer);
            return this;
        }
        public Builder worker(@Nullable Output<WorkerResourceArgs> worker) {
            this.worker = worker;
            return this;
        }
        public Builder worker(@Nullable WorkerResourceArgs worker) {
            this.worker = Codegen.ofNullable(worker);
            return this;
        }        public WorkloadsConfigArgs build() {
            return new WorkloadsConfigArgs(scheduler, webServer, worker);
        }
    }
}
