// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.apigee_v1.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.apigee_v1.inputs.GoogleCloudApigeeV1CertInfoResponse;
import java.util.List;
import java.util.Objects;


public final class GoogleCloudApigeeV1CertificateResponse extends com.pulumi.resources.InvokeArgs {

    public static final GoogleCloudApigeeV1CertificateResponse Empty = new GoogleCloudApigeeV1CertificateResponse();

    /**
     * Chain of certificates under this name.
     * 
     */
    @Import(name="certInfo", required=true)
    private List<GoogleCloudApigeeV1CertInfoResponse> certInfo;

    public List<GoogleCloudApigeeV1CertInfoResponse> certInfo() {
        return this.certInfo;
    }

    private GoogleCloudApigeeV1CertificateResponse() {}

    private GoogleCloudApigeeV1CertificateResponse(GoogleCloudApigeeV1CertificateResponse $) {
        this.certInfo = $.certInfo;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GoogleCloudApigeeV1CertificateResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GoogleCloudApigeeV1CertificateResponse $;

        public Builder() {
            $ = new GoogleCloudApigeeV1CertificateResponse();
        }

        public Builder(GoogleCloudApigeeV1CertificateResponse defaults) {
            $ = new GoogleCloudApigeeV1CertificateResponse(Objects.requireNonNull(defaults));
        }

        public Builder certInfo(List<GoogleCloudApigeeV1CertInfoResponse> certInfo) {
            $.certInfo = certInfo;
            return this;
        }

        public Builder certInfo(GoogleCloudApigeeV1CertInfoResponse... certInfo) {
            return certInfo(List.of(certInfo));
        }

        public GoogleCloudApigeeV1CertificateResponse build() {
            $.certInfo = Objects.requireNonNull($.certInfo, "expected parameter 'certInfo' to be non-null");
            return $;
        }
    }

}
