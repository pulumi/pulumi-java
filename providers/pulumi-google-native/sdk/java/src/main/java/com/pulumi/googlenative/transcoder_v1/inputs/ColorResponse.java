// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.transcoder_v1.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Double;
import java.util.Objects;


/**
 * Color preprocessing configuration.
 * 
 */
public final class ColorResponse extends com.pulumi.resources.InvokeArgs {

    public static final ColorResponse Empty = new ColorResponse();

    /**
     * Control brightness of the video. Enter a value between -1 and 1, where -1 is minimum brightness and 1 is maximum brightness. 0 is no change. The default is 0.
     * 
     */
    @Import(name="brightness", required=true)
    private Double brightness;

    /**
     * @return Control brightness of the video. Enter a value between -1 and 1, where -1 is minimum brightness and 1 is maximum brightness. 0 is no change. The default is 0.
     * 
     */
    public Double brightness() {
        return this.brightness;
    }

    /**
     * Control black and white contrast of the video. Enter a value between -1 and 1, where -1 is minimum contrast and 1 is maximum contrast. 0 is no change. The default is 0.
     * 
     */
    @Import(name="contrast", required=true)
    private Double contrast;

    /**
     * @return Control black and white contrast of the video. Enter a value between -1 and 1, where -1 is minimum contrast and 1 is maximum contrast. 0 is no change. The default is 0.
     * 
     */
    public Double contrast() {
        return this.contrast;
    }

    /**
     * Control color saturation of the video. Enter a value between -1 and 1, where -1 is fully desaturated and 1 is maximum saturation. 0 is no change. The default is 0.
     * 
     */
    @Import(name="saturation", required=true)
    private Double saturation;

    /**
     * @return Control color saturation of the video. Enter a value between -1 and 1, where -1 is fully desaturated and 1 is maximum saturation. 0 is no change. The default is 0.
     * 
     */
    public Double saturation() {
        return this.saturation;
    }

    private ColorResponse() {}

    private ColorResponse(ColorResponse $) {
        this.brightness = $.brightness;
        this.contrast = $.contrast;
        this.saturation = $.saturation;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ColorResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ColorResponse $;

        public Builder() {
            $ = new ColorResponse();
        }

        public Builder(ColorResponse defaults) {
            $ = new ColorResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param brightness Control brightness of the video. Enter a value between -1 and 1, where -1 is minimum brightness and 1 is maximum brightness. 0 is no change. The default is 0.
         * 
         * @return builder
         * 
         */
        public Builder brightness(Double brightness) {
            $.brightness = brightness;
            return this;
        }

        /**
         * @param contrast Control black and white contrast of the video. Enter a value between -1 and 1, where -1 is minimum contrast and 1 is maximum contrast. 0 is no change. The default is 0.
         * 
         * @return builder
         * 
         */
        public Builder contrast(Double contrast) {
            $.contrast = contrast;
            return this;
        }

        /**
         * @param saturation Control color saturation of the video. Enter a value between -1 and 1, where -1 is fully desaturated and 1 is maximum saturation. 0 is no change. The default is 0.
         * 
         * @return builder
         * 
         */
        public Builder saturation(Double saturation) {
            $.saturation = saturation;
            return this;
        }

        public ColorResponse build() {
            $.brightness = Objects.requireNonNull($.brightness, "expected parameter 'brightness' to be non-null");
            $.contrast = Objects.requireNonNull($.contrast, "expected parameter 'contrast' to be non-null");
            $.saturation = Objects.requireNonNull($.saturation, "expected parameter 'saturation' to be non-null");
            return $;
        }
    }

}
