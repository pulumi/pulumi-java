// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.compute_beta.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.compute_beta.inputs.SecurityPolicyRuleMatcherConfigLayer4ConfigResponse;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class SecurityPolicyRuleMatcherConfigResponse extends com.pulumi.resources.InvokeArgs {

    public static final SecurityPolicyRuleMatcherConfigResponse Empty = new SecurityPolicyRuleMatcherConfigResponse();

    /**
     * CIDR IP address range. This field may only be specified when versioned_expr is set to FIREWALL.
     * 
     */
    @Import(name="destIpRanges", required=true)
    private List<String> destIpRanges;

    /**
     * @return CIDR IP address range. This field may only be specified when versioned_expr is set to FIREWALL.
     * 
     */
    public List<String> destIpRanges() {
        return this.destIpRanges;
    }

    /**
     * Pairs of IP protocols and ports that the rule should match. This field may only be specified when versioned_expr is set to FIREWALL.
     * 
     */
    @Import(name="layer4Configs", required=true)
    private List<SecurityPolicyRuleMatcherConfigLayer4ConfigResponse> layer4Configs;

    /**
     * @return Pairs of IP protocols and ports that the rule should match. This field may only be specified when versioned_expr is set to FIREWALL.
     * 
     */
    public List<SecurityPolicyRuleMatcherConfigLayer4ConfigResponse> layer4Configs() {
        return this.layer4Configs;
    }

    /**
     * CIDR IP address range. Maximum number of src_ip_ranges allowed is 10.
     * 
     */
    @Import(name="srcIpRanges", required=true)
    private List<String> srcIpRanges;

    /**
     * @return CIDR IP address range. Maximum number of src_ip_ranges allowed is 10.
     * 
     */
    public List<String> srcIpRanges() {
        return this.srcIpRanges;
    }

    private SecurityPolicyRuleMatcherConfigResponse() {}

    private SecurityPolicyRuleMatcherConfigResponse(SecurityPolicyRuleMatcherConfigResponse $) {
        this.destIpRanges = $.destIpRanges;
        this.layer4Configs = $.layer4Configs;
        this.srcIpRanges = $.srcIpRanges;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SecurityPolicyRuleMatcherConfigResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SecurityPolicyRuleMatcherConfigResponse $;

        public Builder() {
            $ = new SecurityPolicyRuleMatcherConfigResponse();
        }

        public Builder(SecurityPolicyRuleMatcherConfigResponse defaults) {
            $ = new SecurityPolicyRuleMatcherConfigResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param destIpRanges CIDR IP address range. This field may only be specified when versioned_expr is set to FIREWALL.
         * 
         * @return builder
         * 
         */
        public Builder destIpRanges(List<String> destIpRanges) {
            $.destIpRanges = destIpRanges;
            return this;
        }

        /**
         * @param destIpRanges CIDR IP address range. This field may only be specified when versioned_expr is set to FIREWALL.
         * 
         * @return builder
         * 
         */
        public Builder destIpRanges(String... destIpRanges) {
            return destIpRanges(List.of(destIpRanges));
        }

        /**
         * @param layer4Configs Pairs of IP protocols and ports that the rule should match. This field may only be specified when versioned_expr is set to FIREWALL.
         * 
         * @return builder
         * 
         */
        public Builder layer4Configs(List<SecurityPolicyRuleMatcherConfigLayer4ConfigResponse> layer4Configs) {
            $.layer4Configs = layer4Configs;
            return this;
        }

        /**
         * @param layer4Configs Pairs of IP protocols and ports that the rule should match. This field may only be specified when versioned_expr is set to FIREWALL.
         * 
         * @return builder
         * 
         */
        public Builder layer4Configs(SecurityPolicyRuleMatcherConfigLayer4ConfigResponse... layer4Configs) {
            return layer4Configs(List.of(layer4Configs));
        }

        /**
         * @param srcIpRanges CIDR IP address range. Maximum number of src_ip_ranges allowed is 10.
         * 
         * @return builder
         * 
         */
        public Builder srcIpRanges(List<String> srcIpRanges) {
            $.srcIpRanges = srcIpRanges;
            return this;
        }

        /**
         * @param srcIpRanges CIDR IP address range. Maximum number of src_ip_ranges allowed is 10.
         * 
         * @return builder
         * 
         */
        public Builder srcIpRanges(String... srcIpRanges) {
            return srcIpRanges(List.of(srcIpRanges));
        }

        public SecurityPolicyRuleMatcherConfigResponse build() {
            $.destIpRanges = Objects.requireNonNull($.destIpRanges, "expected parameter 'destIpRanges' to be non-null");
            $.layer4Configs = Objects.requireNonNull($.layer4Configs, "expected parameter 'layer4Configs' to be non-null");
            $.srcIpRanges = Objects.requireNonNull($.srcIpRanges, "expected parameter 'srcIpRanges' to be non-null");
            return $;
        }
    }

}
