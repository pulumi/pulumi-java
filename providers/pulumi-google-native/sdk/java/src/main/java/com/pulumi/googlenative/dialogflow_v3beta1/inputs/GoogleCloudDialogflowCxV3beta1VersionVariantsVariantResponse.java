// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.dialogflow_v3beta1.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;


/**
 * A single flow version with specified traffic allocation.
 * 
 */
public final class GoogleCloudDialogflowCxV3beta1VersionVariantsVariantResponse extends com.pulumi.resources.InvokeArgs {

    public static final GoogleCloudDialogflowCxV3beta1VersionVariantsVariantResponse Empty = new GoogleCloudDialogflowCxV3beta1VersionVariantsVariantResponse();

    /**
     * Whether the variant is for the control group.
     * 
     */
    @Import(name="isControlGroup", required=true)
    private Boolean isControlGroup;

    /**
     * @return Whether the variant is for the control group.
     * 
     */
    public Boolean isControlGroup() {
        return this.isControlGroup;
    }

    /**
     * Percentage of the traffic which should be routed to this version of flow. Traffic allocation for a single flow must sum up to 1.0.
     * 
     */
    @Import(name="trafficAllocation", required=true)
    private Double trafficAllocation;

    /**
     * @return Percentage of the traffic which should be routed to this version of flow. Traffic allocation for a single flow must sum up to 1.0.
     * 
     */
    public Double trafficAllocation() {
        return this.trafficAllocation;
    }

    /**
     * The name of the flow version. Format: `projects//locations//agents//flows//versions/`.
     * 
     */
    @Import(name="version", required=true)
    private String version;

    /**
     * @return The name of the flow version. Format: `projects//locations//agents//flows//versions/`.
     * 
     */
    public String version() {
        return this.version;
    }

    private GoogleCloudDialogflowCxV3beta1VersionVariantsVariantResponse() {}

    private GoogleCloudDialogflowCxV3beta1VersionVariantsVariantResponse(GoogleCloudDialogflowCxV3beta1VersionVariantsVariantResponse $) {
        this.isControlGroup = $.isControlGroup;
        this.trafficAllocation = $.trafficAllocation;
        this.version = $.version;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GoogleCloudDialogflowCxV3beta1VersionVariantsVariantResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GoogleCloudDialogflowCxV3beta1VersionVariantsVariantResponse $;

        public Builder() {
            $ = new GoogleCloudDialogflowCxV3beta1VersionVariantsVariantResponse();
        }

        public Builder(GoogleCloudDialogflowCxV3beta1VersionVariantsVariantResponse defaults) {
            $ = new GoogleCloudDialogflowCxV3beta1VersionVariantsVariantResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param isControlGroup Whether the variant is for the control group.
         * 
         * @return builder
         * 
         */
        public Builder isControlGroup(Boolean isControlGroup) {
            $.isControlGroup = isControlGroup;
            return this;
        }

        /**
         * @param trafficAllocation Percentage of the traffic which should be routed to this version of flow. Traffic allocation for a single flow must sum up to 1.0.
         * 
         * @return builder
         * 
         */
        public Builder trafficAllocation(Double trafficAllocation) {
            $.trafficAllocation = trafficAllocation;
            return this;
        }

        /**
         * @param version The name of the flow version. Format: `projects//locations//agents//flows//versions/`.
         * 
         * @return builder
         * 
         */
        public Builder version(String version) {
            $.version = version;
            return this;
        }

        public GoogleCloudDialogflowCxV3beta1VersionVariantsVariantResponse build() {
            $.isControlGroup = Objects.requireNonNull($.isControlGroup, "expected parameter 'isControlGroup' to be non-null");
            $.trafficAllocation = Objects.requireNonNull($.trafficAllocation, "expected parameter 'trafficAllocation' to be non-null");
            $.version = Objects.requireNonNull($.version, "expected parameter 'version' to be non-null");
            return $;
        }
    }

}
