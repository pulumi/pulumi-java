// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.clouddeploy.v1;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.googlenative.Utilities;
import com.pulumi.googlenative.clouddeploy.v1.ReleaseArgs;
import com.pulumi.googlenative.clouddeploy.v1.outputs.BuildArtifactResponse;
import com.pulumi.googlenative.clouddeploy.v1.outputs.DeliveryPipelineResponse;
import com.pulumi.googlenative.clouddeploy.v1.outputs.TargetResponse;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Creates a new Release in a given project and location.
 * Auto-naming is currently not supported for this resource.
 * Note - this resource&#39;s API doesn&#39;t support deletion. When deleted, the resource will persist
 * on Google Cloud even though it will be deleted from Pulumi state.
 * 
 */
@ResourceType(type="google-native:clouddeploy/v1:Release")
public class Release extends com.pulumi.resources.CustomResource {
    /**
     * Indicates whether this is an abandoned release.
     * 
     */
    @Export(name="abandoned", type=Boolean.class, parameters={})
    private Output<Boolean> abandoned;

    /**
     * @return Indicates whether this is an abandoned release.
     * 
     */
    public Output<Boolean> abandoned() {
        return this.abandoned;
    }
    /**
     * User annotations. These attributes can only be set and used by the user, and not by Google Cloud Deploy. See https://google.aip.dev/128#annotations for more details such as format and size limitations.
     * 
     */
    @Export(name="annotations", type=Map.class, parameters={String.class, String.class})
    private Output<Map<String,String>> annotations;

    /**
     * @return User annotations. These attributes can only be set and used by the user, and not by Google Cloud Deploy. See https://google.aip.dev/128#annotations for more details such as format and size limitations.
     * 
     */
    public Output<Map<String,String>> annotations() {
        return this.annotations;
    }
    /**
     * List of artifacts to pass through to Skaffold command.
     * 
     */
    @Export(name="buildArtifacts", type=List.class, parameters={BuildArtifactResponse.class})
    private Output<List<BuildArtifactResponse>> buildArtifacts;

    /**
     * @return List of artifacts to pass through to Skaffold command.
     * 
     */
    public Output<List<BuildArtifactResponse>> buildArtifacts() {
        return this.buildArtifacts;
    }
    /**
     * Time at which the `Release` was created.
     * 
     */
    @Export(name="createTime", type=String.class, parameters={})
    private Output<String> createTime;

    /**
     * @return Time at which the `Release` was created.
     * 
     */
    public Output<String> createTime() {
        return this.createTime;
    }
    @Export(name="deliveryPipelineId", type=String.class, parameters={})
    private Output<String> deliveryPipelineId;

    public Output<String> deliveryPipelineId() {
        return this.deliveryPipelineId;
    }
    /**
     * Snapshot of the parent pipeline taken at release creation time.
     * 
     */
    @Export(name="deliveryPipelineSnapshot", type=DeliveryPipelineResponse.class, parameters={})
    private Output<DeliveryPipelineResponse> deliveryPipelineSnapshot;

    /**
     * @return Snapshot of the parent pipeline taken at release creation time.
     * 
     */
    public Output<DeliveryPipelineResponse> deliveryPipelineSnapshot() {
        return this.deliveryPipelineSnapshot;
    }
    /**
     * Description of the `Release`. Max length is 255 characters.
     * 
     */
    @Export(name="description", type=String.class, parameters={})
    private Output<String> description;

    /**
     * @return Description of the `Release`. Max length is 255 characters.
     * 
     */
    public Output<String> description() {
        return this.description;
    }
    /**
     * This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.
     * 
     */
    @Export(name="etag", type=String.class, parameters={})
    private Output<String> etag;

    /**
     * @return This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.
     * 
     */
    public Output<String> etag() {
        return this.etag;
    }
    /**
     * Labels are attributes that can be set and used by both the user and by Google Cloud Deploy. Labels must meet the following constraints: * Keys and values can contain only lowercase letters, numeric characters, underscores, and dashes. * All characters must use UTF-8 encoding, and international characters are allowed. * Keys must start with a lowercase letter or international character. * Each resource is limited to a maximum of 64 labels. Both keys and values are additionally constrained to be &lt;= 128 bytes.
     * 
     */
    @Export(name="labels", type=Map.class, parameters={String.class, String.class})
    private Output<Map<String,String>> labels;

    /**
     * @return Labels are attributes that can be set and used by both the user and by Google Cloud Deploy. Labels must meet the following constraints: * Keys and values can contain only lowercase letters, numeric characters, underscores, and dashes. * All characters must use UTF-8 encoding, and international characters are allowed. * Keys must start with a lowercase letter or international character. * Each resource is limited to a maximum of 64 labels. Both keys and values are additionally constrained to be &lt;= 128 bytes.
     * 
     */
    public Output<Map<String,String>> labels() {
        return this.labels;
    }
    @Export(name="location", type=String.class, parameters={})
    private Output<String> location;

    public Output<String> location() {
        return this.location;
    }
    /**
     * Optional. Name of the `Release`. Format is projects/{project}/ locations/{location}/deliveryPipelines/{deliveryPipeline}/ releases/a-z{0,62}.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return Optional. Name of the `Release`. Format is projects/{project}/ locations/{location}/deliveryPipelines/{deliveryPipeline}/ releases/a-z{0,62}.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    @Export(name="project", type=String.class, parameters={})
    private Output<String> project;

    public Output<String> project() {
        return this.project;
    }
    /**
     * Required. ID of the `Release`.
     * 
     */
    @Export(name="releaseId", type=String.class, parameters={})
    private Output<String> releaseId;

    /**
     * @return Required. ID of the `Release`.
     * 
     */
    public Output<String> releaseId() {
        return this.releaseId;
    }
    /**
     * Time at which the render completed.
     * 
     */
    @Export(name="renderEndTime", type=String.class, parameters={})
    private Output<String> renderEndTime;

    /**
     * @return Time at which the render completed.
     * 
     */
    public Output<String> renderEndTime() {
        return this.renderEndTime;
    }
    /**
     * Time at which the render began.
     * 
     */
    @Export(name="renderStartTime", type=String.class, parameters={})
    private Output<String> renderStartTime;

    /**
     * @return Time at which the render began.
     * 
     */
    public Output<String> renderStartTime() {
        return this.renderStartTime;
    }
    /**
     * Current state of the render operation.
     * 
     */
    @Export(name="renderState", type=String.class, parameters={})
    private Output<String> renderState;

    /**
     * @return Current state of the render operation.
     * 
     */
    public Output<String> renderState() {
        return this.renderState;
    }
    /**
     * Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
     * 
     */
    @Export(name="requestId", type=String.class, parameters={})
    private Output</* @Nullable */ String> requestId;

    /**
     * @return Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
     * 
     */
    public Output<Optional<String>> requestId() {
        return Codegen.optional(this.requestId);
    }
    /**
     * Filepath of the Skaffold config inside of the config URI.
     * 
     */
    @Export(name="skaffoldConfigPath", type=String.class, parameters={})
    private Output<String> skaffoldConfigPath;

    /**
     * @return Filepath of the Skaffold config inside of the config URI.
     * 
     */
    public Output<String> skaffoldConfigPath() {
        return this.skaffoldConfigPath;
    }
    /**
     * Cloud Storage URI of tar.gz archive containing Skaffold configuration.
     * 
     */
    @Export(name="skaffoldConfigUri", type=String.class, parameters={})
    private Output<String> skaffoldConfigUri;

    /**
     * @return Cloud Storage URI of tar.gz archive containing Skaffold configuration.
     * 
     */
    public Output<String> skaffoldConfigUri() {
        return this.skaffoldConfigUri;
    }
    /**
     * The Skaffold version to use when operating on this release, such as &#34;1.20.0&#34;. Not all versions are valid; Google Cloud Deploy supports a specific set of versions. If unset, the most recent supported Skaffold version will be used.
     * 
     */
    @Export(name="skaffoldVersion", type=String.class, parameters={})
    private Output<String> skaffoldVersion;

    /**
     * @return The Skaffold version to use when operating on this release, such as &#34;1.20.0&#34;. Not all versions are valid; Google Cloud Deploy supports a specific set of versions. If unset, the most recent supported Skaffold version will be used.
     * 
     */
    public Output<String> skaffoldVersion() {
        return this.skaffoldVersion;
    }
    /**
     * Map from target ID to the target artifacts created during the render operation.
     * 
     */
    @Export(name="targetArtifacts", type=Map.class, parameters={String.class, String.class})
    private Output<Map<String,String>> targetArtifacts;

    /**
     * @return Map from target ID to the target artifacts created during the render operation.
     * 
     */
    public Output<Map<String,String>> targetArtifacts() {
        return this.targetArtifacts;
    }
    /**
     * Map from target ID to details of the render operation for that target.
     * 
     */
    @Export(name="targetRenders", type=Map.class, parameters={String.class, String.class})
    private Output<Map<String,String>> targetRenders;

    /**
     * @return Map from target ID to details of the render operation for that target.
     * 
     */
    public Output<Map<String,String>> targetRenders() {
        return this.targetRenders;
    }
    /**
     * Snapshot of the targets taken at release creation time.
     * 
     */
    @Export(name="targetSnapshots", type=List.class, parameters={TargetResponse.class})
    private Output<List<TargetResponse>> targetSnapshots;

    /**
     * @return Snapshot of the targets taken at release creation time.
     * 
     */
    public Output<List<TargetResponse>> targetSnapshots() {
        return this.targetSnapshots;
    }
    /**
     * Unique identifier of the `Release`.
     * 
     */
    @Export(name="uid", type=String.class, parameters={})
    private Output<String> uid;

    /**
     * @return Unique identifier of the `Release`.
     * 
     */
    public Output<String> uid() {
        return this.uid;
    }
    /**
     * Optional. If set to true, the request is validated and the user is provided with an expected result, but no actual change is made.
     * 
     */
    @Export(name="validateOnly", type=String.class, parameters={})
    private Output</* @Nullable */ String> validateOnly;

    /**
     * @return Optional. If set to true, the request is validated and the user is provided with an expected result, but no actual change is made.
     * 
     */
    public Output<Optional<String>> validateOnly() {
        return Codegen.optional(this.validateOnly);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Release(String name) {
        this(name, ReleaseArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Release(String name, ReleaseArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Release(String name, ReleaseArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("google-native:clouddeploy/v1:Release", name, args == null ? ReleaseArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Release(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("google-native:clouddeploy/v1:Release", name, null, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Release get(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Release(name, id, options);
    }
}
