// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.dialogflow_v3beta1.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.dialogflow_v3beta1.inputs.GoogleCloudDialogflowCxV3beta1VersionVariantsResponse;
import java.lang.String;
import java.util.Objects;


/**
 * Definition of the experiment.
 * 
 */
public final class GoogleCloudDialogflowCxV3beta1ExperimentDefinitionResponse extends com.pulumi.resources.InvokeArgs {

    public static final GoogleCloudDialogflowCxV3beta1ExperimentDefinitionResponse Empty = new GoogleCloudDialogflowCxV3beta1ExperimentDefinitionResponse();

    /**
     * The condition defines which subset of sessions are selected for this experiment. If not specified, all sessions are eligible. E.g. &#34;query_input.language_code=en&#34; See the [conditions reference](https://cloud.google.com/dialogflow/cx/docs/reference/condition).
     * 
     */
    @Import(name="condition", required=true)
    private String condition;

    /**
     * @return The condition defines which subset of sessions are selected for this experiment. If not specified, all sessions are eligible. E.g. &#34;query_input.language_code=en&#34; See the [conditions reference](https://cloud.google.com/dialogflow/cx/docs/reference/condition).
     * 
     */
    public String condition() {
        return this.condition;
    }

    /**
     * The flow versions as the variants of this experiment.
     * 
     */
    @Import(name="versionVariants", required=true)
    private GoogleCloudDialogflowCxV3beta1VersionVariantsResponse versionVariants;

    /**
     * @return The flow versions as the variants of this experiment.
     * 
     */
    public GoogleCloudDialogflowCxV3beta1VersionVariantsResponse versionVariants() {
        return this.versionVariants;
    }

    private GoogleCloudDialogflowCxV3beta1ExperimentDefinitionResponse() {}

    private GoogleCloudDialogflowCxV3beta1ExperimentDefinitionResponse(GoogleCloudDialogflowCxV3beta1ExperimentDefinitionResponse $) {
        this.condition = $.condition;
        this.versionVariants = $.versionVariants;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GoogleCloudDialogflowCxV3beta1ExperimentDefinitionResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GoogleCloudDialogflowCxV3beta1ExperimentDefinitionResponse $;

        public Builder() {
            $ = new GoogleCloudDialogflowCxV3beta1ExperimentDefinitionResponse();
        }

        public Builder(GoogleCloudDialogflowCxV3beta1ExperimentDefinitionResponse defaults) {
            $ = new GoogleCloudDialogflowCxV3beta1ExperimentDefinitionResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param condition The condition defines which subset of sessions are selected for this experiment. If not specified, all sessions are eligible. E.g. &#34;query_input.language_code=en&#34; See the [conditions reference](https://cloud.google.com/dialogflow/cx/docs/reference/condition).
         * 
         * @return builder
         * 
         */
        public Builder condition(String condition) {
            $.condition = condition;
            return this;
        }

        /**
         * @param versionVariants The flow versions as the variants of this experiment.
         * 
         * @return builder
         * 
         */
        public Builder versionVariants(GoogleCloudDialogflowCxV3beta1VersionVariantsResponse versionVariants) {
            $.versionVariants = versionVariants;
            return this;
        }

        public GoogleCloudDialogflowCxV3beta1ExperimentDefinitionResponse build() {
            $.condition = Objects.requireNonNull($.condition, "expected parameter 'condition' to be non-null");
            $.versionVariants = Objects.requireNonNull($.versionVariants, "expected parameter 'versionVariants' to be non-null");
            return $;
        }
    }

}
