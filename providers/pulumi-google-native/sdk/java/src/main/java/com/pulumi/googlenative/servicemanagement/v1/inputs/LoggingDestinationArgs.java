// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.servicemanagement.v1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Configuration of a specific logging destination (the producer project or the consumer project).
 * 
 */
public final class LoggingDestinationArgs extends com.pulumi.resources.ResourceArgs {

    public static final LoggingDestinationArgs Empty = new LoggingDestinationArgs();

    /**
     * Names of the logs to be sent to this destination. Each name must be defined in the Service.logs section. If the log name is not a domain scoped name, it will be automatically prefixed with the service name followed by &#34;/&#34;.
     * 
     */
    @Import(name="logs")
    private @Nullable Output<List<String>> logs;

    /**
     * @return Names of the logs to be sent to this destination. Each name must be defined in the Service.logs section. If the log name is not a domain scoped name, it will be automatically prefixed with the service name followed by &#34;/&#34;.
     * 
     */
    public Optional<Output<List<String>>> logs() {
        return Optional.ofNullable(this.logs);
    }

    /**
     * The monitored resource type. The type must be defined in the Service.monitored_resources section.
     * 
     */
    @Import(name="monitoredResource")
    private @Nullable Output<String> monitoredResource;

    /**
     * @return The monitored resource type. The type must be defined in the Service.monitored_resources section.
     * 
     */
    public Optional<Output<String>> monitoredResource() {
        return Optional.ofNullable(this.monitoredResource);
    }

    private LoggingDestinationArgs() {}

    private LoggingDestinationArgs(LoggingDestinationArgs $) {
        this.logs = $.logs;
        this.monitoredResource = $.monitoredResource;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LoggingDestinationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LoggingDestinationArgs $;

        public Builder() {
            $ = new LoggingDestinationArgs();
        }

        public Builder(LoggingDestinationArgs defaults) {
            $ = new LoggingDestinationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param logs Names of the logs to be sent to this destination. Each name must be defined in the Service.logs section. If the log name is not a domain scoped name, it will be automatically prefixed with the service name followed by &#34;/&#34;.
         * 
         * @return builder
         * 
         */
        public Builder logs(@Nullable Output<List<String>> logs) {
            $.logs = logs;
            return this;
        }

        /**
         * @param logs Names of the logs to be sent to this destination. Each name must be defined in the Service.logs section. If the log name is not a domain scoped name, it will be automatically prefixed with the service name followed by &#34;/&#34;.
         * 
         * @return builder
         * 
         */
        public Builder logs(List<String> logs) {
            return logs(Output.of(logs));
        }

        /**
         * @param logs Names of the logs to be sent to this destination. Each name must be defined in the Service.logs section. If the log name is not a domain scoped name, it will be automatically prefixed with the service name followed by &#34;/&#34;.
         * 
         * @return builder
         * 
         */
        public Builder logs(String... logs) {
            return logs(List.of(logs));
        }

        /**
         * @param monitoredResource The monitored resource type. The type must be defined in the Service.monitored_resources section.
         * 
         * @return builder
         * 
         */
        public Builder monitoredResource(@Nullable Output<String> monitoredResource) {
            $.monitoredResource = monitoredResource;
            return this;
        }

        /**
         * @param monitoredResource The monitored resource type. The type must be defined in the Service.monitored_resources section.
         * 
         * @return builder
         * 
         */
        public Builder monitoredResource(String monitoredResource) {
            return monitoredResource(Output.of(monitoredResource));
        }

        public LoggingDestinationArgs build() {
            return $;
        }
    }

}
