// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.compute_beta.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * Configuration for a serverless network endpoint group (NEG). The platform must be provided. Note: The target backend service must be in the same project and located in the same region as the Serverless NEG.
 * 
 */
public final class NetworkEndpointGroupServerlessDeploymentResponse extends com.pulumi.resources.InvokeArgs {

    public static final NetworkEndpointGroupServerlessDeploymentResponse Empty = new NetworkEndpointGroupServerlessDeploymentResponse();

    /**
     * The platform of the backend target(s) of this NEG. Possible values include: 1. API Gateway: apigateway.googleapis.com 2. App Engine: appengine.googleapis.com 3. Cloud Functions: cloudfunctions.googleapis.com 4. Cloud Run: run.googleapis.com
     * 
     */
    @Import(name="platform", required=true)
    private String platform;

    /**
     * @return The platform of the backend target(s) of this NEG. Possible values include: 1. API Gateway: apigateway.googleapis.com 2. App Engine: appengine.googleapis.com 3. Cloud Functions: cloudfunctions.googleapis.com 4. Cloud Run: run.googleapis.com
     * 
     */
    public String platform() {
        return this.platform;
    }

    /**
     * The user-defined name of the workload/instance. This value must be provided explicitly or in the urlMask. The resource identified by this value is platform-specific and is as follows: 1. API Gateway: The gateway ID 2. App Engine: The service name 3. Cloud Functions: The function name 4. Cloud Run: The service name
     * 
     */
    @Import(name="resource", required=true)
    private String resource;

    /**
     * @return The user-defined name of the workload/instance. This value must be provided explicitly or in the urlMask. The resource identified by this value is platform-specific and is as follows: 1. API Gateway: The gateway ID 2. App Engine: The service name 3. Cloud Functions: The function name 4. Cloud Run: The service name
     * 
     */
    public String resource() {
        return this.resource;
    }

    /**
     * A template to parse platform-specific fields from a request URL. URL mask allows for routing to multiple resources on the same serverless platform without having to create multiple Network Endpoint Groups and backend resources. The fields parsed by this template are platform-specific and are as follows: 1. API Gateway: The gateway ID 2. App Engine: The service and version 3. Cloud Functions: The function name 4. Cloud Run: The service and tag
     * 
     */
    @Import(name="urlMask", required=true)
    private String urlMask;

    /**
     * @return A template to parse platform-specific fields from a request URL. URL mask allows for routing to multiple resources on the same serverless platform without having to create multiple Network Endpoint Groups and backend resources. The fields parsed by this template are platform-specific and are as follows: 1. API Gateway: The gateway ID 2. App Engine: The service and version 3. Cloud Functions: The function name 4. Cloud Run: The service and tag
     * 
     */
    public String urlMask() {
        return this.urlMask;
    }

    /**
     * The optional resource version. The version identified by this value is platform-specific and is follows: 1. API Gateway: Unused 2. App Engine: The service version 3. Cloud Functions: Unused 4. Cloud Run: The service tag
     * 
     */
    @Import(name="version", required=true)
    private String version;

    /**
     * @return The optional resource version. The version identified by this value is platform-specific and is follows: 1. API Gateway: Unused 2. App Engine: The service version 3. Cloud Functions: Unused 4. Cloud Run: The service tag
     * 
     */
    public String version() {
        return this.version;
    }

    private NetworkEndpointGroupServerlessDeploymentResponse() {}

    private NetworkEndpointGroupServerlessDeploymentResponse(NetworkEndpointGroupServerlessDeploymentResponse $) {
        this.platform = $.platform;
        this.resource = $.resource;
        this.urlMask = $.urlMask;
        this.version = $.version;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NetworkEndpointGroupServerlessDeploymentResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NetworkEndpointGroupServerlessDeploymentResponse $;

        public Builder() {
            $ = new NetworkEndpointGroupServerlessDeploymentResponse();
        }

        public Builder(NetworkEndpointGroupServerlessDeploymentResponse defaults) {
            $ = new NetworkEndpointGroupServerlessDeploymentResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param platform The platform of the backend target(s) of this NEG. Possible values include: 1. API Gateway: apigateway.googleapis.com 2. App Engine: appengine.googleapis.com 3. Cloud Functions: cloudfunctions.googleapis.com 4. Cloud Run: run.googleapis.com
         * 
         * @return builder
         * 
         */
        public Builder platform(String platform) {
            $.platform = platform;
            return this;
        }

        /**
         * @param resource The user-defined name of the workload/instance. This value must be provided explicitly or in the urlMask. The resource identified by this value is platform-specific and is as follows: 1. API Gateway: The gateway ID 2. App Engine: The service name 3. Cloud Functions: The function name 4. Cloud Run: The service name
         * 
         * @return builder
         * 
         */
        public Builder resource(String resource) {
            $.resource = resource;
            return this;
        }

        /**
         * @param urlMask A template to parse platform-specific fields from a request URL. URL mask allows for routing to multiple resources on the same serverless platform without having to create multiple Network Endpoint Groups and backend resources. The fields parsed by this template are platform-specific and are as follows: 1. API Gateway: The gateway ID 2. App Engine: The service and version 3. Cloud Functions: The function name 4. Cloud Run: The service and tag
         * 
         * @return builder
         * 
         */
        public Builder urlMask(String urlMask) {
            $.urlMask = urlMask;
            return this;
        }

        /**
         * @param version The optional resource version. The version identified by this value is platform-specific and is follows: 1. API Gateway: Unused 2. App Engine: The service version 3. Cloud Functions: Unused 4. Cloud Run: The service tag
         * 
         * @return builder
         * 
         */
        public Builder version(String version) {
            $.version = version;
            return this;
        }

        public NetworkEndpointGroupServerlessDeploymentResponse build() {
            $.platform = Objects.requireNonNull($.platform, "expected parameter 'platform' to be non-null");
            $.resource = Objects.requireNonNull($.resource, "expected parameter 'resource' to be non-null");
            $.urlMask = Objects.requireNonNull($.urlMask, "expected parameter 'urlMask' to be non-null");
            $.version = Objects.requireNonNull($.version, "expected parameter 'version' to be non-null");
            return $;
        }
    }

}
