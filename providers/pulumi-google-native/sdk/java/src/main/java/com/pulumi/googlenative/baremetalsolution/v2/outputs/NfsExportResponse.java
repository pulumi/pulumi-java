// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.baremetalsolution.v2.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class NfsExportResponse {
    /**
     * @return Allow dev flag in NfsShare AllowedClientsRequest.
     * 
     */
    private final Boolean allowDev;
    /**
     * @return Allow the setuid flag.
     * 
     */
    private final Boolean allowSuid;
    /**
     * @return A CIDR range.
     * 
     */
    private final String cidr;
    /**
     * @return Either a single machine, identified by an ID, or a comma-separated list of machine IDs.
     * 
     */
    private final String machineId;
    /**
     * @return Network to use to publish the export.
     * 
     */
    private final String networkId;
    /**
     * @return Disable root squashing, which is a feature of NFS. Root squash is a special mapping of the remote superuser (root) identity when using identity authentication.
     * 
     */
    private final Boolean noRootSquash;
    /**
     * @return Export permissions.
     * 
     */
    private final String permissions;

    @CustomType.Constructor
    private NfsExportResponse(
        @CustomType.Parameter("allowDev") Boolean allowDev,
        @CustomType.Parameter("allowSuid") Boolean allowSuid,
        @CustomType.Parameter("cidr") String cidr,
        @CustomType.Parameter("machineId") String machineId,
        @CustomType.Parameter("networkId") String networkId,
        @CustomType.Parameter("noRootSquash") Boolean noRootSquash,
        @CustomType.Parameter("permissions") String permissions) {
        this.allowDev = allowDev;
        this.allowSuid = allowSuid;
        this.cidr = cidr;
        this.machineId = machineId;
        this.networkId = networkId;
        this.noRootSquash = noRootSquash;
        this.permissions = permissions;
    }

    /**
     * @return Allow dev flag in NfsShare AllowedClientsRequest.
     * 
     */
    public Boolean allowDev() {
        return this.allowDev;
    }
    /**
     * @return Allow the setuid flag.
     * 
     */
    public Boolean allowSuid() {
        return this.allowSuid;
    }
    /**
     * @return A CIDR range.
     * 
     */
    public String cidr() {
        return this.cidr;
    }
    /**
     * @return Either a single machine, identified by an ID, or a comma-separated list of machine IDs.
     * 
     */
    public String machineId() {
        return this.machineId;
    }
    /**
     * @return Network to use to publish the export.
     * 
     */
    public String networkId() {
        return this.networkId;
    }
    /**
     * @return Disable root squashing, which is a feature of NFS. Root squash is a special mapping of the remote superuser (root) identity when using identity authentication.
     * 
     */
    public Boolean noRootSquash() {
        return this.noRootSquash;
    }
    /**
     * @return Export permissions.
     * 
     */
    public String permissions() {
        return this.permissions;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(NfsExportResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Boolean allowDev;
        private Boolean allowSuid;
        private String cidr;
        private String machineId;
        private String networkId;
        private Boolean noRootSquash;
        private String permissions;

        public Builder() {
    	      // Empty
        }

        public Builder(NfsExportResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allowDev = defaults.allowDev;
    	      this.allowSuid = defaults.allowSuid;
    	      this.cidr = defaults.cidr;
    	      this.machineId = defaults.machineId;
    	      this.networkId = defaults.networkId;
    	      this.noRootSquash = defaults.noRootSquash;
    	      this.permissions = defaults.permissions;
        }

        public Builder allowDev(Boolean allowDev) {
            this.allowDev = Objects.requireNonNull(allowDev);
            return this;
        }
        public Builder allowSuid(Boolean allowSuid) {
            this.allowSuid = Objects.requireNonNull(allowSuid);
            return this;
        }
        public Builder cidr(String cidr) {
            this.cidr = Objects.requireNonNull(cidr);
            return this;
        }
        public Builder machineId(String machineId) {
            this.machineId = Objects.requireNonNull(machineId);
            return this;
        }
        public Builder networkId(String networkId) {
            this.networkId = Objects.requireNonNull(networkId);
            return this;
        }
        public Builder noRootSquash(Boolean noRootSquash) {
            this.noRootSquash = Objects.requireNonNull(noRootSquash);
            return this;
        }
        public Builder permissions(String permissions) {
            this.permissions = Objects.requireNonNull(permissions);
            return this;
        }        public NfsExportResponse build() {
            return new NfsExportResponse(allowDev, allowSuid, cidr, machineId, networkId, noRootSquash, permissions);
        }
    }
}
