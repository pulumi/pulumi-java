// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.containeranalysis.v1;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.googlenative.Utilities;
import com.pulumi.googlenative.containeranalysis.v1.OccurrenceArgs;
import com.pulumi.googlenative.containeranalysis.v1.outputs.AttestationOccurrenceResponse;
import com.pulumi.googlenative.containeranalysis.v1.outputs.BuildOccurrenceResponse;
import com.pulumi.googlenative.containeranalysis.v1.outputs.ComplianceOccurrenceResponse;
import com.pulumi.googlenative.containeranalysis.v1.outputs.DSSEAttestationOccurrenceResponse;
import com.pulumi.googlenative.containeranalysis.v1.outputs.DeploymentOccurrenceResponse;
import com.pulumi.googlenative.containeranalysis.v1.outputs.DiscoveryOccurrenceResponse;
import com.pulumi.googlenative.containeranalysis.v1.outputs.EnvelopeResponse;
import com.pulumi.googlenative.containeranalysis.v1.outputs.ImageOccurrenceResponse;
import com.pulumi.googlenative.containeranalysis.v1.outputs.PackageOccurrenceResponse;
import com.pulumi.googlenative.containeranalysis.v1.outputs.UpgradeOccurrenceResponse;
import com.pulumi.googlenative.containeranalysis.v1.outputs.VulnerabilityOccurrenceResponse;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * Creates a new occurrence.
 * Auto-naming is currently not supported for this resource.
 * 
 */
@ResourceType(type="google-native:containeranalysis/v1:Occurrence")
public class Occurrence extends com.pulumi.resources.CustomResource {
    /**
     * Describes an attestation of an artifact.
     * 
     */
    @Export(name="attestation", type=AttestationOccurrenceResponse.class, parameters={})
    private Output<AttestationOccurrenceResponse> attestation;

    /**
     * @return Describes an attestation of an artifact.
     * 
     */
    public Output<AttestationOccurrenceResponse> attestation() {
        return this.attestation;
    }
    /**
     * Describes a verifiable build.
     * 
     */
    @Export(name="build", type=BuildOccurrenceResponse.class, parameters={})
    private Output<BuildOccurrenceResponse> build;

    /**
     * @return Describes a verifiable build.
     * 
     */
    public Output<BuildOccurrenceResponse> build() {
        return this.build;
    }
    /**
     * Describes a compliance violation on a linked resource.
     * 
     */
    @Export(name="compliance", type=ComplianceOccurrenceResponse.class, parameters={})
    private Output<ComplianceOccurrenceResponse> compliance;

    /**
     * @return Describes a compliance violation on a linked resource.
     * 
     */
    public Output<ComplianceOccurrenceResponse> compliance() {
        return this.compliance;
    }
    /**
     * The time this occurrence was created.
     * 
     */
    @Export(name="createTime", type=String.class, parameters={})
    private Output<String> createTime;

    /**
     * @return The time this occurrence was created.
     * 
     */
    public Output<String> createTime() {
        return this.createTime;
    }
    /**
     * Describes the deployment of an artifact on a runtime.
     * 
     */
    @Export(name="deployment", type=DeploymentOccurrenceResponse.class, parameters={})
    private Output<DeploymentOccurrenceResponse> deployment;

    /**
     * @return Describes the deployment of an artifact on a runtime.
     * 
     */
    public Output<DeploymentOccurrenceResponse> deployment() {
        return this.deployment;
    }
    /**
     * Describes when a resource was discovered.
     * 
     */
    @Export(name="discovery", type=DiscoveryOccurrenceResponse.class, parameters={})
    private Output<DiscoveryOccurrenceResponse> discovery;

    /**
     * @return Describes when a resource was discovered.
     * 
     */
    public Output<DiscoveryOccurrenceResponse> discovery() {
        return this.discovery;
    }
    /**
     * Describes an attestation of an artifact using dsse.
     * 
     */
    @Export(name="dsseAttestation", type=DSSEAttestationOccurrenceResponse.class, parameters={})
    private Output<DSSEAttestationOccurrenceResponse> dsseAttestation;

    /**
     * @return Describes an attestation of an artifact using dsse.
     * 
     */
    public Output<DSSEAttestationOccurrenceResponse> dsseAttestation() {
        return this.dsseAttestation;
    }
    /**
     * https://github.com/secure-systems-lab/dsse
     * 
     */
    @Export(name="envelope", type=EnvelopeResponse.class, parameters={})
    private Output<EnvelopeResponse> envelope;

    /**
     * @return https://github.com/secure-systems-lab/dsse
     * 
     */
    public Output<EnvelopeResponse> envelope() {
        return this.envelope;
    }
    /**
     * Describes how this resource derives from the basis in the associated note.
     * 
     */
    @Export(name="image", type=ImageOccurrenceResponse.class, parameters={})
    private Output<ImageOccurrenceResponse> image;

    /**
     * @return Describes how this resource derives from the basis in the associated note.
     * 
     */
    public Output<ImageOccurrenceResponse> image() {
        return this.image;
    }
    /**
     * This explicitly denotes which of the occurrence details are specified. This field can be used as a filter in list requests.
     * 
     */
    @Export(name="kind", type=String.class, parameters={})
    private Output<String> kind;

    /**
     * @return This explicitly denotes which of the occurrence details are specified. This field can be used as a filter in list requests.
     * 
     */
    public Output<String> kind() {
        return this.kind;
    }
    /**
     * The name of the occurrence in the form of `projects/[PROJECT_ID]/occurrences/[OCCURRENCE_ID]`.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The name of the occurrence in the form of `projects/[PROJECT_ID]/occurrences/[OCCURRENCE_ID]`.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Immutable. The analysis note associated with this occurrence, in the form of `projects/[PROVIDER_ID]/notes/[NOTE_ID]`. This field can be used as a filter in list requests.
     * 
     */
    @Export(name="noteName", type=String.class, parameters={})
    private Output<String> noteName;

    /**
     * @return Immutable. The analysis note associated with this occurrence, in the form of `projects/[PROVIDER_ID]/notes/[NOTE_ID]`. This field can be used as a filter in list requests.
     * 
     */
    public Output<String> noteName() {
        return this.noteName;
    }
    /**
     * Describes the installation of a package on the linked resource.
     * 
     */
    @Export(name="package", type=PackageOccurrenceResponse.class, parameters={})
    private Output<PackageOccurrenceResponse> package_;

    /**
     * @return Describes the installation of a package on the linked resource.
     * 
     */
    public Output<PackageOccurrenceResponse> package_() {
        return this.package_;
    }
    @Export(name="project", type=String.class, parameters={})
    private Output<String> project;

    public Output<String> project() {
        return this.project;
    }
    /**
     * A description of actions that can be taken to remedy the note.
     * 
     */
    @Export(name="remediation", type=String.class, parameters={})
    private Output<String> remediation;

    /**
     * @return A description of actions that can be taken to remedy the note.
     * 
     */
    public Output<String> remediation() {
        return this.remediation;
    }
    /**
     * Immutable. A URI that represents the resource for which the occurrence applies. For example, `https://gcr.io/project/image@sha256:123abc` for a Docker image.
     * 
     */
    @Export(name="resourceUri", type=String.class, parameters={})
    private Output<String> resourceUri;

    /**
     * @return Immutable. A URI that represents the resource for which the occurrence applies. For example, `https://gcr.io/project/image@sha256:123abc` for a Docker image.
     * 
     */
    public Output<String> resourceUri() {
        return this.resourceUri;
    }
    /**
     * The time this occurrence was last updated.
     * 
     */
    @Export(name="updateTime", type=String.class, parameters={})
    private Output<String> updateTime;

    /**
     * @return The time this occurrence was last updated.
     * 
     */
    public Output<String> updateTime() {
        return this.updateTime;
    }
    /**
     * Describes an available package upgrade on the linked resource.
     * 
     */
    @Export(name="upgrade", type=UpgradeOccurrenceResponse.class, parameters={})
    private Output<UpgradeOccurrenceResponse> upgrade;

    /**
     * @return Describes an available package upgrade on the linked resource.
     * 
     */
    public Output<UpgradeOccurrenceResponse> upgrade() {
        return this.upgrade;
    }
    /**
     * Describes a security vulnerability.
     * 
     */
    @Export(name="vulnerability", type=VulnerabilityOccurrenceResponse.class, parameters={})
    private Output<VulnerabilityOccurrenceResponse> vulnerability;

    /**
     * @return Describes a security vulnerability.
     * 
     */
    public Output<VulnerabilityOccurrenceResponse> vulnerability() {
        return this.vulnerability;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Occurrence(String name) {
        this(name, OccurrenceArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Occurrence(String name, OccurrenceArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Occurrence(String name, OccurrenceArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("google-native:containeranalysis/v1:Occurrence", name, args == null ? OccurrenceArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Occurrence(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("google-native:containeranalysis/v1:Occurrence", name, null, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Occurrence get(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Occurrence(name, id, options);
    }
}
