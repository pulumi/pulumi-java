// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.bigquery_v2.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.bigquery_v2.inputs.StandardSqlFieldResponse;
import java.util.List;
import java.util.Objects;


/**
 * A table type
 * 
 */
public final class StandardSqlTableTypeResponse extends com.pulumi.resources.InvokeArgs {

    public static final StandardSqlTableTypeResponse Empty = new StandardSqlTableTypeResponse();

    /**
     * The columns in this table type
     * 
     */
    @Import(name="columns", required=true)
    private List<StandardSqlFieldResponse> columns;

    public List<StandardSqlFieldResponse> columns() {
        return this.columns;
    }

    private StandardSqlTableTypeResponse() {}

    private StandardSqlTableTypeResponse(StandardSqlTableTypeResponse $) {
        this.columns = $.columns;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(StandardSqlTableTypeResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private StandardSqlTableTypeResponse $;

        public Builder() {
            $ = new StandardSqlTableTypeResponse();
        }

        public Builder(StandardSqlTableTypeResponse defaults) {
            $ = new StandardSqlTableTypeResponse(Objects.requireNonNull(defaults));
        }

        public Builder columns(List<StandardSqlFieldResponse> columns) {
            $.columns = columns;
            return this;
        }

        public Builder columns(StandardSqlFieldResponse... columns) {
            return columns(List.of(columns));
        }

        public StandardSqlTableTypeResponse build() {
            $.columns = Objects.requireNonNull($.columns, "expected parameter 'columns' to be non-null");
            return $;
        }
    }

}
