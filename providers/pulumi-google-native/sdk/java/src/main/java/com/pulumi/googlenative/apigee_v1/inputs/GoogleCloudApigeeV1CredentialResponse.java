// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.apigee_v1.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.apigee_v1.inputs.GoogleCloudApigeeV1ApiProductRefResponse;
import com.pulumi.googlenative.apigee_v1.inputs.GoogleCloudApigeeV1AttributeResponse;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class GoogleCloudApigeeV1CredentialResponse extends com.pulumi.resources.InvokeArgs {

    public static final GoogleCloudApigeeV1CredentialResponse Empty = new GoogleCloudApigeeV1CredentialResponse();

    /**
     * List of API products this credential can be used for.
     * 
     */
    @Import(name="apiProducts", required=true)
    private List<GoogleCloudApigeeV1ApiProductRefResponse> apiProducts;

    /**
     * @return List of API products this credential can be used for.
     * 
     */
    public List<GoogleCloudApigeeV1ApiProductRefResponse> apiProducts() {
        return this.apiProducts;
    }

    /**
     * List of attributes associated with this credential.
     * 
     */
    @Import(name="attributes", required=true)
    private List<GoogleCloudApigeeV1AttributeResponse> attributes;

    /**
     * @return List of attributes associated with this credential.
     * 
     */
    public List<GoogleCloudApigeeV1AttributeResponse> attributes() {
        return this.attributes;
    }

    /**
     * Consumer key.
     * 
     */
    @Import(name="consumerKey", required=true)
    private String consumerKey;

    /**
     * @return Consumer key.
     * 
     */
    public String consumerKey() {
        return this.consumerKey;
    }

    /**
     * Secret key.
     * 
     */
    @Import(name="consumerSecret", required=true)
    private String consumerSecret;

    /**
     * @return Secret key.
     * 
     */
    public String consumerSecret() {
        return this.consumerSecret;
    }

    /**
     * Time the credential will expire in milliseconds since epoch.
     * 
     */
    @Import(name="expiresAt", required=true)
    private String expiresAt;

    /**
     * @return Time the credential will expire in milliseconds since epoch.
     * 
     */
    public String expiresAt() {
        return this.expiresAt;
    }

    /**
     * Time the credential was issued in milliseconds since epoch.
     * 
     */
    @Import(name="issuedAt", required=true)
    private String issuedAt;

    /**
     * @return Time the credential was issued in milliseconds since epoch.
     * 
     */
    public String issuedAt() {
        return this.issuedAt;
    }

    /**
     * List of scopes to apply to the app. Specified scopes must already exist on the API product that you associate with the app.
     * 
     */
    @Import(name="scopes", required=true)
    private List<String> scopes;

    /**
     * @return List of scopes to apply to the app. Specified scopes must already exist on the API product that you associate with the app.
     * 
     */
    public List<String> scopes() {
        return this.scopes;
    }

    /**
     * Status of the credential. Valid values include `approved` or `revoked`.
     * 
     */
    @Import(name="status", required=true)
    private String status;

    /**
     * @return Status of the credential. Valid values include `approved` or `revoked`.
     * 
     */
    public String status() {
        return this.status;
    }

    private GoogleCloudApigeeV1CredentialResponse() {}

    private GoogleCloudApigeeV1CredentialResponse(GoogleCloudApigeeV1CredentialResponse $) {
        this.apiProducts = $.apiProducts;
        this.attributes = $.attributes;
        this.consumerKey = $.consumerKey;
        this.consumerSecret = $.consumerSecret;
        this.expiresAt = $.expiresAt;
        this.issuedAt = $.issuedAt;
        this.scopes = $.scopes;
        this.status = $.status;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GoogleCloudApigeeV1CredentialResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GoogleCloudApigeeV1CredentialResponse $;

        public Builder() {
            $ = new GoogleCloudApigeeV1CredentialResponse();
        }

        public Builder(GoogleCloudApigeeV1CredentialResponse defaults) {
            $ = new GoogleCloudApigeeV1CredentialResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param apiProducts List of API products this credential can be used for.
         * 
         * @return builder
         * 
         */
        public Builder apiProducts(List<GoogleCloudApigeeV1ApiProductRefResponse> apiProducts) {
            $.apiProducts = apiProducts;
            return this;
        }

        /**
         * @param apiProducts List of API products this credential can be used for.
         * 
         * @return builder
         * 
         */
        public Builder apiProducts(GoogleCloudApigeeV1ApiProductRefResponse... apiProducts) {
            return apiProducts(List.of(apiProducts));
        }

        /**
         * @param attributes List of attributes associated with this credential.
         * 
         * @return builder
         * 
         */
        public Builder attributes(List<GoogleCloudApigeeV1AttributeResponse> attributes) {
            $.attributes = attributes;
            return this;
        }

        /**
         * @param attributes List of attributes associated with this credential.
         * 
         * @return builder
         * 
         */
        public Builder attributes(GoogleCloudApigeeV1AttributeResponse... attributes) {
            return attributes(List.of(attributes));
        }

        /**
         * @param consumerKey Consumer key.
         * 
         * @return builder
         * 
         */
        public Builder consumerKey(String consumerKey) {
            $.consumerKey = consumerKey;
            return this;
        }

        /**
         * @param consumerSecret Secret key.
         * 
         * @return builder
         * 
         */
        public Builder consumerSecret(String consumerSecret) {
            $.consumerSecret = consumerSecret;
            return this;
        }

        /**
         * @param expiresAt Time the credential will expire in milliseconds since epoch.
         * 
         * @return builder
         * 
         */
        public Builder expiresAt(String expiresAt) {
            $.expiresAt = expiresAt;
            return this;
        }

        /**
         * @param issuedAt Time the credential was issued in milliseconds since epoch.
         * 
         * @return builder
         * 
         */
        public Builder issuedAt(String issuedAt) {
            $.issuedAt = issuedAt;
            return this;
        }

        /**
         * @param scopes List of scopes to apply to the app. Specified scopes must already exist on the API product that you associate with the app.
         * 
         * @return builder
         * 
         */
        public Builder scopes(List<String> scopes) {
            $.scopes = scopes;
            return this;
        }

        /**
         * @param scopes List of scopes to apply to the app. Specified scopes must already exist on the API product that you associate with the app.
         * 
         * @return builder
         * 
         */
        public Builder scopes(String... scopes) {
            return scopes(List.of(scopes));
        }

        /**
         * @param status Status of the credential. Valid values include `approved` or `revoked`.
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            $.status = status;
            return this;
        }

        public GoogleCloudApigeeV1CredentialResponse build() {
            $.apiProducts = Objects.requireNonNull($.apiProducts, "expected parameter 'apiProducts' to be non-null");
            $.attributes = Objects.requireNonNull($.attributes, "expected parameter 'attributes' to be non-null");
            $.consumerKey = Objects.requireNonNull($.consumerKey, "expected parameter 'consumerKey' to be non-null");
            $.consumerSecret = Objects.requireNonNull($.consumerSecret, "expected parameter 'consumerSecret' to be non-null");
            $.expiresAt = Objects.requireNonNull($.expiresAt, "expected parameter 'expiresAt' to be non-null");
            $.issuedAt = Objects.requireNonNull($.issuedAt, "expected parameter 'issuedAt' to be non-null");
            $.scopes = Objects.requireNonNull($.scopes, "expected parameter 'scopes' to be non-null");
            $.status = Objects.requireNonNull($.status, "expected parameter 'status' to be non-null");
            return $;
        }
    }

}
