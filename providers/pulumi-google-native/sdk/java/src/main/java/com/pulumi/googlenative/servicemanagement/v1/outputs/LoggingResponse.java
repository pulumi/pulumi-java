// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.servicemanagement.v1.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.googlenative.servicemanagement.v1.outputs.LoggingDestinationResponse;
import java.util.List;
import java.util.Objects;

@CustomType
public final class LoggingResponse {
    /**
     * @return Logging configurations for sending logs to the consumer project. There can be multiple consumer destinations, each one must have a different monitored resource type. A log can be used in at most one consumer destination.
     * 
     */
    private final List<LoggingDestinationResponse> consumerDestinations;
    /**
     * @return Logging configurations for sending logs to the producer project. There can be multiple producer destinations, each one must have a different monitored resource type. A log can be used in at most one producer destination.
     * 
     */
    private final List<LoggingDestinationResponse> producerDestinations;

    @CustomType.Constructor
    private LoggingResponse(
        @CustomType.Parameter("consumerDestinations") List<LoggingDestinationResponse> consumerDestinations,
        @CustomType.Parameter("producerDestinations") List<LoggingDestinationResponse> producerDestinations) {
        this.consumerDestinations = consumerDestinations;
        this.producerDestinations = producerDestinations;
    }

    /**
     * @return Logging configurations for sending logs to the consumer project. There can be multiple consumer destinations, each one must have a different monitored resource type. A log can be used in at most one consumer destination.
     * 
     */
    public List<LoggingDestinationResponse> consumerDestinations() {
        return this.consumerDestinations;
    }
    /**
     * @return Logging configurations for sending logs to the producer project. There can be multiple producer destinations, each one must have a different monitored resource type. A log can be used in at most one producer destination.
     * 
     */
    public List<LoggingDestinationResponse> producerDestinations() {
        return this.producerDestinations;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(LoggingResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<LoggingDestinationResponse> consumerDestinations;
        private List<LoggingDestinationResponse> producerDestinations;

        public Builder() {
    	      // Empty
        }

        public Builder(LoggingResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.consumerDestinations = defaults.consumerDestinations;
    	      this.producerDestinations = defaults.producerDestinations;
        }

        public Builder consumerDestinations(List<LoggingDestinationResponse> consumerDestinations) {
            this.consumerDestinations = Objects.requireNonNull(consumerDestinations);
            return this;
        }
        public Builder consumerDestinations(LoggingDestinationResponse... consumerDestinations) {
            return consumerDestinations(List.of(consumerDestinations));
        }
        public Builder producerDestinations(List<LoggingDestinationResponse> producerDestinations) {
            this.producerDestinations = Objects.requireNonNull(producerDestinations);
            return this;
        }
        public Builder producerDestinations(LoggingDestinationResponse... producerDestinations) {
            return producerDestinations(List.of(producerDestinations));
        }        public LoggingResponse build() {
            return new LoggingResponse(consumerDestinations, producerDestinations);
        }
    }
}
