// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.apikeys_v2.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.apikeys_v2.inputs.V2AndroidKeyRestrictionsResponse;
import com.pulumi.googlenative.apikeys_v2.inputs.V2ApiTargetResponse;
import com.pulumi.googlenative.apikeys_v2.inputs.V2BrowserKeyRestrictionsResponse;
import com.pulumi.googlenative.apikeys_v2.inputs.V2IosKeyRestrictionsResponse;
import com.pulumi.googlenative.apikeys_v2.inputs.V2ServerKeyRestrictionsResponse;
import java.util.List;
import java.util.Objects;


/**
 * Describes the restrictions on the key.
 * 
 */
public final class V2RestrictionsResponse extends com.pulumi.resources.InvokeArgs {

    public static final V2RestrictionsResponse Empty = new V2RestrictionsResponse();

    /**
     * The Android apps that are allowed to use the key.
     * 
     */
    @Import(name="androidKeyRestrictions", required=true)
    private V2AndroidKeyRestrictionsResponse androidKeyRestrictions;

    /**
     * @return The Android apps that are allowed to use the key.
     * 
     */
    public V2AndroidKeyRestrictionsResponse androidKeyRestrictions() {
        return this.androidKeyRestrictions;
    }

    /**
     * A restriction for a specific service and optionally one or more specific methods. Requests are allowed if they match any of these restrictions. If no restrictions are specified, all targets are allowed.
     * 
     */
    @Import(name="apiTargets", required=true)
    private List<V2ApiTargetResponse> apiTargets;

    /**
     * @return A restriction for a specific service and optionally one or more specific methods. Requests are allowed if they match any of these restrictions. If no restrictions are specified, all targets are allowed.
     * 
     */
    public List<V2ApiTargetResponse> apiTargets() {
        return this.apiTargets;
    }

    /**
     * The HTTP referrers (websites) that are allowed to use the key.
     * 
     */
    @Import(name="browserKeyRestrictions", required=true)
    private V2BrowserKeyRestrictionsResponse browserKeyRestrictions;

    /**
     * @return The HTTP referrers (websites) that are allowed to use the key.
     * 
     */
    public V2BrowserKeyRestrictionsResponse browserKeyRestrictions() {
        return this.browserKeyRestrictions;
    }

    /**
     * The iOS apps that are allowed to use the key.
     * 
     */
    @Import(name="iosKeyRestrictions", required=true)
    private V2IosKeyRestrictionsResponse iosKeyRestrictions;

    /**
     * @return The iOS apps that are allowed to use the key.
     * 
     */
    public V2IosKeyRestrictionsResponse iosKeyRestrictions() {
        return this.iosKeyRestrictions;
    }

    /**
     * The IP addresses of callers that are allowed to use the key.
     * 
     */
    @Import(name="serverKeyRestrictions", required=true)
    private V2ServerKeyRestrictionsResponse serverKeyRestrictions;

    /**
     * @return The IP addresses of callers that are allowed to use the key.
     * 
     */
    public V2ServerKeyRestrictionsResponse serverKeyRestrictions() {
        return this.serverKeyRestrictions;
    }

    private V2RestrictionsResponse() {}

    private V2RestrictionsResponse(V2RestrictionsResponse $) {
        this.androidKeyRestrictions = $.androidKeyRestrictions;
        this.apiTargets = $.apiTargets;
        this.browserKeyRestrictions = $.browserKeyRestrictions;
        this.iosKeyRestrictions = $.iosKeyRestrictions;
        this.serverKeyRestrictions = $.serverKeyRestrictions;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(V2RestrictionsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private V2RestrictionsResponse $;

        public Builder() {
            $ = new V2RestrictionsResponse();
        }

        public Builder(V2RestrictionsResponse defaults) {
            $ = new V2RestrictionsResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param androidKeyRestrictions The Android apps that are allowed to use the key.
         * 
         * @return builder
         * 
         */
        public Builder androidKeyRestrictions(V2AndroidKeyRestrictionsResponse androidKeyRestrictions) {
            $.androidKeyRestrictions = androidKeyRestrictions;
            return this;
        }

        /**
         * @param apiTargets A restriction for a specific service and optionally one or more specific methods. Requests are allowed if they match any of these restrictions. If no restrictions are specified, all targets are allowed.
         * 
         * @return builder
         * 
         */
        public Builder apiTargets(List<V2ApiTargetResponse> apiTargets) {
            $.apiTargets = apiTargets;
            return this;
        }

        /**
         * @param apiTargets A restriction for a specific service and optionally one or more specific methods. Requests are allowed if they match any of these restrictions. If no restrictions are specified, all targets are allowed.
         * 
         * @return builder
         * 
         */
        public Builder apiTargets(V2ApiTargetResponse... apiTargets) {
            return apiTargets(List.of(apiTargets));
        }

        /**
         * @param browserKeyRestrictions The HTTP referrers (websites) that are allowed to use the key.
         * 
         * @return builder
         * 
         */
        public Builder browserKeyRestrictions(V2BrowserKeyRestrictionsResponse browserKeyRestrictions) {
            $.browserKeyRestrictions = browserKeyRestrictions;
            return this;
        }

        /**
         * @param iosKeyRestrictions The iOS apps that are allowed to use the key.
         * 
         * @return builder
         * 
         */
        public Builder iosKeyRestrictions(V2IosKeyRestrictionsResponse iosKeyRestrictions) {
            $.iosKeyRestrictions = iosKeyRestrictions;
            return this;
        }

        /**
         * @param serverKeyRestrictions The IP addresses of callers that are allowed to use the key.
         * 
         * @return builder
         * 
         */
        public Builder serverKeyRestrictions(V2ServerKeyRestrictionsResponse serverKeyRestrictions) {
            $.serverKeyRestrictions = serverKeyRestrictions;
            return this;
        }

        public V2RestrictionsResponse build() {
            $.androidKeyRestrictions = Objects.requireNonNull($.androidKeyRestrictions, "expected parameter 'androidKeyRestrictions' to be non-null");
            $.apiTargets = Objects.requireNonNull($.apiTargets, "expected parameter 'apiTargets' to be non-null");
            $.browserKeyRestrictions = Objects.requireNonNull($.browserKeyRestrictions, "expected parameter 'browserKeyRestrictions' to be non-null");
            $.iosKeyRestrictions = Objects.requireNonNull($.iosKeyRestrictions, "expected parameter 'iosKeyRestrictions' to be non-null");
            $.serverKeyRestrictions = Objects.requireNonNull($.serverKeyRestrictions, "expected parameter 'serverKeyRestrictions' to be non-null");
            return $;
        }
    }

}
