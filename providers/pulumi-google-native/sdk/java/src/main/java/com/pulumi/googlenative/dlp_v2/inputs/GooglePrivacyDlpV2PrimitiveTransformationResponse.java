// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.dlp_v2.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.dlp_v2.inputs.GooglePrivacyDlpV2BucketingConfigResponse;
import com.pulumi.googlenative.dlp_v2.inputs.GooglePrivacyDlpV2CharacterMaskConfigResponse;
import com.pulumi.googlenative.dlp_v2.inputs.GooglePrivacyDlpV2CryptoDeterministicConfigResponse;
import com.pulumi.googlenative.dlp_v2.inputs.GooglePrivacyDlpV2CryptoHashConfigResponse;
import com.pulumi.googlenative.dlp_v2.inputs.GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigResponse;
import com.pulumi.googlenative.dlp_v2.inputs.GooglePrivacyDlpV2DateShiftConfigResponse;
import com.pulumi.googlenative.dlp_v2.inputs.GooglePrivacyDlpV2FixedSizeBucketingConfigResponse;
import com.pulumi.googlenative.dlp_v2.inputs.GooglePrivacyDlpV2RedactConfigResponse;
import com.pulumi.googlenative.dlp_v2.inputs.GooglePrivacyDlpV2ReplaceDictionaryConfigResponse;
import com.pulumi.googlenative.dlp_v2.inputs.GooglePrivacyDlpV2ReplaceValueConfigResponse;
import com.pulumi.googlenative.dlp_v2.inputs.GooglePrivacyDlpV2ReplaceWithInfoTypeConfigResponse;
import com.pulumi.googlenative.dlp_v2.inputs.GooglePrivacyDlpV2TimePartConfigResponse;
import java.util.Objects;


/**
 * A rule for transforming a value.
 * 
 */
public final class GooglePrivacyDlpV2PrimitiveTransformationResponse extends com.pulumi.resources.InvokeArgs {

    public static final GooglePrivacyDlpV2PrimitiveTransformationResponse Empty = new GooglePrivacyDlpV2PrimitiveTransformationResponse();

    /**
     * Bucketing
     * 
     */
    @Import(name="bucketingConfig", required=true)
    private GooglePrivacyDlpV2BucketingConfigResponse bucketingConfig;

    /**
     * @return Bucketing
     * 
     */
    public GooglePrivacyDlpV2BucketingConfigResponse bucketingConfig() {
        return this.bucketingConfig;
    }

    /**
     * Mask
     * 
     */
    @Import(name="characterMaskConfig", required=true)
    private GooglePrivacyDlpV2CharacterMaskConfigResponse characterMaskConfig;

    /**
     * @return Mask
     * 
     */
    public GooglePrivacyDlpV2CharacterMaskConfigResponse characterMaskConfig() {
        return this.characterMaskConfig;
    }

    /**
     * Deterministic Crypto
     * 
     */
    @Import(name="cryptoDeterministicConfig", required=true)
    private GooglePrivacyDlpV2CryptoDeterministicConfigResponse cryptoDeterministicConfig;

    /**
     * @return Deterministic Crypto
     * 
     */
    public GooglePrivacyDlpV2CryptoDeterministicConfigResponse cryptoDeterministicConfig() {
        return this.cryptoDeterministicConfig;
    }

    /**
     * Crypto
     * 
     */
    @Import(name="cryptoHashConfig", required=true)
    private GooglePrivacyDlpV2CryptoHashConfigResponse cryptoHashConfig;

    /**
     * @return Crypto
     * 
     */
    public GooglePrivacyDlpV2CryptoHashConfigResponse cryptoHashConfig() {
        return this.cryptoHashConfig;
    }

    /**
     * Ffx-Fpe
     * 
     */
    @Import(name="cryptoReplaceFfxFpeConfig", required=true)
    private GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigResponse cryptoReplaceFfxFpeConfig;

    /**
     * @return Ffx-Fpe
     * 
     */
    public GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigResponse cryptoReplaceFfxFpeConfig() {
        return this.cryptoReplaceFfxFpeConfig;
    }

    /**
     * Date Shift
     * 
     */
    @Import(name="dateShiftConfig", required=true)
    private GooglePrivacyDlpV2DateShiftConfigResponse dateShiftConfig;

    /**
     * @return Date Shift
     * 
     */
    public GooglePrivacyDlpV2DateShiftConfigResponse dateShiftConfig() {
        return this.dateShiftConfig;
    }

    /**
     * Fixed size bucketing
     * 
     */
    @Import(name="fixedSizeBucketingConfig", required=true)
    private GooglePrivacyDlpV2FixedSizeBucketingConfigResponse fixedSizeBucketingConfig;

    /**
     * @return Fixed size bucketing
     * 
     */
    public GooglePrivacyDlpV2FixedSizeBucketingConfigResponse fixedSizeBucketingConfig() {
        return this.fixedSizeBucketingConfig;
    }

    /**
     * Redact
     * 
     */
    @Import(name="redactConfig", required=true)
    private GooglePrivacyDlpV2RedactConfigResponse redactConfig;

    /**
     * @return Redact
     * 
     */
    public GooglePrivacyDlpV2RedactConfigResponse redactConfig() {
        return this.redactConfig;
    }

    /**
     * Replace with a specified value.
     * 
     */
    @Import(name="replaceConfig", required=true)
    private GooglePrivacyDlpV2ReplaceValueConfigResponse replaceConfig;

    /**
     * @return Replace with a specified value.
     * 
     */
    public GooglePrivacyDlpV2ReplaceValueConfigResponse replaceConfig() {
        return this.replaceConfig;
    }

    /**
     * Replace with a value randomly drawn (with replacement) from a dictionary.
     * 
     */
    @Import(name="replaceDictionaryConfig", required=true)
    private GooglePrivacyDlpV2ReplaceDictionaryConfigResponse replaceDictionaryConfig;

    /**
     * @return Replace with a value randomly drawn (with replacement) from a dictionary.
     * 
     */
    public GooglePrivacyDlpV2ReplaceDictionaryConfigResponse replaceDictionaryConfig() {
        return this.replaceDictionaryConfig;
    }

    /**
     * Replace with infotype
     * 
     */
    @Import(name="replaceWithInfoTypeConfig", required=true)
    private GooglePrivacyDlpV2ReplaceWithInfoTypeConfigResponse replaceWithInfoTypeConfig;

    /**
     * @return Replace with infotype
     * 
     */
    public GooglePrivacyDlpV2ReplaceWithInfoTypeConfigResponse replaceWithInfoTypeConfig() {
        return this.replaceWithInfoTypeConfig;
    }

    /**
     * Time extraction
     * 
     */
    @Import(name="timePartConfig", required=true)
    private GooglePrivacyDlpV2TimePartConfigResponse timePartConfig;

    /**
     * @return Time extraction
     * 
     */
    public GooglePrivacyDlpV2TimePartConfigResponse timePartConfig() {
        return this.timePartConfig;
    }

    private GooglePrivacyDlpV2PrimitiveTransformationResponse() {}

    private GooglePrivacyDlpV2PrimitiveTransformationResponse(GooglePrivacyDlpV2PrimitiveTransformationResponse $) {
        this.bucketingConfig = $.bucketingConfig;
        this.characterMaskConfig = $.characterMaskConfig;
        this.cryptoDeterministicConfig = $.cryptoDeterministicConfig;
        this.cryptoHashConfig = $.cryptoHashConfig;
        this.cryptoReplaceFfxFpeConfig = $.cryptoReplaceFfxFpeConfig;
        this.dateShiftConfig = $.dateShiftConfig;
        this.fixedSizeBucketingConfig = $.fixedSizeBucketingConfig;
        this.redactConfig = $.redactConfig;
        this.replaceConfig = $.replaceConfig;
        this.replaceDictionaryConfig = $.replaceDictionaryConfig;
        this.replaceWithInfoTypeConfig = $.replaceWithInfoTypeConfig;
        this.timePartConfig = $.timePartConfig;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GooglePrivacyDlpV2PrimitiveTransformationResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GooglePrivacyDlpV2PrimitiveTransformationResponse $;

        public Builder() {
            $ = new GooglePrivacyDlpV2PrimitiveTransformationResponse();
        }

        public Builder(GooglePrivacyDlpV2PrimitiveTransformationResponse defaults) {
            $ = new GooglePrivacyDlpV2PrimitiveTransformationResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param bucketingConfig Bucketing
         * 
         * @return builder
         * 
         */
        public Builder bucketingConfig(GooglePrivacyDlpV2BucketingConfigResponse bucketingConfig) {
            $.bucketingConfig = bucketingConfig;
            return this;
        }

        /**
         * @param characterMaskConfig Mask
         * 
         * @return builder
         * 
         */
        public Builder characterMaskConfig(GooglePrivacyDlpV2CharacterMaskConfigResponse characterMaskConfig) {
            $.characterMaskConfig = characterMaskConfig;
            return this;
        }

        /**
         * @param cryptoDeterministicConfig Deterministic Crypto
         * 
         * @return builder
         * 
         */
        public Builder cryptoDeterministicConfig(GooglePrivacyDlpV2CryptoDeterministicConfigResponse cryptoDeterministicConfig) {
            $.cryptoDeterministicConfig = cryptoDeterministicConfig;
            return this;
        }

        /**
         * @param cryptoHashConfig Crypto
         * 
         * @return builder
         * 
         */
        public Builder cryptoHashConfig(GooglePrivacyDlpV2CryptoHashConfigResponse cryptoHashConfig) {
            $.cryptoHashConfig = cryptoHashConfig;
            return this;
        }

        /**
         * @param cryptoReplaceFfxFpeConfig Ffx-Fpe
         * 
         * @return builder
         * 
         */
        public Builder cryptoReplaceFfxFpeConfig(GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigResponse cryptoReplaceFfxFpeConfig) {
            $.cryptoReplaceFfxFpeConfig = cryptoReplaceFfxFpeConfig;
            return this;
        }

        /**
         * @param dateShiftConfig Date Shift
         * 
         * @return builder
         * 
         */
        public Builder dateShiftConfig(GooglePrivacyDlpV2DateShiftConfigResponse dateShiftConfig) {
            $.dateShiftConfig = dateShiftConfig;
            return this;
        }

        /**
         * @param fixedSizeBucketingConfig Fixed size bucketing
         * 
         * @return builder
         * 
         */
        public Builder fixedSizeBucketingConfig(GooglePrivacyDlpV2FixedSizeBucketingConfigResponse fixedSizeBucketingConfig) {
            $.fixedSizeBucketingConfig = fixedSizeBucketingConfig;
            return this;
        }

        /**
         * @param redactConfig Redact
         * 
         * @return builder
         * 
         */
        public Builder redactConfig(GooglePrivacyDlpV2RedactConfigResponse redactConfig) {
            $.redactConfig = redactConfig;
            return this;
        }

        /**
         * @param replaceConfig Replace with a specified value.
         * 
         * @return builder
         * 
         */
        public Builder replaceConfig(GooglePrivacyDlpV2ReplaceValueConfigResponse replaceConfig) {
            $.replaceConfig = replaceConfig;
            return this;
        }

        /**
         * @param replaceDictionaryConfig Replace with a value randomly drawn (with replacement) from a dictionary.
         * 
         * @return builder
         * 
         */
        public Builder replaceDictionaryConfig(GooglePrivacyDlpV2ReplaceDictionaryConfigResponse replaceDictionaryConfig) {
            $.replaceDictionaryConfig = replaceDictionaryConfig;
            return this;
        }

        /**
         * @param replaceWithInfoTypeConfig Replace with infotype
         * 
         * @return builder
         * 
         */
        public Builder replaceWithInfoTypeConfig(GooglePrivacyDlpV2ReplaceWithInfoTypeConfigResponse replaceWithInfoTypeConfig) {
            $.replaceWithInfoTypeConfig = replaceWithInfoTypeConfig;
            return this;
        }

        /**
         * @param timePartConfig Time extraction
         * 
         * @return builder
         * 
         */
        public Builder timePartConfig(GooglePrivacyDlpV2TimePartConfigResponse timePartConfig) {
            $.timePartConfig = timePartConfig;
            return this;
        }

        public GooglePrivacyDlpV2PrimitiveTransformationResponse build() {
            $.bucketingConfig = Objects.requireNonNull($.bucketingConfig, "expected parameter 'bucketingConfig' to be non-null");
            $.characterMaskConfig = Objects.requireNonNull($.characterMaskConfig, "expected parameter 'characterMaskConfig' to be non-null");
            $.cryptoDeterministicConfig = Objects.requireNonNull($.cryptoDeterministicConfig, "expected parameter 'cryptoDeterministicConfig' to be non-null");
            $.cryptoHashConfig = Objects.requireNonNull($.cryptoHashConfig, "expected parameter 'cryptoHashConfig' to be non-null");
            $.cryptoReplaceFfxFpeConfig = Objects.requireNonNull($.cryptoReplaceFfxFpeConfig, "expected parameter 'cryptoReplaceFfxFpeConfig' to be non-null");
            $.dateShiftConfig = Objects.requireNonNull($.dateShiftConfig, "expected parameter 'dateShiftConfig' to be non-null");
            $.fixedSizeBucketingConfig = Objects.requireNonNull($.fixedSizeBucketingConfig, "expected parameter 'fixedSizeBucketingConfig' to be non-null");
            $.redactConfig = Objects.requireNonNull($.redactConfig, "expected parameter 'redactConfig' to be non-null");
            $.replaceConfig = Objects.requireNonNull($.replaceConfig, "expected parameter 'replaceConfig' to be non-null");
            $.replaceDictionaryConfig = Objects.requireNonNull($.replaceDictionaryConfig, "expected parameter 'replaceDictionaryConfig' to be non-null");
            $.replaceWithInfoTypeConfig = Objects.requireNonNull($.replaceWithInfoTypeConfig, "expected parameter 'replaceWithInfoTypeConfig' to be non-null");
            $.timePartConfig = Objects.requireNonNull($.timePartConfig, "expected parameter 'timePartConfig' to be non-null");
            return $;
        }
    }

}
