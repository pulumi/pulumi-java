// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.pubsublite_v1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.pubsublite_v1.inputs.CapacityArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The settings for a topic&#39;s partitions.
 * 
 */
public final class PartitionConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final PartitionConfigArgs Empty = new PartitionConfigArgs();

    /**
     * The capacity configuration.
     * 
     */
    @Import(name="capacity")
    private @Nullable Output<CapacityArgs> capacity;

    public Optional<Output<CapacityArgs>> capacity() {
        return Optional.ofNullable(this.capacity);
    }

    /**
     * The number of partitions in the topic. Must be at least 1. Once a topic has been created the number of partitions can be increased but not decreased. Message ordering is not guaranteed across a topic resize. For more information see https://cloud.google.com/pubsub/lite/docs/topics#scaling_capacity
     * 
     */
    @Import(name="count")
    private @Nullable Output<String> count;

    public Optional<Output<String>> count() {
        return Optional.ofNullable(this.count);
    }

    private PartitionConfigArgs() {}

    private PartitionConfigArgs(PartitionConfigArgs $) {
        this.capacity = $.capacity;
        this.count = $.count;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PartitionConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PartitionConfigArgs $;

        public Builder() {
            $ = new PartitionConfigArgs();
        }

        public Builder(PartitionConfigArgs defaults) {
            $ = new PartitionConfigArgs(Objects.requireNonNull(defaults));
        }

        public Builder capacity(@Nullable Output<CapacityArgs> capacity) {
            $.capacity = capacity;
            return this;
        }

        public Builder capacity(CapacityArgs capacity) {
            return capacity(Output.of(capacity));
        }

        public Builder count(@Nullable Output<String> count) {
            $.count = count;
            return this;
        }

        public Builder count(String count) {
            return count(Output.of(count));
        }

        public PartitionConfigArgs build() {
            return $;
        }
    }

}
