// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.pubsub.v1.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.googlenative.pubsub.v1.outputs.MessageStoragePolicyResponse;
import com.pulumi.googlenative.pubsub.v1.outputs.SchemaSettingsResponse;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetTopicResult {
    /**
     * @return The resource name of the Cloud KMS CryptoKey to be used to protect access to messages published on this topic. The expected format is `projects/*{@literal /}locations/*{@literal /}keyRings/*{@literal /}cryptoKeys/*`.
     * 
     */
    private final String kmsKeyName;
    /**
     * @return See [Creating and managing labels] (https://cloud.google.com/pubsub/docs/labels).
     * 
     */
    private final Map<String,String> labels;
    /**
     * @return Indicates the minimum duration to retain a message after it is published to the topic. If this field is set, messages published to the topic in the last `message_retention_duration` are always available to subscribers. For instance, it allows any attached subscription to [seek to a timestamp](https://cloud.google.com/pubsub/docs/replay-overview#seek_to_a_time) that is up to `message_retention_duration` in the past. If this field is not set, message retention is controlled by settings on individual subscriptions. Cannot be more than 31 days or less than 10 minutes.
     * 
     */
    private final String messageRetentionDuration;
    /**
     * @return Policy constraining the set of Google Cloud Platform regions where messages published to the topic may be stored. If not present, then no constraints are in effect.
     * 
     */
    private final MessageStoragePolicyResponse messageStoragePolicy;
    /**
     * @return The name of the topic. It must have the format `&#34;projects/{project}/topics/{topic}&#34;`. `{topic}` must start with a letter, and contain only letters (`[A-Za-z]`), numbers (`[0-9]`), dashes (`-`), underscores (`_`), periods (`.`), tildes (`~`), plus (`+`) or percent signs (`%`). It must be between 3 and 255 characters in length, and it must not start with `&#34;goog&#34;`.
     * 
     */
    private final String name;
    /**
     * @return Reserved for future use. This field is set only in responses from the server; it is ignored if it is set in any requests.
     * 
     */
    private final Boolean satisfiesPzs;
    /**
     * @return Settings for validating messages published against a schema.
     * 
     */
    private final SchemaSettingsResponse schemaSettings;

    @CustomType.Constructor
    private GetTopicResult(
        @CustomType.Parameter("kmsKeyName") String kmsKeyName,
        @CustomType.Parameter("labels") Map<String,String> labels,
        @CustomType.Parameter("messageRetentionDuration") String messageRetentionDuration,
        @CustomType.Parameter("messageStoragePolicy") MessageStoragePolicyResponse messageStoragePolicy,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("satisfiesPzs") Boolean satisfiesPzs,
        @CustomType.Parameter("schemaSettings") SchemaSettingsResponse schemaSettings) {
        this.kmsKeyName = kmsKeyName;
        this.labels = labels;
        this.messageRetentionDuration = messageRetentionDuration;
        this.messageStoragePolicy = messageStoragePolicy;
        this.name = name;
        this.satisfiesPzs = satisfiesPzs;
        this.schemaSettings = schemaSettings;
    }

    /**
     * @return The resource name of the Cloud KMS CryptoKey to be used to protect access to messages published on this topic. The expected format is `projects/*{@literal /}locations/*{@literal /}keyRings/*{@literal /}cryptoKeys/*`.
     * 
     */
    public String kmsKeyName() {
        return this.kmsKeyName;
    }
    /**
     * @return See [Creating and managing labels] (https://cloud.google.com/pubsub/docs/labels).
     * 
     */
    public Map<String,String> labels() {
        return this.labels;
    }
    /**
     * @return Indicates the minimum duration to retain a message after it is published to the topic. If this field is set, messages published to the topic in the last `message_retention_duration` are always available to subscribers. For instance, it allows any attached subscription to [seek to a timestamp](https://cloud.google.com/pubsub/docs/replay-overview#seek_to_a_time) that is up to `message_retention_duration` in the past. If this field is not set, message retention is controlled by settings on individual subscriptions. Cannot be more than 31 days or less than 10 minutes.
     * 
     */
    public String messageRetentionDuration() {
        return this.messageRetentionDuration;
    }
    /**
     * @return Policy constraining the set of Google Cloud Platform regions where messages published to the topic may be stored. If not present, then no constraints are in effect.
     * 
     */
    public MessageStoragePolicyResponse messageStoragePolicy() {
        return this.messageStoragePolicy;
    }
    /**
     * @return The name of the topic. It must have the format `&#34;projects/{project}/topics/{topic}&#34;`. `{topic}` must start with a letter, and contain only letters (`[A-Za-z]`), numbers (`[0-9]`), dashes (`-`), underscores (`_`), periods (`.`), tildes (`~`), plus (`+`) or percent signs (`%`). It must be between 3 and 255 characters in length, and it must not start with `&#34;goog&#34;`.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Reserved for future use. This field is set only in responses from the server; it is ignored if it is set in any requests.
     * 
     */
    public Boolean satisfiesPzs() {
        return this.satisfiesPzs;
    }
    /**
     * @return Settings for validating messages published against a schema.
     * 
     */
    public SchemaSettingsResponse schemaSettings() {
        return this.schemaSettings;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetTopicResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String kmsKeyName;
        private Map<String,String> labels;
        private String messageRetentionDuration;
        private MessageStoragePolicyResponse messageStoragePolicy;
        private String name;
        private Boolean satisfiesPzs;
        private SchemaSettingsResponse schemaSettings;

        public Builder() {
    	      // Empty
        }

        public Builder(GetTopicResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.kmsKeyName = defaults.kmsKeyName;
    	      this.labels = defaults.labels;
    	      this.messageRetentionDuration = defaults.messageRetentionDuration;
    	      this.messageStoragePolicy = defaults.messageStoragePolicy;
    	      this.name = defaults.name;
    	      this.satisfiesPzs = defaults.satisfiesPzs;
    	      this.schemaSettings = defaults.schemaSettings;
        }

        public Builder kmsKeyName(String kmsKeyName) {
            this.kmsKeyName = Objects.requireNonNull(kmsKeyName);
            return this;
        }
        public Builder labels(Map<String,String> labels) {
            this.labels = Objects.requireNonNull(labels);
            return this;
        }
        public Builder messageRetentionDuration(String messageRetentionDuration) {
            this.messageRetentionDuration = Objects.requireNonNull(messageRetentionDuration);
            return this;
        }
        public Builder messageStoragePolicy(MessageStoragePolicyResponse messageStoragePolicy) {
            this.messageStoragePolicy = Objects.requireNonNull(messageStoragePolicy);
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder satisfiesPzs(Boolean satisfiesPzs) {
            this.satisfiesPzs = Objects.requireNonNull(satisfiesPzs);
            return this;
        }
        public Builder schemaSettings(SchemaSettingsResponse schemaSettings) {
            this.schemaSettings = Objects.requireNonNull(schemaSettings);
            return this;
        }        public GetTopicResult build() {
            return new GetTopicResult(kmsKeyName, labels, messageRetentionDuration, messageStoragePolicy, name, satisfiesPzs, schemaSettings);
        }
    }
}
