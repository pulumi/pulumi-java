// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.bigqueryconnection_v1beta1.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.bigqueryconnection_v1beta1.inputs.CloudSqlCredentialResponse;
import java.lang.String;
import java.util.Objects;


/**
 * Connection properties specific to the Cloud SQL.
 * 
 */
public final class CloudSqlPropertiesResponse extends com.pulumi.resources.InvokeArgs {

    public static final CloudSqlPropertiesResponse Empty = new CloudSqlPropertiesResponse();

    /**
     * Input only. Cloud SQL credential.
     * 
     */
    @Import(name="credential", required=true)
    private CloudSqlCredentialResponse credential;

    public CloudSqlCredentialResponse credential() {
        return this.credential;
    }

    /**
     * Database name.
     * 
     */
    @Import(name="database", required=true)
    private String database;

    public String database() {
        return this.database;
    }

    /**
     * Cloud SQL instance ID in the form `project:location:instance`.
     * 
     */
    @Import(name="instanceId", required=true)
    private String instanceId;

    public String instanceId() {
        return this.instanceId;
    }

    /**
     * Type of the Cloud SQL database.
     * 
     */
    @Import(name="type", required=true)
    private String type;

    public String type() {
        return this.type;
    }

    private CloudSqlPropertiesResponse() {}

    private CloudSqlPropertiesResponse(CloudSqlPropertiesResponse $) {
        this.credential = $.credential;
        this.database = $.database;
        this.instanceId = $.instanceId;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CloudSqlPropertiesResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CloudSqlPropertiesResponse $;

        public Builder() {
            $ = new CloudSqlPropertiesResponse();
        }

        public Builder(CloudSqlPropertiesResponse defaults) {
            $ = new CloudSqlPropertiesResponse(Objects.requireNonNull(defaults));
        }

        public Builder credential(CloudSqlCredentialResponse credential) {
            $.credential = credential;
            return this;
        }

        public Builder database(String database) {
            $.database = database;
            return this;
        }

        public Builder instanceId(String instanceId) {
            $.instanceId = instanceId;
            return this;
        }

        public Builder type(String type) {
            $.type = type;
            return this;
        }

        public CloudSqlPropertiesResponse build() {
            $.credential = Objects.requireNonNull($.credential, "expected parameter 'credential' to be non-null");
            $.database = Objects.requireNonNull($.database, "expected parameter 'database' to be non-null");
            $.instanceId = Objects.requireNonNull($.instanceId, "expected parameter 'instanceId' to be non-null");
            $.type = Objects.requireNonNull($.type, "expected parameter 'type' to be non-null");
            return $;
        }
    }

}
