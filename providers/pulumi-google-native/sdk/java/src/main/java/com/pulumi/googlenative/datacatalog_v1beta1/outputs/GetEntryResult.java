// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.datacatalog_v1beta1.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.googlenative.datacatalog_v1beta1.outputs.GoogleCloudDatacatalogV1beta1BigQueryDateShardedSpecResponse;
import com.pulumi.googlenative.datacatalog_v1beta1.outputs.GoogleCloudDatacatalogV1beta1BigQueryTableSpecResponse;
import com.pulumi.googlenative.datacatalog_v1beta1.outputs.GoogleCloudDatacatalogV1beta1GcsFilesetSpecResponse;
import com.pulumi.googlenative.datacatalog_v1beta1.outputs.GoogleCloudDatacatalogV1beta1SchemaResponse;
import com.pulumi.googlenative.datacatalog_v1beta1.outputs.GoogleCloudDatacatalogV1beta1SystemTimestampsResponse;
import com.pulumi.googlenative.datacatalog_v1beta1.outputs.GoogleCloudDatacatalogV1beta1UsageSignalResponse;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetEntryResult {
    /**
     * Specification for a group of BigQuery tables with name pattern `[prefix]YYYYMMDD`. Context: https://cloud.google.com/bigquery/docs/partitioned-tables#partitioning_versus_sharding.
     * 
     */
    private final GoogleCloudDatacatalogV1beta1BigQueryDateShardedSpecResponse bigqueryDateShardedSpec;
    /**
     * Specification that applies to a BigQuery table. This is only valid on entries of type `TABLE`.
     * 
     */
    private final GoogleCloudDatacatalogV1beta1BigQueryTableSpecResponse bigqueryTableSpec;
    /**
     * Entry description, which can consist of several sentences or paragraphs that describe entry contents. Default value is an empty string.
     * 
     */
    private final String description;
    /**
     * Display information such as title and description. A short name to identify the entry, for example, "Analytics Data - Jan 2011". Default value is an empty string.
     * 
     */
    private final String displayName;
    /**
     * Specification that applies to a Cloud Storage fileset. This is only valid on entries of type FILESET.
     * 
     */
    private final GoogleCloudDatacatalogV1beta1GcsFilesetSpecResponse gcsFilesetSpec;
    /**
     * This field indicates the entry's source system that Data Catalog integrates with, such as BigQuery or Pub/Sub.
     * 
     */
    private final String integratedSystem;
    /**
     * The resource this metadata entry refers to. For Google Cloud Platform resources, `linked_resource` is the [full name of the resource](https://cloud.google.com/apis/design/resource_names#full_resource_name). For example, the `linked_resource` for a table resource from BigQuery is: * //bigquery.googleapis.com/projects/projectId/datasets/datasetId/tables/tableId Output only when Entry is of type in the EntryType enum. For entries with user_specified_type, this field is optional and defaults to an empty string.
     * 
     */
    private final String linkedResource;
    /**
     * The Data Catalog resource name of the entry in URL format. Example: * projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}/entries/{entry_id} Note that this Entry and its child resources may not actually be stored in the location in this name.
     * 
     */
    private final String name;
    /**
     * Schema of the entry. An entry might not have any schema attached to it.
     * 
     */
    private final GoogleCloudDatacatalogV1beta1SchemaResponse schema;
    /**
     * Timestamps about the underlying resource, not about this Data Catalog entry. Output only when Entry is of type in the EntryType enum. For entries with user_specified_type, this field is optional and defaults to an empty timestamp.
     * 
     */
    private final GoogleCloudDatacatalogV1beta1SystemTimestampsResponse sourceSystemTimestamps;
    /**
     * The type of the entry. Only used for Entries with types in the EntryType enum.
     * 
     */
    private final String type;
    /**
     * Statistics on the usage level of the resource.
     * 
     */
    private final GoogleCloudDatacatalogV1beta1UsageSignalResponse usageSignal;
    /**
     * This field indicates the entry's source system that Data Catalog does not integrate with. `user_specified_system` strings must begin with a letter or underscore and can only contain letters, numbers, and underscores; are case insensitive; must be at least 1 character and at most 64 characters long.
     * 
     */
    private final String userSpecifiedSystem;
    /**
     * Entry type if it does not fit any of the input-allowed values listed in `EntryType` enum above. When creating an entry, users should check the enum values first, if nothing matches the entry to be created, then provide a custom value, for example "my_special_type". `user_specified_type` strings must begin with a letter or underscore and can only contain letters, numbers, and underscores; are case insensitive; must be at least 1 character and at most 64 characters long. Currently, only FILESET enum value is allowed. All other entries created through Data Catalog must use `user_specified_type`.
     * 
     */
    private final String userSpecifiedType;

    @CustomType.Constructor
    private GetEntryResult(
        @CustomType.Parameter("bigqueryDateShardedSpec") GoogleCloudDatacatalogV1beta1BigQueryDateShardedSpecResponse bigqueryDateShardedSpec,
        @CustomType.Parameter("bigqueryTableSpec") GoogleCloudDatacatalogV1beta1BigQueryTableSpecResponse bigqueryTableSpec,
        @CustomType.Parameter("description") String description,
        @CustomType.Parameter("displayName") String displayName,
        @CustomType.Parameter("gcsFilesetSpec") GoogleCloudDatacatalogV1beta1GcsFilesetSpecResponse gcsFilesetSpec,
        @CustomType.Parameter("integratedSystem") String integratedSystem,
        @CustomType.Parameter("linkedResource") String linkedResource,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("schema") GoogleCloudDatacatalogV1beta1SchemaResponse schema,
        @CustomType.Parameter("sourceSystemTimestamps") GoogleCloudDatacatalogV1beta1SystemTimestampsResponse sourceSystemTimestamps,
        @CustomType.Parameter("type") String type,
        @CustomType.Parameter("usageSignal") GoogleCloudDatacatalogV1beta1UsageSignalResponse usageSignal,
        @CustomType.Parameter("userSpecifiedSystem") String userSpecifiedSystem,
        @CustomType.Parameter("userSpecifiedType") String userSpecifiedType) {
        this.bigqueryDateShardedSpec = bigqueryDateShardedSpec;
        this.bigqueryTableSpec = bigqueryTableSpec;
        this.description = description;
        this.displayName = displayName;
        this.gcsFilesetSpec = gcsFilesetSpec;
        this.integratedSystem = integratedSystem;
        this.linkedResource = linkedResource;
        this.name = name;
        this.schema = schema;
        this.sourceSystemTimestamps = sourceSystemTimestamps;
        this.type = type;
        this.usageSignal = usageSignal;
        this.userSpecifiedSystem = userSpecifiedSystem;
        this.userSpecifiedType = userSpecifiedType;
    }

    /**
     * Specification for a group of BigQuery tables with name pattern `[prefix]YYYYMMDD`. Context: https://cloud.google.com/bigquery/docs/partitioned-tables#partitioning_versus_sharding.
     * 
    */
    public GoogleCloudDatacatalogV1beta1BigQueryDateShardedSpecResponse bigqueryDateShardedSpec() {
        return this.bigqueryDateShardedSpec;
    }
    /**
     * Specification that applies to a BigQuery table. This is only valid on entries of type `TABLE`.
     * 
    */
    public GoogleCloudDatacatalogV1beta1BigQueryTableSpecResponse bigqueryTableSpec() {
        return this.bigqueryTableSpec;
    }
    /**
     * Entry description, which can consist of several sentences or paragraphs that describe entry contents. Default value is an empty string.
     * 
    */
    public String description() {
        return this.description;
    }
    /**
     * Display information such as title and description. A short name to identify the entry, for example, "Analytics Data - Jan 2011". Default value is an empty string.
     * 
    */
    public String displayName() {
        return this.displayName;
    }
    /**
     * Specification that applies to a Cloud Storage fileset. This is only valid on entries of type FILESET.
     * 
    */
    public GoogleCloudDatacatalogV1beta1GcsFilesetSpecResponse gcsFilesetSpec() {
        return this.gcsFilesetSpec;
    }
    /**
     * This field indicates the entry's source system that Data Catalog integrates with, such as BigQuery or Pub/Sub.
     * 
    */
    public String integratedSystem() {
        return this.integratedSystem;
    }
    /**
     * The resource this metadata entry refers to. For Google Cloud Platform resources, `linked_resource` is the [full name of the resource](https://cloud.google.com/apis/design/resource_names#full_resource_name). For example, the `linked_resource` for a table resource from BigQuery is: * //bigquery.googleapis.com/projects/projectId/datasets/datasetId/tables/tableId Output only when Entry is of type in the EntryType enum. For entries with user_specified_type, this field is optional and defaults to an empty string.
     * 
    */
    public String linkedResource() {
        return this.linkedResource;
    }
    /**
     * The Data Catalog resource name of the entry in URL format. Example: * projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}/entries/{entry_id} Note that this Entry and its child resources may not actually be stored in the location in this name.
     * 
    */
    public String name() {
        return this.name;
    }
    /**
     * Schema of the entry. An entry might not have any schema attached to it.
     * 
    */
    public GoogleCloudDatacatalogV1beta1SchemaResponse schema() {
        return this.schema;
    }
    /**
     * Timestamps about the underlying resource, not about this Data Catalog entry. Output only when Entry is of type in the EntryType enum. For entries with user_specified_type, this field is optional and defaults to an empty timestamp.
     * 
    */
    public GoogleCloudDatacatalogV1beta1SystemTimestampsResponse sourceSystemTimestamps() {
        return this.sourceSystemTimestamps;
    }
    /**
     * The type of the entry. Only used for Entries with types in the EntryType enum.
     * 
    */
    public String type() {
        return this.type;
    }
    /**
     * Statistics on the usage level of the resource.
     * 
    */
    public GoogleCloudDatacatalogV1beta1UsageSignalResponse usageSignal() {
        return this.usageSignal;
    }
    /**
     * This field indicates the entry's source system that Data Catalog does not integrate with. `user_specified_system` strings must begin with a letter or underscore and can only contain letters, numbers, and underscores; are case insensitive; must be at least 1 character and at most 64 characters long.
     * 
    */
    public String userSpecifiedSystem() {
        return this.userSpecifiedSystem;
    }
    /**
     * Entry type if it does not fit any of the input-allowed values listed in `EntryType` enum above. When creating an entry, users should check the enum values first, if nothing matches the entry to be created, then provide a custom value, for example "my_special_type". `user_specified_type` strings must begin with a letter or underscore and can only contain letters, numbers, and underscores; are case insensitive; must be at least 1 character and at most 64 characters long. Currently, only FILESET enum value is allowed. All other entries created through Data Catalog must use `user_specified_type`.
     * 
    */
    public String userSpecifiedType() {
        return this.userSpecifiedType;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetEntryResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GoogleCloudDatacatalogV1beta1BigQueryDateShardedSpecResponse bigqueryDateShardedSpec;
        private GoogleCloudDatacatalogV1beta1BigQueryTableSpecResponse bigqueryTableSpec;
        private String description;
        private String displayName;
        private GoogleCloudDatacatalogV1beta1GcsFilesetSpecResponse gcsFilesetSpec;
        private String integratedSystem;
        private String linkedResource;
        private String name;
        private GoogleCloudDatacatalogV1beta1SchemaResponse schema;
        private GoogleCloudDatacatalogV1beta1SystemTimestampsResponse sourceSystemTimestamps;
        private String type;
        private GoogleCloudDatacatalogV1beta1UsageSignalResponse usageSignal;
        private String userSpecifiedSystem;
        private String userSpecifiedType;

        public Builder() {
    	      // Empty
        }

        public Builder(GetEntryResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bigqueryDateShardedSpec = defaults.bigqueryDateShardedSpec;
    	      this.bigqueryTableSpec = defaults.bigqueryTableSpec;
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.gcsFilesetSpec = defaults.gcsFilesetSpec;
    	      this.integratedSystem = defaults.integratedSystem;
    	      this.linkedResource = defaults.linkedResource;
    	      this.name = defaults.name;
    	      this.schema = defaults.schema;
    	      this.sourceSystemTimestamps = defaults.sourceSystemTimestamps;
    	      this.type = defaults.type;
    	      this.usageSignal = defaults.usageSignal;
    	      this.userSpecifiedSystem = defaults.userSpecifiedSystem;
    	      this.userSpecifiedType = defaults.userSpecifiedType;
        }

        public Builder bigqueryDateShardedSpec(GoogleCloudDatacatalogV1beta1BigQueryDateShardedSpecResponse bigqueryDateShardedSpec) {
            this.bigqueryDateShardedSpec = Objects.requireNonNull(bigqueryDateShardedSpec);
            return this;
        }
        public Builder bigqueryTableSpec(GoogleCloudDatacatalogV1beta1BigQueryTableSpecResponse bigqueryTableSpec) {
            this.bigqueryTableSpec = Objects.requireNonNull(bigqueryTableSpec);
            return this;
        }
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        public Builder displayName(String displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }
        public Builder gcsFilesetSpec(GoogleCloudDatacatalogV1beta1GcsFilesetSpecResponse gcsFilesetSpec) {
            this.gcsFilesetSpec = Objects.requireNonNull(gcsFilesetSpec);
            return this;
        }
        public Builder integratedSystem(String integratedSystem) {
            this.integratedSystem = Objects.requireNonNull(integratedSystem);
            return this;
        }
        public Builder linkedResource(String linkedResource) {
            this.linkedResource = Objects.requireNonNull(linkedResource);
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder schema(GoogleCloudDatacatalogV1beta1SchemaResponse schema) {
            this.schema = Objects.requireNonNull(schema);
            return this;
        }
        public Builder sourceSystemTimestamps(GoogleCloudDatacatalogV1beta1SystemTimestampsResponse sourceSystemTimestamps) {
            this.sourceSystemTimestamps = Objects.requireNonNull(sourceSystemTimestamps);
            return this;
        }
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public Builder usageSignal(GoogleCloudDatacatalogV1beta1UsageSignalResponse usageSignal) {
            this.usageSignal = Objects.requireNonNull(usageSignal);
            return this;
        }
        public Builder userSpecifiedSystem(String userSpecifiedSystem) {
            this.userSpecifiedSystem = Objects.requireNonNull(userSpecifiedSystem);
            return this;
        }
        public Builder userSpecifiedType(String userSpecifiedType) {
            this.userSpecifiedType = Objects.requireNonNull(userSpecifiedType);
            return this;
        }        public GetEntryResult build() {
            return new GetEntryResult(bigqueryDateShardedSpec, bigqueryTableSpec, description, displayName, gcsFilesetSpec, integratedSystem, linkedResource, name, schema, sourceSystemTimestamps, type, usageSignal, userSpecifiedSystem, userSpecifiedType);
        }
    }
}
