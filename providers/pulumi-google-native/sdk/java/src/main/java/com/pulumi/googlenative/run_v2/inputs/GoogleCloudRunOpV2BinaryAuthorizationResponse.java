// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.run_v2.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;


/**
 * Settings for Binary Authorization feature.
 * 
 */
public final class GoogleCloudRunOpV2BinaryAuthorizationResponse extends com.pulumi.resources.InvokeArgs {

    public static final GoogleCloudRunOpV2BinaryAuthorizationResponse Empty = new GoogleCloudRunOpV2BinaryAuthorizationResponse();

    /**
     * If present, indicates to use Breakglass using this justification. If use_default is False, then it must be empty. For more information on breakglass, see https://cloud.google.com/binary-authorization/docs/using-breakglass
     * 
     */
    @Import(name="breakglassJustification", required=true)
    private String breakglassJustification;

    /**
     * @return If present, indicates to use Breakglass using this justification. If use_default is False, then it must be empty. For more information on breakglass, see https://cloud.google.com/binary-authorization/docs/using-breakglass
     * 
     */
    public String breakglassJustification() {
        return this.breakglassJustification;
    }

    /**
     * If True, indicates to use the default project&#39;s binary authorization policy. If False, binary authorization will be disabled.
     * 
     */
    @Import(name="useDefault", required=true)
    private Boolean useDefault;

    /**
     * @return If True, indicates to use the default project&#39;s binary authorization policy. If False, binary authorization will be disabled.
     * 
     */
    public Boolean useDefault() {
        return this.useDefault;
    }

    private GoogleCloudRunOpV2BinaryAuthorizationResponse() {}

    private GoogleCloudRunOpV2BinaryAuthorizationResponse(GoogleCloudRunOpV2BinaryAuthorizationResponse $) {
        this.breakglassJustification = $.breakglassJustification;
        this.useDefault = $.useDefault;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GoogleCloudRunOpV2BinaryAuthorizationResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GoogleCloudRunOpV2BinaryAuthorizationResponse $;

        public Builder() {
            $ = new GoogleCloudRunOpV2BinaryAuthorizationResponse();
        }

        public Builder(GoogleCloudRunOpV2BinaryAuthorizationResponse defaults) {
            $ = new GoogleCloudRunOpV2BinaryAuthorizationResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param breakglassJustification If present, indicates to use Breakglass using this justification. If use_default is False, then it must be empty. For more information on breakglass, see https://cloud.google.com/binary-authorization/docs/using-breakglass
         * 
         * @return builder
         * 
         */
        public Builder breakglassJustification(String breakglassJustification) {
            $.breakglassJustification = breakglassJustification;
            return this;
        }

        /**
         * @param useDefault If True, indicates to use the default project&#39;s binary authorization policy. If False, binary authorization will be disabled.
         * 
         * @return builder
         * 
         */
        public Builder useDefault(Boolean useDefault) {
            $.useDefault = useDefault;
            return this;
        }

        public GoogleCloudRunOpV2BinaryAuthorizationResponse build() {
            $.breakglassJustification = Objects.requireNonNull($.breakglassJustification, "expected parameter 'breakglassJustification' to be non-null");
            $.useDefault = Objects.requireNonNull($.useDefault, "expected parameter 'useDefault' to be non-null");
            return $;
        }
    }

}
