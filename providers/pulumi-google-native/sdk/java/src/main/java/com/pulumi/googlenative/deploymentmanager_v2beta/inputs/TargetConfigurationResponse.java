// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.deploymentmanager_v2beta.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.deploymentmanager_v2beta.inputs.ConfigFileResponse;
import com.pulumi.googlenative.deploymentmanager_v2beta.inputs.ImportFileResponse;
import java.util.List;
import java.util.Objects;


public final class TargetConfigurationResponse extends com.pulumi.resources.InvokeArgs {

    public static final TargetConfigurationResponse Empty = new TargetConfigurationResponse();

    /**
     * The configuration to use for this deployment.
     * 
     */
    @Import(name="config", required=true)
    private ConfigFileResponse config;

    public ConfigFileResponse config() {
        return this.config;
    }

    /**
     * Specifies any files to import for this configuration. This can be used to import templates or other files. For example, you might import a text file in order to use the file in a template.
     * 
     */
    @Import(name="imports", required=true)
    private List<ImportFileResponse> imports;

    public List<ImportFileResponse> imports() {
        return this.imports;
    }

    private TargetConfigurationResponse() {}

    private TargetConfigurationResponse(TargetConfigurationResponse $) {
        this.config = $.config;
        this.imports = $.imports;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TargetConfigurationResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TargetConfigurationResponse $;

        public Builder() {
            $ = new TargetConfigurationResponse();
        }

        public Builder(TargetConfigurationResponse defaults) {
            $ = new TargetConfigurationResponse(Objects.requireNonNull(defaults));
        }

        public Builder config(ConfigFileResponse config) {
            $.config = config;
            return this;
        }

        public Builder imports(List<ImportFileResponse> imports) {
            $.imports = imports;
            return this;
        }

        public Builder imports(ImportFileResponse... imports) {
            return imports(List.of(imports));
        }

        public TargetConfigurationResponse build() {
            $.config = Objects.requireNonNull($.config, "expected parameter 'config' to be non-null");
            $.imports = Objects.requireNonNull($.imports, "expected parameter 'imports' to be non-null");
            return $;
        }
    }

}
