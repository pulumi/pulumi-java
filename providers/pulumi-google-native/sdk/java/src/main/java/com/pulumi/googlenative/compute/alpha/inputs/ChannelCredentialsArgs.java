// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.compute.alpha.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.compute.alpha.enums.ChannelCredentialsChannelCredentialType;
import com.pulumi.googlenative.compute.alpha.inputs.TlsCertificatePathsArgs;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * [Deprecated] gRPC channel credentials to access the SDS server. gRPC channel credentials to access the SDS server.
 * 
 */
public final class ChannelCredentialsArgs extends com.pulumi.resources.ResourceArgs {

    public static final ChannelCredentialsArgs Empty = new ChannelCredentialsArgs();

    /**
     * The call credentials to access the SDS server.
     * 
     */
    @Import(name="certificates")
    private @Nullable Output<TlsCertificatePathsArgs> certificates;

    /**
     * @return The call credentials to access the SDS server.
     * 
     */
    public Optional<Output<TlsCertificatePathsArgs>> certificates() {
        return Optional.ofNullable(this.certificates);
    }

    /**
     * The channel credentials to access the SDS server. This field can be set to one of the following: CERTIFICATES: Use TLS certificates to access the SDS server. GCE_VM: Use local GCE VM credentials to access the SDS server.
     * 
     */
    @Import(name="channelCredentialType")
    private @Nullable Output<ChannelCredentialsChannelCredentialType> channelCredentialType;

    /**
     * @return The channel credentials to access the SDS server. This field can be set to one of the following: CERTIFICATES: Use TLS certificates to access the SDS server. GCE_VM: Use local GCE VM credentials to access the SDS server.
     * 
     */
    public Optional<Output<ChannelCredentialsChannelCredentialType>> channelCredentialType() {
        return Optional.ofNullable(this.channelCredentialType);
    }

    private ChannelCredentialsArgs() {}

    private ChannelCredentialsArgs(ChannelCredentialsArgs $) {
        this.certificates = $.certificates;
        this.channelCredentialType = $.channelCredentialType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ChannelCredentialsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ChannelCredentialsArgs $;

        public Builder() {
            $ = new ChannelCredentialsArgs();
        }

        public Builder(ChannelCredentialsArgs defaults) {
            $ = new ChannelCredentialsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param certificates The call credentials to access the SDS server.
         * 
         * @return builder
         * 
         */
        public Builder certificates(@Nullable Output<TlsCertificatePathsArgs> certificates) {
            $.certificates = certificates;
            return this;
        }

        /**
         * @param certificates The call credentials to access the SDS server.
         * 
         * @return builder
         * 
         */
        public Builder certificates(TlsCertificatePathsArgs certificates) {
            return certificates(Output.of(certificates));
        }

        /**
         * @param channelCredentialType The channel credentials to access the SDS server. This field can be set to one of the following: CERTIFICATES: Use TLS certificates to access the SDS server. GCE_VM: Use local GCE VM credentials to access the SDS server.
         * 
         * @return builder
         * 
         */
        public Builder channelCredentialType(@Nullable Output<ChannelCredentialsChannelCredentialType> channelCredentialType) {
            $.channelCredentialType = channelCredentialType;
            return this;
        }

        /**
         * @param channelCredentialType The channel credentials to access the SDS server. This field can be set to one of the following: CERTIFICATES: Use TLS certificates to access the SDS server. GCE_VM: Use local GCE VM credentials to access the SDS server.
         * 
         * @return builder
         * 
         */
        public Builder channelCredentialType(ChannelCredentialsChannelCredentialType channelCredentialType) {
            return channelCredentialType(Output.of(channelCredentialType));
        }

        public ChannelCredentialsArgs build() {
            return $;
        }
    }

}
