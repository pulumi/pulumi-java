// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.cloudbuild_v1.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.cloudbuild_v1.inputs.TimeSpanResponse;
import java.lang.String;
import java.util.Objects;


/**
 * An image built by the pipeline.
 * 
 */
public final class BuiltImageResponse extends com.pulumi.resources.InvokeArgs {

    public static final BuiltImageResponse Empty = new BuiltImageResponse();

    /**
     * Docker Registry 2.0 digest.
     * 
     */
    @Import(name="digest", required=true)
    private String digest;

    public String digest() {
        return this.digest;
    }

    /**
     * Name used to push the container image to Google Container Registry, as presented to `docker push`.
     * 
     */
    @Import(name="name", required=true)
    private String name;

    public String name() {
        return this.name;
    }

    /**
     * Stores timing information for pushing the specified image.
     * 
     */
    @Import(name="pushTiming", required=true)
    private TimeSpanResponse pushTiming;

    public TimeSpanResponse pushTiming() {
        return this.pushTiming;
    }

    private BuiltImageResponse() {}

    private BuiltImageResponse(BuiltImageResponse $) {
        this.digest = $.digest;
        this.name = $.name;
        this.pushTiming = $.pushTiming;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BuiltImageResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BuiltImageResponse $;

        public Builder() {
            $ = new BuiltImageResponse();
        }

        public Builder(BuiltImageResponse defaults) {
            $ = new BuiltImageResponse(Objects.requireNonNull(defaults));
        }

        public Builder digest(String digest) {
            $.digest = digest;
            return this;
        }

        public Builder name(String name) {
            $.name = name;
            return this;
        }

        public Builder pushTiming(TimeSpanResponse pushTiming) {
            $.pushTiming = pushTiming;
            return this;
        }

        public BuiltImageResponse build() {
            $.digest = Objects.requireNonNull($.digest, "expected parameter 'digest' to be non-null");
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            $.pushTiming = Objects.requireNonNull($.pushTiming, "expected parameter 'pushTiming' to be non-null");
            return $;
        }
    }

}
