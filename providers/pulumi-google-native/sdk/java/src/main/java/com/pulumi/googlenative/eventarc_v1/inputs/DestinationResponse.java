// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.eventarc_v1.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.eventarc_v1.inputs.CloudRunResponse;
import com.pulumi.googlenative.eventarc_v1.inputs.GKEResponse;
import java.lang.String;
import java.util.Objects;


/**
 * Represents a target of an invocation over HTTP.
 * 
 */
public final class DestinationResponse extends com.pulumi.resources.InvokeArgs {

    public static final DestinationResponse Empty = new DestinationResponse();

    /**
     * The Cloud Function resource name. Only Cloud Functions V2 is supported. Format: projects/{project}/locations/{location}/functions/{function}
     * 
     */
    @Import(name="cloudFunction", required=true)
    private String cloudFunction;

    public String cloudFunction() {
        return this.cloudFunction;
    }

    /**
     * Cloud Run fully-managed resource that receives the events. The resource should be in the same project as the trigger.
     * 
     */
    @Import(name="cloudRun", required=true)
    private CloudRunResponse cloudRun;

    public CloudRunResponse cloudRun() {
        return this.cloudRun;
    }

    /**
     * A GKE service capable of receiving events. The service should be running in the same project as the trigger.
     * 
     */
    @Import(name="gke", required=true)
    private GKEResponse gke;

    public GKEResponse gke() {
        return this.gke;
    }

    private DestinationResponse() {}

    private DestinationResponse(DestinationResponse $) {
        this.cloudFunction = $.cloudFunction;
        this.cloudRun = $.cloudRun;
        this.gke = $.gke;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DestinationResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DestinationResponse $;

        public Builder() {
            $ = new DestinationResponse();
        }

        public Builder(DestinationResponse defaults) {
            $ = new DestinationResponse(Objects.requireNonNull(defaults));
        }

        public Builder cloudFunction(String cloudFunction) {
            $.cloudFunction = cloudFunction;
            return this;
        }

        public Builder cloudRun(CloudRunResponse cloudRun) {
            $.cloudRun = cloudRun;
            return this;
        }

        public Builder gke(GKEResponse gke) {
            $.gke = gke;
            return this;
        }

        public DestinationResponse build() {
            $.cloudFunction = Objects.requireNonNull($.cloudFunction, "expected parameter 'cloudFunction' to be non-null");
            $.cloudRun = Objects.requireNonNull($.cloudRun, "expected parameter 'cloudRun' to be non-null");
            $.gke = Objects.requireNonNull($.gke, "expected parameter 'gke' to be non-null");
            return $;
        }
    }

}
