// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.compute.beta.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class InstanceGroupManagerAutoHealingPolicyArgs extends com.pulumi.resources.ResourceArgs {

    public static final InstanceGroupManagerAutoHealingPolicyArgs Empty = new InstanceGroupManagerAutoHealingPolicyArgs();

    /**
     * The URL for the health check that signals autohealing.
     * 
     */
    @Import(name="healthCheck")
    private @Nullable Output<String> healthCheck;

    /**
     * @return The URL for the health check that signals autohealing.
     * 
     */
    public Optional<Output<String>> healthCheck() {
        return Optional.ofNullable(this.healthCheck);
    }

    /**
     * The number of seconds that the managed instance group waits before it applies autohealing policies to new instances or recently recreated instances. This initial delay allows instances to initialize and run their startup scripts before the instance group determines that they are UNHEALTHY. This prevents the managed instance group from recreating its instances prematurely. This value must be from range [0, 3600].
     * 
     */
    @Import(name="initialDelaySec")
    private @Nullable Output<Integer> initialDelaySec;

    /**
     * @return The number of seconds that the managed instance group waits before it applies autohealing policies to new instances or recently recreated instances. This initial delay allows instances to initialize and run their startup scripts before the instance group determines that they are UNHEALTHY. This prevents the managed instance group from recreating its instances prematurely. This value must be from range [0, 3600].
     * 
     */
    public Optional<Output<Integer>> initialDelaySec() {
        return Optional.ofNullable(this.initialDelaySec);
    }

    private InstanceGroupManagerAutoHealingPolicyArgs() {}

    private InstanceGroupManagerAutoHealingPolicyArgs(InstanceGroupManagerAutoHealingPolicyArgs $) {
        this.healthCheck = $.healthCheck;
        this.initialDelaySec = $.initialDelaySec;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InstanceGroupManagerAutoHealingPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InstanceGroupManagerAutoHealingPolicyArgs $;

        public Builder() {
            $ = new InstanceGroupManagerAutoHealingPolicyArgs();
        }

        public Builder(InstanceGroupManagerAutoHealingPolicyArgs defaults) {
            $ = new InstanceGroupManagerAutoHealingPolicyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param healthCheck The URL for the health check that signals autohealing.
         * 
         * @return builder
         * 
         */
        public Builder healthCheck(@Nullable Output<String> healthCheck) {
            $.healthCheck = healthCheck;
            return this;
        }

        /**
         * @param healthCheck The URL for the health check that signals autohealing.
         * 
         * @return builder
         * 
         */
        public Builder healthCheck(String healthCheck) {
            return healthCheck(Output.of(healthCheck));
        }

        /**
         * @param initialDelaySec The number of seconds that the managed instance group waits before it applies autohealing policies to new instances or recently recreated instances. This initial delay allows instances to initialize and run their startup scripts before the instance group determines that they are UNHEALTHY. This prevents the managed instance group from recreating its instances prematurely. This value must be from range [0, 3600].
         * 
         * @return builder
         * 
         */
        public Builder initialDelaySec(@Nullable Output<Integer> initialDelaySec) {
            $.initialDelaySec = initialDelaySec;
            return this;
        }

        /**
         * @param initialDelaySec The number of seconds that the managed instance group waits before it applies autohealing policies to new instances or recently recreated instances. This initial delay allows instances to initialize and run their startup scripts before the instance group determines that they are UNHEALTHY. This prevents the managed instance group from recreating its instances prematurely. This value must be from range [0, 3600].
         * 
         * @return builder
         * 
         */
        public Builder initialDelaySec(Integer initialDelaySec) {
            return initialDelaySec(Output.of(initialDelaySec));
        }

        public InstanceGroupManagerAutoHealingPolicyArgs build() {
            return $;
        }
    }

}
