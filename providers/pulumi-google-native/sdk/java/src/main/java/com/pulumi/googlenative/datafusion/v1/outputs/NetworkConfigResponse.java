// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.datafusion.v1.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class NetworkConfigResponse {
    /**
     * @return The IP range in CIDR notation to use for the managed Data Fusion instance nodes. This range must not overlap with any other ranges used in the customer network.
     * 
     */
    private final String ipAllocation;
    /**
     * @return Name of the network in the customer project with which the Tenant Project will be peered for executing pipelines. In case of shared VPC where the network resides in another host project the network should specified in the form of projects/{host-project-id}/global/networks/{network}
     * 
     */
    private final String network;

    @CustomType.Constructor
    private NetworkConfigResponse(
        @CustomType.Parameter("ipAllocation") String ipAllocation,
        @CustomType.Parameter("network") String network) {
        this.ipAllocation = ipAllocation;
        this.network = network;
    }

    /**
     * @return The IP range in CIDR notation to use for the managed Data Fusion instance nodes. This range must not overlap with any other ranges used in the customer network.
     * 
     */
    public String ipAllocation() {
        return this.ipAllocation;
    }
    /**
     * @return Name of the network in the customer project with which the Tenant Project will be peered for executing pipelines. In case of shared VPC where the network resides in another host project the network should specified in the form of projects/{host-project-id}/global/networks/{network}
     * 
     */
    public String network() {
        return this.network;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(NetworkConfigResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String ipAllocation;
        private String network;

        public Builder() {
    	      // Empty
        }

        public Builder(NetworkConfigResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.ipAllocation = defaults.ipAllocation;
    	      this.network = defaults.network;
        }

        public Builder ipAllocation(String ipAllocation) {
            this.ipAllocation = Objects.requireNonNull(ipAllocation);
            return this;
        }
        public Builder network(String network) {
            this.network = Objects.requireNonNull(network);
            return this;
        }        public NetworkConfigResponse build() {
            return new NetworkConfigResponse(ipAllocation, network);
        }
    }
}
