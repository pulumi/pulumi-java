// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.compute_alpha.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class BackendServiceIAPOAuth2ClientInfoArgs extends com.pulumi.resources.ResourceArgs {

    public static final BackendServiceIAPOAuth2ClientInfoArgs Empty = new BackendServiceIAPOAuth2ClientInfoArgs();

    /**
     * Application name to be used in OAuth consent screen.
     * 
     */
    @Import(name="applicationName")
      private final @Nullable Output<String> applicationName;

    public Output<String> applicationName() {
        return this.applicationName == null ? Codegen.empty() : this.applicationName;
    }

    /**
     * Name of the client to be generated. Optional - If not provided, the name will be autogenerated by the backend.
     * 
     */
    @Import(name="clientName")
      private final @Nullable Output<String> clientName;

    public Output<String> clientName() {
        return this.clientName == null ? Codegen.empty() : this.clientName;
    }

    /**
     * Developer's information to be used in OAuth consent screen.
     * 
     */
    @Import(name="developerEmailAddress")
      private final @Nullable Output<String> developerEmailAddress;

    public Output<String> developerEmailAddress() {
        return this.developerEmailAddress == null ? Codegen.empty() : this.developerEmailAddress;
    }

    public BackendServiceIAPOAuth2ClientInfoArgs(
        @Nullable Output<String> applicationName,
        @Nullable Output<String> clientName,
        @Nullable Output<String> developerEmailAddress) {
        this.applicationName = applicationName;
        this.clientName = clientName;
        this.developerEmailAddress = developerEmailAddress;
    }

    private BackendServiceIAPOAuth2ClientInfoArgs() {
        this.applicationName = Codegen.empty();
        this.clientName = Codegen.empty();
        this.developerEmailAddress = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BackendServiceIAPOAuth2ClientInfoArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> applicationName;
        private @Nullable Output<String> clientName;
        private @Nullable Output<String> developerEmailAddress;

        public Builder() {
    	      // Empty
        }

        public Builder(BackendServiceIAPOAuth2ClientInfoArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.applicationName = defaults.applicationName;
    	      this.clientName = defaults.clientName;
    	      this.developerEmailAddress = defaults.developerEmailAddress;
        }

        public Builder applicationName(@Nullable Output<String> applicationName) {
            this.applicationName = applicationName;
            return this;
        }
        public Builder applicationName(@Nullable String applicationName) {
            this.applicationName = Codegen.ofNullable(applicationName);
            return this;
        }
        public Builder clientName(@Nullable Output<String> clientName) {
            this.clientName = clientName;
            return this;
        }
        public Builder clientName(@Nullable String clientName) {
            this.clientName = Codegen.ofNullable(clientName);
            return this;
        }
        public Builder developerEmailAddress(@Nullable Output<String> developerEmailAddress) {
            this.developerEmailAddress = developerEmailAddress;
            return this;
        }
        public Builder developerEmailAddress(@Nullable String developerEmailAddress) {
            this.developerEmailAddress = Codegen.ofNullable(developerEmailAddress);
            return this;
        }        public BackendServiceIAPOAuth2ClientInfoArgs build() {
            return new BackendServiceIAPOAuth2ClientInfoArgs(applicationName, clientName, developerEmailAddress);
        }
    }
}
