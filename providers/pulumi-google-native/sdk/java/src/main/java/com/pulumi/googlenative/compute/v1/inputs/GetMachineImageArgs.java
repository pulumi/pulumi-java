// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.compute.v1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetMachineImageArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetMachineImageArgs Empty = new GetMachineImageArgs();

    @Import(name="machineImage", required=true)
    private Output<String> machineImage;

    public Output<String> machineImage() {
        return this.machineImage;
    }

    @Import(name="project")
    private @Nullable Output<String> project;

    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    private GetMachineImageArgs() {}

    private GetMachineImageArgs(GetMachineImageArgs $) {
        this.machineImage = $.machineImage;
        this.project = $.project;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetMachineImageArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetMachineImageArgs $;

        public Builder() {
            $ = new GetMachineImageArgs();
        }

        public Builder(GetMachineImageArgs defaults) {
            $ = new GetMachineImageArgs(Objects.requireNonNull(defaults));
        }

        public Builder machineImage(Output<String> machineImage) {
            $.machineImage = machineImage;
            return this;
        }

        public Builder machineImage(String machineImage) {
            return machineImage(Output.of(machineImage));
        }

        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        public Builder project(String project) {
            return project(Output.of(project));
        }

        public GetMachineImageArgs build() {
            $.machineImage = Objects.requireNonNull($.machineImage, "expected parameter 'machineImage' to be non-null");
            return $;
        }
    }

}
