// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.bigquery.v2.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class StreamingbufferResponse {
    /**
     * @return A lower-bound estimate of the number of bytes currently in the streaming buffer.
     * 
     */
    private final String estimatedBytes;
    /**
     * @return A lower-bound estimate of the number of rows currently in the streaming buffer.
     * 
     */
    private final String estimatedRows;
    /**
     * @return Contains the timestamp of the oldest entry in the streaming buffer, in milliseconds since the epoch, if the streaming buffer is available.
     * 
     */
    private final String oldestEntryTime;

    @CustomType.Constructor
    private StreamingbufferResponse(
        @CustomType.Parameter("estimatedBytes") String estimatedBytes,
        @CustomType.Parameter("estimatedRows") String estimatedRows,
        @CustomType.Parameter("oldestEntryTime") String oldestEntryTime) {
        this.estimatedBytes = estimatedBytes;
        this.estimatedRows = estimatedRows;
        this.oldestEntryTime = oldestEntryTime;
    }

    /**
     * @return A lower-bound estimate of the number of bytes currently in the streaming buffer.
     * 
     */
    public String estimatedBytes() {
        return this.estimatedBytes;
    }
    /**
     * @return A lower-bound estimate of the number of rows currently in the streaming buffer.
     * 
     */
    public String estimatedRows() {
        return this.estimatedRows;
    }
    /**
     * @return Contains the timestamp of the oldest entry in the streaming buffer, in milliseconds since the epoch, if the streaming buffer is available.
     * 
     */
    public String oldestEntryTime() {
        return this.oldestEntryTime;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(StreamingbufferResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String estimatedBytes;
        private String estimatedRows;
        private String oldestEntryTime;

        public Builder() {
    	      // Empty
        }

        public Builder(StreamingbufferResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.estimatedBytes = defaults.estimatedBytes;
    	      this.estimatedRows = defaults.estimatedRows;
    	      this.oldestEntryTime = defaults.oldestEntryTime;
        }

        public Builder estimatedBytes(String estimatedBytes) {
            this.estimatedBytes = Objects.requireNonNull(estimatedBytes);
            return this;
        }
        public Builder estimatedRows(String estimatedRows) {
            this.estimatedRows = Objects.requireNonNull(estimatedRows);
            return this;
        }
        public Builder oldestEntryTime(String oldestEntryTime) {
            this.oldestEntryTime = Objects.requireNonNull(oldestEntryTime);
            return this;
        }        public StreamingbufferResponse build() {
            return new StreamingbufferResponse(estimatedBytes, estimatedRows, oldestEntryTime);
        }
    }
}
