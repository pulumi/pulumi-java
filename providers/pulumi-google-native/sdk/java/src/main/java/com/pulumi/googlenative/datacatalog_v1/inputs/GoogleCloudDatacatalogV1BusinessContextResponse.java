// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.datacatalog_v1.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.datacatalog_v1.inputs.GoogleCloudDatacatalogV1ContactsResponse;
import com.pulumi.googlenative.datacatalog_v1.inputs.GoogleCloudDatacatalogV1EntryOverviewResponse;
import java.util.Objects;


/**
 * Business Context of the entry.
 * 
 */
public final class GoogleCloudDatacatalogV1BusinessContextResponse extends com.pulumi.resources.InvokeArgs {

    public static final GoogleCloudDatacatalogV1BusinessContextResponse Empty = new GoogleCloudDatacatalogV1BusinessContextResponse();

    /**
     * Contact people for the entry.
     * 
     */
    @Import(name="contacts", required=true)
    private GoogleCloudDatacatalogV1ContactsResponse contacts;

    /**
     * @return Contact people for the entry.
     * 
     */
    public GoogleCloudDatacatalogV1ContactsResponse contacts() {
        return this.contacts;
    }

    /**
     * Entry overview fields for rich text descriptions of entries.
     * 
     */
    @Import(name="entryOverview", required=true)
    private GoogleCloudDatacatalogV1EntryOverviewResponse entryOverview;

    /**
     * @return Entry overview fields for rich text descriptions of entries.
     * 
     */
    public GoogleCloudDatacatalogV1EntryOverviewResponse entryOverview() {
        return this.entryOverview;
    }

    private GoogleCloudDatacatalogV1BusinessContextResponse() {}

    private GoogleCloudDatacatalogV1BusinessContextResponse(GoogleCloudDatacatalogV1BusinessContextResponse $) {
        this.contacts = $.contacts;
        this.entryOverview = $.entryOverview;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GoogleCloudDatacatalogV1BusinessContextResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GoogleCloudDatacatalogV1BusinessContextResponse $;

        public Builder() {
            $ = new GoogleCloudDatacatalogV1BusinessContextResponse();
        }

        public Builder(GoogleCloudDatacatalogV1BusinessContextResponse defaults) {
            $ = new GoogleCloudDatacatalogV1BusinessContextResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param contacts Contact people for the entry.
         * 
         * @return builder
         * 
         */
        public Builder contacts(GoogleCloudDatacatalogV1ContactsResponse contacts) {
            $.contacts = contacts;
            return this;
        }

        /**
         * @param entryOverview Entry overview fields for rich text descriptions of entries.
         * 
         * @return builder
         * 
         */
        public Builder entryOverview(GoogleCloudDatacatalogV1EntryOverviewResponse entryOverview) {
            $.entryOverview = entryOverview;
            return this;
        }

        public GoogleCloudDatacatalogV1BusinessContextResponse build() {
            $.contacts = Objects.requireNonNull($.contacts, "expected parameter 'contacts' to be non-null");
            $.entryOverview = Objects.requireNonNull($.entryOverview, "expected parameter 'entryOverview' to be non-null");
            return $;
        }
    }

}
