// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.compute_v1.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * An alias IP range attached to an instance&#39;s network interface.
 * 
 */
public final class AliasIpRangeResponse extends com.pulumi.resources.InvokeArgs {

    public static final AliasIpRangeResponse Empty = new AliasIpRangeResponse();

    /**
     * The IP alias ranges to allocate for this interface. This IP CIDR range must belong to the specified subnetwork and cannot contain IP addresses reserved by system or used by other network interfaces. This range may be a single IP address (such as 10.2.3.4), a netmask (such as /24) or a CIDR-formatted string (such as 10.1.2.0/24).
     * 
     */
    @Import(name="ipCidrRange", required=true)
    private String ipCidrRange;

    /**
     * @return The IP alias ranges to allocate for this interface. This IP CIDR range must belong to the specified subnetwork and cannot contain IP addresses reserved by system or used by other network interfaces. This range may be a single IP address (such as 10.2.3.4), a netmask (such as /24) or a CIDR-formatted string (such as 10.1.2.0/24).
     * 
     */
    public String ipCidrRange() {
        return this.ipCidrRange;
    }

    /**
     * The name of a subnetwork secondary IP range from which to allocate an IP alias range. If not specified, the primary range of the subnetwork is used.
     * 
     */
    @Import(name="subnetworkRangeName", required=true)
    private String subnetworkRangeName;

    /**
     * @return The name of a subnetwork secondary IP range from which to allocate an IP alias range. If not specified, the primary range of the subnetwork is used.
     * 
     */
    public String subnetworkRangeName() {
        return this.subnetworkRangeName;
    }

    private AliasIpRangeResponse() {}

    private AliasIpRangeResponse(AliasIpRangeResponse $) {
        this.ipCidrRange = $.ipCidrRange;
        this.subnetworkRangeName = $.subnetworkRangeName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AliasIpRangeResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AliasIpRangeResponse $;

        public Builder() {
            $ = new AliasIpRangeResponse();
        }

        public Builder(AliasIpRangeResponse defaults) {
            $ = new AliasIpRangeResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param ipCidrRange The IP alias ranges to allocate for this interface. This IP CIDR range must belong to the specified subnetwork and cannot contain IP addresses reserved by system or used by other network interfaces. This range may be a single IP address (such as 10.2.3.4), a netmask (such as /24) or a CIDR-formatted string (such as 10.1.2.0/24).
         * 
         * @return builder
         * 
         */
        public Builder ipCidrRange(String ipCidrRange) {
            $.ipCidrRange = ipCidrRange;
            return this;
        }

        /**
         * @param subnetworkRangeName The name of a subnetwork secondary IP range from which to allocate an IP alias range. If not specified, the primary range of the subnetwork is used.
         * 
         * @return builder
         * 
         */
        public Builder subnetworkRangeName(String subnetworkRangeName) {
            $.subnetworkRangeName = subnetworkRangeName;
            return this;
        }

        public AliasIpRangeResponse build() {
            $.ipCidrRange = Objects.requireNonNull($.ipCidrRange, "expected parameter 'ipCidrRange' to be non-null");
            $.subnetworkRangeName = Objects.requireNonNull($.subnetworkRangeName, "expected parameter 'subnetworkRangeName' to be non-null");
            return $;
        }
    }

}
