// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.dialogflow_v3beta1;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import com.pulumi.googlenative.dialogflow_v3beta1.enums.ExperimentState;
import com.pulumi.googlenative.dialogflow_v3beta1.inputs.GoogleCloudDialogflowCxV3beta1ExperimentDefinitionArgs;
import com.pulumi.googlenative.dialogflow_v3beta1.inputs.GoogleCloudDialogflowCxV3beta1ExperimentResultArgs;
import com.pulumi.googlenative.dialogflow_v3beta1.inputs.GoogleCloudDialogflowCxV3beta1RolloutConfigArgs;
import com.pulumi.googlenative.dialogflow_v3beta1.inputs.GoogleCloudDialogflowCxV3beta1RolloutStateArgs;
import com.pulumi.googlenative.dialogflow_v3beta1.inputs.GoogleCloudDialogflowCxV3beta1VariantsHistoryArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ExperimentArgs extends com.pulumi.resources.ResourceArgs {

    public static final ExperimentArgs Empty = new ExperimentArgs();

    @Import(name="agentId", required=true)
      private final Output<String> agentId;

    public Output<String> agentId() {
        return this.agentId;
    }

    /**
     * Creation time of this experiment.
     * 
     */
    @Import(name="createTime")
      private final @Nullable Output<String> createTime;

    public Output<String> createTime() {
        return this.createTime == null ? Codegen.empty() : this.createTime;
    }

    /**
     * The definition of the experiment.
     * 
     */
    @Import(name="definition")
      private final @Nullable Output<GoogleCloudDialogflowCxV3beta1ExperimentDefinitionArgs> definition;

    public Output<GoogleCloudDialogflowCxV3beta1ExperimentDefinitionArgs> definition() {
        return this.definition == null ? Codegen.empty() : this.definition;
    }

    /**
     * The human-readable description of the experiment.
     * 
     */
    @Import(name="description")
      private final @Nullable Output<String> description;

    public Output<String> description() {
        return this.description == null ? Codegen.empty() : this.description;
    }

    /**
     * The human-readable name of the experiment (unique in an environment). Limit of 64 characters.
     * 
     */
    @Import(name="displayName", required=true)
      private final Output<String> displayName;

    public Output<String> displayName() {
        return this.displayName;
    }

    /**
     * End time of this experiment.
     * 
     */
    @Import(name="endTime")
      private final @Nullable Output<String> endTime;

    public Output<String> endTime() {
        return this.endTime == null ? Codegen.empty() : this.endTime;
    }

    @Import(name="environmentId", required=true)
      private final Output<String> environmentId;

    public Output<String> environmentId() {
        return this.environmentId;
    }

    /**
     * Maximum number of days to run the experiment. If auto-rollout is not enabled, default value and maximum will be 30 days. If auto-rollout is enabled, default value and maximum will be 6 days.
     * 
     */
    @Import(name="experimentLength")
      private final @Nullable Output<String> experimentLength;

    public Output<String> experimentLength() {
        return this.experimentLength == null ? Codegen.empty() : this.experimentLength;
    }

    /**
     * Last update time of this experiment.
     * 
     */
    @Import(name="lastUpdateTime")
      private final @Nullable Output<String> lastUpdateTime;

    public Output<String> lastUpdateTime() {
        return this.lastUpdateTime == null ? Codegen.empty() : this.lastUpdateTime;
    }

    @Import(name="location")
      private final @Nullable Output<String> location;

    public Output<String> location() {
        return this.location == null ? Codegen.empty() : this.location;
    }

    /**
     * The name of the experiment. Format: projects//locations//agents//environments//experiments/..
     * 
     */
    @Import(name="name")
      private final @Nullable Output<String> name;

    public Output<String> name() {
        return this.name == null ? Codegen.empty() : this.name;
    }

    @Import(name="project")
      private final @Nullable Output<String> project;

    public Output<String> project() {
        return this.project == null ? Codegen.empty() : this.project;
    }

    /**
     * Inference result of the experiment.
     * 
     */
    @Import(name="result")
      private final @Nullable Output<GoogleCloudDialogflowCxV3beta1ExperimentResultArgs> result;

    public Output<GoogleCloudDialogflowCxV3beta1ExperimentResultArgs> result() {
        return this.result == null ? Codegen.empty() : this.result;
    }

    /**
     * The configuration for auto rollout. If set, there should be exactly two variants in the experiment (control variant being the default version of the flow), the traffic allocation for the non-control variant will gradually increase to 100% when conditions are met, and eventually replace the control variant to become the default version of the flow.
     * 
     */
    @Import(name="rolloutConfig")
      private final @Nullable Output<GoogleCloudDialogflowCxV3beta1RolloutConfigArgs> rolloutConfig;

    public Output<GoogleCloudDialogflowCxV3beta1RolloutConfigArgs> rolloutConfig() {
        return this.rolloutConfig == null ? Codegen.empty() : this.rolloutConfig;
    }

    /**
     * The reason why rollout has failed. Should only be set when state is ROLLOUT_FAILED.
     * 
     */
    @Import(name="rolloutFailureReason")
      private final @Nullable Output<String> rolloutFailureReason;

    public Output<String> rolloutFailureReason() {
        return this.rolloutFailureReason == null ? Codegen.empty() : this.rolloutFailureReason;
    }

    /**
     * State of the auto rollout process.
     * 
     */
    @Import(name="rolloutState")
      private final @Nullable Output<GoogleCloudDialogflowCxV3beta1RolloutStateArgs> rolloutState;

    public Output<GoogleCloudDialogflowCxV3beta1RolloutStateArgs> rolloutState() {
        return this.rolloutState == null ? Codegen.empty() : this.rolloutState;
    }

    /**
     * Start time of this experiment.
     * 
     */
    @Import(name="startTime")
      private final @Nullable Output<String> startTime;

    public Output<String> startTime() {
        return this.startTime == null ? Codegen.empty() : this.startTime;
    }

    /**
     * The current state of the experiment. Transition triggered by Experiments.StartExperiment: DRAFT-&gt;RUNNING. Transition triggered by Experiments.CancelExperiment: DRAFT-&gt;DONE or RUNNING-&gt;DONE.
     * 
     */
    @Import(name="state")
      private final @Nullable Output<ExperimentState> state;

    public Output<ExperimentState> state() {
        return this.state == null ? Codegen.empty() : this.state;
    }

    /**
     * The history of updates to the experiment variants.
     * 
     */
    @Import(name="variantsHistory")
      private final @Nullable Output<List<GoogleCloudDialogflowCxV3beta1VariantsHistoryArgs>> variantsHistory;

    public Output<List<GoogleCloudDialogflowCxV3beta1VariantsHistoryArgs>> variantsHistory() {
        return this.variantsHistory == null ? Codegen.empty() : this.variantsHistory;
    }

    public ExperimentArgs(
        Output<String> agentId,
        @Nullable Output<String> createTime,
        @Nullable Output<GoogleCloudDialogflowCxV3beta1ExperimentDefinitionArgs> definition,
        @Nullable Output<String> description,
        Output<String> displayName,
        @Nullable Output<String> endTime,
        Output<String> environmentId,
        @Nullable Output<String> experimentLength,
        @Nullable Output<String> lastUpdateTime,
        @Nullable Output<String> location,
        @Nullable Output<String> name,
        @Nullable Output<String> project,
        @Nullable Output<GoogleCloudDialogflowCxV3beta1ExperimentResultArgs> result,
        @Nullable Output<GoogleCloudDialogflowCxV3beta1RolloutConfigArgs> rolloutConfig,
        @Nullable Output<String> rolloutFailureReason,
        @Nullable Output<GoogleCloudDialogflowCxV3beta1RolloutStateArgs> rolloutState,
        @Nullable Output<String> startTime,
        @Nullable Output<ExperimentState> state,
        @Nullable Output<List<GoogleCloudDialogflowCxV3beta1VariantsHistoryArgs>> variantsHistory) {
        this.agentId = Objects.requireNonNull(agentId, "expected parameter 'agentId' to be non-null");
        this.createTime = createTime;
        this.definition = definition;
        this.description = description;
        this.displayName = Objects.requireNonNull(displayName, "expected parameter 'displayName' to be non-null");
        this.endTime = endTime;
        this.environmentId = Objects.requireNonNull(environmentId, "expected parameter 'environmentId' to be non-null");
        this.experimentLength = experimentLength;
        this.lastUpdateTime = lastUpdateTime;
        this.location = location;
        this.name = name;
        this.project = project;
        this.result = result;
        this.rolloutConfig = rolloutConfig;
        this.rolloutFailureReason = rolloutFailureReason;
        this.rolloutState = rolloutState;
        this.startTime = startTime;
        this.state = state;
        this.variantsHistory = variantsHistory;
    }

    private ExperimentArgs() {
        this.agentId = Codegen.empty();
        this.createTime = Codegen.empty();
        this.definition = Codegen.empty();
        this.description = Codegen.empty();
        this.displayName = Codegen.empty();
        this.endTime = Codegen.empty();
        this.environmentId = Codegen.empty();
        this.experimentLength = Codegen.empty();
        this.lastUpdateTime = Codegen.empty();
        this.location = Codegen.empty();
        this.name = Codegen.empty();
        this.project = Codegen.empty();
        this.result = Codegen.empty();
        this.rolloutConfig = Codegen.empty();
        this.rolloutFailureReason = Codegen.empty();
        this.rolloutState = Codegen.empty();
        this.startTime = Codegen.empty();
        this.state = Codegen.empty();
        this.variantsHistory = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ExperimentArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> agentId;
        private @Nullable Output<String> createTime;
        private @Nullable Output<GoogleCloudDialogflowCxV3beta1ExperimentDefinitionArgs> definition;
        private @Nullable Output<String> description;
        private Output<String> displayName;
        private @Nullable Output<String> endTime;
        private Output<String> environmentId;
        private @Nullable Output<String> experimentLength;
        private @Nullable Output<String> lastUpdateTime;
        private @Nullable Output<String> location;
        private @Nullable Output<String> name;
        private @Nullable Output<String> project;
        private @Nullable Output<GoogleCloudDialogflowCxV3beta1ExperimentResultArgs> result;
        private @Nullable Output<GoogleCloudDialogflowCxV3beta1RolloutConfigArgs> rolloutConfig;
        private @Nullable Output<String> rolloutFailureReason;
        private @Nullable Output<GoogleCloudDialogflowCxV3beta1RolloutStateArgs> rolloutState;
        private @Nullable Output<String> startTime;
        private @Nullable Output<ExperimentState> state;
        private @Nullable Output<List<GoogleCloudDialogflowCxV3beta1VariantsHistoryArgs>> variantsHistory;

        public Builder() {
    	      // Empty
        }

        public Builder(ExperimentArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.agentId = defaults.agentId;
    	      this.createTime = defaults.createTime;
    	      this.definition = defaults.definition;
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.endTime = defaults.endTime;
    	      this.environmentId = defaults.environmentId;
    	      this.experimentLength = defaults.experimentLength;
    	      this.lastUpdateTime = defaults.lastUpdateTime;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.project = defaults.project;
    	      this.result = defaults.result;
    	      this.rolloutConfig = defaults.rolloutConfig;
    	      this.rolloutFailureReason = defaults.rolloutFailureReason;
    	      this.rolloutState = defaults.rolloutState;
    	      this.startTime = defaults.startTime;
    	      this.state = defaults.state;
    	      this.variantsHistory = defaults.variantsHistory;
        }

        public Builder agentId(Output<String> agentId) {
            this.agentId = Objects.requireNonNull(agentId);
            return this;
        }
        public Builder agentId(String agentId) {
            this.agentId = Output.of(Objects.requireNonNull(agentId));
            return this;
        }
        public Builder createTime(@Nullable Output<String> createTime) {
            this.createTime = createTime;
            return this;
        }
        public Builder createTime(@Nullable String createTime) {
            this.createTime = Codegen.ofNullable(createTime);
            return this;
        }
        public Builder definition(@Nullable Output<GoogleCloudDialogflowCxV3beta1ExperimentDefinitionArgs> definition) {
            this.definition = definition;
            return this;
        }
        public Builder definition(@Nullable GoogleCloudDialogflowCxV3beta1ExperimentDefinitionArgs definition) {
            this.definition = Codegen.ofNullable(definition);
            return this;
        }
        public Builder description(@Nullable Output<String> description) {
            this.description = description;
            return this;
        }
        public Builder description(@Nullable String description) {
            this.description = Codegen.ofNullable(description);
            return this;
        }
        public Builder displayName(Output<String> displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }
        public Builder displayName(String displayName) {
            this.displayName = Output.of(Objects.requireNonNull(displayName));
            return this;
        }
        public Builder endTime(@Nullable Output<String> endTime) {
            this.endTime = endTime;
            return this;
        }
        public Builder endTime(@Nullable String endTime) {
            this.endTime = Codegen.ofNullable(endTime);
            return this;
        }
        public Builder environmentId(Output<String> environmentId) {
            this.environmentId = Objects.requireNonNull(environmentId);
            return this;
        }
        public Builder environmentId(String environmentId) {
            this.environmentId = Output.of(Objects.requireNonNull(environmentId));
            return this;
        }
        public Builder experimentLength(@Nullable Output<String> experimentLength) {
            this.experimentLength = experimentLength;
            return this;
        }
        public Builder experimentLength(@Nullable String experimentLength) {
            this.experimentLength = Codegen.ofNullable(experimentLength);
            return this;
        }
        public Builder lastUpdateTime(@Nullable Output<String> lastUpdateTime) {
            this.lastUpdateTime = lastUpdateTime;
            return this;
        }
        public Builder lastUpdateTime(@Nullable String lastUpdateTime) {
            this.lastUpdateTime = Codegen.ofNullable(lastUpdateTime);
            return this;
        }
        public Builder location(@Nullable Output<String> location) {
            this.location = location;
            return this;
        }
        public Builder location(@Nullable String location) {
            this.location = Codegen.ofNullable(location);
            return this;
        }
        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }
        public Builder name(@Nullable String name) {
            this.name = Codegen.ofNullable(name);
            return this;
        }
        public Builder project(@Nullable Output<String> project) {
            this.project = project;
            return this;
        }
        public Builder project(@Nullable String project) {
            this.project = Codegen.ofNullable(project);
            return this;
        }
        public Builder result(@Nullable Output<GoogleCloudDialogflowCxV3beta1ExperimentResultArgs> result) {
            this.result = result;
            return this;
        }
        public Builder result(@Nullable GoogleCloudDialogflowCxV3beta1ExperimentResultArgs result) {
            this.result = Codegen.ofNullable(result);
            return this;
        }
        public Builder rolloutConfig(@Nullable Output<GoogleCloudDialogflowCxV3beta1RolloutConfigArgs> rolloutConfig) {
            this.rolloutConfig = rolloutConfig;
            return this;
        }
        public Builder rolloutConfig(@Nullable GoogleCloudDialogflowCxV3beta1RolloutConfigArgs rolloutConfig) {
            this.rolloutConfig = Codegen.ofNullable(rolloutConfig);
            return this;
        }
        public Builder rolloutFailureReason(@Nullable Output<String> rolloutFailureReason) {
            this.rolloutFailureReason = rolloutFailureReason;
            return this;
        }
        public Builder rolloutFailureReason(@Nullable String rolloutFailureReason) {
            this.rolloutFailureReason = Codegen.ofNullable(rolloutFailureReason);
            return this;
        }
        public Builder rolloutState(@Nullable Output<GoogleCloudDialogflowCxV3beta1RolloutStateArgs> rolloutState) {
            this.rolloutState = rolloutState;
            return this;
        }
        public Builder rolloutState(@Nullable GoogleCloudDialogflowCxV3beta1RolloutStateArgs rolloutState) {
            this.rolloutState = Codegen.ofNullable(rolloutState);
            return this;
        }
        public Builder startTime(@Nullable Output<String> startTime) {
            this.startTime = startTime;
            return this;
        }
        public Builder startTime(@Nullable String startTime) {
            this.startTime = Codegen.ofNullable(startTime);
            return this;
        }
        public Builder state(@Nullable Output<ExperimentState> state) {
            this.state = state;
            return this;
        }
        public Builder state(@Nullable ExperimentState state) {
            this.state = Codegen.ofNullable(state);
            return this;
        }
        public Builder variantsHistory(@Nullable Output<List<GoogleCloudDialogflowCxV3beta1VariantsHistoryArgs>> variantsHistory) {
            this.variantsHistory = variantsHistory;
            return this;
        }
        public Builder variantsHistory(@Nullable List<GoogleCloudDialogflowCxV3beta1VariantsHistoryArgs> variantsHistory) {
            this.variantsHistory = Codegen.ofNullable(variantsHistory);
            return this;
        }
        public Builder variantsHistory(GoogleCloudDialogflowCxV3beta1VariantsHistoryArgs... variantsHistory) {
            return variantsHistory(List.of(variantsHistory));
        }        public ExperimentArgs build() {
            return new ExperimentArgs(agentId, createTime, definition, description, displayName, endTime, environmentId, experimentLength, lastUpdateTime, location, name, project, result, rolloutConfig, rolloutFailureReason, rolloutState, startTime, state, variantsHistory);
        }
    }
}
