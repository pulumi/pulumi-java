// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.compute.alpha.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.compute.alpha.enums.SecurityPolicyRuleDirection;
import com.pulumi.googlenative.compute.alpha.inputs.SecurityPolicyRuleHttpHeaderActionArgs;
import com.pulumi.googlenative.compute.alpha.inputs.SecurityPolicyRuleMatcherArgs;
import com.pulumi.googlenative.compute.alpha.inputs.SecurityPolicyRuleRateLimitOptionsArgs;
import com.pulumi.googlenative.compute.alpha.inputs.SecurityPolicyRuleRedirectOptionsArgs;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Represents a rule that describes one or more match conditions along with the action to be taken when traffic matches this condition (allow or deny).
 * 
 */
public final class SecurityPolicyRuleArgs extends com.pulumi.resources.ResourceArgs {

    public static final SecurityPolicyRuleArgs Empty = new SecurityPolicyRuleArgs();

    /**
     * The Action to perform when the rule is matched. The following are the valid actions: - allow: allow access to target. - deny(): deny access to target, returns the HTTP response code specified (valid values are 403, 404, and 502). - rate_based_ban: limit client traffic to the configured threshold and ban the client if the traffic exceeds the threshold. Configure parameters for this action in RateLimitOptions. Requires rate_limit_options to be set. - redirect: redirect to a different target. This can either be an internal reCAPTCHA redirect, or an external URL-based redirect via a 302 response. Parameters for this action can be configured via redirectOptions. - throttle: limit client traffic to the configured threshold. Configure parameters for this action in rateLimitOptions. Requires rate_limit_options to be set for this.
     * 
     */
    @Import(name="action")
    private @Nullable Output<String> action;

    /**
     * @return The Action to perform when the rule is matched. The following are the valid actions: - allow: allow access to target. - deny(): deny access to target, returns the HTTP response code specified (valid values are 403, 404, and 502). - rate_based_ban: limit client traffic to the configured threshold and ban the client if the traffic exceeds the threshold. Configure parameters for this action in RateLimitOptions. Requires rate_limit_options to be set. - redirect: redirect to a different target. This can either be an internal reCAPTCHA redirect, or an external URL-based redirect via a 302 response. Parameters for this action can be configured via redirectOptions. - throttle: limit client traffic to the configured threshold. Configure parameters for this action in rateLimitOptions. Requires rate_limit_options to be set for this.
     * 
     */
    public Optional<Output<String>> action() {
        return Optional.ofNullable(this.action);
    }

    /**
     * An optional description of this resource. Provide this property when you create the resource.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return An optional description of this resource. Provide this property when you create the resource.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The direction in which this rule applies. This field may only be specified when versioned_expr is set to FIREWALL.
     * 
     */
    @Import(name="direction")
    private @Nullable Output<SecurityPolicyRuleDirection> direction;

    /**
     * @return The direction in which this rule applies. This field may only be specified when versioned_expr is set to FIREWALL.
     * 
     */
    public Optional<Output<SecurityPolicyRuleDirection>> direction() {
        return Optional.ofNullable(this.direction);
    }

    /**
     * Denotes whether to enable logging for a particular rule. If logging is enabled, logs will be exported to the configured export destination in Stackdriver. Logs may be exported to BigQuery or Pub/Sub. Note: you cannot enable logging on &#34;goto_next&#34; rules. This field may only be specified when the versioned_expr is set to FIREWALL.
     * 
     */
    @Import(name="enableLogging")
    private @Nullable Output<Boolean> enableLogging;

    /**
     * @return Denotes whether to enable logging for a particular rule. If logging is enabled, logs will be exported to the configured export destination in Stackdriver. Logs may be exported to BigQuery or Pub/Sub. Note: you cannot enable logging on &#34;goto_next&#34; rules. This field may only be specified when the versioned_expr is set to FIREWALL.
     * 
     */
    public Optional<Output<Boolean>> enableLogging() {
        return Optional.ofNullable(this.enableLogging);
    }

    /**
     * Optional, additional actions that are performed on headers.
     * 
     */
    @Import(name="headerAction")
    private @Nullable Output<SecurityPolicyRuleHttpHeaderActionArgs> headerAction;

    /**
     * @return Optional, additional actions that are performed on headers.
     * 
     */
    public Optional<Output<SecurityPolicyRuleHttpHeaderActionArgs>> headerAction() {
        return Optional.ofNullable(this.headerAction);
    }

    /**
     * A match condition that incoming traffic is evaluated against. If it evaluates to true, the corresponding &#39;action&#39; is enforced.
     * 
     */
    @Import(name="match")
    private @Nullable Output<SecurityPolicyRuleMatcherArgs> match;

    /**
     * @return A match condition that incoming traffic is evaluated against. If it evaluates to true, the corresponding &#39;action&#39; is enforced.
     * 
     */
    public Optional<Output<SecurityPolicyRuleMatcherArgs>> match() {
        return Optional.ofNullable(this.match);
    }

    /**
     * If set to true, the specified action is not enforced.
     * 
     */
    @Import(name="preview")
    private @Nullable Output<Boolean> preview;

    /**
     * @return If set to true, the specified action is not enforced.
     * 
     */
    public Optional<Output<Boolean>> preview() {
        return Optional.ofNullable(this.preview);
    }

    /**
     * An integer indicating the priority of a rule in the list. The priority must be a positive value between 0 and 2147483647. Rules are evaluated from highest to lowest priority where 0 is the highest priority and 2147483647 is the lowest priority.
     * 
     */
    @Import(name="priority")
    private @Nullable Output<Integer> priority;

    /**
     * @return An integer indicating the priority of a rule in the list. The priority must be a positive value between 0 and 2147483647. Rules are evaluated from highest to lowest priority where 0 is the highest priority and 2147483647 is the lowest priority.
     * 
     */
    public Optional<Output<Integer>> priority() {
        return Optional.ofNullable(this.priority);
    }

    /**
     * Must be specified if the action is &#34;rate_based_ban&#34; or &#34;throttle&#34;. Cannot be specified for any other actions.
     * 
     */
    @Import(name="rateLimitOptions")
    private @Nullable Output<SecurityPolicyRuleRateLimitOptionsArgs> rateLimitOptions;

    /**
     * @return Must be specified if the action is &#34;rate_based_ban&#34; or &#34;throttle&#34;. Cannot be specified for any other actions.
     * 
     */
    public Optional<Output<SecurityPolicyRuleRateLimitOptionsArgs>> rateLimitOptions() {
        return Optional.ofNullable(this.rateLimitOptions);
    }

    /**
     * Parameters defining the redirect action. Cannot be specified for any other actions.
     * 
     */
    @Import(name="redirectOptions")
    private @Nullable Output<SecurityPolicyRuleRedirectOptionsArgs> redirectOptions;

    /**
     * @return Parameters defining the redirect action. Cannot be specified for any other actions.
     * 
     */
    public Optional<Output<SecurityPolicyRuleRedirectOptionsArgs>> redirectOptions() {
        return Optional.ofNullable(this.redirectOptions);
    }

    /**
     * This must be specified for redirect actions. Cannot be specified for any other actions.
     * 
     */
    @Import(name="redirectTarget")
    private @Nullable Output<String> redirectTarget;

    /**
     * @return This must be specified for redirect actions. Cannot be specified for any other actions.
     * 
     */
    public Optional<Output<String>> redirectTarget() {
        return Optional.ofNullable(this.redirectTarget);
    }

    /**
     * Identifier for the rule. This is only unique within the given security policy. This can only be set during rule creation, if rule number is not specified it will be generated by the server.
     * 
     */
    @Import(name="ruleNumber")
    private @Nullable Output<String> ruleNumber;

    /**
     * @return Identifier for the rule. This is only unique within the given security policy. This can only be set during rule creation, if rule number is not specified it will be generated by the server.
     * 
     */
    public Optional<Output<String>> ruleNumber() {
        return Optional.ofNullable(this.ruleNumber);
    }

    /**
     * A list of network resource URLs to which this rule applies. This field allows you to control which network&#39;s VMs get this rule. If this field is left blank, all VMs within the organization will receive the rule. This field may only be specified when versioned_expr is set to FIREWALL.
     * 
     */
    @Import(name="targetResources")
    private @Nullable Output<List<String>> targetResources;

    /**
     * @return A list of network resource URLs to which this rule applies. This field allows you to control which network&#39;s VMs get this rule. If this field is left blank, all VMs within the organization will receive the rule. This field may only be specified when versioned_expr is set to FIREWALL.
     * 
     */
    public Optional<Output<List<String>>> targetResources() {
        return Optional.ofNullable(this.targetResources);
    }

    /**
     * A list of service accounts indicating the sets of instances that are applied with this rule.
     * 
     */
    @Import(name="targetServiceAccounts")
    private @Nullable Output<List<String>> targetServiceAccounts;

    /**
     * @return A list of service accounts indicating the sets of instances that are applied with this rule.
     * 
     */
    public Optional<Output<List<String>>> targetServiceAccounts() {
        return Optional.ofNullable(this.targetServiceAccounts);
    }

    private SecurityPolicyRuleArgs() {}

    private SecurityPolicyRuleArgs(SecurityPolicyRuleArgs $) {
        this.action = $.action;
        this.description = $.description;
        this.direction = $.direction;
        this.enableLogging = $.enableLogging;
        this.headerAction = $.headerAction;
        this.match = $.match;
        this.preview = $.preview;
        this.priority = $.priority;
        this.rateLimitOptions = $.rateLimitOptions;
        this.redirectOptions = $.redirectOptions;
        this.redirectTarget = $.redirectTarget;
        this.ruleNumber = $.ruleNumber;
        this.targetResources = $.targetResources;
        this.targetServiceAccounts = $.targetServiceAccounts;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SecurityPolicyRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SecurityPolicyRuleArgs $;

        public Builder() {
            $ = new SecurityPolicyRuleArgs();
        }

        public Builder(SecurityPolicyRuleArgs defaults) {
            $ = new SecurityPolicyRuleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param action The Action to perform when the rule is matched. The following are the valid actions: - allow: allow access to target. - deny(): deny access to target, returns the HTTP response code specified (valid values are 403, 404, and 502). - rate_based_ban: limit client traffic to the configured threshold and ban the client if the traffic exceeds the threshold. Configure parameters for this action in RateLimitOptions. Requires rate_limit_options to be set. - redirect: redirect to a different target. This can either be an internal reCAPTCHA redirect, or an external URL-based redirect via a 302 response. Parameters for this action can be configured via redirectOptions. - throttle: limit client traffic to the configured threshold. Configure parameters for this action in rateLimitOptions. Requires rate_limit_options to be set for this.
         * 
         * @return builder
         * 
         */
        public Builder action(@Nullable Output<String> action) {
            $.action = action;
            return this;
        }

        /**
         * @param action The Action to perform when the rule is matched. The following are the valid actions: - allow: allow access to target. - deny(): deny access to target, returns the HTTP response code specified (valid values are 403, 404, and 502). - rate_based_ban: limit client traffic to the configured threshold and ban the client if the traffic exceeds the threshold. Configure parameters for this action in RateLimitOptions. Requires rate_limit_options to be set. - redirect: redirect to a different target. This can either be an internal reCAPTCHA redirect, or an external URL-based redirect via a 302 response. Parameters for this action can be configured via redirectOptions. - throttle: limit client traffic to the configured threshold. Configure parameters for this action in rateLimitOptions. Requires rate_limit_options to be set for this.
         * 
         * @return builder
         * 
         */
        public Builder action(String action) {
            return action(Output.of(action));
        }

        /**
         * @param description An optional description of this resource. Provide this property when you create the resource.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description An optional description of this resource. Provide this property when you create the resource.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param direction The direction in which this rule applies. This field may only be specified when versioned_expr is set to FIREWALL.
         * 
         * @return builder
         * 
         */
        public Builder direction(@Nullable Output<SecurityPolicyRuleDirection> direction) {
            $.direction = direction;
            return this;
        }

        /**
         * @param direction The direction in which this rule applies. This field may only be specified when versioned_expr is set to FIREWALL.
         * 
         * @return builder
         * 
         */
        public Builder direction(SecurityPolicyRuleDirection direction) {
            return direction(Output.of(direction));
        }

        /**
         * @param enableLogging Denotes whether to enable logging for a particular rule. If logging is enabled, logs will be exported to the configured export destination in Stackdriver. Logs may be exported to BigQuery or Pub/Sub. Note: you cannot enable logging on &#34;goto_next&#34; rules. This field may only be specified when the versioned_expr is set to FIREWALL.
         * 
         * @return builder
         * 
         */
        public Builder enableLogging(@Nullable Output<Boolean> enableLogging) {
            $.enableLogging = enableLogging;
            return this;
        }

        /**
         * @param enableLogging Denotes whether to enable logging for a particular rule. If logging is enabled, logs will be exported to the configured export destination in Stackdriver. Logs may be exported to BigQuery or Pub/Sub. Note: you cannot enable logging on &#34;goto_next&#34; rules. This field may only be specified when the versioned_expr is set to FIREWALL.
         * 
         * @return builder
         * 
         */
        public Builder enableLogging(Boolean enableLogging) {
            return enableLogging(Output.of(enableLogging));
        }

        /**
         * @param headerAction Optional, additional actions that are performed on headers.
         * 
         * @return builder
         * 
         */
        public Builder headerAction(@Nullable Output<SecurityPolicyRuleHttpHeaderActionArgs> headerAction) {
            $.headerAction = headerAction;
            return this;
        }

        /**
         * @param headerAction Optional, additional actions that are performed on headers.
         * 
         * @return builder
         * 
         */
        public Builder headerAction(SecurityPolicyRuleHttpHeaderActionArgs headerAction) {
            return headerAction(Output.of(headerAction));
        }

        /**
         * @param match A match condition that incoming traffic is evaluated against. If it evaluates to true, the corresponding &#39;action&#39; is enforced.
         * 
         * @return builder
         * 
         */
        public Builder match(@Nullable Output<SecurityPolicyRuleMatcherArgs> match) {
            $.match = match;
            return this;
        }

        /**
         * @param match A match condition that incoming traffic is evaluated against. If it evaluates to true, the corresponding &#39;action&#39; is enforced.
         * 
         * @return builder
         * 
         */
        public Builder match(SecurityPolicyRuleMatcherArgs match) {
            return match(Output.of(match));
        }

        /**
         * @param preview If set to true, the specified action is not enforced.
         * 
         * @return builder
         * 
         */
        public Builder preview(@Nullable Output<Boolean> preview) {
            $.preview = preview;
            return this;
        }

        /**
         * @param preview If set to true, the specified action is not enforced.
         * 
         * @return builder
         * 
         */
        public Builder preview(Boolean preview) {
            return preview(Output.of(preview));
        }

        /**
         * @param priority An integer indicating the priority of a rule in the list. The priority must be a positive value between 0 and 2147483647. Rules are evaluated from highest to lowest priority where 0 is the highest priority and 2147483647 is the lowest priority.
         * 
         * @return builder
         * 
         */
        public Builder priority(@Nullable Output<Integer> priority) {
            $.priority = priority;
            return this;
        }

        /**
         * @param priority An integer indicating the priority of a rule in the list. The priority must be a positive value between 0 and 2147483647. Rules are evaluated from highest to lowest priority where 0 is the highest priority and 2147483647 is the lowest priority.
         * 
         * @return builder
         * 
         */
        public Builder priority(Integer priority) {
            return priority(Output.of(priority));
        }

        /**
         * @param rateLimitOptions Must be specified if the action is &#34;rate_based_ban&#34; or &#34;throttle&#34;. Cannot be specified for any other actions.
         * 
         * @return builder
         * 
         */
        public Builder rateLimitOptions(@Nullable Output<SecurityPolicyRuleRateLimitOptionsArgs> rateLimitOptions) {
            $.rateLimitOptions = rateLimitOptions;
            return this;
        }

        /**
         * @param rateLimitOptions Must be specified if the action is &#34;rate_based_ban&#34; or &#34;throttle&#34;. Cannot be specified for any other actions.
         * 
         * @return builder
         * 
         */
        public Builder rateLimitOptions(SecurityPolicyRuleRateLimitOptionsArgs rateLimitOptions) {
            return rateLimitOptions(Output.of(rateLimitOptions));
        }

        /**
         * @param redirectOptions Parameters defining the redirect action. Cannot be specified for any other actions.
         * 
         * @return builder
         * 
         */
        public Builder redirectOptions(@Nullable Output<SecurityPolicyRuleRedirectOptionsArgs> redirectOptions) {
            $.redirectOptions = redirectOptions;
            return this;
        }

        /**
         * @param redirectOptions Parameters defining the redirect action. Cannot be specified for any other actions.
         * 
         * @return builder
         * 
         */
        public Builder redirectOptions(SecurityPolicyRuleRedirectOptionsArgs redirectOptions) {
            return redirectOptions(Output.of(redirectOptions));
        }

        /**
         * @param redirectTarget This must be specified for redirect actions. Cannot be specified for any other actions.
         * 
         * @return builder
         * 
         */
        public Builder redirectTarget(@Nullable Output<String> redirectTarget) {
            $.redirectTarget = redirectTarget;
            return this;
        }

        /**
         * @param redirectTarget This must be specified for redirect actions. Cannot be specified for any other actions.
         * 
         * @return builder
         * 
         */
        public Builder redirectTarget(String redirectTarget) {
            return redirectTarget(Output.of(redirectTarget));
        }

        /**
         * @param ruleNumber Identifier for the rule. This is only unique within the given security policy. This can only be set during rule creation, if rule number is not specified it will be generated by the server.
         * 
         * @return builder
         * 
         */
        public Builder ruleNumber(@Nullable Output<String> ruleNumber) {
            $.ruleNumber = ruleNumber;
            return this;
        }

        /**
         * @param ruleNumber Identifier for the rule. This is only unique within the given security policy. This can only be set during rule creation, if rule number is not specified it will be generated by the server.
         * 
         * @return builder
         * 
         */
        public Builder ruleNumber(String ruleNumber) {
            return ruleNumber(Output.of(ruleNumber));
        }

        /**
         * @param targetResources A list of network resource URLs to which this rule applies. This field allows you to control which network&#39;s VMs get this rule. If this field is left blank, all VMs within the organization will receive the rule. This field may only be specified when versioned_expr is set to FIREWALL.
         * 
         * @return builder
         * 
         */
        public Builder targetResources(@Nullable Output<List<String>> targetResources) {
            $.targetResources = targetResources;
            return this;
        }

        /**
         * @param targetResources A list of network resource URLs to which this rule applies. This field allows you to control which network&#39;s VMs get this rule. If this field is left blank, all VMs within the organization will receive the rule. This field may only be specified when versioned_expr is set to FIREWALL.
         * 
         * @return builder
         * 
         */
        public Builder targetResources(List<String> targetResources) {
            return targetResources(Output.of(targetResources));
        }

        /**
         * @param targetResources A list of network resource URLs to which this rule applies. This field allows you to control which network&#39;s VMs get this rule. If this field is left blank, all VMs within the organization will receive the rule. This field may only be specified when versioned_expr is set to FIREWALL.
         * 
         * @return builder
         * 
         */
        public Builder targetResources(String... targetResources) {
            return targetResources(List.of(targetResources));
        }

        /**
         * @param targetServiceAccounts A list of service accounts indicating the sets of instances that are applied with this rule.
         * 
         * @return builder
         * 
         */
        public Builder targetServiceAccounts(@Nullable Output<List<String>> targetServiceAccounts) {
            $.targetServiceAccounts = targetServiceAccounts;
            return this;
        }

        /**
         * @param targetServiceAccounts A list of service accounts indicating the sets of instances that are applied with this rule.
         * 
         * @return builder
         * 
         */
        public Builder targetServiceAccounts(List<String> targetServiceAccounts) {
            return targetServiceAccounts(Output.of(targetServiceAccounts));
        }

        /**
         * @param targetServiceAccounts A list of service accounts indicating the sets of instances that are applied with this rule.
         * 
         * @return builder
         * 
         */
        public Builder targetServiceAccounts(String... targetServiceAccounts) {
            return targetServiceAccounts(List.of(targetServiceAccounts));
        }

        public SecurityPolicyRuleArgs build() {
            return $;
        }
    }

}
