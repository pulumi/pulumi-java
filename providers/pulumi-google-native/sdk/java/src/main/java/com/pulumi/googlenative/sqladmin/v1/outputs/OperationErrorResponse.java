// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.sqladmin.v1.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class OperationErrorResponse {
    /**
     * @return Identifies the specific error that occurred.
     * 
     */
    private final String code;
    /**
     * @return This is always `sql#operationError`.
     * 
     */
    private final String kind;
    /**
     * @return Additional information about the error encountered.
     * 
     */
    private final String message;

    @CustomType.Constructor
    private OperationErrorResponse(
        @CustomType.Parameter("code") String code,
        @CustomType.Parameter("kind") String kind,
        @CustomType.Parameter("message") String message) {
        this.code = code;
        this.kind = kind;
        this.message = message;
    }

    /**
     * @return Identifies the specific error that occurred.
     * 
     */
    public String code() {
        return this.code;
    }
    /**
     * @return This is always `sql#operationError`.
     * 
     */
    public String kind() {
        return this.kind;
    }
    /**
     * @return Additional information about the error encountered.
     * 
     */
    public String message() {
        return this.message;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(OperationErrorResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String code;
        private String kind;
        private String message;

        public Builder() {
    	      // Empty
        }

        public Builder(OperationErrorResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.code = defaults.code;
    	      this.kind = defaults.kind;
    	      this.message = defaults.message;
        }

        public Builder code(String code) {
            this.code = Objects.requireNonNull(code);
            return this;
        }
        public Builder kind(String kind) {
            this.kind = Objects.requireNonNull(kind);
            return this;
        }
        public Builder message(String message) {
            this.message = Objects.requireNonNull(message);
            return this;
        }        public OperationErrorResponse build() {
            return new OperationErrorResponse(code, kind, message);
        }
    }
}
