// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.container.v1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Collection of Compute Engine network tags that can be applied to a node&#39;s underlying VM instance.
 * 
 */
public final class NetworkTagsArgs extends com.pulumi.resources.ResourceArgs {

    public static final NetworkTagsArgs Empty = new NetworkTagsArgs();

    /**
     * List of network tags.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<List<String>> tags;

    /**
     * @return List of network tags.
     * 
     */
    public Optional<Output<List<String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private NetworkTagsArgs() {}

    private NetworkTagsArgs(NetworkTagsArgs $) {
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NetworkTagsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NetworkTagsArgs $;

        public Builder() {
            $ = new NetworkTagsArgs();
        }

        public Builder(NetworkTagsArgs defaults) {
            $ = new NetworkTagsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param tags List of network tags.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<List<String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags List of network tags.
         * 
         * @return builder
         * 
         */
        public Builder tags(List<String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param tags List of network tags.
         * 
         * @return builder
         * 
         */
        public Builder tags(String... tags) {
            return tags(List.of(tags));
        }

        public NetworkTagsArgs build() {
            return $;
        }
    }

}
