// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.run.v2.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.run.v2.enums.GoogleCloudRunV2TrafficTargetType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Holds a single traffic routing entry for the Service. Allocations can be done to a specific Revision name, or pointing to the latest Ready Revision.
 * 
 */
public final class GoogleCloudRunV2TrafficTargetArgs extends com.pulumi.resources.ResourceArgs {

    public static final GoogleCloudRunV2TrafficTargetArgs Empty = new GoogleCloudRunV2TrafficTargetArgs();

    /**
     * Specifies percent of the traffic to this Revision. This defaults to zero if unspecified.
     * 
     */
    @Import(name="percent")
    private @Nullable Output<Integer> percent;

    /**
     * @return Specifies percent of the traffic to this Revision. This defaults to zero if unspecified.
     * 
     */
    public Optional<Output<Integer>> percent() {
        return Optional.ofNullable(this.percent);
    }

    /**
     * Revision to which to send this portion of traffic, if traffic allocation is by revision.
     * 
     */
    @Import(name="revision")
    private @Nullable Output<String> revision;

    /**
     * @return Revision to which to send this portion of traffic, if traffic allocation is by revision.
     * 
     */
    public Optional<Output<String>> revision() {
        return Optional.ofNullable(this.revision);
    }

    /**
     * Indicates a string to be part of the URI to exclusively reference this target.
     * 
     */
    @Import(name="tag")
    private @Nullable Output<String> tag;

    /**
     * @return Indicates a string to be part of the URI to exclusively reference this target.
     * 
     */
    public Optional<Output<String>> tag() {
        return Optional.ofNullable(this.tag);
    }

    /**
     * The allocation type for this traffic target.
     * 
     */
    @Import(name="type")
    private @Nullable Output<GoogleCloudRunV2TrafficTargetType> type;

    /**
     * @return The allocation type for this traffic target.
     * 
     */
    public Optional<Output<GoogleCloudRunV2TrafficTargetType>> type() {
        return Optional.ofNullable(this.type);
    }

    private GoogleCloudRunV2TrafficTargetArgs() {}

    private GoogleCloudRunV2TrafficTargetArgs(GoogleCloudRunV2TrafficTargetArgs $) {
        this.percent = $.percent;
        this.revision = $.revision;
        this.tag = $.tag;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GoogleCloudRunV2TrafficTargetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GoogleCloudRunV2TrafficTargetArgs $;

        public Builder() {
            $ = new GoogleCloudRunV2TrafficTargetArgs();
        }

        public Builder(GoogleCloudRunV2TrafficTargetArgs defaults) {
            $ = new GoogleCloudRunV2TrafficTargetArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param percent Specifies percent of the traffic to this Revision. This defaults to zero if unspecified.
         * 
         * @return builder
         * 
         */
        public Builder percent(@Nullable Output<Integer> percent) {
            $.percent = percent;
            return this;
        }

        /**
         * @param percent Specifies percent of the traffic to this Revision. This defaults to zero if unspecified.
         * 
         * @return builder
         * 
         */
        public Builder percent(Integer percent) {
            return percent(Output.of(percent));
        }

        /**
         * @param revision Revision to which to send this portion of traffic, if traffic allocation is by revision.
         * 
         * @return builder
         * 
         */
        public Builder revision(@Nullable Output<String> revision) {
            $.revision = revision;
            return this;
        }

        /**
         * @param revision Revision to which to send this portion of traffic, if traffic allocation is by revision.
         * 
         * @return builder
         * 
         */
        public Builder revision(String revision) {
            return revision(Output.of(revision));
        }

        /**
         * @param tag Indicates a string to be part of the URI to exclusively reference this target.
         * 
         * @return builder
         * 
         */
        public Builder tag(@Nullable Output<String> tag) {
            $.tag = tag;
            return this;
        }

        /**
         * @param tag Indicates a string to be part of the URI to exclusively reference this target.
         * 
         * @return builder
         * 
         */
        public Builder tag(String tag) {
            return tag(Output.of(tag));
        }

        /**
         * @param type The allocation type for this traffic target.
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable Output<GoogleCloudRunV2TrafficTargetType> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type The allocation type for this traffic target.
         * 
         * @return builder
         * 
         */
        public Builder type(GoogleCloudRunV2TrafficTargetType type) {
            return type(Output.of(type));
        }

        public GoogleCloudRunV2TrafficTargetArgs build() {
            return $;
        }
    }

}
