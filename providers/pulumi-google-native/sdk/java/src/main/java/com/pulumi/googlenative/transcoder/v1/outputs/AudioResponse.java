// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.transcoder.v1.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Double;
import java.util.Objects;

@CustomType
public final class AudioResponse {
    /**
     * @return Enable boosting high frequency components. The default is `false`. **Note:** This field is not supported.
     * 
     */
    private final Boolean highBoost;
    /**
     * @return Enable boosting low frequency components. The default is `false`. **Note:** This field is not supported.
     * 
     */
    private final Boolean lowBoost;
    /**
     * @return Specify audio loudness normalization in loudness units relative to full scale (LUFS). Enter a value between -24 and 0 (the default), where: * -24 is the Advanced Television Systems Committee (ATSC A/85) standard * -23 is the EU R128 broadcast standard * -19 is the prior standard for online mono audio * -18 is the ReplayGain standard * -16 is the prior standard for stereo audio * -14 is the new online audio standard recommended by Spotify, as well as Amazon Echo * 0 disables normalization
     * 
     */
    private final Double lufs;

    @CustomType.Constructor
    private AudioResponse(
        @CustomType.Parameter("highBoost") Boolean highBoost,
        @CustomType.Parameter("lowBoost") Boolean lowBoost,
        @CustomType.Parameter("lufs") Double lufs) {
        this.highBoost = highBoost;
        this.lowBoost = lowBoost;
        this.lufs = lufs;
    }

    /**
     * @return Enable boosting high frequency components. The default is `false`. **Note:** This field is not supported.
     * 
     */
    public Boolean highBoost() {
        return this.highBoost;
    }
    /**
     * @return Enable boosting low frequency components. The default is `false`. **Note:** This field is not supported.
     * 
     */
    public Boolean lowBoost() {
        return this.lowBoost;
    }
    /**
     * @return Specify audio loudness normalization in loudness units relative to full scale (LUFS). Enter a value between -24 and 0 (the default), where: * -24 is the Advanced Television Systems Committee (ATSC A/85) standard * -23 is the EU R128 broadcast standard * -19 is the prior standard for online mono audio * -18 is the ReplayGain standard * -16 is the prior standard for stereo audio * -14 is the new online audio standard recommended by Spotify, as well as Amazon Echo * 0 disables normalization
     * 
     */
    public Double lufs() {
        return this.lufs;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AudioResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Boolean highBoost;
        private Boolean lowBoost;
        private Double lufs;

        public Builder() {
    	      // Empty
        }

        public Builder(AudioResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.highBoost = defaults.highBoost;
    	      this.lowBoost = defaults.lowBoost;
    	      this.lufs = defaults.lufs;
        }

        public Builder highBoost(Boolean highBoost) {
            this.highBoost = Objects.requireNonNull(highBoost);
            return this;
        }
        public Builder lowBoost(Boolean lowBoost) {
            this.lowBoost = Objects.requireNonNull(lowBoost);
            return this;
        }
        public Builder lufs(Double lufs) {
            this.lufs = Objects.requireNonNull(lufs);
            return this;
        }        public AudioResponse build() {
            return new AudioResponse(highBoost, lowBoost, lufs);
        }
    }
}
