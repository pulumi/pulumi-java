// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.containeranalysis_v1alpha1.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * StorageSource describes the location of the source in an archive file in Google Cloud Storage.
 * 
 */
public final class StorageSourceResponse extends com.pulumi.resources.InvokeArgs {

    public static final StorageSourceResponse Empty = new StorageSourceResponse();

    /**
     * Google Cloud Storage bucket containing source (see [Bucket Name Requirements] (https://cloud.google.com/storage/docs/bucket-naming#requirements)).
     * 
     */
    @Import(name="bucket", required=true)
    private String bucket;

    public String bucket() {
        return this.bucket;
    }

    /**
     * Google Cloud Storage generation for the object.
     * 
     */
    @Import(name="generation", required=true)
    private String generation;

    public String generation() {
        return this.generation;
    }

    /**
     * Google Cloud Storage object containing source.
     * 
     */
    @Import(name="object", required=true)
    private String object;

    public String object() {
        return this.object;
    }

    private StorageSourceResponse() {}

    private StorageSourceResponse(StorageSourceResponse $) {
        this.bucket = $.bucket;
        this.generation = $.generation;
        this.object = $.object;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(StorageSourceResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private StorageSourceResponse $;

        public Builder() {
            $ = new StorageSourceResponse();
        }

        public Builder(StorageSourceResponse defaults) {
            $ = new StorageSourceResponse(Objects.requireNonNull(defaults));
        }

        public Builder bucket(String bucket) {
            $.bucket = bucket;
            return this;
        }

        public Builder generation(String generation) {
            $.generation = generation;
            return this;
        }

        public Builder object(String object) {
            $.object = object;
            return this;
        }

        public StorageSourceResponse build() {
            $.bucket = Objects.requireNonNull($.bucket, "expected parameter 'bucket' to be non-null");
            $.generation = Objects.requireNonNull($.generation, "expected parameter 'generation' to be non-null");
            $.object = Objects.requireNonNull($.object, "expected parameter 'object' to be non-null");
            return $;
        }
    }

}
