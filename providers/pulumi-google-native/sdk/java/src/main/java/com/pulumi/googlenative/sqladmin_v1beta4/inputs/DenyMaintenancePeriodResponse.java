// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.sqladmin_v1beta4.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * Deny Maintenance Periods. This specifies a date range during when all CSA rollout will be denied.
 * 
 */
public final class DenyMaintenancePeriodResponse extends com.pulumi.resources.InvokeArgs {

    public static final DenyMaintenancePeriodResponse Empty = new DenyMaintenancePeriodResponse();

    /**
     * &#34;deny maintenance period&#34; end date. If the year of the end date is empty, the year of the start date also must be empty. In this case, it means the deny maintenance period recurs every year. The date is in format yyyy-mm-dd i.e., 2020-11-01, or mm-dd, i.e., 11-01
     * 
     */
    @Import(name="endDate", required=true)
    private String endDate;

    /**
     * @return &#34;deny maintenance period&#34; end date. If the year of the end date is empty, the year of the start date also must be empty. In this case, it means the deny maintenance period recurs every year. The date is in format yyyy-mm-dd i.e., 2020-11-01, or mm-dd, i.e., 11-01
     * 
     */
    public String endDate() {
        return this.endDate;
    }

    /**
     * &#34;deny maintenance period&#34; start date. If the year of the start date is empty, the year of the end date also must be empty. In this case, it means the deny maintenance period recurs every year. The date is in format yyyy-mm-dd i.e., 2020-11-01, or mm-dd, i.e., 11-01
     * 
     */
    @Import(name="startDate", required=true)
    private String startDate;

    /**
     * @return &#34;deny maintenance period&#34; start date. If the year of the start date is empty, the year of the end date also must be empty. In this case, it means the deny maintenance period recurs every year. The date is in format yyyy-mm-dd i.e., 2020-11-01, or mm-dd, i.e., 11-01
     * 
     */
    public String startDate() {
        return this.startDate;
    }

    /**
     * Time in UTC when the &#34;deny maintenance period&#34; starts on start_date and ends on end_date. The time is in format: HH:mm:SS, i.e., 00:00:00
     * 
     */
    @Import(name="time", required=true)
    private String time;

    /**
     * @return Time in UTC when the &#34;deny maintenance period&#34; starts on start_date and ends on end_date. The time is in format: HH:mm:SS, i.e., 00:00:00
     * 
     */
    public String time() {
        return this.time;
    }

    private DenyMaintenancePeriodResponse() {}

    private DenyMaintenancePeriodResponse(DenyMaintenancePeriodResponse $) {
        this.endDate = $.endDate;
        this.startDate = $.startDate;
        this.time = $.time;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DenyMaintenancePeriodResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DenyMaintenancePeriodResponse $;

        public Builder() {
            $ = new DenyMaintenancePeriodResponse();
        }

        public Builder(DenyMaintenancePeriodResponse defaults) {
            $ = new DenyMaintenancePeriodResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param endDate &#34;deny maintenance period&#34; end date. If the year of the end date is empty, the year of the start date also must be empty. In this case, it means the deny maintenance period recurs every year. The date is in format yyyy-mm-dd i.e., 2020-11-01, or mm-dd, i.e., 11-01
         * 
         * @return builder
         * 
         */
        public Builder endDate(String endDate) {
            $.endDate = endDate;
            return this;
        }

        /**
         * @param startDate &#34;deny maintenance period&#34; start date. If the year of the start date is empty, the year of the end date also must be empty. In this case, it means the deny maintenance period recurs every year. The date is in format yyyy-mm-dd i.e., 2020-11-01, or mm-dd, i.e., 11-01
         * 
         * @return builder
         * 
         */
        public Builder startDate(String startDate) {
            $.startDate = startDate;
            return this;
        }

        /**
         * @param time Time in UTC when the &#34;deny maintenance period&#34; starts on start_date and ends on end_date. The time is in format: HH:mm:SS, i.e., 00:00:00
         * 
         * @return builder
         * 
         */
        public Builder time(String time) {
            $.time = time;
            return this;
        }

        public DenyMaintenancePeriodResponse build() {
            $.endDate = Objects.requireNonNull($.endDate, "expected parameter 'endDate' to be non-null");
            $.startDate = Objects.requireNonNull($.startDate, "expected parameter 'startDate' to be non-null");
            $.time = Objects.requireNonNull($.time, "expected parameter 'time' to be non-null");
            return $;
        }
    }

}
