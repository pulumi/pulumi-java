// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.monitoring.v3.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.googlenative.monitoring.v3.outputs.JsonPathMatcherResponse;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class ContentMatcherResponse {
    /**
     * @return String, regex or JSON content to match. Maximum 1024 bytes. An empty content string indicates no content matching is to be performed.
     * 
     */
    private final String content;
    /**
     * @return Matcher information for MATCHES_JSON_PATH and NOT_MATCHES_JSON_PATH
     * 
     */
    private final JsonPathMatcherResponse jsonPathMatcher;
    /**
     * @return The type of content matcher that will be applied to the server output, compared to the content string when the check is run.
     * 
     */
    private final String matcher;

    @CustomType.Constructor
    private ContentMatcherResponse(
        @CustomType.Parameter("content") String content,
        @CustomType.Parameter("jsonPathMatcher") JsonPathMatcherResponse jsonPathMatcher,
        @CustomType.Parameter("matcher") String matcher) {
        this.content = content;
        this.jsonPathMatcher = jsonPathMatcher;
        this.matcher = matcher;
    }

    /**
     * @return String, regex or JSON content to match. Maximum 1024 bytes. An empty content string indicates no content matching is to be performed.
     * 
     */
    public String content() {
        return this.content;
    }
    /**
     * @return Matcher information for MATCHES_JSON_PATH and NOT_MATCHES_JSON_PATH
     * 
     */
    public JsonPathMatcherResponse jsonPathMatcher() {
        return this.jsonPathMatcher;
    }
    /**
     * @return The type of content matcher that will be applied to the server output, compared to the content string when the check is run.
     * 
     */
    public String matcher() {
        return this.matcher;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ContentMatcherResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String content;
        private JsonPathMatcherResponse jsonPathMatcher;
        private String matcher;

        public Builder() {
    	      // Empty
        }

        public Builder(ContentMatcherResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.content = defaults.content;
    	      this.jsonPathMatcher = defaults.jsonPathMatcher;
    	      this.matcher = defaults.matcher;
        }

        public Builder content(String content) {
            this.content = Objects.requireNonNull(content);
            return this;
        }
        public Builder jsonPathMatcher(JsonPathMatcherResponse jsonPathMatcher) {
            this.jsonPathMatcher = Objects.requireNonNull(jsonPathMatcher);
            return this;
        }
        public Builder matcher(String matcher) {
            this.matcher = Objects.requireNonNull(matcher);
            return this;
        }        public ContentMatcherResponse build() {
            return new ContentMatcherResponse(content, jsonPathMatcher, matcher);
        }
    }
}
