// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.container_v1beta1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class UpgradeSettingsArgs extends com.pulumi.resources.ResourceArgs {

    public static final UpgradeSettingsArgs Empty = new UpgradeSettingsArgs();

    /**
     * The maximum number of nodes that can be created beyond the current size of the node pool during the upgrade process.
     * 
     */
    @Import(name="maxSurge")
    private @Nullable Output<Integer> maxSurge;

    public Optional<Output<Integer>> maxSurge() {
        return Optional.ofNullable(this.maxSurge);
    }

    /**
     * The maximum number of nodes that can be simultaneously unavailable during the upgrade process. A node is considered available if its status is Ready.
     * 
     */
    @Import(name="maxUnavailable")
    private @Nullable Output<Integer> maxUnavailable;

    public Optional<Output<Integer>> maxUnavailable() {
        return Optional.ofNullable(this.maxUnavailable);
    }

    private UpgradeSettingsArgs() {}

    private UpgradeSettingsArgs(UpgradeSettingsArgs $) {
        this.maxSurge = $.maxSurge;
        this.maxUnavailable = $.maxUnavailable;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(UpgradeSettingsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private UpgradeSettingsArgs $;

        public Builder() {
            $ = new UpgradeSettingsArgs();
        }

        public Builder(UpgradeSettingsArgs defaults) {
            $ = new UpgradeSettingsArgs(Objects.requireNonNull(defaults));
        }

        public Builder maxSurge(@Nullable Output<Integer> maxSurge) {
            $.maxSurge = maxSurge;
            return this;
        }

        public Builder maxSurge(Integer maxSurge) {
            return maxSurge(Output.of(maxSurge));
        }

        public Builder maxUnavailable(@Nullable Output<Integer> maxUnavailable) {
            $.maxUnavailable = maxUnavailable;
            return this;
        }

        public Builder maxUnavailable(Integer maxUnavailable) {
            return maxUnavailable(Output.of(maxUnavailable));
        }

        public UpgradeSettingsArgs build() {
            return $;
        }
    }

}
