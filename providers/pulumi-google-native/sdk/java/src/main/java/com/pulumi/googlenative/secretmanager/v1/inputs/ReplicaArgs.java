// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.secretmanager.v1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.secretmanager.v1.inputs.CustomerManagedEncryptionArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Represents a Replica for this Secret.
 * 
 */
public final class ReplicaArgs extends com.pulumi.resources.ResourceArgs {

    public static final ReplicaArgs Empty = new ReplicaArgs();

    /**
     * Optional. The customer-managed encryption configuration of the User-Managed Replica. If no configuration is provided, Google-managed default encryption is used. Updates to the Secret encryption configuration only apply to SecretVersions added afterwards. They do not apply retroactively to existing SecretVersions.
     * 
     */
    @Import(name="customerManagedEncryption")
    private @Nullable Output<CustomerManagedEncryptionArgs> customerManagedEncryption;

    /**
     * @return Optional. The customer-managed encryption configuration of the User-Managed Replica. If no configuration is provided, Google-managed default encryption is used. Updates to the Secret encryption configuration only apply to SecretVersions added afterwards. They do not apply retroactively to existing SecretVersions.
     * 
     */
    public Optional<Output<CustomerManagedEncryptionArgs>> customerManagedEncryption() {
        return Optional.ofNullable(this.customerManagedEncryption);
    }

    /**
     * The canonical IDs of the location to replicate data. For example: `&#34;us-east1&#34;`.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return The canonical IDs of the location to replicate data. For example: `&#34;us-east1&#34;`.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    private ReplicaArgs() {}

    private ReplicaArgs(ReplicaArgs $) {
        this.customerManagedEncryption = $.customerManagedEncryption;
        this.location = $.location;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ReplicaArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ReplicaArgs $;

        public Builder() {
            $ = new ReplicaArgs();
        }

        public Builder(ReplicaArgs defaults) {
            $ = new ReplicaArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param customerManagedEncryption Optional. The customer-managed encryption configuration of the User-Managed Replica. If no configuration is provided, Google-managed default encryption is used. Updates to the Secret encryption configuration only apply to SecretVersions added afterwards. They do not apply retroactively to existing SecretVersions.
         * 
         * @return builder
         * 
         */
        public Builder customerManagedEncryption(@Nullable Output<CustomerManagedEncryptionArgs> customerManagedEncryption) {
            $.customerManagedEncryption = customerManagedEncryption;
            return this;
        }

        /**
         * @param customerManagedEncryption Optional. The customer-managed encryption configuration of the User-Managed Replica. If no configuration is provided, Google-managed default encryption is used. Updates to the Secret encryption configuration only apply to SecretVersions added afterwards. They do not apply retroactively to existing SecretVersions.
         * 
         * @return builder
         * 
         */
        public Builder customerManagedEncryption(CustomerManagedEncryptionArgs customerManagedEncryption) {
            return customerManagedEncryption(Output.of(customerManagedEncryption));
        }

        /**
         * @param location The canonical IDs of the location to replicate data. For example: `&#34;us-east1&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location The canonical IDs of the location to replicate data. For example: `&#34;us-east1&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        public ReplicaArgs build() {
            return $;
        }
    }

}
