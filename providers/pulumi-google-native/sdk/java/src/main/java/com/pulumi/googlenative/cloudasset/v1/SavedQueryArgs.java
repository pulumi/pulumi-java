// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.cloudasset.v1;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.cloudasset.v1.inputs.QueryContentArgs;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SavedQueryArgs extends com.pulumi.resources.ResourceArgs {

    public static final SavedQueryArgs Empty = new SavedQueryArgs();

    /**
     * The query content.
     * 
     */
    @Import(name="content")
    private @Nullable Output<QueryContentArgs> content;

    /**
     * @return The query content.
     * 
     */
    public Optional<Output<QueryContentArgs>> content() {
        return Optional.ofNullable(this.content);
    }

    /**
     * The description of this saved query. This value should be fewer than 255 characters.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The description of this saved query. This value should be fewer than 255 characters.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Labels applied on the resource. This value should not contain more than 10 entries. The key and value of each entry must be non-empty and fewer than 64 characters.
     * 
     */
    @Import(name="labels")
    private @Nullable Output<Map<String,String>> labels;

    /**
     * @return Labels applied on the resource. This value should not contain more than 10 entries. The key and value of each entry must be non-empty and fewer than 64 characters.
     * 
     */
    public Optional<Output<Map<String,String>>> labels() {
        return Optional.ofNullable(this.labels);
    }

    /**
     * The resource name of the saved query. The format must be: * projects/project_number/savedQueries/saved_query_id * folders/folder_number/savedQueries/saved_query_id * organizations/organization_number/savedQueries/saved_query_id
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The resource name of the saved query. The format must be: * projects/project_number/savedQueries/saved_query_id * folders/folder_number/savedQueries/saved_query_id * organizations/organization_number/savedQueries/saved_query_id
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Required. The ID to use for the saved query, which must be unique in the specified parent. It will become the final component of the saved query&#39;s resource name. This value should be 4-63 characters, and valid characters are /a-z-/. Notice that this field is required in the saved query creation, and the `name` field of the `saved_query` will be ignored.
     * 
     */
    @Import(name="savedQueryId", required=true)
    private Output<String> savedQueryId;

    /**
     * @return Required. The ID to use for the saved query, which must be unique in the specified parent. It will become the final component of the saved query&#39;s resource name. This value should be 4-63 characters, and valid characters are /a-z-/. Notice that this field is required in the saved query creation, and the `name` field of the `saved_query` will be ignored.
     * 
     */
    public Output<String> savedQueryId() {
        return this.savedQueryId;
    }

    @Import(name="v1Id", required=true)
    private Output<String> v1Id;

    public Output<String> v1Id() {
        return this.v1Id;
    }

    @Import(name="v1Id1", required=true)
    private Output<String> v1Id1;

    public Output<String> v1Id1() {
        return this.v1Id1;
    }

    private SavedQueryArgs() {}

    private SavedQueryArgs(SavedQueryArgs $) {
        this.content = $.content;
        this.description = $.description;
        this.labels = $.labels;
        this.name = $.name;
        this.savedQueryId = $.savedQueryId;
        this.v1Id = $.v1Id;
        this.v1Id1 = $.v1Id1;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SavedQueryArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SavedQueryArgs $;

        public Builder() {
            $ = new SavedQueryArgs();
        }

        public Builder(SavedQueryArgs defaults) {
            $ = new SavedQueryArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param content The query content.
         * 
         * @return builder
         * 
         */
        public Builder content(@Nullable Output<QueryContentArgs> content) {
            $.content = content;
            return this;
        }

        /**
         * @param content The query content.
         * 
         * @return builder
         * 
         */
        public Builder content(QueryContentArgs content) {
            return content(Output.of(content));
        }

        /**
         * @param description The description of this saved query. This value should be fewer than 255 characters.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description of this saved query. This value should be fewer than 255 characters.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param labels Labels applied on the resource. This value should not contain more than 10 entries. The key and value of each entry must be non-empty and fewer than 64 characters.
         * 
         * @return builder
         * 
         */
        public Builder labels(@Nullable Output<Map<String,String>> labels) {
            $.labels = labels;
            return this;
        }

        /**
         * @param labels Labels applied on the resource. This value should not contain more than 10 entries. The key and value of each entry must be non-empty and fewer than 64 characters.
         * 
         * @return builder
         * 
         */
        public Builder labels(Map<String,String> labels) {
            return labels(Output.of(labels));
        }

        /**
         * @param name The resource name of the saved query. The format must be: * projects/project_number/savedQueries/saved_query_id * folders/folder_number/savedQueries/saved_query_id * organizations/organization_number/savedQueries/saved_query_id
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The resource name of the saved query. The format must be: * projects/project_number/savedQueries/saved_query_id * folders/folder_number/savedQueries/saved_query_id * organizations/organization_number/savedQueries/saved_query_id
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param savedQueryId Required. The ID to use for the saved query, which must be unique in the specified parent. It will become the final component of the saved query&#39;s resource name. This value should be 4-63 characters, and valid characters are /a-z-/. Notice that this field is required in the saved query creation, and the `name` field of the `saved_query` will be ignored.
         * 
         * @return builder
         * 
         */
        public Builder savedQueryId(Output<String> savedQueryId) {
            $.savedQueryId = savedQueryId;
            return this;
        }

        /**
         * @param savedQueryId Required. The ID to use for the saved query, which must be unique in the specified parent. It will become the final component of the saved query&#39;s resource name. This value should be 4-63 characters, and valid characters are /a-z-/. Notice that this field is required in the saved query creation, and the `name` field of the `saved_query` will be ignored.
         * 
         * @return builder
         * 
         */
        public Builder savedQueryId(String savedQueryId) {
            return savedQueryId(Output.of(savedQueryId));
        }

        public Builder v1Id(Output<String> v1Id) {
            $.v1Id = v1Id;
            return this;
        }

        public Builder v1Id(String v1Id) {
            return v1Id(Output.of(v1Id));
        }

        public Builder v1Id1(Output<String> v1Id1) {
            $.v1Id1 = v1Id1;
            return this;
        }

        public Builder v1Id1(String v1Id1) {
            return v1Id1(Output.of(v1Id1));
        }

        public SavedQueryArgs build() {
            $.savedQueryId = Objects.requireNonNull($.savedQueryId, "expected parameter 'savedQueryId' to be non-null");
            $.v1Id = Objects.requireNonNull($.v1Id, "expected parameter 'v1Id' to be non-null");
            $.v1Id1 = Objects.requireNonNull($.v1Id1, "expected parameter 'v1Id1' to be non-null");
            return $;
        }
    }

}
