// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.bigquerydatatransfer_v1.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;


/**
 * Options customizing the data transfer schedule.
 * 
 */
public final class ScheduleOptionsResponse extends com.pulumi.resources.InvokeArgs {

    public static final ScheduleOptionsResponse Empty = new ScheduleOptionsResponse();

    /**
     * If true, automatic scheduling of data transfer runs for this configuration will be disabled. The runs can be started on ad-hoc basis using StartManualTransferRuns API. When automatic scheduling is disabled, the TransferConfig.schedule field will be ignored.
     * 
     */
    @Import(name="disableAutoScheduling", required=true)
    private Boolean disableAutoScheduling;

    public Boolean disableAutoScheduling() {
        return this.disableAutoScheduling;
    }

    /**
     * Defines time to stop scheduling transfer runs. A transfer run cannot be scheduled at or after the end time. The end time can be changed at any moment. The time when a data transfer can be trigerred manually is not limited by this option.
     * 
     */
    @Import(name="endTime", required=true)
    private String endTime;

    public String endTime() {
        return this.endTime;
    }

    /**
     * Specifies time to start scheduling transfer runs. The first run will be scheduled at or after the start time according to a recurrence pattern defined in the schedule string. The start time can be changed at any moment. The time when a data transfer can be trigerred manually is not limited by this option.
     * 
     */
    @Import(name="startTime", required=true)
    private String startTime;

    public String startTime() {
        return this.startTime;
    }

    private ScheduleOptionsResponse() {}

    private ScheduleOptionsResponse(ScheduleOptionsResponse $) {
        this.disableAutoScheduling = $.disableAutoScheduling;
        this.endTime = $.endTime;
        this.startTime = $.startTime;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ScheduleOptionsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ScheduleOptionsResponse $;

        public Builder() {
            $ = new ScheduleOptionsResponse();
        }

        public Builder(ScheduleOptionsResponse defaults) {
            $ = new ScheduleOptionsResponse(Objects.requireNonNull(defaults));
        }

        public Builder disableAutoScheduling(Boolean disableAutoScheduling) {
            $.disableAutoScheduling = disableAutoScheduling;
            return this;
        }

        public Builder endTime(String endTime) {
            $.endTime = endTime;
            return this;
        }

        public Builder startTime(String startTime) {
            $.startTime = startTime;
            return this;
        }

        public ScheduleOptionsResponse build() {
            $.disableAutoScheduling = Objects.requireNonNull($.disableAutoScheduling, "expected parameter 'disableAutoScheduling' to be non-null");
            $.endTime = Objects.requireNonNull($.endTime, "expected parameter 'endTime' to be non-null");
            $.startTime = Objects.requireNonNull($.startTime, "expected parameter 'startTime' to be non-null");
            return $;
        }
    }

}
