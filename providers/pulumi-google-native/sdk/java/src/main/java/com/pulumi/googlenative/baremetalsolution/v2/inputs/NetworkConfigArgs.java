// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.baremetalsolution.v2.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.baremetalsolution.v2.enums.NetworkConfigBandwidth;
import com.pulumi.googlenative.baremetalsolution.v2.enums.NetworkConfigServiceCidr;
import com.pulumi.googlenative.baremetalsolution.v2.enums.NetworkConfigType;
import com.pulumi.googlenative.baremetalsolution.v2.inputs.IntakeVlanAttachmentArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Configuration parameters for a new network.
 * 
 */
public final class NetworkConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final NetworkConfigArgs Empty = new NetworkConfigArgs();

    /**
     * Interconnect bandwidth. Set only when type is CLIENT.
     * 
     */
    @Import(name="bandwidth")
    private @Nullable Output<NetworkConfigBandwidth> bandwidth;

    /**
     * @return Interconnect bandwidth. Set only when type is CLIENT.
     * 
     */
    public Optional<Output<NetworkConfigBandwidth>> bandwidth() {
        return Optional.ofNullable(this.bandwidth);
    }

    /**
     * CIDR range of the network.
     * 
     */
    @Import(name="cidr")
    private @Nullable Output<String> cidr;

    /**
     * @return CIDR range of the network.
     * 
     */
    public Optional<Output<String>> cidr() {
        return Optional.ofNullable(this.cidr);
    }

    /**
     * The GCP service of the network. Available gcp_service are in https://cloud.google.com/bare-metal/docs/bms-planning.
     * 
     */
    @Import(name="gcpService")
    private @Nullable Output<String> gcpService;

    /**
     * @return The GCP service of the network. Available gcp_service are in https://cloud.google.com/bare-metal/docs/bms-planning.
     * 
     */
    public Optional<Output<String>> gcpService() {
        return Optional.ofNullable(this.gcpService);
    }

    /**
     * A transient unique identifier to identify a volume within an ProvisioningConfig request.
     * 
     */
    @Import(name="id")
    private @Nullable Output<String> id;

    /**
     * @return A transient unique identifier to identify a volume within an ProvisioningConfig request.
     * 
     */
    public Optional<Output<String>> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * The JumboFramesEnabled option for customer to set.
     * 
     */
    @Import(name="jumboFramesEnabled")
    private @Nullable Output<Boolean> jumboFramesEnabled;

    /**
     * @return The JumboFramesEnabled option for customer to set.
     * 
     */
    public Optional<Output<Boolean>> jumboFramesEnabled() {
        return Optional.ofNullable(this.jumboFramesEnabled);
    }

    /**
     * Service CIDR, if any.
     * 
     */
    @Import(name="serviceCidr")
    private @Nullable Output<NetworkConfigServiceCidr> serviceCidr;

    /**
     * @return Service CIDR, if any.
     * 
     */
    public Optional<Output<NetworkConfigServiceCidr>> serviceCidr() {
        return Optional.ofNullable(this.serviceCidr);
    }

    /**
     * The type of this network, either Client or Private.
     * 
     */
    @Import(name="type")
    private @Nullable Output<NetworkConfigType> type;

    /**
     * @return The type of this network, either Client or Private.
     * 
     */
    public Optional<Output<NetworkConfigType>> type() {
        return Optional.ofNullable(this.type);
    }

    /**
     * User note field, it can be used by customers to add additional information for the BMS Ops team .
     * 
     */
    @Import(name="userNote")
    private @Nullable Output<String> userNote;

    /**
     * @return User note field, it can be used by customers to add additional information for the BMS Ops team .
     * 
     */
    public Optional<Output<String>> userNote() {
        return Optional.ofNullable(this.userNote);
    }

    /**
     * List of VLAN attachments. As of now there are always 2 attachments, but it is going to change in the future (multi vlan).
     * 
     */
    @Import(name="vlanAttachments")
    private @Nullable Output<List<IntakeVlanAttachmentArgs>> vlanAttachments;

    /**
     * @return List of VLAN attachments. As of now there are always 2 attachments, but it is going to change in the future (multi vlan).
     * 
     */
    public Optional<Output<List<IntakeVlanAttachmentArgs>>> vlanAttachments() {
        return Optional.ofNullable(this.vlanAttachments);
    }

    /**
     * Whether the VLAN attachment pair is located in the same project.
     * 
     */
    @Import(name="vlanSameProject")
    private @Nullable Output<Boolean> vlanSameProject;

    /**
     * @return Whether the VLAN attachment pair is located in the same project.
     * 
     */
    public Optional<Output<Boolean>> vlanSameProject() {
        return Optional.ofNullable(this.vlanSameProject);
    }

    private NetworkConfigArgs() {}

    private NetworkConfigArgs(NetworkConfigArgs $) {
        this.bandwidth = $.bandwidth;
        this.cidr = $.cidr;
        this.gcpService = $.gcpService;
        this.id = $.id;
        this.jumboFramesEnabled = $.jumboFramesEnabled;
        this.serviceCidr = $.serviceCidr;
        this.type = $.type;
        this.userNote = $.userNote;
        this.vlanAttachments = $.vlanAttachments;
        this.vlanSameProject = $.vlanSameProject;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NetworkConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NetworkConfigArgs $;

        public Builder() {
            $ = new NetworkConfigArgs();
        }

        public Builder(NetworkConfigArgs defaults) {
            $ = new NetworkConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param bandwidth Interconnect bandwidth. Set only when type is CLIENT.
         * 
         * @return builder
         * 
         */
        public Builder bandwidth(@Nullable Output<NetworkConfigBandwidth> bandwidth) {
            $.bandwidth = bandwidth;
            return this;
        }

        /**
         * @param bandwidth Interconnect bandwidth. Set only when type is CLIENT.
         * 
         * @return builder
         * 
         */
        public Builder bandwidth(NetworkConfigBandwidth bandwidth) {
            return bandwidth(Output.of(bandwidth));
        }

        /**
         * @param cidr CIDR range of the network.
         * 
         * @return builder
         * 
         */
        public Builder cidr(@Nullable Output<String> cidr) {
            $.cidr = cidr;
            return this;
        }

        /**
         * @param cidr CIDR range of the network.
         * 
         * @return builder
         * 
         */
        public Builder cidr(String cidr) {
            return cidr(Output.of(cidr));
        }

        /**
         * @param gcpService The GCP service of the network. Available gcp_service are in https://cloud.google.com/bare-metal/docs/bms-planning.
         * 
         * @return builder
         * 
         */
        public Builder gcpService(@Nullable Output<String> gcpService) {
            $.gcpService = gcpService;
            return this;
        }

        /**
         * @param gcpService The GCP service of the network. Available gcp_service are in https://cloud.google.com/bare-metal/docs/bms-planning.
         * 
         * @return builder
         * 
         */
        public Builder gcpService(String gcpService) {
            return gcpService(Output.of(gcpService));
        }

        /**
         * @param id A transient unique identifier to identify a volume within an ProvisioningConfig request.
         * 
         * @return builder
         * 
         */
        public Builder id(@Nullable Output<String> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id A transient unique identifier to identify a volume within an ProvisioningConfig request.
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            return id(Output.of(id));
        }

        /**
         * @param jumboFramesEnabled The JumboFramesEnabled option for customer to set.
         * 
         * @return builder
         * 
         */
        public Builder jumboFramesEnabled(@Nullable Output<Boolean> jumboFramesEnabled) {
            $.jumboFramesEnabled = jumboFramesEnabled;
            return this;
        }

        /**
         * @param jumboFramesEnabled The JumboFramesEnabled option for customer to set.
         * 
         * @return builder
         * 
         */
        public Builder jumboFramesEnabled(Boolean jumboFramesEnabled) {
            return jumboFramesEnabled(Output.of(jumboFramesEnabled));
        }

        /**
         * @param serviceCidr Service CIDR, if any.
         * 
         * @return builder
         * 
         */
        public Builder serviceCidr(@Nullable Output<NetworkConfigServiceCidr> serviceCidr) {
            $.serviceCidr = serviceCidr;
            return this;
        }

        /**
         * @param serviceCidr Service CIDR, if any.
         * 
         * @return builder
         * 
         */
        public Builder serviceCidr(NetworkConfigServiceCidr serviceCidr) {
            return serviceCidr(Output.of(serviceCidr));
        }

        /**
         * @param type The type of this network, either Client or Private.
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable Output<NetworkConfigType> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type The type of this network, either Client or Private.
         * 
         * @return builder
         * 
         */
        public Builder type(NetworkConfigType type) {
            return type(Output.of(type));
        }

        /**
         * @param userNote User note field, it can be used by customers to add additional information for the BMS Ops team .
         * 
         * @return builder
         * 
         */
        public Builder userNote(@Nullable Output<String> userNote) {
            $.userNote = userNote;
            return this;
        }

        /**
         * @param userNote User note field, it can be used by customers to add additional information for the BMS Ops team .
         * 
         * @return builder
         * 
         */
        public Builder userNote(String userNote) {
            return userNote(Output.of(userNote));
        }

        /**
         * @param vlanAttachments List of VLAN attachments. As of now there are always 2 attachments, but it is going to change in the future (multi vlan).
         * 
         * @return builder
         * 
         */
        public Builder vlanAttachments(@Nullable Output<List<IntakeVlanAttachmentArgs>> vlanAttachments) {
            $.vlanAttachments = vlanAttachments;
            return this;
        }

        /**
         * @param vlanAttachments List of VLAN attachments. As of now there are always 2 attachments, but it is going to change in the future (multi vlan).
         * 
         * @return builder
         * 
         */
        public Builder vlanAttachments(List<IntakeVlanAttachmentArgs> vlanAttachments) {
            return vlanAttachments(Output.of(vlanAttachments));
        }

        /**
         * @param vlanAttachments List of VLAN attachments. As of now there are always 2 attachments, but it is going to change in the future (multi vlan).
         * 
         * @return builder
         * 
         */
        public Builder vlanAttachments(IntakeVlanAttachmentArgs... vlanAttachments) {
            return vlanAttachments(List.of(vlanAttachments));
        }

        /**
         * @param vlanSameProject Whether the VLAN attachment pair is located in the same project.
         * 
         * @return builder
         * 
         */
        public Builder vlanSameProject(@Nullable Output<Boolean> vlanSameProject) {
            $.vlanSameProject = vlanSameProject;
            return this;
        }

        /**
         * @param vlanSameProject Whether the VLAN attachment pair is located in the same project.
         * 
         * @return builder
         * 
         */
        public Builder vlanSameProject(Boolean vlanSameProject) {
            return vlanSameProject(Output.of(vlanSameProject));
        }

        public NetworkConfigArgs build() {
            return $;
        }
    }

}
