// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.deploymentmanager_v2beta.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class DiagnosticResponse extends com.pulumi.resources.InvokeArgs {

    public static final DiagnosticResponse Empty = new DiagnosticResponse();

    /**
     * JsonPath expression on the resource that if non empty, indicates that this field needs to be extracted as a diagnostic.
     * 
     */
    @Import(name="field", required=true)
    private String field;

    /**
     * @return JsonPath expression on the resource that if non empty, indicates that this field needs to be extracted as a diagnostic.
     * 
     */
    public String field() {
        return this.field;
    }

    /**
     * Level to record this diagnostic.
     * 
     */
    @Import(name="level", required=true)
    private String level;

    /**
     * @return Level to record this diagnostic.
     * 
     */
    public String level() {
        return this.level;
    }

    private DiagnosticResponse() {}

    private DiagnosticResponse(DiagnosticResponse $) {
        this.field = $.field;
        this.level = $.level;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DiagnosticResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DiagnosticResponse $;

        public Builder() {
            $ = new DiagnosticResponse();
        }

        public Builder(DiagnosticResponse defaults) {
            $ = new DiagnosticResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param field JsonPath expression on the resource that if non empty, indicates that this field needs to be extracted as a diagnostic.
         * 
         * @return builder
         * 
         */
        public Builder field(String field) {
            $.field = field;
            return this;
        }

        /**
         * @param level Level to record this diagnostic.
         * 
         * @return builder
         * 
         */
        public Builder level(String level) {
            $.level = level;
            return this;
        }

        public DiagnosticResponse build() {
            $.field = Objects.requireNonNull($.field, "expected parameter 'field' to be non-null");
            $.level = Objects.requireNonNull($.level, "expected parameter 'level' to be non-null");
            return $;
        }
    }

}
