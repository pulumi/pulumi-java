// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.monitoring_v1.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.monitoring_v1.inputs.AlertChartResponse;
import com.pulumi.googlenative.monitoring_v1.inputs.EmptyResponse;
import com.pulumi.googlenative.monitoring_v1.inputs.LogsPanelResponse;
import com.pulumi.googlenative.monitoring_v1.inputs.ScorecardResponse;
import com.pulumi.googlenative.monitoring_v1.inputs.TextResponse;
import com.pulumi.googlenative.monitoring_v1.inputs.TimeSeriesTableResponse;
import com.pulumi.googlenative.monitoring_v1.inputs.XyChartResponse;
import java.lang.String;
import java.util.Objects;


/**
 * Widget contains a single dashboard component and configuration of how to present the component in the dashboard.
 * 
 */
public final class WidgetResponse extends com.pulumi.resources.InvokeArgs {

    public static final WidgetResponse Empty = new WidgetResponse();

    /**
     * A chart of alert policy data.
     * 
     */
    @Import(name="alertChart", required=true)
    private AlertChartResponse alertChart;

    public AlertChartResponse alertChart() {
        return this.alertChart;
    }

    /**
     * A blank space.
     * 
     */
    @Import(name="blank", required=true)
    private EmptyResponse blank;

    public EmptyResponse blank() {
        return this.blank;
    }

    /**
     * A widget that shows a stream of logs.
     * 
     */
    @Import(name="logsPanel", required=true)
    private LogsPanelResponse logsPanel;

    public LogsPanelResponse logsPanel() {
        return this.logsPanel;
    }

    /**
     * A scorecard summarizing time series data.
     * 
     */
    @Import(name="scorecard", required=true)
    private ScorecardResponse scorecard;

    public ScorecardResponse scorecard() {
        return this.scorecard;
    }

    /**
     * A raw string or markdown displaying textual content.
     * 
     */
    @Import(name="text", required=true)
    private TextResponse text;

    public TextResponse text() {
        return this.text;
    }

    /**
     * A widget that displays time series data in a tabular format.
     * 
     */
    @Import(name="timeSeriesTable", required=true)
    private TimeSeriesTableResponse timeSeriesTable;

    public TimeSeriesTableResponse timeSeriesTable() {
        return this.timeSeriesTable;
    }

    /**
     * Optional. The title of the widget.
     * 
     */
    @Import(name="title", required=true)
    private String title;

    public String title() {
        return this.title;
    }

    /**
     * A chart of time series data.
     * 
     */
    @Import(name="xyChart", required=true)
    private XyChartResponse xyChart;

    public XyChartResponse xyChart() {
        return this.xyChart;
    }

    private WidgetResponse() {}

    private WidgetResponse(WidgetResponse $) {
        this.alertChart = $.alertChart;
        this.blank = $.blank;
        this.logsPanel = $.logsPanel;
        this.scorecard = $.scorecard;
        this.text = $.text;
        this.timeSeriesTable = $.timeSeriesTable;
        this.title = $.title;
        this.xyChart = $.xyChart;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WidgetResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WidgetResponse $;

        public Builder() {
            $ = new WidgetResponse();
        }

        public Builder(WidgetResponse defaults) {
            $ = new WidgetResponse(Objects.requireNonNull(defaults));
        }

        public Builder alertChart(AlertChartResponse alertChart) {
            $.alertChart = alertChart;
            return this;
        }

        public Builder blank(EmptyResponse blank) {
            $.blank = blank;
            return this;
        }

        public Builder logsPanel(LogsPanelResponse logsPanel) {
            $.logsPanel = logsPanel;
            return this;
        }

        public Builder scorecard(ScorecardResponse scorecard) {
            $.scorecard = scorecard;
            return this;
        }

        public Builder text(TextResponse text) {
            $.text = text;
            return this;
        }

        public Builder timeSeriesTable(TimeSeriesTableResponse timeSeriesTable) {
            $.timeSeriesTable = timeSeriesTable;
            return this;
        }

        public Builder title(String title) {
            $.title = title;
            return this;
        }

        public Builder xyChart(XyChartResponse xyChart) {
            $.xyChart = xyChart;
            return this;
        }

        public WidgetResponse build() {
            $.alertChart = Objects.requireNonNull($.alertChart, "expected parameter 'alertChart' to be non-null");
            $.blank = Objects.requireNonNull($.blank, "expected parameter 'blank' to be non-null");
            $.logsPanel = Objects.requireNonNull($.logsPanel, "expected parameter 'logsPanel' to be non-null");
            $.scorecard = Objects.requireNonNull($.scorecard, "expected parameter 'scorecard' to be non-null");
            $.text = Objects.requireNonNull($.text, "expected parameter 'text' to be non-null");
            $.timeSeriesTable = Objects.requireNonNull($.timeSeriesTable, "expected parameter 'timeSeriesTable' to be non-null");
            $.title = Objects.requireNonNull($.title, "expected parameter 'title' to be non-null");
            $.xyChart = Objects.requireNonNull($.xyChart, "expected parameter 'xyChart' to be non-null");
            return $;
        }
    }

}
