// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.datastream_v1alpha1.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.datastream_v1alpha1.inputs.AvroFileFormatResponse;
import com.pulumi.googlenative.datastream_v1alpha1.inputs.JsonFileFormatResponse;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;


/**
 * Google Cloud Storage destination configuration
 * 
 */
public final class GcsDestinationConfigResponse extends com.pulumi.resources.InvokeArgs {

    public static final GcsDestinationConfigResponse Empty = new GcsDestinationConfigResponse();

    /**
     * AVRO file format configuration.
     * 
     */
    @Import(name="avroFileFormat", required=true)
    private AvroFileFormatResponse avroFileFormat;

    public AvroFileFormatResponse avroFileFormat() {
        return this.avroFileFormat;
    }

    /**
     * The maximum duration for which new events are added before a file is closed and a new file is created.
     * 
     */
    @Import(name="fileRotationInterval", required=true)
    private String fileRotationInterval;

    public String fileRotationInterval() {
        return this.fileRotationInterval;
    }

    /**
     * The maximum file size to be saved in the bucket.
     * 
     */
    @Import(name="fileRotationMb", required=true)
    private Integer fileRotationMb;

    public Integer fileRotationMb() {
        return this.fileRotationMb;
    }

    /**
     * JSON file format configuration.
     * 
     */
    @Import(name="jsonFileFormat", required=true)
    private JsonFileFormatResponse jsonFileFormat;

    public JsonFileFormatResponse jsonFileFormat() {
        return this.jsonFileFormat;
    }

    /**
     * Path inside the Cloud Storage bucket to write data to.
     * 
     */
    @Import(name="path", required=true)
    private String path;

    public String path() {
        return this.path;
    }

    private GcsDestinationConfigResponse() {}

    private GcsDestinationConfigResponse(GcsDestinationConfigResponse $) {
        this.avroFileFormat = $.avroFileFormat;
        this.fileRotationInterval = $.fileRotationInterval;
        this.fileRotationMb = $.fileRotationMb;
        this.jsonFileFormat = $.jsonFileFormat;
        this.path = $.path;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GcsDestinationConfigResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GcsDestinationConfigResponse $;

        public Builder() {
            $ = new GcsDestinationConfigResponse();
        }

        public Builder(GcsDestinationConfigResponse defaults) {
            $ = new GcsDestinationConfigResponse(Objects.requireNonNull(defaults));
        }

        public Builder avroFileFormat(AvroFileFormatResponse avroFileFormat) {
            $.avroFileFormat = avroFileFormat;
            return this;
        }

        public Builder fileRotationInterval(String fileRotationInterval) {
            $.fileRotationInterval = fileRotationInterval;
            return this;
        }

        public Builder fileRotationMb(Integer fileRotationMb) {
            $.fileRotationMb = fileRotationMb;
            return this;
        }

        public Builder jsonFileFormat(JsonFileFormatResponse jsonFileFormat) {
            $.jsonFileFormat = jsonFileFormat;
            return this;
        }

        public Builder path(String path) {
            $.path = path;
            return this;
        }

        public GcsDestinationConfigResponse build() {
            $.avroFileFormat = Objects.requireNonNull($.avroFileFormat, "expected parameter 'avroFileFormat' to be non-null");
            $.fileRotationInterval = Objects.requireNonNull($.fileRotationInterval, "expected parameter 'fileRotationInterval' to be non-null");
            $.fileRotationMb = Objects.requireNonNull($.fileRotationMb, "expected parameter 'fileRotationMb' to be non-null");
            $.jsonFileFormat = Objects.requireNonNull($.jsonFileFormat, "expected parameter 'jsonFileFormat' to be non-null");
            $.path = Objects.requireNonNull($.path, "expected parameter 'path' to be non-null");
            return $;
        }
    }

}
