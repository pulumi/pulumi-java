// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.recaptchaenterprise.v1.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GoogleCloudRecaptchaenterpriseV1TestingOptionsResponse {
    /**
     * @return For challenge-based keys only (CHECKBOX, INVISIBLE), all challenge requests for this site will return nocaptcha if NOCAPTCHA, or an unsolvable challenge if CHALLENGE.
     * 
     */
    private final String testingChallenge;
    /**
     * @return All assessments for this Key will return this score. Must be between 0 (likely not legitimate) and 1 (likely legitimate) inclusive.
     * 
     */
    private final Double testingScore;

    @CustomType.Constructor
    private GoogleCloudRecaptchaenterpriseV1TestingOptionsResponse(
        @CustomType.Parameter("testingChallenge") String testingChallenge,
        @CustomType.Parameter("testingScore") Double testingScore) {
        this.testingChallenge = testingChallenge;
        this.testingScore = testingScore;
    }

    /**
     * @return For challenge-based keys only (CHECKBOX, INVISIBLE), all challenge requests for this site will return nocaptcha if NOCAPTCHA, or an unsolvable challenge if CHALLENGE.
     * 
     */
    public String testingChallenge() {
        return this.testingChallenge;
    }
    /**
     * @return All assessments for this Key will return this score. Must be between 0 (likely not legitimate) and 1 (likely legitimate) inclusive.
     * 
     */
    public Double testingScore() {
        return this.testingScore;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GoogleCloudRecaptchaenterpriseV1TestingOptionsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String testingChallenge;
        private Double testingScore;

        public Builder() {
    	      // Empty
        }

        public Builder(GoogleCloudRecaptchaenterpriseV1TestingOptionsResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.testingChallenge = defaults.testingChallenge;
    	      this.testingScore = defaults.testingScore;
        }

        public Builder testingChallenge(String testingChallenge) {
            this.testingChallenge = Objects.requireNonNull(testingChallenge);
            return this;
        }
        public Builder testingScore(Double testingScore) {
            this.testingScore = Objects.requireNonNull(testingScore);
            return this;
        }        public GoogleCloudRecaptchaenterpriseV1TestingOptionsResponse build() {
            return new GoogleCloudRecaptchaenterpriseV1TestingOptionsResponse(testingChallenge, testingScore);
        }
    }
}
