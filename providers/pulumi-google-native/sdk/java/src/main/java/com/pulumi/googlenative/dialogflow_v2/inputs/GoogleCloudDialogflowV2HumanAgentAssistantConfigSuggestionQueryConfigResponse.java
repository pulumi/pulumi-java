// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.dialogflow_v2.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.dialogflow_v2.inputs.GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfigContextFilterSettingsResponse;
import com.pulumi.googlenative.dialogflow_v2.inputs.GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfigDialogflowQuerySourceResponse;
import com.pulumi.googlenative.dialogflow_v2.inputs.GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfigDocumentQuerySourceResponse;
import com.pulumi.googlenative.dialogflow_v2.inputs.GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfigKnowledgeBaseQuerySourceResponse;
import java.lang.Double;
import java.lang.Integer;
import java.util.Objects;


/**
 * Config for suggestion query.
 * 
 */
public final class GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfigResponse extends com.pulumi.resources.InvokeArgs {

    public static final GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfigResponse Empty = new GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfigResponse();

    /**
     * Confidence threshold of query result. Agent Assist gives each suggestion a score in the range [0.0, 1.0], based on the relevance between the suggestion and the current conversation context. A score of 0.0 has no relevance, while a score of 1.0 has high relevance. Only suggestions with a score greater than or equal to the value of this field are included in the results. For a baseline model (the default), the recommended value is in the range [0.05, 0.1]. For a custom model, there is no recommended value. Tune this value by starting from a very low value and slowly increasing until you have desired results. If this field is not set, it defaults to 0.0, which means that all suggestions are returned. Supported features: ARTICLE_SUGGESTION, FAQ, SMART_REPLY, SMART_COMPOSE.
     * 
     */
    @Import(name="confidenceThreshold", required=true)
    private Double confidenceThreshold;

    public Double confidenceThreshold() {
        return this.confidenceThreshold;
    }

    /**
     * Determines how recent conversation context is filtered when generating suggestions. If unspecified, no messages will be dropped.
     * 
     */
    @Import(name="contextFilterSettings", required=true)
    private GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfigContextFilterSettingsResponse contextFilterSettings;

    public GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfigContextFilterSettingsResponse contextFilterSettings() {
        return this.contextFilterSettings;
    }

    /**
     * Query from Dialogflow agent. It is used by DIALOGFLOW_ASSIST.
     * 
     */
    @Import(name="dialogflowQuerySource", required=true)
    private GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfigDialogflowQuerySourceResponse dialogflowQuerySource;

    public GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfigDialogflowQuerySourceResponse dialogflowQuerySource() {
        return this.dialogflowQuerySource;
    }

    /**
     * Query from knowledge base document. It is used by: SMART_REPLY, SMART_COMPOSE.
     * 
     */
    @Import(name="documentQuerySource", required=true)
    private GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfigDocumentQuerySourceResponse documentQuerySource;

    public GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfigDocumentQuerySourceResponse documentQuerySource() {
        return this.documentQuerySource;
    }

    /**
     * Query from knowledgebase. It is used by: ARTICLE_SUGGESTION, FAQ.
     * 
     */
    @Import(name="knowledgeBaseQuerySource", required=true)
    private GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfigKnowledgeBaseQuerySourceResponse knowledgeBaseQuerySource;

    public GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfigKnowledgeBaseQuerySourceResponse knowledgeBaseQuerySource() {
        return this.knowledgeBaseQuerySource;
    }

    /**
     * Maximum number of results to return. Currently, if unset, defaults to 10. And the max number is 20.
     * 
     */
    @Import(name="maxResults", required=true)
    private Integer maxResults;

    public Integer maxResults() {
        return this.maxResults;
    }

    private GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfigResponse() {}

    private GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfigResponse(GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfigResponse $) {
        this.confidenceThreshold = $.confidenceThreshold;
        this.contextFilterSettings = $.contextFilterSettings;
        this.dialogflowQuerySource = $.dialogflowQuerySource;
        this.documentQuerySource = $.documentQuerySource;
        this.knowledgeBaseQuerySource = $.knowledgeBaseQuerySource;
        this.maxResults = $.maxResults;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfigResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfigResponse $;

        public Builder() {
            $ = new GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfigResponse();
        }

        public Builder(GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfigResponse defaults) {
            $ = new GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfigResponse(Objects.requireNonNull(defaults));
        }

        public Builder confidenceThreshold(Double confidenceThreshold) {
            $.confidenceThreshold = confidenceThreshold;
            return this;
        }

        public Builder contextFilterSettings(GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfigContextFilterSettingsResponse contextFilterSettings) {
            $.contextFilterSettings = contextFilterSettings;
            return this;
        }

        public Builder dialogflowQuerySource(GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfigDialogflowQuerySourceResponse dialogflowQuerySource) {
            $.dialogflowQuerySource = dialogflowQuerySource;
            return this;
        }

        public Builder documentQuerySource(GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfigDocumentQuerySourceResponse documentQuerySource) {
            $.documentQuerySource = documentQuerySource;
            return this;
        }

        public Builder knowledgeBaseQuerySource(GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfigKnowledgeBaseQuerySourceResponse knowledgeBaseQuerySource) {
            $.knowledgeBaseQuerySource = knowledgeBaseQuerySource;
            return this;
        }

        public Builder maxResults(Integer maxResults) {
            $.maxResults = maxResults;
            return this;
        }

        public GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfigResponse build() {
            $.confidenceThreshold = Objects.requireNonNull($.confidenceThreshold, "expected parameter 'confidenceThreshold' to be non-null");
            $.contextFilterSettings = Objects.requireNonNull($.contextFilterSettings, "expected parameter 'contextFilterSettings' to be non-null");
            $.dialogflowQuerySource = Objects.requireNonNull($.dialogflowQuerySource, "expected parameter 'dialogflowQuerySource' to be non-null");
            $.documentQuerySource = Objects.requireNonNull($.documentQuerySource, "expected parameter 'documentQuerySource' to be non-null");
            $.knowledgeBaseQuerySource = Objects.requireNonNull($.knowledgeBaseQuerySource, "expected parameter 'knowledgeBaseQuerySource' to be non-null");
            $.maxResults = Objects.requireNonNull($.maxResults, "expected parameter 'maxResults' to be non-null");
            return $;
        }
    }

}
