// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.firebaserules_v1;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import com.pulumi.googlenative.firebaserules_v1.inputs.SourceArgs;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class RulesetArgs extends com.pulumi.resources.ResourceArgs {

    public static final RulesetArgs Empty = new RulesetArgs();

    @Import(name="project")
      private final @Nullable Output<String> project;

    public Output<String> project() {
        return this.project == null ? Codegen.empty() : this.project;
    }

    /**
     * `Source` for the `Ruleset`.
     * 
     */
    @Import(name="source", required=true)
      private final Output<SourceArgs> source;

    public Output<SourceArgs> source() {
        return this.source;
    }

    public RulesetArgs(
        @Nullable Output<String> project,
        Output<SourceArgs> source) {
        this.project = project;
        this.source = Objects.requireNonNull(source, "expected parameter 'source' to be non-null");
    }

    private RulesetArgs() {
        this.project = Codegen.empty();
        this.source = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RulesetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> project;
        private Output<SourceArgs> source;

        public Builder() {
    	      // Empty
        }

        public Builder(RulesetArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.project = defaults.project;
    	      this.source = defaults.source;
        }

        public Builder project(@Nullable Output<String> project) {
            this.project = project;
            return this;
        }
        public Builder project(@Nullable String project) {
            this.project = Codegen.ofNullable(project);
            return this;
        }
        public Builder source(Output<SourceArgs> source) {
            this.source = Objects.requireNonNull(source);
            return this;
        }
        public Builder source(SourceArgs source) {
            this.source = Output.of(Objects.requireNonNull(source));
            return this;
        }        public RulesetArgs build() {
            return new RulesetArgs(project, source);
        }
    }
}
