// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.baremetalsolution_v2.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;


/**
 * A snapshot schedule.
 * 
 */
public final class ScheduleResponse extends com.pulumi.resources.InvokeArgs {

    public static final ScheduleResponse Empty = new ScheduleResponse();

    /**
     * A crontab-like specification that the schedule uses to take snapshots.
     * 
     */
    @Import(name="crontabSpec", required=true)
    private String crontabSpec;

    public String crontabSpec() {
        return this.crontabSpec;
    }

    /**
     * A list of snapshot names created in this schedule.
     * 
     */
    @Import(name="prefix", required=true)
    private String prefix;

    public String prefix() {
        return this.prefix;
    }

    /**
     * The maximum number of snapshots to retain in this schedule.
     * 
     */
    @Import(name="retentionCount", required=true)
    private Integer retentionCount;

    public Integer retentionCount() {
        return this.retentionCount;
    }

    private ScheduleResponse() {}

    private ScheduleResponse(ScheduleResponse $) {
        this.crontabSpec = $.crontabSpec;
        this.prefix = $.prefix;
        this.retentionCount = $.retentionCount;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ScheduleResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ScheduleResponse $;

        public Builder() {
            $ = new ScheduleResponse();
        }

        public Builder(ScheduleResponse defaults) {
            $ = new ScheduleResponse(Objects.requireNonNull(defaults));
        }

        public Builder crontabSpec(String crontabSpec) {
            $.crontabSpec = crontabSpec;
            return this;
        }

        public Builder prefix(String prefix) {
            $.prefix = prefix;
            return this;
        }

        public Builder retentionCount(Integer retentionCount) {
            $.retentionCount = retentionCount;
            return this;
        }

        public ScheduleResponse build() {
            $.crontabSpec = Objects.requireNonNull($.crontabSpec, "expected parameter 'crontabSpec' to be non-null");
            $.prefix = Objects.requireNonNull($.prefix, "expected parameter 'prefix' to be non-null");
            $.retentionCount = Objects.requireNonNull($.retentionCount, "expected parameter 'retentionCount' to be non-null");
            return $;
        }
    }

}
