// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.dataflow_v1b3.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.dataflow_v1b3.inputs.DebugOptionsResponse;
import com.pulumi.googlenative.dataflow_v1b3.inputs.WorkerPoolResponse;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;


/**
 * Describes the environment in which a Dataflow Job runs.
 * 
 */
public final class EnvironmentResponse extends com.pulumi.resources.InvokeArgs {

    public static final EnvironmentResponse Empty = new EnvironmentResponse();

    /**
     * The type of cluster manager API to use. If unknown or unspecified, the service will attempt to choose a reasonable default. This should be in the form of the API service name, e.g. &#34;compute.googleapis.com&#34;.
     * 
     */
    @Import(name="clusterManagerApiService", required=true)
    private String clusterManagerApiService;

    /**
     * @return The type of cluster manager API to use. If unknown or unspecified, the service will attempt to choose a reasonable default. This should be in the form of the API service name, e.g. &#34;compute.googleapis.com&#34;.
     * 
     */
    public String clusterManagerApiService() {
        return this.clusterManagerApiService;
    }

    /**
     * The dataset for the current project where various workflow related tables are stored. The supported resource type is: Google BigQuery: bigquery.googleapis.com/{dataset}
     * 
     */
    @Import(name="dataset", required=true)
    private String dataset;

    /**
     * @return The dataset for the current project where various workflow related tables are stored. The supported resource type is: Google BigQuery: bigquery.googleapis.com/{dataset}
     * 
     */
    public String dataset() {
        return this.dataset;
    }

    /**
     * Any debugging options to be supplied to the job.
     * 
     */
    @Import(name="debugOptions", required=true)
    private DebugOptionsResponse debugOptions;

    /**
     * @return Any debugging options to be supplied to the job.
     * 
     */
    public DebugOptionsResponse debugOptions() {
        return this.debugOptions;
    }

    /**
     * The list of experiments to enable. This field should be used for SDK related experiments and not for service related experiments. The proper field for service related experiments is service_options.
     * 
     */
    @Import(name="experiments", required=true)
    private List<String> experiments;

    /**
     * @return The list of experiments to enable. This field should be used for SDK related experiments and not for service related experiments. The proper field for service related experiments is service_options.
     * 
     */
    public List<String> experiments() {
        return this.experiments;
    }

    /**
     * Which Flexible Resource Scheduling mode to run in.
     * 
     */
    @Import(name="flexResourceSchedulingGoal", required=true)
    private String flexResourceSchedulingGoal;

    /**
     * @return Which Flexible Resource Scheduling mode to run in.
     * 
     */
    public String flexResourceSchedulingGoal() {
        return this.flexResourceSchedulingGoal;
    }

    /**
     * Experimental settings.
     * 
     */
    @Import(name="internalExperiments", required=true)
    private Map<String,String> internalExperiments;

    /**
     * @return Experimental settings.
     * 
     */
    public Map<String,String> internalExperiments() {
        return this.internalExperiments;
    }

    /**
     * The Cloud Dataflow SDK pipeline options specified by the user. These options are passed through the service and are used to recreate the SDK pipeline options on the worker in a language agnostic and platform independent way.
     * 
     */
    @Import(name="sdkPipelineOptions", required=true)
    private Map<String,String> sdkPipelineOptions;

    /**
     * @return The Cloud Dataflow SDK pipeline options specified by the user. These options are passed through the service and are used to recreate the SDK pipeline options on the worker in a language agnostic and platform independent way.
     * 
     */
    public Map<String,String> sdkPipelineOptions() {
        return this.sdkPipelineOptions;
    }

    /**
     * Identity to run virtual machines as. Defaults to the default account.
     * 
     */
    @Import(name="serviceAccountEmail", required=true)
    private String serviceAccountEmail;

    /**
     * @return Identity to run virtual machines as. Defaults to the default account.
     * 
     */
    public String serviceAccountEmail() {
        return this.serviceAccountEmail;
    }

    /**
     * If set, contains the Cloud KMS key identifier used to encrypt data at rest, AKA a Customer Managed Encryption Key (CMEK). Format: projects/PROJECT_ID/locations/LOCATION/keyRings/KEY_RING/cryptoKeys/KEY
     * 
     */
    @Import(name="serviceKmsKeyName", required=true)
    private String serviceKmsKeyName;

    /**
     * @return If set, contains the Cloud KMS key identifier used to encrypt data at rest, AKA a Customer Managed Encryption Key (CMEK). Format: projects/PROJECT_ID/locations/LOCATION/keyRings/KEY_RING/cryptoKeys/KEY
     * 
     */
    public String serviceKmsKeyName() {
        return this.serviceKmsKeyName;
    }

    /**
     * The list of service options to enable. This field should be used for service related experiments only. These experiments, when graduating to GA, should be replaced by dedicated fields or become default (i.e. always on).
     * 
     */
    @Import(name="serviceOptions", required=true)
    private List<String> serviceOptions;

    /**
     * @return The list of service options to enable. This field should be used for service related experiments only. These experiments, when graduating to GA, should be replaced by dedicated fields or become default (i.e. always on).
     * 
     */
    public List<String> serviceOptions() {
        return this.serviceOptions;
    }

    /**
     * The shuffle mode used for the job.
     * 
     */
    @Import(name="shuffleMode", required=true)
    private String shuffleMode;

    /**
     * @return The shuffle mode used for the job.
     * 
     */
    public String shuffleMode() {
        return this.shuffleMode;
    }

    /**
     * The prefix of the resources the system should use for temporary storage. The system will append the suffix &#34;/temp-{JOBNAME} to this resource prefix, where {JOBNAME} is the value of the job_name field. The resulting bucket and object prefix is used as the prefix of the resources used to store temporary data needed during the job execution. NOTE: This will override the value in taskrunner_settings. The supported resource type is: Google Cloud Storage: storage.googleapis.com/{bucket}/{object} bucket.storage.googleapis.com/{object}
     * 
     */
    @Import(name="tempStoragePrefix", required=true)
    private String tempStoragePrefix;

    /**
     * @return The prefix of the resources the system should use for temporary storage. The system will append the suffix &#34;/temp-{JOBNAME} to this resource prefix, where {JOBNAME} is the value of the job_name field. The resulting bucket and object prefix is used as the prefix of the resources used to store temporary data needed during the job execution. NOTE: This will override the value in taskrunner_settings. The supported resource type is: Google Cloud Storage: storage.googleapis.com/{bucket}/{object} bucket.storage.googleapis.com/{object}
     * 
     */
    public String tempStoragePrefix() {
        return this.tempStoragePrefix;
    }

    /**
     * A description of the process that generated the request.
     * 
     */
    @Import(name="userAgent", required=true)
    private Map<String,String> userAgent;

    /**
     * @return A description of the process that generated the request.
     * 
     */
    public Map<String,String> userAgent() {
        return this.userAgent;
    }

    /**
     * A structure describing which components and their versions of the service are required in order to run the job.
     * 
     */
    @Import(name="version", required=true)
    private Map<String,String> version;

    /**
     * @return A structure describing which components and their versions of the service are required in order to run the job.
     * 
     */
    public Map<String,String> version() {
        return this.version;
    }

    /**
     * The worker pools. At least one &#34;harness&#34; worker pool must be specified in order for the job to have workers.
     * 
     */
    @Import(name="workerPools", required=true)
    private List<WorkerPoolResponse> workerPools;

    /**
     * @return The worker pools. At least one &#34;harness&#34; worker pool must be specified in order for the job to have workers.
     * 
     */
    public List<WorkerPoolResponse> workerPools() {
        return this.workerPools;
    }

    /**
     * The Compute Engine region (https://cloud.google.com/compute/docs/regions-zones/regions-zones) in which worker processing should occur, e.g. &#34;us-west1&#34;. Mutually exclusive with worker_zone. If neither worker_region nor worker_zone is specified, default to the control plane&#39;s region.
     * 
     */
    @Import(name="workerRegion", required=true)
    private String workerRegion;

    /**
     * @return The Compute Engine region (https://cloud.google.com/compute/docs/regions-zones/regions-zones) in which worker processing should occur, e.g. &#34;us-west1&#34;. Mutually exclusive with worker_zone. If neither worker_region nor worker_zone is specified, default to the control plane&#39;s region.
     * 
     */
    public String workerRegion() {
        return this.workerRegion;
    }

    /**
     * The Compute Engine zone (https://cloud.google.com/compute/docs/regions-zones/regions-zones) in which worker processing should occur, e.g. &#34;us-west1-a&#34;. Mutually exclusive with worker_region. If neither worker_region nor worker_zone is specified, a zone in the control plane&#39;s region is chosen based on available capacity.
     * 
     */
    @Import(name="workerZone", required=true)
    private String workerZone;

    /**
     * @return The Compute Engine zone (https://cloud.google.com/compute/docs/regions-zones/regions-zones) in which worker processing should occur, e.g. &#34;us-west1-a&#34;. Mutually exclusive with worker_region. If neither worker_region nor worker_zone is specified, a zone in the control plane&#39;s region is chosen based on available capacity.
     * 
     */
    public String workerZone() {
        return this.workerZone;
    }

    private EnvironmentResponse() {}

    private EnvironmentResponse(EnvironmentResponse $) {
        this.clusterManagerApiService = $.clusterManagerApiService;
        this.dataset = $.dataset;
        this.debugOptions = $.debugOptions;
        this.experiments = $.experiments;
        this.flexResourceSchedulingGoal = $.flexResourceSchedulingGoal;
        this.internalExperiments = $.internalExperiments;
        this.sdkPipelineOptions = $.sdkPipelineOptions;
        this.serviceAccountEmail = $.serviceAccountEmail;
        this.serviceKmsKeyName = $.serviceKmsKeyName;
        this.serviceOptions = $.serviceOptions;
        this.shuffleMode = $.shuffleMode;
        this.tempStoragePrefix = $.tempStoragePrefix;
        this.userAgent = $.userAgent;
        this.version = $.version;
        this.workerPools = $.workerPools;
        this.workerRegion = $.workerRegion;
        this.workerZone = $.workerZone;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EnvironmentResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EnvironmentResponse $;

        public Builder() {
            $ = new EnvironmentResponse();
        }

        public Builder(EnvironmentResponse defaults) {
            $ = new EnvironmentResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param clusterManagerApiService The type of cluster manager API to use. If unknown or unspecified, the service will attempt to choose a reasonable default. This should be in the form of the API service name, e.g. &#34;compute.googleapis.com&#34;.
         * 
         * @return builder
         * 
         */
        public Builder clusterManagerApiService(String clusterManagerApiService) {
            $.clusterManagerApiService = clusterManagerApiService;
            return this;
        }

        /**
         * @param dataset The dataset for the current project where various workflow related tables are stored. The supported resource type is: Google BigQuery: bigquery.googleapis.com/{dataset}
         * 
         * @return builder
         * 
         */
        public Builder dataset(String dataset) {
            $.dataset = dataset;
            return this;
        }

        /**
         * @param debugOptions Any debugging options to be supplied to the job.
         * 
         * @return builder
         * 
         */
        public Builder debugOptions(DebugOptionsResponse debugOptions) {
            $.debugOptions = debugOptions;
            return this;
        }

        /**
         * @param experiments The list of experiments to enable. This field should be used for SDK related experiments and not for service related experiments. The proper field for service related experiments is service_options.
         * 
         * @return builder
         * 
         */
        public Builder experiments(List<String> experiments) {
            $.experiments = experiments;
            return this;
        }

        /**
         * @param experiments The list of experiments to enable. This field should be used for SDK related experiments and not for service related experiments. The proper field for service related experiments is service_options.
         * 
         * @return builder
         * 
         */
        public Builder experiments(String... experiments) {
            return experiments(List.of(experiments));
        }

        /**
         * @param flexResourceSchedulingGoal Which Flexible Resource Scheduling mode to run in.
         * 
         * @return builder
         * 
         */
        public Builder flexResourceSchedulingGoal(String flexResourceSchedulingGoal) {
            $.flexResourceSchedulingGoal = flexResourceSchedulingGoal;
            return this;
        }

        /**
         * @param internalExperiments Experimental settings.
         * 
         * @return builder
         * 
         */
        public Builder internalExperiments(Map<String,String> internalExperiments) {
            $.internalExperiments = internalExperiments;
            return this;
        }

        /**
         * @param sdkPipelineOptions The Cloud Dataflow SDK pipeline options specified by the user. These options are passed through the service and are used to recreate the SDK pipeline options on the worker in a language agnostic and platform independent way.
         * 
         * @return builder
         * 
         */
        public Builder sdkPipelineOptions(Map<String,String> sdkPipelineOptions) {
            $.sdkPipelineOptions = sdkPipelineOptions;
            return this;
        }

        /**
         * @param serviceAccountEmail Identity to run virtual machines as. Defaults to the default account.
         * 
         * @return builder
         * 
         */
        public Builder serviceAccountEmail(String serviceAccountEmail) {
            $.serviceAccountEmail = serviceAccountEmail;
            return this;
        }

        /**
         * @param serviceKmsKeyName If set, contains the Cloud KMS key identifier used to encrypt data at rest, AKA a Customer Managed Encryption Key (CMEK). Format: projects/PROJECT_ID/locations/LOCATION/keyRings/KEY_RING/cryptoKeys/KEY
         * 
         * @return builder
         * 
         */
        public Builder serviceKmsKeyName(String serviceKmsKeyName) {
            $.serviceKmsKeyName = serviceKmsKeyName;
            return this;
        }

        /**
         * @param serviceOptions The list of service options to enable. This field should be used for service related experiments only. These experiments, when graduating to GA, should be replaced by dedicated fields or become default (i.e. always on).
         * 
         * @return builder
         * 
         */
        public Builder serviceOptions(List<String> serviceOptions) {
            $.serviceOptions = serviceOptions;
            return this;
        }

        /**
         * @param serviceOptions The list of service options to enable. This field should be used for service related experiments only. These experiments, when graduating to GA, should be replaced by dedicated fields or become default (i.e. always on).
         * 
         * @return builder
         * 
         */
        public Builder serviceOptions(String... serviceOptions) {
            return serviceOptions(List.of(serviceOptions));
        }

        /**
         * @param shuffleMode The shuffle mode used for the job.
         * 
         * @return builder
         * 
         */
        public Builder shuffleMode(String shuffleMode) {
            $.shuffleMode = shuffleMode;
            return this;
        }

        /**
         * @param tempStoragePrefix The prefix of the resources the system should use for temporary storage. The system will append the suffix &#34;/temp-{JOBNAME} to this resource prefix, where {JOBNAME} is the value of the job_name field. The resulting bucket and object prefix is used as the prefix of the resources used to store temporary data needed during the job execution. NOTE: This will override the value in taskrunner_settings. The supported resource type is: Google Cloud Storage: storage.googleapis.com/{bucket}/{object} bucket.storage.googleapis.com/{object}
         * 
         * @return builder
         * 
         */
        public Builder tempStoragePrefix(String tempStoragePrefix) {
            $.tempStoragePrefix = tempStoragePrefix;
            return this;
        }

        /**
         * @param userAgent A description of the process that generated the request.
         * 
         * @return builder
         * 
         */
        public Builder userAgent(Map<String,String> userAgent) {
            $.userAgent = userAgent;
            return this;
        }

        /**
         * @param version A structure describing which components and their versions of the service are required in order to run the job.
         * 
         * @return builder
         * 
         */
        public Builder version(Map<String,String> version) {
            $.version = version;
            return this;
        }

        /**
         * @param workerPools The worker pools. At least one &#34;harness&#34; worker pool must be specified in order for the job to have workers.
         * 
         * @return builder
         * 
         */
        public Builder workerPools(List<WorkerPoolResponse> workerPools) {
            $.workerPools = workerPools;
            return this;
        }

        /**
         * @param workerPools The worker pools. At least one &#34;harness&#34; worker pool must be specified in order for the job to have workers.
         * 
         * @return builder
         * 
         */
        public Builder workerPools(WorkerPoolResponse... workerPools) {
            return workerPools(List.of(workerPools));
        }

        /**
         * @param workerRegion The Compute Engine region (https://cloud.google.com/compute/docs/regions-zones/regions-zones) in which worker processing should occur, e.g. &#34;us-west1&#34;. Mutually exclusive with worker_zone. If neither worker_region nor worker_zone is specified, default to the control plane&#39;s region.
         * 
         * @return builder
         * 
         */
        public Builder workerRegion(String workerRegion) {
            $.workerRegion = workerRegion;
            return this;
        }

        /**
         * @param workerZone The Compute Engine zone (https://cloud.google.com/compute/docs/regions-zones/regions-zones) in which worker processing should occur, e.g. &#34;us-west1-a&#34;. Mutually exclusive with worker_region. If neither worker_region nor worker_zone is specified, a zone in the control plane&#39;s region is chosen based on available capacity.
         * 
         * @return builder
         * 
         */
        public Builder workerZone(String workerZone) {
            $.workerZone = workerZone;
            return this;
        }

        public EnvironmentResponse build() {
            $.clusterManagerApiService = Objects.requireNonNull($.clusterManagerApiService, "expected parameter 'clusterManagerApiService' to be non-null");
            $.dataset = Objects.requireNonNull($.dataset, "expected parameter 'dataset' to be non-null");
            $.debugOptions = Objects.requireNonNull($.debugOptions, "expected parameter 'debugOptions' to be non-null");
            $.experiments = Objects.requireNonNull($.experiments, "expected parameter 'experiments' to be non-null");
            $.flexResourceSchedulingGoal = Objects.requireNonNull($.flexResourceSchedulingGoal, "expected parameter 'flexResourceSchedulingGoal' to be non-null");
            $.internalExperiments = Objects.requireNonNull($.internalExperiments, "expected parameter 'internalExperiments' to be non-null");
            $.sdkPipelineOptions = Objects.requireNonNull($.sdkPipelineOptions, "expected parameter 'sdkPipelineOptions' to be non-null");
            $.serviceAccountEmail = Objects.requireNonNull($.serviceAccountEmail, "expected parameter 'serviceAccountEmail' to be non-null");
            $.serviceKmsKeyName = Objects.requireNonNull($.serviceKmsKeyName, "expected parameter 'serviceKmsKeyName' to be non-null");
            $.serviceOptions = Objects.requireNonNull($.serviceOptions, "expected parameter 'serviceOptions' to be non-null");
            $.shuffleMode = Objects.requireNonNull($.shuffleMode, "expected parameter 'shuffleMode' to be non-null");
            $.tempStoragePrefix = Objects.requireNonNull($.tempStoragePrefix, "expected parameter 'tempStoragePrefix' to be non-null");
            $.userAgent = Objects.requireNonNull($.userAgent, "expected parameter 'userAgent' to be non-null");
            $.version = Objects.requireNonNull($.version, "expected parameter 'version' to be non-null");
            $.workerPools = Objects.requireNonNull($.workerPools, "expected parameter 'workerPools' to be non-null");
            $.workerRegion = Objects.requireNonNull($.workerRegion, "expected parameter 'workerRegion' to be non-null");
            $.workerZone = Objects.requireNonNull($.workerZone, "expected parameter 'workerZone' to be non-null");
            return $;
        }
    }

}
