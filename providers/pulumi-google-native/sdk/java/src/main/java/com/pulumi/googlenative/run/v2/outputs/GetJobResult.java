// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.run.v2.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.googlenative.run.v2.outputs.GoogleCloudRunV2BinaryAuthorizationResponse;
import com.pulumi.googlenative.run.v2.outputs.GoogleCloudRunV2ConditionResponse;
import com.pulumi.googlenative.run.v2.outputs.GoogleCloudRunV2ExecutionReferenceResponse;
import com.pulumi.googlenative.run.v2.outputs.GoogleCloudRunV2ExecutionTemplateResponse;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetJobResult {
    /**
     * @return KRM-style annotations for the resource. Unstructured key value map that may be set by external tools to store and arbitrary metadata. They are not queryable and should be preserved when modifying objects. Cloud Run will populate some annotations using &#39;run.googleapis.com&#39; or &#39;serving.knative.dev&#39; namespaces. This field follows Kubernetes annotations&#39; namespacing, limits, and rules. More info: https://kubernetes.io/docs/user-guide/annotations
     * 
     */
    private final Map<String,String> annotations;
    /**
     * @return Settings for the Binary Authorization feature.
     * 
     */
    private final GoogleCloudRunV2BinaryAuthorizationResponse binaryAuthorization;
    /**
     * @return Arbitrary identifier for the API client.
     * 
     */
    private final String client;
    /**
     * @return Arbitrary version identifier for the API client.
     * 
     */
    private final String clientVersion;
    /**
     * @return The Conditions of all other associated sub-resources. They contain additional diagnostics information in case the Job does not reach its desired state. See comments in `reconciling` for additional information on reconciliation process in Cloud Run.
     * 
     */
    private final List<GoogleCloudRunV2ConditionResponse> conditions;
    /**
     * @return The creation time.
     * 
     */
    private final String createTime;
    /**
     * @return Email address of the authenticated creator.
     * 
     */
    private final String creator;
    /**
     * @return The deletion time.
     * 
     */
    private final String deleteTime;
    /**
     * @return A system-generated fingerprint for this version of the resource. May be used to detect modification conflict during updates.
     * 
     */
    private final String etag;
    /**
     * @return Number of executions created for this job.
     * 
     */
    private final Integer executionCount;
    /**
     * @return For a deleted resource, the time after which it will be permamently deleted.
     * 
     */
    private final String expireTime;
    /**
     * @return A number that monotonically increases every time the user modifies the desired state.
     * 
     */
    private final String generation;
    /**
     * @return KRM-style labels for the resource. User-provided labels are shared with Google&#39;s billing system, so they can be used to filter, or break down billing charges by team, component, environment, state, etc. For more information, visit https://cloud.google.com/resource-manager/docs/creating-managing-labels or https://cloud.google.com/run/docs/configuring/labels Cloud Run will populate some labels with &#39;run.googleapis.com&#39; or &#39;serving.knative.dev&#39; namespaces. Those labels are read-only, and user changes will not be preserved.
     * 
     */
    private final Map<String,String> labels;
    /**
     * @return Email address of the last authenticated modifier.
     * 
     */
    private final String lastModifier;
    /**
     * @return Name of the last created execution.
     * 
     */
    private final GoogleCloudRunV2ExecutionReferenceResponse latestCreatedExecution;
    /**
     * @return The launch stage as defined by [Google Cloud Platform Launch Stages](https://cloud.google.com/terms/launch-stages). Cloud Run supports `ALPHA`, `BETA`, and `GA`. If no value is specified, GA is assumed.
     * 
     */
    private final String launchStage;
    /**
     * @return The fully qualified name of this Job. Format: projects/{project}/locations/{location}/jobs/{job}
     * 
     */
    private final String name;
    /**
     * @return The generation of this Job. See comments in `reconciling` for additional information on reconciliation process in Cloud Run.
     * 
     */
    private final String observedGeneration;
    /**
     * @return Returns true if the Job is currently being acted upon by the system to bring it into the desired state. When a new Job is created, or an existing one is updated, Cloud Run will asynchronously perform all necessary steps to bring the Job to the desired state. This process is called reconciliation. While reconciliation is in process, `observed_generation` and `latest_succeeded_execution`, will have transient values that might mismatch the intended state: Once reconciliation is over (and this field is false), there are two possible outcomes: reconciliation succeeded and the state matches the Job, or there was an error, and reconciliation failed. This state can be found in `terminal_condition.state`. If reconciliation succeeded, the following fields will match: `observed_generation` and `generation`, `latest_succeeded_execution` and `latest_created_execution`. If reconciliation failed, `observed_generation` and `latest_succeeded_execution` will have the state of the last succeeded execution or empty for newly created Job. Additional information on the failure can be found in `terminal_condition` and `conditions`.
     * 
     */
    private final Boolean reconciling;
    /**
     * @return The template used to create executions for this Job.
     * 
     */
    private final GoogleCloudRunV2ExecutionTemplateResponse template;
    /**
     * @return The Condition of this Job, containing its readiness status, and detailed error information in case it did not reach the desired state.
     * 
     */
    private final GoogleCloudRunV2ConditionResponse terminalCondition;
    /**
     * @return Server assigned unique identifier for the Execution. The value is a UUID4 string and guaranteed to remain unchanged until the resource is deleted.
     * 
     */
    private final String uid;
    /**
     * @return The last-modified time.
     * 
     */
    private final String updateTime;

    @CustomType.Constructor
    private GetJobResult(
        @CustomType.Parameter("annotations") Map<String,String> annotations,
        @CustomType.Parameter("binaryAuthorization") GoogleCloudRunV2BinaryAuthorizationResponse binaryAuthorization,
        @CustomType.Parameter("client") String client,
        @CustomType.Parameter("clientVersion") String clientVersion,
        @CustomType.Parameter("conditions") List<GoogleCloudRunV2ConditionResponse> conditions,
        @CustomType.Parameter("createTime") String createTime,
        @CustomType.Parameter("creator") String creator,
        @CustomType.Parameter("deleteTime") String deleteTime,
        @CustomType.Parameter("etag") String etag,
        @CustomType.Parameter("executionCount") Integer executionCount,
        @CustomType.Parameter("expireTime") String expireTime,
        @CustomType.Parameter("generation") String generation,
        @CustomType.Parameter("labels") Map<String,String> labels,
        @CustomType.Parameter("lastModifier") String lastModifier,
        @CustomType.Parameter("latestCreatedExecution") GoogleCloudRunV2ExecutionReferenceResponse latestCreatedExecution,
        @CustomType.Parameter("launchStage") String launchStage,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("observedGeneration") String observedGeneration,
        @CustomType.Parameter("reconciling") Boolean reconciling,
        @CustomType.Parameter("template") GoogleCloudRunV2ExecutionTemplateResponse template,
        @CustomType.Parameter("terminalCondition") GoogleCloudRunV2ConditionResponse terminalCondition,
        @CustomType.Parameter("uid") String uid,
        @CustomType.Parameter("updateTime") String updateTime) {
        this.annotations = annotations;
        this.binaryAuthorization = binaryAuthorization;
        this.client = client;
        this.clientVersion = clientVersion;
        this.conditions = conditions;
        this.createTime = createTime;
        this.creator = creator;
        this.deleteTime = deleteTime;
        this.etag = etag;
        this.executionCount = executionCount;
        this.expireTime = expireTime;
        this.generation = generation;
        this.labels = labels;
        this.lastModifier = lastModifier;
        this.latestCreatedExecution = latestCreatedExecution;
        this.launchStage = launchStage;
        this.name = name;
        this.observedGeneration = observedGeneration;
        this.reconciling = reconciling;
        this.template = template;
        this.terminalCondition = terminalCondition;
        this.uid = uid;
        this.updateTime = updateTime;
    }

    /**
     * @return KRM-style annotations for the resource. Unstructured key value map that may be set by external tools to store and arbitrary metadata. They are not queryable and should be preserved when modifying objects. Cloud Run will populate some annotations using &#39;run.googleapis.com&#39; or &#39;serving.knative.dev&#39; namespaces. This field follows Kubernetes annotations&#39; namespacing, limits, and rules. More info: https://kubernetes.io/docs/user-guide/annotations
     * 
     */
    public Map<String,String> annotations() {
        return this.annotations;
    }
    /**
     * @return Settings for the Binary Authorization feature.
     * 
     */
    public GoogleCloudRunV2BinaryAuthorizationResponse binaryAuthorization() {
        return this.binaryAuthorization;
    }
    /**
     * @return Arbitrary identifier for the API client.
     * 
     */
    public String client() {
        return this.client;
    }
    /**
     * @return Arbitrary version identifier for the API client.
     * 
     */
    public String clientVersion() {
        return this.clientVersion;
    }
    /**
     * @return The Conditions of all other associated sub-resources. They contain additional diagnostics information in case the Job does not reach its desired state. See comments in `reconciling` for additional information on reconciliation process in Cloud Run.
     * 
     */
    public List<GoogleCloudRunV2ConditionResponse> conditions() {
        return this.conditions;
    }
    /**
     * @return The creation time.
     * 
     */
    public String createTime() {
        return this.createTime;
    }
    /**
     * @return Email address of the authenticated creator.
     * 
     */
    public String creator() {
        return this.creator;
    }
    /**
     * @return The deletion time.
     * 
     */
    public String deleteTime() {
        return this.deleteTime;
    }
    /**
     * @return A system-generated fingerprint for this version of the resource. May be used to detect modification conflict during updates.
     * 
     */
    public String etag() {
        return this.etag;
    }
    /**
     * @return Number of executions created for this job.
     * 
     */
    public Integer executionCount() {
        return this.executionCount;
    }
    /**
     * @return For a deleted resource, the time after which it will be permamently deleted.
     * 
     */
    public String expireTime() {
        return this.expireTime;
    }
    /**
     * @return A number that monotonically increases every time the user modifies the desired state.
     * 
     */
    public String generation() {
        return this.generation;
    }
    /**
     * @return KRM-style labels for the resource. User-provided labels are shared with Google&#39;s billing system, so they can be used to filter, or break down billing charges by team, component, environment, state, etc. For more information, visit https://cloud.google.com/resource-manager/docs/creating-managing-labels or https://cloud.google.com/run/docs/configuring/labels Cloud Run will populate some labels with &#39;run.googleapis.com&#39; or &#39;serving.knative.dev&#39; namespaces. Those labels are read-only, and user changes will not be preserved.
     * 
     */
    public Map<String,String> labels() {
        return this.labels;
    }
    /**
     * @return Email address of the last authenticated modifier.
     * 
     */
    public String lastModifier() {
        return this.lastModifier;
    }
    /**
     * @return Name of the last created execution.
     * 
     */
    public GoogleCloudRunV2ExecutionReferenceResponse latestCreatedExecution() {
        return this.latestCreatedExecution;
    }
    /**
     * @return The launch stage as defined by [Google Cloud Platform Launch Stages](https://cloud.google.com/terms/launch-stages). Cloud Run supports `ALPHA`, `BETA`, and `GA`. If no value is specified, GA is assumed.
     * 
     */
    public String launchStage() {
        return this.launchStage;
    }
    /**
     * @return The fully qualified name of this Job. Format: projects/{project}/locations/{location}/jobs/{job}
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The generation of this Job. See comments in `reconciling` for additional information on reconciliation process in Cloud Run.
     * 
     */
    public String observedGeneration() {
        return this.observedGeneration;
    }
    /**
     * @return Returns true if the Job is currently being acted upon by the system to bring it into the desired state. When a new Job is created, or an existing one is updated, Cloud Run will asynchronously perform all necessary steps to bring the Job to the desired state. This process is called reconciliation. While reconciliation is in process, `observed_generation` and `latest_succeeded_execution`, will have transient values that might mismatch the intended state: Once reconciliation is over (and this field is false), there are two possible outcomes: reconciliation succeeded and the state matches the Job, or there was an error, and reconciliation failed. This state can be found in `terminal_condition.state`. If reconciliation succeeded, the following fields will match: `observed_generation` and `generation`, `latest_succeeded_execution` and `latest_created_execution`. If reconciliation failed, `observed_generation` and `latest_succeeded_execution` will have the state of the last succeeded execution or empty for newly created Job. Additional information on the failure can be found in `terminal_condition` and `conditions`.
     * 
     */
    public Boolean reconciling() {
        return this.reconciling;
    }
    /**
     * @return The template used to create executions for this Job.
     * 
     */
    public GoogleCloudRunV2ExecutionTemplateResponse template() {
        return this.template;
    }
    /**
     * @return The Condition of this Job, containing its readiness status, and detailed error information in case it did not reach the desired state.
     * 
     */
    public GoogleCloudRunV2ConditionResponse terminalCondition() {
        return this.terminalCondition;
    }
    /**
     * @return Server assigned unique identifier for the Execution. The value is a UUID4 string and guaranteed to remain unchanged until the resource is deleted.
     * 
     */
    public String uid() {
        return this.uid;
    }
    /**
     * @return The last-modified time.
     * 
     */
    public String updateTime() {
        return this.updateTime;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetJobResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Map<String,String> annotations;
        private GoogleCloudRunV2BinaryAuthorizationResponse binaryAuthorization;
        private String client;
        private String clientVersion;
        private List<GoogleCloudRunV2ConditionResponse> conditions;
        private String createTime;
        private String creator;
        private String deleteTime;
        private String etag;
        private Integer executionCount;
        private String expireTime;
        private String generation;
        private Map<String,String> labels;
        private String lastModifier;
        private GoogleCloudRunV2ExecutionReferenceResponse latestCreatedExecution;
        private String launchStage;
        private String name;
        private String observedGeneration;
        private Boolean reconciling;
        private GoogleCloudRunV2ExecutionTemplateResponse template;
        private GoogleCloudRunV2ConditionResponse terminalCondition;
        private String uid;
        private String updateTime;

        public Builder() {
    	      // Empty
        }

        public Builder(GetJobResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.annotations = defaults.annotations;
    	      this.binaryAuthorization = defaults.binaryAuthorization;
    	      this.client = defaults.client;
    	      this.clientVersion = defaults.clientVersion;
    	      this.conditions = defaults.conditions;
    	      this.createTime = defaults.createTime;
    	      this.creator = defaults.creator;
    	      this.deleteTime = defaults.deleteTime;
    	      this.etag = defaults.etag;
    	      this.executionCount = defaults.executionCount;
    	      this.expireTime = defaults.expireTime;
    	      this.generation = defaults.generation;
    	      this.labels = defaults.labels;
    	      this.lastModifier = defaults.lastModifier;
    	      this.latestCreatedExecution = defaults.latestCreatedExecution;
    	      this.launchStage = defaults.launchStage;
    	      this.name = defaults.name;
    	      this.observedGeneration = defaults.observedGeneration;
    	      this.reconciling = defaults.reconciling;
    	      this.template = defaults.template;
    	      this.terminalCondition = defaults.terminalCondition;
    	      this.uid = defaults.uid;
    	      this.updateTime = defaults.updateTime;
        }

        public Builder annotations(Map<String,String> annotations) {
            this.annotations = Objects.requireNonNull(annotations);
            return this;
        }
        public Builder binaryAuthorization(GoogleCloudRunV2BinaryAuthorizationResponse binaryAuthorization) {
            this.binaryAuthorization = Objects.requireNonNull(binaryAuthorization);
            return this;
        }
        public Builder client(String client) {
            this.client = Objects.requireNonNull(client);
            return this;
        }
        public Builder clientVersion(String clientVersion) {
            this.clientVersion = Objects.requireNonNull(clientVersion);
            return this;
        }
        public Builder conditions(List<GoogleCloudRunV2ConditionResponse> conditions) {
            this.conditions = Objects.requireNonNull(conditions);
            return this;
        }
        public Builder conditions(GoogleCloudRunV2ConditionResponse... conditions) {
            return conditions(List.of(conditions));
        }
        public Builder createTime(String createTime) {
            this.createTime = Objects.requireNonNull(createTime);
            return this;
        }
        public Builder creator(String creator) {
            this.creator = Objects.requireNonNull(creator);
            return this;
        }
        public Builder deleteTime(String deleteTime) {
            this.deleteTime = Objects.requireNonNull(deleteTime);
            return this;
        }
        public Builder etag(String etag) {
            this.etag = Objects.requireNonNull(etag);
            return this;
        }
        public Builder executionCount(Integer executionCount) {
            this.executionCount = Objects.requireNonNull(executionCount);
            return this;
        }
        public Builder expireTime(String expireTime) {
            this.expireTime = Objects.requireNonNull(expireTime);
            return this;
        }
        public Builder generation(String generation) {
            this.generation = Objects.requireNonNull(generation);
            return this;
        }
        public Builder labels(Map<String,String> labels) {
            this.labels = Objects.requireNonNull(labels);
            return this;
        }
        public Builder lastModifier(String lastModifier) {
            this.lastModifier = Objects.requireNonNull(lastModifier);
            return this;
        }
        public Builder latestCreatedExecution(GoogleCloudRunV2ExecutionReferenceResponse latestCreatedExecution) {
            this.latestCreatedExecution = Objects.requireNonNull(latestCreatedExecution);
            return this;
        }
        public Builder launchStage(String launchStage) {
            this.launchStage = Objects.requireNonNull(launchStage);
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder observedGeneration(String observedGeneration) {
            this.observedGeneration = Objects.requireNonNull(observedGeneration);
            return this;
        }
        public Builder reconciling(Boolean reconciling) {
            this.reconciling = Objects.requireNonNull(reconciling);
            return this;
        }
        public Builder template(GoogleCloudRunV2ExecutionTemplateResponse template) {
            this.template = Objects.requireNonNull(template);
            return this;
        }
        public Builder terminalCondition(GoogleCloudRunV2ConditionResponse terminalCondition) {
            this.terminalCondition = Objects.requireNonNull(terminalCondition);
            return this;
        }
        public Builder uid(String uid) {
            this.uid = Objects.requireNonNull(uid);
            return this;
        }
        public Builder updateTime(String updateTime) {
            this.updateTime = Objects.requireNonNull(updateTime);
            return this;
        }        public GetJobResult build() {
            return new GetJobResult(annotations, binaryAuthorization, client, clientVersion, conditions, createTime, creator, deleteTime, etag, executionCount, expireTime, generation, labels, lastModifier, latestCreatedExecution, launchStage, name, observedGeneration, reconciling, template, terminalCondition, uid, updateTime);
        }
    }
}
