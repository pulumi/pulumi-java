// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.appengine_v1.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.util.Objects;


/**
 * Target scaling by disk usage. Only applicable in the App Engine flexible environment.
 * 
 */
public final class DiskUtilizationResponse extends com.pulumi.resources.InvokeArgs {

    public static final DiskUtilizationResponse Empty = new DiskUtilizationResponse();

    /**
     * Target bytes read per second.
     * 
     */
    @Import(name="targetReadBytesPerSecond", required=true)
    private Integer targetReadBytesPerSecond;

    public Integer targetReadBytesPerSecond() {
        return this.targetReadBytesPerSecond;
    }

    /**
     * Target ops read per seconds.
     * 
     */
    @Import(name="targetReadOpsPerSecond", required=true)
    private Integer targetReadOpsPerSecond;

    public Integer targetReadOpsPerSecond() {
        return this.targetReadOpsPerSecond;
    }

    /**
     * Target bytes written per second.
     * 
     */
    @Import(name="targetWriteBytesPerSecond", required=true)
    private Integer targetWriteBytesPerSecond;

    public Integer targetWriteBytesPerSecond() {
        return this.targetWriteBytesPerSecond;
    }

    /**
     * Target ops written per second.
     * 
     */
    @Import(name="targetWriteOpsPerSecond", required=true)
    private Integer targetWriteOpsPerSecond;

    public Integer targetWriteOpsPerSecond() {
        return this.targetWriteOpsPerSecond;
    }

    private DiskUtilizationResponse() {}

    private DiskUtilizationResponse(DiskUtilizationResponse $) {
        this.targetReadBytesPerSecond = $.targetReadBytesPerSecond;
        this.targetReadOpsPerSecond = $.targetReadOpsPerSecond;
        this.targetWriteBytesPerSecond = $.targetWriteBytesPerSecond;
        this.targetWriteOpsPerSecond = $.targetWriteOpsPerSecond;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DiskUtilizationResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DiskUtilizationResponse $;

        public Builder() {
            $ = new DiskUtilizationResponse();
        }

        public Builder(DiskUtilizationResponse defaults) {
            $ = new DiskUtilizationResponse(Objects.requireNonNull(defaults));
        }

        public Builder targetReadBytesPerSecond(Integer targetReadBytesPerSecond) {
            $.targetReadBytesPerSecond = targetReadBytesPerSecond;
            return this;
        }

        public Builder targetReadOpsPerSecond(Integer targetReadOpsPerSecond) {
            $.targetReadOpsPerSecond = targetReadOpsPerSecond;
            return this;
        }

        public Builder targetWriteBytesPerSecond(Integer targetWriteBytesPerSecond) {
            $.targetWriteBytesPerSecond = targetWriteBytesPerSecond;
            return this;
        }

        public Builder targetWriteOpsPerSecond(Integer targetWriteOpsPerSecond) {
            $.targetWriteOpsPerSecond = targetWriteOpsPerSecond;
            return this;
        }

        public DiskUtilizationResponse build() {
            $.targetReadBytesPerSecond = Objects.requireNonNull($.targetReadBytesPerSecond, "expected parameter 'targetReadBytesPerSecond' to be non-null");
            $.targetReadOpsPerSecond = Objects.requireNonNull($.targetReadOpsPerSecond, "expected parameter 'targetReadOpsPerSecond' to be non-null");
            $.targetWriteBytesPerSecond = Objects.requireNonNull($.targetWriteBytesPerSecond, "expected parameter 'targetWriteBytesPerSecond' to be non-null");
            $.targetWriteOpsPerSecond = Objects.requireNonNull($.targetWriteOpsPerSecond, "expected parameter 'targetWriteOpsPerSecond' to be non-null");
            return $;
        }
    }

}
