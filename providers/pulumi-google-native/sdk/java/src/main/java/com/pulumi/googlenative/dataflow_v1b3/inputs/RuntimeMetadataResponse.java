// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.dataflow_v1b3.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.dataflow_v1b3.inputs.ParameterMetadataResponse;
import com.pulumi.googlenative.dataflow_v1b3.inputs.SDKInfoResponse;
import java.util.List;
import java.util.Objects;


/**
 * RuntimeMetadata describing a runtime environment.
 * 
 */
public final class RuntimeMetadataResponse extends com.pulumi.resources.InvokeArgs {

    public static final RuntimeMetadataResponse Empty = new RuntimeMetadataResponse();

    /**
     * The parameters for the template.
     * 
     */
    @Import(name="parameters", required=true)
    private List<ParameterMetadataResponse> parameters;

    /**
     * @return The parameters for the template.
     * 
     */
    public List<ParameterMetadataResponse> parameters() {
        return this.parameters;
    }

    /**
     * SDK Info for the template.
     * 
     */
    @Import(name="sdkInfo", required=true)
    private SDKInfoResponse sdkInfo;

    /**
     * @return SDK Info for the template.
     * 
     */
    public SDKInfoResponse sdkInfo() {
        return this.sdkInfo;
    }

    private RuntimeMetadataResponse() {}

    private RuntimeMetadataResponse(RuntimeMetadataResponse $) {
        this.parameters = $.parameters;
        this.sdkInfo = $.sdkInfo;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RuntimeMetadataResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RuntimeMetadataResponse $;

        public Builder() {
            $ = new RuntimeMetadataResponse();
        }

        public Builder(RuntimeMetadataResponse defaults) {
            $ = new RuntimeMetadataResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param parameters The parameters for the template.
         * 
         * @return builder
         * 
         */
        public Builder parameters(List<ParameterMetadataResponse> parameters) {
            $.parameters = parameters;
            return this;
        }

        /**
         * @param parameters The parameters for the template.
         * 
         * @return builder
         * 
         */
        public Builder parameters(ParameterMetadataResponse... parameters) {
            return parameters(List.of(parameters));
        }

        /**
         * @param sdkInfo SDK Info for the template.
         * 
         * @return builder
         * 
         */
        public Builder sdkInfo(SDKInfoResponse sdkInfo) {
            $.sdkInfo = sdkInfo;
            return this;
        }

        public RuntimeMetadataResponse build() {
            $.parameters = Objects.requireNonNull($.parameters, "expected parameter 'parameters' to be non-null");
            $.sdkInfo = Objects.requireNonNull($.sdkInfo, "expected parameter 'sdkInfo' to be non-null");
            return $;
        }
    }

}
