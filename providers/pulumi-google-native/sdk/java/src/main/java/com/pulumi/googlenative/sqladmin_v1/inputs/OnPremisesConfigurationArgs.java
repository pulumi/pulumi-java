// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.sqladmin_v1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.sqladmin_v1.inputs.InstanceReferenceArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * On-premises instance configuration.
 * 
 */
public final class OnPremisesConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final OnPremisesConfigurationArgs Empty = new OnPremisesConfigurationArgs();

    /**
     * PEM representation of the trusted CA&#39;s x509 certificate.
     * 
     */
    @Import(name="caCertificate")
    private @Nullable Output<String> caCertificate;

    public Optional<Output<String>> caCertificate() {
        return Optional.ofNullable(this.caCertificate);
    }

    /**
     * PEM representation of the replica&#39;s x509 certificate.
     * 
     */
    @Import(name="clientCertificate")
    private @Nullable Output<String> clientCertificate;

    public Optional<Output<String>> clientCertificate() {
        return Optional.ofNullable(this.clientCertificate);
    }

    /**
     * PEM representation of the replica&#39;s private key. The corresponsing public key is encoded in the client&#39;s certificate.
     * 
     */
    @Import(name="clientKey")
    private @Nullable Output<String> clientKey;

    public Optional<Output<String>> clientKey() {
        return Optional.ofNullable(this.clientKey);
    }

    /**
     * The dump file to create the Cloud SQL replica.
     * 
     */
    @Import(name="dumpFilePath")
    private @Nullable Output<String> dumpFilePath;

    public Optional<Output<String>> dumpFilePath() {
        return Optional.ofNullable(this.dumpFilePath);
    }

    /**
     * The host and port of the on-premises instance in host:port format
     * 
     */
    @Import(name="hostPort")
    private @Nullable Output<String> hostPort;

    public Optional<Output<String>> hostPort() {
        return Optional.ofNullable(this.hostPort);
    }

    /**
     * This is always `sql#onPremisesConfiguration`.
     * 
     */
    @Import(name="kind")
    private @Nullable Output<String> kind;

    public Optional<Output<String>> kind() {
        return Optional.ofNullable(this.kind);
    }

    /**
     * The password for connecting to on-premises instance.
     * 
     */
    @Import(name="password")
    private @Nullable Output<String> password;

    public Optional<Output<String>> password() {
        return Optional.ofNullable(this.password);
    }

    /**
     * The reference to Cloud SQL instance if the source is Cloud SQL.
     * 
     */
    @Import(name="sourceInstance")
    private @Nullable Output<InstanceReferenceArgs> sourceInstance;

    public Optional<Output<InstanceReferenceArgs>> sourceInstance() {
        return Optional.ofNullable(this.sourceInstance);
    }

    /**
     * The username for connecting to on-premises instance.
     * 
     */
    @Import(name="username")
    private @Nullable Output<String> username;

    public Optional<Output<String>> username() {
        return Optional.ofNullable(this.username);
    }

    private OnPremisesConfigurationArgs() {}

    private OnPremisesConfigurationArgs(OnPremisesConfigurationArgs $) {
        this.caCertificate = $.caCertificate;
        this.clientCertificate = $.clientCertificate;
        this.clientKey = $.clientKey;
        this.dumpFilePath = $.dumpFilePath;
        this.hostPort = $.hostPort;
        this.kind = $.kind;
        this.password = $.password;
        this.sourceInstance = $.sourceInstance;
        this.username = $.username;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OnPremisesConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OnPremisesConfigurationArgs $;

        public Builder() {
            $ = new OnPremisesConfigurationArgs();
        }

        public Builder(OnPremisesConfigurationArgs defaults) {
            $ = new OnPremisesConfigurationArgs(Objects.requireNonNull(defaults));
        }

        public Builder caCertificate(@Nullable Output<String> caCertificate) {
            $.caCertificate = caCertificate;
            return this;
        }

        public Builder caCertificate(String caCertificate) {
            return caCertificate(Output.of(caCertificate));
        }

        public Builder clientCertificate(@Nullable Output<String> clientCertificate) {
            $.clientCertificate = clientCertificate;
            return this;
        }

        public Builder clientCertificate(String clientCertificate) {
            return clientCertificate(Output.of(clientCertificate));
        }

        public Builder clientKey(@Nullable Output<String> clientKey) {
            $.clientKey = clientKey;
            return this;
        }

        public Builder clientKey(String clientKey) {
            return clientKey(Output.of(clientKey));
        }

        public Builder dumpFilePath(@Nullable Output<String> dumpFilePath) {
            $.dumpFilePath = dumpFilePath;
            return this;
        }

        public Builder dumpFilePath(String dumpFilePath) {
            return dumpFilePath(Output.of(dumpFilePath));
        }

        public Builder hostPort(@Nullable Output<String> hostPort) {
            $.hostPort = hostPort;
            return this;
        }

        public Builder hostPort(String hostPort) {
            return hostPort(Output.of(hostPort));
        }

        public Builder kind(@Nullable Output<String> kind) {
            $.kind = kind;
            return this;
        }

        public Builder kind(String kind) {
            return kind(Output.of(kind));
        }

        public Builder password(@Nullable Output<String> password) {
            $.password = password;
            return this;
        }

        public Builder password(String password) {
            return password(Output.of(password));
        }

        public Builder sourceInstance(@Nullable Output<InstanceReferenceArgs> sourceInstance) {
            $.sourceInstance = sourceInstance;
            return this;
        }

        public Builder sourceInstance(InstanceReferenceArgs sourceInstance) {
            return sourceInstance(Output.of(sourceInstance));
        }

        public Builder username(@Nullable Output<String> username) {
            $.username = username;
            return this;
        }

        public Builder username(String username) {
            return username(Output.of(username));
        }

        public OnPremisesConfigurationArgs build() {
            return $;
        }
    }

}
