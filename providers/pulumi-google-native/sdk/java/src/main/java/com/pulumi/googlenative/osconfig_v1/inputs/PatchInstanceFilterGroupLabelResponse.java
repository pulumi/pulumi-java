// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.osconfig_v1.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;


/**
 * Targets a group of VM instances by using their [assigned labels](https://cloud.google.com/compute/docs/labeling-resources). Labels are key-value pairs. A `GroupLabel` is a combination of labels that is used to target VMs for a patch job. For example, a patch job can target VMs that have the following `GroupLabel`: `{&#34;env&#34;:&#34;test&#34;, &#34;app&#34;:&#34;web&#34;}`. This means that the patch job is applied to VMs that have both the labels `env=test` and `app=web`.
 * 
 */
public final class PatchInstanceFilterGroupLabelResponse extends com.pulumi.resources.InvokeArgs {

    public static final PatchInstanceFilterGroupLabelResponse Empty = new PatchInstanceFilterGroupLabelResponse();

    /**
     * Compute Engine instance labels that must be present for a VM instance to be targeted by this filter.
     * 
     */
    @Import(name="labels", required=true)
    private Map<String,String> labels;

    public Map<String,String> labels() {
        return this.labels;
    }

    private PatchInstanceFilterGroupLabelResponse() {}

    private PatchInstanceFilterGroupLabelResponse(PatchInstanceFilterGroupLabelResponse $) {
        this.labels = $.labels;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PatchInstanceFilterGroupLabelResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PatchInstanceFilterGroupLabelResponse $;

        public Builder() {
            $ = new PatchInstanceFilterGroupLabelResponse();
        }

        public Builder(PatchInstanceFilterGroupLabelResponse defaults) {
            $ = new PatchInstanceFilterGroupLabelResponse(Objects.requireNonNull(defaults));
        }

        public Builder labels(Map<String,String> labels) {
            $.labels = labels;
            return this;
        }

        public PatchInstanceFilterGroupLabelResponse build() {
            $.labels = Objects.requireNonNull($.labels, "expected parameter 'labels' to be non-null");
            return $;
        }
    }

}
