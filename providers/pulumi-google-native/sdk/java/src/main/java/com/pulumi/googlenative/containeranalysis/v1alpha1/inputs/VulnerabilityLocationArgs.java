// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.containeranalysis.v1alpha1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.containeranalysis.v1alpha1.inputs.FileLocationArgs;
import com.pulumi.googlenative.containeranalysis.v1alpha1.inputs.VersionArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The location of the vulnerability
 * 
 */
public final class VulnerabilityLocationArgs extends com.pulumi.resources.ResourceArgs {

    public static final VulnerabilityLocationArgs Empty = new VulnerabilityLocationArgs();

    /**
     * The cpe_uri in [cpe format] (https://cpe.mitre.org/specification/) format. Examples include distro or storage location for vulnerable jar. This field can be used as a filter in list requests.
     * 
     */
    @Import(name="cpeUri")
    private @Nullable Output<String> cpeUri;

    /**
     * @return The cpe_uri in [cpe format] (https://cpe.mitre.org/specification/) format. Examples include distro or storage location for vulnerable jar. This field can be used as a filter in list requests.
     * 
     */
    public Optional<Output<String>> cpeUri() {
        return Optional.ofNullable(this.cpeUri);
    }

    /**
     * The file location at which this package was found.
     * 
     */
    @Import(name="fileLocation")
    private @Nullable Output<List<FileLocationArgs>> fileLocation;

    /**
     * @return The file location at which this package was found.
     * 
     */
    public Optional<Output<List<FileLocationArgs>>> fileLocation() {
        return Optional.ofNullable(this.fileLocation);
    }

    /**
     * The package being described.
     * 
     */
    @Import(name="package")
    private @Nullable Output<String> package_;

    /**
     * @return The package being described.
     * 
     */
    public Optional<Output<String>> package_() {
        return Optional.ofNullable(this.package_);
    }

    /**
     * The version of the package being described. This field can be used as a filter in list requests.
     * 
     */
    @Import(name="version")
    private @Nullable Output<VersionArgs> version;

    /**
     * @return The version of the package being described. This field can be used as a filter in list requests.
     * 
     */
    public Optional<Output<VersionArgs>> version() {
        return Optional.ofNullable(this.version);
    }

    private VulnerabilityLocationArgs() {}

    private VulnerabilityLocationArgs(VulnerabilityLocationArgs $) {
        this.cpeUri = $.cpeUri;
        this.fileLocation = $.fileLocation;
        this.package_ = $.package_;
        this.version = $.version;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VulnerabilityLocationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VulnerabilityLocationArgs $;

        public Builder() {
            $ = new VulnerabilityLocationArgs();
        }

        public Builder(VulnerabilityLocationArgs defaults) {
            $ = new VulnerabilityLocationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param cpeUri The cpe_uri in [cpe format] (https://cpe.mitre.org/specification/) format. Examples include distro or storage location for vulnerable jar. This field can be used as a filter in list requests.
         * 
         * @return builder
         * 
         */
        public Builder cpeUri(@Nullable Output<String> cpeUri) {
            $.cpeUri = cpeUri;
            return this;
        }

        /**
         * @param cpeUri The cpe_uri in [cpe format] (https://cpe.mitre.org/specification/) format. Examples include distro or storage location for vulnerable jar. This field can be used as a filter in list requests.
         * 
         * @return builder
         * 
         */
        public Builder cpeUri(String cpeUri) {
            return cpeUri(Output.of(cpeUri));
        }

        /**
         * @param fileLocation The file location at which this package was found.
         * 
         * @return builder
         * 
         */
        public Builder fileLocation(@Nullable Output<List<FileLocationArgs>> fileLocation) {
            $.fileLocation = fileLocation;
            return this;
        }

        /**
         * @param fileLocation The file location at which this package was found.
         * 
         * @return builder
         * 
         */
        public Builder fileLocation(List<FileLocationArgs> fileLocation) {
            return fileLocation(Output.of(fileLocation));
        }

        /**
         * @param fileLocation The file location at which this package was found.
         * 
         * @return builder
         * 
         */
        public Builder fileLocation(FileLocationArgs... fileLocation) {
            return fileLocation(List.of(fileLocation));
        }

        /**
         * @param package_ The package being described.
         * 
         * @return builder
         * 
         */
        public Builder package_(@Nullable Output<String> package_) {
            $.package_ = package_;
            return this;
        }

        /**
         * @param package_ The package being described.
         * 
         * @return builder
         * 
         */
        public Builder package_(String package_) {
            return package_(Output.of(package_));
        }

        /**
         * @param version The version of the package being described. This field can be used as a filter in list requests.
         * 
         * @return builder
         * 
         */
        public Builder version(@Nullable Output<VersionArgs> version) {
            $.version = version;
            return this;
        }

        /**
         * @param version The version of the package being described. This field can be used as a filter in list requests.
         * 
         * @return builder
         * 
         */
        public Builder version(VersionArgs version) {
            return version(Output.of(version));
        }

        public VulnerabilityLocationArgs build() {
            return $;
        }
    }

}
