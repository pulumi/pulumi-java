// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.remotebuildexecution.v1alpha;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.remotebuildexecution.v1alpha.inputs.GoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscaleArgs;
import com.pulumi.googlenative.remotebuildexecution.v1alpha.inputs.GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class WorkerPoolArgs extends com.pulumi.resources.ResourceArgs {

    public static final WorkerPoolArgs Empty = new WorkerPoolArgs();

    /**
     * The autoscale policy to apply on a pool.
     * 
     */
    @Import(name="autoscale")
    private @Nullable Output<GoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscaleArgs> autoscale;

    /**
     * @return The autoscale policy to apply on a pool.
     * 
     */
    public Optional<Output<GoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscaleArgs>> autoscale() {
        return Optional.ofNullable(this.autoscale);
    }

    /**
     * Channel specifies the release channel of the pool.
     * 
     */
    @Import(name="channel")
    private @Nullable Output<String> channel;

    /**
     * @return Channel specifies the release channel of the pool.
     * 
     */
    public Optional<Output<String>> channel() {
        return Optional.ofNullable(this.channel);
    }

    @Import(name="instanceId", required=true)
    private Output<String> instanceId;

    public Output<String> instanceId() {
        return this.instanceId;
    }

    /**
     * WorkerPool resource name formatted as: `projects/[PROJECT_ID]/instances/[INSTANCE_ID]/workerpools/[POOL_ID]`. name should not be populated when creating a worker pool since it is provided in the `poolId` field.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return WorkerPool resource name formatted as: `projects/[PROJECT_ID]/instances/[INSTANCE_ID]/workerpools/[POOL_ID]`. name should not be populated when creating a worker pool since it is provided in the `poolId` field.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Resource name of the instance in which to create the new worker pool. Format: `projects/[PROJECT_ID]/instances/[INSTANCE_ID]`.
     * 
     */
    @Import(name="parent")
    private @Nullable Output<String> parent;

    /**
     * @return Resource name of the instance in which to create the new worker pool. Format: `projects/[PROJECT_ID]/instances/[INSTANCE_ID]`.
     * 
     */
    public Optional<Output<String>> parent() {
        return Optional.ofNullable(this.parent);
    }

    /**
     * ID of the created worker pool. A valid pool ID must: be 6-50 characters long, contain only lowercase letters, digits, hyphens and underscores, start with a lowercase letter, and end with a lowercase letter or a digit.
     * 
     */
    @Import(name="poolId")
    private @Nullable Output<String> poolId;

    /**
     * @return ID of the created worker pool. A valid pool ID must: be 6-50 characters long, contain only lowercase letters, digits, hyphens and underscores, start with a lowercase letter, and end with a lowercase letter or a digit.
     * 
     */
    public Optional<Output<String>> poolId() {
        return Optional.ofNullable(this.poolId);
    }

    @Import(name="project")
    private @Nullable Output<String> project;

    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * Specifies the properties, such as machine type and disk size, used for creating workers in a worker pool.
     * 
     */
    @Import(name="workerConfig")
    private @Nullable Output<GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigArgs> workerConfig;

    /**
     * @return Specifies the properties, such as machine type and disk size, used for creating workers in a worker pool.
     * 
     */
    public Optional<Output<GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigArgs>> workerConfig() {
        return Optional.ofNullable(this.workerConfig);
    }

    /**
     * The desired number of workers in the worker pool. Must be a value between 0 and 15000.
     * 
     */
    @Import(name="workerCount")
    private @Nullable Output<String> workerCount;

    /**
     * @return The desired number of workers in the worker pool. Must be a value between 0 and 15000.
     * 
     */
    public Optional<Output<String>> workerCount() {
        return Optional.ofNullable(this.workerCount);
    }

    private WorkerPoolArgs() {}

    private WorkerPoolArgs(WorkerPoolArgs $) {
        this.autoscale = $.autoscale;
        this.channel = $.channel;
        this.instanceId = $.instanceId;
        this.name = $.name;
        this.parent = $.parent;
        this.poolId = $.poolId;
        this.project = $.project;
        this.workerConfig = $.workerConfig;
        this.workerCount = $.workerCount;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WorkerPoolArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WorkerPoolArgs $;

        public Builder() {
            $ = new WorkerPoolArgs();
        }

        public Builder(WorkerPoolArgs defaults) {
            $ = new WorkerPoolArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param autoscale The autoscale policy to apply on a pool.
         * 
         * @return builder
         * 
         */
        public Builder autoscale(@Nullable Output<GoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscaleArgs> autoscale) {
            $.autoscale = autoscale;
            return this;
        }

        /**
         * @param autoscale The autoscale policy to apply on a pool.
         * 
         * @return builder
         * 
         */
        public Builder autoscale(GoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscaleArgs autoscale) {
            return autoscale(Output.of(autoscale));
        }

        /**
         * @param channel Channel specifies the release channel of the pool.
         * 
         * @return builder
         * 
         */
        public Builder channel(@Nullable Output<String> channel) {
            $.channel = channel;
            return this;
        }

        /**
         * @param channel Channel specifies the release channel of the pool.
         * 
         * @return builder
         * 
         */
        public Builder channel(String channel) {
            return channel(Output.of(channel));
        }

        public Builder instanceId(Output<String> instanceId) {
            $.instanceId = instanceId;
            return this;
        }

        public Builder instanceId(String instanceId) {
            return instanceId(Output.of(instanceId));
        }

        /**
         * @param name WorkerPool resource name formatted as: `projects/[PROJECT_ID]/instances/[INSTANCE_ID]/workerpools/[POOL_ID]`. name should not be populated when creating a worker pool since it is provided in the `poolId` field.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name WorkerPool resource name formatted as: `projects/[PROJECT_ID]/instances/[INSTANCE_ID]/workerpools/[POOL_ID]`. name should not be populated when creating a worker pool since it is provided in the `poolId` field.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param parent Resource name of the instance in which to create the new worker pool. Format: `projects/[PROJECT_ID]/instances/[INSTANCE_ID]`.
         * 
         * @return builder
         * 
         */
        public Builder parent(@Nullable Output<String> parent) {
            $.parent = parent;
            return this;
        }

        /**
         * @param parent Resource name of the instance in which to create the new worker pool. Format: `projects/[PROJECT_ID]/instances/[INSTANCE_ID]`.
         * 
         * @return builder
         * 
         */
        public Builder parent(String parent) {
            return parent(Output.of(parent));
        }

        /**
         * @param poolId ID of the created worker pool. A valid pool ID must: be 6-50 characters long, contain only lowercase letters, digits, hyphens and underscores, start with a lowercase letter, and end with a lowercase letter or a digit.
         * 
         * @return builder
         * 
         */
        public Builder poolId(@Nullable Output<String> poolId) {
            $.poolId = poolId;
            return this;
        }

        /**
         * @param poolId ID of the created worker pool. A valid pool ID must: be 6-50 characters long, contain only lowercase letters, digits, hyphens and underscores, start with a lowercase letter, and end with a lowercase letter or a digit.
         * 
         * @return builder
         * 
         */
        public Builder poolId(String poolId) {
            return poolId(Output.of(poolId));
        }

        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        public Builder project(String project) {
            return project(Output.of(project));
        }

        /**
         * @param workerConfig Specifies the properties, such as machine type and disk size, used for creating workers in a worker pool.
         * 
         * @return builder
         * 
         */
        public Builder workerConfig(@Nullable Output<GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigArgs> workerConfig) {
            $.workerConfig = workerConfig;
            return this;
        }

        /**
         * @param workerConfig Specifies the properties, such as machine type and disk size, used for creating workers in a worker pool.
         * 
         * @return builder
         * 
         */
        public Builder workerConfig(GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigArgs workerConfig) {
            return workerConfig(Output.of(workerConfig));
        }

        /**
         * @param workerCount The desired number of workers in the worker pool. Must be a value between 0 and 15000.
         * 
         * @return builder
         * 
         */
        public Builder workerCount(@Nullable Output<String> workerCount) {
            $.workerCount = workerCount;
            return this;
        }

        /**
         * @param workerCount The desired number of workers in the worker pool. Must be a value between 0 and 15000.
         * 
         * @return builder
         * 
         */
        public Builder workerCount(String workerCount) {
            return workerCount(Output.of(workerCount));
        }

        public WorkerPoolArgs build() {
            $.instanceId = Objects.requireNonNull($.instanceId, "expected parameter 'instanceId' to be non-null");
            return $;
        }
    }

}
