// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.speech.v1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * A phrases containing words and phrase &#34;hints&#34; so that the speech recognition is more likely to recognize them. This can be used to improve the accuracy for specific words and phrases, for example, if specific commands are typically spoken by the user. This can also be used to add additional words to the vocabulary of the recognizer. See [usage limits](https://cloud.google.com/speech-to-text/quotas#content). List items can also include pre-built or custom classes containing groups of words that represent common concepts that occur in natural language. For example, rather than providing a phrase hint for every month of the year (e.g. &#34;i was born in january&#34;, &#34;i was born in febuary&#34;, ...), use the pre-built `$MONTH` class improves the likelihood of correctly transcribing audio that includes months (e.g. &#34;i was born in $month&#34;). To refer to pre-built classes, use the class&#39; symbol prepended with `$` e.g. `$MONTH`. To refer to custom classes that were defined inline in the request, set the class&#39;s `custom_class_id` to a string unique to all class resources and inline classes. Then use the class&#39; id wrapped in $`{...}` e.g. &#34;${my-months}&#34;. To refer to custom classes resources, use the class&#39; id wrapped in `${}` (e.g. `${my-months}`). Speech-to-Text supports three locations: `global`, `us` (US North America), and `eu` (Europe). If you are calling the `speech.googleapis.com` endpoint, use the `global` location. To specify a region, use a [regional endpoint](/speech-to-text/docs/endpoints) with matching `us` or `eu` location value.
 * 
 */
public final class PhraseArgs extends com.pulumi.resources.ResourceArgs {

    public static final PhraseArgs Empty = new PhraseArgs();

    /**
     * Hint Boost. Overrides the boost set at the phrase set level. Positive value will increase the probability that a specific phrase will be recognized over other similar sounding phrases. The higher the boost, the higher the chance of false positive recognition as well. Negative boost will simply be ignored. Though `boost` can accept a wide range of positive values, most use cases are best served with values between 0 and 20. We recommend using a binary search approach to finding the optimal value for your use case. Speech recognition will skip PhraseSets with a boost value of 0.
     * 
     */
    @Import(name="boost")
    private @Nullable Output<Double> boost;

    /**
     * @return Hint Boost. Overrides the boost set at the phrase set level. Positive value will increase the probability that a specific phrase will be recognized over other similar sounding phrases. The higher the boost, the higher the chance of false positive recognition as well. Negative boost will simply be ignored. Though `boost` can accept a wide range of positive values, most use cases are best served with values between 0 and 20. We recommend using a binary search approach to finding the optimal value for your use case. Speech recognition will skip PhraseSets with a boost value of 0.
     * 
     */
    public Optional<Output<Double>> boost() {
        return Optional.ofNullable(this.boost);
    }

    /**
     * The phrase itself.
     * 
     */
    @Import(name="value")
    private @Nullable Output<String> value;

    /**
     * @return The phrase itself.
     * 
     */
    public Optional<Output<String>> value() {
        return Optional.ofNullable(this.value);
    }

    private PhraseArgs() {}

    private PhraseArgs(PhraseArgs $) {
        this.boost = $.boost;
        this.value = $.value;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PhraseArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PhraseArgs $;

        public Builder() {
            $ = new PhraseArgs();
        }

        public Builder(PhraseArgs defaults) {
            $ = new PhraseArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param boost Hint Boost. Overrides the boost set at the phrase set level. Positive value will increase the probability that a specific phrase will be recognized over other similar sounding phrases. The higher the boost, the higher the chance of false positive recognition as well. Negative boost will simply be ignored. Though `boost` can accept a wide range of positive values, most use cases are best served with values between 0 and 20. We recommend using a binary search approach to finding the optimal value for your use case. Speech recognition will skip PhraseSets with a boost value of 0.
         * 
         * @return builder
         * 
         */
        public Builder boost(@Nullable Output<Double> boost) {
            $.boost = boost;
            return this;
        }

        /**
         * @param boost Hint Boost. Overrides the boost set at the phrase set level. Positive value will increase the probability that a specific phrase will be recognized over other similar sounding phrases. The higher the boost, the higher the chance of false positive recognition as well. Negative boost will simply be ignored. Though `boost` can accept a wide range of positive values, most use cases are best served with values between 0 and 20. We recommend using a binary search approach to finding the optimal value for your use case. Speech recognition will skip PhraseSets with a boost value of 0.
         * 
         * @return builder
         * 
         */
        public Builder boost(Double boost) {
            return boost(Output.of(boost));
        }

        /**
         * @param value The phrase itself.
         * 
         * @return builder
         * 
         */
        public Builder value(@Nullable Output<String> value) {
            $.value = value;
            return this;
        }

        /**
         * @param value The phrase itself.
         * 
         * @return builder
         * 
         */
        public Builder value(String value) {
            return value(Output.of(value));
        }

        public PhraseArgs build() {
            return $;
        }
    }

}
