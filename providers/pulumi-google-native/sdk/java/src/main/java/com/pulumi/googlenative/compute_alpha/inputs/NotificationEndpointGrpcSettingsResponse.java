// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.compute_alpha.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.compute_alpha.inputs.DurationResponse;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;


/**
 * Represents a gRPC setting that describes one gRPC notification endpoint and the retry duration attempting to send notification to this endpoint.
 * 
 */
public final class NotificationEndpointGrpcSettingsResponse extends com.pulumi.resources.InvokeArgs {

    public static final NotificationEndpointGrpcSettingsResponse Empty = new NotificationEndpointGrpcSettingsResponse();

    /**
     * Optional. If specified, this field is used to set the authority header by the sender of notifications. See https://tools.ietf.org/html/rfc7540#section-8.1.2.3
     * 
     */
    @Import(name="authority", required=true)
    private String authority;

    /**
     * @return Optional. If specified, this field is used to set the authority header by the sender of notifications. See https://tools.ietf.org/html/rfc7540#section-8.1.2.3
     * 
     */
    public String authority() {
        return this.authority;
    }

    /**
     * Endpoint to which gRPC notifications are sent. This must be a valid gRPCLB DNS name.
     * 
     */
    @Import(name="endpoint", required=true)
    private String endpoint;

    /**
     * @return Endpoint to which gRPC notifications are sent. This must be a valid gRPCLB DNS name.
     * 
     */
    public String endpoint() {
        return this.endpoint;
    }

    /**
     * Optional. If specified, this field is used to populate the &#34;name&#34; field in gRPC requests.
     * 
     */
    @Import(name="payloadName", required=true)
    private String payloadName;

    /**
     * @return Optional. If specified, this field is used to populate the &#34;name&#34; field in gRPC requests.
     * 
     */
    public String payloadName() {
        return this.payloadName;
    }

    /**
     * Optional. This field is used to configure how often to send a full update of all non-healthy backends. If unspecified, full updates are not sent. If specified, must be in the range between 600 seconds to 3600 seconds. Nanos are disallowed.
     * 
     */
    @Import(name="resendInterval", required=true)
    private DurationResponse resendInterval;

    /**
     * @return Optional. This field is used to configure how often to send a full update of all non-healthy backends. If unspecified, full updates are not sent. If specified, must be in the range between 600 seconds to 3600 seconds. Nanos are disallowed.
     * 
     */
    public DurationResponse resendInterval() {
        return this.resendInterval;
    }

    /**
     * How much time (in seconds) is spent attempting notification retries until a successful response is received. Default is 30s. Limit is 20m (1200s). Must be a positive number.
     * 
     */
    @Import(name="retryDurationSec", required=true)
    private Integer retryDurationSec;

    /**
     * @return How much time (in seconds) is spent attempting notification retries until a successful response is received. Default is 30s. Limit is 20m (1200s). Must be a positive number.
     * 
     */
    public Integer retryDurationSec() {
        return this.retryDurationSec;
    }

    private NotificationEndpointGrpcSettingsResponse() {}

    private NotificationEndpointGrpcSettingsResponse(NotificationEndpointGrpcSettingsResponse $) {
        this.authority = $.authority;
        this.endpoint = $.endpoint;
        this.payloadName = $.payloadName;
        this.resendInterval = $.resendInterval;
        this.retryDurationSec = $.retryDurationSec;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NotificationEndpointGrpcSettingsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NotificationEndpointGrpcSettingsResponse $;

        public Builder() {
            $ = new NotificationEndpointGrpcSettingsResponse();
        }

        public Builder(NotificationEndpointGrpcSettingsResponse defaults) {
            $ = new NotificationEndpointGrpcSettingsResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param authority Optional. If specified, this field is used to set the authority header by the sender of notifications. See https://tools.ietf.org/html/rfc7540#section-8.1.2.3
         * 
         * @return builder
         * 
         */
        public Builder authority(String authority) {
            $.authority = authority;
            return this;
        }

        /**
         * @param endpoint Endpoint to which gRPC notifications are sent. This must be a valid gRPCLB DNS name.
         * 
         * @return builder
         * 
         */
        public Builder endpoint(String endpoint) {
            $.endpoint = endpoint;
            return this;
        }

        /**
         * @param payloadName Optional. If specified, this field is used to populate the &#34;name&#34; field in gRPC requests.
         * 
         * @return builder
         * 
         */
        public Builder payloadName(String payloadName) {
            $.payloadName = payloadName;
            return this;
        }

        /**
         * @param resendInterval Optional. This field is used to configure how often to send a full update of all non-healthy backends. If unspecified, full updates are not sent. If specified, must be in the range between 600 seconds to 3600 seconds. Nanos are disallowed.
         * 
         * @return builder
         * 
         */
        public Builder resendInterval(DurationResponse resendInterval) {
            $.resendInterval = resendInterval;
            return this;
        }

        /**
         * @param retryDurationSec How much time (in seconds) is spent attempting notification retries until a successful response is received. Default is 30s. Limit is 20m (1200s). Must be a positive number.
         * 
         * @return builder
         * 
         */
        public Builder retryDurationSec(Integer retryDurationSec) {
            $.retryDurationSec = retryDurationSec;
            return this;
        }

        public NotificationEndpointGrpcSettingsResponse build() {
            $.authority = Objects.requireNonNull($.authority, "expected parameter 'authority' to be non-null");
            $.endpoint = Objects.requireNonNull($.endpoint, "expected parameter 'endpoint' to be non-null");
            $.payloadName = Objects.requireNonNull($.payloadName, "expected parameter 'payloadName' to be non-null");
            $.resendInterval = Objects.requireNonNull($.resendInterval, "expected parameter 'resendInterval' to be non-null");
            $.retryDurationSec = Objects.requireNonNull($.retryDurationSec, "expected parameter 'retryDurationSec' to be non-null");
            return $;
        }
    }

}
