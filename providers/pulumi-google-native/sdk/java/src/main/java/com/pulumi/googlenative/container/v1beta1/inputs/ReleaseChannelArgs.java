// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.container.v1beta1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.container.v1beta1.enums.ReleaseChannelChannel;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * ReleaseChannel indicates which release channel a cluster is subscribed to. Release channels are arranged in order of risk. When a cluster is subscribed to a release channel, Google maintains both the master version and the node version. Node auto-upgrade defaults to true and cannot be disabled.
 * 
 */
public final class ReleaseChannelArgs extends com.pulumi.resources.ResourceArgs {

    public static final ReleaseChannelArgs Empty = new ReleaseChannelArgs();

    /**
     * channel specifies which release channel the cluster is subscribed to.
     * 
     */
    @Import(name="channel")
    private @Nullable Output<ReleaseChannelChannel> channel;

    /**
     * @return channel specifies which release channel the cluster is subscribed to.
     * 
     */
    public Optional<Output<ReleaseChannelChannel>> channel() {
        return Optional.ofNullable(this.channel);
    }

    private ReleaseChannelArgs() {}

    private ReleaseChannelArgs(ReleaseChannelArgs $) {
        this.channel = $.channel;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ReleaseChannelArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ReleaseChannelArgs $;

        public Builder() {
            $ = new ReleaseChannelArgs();
        }

        public Builder(ReleaseChannelArgs defaults) {
            $ = new ReleaseChannelArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param channel channel specifies which release channel the cluster is subscribed to.
         * 
         * @return builder
         * 
         */
        public Builder channel(@Nullable Output<ReleaseChannelChannel> channel) {
            $.channel = channel;
            return this;
        }

        /**
         * @param channel channel specifies which release channel the cluster is subscribed to.
         * 
         * @return builder
         * 
         */
        public Builder channel(ReleaseChannelChannel channel) {
            return channel(Output.of(channel));
        }

        public ReleaseChannelArgs build() {
            return $;
        }
    }

}
