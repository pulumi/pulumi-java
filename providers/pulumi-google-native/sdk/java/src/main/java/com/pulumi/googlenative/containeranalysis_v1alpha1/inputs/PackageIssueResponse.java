// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.containeranalysis_v1alpha1.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.containeranalysis_v1alpha1.inputs.VulnerabilityLocationResponse;
import java.lang.String;
import java.util.Objects;


/**
 * This message wraps a location affected by a vulnerability and its associated fix (if one is available).
 * 
 */
public final class PackageIssueResponse extends com.pulumi.resources.InvokeArgs {

    public static final PackageIssueResponse Empty = new PackageIssueResponse();

    /**
     * The location of the vulnerability.
     * 
     */
    @Import(name="affectedLocation", required=true)
    private VulnerabilityLocationResponse affectedLocation;

    public VulnerabilityLocationResponse affectedLocation() {
        return this.affectedLocation;
    }

    /**
     * The distro or language system assigned severity for this vulnerability when that is available and note provider assigned severity when distro or language system has not yet assigned a severity for this vulnerability.
     * 
     */
    @Import(name="effectiveSeverity", required=true)
    private String effectiveSeverity;

    public String effectiveSeverity() {
        return this.effectiveSeverity;
    }

    /**
     * The location of the available fix for vulnerability.
     * 
     */
    @Import(name="fixedLocation", required=true)
    private VulnerabilityLocationResponse fixedLocation;

    public VulnerabilityLocationResponse fixedLocation() {
        return this.fixedLocation;
    }

    /**
     * The type of package (e.g. OS, MAVEN, GO).
     * 
     */
    @Import(name="packageType", required=true)
    private String packageType;

    public String packageType() {
        return this.packageType;
    }

    @Import(name="severityName", required=true)
    private String severityName;

    public String severityName() {
        return this.severityName;
    }

    private PackageIssueResponse() {}

    private PackageIssueResponse(PackageIssueResponse $) {
        this.affectedLocation = $.affectedLocation;
        this.effectiveSeverity = $.effectiveSeverity;
        this.fixedLocation = $.fixedLocation;
        this.packageType = $.packageType;
        this.severityName = $.severityName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PackageIssueResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PackageIssueResponse $;

        public Builder() {
            $ = new PackageIssueResponse();
        }

        public Builder(PackageIssueResponse defaults) {
            $ = new PackageIssueResponse(Objects.requireNonNull(defaults));
        }

        public Builder affectedLocation(VulnerabilityLocationResponse affectedLocation) {
            $.affectedLocation = affectedLocation;
            return this;
        }

        public Builder effectiveSeverity(String effectiveSeverity) {
            $.effectiveSeverity = effectiveSeverity;
            return this;
        }

        public Builder fixedLocation(VulnerabilityLocationResponse fixedLocation) {
            $.fixedLocation = fixedLocation;
            return this;
        }

        public Builder packageType(String packageType) {
            $.packageType = packageType;
            return this;
        }

        public Builder severityName(String severityName) {
            $.severityName = severityName;
            return this;
        }

        public PackageIssueResponse build() {
            $.affectedLocation = Objects.requireNonNull($.affectedLocation, "expected parameter 'affectedLocation' to be non-null");
            $.effectiveSeverity = Objects.requireNonNull($.effectiveSeverity, "expected parameter 'effectiveSeverity' to be non-null");
            $.fixedLocation = Objects.requireNonNull($.fixedLocation, "expected parameter 'fixedLocation' to be non-null");
            $.packageType = Objects.requireNonNull($.packageType, "expected parameter 'packageType' to be non-null");
            $.severityName = Objects.requireNonNull($.severityName, "expected parameter 'severityName' to be non-null");
            return $;
        }
    }

}
