// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.containeranalysis_v1alpha1.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.containeranalysis_v1alpha1.inputs.VersionResponse;
import java.lang.String;
import java.util.Objects;


/**
 * An occurrence of a particular package installation found within a system&#39;s filesystem. e.g. glibc was found in /var/lib/dpkg/status
 * 
 */
public final class LocationResponse extends com.pulumi.resources.InvokeArgs {

    public static final LocationResponse Empty = new LocationResponse();

    /**
     * The cpe_uri in [cpe format](https://cpe.mitre.org/specification/) denoting the package manager version distributing a package.
     * 
     */
    @Import(name="cpeUri", required=true)
    private String cpeUri;

    /**
     * @return The cpe_uri in [cpe format](https://cpe.mitre.org/specification/) denoting the package manager version distributing a package.
     * 
     */
    public String cpeUri() {
        return this.cpeUri;
    }

    /**
     * The path from which we gathered that this package/version is installed.
     * 
     */
    @Import(name="path", required=true)
    private String path;

    /**
     * @return The path from which we gathered that this package/version is installed.
     * 
     */
    public String path() {
        return this.path;
    }

    /**
     * The version installed at this location.
     * 
     */
    @Import(name="version", required=true)
    private VersionResponse version;

    /**
     * @return The version installed at this location.
     * 
     */
    public VersionResponse version() {
        return this.version;
    }

    private LocationResponse() {}

    private LocationResponse(LocationResponse $) {
        this.cpeUri = $.cpeUri;
        this.path = $.path;
        this.version = $.version;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LocationResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LocationResponse $;

        public Builder() {
            $ = new LocationResponse();
        }

        public Builder(LocationResponse defaults) {
            $ = new LocationResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param cpeUri The cpe_uri in [cpe format](https://cpe.mitre.org/specification/) denoting the package manager version distributing a package.
         * 
         * @return builder
         * 
         */
        public Builder cpeUri(String cpeUri) {
            $.cpeUri = cpeUri;
            return this;
        }

        /**
         * @param path The path from which we gathered that this package/version is installed.
         * 
         * @return builder
         * 
         */
        public Builder path(String path) {
            $.path = path;
            return this;
        }

        /**
         * @param version The version installed at this location.
         * 
         * @return builder
         * 
         */
        public Builder version(VersionResponse version) {
            $.version = version;
            return this;
        }

        public LocationResponse build() {
            $.cpeUri = Objects.requireNonNull($.cpeUri, "expected parameter 'cpeUri' to be non-null");
            $.path = Objects.requireNonNull($.path, "expected parameter 'path' to be non-null");
            $.version = Objects.requireNonNull($.version, "expected parameter 'version' to be non-null");
            return $;
        }
    }

}
