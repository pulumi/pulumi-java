// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.logging.v2;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.googlenative.Utilities;
import com.pulumi.googlenative.logging.v2.BucketArgs;
import com.pulumi.googlenative.logging.v2.outputs.CmekSettingsResponse;
import com.pulumi.googlenative.logging.v2.outputs.IndexConfigResponse;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * Creates a log bucket that can be used to store log entries. After a bucket has been created, the bucket&#39;s location cannot be changed.
 * Auto-naming is currently not supported for this resource.
 * 
 */
@ResourceType(type="google-native:logging/v2:Bucket")
public class Bucket extends com.pulumi.resources.CustomResource {
    /**
     * Required. A client-assigned identifier such as &#34;my-bucket&#34;. Identifiers are limited to 100 characters and can include only letters, digits, underscores, hyphens, and periods.
     * 
     */
    @Export(name="bucketId", type=String.class, parameters={})
    private Output<String> bucketId;

    /**
     * @return Required. A client-assigned identifier such as &#34;my-bucket&#34;. Identifiers are limited to 100 characters and can include only letters, digits, underscores, hyphens, and periods.
     * 
     */
    public Output<String> bucketId() {
        return this.bucketId;
    }
    /**
     * The CMEK settings of the log bucket. If present, new log entries written to this log bucket are encrypted using the CMEK key provided in this configuration. If a log bucket has CMEK settings, the CMEK settings cannot be disabled later by updating the log bucket. Changing the KMS key is allowed.
     * 
     */
    @Export(name="cmekSettings", type=CmekSettingsResponse.class, parameters={})
    private Output<CmekSettingsResponse> cmekSettings;

    /**
     * @return The CMEK settings of the log bucket. If present, new log entries written to this log bucket are encrypted using the CMEK key provided in this configuration. If a log bucket has CMEK settings, the CMEK settings cannot be disabled later by updating the log bucket. Changing the KMS key is allowed.
     * 
     */
    public Output<CmekSettingsResponse> cmekSettings() {
        return this.cmekSettings;
    }
    /**
     * The creation timestamp of the bucket. This is not set for any of the default buckets.
     * 
     */
    @Export(name="createTime", type=String.class, parameters={})
    private Output<String> createTime;

    /**
     * @return The creation timestamp of the bucket. This is not set for any of the default buckets.
     * 
     */
    public Output<String> createTime() {
        return this.createTime;
    }
    /**
     * Describes this bucket.
     * 
     */
    @Export(name="description", type=String.class, parameters={})
    private Output<String> description;

    /**
     * @return Describes this bucket.
     * 
     */
    public Output<String> description() {
        return this.description;
    }
    /**
     * A list of indexed fields and related configuration data.
     * 
     */
    @Export(name="indexConfigs", type=List.class, parameters={IndexConfigResponse.class})
    private Output<List<IndexConfigResponse>> indexConfigs;

    /**
     * @return A list of indexed fields and related configuration data.
     * 
     */
    public Output<List<IndexConfigResponse>> indexConfigs() {
        return this.indexConfigs;
    }
    /**
     * The bucket lifecycle state.
     * 
     */
    @Export(name="lifecycleState", type=String.class, parameters={})
    private Output<String> lifecycleState;

    /**
     * @return The bucket lifecycle state.
     * 
     */
    public Output<String> lifecycleState() {
        return this.lifecycleState;
    }
    @Export(name="location", type=String.class, parameters={})
    private Output<String> location;

    public Output<String> location() {
        return this.location;
    }
    /**
     * Whether the bucket is locked.The retention period on a locked bucket cannot be changed. Locked buckets may only be deleted if they are empty.
     * 
     */
    @Export(name="locked", type=Boolean.class, parameters={})
    private Output<Boolean> locked;

    /**
     * @return Whether the bucket is locked.The retention period on a locked bucket cannot be changed. Locked buckets may only be deleted if they are empty.
     * 
     */
    public Output<Boolean> locked() {
        return this.locked;
    }
    /**
     * The resource name of the bucket.For example:projects/my-project/locations/global/buckets/my-bucketFor a list of supported locations, see Supported Regions (https://cloud.google.com/logging/docs/region-support)For the location of global it is unspecified where log entries are actually stored.After a bucket has been created, the location cannot be changed.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The resource name of the bucket.For example:projects/my-project/locations/global/buckets/my-bucketFor a list of supported locations, see Supported Regions (https://cloud.google.com/logging/docs/region-support)For the location of global it is unspecified where log entries are actually stored.After a bucket has been created, the location cannot be changed.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    @Export(name="project", type=String.class, parameters={})
    private Output<String> project;

    public Output<String> project() {
        return this.project;
    }
    /**
     * Log entry field paths that are denied access in this bucket.The following fields and their children are eligible: textPayload, jsonPayload, protoPayload, httpRequest, labels, sourceLocation.Restricting a repeated field will restrict all values. Adding a parent will block all child fields. (e.g. foo.bar will block foo.bar.baz)
     * 
     */
    @Export(name="restrictedFields", type=List.class, parameters={String.class})
    private Output<List<String>> restrictedFields;

    /**
     * @return Log entry field paths that are denied access in this bucket.The following fields and their children are eligible: textPayload, jsonPayload, protoPayload, httpRequest, labels, sourceLocation.Restricting a repeated field will restrict all values. Adding a parent will block all child fields. (e.g. foo.bar will block foo.bar.baz)
     * 
     */
    public Output<List<String>> restrictedFields() {
        return this.restrictedFields;
    }
    /**
     * Logs will be retained by default for this amount of time, after which they will automatically be deleted. The minimum retention period is 1 day. If this value is set to zero at bucket creation time, the default time of 30 days will be used.
     * 
     */
    @Export(name="retentionDays", type=Integer.class, parameters={})
    private Output<Integer> retentionDays;

    /**
     * @return Logs will be retained by default for this amount of time, after which they will automatically be deleted. The minimum retention period is 1 day. If this value is set to zero at bucket creation time, the default time of 30 days will be used.
     * 
     */
    public Output<Integer> retentionDays() {
        return this.retentionDays;
    }
    /**
     * The last update timestamp of the bucket.
     * 
     */
    @Export(name="updateTime", type=String.class, parameters={})
    private Output<String> updateTime;

    /**
     * @return The last update timestamp of the bucket.
     * 
     */
    public Output<String> updateTime() {
        return this.updateTime;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Bucket(String name) {
        this(name, BucketArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Bucket(String name, BucketArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Bucket(String name, BucketArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("google-native:logging/v2:Bucket", name, args == null ? BucketArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Bucket(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("google-native:logging/v2:Bucket", name, null, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Bucket get(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Bucket(name, id, options);
    }
}
