// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.containeranalysis.v1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;


/**
 * An artifact that can be deployed in some runtime.
 * 
 */
public final class DeploymentNoteArgs extends com.pulumi.resources.ResourceArgs {

    public static final DeploymentNoteArgs Empty = new DeploymentNoteArgs();

    /**
     * Resource URI for the artifact being deployed.
     * 
     */
    @Import(name="resourceUri", required=true)
    private Output<List<String>> resourceUri;

    /**
     * @return Resource URI for the artifact being deployed.
     * 
     */
    public Output<List<String>> resourceUri() {
        return this.resourceUri;
    }

    private DeploymentNoteArgs() {}

    private DeploymentNoteArgs(DeploymentNoteArgs $) {
        this.resourceUri = $.resourceUri;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DeploymentNoteArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DeploymentNoteArgs $;

        public Builder() {
            $ = new DeploymentNoteArgs();
        }

        public Builder(DeploymentNoteArgs defaults) {
            $ = new DeploymentNoteArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param resourceUri Resource URI for the artifact being deployed.
         * 
         * @return builder
         * 
         */
        public Builder resourceUri(Output<List<String>> resourceUri) {
            $.resourceUri = resourceUri;
            return this;
        }

        /**
         * @param resourceUri Resource URI for the artifact being deployed.
         * 
         * @return builder
         * 
         */
        public Builder resourceUri(List<String> resourceUri) {
            return resourceUri(Output.of(resourceUri));
        }

        /**
         * @param resourceUri Resource URI for the artifact being deployed.
         * 
         * @return builder
         * 
         */
        public Builder resourceUri(String... resourceUri) {
            return resourceUri(List.of(resourceUri));
        }

        public DeploymentNoteArgs build() {
            $.resourceUri = Objects.requireNonNull($.resourceUri, "expected parameter 'resourceUri' to be non-null");
            return $;
        }
    }

}
