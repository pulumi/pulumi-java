// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.container_v1beta1.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;


/**
 * Parameters that can be configured on Linux nodes.
 * 
 */
public final class LinuxNodeConfigResponse extends com.pulumi.resources.InvokeArgs {

    public static final LinuxNodeConfigResponse Empty = new LinuxNodeConfigResponse();

    /**
     * The Linux kernel parameters to be applied to the nodes and all pods running on the nodes. The following parameters are supported. net.core.netdev_max_backlog net.core.rmem_max net.core.wmem_default net.core.wmem_max net.core.optmem_max net.core.somaxconn net.ipv4.tcp_rmem net.ipv4.tcp_wmem net.ipv4.tcp_tw_reuse
     * 
     */
    @Import(name="sysctls", required=true)
    private Map<String,String> sysctls;

    public Map<String,String> sysctls() {
        return this.sysctls;
    }

    private LinuxNodeConfigResponse() {}

    private LinuxNodeConfigResponse(LinuxNodeConfigResponse $) {
        this.sysctls = $.sysctls;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LinuxNodeConfigResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LinuxNodeConfigResponse $;

        public Builder() {
            $ = new LinuxNodeConfigResponse();
        }

        public Builder(LinuxNodeConfigResponse defaults) {
            $ = new LinuxNodeConfigResponse(Objects.requireNonNull(defaults));
        }

        public Builder sysctls(Map<String,String> sysctls) {
            $.sysctls = sysctls;
            return this;
        }

        public LinuxNodeConfigResponse build() {
            $.sysctls = Objects.requireNonNull($.sysctls, "expected parameter 'sysctls' to be non-null");
            return $;
        }
    }

}
