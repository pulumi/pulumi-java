// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.dlp_v2.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * Type of information detected by the API.
 * 
 */
public final class GooglePrivacyDlpV2InfoTypeResponse extends com.pulumi.resources.InvokeArgs {

    public static final GooglePrivacyDlpV2InfoTypeResponse Empty = new GooglePrivacyDlpV2InfoTypeResponse();

    /**
     * Name of the information type. Either a name of your choosing when creating a CustomInfoType, or one of the names listed at https://cloud.google.com/dlp/docs/infotypes-reference when specifying a built-in type. When sending Cloud DLP results to Data Catalog, infoType names should conform to the pattern `[A-Za-z0-9$-_]{1,64}`.
     * 
     */
    @Import(name="name", required=true)
    private String name;

    public String name() {
        return this.name;
    }

    /**
     * Optional version name for this InfoType.
     * 
     */
    @Import(name="version", required=true)
    private String version;

    public String version() {
        return this.version;
    }

    private GooglePrivacyDlpV2InfoTypeResponse() {}

    private GooglePrivacyDlpV2InfoTypeResponse(GooglePrivacyDlpV2InfoTypeResponse $) {
        this.name = $.name;
        this.version = $.version;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GooglePrivacyDlpV2InfoTypeResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GooglePrivacyDlpV2InfoTypeResponse $;

        public Builder() {
            $ = new GooglePrivacyDlpV2InfoTypeResponse();
        }

        public Builder(GooglePrivacyDlpV2InfoTypeResponse defaults) {
            $ = new GooglePrivacyDlpV2InfoTypeResponse(Objects.requireNonNull(defaults));
        }

        public Builder name(String name) {
            $.name = name;
            return this;
        }

        public Builder version(String version) {
            $.version = version;
            return this;
        }

        public GooglePrivacyDlpV2InfoTypeResponse build() {
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            $.version = Objects.requireNonNull($.version, "expected parameter 'version' to be non-null");
            return $;
        }
    }

}
