// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.testing_v1.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.testing_v1.inputs.FileReferenceResponse;
import java.lang.String;
import java.util.Objects;


/**
 * An Android package file to install.
 * 
 */
public final class ApkResponse extends com.pulumi.resources.InvokeArgs {

    public static final ApkResponse Empty = new ApkResponse();

    /**
     * The path to an APK to be installed on the device before the test begins.
     * 
     */
    @Import(name="location", required=true)
    private FileReferenceResponse location;

    /**
     * @return The path to an APK to be installed on the device before the test begins.
     * 
     */
    public FileReferenceResponse location() {
        return this.location;
    }

    /**
     * The java package for the APK to be installed. Value is determined by examining the application&#39;s manifest.
     * 
     */
    @Import(name="packageName", required=true)
    private String packageName;

    /**
     * @return The java package for the APK to be installed. Value is determined by examining the application&#39;s manifest.
     * 
     */
    public String packageName() {
        return this.packageName;
    }

    private ApkResponse() {}

    private ApkResponse(ApkResponse $) {
        this.location = $.location;
        this.packageName = $.packageName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ApkResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApkResponse $;

        public Builder() {
            $ = new ApkResponse();
        }

        public Builder(ApkResponse defaults) {
            $ = new ApkResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param location The path to an APK to be installed on the device before the test begins.
         * 
         * @return builder
         * 
         */
        public Builder location(FileReferenceResponse location) {
            $.location = location;
            return this;
        }

        /**
         * @param packageName The java package for the APK to be installed. Value is determined by examining the application&#39;s manifest.
         * 
         * @return builder
         * 
         */
        public Builder packageName(String packageName) {
            $.packageName = packageName;
            return this;
        }

        public ApkResponse build() {
            $.location = Objects.requireNonNull($.location, "expected parameter 'location' to be non-null");
            $.packageName = Objects.requireNonNull($.packageName, "expected parameter 'packageName' to be non-null");
            return $;
        }
    }

}
