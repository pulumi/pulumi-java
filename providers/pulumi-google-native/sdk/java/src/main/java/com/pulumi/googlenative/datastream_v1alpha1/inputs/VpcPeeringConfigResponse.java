// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.datastream_v1alpha1.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * The VPC Peering configuration is used to create VPC peering between Datastream and the consumer&#39;s VPC.
 * 
 */
public final class VpcPeeringConfigResponse extends com.pulumi.resources.InvokeArgs {

    public static final VpcPeeringConfigResponse Empty = new VpcPeeringConfigResponse();

    /**
     * A free subnet for peering. (CIDR of /29) TODO(b/172995841) add validators.
     * 
     */
    @Import(name="subnet", required=true)
    private String subnet;

    /**
     * @return A free subnet for peering. (CIDR of /29) TODO(b/172995841) add validators.
     * 
     */
    public String subnet() {
        return this.subnet;
    }

    /**
     * fully qualified name of the VPC Datastream will peer to.
     * 
     */
    @Import(name="vpcName", required=true)
    private String vpcName;

    /**
     * @return fully qualified name of the VPC Datastream will peer to.
     * 
     */
    public String vpcName() {
        return this.vpcName;
    }

    private VpcPeeringConfigResponse() {}

    private VpcPeeringConfigResponse(VpcPeeringConfigResponse $) {
        this.subnet = $.subnet;
        this.vpcName = $.vpcName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VpcPeeringConfigResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VpcPeeringConfigResponse $;

        public Builder() {
            $ = new VpcPeeringConfigResponse();
        }

        public Builder(VpcPeeringConfigResponse defaults) {
            $ = new VpcPeeringConfigResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param subnet A free subnet for peering. (CIDR of /29) TODO(b/172995841) add validators.
         * 
         * @return builder
         * 
         */
        public Builder subnet(String subnet) {
            $.subnet = subnet;
            return this;
        }

        /**
         * @param vpcName fully qualified name of the VPC Datastream will peer to.
         * 
         * @return builder
         * 
         */
        public Builder vpcName(String vpcName) {
            $.vpcName = vpcName;
            return this;
        }

        public VpcPeeringConfigResponse build() {
            $.subnet = Objects.requireNonNull($.subnet, "expected parameter 'subnet' to be non-null");
            $.vpcName = Objects.requireNonNull($.vpcName, "expected parameter 'vpcName' to be non-null");
            return $;
        }
    }

}
