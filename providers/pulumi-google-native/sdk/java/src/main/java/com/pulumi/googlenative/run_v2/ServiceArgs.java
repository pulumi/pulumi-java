// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.run_v2;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.run_v2.enums.ServiceIngress;
import com.pulumi.googlenative.run_v2.enums.ServiceLaunchStage;
import com.pulumi.googlenative.run_v2.inputs.GoogleCloudRunOpV2BinaryAuthorizationArgs;
import com.pulumi.googlenative.run_v2.inputs.GoogleCloudRunOpV2RevisionTemplateArgs;
import com.pulumi.googlenative.run_v2.inputs.GoogleCloudRunOpV2TrafficTargetArgs;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ServiceArgs extends com.pulumi.resources.ResourceArgs {

    public static final ServiceArgs Empty = new ServiceArgs();

    /**
     * Unstructured key value map that may be set by external tools to store and arbitrary metadata. They are not queryable and should be preserved when modifying objects. Cloud Run will populate some annotations using &#39;run.googleapis.com&#39; or &#39;serving.knative.dev&#39; namespaces. This field follows Kubernetes annotations&#39; namespacing, limits, and rules. More info: http://kubernetes.io/docs/user-guide/annotations
     * 
     */
    @Import(name="annotations")
    private @Nullable Output<Map<String,String>> annotations;

    public Optional<Output<Map<String,String>>> annotations() {
        return Optional.ofNullable(this.annotations);
    }

    /**
     * Settings for the Binary Authorization feature.
     * 
     */
    @Import(name="binaryAuthorization")
    private @Nullable Output<GoogleCloudRunOpV2BinaryAuthorizationArgs> binaryAuthorization;

    public Optional<Output<GoogleCloudRunOpV2BinaryAuthorizationArgs>> binaryAuthorization() {
        return Optional.ofNullable(this.binaryAuthorization);
    }

    /**
     * Arbitrary identifier for the API client.
     * 
     */
    @Import(name="client")
    private @Nullable Output<String> client;

    public Optional<Output<String>> client() {
        return Optional.ofNullable(this.client);
    }

    /**
     * Arbitrary version identifier for the API client.
     * 
     */
    @Import(name="clientVersion")
    private @Nullable Output<String> clientVersion;

    public Optional<Output<String>> clientVersion() {
        return Optional.ofNullable(this.clientVersion);
    }

    /**
     * User-provided description of the Service.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Provides the ingress settings for this Service. On output, returns the currently observed ingress settings, or INGRESS_TRAFFIC_UNSPECIFIED if no revision is active.
     * 
     */
    @Import(name="ingress")
    private @Nullable Output<ServiceIngress> ingress;

    public Optional<Output<ServiceIngress>> ingress() {
        return Optional.ofNullable(this.ingress);
    }

    /**
     * Map of string keys and values that can be used to organize and categorize objects. User-provided labels are shared with Google&#39;s billing system, so they can be used to filter, or break down billing charges by team, component, environment, state, etc. For more information, visit https://cloud.google.com/resource-manager/docs/creating-managing-labels or https://cloud.google.com/run/docs/configuring/labels Cloud Run will populate some labels with &#39;run.googleapis.com&#39; or &#39;serving.knative.dev&#39; namespaces. Those labels are read-only, and user changes will not be preserved.
     * 
     */
    @Import(name="labels")
    private @Nullable Output<Map<String,String>> labels;

    public Optional<Output<Map<String,String>>> labels() {
        return Optional.ofNullable(this.labels);
    }

    /**
     * The launch stage as defined by [Google Cloud Platform Launch Stages](http://cloud.google.com/terms/launch-stages). Cloud Run supports `ALPHA`, `BETA`, and `GA`. If no value is specified, GA is assumed.
     * 
     */
    @Import(name="launchStage")
    private @Nullable Output<ServiceLaunchStage> launchStage;

    public Optional<Output<ServiceLaunchStage>> launchStage() {
        return Optional.ofNullable(this.launchStage);
    }

    @Import(name="location")
    private @Nullable Output<String> location;

    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * The fully qualified name of this Service. In CreateServiceRequest, this field is ignored, and instead composed from CreateServiceRequest.parent and CreateServiceRequest.service_id. Format: projects/{project}/locations/{location}/services/{service_id}
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="project")
    private @Nullable Output<String> project;

    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    @Import(name="serviceId", required=true)
    private Output<String> serviceId;

    public Output<String> serviceId() {
        return this.serviceId;
    }

    /**
     * The template used to create revisions for this Service.
     * 
     */
    @Import(name="template", required=true)
    private Output<GoogleCloudRunOpV2RevisionTemplateArgs> template;

    public Output<GoogleCloudRunOpV2RevisionTemplateArgs> template() {
        return this.template;
    }

    /**
     * Specifies how to distribute traffic over a collection of Revisions belonging to the Service. If traffic is empty or not provided, defaults to 100% traffic to the latest `Ready` Revision.
     * 
     */
    @Import(name="traffic")
    private @Nullable Output<List<GoogleCloudRunOpV2TrafficTargetArgs>> traffic;

    public Optional<Output<List<GoogleCloudRunOpV2TrafficTargetArgs>>> traffic() {
        return Optional.ofNullable(this.traffic);
    }

    @Import(name="validateOnly")
    private @Nullable Output<String> validateOnly;

    public Optional<Output<String>> validateOnly() {
        return Optional.ofNullable(this.validateOnly);
    }

    private ServiceArgs() {}

    private ServiceArgs(ServiceArgs $) {
        this.annotations = $.annotations;
        this.binaryAuthorization = $.binaryAuthorization;
        this.client = $.client;
        this.clientVersion = $.clientVersion;
        this.description = $.description;
        this.ingress = $.ingress;
        this.labels = $.labels;
        this.launchStage = $.launchStage;
        this.location = $.location;
        this.name = $.name;
        this.project = $.project;
        this.serviceId = $.serviceId;
        this.template = $.template;
        this.traffic = $.traffic;
        this.validateOnly = $.validateOnly;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServiceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServiceArgs $;

        public Builder() {
            $ = new ServiceArgs();
        }

        public Builder(ServiceArgs defaults) {
            $ = new ServiceArgs(Objects.requireNonNull(defaults));
        }

        public Builder annotations(@Nullable Output<Map<String,String>> annotations) {
            $.annotations = annotations;
            return this;
        }

        public Builder annotations(Map<String,String> annotations) {
            return annotations(Output.of(annotations));
        }

        public Builder binaryAuthorization(@Nullable Output<GoogleCloudRunOpV2BinaryAuthorizationArgs> binaryAuthorization) {
            $.binaryAuthorization = binaryAuthorization;
            return this;
        }

        public Builder binaryAuthorization(GoogleCloudRunOpV2BinaryAuthorizationArgs binaryAuthorization) {
            return binaryAuthorization(Output.of(binaryAuthorization));
        }

        public Builder client(@Nullable Output<String> client) {
            $.client = client;
            return this;
        }

        public Builder client(String client) {
            return client(Output.of(client));
        }

        public Builder clientVersion(@Nullable Output<String> clientVersion) {
            $.clientVersion = clientVersion;
            return this;
        }

        public Builder clientVersion(String clientVersion) {
            return clientVersion(Output.of(clientVersion));
        }

        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        public Builder description(String description) {
            return description(Output.of(description));
        }

        public Builder ingress(@Nullable Output<ServiceIngress> ingress) {
            $.ingress = ingress;
            return this;
        }

        public Builder ingress(ServiceIngress ingress) {
            return ingress(Output.of(ingress));
        }

        public Builder labels(@Nullable Output<Map<String,String>> labels) {
            $.labels = labels;
            return this;
        }

        public Builder labels(Map<String,String> labels) {
            return labels(Output.of(labels));
        }

        public Builder launchStage(@Nullable Output<ServiceLaunchStage> launchStage) {
            $.launchStage = launchStage;
            return this;
        }

        public Builder launchStage(ServiceLaunchStage launchStage) {
            return launchStage(Output.of(launchStage));
        }

        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        public Builder location(String location) {
            return location(Output.of(location));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        public Builder project(String project) {
            return project(Output.of(project));
        }

        public Builder serviceId(Output<String> serviceId) {
            $.serviceId = serviceId;
            return this;
        }

        public Builder serviceId(String serviceId) {
            return serviceId(Output.of(serviceId));
        }

        public Builder template(Output<GoogleCloudRunOpV2RevisionTemplateArgs> template) {
            $.template = template;
            return this;
        }

        public Builder template(GoogleCloudRunOpV2RevisionTemplateArgs template) {
            return template(Output.of(template));
        }

        public Builder traffic(@Nullable Output<List<GoogleCloudRunOpV2TrafficTargetArgs>> traffic) {
            $.traffic = traffic;
            return this;
        }

        public Builder traffic(List<GoogleCloudRunOpV2TrafficTargetArgs> traffic) {
            return traffic(Output.of(traffic));
        }

        public Builder traffic(GoogleCloudRunOpV2TrafficTargetArgs... traffic) {
            return traffic(List.of(traffic));
        }

        public Builder validateOnly(@Nullable Output<String> validateOnly) {
            $.validateOnly = validateOnly;
            return this;
        }

        public Builder validateOnly(String validateOnly) {
            return validateOnly(Output.of(validateOnly));
        }

        public ServiceArgs build() {
            $.serviceId = Objects.requireNonNull($.serviceId, "expected parameter 'serviceId' to be non-null");
            $.template = Objects.requireNonNull($.template, "expected parameter 'template' to be non-null");
            return $;
        }
    }

}
