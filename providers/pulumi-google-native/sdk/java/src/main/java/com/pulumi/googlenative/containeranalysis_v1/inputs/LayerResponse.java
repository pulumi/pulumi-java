// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.containeranalysis_v1.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * Layer holds metadata specific to a layer of a Docker image.
 * 
 */
public final class LayerResponse extends com.pulumi.resources.InvokeArgs {

    public static final LayerResponse Empty = new LayerResponse();

    /**
     * The recovered arguments to the Dockerfile directive.
     * 
     */
    @Import(name="arguments", required=true)
    private String arguments;

    /**
     * @return The recovered arguments to the Dockerfile directive.
     * 
     */
    public String arguments() {
        return this.arguments;
    }

    /**
     * The recovered Dockerfile directive used to construct this layer. See https://docs.docker.com/engine/reference/builder/ for more information.
     * 
     */
    @Import(name="directive", required=true)
    private String directive;

    /**
     * @return The recovered Dockerfile directive used to construct this layer. See https://docs.docker.com/engine/reference/builder/ for more information.
     * 
     */
    public String directive() {
        return this.directive;
    }

    private LayerResponse() {}

    private LayerResponse(LayerResponse $) {
        this.arguments = $.arguments;
        this.directive = $.directive;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LayerResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LayerResponse $;

        public Builder() {
            $ = new LayerResponse();
        }

        public Builder(LayerResponse defaults) {
            $ = new LayerResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param arguments The recovered arguments to the Dockerfile directive.
         * 
         * @return builder
         * 
         */
        public Builder arguments(String arguments) {
            $.arguments = arguments;
            return this;
        }

        /**
         * @param directive The recovered Dockerfile directive used to construct this layer. See https://docs.docker.com/engine/reference/builder/ for more information.
         * 
         * @return builder
         * 
         */
        public Builder directive(String directive) {
            $.directive = directive;
            return this;
        }

        public LayerResponse build() {
            $.arguments = Objects.requireNonNull($.arguments, "expected parameter 'arguments' to be non-null");
            $.directive = Objects.requireNonNull($.directive, "expected parameter 'directive' to be non-null");
            return $;
        }
    }

}
