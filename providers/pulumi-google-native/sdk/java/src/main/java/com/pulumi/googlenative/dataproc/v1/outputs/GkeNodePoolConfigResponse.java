// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.dataproc.v1.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.googlenative.dataproc.v1.outputs.GkeNodeConfigResponse;
import com.pulumi.googlenative.dataproc.v1.outputs.GkeNodePoolAutoscalingConfigResponse;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GkeNodePoolConfigResponse {
    /**
     * @return Optional. The autoscaler configuration for this node pool. The autoscaler is enabled only when a valid configuration is present.
     * 
     */
    private final GkeNodePoolAutoscalingConfigResponse autoscaling;
    /**
     * @return Optional. The node pool configuration.
     * 
     */
    private final GkeNodeConfigResponse config;
    /**
     * @return Optional. The list of Compute Engine zones (https://cloud.google.com/compute/docs/zones#available) where node pool nodes associated with a Dataproc on GKE virtual cluster will be located.Note: All node pools associated with a virtual cluster must be located in the same region as the virtual cluster, and they must be located in the same zone within that region.If a location is not specified during node pool creation, Dataproc on GKE will choose the zone.
     * 
     */
    private final List<String> locations;

    @CustomType.Constructor
    private GkeNodePoolConfigResponse(
        @CustomType.Parameter("autoscaling") GkeNodePoolAutoscalingConfigResponse autoscaling,
        @CustomType.Parameter("config") GkeNodeConfigResponse config,
        @CustomType.Parameter("locations") List<String> locations) {
        this.autoscaling = autoscaling;
        this.config = config;
        this.locations = locations;
    }

    /**
     * @return Optional. The autoscaler configuration for this node pool. The autoscaler is enabled only when a valid configuration is present.
     * 
     */
    public GkeNodePoolAutoscalingConfigResponse autoscaling() {
        return this.autoscaling;
    }
    /**
     * @return Optional. The node pool configuration.
     * 
     */
    public GkeNodeConfigResponse config() {
        return this.config;
    }
    /**
     * @return Optional. The list of Compute Engine zones (https://cloud.google.com/compute/docs/zones#available) where node pool nodes associated with a Dataproc on GKE virtual cluster will be located.Note: All node pools associated with a virtual cluster must be located in the same region as the virtual cluster, and they must be located in the same zone within that region.If a location is not specified during node pool creation, Dataproc on GKE will choose the zone.
     * 
     */
    public List<String> locations() {
        return this.locations;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GkeNodePoolConfigResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GkeNodePoolAutoscalingConfigResponse autoscaling;
        private GkeNodeConfigResponse config;
        private List<String> locations;

        public Builder() {
    	      // Empty
        }

        public Builder(GkeNodePoolConfigResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.autoscaling = defaults.autoscaling;
    	      this.config = defaults.config;
    	      this.locations = defaults.locations;
        }

        public Builder autoscaling(GkeNodePoolAutoscalingConfigResponse autoscaling) {
            this.autoscaling = Objects.requireNonNull(autoscaling);
            return this;
        }
        public Builder config(GkeNodeConfigResponse config) {
            this.config = Objects.requireNonNull(config);
            return this;
        }
        public Builder locations(List<String> locations) {
            this.locations = Objects.requireNonNull(locations);
            return this;
        }
        public Builder locations(String... locations) {
            return locations(List.of(locations));
        }        public GkeNodePoolConfigResponse build() {
            return new GkeNodePoolConfigResponse(autoscaling, config, locations);
        }
    }
}
