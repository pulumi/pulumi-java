// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.retail_v2beta.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.retail_v2beta.inputs.GoogleCloudRetailV2betaConditionQueryTermResponse;
import com.pulumi.googlenative.retail_v2beta.inputs.GoogleCloudRetailV2betaConditionTimeRangeResponse;
import java.util.List;
import java.util.Objects;


/**
 * Metadata that is used to define a condition that triggers an action. A valid condition must specify at least one of &#39;query_terms&#39; or &#39;products_filter&#39;. If multiple fields are specified, the condition is met if all the fields are satisfied e.g. if a set of query terms and product_filter are set, then only items matching the product_filter for requests with a query matching the query terms wil get boosted.
 * 
 */
public final class GoogleCloudRetailV2betaConditionResponse extends com.pulumi.resources.InvokeArgs {

    public static final GoogleCloudRetailV2betaConditionResponse Empty = new GoogleCloudRetailV2betaConditionResponse();

    /**
     * Range of time(s) specifying when Condition is active. Condition true if any time range matches.
     * 
     */
    @Import(name="activeTimeRange", required=true)
    private List<GoogleCloudRetailV2betaConditionTimeRangeResponse> activeTimeRange;

    public List<GoogleCloudRetailV2betaConditionTimeRangeResponse> activeTimeRange() {
        return this.activeTimeRange;
    }

    /**
     * A list (up to 10 entries) of terms to match the query on. If not specified, match all queries. If many query terms are specified, the condition is matched if any of the terms is a match (i.e. using the OR operator).
     * 
     */
    @Import(name="queryTerms", required=true)
    private List<GoogleCloudRetailV2betaConditionQueryTermResponse> queryTerms;

    public List<GoogleCloudRetailV2betaConditionQueryTermResponse> queryTerms() {
        return this.queryTerms;
    }

    private GoogleCloudRetailV2betaConditionResponse() {}

    private GoogleCloudRetailV2betaConditionResponse(GoogleCloudRetailV2betaConditionResponse $) {
        this.activeTimeRange = $.activeTimeRange;
        this.queryTerms = $.queryTerms;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GoogleCloudRetailV2betaConditionResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GoogleCloudRetailV2betaConditionResponse $;

        public Builder() {
            $ = new GoogleCloudRetailV2betaConditionResponse();
        }

        public Builder(GoogleCloudRetailV2betaConditionResponse defaults) {
            $ = new GoogleCloudRetailV2betaConditionResponse(Objects.requireNonNull(defaults));
        }

        public Builder activeTimeRange(List<GoogleCloudRetailV2betaConditionTimeRangeResponse> activeTimeRange) {
            $.activeTimeRange = activeTimeRange;
            return this;
        }

        public Builder activeTimeRange(GoogleCloudRetailV2betaConditionTimeRangeResponse... activeTimeRange) {
            return activeTimeRange(List.of(activeTimeRange));
        }

        public Builder queryTerms(List<GoogleCloudRetailV2betaConditionQueryTermResponse> queryTerms) {
            $.queryTerms = queryTerms;
            return this;
        }

        public Builder queryTerms(GoogleCloudRetailV2betaConditionQueryTermResponse... queryTerms) {
            return queryTerms(List.of(queryTerms));
        }

        public GoogleCloudRetailV2betaConditionResponse build() {
            $.activeTimeRange = Objects.requireNonNull($.activeTimeRange, "expected parameter 'activeTimeRange' to be non-null");
            $.queryTerms = Objects.requireNonNull($.queryTerms, "expected parameter 'queryTerms' to be non-null");
            return $;
        }
    }

}
