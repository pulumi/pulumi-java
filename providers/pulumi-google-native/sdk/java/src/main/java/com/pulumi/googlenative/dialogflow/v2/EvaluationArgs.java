// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.dialogflow.v2;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.dialogflow.v2.inputs.GoogleCloudDialogflowV2EvaluationConfigArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class EvaluationArgs extends com.pulumi.resources.ResourceArgs {

    public static final EvaluationArgs Empty = new EvaluationArgs();

    @Import(name="conversationModelId", required=true)
    private Output<String> conversationModelId;

    public Output<String> conversationModelId() {
        return this.conversationModelId;
    }

    /**
     * Optional. The display name of the model evaluation. At most 64 bytes long.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return Optional. The display name of the model evaluation. At most 64 bytes long.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * Optional. The configuration of the evaluation task.
     * 
     */
    @Import(name="evaluationConfig")
    private @Nullable Output<GoogleCloudDialogflowV2EvaluationConfigArgs> evaluationConfig;

    /**
     * @return Optional. The configuration of the evaluation task.
     * 
     */
    public Optional<Output<GoogleCloudDialogflowV2EvaluationConfigArgs>> evaluationConfig() {
        return Optional.ofNullable(this.evaluationConfig);
    }

    @Import(name="location")
    private @Nullable Output<String> location;

    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * The resource name of the evaluation. Format: `projects//conversationModels//evaluations/`
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The resource name of the evaluation. Format: `projects//conversationModels//evaluations/`
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="project")
    private @Nullable Output<String> project;

    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    private EvaluationArgs() {}

    private EvaluationArgs(EvaluationArgs $) {
        this.conversationModelId = $.conversationModelId;
        this.displayName = $.displayName;
        this.evaluationConfig = $.evaluationConfig;
        this.location = $.location;
        this.name = $.name;
        this.project = $.project;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EvaluationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EvaluationArgs $;

        public Builder() {
            $ = new EvaluationArgs();
        }

        public Builder(EvaluationArgs defaults) {
            $ = new EvaluationArgs(Objects.requireNonNull(defaults));
        }

        public Builder conversationModelId(Output<String> conversationModelId) {
            $.conversationModelId = conversationModelId;
            return this;
        }

        public Builder conversationModelId(String conversationModelId) {
            return conversationModelId(Output.of(conversationModelId));
        }

        /**
         * @param displayName Optional. The display name of the model evaluation. At most 64 bytes long.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName Optional. The display name of the model evaluation. At most 64 bytes long.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param evaluationConfig Optional. The configuration of the evaluation task.
         * 
         * @return builder
         * 
         */
        public Builder evaluationConfig(@Nullable Output<GoogleCloudDialogflowV2EvaluationConfigArgs> evaluationConfig) {
            $.evaluationConfig = evaluationConfig;
            return this;
        }

        /**
         * @param evaluationConfig Optional. The configuration of the evaluation task.
         * 
         * @return builder
         * 
         */
        public Builder evaluationConfig(GoogleCloudDialogflowV2EvaluationConfigArgs evaluationConfig) {
            return evaluationConfig(Output.of(evaluationConfig));
        }

        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param name The resource name of the evaluation. Format: `projects//conversationModels//evaluations/`
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The resource name of the evaluation. Format: `projects//conversationModels//evaluations/`
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        public Builder project(String project) {
            return project(Output.of(project));
        }

        public EvaluationArgs build() {
            $.conversationModelId = Objects.requireNonNull($.conversationModelId, "expected parameter 'conversationModelId' to be non-null");
            return $;
        }
    }

}
