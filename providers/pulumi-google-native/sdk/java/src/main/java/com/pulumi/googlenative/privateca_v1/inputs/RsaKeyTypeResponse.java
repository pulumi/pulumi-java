// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.privateca_v1.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * Describes an RSA key that may be used in a Certificate issued from a CaPool.
 * 
 */
public final class RsaKeyTypeResponse extends com.pulumi.resources.InvokeArgs {

    public static final RsaKeyTypeResponse Empty = new RsaKeyTypeResponse();

    /**
     * Optional. The maximum allowed RSA modulus size (inclusive), in bits. If this is not set, or if set to zero, the service will not enforce an explicit upper bound on RSA modulus sizes.
     * 
     */
    @Import(name="maxModulusSize", required=true)
    private String maxModulusSize;

    /**
     * @return Optional. The maximum allowed RSA modulus size (inclusive), in bits. If this is not set, or if set to zero, the service will not enforce an explicit upper bound on RSA modulus sizes.
     * 
     */
    public String maxModulusSize() {
        return this.maxModulusSize;
    }

    /**
     * Optional. The minimum allowed RSA modulus size (inclusive), in bits. If this is not set, or if set to zero, the service-level min RSA modulus size will continue to apply.
     * 
     */
    @Import(name="minModulusSize", required=true)
    private String minModulusSize;

    /**
     * @return Optional. The minimum allowed RSA modulus size (inclusive), in bits. If this is not set, or if set to zero, the service-level min RSA modulus size will continue to apply.
     * 
     */
    public String minModulusSize() {
        return this.minModulusSize;
    }

    private RsaKeyTypeResponse() {}

    private RsaKeyTypeResponse(RsaKeyTypeResponse $) {
        this.maxModulusSize = $.maxModulusSize;
        this.minModulusSize = $.minModulusSize;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RsaKeyTypeResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RsaKeyTypeResponse $;

        public Builder() {
            $ = new RsaKeyTypeResponse();
        }

        public Builder(RsaKeyTypeResponse defaults) {
            $ = new RsaKeyTypeResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param maxModulusSize Optional. The maximum allowed RSA modulus size (inclusive), in bits. If this is not set, or if set to zero, the service will not enforce an explicit upper bound on RSA modulus sizes.
         * 
         * @return builder
         * 
         */
        public Builder maxModulusSize(String maxModulusSize) {
            $.maxModulusSize = maxModulusSize;
            return this;
        }

        /**
         * @param minModulusSize Optional. The minimum allowed RSA modulus size (inclusive), in bits. If this is not set, or if set to zero, the service-level min RSA modulus size will continue to apply.
         * 
         * @return builder
         * 
         */
        public Builder minModulusSize(String minModulusSize) {
            $.minModulusSize = minModulusSize;
            return this;
        }

        public RsaKeyTypeResponse build() {
            $.maxModulusSize = Objects.requireNonNull($.maxModulusSize, "expected parameter 'maxModulusSize' to be non-null");
            $.minModulusSize = Objects.requireNonNull($.minModulusSize, "expected parameter 'minModulusSize' to be non-null");
            return $;
        }
    }

}
