// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.osconfig_v1beta.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * Defines the criteria for selecting VM Instances by OS type.
 * 
 */
public final class AssignmentOsTypeResponse extends com.pulumi.resources.InvokeArgs {

    public static final AssignmentOsTypeResponse Empty = new AssignmentOsTypeResponse();

    /**
     * Targets VM instances with OS Inventory enabled and having the following OS architecture.
     * 
     */
    @Import(name="osArchitecture", required=true)
    private String osArchitecture;

    /**
     * @return Targets VM instances with OS Inventory enabled and having the following OS architecture.
     * 
     */
    public String osArchitecture() {
        return this.osArchitecture;
    }

    /**
     * Targets VM instances with OS Inventory enabled and having the following OS short name, for example &#34;debian&#34; or &#34;windows&#34;.
     * 
     */
    @Import(name="osShortName", required=true)
    private String osShortName;

    /**
     * @return Targets VM instances with OS Inventory enabled and having the following OS short name, for example &#34;debian&#34; or &#34;windows&#34;.
     * 
     */
    public String osShortName() {
        return this.osShortName;
    }

    /**
     * Targets VM instances with OS Inventory enabled and having the following following OS version.
     * 
     */
    @Import(name="osVersion", required=true)
    private String osVersion;

    /**
     * @return Targets VM instances with OS Inventory enabled and having the following following OS version.
     * 
     */
    public String osVersion() {
        return this.osVersion;
    }

    private AssignmentOsTypeResponse() {}

    private AssignmentOsTypeResponse(AssignmentOsTypeResponse $) {
        this.osArchitecture = $.osArchitecture;
        this.osShortName = $.osShortName;
        this.osVersion = $.osVersion;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AssignmentOsTypeResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AssignmentOsTypeResponse $;

        public Builder() {
            $ = new AssignmentOsTypeResponse();
        }

        public Builder(AssignmentOsTypeResponse defaults) {
            $ = new AssignmentOsTypeResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param osArchitecture Targets VM instances with OS Inventory enabled and having the following OS architecture.
         * 
         * @return builder
         * 
         */
        public Builder osArchitecture(String osArchitecture) {
            $.osArchitecture = osArchitecture;
            return this;
        }

        /**
         * @param osShortName Targets VM instances with OS Inventory enabled and having the following OS short name, for example &#34;debian&#34; or &#34;windows&#34;.
         * 
         * @return builder
         * 
         */
        public Builder osShortName(String osShortName) {
            $.osShortName = osShortName;
            return this;
        }

        /**
         * @param osVersion Targets VM instances with OS Inventory enabled and having the following following OS version.
         * 
         * @return builder
         * 
         */
        public Builder osVersion(String osVersion) {
            $.osVersion = osVersion;
            return this;
        }

        public AssignmentOsTypeResponse build() {
            $.osArchitecture = Objects.requireNonNull($.osArchitecture, "expected parameter 'osArchitecture' to be non-null");
            $.osShortName = Objects.requireNonNull($.osShortName, "expected parameter 'osShortName' to be non-null");
            $.osVersion = Objects.requireNonNull($.osVersion, "expected parameter 'osVersion' to be non-null");
            return $;
        }
    }

}
