// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.vmmigration_v1;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class CutoverJobArgs extends com.pulumi.resources.ResourceArgs {

    public static final CutoverJobArgs Empty = new CutoverJobArgs();

    @Import(name="cutoverJobId", required=true)
      private final Output<String> cutoverJobId;

    public Output<String> cutoverJobId() {
        return this.cutoverJobId;
    }

    @Import(name="location")
      private final @Nullable Output<String> location;

    public Output<String> location() {
        return this.location == null ? Codegen.empty() : this.location;
    }

    @Import(name="migratingVmId", required=true)
      private final Output<String> migratingVmId;

    public Output<String> migratingVmId() {
        return this.migratingVmId;
    }

    @Import(name="project")
      private final @Nullable Output<String> project;

    public Output<String> project() {
        return this.project == null ? Codegen.empty() : this.project;
    }

    @Import(name="requestId")
      private final @Nullable Output<String> requestId;

    public Output<String> requestId() {
        return this.requestId == null ? Codegen.empty() : this.requestId;
    }

    @Import(name="sourceId", required=true)
      private final Output<String> sourceId;

    public Output<String> sourceId() {
        return this.sourceId;
    }

    public CutoverJobArgs(
        Output<String> cutoverJobId,
        @Nullable Output<String> location,
        Output<String> migratingVmId,
        @Nullable Output<String> project,
        @Nullable Output<String> requestId,
        Output<String> sourceId) {
        this.cutoverJobId = Objects.requireNonNull(cutoverJobId, "expected parameter 'cutoverJobId' to be non-null");
        this.location = location;
        this.migratingVmId = Objects.requireNonNull(migratingVmId, "expected parameter 'migratingVmId' to be non-null");
        this.project = project;
        this.requestId = requestId;
        this.sourceId = Objects.requireNonNull(sourceId, "expected parameter 'sourceId' to be non-null");
    }

    private CutoverJobArgs() {
        this.cutoverJobId = Codegen.empty();
        this.location = Codegen.empty();
        this.migratingVmId = Codegen.empty();
        this.project = Codegen.empty();
        this.requestId = Codegen.empty();
        this.sourceId = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CutoverJobArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> cutoverJobId;
        private @Nullable Output<String> location;
        private Output<String> migratingVmId;
        private @Nullable Output<String> project;
        private @Nullable Output<String> requestId;
        private Output<String> sourceId;

        public Builder() {
    	      // Empty
        }

        public Builder(CutoverJobArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cutoverJobId = defaults.cutoverJobId;
    	      this.location = defaults.location;
    	      this.migratingVmId = defaults.migratingVmId;
    	      this.project = defaults.project;
    	      this.requestId = defaults.requestId;
    	      this.sourceId = defaults.sourceId;
        }

        public Builder cutoverJobId(Output<String> cutoverJobId) {
            this.cutoverJobId = Objects.requireNonNull(cutoverJobId);
            return this;
        }
        public Builder cutoverJobId(String cutoverJobId) {
            this.cutoverJobId = Output.of(Objects.requireNonNull(cutoverJobId));
            return this;
        }
        public Builder location(@Nullable Output<String> location) {
            this.location = location;
            return this;
        }
        public Builder location(@Nullable String location) {
            this.location = Codegen.ofNullable(location);
            return this;
        }
        public Builder migratingVmId(Output<String> migratingVmId) {
            this.migratingVmId = Objects.requireNonNull(migratingVmId);
            return this;
        }
        public Builder migratingVmId(String migratingVmId) {
            this.migratingVmId = Output.of(Objects.requireNonNull(migratingVmId));
            return this;
        }
        public Builder project(@Nullable Output<String> project) {
            this.project = project;
            return this;
        }
        public Builder project(@Nullable String project) {
            this.project = Codegen.ofNullable(project);
            return this;
        }
        public Builder requestId(@Nullable Output<String> requestId) {
            this.requestId = requestId;
            return this;
        }
        public Builder requestId(@Nullable String requestId) {
            this.requestId = Codegen.ofNullable(requestId);
            return this;
        }
        public Builder sourceId(Output<String> sourceId) {
            this.sourceId = Objects.requireNonNull(sourceId);
            return this;
        }
        public Builder sourceId(String sourceId) {
            this.sourceId = Output.of(Objects.requireNonNull(sourceId));
            return this;
        }        public CutoverJobArgs build() {
            return new CutoverJobArgs(cutoverJobId, location, migratingVmId, project, requestId, sourceId);
        }
    }
}
