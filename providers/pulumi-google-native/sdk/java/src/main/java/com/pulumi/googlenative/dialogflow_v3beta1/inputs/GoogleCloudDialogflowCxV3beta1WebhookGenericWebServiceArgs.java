// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.dialogflow_v3beta1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Represents configuration for a generic web service.
 * 
 */
public final class GoogleCloudDialogflowCxV3beta1WebhookGenericWebServiceArgs extends com.pulumi.resources.ResourceArgs {

    public static final GoogleCloudDialogflowCxV3beta1WebhookGenericWebServiceArgs Empty = new GoogleCloudDialogflowCxV3beta1WebhookGenericWebServiceArgs();

    /**
     * Optional. Specifies a list of allowed custom CA certificates (in DER format) for HTTPS verification. This overrides the default SSL trust store. If this is empty or unspecified, Dialogflow will use Google&#39;s default trust store to verify certificates. N.B. Make sure the HTTPS server certificates are signed with &#34;subject alt name&#34;. For instance a certificate can be self-signed using the following command, openssl x509 -req -days 200 -in example.com.csr \ -signkey example.com.key \ -out example.com.crt \ -extfile &lt;(printf &#34;\nsubjectAltName=&#39;DNS:www.example.com&#39;&#34;)
     * 
     */
    @Import(name="allowedCaCerts")
    private @Nullable Output<List<String>> allowedCaCerts;

    public Optional<Output<List<String>>> allowedCaCerts() {
        return Optional.ofNullable(this.allowedCaCerts);
    }

    /**
     * The password for HTTP Basic authentication.
     * 
     */
    @Import(name="password")
    private @Nullable Output<String> password;

    public Optional<Output<String>> password() {
        return Optional.ofNullable(this.password);
    }

    /**
     * The HTTP request headers to send together with webhook requests.
     * 
     */
    @Import(name="requestHeaders")
    private @Nullable Output<Map<String,String>> requestHeaders;

    public Optional<Output<Map<String,String>>> requestHeaders() {
        return Optional.ofNullable(this.requestHeaders);
    }

    /**
     * The webhook URI for receiving POST requests. It must use https protocol.
     * 
     */
    @Import(name="uri", required=true)
    private Output<String> uri;

    public Output<String> uri() {
        return this.uri;
    }

    /**
     * The user name for HTTP Basic authentication.
     * 
     */
    @Import(name="username")
    private @Nullable Output<String> username;

    public Optional<Output<String>> username() {
        return Optional.ofNullable(this.username);
    }

    private GoogleCloudDialogflowCxV3beta1WebhookGenericWebServiceArgs() {}

    private GoogleCloudDialogflowCxV3beta1WebhookGenericWebServiceArgs(GoogleCloudDialogflowCxV3beta1WebhookGenericWebServiceArgs $) {
        this.allowedCaCerts = $.allowedCaCerts;
        this.password = $.password;
        this.requestHeaders = $.requestHeaders;
        this.uri = $.uri;
        this.username = $.username;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GoogleCloudDialogflowCxV3beta1WebhookGenericWebServiceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GoogleCloudDialogflowCxV3beta1WebhookGenericWebServiceArgs $;

        public Builder() {
            $ = new GoogleCloudDialogflowCxV3beta1WebhookGenericWebServiceArgs();
        }

        public Builder(GoogleCloudDialogflowCxV3beta1WebhookGenericWebServiceArgs defaults) {
            $ = new GoogleCloudDialogflowCxV3beta1WebhookGenericWebServiceArgs(Objects.requireNonNull(defaults));
        }

        public Builder allowedCaCerts(@Nullable Output<List<String>> allowedCaCerts) {
            $.allowedCaCerts = allowedCaCerts;
            return this;
        }

        public Builder allowedCaCerts(List<String> allowedCaCerts) {
            return allowedCaCerts(Output.of(allowedCaCerts));
        }

        public Builder allowedCaCerts(String... allowedCaCerts) {
            return allowedCaCerts(List.of(allowedCaCerts));
        }

        public Builder password(@Nullable Output<String> password) {
            $.password = password;
            return this;
        }

        public Builder password(String password) {
            return password(Output.of(password));
        }

        public Builder requestHeaders(@Nullable Output<Map<String,String>> requestHeaders) {
            $.requestHeaders = requestHeaders;
            return this;
        }

        public Builder requestHeaders(Map<String,String> requestHeaders) {
            return requestHeaders(Output.of(requestHeaders));
        }

        public Builder uri(Output<String> uri) {
            $.uri = uri;
            return this;
        }

        public Builder uri(String uri) {
            return uri(Output.of(uri));
        }

        public Builder username(@Nullable Output<String> username) {
            $.username = username;
            return this;
        }

        public Builder username(String username) {
            return username(Output.of(username));
        }

        public GoogleCloudDialogflowCxV3beta1WebhookGenericWebServiceArgs build() {
            $.uri = Objects.requireNonNull($.uri, "expected parameter 'uri' to be non-null");
            return $;
        }
    }

}
