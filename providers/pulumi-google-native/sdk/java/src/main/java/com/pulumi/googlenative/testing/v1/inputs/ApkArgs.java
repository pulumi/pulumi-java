// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.testing.v1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.testing.v1.inputs.FileReferenceArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * An Android package file to install.
 * 
 */
public final class ApkArgs extends com.pulumi.resources.ResourceArgs {

    public static final ApkArgs Empty = new ApkArgs();

    /**
     * The path to an APK to be installed on the device before the test begins.
     * 
     */
    @Import(name="location")
    private @Nullable Output<FileReferenceArgs> location;

    /**
     * @return The path to an APK to be installed on the device before the test begins.
     * 
     */
    public Optional<Output<FileReferenceArgs>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * The java package for the APK to be installed. Value is determined by examining the application&#39;s manifest.
     * 
     */
    @Import(name="packageName")
    private @Nullable Output<String> packageName;

    /**
     * @return The java package for the APK to be installed. Value is determined by examining the application&#39;s manifest.
     * 
     */
    public Optional<Output<String>> packageName() {
        return Optional.ofNullable(this.packageName);
    }

    private ApkArgs() {}

    private ApkArgs(ApkArgs $) {
        this.location = $.location;
        this.packageName = $.packageName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ApkArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApkArgs $;

        public Builder() {
            $ = new ApkArgs();
        }

        public Builder(ApkArgs defaults) {
            $ = new ApkArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param location The path to an APK to be installed on the device before the test begins.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<FileReferenceArgs> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location The path to an APK to be installed on the device before the test begins.
         * 
         * @return builder
         * 
         */
        public Builder location(FileReferenceArgs location) {
            return location(Output.of(location));
        }

        /**
         * @param packageName The java package for the APK to be installed. Value is determined by examining the application&#39;s manifest.
         * 
         * @return builder
         * 
         */
        public Builder packageName(@Nullable Output<String> packageName) {
            $.packageName = packageName;
            return this;
        }

        /**
         * @param packageName The java package for the APK to be installed. Value is determined by examining the application&#39;s manifest.
         * 
         * @return builder
         * 
         */
        public Builder packageName(String packageName) {
            return packageName(Output.of(packageName));
        }

        public ApkArgs build() {
            return $;
        }
    }

}
