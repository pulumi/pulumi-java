// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.containeranalysis.v1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.containeranalysis.v1.enums.DiscoveryNoteAnalysisKind;
import java.util.Objects;


/**
 * A note that indicates a type of analysis a provider would perform. This note exists in a provider&#39;s project. A `Discovery` occurrence is created in a consumer&#39;s project at the start of analysis.
 * 
 */
public final class DiscoveryNoteArgs extends com.pulumi.resources.ResourceArgs {

    public static final DiscoveryNoteArgs Empty = new DiscoveryNoteArgs();

    /**
     * Immutable. The kind of analysis that is handled by this discovery.
     * 
     */
    @Import(name="analysisKind", required=true)
    private Output<DiscoveryNoteAnalysisKind> analysisKind;

    /**
     * @return Immutable. The kind of analysis that is handled by this discovery.
     * 
     */
    public Output<DiscoveryNoteAnalysisKind> analysisKind() {
        return this.analysisKind;
    }

    private DiscoveryNoteArgs() {}

    private DiscoveryNoteArgs(DiscoveryNoteArgs $) {
        this.analysisKind = $.analysisKind;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DiscoveryNoteArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DiscoveryNoteArgs $;

        public Builder() {
            $ = new DiscoveryNoteArgs();
        }

        public Builder(DiscoveryNoteArgs defaults) {
            $ = new DiscoveryNoteArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param analysisKind Immutable. The kind of analysis that is handled by this discovery.
         * 
         * @return builder
         * 
         */
        public Builder analysisKind(Output<DiscoveryNoteAnalysisKind> analysisKind) {
            $.analysisKind = analysisKind;
            return this;
        }

        /**
         * @param analysisKind Immutable. The kind of analysis that is handled by this discovery.
         * 
         * @return builder
         * 
         */
        public Builder analysisKind(DiscoveryNoteAnalysisKind analysisKind) {
            return analysisKind(Output.of(analysisKind));
        }

        public DiscoveryNoteArgs build() {
            $.analysisKind = Objects.requireNonNull($.analysisKind, "expected parameter 'analysisKind' to be non-null");
            return $;
        }
    }

}
