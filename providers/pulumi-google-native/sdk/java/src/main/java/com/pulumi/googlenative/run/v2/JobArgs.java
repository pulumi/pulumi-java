// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.run.v2;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.run.v2.enums.JobLaunchStage;
import com.pulumi.googlenative.run.v2.inputs.GoogleCloudRunV2BinaryAuthorizationArgs;
import com.pulumi.googlenative.run.v2.inputs.GoogleCloudRunV2ExecutionTemplateArgs;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class JobArgs extends com.pulumi.resources.ResourceArgs {

    public static final JobArgs Empty = new JobArgs();

    /**
     * KRM-style annotations for the resource. Unstructured key value map that may be set by external tools to store and arbitrary metadata. They are not queryable and should be preserved when modifying objects. Cloud Run will populate some annotations using &#39;run.googleapis.com&#39; or &#39;serving.knative.dev&#39; namespaces. This field follows Kubernetes annotations&#39; namespacing, limits, and rules. More info: https://kubernetes.io/docs/user-guide/annotations
     * 
     */
    @Import(name="annotations")
    private @Nullable Output<Map<String,String>> annotations;

    /**
     * @return KRM-style annotations for the resource. Unstructured key value map that may be set by external tools to store and arbitrary metadata. They are not queryable and should be preserved when modifying objects. Cloud Run will populate some annotations using &#39;run.googleapis.com&#39; or &#39;serving.knative.dev&#39; namespaces. This field follows Kubernetes annotations&#39; namespacing, limits, and rules. More info: https://kubernetes.io/docs/user-guide/annotations
     * 
     */
    public Optional<Output<Map<String,String>>> annotations() {
        return Optional.ofNullable(this.annotations);
    }

    /**
     * Settings for the Binary Authorization feature.
     * 
     */
    @Import(name="binaryAuthorization")
    private @Nullable Output<GoogleCloudRunV2BinaryAuthorizationArgs> binaryAuthorization;

    /**
     * @return Settings for the Binary Authorization feature.
     * 
     */
    public Optional<Output<GoogleCloudRunV2BinaryAuthorizationArgs>> binaryAuthorization() {
        return Optional.ofNullable(this.binaryAuthorization);
    }

    /**
     * Arbitrary identifier for the API client.
     * 
     */
    @Import(name="client")
    private @Nullable Output<String> client;

    /**
     * @return Arbitrary identifier for the API client.
     * 
     */
    public Optional<Output<String>> client() {
        return Optional.ofNullable(this.client);
    }

    /**
     * Arbitrary version identifier for the API client.
     * 
     */
    @Import(name="clientVersion")
    private @Nullable Output<String> clientVersion;

    /**
     * @return Arbitrary version identifier for the API client.
     * 
     */
    public Optional<Output<String>> clientVersion() {
        return Optional.ofNullable(this.clientVersion);
    }

    /**
     * Required. The unique identifier for the Job. The name of the job becomes {parent}/jobs/{job_id}.
     * 
     */
    @Import(name="jobId", required=true)
    private Output<String> jobId;

    /**
     * @return Required. The unique identifier for the Job. The name of the job becomes {parent}/jobs/{job_id}.
     * 
     */
    public Output<String> jobId() {
        return this.jobId;
    }

    /**
     * KRM-style labels for the resource. User-provided labels are shared with Google&#39;s billing system, so they can be used to filter, or break down billing charges by team, component, environment, state, etc. For more information, visit https://cloud.google.com/resource-manager/docs/creating-managing-labels or https://cloud.google.com/run/docs/configuring/labels Cloud Run will populate some labels with &#39;run.googleapis.com&#39; or &#39;serving.knative.dev&#39; namespaces. Those labels are read-only, and user changes will not be preserved.
     * 
     */
    @Import(name="labels")
    private @Nullable Output<Map<String,String>> labels;

    /**
     * @return KRM-style labels for the resource. User-provided labels are shared with Google&#39;s billing system, so they can be used to filter, or break down billing charges by team, component, environment, state, etc. For more information, visit https://cloud.google.com/resource-manager/docs/creating-managing-labels or https://cloud.google.com/run/docs/configuring/labels Cloud Run will populate some labels with &#39;run.googleapis.com&#39; or &#39;serving.knative.dev&#39; namespaces. Those labels are read-only, and user changes will not be preserved.
     * 
     */
    public Optional<Output<Map<String,String>>> labels() {
        return Optional.ofNullable(this.labels);
    }

    /**
     * The launch stage as defined by [Google Cloud Platform Launch Stages](https://cloud.google.com/terms/launch-stages). Cloud Run supports `ALPHA`, `BETA`, and `GA`. If no value is specified, GA is assumed.
     * 
     */
    @Import(name="launchStage")
    private @Nullable Output<JobLaunchStage> launchStage;

    /**
     * @return The launch stage as defined by [Google Cloud Platform Launch Stages](https://cloud.google.com/terms/launch-stages). Cloud Run supports `ALPHA`, `BETA`, and `GA`. If no value is specified, GA is assumed.
     * 
     */
    public Optional<Output<JobLaunchStage>> launchStage() {
        return Optional.ofNullable(this.launchStage);
    }

    @Import(name="location")
    private @Nullable Output<String> location;

    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * The fully qualified name of this Job. Format: projects/{project}/locations/{location}/jobs/{job}
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The fully qualified name of this Job. Format: projects/{project}/locations/{location}/jobs/{job}
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="project")
    private @Nullable Output<String> project;

    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * The template used to create executions for this Job.
     * 
     */
    @Import(name="template", required=true)
    private Output<GoogleCloudRunV2ExecutionTemplateArgs> template;

    /**
     * @return The template used to create executions for this Job.
     * 
     */
    public Output<GoogleCloudRunV2ExecutionTemplateArgs> template() {
        return this.template;
    }

    /**
     * Indicates that the request should be validated and default values populated, without persisting the request or creating any resources.
     * 
     */
    @Import(name="validateOnly")
    private @Nullable Output<String> validateOnly;

    /**
     * @return Indicates that the request should be validated and default values populated, without persisting the request or creating any resources.
     * 
     */
    public Optional<Output<String>> validateOnly() {
        return Optional.ofNullable(this.validateOnly);
    }

    private JobArgs() {}

    private JobArgs(JobArgs $) {
        this.annotations = $.annotations;
        this.binaryAuthorization = $.binaryAuthorization;
        this.client = $.client;
        this.clientVersion = $.clientVersion;
        this.jobId = $.jobId;
        this.labels = $.labels;
        this.launchStage = $.launchStage;
        this.location = $.location;
        this.name = $.name;
        this.project = $.project;
        this.template = $.template;
        this.validateOnly = $.validateOnly;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(JobArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private JobArgs $;

        public Builder() {
            $ = new JobArgs();
        }

        public Builder(JobArgs defaults) {
            $ = new JobArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param annotations KRM-style annotations for the resource. Unstructured key value map that may be set by external tools to store and arbitrary metadata. They are not queryable and should be preserved when modifying objects. Cloud Run will populate some annotations using &#39;run.googleapis.com&#39; or &#39;serving.knative.dev&#39; namespaces. This field follows Kubernetes annotations&#39; namespacing, limits, and rules. More info: https://kubernetes.io/docs/user-guide/annotations
         * 
         * @return builder
         * 
         */
        public Builder annotations(@Nullable Output<Map<String,String>> annotations) {
            $.annotations = annotations;
            return this;
        }

        /**
         * @param annotations KRM-style annotations for the resource. Unstructured key value map that may be set by external tools to store and arbitrary metadata. They are not queryable and should be preserved when modifying objects. Cloud Run will populate some annotations using &#39;run.googleapis.com&#39; or &#39;serving.knative.dev&#39; namespaces. This field follows Kubernetes annotations&#39; namespacing, limits, and rules. More info: https://kubernetes.io/docs/user-guide/annotations
         * 
         * @return builder
         * 
         */
        public Builder annotations(Map<String,String> annotations) {
            return annotations(Output.of(annotations));
        }

        /**
         * @param binaryAuthorization Settings for the Binary Authorization feature.
         * 
         * @return builder
         * 
         */
        public Builder binaryAuthorization(@Nullable Output<GoogleCloudRunV2BinaryAuthorizationArgs> binaryAuthorization) {
            $.binaryAuthorization = binaryAuthorization;
            return this;
        }

        /**
         * @param binaryAuthorization Settings for the Binary Authorization feature.
         * 
         * @return builder
         * 
         */
        public Builder binaryAuthorization(GoogleCloudRunV2BinaryAuthorizationArgs binaryAuthorization) {
            return binaryAuthorization(Output.of(binaryAuthorization));
        }

        /**
         * @param client Arbitrary identifier for the API client.
         * 
         * @return builder
         * 
         */
        public Builder client(@Nullable Output<String> client) {
            $.client = client;
            return this;
        }

        /**
         * @param client Arbitrary identifier for the API client.
         * 
         * @return builder
         * 
         */
        public Builder client(String client) {
            return client(Output.of(client));
        }

        /**
         * @param clientVersion Arbitrary version identifier for the API client.
         * 
         * @return builder
         * 
         */
        public Builder clientVersion(@Nullable Output<String> clientVersion) {
            $.clientVersion = clientVersion;
            return this;
        }

        /**
         * @param clientVersion Arbitrary version identifier for the API client.
         * 
         * @return builder
         * 
         */
        public Builder clientVersion(String clientVersion) {
            return clientVersion(Output.of(clientVersion));
        }

        /**
         * @param jobId Required. The unique identifier for the Job. The name of the job becomes {parent}/jobs/{job_id}.
         * 
         * @return builder
         * 
         */
        public Builder jobId(Output<String> jobId) {
            $.jobId = jobId;
            return this;
        }

        /**
         * @param jobId Required. The unique identifier for the Job. The name of the job becomes {parent}/jobs/{job_id}.
         * 
         * @return builder
         * 
         */
        public Builder jobId(String jobId) {
            return jobId(Output.of(jobId));
        }

        /**
         * @param labels KRM-style labels for the resource. User-provided labels are shared with Google&#39;s billing system, so they can be used to filter, or break down billing charges by team, component, environment, state, etc. For more information, visit https://cloud.google.com/resource-manager/docs/creating-managing-labels or https://cloud.google.com/run/docs/configuring/labels Cloud Run will populate some labels with &#39;run.googleapis.com&#39; or &#39;serving.knative.dev&#39; namespaces. Those labels are read-only, and user changes will not be preserved.
         * 
         * @return builder
         * 
         */
        public Builder labels(@Nullable Output<Map<String,String>> labels) {
            $.labels = labels;
            return this;
        }

        /**
         * @param labels KRM-style labels for the resource. User-provided labels are shared with Google&#39;s billing system, so they can be used to filter, or break down billing charges by team, component, environment, state, etc. For more information, visit https://cloud.google.com/resource-manager/docs/creating-managing-labels or https://cloud.google.com/run/docs/configuring/labels Cloud Run will populate some labels with &#39;run.googleapis.com&#39; or &#39;serving.knative.dev&#39; namespaces. Those labels are read-only, and user changes will not be preserved.
         * 
         * @return builder
         * 
         */
        public Builder labels(Map<String,String> labels) {
            return labels(Output.of(labels));
        }

        /**
         * @param launchStage The launch stage as defined by [Google Cloud Platform Launch Stages](https://cloud.google.com/terms/launch-stages). Cloud Run supports `ALPHA`, `BETA`, and `GA`. If no value is specified, GA is assumed.
         * 
         * @return builder
         * 
         */
        public Builder launchStage(@Nullable Output<JobLaunchStage> launchStage) {
            $.launchStage = launchStage;
            return this;
        }

        /**
         * @param launchStage The launch stage as defined by [Google Cloud Platform Launch Stages](https://cloud.google.com/terms/launch-stages). Cloud Run supports `ALPHA`, `BETA`, and `GA`. If no value is specified, GA is assumed.
         * 
         * @return builder
         * 
         */
        public Builder launchStage(JobLaunchStage launchStage) {
            return launchStage(Output.of(launchStage));
        }

        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param name The fully qualified name of this Job. Format: projects/{project}/locations/{location}/jobs/{job}
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The fully qualified name of this Job. Format: projects/{project}/locations/{location}/jobs/{job}
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        public Builder project(String project) {
            return project(Output.of(project));
        }

        /**
         * @param template The template used to create executions for this Job.
         * 
         * @return builder
         * 
         */
        public Builder template(Output<GoogleCloudRunV2ExecutionTemplateArgs> template) {
            $.template = template;
            return this;
        }

        /**
         * @param template The template used to create executions for this Job.
         * 
         * @return builder
         * 
         */
        public Builder template(GoogleCloudRunV2ExecutionTemplateArgs template) {
            return template(Output.of(template));
        }

        /**
         * @param validateOnly Indicates that the request should be validated and default values populated, without persisting the request or creating any resources.
         * 
         * @return builder
         * 
         */
        public Builder validateOnly(@Nullable Output<String> validateOnly) {
            $.validateOnly = validateOnly;
            return this;
        }

        /**
         * @param validateOnly Indicates that the request should be validated and default values populated, without persisting the request or creating any resources.
         * 
         * @return builder
         * 
         */
        public Builder validateOnly(String validateOnly) {
            return validateOnly(Output.of(validateOnly));
        }

        public JobArgs build() {
            $.jobId = Objects.requireNonNull($.jobId, "expected parameter 'jobId' to be non-null");
            $.template = Objects.requireNonNull($.template, "expected parameter 'template' to be non-null");
            return $;
        }
    }

}
