// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.dataflow_v1b3.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Defines a SDK harness container for executing Dataflow pipelines.
 * 
 */
public final class SdkHarnessContainerImageArgs extends com.pulumi.resources.ResourceArgs {

    public static final SdkHarnessContainerImageArgs Empty = new SdkHarnessContainerImageArgs();

    /**
     * A docker container image that resides in Google Container Registry.
     * 
     */
    @Import(name="containerImage")
    private @Nullable Output<String> containerImage;

    /**
     * @return A docker container image that resides in Google Container Registry.
     * 
     */
    public Optional<Output<String>> containerImage() {
        return Optional.ofNullable(this.containerImage);
    }

    /**
     * Environment ID for the Beam runner API proto Environment that corresponds to the current SDK Harness.
     * 
     */
    @Import(name="environmentId")
    private @Nullable Output<String> environmentId;

    /**
     * @return Environment ID for the Beam runner API proto Environment that corresponds to the current SDK Harness.
     * 
     */
    public Optional<Output<String>> environmentId() {
        return Optional.ofNullable(this.environmentId);
    }

    /**
     * If true, recommends the Dataflow service to use only one core per SDK container instance with this image. If false (or unset) recommends using more than one core per SDK container instance with this image for efficiency. Note that Dataflow service may choose to override this property if needed.
     * 
     */
    @Import(name="useSingleCorePerContainer")
    private @Nullable Output<Boolean> useSingleCorePerContainer;

    /**
     * @return If true, recommends the Dataflow service to use only one core per SDK container instance with this image. If false (or unset) recommends using more than one core per SDK container instance with this image for efficiency. Note that Dataflow service may choose to override this property if needed.
     * 
     */
    public Optional<Output<Boolean>> useSingleCorePerContainer() {
        return Optional.ofNullable(this.useSingleCorePerContainer);
    }

    private SdkHarnessContainerImageArgs() {}

    private SdkHarnessContainerImageArgs(SdkHarnessContainerImageArgs $) {
        this.containerImage = $.containerImage;
        this.environmentId = $.environmentId;
        this.useSingleCorePerContainer = $.useSingleCorePerContainer;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SdkHarnessContainerImageArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SdkHarnessContainerImageArgs $;

        public Builder() {
            $ = new SdkHarnessContainerImageArgs();
        }

        public Builder(SdkHarnessContainerImageArgs defaults) {
            $ = new SdkHarnessContainerImageArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param containerImage A docker container image that resides in Google Container Registry.
         * 
         * @return builder
         * 
         */
        public Builder containerImage(@Nullable Output<String> containerImage) {
            $.containerImage = containerImage;
            return this;
        }

        /**
         * @param containerImage A docker container image that resides in Google Container Registry.
         * 
         * @return builder
         * 
         */
        public Builder containerImage(String containerImage) {
            return containerImage(Output.of(containerImage));
        }

        /**
         * @param environmentId Environment ID for the Beam runner API proto Environment that corresponds to the current SDK Harness.
         * 
         * @return builder
         * 
         */
        public Builder environmentId(@Nullable Output<String> environmentId) {
            $.environmentId = environmentId;
            return this;
        }

        /**
         * @param environmentId Environment ID for the Beam runner API proto Environment that corresponds to the current SDK Harness.
         * 
         * @return builder
         * 
         */
        public Builder environmentId(String environmentId) {
            return environmentId(Output.of(environmentId));
        }

        /**
         * @param useSingleCorePerContainer If true, recommends the Dataflow service to use only one core per SDK container instance with this image. If false (or unset) recommends using more than one core per SDK container instance with this image for efficiency. Note that Dataflow service may choose to override this property if needed.
         * 
         * @return builder
         * 
         */
        public Builder useSingleCorePerContainer(@Nullable Output<Boolean> useSingleCorePerContainer) {
            $.useSingleCorePerContainer = useSingleCorePerContainer;
            return this;
        }

        /**
         * @param useSingleCorePerContainer If true, recommends the Dataflow service to use only one core per SDK container instance with this image. If false (or unset) recommends using more than one core per SDK container instance with this image for efficiency. Note that Dataflow service may choose to override this property if needed.
         * 
         * @return builder
         * 
         */
        public Builder useSingleCorePerContainer(Boolean useSingleCorePerContainer) {
            return useSingleCorePerContainer(Output.of(useSingleCorePerContainer));
        }

        public SdkHarnessContainerImageArgs build() {
            return $;
        }
    }

}
