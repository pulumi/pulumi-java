// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.datapipelines_v1.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.datapipelines_v1.inputs.GoogleCloudDatapipelinesV1LaunchTemplateParametersResponse;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;


/**
 * A request to launch a template.
 * 
 */
public final class GoogleCloudDatapipelinesV1LaunchTemplateRequestResponse extends com.pulumi.resources.InvokeArgs {

    public static final GoogleCloudDatapipelinesV1LaunchTemplateRequestResponse Empty = new GoogleCloudDatapipelinesV1LaunchTemplateRequestResponse();

    /**
     * A Cloud Storage path to the template from which to create the job. Must be a valid Cloud Storage URL, beginning with &#39;gs://&#39;.
     * 
     */
    @Import(name="gcsPath", required=true)
    private String gcsPath;

    public String gcsPath() {
        return this.gcsPath;
    }

    /**
     * The parameters of the template to launch. This should be part of the body of the POST request.
     * 
     */
    @Import(name="launchParameters", required=true)
    private GoogleCloudDatapipelinesV1LaunchTemplateParametersResponse launchParameters;

    public GoogleCloudDatapipelinesV1LaunchTemplateParametersResponse launchParameters() {
        return this.launchParameters;
    }

    /**
     * The [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) to which to direct the request.
     * 
     */
    @Import(name="location", required=true)
    private String location;

    public String location() {
        return this.location;
    }

    /**
     * The ID of the Cloud Platform project that the job belongs to.
     * 
     */
    @Import(name="project", required=true)
    private String project;

    public String project() {
        return this.project;
    }

    /**
     * If true, the request is validated but not actually executed. Defaults to false.
     * 
     */
    @Import(name="validateOnly", required=true)
    private Boolean validateOnly;

    public Boolean validateOnly() {
        return this.validateOnly;
    }

    private GoogleCloudDatapipelinesV1LaunchTemplateRequestResponse() {}

    private GoogleCloudDatapipelinesV1LaunchTemplateRequestResponse(GoogleCloudDatapipelinesV1LaunchTemplateRequestResponse $) {
        this.gcsPath = $.gcsPath;
        this.launchParameters = $.launchParameters;
        this.location = $.location;
        this.project = $.project;
        this.validateOnly = $.validateOnly;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GoogleCloudDatapipelinesV1LaunchTemplateRequestResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GoogleCloudDatapipelinesV1LaunchTemplateRequestResponse $;

        public Builder() {
            $ = new GoogleCloudDatapipelinesV1LaunchTemplateRequestResponse();
        }

        public Builder(GoogleCloudDatapipelinesV1LaunchTemplateRequestResponse defaults) {
            $ = new GoogleCloudDatapipelinesV1LaunchTemplateRequestResponse(Objects.requireNonNull(defaults));
        }

        public Builder gcsPath(String gcsPath) {
            $.gcsPath = gcsPath;
            return this;
        }

        public Builder launchParameters(GoogleCloudDatapipelinesV1LaunchTemplateParametersResponse launchParameters) {
            $.launchParameters = launchParameters;
            return this;
        }

        public Builder location(String location) {
            $.location = location;
            return this;
        }

        public Builder project(String project) {
            $.project = project;
            return this;
        }

        public Builder validateOnly(Boolean validateOnly) {
            $.validateOnly = validateOnly;
            return this;
        }

        public GoogleCloudDatapipelinesV1LaunchTemplateRequestResponse build() {
            $.gcsPath = Objects.requireNonNull($.gcsPath, "expected parameter 'gcsPath' to be non-null");
            $.launchParameters = Objects.requireNonNull($.launchParameters, "expected parameter 'launchParameters' to be non-null");
            $.location = Objects.requireNonNull($.location, "expected parameter 'location' to be non-null");
            $.project = Objects.requireNonNull($.project, "expected parameter 'project' to be non-null");
            $.validateOnly = Objects.requireNonNull($.validateOnly, "expected parameter 'validateOnly' to be non-null");
            return $;
        }
    }

}
