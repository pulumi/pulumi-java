// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.dialogflow.v2beta1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.dialogflow.v2beta1.enums.GoogleCloudDialogflowV2beta1NotificationConfigMessageFormat;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Defines notification behavior.
 * 
 */
public final class GoogleCloudDialogflowV2beta1NotificationConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final GoogleCloudDialogflowV2beta1NotificationConfigArgs Empty = new GoogleCloudDialogflowV2beta1NotificationConfigArgs();

    /**
     * Format of message.
     * 
     */
    @Import(name="messageFormat")
    private @Nullable Output<GoogleCloudDialogflowV2beta1NotificationConfigMessageFormat> messageFormat;

    /**
     * @return Format of message.
     * 
     */
    public Optional<Output<GoogleCloudDialogflowV2beta1NotificationConfigMessageFormat>> messageFormat() {
        return Optional.ofNullable(this.messageFormat);
    }

    /**
     * Name of the Pub/Sub topic to publish conversation events like CONVERSATION_STARTED as serialized ConversationEvent protos. For telephony integration to receive notification, make sure either this topic is in the same project as the conversation or you grant `service-@gcp-sa-dialogflow.iam.gserviceaccount.com` the `Dialogflow Service Agent` role in the topic project. For chat integration to receive notification, make sure API caller has been granted the `Dialogflow Service Agent` role for the topic. Format: `projects//locations//topics/`.
     * 
     */
    @Import(name="topic")
    private @Nullable Output<String> topic;

    /**
     * @return Name of the Pub/Sub topic to publish conversation events like CONVERSATION_STARTED as serialized ConversationEvent protos. For telephony integration to receive notification, make sure either this topic is in the same project as the conversation or you grant `service-@gcp-sa-dialogflow.iam.gserviceaccount.com` the `Dialogflow Service Agent` role in the topic project. For chat integration to receive notification, make sure API caller has been granted the `Dialogflow Service Agent` role for the topic. Format: `projects//locations//topics/`.
     * 
     */
    public Optional<Output<String>> topic() {
        return Optional.ofNullable(this.topic);
    }

    private GoogleCloudDialogflowV2beta1NotificationConfigArgs() {}

    private GoogleCloudDialogflowV2beta1NotificationConfigArgs(GoogleCloudDialogflowV2beta1NotificationConfigArgs $) {
        this.messageFormat = $.messageFormat;
        this.topic = $.topic;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GoogleCloudDialogflowV2beta1NotificationConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GoogleCloudDialogflowV2beta1NotificationConfigArgs $;

        public Builder() {
            $ = new GoogleCloudDialogflowV2beta1NotificationConfigArgs();
        }

        public Builder(GoogleCloudDialogflowV2beta1NotificationConfigArgs defaults) {
            $ = new GoogleCloudDialogflowV2beta1NotificationConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param messageFormat Format of message.
         * 
         * @return builder
         * 
         */
        public Builder messageFormat(@Nullable Output<GoogleCloudDialogflowV2beta1NotificationConfigMessageFormat> messageFormat) {
            $.messageFormat = messageFormat;
            return this;
        }

        /**
         * @param messageFormat Format of message.
         * 
         * @return builder
         * 
         */
        public Builder messageFormat(GoogleCloudDialogflowV2beta1NotificationConfigMessageFormat messageFormat) {
            return messageFormat(Output.of(messageFormat));
        }

        /**
         * @param topic Name of the Pub/Sub topic to publish conversation events like CONVERSATION_STARTED as serialized ConversationEvent protos. For telephony integration to receive notification, make sure either this topic is in the same project as the conversation or you grant `service-@gcp-sa-dialogflow.iam.gserviceaccount.com` the `Dialogflow Service Agent` role in the topic project. For chat integration to receive notification, make sure API caller has been granted the `Dialogflow Service Agent` role for the topic. Format: `projects//locations//topics/`.
         * 
         * @return builder
         * 
         */
        public Builder topic(@Nullable Output<String> topic) {
            $.topic = topic;
            return this;
        }

        /**
         * @param topic Name of the Pub/Sub topic to publish conversation events like CONVERSATION_STARTED as serialized ConversationEvent protos. For telephony integration to receive notification, make sure either this topic is in the same project as the conversation or you grant `service-@gcp-sa-dialogflow.iam.gserviceaccount.com` the `Dialogflow Service Agent` role in the topic project. For chat integration to receive notification, make sure API caller has been granted the `Dialogflow Service Agent` role for the topic. Format: `projects//locations//topics/`.
         * 
         * @return builder
         * 
         */
        public Builder topic(String topic) {
            return topic(Output.of(topic));
        }

        public GoogleCloudDialogflowV2beta1NotificationConfigArgs build() {
            return $;
        }
    }

}
