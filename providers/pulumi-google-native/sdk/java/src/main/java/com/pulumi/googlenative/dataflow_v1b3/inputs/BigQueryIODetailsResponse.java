// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.dataflow_v1b3.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * Metadata for a BigQuery connector used by the job.
 * 
 */
public final class BigQueryIODetailsResponse extends com.pulumi.resources.InvokeArgs {

    public static final BigQueryIODetailsResponse Empty = new BigQueryIODetailsResponse();

    /**
     * Dataset accessed in the connection.
     * 
     */
    @Import(name="dataset", required=true)
    private String dataset;

    /**
     * @return Dataset accessed in the connection.
     * 
     */
    public String dataset() {
        return this.dataset;
    }

    /**
     * Project accessed in the connection.
     * 
     */
    @Import(name="project", required=true)
    private String project;

    /**
     * @return Project accessed in the connection.
     * 
     */
    public String project() {
        return this.project;
    }

    /**
     * Query used to access data in the connection.
     * 
     */
    @Import(name="query", required=true)
    private String query;

    /**
     * @return Query used to access data in the connection.
     * 
     */
    public String query() {
        return this.query;
    }

    /**
     * Table accessed in the connection.
     * 
     */
    @Import(name="table", required=true)
    private String table;

    /**
     * @return Table accessed in the connection.
     * 
     */
    public String table() {
        return this.table;
    }

    private BigQueryIODetailsResponse() {}

    private BigQueryIODetailsResponse(BigQueryIODetailsResponse $) {
        this.dataset = $.dataset;
        this.project = $.project;
        this.query = $.query;
        this.table = $.table;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BigQueryIODetailsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BigQueryIODetailsResponse $;

        public Builder() {
            $ = new BigQueryIODetailsResponse();
        }

        public Builder(BigQueryIODetailsResponse defaults) {
            $ = new BigQueryIODetailsResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param dataset Dataset accessed in the connection.
         * 
         * @return builder
         * 
         */
        public Builder dataset(String dataset) {
            $.dataset = dataset;
            return this;
        }

        /**
         * @param project Project accessed in the connection.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            $.project = project;
            return this;
        }

        /**
         * @param query Query used to access data in the connection.
         * 
         * @return builder
         * 
         */
        public Builder query(String query) {
            $.query = query;
            return this;
        }

        /**
         * @param table Table accessed in the connection.
         * 
         * @return builder
         * 
         */
        public Builder table(String table) {
            $.table = table;
            return this;
        }

        public BigQueryIODetailsResponse build() {
            $.dataset = Objects.requireNonNull($.dataset, "expected parameter 'dataset' to be non-null");
            $.project = Objects.requireNonNull($.project, "expected parameter 'project' to be non-null");
            $.query = Objects.requireNonNull($.query, "expected parameter 'query' to be non-null");
            $.table = Objects.requireNonNull($.table, "expected parameter 'table' to be non-null");
            return $;
        }
    }

}
