// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.monitoring_v3.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.monitoring_v3.enums.ContentMatcherMatcher;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Optional. Used to perform content matching. This allows matching based on substrings and regular expressions, together with their negations. Only the first 4 MB of an HTTP or HTTPS check&#39;s response (and the first 1 MB of a TCP check&#39;s response) are examined for purposes of content matching.
 * 
 */
public final class ContentMatcherArgs extends com.pulumi.resources.ResourceArgs {

    public static final ContentMatcherArgs Empty = new ContentMatcherArgs();

    /**
     * String or regex content to match. Maximum 1024 bytes. An empty content string indicates no content matching is to be performed.
     * 
     */
    @Import(name="content")
    private @Nullable Output<String> content;

    public Optional<Output<String>> content() {
        return Optional.ofNullable(this.content);
    }

    /**
     * The type of content matcher that will be applied to the server output, compared to the content string when the check is run.
     * 
     */
    @Import(name="matcher")
    private @Nullable Output<ContentMatcherMatcher> matcher;

    public Optional<Output<ContentMatcherMatcher>> matcher() {
        return Optional.ofNullable(this.matcher);
    }

    private ContentMatcherArgs() {}

    private ContentMatcherArgs(ContentMatcherArgs $) {
        this.content = $.content;
        this.matcher = $.matcher;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ContentMatcherArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ContentMatcherArgs $;

        public Builder() {
            $ = new ContentMatcherArgs();
        }

        public Builder(ContentMatcherArgs defaults) {
            $ = new ContentMatcherArgs(Objects.requireNonNull(defaults));
        }

        public Builder content(@Nullable Output<String> content) {
            $.content = content;
            return this;
        }

        public Builder content(String content) {
            return content(Output.of(content));
        }

        public Builder matcher(@Nullable Output<ContentMatcherMatcher> matcher) {
            $.matcher = matcher;
            return this;
        }

        public Builder matcher(ContentMatcherMatcher matcher) {
            return matcher(Output.of(matcher));
        }

        public ContentMatcherArgs build() {
            return $;
        }
    }

}
