// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.datastore.v1;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.datastore.v1.enums.IndexAncestor;
import com.pulumi.googlenative.datastore.v1.inputs.GoogleDatastoreAdminV1IndexedPropertyArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class IndexArgs extends com.pulumi.resources.ResourceArgs {

    public static final IndexArgs Empty = new IndexArgs();

    /**
     * The index&#39;s ancestor mode. Must not be ANCESTOR_MODE_UNSPECIFIED.
     * 
     */
    @Import(name="ancestor", required=true)
    private Output<IndexAncestor> ancestor;

    /**
     * @return The index&#39;s ancestor mode. Must not be ANCESTOR_MODE_UNSPECIFIED.
     * 
     */
    public Output<IndexAncestor> ancestor() {
        return this.ancestor;
    }

    /**
     * The entity kind to which this index applies.
     * 
     */
    @Import(name="kind", required=true)
    private Output<String> kind;

    /**
     * @return The entity kind to which this index applies.
     * 
     */
    public Output<String> kind() {
        return this.kind;
    }

    @Import(name="project")
    private @Nullable Output<String> project;

    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * An ordered sequence of property names and their index attributes.
     * 
     */
    @Import(name="properties", required=true)
    private Output<List<GoogleDatastoreAdminV1IndexedPropertyArgs>> properties;

    /**
     * @return An ordered sequence of property names and their index attributes.
     * 
     */
    public Output<List<GoogleDatastoreAdminV1IndexedPropertyArgs>> properties() {
        return this.properties;
    }

    private IndexArgs() {}

    private IndexArgs(IndexArgs $) {
        this.ancestor = $.ancestor;
        this.kind = $.kind;
        this.project = $.project;
        this.properties = $.properties;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(IndexArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private IndexArgs $;

        public Builder() {
            $ = new IndexArgs();
        }

        public Builder(IndexArgs defaults) {
            $ = new IndexArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param ancestor The index&#39;s ancestor mode. Must not be ANCESTOR_MODE_UNSPECIFIED.
         * 
         * @return builder
         * 
         */
        public Builder ancestor(Output<IndexAncestor> ancestor) {
            $.ancestor = ancestor;
            return this;
        }

        /**
         * @param ancestor The index&#39;s ancestor mode. Must not be ANCESTOR_MODE_UNSPECIFIED.
         * 
         * @return builder
         * 
         */
        public Builder ancestor(IndexAncestor ancestor) {
            return ancestor(Output.of(ancestor));
        }

        /**
         * @param kind The entity kind to which this index applies.
         * 
         * @return builder
         * 
         */
        public Builder kind(Output<String> kind) {
            $.kind = kind;
            return this;
        }

        /**
         * @param kind The entity kind to which this index applies.
         * 
         * @return builder
         * 
         */
        public Builder kind(String kind) {
            return kind(Output.of(kind));
        }

        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        public Builder project(String project) {
            return project(Output.of(project));
        }

        /**
         * @param properties An ordered sequence of property names and their index attributes.
         * 
         * @return builder
         * 
         */
        public Builder properties(Output<List<GoogleDatastoreAdminV1IndexedPropertyArgs>> properties) {
            $.properties = properties;
            return this;
        }

        /**
         * @param properties An ordered sequence of property names and their index attributes.
         * 
         * @return builder
         * 
         */
        public Builder properties(List<GoogleDatastoreAdminV1IndexedPropertyArgs> properties) {
            return properties(Output.of(properties));
        }

        /**
         * @param properties An ordered sequence of property names and their index attributes.
         * 
         * @return builder
         * 
         */
        public Builder properties(GoogleDatastoreAdminV1IndexedPropertyArgs... properties) {
            return properties(List.of(properties));
        }

        public IndexArgs build() {
            $.ancestor = Objects.requireNonNull($.ancestor, "expected parameter 'ancestor' to be non-null");
            $.kind = Objects.requireNonNull($.kind, "expected parameter 'kind' to be non-null");
            $.properties = Objects.requireNonNull($.properties, "expected parameter 'properties' to be non-null");
            return $;
        }
    }

}
