// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.dataflow_v1b3.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.dataflow_v1b3.inputs.BigQueryIODetailsResponse;
import com.pulumi.googlenative.dataflow_v1b3.inputs.BigTableIODetailsResponse;
import com.pulumi.googlenative.dataflow_v1b3.inputs.DatastoreIODetailsResponse;
import com.pulumi.googlenative.dataflow_v1b3.inputs.FileIODetailsResponse;
import com.pulumi.googlenative.dataflow_v1b3.inputs.PubSubIODetailsResponse;
import com.pulumi.googlenative.dataflow_v1b3.inputs.SdkVersionResponse;
import com.pulumi.googlenative.dataflow_v1b3.inputs.SpannerIODetailsResponse;
import java.util.List;
import java.util.Objects;


/**
 * Metadata available primarily for filtering jobs. Will be included in the ListJob response and Job SUMMARY view.
 * 
 */
public final class JobMetadataResponse extends com.pulumi.resources.InvokeArgs {

    public static final JobMetadataResponse Empty = new JobMetadataResponse();

    /**
     * Identification of a Cloud Bigtable source used in the Dataflow job.
     * 
     */
    @Import(name="bigTableDetails", required=true)
    private List<BigTableIODetailsResponse> bigTableDetails;

    public List<BigTableIODetailsResponse> bigTableDetails() {
        return this.bigTableDetails;
    }

    /**
     * Identification of a BigQuery source used in the Dataflow job.
     * 
     */
    @Import(name="bigqueryDetails", required=true)
    private List<BigQueryIODetailsResponse> bigqueryDetails;

    public List<BigQueryIODetailsResponse> bigqueryDetails() {
        return this.bigqueryDetails;
    }

    /**
     * Identification of a Datastore source used in the Dataflow job.
     * 
     */
    @Import(name="datastoreDetails", required=true)
    private List<DatastoreIODetailsResponse> datastoreDetails;

    public List<DatastoreIODetailsResponse> datastoreDetails() {
        return this.datastoreDetails;
    }

    /**
     * Identification of a File source used in the Dataflow job.
     * 
     */
    @Import(name="fileDetails", required=true)
    private List<FileIODetailsResponse> fileDetails;

    public List<FileIODetailsResponse> fileDetails() {
        return this.fileDetails;
    }

    /**
     * Identification of a Pub/Sub source used in the Dataflow job.
     * 
     */
    @Import(name="pubsubDetails", required=true)
    private List<PubSubIODetailsResponse> pubsubDetails;

    public List<PubSubIODetailsResponse> pubsubDetails() {
        return this.pubsubDetails;
    }

    /**
     * The SDK version used to run the job.
     * 
     */
    @Import(name="sdkVersion", required=true)
    private SdkVersionResponse sdkVersion;

    public SdkVersionResponse sdkVersion() {
        return this.sdkVersion;
    }

    /**
     * Identification of a Spanner source used in the Dataflow job.
     * 
     */
    @Import(name="spannerDetails", required=true)
    private List<SpannerIODetailsResponse> spannerDetails;

    public List<SpannerIODetailsResponse> spannerDetails() {
        return this.spannerDetails;
    }

    private JobMetadataResponse() {}

    private JobMetadataResponse(JobMetadataResponse $) {
        this.bigTableDetails = $.bigTableDetails;
        this.bigqueryDetails = $.bigqueryDetails;
        this.datastoreDetails = $.datastoreDetails;
        this.fileDetails = $.fileDetails;
        this.pubsubDetails = $.pubsubDetails;
        this.sdkVersion = $.sdkVersion;
        this.spannerDetails = $.spannerDetails;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(JobMetadataResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private JobMetadataResponse $;

        public Builder() {
            $ = new JobMetadataResponse();
        }

        public Builder(JobMetadataResponse defaults) {
            $ = new JobMetadataResponse(Objects.requireNonNull(defaults));
        }

        public Builder bigTableDetails(List<BigTableIODetailsResponse> bigTableDetails) {
            $.bigTableDetails = bigTableDetails;
            return this;
        }

        public Builder bigTableDetails(BigTableIODetailsResponse... bigTableDetails) {
            return bigTableDetails(List.of(bigTableDetails));
        }

        public Builder bigqueryDetails(List<BigQueryIODetailsResponse> bigqueryDetails) {
            $.bigqueryDetails = bigqueryDetails;
            return this;
        }

        public Builder bigqueryDetails(BigQueryIODetailsResponse... bigqueryDetails) {
            return bigqueryDetails(List.of(bigqueryDetails));
        }

        public Builder datastoreDetails(List<DatastoreIODetailsResponse> datastoreDetails) {
            $.datastoreDetails = datastoreDetails;
            return this;
        }

        public Builder datastoreDetails(DatastoreIODetailsResponse... datastoreDetails) {
            return datastoreDetails(List.of(datastoreDetails));
        }

        public Builder fileDetails(List<FileIODetailsResponse> fileDetails) {
            $.fileDetails = fileDetails;
            return this;
        }

        public Builder fileDetails(FileIODetailsResponse... fileDetails) {
            return fileDetails(List.of(fileDetails));
        }

        public Builder pubsubDetails(List<PubSubIODetailsResponse> pubsubDetails) {
            $.pubsubDetails = pubsubDetails;
            return this;
        }

        public Builder pubsubDetails(PubSubIODetailsResponse... pubsubDetails) {
            return pubsubDetails(List.of(pubsubDetails));
        }

        public Builder sdkVersion(SdkVersionResponse sdkVersion) {
            $.sdkVersion = sdkVersion;
            return this;
        }

        public Builder spannerDetails(List<SpannerIODetailsResponse> spannerDetails) {
            $.spannerDetails = spannerDetails;
            return this;
        }

        public Builder spannerDetails(SpannerIODetailsResponse... spannerDetails) {
            return spannerDetails(List.of(spannerDetails));
        }

        public JobMetadataResponse build() {
            $.bigTableDetails = Objects.requireNonNull($.bigTableDetails, "expected parameter 'bigTableDetails' to be non-null");
            $.bigqueryDetails = Objects.requireNonNull($.bigqueryDetails, "expected parameter 'bigqueryDetails' to be non-null");
            $.datastoreDetails = Objects.requireNonNull($.datastoreDetails, "expected parameter 'datastoreDetails' to be non-null");
            $.fileDetails = Objects.requireNonNull($.fileDetails, "expected parameter 'fileDetails' to be non-null");
            $.pubsubDetails = Objects.requireNonNull($.pubsubDetails, "expected parameter 'pubsubDetails' to be non-null");
            $.sdkVersion = Objects.requireNonNull($.sdkVersion, "expected parameter 'sdkVersion' to be non-null");
            $.spannerDetails = Objects.requireNonNull($.spannerDetails, "expected parameter 'spannerDetails' to be non-null");
            return $;
        }
    }

}
