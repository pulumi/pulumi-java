// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.datacatalog_v1.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * Specification for a group of BigQuery tables with the `[prefix]YYYYMMDD` name pattern. For more information, see [Introduction to partitioned tables] (https://cloud.google.com/bigquery/docs/partitioned-tables#partitioning_versus_sharding).
 * 
 */
public final class GoogleCloudDatacatalogV1BigQueryDateShardedSpecResponse extends com.pulumi.resources.InvokeArgs {

    public static final GoogleCloudDatacatalogV1BigQueryDateShardedSpecResponse Empty = new GoogleCloudDatacatalogV1BigQueryDateShardedSpecResponse();

    /**
     * The Data Catalog resource name of the dataset entry the current table belongs to. For example: `projects/{PROJECT_ID}/locations/{LOCATION}/entrygroups/{ENTRY_GROUP_ID}/entries/{ENTRY_ID}`.
     * 
     */
    @Import(name="dataset", required=true)
    private String dataset;

    public String dataset() {
        return this.dataset;
    }

    /**
     * BigQuery resource name of the latest shard.
     * 
     */
    @Import(name="latestShardResource", required=true)
    private String latestShardResource;

    public String latestShardResource() {
        return this.latestShardResource;
    }

    /**
     * Total number of shards.
     * 
     */
    @Import(name="shardCount", required=true)
    private String shardCount;

    public String shardCount() {
        return this.shardCount;
    }

    /**
     * The table name prefix of the shards. The name of any given shard is `[table_prefix]YYYYMMDD`. For example, for the `MyTable20180101` shard, the `table_prefix` is `MyTable`.
     * 
     */
    @Import(name="tablePrefix", required=true)
    private String tablePrefix;

    public String tablePrefix() {
        return this.tablePrefix;
    }

    private GoogleCloudDatacatalogV1BigQueryDateShardedSpecResponse() {}

    private GoogleCloudDatacatalogV1BigQueryDateShardedSpecResponse(GoogleCloudDatacatalogV1BigQueryDateShardedSpecResponse $) {
        this.dataset = $.dataset;
        this.latestShardResource = $.latestShardResource;
        this.shardCount = $.shardCount;
        this.tablePrefix = $.tablePrefix;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GoogleCloudDatacatalogV1BigQueryDateShardedSpecResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GoogleCloudDatacatalogV1BigQueryDateShardedSpecResponse $;

        public Builder() {
            $ = new GoogleCloudDatacatalogV1BigQueryDateShardedSpecResponse();
        }

        public Builder(GoogleCloudDatacatalogV1BigQueryDateShardedSpecResponse defaults) {
            $ = new GoogleCloudDatacatalogV1BigQueryDateShardedSpecResponse(Objects.requireNonNull(defaults));
        }

        public Builder dataset(String dataset) {
            $.dataset = dataset;
            return this;
        }

        public Builder latestShardResource(String latestShardResource) {
            $.latestShardResource = latestShardResource;
            return this;
        }

        public Builder shardCount(String shardCount) {
            $.shardCount = shardCount;
            return this;
        }

        public Builder tablePrefix(String tablePrefix) {
            $.tablePrefix = tablePrefix;
            return this;
        }

        public GoogleCloudDatacatalogV1BigQueryDateShardedSpecResponse build() {
            $.dataset = Objects.requireNonNull($.dataset, "expected parameter 'dataset' to be non-null");
            $.latestShardResource = Objects.requireNonNull($.latestShardResource, "expected parameter 'latestShardResource' to be non-null");
            $.shardCount = Objects.requireNonNull($.shardCount, "expected parameter 'shardCount' to be non-null");
            $.tablePrefix = Objects.requireNonNull($.tablePrefix, "expected parameter 'tablePrefix' to be non-null");
            return $;
        }
    }

}
