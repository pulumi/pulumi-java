// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.bigtableadmin_v2.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * Cloud Key Management Service (Cloud KMS) settings for a CMEK-protected cluster.
 * 
 */
public final class EncryptionConfigResponse extends com.pulumi.resources.InvokeArgs {

    public static final EncryptionConfigResponse Empty = new EncryptionConfigResponse();

    /**
     * Describes the Cloud KMS encryption key that will be used to protect the destination Bigtable cluster. The requirements for this key are: 1) The Cloud Bigtable service account associated with the project that contains this cluster must be granted the `cloudkms.cryptoKeyEncrypterDecrypter` role on the CMEK key. 2) Only regional keys can be used and the region of the CMEK key must match the region of the cluster. 3) All clusters within an instance must use the same CMEK key. Values are of the form `projects/{project}/locations/{location}/keyRings/{keyring}/cryptoKeys/{key}`
     * 
     */
    @Import(name="kmsKeyName", required=true)
    private String kmsKeyName;

    public String kmsKeyName() {
        return this.kmsKeyName;
    }

    private EncryptionConfigResponse() {}

    private EncryptionConfigResponse(EncryptionConfigResponse $) {
        this.kmsKeyName = $.kmsKeyName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EncryptionConfigResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EncryptionConfigResponse $;

        public Builder() {
            $ = new EncryptionConfigResponse();
        }

        public Builder(EncryptionConfigResponse defaults) {
            $ = new EncryptionConfigResponse(Objects.requireNonNull(defaults));
        }

        public Builder kmsKeyName(String kmsKeyName) {
            $.kmsKeyName = kmsKeyName;
            return this;
        }

        public EncryptionConfigResponse build() {
            $.kmsKeyName = Objects.requireNonNull($.kmsKeyName, "expected parameter 'kmsKeyName' to be non-null");
            return $;
        }
    }

}
