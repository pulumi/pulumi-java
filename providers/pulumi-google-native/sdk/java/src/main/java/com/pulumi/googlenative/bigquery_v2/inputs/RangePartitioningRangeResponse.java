// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.bigquery_v2.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * [TrustedTester] [Required] Defines the ranges for range partitioning.
 * 
 */
public final class RangePartitioningRangeResponse extends com.pulumi.resources.InvokeArgs {

    public static final RangePartitioningRangeResponse Empty = new RangePartitioningRangeResponse();

    /**
     * [TrustedTester] [Required] The end of range partitioning, exclusive.
     * 
     */
    @Import(name="end", required=true)
    private String end;

    public String end() {
        return this.end;
    }

    /**
     * [TrustedTester] [Required] The width of each interval.
     * 
     */
    @Import(name="interval", required=true)
    private String interval;

    public String interval() {
        return this.interval;
    }

    /**
     * [TrustedTester] [Required] The start of range partitioning, inclusive.
     * 
     */
    @Import(name="start", required=true)
    private String start;

    public String start() {
        return this.start;
    }

    private RangePartitioningRangeResponse() {}

    private RangePartitioningRangeResponse(RangePartitioningRangeResponse $) {
        this.end = $.end;
        this.interval = $.interval;
        this.start = $.start;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RangePartitioningRangeResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RangePartitioningRangeResponse $;

        public Builder() {
            $ = new RangePartitioningRangeResponse();
        }

        public Builder(RangePartitioningRangeResponse defaults) {
            $ = new RangePartitioningRangeResponse(Objects.requireNonNull(defaults));
        }

        public Builder end(String end) {
            $.end = end;
            return this;
        }

        public Builder interval(String interval) {
            $.interval = interval;
            return this;
        }

        public Builder start(String start) {
            $.start = start;
            return this;
        }

        public RangePartitioningRangeResponse build() {
            $.end = Objects.requireNonNull($.end, "expected parameter 'end' to be non-null");
            $.interval = Objects.requireNonNull($.interval, "expected parameter 'interval' to be non-null");
            $.start = Objects.requireNonNull($.start, "expected parameter 'start' to be non-null");
            return $;
        }
    }

}
