// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.cloudsearch_v1.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.util.Objects;


/**
 * Represents a whole calendar date, for example a date of birth. The time of day and time zone are either specified elsewhere or are not significant. The date is relative to the [Proleptic Gregorian Calendar](https://en.wikipedia.org/wiki/Proleptic_Gregorian_calendar). The date must be a valid calendar date between the year 1 and 9999.
 * 
 */
public final class DateResponse extends com.pulumi.resources.InvokeArgs {

    public static final DateResponse Empty = new DateResponse();

    /**
     * Day of month. Must be from 1 to 31 and valid for the year and month.
     * 
     */
    @Import(name="day", required=true)
    private Integer day;

    public Integer day() {
        return this.day;
    }

    /**
     * Month of date. Must be from 1 to 12.
     * 
     */
    @Import(name="month", required=true)
    private Integer month;

    public Integer month() {
        return this.month;
    }

    /**
     * Year of date. Must be from 1 to 9999.
     * 
     */
    @Import(name="year", required=true)
    private Integer year;

    public Integer year() {
        return this.year;
    }

    private DateResponse() {}

    private DateResponse(DateResponse $) {
        this.day = $.day;
        this.month = $.month;
        this.year = $.year;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DateResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DateResponse $;

        public Builder() {
            $ = new DateResponse();
        }

        public Builder(DateResponse defaults) {
            $ = new DateResponse(Objects.requireNonNull(defaults));
        }

        public Builder day(Integer day) {
            $.day = day;
            return this;
        }

        public Builder month(Integer month) {
            $.month = month;
            return this;
        }

        public Builder year(Integer year) {
            $.year = year;
            return this;
        }

        public DateResponse build() {
            $.day = Objects.requireNonNull($.day, "expected parameter 'day' to be non-null");
            $.month = Objects.requireNonNull($.month, "expected parameter 'month' to be non-null");
            $.year = Objects.requireNonNull($.year, "expected parameter 'year' to be non-null");
            return $;
        }
    }

}
