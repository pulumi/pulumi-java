// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.compute_beta;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.compute_beta.inputs.ResourcePolicyGroupPlacementPolicyArgs;
import com.pulumi.googlenative.compute_beta.inputs.ResourcePolicyInstanceSchedulePolicyArgs;
import com.pulumi.googlenative.compute_beta.inputs.ResourcePolicySnapshotSchedulePolicyArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ResourcePolicyArgs extends com.pulumi.resources.ResourceArgs {

    public static final ResourcePolicyArgs Empty = new ResourcePolicyArgs();

    @Import(name="description")
    private @Nullable Output<String> description;

    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Resource policy for instances for placement configuration.
     * 
     */
    @Import(name="groupPlacementPolicy")
    private @Nullable Output<ResourcePolicyGroupPlacementPolicyArgs> groupPlacementPolicy;

    /**
     * @return Resource policy for instances for placement configuration.
     * 
     */
    public Optional<Output<ResourcePolicyGroupPlacementPolicyArgs>> groupPlacementPolicy() {
        return Optional.ofNullable(this.groupPlacementPolicy);
    }

    /**
     * Resource policy for scheduling instance operations.
     * 
     */
    @Import(name="instanceSchedulePolicy")
    private @Nullable Output<ResourcePolicyInstanceSchedulePolicyArgs> instanceSchedulePolicy;

    /**
     * @return Resource policy for scheduling instance operations.
     * 
     */
    public Optional<Output<ResourcePolicyInstanceSchedulePolicyArgs>> instanceSchedulePolicy() {
        return Optional.ofNullable(this.instanceSchedulePolicy);
    }

    /**
     * The name of the resource, provided by the client when initially creating the resource. The resource name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the resource, provided by the client when initially creating the resource. The resource name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="project")
    private @Nullable Output<String> project;

    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    @Import(name="region", required=true)
    private Output<String> region;

    public Output<String> region() {
        return this.region;
    }

    @Import(name="requestId")
    private @Nullable Output<String> requestId;

    public Optional<Output<String>> requestId() {
        return Optional.ofNullable(this.requestId);
    }

    /**
     * Resource policy for persistent disks for creating snapshots.
     * 
     */
    @Import(name="snapshotSchedulePolicy")
    private @Nullable Output<ResourcePolicySnapshotSchedulePolicyArgs> snapshotSchedulePolicy;

    /**
     * @return Resource policy for persistent disks for creating snapshots.
     * 
     */
    public Optional<Output<ResourcePolicySnapshotSchedulePolicyArgs>> snapshotSchedulePolicy() {
        return Optional.ofNullable(this.snapshotSchedulePolicy);
    }

    private ResourcePolicyArgs() {}

    private ResourcePolicyArgs(ResourcePolicyArgs $) {
        this.description = $.description;
        this.groupPlacementPolicy = $.groupPlacementPolicy;
        this.instanceSchedulePolicy = $.instanceSchedulePolicy;
        this.name = $.name;
        this.project = $.project;
        this.region = $.region;
        this.requestId = $.requestId;
        this.snapshotSchedulePolicy = $.snapshotSchedulePolicy;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ResourcePolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ResourcePolicyArgs $;

        public Builder() {
            $ = new ResourcePolicyArgs();
        }

        public Builder(ResourcePolicyArgs defaults) {
            $ = new ResourcePolicyArgs(Objects.requireNonNull(defaults));
        }

        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param groupPlacementPolicy Resource policy for instances for placement configuration.
         * 
         * @return builder
         * 
         */
        public Builder groupPlacementPolicy(@Nullable Output<ResourcePolicyGroupPlacementPolicyArgs> groupPlacementPolicy) {
            $.groupPlacementPolicy = groupPlacementPolicy;
            return this;
        }

        /**
         * @param groupPlacementPolicy Resource policy for instances for placement configuration.
         * 
         * @return builder
         * 
         */
        public Builder groupPlacementPolicy(ResourcePolicyGroupPlacementPolicyArgs groupPlacementPolicy) {
            return groupPlacementPolicy(Output.of(groupPlacementPolicy));
        }

        /**
         * @param instanceSchedulePolicy Resource policy for scheduling instance operations.
         * 
         * @return builder
         * 
         */
        public Builder instanceSchedulePolicy(@Nullable Output<ResourcePolicyInstanceSchedulePolicyArgs> instanceSchedulePolicy) {
            $.instanceSchedulePolicy = instanceSchedulePolicy;
            return this;
        }

        /**
         * @param instanceSchedulePolicy Resource policy for scheduling instance operations.
         * 
         * @return builder
         * 
         */
        public Builder instanceSchedulePolicy(ResourcePolicyInstanceSchedulePolicyArgs instanceSchedulePolicy) {
            return instanceSchedulePolicy(Output.of(instanceSchedulePolicy));
        }

        /**
         * @param name The name of the resource, provided by the client when initially creating the resource. The resource name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the resource, provided by the client when initially creating the resource. The resource name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        public Builder project(String project) {
            return project(Output.of(project));
        }

        public Builder region(Output<String> region) {
            $.region = region;
            return this;
        }

        public Builder region(String region) {
            return region(Output.of(region));
        }

        public Builder requestId(@Nullable Output<String> requestId) {
            $.requestId = requestId;
            return this;
        }

        public Builder requestId(String requestId) {
            return requestId(Output.of(requestId));
        }

        /**
         * @param snapshotSchedulePolicy Resource policy for persistent disks for creating snapshots.
         * 
         * @return builder
         * 
         */
        public Builder snapshotSchedulePolicy(@Nullable Output<ResourcePolicySnapshotSchedulePolicyArgs> snapshotSchedulePolicy) {
            $.snapshotSchedulePolicy = snapshotSchedulePolicy;
            return this;
        }

        /**
         * @param snapshotSchedulePolicy Resource policy for persistent disks for creating snapshots.
         * 
         * @return builder
         * 
         */
        public Builder snapshotSchedulePolicy(ResourcePolicySnapshotSchedulePolicyArgs snapshotSchedulePolicy) {
            return snapshotSchedulePolicy(Output.of(snapshotSchedulePolicy));
        }

        public ResourcePolicyArgs build() {
            $.region = Objects.requireNonNull($.region, "expected parameter 'region' to be non-null");
            return $;
        }
    }

}
