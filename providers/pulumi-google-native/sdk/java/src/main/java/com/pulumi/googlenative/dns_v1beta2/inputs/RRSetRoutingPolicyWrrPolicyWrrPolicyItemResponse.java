// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.dns_v1beta2.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Double;
import java.lang.String;
import java.util.List;
import java.util.Objects;


/**
 * A routing block which contains the routing information for one WRR item.
 * 
 */
public final class RRSetRoutingPolicyWrrPolicyWrrPolicyItemResponse extends com.pulumi.resources.InvokeArgs {

    public static final RRSetRoutingPolicyWrrPolicyWrrPolicyItemResponse Empty = new RRSetRoutingPolicyWrrPolicyWrrPolicyItemResponse();

    @Import(name="kind", required=true)
    private String kind;

    public String kind() {
        return this.kind;
    }

    @Import(name="rrdatas", required=true)
    private List<String> rrdatas;

    public List<String> rrdatas() {
        return this.rrdatas;
    }

    /**
     * DNSSEC generated signatures for all the rrdata within this item. Note that if health checked targets are provided for DNSSEC enabled zones, there&#39;s a restriction of 1 ip per item. .
     * 
     */
    @Import(name="signatureRrdatas", required=true)
    private List<String> signatureRrdatas;

    public List<String> signatureRrdatas() {
        return this.signatureRrdatas;
    }

    /**
     * The weight corresponding to this subset of rrdata. When multiple WeightedRoundRobinPolicyItems are configured, the probability of returning an rrset is proportional to its weight relative to the sum of weights configured for all items. This weight should be non-negative.
     * 
     */
    @Import(name="weight", required=true)
    private Double weight;

    public Double weight() {
        return this.weight;
    }

    private RRSetRoutingPolicyWrrPolicyWrrPolicyItemResponse() {}

    private RRSetRoutingPolicyWrrPolicyWrrPolicyItemResponse(RRSetRoutingPolicyWrrPolicyWrrPolicyItemResponse $) {
        this.kind = $.kind;
        this.rrdatas = $.rrdatas;
        this.signatureRrdatas = $.signatureRrdatas;
        this.weight = $.weight;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RRSetRoutingPolicyWrrPolicyWrrPolicyItemResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RRSetRoutingPolicyWrrPolicyWrrPolicyItemResponse $;

        public Builder() {
            $ = new RRSetRoutingPolicyWrrPolicyWrrPolicyItemResponse();
        }

        public Builder(RRSetRoutingPolicyWrrPolicyWrrPolicyItemResponse defaults) {
            $ = new RRSetRoutingPolicyWrrPolicyWrrPolicyItemResponse(Objects.requireNonNull(defaults));
        }

        public Builder kind(String kind) {
            $.kind = kind;
            return this;
        }

        public Builder rrdatas(List<String> rrdatas) {
            $.rrdatas = rrdatas;
            return this;
        }

        public Builder rrdatas(String... rrdatas) {
            return rrdatas(List.of(rrdatas));
        }

        public Builder signatureRrdatas(List<String> signatureRrdatas) {
            $.signatureRrdatas = signatureRrdatas;
            return this;
        }

        public Builder signatureRrdatas(String... signatureRrdatas) {
            return signatureRrdatas(List.of(signatureRrdatas));
        }

        public Builder weight(Double weight) {
            $.weight = weight;
            return this;
        }

        public RRSetRoutingPolicyWrrPolicyWrrPolicyItemResponse build() {
            $.kind = Objects.requireNonNull($.kind, "expected parameter 'kind' to be non-null");
            $.rrdatas = Objects.requireNonNull($.rrdatas, "expected parameter 'rrdatas' to be non-null");
            $.signatureRrdatas = Objects.requireNonNull($.signatureRrdatas, "expected parameter 'signatureRrdatas' to be non-null");
            $.weight = Objects.requireNonNull($.weight, "expected parameter 'weight' to be non-null");
            return $;
        }
    }

}
