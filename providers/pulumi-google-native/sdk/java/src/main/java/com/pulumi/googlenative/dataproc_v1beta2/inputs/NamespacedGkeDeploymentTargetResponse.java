// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.dataproc_v1beta2.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * A full, namespace-isolated deployment target for an existing GKE cluster.
 * 
 */
public final class NamespacedGkeDeploymentTargetResponse extends com.pulumi.resources.InvokeArgs {

    public static final NamespacedGkeDeploymentTargetResponse Empty = new NamespacedGkeDeploymentTargetResponse();

    /**
     * Optional. A namespace within the GKE cluster to deploy into.
     * 
     */
    @Import(name="clusterNamespace", required=true)
    private String clusterNamespace;

    /**
     * @return Optional. A namespace within the GKE cluster to deploy into.
     * 
     */
    public String clusterNamespace() {
        return this.clusterNamespace;
    }

    /**
     * Optional. The target GKE cluster to deploy to. Format: &#39;projects/{project}/locations/{location}/clusters/{cluster_id}&#39;
     * 
     */
    @Import(name="targetGkeCluster", required=true)
    private String targetGkeCluster;

    /**
     * @return Optional. The target GKE cluster to deploy to. Format: &#39;projects/{project}/locations/{location}/clusters/{cluster_id}&#39;
     * 
     */
    public String targetGkeCluster() {
        return this.targetGkeCluster;
    }

    private NamespacedGkeDeploymentTargetResponse() {}

    private NamespacedGkeDeploymentTargetResponse(NamespacedGkeDeploymentTargetResponse $) {
        this.clusterNamespace = $.clusterNamespace;
        this.targetGkeCluster = $.targetGkeCluster;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NamespacedGkeDeploymentTargetResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NamespacedGkeDeploymentTargetResponse $;

        public Builder() {
            $ = new NamespacedGkeDeploymentTargetResponse();
        }

        public Builder(NamespacedGkeDeploymentTargetResponse defaults) {
            $ = new NamespacedGkeDeploymentTargetResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param clusterNamespace Optional. A namespace within the GKE cluster to deploy into.
         * 
         * @return builder
         * 
         */
        public Builder clusterNamespace(String clusterNamespace) {
            $.clusterNamespace = clusterNamespace;
            return this;
        }

        /**
         * @param targetGkeCluster Optional. The target GKE cluster to deploy to. Format: &#39;projects/{project}/locations/{location}/clusters/{cluster_id}&#39;
         * 
         * @return builder
         * 
         */
        public Builder targetGkeCluster(String targetGkeCluster) {
            $.targetGkeCluster = targetGkeCluster;
            return this;
        }

        public NamespacedGkeDeploymentTargetResponse build() {
            $.clusterNamespace = Objects.requireNonNull($.clusterNamespace, "expected parameter 'clusterNamespace' to be non-null");
            $.targetGkeCluster = Objects.requireNonNull($.targetGkeCluster, "expected parameter 'targetGkeCluster' to be non-null");
            return $;
        }
    }

}
