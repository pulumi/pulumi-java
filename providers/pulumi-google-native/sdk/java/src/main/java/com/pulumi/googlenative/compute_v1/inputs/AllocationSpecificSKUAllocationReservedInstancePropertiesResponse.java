// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.compute_v1.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.compute_v1.inputs.AcceleratorConfigResponse;
import com.pulumi.googlenative.compute_v1.inputs.AllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDiskResponse;
import java.lang.String;
import java.util.List;
import java.util.Objects;


/**
 * Properties of the SKU instances being reserved. Next ID: 9
 * 
 */
public final class AllocationSpecificSKUAllocationReservedInstancePropertiesResponse extends com.pulumi.resources.InvokeArgs {

    public static final AllocationSpecificSKUAllocationReservedInstancePropertiesResponse Empty = new AllocationSpecificSKUAllocationReservedInstancePropertiesResponse();

    /**
     * Specifies accelerator type and count.
     * 
     */
    @Import(name="guestAccelerators", required=true)
    private List<AcceleratorConfigResponse> guestAccelerators;

    public List<AcceleratorConfigResponse> guestAccelerators() {
        return this.guestAccelerators;
    }

    /**
     * Specifies amount of local ssd to reserve with each instance. The type of disk is local-ssd.
     * 
     */
    @Import(name="localSsds", required=true)
    private List<AllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDiskResponse> localSsds;

    public List<AllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDiskResponse> localSsds() {
        return this.localSsds;
    }

    /**
     * An opaque location hint used to place the allocation close to other resources. This field is for use by internal tools that use the public API.
     * 
     */
    @Import(name="locationHint", required=true)
    private String locationHint;

    public String locationHint() {
        return this.locationHint;
    }

    /**
     * Specifies type of machine (name only) which has fixed number of vCPUs and fixed amount of memory. This also includes specifying custom machine type following custom-NUMBER_OF_CPUS-AMOUNT_OF_MEMORY pattern.
     * 
     */
    @Import(name="machineType", required=true)
    private String machineType;

    public String machineType() {
        return this.machineType;
    }

    /**
     * Minimum cpu platform the reservation.
     * 
     */
    @Import(name="minCpuPlatform", required=true)
    private String minCpuPlatform;

    public String minCpuPlatform() {
        return this.minCpuPlatform;
    }

    private AllocationSpecificSKUAllocationReservedInstancePropertiesResponse() {}

    private AllocationSpecificSKUAllocationReservedInstancePropertiesResponse(AllocationSpecificSKUAllocationReservedInstancePropertiesResponse $) {
        this.guestAccelerators = $.guestAccelerators;
        this.localSsds = $.localSsds;
        this.locationHint = $.locationHint;
        this.machineType = $.machineType;
        this.minCpuPlatform = $.minCpuPlatform;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AllocationSpecificSKUAllocationReservedInstancePropertiesResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AllocationSpecificSKUAllocationReservedInstancePropertiesResponse $;

        public Builder() {
            $ = new AllocationSpecificSKUAllocationReservedInstancePropertiesResponse();
        }

        public Builder(AllocationSpecificSKUAllocationReservedInstancePropertiesResponse defaults) {
            $ = new AllocationSpecificSKUAllocationReservedInstancePropertiesResponse(Objects.requireNonNull(defaults));
        }

        public Builder guestAccelerators(List<AcceleratorConfigResponse> guestAccelerators) {
            $.guestAccelerators = guestAccelerators;
            return this;
        }

        public Builder guestAccelerators(AcceleratorConfigResponse... guestAccelerators) {
            return guestAccelerators(List.of(guestAccelerators));
        }

        public Builder localSsds(List<AllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDiskResponse> localSsds) {
            $.localSsds = localSsds;
            return this;
        }

        public Builder localSsds(AllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDiskResponse... localSsds) {
            return localSsds(List.of(localSsds));
        }

        public Builder locationHint(String locationHint) {
            $.locationHint = locationHint;
            return this;
        }

        public Builder machineType(String machineType) {
            $.machineType = machineType;
            return this;
        }

        public Builder minCpuPlatform(String minCpuPlatform) {
            $.minCpuPlatform = minCpuPlatform;
            return this;
        }

        public AllocationSpecificSKUAllocationReservedInstancePropertiesResponse build() {
            $.guestAccelerators = Objects.requireNonNull($.guestAccelerators, "expected parameter 'guestAccelerators' to be non-null");
            $.localSsds = Objects.requireNonNull($.localSsds, "expected parameter 'localSsds' to be non-null");
            $.locationHint = Objects.requireNonNull($.locationHint, "expected parameter 'locationHint' to be non-null");
            $.machineType = Objects.requireNonNull($.machineType, "expected parameter 'machineType' to be non-null");
            $.minCpuPlatform = Objects.requireNonNull($.minCpuPlatform, "expected parameter 'minCpuPlatform' to be non-null");
            return $;
        }
    }

}
