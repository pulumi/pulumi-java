// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.cloudkms.v1.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.googlenative.cloudkms.v1.outputs.ServiceResolverResponse;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetEkmConnectionResult {
    /**
     * @return The time at which the EkmConnection was created.
     * 
     */
    private final String createTime;
    /**
     * @return Optional. This checksum is computed by the server based on the value of other fields, and may be sent on update requests to ensure the client has an up-to-date value before proceeding.
     * 
     */
    private final String etag;
    /**
     * @return The resource name for the EkmConnection in the format `projects/*{@literal /}locations/*{@literal /}ekmConnections/*`.
     * 
     */
    private final String name;
    /**
     * @return A list of ServiceResolvers where the EKM can be reached. There should be one ServiceResolver per EKM replica. Currently, only a single ServiceResolver is supported.
     * 
     */
    private final List<ServiceResolverResponse> serviceResolvers;

    @CustomType.Constructor
    private GetEkmConnectionResult(
        @CustomType.Parameter("createTime") String createTime,
        @CustomType.Parameter("etag") String etag,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("serviceResolvers") List<ServiceResolverResponse> serviceResolvers) {
        this.createTime = createTime;
        this.etag = etag;
        this.name = name;
        this.serviceResolvers = serviceResolvers;
    }

    /**
     * @return The time at which the EkmConnection was created.
     * 
     */
    public String createTime() {
        return this.createTime;
    }
    /**
     * @return Optional. This checksum is computed by the server based on the value of other fields, and may be sent on update requests to ensure the client has an up-to-date value before proceeding.
     * 
     */
    public String etag() {
        return this.etag;
    }
    /**
     * @return The resource name for the EkmConnection in the format `projects/*{@literal /}locations/*{@literal /}ekmConnections/*`.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return A list of ServiceResolvers where the EKM can be reached. There should be one ServiceResolver per EKM replica. Currently, only a single ServiceResolver is supported.
     * 
     */
    public List<ServiceResolverResponse> serviceResolvers() {
        return this.serviceResolvers;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetEkmConnectionResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String createTime;
        private String etag;
        private String name;
        private List<ServiceResolverResponse> serviceResolvers;

        public Builder() {
    	      // Empty
        }

        public Builder(GetEkmConnectionResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.createTime = defaults.createTime;
    	      this.etag = defaults.etag;
    	      this.name = defaults.name;
    	      this.serviceResolvers = defaults.serviceResolvers;
        }

        public Builder createTime(String createTime) {
            this.createTime = Objects.requireNonNull(createTime);
            return this;
        }
        public Builder etag(String etag) {
            this.etag = Objects.requireNonNull(etag);
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder serviceResolvers(List<ServiceResolverResponse> serviceResolvers) {
            this.serviceResolvers = Objects.requireNonNull(serviceResolvers);
            return this;
        }
        public Builder serviceResolvers(ServiceResolverResponse... serviceResolvers) {
            return serviceResolvers(List.of(serviceResolvers));
        }        public GetEkmConnectionResult build() {
            return new GetEkmConnectionResult(createTime, etag, name, serviceResolvers);
        }
    }
}
