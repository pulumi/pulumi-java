// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.cloudiot_v1.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * The configuration of MQTT for a device registry.
 * 
 */
public final class MqttConfigResponse extends com.pulumi.resources.InvokeArgs {

    public static final MqttConfigResponse Empty = new MqttConfigResponse();

    /**
     * If enabled, allows connections using the MQTT protocol. Otherwise, MQTT connections to this registry will fail.
     * 
     */
    @Import(name="mqttEnabledState", required=true)
    private String mqttEnabledState;

    /**
     * @return If enabled, allows connections using the MQTT protocol. Otherwise, MQTT connections to this registry will fail.
     * 
     */
    public String mqttEnabledState() {
        return this.mqttEnabledState;
    }

    private MqttConfigResponse() {}

    private MqttConfigResponse(MqttConfigResponse $) {
        this.mqttEnabledState = $.mqttEnabledState;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MqttConfigResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MqttConfigResponse $;

        public Builder() {
            $ = new MqttConfigResponse();
        }

        public Builder(MqttConfigResponse defaults) {
            $ = new MqttConfigResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param mqttEnabledState If enabled, allows connections using the MQTT protocol. Otherwise, MQTT connections to this registry will fail.
         * 
         * @return builder
         * 
         */
        public Builder mqttEnabledState(String mqttEnabledState) {
            $.mqttEnabledState = mqttEnabledState;
            return this;
        }

        public MqttConfigResponse build() {
            $.mqttEnabledState = Objects.requireNonNull($.mqttEnabledState, "expected parameter 'mqttEnabledState' to be non-null");
            return $;
        }
    }

}
