// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.container_v1beta1.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.util.Objects;


/**
 * NodePoolAutoscaling contains information required by cluster autoscaler to adjust the size of the node pool to the current cluster usage.
 * 
 */
public final class NodePoolAutoscalingResponse extends com.pulumi.resources.InvokeArgs {

    public static final NodePoolAutoscalingResponse Empty = new NodePoolAutoscalingResponse();

    /**
     * Can this node pool be deleted automatically.
     * 
     */
    @Import(name="autoprovisioned", required=true)
    private Boolean autoprovisioned;

    public Boolean autoprovisioned() {
        return this.autoprovisioned;
    }

    /**
     * Is autoscaling enabled for this node pool.
     * 
     */
    @Import(name="enabled", required=true)
    private Boolean enabled;

    public Boolean enabled() {
        return this.enabled;
    }

    /**
     * Maximum number of nodes for one location in the NodePool. Must be &gt;= min_node_count. There has to be enough quota to scale up the cluster.
     * 
     */
    @Import(name="maxNodeCount", required=true)
    private Integer maxNodeCount;

    public Integer maxNodeCount() {
        return this.maxNodeCount;
    }

    /**
     * Minimum number of nodes for one location in the NodePool. Must be &gt;= 1 and &lt;= max_node_count.
     * 
     */
    @Import(name="minNodeCount", required=true)
    private Integer minNodeCount;

    public Integer minNodeCount() {
        return this.minNodeCount;
    }

    private NodePoolAutoscalingResponse() {}

    private NodePoolAutoscalingResponse(NodePoolAutoscalingResponse $) {
        this.autoprovisioned = $.autoprovisioned;
        this.enabled = $.enabled;
        this.maxNodeCount = $.maxNodeCount;
        this.minNodeCount = $.minNodeCount;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NodePoolAutoscalingResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NodePoolAutoscalingResponse $;

        public Builder() {
            $ = new NodePoolAutoscalingResponse();
        }

        public Builder(NodePoolAutoscalingResponse defaults) {
            $ = new NodePoolAutoscalingResponse(Objects.requireNonNull(defaults));
        }

        public Builder autoprovisioned(Boolean autoprovisioned) {
            $.autoprovisioned = autoprovisioned;
            return this;
        }

        public Builder enabled(Boolean enabled) {
            $.enabled = enabled;
            return this;
        }

        public Builder maxNodeCount(Integer maxNodeCount) {
            $.maxNodeCount = maxNodeCount;
            return this;
        }

        public Builder minNodeCount(Integer minNodeCount) {
            $.minNodeCount = minNodeCount;
            return this;
        }

        public NodePoolAutoscalingResponse build() {
            $.autoprovisioned = Objects.requireNonNull($.autoprovisioned, "expected parameter 'autoprovisioned' to be non-null");
            $.enabled = Objects.requireNonNull($.enabled, "expected parameter 'enabled' to be non-null");
            $.maxNodeCount = Objects.requireNonNull($.maxNodeCount, "expected parameter 'maxNodeCount' to be non-null");
            $.minNodeCount = Objects.requireNonNull($.minNodeCount, "expected parameter 'minNodeCount' to be non-null");
            return $;
        }
    }

}
