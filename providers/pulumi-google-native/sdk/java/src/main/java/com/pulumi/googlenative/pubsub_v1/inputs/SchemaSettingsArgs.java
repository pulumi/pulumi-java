// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.pubsub_v1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.pubsub_v1.enums.SchemaSettingsEncoding;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Settings for validating messages published against a schema.
 * 
 */
public final class SchemaSettingsArgs extends com.pulumi.resources.ResourceArgs {

    public static final SchemaSettingsArgs Empty = new SchemaSettingsArgs();

    /**
     * The encoding of messages validated against `schema`.
     * 
     */
    @Import(name="encoding")
    private @Nullable Output<SchemaSettingsEncoding> encoding;

    public Optional<Output<SchemaSettingsEncoding>> encoding() {
        return Optional.ofNullable(this.encoding);
    }

    /**
     * The name of the schema that messages published should be validated against. Format is `projects/{project}/schemas/{schema}`. The value of this field will be `_deleted-schema_` if the schema has been deleted.
     * 
     */
    @Import(name="schema", required=true)
    private Output<String> schema;

    public Output<String> schema() {
        return this.schema;
    }

    private SchemaSettingsArgs() {}

    private SchemaSettingsArgs(SchemaSettingsArgs $) {
        this.encoding = $.encoding;
        this.schema = $.schema;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SchemaSettingsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SchemaSettingsArgs $;

        public Builder() {
            $ = new SchemaSettingsArgs();
        }

        public Builder(SchemaSettingsArgs defaults) {
            $ = new SchemaSettingsArgs(Objects.requireNonNull(defaults));
        }

        public Builder encoding(@Nullable Output<SchemaSettingsEncoding> encoding) {
            $.encoding = encoding;
            return this;
        }

        public Builder encoding(SchemaSettingsEncoding encoding) {
            return encoding(Output.of(encoding));
        }

        public Builder schema(Output<String> schema) {
            $.schema = schema;
            return this;
        }

        public Builder schema(String schema) {
            return schema(Output.of(schema));
        }

        public SchemaSettingsArgs build() {
            $.schema = Objects.requireNonNull($.schema, "expected parameter 'schema' to be non-null");
            return $;
        }
    }

}
