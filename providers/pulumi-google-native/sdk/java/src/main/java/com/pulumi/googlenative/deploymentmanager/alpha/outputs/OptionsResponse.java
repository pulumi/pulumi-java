// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.deploymentmanager.alpha.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.googlenative.deploymentmanager.alpha.outputs.AsyncOptionsResponse;
import com.pulumi.googlenative.deploymentmanager.alpha.outputs.InputMappingResponse;
import com.pulumi.googlenative.deploymentmanager.alpha.outputs.ValidationOptionsResponse;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class OptionsResponse {
    /**
     * @return Options regarding how to thread async requests.
     * 
     */
    private final List<AsyncOptionsResponse> asyncOptions;
    /**
     * @return The mappings that apply for requests.
     * 
     */
    private final List<InputMappingResponse> inputMappings;
    /**
     * @return The json path to the field in the resource JSON body into which the resource name should be mapped. Leaving this empty indicates that there should be no mapping performed.
     * 
     */
    private final String nameProperty;
    /**
     * @return Options for how to validate and process properties on a resource.
     * 
     */
    private final ValidationOptionsResponse validationOptions;

    @CustomType.Constructor
    private OptionsResponse(
        @CustomType.Parameter("asyncOptions") List<AsyncOptionsResponse> asyncOptions,
        @CustomType.Parameter("inputMappings") List<InputMappingResponse> inputMappings,
        @CustomType.Parameter("nameProperty") String nameProperty,
        @CustomType.Parameter("validationOptions") ValidationOptionsResponse validationOptions) {
        this.asyncOptions = asyncOptions;
        this.inputMappings = inputMappings;
        this.nameProperty = nameProperty;
        this.validationOptions = validationOptions;
    }

    /**
     * @return Options regarding how to thread async requests.
     * 
     */
    public List<AsyncOptionsResponse> asyncOptions() {
        return this.asyncOptions;
    }
    /**
     * @return The mappings that apply for requests.
     * 
     */
    public List<InputMappingResponse> inputMappings() {
        return this.inputMappings;
    }
    /**
     * @return The json path to the field in the resource JSON body into which the resource name should be mapped. Leaving this empty indicates that there should be no mapping performed.
     * 
     */
    public String nameProperty() {
        return this.nameProperty;
    }
    /**
     * @return Options for how to validate and process properties on a resource.
     * 
     */
    public ValidationOptionsResponse validationOptions() {
        return this.validationOptions;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(OptionsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<AsyncOptionsResponse> asyncOptions;
        private List<InputMappingResponse> inputMappings;
        private String nameProperty;
        private ValidationOptionsResponse validationOptions;

        public Builder() {
    	      // Empty
        }

        public Builder(OptionsResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.asyncOptions = defaults.asyncOptions;
    	      this.inputMappings = defaults.inputMappings;
    	      this.nameProperty = defaults.nameProperty;
    	      this.validationOptions = defaults.validationOptions;
        }

        public Builder asyncOptions(List<AsyncOptionsResponse> asyncOptions) {
            this.asyncOptions = Objects.requireNonNull(asyncOptions);
            return this;
        }
        public Builder asyncOptions(AsyncOptionsResponse... asyncOptions) {
            return asyncOptions(List.of(asyncOptions));
        }
        public Builder inputMappings(List<InputMappingResponse> inputMappings) {
            this.inputMappings = Objects.requireNonNull(inputMappings);
            return this;
        }
        public Builder inputMappings(InputMappingResponse... inputMappings) {
            return inputMappings(List.of(inputMappings));
        }
        public Builder nameProperty(String nameProperty) {
            this.nameProperty = Objects.requireNonNull(nameProperty);
            return this;
        }
        public Builder validationOptions(ValidationOptionsResponse validationOptions) {
            this.validationOptions = Objects.requireNonNull(validationOptions);
            return this;
        }        public OptionsResponse build() {
            return new OptionsResponse(asyncOptions, inputMappings, nameProperty, validationOptions);
        }
    }
}
