// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.pubsub.v1.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetSchemaResult {
    /**
     * @return The definition of the schema. This should contain a string representing the full definition of the schema that is a valid schema definition of the type specified in `type`.
     * 
     */
    private final String definition;
    /**
     * @return Name of the schema. Format is `projects/{project}/schemas/{schema}`.
     * 
     */
    private final String name;
    /**
     * @return The timestamp that the revision was created.
     * 
     */
    private final String revisionCreateTime;
    /**
     * @return Immutable. The revision ID of the schema.
     * 
     */
    private final String revisionId;
    /**
     * @return The type of the schema definition.
     * 
     */
    private final String type;

    @CustomType.Constructor
    private GetSchemaResult(
        @CustomType.Parameter("definition") String definition,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("revisionCreateTime") String revisionCreateTime,
        @CustomType.Parameter("revisionId") String revisionId,
        @CustomType.Parameter("type") String type) {
        this.definition = definition;
        this.name = name;
        this.revisionCreateTime = revisionCreateTime;
        this.revisionId = revisionId;
        this.type = type;
    }

    /**
     * @return The definition of the schema. This should contain a string representing the full definition of the schema that is a valid schema definition of the type specified in `type`.
     * 
     */
    public String definition() {
        return this.definition;
    }
    /**
     * @return Name of the schema. Format is `projects/{project}/schemas/{schema}`.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The timestamp that the revision was created.
     * 
     */
    public String revisionCreateTime() {
        return this.revisionCreateTime;
    }
    /**
     * @return Immutable. The revision ID of the schema.
     * 
     */
    public String revisionId() {
        return this.revisionId;
    }
    /**
     * @return The type of the schema definition.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSchemaResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String definition;
        private String name;
        private String revisionCreateTime;
        private String revisionId;
        private String type;

        public Builder() {
    	      // Empty
        }

        public Builder(GetSchemaResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.definition = defaults.definition;
    	      this.name = defaults.name;
    	      this.revisionCreateTime = defaults.revisionCreateTime;
    	      this.revisionId = defaults.revisionId;
    	      this.type = defaults.type;
        }

        public Builder definition(String definition) {
            this.definition = Objects.requireNonNull(definition);
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder revisionCreateTime(String revisionCreateTime) {
            this.revisionCreateTime = Objects.requireNonNull(revisionCreateTime);
            return this;
        }
        public Builder revisionId(String revisionId) {
            this.revisionId = Objects.requireNonNull(revisionId);
            return this;
        }
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }        public GetSchemaResult build() {
            return new GetSchemaResult(definition, name, revisionCreateTime, revisionId, type);
        }
    }
}
