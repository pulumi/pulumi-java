// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.notebooks_v1.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * Definition of a custom Compute Engine virtual machine image for starting a notebook instance with the environment installed directly on the VM.
 * 
 */
public final class VmImageResponse extends com.pulumi.resources.InvokeArgs {

    public static final VmImageResponse Empty = new VmImageResponse();

    /**
     * Use this VM image family to find the image; the newest image in this family will be used.
     * 
     */
    @Import(name="imageFamily", required=true)
      private final String imageFamily;

    public String imageFamily() {
        return this.imageFamily;
    }

    /**
     * Use VM image name to find the image.
     * 
     */
    @Import(name="imageName", required=true)
      private final String imageName;

    public String imageName() {
        return this.imageName;
    }

    /**
     * The name of the Google Cloud project that this VM image belongs to. Format: `projects/{project_id}`
     * 
     */
    @Import(name="project", required=true)
      private final String project;

    public String project() {
        return this.project;
    }

    public VmImageResponse(
        String imageFamily,
        String imageName,
        String project) {
        this.imageFamily = Objects.requireNonNull(imageFamily, "expected parameter 'imageFamily' to be non-null");
        this.imageName = Objects.requireNonNull(imageName, "expected parameter 'imageName' to be non-null");
        this.project = Objects.requireNonNull(project, "expected parameter 'project' to be non-null");
    }

    private VmImageResponse() {
        this.imageFamily = null;
        this.imageName = null;
        this.project = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VmImageResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String imageFamily;
        private String imageName;
        private String project;

        public Builder() {
    	      // Empty
        }

        public Builder(VmImageResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.imageFamily = defaults.imageFamily;
    	      this.imageName = defaults.imageName;
    	      this.project = defaults.project;
        }

        public Builder imageFamily(String imageFamily) {
            this.imageFamily = Objects.requireNonNull(imageFamily);
            return this;
        }
        public Builder imageName(String imageName) {
            this.imageName = Objects.requireNonNull(imageName);
            return this;
        }
        public Builder project(String project) {
            this.project = Objects.requireNonNull(project);
            return this;
        }        public VmImageResponse build() {
            return new VmImageResponse(imageFamily, imageName, project);
        }
    }
}
