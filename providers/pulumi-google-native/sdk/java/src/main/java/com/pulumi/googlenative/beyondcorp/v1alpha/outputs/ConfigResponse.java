// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.beyondcorp.v1alpha.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.googlenative.beyondcorp.v1alpha.outputs.DestinationRouteResponse;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class ConfigResponse {
    /**
     * @return The settings used to configure basic ClientGateways.
     * 
     */
    private final List<DestinationRouteResponse> destinationRoutes;
    /**
     * @return Immutable. The transport protocol used between the client and the server.
     * 
     */
    private final String transportProtocol;

    @CustomType.Constructor
    private ConfigResponse(
        @CustomType.Parameter("destinationRoutes") List<DestinationRouteResponse> destinationRoutes,
        @CustomType.Parameter("transportProtocol") String transportProtocol) {
        this.destinationRoutes = destinationRoutes;
        this.transportProtocol = transportProtocol;
    }

    /**
     * @return The settings used to configure basic ClientGateways.
     * 
     */
    public List<DestinationRouteResponse> destinationRoutes() {
        return this.destinationRoutes;
    }
    /**
     * @return Immutable. The transport protocol used between the client and the server.
     * 
     */
    public String transportProtocol() {
        return this.transportProtocol;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ConfigResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<DestinationRouteResponse> destinationRoutes;
        private String transportProtocol;

        public Builder() {
    	      // Empty
        }

        public Builder(ConfigResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.destinationRoutes = defaults.destinationRoutes;
    	      this.transportProtocol = defaults.transportProtocol;
        }

        public Builder destinationRoutes(List<DestinationRouteResponse> destinationRoutes) {
            this.destinationRoutes = Objects.requireNonNull(destinationRoutes);
            return this;
        }
        public Builder destinationRoutes(DestinationRouteResponse... destinationRoutes) {
            return destinationRoutes(List.of(destinationRoutes));
        }
        public Builder transportProtocol(String transportProtocol) {
            this.transportProtocol = Objects.requireNonNull(transportProtocol);
            return this;
        }        public ConfigResponse build() {
            return new ConfigResponse(destinationRoutes, transportProtocol);
        }
    }
}
