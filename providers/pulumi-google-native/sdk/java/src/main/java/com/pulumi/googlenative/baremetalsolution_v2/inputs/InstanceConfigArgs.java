// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.baremetalsolution_v2.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.baremetalsolution_v2.inputs.NetworkAddressArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Configuration parameters for a new instance.
 * 
 */
public final class InstanceConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final InstanceConfigArgs Empty = new InstanceConfigArgs();

    /**
     * If true networks can be from different projects of the same vendor account.
     * 
     */
    @Import(name="accountNetworksEnabled")
    private @Nullable Output<Boolean> accountNetworksEnabled;

    /**
     * @return If true networks can be from different projects of the same vendor account.
     * 
     */
    public Optional<Output<Boolean>> accountNetworksEnabled() {
        return Optional.ofNullable(this.accountNetworksEnabled);
    }

    /**
     * Client network address.
     * 
     */
    @Import(name="clientNetwork")
    private @Nullable Output<NetworkAddressArgs> clientNetwork;

    /**
     * @return Client network address.
     * 
     */
    public Optional<Output<NetworkAddressArgs>> clientNetwork() {
        return Optional.ofNullable(this.clientNetwork);
    }

    /**
     * Whether the instance should be provisioned with Hyperthreading enabled.
     * 
     */
    @Import(name="hyperthreading")
    private @Nullable Output<Boolean> hyperthreading;

    /**
     * @return Whether the instance should be provisioned with Hyperthreading enabled.
     * 
     */
    public Optional<Output<Boolean>> hyperthreading() {
        return Optional.ofNullable(this.hyperthreading);
    }

    /**
     * A transient unique identifier to idenfity an instance within an ProvisioningConfig request.
     * 
     */
    @Import(name="id")
    private @Nullable Output<String> id;

    /**
     * @return A transient unique identifier to idenfity an instance within an ProvisioningConfig request.
     * 
     */
    public Optional<Output<String>> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * Instance type. [Available types](https://cloud.google.com/bare-metal/docs/bms-planning#server_configurations)
     * 
     */
    @Import(name="instanceType")
    private @Nullable Output<String> instanceType;

    /**
     * @return Instance type. [Available types](https://cloud.google.com/bare-metal/docs/bms-planning#server_configurations)
     * 
     */
    public Optional<Output<String>> instanceType() {
        return Optional.ofNullable(this.instanceType);
    }

    /**
     * OS image to initialize the instance. [Available images](https://cloud.google.com/bare-metal/docs/bms-planning#server_configurations)
     * 
     */
    @Import(name="osImage")
    private @Nullable Output<String> osImage;

    /**
     * @return OS image to initialize the instance. [Available images](https://cloud.google.com/bare-metal/docs/bms-planning#server_configurations)
     * 
     */
    public Optional<Output<String>> osImage() {
        return Optional.ofNullable(this.osImage);
    }

    /**
     * Private network address, if any.
     * 
     */
    @Import(name="privateNetwork")
    private @Nullable Output<NetworkAddressArgs> privateNetwork;

    /**
     * @return Private network address, if any.
     * 
     */
    public Optional<Output<NetworkAddressArgs>> privateNetwork() {
        return Optional.ofNullable(this.privateNetwork);
    }

    /**
     * User note field, it can be used by customers to add additional information for the BMS Ops team .
     * 
     */
    @Import(name="userNote")
    private @Nullable Output<String> userNote;

    /**
     * @return User note field, it can be used by customers to add additional information for the BMS Ops team .
     * 
     */
    public Optional<Output<String>> userNote() {
        return Optional.ofNullable(this.userNote);
    }

    private InstanceConfigArgs() {}

    private InstanceConfigArgs(InstanceConfigArgs $) {
        this.accountNetworksEnabled = $.accountNetworksEnabled;
        this.clientNetwork = $.clientNetwork;
        this.hyperthreading = $.hyperthreading;
        this.id = $.id;
        this.instanceType = $.instanceType;
        this.osImage = $.osImage;
        this.privateNetwork = $.privateNetwork;
        this.userNote = $.userNote;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InstanceConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InstanceConfigArgs $;

        public Builder() {
            $ = new InstanceConfigArgs();
        }

        public Builder(InstanceConfigArgs defaults) {
            $ = new InstanceConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accountNetworksEnabled If true networks can be from different projects of the same vendor account.
         * 
         * @return builder
         * 
         */
        public Builder accountNetworksEnabled(@Nullable Output<Boolean> accountNetworksEnabled) {
            $.accountNetworksEnabled = accountNetworksEnabled;
            return this;
        }

        /**
         * @param accountNetworksEnabled If true networks can be from different projects of the same vendor account.
         * 
         * @return builder
         * 
         */
        public Builder accountNetworksEnabled(Boolean accountNetworksEnabled) {
            return accountNetworksEnabled(Output.of(accountNetworksEnabled));
        }

        /**
         * @param clientNetwork Client network address.
         * 
         * @return builder
         * 
         */
        public Builder clientNetwork(@Nullable Output<NetworkAddressArgs> clientNetwork) {
            $.clientNetwork = clientNetwork;
            return this;
        }

        /**
         * @param clientNetwork Client network address.
         * 
         * @return builder
         * 
         */
        public Builder clientNetwork(NetworkAddressArgs clientNetwork) {
            return clientNetwork(Output.of(clientNetwork));
        }

        /**
         * @param hyperthreading Whether the instance should be provisioned with Hyperthreading enabled.
         * 
         * @return builder
         * 
         */
        public Builder hyperthreading(@Nullable Output<Boolean> hyperthreading) {
            $.hyperthreading = hyperthreading;
            return this;
        }

        /**
         * @param hyperthreading Whether the instance should be provisioned with Hyperthreading enabled.
         * 
         * @return builder
         * 
         */
        public Builder hyperthreading(Boolean hyperthreading) {
            return hyperthreading(Output.of(hyperthreading));
        }

        /**
         * @param id A transient unique identifier to idenfity an instance within an ProvisioningConfig request.
         * 
         * @return builder
         * 
         */
        public Builder id(@Nullable Output<String> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id A transient unique identifier to idenfity an instance within an ProvisioningConfig request.
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            return id(Output.of(id));
        }

        /**
         * @param instanceType Instance type. [Available types](https://cloud.google.com/bare-metal/docs/bms-planning#server_configurations)
         * 
         * @return builder
         * 
         */
        public Builder instanceType(@Nullable Output<String> instanceType) {
            $.instanceType = instanceType;
            return this;
        }

        /**
         * @param instanceType Instance type. [Available types](https://cloud.google.com/bare-metal/docs/bms-planning#server_configurations)
         * 
         * @return builder
         * 
         */
        public Builder instanceType(String instanceType) {
            return instanceType(Output.of(instanceType));
        }

        /**
         * @param osImage OS image to initialize the instance. [Available images](https://cloud.google.com/bare-metal/docs/bms-planning#server_configurations)
         * 
         * @return builder
         * 
         */
        public Builder osImage(@Nullable Output<String> osImage) {
            $.osImage = osImage;
            return this;
        }

        /**
         * @param osImage OS image to initialize the instance. [Available images](https://cloud.google.com/bare-metal/docs/bms-planning#server_configurations)
         * 
         * @return builder
         * 
         */
        public Builder osImage(String osImage) {
            return osImage(Output.of(osImage));
        }

        /**
         * @param privateNetwork Private network address, if any.
         * 
         * @return builder
         * 
         */
        public Builder privateNetwork(@Nullable Output<NetworkAddressArgs> privateNetwork) {
            $.privateNetwork = privateNetwork;
            return this;
        }

        /**
         * @param privateNetwork Private network address, if any.
         * 
         * @return builder
         * 
         */
        public Builder privateNetwork(NetworkAddressArgs privateNetwork) {
            return privateNetwork(Output.of(privateNetwork));
        }

        /**
         * @param userNote User note field, it can be used by customers to add additional information for the BMS Ops team .
         * 
         * @return builder
         * 
         */
        public Builder userNote(@Nullable Output<String> userNote) {
            $.userNote = userNote;
            return this;
        }

        /**
         * @param userNote User note field, it can be used by customers to add additional information for the BMS Ops team .
         * 
         * @return builder
         * 
         */
        public Builder userNote(String userNote) {
            return userNote(Output.of(userNote));
        }

        public InstanceConfigArgs build() {
            return $;
        }
    }

}
