// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.logging.v2.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GetOrganizationBucketArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetOrganizationBucketArgs Empty = new GetOrganizationBucketArgs();

    @Import(name="bucketId", required=true)
    private Output<String> bucketId;

    public Output<String> bucketId() {
        return this.bucketId;
    }

    @Import(name="location", required=true)
    private Output<String> location;

    public Output<String> location() {
        return this.location;
    }

    @Import(name="organizationId", required=true)
    private Output<String> organizationId;

    public Output<String> organizationId() {
        return this.organizationId;
    }

    private GetOrganizationBucketArgs() {}

    private GetOrganizationBucketArgs(GetOrganizationBucketArgs $) {
        this.bucketId = $.bucketId;
        this.location = $.location;
        this.organizationId = $.organizationId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetOrganizationBucketArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetOrganizationBucketArgs $;

        public Builder() {
            $ = new GetOrganizationBucketArgs();
        }

        public Builder(GetOrganizationBucketArgs defaults) {
            $ = new GetOrganizationBucketArgs(Objects.requireNonNull(defaults));
        }

        public Builder bucketId(Output<String> bucketId) {
            $.bucketId = bucketId;
            return this;
        }

        public Builder bucketId(String bucketId) {
            return bucketId(Output.of(bucketId));
        }

        public Builder location(Output<String> location) {
            $.location = location;
            return this;
        }

        public Builder location(String location) {
            return location(Output.of(location));
        }

        public Builder organizationId(Output<String> organizationId) {
            $.organizationId = organizationId;
            return this;
        }

        public Builder organizationId(String organizationId) {
            return organizationId(Output.of(organizationId));
        }

        public GetOrganizationBucketArgs build() {
            $.bucketId = Objects.requireNonNull($.bucketId, "expected parameter 'bucketId' to be non-null");
            $.location = Objects.requireNonNull($.location, "expected parameter 'location' to be non-null");
            $.organizationId = Objects.requireNonNull($.organizationId, "expected parameter 'organizationId' to be non-null");
            return $;
        }
    }

}
