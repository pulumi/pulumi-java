// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.servicemanagement_v1.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.servicemanagement_v1.inputs.LabelDescriptorResponse;
import java.lang.String;
import java.util.List;
import java.util.Objects;


/**
 * A description of a log type. Example in YAML format: - name: library.googleapis.com/activity_history description: The history of borrowing and returning library items. display_name: Activity labels: - key: /customer_id description: Identifier of a library customer
 * 
 */
public final class LogDescriptorResponse extends com.pulumi.resources.InvokeArgs {

    public static final LogDescriptorResponse Empty = new LogDescriptorResponse();

    /**
     * A human-readable description of this log. This information appears in the documentation and can contain details.
     * 
     */
    @Import(name="description", required=true)
    private String description;

    /**
     * @return A human-readable description of this log. This information appears in the documentation and can contain details.
     * 
     */
    public String description() {
        return this.description;
    }

    /**
     * The human-readable name for this log. This information appears on the user interface and should be concise.
     * 
     */
    @Import(name="displayName", required=true)
    private String displayName;

    /**
     * @return The human-readable name for this log. This information appears on the user interface and should be concise.
     * 
     */
    public String displayName() {
        return this.displayName;
    }

    /**
     * The set of labels that are available to describe a specific log entry. Runtime requests that contain labels not specified here are considered invalid.
     * 
     */
    @Import(name="labels", required=true)
    private List<LabelDescriptorResponse> labels;

    /**
     * @return The set of labels that are available to describe a specific log entry. Runtime requests that contain labels not specified here are considered invalid.
     * 
     */
    public List<LabelDescriptorResponse> labels() {
        return this.labels;
    }

    /**
     * The name of the log. It must be less than 512 characters long and can include the following characters: upper- and lower-case alphanumeric characters [A-Za-z0-9], and punctuation characters including slash, underscore, hyphen, period [/_-.].
     * 
     */
    @Import(name="name", required=true)
    private String name;

    /**
     * @return The name of the log. It must be less than 512 characters long and can include the following characters: upper- and lower-case alphanumeric characters [A-Za-z0-9], and punctuation characters including slash, underscore, hyphen, period [/_-.].
     * 
     */
    public String name() {
        return this.name;
    }

    private LogDescriptorResponse() {}

    private LogDescriptorResponse(LogDescriptorResponse $) {
        this.description = $.description;
        this.displayName = $.displayName;
        this.labels = $.labels;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LogDescriptorResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LogDescriptorResponse $;

        public Builder() {
            $ = new LogDescriptorResponse();
        }

        public Builder(LogDescriptorResponse defaults) {
            $ = new LogDescriptorResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param description A human-readable description of this log. This information appears in the documentation and can contain details.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            $.description = description;
            return this;
        }

        /**
         * @param displayName The human-readable name for this log. This information appears on the user interface and should be concise.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param labels The set of labels that are available to describe a specific log entry. Runtime requests that contain labels not specified here are considered invalid.
         * 
         * @return builder
         * 
         */
        public Builder labels(List<LabelDescriptorResponse> labels) {
            $.labels = labels;
            return this;
        }

        /**
         * @param labels The set of labels that are available to describe a specific log entry. Runtime requests that contain labels not specified here are considered invalid.
         * 
         * @return builder
         * 
         */
        public Builder labels(LabelDescriptorResponse... labels) {
            return labels(List.of(labels));
        }

        /**
         * @param name The name of the log. It must be less than 512 characters long and can include the following characters: upper- and lower-case alphanumeric characters [A-Za-z0-9], and punctuation characters including slash, underscore, hyphen, period [/_-.].
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            $.name = name;
            return this;
        }

        public LogDescriptorResponse build() {
            $.description = Objects.requireNonNull($.description, "expected parameter 'description' to be non-null");
            $.displayName = Objects.requireNonNull($.displayName, "expected parameter 'displayName' to be non-null");
            $.labels = Objects.requireNonNull($.labels, "expected parameter 'labels' to be non-null");
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            return $;
        }
    }

}
