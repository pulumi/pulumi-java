// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.testing_v1.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.testing_v1.inputs.ManualShardingResponse;
import com.pulumi.googlenative.testing_v1.inputs.UniformShardingResponse;
import java.util.Objects;


/**
 * Options for enabling sharding.
 * 
 */
public final class ShardingOptionResponse extends com.pulumi.resources.InvokeArgs {

    public static final ShardingOptionResponse Empty = new ShardingOptionResponse();

    /**
     * Shards test cases into the specified groups of packages, classes, and/or methods.
     * 
     */
    @Import(name="manualSharding", required=true)
    private ManualShardingResponse manualSharding;

    /**
     * @return Shards test cases into the specified groups of packages, classes, and/or methods.
     * 
     */
    public ManualShardingResponse manualSharding() {
        return this.manualSharding;
    }

    /**
     * Uniformly shards test cases given a total number of shards.
     * 
     */
    @Import(name="uniformSharding", required=true)
    private UniformShardingResponse uniformSharding;

    /**
     * @return Uniformly shards test cases given a total number of shards.
     * 
     */
    public UniformShardingResponse uniformSharding() {
        return this.uniformSharding;
    }

    private ShardingOptionResponse() {}

    private ShardingOptionResponse(ShardingOptionResponse $) {
        this.manualSharding = $.manualSharding;
        this.uniformSharding = $.uniformSharding;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ShardingOptionResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ShardingOptionResponse $;

        public Builder() {
            $ = new ShardingOptionResponse();
        }

        public Builder(ShardingOptionResponse defaults) {
            $ = new ShardingOptionResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param manualSharding Shards test cases into the specified groups of packages, classes, and/or methods.
         * 
         * @return builder
         * 
         */
        public Builder manualSharding(ManualShardingResponse manualSharding) {
            $.manualSharding = manualSharding;
            return this;
        }

        /**
         * @param uniformSharding Uniformly shards test cases given a total number of shards.
         * 
         * @return builder
         * 
         */
        public Builder uniformSharding(UniformShardingResponse uniformSharding) {
            $.uniformSharding = uniformSharding;
            return this;
        }

        public ShardingOptionResponse build() {
            $.manualSharding = Objects.requireNonNull($.manualSharding, "expected parameter 'manualSharding' to be non-null");
            $.uniformSharding = Objects.requireNonNull($.uniformSharding, "expected parameter 'uniformSharding' to be non-null");
            return $;
        }
    }

}
