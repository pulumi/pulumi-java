// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.dialogflow_v3beta1.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * Configuration for the version.
 * 
 */
public final class GoogleCloudDialogflowCxV3beta1EnvironmentVersionConfigResponse extends com.pulumi.resources.InvokeArgs {

    public static final GoogleCloudDialogflowCxV3beta1EnvironmentVersionConfigResponse Empty = new GoogleCloudDialogflowCxV3beta1EnvironmentVersionConfigResponse();

    /**
     * Format: projects//locations//agents//flows//versions/.
     * 
     */
    @Import(name="version", required=true)
    private String version;

    public String version() {
        return this.version;
    }

    private GoogleCloudDialogflowCxV3beta1EnvironmentVersionConfigResponse() {}

    private GoogleCloudDialogflowCxV3beta1EnvironmentVersionConfigResponse(GoogleCloudDialogflowCxV3beta1EnvironmentVersionConfigResponse $) {
        this.version = $.version;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GoogleCloudDialogflowCxV3beta1EnvironmentVersionConfigResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GoogleCloudDialogflowCxV3beta1EnvironmentVersionConfigResponse $;

        public Builder() {
            $ = new GoogleCloudDialogflowCxV3beta1EnvironmentVersionConfigResponse();
        }

        public Builder(GoogleCloudDialogflowCxV3beta1EnvironmentVersionConfigResponse defaults) {
            $ = new GoogleCloudDialogflowCxV3beta1EnvironmentVersionConfigResponse(Objects.requireNonNull(defaults));
        }

        public Builder version(String version) {
            $.version = version;
            return this;
        }

        public GoogleCloudDialogflowCxV3beta1EnvironmentVersionConfigResponse build() {
            $.version = Objects.requireNonNull($.version, "expected parameter 'version' to be non-null");
            return $;
        }
    }

}
