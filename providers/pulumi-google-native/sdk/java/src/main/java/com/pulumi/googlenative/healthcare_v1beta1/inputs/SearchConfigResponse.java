// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.healthcare_v1beta1.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.healthcare_v1beta1.inputs.SearchParameterResponse;
import java.util.List;
import java.util.Objects;


/**
 * Contains the configuration for FHIR search.
 * 
 */
public final class SearchConfigResponse extends com.pulumi.resources.InvokeArgs {

    public static final SearchConfigResponse Empty = new SearchConfigResponse();

    /**
     * A list of search parameters in this FHIR store that are used to configure this FHIR store.
     * 
     */
    @Import(name="searchParameters", required=true)
    private List<SearchParameterResponse> searchParameters;

    /**
     * @return A list of search parameters in this FHIR store that are used to configure this FHIR store.
     * 
     */
    public List<SearchParameterResponse> searchParameters() {
        return this.searchParameters;
    }

    private SearchConfigResponse() {}

    private SearchConfigResponse(SearchConfigResponse $) {
        this.searchParameters = $.searchParameters;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SearchConfigResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SearchConfigResponse $;

        public Builder() {
            $ = new SearchConfigResponse();
        }

        public Builder(SearchConfigResponse defaults) {
            $ = new SearchConfigResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param searchParameters A list of search parameters in this FHIR store that are used to configure this FHIR store.
         * 
         * @return builder
         * 
         */
        public Builder searchParameters(List<SearchParameterResponse> searchParameters) {
            $.searchParameters = searchParameters;
            return this;
        }

        /**
         * @param searchParameters A list of search parameters in this FHIR store that are used to configure this FHIR store.
         * 
         * @return builder
         * 
         */
        public Builder searchParameters(SearchParameterResponse... searchParameters) {
            return searchParameters(List.of(searchParameters));
        }

        public SearchConfigResponse build() {
            $.searchParameters = Objects.requireNonNull($.searchParameters, "expected parameter 'searchParameters' to be non-null");
            return $;
        }
    }

}
