// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.cloudtasks_v2beta2.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.cloudtasks_v2beta2.inputs.StatusResponse;
import java.lang.String;
import java.util.Objects;


/**
 * The status of a task attempt.
 * 
 */
public final class AttemptStatusResponse extends com.pulumi.resources.InvokeArgs {

    public static final AttemptStatusResponse Empty = new AttemptStatusResponse();

    /**
     * The time that this attempt was dispatched. `dispatch_time` will be truncated to the nearest microsecond.
     * 
     */
    @Import(name="dispatchTime", required=true)
    private String dispatchTime;

    public String dispatchTime() {
        return this.dispatchTime;
    }

    /**
     * The response from the target for this attempt. If the task has not been attempted or the task is currently running then the response status is unset.
     * 
     */
    @Import(name="responseStatus", required=true)
    private StatusResponse responseStatus;

    public StatusResponse responseStatus() {
        return this.responseStatus;
    }

    /**
     * The time that this attempt response was received. `response_time` will be truncated to the nearest microsecond.
     * 
     */
    @Import(name="responseTime", required=true)
    private String responseTime;

    public String responseTime() {
        return this.responseTime;
    }

    /**
     * The time that this attempt was scheduled. `schedule_time` will be truncated to the nearest microsecond.
     * 
     */
    @Import(name="scheduleTime", required=true)
    private String scheduleTime;

    public String scheduleTime() {
        return this.scheduleTime;
    }

    private AttemptStatusResponse() {}

    private AttemptStatusResponse(AttemptStatusResponse $) {
        this.dispatchTime = $.dispatchTime;
        this.responseStatus = $.responseStatus;
        this.responseTime = $.responseTime;
        this.scheduleTime = $.scheduleTime;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AttemptStatusResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AttemptStatusResponse $;

        public Builder() {
            $ = new AttemptStatusResponse();
        }

        public Builder(AttemptStatusResponse defaults) {
            $ = new AttemptStatusResponse(Objects.requireNonNull(defaults));
        }

        public Builder dispatchTime(String dispatchTime) {
            $.dispatchTime = dispatchTime;
            return this;
        }

        public Builder responseStatus(StatusResponse responseStatus) {
            $.responseStatus = responseStatus;
            return this;
        }

        public Builder responseTime(String responseTime) {
            $.responseTime = responseTime;
            return this;
        }

        public Builder scheduleTime(String scheduleTime) {
            $.scheduleTime = scheduleTime;
            return this;
        }

        public AttemptStatusResponse build() {
            $.dispatchTime = Objects.requireNonNull($.dispatchTime, "expected parameter 'dispatchTime' to be non-null");
            $.responseStatus = Objects.requireNonNull($.responseStatus, "expected parameter 'responseStatus' to be non-null");
            $.responseTime = Objects.requireNonNull($.responseTime, "expected parameter 'responseTime' to be non-null");
            $.scheduleTime = Objects.requireNonNull($.scheduleTime, "expected parameter 'scheduleTime' to be non-null");
            return $;
        }
    }

}
