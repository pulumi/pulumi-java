// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.bigquery_v2.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class JobReferenceResponse extends com.pulumi.resources.InvokeArgs {

    public static final JobReferenceResponse Empty = new JobReferenceResponse();

    /**
     * [Required] The ID of the job. The ID must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), or dashes (-). The maximum length is 1,024 characters.
     * 
     */
    @Import(name="jobId", required=true)
    private String jobId;

    /**
     * @return [Required] The ID of the job. The ID must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), or dashes (-). The maximum length is 1,024 characters.
     * 
     */
    public String jobId() {
        return this.jobId;
    }

    /**
     * The geographic location of the job. See details at https://cloud.google.com/bigquery/docs/locations#specifying_your_location.
     * 
     */
    @Import(name="location", required=true)
    private String location;

    /**
     * @return The geographic location of the job. See details at https://cloud.google.com/bigquery/docs/locations#specifying_your_location.
     * 
     */
    public String location() {
        return this.location;
    }

    /**
     * [Required] The ID of the project containing this job.
     * 
     */
    @Import(name="project", required=true)
    private String project;

    /**
     * @return [Required] The ID of the project containing this job.
     * 
     */
    public String project() {
        return this.project;
    }

    private JobReferenceResponse() {}

    private JobReferenceResponse(JobReferenceResponse $) {
        this.jobId = $.jobId;
        this.location = $.location;
        this.project = $.project;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(JobReferenceResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private JobReferenceResponse $;

        public Builder() {
            $ = new JobReferenceResponse();
        }

        public Builder(JobReferenceResponse defaults) {
            $ = new JobReferenceResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param jobId [Required] The ID of the job. The ID must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), or dashes (-). The maximum length is 1,024 characters.
         * 
         * @return builder
         * 
         */
        public Builder jobId(String jobId) {
            $.jobId = jobId;
            return this;
        }

        /**
         * @param location The geographic location of the job. See details at https://cloud.google.com/bigquery/docs/locations#specifying_your_location.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            $.location = location;
            return this;
        }

        /**
         * @param project [Required] The ID of the project containing this job.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            $.project = project;
            return this;
        }

        public JobReferenceResponse build() {
            $.jobId = Objects.requireNonNull($.jobId, "expected parameter 'jobId' to be non-null");
            $.location = Objects.requireNonNull($.location, "expected parameter 'location' to be non-null");
            $.project = Objects.requireNonNull($.project, "expected parameter 'project' to be non-null");
            return $;
        }
    }

}
