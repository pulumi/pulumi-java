// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.compute_alpha.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.compute_alpha.inputs.TlsCertificatePathsResponse;
import java.lang.String;
import java.util.Objects;


/**
 * [Deprecated] gRPC channel credentials to access the SDS server. gRPC channel credentials to access the SDS server.
 * 
 */
public final class ChannelCredentialsResponse extends com.pulumi.resources.InvokeArgs {

    public static final ChannelCredentialsResponse Empty = new ChannelCredentialsResponse();

    /**
     * The call credentials to access the SDS server.
     * 
     */
    @Import(name="certificates", required=true)
    private TlsCertificatePathsResponse certificates;

    public TlsCertificatePathsResponse certificates() {
        return this.certificates;
    }

    /**
     * The channel credentials to access the SDS server. This field can be set to one of the following: CERTIFICATES: Use TLS certificates to access the SDS server. GCE_VM: Use local GCE VM credentials to access the SDS server.
     * 
     */
    @Import(name="channelCredentialType", required=true)
    private String channelCredentialType;

    public String channelCredentialType() {
        return this.channelCredentialType;
    }

    private ChannelCredentialsResponse() {}

    private ChannelCredentialsResponse(ChannelCredentialsResponse $) {
        this.certificates = $.certificates;
        this.channelCredentialType = $.channelCredentialType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ChannelCredentialsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ChannelCredentialsResponse $;

        public Builder() {
            $ = new ChannelCredentialsResponse();
        }

        public Builder(ChannelCredentialsResponse defaults) {
            $ = new ChannelCredentialsResponse(Objects.requireNonNull(defaults));
        }

        public Builder certificates(TlsCertificatePathsResponse certificates) {
            $.certificates = certificates;
            return this;
        }

        public Builder channelCredentialType(String channelCredentialType) {
            $.channelCredentialType = channelCredentialType;
            return this;
        }

        public ChannelCredentialsResponse build() {
            $.certificates = Objects.requireNonNull($.certificates, "expected parameter 'certificates' to be non-null");
            $.channelCredentialType = Objects.requireNonNull($.channelCredentialType, "expected parameter 'channelCredentialType' to be non-null");
            return $;
        }
    }

}
