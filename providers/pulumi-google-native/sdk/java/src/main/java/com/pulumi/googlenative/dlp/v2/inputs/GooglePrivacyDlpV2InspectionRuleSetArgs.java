// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.dlp.v2.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.dlp.v2.inputs.GooglePrivacyDlpV2InfoTypeArgs;
import com.pulumi.googlenative.dlp.v2.inputs.GooglePrivacyDlpV2InspectionRuleArgs;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Rule set for modifying a set of infoTypes to alter behavior under certain circumstances, depending on the specific details of the rules within the set.
 * 
 */
public final class GooglePrivacyDlpV2InspectionRuleSetArgs extends com.pulumi.resources.ResourceArgs {

    public static final GooglePrivacyDlpV2InspectionRuleSetArgs Empty = new GooglePrivacyDlpV2InspectionRuleSetArgs();

    /**
     * List of infoTypes this rule set is applied to.
     * 
     */
    @Import(name="infoTypes")
    private @Nullable Output<List<GooglePrivacyDlpV2InfoTypeArgs>> infoTypes;

    /**
     * @return List of infoTypes this rule set is applied to.
     * 
     */
    public Optional<Output<List<GooglePrivacyDlpV2InfoTypeArgs>>> infoTypes() {
        return Optional.ofNullable(this.infoTypes);
    }

    /**
     * Set of rules to be applied to infoTypes. The rules are applied in order.
     * 
     */
    @Import(name="rules")
    private @Nullable Output<List<GooglePrivacyDlpV2InspectionRuleArgs>> rules;

    /**
     * @return Set of rules to be applied to infoTypes. The rules are applied in order.
     * 
     */
    public Optional<Output<List<GooglePrivacyDlpV2InspectionRuleArgs>>> rules() {
        return Optional.ofNullable(this.rules);
    }

    private GooglePrivacyDlpV2InspectionRuleSetArgs() {}

    private GooglePrivacyDlpV2InspectionRuleSetArgs(GooglePrivacyDlpV2InspectionRuleSetArgs $) {
        this.infoTypes = $.infoTypes;
        this.rules = $.rules;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GooglePrivacyDlpV2InspectionRuleSetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GooglePrivacyDlpV2InspectionRuleSetArgs $;

        public Builder() {
            $ = new GooglePrivacyDlpV2InspectionRuleSetArgs();
        }

        public Builder(GooglePrivacyDlpV2InspectionRuleSetArgs defaults) {
            $ = new GooglePrivacyDlpV2InspectionRuleSetArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param infoTypes List of infoTypes this rule set is applied to.
         * 
         * @return builder
         * 
         */
        public Builder infoTypes(@Nullable Output<List<GooglePrivacyDlpV2InfoTypeArgs>> infoTypes) {
            $.infoTypes = infoTypes;
            return this;
        }

        /**
         * @param infoTypes List of infoTypes this rule set is applied to.
         * 
         * @return builder
         * 
         */
        public Builder infoTypes(List<GooglePrivacyDlpV2InfoTypeArgs> infoTypes) {
            return infoTypes(Output.of(infoTypes));
        }

        /**
         * @param infoTypes List of infoTypes this rule set is applied to.
         * 
         * @return builder
         * 
         */
        public Builder infoTypes(GooglePrivacyDlpV2InfoTypeArgs... infoTypes) {
            return infoTypes(List.of(infoTypes));
        }

        /**
         * @param rules Set of rules to be applied to infoTypes. The rules are applied in order.
         * 
         * @return builder
         * 
         */
        public Builder rules(@Nullable Output<List<GooglePrivacyDlpV2InspectionRuleArgs>> rules) {
            $.rules = rules;
            return this;
        }

        /**
         * @param rules Set of rules to be applied to infoTypes. The rules are applied in order.
         * 
         * @return builder
         * 
         */
        public Builder rules(List<GooglePrivacyDlpV2InspectionRuleArgs> rules) {
            return rules(Output.of(rules));
        }

        /**
         * @param rules Set of rules to be applied to infoTypes. The rules are applied in order.
         * 
         * @return builder
         * 
         */
        public Builder rules(GooglePrivacyDlpV2InspectionRuleArgs... rules) {
            return rules(List.of(rules));
        }

        public GooglePrivacyDlpV2InspectionRuleSetArgs build() {
            return $;
        }
    }

}
