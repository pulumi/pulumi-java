// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.recaptchaenterprise.v1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.recaptchaenterprise.v1.enums.GoogleCloudRecaptchaenterpriseV1TestingOptionsTestingChallenge;
import java.lang.Double;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Options for user acceptance testing.
 * 
 */
public final class GoogleCloudRecaptchaenterpriseV1TestingOptionsArgs extends com.pulumi.resources.ResourceArgs {

    public static final GoogleCloudRecaptchaenterpriseV1TestingOptionsArgs Empty = new GoogleCloudRecaptchaenterpriseV1TestingOptionsArgs();

    /**
     * For challenge-based keys only (CHECKBOX, INVISIBLE), all challenge requests for this site will return nocaptcha if NOCAPTCHA, or an unsolvable challenge if CHALLENGE.
     * 
     */
    @Import(name="testingChallenge")
    private @Nullable Output<GoogleCloudRecaptchaenterpriseV1TestingOptionsTestingChallenge> testingChallenge;

    /**
     * @return For challenge-based keys only (CHECKBOX, INVISIBLE), all challenge requests for this site will return nocaptcha if NOCAPTCHA, or an unsolvable challenge if CHALLENGE.
     * 
     */
    public Optional<Output<GoogleCloudRecaptchaenterpriseV1TestingOptionsTestingChallenge>> testingChallenge() {
        return Optional.ofNullable(this.testingChallenge);
    }

    /**
     * All assessments for this Key will return this score. Must be between 0 (likely not legitimate) and 1 (likely legitimate) inclusive.
     * 
     */
    @Import(name="testingScore")
    private @Nullable Output<Double> testingScore;

    /**
     * @return All assessments for this Key will return this score. Must be between 0 (likely not legitimate) and 1 (likely legitimate) inclusive.
     * 
     */
    public Optional<Output<Double>> testingScore() {
        return Optional.ofNullable(this.testingScore);
    }

    private GoogleCloudRecaptchaenterpriseV1TestingOptionsArgs() {}

    private GoogleCloudRecaptchaenterpriseV1TestingOptionsArgs(GoogleCloudRecaptchaenterpriseV1TestingOptionsArgs $) {
        this.testingChallenge = $.testingChallenge;
        this.testingScore = $.testingScore;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GoogleCloudRecaptchaenterpriseV1TestingOptionsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GoogleCloudRecaptchaenterpriseV1TestingOptionsArgs $;

        public Builder() {
            $ = new GoogleCloudRecaptchaenterpriseV1TestingOptionsArgs();
        }

        public Builder(GoogleCloudRecaptchaenterpriseV1TestingOptionsArgs defaults) {
            $ = new GoogleCloudRecaptchaenterpriseV1TestingOptionsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param testingChallenge For challenge-based keys only (CHECKBOX, INVISIBLE), all challenge requests for this site will return nocaptcha if NOCAPTCHA, or an unsolvable challenge if CHALLENGE.
         * 
         * @return builder
         * 
         */
        public Builder testingChallenge(@Nullable Output<GoogleCloudRecaptchaenterpriseV1TestingOptionsTestingChallenge> testingChallenge) {
            $.testingChallenge = testingChallenge;
            return this;
        }

        /**
         * @param testingChallenge For challenge-based keys only (CHECKBOX, INVISIBLE), all challenge requests for this site will return nocaptcha if NOCAPTCHA, or an unsolvable challenge if CHALLENGE.
         * 
         * @return builder
         * 
         */
        public Builder testingChallenge(GoogleCloudRecaptchaenterpriseV1TestingOptionsTestingChallenge testingChallenge) {
            return testingChallenge(Output.of(testingChallenge));
        }

        /**
         * @param testingScore All assessments for this Key will return this score. Must be between 0 (likely not legitimate) and 1 (likely legitimate) inclusive.
         * 
         * @return builder
         * 
         */
        public Builder testingScore(@Nullable Output<Double> testingScore) {
            $.testingScore = testingScore;
            return this;
        }

        /**
         * @param testingScore All assessments for this Key will return this score. Must be between 0 (likely not legitimate) and 1 (likely legitimate) inclusive.
         * 
         * @return builder
         * 
         */
        public Builder testingScore(Double testingScore) {
            return testingScore(Output.of(testingScore));
        }

        public GoogleCloudRecaptchaenterpriseV1TestingOptionsArgs build() {
            return $;
        }
    }

}
