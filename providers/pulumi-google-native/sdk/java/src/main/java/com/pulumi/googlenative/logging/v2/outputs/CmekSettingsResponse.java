// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.logging.v2.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class CmekSettingsResponse {
    /**
     * @return The resource name for the configured Cloud KMS key.KMS key name format: &#34;projects/[PROJECT_ID]/locations/[LOCATION]/keyRings/[KEYRING]/cryptoKeys/[KEY]&#34; For example:&#34;projects/my-project/locations/us-central1/keyRings/my-ring/cryptoKeys/my-key&#34;To enable CMEK for the Log Router, set this field to a valid kms_key_name for which the associated service account has the required cloudkms.cryptoKeyEncrypterDecrypter roles assigned for the key.The Cloud KMS key used by the Log Router can be updated by changing the kms_key_name to a new valid key name or disabled by setting the key name to an empty string. Encryption operations that are in progress will be completed with the key that was in use when they started. Decryption operations will be completed using the key that was used at the time of encryption unless access to that key has been revoked.To disable CMEK for the Log Router, set this field to an empty string.See Enabling CMEK for Log Router (https://cloud.google.com/logging/docs/routing/managed-encryption) for more information.
     * 
     */
    private final String kmsKeyName;
    /**
     * @return The CryptoKeyVersion resource name for the configured Cloud KMS key.KMS key name format: &#34;projects/[PROJECT_ID]/locations/[LOCATION]/keyRings/[KEYRING]/cryptoKeys/[KEY]/cryptoKeyVersions/[VERSION]&#34; For example:&#34;projects/my-project/locations/us-central1/keyRings/my-ring/cryptoKeys/my-key/cryptoKeyVersions/1&#34;This is a read-only field used to convey the specific configured CryptoKeyVersion of kms_key that has been configured. It will be populated in cases where the CMEK settings are bound to a single key version.
     * 
     */
    private final String kmsKeyVersionName;
    /**
     * @return The resource name of the CMEK settings.
     * 
     */
    private final String name;
    /**
     * @return The service account that will be used by the Log Router to access your Cloud KMS key.Before enabling CMEK for Log Router, you must first assign the cloudkms.cryptoKeyEncrypterDecrypter role to the service account that the Log Router will use to access your Cloud KMS key. Use GetCmekSettings to obtain the service account ID.See Enabling CMEK for Log Router (https://cloud.google.com/logging/docs/routing/managed-encryption) for more information.
     * 
     */
    private final String serviceAccountId;

    @CustomType.Constructor
    private CmekSettingsResponse(
        @CustomType.Parameter("kmsKeyName") String kmsKeyName,
        @CustomType.Parameter("kmsKeyVersionName") String kmsKeyVersionName,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("serviceAccountId") String serviceAccountId) {
        this.kmsKeyName = kmsKeyName;
        this.kmsKeyVersionName = kmsKeyVersionName;
        this.name = name;
        this.serviceAccountId = serviceAccountId;
    }

    /**
     * @return The resource name for the configured Cloud KMS key.KMS key name format: &#34;projects/[PROJECT_ID]/locations/[LOCATION]/keyRings/[KEYRING]/cryptoKeys/[KEY]&#34; For example:&#34;projects/my-project/locations/us-central1/keyRings/my-ring/cryptoKeys/my-key&#34;To enable CMEK for the Log Router, set this field to a valid kms_key_name for which the associated service account has the required cloudkms.cryptoKeyEncrypterDecrypter roles assigned for the key.The Cloud KMS key used by the Log Router can be updated by changing the kms_key_name to a new valid key name or disabled by setting the key name to an empty string. Encryption operations that are in progress will be completed with the key that was in use when they started. Decryption operations will be completed using the key that was used at the time of encryption unless access to that key has been revoked.To disable CMEK for the Log Router, set this field to an empty string.See Enabling CMEK for Log Router (https://cloud.google.com/logging/docs/routing/managed-encryption) for more information.
     * 
     */
    public String kmsKeyName() {
        return this.kmsKeyName;
    }
    /**
     * @return The CryptoKeyVersion resource name for the configured Cloud KMS key.KMS key name format: &#34;projects/[PROJECT_ID]/locations/[LOCATION]/keyRings/[KEYRING]/cryptoKeys/[KEY]/cryptoKeyVersions/[VERSION]&#34; For example:&#34;projects/my-project/locations/us-central1/keyRings/my-ring/cryptoKeys/my-key/cryptoKeyVersions/1&#34;This is a read-only field used to convey the specific configured CryptoKeyVersion of kms_key that has been configured. It will be populated in cases where the CMEK settings are bound to a single key version.
     * 
     */
    public String kmsKeyVersionName() {
        return this.kmsKeyVersionName;
    }
    /**
     * @return The resource name of the CMEK settings.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The service account that will be used by the Log Router to access your Cloud KMS key.Before enabling CMEK for Log Router, you must first assign the cloudkms.cryptoKeyEncrypterDecrypter role to the service account that the Log Router will use to access your Cloud KMS key. Use GetCmekSettings to obtain the service account ID.See Enabling CMEK for Log Router (https://cloud.google.com/logging/docs/routing/managed-encryption) for more information.
     * 
     */
    public String serviceAccountId() {
        return this.serviceAccountId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CmekSettingsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String kmsKeyName;
        private String kmsKeyVersionName;
        private String name;
        private String serviceAccountId;

        public Builder() {
    	      // Empty
        }

        public Builder(CmekSettingsResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.kmsKeyName = defaults.kmsKeyName;
    	      this.kmsKeyVersionName = defaults.kmsKeyVersionName;
    	      this.name = defaults.name;
    	      this.serviceAccountId = defaults.serviceAccountId;
        }

        public Builder kmsKeyName(String kmsKeyName) {
            this.kmsKeyName = Objects.requireNonNull(kmsKeyName);
            return this;
        }
        public Builder kmsKeyVersionName(String kmsKeyVersionName) {
            this.kmsKeyVersionName = Objects.requireNonNull(kmsKeyVersionName);
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder serviceAccountId(String serviceAccountId) {
            this.serviceAccountId = Objects.requireNonNull(serviceAccountId);
            return this;
        }        public CmekSettingsResponse build() {
            return new CmekSettingsResponse(kmsKeyName, kmsKeyVersionName, name, serviceAccountId);
        }
    }
}
