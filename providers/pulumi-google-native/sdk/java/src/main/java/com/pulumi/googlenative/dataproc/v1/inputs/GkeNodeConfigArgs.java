// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.dataproc.v1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.dataproc.v1.inputs.GkeNodePoolAcceleratorConfigArgs;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Parameters that describe cluster nodes.
 * 
 */
public final class GkeNodeConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final GkeNodeConfigArgs Empty = new GkeNodeConfigArgs();

    /**
     * Optional. A list of hardware accelerators (https://cloud.google.com/compute/docs/gpus) to attach to each node.
     * 
     */
    @Import(name="accelerators")
    private @Nullable Output<List<GkeNodePoolAcceleratorConfigArgs>> accelerators;

    /**
     * @return Optional. A list of hardware accelerators (https://cloud.google.com/compute/docs/gpus) to attach to each node.
     * 
     */
    public Optional<Output<List<GkeNodePoolAcceleratorConfigArgs>>> accelerators() {
        return Optional.ofNullable(this.accelerators);
    }

    /**
     * Optional. The Customer Managed Encryption Key (CMEK) (https://cloud.google.com/kubernetes-engine/docs/how-to/using-cmek) used to encrypt the boot disk attached to each node in the node pool. Specify the key using the following format: projects/KEY_PROJECT_ID/locations/LOCATION /keyRings/RING_NAME/cryptoKeys/KEY_NAME.
     * 
     */
    @Import(name="bootDiskKmsKey")
    private @Nullable Output<String> bootDiskKmsKey;

    /**
     * @return Optional. The Customer Managed Encryption Key (CMEK) (https://cloud.google.com/kubernetes-engine/docs/how-to/using-cmek) used to encrypt the boot disk attached to each node in the node pool. Specify the key using the following format: projects/KEY_PROJECT_ID/locations/LOCATION /keyRings/RING_NAME/cryptoKeys/KEY_NAME.
     * 
     */
    public Optional<Output<String>> bootDiskKmsKey() {
        return Optional.ofNullable(this.bootDiskKmsKey);
    }

    /**
     * Optional. The number of local SSD disks to attach to the node, which is limited by the maximum number of disks allowable per zone (see Adding Local SSDs (https://cloud.google.com/compute/docs/disks/local-ssd)).
     * 
     */
    @Import(name="localSsdCount")
    private @Nullable Output<Integer> localSsdCount;

    /**
     * @return Optional. The number of local SSD disks to attach to the node, which is limited by the maximum number of disks allowable per zone (see Adding Local SSDs (https://cloud.google.com/compute/docs/disks/local-ssd)).
     * 
     */
    public Optional<Output<Integer>> localSsdCount() {
        return Optional.ofNullable(this.localSsdCount);
    }

    /**
     * Optional. The name of a Compute Engine machine type (https://cloud.google.com/compute/docs/machine-types).
     * 
     */
    @Import(name="machineType")
    private @Nullable Output<String> machineType;

    /**
     * @return Optional. The name of a Compute Engine machine type (https://cloud.google.com/compute/docs/machine-types).
     * 
     */
    public Optional<Output<String>> machineType() {
        return Optional.ofNullable(this.machineType);
    }

    /**
     * Optional. Minimum CPU platform (https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform) to be used by this instance. The instance may be scheduled on the specified or a newer CPU platform. Specify the friendly names of CPU platforms, such as &#34;Intel Haswell&#34;` or Intel Sandy Bridge&#34;.
     * 
     */
    @Import(name="minCpuPlatform")
    private @Nullable Output<String> minCpuPlatform;

    /**
     * @return Optional. Minimum CPU platform (https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform) to be used by this instance. The instance may be scheduled on the specified or a newer CPU platform. Specify the friendly names of CPU platforms, such as &#34;Intel Haswell&#34;` or Intel Sandy Bridge&#34;.
     * 
     */
    public Optional<Output<String>> minCpuPlatform() {
        return Optional.ofNullable(this.minCpuPlatform);
    }

    /**
     * Optional. Whether the nodes are created as preemptible VM instances (https://cloud.google.com/compute/docs/instances/preemptible). Preemptible nodes cannot be used in a node pool with the CONTROLLER role or in the DEFAULT node pool if the CONTROLLER role is not assigned (the DEFAULT node pool will assume the CONTROLLER role).
     * 
     */
    @Import(name="preemptible")
    private @Nullable Output<Boolean> preemptible;

    /**
     * @return Optional. Whether the nodes are created as preemptible VM instances (https://cloud.google.com/compute/docs/instances/preemptible). Preemptible nodes cannot be used in a node pool with the CONTROLLER role or in the DEFAULT node pool if the CONTROLLER role is not assigned (the DEFAULT node pool will assume the CONTROLLER role).
     * 
     */
    public Optional<Output<Boolean>> preemptible() {
        return Optional.ofNullable(this.preemptible);
    }

    /**
     * Optional. Spot flag for enabling Spot VM, which is a rebrand of the existing preemptible flag.
     * 
     */
    @Import(name="spot")
    private @Nullable Output<Boolean> spot;

    /**
     * @return Optional. Spot flag for enabling Spot VM, which is a rebrand of the existing preemptible flag.
     * 
     */
    public Optional<Output<Boolean>> spot() {
        return Optional.ofNullable(this.spot);
    }

    private GkeNodeConfigArgs() {}

    private GkeNodeConfigArgs(GkeNodeConfigArgs $) {
        this.accelerators = $.accelerators;
        this.bootDiskKmsKey = $.bootDiskKmsKey;
        this.localSsdCount = $.localSsdCount;
        this.machineType = $.machineType;
        this.minCpuPlatform = $.minCpuPlatform;
        this.preemptible = $.preemptible;
        this.spot = $.spot;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GkeNodeConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GkeNodeConfigArgs $;

        public Builder() {
            $ = new GkeNodeConfigArgs();
        }

        public Builder(GkeNodeConfigArgs defaults) {
            $ = new GkeNodeConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accelerators Optional. A list of hardware accelerators (https://cloud.google.com/compute/docs/gpus) to attach to each node.
         * 
         * @return builder
         * 
         */
        public Builder accelerators(@Nullable Output<List<GkeNodePoolAcceleratorConfigArgs>> accelerators) {
            $.accelerators = accelerators;
            return this;
        }

        /**
         * @param accelerators Optional. A list of hardware accelerators (https://cloud.google.com/compute/docs/gpus) to attach to each node.
         * 
         * @return builder
         * 
         */
        public Builder accelerators(List<GkeNodePoolAcceleratorConfigArgs> accelerators) {
            return accelerators(Output.of(accelerators));
        }

        /**
         * @param accelerators Optional. A list of hardware accelerators (https://cloud.google.com/compute/docs/gpus) to attach to each node.
         * 
         * @return builder
         * 
         */
        public Builder accelerators(GkeNodePoolAcceleratorConfigArgs... accelerators) {
            return accelerators(List.of(accelerators));
        }

        /**
         * @param bootDiskKmsKey Optional. The Customer Managed Encryption Key (CMEK) (https://cloud.google.com/kubernetes-engine/docs/how-to/using-cmek) used to encrypt the boot disk attached to each node in the node pool. Specify the key using the following format: projects/KEY_PROJECT_ID/locations/LOCATION /keyRings/RING_NAME/cryptoKeys/KEY_NAME.
         * 
         * @return builder
         * 
         */
        public Builder bootDiskKmsKey(@Nullable Output<String> bootDiskKmsKey) {
            $.bootDiskKmsKey = bootDiskKmsKey;
            return this;
        }

        /**
         * @param bootDiskKmsKey Optional. The Customer Managed Encryption Key (CMEK) (https://cloud.google.com/kubernetes-engine/docs/how-to/using-cmek) used to encrypt the boot disk attached to each node in the node pool. Specify the key using the following format: projects/KEY_PROJECT_ID/locations/LOCATION /keyRings/RING_NAME/cryptoKeys/KEY_NAME.
         * 
         * @return builder
         * 
         */
        public Builder bootDiskKmsKey(String bootDiskKmsKey) {
            return bootDiskKmsKey(Output.of(bootDiskKmsKey));
        }

        /**
         * @param localSsdCount Optional. The number of local SSD disks to attach to the node, which is limited by the maximum number of disks allowable per zone (see Adding Local SSDs (https://cloud.google.com/compute/docs/disks/local-ssd)).
         * 
         * @return builder
         * 
         */
        public Builder localSsdCount(@Nullable Output<Integer> localSsdCount) {
            $.localSsdCount = localSsdCount;
            return this;
        }

        /**
         * @param localSsdCount Optional. The number of local SSD disks to attach to the node, which is limited by the maximum number of disks allowable per zone (see Adding Local SSDs (https://cloud.google.com/compute/docs/disks/local-ssd)).
         * 
         * @return builder
         * 
         */
        public Builder localSsdCount(Integer localSsdCount) {
            return localSsdCount(Output.of(localSsdCount));
        }

        /**
         * @param machineType Optional. The name of a Compute Engine machine type (https://cloud.google.com/compute/docs/machine-types).
         * 
         * @return builder
         * 
         */
        public Builder machineType(@Nullable Output<String> machineType) {
            $.machineType = machineType;
            return this;
        }

        /**
         * @param machineType Optional. The name of a Compute Engine machine type (https://cloud.google.com/compute/docs/machine-types).
         * 
         * @return builder
         * 
         */
        public Builder machineType(String machineType) {
            return machineType(Output.of(machineType));
        }

        /**
         * @param minCpuPlatform Optional. Minimum CPU platform (https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform) to be used by this instance. The instance may be scheduled on the specified or a newer CPU platform. Specify the friendly names of CPU platforms, such as &#34;Intel Haswell&#34;` or Intel Sandy Bridge&#34;.
         * 
         * @return builder
         * 
         */
        public Builder minCpuPlatform(@Nullable Output<String> minCpuPlatform) {
            $.minCpuPlatform = minCpuPlatform;
            return this;
        }

        /**
         * @param minCpuPlatform Optional. Minimum CPU platform (https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform) to be used by this instance. The instance may be scheduled on the specified or a newer CPU platform. Specify the friendly names of CPU platforms, such as &#34;Intel Haswell&#34;` or Intel Sandy Bridge&#34;.
         * 
         * @return builder
         * 
         */
        public Builder minCpuPlatform(String minCpuPlatform) {
            return minCpuPlatform(Output.of(minCpuPlatform));
        }

        /**
         * @param preemptible Optional. Whether the nodes are created as preemptible VM instances (https://cloud.google.com/compute/docs/instances/preemptible). Preemptible nodes cannot be used in a node pool with the CONTROLLER role or in the DEFAULT node pool if the CONTROLLER role is not assigned (the DEFAULT node pool will assume the CONTROLLER role).
         * 
         * @return builder
         * 
         */
        public Builder preemptible(@Nullable Output<Boolean> preemptible) {
            $.preemptible = preemptible;
            return this;
        }

        /**
         * @param preemptible Optional. Whether the nodes are created as preemptible VM instances (https://cloud.google.com/compute/docs/instances/preemptible). Preemptible nodes cannot be used in a node pool with the CONTROLLER role or in the DEFAULT node pool if the CONTROLLER role is not assigned (the DEFAULT node pool will assume the CONTROLLER role).
         * 
         * @return builder
         * 
         */
        public Builder preemptible(Boolean preemptible) {
            return preemptible(Output.of(preemptible));
        }

        /**
         * @param spot Optional. Spot flag for enabling Spot VM, which is a rebrand of the existing preemptible flag.
         * 
         * @return builder
         * 
         */
        public Builder spot(@Nullable Output<Boolean> spot) {
            $.spot = spot;
            return this;
        }

        /**
         * @param spot Optional. Spot flag for enabling Spot VM, which is a rebrand of the existing preemptible flag.
         * 
         * @return builder
         * 
         */
        public Builder spot(Boolean spot) {
            return spot(Output.of(spot));
        }

        public GkeNodeConfigArgs build() {
            return $;
        }
    }

}
