// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.healthcare_v1beta1.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * The content of an HL7v2 message in a structured format as specified by a schema.
 * 
 */
public final class SchematizedDataResponse extends com.pulumi.resources.InvokeArgs {

    public static final SchematizedDataResponse Empty = new SchematizedDataResponse();

    /**
     * JSON output of the parser.
     * 
     */
    @Import(name="data", required=true)
    private String data;

    /**
     * @return JSON output of the parser.
     * 
     */
    public String data() {
        return this.data;
    }

    /**
     * The error output of the parser.
     * 
     */
    @Import(name="error", required=true)
    private String error;

    /**
     * @return The error output of the parser.
     * 
     */
    public String error() {
        return this.error;
    }

    private SchematizedDataResponse() {}

    private SchematizedDataResponse(SchematizedDataResponse $) {
        this.data = $.data;
        this.error = $.error;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SchematizedDataResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SchematizedDataResponse $;

        public Builder() {
            $ = new SchematizedDataResponse();
        }

        public Builder(SchematizedDataResponse defaults) {
            $ = new SchematizedDataResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param data JSON output of the parser.
         * 
         * @return builder
         * 
         */
        public Builder data(String data) {
            $.data = data;
            return this;
        }

        /**
         * @param error The error output of the parser.
         * 
         * @return builder
         * 
         */
        public Builder error(String error) {
            $.error = error;
            return this;
        }

        public SchematizedDataResponse build() {
            $.data = Objects.requireNonNull($.data, "expected parameter 'data' to be non-null");
            $.error = Objects.requireNonNull($.error, "expected parameter 'error' to be non-null");
            return $;
        }
    }

}
