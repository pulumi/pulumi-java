// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.healthcare.v1.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class AttributeResponse {
    /**
     * @return Indicates the name of an attribute defined in the consent store.
     * 
     */
    private final String attributeDefinitionId;
    /**
     * @return The value of the attribute. Must be an acceptable value as defined in the consent store. For example, if the consent store defines &#34;data type&#34; with acceptable values &#34;questionnaire&#34; and &#34;step-count&#34;, when the attribute name is data type, this field must contain one of those values.
     * 
     */
    private final List<String> values;

    @CustomType.Constructor
    private AttributeResponse(
        @CustomType.Parameter("attributeDefinitionId") String attributeDefinitionId,
        @CustomType.Parameter("values") List<String> values) {
        this.attributeDefinitionId = attributeDefinitionId;
        this.values = values;
    }

    /**
     * @return Indicates the name of an attribute defined in the consent store.
     * 
     */
    public String attributeDefinitionId() {
        return this.attributeDefinitionId;
    }
    /**
     * @return The value of the attribute. Must be an acceptable value as defined in the consent store. For example, if the consent store defines &#34;data type&#34; with acceptable values &#34;questionnaire&#34; and &#34;step-count&#34;, when the attribute name is data type, this field must contain one of those values.
     * 
     */
    public List<String> values() {
        return this.values;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AttributeResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String attributeDefinitionId;
        private List<String> values;

        public Builder() {
    	      // Empty
        }

        public Builder(AttributeResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.attributeDefinitionId = defaults.attributeDefinitionId;
    	      this.values = defaults.values;
        }

        public Builder attributeDefinitionId(String attributeDefinitionId) {
            this.attributeDefinitionId = Objects.requireNonNull(attributeDefinitionId);
            return this;
        }
        public Builder values(List<String> values) {
            this.values = Objects.requireNonNull(values);
            return this;
        }
        public Builder values(String... values) {
            return values(List.of(values));
        }        public AttributeResponse build() {
            return new AttributeResponse(attributeDefinitionId, values);
        }
    }
}
