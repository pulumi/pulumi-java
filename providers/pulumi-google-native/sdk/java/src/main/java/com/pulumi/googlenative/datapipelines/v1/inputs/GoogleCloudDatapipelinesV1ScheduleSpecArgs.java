// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.datapipelines.v1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Details of the schedule the pipeline runs on.
 * 
 */
public final class GoogleCloudDatapipelinesV1ScheduleSpecArgs extends com.pulumi.resources.ResourceArgs {

    public static final GoogleCloudDatapipelinesV1ScheduleSpecArgs Empty = new GoogleCloudDatapipelinesV1ScheduleSpecArgs();

    /**
     * Unix-cron format of the schedule. This information is retrieved from the linked Cloud Scheduler.
     * 
     */
    @Import(name="schedule")
    private @Nullable Output<String> schedule;

    /**
     * @return Unix-cron format of the schedule. This information is retrieved from the linked Cloud Scheduler.
     * 
     */
    public Optional<Output<String>> schedule() {
        return Optional.ofNullable(this.schedule);
    }

    /**
     * Timezone ID. This matches the timezone IDs used by the Cloud Scheduler API. If empty, UTC time is assumed.
     * 
     */
    @Import(name="timeZone")
    private @Nullable Output<String> timeZone;

    /**
     * @return Timezone ID. This matches the timezone IDs used by the Cloud Scheduler API. If empty, UTC time is assumed.
     * 
     */
    public Optional<Output<String>> timeZone() {
        return Optional.ofNullable(this.timeZone);
    }

    private GoogleCloudDatapipelinesV1ScheduleSpecArgs() {}

    private GoogleCloudDatapipelinesV1ScheduleSpecArgs(GoogleCloudDatapipelinesV1ScheduleSpecArgs $) {
        this.schedule = $.schedule;
        this.timeZone = $.timeZone;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GoogleCloudDatapipelinesV1ScheduleSpecArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GoogleCloudDatapipelinesV1ScheduleSpecArgs $;

        public Builder() {
            $ = new GoogleCloudDatapipelinesV1ScheduleSpecArgs();
        }

        public Builder(GoogleCloudDatapipelinesV1ScheduleSpecArgs defaults) {
            $ = new GoogleCloudDatapipelinesV1ScheduleSpecArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param schedule Unix-cron format of the schedule. This information is retrieved from the linked Cloud Scheduler.
         * 
         * @return builder
         * 
         */
        public Builder schedule(@Nullable Output<String> schedule) {
            $.schedule = schedule;
            return this;
        }

        /**
         * @param schedule Unix-cron format of the schedule. This information is retrieved from the linked Cloud Scheduler.
         * 
         * @return builder
         * 
         */
        public Builder schedule(String schedule) {
            return schedule(Output.of(schedule));
        }

        /**
         * @param timeZone Timezone ID. This matches the timezone IDs used by the Cloud Scheduler API. If empty, UTC time is assumed.
         * 
         * @return builder
         * 
         */
        public Builder timeZone(@Nullable Output<String> timeZone) {
            $.timeZone = timeZone;
            return this;
        }

        /**
         * @param timeZone Timezone ID. This matches the timezone IDs used by the Cloud Scheduler API. If empty, UTC time is assumed.
         * 
         * @return builder
         * 
         */
        public Builder timeZone(String timeZone) {
            return timeZone(Output.of(timeZone));
        }

        public GoogleCloudDatapipelinesV1ScheduleSpecArgs build() {
            return $;
        }
    }

}
