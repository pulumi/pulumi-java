// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.container_v1beta1.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.util.Objects;


/**
 * Configuration for issuance of mTLS keys and certificates to Kubernetes pods.
 * 
 */
public final class WorkloadCertificatesResponse extends com.pulumi.resources.InvokeArgs {

    public static final WorkloadCertificatesResponse Empty = new WorkloadCertificatesResponse();

    /**
     * enable_certificates controls issuance of workload mTLS certificates. If set, the GKE Workload Identity Certificates controller and node agent will be deployed in the cluster, which can then be configured by creating a WorkloadCertificateConfig Custom Resource. Requires Workload Identity (workload_pool must be non-empty).
     * 
     */
    @Import(name="enableCertificates", required=true)
    private Boolean enableCertificates;

    public Boolean enableCertificates() {
        return this.enableCertificates;
    }

    private WorkloadCertificatesResponse() {}

    private WorkloadCertificatesResponse(WorkloadCertificatesResponse $) {
        this.enableCertificates = $.enableCertificates;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WorkloadCertificatesResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WorkloadCertificatesResponse $;

        public Builder() {
            $ = new WorkloadCertificatesResponse();
        }

        public Builder(WorkloadCertificatesResponse defaults) {
            $ = new WorkloadCertificatesResponse(Objects.requireNonNull(defaults));
        }

        public Builder enableCertificates(Boolean enableCertificates) {
            $.enableCertificates = enableCertificates;
            return this;
        }

        public WorkloadCertificatesResponse build() {
            $.enableCertificates = Objects.requireNonNull($.enableCertificates, "expected parameter 'enableCertificates' to be non-null");
            return $;
        }
    }

}
