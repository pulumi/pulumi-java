// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.bigtableadmin_v2.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.bigtableadmin_v2.inputs.StatusResponse;
import java.lang.String;
import java.util.Objects;


/**
 * Encryption information for a given resource. If this resource is protected with customer managed encryption, the in-use Cloud Key Management Service (Cloud KMS) key version is specified along with its status.
 * 
 */
public final class EncryptionInfoResponse extends com.pulumi.resources.InvokeArgs {

    public static final EncryptionInfoResponse Empty = new EncryptionInfoResponse();

    /**
     * The status of encrypt/decrypt calls on underlying data for this resource. Regardless of status, the existing data is always encrypted at rest.
     * 
     */
    @Import(name="encryptionStatus", required=true)
    private StatusResponse encryptionStatus;

    /**
     * @return The status of encrypt/decrypt calls on underlying data for this resource. Regardless of status, the existing data is always encrypted at rest.
     * 
     */
    public StatusResponse encryptionStatus() {
        return this.encryptionStatus;
    }

    /**
     * The type of encryption used to protect this resource.
     * 
     */
    @Import(name="encryptionType", required=true)
    private String encryptionType;

    /**
     * @return The type of encryption used to protect this resource.
     * 
     */
    public String encryptionType() {
        return this.encryptionType;
    }

    /**
     * The version of the Cloud KMS key specified in the parent cluster that is in use for the data underlying this table.
     * 
     */
    @Import(name="kmsKeyVersion", required=true)
    private String kmsKeyVersion;

    /**
     * @return The version of the Cloud KMS key specified in the parent cluster that is in use for the data underlying this table.
     * 
     */
    public String kmsKeyVersion() {
        return this.kmsKeyVersion;
    }

    private EncryptionInfoResponse() {}

    private EncryptionInfoResponse(EncryptionInfoResponse $) {
        this.encryptionStatus = $.encryptionStatus;
        this.encryptionType = $.encryptionType;
        this.kmsKeyVersion = $.kmsKeyVersion;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EncryptionInfoResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EncryptionInfoResponse $;

        public Builder() {
            $ = new EncryptionInfoResponse();
        }

        public Builder(EncryptionInfoResponse defaults) {
            $ = new EncryptionInfoResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param encryptionStatus The status of encrypt/decrypt calls on underlying data for this resource. Regardless of status, the existing data is always encrypted at rest.
         * 
         * @return builder
         * 
         */
        public Builder encryptionStatus(StatusResponse encryptionStatus) {
            $.encryptionStatus = encryptionStatus;
            return this;
        }

        /**
         * @param encryptionType The type of encryption used to protect this resource.
         * 
         * @return builder
         * 
         */
        public Builder encryptionType(String encryptionType) {
            $.encryptionType = encryptionType;
            return this;
        }

        /**
         * @param kmsKeyVersion The version of the Cloud KMS key specified in the parent cluster that is in use for the data underlying this table.
         * 
         * @return builder
         * 
         */
        public Builder kmsKeyVersion(String kmsKeyVersion) {
            $.kmsKeyVersion = kmsKeyVersion;
            return this;
        }

        public EncryptionInfoResponse build() {
            $.encryptionStatus = Objects.requireNonNull($.encryptionStatus, "expected parameter 'encryptionStatus' to be non-null");
            $.encryptionType = Objects.requireNonNull($.encryptionType, "expected parameter 'encryptionType' to be non-null");
            $.kmsKeyVersion = Objects.requireNonNull($.kmsKeyVersion, "expected parameter 'kmsKeyVersion' to be non-null");
            return $;
        }
    }

}
