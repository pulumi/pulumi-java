// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.osconfig.v1;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.googlenative.Utilities;
import com.pulumi.googlenative.osconfig.v1.PatchDeploymentArgs;
import com.pulumi.googlenative.osconfig.v1.outputs.OneTimeScheduleResponse;
import com.pulumi.googlenative.osconfig.v1.outputs.PatchConfigResponse;
import com.pulumi.googlenative.osconfig.v1.outputs.PatchInstanceFilterResponse;
import com.pulumi.googlenative.osconfig.v1.outputs.PatchRolloutResponse;
import com.pulumi.googlenative.osconfig.v1.outputs.RecurringScheduleResponse;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * Create an OS Config patch deployment.
 * 
 */
@ResourceType(type="google-native:osconfig/v1:PatchDeployment")
public class PatchDeployment extends com.pulumi.resources.CustomResource {
    /**
     * Time the patch deployment was created. Timestamp is in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
     * 
     */
    @Export(name="createTime", type=String.class, parameters={})
    private Output<String> createTime;

    /**
     * @return Time the patch deployment was created. Timestamp is in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
     * 
     */
    public Output<String> createTime() {
        return this.createTime;
    }
    /**
     * Optional. Description of the patch deployment. Length of the description is limited to 1024 characters.
     * 
     */
    @Export(name="description", type=String.class, parameters={})
    private Output<String> description;

    /**
     * @return Optional. Description of the patch deployment. Length of the description is limited to 1024 characters.
     * 
     */
    public Output<String> description() {
        return this.description;
    }
    /**
     * Optional. Duration of the patch. After the duration ends, the patch times out.
     * 
     */
    @Export(name="duration", type=String.class, parameters={})
    private Output<String> duration;

    /**
     * @return Optional. Duration of the patch. After the duration ends, the patch times out.
     * 
     */
    public Output<String> duration() {
        return this.duration;
    }
    /**
     * VM instances to patch.
     * 
     */
    @Export(name="instanceFilter", type=PatchInstanceFilterResponse.class, parameters={})
    private Output<PatchInstanceFilterResponse> instanceFilter;

    /**
     * @return VM instances to patch.
     * 
     */
    public Output<PatchInstanceFilterResponse> instanceFilter() {
        return this.instanceFilter;
    }
    /**
     * The last time a patch job was started by this deployment. Timestamp is in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
     * 
     */
    @Export(name="lastExecuteTime", type=String.class, parameters={})
    private Output<String> lastExecuteTime;

    /**
     * @return The last time a patch job was started by this deployment. Timestamp is in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
     * 
     */
    public Output<String> lastExecuteTime() {
        return this.lastExecuteTime;
    }
    /**
     * Unique name for the patch deployment resource in a project. The patch deployment name is in the form: `projects/{project_id}/patchDeployments/{patch_deployment_id}`. This field is ignored when you create a new patch deployment.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return Unique name for the patch deployment resource in a project. The patch deployment name is in the form: `projects/{project_id}/patchDeployments/{patch_deployment_id}`. This field is ignored when you create a new patch deployment.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Schedule a one-time execution.
     * 
     */
    @Export(name="oneTimeSchedule", type=OneTimeScheduleResponse.class, parameters={})
    private Output<OneTimeScheduleResponse> oneTimeSchedule;

    /**
     * @return Schedule a one-time execution.
     * 
     */
    public Output<OneTimeScheduleResponse> oneTimeSchedule() {
        return this.oneTimeSchedule;
    }
    /**
     * Optional. Patch configuration that is applied.
     * 
     */
    @Export(name="patchConfig", type=PatchConfigResponse.class, parameters={})
    private Output<PatchConfigResponse> patchConfig;

    /**
     * @return Optional. Patch configuration that is applied.
     * 
     */
    public Output<PatchConfigResponse> patchConfig() {
        return this.patchConfig;
    }
    /**
     * Required. A name for the patch deployment in the project. When creating a name the following rules apply: * Must contain only lowercase letters, numbers, and hyphens. * Must start with a letter. * Must be between 1-63 characters. * Must end with a number or a letter. * Must be unique within the project.
     * 
     */
    @Export(name="patchDeploymentId", type=String.class, parameters={})
    private Output<String> patchDeploymentId;

    /**
     * @return Required. A name for the patch deployment in the project. When creating a name the following rules apply: * Must contain only lowercase letters, numbers, and hyphens. * Must start with a letter. * Must be between 1-63 characters. * Must end with a number or a letter. * Must be unique within the project.
     * 
     */
    public Output<String> patchDeploymentId() {
        return this.patchDeploymentId;
    }
    @Export(name="project", type=String.class, parameters={})
    private Output<String> project;

    public Output<String> project() {
        return this.project;
    }
    /**
     * Schedule recurring executions.
     * 
     */
    @Export(name="recurringSchedule", type=RecurringScheduleResponse.class, parameters={})
    private Output<RecurringScheduleResponse> recurringSchedule;

    /**
     * @return Schedule recurring executions.
     * 
     */
    public Output<RecurringScheduleResponse> recurringSchedule() {
        return this.recurringSchedule;
    }
    /**
     * Optional. Rollout strategy of the patch job.
     * 
     */
    @Export(name="rollout", type=PatchRolloutResponse.class, parameters={})
    private Output<PatchRolloutResponse> rollout;

    /**
     * @return Optional. Rollout strategy of the patch job.
     * 
     */
    public Output<PatchRolloutResponse> rollout() {
        return this.rollout;
    }
    /**
     * Current state of the patch deployment.
     * 
     */
    @Export(name="state", type=String.class, parameters={})
    private Output<String> state;

    /**
     * @return Current state of the patch deployment.
     * 
     */
    public Output<String> state() {
        return this.state;
    }
    /**
     * Time the patch deployment was last updated. Timestamp is in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
     * 
     */
    @Export(name="updateTime", type=String.class, parameters={})
    private Output<String> updateTime;

    /**
     * @return Time the patch deployment was last updated. Timestamp is in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
     * 
     */
    public Output<String> updateTime() {
        return this.updateTime;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public PatchDeployment(String name) {
        this(name, PatchDeploymentArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public PatchDeployment(String name, PatchDeploymentArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public PatchDeployment(String name, PatchDeploymentArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("google-native:osconfig/v1:PatchDeployment", name, args == null ? PatchDeploymentArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private PatchDeployment(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("google-native:osconfig/v1:PatchDeployment", name, null, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static PatchDeployment get(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new PatchDeployment(name, id, options);
    }
}
