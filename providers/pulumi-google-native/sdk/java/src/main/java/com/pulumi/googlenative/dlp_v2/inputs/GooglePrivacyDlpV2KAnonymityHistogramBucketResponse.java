// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.dlp_v2.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.dlp_v2.inputs.GooglePrivacyDlpV2KAnonymityEquivalenceClassResponse;
import java.lang.String;
import java.util.List;
import java.util.Objects;


/**
 * Histogram of k-anonymity equivalence classes.
 * 
 */
public final class GooglePrivacyDlpV2KAnonymityHistogramBucketResponse extends com.pulumi.resources.InvokeArgs {

    public static final GooglePrivacyDlpV2KAnonymityHistogramBucketResponse Empty = new GooglePrivacyDlpV2KAnonymityHistogramBucketResponse();

    /**
     * Total number of equivalence classes in this bucket.
     * 
     */
    @Import(name="bucketSize", required=true)
    private String bucketSize;

    public String bucketSize() {
        return this.bucketSize;
    }

    /**
     * Total number of distinct equivalence classes in this bucket.
     * 
     */
    @Import(name="bucketValueCount", required=true)
    private String bucketValueCount;

    public String bucketValueCount() {
        return this.bucketValueCount;
    }

    /**
     * Sample of equivalence classes in this bucket. The total number of classes returned per bucket is capped at 20.
     * 
     */
    @Import(name="bucketValues", required=true)
    private List<GooglePrivacyDlpV2KAnonymityEquivalenceClassResponse> bucketValues;

    public List<GooglePrivacyDlpV2KAnonymityEquivalenceClassResponse> bucketValues() {
        return this.bucketValues;
    }

    /**
     * Lower bound on the size of the equivalence classes in this bucket.
     * 
     */
    @Import(name="equivalenceClassSizeLowerBound", required=true)
    private String equivalenceClassSizeLowerBound;

    public String equivalenceClassSizeLowerBound() {
        return this.equivalenceClassSizeLowerBound;
    }

    /**
     * Upper bound on the size of the equivalence classes in this bucket.
     * 
     */
    @Import(name="equivalenceClassSizeUpperBound", required=true)
    private String equivalenceClassSizeUpperBound;

    public String equivalenceClassSizeUpperBound() {
        return this.equivalenceClassSizeUpperBound;
    }

    private GooglePrivacyDlpV2KAnonymityHistogramBucketResponse() {}

    private GooglePrivacyDlpV2KAnonymityHistogramBucketResponse(GooglePrivacyDlpV2KAnonymityHistogramBucketResponse $) {
        this.bucketSize = $.bucketSize;
        this.bucketValueCount = $.bucketValueCount;
        this.bucketValues = $.bucketValues;
        this.equivalenceClassSizeLowerBound = $.equivalenceClassSizeLowerBound;
        this.equivalenceClassSizeUpperBound = $.equivalenceClassSizeUpperBound;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GooglePrivacyDlpV2KAnonymityHistogramBucketResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GooglePrivacyDlpV2KAnonymityHistogramBucketResponse $;

        public Builder() {
            $ = new GooglePrivacyDlpV2KAnonymityHistogramBucketResponse();
        }

        public Builder(GooglePrivacyDlpV2KAnonymityHistogramBucketResponse defaults) {
            $ = new GooglePrivacyDlpV2KAnonymityHistogramBucketResponse(Objects.requireNonNull(defaults));
        }

        public Builder bucketSize(String bucketSize) {
            $.bucketSize = bucketSize;
            return this;
        }

        public Builder bucketValueCount(String bucketValueCount) {
            $.bucketValueCount = bucketValueCount;
            return this;
        }

        public Builder bucketValues(List<GooglePrivacyDlpV2KAnonymityEquivalenceClassResponse> bucketValues) {
            $.bucketValues = bucketValues;
            return this;
        }

        public Builder bucketValues(GooglePrivacyDlpV2KAnonymityEquivalenceClassResponse... bucketValues) {
            return bucketValues(List.of(bucketValues));
        }

        public Builder equivalenceClassSizeLowerBound(String equivalenceClassSizeLowerBound) {
            $.equivalenceClassSizeLowerBound = equivalenceClassSizeLowerBound;
            return this;
        }

        public Builder equivalenceClassSizeUpperBound(String equivalenceClassSizeUpperBound) {
            $.equivalenceClassSizeUpperBound = equivalenceClassSizeUpperBound;
            return this;
        }

        public GooglePrivacyDlpV2KAnonymityHistogramBucketResponse build() {
            $.bucketSize = Objects.requireNonNull($.bucketSize, "expected parameter 'bucketSize' to be non-null");
            $.bucketValueCount = Objects.requireNonNull($.bucketValueCount, "expected parameter 'bucketValueCount' to be non-null");
            $.bucketValues = Objects.requireNonNull($.bucketValues, "expected parameter 'bucketValues' to be non-null");
            $.equivalenceClassSizeLowerBound = Objects.requireNonNull($.equivalenceClassSizeLowerBound, "expected parameter 'equivalenceClassSizeLowerBound' to be non-null");
            $.equivalenceClassSizeUpperBound = Objects.requireNonNull($.equivalenceClassSizeUpperBound, "expected parameter 'equivalenceClassSizeUpperBound' to be non-null");
            return $;
        }
    }

}
