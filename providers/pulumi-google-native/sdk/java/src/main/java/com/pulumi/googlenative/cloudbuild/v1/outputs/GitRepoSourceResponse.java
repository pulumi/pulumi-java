// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.cloudbuild.v1.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GitRepoSourceResponse {
    /**
     * @return The full resource name of the bitbucket server config. Format: `projects/{project}/locations/{location}/bitbucketServerConfigs/{id}`.
     * 
     */
    private final String bitbucketServerConfig;
    /**
     * @return The full resource name of the github enterprise config. Format: `projects/{project}/locations/{location}/githubEnterpriseConfigs/{id}`. `projects/{project}/githubEnterpriseConfigs/{id}`.
     * 
     */
    private final String githubEnterpriseConfig;
    /**
     * @return The branch or tag to use. Must start with &#34;refs/&#34; (required).
     * 
     */
    private final String ref;
    /**
     * @return See RepoType below.
     * 
     */
    private final String repoType;
    /**
     * @return The URI of the repo. Either uri or repository can be specified and is required.
     * 
     */
    private final String uri;

    @CustomType.Constructor
    private GitRepoSourceResponse(
        @CustomType.Parameter("bitbucketServerConfig") String bitbucketServerConfig,
        @CustomType.Parameter("githubEnterpriseConfig") String githubEnterpriseConfig,
        @CustomType.Parameter("ref") String ref,
        @CustomType.Parameter("repoType") String repoType,
        @CustomType.Parameter("uri") String uri) {
        this.bitbucketServerConfig = bitbucketServerConfig;
        this.githubEnterpriseConfig = githubEnterpriseConfig;
        this.ref = ref;
        this.repoType = repoType;
        this.uri = uri;
    }

    /**
     * @return The full resource name of the bitbucket server config. Format: `projects/{project}/locations/{location}/bitbucketServerConfigs/{id}`.
     * 
     */
    public String bitbucketServerConfig() {
        return this.bitbucketServerConfig;
    }
    /**
     * @return The full resource name of the github enterprise config. Format: `projects/{project}/locations/{location}/githubEnterpriseConfigs/{id}`. `projects/{project}/githubEnterpriseConfigs/{id}`.
     * 
     */
    public String githubEnterpriseConfig() {
        return this.githubEnterpriseConfig;
    }
    /**
     * @return The branch or tag to use. Must start with &#34;refs/&#34; (required).
     * 
     */
    public String ref() {
        return this.ref;
    }
    /**
     * @return See RepoType below.
     * 
     */
    public String repoType() {
        return this.repoType;
    }
    /**
     * @return The URI of the repo. Either uri or repository can be specified and is required.
     * 
     */
    public String uri() {
        return this.uri;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GitRepoSourceResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String bitbucketServerConfig;
        private String githubEnterpriseConfig;
        private String ref;
        private String repoType;
        private String uri;

        public Builder() {
    	      // Empty
        }

        public Builder(GitRepoSourceResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bitbucketServerConfig = defaults.bitbucketServerConfig;
    	      this.githubEnterpriseConfig = defaults.githubEnterpriseConfig;
    	      this.ref = defaults.ref;
    	      this.repoType = defaults.repoType;
    	      this.uri = defaults.uri;
        }

        public Builder bitbucketServerConfig(String bitbucketServerConfig) {
            this.bitbucketServerConfig = Objects.requireNonNull(bitbucketServerConfig);
            return this;
        }
        public Builder githubEnterpriseConfig(String githubEnterpriseConfig) {
            this.githubEnterpriseConfig = Objects.requireNonNull(githubEnterpriseConfig);
            return this;
        }
        public Builder ref(String ref) {
            this.ref = Objects.requireNonNull(ref);
            return this;
        }
        public Builder repoType(String repoType) {
            this.repoType = Objects.requireNonNull(repoType);
            return this;
        }
        public Builder uri(String uri) {
            this.uri = Objects.requireNonNull(uri);
            return this;
        }        public GitRepoSourceResponse build() {
            return new GitRepoSourceResponse(bitbucketServerConfig, githubEnterpriseConfig, ref, repoType, uri);
        }
    }
}
