// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.sqladmin_v1.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.sqladmin_v1.inputs.AclEntryResponse;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;


/**
 * IP Management configuration.
 * 
 */
public final class IpConfigurationResponse extends com.pulumi.resources.InvokeArgs {

    public static final IpConfigurationResponse Empty = new IpConfigurationResponse();

    /**
     * The name of the allocated ip range for the private ip CloudSQL instance. For example: &#34;google-managed-services-default&#34;. If set, the instance ip will be created in the allocated range. The range name must comply with [RFC 1035](https://tools.ietf.org/html/rfc1035). Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?.`
     * 
     */
    @Import(name="allocatedIpRange", required=true)
    private String allocatedIpRange;

    /**
     * @return The name of the allocated ip range for the private ip CloudSQL instance. For example: &#34;google-managed-services-default&#34;. If set, the instance ip will be created in the allocated range. The range name must comply with [RFC 1035](https://tools.ietf.org/html/rfc1035). Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?.`
     * 
     */
    public String allocatedIpRange() {
        return this.allocatedIpRange;
    }

    /**
     * The list of external networks that are allowed to connect to the instance using the IP. In &#39;CIDR&#39; notation, also known as &#39;slash&#39; notation (for example: `157.197.200.0/24`).
     * 
     */
    @Import(name="authorizedNetworks", required=true)
    private List<AclEntryResponse> authorizedNetworks;

    /**
     * @return The list of external networks that are allowed to connect to the instance using the IP. In &#39;CIDR&#39; notation, also known as &#39;slash&#39; notation (for example: `157.197.200.0/24`).
     * 
     */
    public List<AclEntryResponse> authorizedNetworks() {
        return this.authorizedNetworks;
    }

    /**
     * Whether the instance is assigned a public IP address or not.
     * 
     */
    @Import(name="ipv4Enabled", required=true)
    private Boolean ipv4Enabled;

    /**
     * @return Whether the instance is assigned a public IP address or not.
     * 
     */
    public Boolean ipv4Enabled() {
        return this.ipv4Enabled;
    }

    /**
     * The resource link for the VPC network from which the Cloud SQL instance is accessible for private IP. For example, `/projects/myProject/global/networks/default`. This setting can be updated, but it cannot be removed after it is set.
     * 
     */
    @Import(name="privateNetwork", required=true)
    private String privateNetwork;

    /**
     * @return The resource link for the VPC network from which the Cloud SQL instance is accessible for private IP. For example, `/projects/myProject/global/networks/default`. This setting can be updated, but it cannot be removed after it is set.
     * 
     */
    public String privateNetwork() {
        return this.privateNetwork;
    }

    /**
     * Whether SSL connections over IP are enforced or not.
     * 
     */
    @Import(name="requireSsl", required=true)
    private Boolean requireSsl;

    /**
     * @return Whether SSL connections over IP are enforced or not.
     * 
     */
    public Boolean requireSsl() {
        return this.requireSsl;
    }

    private IpConfigurationResponse() {}

    private IpConfigurationResponse(IpConfigurationResponse $) {
        this.allocatedIpRange = $.allocatedIpRange;
        this.authorizedNetworks = $.authorizedNetworks;
        this.ipv4Enabled = $.ipv4Enabled;
        this.privateNetwork = $.privateNetwork;
        this.requireSsl = $.requireSsl;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(IpConfigurationResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private IpConfigurationResponse $;

        public Builder() {
            $ = new IpConfigurationResponse();
        }

        public Builder(IpConfigurationResponse defaults) {
            $ = new IpConfigurationResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param allocatedIpRange The name of the allocated ip range for the private ip CloudSQL instance. For example: &#34;google-managed-services-default&#34;. If set, the instance ip will be created in the allocated range. The range name must comply with [RFC 1035](https://tools.ietf.org/html/rfc1035). Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?.`
         * 
         * @return builder
         * 
         */
        public Builder allocatedIpRange(String allocatedIpRange) {
            $.allocatedIpRange = allocatedIpRange;
            return this;
        }

        /**
         * @param authorizedNetworks The list of external networks that are allowed to connect to the instance using the IP. In &#39;CIDR&#39; notation, also known as &#39;slash&#39; notation (for example: `157.197.200.0/24`).
         * 
         * @return builder
         * 
         */
        public Builder authorizedNetworks(List<AclEntryResponse> authorizedNetworks) {
            $.authorizedNetworks = authorizedNetworks;
            return this;
        }

        /**
         * @param authorizedNetworks The list of external networks that are allowed to connect to the instance using the IP. In &#39;CIDR&#39; notation, also known as &#39;slash&#39; notation (for example: `157.197.200.0/24`).
         * 
         * @return builder
         * 
         */
        public Builder authorizedNetworks(AclEntryResponse... authorizedNetworks) {
            return authorizedNetworks(List.of(authorizedNetworks));
        }

        /**
         * @param ipv4Enabled Whether the instance is assigned a public IP address or not.
         * 
         * @return builder
         * 
         */
        public Builder ipv4Enabled(Boolean ipv4Enabled) {
            $.ipv4Enabled = ipv4Enabled;
            return this;
        }

        /**
         * @param privateNetwork The resource link for the VPC network from which the Cloud SQL instance is accessible for private IP. For example, `/projects/myProject/global/networks/default`. This setting can be updated, but it cannot be removed after it is set.
         * 
         * @return builder
         * 
         */
        public Builder privateNetwork(String privateNetwork) {
            $.privateNetwork = privateNetwork;
            return this;
        }

        /**
         * @param requireSsl Whether SSL connections over IP are enforced or not.
         * 
         * @return builder
         * 
         */
        public Builder requireSsl(Boolean requireSsl) {
            $.requireSsl = requireSsl;
            return this;
        }

        public IpConfigurationResponse build() {
            $.allocatedIpRange = Objects.requireNonNull($.allocatedIpRange, "expected parameter 'allocatedIpRange' to be non-null");
            $.authorizedNetworks = Objects.requireNonNull($.authorizedNetworks, "expected parameter 'authorizedNetworks' to be non-null");
            $.ipv4Enabled = Objects.requireNonNull($.ipv4Enabled, "expected parameter 'ipv4Enabled' to be non-null");
            $.privateNetwork = Objects.requireNonNull($.privateNetwork, "expected parameter 'privateNetwork' to be non-null");
            $.requireSsl = Objects.requireNonNull($.requireSsl, "expected parameter 'requireSsl' to be non-null");
            return $;
        }
    }

}
