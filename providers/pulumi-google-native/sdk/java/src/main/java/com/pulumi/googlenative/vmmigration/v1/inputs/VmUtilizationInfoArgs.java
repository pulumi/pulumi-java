// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.vmmigration.v1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.vmmigration.v1.inputs.VmUtilizationMetricsArgs;
import com.pulumi.googlenative.vmmigration.v1.inputs.VmwareVmDetailsArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Utilization information of a single VM.
 * 
 */
public final class VmUtilizationInfoArgs extends com.pulumi.resources.ResourceArgs {

    public static final VmUtilizationInfoArgs Empty = new VmUtilizationInfoArgs();

    /**
     * Utilization metrics for this VM.
     * 
     */
    @Import(name="utilization")
    private @Nullable Output<VmUtilizationMetricsArgs> utilization;

    /**
     * @return Utilization metrics for this VM.
     * 
     */
    public Optional<Output<VmUtilizationMetricsArgs>> utilization() {
        return Optional.ofNullable(this.utilization);
    }

    /**
     * The VM&#39;s ID in the source.
     * 
     */
    @Import(name="vmId")
    private @Nullable Output<String> vmId;

    /**
     * @return The VM&#39;s ID in the source.
     * 
     */
    public Optional<Output<String>> vmId() {
        return Optional.ofNullable(this.vmId);
    }

    /**
     * The description of the VM in a Source of type Vmware.
     * 
     */
    @Import(name="vmwareVmDetails")
    private @Nullable Output<VmwareVmDetailsArgs> vmwareVmDetails;

    /**
     * @return The description of the VM in a Source of type Vmware.
     * 
     */
    public Optional<Output<VmwareVmDetailsArgs>> vmwareVmDetails() {
        return Optional.ofNullable(this.vmwareVmDetails);
    }

    private VmUtilizationInfoArgs() {}

    private VmUtilizationInfoArgs(VmUtilizationInfoArgs $) {
        this.utilization = $.utilization;
        this.vmId = $.vmId;
        this.vmwareVmDetails = $.vmwareVmDetails;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VmUtilizationInfoArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VmUtilizationInfoArgs $;

        public Builder() {
            $ = new VmUtilizationInfoArgs();
        }

        public Builder(VmUtilizationInfoArgs defaults) {
            $ = new VmUtilizationInfoArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param utilization Utilization metrics for this VM.
         * 
         * @return builder
         * 
         */
        public Builder utilization(@Nullable Output<VmUtilizationMetricsArgs> utilization) {
            $.utilization = utilization;
            return this;
        }

        /**
         * @param utilization Utilization metrics for this VM.
         * 
         * @return builder
         * 
         */
        public Builder utilization(VmUtilizationMetricsArgs utilization) {
            return utilization(Output.of(utilization));
        }

        /**
         * @param vmId The VM&#39;s ID in the source.
         * 
         * @return builder
         * 
         */
        public Builder vmId(@Nullable Output<String> vmId) {
            $.vmId = vmId;
            return this;
        }

        /**
         * @param vmId The VM&#39;s ID in the source.
         * 
         * @return builder
         * 
         */
        public Builder vmId(String vmId) {
            return vmId(Output.of(vmId));
        }

        /**
         * @param vmwareVmDetails The description of the VM in a Source of type Vmware.
         * 
         * @return builder
         * 
         */
        public Builder vmwareVmDetails(@Nullable Output<VmwareVmDetailsArgs> vmwareVmDetails) {
            $.vmwareVmDetails = vmwareVmDetails;
            return this;
        }

        /**
         * @param vmwareVmDetails The description of the VM in a Source of type Vmware.
         * 
         * @return builder
         * 
         */
        public Builder vmwareVmDetails(VmwareVmDetailsArgs vmwareVmDetails) {
            return vmwareVmDetails(Output.of(vmwareVmDetails));
        }

        public VmUtilizationInfoArgs build() {
            return $;
        }
    }

}
