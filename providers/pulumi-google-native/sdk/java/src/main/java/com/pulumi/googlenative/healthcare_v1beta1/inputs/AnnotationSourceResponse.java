// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.healthcare_v1beta1.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.healthcare_v1beta1.inputs.CloudHealthcareSourceResponse;
import java.util.Objects;


/**
 * AnnotationSource holds the source information of the annotation.
 * 
 */
public final class AnnotationSourceResponse extends com.pulumi.resources.InvokeArgs {

    public static final AnnotationSourceResponse Empty = new AnnotationSourceResponse();

    /**
     * Cloud Healthcare API resource.
     * 
     */
    @Import(name="cloudHealthcareSource", required=true)
    private CloudHealthcareSourceResponse cloudHealthcareSource;

    public CloudHealthcareSourceResponse cloudHealthcareSource() {
        return this.cloudHealthcareSource;
    }

    private AnnotationSourceResponse() {}

    private AnnotationSourceResponse(AnnotationSourceResponse $) {
        this.cloudHealthcareSource = $.cloudHealthcareSource;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AnnotationSourceResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AnnotationSourceResponse $;

        public Builder() {
            $ = new AnnotationSourceResponse();
        }

        public Builder(AnnotationSourceResponse defaults) {
            $ = new AnnotationSourceResponse(Objects.requireNonNull(defaults));
        }

        public Builder cloudHealthcareSource(CloudHealthcareSourceResponse cloudHealthcareSource) {
            $.cloudHealthcareSource = cloudHealthcareSource;
            return this;
        }

        public AnnotationSourceResponse build() {
            $.cloudHealthcareSource = Objects.requireNonNull($.cloudHealthcareSource, "expected parameter 'cloudHealthcareSource' to be non-null");
            return $;
        }
    }

}
