// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.accesscontextmanager_v1.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * The source that IngressPolicy authorizes access from.
 * 
 */
public final class IngressSourceResponse extends com.pulumi.resources.InvokeArgs {

    public static final IngressSourceResponse Empty = new IngressSourceResponse();

    /**
     * An AccessLevel resource name that allow resources within the ServicePerimeters to be accessed from the internet. AccessLevels listed must be in the same policy as this ServicePerimeter. Referencing a nonexistent AccessLevel will cause an error. If no AccessLevel names are listed, resources within the perimeter can only be accessed via Google Cloud calls with request origins within the perimeter. Example: `accessPolicies/MY_POLICY/accessLevels/MY_LEVEL`. If a single `*` is specified for `access_level`, then all IngressSources will be allowed.
     * 
     */
    @Import(name="accessLevel", required=true)
    private String accessLevel;

    public String accessLevel() {
        return this.accessLevel;
    }

    /**
     * A Google Cloud resource that is allowed to ingress the perimeter. Requests from these resources will be allowed to access perimeter data. Currently only projects are allowed. Format: `projects/{project_number}` The project may be in any Google Cloud organization, not just the organization that the perimeter is defined in. `*` is not allowed, the case of allowing all Google Cloud resources only is not supported.
     * 
     */
    @Import(name="resource", required=true)
    private String resource;

    public String resource() {
        return this.resource;
    }

    private IngressSourceResponse() {}

    private IngressSourceResponse(IngressSourceResponse $) {
        this.accessLevel = $.accessLevel;
        this.resource = $.resource;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(IngressSourceResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private IngressSourceResponse $;

        public Builder() {
            $ = new IngressSourceResponse();
        }

        public Builder(IngressSourceResponse defaults) {
            $ = new IngressSourceResponse(Objects.requireNonNull(defaults));
        }

        public Builder accessLevel(String accessLevel) {
            $.accessLevel = accessLevel;
            return this;
        }

        public Builder resource(String resource) {
            $.resource = resource;
            return this;
        }

        public IngressSourceResponse build() {
            $.accessLevel = Objects.requireNonNull($.accessLevel, "expected parameter 'accessLevel' to be non-null");
            $.resource = Objects.requireNonNull($.resource, "expected parameter 'resource' to be non-null");
            return $;
        }
    }

}
