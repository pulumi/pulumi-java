// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.ml.v1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Attributes credit by computing the XRAI taking advantage of the model&#39;s fully differentiable structure. Refer to this paper for more details: https://arxiv.org/abs/1906.02825 Currently only implemented for models with natural image inputs.
 * 
 */
public final class GoogleCloudMlV1__XraiAttributionArgs extends com.pulumi.resources.ResourceArgs {

    public static final GoogleCloudMlV1__XraiAttributionArgs Empty = new GoogleCloudMlV1__XraiAttributionArgs();

    /**
     * Number of steps for approximating the path integral. A good value to start is 50 and gradually increase until the sum to diff property is met within the desired error range.
     * 
     */
    @Import(name="numIntegralSteps")
    private @Nullable Output<Integer> numIntegralSteps;

    /**
     * @return Number of steps for approximating the path integral. A good value to start is 50 and gradually increase until the sum to diff property is met within the desired error range.
     * 
     */
    public Optional<Output<Integer>> numIntegralSteps() {
        return Optional.ofNullable(this.numIntegralSteps);
    }

    private GoogleCloudMlV1__XraiAttributionArgs() {}

    private GoogleCloudMlV1__XraiAttributionArgs(GoogleCloudMlV1__XraiAttributionArgs $) {
        this.numIntegralSteps = $.numIntegralSteps;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GoogleCloudMlV1__XraiAttributionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GoogleCloudMlV1__XraiAttributionArgs $;

        public Builder() {
            $ = new GoogleCloudMlV1__XraiAttributionArgs();
        }

        public Builder(GoogleCloudMlV1__XraiAttributionArgs defaults) {
            $ = new GoogleCloudMlV1__XraiAttributionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param numIntegralSteps Number of steps for approximating the path integral. A good value to start is 50 and gradually increase until the sum to diff property is met within the desired error range.
         * 
         * @return builder
         * 
         */
        public Builder numIntegralSteps(@Nullable Output<Integer> numIntegralSteps) {
            $.numIntegralSteps = numIntegralSteps;
            return this;
        }

        /**
         * @param numIntegralSteps Number of steps for approximating the path integral. A good value to start is 50 and gradually increase until the sum to diff property is met within the desired error range.
         * 
         * @return builder
         * 
         */
        public Builder numIntegralSteps(Integer numIntegralSteps) {
            return numIntegralSteps(Output.of(numIntegralSteps));
        }

        public GoogleCloudMlV1__XraiAttributionArgs build() {
            return $;
        }
    }

}
