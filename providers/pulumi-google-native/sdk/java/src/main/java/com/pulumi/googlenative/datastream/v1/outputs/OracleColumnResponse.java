// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.datastream.v1.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class OracleColumnResponse {
    /**
     * @return Column name.
     * 
     */
    private final String column;
    /**
     * @return The Oracle data type.
     * 
     */
    private final String dataType;
    /**
     * @return Column encoding.
     * 
     */
    private final String encoding;
    /**
     * @return Column length.
     * 
     */
    private final Integer length;
    /**
     * @return Whether or not the column can accept a null value.
     * 
     */
    private final Boolean nullable;
    /**
     * @return The ordinal position of the column in the table.
     * 
     */
    private final Integer ordinalPosition;
    /**
     * @return Column precision.
     * 
     */
    private final Integer precision;
    /**
     * @return Whether or not the column represents a primary key.
     * 
     */
    private final Boolean primaryKey;
    /**
     * @return Column scale.
     * 
     */
    private final Integer scale;

    @CustomType.Constructor
    private OracleColumnResponse(
        @CustomType.Parameter("column") String column,
        @CustomType.Parameter("dataType") String dataType,
        @CustomType.Parameter("encoding") String encoding,
        @CustomType.Parameter("length") Integer length,
        @CustomType.Parameter("nullable") Boolean nullable,
        @CustomType.Parameter("ordinalPosition") Integer ordinalPosition,
        @CustomType.Parameter("precision") Integer precision,
        @CustomType.Parameter("primaryKey") Boolean primaryKey,
        @CustomType.Parameter("scale") Integer scale) {
        this.column = column;
        this.dataType = dataType;
        this.encoding = encoding;
        this.length = length;
        this.nullable = nullable;
        this.ordinalPosition = ordinalPosition;
        this.precision = precision;
        this.primaryKey = primaryKey;
        this.scale = scale;
    }

    /**
     * @return Column name.
     * 
     */
    public String column() {
        return this.column;
    }
    /**
     * @return The Oracle data type.
     * 
     */
    public String dataType() {
        return this.dataType;
    }
    /**
     * @return Column encoding.
     * 
     */
    public String encoding() {
        return this.encoding;
    }
    /**
     * @return Column length.
     * 
     */
    public Integer length() {
        return this.length;
    }
    /**
     * @return Whether or not the column can accept a null value.
     * 
     */
    public Boolean nullable() {
        return this.nullable;
    }
    /**
     * @return The ordinal position of the column in the table.
     * 
     */
    public Integer ordinalPosition() {
        return this.ordinalPosition;
    }
    /**
     * @return Column precision.
     * 
     */
    public Integer precision() {
        return this.precision;
    }
    /**
     * @return Whether or not the column represents a primary key.
     * 
     */
    public Boolean primaryKey() {
        return this.primaryKey;
    }
    /**
     * @return Column scale.
     * 
     */
    public Integer scale() {
        return this.scale;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(OracleColumnResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String column;
        private String dataType;
        private String encoding;
        private Integer length;
        private Boolean nullable;
        private Integer ordinalPosition;
        private Integer precision;
        private Boolean primaryKey;
        private Integer scale;

        public Builder() {
    	      // Empty
        }

        public Builder(OracleColumnResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.column = defaults.column;
    	      this.dataType = defaults.dataType;
    	      this.encoding = defaults.encoding;
    	      this.length = defaults.length;
    	      this.nullable = defaults.nullable;
    	      this.ordinalPosition = defaults.ordinalPosition;
    	      this.precision = defaults.precision;
    	      this.primaryKey = defaults.primaryKey;
    	      this.scale = defaults.scale;
        }

        public Builder column(String column) {
            this.column = Objects.requireNonNull(column);
            return this;
        }
        public Builder dataType(String dataType) {
            this.dataType = Objects.requireNonNull(dataType);
            return this;
        }
        public Builder encoding(String encoding) {
            this.encoding = Objects.requireNonNull(encoding);
            return this;
        }
        public Builder length(Integer length) {
            this.length = Objects.requireNonNull(length);
            return this;
        }
        public Builder nullable(Boolean nullable) {
            this.nullable = Objects.requireNonNull(nullable);
            return this;
        }
        public Builder ordinalPosition(Integer ordinalPosition) {
            this.ordinalPosition = Objects.requireNonNull(ordinalPosition);
            return this;
        }
        public Builder precision(Integer precision) {
            this.precision = Objects.requireNonNull(precision);
            return this;
        }
        public Builder primaryKey(Boolean primaryKey) {
            this.primaryKey = Objects.requireNonNull(primaryKey);
            return this;
        }
        public Builder scale(Integer scale) {
            this.scale = Objects.requireNonNull(scale);
            return this;
        }        public OracleColumnResponse build() {
            return new OracleColumnResponse(column, dataType, encoding, length, nullable, ordinalPosition, precision, primaryKey, scale);
        }
    }
}
