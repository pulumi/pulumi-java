// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.transcoder.v1.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class EditAtomResponse {
    /**
     * @return End time in seconds for the atom, relative to the input file timeline. When `end_time_offset` is not specified, the `inputs` are used until the end of the atom.
     * 
     */
    private final String endTimeOffset;
    /**
     * @return List of `Input.key`s identifying files that should be used in this atom. The listed `inputs` must have the same timeline.
     * 
     */
    private final List<String> inputs;
    /**
     * @return A unique key for this atom. Must be specified when using advanced mapping.
     * 
     */
    private final String key;
    /**
     * @return Start time in seconds for the atom, relative to the input file timeline. The default is `0s`.
     * 
     */
    private final String startTimeOffset;

    @CustomType.Constructor
    private EditAtomResponse(
        @CustomType.Parameter("endTimeOffset") String endTimeOffset,
        @CustomType.Parameter("inputs") List<String> inputs,
        @CustomType.Parameter("key") String key,
        @CustomType.Parameter("startTimeOffset") String startTimeOffset) {
        this.endTimeOffset = endTimeOffset;
        this.inputs = inputs;
        this.key = key;
        this.startTimeOffset = startTimeOffset;
    }

    /**
     * @return End time in seconds for the atom, relative to the input file timeline. When `end_time_offset` is not specified, the `inputs` are used until the end of the atom.
     * 
     */
    public String endTimeOffset() {
        return this.endTimeOffset;
    }
    /**
     * @return List of `Input.key`s identifying files that should be used in this atom. The listed `inputs` must have the same timeline.
     * 
     */
    public List<String> inputs() {
        return this.inputs;
    }
    /**
     * @return A unique key for this atom. Must be specified when using advanced mapping.
     * 
     */
    public String key() {
        return this.key;
    }
    /**
     * @return Start time in seconds for the atom, relative to the input file timeline. The default is `0s`.
     * 
     */
    public String startTimeOffset() {
        return this.startTimeOffset;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(EditAtomResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String endTimeOffset;
        private List<String> inputs;
        private String key;
        private String startTimeOffset;

        public Builder() {
    	      // Empty
        }

        public Builder(EditAtomResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.endTimeOffset = defaults.endTimeOffset;
    	      this.inputs = defaults.inputs;
    	      this.key = defaults.key;
    	      this.startTimeOffset = defaults.startTimeOffset;
        }

        public Builder endTimeOffset(String endTimeOffset) {
            this.endTimeOffset = Objects.requireNonNull(endTimeOffset);
            return this;
        }
        public Builder inputs(List<String> inputs) {
            this.inputs = Objects.requireNonNull(inputs);
            return this;
        }
        public Builder inputs(String... inputs) {
            return inputs(List.of(inputs));
        }
        public Builder key(String key) {
            this.key = Objects.requireNonNull(key);
            return this;
        }
        public Builder startTimeOffset(String startTimeOffset) {
            this.startTimeOffset = Objects.requireNonNull(startTimeOffset);
            return this;
        }        public EditAtomResponse build() {
            return new EditAtomResponse(endTimeOffset, inputs, key, startTimeOffset);
        }
    }
}
