// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.monitoring_v3.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.monitoring_v3.inputs.GoogleMonitoringV3RangeResponse;
import java.lang.String;
import java.util.Objects;


/**
 * A MetricRange is used when each window is good when the value x of a single TimeSeries satisfies range.min &lt;= x &lt;= range.max. The provided TimeSeries must have ValueType = INT64 or ValueType = DOUBLE and MetricKind = GAUGE.
 * 
 */
public final class MetricRangeResponse extends com.pulumi.resources.InvokeArgs {

    public static final MetricRangeResponse Empty = new MetricRangeResponse();

    /**
     * Range of values considered &#34;good.&#34; For a one-sided range, set one bound to an infinite value.
     * 
     */
    @Import(name="range", required=true)
    private GoogleMonitoringV3RangeResponse range;

    /**
     * @return Range of values considered &#34;good.&#34; For a one-sided range, set one bound to an infinite value.
     * 
     */
    public GoogleMonitoringV3RangeResponse range() {
        return this.range;
    }

    /**
     * A monitoring filter (https://cloud.google.com/monitoring/api/v3/filters) specifying the TimeSeries to use for evaluating window quality.
     * 
     */
    @Import(name="timeSeries", required=true)
    private String timeSeries;

    /**
     * @return A monitoring filter (https://cloud.google.com/monitoring/api/v3/filters) specifying the TimeSeries to use for evaluating window quality.
     * 
     */
    public String timeSeries() {
        return this.timeSeries;
    }

    private MetricRangeResponse() {}

    private MetricRangeResponse(MetricRangeResponse $) {
        this.range = $.range;
        this.timeSeries = $.timeSeries;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MetricRangeResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MetricRangeResponse $;

        public Builder() {
            $ = new MetricRangeResponse();
        }

        public Builder(MetricRangeResponse defaults) {
            $ = new MetricRangeResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param range Range of values considered &#34;good.&#34; For a one-sided range, set one bound to an infinite value.
         * 
         * @return builder
         * 
         */
        public Builder range(GoogleMonitoringV3RangeResponse range) {
            $.range = range;
            return this;
        }

        /**
         * @param timeSeries A monitoring filter (https://cloud.google.com/monitoring/api/v3/filters) specifying the TimeSeries to use for evaluating window quality.
         * 
         * @return builder
         * 
         */
        public Builder timeSeries(String timeSeries) {
            $.timeSeries = timeSeries;
            return this;
        }

        public MetricRangeResponse build() {
            $.range = Objects.requireNonNull($.range, "expected parameter 'range' to be non-null");
            $.timeSeries = Objects.requireNonNull($.timeSeries, "expected parameter 'timeSeries' to be non-null");
            return $;
        }
    }

}
