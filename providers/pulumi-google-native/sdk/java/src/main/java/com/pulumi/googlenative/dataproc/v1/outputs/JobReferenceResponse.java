// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.dataproc.v1.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class JobReferenceResponse {
    /**
     * @return Optional. The job ID, which must be unique within the project.The ID must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), or hyphens (-). The maximum length is 100 characters.If not specified by the caller, the job ID will be provided by the server.
     * 
     */
    private final String jobId;
    /**
     * @return Optional. The ID of the Google Cloud Platform project that the job belongs to. If specified, must match the request project ID.
     * 
     */
    private final String project;

    @CustomType.Constructor
    private JobReferenceResponse(
        @CustomType.Parameter("jobId") String jobId,
        @CustomType.Parameter("project") String project) {
        this.jobId = jobId;
        this.project = project;
    }

    /**
     * @return Optional. The job ID, which must be unique within the project.The ID must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), or hyphens (-). The maximum length is 100 characters.If not specified by the caller, the job ID will be provided by the server.
     * 
     */
    public String jobId() {
        return this.jobId;
    }
    /**
     * @return Optional. The ID of the Google Cloud Platform project that the job belongs to. If specified, must match the request project ID.
     * 
     */
    public String project() {
        return this.project;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(JobReferenceResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String jobId;
        private String project;

        public Builder() {
    	      // Empty
        }

        public Builder(JobReferenceResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.jobId = defaults.jobId;
    	      this.project = defaults.project;
        }

        public Builder jobId(String jobId) {
            this.jobId = Objects.requireNonNull(jobId);
            return this;
        }
        public Builder project(String project) {
            this.project = Objects.requireNonNull(project);
            return this;
        }        public JobReferenceResponse build() {
            return new JobReferenceResponse(jobId, project);
        }
    }
}
