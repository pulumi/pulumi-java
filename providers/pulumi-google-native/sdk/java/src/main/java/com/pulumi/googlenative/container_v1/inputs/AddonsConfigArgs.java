// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.container_v1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import com.pulumi.googlenative.container_v1.inputs.CloudRunConfigArgs;
import com.pulumi.googlenative.container_v1.inputs.ConfigConnectorConfigArgs;
import com.pulumi.googlenative.container_v1.inputs.DnsCacheConfigArgs;
import com.pulumi.googlenative.container_v1.inputs.GcePersistentDiskCsiDriverConfigArgs;
import com.pulumi.googlenative.container_v1.inputs.GcpFilestoreCsiDriverConfigArgs;
import com.pulumi.googlenative.container_v1.inputs.HorizontalPodAutoscalingArgs;
import com.pulumi.googlenative.container_v1.inputs.HttpLoadBalancingArgs;
import com.pulumi.googlenative.container_v1.inputs.KubernetesDashboardArgs;
import com.pulumi.googlenative.container_v1.inputs.NetworkPolicyConfigArgs;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Configuration for the addons that can be automatically spun up in the cluster, enabling additional functionality.
 * 
 */
public final class AddonsConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final AddonsConfigArgs Empty = new AddonsConfigArgs();

    /**
     * Configuration for the Cloud Run addon, which allows the user to use a managed Knative service.
     * 
     */
    @Import(name="cloudRunConfig")
      private final @Nullable Output<CloudRunConfigArgs> cloudRunConfig;

    public Output<CloudRunConfigArgs> cloudRunConfig() {
        return this.cloudRunConfig == null ? Codegen.empty() : this.cloudRunConfig;
    }

    /**
     * Configuration for the ConfigConnector add-on, a Kubernetes extension to manage hosted GCP services through the Kubernetes API
     * 
     */
    @Import(name="configConnectorConfig")
      private final @Nullable Output<ConfigConnectorConfigArgs> configConnectorConfig;

    public Output<ConfigConnectorConfigArgs> configConnectorConfig() {
        return this.configConnectorConfig == null ? Codegen.empty() : this.configConnectorConfig;
    }

    /**
     * Configuration for NodeLocalDNS, a dns cache running on cluster nodes
     * 
     */
    @Import(name="dnsCacheConfig")
      private final @Nullable Output<DnsCacheConfigArgs> dnsCacheConfig;

    public Output<DnsCacheConfigArgs> dnsCacheConfig() {
        return this.dnsCacheConfig == null ? Codegen.empty() : this.dnsCacheConfig;
    }

    /**
     * Configuration for the Compute Engine Persistent Disk CSI driver.
     * 
     */
    @Import(name="gcePersistentDiskCsiDriverConfig")
      private final @Nullable Output<GcePersistentDiskCsiDriverConfigArgs> gcePersistentDiskCsiDriverConfig;

    public Output<GcePersistentDiskCsiDriverConfigArgs> gcePersistentDiskCsiDriverConfig() {
        return this.gcePersistentDiskCsiDriverConfig == null ? Codegen.empty() : this.gcePersistentDiskCsiDriverConfig;
    }

    /**
     * Configuration for the GCP Filestore CSI driver.
     * 
     */
    @Import(name="gcpFilestoreCsiDriverConfig")
      private final @Nullable Output<GcpFilestoreCsiDriverConfigArgs> gcpFilestoreCsiDriverConfig;

    public Output<GcpFilestoreCsiDriverConfigArgs> gcpFilestoreCsiDriverConfig() {
        return this.gcpFilestoreCsiDriverConfig == null ? Codegen.empty() : this.gcpFilestoreCsiDriverConfig;
    }

    /**
     * Configuration for the horizontal pod autoscaling feature, which increases or decreases the number of replica pods a replication controller has based on the resource usage of the existing pods.
     * 
     */
    @Import(name="horizontalPodAutoscaling")
      private final @Nullable Output<HorizontalPodAutoscalingArgs> horizontalPodAutoscaling;

    public Output<HorizontalPodAutoscalingArgs> horizontalPodAutoscaling() {
        return this.horizontalPodAutoscaling == null ? Codegen.empty() : this.horizontalPodAutoscaling;
    }

    /**
     * Configuration for the HTTP (L7) load balancing controller addon, which makes it easy to set up HTTP load balancers for services in a cluster.
     * 
     */
    @Import(name="httpLoadBalancing")
      private final @Nullable Output<HttpLoadBalancingArgs> httpLoadBalancing;

    public Output<HttpLoadBalancingArgs> httpLoadBalancing() {
        return this.httpLoadBalancing == null ? Codegen.empty() : this.httpLoadBalancing;
    }

    /**
     * Configuration for the Kubernetes Dashboard. This addon is deprecated, and will be disabled in 1.15. It is recommended to use the Cloud Console to manage and monitor your Kubernetes clusters, workloads and applications. For more information, see: https://cloud.google.com/kubernetes-engine/docs/concepts/dashboards
     * 
     */
    @Import(name="kubernetesDashboard")
      private final @Nullable Output<KubernetesDashboardArgs> kubernetesDashboard;

    public Output<KubernetesDashboardArgs> kubernetesDashboard() {
        return this.kubernetesDashboard == null ? Codegen.empty() : this.kubernetesDashboard;
    }

    /**
     * Configuration for NetworkPolicy. This only tracks whether the addon is enabled or not on the Master, it does not track whether network policy is enabled for the nodes.
     * 
     */
    @Import(name="networkPolicyConfig")
      private final @Nullable Output<NetworkPolicyConfigArgs> networkPolicyConfig;

    public Output<NetworkPolicyConfigArgs> networkPolicyConfig() {
        return this.networkPolicyConfig == null ? Codegen.empty() : this.networkPolicyConfig;
    }

    public AddonsConfigArgs(
        @Nullable Output<CloudRunConfigArgs> cloudRunConfig,
        @Nullable Output<ConfigConnectorConfigArgs> configConnectorConfig,
        @Nullable Output<DnsCacheConfigArgs> dnsCacheConfig,
        @Nullable Output<GcePersistentDiskCsiDriverConfigArgs> gcePersistentDiskCsiDriverConfig,
        @Nullable Output<GcpFilestoreCsiDriverConfigArgs> gcpFilestoreCsiDriverConfig,
        @Nullable Output<HorizontalPodAutoscalingArgs> horizontalPodAutoscaling,
        @Nullable Output<HttpLoadBalancingArgs> httpLoadBalancing,
        @Nullable Output<KubernetesDashboardArgs> kubernetesDashboard,
        @Nullable Output<NetworkPolicyConfigArgs> networkPolicyConfig) {
        this.cloudRunConfig = cloudRunConfig;
        this.configConnectorConfig = configConnectorConfig;
        this.dnsCacheConfig = dnsCacheConfig;
        this.gcePersistentDiskCsiDriverConfig = gcePersistentDiskCsiDriverConfig;
        this.gcpFilestoreCsiDriverConfig = gcpFilestoreCsiDriverConfig;
        this.horizontalPodAutoscaling = horizontalPodAutoscaling;
        this.httpLoadBalancing = httpLoadBalancing;
        this.kubernetesDashboard = kubernetesDashboard;
        this.networkPolicyConfig = networkPolicyConfig;
    }

    private AddonsConfigArgs() {
        this.cloudRunConfig = Codegen.empty();
        this.configConnectorConfig = Codegen.empty();
        this.dnsCacheConfig = Codegen.empty();
        this.gcePersistentDiskCsiDriverConfig = Codegen.empty();
        this.gcpFilestoreCsiDriverConfig = Codegen.empty();
        this.horizontalPodAutoscaling = Codegen.empty();
        this.httpLoadBalancing = Codegen.empty();
        this.kubernetesDashboard = Codegen.empty();
        this.networkPolicyConfig = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AddonsConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<CloudRunConfigArgs> cloudRunConfig;
        private @Nullable Output<ConfigConnectorConfigArgs> configConnectorConfig;
        private @Nullable Output<DnsCacheConfigArgs> dnsCacheConfig;
        private @Nullable Output<GcePersistentDiskCsiDriverConfigArgs> gcePersistentDiskCsiDriverConfig;
        private @Nullable Output<GcpFilestoreCsiDriverConfigArgs> gcpFilestoreCsiDriverConfig;
        private @Nullable Output<HorizontalPodAutoscalingArgs> horizontalPodAutoscaling;
        private @Nullable Output<HttpLoadBalancingArgs> httpLoadBalancing;
        private @Nullable Output<KubernetesDashboardArgs> kubernetesDashboard;
        private @Nullable Output<NetworkPolicyConfigArgs> networkPolicyConfig;

        public Builder() {
    	      // Empty
        }

        public Builder(AddonsConfigArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cloudRunConfig = defaults.cloudRunConfig;
    	      this.configConnectorConfig = defaults.configConnectorConfig;
    	      this.dnsCacheConfig = defaults.dnsCacheConfig;
    	      this.gcePersistentDiskCsiDriverConfig = defaults.gcePersistentDiskCsiDriverConfig;
    	      this.gcpFilestoreCsiDriverConfig = defaults.gcpFilestoreCsiDriverConfig;
    	      this.horizontalPodAutoscaling = defaults.horizontalPodAutoscaling;
    	      this.httpLoadBalancing = defaults.httpLoadBalancing;
    	      this.kubernetesDashboard = defaults.kubernetesDashboard;
    	      this.networkPolicyConfig = defaults.networkPolicyConfig;
        }

        public Builder cloudRunConfig(@Nullable Output<CloudRunConfigArgs> cloudRunConfig) {
            this.cloudRunConfig = cloudRunConfig;
            return this;
        }
        public Builder cloudRunConfig(@Nullable CloudRunConfigArgs cloudRunConfig) {
            this.cloudRunConfig = Codegen.ofNullable(cloudRunConfig);
            return this;
        }
        public Builder configConnectorConfig(@Nullable Output<ConfigConnectorConfigArgs> configConnectorConfig) {
            this.configConnectorConfig = configConnectorConfig;
            return this;
        }
        public Builder configConnectorConfig(@Nullable ConfigConnectorConfigArgs configConnectorConfig) {
            this.configConnectorConfig = Codegen.ofNullable(configConnectorConfig);
            return this;
        }
        public Builder dnsCacheConfig(@Nullable Output<DnsCacheConfigArgs> dnsCacheConfig) {
            this.dnsCacheConfig = dnsCacheConfig;
            return this;
        }
        public Builder dnsCacheConfig(@Nullable DnsCacheConfigArgs dnsCacheConfig) {
            this.dnsCacheConfig = Codegen.ofNullable(dnsCacheConfig);
            return this;
        }
        public Builder gcePersistentDiskCsiDriverConfig(@Nullable Output<GcePersistentDiskCsiDriverConfigArgs> gcePersistentDiskCsiDriverConfig) {
            this.gcePersistentDiskCsiDriverConfig = gcePersistentDiskCsiDriverConfig;
            return this;
        }
        public Builder gcePersistentDiskCsiDriverConfig(@Nullable GcePersistentDiskCsiDriverConfigArgs gcePersistentDiskCsiDriverConfig) {
            this.gcePersistentDiskCsiDriverConfig = Codegen.ofNullable(gcePersistentDiskCsiDriverConfig);
            return this;
        }
        public Builder gcpFilestoreCsiDriverConfig(@Nullable Output<GcpFilestoreCsiDriverConfigArgs> gcpFilestoreCsiDriverConfig) {
            this.gcpFilestoreCsiDriverConfig = gcpFilestoreCsiDriverConfig;
            return this;
        }
        public Builder gcpFilestoreCsiDriverConfig(@Nullable GcpFilestoreCsiDriverConfigArgs gcpFilestoreCsiDriverConfig) {
            this.gcpFilestoreCsiDriverConfig = Codegen.ofNullable(gcpFilestoreCsiDriverConfig);
            return this;
        }
        public Builder horizontalPodAutoscaling(@Nullable Output<HorizontalPodAutoscalingArgs> horizontalPodAutoscaling) {
            this.horizontalPodAutoscaling = horizontalPodAutoscaling;
            return this;
        }
        public Builder horizontalPodAutoscaling(@Nullable HorizontalPodAutoscalingArgs horizontalPodAutoscaling) {
            this.horizontalPodAutoscaling = Codegen.ofNullable(horizontalPodAutoscaling);
            return this;
        }
        public Builder httpLoadBalancing(@Nullable Output<HttpLoadBalancingArgs> httpLoadBalancing) {
            this.httpLoadBalancing = httpLoadBalancing;
            return this;
        }
        public Builder httpLoadBalancing(@Nullable HttpLoadBalancingArgs httpLoadBalancing) {
            this.httpLoadBalancing = Codegen.ofNullable(httpLoadBalancing);
            return this;
        }
        public Builder kubernetesDashboard(@Nullable Output<KubernetesDashboardArgs> kubernetesDashboard) {
            this.kubernetesDashboard = kubernetesDashboard;
            return this;
        }
        public Builder kubernetesDashboard(@Nullable KubernetesDashboardArgs kubernetesDashboard) {
            this.kubernetesDashboard = Codegen.ofNullable(kubernetesDashboard);
            return this;
        }
        public Builder networkPolicyConfig(@Nullable Output<NetworkPolicyConfigArgs> networkPolicyConfig) {
            this.networkPolicyConfig = networkPolicyConfig;
            return this;
        }
        public Builder networkPolicyConfig(@Nullable NetworkPolicyConfigArgs networkPolicyConfig) {
            this.networkPolicyConfig = Codegen.ofNullable(networkPolicyConfig);
            return this;
        }        public AddonsConfigArgs build() {
            return new AddonsConfigArgs(cloudRunConfig, configConnectorConfig, dnsCacheConfig, gcePersistentDiskCsiDriverConfig, gcpFilestoreCsiDriverConfig, horizontalPodAutoscaling, httpLoadBalancing, kubernetesDashboard, networkPolicyConfig);
        }
    }
}
