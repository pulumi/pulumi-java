// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.storage_v1.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * The project team associated with the entity, if any.
 * 
 */
public final class DefaultObjectAccessControlProjectTeamResponse extends com.pulumi.resources.InvokeArgs {

    public static final DefaultObjectAccessControlProjectTeamResponse Empty = new DefaultObjectAccessControlProjectTeamResponse();

    /**
     * The project number.
     * 
     */
    @Import(name="projectNumber", required=true)
    private String projectNumber;

    /**
     * @return The project number.
     * 
     */
    public String projectNumber() {
        return this.projectNumber;
    }

    /**
     * The team.
     * 
     */
    @Import(name="team", required=true)
    private String team;

    /**
     * @return The team.
     * 
     */
    public String team() {
        return this.team;
    }

    private DefaultObjectAccessControlProjectTeamResponse() {}

    private DefaultObjectAccessControlProjectTeamResponse(DefaultObjectAccessControlProjectTeamResponse $) {
        this.projectNumber = $.projectNumber;
        this.team = $.team;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DefaultObjectAccessControlProjectTeamResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DefaultObjectAccessControlProjectTeamResponse $;

        public Builder() {
            $ = new DefaultObjectAccessControlProjectTeamResponse();
        }

        public Builder(DefaultObjectAccessControlProjectTeamResponse defaults) {
            $ = new DefaultObjectAccessControlProjectTeamResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param projectNumber The project number.
         * 
         * @return builder
         * 
         */
        public Builder projectNumber(String projectNumber) {
            $.projectNumber = projectNumber;
            return this;
        }

        /**
         * @param team The team.
         * 
         * @return builder
         * 
         */
        public Builder team(String team) {
            $.team = team;
            return this;
        }

        public DefaultObjectAccessControlProjectTeamResponse build() {
            $.projectNumber = Objects.requireNonNull($.projectNumber, "expected parameter 'projectNumber' to be non-null");
            $.team = Objects.requireNonNull($.team, "expected parameter 'team' to be non-null");
            return $;
        }
    }

}
