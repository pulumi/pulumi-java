// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.compute.v1.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.googlenative.compute.v1.outputs.ResourcePolicyInstanceSchedulePolicyScheduleResponse;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class ResourcePolicyInstanceSchedulePolicyResponse {
    /**
     * @return The expiration time of the schedule. The timestamp is an RFC3339 string.
     * 
     */
    private final String expirationTime;
    /**
     * @return The start time of the schedule. The timestamp is an RFC3339 string.
     * 
     */
    private final String startTime;
    /**
     * @return Specifies the time zone to be used in interpreting Schedule.schedule. The value of this field must be a time zone name from the tz database: http://en.wikipedia.org/wiki/Tz_database.
     * 
     */
    private final String timeZone;
    /**
     * @return Specifies the schedule for starting instances.
     * 
     */
    private final ResourcePolicyInstanceSchedulePolicyScheduleResponse vmStartSchedule;
    /**
     * @return Specifies the schedule for stopping instances.
     * 
     */
    private final ResourcePolicyInstanceSchedulePolicyScheduleResponse vmStopSchedule;

    @CustomType.Constructor
    private ResourcePolicyInstanceSchedulePolicyResponse(
        @CustomType.Parameter("expirationTime") String expirationTime,
        @CustomType.Parameter("startTime") String startTime,
        @CustomType.Parameter("timeZone") String timeZone,
        @CustomType.Parameter("vmStartSchedule") ResourcePolicyInstanceSchedulePolicyScheduleResponse vmStartSchedule,
        @CustomType.Parameter("vmStopSchedule") ResourcePolicyInstanceSchedulePolicyScheduleResponse vmStopSchedule) {
        this.expirationTime = expirationTime;
        this.startTime = startTime;
        this.timeZone = timeZone;
        this.vmStartSchedule = vmStartSchedule;
        this.vmStopSchedule = vmStopSchedule;
    }

    /**
     * @return The expiration time of the schedule. The timestamp is an RFC3339 string.
     * 
     */
    public String expirationTime() {
        return this.expirationTime;
    }
    /**
     * @return The start time of the schedule. The timestamp is an RFC3339 string.
     * 
     */
    public String startTime() {
        return this.startTime;
    }
    /**
     * @return Specifies the time zone to be used in interpreting Schedule.schedule. The value of this field must be a time zone name from the tz database: http://en.wikipedia.org/wiki/Tz_database.
     * 
     */
    public String timeZone() {
        return this.timeZone;
    }
    /**
     * @return Specifies the schedule for starting instances.
     * 
     */
    public ResourcePolicyInstanceSchedulePolicyScheduleResponse vmStartSchedule() {
        return this.vmStartSchedule;
    }
    /**
     * @return Specifies the schedule for stopping instances.
     * 
     */
    public ResourcePolicyInstanceSchedulePolicyScheduleResponse vmStopSchedule() {
        return this.vmStopSchedule;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ResourcePolicyInstanceSchedulePolicyResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String expirationTime;
        private String startTime;
        private String timeZone;
        private ResourcePolicyInstanceSchedulePolicyScheduleResponse vmStartSchedule;
        private ResourcePolicyInstanceSchedulePolicyScheduleResponse vmStopSchedule;

        public Builder() {
    	      // Empty
        }

        public Builder(ResourcePolicyInstanceSchedulePolicyResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.expirationTime = defaults.expirationTime;
    	      this.startTime = defaults.startTime;
    	      this.timeZone = defaults.timeZone;
    	      this.vmStartSchedule = defaults.vmStartSchedule;
    	      this.vmStopSchedule = defaults.vmStopSchedule;
        }

        public Builder expirationTime(String expirationTime) {
            this.expirationTime = Objects.requireNonNull(expirationTime);
            return this;
        }
        public Builder startTime(String startTime) {
            this.startTime = Objects.requireNonNull(startTime);
            return this;
        }
        public Builder timeZone(String timeZone) {
            this.timeZone = Objects.requireNonNull(timeZone);
            return this;
        }
        public Builder vmStartSchedule(ResourcePolicyInstanceSchedulePolicyScheduleResponse vmStartSchedule) {
            this.vmStartSchedule = Objects.requireNonNull(vmStartSchedule);
            return this;
        }
        public Builder vmStopSchedule(ResourcePolicyInstanceSchedulePolicyScheduleResponse vmStopSchedule) {
            this.vmStopSchedule = Objects.requireNonNull(vmStopSchedule);
            return this;
        }        public ResourcePolicyInstanceSchedulePolicyResponse build() {
            return new ResourcePolicyInstanceSchedulePolicyResponse(expirationTime, startTime, timeZone, vmStartSchedule, vmStopSchedule);
        }
    }
}
