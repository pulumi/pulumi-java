// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.toolresults.v1beta3.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.googlenative.toolresults.v1beta3.outputs.DurationResponse;
import com.pulumi.googlenative.toolresults.v1beta3.outputs.IosAppInfoResponse;
import com.pulumi.googlenative.toolresults.v1beta3.outputs.IosRoboTestResponse;
import com.pulumi.googlenative.toolresults.v1beta3.outputs.IosTestLoopResponse;
import com.pulumi.googlenative.toolresults.v1beta3.outputs.IosXcTestResponse;
import java.util.Objects;

@CustomType
public final class IosTestResponse {
    /**
     * @return Information about the application under test.
     * 
     */
    private final IosAppInfoResponse iosAppInfo;
    /**
     * @return An iOS Robo test.
     * 
     */
    private final IosRoboTestResponse iosRoboTest;
    /**
     * @return An iOS test loop.
     * 
     */
    private final IosTestLoopResponse iosTestLoop;
    /**
     * @return An iOS XCTest.
     * 
     */
    private final IosXcTestResponse iosXcTest;
    /**
     * @return Max time a test is allowed to run before it is automatically cancelled.
     * 
     */
    private final DurationResponse testTimeout;

    @CustomType.Constructor
    private IosTestResponse(
        @CustomType.Parameter("iosAppInfo") IosAppInfoResponse iosAppInfo,
        @CustomType.Parameter("iosRoboTest") IosRoboTestResponse iosRoboTest,
        @CustomType.Parameter("iosTestLoop") IosTestLoopResponse iosTestLoop,
        @CustomType.Parameter("iosXcTest") IosXcTestResponse iosXcTest,
        @CustomType.Parameter("testTimeout") DurationResponse testTimeout) {
        this.iosAppInfo = iosAppInfo;
        this.iosRoboTest = iosRoboTest;
        this.iosTestLoop = iosTestLoop;
        this.iosXcTest = iosXcTest;
        this.testTimeout = testTimeout;
    }

    /**
     * @return Information about the application under test.
     * 
     */
    public IosAppInfoResponse iosAppInfo() {
        return this.iosAppInfo;
    }
    /**
     * @return An iOS Robo test.
     * 
     */
    public IosRoboTestResponse iosRoboTest() {
        return this.iosRoboTest;
    }
    /**
     * @return An iOS test loop.
     * 
     */
    public IosTestLoopResponse iosTestLoop() {
        return this.iosTestLoop;
    }
    /**
     * @return An iOS XCTest.
     * 
     */
    public IosXcTestResponse iosXcTest() {
        return this.iosXcTest;
    }
    /**
     * @return Max time a test is allowed to run before it is automatically cancelled.
     * 
     */
    public DurationResponse testTimeout() {
        return this.testTimeout;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(IosTestResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private IosAppInfoResponse iosAppInfo;
        private IosRoboTestResponse iosRoboTest;
        private IosTestLoopResponse iosTestLoop;
        private IosXcTestResponse iosXcTest;
        private DurationResponse testTimeout;

        public Builder() {
    	      // Empty
        }

        public Builder(IosTestResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.iosAppInfo = defaults.iosAppInfo;
    	      this.iosRoboTest = defaults.iosRoboTest;
    	      this.iosTestLoop = defaults.iosTestLoop;
    	      this.iosXcTest = defaults.iosXcTest;
    	      this.testTimeout = defaults.testTimeout;
        }

        public Builder iosAppInfo(IosAppInfoResponse iosAppInfo) {
            this.iosAppInfo = Objects.requireNonNull(iosAppInfo);
            return this;
        }
        public Builder iosRoboTest(IosRoboTestResponse iosRoboTest) {
            this.iosRoboTest = Objects.requireNonNull(iosRoboTest);
            return this;
        }
        public Builder iosTestLoop(IosTestLoopResponse iosTestLoop) {
            this.iosTestLoop = Objects.requireNonNull(iosTestLoop);
            return this;
        }
        public Builder iosXcTest(IosXcTestResponse iosXcTest) {
            this.iosXcTest = Objects.requireNonNull(iosXcTest);
            return this;
        }
        public Builder testTimeout(DurationResponse testTimeout) {
            this.testTimeout = Objects.requireNonNull(testTimeout);
            return this;
        }        public IosTestResponse build() {
            return new IosTestResponse(iosAppInfo, iosRoboTest, iosTestLoop, iosXcTest, testTimeout);
        }
    }
}
