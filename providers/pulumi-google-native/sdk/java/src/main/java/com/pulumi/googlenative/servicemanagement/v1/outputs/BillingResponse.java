// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.servicemanagement.v1.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.googlenative.servicemanagement.v1.outputs.BillingDestinationResponse;
import java.util.List;
import java.util.Objects;

@CustomType
public final class BillingResponse {
    /**
     * @return Billing configurations for sending metrics to the consumer project. There can be multiple consumer destinations per service, each one must have a different monitored resource type. A metric can be used in at most one consumer destination.
     * 
     */
    private final List<BillingDestinationResponse> consumerDestinations;

    @CustomType.Constructor
    private BillingResponse(@CustomType.Parameter("consumerDestinations") List<BillingDestinationResponse> consumerDestinations) {
        this.consumerDestinations = consumerDestinations;
    }

    /**
     * @return Billing configurations for sending metrics to the consumer project. There can be multiple consumer destinations per service, each one must have a different monitored resource type. A metric can be used in at most one consumer destination.
     * 
     */
    public List<BillingDestinationResponse> consumerDestinations() {
        return this.consumerDestinations;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BillingResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<BillingDestinationResponse> consumerDestinations;

        public Builder() {
    	      // Empty
        }

        public Builder(BillingResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.consumerDestinations = defaults.consumerDestinations;
        }

        public Builder consumerDestinations(List<BillingDestinationResponse> consumerDestinations) {
            this.consumerDestinations = Objects.requireNonNull(consumerDestinations);
            return this;
        }
        public Builder consumerDestinations(BillingDestinationResponse... consumerDestinations) {
            return consumerDestinations(List.of(consumerDestinations));
        }        public BillingResponse build() {
            return new BillingResponse(consumerDestinations);
        }
    }
}
