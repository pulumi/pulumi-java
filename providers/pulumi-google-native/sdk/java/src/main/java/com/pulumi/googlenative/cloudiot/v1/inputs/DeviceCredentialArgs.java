// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.cloudiot.v1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.cloudiot.v1.inputs.PublicKeyCredentialArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * A server-stored device credential used for authentication.
 * 
 */
public final class DeviceCredentialArgs extends com.pulumi.resources.ResourceArgs {

    public static final DeviceCredentialArgs Empty = new DeviceCredentialArgs();

    /**
     * [Optional] The time at which this credential becomes invalid. This credential will be ignored for new client authentication requests after this timestamp; however, it will not be automatically deleted.
     * 
     */
    @Import(name="expirationTime")
    private @Nullable Output<String> expirationTime;

    /**
     * @return [Optional] The time at which this credential becomes invalid. This credential will be ignored for new client authentication requests after this timestamp; however, it will not be automatically deleted.
     * 
     */
    public Optional<Output<String>> expirationTime() {
        return Optional.ofNullable(this.expirationTime);
    }

    /**
     * A public key used to verify the signature of JSON Web Tokens (JWTs). When adding a new device credential, either via device creation or via modifications, this public key credential may be required to be signed by one of the registry level certificates. More specifically, if the registry contains at least one certificate, any new device credential must be signed by one of the registry certificates. As a result, when the registry contains certificates, only X.509 certificates are accepted as device credentials. However, if the registry does not contain a certificate, self-signed certificates and public keys will be accepted. New device credentials must be different from every registry-level certificate.
     * 
     */
    @Import(name="publicKey")
    private @Nullable Output<PublicKeyCredentialArgs> publicKey;

    /**
     * @return A public key used to verify the signature of JSON Web Tokens (JWTs). When adding a new device credential, either via device creation or via modifications, this public key credential may be required to be signed by one of the registry level certificates. More specifically, if the registry contains at least one certificate, any new device credential must be signed by one of the registry certificates. As a result, when the registry contains certificates, only X.509 certificates are accepted as device credentials. However, if the registry does not contain a certificate, self-signed certificates and public keys will be accepted. New device credentials must be different from every registry-level certificate.
     * 
     */
    public Optional<Output<PublicKeyCredentialArgs>> publicKey() {
        return Optional.ofNullable(this.publicKey);
    }

    private DeviceCredentialArgs() {}

    private DeviceCredentialArgs(DeviceCredentialArgs $) {
        this.expirationTime = $.expirationTime;
        this.publicKey = $.publicKey;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DeviceCredentialArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DeviceCredentialArgs $;

        public Builder() {
            $ = new DeviceCredentialArgs();
        }

        public Builder(DeviceCredentialArgs defaults) {
            $ = new DeviceCredentialArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param expirationTime [Optional] The time at which this credential becomes invalid. This credential will be ignored for new client authentication requests after this timestamp; however, it will not be automatically deleted.
         * 
         * @return builder
         * 
         */
        public Builder expirationTime(@Nullable Output<String> expirationTime) {
            $.expirationTime = expirationTime;
            return this;
        }

        /**
         * @param expirationTime [Optional] The time at which this credential becomes invalid. This credential will be ignored for new client authentication requests after this timestamp; however, it will not be automatically deleted.
         * 
         * @return builder
         * 
         */
        public Builder expirationTime(String expirationTime) {
            return expirationTime(Output.of(expirationTime));
        }

        /**
         * @param publicKey A public key used to verify the signature of JSON Web Tokens (JWTs). When adding a new device credential, either via device creation or via modifications, this public key credential may be required to be signed by one of the registry level certificates. More specifically, if the registry contains at least one certificate, any new device credential must be signed by one of the registry certificates. As a result, when the registry contains certificates, only X.509 certificates are accepted as device credentials. However, if the registry does not contain a certificate, self-signed certificates and public keys will be accepted. New device credentials must be different from every registry-level certificate.
         * 
         * @return builder
         * 
         */
        public Builder publicKey(@Nullable Output<PublicKeyCredentialArgs> publicKey) {
            $.publicKey = publicKey;
            return this;
        }

        /**
         * @param publicKey A public key used to verify the signature of JSON Web Tokens (JWTs). When adding a new device credential, either via device creation or via modifications, this public key credential may be required to be signed by one of the registry level certificates. More specifically, if the registry contains at least one certificate, any new device credential must be signed by one of the registry certificates. As a result, when the registry contains certificates, only X.509 certificates are accepted as device credentials. However, if the registry does not contain a certificate, self-signed certificates and public keys will be accepted. New device credentials must be different from every registry-level certificate.
         * 
         * @return builder
         * 
         */
        public Builder publicKey(PublicKeyCredentialArgs publicKey) {
            return publicKey(Output.of(publicKey));
        }

        public DeviceCredentialArgs build() {
            return $;
        }
    }

}
