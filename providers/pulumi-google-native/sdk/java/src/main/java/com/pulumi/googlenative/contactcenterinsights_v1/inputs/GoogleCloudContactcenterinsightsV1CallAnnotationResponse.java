// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.contactcenterinsights_v1.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.contactcenterinsights_v1.inputs.GoogleCloudContactcenterinsightsV1AnnotationBoundaryResponse;
import com.pulumi.googlenative.contactcenterinsights_v1.inputs.GoogleCloudContactcenterinsightsV1EntityMentionDataResponse;
import com.pulumi.googlenative.contactcenterinsights_v1.inputs.GoogleCloudContactcenterinsightsV1HoldDataResponse;
import com.pulumi.googlenative.contactcenterinsights_v1.inputs.GoogleCloudContactcenterinsightsV1IntentMatchDataResponse;
import com.pulumi.googlenative.contactcenterinsights_v1.inputs.GoogleCloudContactcenterinsightsV1InterruptionDataResponse;
import com.pulumi.googlenative.contactcenterinsights_v1.inputs.GoogleCloudContactcenterinsightsV1PhraseMatchDataResponse;
import com.pulumi.googlenative.contactcenterinsights_v1.inputs.GoogleCloudContactcenterinsightsV1SentimentDataResponse;
import com.pulumi.googlenative.contactcenterinsights_v1.inputs.GoogleCloudContactcenterinsightsV1SilenceDataResponse;
import java.lang.Integer;
import java.util.Objects;


/**
 * A piece of metadata that applies to a window of a call.
 * 
 */
public final class GoogleCloudContactcenterinsightsV1CallAnnotationResponse extends com.pulumi.resources.InvokeArgs {

    public static final GoogleCloudContactcenterinsightsV1CallAnnotationResponse Empty = new GoogleCloudContactcenterinsightsV1CallAnnotationResponse();

    /**
     * The boundary in the conversation where the annotation ends, inclusive.
     * 
     */
    @Import(name="annotationEndBoundary", required=true)
    private GoogleCloudContactcenterinsightsV1AnnotationBoundaryResponse annotationEndBoundary;

    public GoogleCloudContactcenterinsightsV1AnnotationBoundaryResponse annotationEndBoundary() {
        return this.annotationEndBoundary;
    }

    /**
     * The boundary in the conversation where the annotation starts, inclusive.
     * 
     */
    @Import(name="annotationStartBoundary", required=true)
    private GoogleCloudContactcenterinsightsV1AnnotationBoundaryResponse annotationStartBoundary;

    public GoogleCloudContactcenterinsightsV1AnnotationBoundaryResponse annotationStartBoundary() {
        return this.annotationStartBoundary;
    }

    /**
     * The channel of the audio where the annotation occurs. For single-channel audio, this field is not populated.
     * 
     */
    @Import(name="channelTag", required=true)
    private Integer channelTag;

    public Integer channelTag() {
        return this.channelTag;
    }

    /**
     * Data specifying an entity mention.
     * 
     */
    @Import(name="entityMentionData", required=true)
    private GoogleCloudContactcenterinsightsV1EntityMentionDataResponse entityMentionData;

    public GoogleCloudContactcenterinsightsV1EntityMentionDataResponse entityMentionData() {
        return this.entityMentionData;
    }

    /**
     * Data specifying a hold.
     * 
     */
    @Import(name="holdData", required=true)
    private GoogleCloudContactcenterinsightsV1HoldDataResponse holdData;

    public GoogleCloudContactcenterinsightsV1HoldDataResponse holdData() {
        return this.holdData;
    }

    /**
     * Data specifying an intent match.
     * 
     */
    @Import(name="intentMatchData", required=true)
    private GoogleCloudContactcenterinsightsV1IntentMatchDataResponse intentMatchData;

    public GoogleCloudContactcenterinsightsV1IntentMatchDataResponse intentMatchData() {
        return this.intentMatchData;
    }

    /**
     * Data specifying an interruption.
     * 
     */
    @Import(name="interruptionData", required=true)
    private GoogleCloudContactcenterinsightsV1InterruptionDataResponse interruptionData;

    public GoogleCloudContactcenterinsightsV1InterruptionDataResponse interruptionData() {
        return this.interruptionData;
    }

    /**
     * Data specifying a phrase match.
     * 
     */
    @Import(name="phraseMatchData", required=true)
    private GoogleCloudContactcenterinsightsV1PhraseMatchDataResponse phraseMatchData;

    public GoogleCloudContactcenterinsightsV1PhraseMatchDataResponse phraseMatchData() {
        return this.phraseMatchData;
    }

    /**
     * Data specifying sentiment.
     * 
     */
    @Import(name="sentimentData", required=true)
    private GoogleCloudContactcenterinsightsV1SentimentDataResponse sentimentData;

    public GoogleCloudContactcenterinsightsV1SentimentDataResponse sentimentData() {
        return this.sentimentData;
    }

    /**
     * Data specifying silence.
     * 
     */
    @Import(name="silenceData", required=true)
    private GoogleCloudContactcenterinsightsV1SilenceDataResponse silenceData;

    public GoogleCloudContactcenterinsightsV1SilenceDataResponse silenceData() {
        return this.silenceData;
    }

    private GoogleCloudContactcenterinsightsV1CallAnnotationResponse() {}

    private GoogleCloudContactcenterinsightsV1CallAnnotationResponse(GoogleCloudContactcenterinsightsV1CallAnnotationResponse $) {
        this.annotationEndBoundary = $.annotationEndBoundary;
        this.annotationStartBoundary = $.annotationStartBoundary;
        this.channelTag = $.channelTag;
        this.entityMentionData = $.entityMentionData;
        this.holdData = $.holdData;
        this.intentMatchData = $.intentMatchData;
        this.interruptionData = $.interruptionData;
        this.phraseMatchData = $.phraseMatchData;
        this.sentimentData = $.sentimentData;
        this.silenceData = $.silenceData;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GoogleCloudContactcenterinsightsV1CallAnnotationResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GoogleCloudContactcenterinsightsV1CallAnnotationResponse $;

        public Builder() {
            $ = new GoogleCloudContactcenterinsightsV1CallAnnotationResponse();
        }

        public Builder(GoogleCloudContactcenterinsightsV1CallAnnotationResponse defaults) {
            $ = new GoogleCloudContactcenterinsightsV1CallAnnotationResponse(Objects.requireNonNull(defaults));
        }

        public Builder annotationEndBoundary(GoogleCloudContactcenterinsightsV1AnnotationBoundaryResponse annotationEndBoundary) {
            $.annotationEndBoundary = annotationEndBoundary;
            return this;
        }

        public Builder annotationStartBoundary(GoogleCloudContactcenterinsightsV1AnnotationBoundaryResponse annotationStartBoundary) {
            $.annotationStartBoundary = annotationStartBoundary;
            return this;
        }

        public Builder channelTag(Integer channelTag) {
            $.channelTag = channelTag;
            return this;
        }

        public Builder entityMentionData(GoogleCloudContactcenterinsightsV1EntityMentionDataResponse entityMentionData) {
            $.entityMentionData = entityMentionData;
            return this;
        }

        public Builder holdData(GoogleCloudContactcenterinsightsV1HoldDataResponse holdData) {
            $.holdData = holdData;
            return this;
        }

        public Builder intentMatchData(GoogleCloudContactcenterinsightsV1IntentMatchDataResponse intentMatchData) {
            $.intentMatchData = intentMatchData;
            return this;
        }

        public Builder interruptionData(GoogleCloudContactcenterinsightsV1InterruptionDataResponse interruptionData) {
            $.interruptionData = interruptionData;
            return this;
        }

        public Builder phraseMatchData(GoogleCloudContactcenterinsightsV1PhraseMatchDataResponse phraseMatchData) {
            $.phraseMatchData = phraseMatchData;
            return this;
        }

        public Builder sentimentData(GoogleCloudContactcenterinsightsV1SentimentDataResponse sentimentData) {
            $.sentimentData = sentimentData;
            return this;
        }

        public Builder silenceData(GoogleCloudContactcenterinsightsV1SilenceDataResponse silenceData) {
            $.silenceData = silenceData;
            return this;
        }

        public GoogleCloudContactcenterinsightsV1CallAnnotationResponse build() {
            $.annotationEndBoundary = Objects.requireNonNull($.annotationEndBoundary, "expected parameter 'annotationEndBoundary' to be non-null");
            $.annotationStartBoundary = Objects.requireNonNull($.annotationStartBoundary, "expected parameter 'annotationStartBoundary' to be non-null");
            $.channelTag = Objects.requireNonNull($.channelTag, "expected parameter 'channelTag' to be non-null");
            $.entityMentionData = Objects.requireNonNull($.entityMentionData, "expected parameter 'entityMentionData' to be non-null");
            $.holdData = Objects.requireNonNull($.holdData, "expected parameter 'holdData' to be non-null");
            $.intentMatchData = Objects.requireNonNull($.intentMatchData, "expected parameter 'intentMatchData' to be non-null");
            $.interruptionData = Objects.requireNonNull($.interruptionData, "expected parameter 'interruptionData' to be non-null");
            $.phraseMatchData = Objects.requireNonNull($.phraseMatchData, "expected parameter 'phraseMatchData' to be non-null");
            $.sentimentData = Objects.requireNonNull($.sentimentData, "expected parameter 'sentimentData' to be non-null");
            $.silenceData = Objects.requireNonNull($.silenceData, "expected parameter 'silenceData' to be non-null");
            return $;
        }
    }

}
