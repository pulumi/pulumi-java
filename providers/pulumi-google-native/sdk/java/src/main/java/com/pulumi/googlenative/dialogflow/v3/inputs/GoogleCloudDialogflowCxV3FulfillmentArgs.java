// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.dialogflow.v3.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.dialogflow.v3.inputs.GoogleCloudDialogflowCxV3FulfillmentConditionalCasesArgs;
import com.pulumi.googlenative.dialogflow.v3.inputs.GoogleCloudDialogflowCxV3FulfillmentSetParameterActionArgs;
import com.pulumi.googlenative.dialogflow.v3.inputs.GoogleCloudDialogflowCxV3ResponseMessageArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * A fulfillment can do one or more of the following actions at the same time: * Generate rich message responses. * Set parameter values. * Call the webhook. Fulfillments can be called at various stages in the Page or Form lifecycle. For example, when a DetectIntentRequest drives a session to enter a new page, the page&#39;s entry fulfillment can add a static response to the QueryResult in the returning DetectIntentResponse, call the webhook (for example, to load user data from a database), or both.
 * 
 */
public final class GoogleCloudDialogflowCxV3FulfillmentArgs extends com.pulumi.resources.ResourceArgs {

    public static final GoogleCloudDialogflowCxV3FulfillmentArgs Empty = new GoogleCloudDialogflowCxV3FulfillmentArgs();

    /**
     * Conditional cases for this fulfillment.
     * 
     */
    @Import(name="conditionalCases")
    private @Nullable Output<List<GoogleCloudDialogflowCxV3FulfillmentConditionalCasesArgs>> conditionalCases;

    /**
     * @return Conditional cases for this fulfillment.
     * 
     */
    public Optional<Output<List<GoogleCloudDialogflowCxV3FulfillmentConditionalCasesArgs>>> conditionalCases() {
        return Optional.ofNullable(this.conditionalCases);
    }

    /**
     * The list of rich message responses to present to the user.
     * 
     */
    @Import(name="messages")
    private @Nullable Output<List<GoogleCloudDialogflowCxV3ResponseMessageArgs>> messages;

    /**
     * @return The list of rich message responses to present to the user.
     * 
     */
    public Optional<Output<List<GoogleCloudDialogflowCxV3ResponseMessageArgs>>> messages() {
        return Optional.ofNullable(this.messages);
    }

    /**
     * Whether Dialogflow should return currently queued fulfillment response messages in streaming APIs. If a webhook is specified, it happens before Dialogflow invokes webhook. Warning: 1) This flag only affects streaming API. Responses are still queued and returned once in non-streaming API. 2) The flag can be enabled in any fulfillment but only the first 3 partial responses will be returned. You may only want to apply it to fulfillments that have slow webhooks.
     * 
     */
    @Import(name="returnPartialResponses")
    private @Nullable Output<Boolean> returnPartialResponses;

    /**
     * @return Whether Dialogflow should return currently queued fulfillment response messages in streaming APIs. If a webhook is specified, it happens before Dialogflow invokes webhook. Warning: 1) This flag only affects streaming API. Responses are still queued and returned once in non-streaming API. 2) The flag can be enabled in any fulfillment but only the first 3 partial responses will be returned. You may only want to apply it to fulfillments that have slow webhooks.
     * 
     */
    public Optional<Output<Boolean>> returnPartialResponses() {
        return Optional.ofNullable(this.returnPartialResponses);
    }

    /**
     * Set parameter values before executing the webhook.
     * 
     */
    @Import(name="setParameterActions")
    private @Nullable Output<List<GoogleCloudDialogflowCxV3FulfillmentSetParameterActionArgs>> setParameterActions;

    /**
     * @return Set parameter values before executing the webhook.
     * 
     */
    public Optional<Output<List<GoogleCloudDialogflowCxV3FulfillmentSetParameterActionArgs>>> setParameterActions() {
        return Optional.ofNullable(this.setParameterActions);
    }

    /**
     * The value of this field will be populated in the WebhookRequest `fulfillmentInfo.tag` field by Dialogflow when the associated webhook is called. The tag is typically used by the webhook service to identify which fulfillment is being called, but it could be used for other purposes. This field is required if `webhook` is specified.
     * 
     */
    @Import(name="tag")
    private @Nullable Output<String> tag;

    /**
     * @return The value of this field will be populated in the WebhookRequest `fulfillmentInfo.tag` field by Dialogflow when the associated webhook is called. The tag is typically used by the webhook service to identify which fulfillment is being called, but it could be used for other purposes. This field is required if `webhook` is specified.
     * 
     */
    public Optional<Output<String>> tag() {
        return Optional.ofNullable(this.tag);
    }

    /**
     * The webhook to call. Format: `projects//locations//agents//webhooks/`.
     * 
     */
    @Import(name="webhook")
    private @Nullable Output<String> webhook;

    /**
     * @return The webhook to call. Format: `projects//locations//agents//webhooks/`.
     * 
     */
    public Optional<Output<String>> webhook() {
        return Optional.ofNullable(this.webhook);
    }

    private GoogleCloudDialogflowCxV3FulfillmentArgs() {}

    private GoogleCloudDialogflowCxV3FulfillmentArgs(GoogleCloudDialogflowCxV3FulfillmentArgs $) {
        this.conditionalCases = $.conditionalCases;
        this.messages = $.messages;
        this.returnPartialResponses = $.returnPartialResponses;
        this.setParameterActions = $.setParameterActions;
        this.tag = $.tag;
        this.webhook = $.webhook;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GoogleCloudDialogflowCxV3FulfillmentArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GoogleCloudDialogflowCxV3FulfillmentArgs $;

        public Builder() {
            $ = new GoogleCloudDialogflowCxV3FulfillmentArgs();
        }

        public Builder(GoogleCloudDialogflowCxV3FulfillmentArgs defaults) {
            $ = new GoogleCloudDialogflowCxV3FulfillmentArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param conditionalCases Conditional cases for this fulfillment.
         * 
         * @return builder
         * 
         */
        public Builder conditionalCases(@Nullable Output<List<GoogleCloudDialogflowCxV3FulfillmentConditionalCasesArgs>> conditionalCases) {
            $.conditionalCases = conditionalCases;
            return this;
        }

        /**
         * @param conditionalCases Conditional cases for this fulfillment.
         * 
         * @return builder
         * 
         */
        public Builder conditionalCases(List<GoogleCloudDialogflowCxV3FulfillmentConditionalCasesArgs> conditionalCases) {
            return conditionalCases(Output.of(conditionalCases));
        }

        /**
         * @param conditionalCases Conditional cases for this fulfillment.
         * 
         * @return builder
         * 
         */
        public Builder conditionalCases(GoogleCloudDialogflowCxV3FulfillmentConditionalCasesArgs... conditionalCases) {
            return conditionalCases(List.of(conditionalCases));
        }

        /**
         * @param messages The list of rich message responses to present to the user.
         * 
         * @return builder
         * 
         */
        public Builder messages(@Nullable Output<List<GoogleCloudDialogflowCxV3ResponseMessageArgs>> messages) {
            $.messages = messages;
            return this;
        }

        /**
         * @param messages The list of rich message responses to present to the user.
         * 
         * @return builder
         * 
         */
        public Builder messages(List<GoogleCloudDialogflowCxV3ResponseMessageArgs> messages) {
            return messages(Output.of(messages));
        }

        /**
         * @param messages The list of rich message responses to present to the user.
         * 
         * @return builder
         * 
         */
        public Builder messages(GoogleCloudDialogflowCxV3ResponseMessageArgs... messages) {
            return messages(List.of(messages));
        }

        /**
         * @param returnPartialResponses Whether Dialogflow should return currently queued fulfillment response messages in streaming APIs. If a webhook is specified, it happens before Dialogflow invokes webhook. Warning: 1) This flag only affects streaming API. Responses are still queued and returned once in non-streaming API. 2) The flag can be enabled in any fulfillment but only the first 3 partial responses will be returned. You may only want to apply it to fulfillments that have slow webhooks.
         * 
         * @return builder
         * 
         */
        public Builder returnPartialResponses(@Nullable Output<Boolean> returnPartialResponses) {
            $.returnPartialResponses = returnPartialResponses;
            return this;
        }

        /**
         * @param returnPartialResponses Whether Dialogflow should return currently queued fulfillment response messages in streaming APIs. If a webhook is specified, it happens before Dialogflow invokes webhook. Warning: 1) This flag only affects streaming API. Responses are still queued and returned once in non-streaming API. 2) The flag can be enabled in any fulfillment but only the first 3 partial responses will be returned. You may only want to apply it to fulfillments that have slow webhooks.
         * 
         * @return builder
         * 
         */
        public Builder returnPartialResponses(Boolean returnPartialResponses) {
            return returnPartialResponses(Output.of(returnPartialResponses));
        }

        /**
         * @param setParameterActions Set parameter values before executing the webhook.
         * 
         * @return builder
         * 
         */
        public Builder setParameterActions(@Nullable Output<List<GoogleCloudDialogflowCxV3FulfillmentSetParameterActionArgs>> setParameterActions) {
            $.setParameterActions = setParameterActions;
            return this;
        }

        /**
         * @param setParameterActions Set parameter values before executing the webhook.
         * 
         * @return builder
         * 
         */
        public Builder setParameterActions(List<GoogleCloudDialogflowCxV3FulfillmentSetParameterActionArgs> setParameterActions) {
            return setParameterActions(Output.of(setParameterActions));
        }

        /**
         * @param setParameterActions Set parameter values before executing the webhook.
         * 
         * @return builder
         * 
         */
        public Builder setParameterActions(GoogleCloudDialogflowCxV3FulfillmentSetParameterActionArgs... setParameterActions) {
            return setParameterActions(List.of(setParameterActions));
        }

        /**
         * @param tag The value of this field will be populated in the WebhookRequest `fulfillmentInfo.tag` field by Dialogflow when the associated webhook is called. The tag is typically used by the webhook service to identify which fulfillment is being called, but it could be used for other purposes. This field is required if `webhook` is specified.
         * 
         * @return builder
         * 
         */
        public Builder tag(@Nullable Output<String> tag) {
            $.tag = tag;
            return this;
        }

        /**
         * @param tag The value of this field will be populated in the WebhookRequest `fulfillmentInfo.tag` field by Dialogflow when the associated webhook is called. The tag is typically used by the webhook service to identify which fulfillment is being called, but it could be used for other purposes. This field is required if `webhook` is specified.
         * 
         * @return builder
         * 
         */
        public Builder tag(String tag) {
            return tag(Output.of(tag));
        }

        /**
         * @param webhook The webhook to call. Format: `projects//locations//agents//webhooks/`.
         * 
         * @return builder
         * 
         */
        public Builder webhook(@Nullable Output<String> webhook) {
            $.webhook = webhook;
            return this;
        }

        /**
         * @param webhook The webhook to call. Format: `projects//locations//agents//webhooks/`.
         * 
         * @return builder
         * 
         */
        public Builder webhook(String webhook) {
            return webhook(Output.of(webhook));
        }

        public GoogleCloudDialogflowCxV3FulfillmentArgs build() {
            return $;
        }
    }

}
