// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.privateca.v1beta1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.privateca.v1beta1.inputs.ReusableConfigValuesArgs;
import java.lang.String;
import java.util.Objects;


/**
 * A ReusableConfigWrapper describes values that may assist in creating an X.509 certificate, or a reference to a pre-defined set of values.
 * 
 */
public final class ReusableConfigWrapperArgs extends com.pulumi.resources.ResourceArgs {

    public static final ReusableConfigWrapperArgs Empty = new ReusableConfigWrapperArgs();

    /**
     * A resource path to a ReusableConfig in the format `projects/*{@literal /}locations/*{@literal /}reusableConfigs/*`.
     * 
     */
    @Import(name="reusableConfig", required=true)
    private Output<String> reusableConfig;

    /**
     * @return A resource path to a ReusableConfig in the format `projects/*{@literal /}locations/*{@literal /}reusableConfigs/*`.
     * 
     */
    public Output<String> reusableConfig() {
        return this.reusableConfig;
    }

    /**
     * A user-specified inline ReusableConfigValues.
     * 
     */
    @Import(name="reusableConfigValues", required=true)
    private Output<ReusableConfigValuesArgs> reusableConfigValues;

    /**
     * @return A user-specified inline ReusableConfigValues.
     * 
     */
    public Output<ReusableConfigValuesArgs> reusableConfigValues() {
        return this.reusableConfigValues;
    }

    private ReusableConfigWrapperArgs() {}

    private ReusableConfigWrapperArgs(ReusableConfigWrapperArgs $) {
        this.reusableConfig = $.reusableConfig;
        this.reusableConfigValues = $.reusableConfigValues;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ReusableConfigWrapperArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ReusableConfigWrapperArgs $;

        public Builder() {
            $ = new ReusableConfigWrapperArgs();
        }

        public Builder(ReusableConfigWrapperArgs defaults) {
            $ = new ReusableConfigWrapperArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param reusableConfig A resource path to a ReusableConfig in the format `projects/*{@literal /}locations/*{@literal /}reusableConfigs/*`.
         * 
         * @return builder
         * 
         */
        public Builder reusableConfig(Output<String> reusableConfig) {
            $.reusableConfig = reusableConfig;
            return this;
        }

        /**
         * @param reusableConfig A resource path to a ReusableConfig in the format `projects/*{@literal /}locations/*{@literal /}reusableConfigs/*`.
         * 
         * @return builder
         * 
         */
        public Builder reusableConfig(String reusableConfig) {
            return reusableConfig(Output.of(reusableConfig));
        }

        /**
         * @param reusableConfigValues A user-specified inline ReusableConfigValues.
         * 
         * @return builder
         * 
         */
        public Builder reusableConfigValues(Output<ReusableConfigValuesArgs> reusableConfigValues) {
            $.reusableConfigValues = reusableConfigValues;
            return this;
        }

        /**
         * @param reusableConfigValues A user-specified inline ReusableConfigValues.
         * 
         * @return builder
         * 
         */
        public Builder reusableConfigValues(ReusableConfigValuesArgs reusableConfigValues) {
            return reusableConfigValues(Output.of(reusableConfigValues));
        }

        public ReusableConfigWrapperArgs build() {
            $.reusableConfig = Objects.requireNonNull($.reusableConfig, "expected parameter 'reusableConfig' to be non-null");
            $.reusableConfigValues = Objects.requireNonNull($.reusableConfigValues, "expected parameter 'reusableConfigValues' to be non-null");
            return $;
        }
    }

}
