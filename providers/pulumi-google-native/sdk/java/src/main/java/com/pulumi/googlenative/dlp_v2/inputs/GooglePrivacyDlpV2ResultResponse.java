// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.dlp_v2.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.dlp_v2.inputs.GooglePrivacyDlpV2HybridInspectStatisticsResponse;
import com.pulumi.googlenative.dlp_v2.inputs.GooglePrivacyDlpV2InfoTypeStatsResponse;
import java.lang.String;
import java.util.List;
import java.util.Objects;


/**
 * All result fields mentioned below are updated while the job is processing.
 * 
 */
public final class GooglePrivacyDlpV2ResultResponse extends com.pulumi.resources.InvokeArgs {

    public static final GooglePrivacyDlpV2ResultResponse Empty = new GooglePrivacyDlpV2ResultResponse();

    /**
     * Statistics related to the processing of hybrid inspect.
     * 
     */
    @Import(name="hybridStats", required=true)
    private GooglePrivacyDlpV2HybridInspectStatisticsResponse hybridStats;

    public GooglePrivacyDlpV2HybridInspectStatisticsResponse hybridStats() {
        return this.hybridStats;
    }

    /**
     * Statistics of how many instances of each info type were found during inspect job.
     * 
     */
    @Import(name="infoTypeStats", required=true)
    private List<GooglePrivacyDlpV2InfoTypeStatsResponse> infoTypeStats;

    public List<GooglePrivacyDlpV2InfoTypeStatsResponse> infoTypeStats() {
        return this.infoTypeStats;
    }

    /**
     * Total size in bytes that were processed.
     * 
     */
    @Import(name="processedBytes", required=true)
    private String processedBytes;

    public String processedBytes() {
        return this.processedBytes;
    }

    /**
     * Estimate of the number of bytes to process.
     * 
     */
    @Import(name="totalEstimatedBytes", required=true)
    private String totalEstimatedBytes;

    public String totalEstimatedBytes() {
        return this.totalEstimatedBytes;
    }

    private GooglePrivacyDlpV2ResultResponse() {}

    private GooglePrivacyDlpV2ResultResponse(GooglePrivacyDlpV2ResultResponse $) {
        this.hybridStats = $.hybridStats;
        this.infoTypeStats = $.infoTypeStats;
        this.processedBytes = $.processedBytes;
        this.totalEstimatedBytes = $.totalEstimatedBytes;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GooglePrivacyDlpV2ResultResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GooglePrivacyDlpV2ResultResponse $;

        public Builder() {
            $ = new GooglePrivacyDlpV2ResultResponse();
        }

        public Builder(GooglePrivacyDlpV2ResultResponse defaults) {
            $ = new GooglePrivacyDlpV2ResultResponse(Objects.requireNonNull(defaults));
        }

        public Builder hybridStats(GooglePrivacyDlpV2HybridInspectStatisticsResponse hybridStats) {
            $.hybridStats = hybridStats;
            return this;
        }

        public Builder infoTypeStats(List<GooglePrivacyDlpV2InfoTypeStatsResponse> infoTypeStats) {
            $.infoTypeStats = infoTypeStats;
            return this;
        }

        public Builder infoTypeStats(GooglePrivacyDlpV2InfoTypeStatsResponse... infoTypeStats) {
            return infoTypeStats(List.of(infoTypeStats));
        }

        public Builder processedBytes(String processedBytes) {
            $.processedBytes = processedBytes;
            return this;
        }

        public Builder totalEstimatedBytes(String totalEstimatedBytes) {
            $.totalEstimatedBytes = totalEstimatedBytes;
            return this;
        }

        public GooglePrivacyDlpV2ResultResponse build() {
            $.hybridStats = Objects.requireNonNull($.hybridStats, "expected parameter 'hybridStats' to be non-null");
            $.infoTypeStats = Objects.requireNonNull($.infoTypeStats, "expected parameter 'infoTypeStats' to be non-null");
            $.processedBytes = Objects.requireNonNull($.processedBytes, "expected parameter 'processedBytes' to be non-null");
            $.totalEstimatedBytes = Objects.requireNonNull($.totalEstimatedBytes, "expected parameter 'totalEstimatedBytes' to be non-null");
            return $;
        }
    }

}
