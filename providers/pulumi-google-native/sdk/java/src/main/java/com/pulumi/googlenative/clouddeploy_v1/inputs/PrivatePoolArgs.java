// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.clouddeploy_v1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Execution using a private Cloud Build pool.
 * 
 */
public final class PrivatePoolArgs extends com.pulumi.resources.ResourceArgs {

    public static final PrivatePoolArgs Empty = new PrivatePoolArgs();

    /**
     * Optional. Cloud Storage location where execution outputs should be stored. This can either be a bucket (&#34;gs://my-bucket&#34;) or a path within a bucket (&#34;gs://my-bucket/my-dir&#34;). If unspecified, a default bucket located in the same region will be used.
     * 
     */
    @Import(name="artifactStorage")
      private final @Nullable Output<String> artifactStorage;

    public Output<String> artifactStorage() {
        return this.artifactStorage == null ? Codegen.empty() : this.artifactStorage;
    }

    /**
     * Optional. Google service account to use for execution. If unspecified, the project execution service account (-compute@developer.gserviceaccount.com) will be used.
     * 
     */
    @Import(name="serviceAccount")
      private final @Nullable Output<String> serviceAccount;

    public Output<String> serviceAccount() {
        return this.serviceAccount == null ? Codegen.empty() : this.serviceAccount;
    }

    /**
     * Resource name of the Cloud Build worker pool to use. The format is `projects/{project}/locations/{location}/workerPools/{pool}`.
     * 
     */
    @Import(name="workerPool", required=true)
      private final Output<String> workerPool;

    public Output<String> workerPool() {
        return this.workerPool;
    }

    public PrivatePoolArgs(
        @Nullable Output<String> artifactStorage,
        @Nullable Output<String> serviceAccount,
        Output<String> workerPool) {
        this.artifactStorage = artifactStorage;
        this.serviceAccount = serviceAccount;
        this.workerPool = Objects.requireNonNull(workerPool, "expected parameter 'workerPool' to be non-null");
    }

    private PrivatePoolArgs() {
        this.artifactStorage = Codegen.empty();
        this.serviceAccount = Codegen.empty();
        this.workerPool = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PrivatePoolArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> artifactStorage;
        private @Nullable Output<String> serviceAccount;
        private Output<String> workerPool;

        public Builder() {
    	      // Empty
        }

        public Builder(PrivatePoolArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.artifactStorage = defaults.artifactStorage;
    	      this.serviceAccount = defaults.serviceAccount;
    	      this.workerPool = defaults.workerPool;
        }

        public Builder artifactStorage(@Nullable Output<String> artifactStorage) {
            this.artifactStorage = artifactStorage;
            return this;
        }
        public Builder artifactStorage(@Nullable String artifactStorage) {
            this.artifactStorage = Codegen.ofNullable(artifactStorage);
            return this;
        }
        public Builder serviceAccount(@Nullable Output<String> serviceAccount) {
            this.serviceAccount = serviceAccount;
            return this;
        }
        public Builder serviceAccount(@Nullable String serviceAccount) {
            this.serviceAccount = Codegen.ofNullable(serviceAccount);
            return this;
        }
        public Builder workerPool(Output<String> workerPool) {
            this.workerPool = Objects.requireNonNull(workerPool);
            return this;
        }
        public Builder workerPool(String workerPool) {
            this.workerPool = Output.of(Objects.requireNonNull(workerPool));
            return this;
        }        public PrivatePoolArgs build() {
            return new PrivatePoolArgs(artifactStorage, serviceAccount, workerPool);
        }
    }
}
