// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.cloudsearch_v1.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * Set the scoring configuration. This allows modifying the ranking of results for a source.
 * 
 */
public final class SourceScoringConfigResponse extends com.pulumi.resources.InvokeArgs {

    public static final SourceScoringConfigResponse Empty = new SourceScoringConfigResponse();

    /**
     * Importance of the source.
     * 
     */
    @Import(name="sourceImportance", required=true)
    private String sourceImportance;

    /**
     * @return Importance of the source.
     * 
     */
    public String sourceImportance() {
        return this.sourceImportance;
    }

    private SourceScoringConfigResponse() {}

    private SourceScoringConfigResponse(SourceScoringConfigResponse $) {
        this.sourceImportance = $.sourceImportance;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SourceScoringConfigResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SourceScoringConfigResponse $;

        public Builder() {
            $ = new SourceScoringConfigResponse();
        }

        public Builder(SourceScoringConfigResponse defaults) {
            $ = new SourceScoringConfigResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param sourceImportance Importance of the source.
         * 
         * @return builder
         * 
         */
        public Builder sourceImportance(String sourceImportance) {
            $.sourceImportance = sourceImportance;
            return this;
        }

        public SourceScoringConfigResponse build() {
            $.sourceImportance = Objects.requireNonNull($.sourceImportance, "expected parameter 'sourceImportance' to be non-null");
            return $;
        }
    }

}
