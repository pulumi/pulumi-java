// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.compute.alpha.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.compute.alpha.enums.RouterBgpPeerBfdMode;
import com.pulumi.googlenative.compute.alpha.enums.RouterBgpPeerBfdPacketMode;
import com.pulumi.googlenative.compute.alpha.enums.RouterBgpPeerBfdSessionInitializationMode;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RouterBgpPeerBfdArgs extends com.pulumi.resources.ResourceArgs {

    public static final RouterBgpPeerBfdArgs Empty = new RouterBgpPeerBfdArgs();

    /**
     * The minimum interval, in milliseconds, between BFD control packets received from the peer router. The actual value is negotiated between the two routers and is equal to the greater of this value and the transmit interval of the other router. If set, this value must be between 1000 and 30000. The default is 1000.
     * 
     */
    @Import(name="minReceiveInterval")
    private @Nullable Output<Integer> minReceiveInterval;

    /**
     * @return The minimum interval, in milliseconds, between BFD control packets received from the peer router. The actual value is negotiated between the two routers and is equal to the greater of this value and the transmit interval of the other router. If set, this value must be between 1000 and 30000. The default is 1000.
     * 
     */
    public Optional<Output<Integer>> minReceiveInterval() {
        return Optional.ofNullable(this.minReceiveInterval);
    }

    /**
     * The minimum interval, in milliseconds, between BFD control packets transmitted to the peer router. The actual value is negotiated between the two routers and is equal to the greater of this value and the corresponding receive interval of the other router. If set, this value must be between 1000 and 30000. The default is 1000.
     * 
     */
    @Import(name="minTransmitInterval")
    private @Nullable Output<Integer> minTransmitInterval;

    /**
     * @return The minimum interval, in milliseconds, between BFD control packets transmitted to the peer router. The actual value is negotiated between the two routers and is equal to the greater of this value and the corresponding receive interval of the other router. If set, this value must be between 1000 and 30000. The default is 1000.
     * 
     */
    public Optional<Output<Integer>> minTransmitInterval() {
        return Optional.ofNullable(this.minTransmitInterval);
    }

    /**
     * The BFD session initialization mode for this BGP peer. If set to ACTIVE, the Cloud Router will initiate the BFD session for this BGP peer. If set to PASSIVE, the Cloud Router will wait for the peer router to initiate the BFD session for this BGP peer. If set to DISABLED, BFD is disabled for this BGP peer. The default is PASSIVE.
     * 
     */
    @Import(name="mode")
    private @Nullable Output<RouterBgpPeerBfdMode> mode;

    /**
     * @return The BFD session initialization mode for this BGP peer. If set to ACTIVE, the Cloud Router will initiate the BFD session for this BGP peer. If set to PASSIVE, the Cloud Router will wait for the peer router to initiate the BFD session for this BGP peer. If set to DISABLED, BFD is disabled for this BGP peer. The default is PASSIVE.
     * 
     */
    public Optional<Output<RouterBgpPeerBfdMode>> mode() {
        return Optional.ofNullable(this.mode);
    }

    /**
     * The number of consecutive BFD packets that must be missed before BFD declares that a peer is unavailable. If set, the value must be a value between 5 and 16. The default is 5.
     * 
     */
    @Import(name="multiplier")
    private @Nullable Output<Integer> multiplier;

    /**
     * @return The number of consecutive BFD packets that must be missed before BFD declares that a peer is unavailable. If set, the value must be a value between 5 and 16. The default is 5.
     * 
     */
    public Optional<Output<Integer>> multiplier() {
        return Optional.ofNullable(this.multiplier);
    }

    /**
     * The BFD packet mode for this BGP peer. If set to CONTROL_AND_ECHO, BFD echo mode is enabled for this BGP peer. In this mode, if the peer router also has BFD echo mode enabled, BFD echo packets will be sent to the other router. If the peer router does not have BFD echo mode enabled, only control packets will be sent. If set to CONTROL_ONLY, BFD echo mode is disabled for this BGP peer. If this router and the peer router have a multihop connection, this should be set to CONTROL_ONLY as BFD echo mode is only supported on singlehop connections. The default is CONTROL_AND_ECHO.
     * 
     */
    @Import(name="packetMode")
    private @Nullable Output<RouterBgpPeerBfdPacketMode> packetMode;

    /**
     * @return The BFD packet mode for this BGP peer. If set to CONTROL_AND_ECHO, BFD echo mode is enabled for this BGP peer. In this mode, if the peer router also has BFD echo mode enabled, BFD echo packets will be sent to the other router. If the peer router does not have BFD echo mode enabled, only control packets will be sent. If set to CONTROL_ONLY, BFD echo mode is disabled for this BGP peer. If this router and the peer router have a multihop connection, this should be set to CONTROL_ONLY as BFD echo mode is only supported on singlehop connections. The default is CONTROL_AND_ECHO.
     * 
     */
    public Optional<Output<RouterBgpPeerBfdPacketMode>> packetMode() {
        return Optional.ofNullable(this.packetMode);
    }

    /**
     * The BFD session initialization mode for this BGP peer. If set to ACTIVE, the Cloud Router will initiate the BFD session for this BGP peer. If set to PASSIVE, the Cloud Router will wait for the peer router to initiate the BFD session for this BGP peer. If set to DISABLED, BFD is disabled for this BGP peer. The default is DISABLED.
     * 
     */
    @Import(name="sessionInitializationMode")
    private @Nullable Output<RouterBgpPeerBfdSessionInitializationMode> sessionInitializationMode;

    /**
     * @return The BFD session initialization mode for this BGP peer. If set to ACTIVE, the Cloud Router will initiate the BFD session for this BGP peer. If set to PASSIVE, the Cloud Router will wait for the peer router to initiate the BFD session for this BGP peer. If set to DISABLED, BFD is disabled for this BGP peer. The default is DISABLED.
     * 
     */
    public Optional<Output<RouterBgpPeerBfdSessionInitializationMode>> sessionInitializationMode() {
        return Optional.ofNullable(this.sessionInitializationMode);
    }

    /**
     * The minimum interval, in milliseconds, between BFD control packets transmitted to and received from the peer router when BFD echo mode is enabled on both routers. The actual transmit and receive intervals are negotiated between the two routers and are equal to the greater of this value and the corresponding interval on the other router. If set, this value must be between 1000 and 30000. The default is 5000.
     * 
     */
    @Import(name="slowTimerInterval")
    private @Nullable Output<Integer> slowTimerInterval;

    /**
     * @return The minimum interval, in milliseconds, between BFD control packets transmitted to and received from the peer router when BFD echo mode is enabled on both routers. The actual transmit and receive intervals are negotiated between the two routers and are equal to the greater of this value and the corresponding interval on the other router. If set, this value must be between 1000 and 30000. The default is 5000.
     * 
     */
    public Optional<Output<Integer>> slowTimerInterval() {
        return Optional.ofNullable(this.slowTimerInterval);
    }

    private RouterBgpPeerBfdArgs() {}

    private RouterBgpPeerBfdArgs(RouterBgpPeerBfdArgs $) {
        this.minReceiveInterval = $.minReceiveInterval;
        this.minTransmitInterval = $.minTransmitInterval;
        this.mode = $.mode;
        this.multiplier = $.multiplier;
        this.packetMode = $.packetMode;
        this.sessionInitializationMode = $.sessionInitializationMode;
        this.slowTimerInterval = $.slowTimerInterval;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RouterBgpPeerBfdArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RouterBgpPeerBfdArgs $;

        public Builder() {
            $ = new RouterBgpPeerBfdArgs();
        }

        public Builder(RouterBgpPeerBfdArgs defaults) {
            $ = new RouterBgpPeerBfdArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param minReceiveInterval The minimum interval, in milliseconds, between BFD control packets received from the peer router. The actual value is negotiated between the two routers and is equal to the greater of this value and the transmit interval of the other router. If set, this value must be between 1000 and 30000. The default is 1000.
         * 
         * @return builder
         * 
         */
        public Builder minReceiveInterval(@Nullable Output<Integer> minReceiveInterval) {
            $.minReceiveInterval = minReceiveInterval;
            return this;
        }

        /**
         * @param minReceiveInterval The minimum interval, in milliseconds, between BFD control packets received from the peer router. The actual value is negotiated between the two routers and is equal to the greater of this value and the transmit interval of the other router. If set, this value must be between 1000 and 30000. The default is 1000.
         * 
         * @return builder
         * 
         */
        public Builder minReceiveInterval(Integer minReceiveInterval) {
            return minReceiveInterval(Output.of(minReceiveInterval));
        }

        /**
         * @param minTransmitInterval The minimum interval, in milliseconds, between BFD control packets transmitted to the peer router. The actual value is negotiated between the two routers and is equal to the greater of this value and the corresponding receive interval of the other router. If set, this value must be between 1000 and 30000. The default is 1000.
         * 
         * @return builder
         * 
         */
        public Builder minTransmitInterval(@Nullable Output<Integer> minTransmitInterval) {
            $.minTransmitInterval = minTransmitInterval;
            return this;
        }

        /**
         * @param minTransmitInterval The minimum interval, in milliseconds, between BFD control packets transmitted to the peer router. The actual value is negotiated between the two routers and is equal to the greater of this value and the corresponding receive interval of the other router. If set, this value must be between 1000 and 30000. The default is 1000.
         * 
         * @return builder
         * 
         */
        public Builder minTransmitInterval(Integer minTransmitInterval) {
            return minTransmitInterval(Output.of(minTransmitInterval));
        }

        /**
         * @param mode The BFD session initialization mode for this BGP peer. If set to ACTIVE, the Cloud Router will initiate the BFD session for this BGP peer. If set to PASSIVE, the Cloud Router will wait for the peer router to initiate the BFD session for this BGP peer. If set to DISABLED, BFD is disabled for this BGP peer. The default is PASSIVE.
         * 
         * @return builder
         * 
         */
        public Builder mode(@Nullable Output<RouterBgpPeerBfdMode> mode) {
            $.mode = mode;
            return this;
        }

        /**
         * @param mode The BFD session initialization mode for this BGP peer. If set to ACTIVE, the Cloud Router will initiate the BFD session for this BGP peer. If set to PASSIVE, the Cloud Router will wait for the peer router to initiate the BFD session for this BGP peer. If set to DISABLED, BFD is disabled for this BGP peer. The default is PASSIVE.
         * 
         * @return builder
         * 
         */
        public Builder mode(RouterBgpPeerBfdMode mode) {
            return mode(Output.of(mode));
        }

        /**
         * @param multiplier The number of consecutive BFD packets that must be missed before BFD declares that a peer is unavailable. If set, the value must be a value between 5 and 16. The default is 5.
         * 
         * @return builder
         * 
         */
        public Builder multiplier(@Nullable Output<Integer> multiplier) {
            $.multiplier = multiplier;
            return this;
        }

        /**
         * @param multiplier The number of consecutive BFD packets that must be missed before BFD declares that a peer is unavailable. If set, the value must be a value between 5 and 16. The default is 5.
         * 
         * @return builder
         * 
         */
        public Builder multiplier(Integer multiplier) {
            return multiplier(Output.of(multiplier));
        }

        /**
         * @param packetMode The BFD packet mode for this BGP peer. If set to CONTROL_AND_ECHO, BFD echo mode is enabled for this BGP peer. In this mode, if the peer router also has BFD echo mode enabled, BFD echo packets will be sent to the other router. If the peer router does not have BFD echo mode enabled, only control packets will be sent. If set to CONTROL_ONLY, BFD echo mode is disabled for this BGP peer. If this router and the peer router have a multihop connection, this should be set to CONTROL_ONLY as BFD echo mode is only supported on singlehop connections. The default is CONTROL_AND_ECHO.
         * 
         * @return builder
         * 
         */
        public Builder packetMode(@Nullable Output<RouterBgpPeerBfdPacketMode> packetMode) {
            $.packetMode = packetMode;
            return this;
        }

        /**
         * @param packetMode The BFD packet mode for this BGP peer. If set to CONTROL_AND_ECHO, BFD echo mode is enabled for this BGP peer. In this mode, if the peer router also has BFD echo mode enabled, BFD echo packets will be sent to the other router. If the peer router does not have BFD echo mode enabled, only control packets will be sent. If set to CONTROL_ONLY, BFD echo mode is disabled for this BGP peer. If this router and the peer router have a multihop connection, this should be set to CONTROL_ONLY as BFD echo mode is only supported on singlehop connections. The default is CONTROL_AND_ECHO.
         * 
         * @return builder
         * 
         */
        public Builder packetMode(RouterBgpPeerBfdPacketMode packetMode) {
            return packetMode(Output.of(packetMode));
        }

        /**
         * @param sessionInitializationMode The BFD session initialization mode for this BGP peer. If set to ACTIVE, the Cloud Router will initiate the BFD session for this BGP peer. If set to PASSIVE, the Cloud Router will wait for the peer router to initiate the BFD session for this BGP peer. If set to DISABLED, BFD is disabled for this BGP peer. The default is DISABLED.
         * 
         * @return builder
         * 
         */
        public Builder sessionInitializationMode(@Nullable Output<RouterBgpPeerBfdSessionInitializationMode> sessionInitializationMode) {
            $.sessionInitializationMode = sessionInitializationMode;
            return this;
        }

        /**
         * @param sessionInitializationMode The BFD session initialization mode for this BGP peer. If set to ACTIVE, the Cloud Router will initiate the BFD session for this BGP peer. If set to PASSIVE, the Cloud Router will wait for the peer router to initiate the BFD session for this BGP peer. If set to DISABLED, BFD is disabled for this BGP peer. The default is DISABLED.
         * 
         * @return builder
         * 
         */
        public Builder sessionInitializationMode(RouterBgpPeerBfdSessionInitializationMode sessionInitializationMode) {
            return sessionInitializationMode(Output.of(sessionInitializationMode));
        }

        /**
         * @param slowTimerInterval The minimum interval, in milliseconds, between BFD control packets transmitted to and received from the peer router when BFD echo mode is enabled on both routers. The actual transmit and receive intervals are negotiated between the two routers and are equal to the greater of this value and the corresponding interval on the other router. If set, this value must be between 1000 and 30000. The default is 5000.
         * 
         * @return builder
         * 
         */
        public Builder slowTimerInterval(@Nullable Output<Integer> slowTimerInterval) {
            $.slowTimerInterval = slowTimerInterval;
            return this;
        }

        /**
         * @param slowTimerInterval The minimum interval, in milliseconds, between BFD control packets transmitted to and received from the peer router when BFD echo mode is enabled on both routers. The actual transmit and receive intervals are negotiated between the two routers and are equal to the greater of this value and the corresponding interval on the other router. If set, this value must be between 1000 and 30000. The default is 5000.
         * 
         * @return builder
         * 
         */
        public Builder slowTimerInterval(Integer slowTimerInterval) {
            return slowTimerInterval(Output.of(slowTimerInterval));
        }

        public RouterBgpPeerBfdArgs build() {
            return $;
        }
    }

}
