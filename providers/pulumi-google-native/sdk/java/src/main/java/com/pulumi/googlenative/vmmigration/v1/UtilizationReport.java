// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.vmmigration.v1;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.googlenative.Utilities;
import com.pulumi.googlenative.vmmigration.v1.UtilizationReportArgs;
import com.pulumi.googlenative.vmmigration.v1.outputs.StatusResponse;
import com.pulumi.googlenative.vmmigration.v1.outputs.VmUtilizationInfoResponse;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Creates a new UtilizationReport.
 * Auto-naming is currently not supported for this resource.
 * 
 */
@ResourceType(type="google-native:vmmigration/v1:UtilizationReport")
public class UtilizationReport extends com.pulumi.resources.CustomResource {
    /**
     * The time the report was created (this refers to the time of the request, not the time the report creation completed).
     * 
     */
    @Export(name="createTime", type=String.class, parameters={})
    private Output<String> createTime;

    /**
     * @return The time the report was created (this refers to the time of the request, not the time the report creation completed).
     * 
     */
    public Output<String> createTime() {
        return this.createTime;
    }
    /**
     * The report display name, as assigned by the user.
     * 
     */
    @Export(name="displayName", type=String.class, parameters={})
    private Output<String> displayName;

    /**
     * @return The report display name, as assigned by the user.
     * 
     */
    public Output<String> displayName() {
        return this.displayName;
    }
    /**
     * Provides details on the state of the report in case of an error.
     * 
     */
    @Export(name="error", type=StatusResponse.class, parameters={})
    private Output<StatusResponse> error;

    /**
     * @return Provides details on the state of the report in case of an error.
     * 
     */
    public Output<StatusResponse> error() {
        return this.error;
    }
    /**
     * The point in time when the time frame ends. Notice that the time frame is counted backwards. For instance if the &#34;frame_end_time&#34; value is 2021/01/20 and the time frame is WEEK then the report covers the week between 2021/01/20 and 2021/01/14.
     * 
     */
    @Export(name="frameEndTime", type=String.class, parameters={})
    private Output<String> frameEndTime;

    /**
     * @return The point in time when the time frame ends. Notice that the time frame is counted backwards. For instance if the &#34;frame_end_time&#34; value is 2021/01/20 and the time frame is WEEK then the report covers the week between 2021/01/20 and 2021/01/14.
     * 
     */
    public Output<String> frameEndTime() {
        return this.frameEndTime;
    }
    @Export(name="location", type=String.class, parameters={})
    private Output<String> location;

    public Output<String> location() {
        return this.location;
    }
    /**
     * The report unique name.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The report unique name.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    @Export(name="project", type=String.class, parameters={})
    private Output<String> project;

    public Output<String> project() {
        return this.project;
    }
    /**
     * A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and t he request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
     * 
     */
    @Export(name="requestId", type=String.class, parameters={})
    private Output</* @Nullable */ String> requestId;

    /**
     * @return A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and t he request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
     * 
     */
    public Output<Optional<String>> requestId() {
        return Codegen.optional(this.requestId);
    }
    @Export(name="sourceId", type=String.class, parameters={})
    private Output<String> sourceId;

    public Output<String> sourceId() {
        return this.sourceId;
    }
    /**
     * Current state of the report.
     * 
     */
    @Export(name="state", type=String.class, parameters={})
    private Output<String> state;

    /**
     * @return Current state of the report.
     * 
     */
    public Output<String> state() {
        return this.state;
    }
    /**
     * The time the state was last set.
     * 
     */
    @Export(name="stateTime", type=String.class, parameters={})
    private Output<String> stateTime;

    /**
     * @return The time the state was last set.
     * 
     */
    public Output<String> stateTime() {
        return this.stateTime;
    }
    /**
     * Time frame of the report.
     * 
     */
    @Export(name="timeFrame", type=String.class, parameters={})
    private Output<String> timeFrame;

    /**
     * @return Time frame of the report.
     * 
     */
    public Output<String> timeFrame() {
        return this.timeFrame;
    }
    /**
     * Required. The ID to use for the report, which will become the final component of the reports&#39;s resource name. This value maximum length is 63 characters, and valid characters are /a-z-/. It must start with an english letter and must not end with a hyphen.
     * 
     */
    @Export(name="utilizationReportId", type=String.class, parameters={})
    private Output<String> utilizationReportId;

    /**
     * @return Required. The ID to use for the report, which will become the final component of the reports&#39;s resource name. This value maximum length is 63 characters, and valid characters are /a-z-/. It must start with an english letter and must not end with a hyphen.
     * 
     */
    public Output<String> utilizationReportId() {
        return this.utilizationReportId;
    }
    /**
     * Total number of VMs included in the report.
     * 
     */
    @Export(name="vmCount", type=Integer.class, parameters={})
    private Output<Integer> vmCount;

    /**
     * @return Total number of VMs included in the report.
     * 
     */
    public Output<Integer> vmCount() {
        return this.vmCount;
    }
    /**
     * List of utilization information per VM. When sent as part of the request, the &#34;vm_id&#34; field is used in order to specify which VMs to include in the report. In that case all other fields are ignored.
     * 
     */
    @Export(name="vms", type=List.class, parameters={VmUtilizationInfoResponse.class})
    private Output<List<VmUtilizationInfoResponse>> vms;

    /**
     * @return List of utilization information per VM. When sent as part of the request, the &#34;vm_id&#34; field is used in order to specify which VMs to include in the report. In that case all other fields are ignored.
     * 
     */
    public Output<List<VmUtilizationInfoResponse>> vms() {
        return this.vms;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public UtilizationReport(String name) {
        this(name, UtilizationReportArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public UtilizationReport(String name, UtilizationReportArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public UtilizationReport(String name, UtilizationReportArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("google-native:vmmigration/v1:UtilizationReport", name, args == null ? UtilizationReportArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private UtilizationReport(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("google-native:vmmigration/v1:UtilizationReport", name, null, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static UtilizationReport get(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new UtilizationReport(name, id, options);
    }
}
