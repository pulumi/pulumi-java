// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.bigquery_v2.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;


/**
 * [Output-only, Beta] Model options used for the first training run. These options are immutable for subsequent training runs. Default values are used for any options not specified in the input query.
 * 
 */
public final class ModelDefinitionModelOptionsResponse extends com.pulumi.resources.InvokeArgs {

    public static final ModelDefinitionModelOptionsResponse Empty = new ModelDefinitionModelOptionsResponse();

    @Import(name="labels", required=true)
    private List<String> labels;

    public List<String> labels() {
        return this.labels;
    }

    @Import(name="lossType", required=true)
    private String lossType;

    public String lossType() {
        return this.lossType;
    }

    @Import(name="modelType", required=true)
    private String modelType;

    public String modelType() {
        return this.modelType;
    }

    private ModelDefinitionModelOptionsResponse() {}

    private ModelDefinitionModelOptionsResponse(ModelDefinitionModelOptionsResponse $) {
        this.labels = $.labels;
        this.lossType = $.lossType;
        this.modelType = $.modelType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ModelDefinitionModelOptionsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ModelDefinitionModelOptionsResponse $;

        public Builder() {
            $ = new ModelDefinitionModelOptionsResponse();
        }

        public Builder(ModelDefinitionModelOptionsResponse defaults) {
            $ = new ModelDefinitionModelOptionsResponse(Objects.requireNonNull(defaults));
        }

        public Builder labels(List<String> labels) {
            $.labels = labels;
            return this;
        }

        public Builder labels(String... labels) {
            return labels(List.of(labels));
        }

        public Builder lossType(String lossType) {
            $.lossType = lossType;
            return this;
        }

        public Builder modelType(String modelType) {
            $.modelType = modelType;
            return this;
        }

        public ModelDefinitionModelOptionsResponse build() {
            $.labels = Objects.requireNonNull($.labels, "expected parameter 'labels' to be non-null");
            $.lossType = Objects.requireNonNull($.lossType, "expected parameter 'lossType' to be non-null");
            $.modelType = Objects.requireNonNull($.modelType, "expected parameter 'modelType' to be non-null");
            return $;
        }
    }

}
