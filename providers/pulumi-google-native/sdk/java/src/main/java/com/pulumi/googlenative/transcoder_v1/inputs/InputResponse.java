// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.transcoder_v1.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.transcoder_v1.inputs.PreprocessingConfigResponse;
import java.lang.String;
import java.util.Objects;


/**
 * Input asset.
 * 
 */
public final class InputResponse extends com.pulumi.resources.InvokeArgs {

    public static final InputResponse Empty = new InputResponse();

    /**
     * A unique key for this input. Must be specified when using advanced mapping and edit lists.
     * 
     */
    @Import(name="key", required=true)
    private String key;

    public String key() {
        return this.key;
    }

    /**
     * Preprocessing configurations.
     * 
     */
    @Import(name="preprocessingConfig", required=true)
    private PreprocessingConfigResponse preprocessingConfig;

    public PreprocessingConfigResponse preprocessingConfig() {
        return this.preprocessingConfig;
    }

    /**
     * URI of the media. Input files must be at least 5 seconds in duration and stored in Cloud Storage (for example, `gs://bucket/inputs/file.mp4`). If empty, the value will be populated from `Job.input_uri`.
     * 
     */
    @Import(name="uri", required=true)
    private String uri;

    public String uri() {
        return this.uri;
    }

    private InputResponse() {}

    private InputResponse(InputResponse $) {
        this.key = $.key;
        this.preprocessingConfig = $.preprocessingConfig;
        this.uri = $.uri;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InputResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InputResponse $;

        public Builder() {
            $ = new InputResponse();
        }

        public Builder(InputResponse defaults) {
            $ = new InputResponse(Objects.requireNonNull(defaults));
        }

        public Builder key(String key) {
            $.key = key;
            return this;
        }

        public Builder preprocessingConfig(PreprocessingConfigResponse preprocessingConfig) {
            $.preprocessingConfig = preprocessingConfig;
            return this;
        }

        public Builder uri(String uri) {
            $.uri = uri;
            return this;
        }

        public InputResponse build() {
            $.key = Objects.requireNonNull($.key, "expected parameter 'key' to be non-null");
            $.preprocessingConfig = Objects.requireNonNull($.preprocessingConfig, "expected parameter 'preprocessingConfig' to be non-null");
            $.uri = Objects.requireNonNull($.uri, "expected parameter 'uri' to be non-null");
            return $;
        }
    }

}
