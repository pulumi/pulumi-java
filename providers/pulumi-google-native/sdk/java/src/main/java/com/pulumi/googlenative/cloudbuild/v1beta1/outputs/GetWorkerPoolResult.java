// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.cloudbuild.v1beta1.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.googlenative.cloudbuild.v1beta1.outputs.NetworkConfigResponse;
import com.pulumi.googlenative.cloudbuild.v1beta1.outputs.WorkerConfigResponse;
import java.lang.String;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetWorkerPoolResult {
    /**
     * @return User specified annotations. See https://google.aip.dev/128#annotations for more details such as format and size limitations.
     * 
     */
    private final Map<String,String> annotations;
    /**
     * @return Time at which the request to create the `WorkerPool` was received.
     * 
     */
    private final String createTime;
    /**
     * @return Time at which the request to delete the `WorkerPool` was received.
     * 
     */
    private final String deleteTime;
    /**
     * @return A user-specified, human-readable name for the `WorkerPool`. If provided, this value must be 1-63 characters.
     * 
     */
    private final String displayName;
    /**
     * @return Checksum computed by the server. May be sent on update and delete requests to ensure that the client has an up-to-date value before proceeding.
     * 
     */
    private final String etag;
    /**
     * @return The resource name of the `WorkerPool`, with format `projects/{project}/locations/{location}/workerPools/{worker_pool}`. The value of `{worker_pool}` is provided by `worker_pool_id` in `CreateWorkerPool` request and the value of `{location}` is determined by the endpoint accessed.
     * 
     */
    private final String name;
    /**
     * @return Network configuration for the `WorkerPool`.
     * 
     */
    private final NetworkConfigResponse networkConfig;
    /**
     * @return `WorkerPool` state.
     * 
     */
    private final String state;
    /**
     * @return A unique identifier for the `WorkerPool`.
     * 
     */
    private final String uid;
    /**
     * @return Time at which the request to update the `WorkerPool` was received.
     * 
     */
    private final String updateTime;
    /**
     * @return Worker configuration for the `WorkerPool`.
     * 
     */
    private final WorkerConfigResponse workerConfig;

    @CustomType.Constructor
    private GetWorkerPoolResult(
        @CustomType.Parameter("annotations") Map<String,String> annotations,
        @CustomType.Parameter("createTime") String createTime,
        @CustomType.Parameter("deleteTime") String deleteTime,
        @CustomType.Parameter("displayName") String displayName,
        @CustomType.Parameter("etag") String etag,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("networkConfig") NetworkConfigResponse networkConfig,
        @CustomType.Parameter("state") String state,
        @CustomType.Parameter("uid") String uid,
        @CustomType.Parameter("updateTime") String updateTime,
        @CustomType.Parameter("workerConfig") WorkerConfigResponse workerConfig) {
        this.annotations = annotations;
        this.createTime = createTime;
        this.deleteTime = deleteTime;
        this.displayName = displayName;
        this.etag = etag;
        this.name = name;
        this.networkConfig = networkConfig;
        this.state = state;
        this.uid = uid;
        this.updateTime = updateTime;
        this.workerConfig = workerConfig;
    }

    /**
     * @return User specified annotations. See https://google.aip.dev/128#annotations for more details such as format and size limitations.
     * 
     */
    public Map<String,String> annotations() {
        return this.annotations;
    }
    /**
     * @return Time at which the request to create the `WorkerPool` was received.
     * 
     */
    public String createTime() {
        return this.createTime;
    }
    /**
     * @return Time at which the request to delete the `WorkerPool` was received.
     * 
     */
    public String deleteTime() {
        return this.deleteTime;
    }
    /**
     * @return A user-specified, human-readable name for the `WorkerPool`. If provided, this value must be 1-63 characters.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return Checksum computed by the server. May be sent on update and delete requests to ensure that the client has an up-to-date value before proceeding.
     * 
     */
    public String etag() {
        return this.etag;
    }
    /**
     * @return The resource name of the `WorkerPool`, with format `projects/{project}/locations/{location}/workerPools/{worker_pool}`. The value of `{worker_pool}` is provided by `worker_pool_id` in `CreateWorkerPool` request and the value of `{location}` is determined by the endpoint accessed.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Network configuration for the `WorkerPool`.
     * 
     */
    public NetworkConfigResponse networkConfig() {
        return this.networkConfig;
    }
    /**
     * @return `WorkerPool` state.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return A unique identifier for the `WorkerPool`.
     * 
     */
    public String uid() {
        return this.uid;
    }
    /**
     * @return Time at which the request to update the `WorkerPool` was received.
     * 
     */
    public String updateTime() {
        return this.updateTime;
    }
    /**
     * @return Worker configuration for the `WorkerPool`.
     * 
     */
    public WorkerConfigResponse workerConfig() {
        return this.workerConfig;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetWorkerPoolResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Map<String,String> annotations;
        private String createTime;
        private String deleteTime;
        private String displayName;
        private String etag;
        private String name;
        private NetworkConfigResponse networkConfig;
        private String state;
        private String uid;
        private String updateTime;
        private WorkerConfigResponse workerConfig;

        public Builder() {
    	      // Empty
        }

        public Builder(GetWorkerPoolResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.annotations = defaults.annotations;
    	      this.createTime = defaults.createTime;
    	      this.deleteTime = defaults.deleteTime;
    	      this.displayName = defaults.displayName;
    	      this.etag = defaults.etag;
    	      this.name = defaults.name;
    	      this.networkConfig = defaults.networkConfig;
    	      this.state = defaults.state;
    	      this.uid = defaults.uid;
    	      this.updateTime = defaults.updateTime;
    	      this.workerConfig = defaults.workerConfig;
        }

        public Builder annotations(Map<String,String> annotations) {
            this.annotations = Objects.requireNonNull(annotations);
            return this;
        }
        public Builder createTime(String createTime) {
            this.createTime = Objects.requireNonNull(createTime);
            return this;
        }
        public Builder deleteTime(String deleteTime) {
            this.deleteTime = Objects.requireNonNull(deleteTime);
            return this;
        }
        public Builder displayName(String displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }
        public Builder etag(String etag) {
            this.etag = Objects.requireNonNull(etag);
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder networkConfig(NetworkConfigResponse networkConfig) {
            this.networkConfig = Objects.requireNonNull(networkConfig);
            return this;
        }
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        public Builder uid(String uid) {
            this.uid = Objects.requireNonNull(uid);
            return this;
        }
        public Builder updateTime(String updateTime) {
            this.updateTime = Objects.requireNonNull(updateTime);
            return this;
        }
        public Builder workerConfig(WorkerConfigResponse workerConfig) {
            this.workerConfig = Objects.requireNonNull(workerConfig);
            return this;
        }        public GetWorkerPoolResult build() {
            return new GetWorkerPoolResult(annotations, createTime, deleteTime, displayName, etag, name, networkConfig, state, uid, updateTime, workerConfig);
        }
    }
}
