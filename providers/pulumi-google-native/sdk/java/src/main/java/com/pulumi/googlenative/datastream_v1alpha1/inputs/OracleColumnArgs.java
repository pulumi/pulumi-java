// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.datastream_v1alpha1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Oracle Column.
 * 
 */
public final class OracleColumnArgs extends com.pulumi.resources.ResourceArgs {

    public static final OracleColumnArgs Empty = new OracleColumnArgs();

    /**
     * Column name.
     * 
     */
    @Import(name="columnName")
      private final @Nullable Output<String> columnName;

    public Output<String> columnName() {
        return this.columnName == null ? Codegen.empty() : this.columnName;
    }

    /**
     * The Oracle data type.
     * 
     */
    @Import(name="dataType")
      private final @Nullable Output<String> dataType;

    public Output<String> dataType() {
        return this.dataType == null ? Codegen.empty() : this.dataType;
    }

    /**
     * Column encoding.
     * 
     */
    @Import(name="encoding")
      private final @Nullable Output<String> encoding;

    public Output<String> encoding() {
        return this.encoding == null ? Codegen.empty() : this.encoding;
    }

    /**
     * Column length.
     * 
     */
    @Import(name="length")
      private final @Nullable Output<Integer> length;

    public Output<Integer> length() {
        return this.length == null ? Codegen.empty() : this.length;
    }

    /**
     * Whether or not the column can accept a null value.
     * 
     */
    @Import(name="nullable")
      private final @Nullable Output<Boolean> nullable;

    public Output<Boolean> nullable() {
        return this.nullable == null ? Codegen.empty() : this.nullable;
    }

    /**
     * The ordinal position of the column in the table.
     * 
     */
    @Import(name="ordinalPosition")
      private final @Nullable Output<Integer> ordinalPosition;

    public Output<Integer> ordinalPosition() {
        return this.ordinalPosition == null ? Codegen.empty() : this.ordinalPosition;
    }

    /**
     * Column precision.
     * 
     */
    @Import(name="precision")
      private final @Nullable Output<Integer> precision;

    public Output<Integer> precision() {
        return this.precision == null ? Codegen.empty() : this.precision;
    }

    /**
     * Whether or not the column represents a primary key.
     * 
     */
    @Import(name="primaryKey")
      private final @Nullable Output<Boolean> primaryKey;

    public Output<Boolean> primaryKey() {
        return this.primaryKey == null ? Codegen.empty() : this.primaryKey;
    }

    /**
     * Column scale.
     * 
     */
    @Import(name="scale")
      private final @Nullable Output<Integer> scale;

    public Output<Integer> scale() {
        return this.scale == null ? Codegen.empty() : this.scale;
    }

    public OracleColumnArgs(
        @Nullable Output<String> columnName,
        @Nullable Output<String> dataType,
        @Nullable Output<String> encoding,
        @Nullable Output<Integer> length,
        @Nullable Output<Boolean> nullable,
        @Nullable Output<Integer> ordinalPosition,
        @Nullable Output<Integer> precision,
        @Nullable Output<Boolean> primaryKey,
        @Nullable Output<Integer> scale) {
        this.columnName = columnName;
        this.dataType = dataType;
        this.encoding = encoding;
        this.length = length;
        this.nullable = nullable;
        this.ordinalPosition = ordinalPosition;
        this.precision = precision;
        this.primaryKey = primaryKey;
        this.scale = scale;
    }

    private OracleColumnArgs() {
        this.columnName = Codegen.empty();
        this.dataType = Codegen.empty();
        this.encoding = Codegen.empty();
        this.length = Codegen.empty();
        this.nullable = Codegen.empty();
        this.ordinalPosition = Codegen.empty();
        this.precision = Codegen.empty();
        this.primaryKey = Codegen.empty();
        this.scale = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(OracleColumnArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> columnName;
        private @Nullable Output<String> dataType;
        private @Nullable Output<String> encoding;
        private @Nullable Output<Integer> length;
        private @Nullable Output<Boolean> nullable;
        private @Nullable Output<Integer> ordinalPosition;
        private @Nullable Output<Integer> precision;
        private @Nullable Output<Boolean> primaryKey;
        private @Nullable Output<Integer> scale;

        public Builder() {
    	      // Empty
        }

        public Builder(OracleColumnArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.columnName = defaults.columnName;
    	      this.dataType = defaults.dataType;
    	      this.encoding = defaults.encoding;
    	      this.length = defaults.length;
    	      this.nullable = defaults.nullable;
    	      this.ordinalPosition = defaults.ordinalPosition;
    	      this.precision = defaults.precision;
    	      this.primaryKey = defaults.primaryKey;
    	      this.scale = defaults.scale;
        }

        public Builder columnName(@Nullable Output<String> columnName) {
            this.columnName = columnName;
            return this;
        }
        public Builder columnName(@Nullable String columnName) {
            this.columnName = Codegen.ofNullable(columnName);
            return this;
        }
        public Builder dataType(@Nullable Output<String> dataType) {
            this.dataType = dataType;
            return this;
        }
        public Builder dataType(@Nullable String dataType) {
            this.dataType = Codegen.ofNullable(dataType);
            return this;
        }
        public Builder encoding(@Nullable Output<String> encoding) {
            this.encoding = encoding;
            return this;
        }
        public Builder encoding(@Nullable String encoding) {
            this.encoding = Codegen.ofNullable(encoding);
            return this;
        }
        public Builder length(@Nullable Output<Integer> length) {
            this.length = length;
            return this;
        }
        public Builder length(@Nullable Integer length) {
            this.length = Codegen.ofNullable(length);
            return this;
        }
        public Builder nullable(@Nullable Output<Boolean> nullable) {
            this.nullable = nullable;
            return this;
        }
        public Builder nullable(@Nullable Boolean nullable) {
            this.nullable = Codegen.ofNullable(nullable);
            return this;
        }
        public Builder ordinalPosition(@Nullable Output<Integer> ordinalPosition) {
            this.ordinalPosition = ordinalPosition;
            return this;
        }
        public Builder ordinalPosition(@Nullable Integer ordinalPosition) {
            this.ordinalPosition = Codegen.ofNullable(ordinalPosition);
            return this;
        }
        public Builder precision(@Nullable Output<Integer> precision) {
            this.precision = precision;
            return this;
        }
        public Builder precision(@Nullable Integer precision) {
            this.precision = Codegen.ofNullable(precision);
            return this;
        }
        public Builder primaryKey(@Nullable Output<Boolean> primaryKey) {
            this.primaryKey = primaryKey;
            return this;
        }
        public Builder primaryKey(@Nullable Boolean primaryKey) {
            this.primaryKey = Codegen.ofNullable(primaryKey);
            return this;
        }
        public Builder scale(@Nullable Output<Integer> scale) {
            this.scale = scale;
            return this;
        }
        public Builder scale(@Nullable Integer scale) {
            this.scale = Codegen.ofNullable(scale);
            return this;
        }        public OracleColumnArgs build() {
            return new OracleColumnArgs(columnName, dataType, encoding, length, nullable, ordinalPosition, precision, primaryKey, scale);
        }
    }
}
