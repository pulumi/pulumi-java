// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.composer.v1beta1.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class PrivateClusterConfigResponse {
    /**
     * @return Optional. If `true`, access to the public endpoint of the GKE cluster is denied.
     * 
     */
    private final Boolean enablePrivateEndpoint;
    /**
     * @return Optional. The CIDR block from which IPv4 range for GKE master will be reserved. If left blank, the default value of &#39;172.16.0.0/23&#39; is used.
     * 
     */
    private final String masterIpv4CidrBlock;
    /**
     * @return The IP range in CIDR notation to use for the hosted master network. This range is used for assigning internal IP addresses to the cluster master or set of masters and to the internal load balancer virtual IP. This range must not overlap with any other ranges in use within the cluster&#39;s network.
     * 
     */
    private final String masterIpv4ReservedRange;

    @CustomType.Constructor
    private PrivateClusterConfigResponse(
        @CustomType.Parameter("enablePrivateEndpoint") Boolean enablePrivateEndpoint,
        @CustomType.Parameter("masterIpv4CidrBlock") String masterIpv4CidrBlock,
        @CustomType.Parameter("masterIpv4ReservedRange") String masterIpv4ReservedRange) {
        this.enablePrivateEndpoint = enablePrivateEndpoint;
        this.masterIpv4CidrBlock = masterIpv4CidrBlock;
        this.masterIpv4ReservedRange = masterIpv4ReservedRange;
    }

    /**
     * @return Optional. If `true`, access to the public endpoint of the GKE cluster is denied.
     * 
     */
    public Boolean enablePrivateEndpoint() {
        return this.enablePrivateEndpoint;
    }
    /**
     * @return Optional. The CIDR block from which IPv4 range for GKE master will be reserved. If left blank, the default value of &#39;172.16.0.0/23&#39; is used.
     * 
     */
    public String masterIpv4CidrBlock() {
        return this.masterIpv4CidrBlock;
    }
    /**
     * @return The IP range in CIDR notation to use for the hosted master network. This range is used for assigning internal IP addresses to the cluster master or set of masters and to the internal load balancer virtual IP. This range must not overlap with any other ranges in use within the cluster&#39;s network.
     * 
     */
    public String masterIpv4ReservedRange() {
        return this.masterIpv4ReservedRange;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PrivateClusterConfigResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Boolean enablePrivateEndpoint;
        private String masterIpv4CidrBlock;
        private String masterIpv4ReservedRange;

        public Builder() {
    	      // Empty
        }

        public Builder(PrivateClusterConfigResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.enablePrivateEndpoint = defaults.enablePrivateEndpoint;
    	      this.masterIpv4CidrBlock = defaults.masterIpv4CidrBlock;
    	      this.masterIpv4ReservedRange = defaults.masterIpv4ReservedRange;
        }

        public Builder enablePrivateEndpoint(Boolean enablePrivateEndpoint) {
            this.enablePrivateEndpoint = Objects.requireNonNull(enablePrivateEndpoint);
            return this;
        }
        public Builder masterIpv4CidrBlock(String masterIpv4CidrBlock) {
            this.masterIpv4CidrBlock = Objects.requireNonNull(masterIpv4CidrBlock);
            return this;
        }
        public Builder masterIpv4ReservedRange(String masterIpv4ReservedRange) {
            this.masterIpv4ReservedRange = Objects.requireNonNull(masterIpv4ReservedRange);
            return this;
        }        public PrivateClusterConfigResponse build() {
            return new PrivateClusterConfigResponse(enablePrivateEndpoint, masterIpv4CidrBlock, masterIpv4ReservedRange);
        }
    }
}
