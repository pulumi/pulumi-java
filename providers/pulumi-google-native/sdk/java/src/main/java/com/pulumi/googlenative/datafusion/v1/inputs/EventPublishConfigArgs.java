// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.datafusion.v1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;


/**
 * Confirguration of PubSubEventWriter.
 * 
 */
public final class EventPublishConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final EventPublishConfigArgs Empty = new EventPublishConfigArgs();

    /**
     * Option to enable Event Publishing.
     * 
     */
    @Import(name="enabled", required=true)
    private Output<Boolean> enabled;

    /**
     * @return Option to enable Event Publishing.
     * 
     */
    public Output<Boolean> enabled() {
        return this.enabled;
    }

    /**
     * The resource name of the Pub/Sub topic. Format: projects/{project_id}/topics/{topic_id}
     * 
     */
    @Import(name="topic", required=true)
    private Output<String> topic;

    /**
     * @return The resource name of the Pub/Sub topic. Format: projects/{project_id}/topics/{topic_id}
     * 
     */
    public Output<String> topic() {
        return this.topic;
    }

    private EventPublishConfigArgs() {}

    private EventPublishConfigArgs(EventPublishConfigArgs $) {
        this.enabled = $.enabled;
        this.topic = $.topic;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EventPublishConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EventPublishConfigArgs $;

        public Builder() {
            $ = new EventPublishConfigArgs();
        }

        public Builder(EventPublishConfigArgs defaults) {
            $ = new EventPublishConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param enabled Option to enable Event Publishing.
         * 
         * @return builder
         * 
         */
        public Builder enabled(Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param enabled Option to enable Event Publishing.
         * 
         * @return builder
         * 
         */
        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        /**
         * @param topic The resource name of the Pub/Sub topic. Format: projects/{project_id}/topics/{topic_id}
         * 
         * @return builder
         * 
         */
        public Builder topic(Output<String> topic) {
            $.topic = topic;
            return this;
        }

        /**
         * @param topic The resource name of the Pub/Sub topic. Format: projects/{project_id}/topics/{topic_id}
         * 
         * @return builder
         * 
         */
        public Builder topic(String topic) {
            return topic(Output.of(topic));
        }

        public EventPublishConfigArgs build() {
            $.enabled = Objects.requireNonNull($.enabled, "expected parameter 'enabled' to be non-null");
            $.topic = Objects.requireNonNull($.topic, "expected parameter 'topic' to be non-null");
            return $;
        }
    }

}
