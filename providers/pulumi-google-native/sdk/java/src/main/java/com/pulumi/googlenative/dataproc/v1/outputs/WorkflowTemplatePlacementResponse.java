// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.dataproc.v1.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.googlenative.dataproc.v1.outputs.ClusterSelectorResponse;
import com.pulumi.googlenative.dataproc.v1.outputs.ManagedClusterResponse;
import java.util.Objects;

@CustomType
public final class WorkflowTemplatePlacementResponse {
    /**
     * @return Optional. A selector that chooses target cluster for jobs based on metadata.The selector is evaluated at the time each job is submitted.
     * 
     */
    private final ClusterSelectorResponse clusterSelector;
    /**
     * @return A cluster that is managed by the workflow.
     * 
     */
    private final ManagedClusterResponse managedCluster;

    @CustomType.Constructor
    private WorkflowTemplatePlacementResponse(
        @CustomType.Parameter("clusterSelector") ClusterSelectorResponse clusterSelector,
        @CustomType.Parameter("managedCluster") ManagedClusterResponse managedCluster) {
        this.clusterSelector = clusterSelector;
        this.managedCluster = managedCluster;
    }

    /**
     * @return Optional. A selector that chooses target cluster for jobs based on metadata.The selector is evaluated at the time each job is submitted.
     * 
     */
    public ClusterSelectorResponse clusterSelector() {
        return this.clusterSelector;
    }
    /**
     * @return A cluster that is managed by the workflow.
     * 
     */
    public ManagedClusterResponse managedCluster() {
        return this.managedCluster;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(WorkflowTemplatePlacementResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClusterSelectorResponse clusterSelector;
        private ManagedClusterResponse managedCluster;

        public Builder() {
    	      // Empty
        }

        public Builder(WorkflowTemplatePlacementResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.clusterSelector = defaults.clusterSelector;
    	      this.managedCluster = defaults.managedCluster;
        }

        public Builder clusterSelector(ClusterSelectorResponse clusterSelector) {
            this.clusterSelector = Objects.requireNonNull(clusterSelector);
            return this;
        }
        public Builder managedCluster(ManagedClusterResponse managedCluster) {
            this.managedCluster = Objects.requireNonNull(managedCluster);
            return this;
        }        public WorkflowTemplatePlacementResponse build() {
            return new WorkflowTemplatePlacementResponse(clusterSelector, managedCluster);
        }
    }
}
