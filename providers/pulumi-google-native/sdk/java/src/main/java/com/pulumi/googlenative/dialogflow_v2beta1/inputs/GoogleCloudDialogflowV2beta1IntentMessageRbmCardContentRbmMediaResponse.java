// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.dialogflow_v2beta1.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * Rich Business Messaging (RBM) Media displayed in Cards The following media-types are currently supported: Image Types * image/jpeg * image/jpg&#39; * image/gif * image/png Video Types * video/h263 * video/m4v * video/mp4 * video/mpeg * video/mpeg4 * video/webm
 * 
 */
public final class GoogleCloudDialogflowV2beta1IntentMessageRbmCardContentRbmMediaResponse extends com.pulumi.resources.InvokeArgs {

    public static final GoogleCloudDialogflowV2beta1IntentMessageRbmCardContentRbmMediaResponse Empty = new GoogleCloudDialogflowV2beta1IntentMessageRbmCardContentRbmMediaResponse();

    /**
     * Publicly reachable URI of the file. The RBM platform determines the MIME type of the file from the content-type field in the HTTP headers when the platform fetches the file. The content-type field must be present and accurate in the HTTP response from the URL.
     * 
     */
    @Import(name="fileUri", required=true)
    private String fileUri;

    /**
     * @return Publicly reachable URI of the file. The RBM platform determines the MIME type of the file from the content-type field in the HTTP headers when the platform fetches the file. The content-type field must be present and accurate in the HTTP response from the URL.
     * 
     */
    public String fileUri() {
        return this.fileUri;
    }

    /**
     * Required for cards with vertical orientation. The height of the media within a rich card with a vertical layout. For a standalone card with horizontal layout, height is not customizable, and this field is ignored.
     * 
     */
    @Import(name="height", required=true)
    private String height;

    /**
     * @return Required for cards with vertical orientation. The height of the media within a rich card with a vertical layout. For a standalone card with horizontal layout, height is not customizable, and this field is ignored.
     * 
     */
    public String height() {
        return this.height;
    }

    /**
     * Optional. Publicly reachable URI of the thumbnail.If you don&#39;t provide a thumbnail URI, the RBM platform displays a blank placeholder thumbnail until the user&#39;s device downloads the file. Depending on the user&#39;s setting, the file may not download automatically and may require the user to tap a download button.
     * 
     */
    @Import(name="thumbnailUri", required=true)
    private String thumbnailUri;

    /**
     * @return Optional. Publicly reachable URI of the thumbnail.If you don&#39;t provide a thumbnail URI, the RBM platform displays a blank placeholder thumbnail until the user&#39;s device downloads the file. Depending on the user&#39;s setting, the file may not download automatically and may require the user to tap a download button.
     * 
     */
    public String thumbnailUri() {
        return this.thumbnailUri;
    }

    private GoogleCloudDialogflowV2beta1IntentMessageRbmCardContentRbmMediaResponse() {}

    private GoogleCloudDialogflowV2beta1IntentMessageRbmCardContentRbmMediaResponse(GoogleCloudDialogflowV2beta1IntentMessageRbmCardContentRbmMediaResponse $) {
        this.fileUri = $.fileUri;
        this.height = $.height;
        this.thumbnailUri = $.thumbnailUri;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GoogleCloudDialogflowV2beta1IntentMessageRbmCardContentRbmMediaResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GoogleCloudDialogflowV2beta1IntentMessageRbmCardContentRbmMediaResponse $;

        public Builder() {
            $ = new GoogleCloudDialogflowV2beta1IntentMessageRbmCardContentRbmMediaResponse();
        }

        public Builder(GoogleCloudDialogflowV2beta1IntentMessageRbmCardContentRbmMediaResponse defaults) {
            $ = new GoogleCloudDialogflowV2beta1IntentMessageRbmCardContentRbmMediaResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param fileUri Publicly reachable URI of the file. The RBM platform determines the MIME type of the file from the content-type field in the HTTP headers when the platform fetches the file. The content-type field must be present and accurate in the HTTP response from the URL.
         * 
         * @return builder
         * 
         */
        public Builder fileUri(String fileUri) {
            $.fileUri = fileUri;
            return this;
        }

        /**
         * @param height Required for cards with vertical orientation. The height of the media within a rich card with a vertical layout. For a standalone card with horizontal layout, height is not customizable, and this field is ignored.
         * 
         * @return builder
         * 
         */
        public Builder height(String height) {
            $.height = height;
            return this;
        }

        /**
         * @param thumbnailUri Optional. Publicly reachable URI of the thumbnail.If you don&#39;t provide a thumbnail URI, the RBM platform displays a blank placeholder thumbnail until the user&#39;s device downloads the file. Depending on the user&#39;s setting, the file may not download automatically and may require the user to tap a download button.
         * 
         * @return builder
         * 
         */
        public Builder thumbnailUri(String thumbnailUri) {
            $.thumbnailUri = thumbnailUri;
            return this;
        }

        public GoogleCloudDialogflowV2beta1IntentMessageRbmCardContentRbmMediaResponse build() {
            $.fileUri = Objects.requireNonNull($.fileUri, "expected parameter 'fileUri' to be non-null");
            $.height = Objects.requireNonNull($.height, "expected parameter 'height' to be non-null");
            $.thumbnailUri = Objects.requireNonNull($.thumbnailUri, "expected parameter 'thumbnailUri' to be non-null");
            return $;
        }
    }

}
