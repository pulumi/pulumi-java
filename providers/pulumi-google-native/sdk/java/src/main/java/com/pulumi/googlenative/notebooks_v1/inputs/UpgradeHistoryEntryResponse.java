// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.notebooks_v1.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * The entry of VM image upgrade history.
 * 
 */
public final class UpgradeHistoryEntryResponse extends com.pulumi.resources.InvokeArgs {

    public static final UpgradeHistoryEntryResponse Empty = new UpgradeHistoryEntryResponse();

    /**
     * Action. Rolloback or Upgrade.
     * 
     */
    @Import(name="action", required=true)
    private String action;

    /**
     * @return Action. Rolloback or Upgrade.
     * 
     */
    public String action() {
        return this.action;
    }

    /**
     * The container image before this instance upgrade.
     * 
     */
    @Import(name="containerImage", required=true)
    private String containerImage;

    /**
     * @return The container image before this instance upgrade.
     * 
     */
    public String containerImage() {
        return this.containerImage;
    }

    /**
     * The time that this instance upgrade history entry is created.
     * 
     */
    @Import(name="createTime", required=true)
    private String createTime;

    /**
     * @return The time that this instance upgrade history entry is created.
     * 
     */
    public String createTime() {
        return this.createTime;
    }

    /**
     * The framework of this notebook instance.
     * 
     */
    @Import(name="framework", required=true)
    private String framework;

    /**
     * @return The framework of this notebook instance.
     * 
     */
    public String framework() {
        return this.framework;
    }

    /**
     * The snapshot of the boot disk of this notebook instance before upgrade.
     * 
     */
    @Import(name="snapshot", required=true)
    private String snapshot;

    /**
     * @return The snapshot of the boot disk of this notebook instance before upgrade.
     * 
     */
    public String snapshot() {
        return this.snapshot;
    }

    /**
     * The state of this instance upgrade history entry.
     * 
     */
    @Import(name="state", required=true)
    private String state;

    /**
     * @return The state of this instance upgrade history entry.
     * 
     */
    public String state() {
        return this.state;
    }

    /**
     * Target VM Image. Format: ainotebooks-vm/project/image-name/name.
     * 
     */
    @Import(name="targetImage", required=true)
    private String targetImage;

    /**
     * @return Target VM Image. Format: ainotebooks-vm/project/image-name/name.
     * 
     */
    public String targetImage() {
        return this.targetImage;
    }

    /**
     * Target VM Version, like m63.
     * 
     */
    @Import(name="targetVersion", required=true)
    private String targetVersion;

    /**
     * @return Target VM Version, like m63.
     * 
     */
    public String targetVersion() {
        return this.targetVersion;
    }

    /**
     * The version of the notebook instance before this upgrade.
     * 
     */
    @Import(name="version", required=true)
    private String version;

    /**
     * @return The version of the notebook instance before this upgrade.
     * 
     */
    public String version() {
        return this.version;
    }

    /**
     * The VM image before this instance upgrade.
     * 
     */
    @Import(name="vmImage", required=true)
    private String vmImage;

    /**
     * @return The VM image before this instance upgrade.
     * 
     */
    public String vmImage() {
        return this.vmImage;
    }

    private UpgradeHistoryEntryResponse() {}

    private UpgradeHistoryEntryResponse(UpgradeHistoryEntryResponse $) {
        this.action = $.action;
        this.containerImage = $.containerImage;
        this.createTime = $.createTime;
        this.framework = $.framework;
        this.snapshot = $.snapshot;
        this.state = $.state;
        this.targetImage = $.targetImage;
        this.targetVersion = $.targetVersion;
        this.version = $.version;
        this.vmImage = $.vmImage;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(UpgradeHistoryEntryResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private UpgradeHistoryEntryResponse $;

        public Builder() {
            $ = new UpgradeHistoryEntryResponse();
        }

        public Builder(UpgradeHistoryEntryResponse defaults) {
            $ = new UpgradeHistoryEntryResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param action Action. Rolloback or Upgrade.
         * 
         * @return builder
         * 
         */
        public Builder action(String action) {
            $.action = action;
            return this;
        }

        /**
         * @param containerImage The container image before this instance upgrade.
         * 
         * @return builder
         * 
         */
        public Builder containerImage(String containerImage) {
            $.containerImage = containerImage;
            return this;
        }

        /**
         * @param createTime The time that this instance upgrade history entry is created.
         * 
         * @return builder
         * 
         */
        public Builder createTime(String createTime) {
            $.createTime = createTime;
            return this;
        }

        /**
         * @param framework The framework of this notebook instance.
         * 
         * @return builder
         * 
         */
        public Builder framework(String framework) {
            $.framework = framework;
            return this;
        }

        /**
         * @param snapshot The snapshot of the boot disk of this notebook instance before upgrade.
         * 
         * @return builder
         * 
         */
        public Builder snapshot(String snapshot) {
            $.snapshot = snapshot;
            return this;
        }

        /**
         * @param state The state of this instance upgrade history entry.
         * 
         * @return builder
         * 
         */
        public Builder state(String state) {
            $.state = state;
            return this;
        }

        /**
         * @param targetImage Target VM Image. Format: ainotebooks-vm/project/image-name/name.
         * 
         * @return builder
         * 
         */
        public Builder targetImage(String targetImage) {
            $.targetImage = targetImage;
            return this;
        }

        /**
         * @param targetVersion Target VM Version, like m63.
         * 
         * @return builder
         * 
         */
        public Builder targetVersion(String targetVersion) {
            $.targetVersion = targetVersion;
            return this;
        }

        /**
         * @param version The version of the notebook instance before this upgrade.
         * 
         * @return builder
         * 
         */
        public Builder version(String version) {
            $.version = version;
            return this;
        }

        /**
         * @param vmImage The VM image before this instance upgrade.
         * 
         * @return builder
         * 
         */
        public Builder vmImage(String vmImage) {
            $.vmImage = vmImage;
            return this;
        }

        public UpgradeHistoryEntryResponse build() {
            $.action = Objects.requireNonNull($.action, "expected parameter 'action' to be non-null");
            $.containerImage = Objects.requireNonNull($.containerImage, "expected parameter 'containerImage' to be non-null");
            $.createTime = Objects.requireNonNull($.createTime, "expected parameter 'createTime' to be non-null");
            $.framework = Objects.requireNonNull($.framework, "expected parameter 'framework' to be non-null");
            $.snapshot = Objects.requireNonNull($.snapshot, "expected parameter 'snapshot' to be non-null");
            $.state = Objects.requireNonNull($.state, "expected parameter 'state' to be non-null");
            $.targetImage = Objects.requireNonNull($.targetImage, "expected parameter 'targetImage' to be non-null");
            $.targetVersion = Objects.requireNonNull($.targetVersion, "expected parameter 'targetVersion' to be non-null");
            $.version = Objects.requireNonNull($.version, "expected parameter 'version' to be non-null");
            $.vmImage = Objects.requireNonNull($.vmImage, "expected parameter 'vmImage' to be non-null");
            return $;
        }
    }

}
