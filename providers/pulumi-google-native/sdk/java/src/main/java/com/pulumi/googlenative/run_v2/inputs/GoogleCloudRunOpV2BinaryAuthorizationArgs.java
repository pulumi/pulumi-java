// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.run_v2.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Settings for Binary Authorization feature.
 * 
 */
public final class GoogleCloudRunOpV2BinaryAuthorizationArgs extends com.pulumi.resources.ResourceArgs {

    public static final GoogleCloudRunOpV2BinaryAuthorizationArgs Empty = new GoogleCloudRunOpV2BinaryAuthorizationArgs();

    /**
     * If present, indicates to use Breakglass using this justification. If use_default is False, then it must be empty. For more information on breakglass, see https://cloud.google.com/binary-authorization/docs/using-breakglass
     * 
     */
    @Import(name="breakglassJustification")
      private final @Nullable Output<String> breakglassJustification;

    public Output<String> breakglassJustification() {
        return this.breakglassJustification == null ? Codegen.empty() : this.breakglassJustification;
    }

    /**
     * If True, indicates to use the default project&#39;s binary authorization policy. If False, binary authorization will be disabled.
     * 
     */
    @Import(name="useDefault")
      private final @Nullable Output<Boolean> useDefault;

    public Output<Boolean> useDefault() {
        return this.useDefault == null ? Codegen.empty() : this.useDefault;
    }

    public GoogleCloudRunOpV2BinaryAuthorizationArgs(
        @Nullable Output<String> breakglassJustification,
        @Nullable Output<Boolean> useDefault) {
        this.breakglassJustification = breakglassJustification;
        this.useDefault = useDefault;
    }

    private GoogleCloudRunOpV2BinaryAuthorizationArgs() {
        this.breakglassJustification = Codegen.empty();
        this.useDefault = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GoogleCloudRunOpV2BinaryAuthorizationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> breakglassJustification;
        private @Nullable Output<Boolean> useDefault;

        public Builder() {
    	      // Empty
        }

        public Builder(GoogleCloudRunOpV2BinaryAuthorizationArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.breakglassJustification = defaults.breakglassJustification;
    	      this.useDefault = defaults.useDefault;
        }

        public Builder breakglassJustification(@Nullable Output<String> breakglassJustification) {
            this.breakglassJustification = breakglassJustification;
            return this;
        }
        public Builder breakglassJustification(@Nullable String breakglassJustification) {
            this.breakglassJustification = Codegen.ofNullable(breakglassJustification);
            return this;
        }
        public Builder useDefault(@Nullable Output<Boolean> useDefault) {
            this.useDefault = useDefault;
            return this;
        }
        public Builder useDefault(@Nullable Boolean useDefault) {
            this.useDefault = Codegen.ofNullable(useDefault);
            return this;
        }        public GoogleCloudRunOpV2BinaryAuthorizationArgs build() {
            return new GoogleCloudRunOpV2BinaryAuthorizationArgs(breakglassJustification, useDefault);
        }
    }
}
