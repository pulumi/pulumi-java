// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.privateca.v1beta1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.privateca.v1beta1.inputs.ObjectIdArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;


/**
 * An X509Extension specifies an X.509 extension, which may be used in different parts of X.509 objects like certificates, CSRs, and CRLs.
 * 
 */
public final class X509ExtensionArgs extends com.pulumi.resources.ResourceArgs {

    public static final X509ExtensionArgs Empty = new X509ExtensionArgs();

    /**
     * Indicates whether or not this extension is critical (i.e., if the client does not know how to handle this extension, the client should consider this to be an error).
     * 
     */
    @Import(name="critical", required=true)
    private Output<Boolean> critical;

    /**
     * @return Indicates whether or not this extension is critical (i.e., if the client does not know how to handle this extension, the client should consider this to be an error).
     * 
     */
    public Output<Boolean> critical() {
        return this.critical;
    }

    /**
     * The OID for this X.509 extension.
     * 
     */
    @Import(name="objectId", required=true)
    private Output<ObjectIdArgs> objectId;

    /**
     * @return The OID for this X.509 extension.
     * 
     */
    public Output<ObjectIdArgs> objectId() {
        return this.objectId;
    }

    /**
     * The value of this X.509 extension.
     * 
     */
    @Import(name="value", required=true)
    private Output<String> value;

    /**
     * @return The value of this X.509 extension.
     * 
     */
    public Output<String> value() {
        return this.value;
    }

    private X509ExtensionArgs() {}

    private X509ExtensionArgs(X509ExtensionArgs $) {
        this.critical = $.critical;
        this.objectId = $.objectId;
        this.value = $.value;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(X509ExtensionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private X509ExtensionArgs $;

        public Builder() {
            $ = new X509ExtensionArgs();
        }

        public Builder(X509ExtensionArgs defaults) {
            $ = new X509ExtensionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param critical Indicates whether or not this extension is critical (i.e., if the client does not know how to handle this extension, the client should consider this to be an error).
         * 
         * @return builder
         * 
         */
        public Builder critical(Output<Boolean> critical) {
            $.critical = critical;
            return this;
        }

        /**
         * @param critical Indicates whether or not this extension is critical (i.e., if the client does not know how to handle this extension, the client should consider this to be an error).
         * 
         * @return builder
         * 
         */
        public Builder critical(Boolean critical) {
            return critical(Output.of(critical));
        }

        /**
         * @param objectId The OID for this X.509 extension.
         * 
         * @return builder
         * 
         */
        public Builder objectId(Output<ObjectIdArgs> objectId) {
            $.objectId = objectId;
            return this;
        }

        /**
         * @param objectId The OID for this X.509 extension.
         * 
         * @return builder
         * 
         */
        public Builder objectId(ObjectIdArgs objectId) {
            return objectId(Output.of(objectId));
        }

        /**
         * @param value The value of this X.509 extension.
         * 
         * @return builder
         * 
         */
        public Builder value(Output<String> value) {
            $.value = value;
            return this;
        }

        /**
         * @param value The value of this X.509 extension.
         * 
         * @return builder
         * 
         */
        public Builder value(String value) {
            return value(Output.of(value));
        }

        public X509ExtensionArgs build() {
            $.critical = Objects.requireNonNull($.critical, "expected parameter 'critical' to be non-null");
            $.objectId = Objects.requireNonNull($.objectId, "expected parameter 'objectId' to be non-null");
            $.value = Objects.requireNonNull($.value, "expected parameter 'value' to be non-null");
            return $;
        }
    }

}
