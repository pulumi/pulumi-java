// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.osconfig_v1.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;


/**
 * Message representing label set. * A label is a key value pair set for a VM. * A LabelSet is a set of labels. * Labels within a LabelSet are ANDed. In other words, a LabelSet is applicable for a VM only if it matches all the labels in the LabelSet. * Example: A LabelSet with 2 labels: `env=prod` and `type=webserver` will only be applicable for those VMs with both labels present.
 * 
 */
public final class OSPolicyAssignmentLabelSetResponse extends com.pulumi.resources.InvokeArgs {

    public static final OSPolicyAssignmentLabelSetResponse Empty = new OSPolicyAssignmentLabelSetResponse();

    /**
     * Labels are identified by key/value pairs in this map. A VM should contain all the key/value pairs specified in this map to be selected.
     * 
     */
    @Import(name="labels", required=true)
    private Map<String,String> labels;

    public Map<String,String> labels() {
        return this.labels;
    }

    private OSPolicyAssignmentLabelSetResponse() {}

    private OSPolicyAssignmentLabelSetResponse(OSPolicyAssignmentLabelSetResponse $) {
        this.labels = $.labels;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OSPolicyAssignmentLabelSetResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OSPolicyAssignmentLabelSetResponse $;

        public Builder() {
            $ = new OSPolicyAssignmentLabelSetResponse();
        }

        public Builder(OSPolicyAssignmentLabelSetResponse defaults) {
            $ = new OSPolicyAssignmentLabelSetResponse(Objects.requireNonNull(defaults));
        }

        public Builder labels(Map<String,String> labels) {
            $.labels = labels;
            return this;
        }

        public OSPolicyAssignmentLabelSetResponse build() {
            $.labels = Objects.requireNonNull($.labels, "expected parameter 'labels' to be non-null");
            return $;
        }
    }

}
