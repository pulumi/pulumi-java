// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.accesscontextmanager.v1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * An allowed method or permission of a service specified in ApiOperation.
 * 
 */
public final class MethodSelectorArgs extends com.pulumi.resources.ResourceArgs {

    public static final MethodSelectorArgs Empty = new MethodSelectorArgs();

    /**
     * Value for `method` should be a valid method name for the corresponding `service_name` in ApiOperation. If `*` used as value for `method`, then ALL methods and permissions are allowed.
     * 
     */
    @Import(name="method")
    private @Nullable Output<String> method;

    /**
     * @return Value for `method` should be a valid method name for the corresponding `service_name` in ApiOperation. If `*` used as value for `method`, then ALL methods and permissions are allowed.
     * 
     */
    public Optional<Output<String>> method() {
        return Optional.ofNullable(this.method);
    }

    /**
     * Value for `permission` should be a valid Cloud IAM permission for the corresponding `service_name` in ApiOperation.
     * 
     */
    @Import(name="permission")
    private @Nullable Output<String> permission;

    /**
     * @return Value for `permission` should be a valid Cloud IAM permission for the corresponding `service_name` in ApiOperation.
     * 
     */
    public Optional<Output<String>> permission() {
        return Optional.ofNullable(this.permission);
    }

    private MethodSelectorArgs() {}

    private MethodSelectorArgs(MethodSelectorArgs $) {
        this.method = $.method;
        this.permission = $.permission;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MethodSelectorArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MethodSelectorArgs $;

        public Builder() {
            $ = new MethodSelectorArgs();
        }

        public Builder(MethodSelectorArgs defaults) {
            $ = new MethodSelectorArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param method Value for `method` should be a valid method name for the corresponding `service_name` in ApiOperation. If `*` used as value for `method`, then ALL methods and permissions are allowed.
         * 
         * @return builder
         * 
         */
        public Builder method(@Nullable Output<String> method) {
            $.method = method;
            return this;
        }

        /**
         * @param method Value for `method` should be a valid method name for the corresponding `service_name` in ApiOperation. If `*` used as value for `method`, then ALL methods and permissions are allowed.
         * 
         * @return builder
         * 
         */
        public Builder method(String method) {
            return method(Output.of(method));
        }

        /**
         * @param permission Value for `permission` should be a valid Cloud IAM permission for the corresponding `service_name` in ApiOperation.
         * 
         * @return builder
         * 
         */
        public Builder permission(@Nullable Output<String> permission) {
            $.permission = permission;
            return this;
        }

        /**
         * @param permission Value for `permission` should be a valid Cloud IAM permission for the corresponding `service_name` in ApiOperation.
         * 
         * @return builder
         * 
         */
        public Builder permission(String permission) {
            return permission(Output.of(permission));
        }

        public MethodSelectorArgs build() {
            return $;
        }
    }

}
