// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.containeranalysis_v1alpha1.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.containeranalysis_v1alpha1.inputs.InTotoProvenanceResponse;
import com.pulumi.googlenative.containeranalysis_v1alpha1.inputs.SlsaProvenanceResponse;
import com.pulumi.googlenative.containeranalysis_v1alpha1.inputs.SubjectResponse;
import java.lang.String;
import java.util.List;
import java.util.Objects;


/**
 * Spec defined at https://github.com/in-toto/attestation/tree/main/spec#statement The serialized InTotoStatement will be stored as Envelope.payload. Envelope.payloadType is always "application/vnd.in-toto+json".
 * 
 */
public final class InTotoStatementResponse extends com.pulumi.resources.InvokeArgs {

    public static final InTotoStatementResponse Empty = new InTotoStatementResponse();

    /**
     * "https://slsa.dev/provenance/v0.1" for SlsaProvenance.
     * 
     */
    @Import(name="predicateType", required=true)
      private final String predicateType;

    public String predicateType() {
        return this.predicateType;
    }

    /**
     * provenance is a predicate of type intotoprovenance
     * 
     */
    @Import(name="provenance", required=true)
      private final InTotoProvenanceResponse provenance;

    public InTotoProvenanceResponse provenance() {
        return this.provenance;
    }

    /**
     * slsa_provenance is a predicate of type slsaProvenance
     * 
     */
    @Import(name="slsaProvenance", required=true)
      private final SlsaProvenanceResponse slsaProvenance;

    public SlsaProvenanceResponse slsaProvenance() {
        return this.slsaProvenance;
    }

    /**
     * subject is the subjects of the intoto statement
     * 
     */
    @Import(name="subject", required=true)
      private final List<SubjectResponse> subject;

    public List<SubjectResponse> subject() {
        return this.subject;
    }

    /**
     * Always "https://in-toto.io/Statement/v0.1".
     * 
     */
    @Import(name="type", required=true)
      private final String type;

    public String type() {
        return this.type;
    }

    public InTotoStatementResponse(
        String predicateType,
        InTotoProvenanceResponse provenance,
        SlsaProvenanceResponse slsaProvenance,
        List<SubjectResponse> subject,
        String type) {
        this.predicateType = Objects.requireNonNull(predicateType, "expected parameter 'predicateType' to be non-null");
        this.provenance = Objects.requireNonNull(provenance, "expected parameter 'provenance' to be non-null");
        this.slsaProvenance = Objects.requireNonNull(slsaProvenance, "expected parameter 'slsaProvenance' to be non-null");
        this.subject = Objects.requireNonNull(subject, "expected parameter 'subject' to be non-null");
        this.type = Objects.requireNonNull(type, "expected parameter 'type' to be non-null");
    }

    private InTotoStatementResponse() {
        this.predicateType = null;
        this.provenance = null;
        this.slsaProvenance = null;
        this.subject = List.of();
        this.type = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(InTotoStatementResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String predicateType;
        private InTotoProvenanceResponse provenance;
        private SlsaProvenanceResponse slsaProvenance;
        private List<SubjectResponse> subject;
        private String type;

        public Builder() {
    	      // Empty
        }

        public Builder(InTotoStatementResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.predicateType = defaults.predicateType;
    	      this.provenance = defaults.provenance;
    	      this.slsaProvenance = defaults.slsaProvenance;
    	      this.subject = defaults.subject;
    	      this.type = defaults.type;
        }

        public Builder predicateType(String predicateType) {
            this.predicateType = Objects.requireNonNull(predicateType);
            return this;
        }
        public Builder provenance(InTotoProvenanceResponse provenance) {
            this.provenance = Objects.requireNonNull(provenance);
            return this;
        }
        public Builder slsaProvenance(SlsaProvenanceResponse slsaProvenance) {
            this.slsaProvenance = Objects.requireNonNull(slsaProvenance);
            return this;
        }
        public Builder subject(List<SubjectResponse> subject) {
            this.subject = Objects.requireNonNull(subject);
            return this;
        }
        public Builder subject(SubjectResponse... subject) {
            return subject(List.of(subject));
        }
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }        public InTotoStatementResponse build() {
            return new InTotoStatementResponse(predicateType, provenance, slsaProvenance, subject, type);
        }
    }
}
