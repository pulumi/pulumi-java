// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.gkehub.v1beta1.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.googlenative.gkehub.v1beta1.outputs.ApplianceClusterResponse;
import com.pulumi.googlenative.gkehub.v1beta1.outputs.EdgeClusterResponse;
import com.pulumi.googlenative.gkehub.v1beta1.outputs.GkeClusterResponse;
import com.pulumi.googlenative.gkehub.v1beta1.outputs.KubernetesMetadataResponse;
import com.pulumi.googlenative.gkehub.v1beta1.outputs.KubernetesResourceResponse;
import com.pulumi.googlenative.gkehub.v1beta1.outputs.MultiCloudClusterResponse;
import com.pulumi.googlenative.gkehub.v1beta1.outputs.OnPremClusterResponse;
import java.util.Objects;

@CustomType
public final class MembershipEndpointResponse {
    /**
     * @return Optional. Specific information for a GDC Edge Appliance cluster.
     * 
     */
    private final ApplianceClusterResponse applianceCluster;
    /**
     * @return Optional. Specific information for a Google Edge cluster.
     * 
     */
    private final EdgeClusterResponse edgeCluster;
    /**
     * @return Optional. Specific information for a GKE-on-GCP cluster.
     * 
     */
    private final GkeClusterResponse gkeCluster;
    /**
     * @return Useful Kubernetes-specific metadata.
     * 
     */
    private final KubernetesMetadataResponse kubernetesMetadata;
    /**
     * @return Optional. The in-cluster Kubernetes Resources that should be applied for a correctly registered cluster, in the steady state. These resources: * Ensure that the cluster is exclusively registered to one and only one Hub Membership. * Propagate Workload Pool Information available in the Membership Authority field. * Ensure proper initial configuration of default Hub Features.
     * 
     */
    private final KubernetesResourceResponse kubernetesResource;
    /**
     * @return Optional. Specific information for a GKE Multi-Cloud cluster.
     * 
     */
    private final MultiCloudClusterResponse multiCloudCluster;
    /**
     * @return Optional. Specific information for a GKE On-Prem cluster. An onprem user-cluster who has no resourceLink is not allowed to use this field, it should have a nil &#34;type&#34; instead.
     * 
     */
    private final OnPremClusterResponse onPremCluster;

    @CustomType.Constructor
    private MembershipEndpointResponse(
        @CustomType.Parameter("applianceCluster") ApplianceClusterResponse applianceCluster,
        @CustomType.Parameter("edgeCluster") EdgeClusterResponse edgeCluster,
        @CustomType.Parameter("gkeCluster") GkeClusterResponse gkeCluster,
        @CustomType.Parameter("kubernetesMetadata") KubernetesMetadataResponse kubernetesMetadata,
        @CustomType.Parameter("kubernetesResource") KubernetesResourceResponse kubernetesResource,
        @CustomType.Parameter("multiCloudCluster") MultiCloudClusterResponse multiCloudCluster,
        @CustomType.Parameter("onPremCluster") OnPremClusterResponse onPremCluster) {
        this.applianceCluster = applianceCluster;
        this.edgeCluster = edgeCluster;
        this.gkeCluster = gkeCluster;
        this.kubernetesMetadata = kubernetesMetadata;
        this.kubernetesResource = kubernetesResource;
        this.multiCloudCluster = multiCloudCluster;
        this.onPremCluster = onPremCluster;
    }

    /**
     * @return Optional. Specific information for a GDC Edge Appliance cluster.
     * 
     */
    public ApplianceClusterResponse applianceCluster() {
        return this.applianceCluster;
    }
    /**
     * @return Optional. Specific information for a Google Edge cluster.
     * 
     */
    public EdgeClusterResponse edgeCluster() {
        return this.edgeCluster;
    }
    /**
     * @return Optional. Specific information for a GKE-on-GCP cluster.
     * 
     */
    public GkeClusterResponse gkeCluster() {
        return this.gkeCluster;
    }
    /**
     * @return Useful Kubernetes-specific metadata.
     * 
     */
    public KubernetesMetadataResponse kubernetesMetadata() {
        return this.kubernetesMetadata;
    }
    /**
     * @return Optional. The in-cluster Kubernetes Resources that should be applied for a correctly registered cluster, in the steady state. These resources: * Ensure that the cluster is exclusively registered to one and only one Hub Membership. * Propagate Workload Pool Information available in the Membership Authority field. * Ensure proper initial configuration of default Hub Features.
     * 
     */
    public KubernetesResourceResponse kubernetesResource() {
        return this.kubernetesResource;
    }
    /**
     * @return Optional. Specific information for a GKE Multi-Cloud cluster.
     * 
     */
    public MultiCloudClusterResponse multiCloudCluster() {
        return this.multiCloudCluster;
    }
    /**
     * @return Optional. Specific information for a GKE On-Prem cluster. An onprem user-cluster who has no resourceLink is not allowed to use this field, it should have a nil &#34;type&#34; instead.
     * 
     */
    public OnPremClusterResponse onPremCluster() {
        return this.onPremCluster;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MembershipEndpointResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApplianceClusterResponse applianceCluster;
        private EdgeClusterResponse edgeCluster;
        private GkeClusterResponse gkeCluster;
        private KubernetesMetadataResponse kubernetesMetadata;
        private KubernetesResourceResponse kubernetesResource;
        private MultiCloudClusterResponse multiCloudCluster;
        private OnPremClusterResponse onPremCluster;

        public Builder() {
    	      // Empty
        }

        public Builder(MembershipEndpointResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.applianceCluster = defaults.applianceCluster;
    	      this.edgeCluster = defaults.edgeCluster;
    	      this.gkeCluster = defaults.gkeCluster;
    	      this.kubernetesMetadata = defaults.kubernetesMetadata;
    	      this.kubernetesResource = defaults.kubernetesResource;
    	      this.multiCloudCluster = defaults.multiCloudCluster;
    	      this.onPremCluster = defaults.onPremCluster;
        }

        public Builder applianceCluster(ApplianceClusterResponse applianceCluster) {
            this.applianceCluster = Objects.requireNonNull(applianceCluster);
            return this;
        }
        public Builder edgeCluster(EdgeClusterResponse edgeCluster) {
            this.edgeCluster = Objects.requireNonNull(edgeCluster);
            return this;
        }
        public Builder gkeCluster(GkeClusterResponse gkeCluster) {
            this.gkeCluster = Objects.requireNonNull(gkeCluster);
            return this;
        }
        public Builder kubernetesMetadata(KubernetesMetadataResponse kubernetesMetadata) {
            this.kubernetesMetadata = Objects.requireNonNull(kubernetesMetadata);
            return this;
        }
        public Builder kubernetesResource(KubernetesResourceResponse kubernetesResource) {
            this.kubernetesResource = Objects.requireNonNull(kubernetesResource);
            return this;
        }
        public Builder multiCloudCluster(MultiCloudClusterResponse multiCloudCluster) {
            this.multiCloudCluster = Objects.requireNonNull(multiCloudCluster);
            return this;
        }
        public Builder onPremCluster(OnPremClusterResponse onPremCluster) {
            this.onPremCluster = Objects.requireNonNull(onPremCluster);
            return this;
        }        public MembershipEndpointResponse build() {
            return new MembershipEndpointResponse(applianceCluster, edgeCluster, gkeCluster, kubernetesMetadata, kubernetesResource, multiCloudCluster, onPremCluster);
        }
    }
}
