// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.apigee.v1.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetEndpointAttachmentResult {
    /**
     * @return Host that can be used in either the HTTP target endpoint directly or as the host in target server.
     * 
     */
    private final String host;
    /**
     * @return Location of the endpoint attachment.
     * 
     */
    private final String location;
    /**
     * @return Name of the endpoint attachment. Use the following structure in your request: `organizations/{org}/endpointAttachments/{endpoint_attachment}`
     * 
     */
    private final String name;
    /**
     * @return Format: projects/*{@literal /}regions/*{@literal /}serviceAttachments/*
     * 
     */
    private final String serviceAttachment;
    /**
     * @return State of the endpoint attachment. Values other than `ACTIVE` mean the resource is not ready to use.
     * 
     */
    private final String state;

    @CustomType.Constructor
    private GetEndpointAttachmentResult(
        @CustomType.Parameter("host") String host,
        @CustomType.Parameter("location") String location,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("serviceAttachment") String serviceAttachment,
        @CustomType.Parameter("state") String state) {
        this.host = host;
        this.location = location;
        this.name = name;
        this.serviceAttachment = serviceAttachment;
        this.state = state;
    }

    /**
     * @return Host that can be used in either the HTTP target endpoint directly or as the host in target server.
     * 
     */
    public String host() {
        return this.host;
    }
    /**
     * @return Location of the endpoint attachment.
     * 
     */
    public String location() {
        return this.location;
    }
    /**
     * @return Name of the endpoint attachment. Use the following structure in your request: `organizations/{org}/endpointAttachments/{endpoint_attachment}`
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Format: projects/*{@literal /}regions/*{@literal /}serviceAttachments/*
     * 
     */
    public String serviceAttachment() {
        return this.serviceAttachment;
    }
    /**
     * @return State of the endpoint attachment. Values other than `ACTIVE` mean the resource is not ready to use.
     * 
     */
    public String state() {
        return this.state;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetEndpointAttachmentResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String host;
        private String location;
        private String name;
        private String serviceAttachment;
        private String state;

        public Builder() {
    	      // Empty
        }

        public Builder(GetEndpointAttachmentResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.host = defaults.host;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.serviceAttachment = defaults.serviceAttachment;
    	      this.state = defaults.state;
        }

        public Builder host(String host) {
            this.host = Objects.requireNonNull(host);
            return this;
        }
        public Builder location(String location) {
            this.location = Objects.requireNonNull(location);
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder serviceAttachment(String serviceAttachment) {
            this.serviceAttachment = Objects.requireNonNull(serviceAttachment);
            return this;
        }
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }        public GetEndpointAttachmentResult build() {
            return new GetEndpointAttachmentResult(host, location, name, serviceAttachment, state);
        }
    }
}
