// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.compute.alpha.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.compute.alpha.inputs.PermissionArgs;
import com.pulumi.googlenative.compute.alpha.inputs.PrincipalArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RbacPolicyArgs extends com.pulumi.resources.ResourceArgs {

    public static final RbacPolicyArgs Empty = new RbacPolicyArgs();

    /**
     * Name of the RbacPolicy.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name of the RbacPolicy.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The list of permissions.
     * 
     */
    @Import(name="permissions")
    private @Nullable Output<List<PermissionArgs>> permissions;

    /**
     * @return The list of permissions.
     * 
     */
    public Optional<Output<List<PermissionArgs>>> permissions() {
        return Optional.ofNullable(this.permissions);
    }

    /**
     * The list of principals.
     * 
     */
    @Import(name="principals")
    private @Nullable Output<List<PrincipalArgs>> principals;

    /**
     * @return The list of principals.
     * 
     */
    public Optional<Output<List<PrincipalArgs>>> principals() {
        return Optional.ofNullable(this.principals);
    }

    private RbacPolicyArgs() {}

    private RbacPolicyArgs(RbacPolicyArgs $) {
        this.name = $.name;
        this.permissions = $.permissions;
        this.principals = $.principals;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RbacPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RbacPolicyArgs $;

        public Builder() {
            $ = new RbacPolicyArgs();
        }

        public Builder(RbacPolicyArgs defaults) {
            $ = new RbacPolicyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param name Name of the RbacPolicy.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the RbacPolicy.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param permissions The list of permissions.
         * 
         * @return builder
         * 
         */
        public Builder permissions(@Nullable Output<List<PermissionArgs>> permissions) {
            $.permissions = permissions;
            return this;
        }

        /**
         * @param permissions The list of permissions.
         * 
         * @return builder
         * 
         */
        public Builder permissions(List<PermissionArgs> permissions) {
            return permissions(Output.of(permissions));
        }

        /**
         * @param permissions The list of permissions.
         * 
         * @return builder
         * 
         */
        public Builder permissions(PermissionArgs... permissions) {
            return permissions(List.of(permissions));
        }

        /**
         * @param principals The list of principals.
         * 
         * @return builder
         * 
         */
        public Builder principals(@Nullable Output<List<PrincipalArgs>> principals) {
            $.principals = principals;
            return this;
        }

        /**
         * @param principals The list of principals.
         * 
         * @return builder
         * 
         */
        public Builder principals(List<PrincipalArgs> principals) {
            return principals(Output.of(principals));
        }

        /**
         * @param principals The list of principals.
         * 
         * @return builder
         * 
         */
        public Builder principals(PrincipalArgs... principals) {
            return principals(List.of(principals));
        }

        public RbacPolicyArgs build() {
            return $;
        }
    }

}
