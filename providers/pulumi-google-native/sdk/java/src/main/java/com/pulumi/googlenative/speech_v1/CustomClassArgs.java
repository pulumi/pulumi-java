// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.speech_v1;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.speech_v1.inputs.ClassItemArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CustomClassArgs extends com.pulumi.resources.ResourceArgs {

    public static final CustomClassArgs Empty = new CustomClassArgs();

    /**
     * The ID to use for the custom class, which will become the final component of the custom class&#39; resource name. This value should be 4-63 characters, and valid characters are /a-z-/.
     * 
     */
    @Import(name="customClassId", required=true)
    private Output<String> customClassId;

    public Output<String> customClassId() {
        return this.customClassId;
    }

    /**
     * A collection of class items.
     * 
     */
    @Import(name="items")
    private @Nullable Output<List<ClassItemArgs>> items;

    public Optional<Output<List<ClassItemArgs>>> items() {
        return Optional.ofNullable(this.items);
    }

    @Import(name="location")
    private @Nullable Output<String> location;

    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * The resource name of the custom class.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="project")
    private @Nullable Output<String> project;

    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    private CustomClassArgs() {}

    private CustomClassArgs(CustomClassArgs $) {
        this.customClassId = $.customClassId;
        this.items = $.items;
        this.location = $.location;
        this.name = $.name;
        this.project = $.project;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CustomClassArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CustomClassArgs $;

        public Builder() {
            $ = new CustomClassArgs();
        }

        public Builder(CustomClassArgs defaults) {
            $ = new CustomClassArgs(Objects.requireNonNull(defaults));
        }

        public Builder customClassId(Output<String> customClassId) {
            $.customClassId = customClassId;
            return this;
        }

        public Builder customClassId(String customClassId) {
            return customClassId(Output.of(customClassId));
        }

        public Builder items(@Nullable Output<List<ClassItemArgs>> items) {
            $.items = items;
            return this;
        }

        public Builder items(List<ClassItemArgs> items) {
            return items(Output.of(items));
        }

        public Builder items(ClassItemArgs... items) {
            return items(List.of(items));
        }

        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        public Builder location(String location) {
            return location(Output.of(location));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        public Builder project(String project) {
            return project(Output.of(project));
        }

        public CustomClassArgs build() {
            $.customClassId = Objects.requireNonNull($.customClassId, "expected parameter 'customClassId' to be non-null");
            return $;
        }
    }

}
