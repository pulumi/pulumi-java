// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.sourcerepo_v1;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import com.pulumi.googlenative.sourcerepo_v1.inputs.MirrorConfigArgs;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class RepoArgs extends com.pulumi.resources.ResourceArgs {

    public static final RepoArgs Empty = new RepoArgs();

    /**
     * How this repository mirrors a repository managed by another service. Read-only field.
     * 
     */
    @Import(name="mirrorConfig")
      private final @Nullable Output<MirrorConfigArgs> mirrorConfig;

    public Output<MirrorConfigArgs> mirrorConfig() {
        return this.mirrorConfig == null ? Codegen.empty() : this.mirrorConfig;
    }

    /**
     * Resource name of the repository, of the form `projects//repos/`. The repo name may contain slashes. eg, `projects/myproject/repos/name/with/slash`
     * 
     */
    @Import(name="name")
      private final @Nullable Output<String> name;

    public Output<String> name() {
        return this.name == null ? Codegen.empty() : this.name;
    }

    @Import(name="project")
      private final @Nullable Output<String> project;

    public Output<String> project() {
        return this.project == null ? Codegen.empty() : this.project;
    }

    /**
     * How this repository publishes a change in the repository through Cloud Pub/Sub. Keyed by the topic names.
     * 
     */
    @Import(name="pubsubConfigs")
      private final @Nullable Output<Map<String,String>> pubsubConfigs;

    public Output<Map<String,String>> pubsubConfigs() {
        return this.pubsubConfigs == null ? Codegen.empty() : this.pubsubConfigs;
    }

    /**
     * The disk usage of the repo, in bytes. Read-only field. Size is only returned by GetRepo.
     * 
     */
    @Import(name="size")
      private final @Nullable Output<String> size;

    public Output<String> size() {
        return this.size == null ? Codegen.empty() : this.size;
    }

    /**
     * URL to clone the repository from Google Cloud Source Repositories. Read-only field.
     * 
     */
    @Import(name="url")
      private final @Nullable Output<String> url;

    public Output<String> url() {
        return this.url == null ? Codegen.empty() : this.url;
    }

    public RepoArgs(
        @Nullable Output<MirrorConfigArgs> mirrorConfig,
        @Nullable Output<String> name,
        @Nullable Output<String> project,
        @Nullable Output<Map<String,String>> pubsubConfigs,
        @Nullable Output<String> size,
        @Nullable Output<String> url) {
        this.mirrorConfig = mirrorConfig;
        this.name = name;
        this.project = project;
        this.pubsubConfigs = pubsubConfigs;
        this.size = size;
        this.url = url;
    }

    private RepoArgs() {
        this.mirrorConfig = Codegen.empty();
        this.name = Codegen.empty();
        this.project = Codegen.empty();
        this.pubsubConfigs = Codegen.empty();
        this.size = Codegen.empty();
        this.url = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RepoArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<MirrorConfigArgs> mirrorConfig;
        private @Nullable Output<String> name;
        private @Nullable Output<String> project;
        private @Nullable Output<Map<String,String>> pubsubConfigs;
        private @Nullable Output<String> size;
        private @Nullable Output<String> url;

        public Builder() {
    	      // Empty
        }

        public Builder(RepoArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.mirrorConfig = defaults.mirrorConfig;
    	      this.name = defaults.name;
    	      this.project = defaults.project;
    	      this.pubsubConfigs = defaults.pubsubConfigs;
    	      this.size = defaults.size;
    	      this.url = defaults.url;
        }

        public Builder mirrorConfig(@Nullable Output<MirrorConfigArgs> mirrorConfig) {
            this.mirrorConfig = mirrorConfig;
            return this;
        }
        public Builder mirrorConfig(@Nullable MirrorConfigArgs mirrorConfig) {
            this.mirrorConfig = Codegen.ofNullable(mirrorConfig);
            return this;
        }
        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }
        public Builder name(@Nullable String name) {
            this.name = Codegen.ofNullable(name);
            return this;
        }
        public Builder project(@Nullable Output<String> project) {
            this.project = project;
            return this;
        }
        public Builder project(@Nullable String project) {
            this.project = Codegen.ofNullable(project);
            return this;
        }
        public Builder pubsubConfigs(@Nullable Output<Map<String,String>> pubsubConfigs) {
            this.pubsubConfigs = pubsubConfigs;
            return this;
        }
        public Builder pubsubConfigs(@Nullable Map<String,String> pubsubConfigs) {
            this.pubsubConfigs = Codegen.ofNullable(pubsubConfigs);
            return this;
        }
        public Builder size(@Nullable Output<String> size) {
            this.size = size;
            return this;
        }
        public Builder size(@Nullable String size) {
            this.size = Codegen.ofNullable(size);
            return this;
        }
        public Builder url(@Nullable Output<String> url) {
            this.url = url;
            return this;
        }
        public Builder url(@Nullable String url) {
            this.url = Codegen.ofNullable(url);
            return this;
        }        public RepoArgs build() {
            return new RepoArgs(mirrorConfig, name, project, pubsubConfigs, size, url);
        }
    }
}
