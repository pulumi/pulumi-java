// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.servicemanagement_v1.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.servicemanagement_v1.inputs.MonitoringDestinationResponse;
import java.util.List;
import java.util.Objects;


/**
 * Monitoring configuration of the service. The example below shows how to configure monitored resources and metrics for monitoring. In the example, a monitored resource and two metrics are defined. The `library.googleapis.com/book/returned_count` metric is sent to both producer and consumer projects, whereas the `library.googleapis.com/book/num_overdue` metric is only sent to the consumer project. monitored_resources: - type: library.googleapis.com/Branch display_name: &#34;Library Branch&#34; description: &#34;A branch of a library.&#34; launch_stage: GA labels: - key: resource_container description: &#34;The Cloud container (ie. project id) for the Branch.&#34; - key: location description: &#34;The location of the library branch.&#34; - key: branch_id description: &#34;The id of the branch.&#34; metrics: - name: library.googleapis.com/book/returned_count display_name: &#34;Books Returned&#34; description: &#34;The count of books that have been returned.&#34; launch_stage: GA metric_kind: DELTA value_type: INT64 unit: &#34;1&#34; labels: - key: customer_id description: &#34;The id of the customer.&#34; - name: library.googleapis.com/book/num_overdue display_name: &#34;Books Overdue&#34; description: &#34;The current number of overdue books.&#34; launch_stage: GA metric_kind: GAUGE value_type: INT64 unit: &#34;1&#34; labels: - key: customer_id description: &#34;The id of the customer.&#34; monitoring: producer_destinations: - monitored_resource: library.googleapis.com/Branch metrics: - library.googleapis.com/book/returned_count consumer_destinations: - monitored_resource: library.googleapis.com/Branch metrics: - library.googleapis.com/book/returned_count - library.googleapis.com/book/num_overdue
 * 
 */
public final class MonitoringResponse extends com.pulumi.resources.InvokeArgs {

    public static final MonitoringResponse Empty = new MonitoringResponse();

    /**
     * Monitoring configurations for sending metrics to the consumer project. There can be multiple consumer destinations. A monitored resource type may appear in multiple monitoring destinations if different aggregations are needed for different sets of metrics associated with that monitored resource type. A monitored resource and metric pair may only be used once in the Monitoring configuration.
     * 
     */
    @Import(name="consumerDestinations", required=true)
      private final List<MonitoringDestinationResponse> consumerDestinations;

    public List<MonitoringDestinationResponse> consumerDestinations() {
        return this.consumerDestinations;
    }

    /**
     * Monitoring configurations for sending metrics to the producer project. There can be multiple producer destinations. A monitored resource type may appear in multiple monitoring destinations if different aggregations are needed for different sets of metrics associated with that monitored resource type. A monitored resource and metric pair may only be used once in the Monitoring configuration.
     * 
     */
    @Import(name="producerDestinations", required=true)
      private final List<MonitoringDestinationResponse> producerDestinations;

    public List<MonitoringDestinationResponse> producerDestinations() {
        return this.producerDestinations;
    }

    public MonitoringResponse(
        List<MonitoringDestinationResponse> consumerDestinations,
        List<MonitoringDestinationResponse> producerDestinations) {
        this.consumerDestinations = Objects.requireNonNull(consumerDestinations, "expected parameter 'consumerDestinations' to be non-null");
        this.producerDestinations = Objects.requireNonNull(producerDestinations, "expected parameter 'producerDestinations' to be non-null");
    }

    private MonitoringResponse() {
        this.consumerDestinations = List.of();
        this.producerDestinations = List.of();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MonitoringResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<MonitoringDestinationResponse> consumerDestinations;
        private List<MonitoringDestinationResponse> producerDestinations;

        public Builder() {
    	      // Empty
        }

        public Builder(MonitoringResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.consumerDestinations = defaults.consumerDestinations;
    	      this.producerDestinations = defaults.producerDestinations;
        }

        public Builder consumerDestinations(List<MonitoringDestinationResponse> consumerDestinations) {
            this.consumerDestinations = Objects.requireNonNull(consumerDestinations);
            return this;
        }
        public Builder consumerDestinations(MonitoringDestinationResponse... consumerDestinations) {
            return consumerDestinations(List.of(consumerDestinations));
        }
        public Builder producerDestinations(List<MonitoringDestinationResponse> producerDestinations) {
            this.producerDestinations = Objects.requireNonNull(producerDestinations);
            return this;
        }
        public Builder producerDestinations(MonitoringDestinationResponse... producerDestinations) {
            return producerDestinations(List.of(producerDestinations));
        }        public MonitoringResponse build() {
            return new MonitoringResponse(consumerDestinations, producerDestinations);
        }
    }
}
