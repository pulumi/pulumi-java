// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.contactcenterinsights.v1;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.contactcenterinsights.v1.enums.PhraseMatcherRoleMatch;
import com.pulumi.googlenative.contactcenterinsights.v1.enums.PhraseMatcherType;
import com.pulumi.googlenative.contactcenterinsights.v1.inputs.GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroupArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PhraseMatcherArgs extends com.pulumi.resources.ResourceArgs {

    public static final PhraseMatcherArgs Empty = new PhraseMatcherArgs();

    /**
     * Applies the phrase matcher only when it is active.
     * 
     */
    @Import(name="active")
    private @Nullable Output<Boolean> active;

    /**
     * @return Applies the phrase matcher only when it is active.
     * 
     */
    public Optional<Output<Boolean>> active() {
        return Optional.ofNullable(this.active);
    }

    /**
     * The human-readable name of the phrase matcher.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return The human-readable name of the phrase matcher.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    @Import(name="location")
    private @Nullable Output<String> location;

    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * The resource name of the phrase matcher. Format: projects/{project}/locations/{location}/phraseMatchers/{phrase_matcher}
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The resource name of the phrase matcher. Format: projects/{project}/locations/{location}/phraseMatchers/{phrase_matcher}
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * A list of phase match rule groups that are included in this matcher.
     * 
     */
    @Import(name="phraseMatchRuleGroups")
    private @Nullable Output<List<GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroupArgs>> phraseMatchRuleGroups;

    /**
     * @return A list of phase match rule groups that are included in this matcher.
     * 
     */
    public Optional<Output<List<GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroupArgs>>> phraseMatchRuleGroups() {
        return Optional.ofNullable(this.phraseMatchRuleGroups);
    }

    @Import(name="project")
    private @Nullable Output<String> project;

    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * The role whose utterances the phrase matcher should be matched against. If the role is ROLE_UNSPECIFIED it will be matched against any utterances in the transcript.
     * 
     */
    @Import(name="roleMatch")
    private @Nullable Output<PhraseMatcherRoleMatch> roleMatch;

    /**
     * @return The role whose utterances the phrase matcher should be matched against. If the role is ROLE_UNSPECIFIED it will be matched against any utterances in the transcript.
     * 
     */
    public Optional<Output<PhraseMatcherRoleMatch>> roleMatch() {
        return Optional.ofNullable(this.roleMatch);
    }

    /**
     * The type of this phrase matcher.
     * 
     */
    @Import(name="type", required=true)
    private Output<PhraseMatcherType> type;

    /**
     * @return The type of this phrase matcher.
     * 
     */
    public Output<PhraseMatcherType> type() {
        return this.type;
    }

    /**
     * The customized version tag to use for the phrase matcher. If not specified, it will default to `revision_id`.
     * 
     */
    @Import(name="versionTag")
    private @Nullable Output<String> versionTag;

    /**
     * @return The customized version tag to use for the phrase matcher. If not specified, it will default to `revision_id`.
     * 
     */
    public Optional<Output<String>> versionTag() {
        return Optional.ofNullable(this.versionTag);
    }

    private PhraseMatcherArgs() {}

    private PhraseMatcherArgs(PhraseMatcherArgs $) {
        this.active = $.active;
        this.displayName = $.displayName;
        this.location = $.location;
        this.name = $.name;
        this.phraseMatchRuleGroups = $.phraseMatchRuleGroups;
        this.project = $.project;
        this.roleMatch = $.roleMatch;
        this.type = $.type;
        this.versionTag = $.versionTag;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PhraseMatcherArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PhraseMatcherArgs $;

        public Builder() {
            $ = new PhraseMatcherArgs();
        }

        public Builder(PhraseMatcherArgs defaults) {
            $ = new PhraseMatcherArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param active Applies the phrase matcher only when it is active.
         * 
         * @return builder
         * 
         */
        public Builder active(@Nullable Output<Boolean> active) {
            $.active = active;
            return this;
        }

        /**
         * @param active Applies the phrase matcher only when it is active.
         * 
         * @return builder
         * 
         */
        public Builder active(Boolean active) {
            return active(Output.of(active));
        }

        /**
         * @param displayName The human-readable name of the phrase matcher.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName The human-readable name of the phrase matcher.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param name The resource name of the phrase matcher. Format: projects/{project}/locations/{location}/phraseMatchers/{phrase_matcher}
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The resource name of the phrase matcher. Format: projects/{project}/locations/{location}/phraseMatchers/{phrase_matcher}
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param phraseMatchRuleGroups A list of phase match rule groups that are included in this matcher.
         * 
         * @return builder
         * 
         */
        public Builder phraseMatchRuleGroups(@Nullable Output<List<GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroupArgs>> phraseMatchRuleGroups) {
            $.phraseMatchRuleGroups = phraseMatchRuleGroups;
            return this;
        }

        /**
         * @param phraseMatchRuleGroups A list of phase match rule groups that are included in this matcher.
         * 
         * @return builder
         * 
         */
        public Builder phraseMatchRuleGroups(List<GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroupArgs> phraseMatchRuleGroups) {
            return phraseMatchRuleGroups(Output.of(phraseMatchRuleGroups));
        }

        /**
         * @param phraseMatchRuleGroups A list of phase match rule groups that are included in this matcher.
         * 
         * @return builder
         * 
         */
        public Builder phraseMatchRuleGroups(GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroupArgs... phraseMatchRuleGroups) {
            return phraseMatchRuleGroups(List.of(phraseMatchRuleGroups));
        }

        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        public Builder project(String project) {
            return project(Output.of(project));
        }

        /**
         * @param roleMatch The role whose utterances the phrase matcher should be matched against. If the role is ROLE_UNSPECIFIED it will be matched against any utterances in the transcript.
         * 
         * @return builder
         * 
         */
        public Builder roleMatch(@Nullable Output<PhraseMatcherRoleMatch> roleMatch) {
            $.roleMatch = roleMatch;
            return this;
        }

        /**
         * @param roleMatch The role whose utterances the phrase matcher should be matched against. If the role is ROLE_UNSPECIFIED it will be matched against any utterances in the transcript.
         * 
         * @return builder
         * 
         */
        public Builder roleMatch(PhraseMatcherRoleMatch roleMatch) {
            return roleMatch(Output.of(roleMatch));
        }

        /**
         * @param type The type of this phrase matcher.
         * 
         * @return builder
         * 
         */
        public Builder type(Output<PhraseMatcherType> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type The type of this phrase matcher.
         * 
         * @return builder
         * 
         */
        public Builder type(PhraseMatcherType type) {
            return type(Output.of(type));
        }

        /**
         * @param versionTag The customized version tag to use for the phrase matcher. If not specified, it will default to `revision_id`.
         * 
         * @return builder
         * 
         */
        public Builder versionTag(@Nullable Output<String> versionTag) {
            $.versionTag = versionTag;
            return this;
        }

        /**
         * @param versionTag The customized version tag to use for the phrase matcher. If not specified, it will default to `revision_id`.
         * 
         * @return builder
         * 
         */
        public Builder versionTag(String versionTag) {
            return versionTag(Output.of(versionTag));
        }

        public PhraseMatcherArgs build() {
            $.type = Objects.requireNonNull($.type, "expected parameter 'type' to be non-null");
            return $;
        }
    }

}
