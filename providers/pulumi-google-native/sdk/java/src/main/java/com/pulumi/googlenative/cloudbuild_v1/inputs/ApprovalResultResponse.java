// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.cloudbuild_v1.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * ApprovalResult describes the decision and associated metadata of a manual approval of a build.
 * 
 */
public final class ApprovalResultResponse extends com.pulumi.resources.InvokeArgs {

    public static final ApprovalResultResponse Empty = new ApprovalResultResponse();

    /**
     * The time when the approval decision was made.
     * 
     */
    @Import(name="approvalTime", required=true)
    private String approvalTime;

    /**
     * @return The time when the approval decision was made.
     * 
     */
    public String approvalTime() {
        return this.approvalTime;
    }

    /**
     * Email of the user that called the ApproveBuild API to approve or reject a build at the time that the API was called.
     * 
     */
    @Import(name="approverAccount", required=true)
    private String approverAccount;

    /**
     * @return Email of the user that called the ApproveBuild API to approve or reject a build at the time that the API was called.
     * 
     */
    public String approverAccount() {
        return this.approverAccount;
    }

    /**
     * Optional. An optional comment for this manual approval result.
     * 
     */
    @Import(name="comment", required=true)
    private String comment;

    /**
     * @return Optional. An optional comment for this manual approval result.
     * 
     */
    public String comment() {
        return this.comment;
    }

    /**
     * The decision of this manual approval.
     * 
     */
    @Import(name="decision", required=true)
    private String decision;

    /**
     * @return The decision of this manual approval.
     * 
     */
    public String decision() {
        return this.decision;
    }

    /**
     * Optional. An optional URL tied to this manual approval result. This field is essentially the same as comment, except that it will be rendered by the UI differently. An example use case is a link to an external job that approved this Build.
     * 
     */
    @Import(name="url", required=true)
    private String url;

    /**
     * @return Optional. An optional URL tied to this manual approval result. This field is essentially the same as comment, except that it will be rendered by the UI differently. An example use case is a link to an external job that approved this Build.
     * 
     */
    public String url() {
        return this.url;
    }

    private ApprovalResultResponse() {}

    private ApprovalResultResponse(ApprovalResultResponse $) {
        this.approvalTime = $.approvalTime;
        this.approverAccount = $.approverAccount;
        this.comment = $.comment;
        this.decision = $.decision;
        this.url = $.url;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ApprovalResultResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApprovalResultResponse $;

        public Builder() {
            $ = new ApprovalResultResponse();
        }

        public Builder(ApprovalResultResponse defaults) {
            $ = new ApprovalResultResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param approvalTime The time when the approval decision was made.
         * 
         * @return builder
         * 
         */
        public Builder approvalTime(String approvalTime) {
            $.approvalTime = approvalTime;
            return this;
        }

        /**
         * @param approverAccount Email of the user that called the ApproveBuild API to approve or reject a build at the time that the API was called.
         * 
         * @return builder
         * 
         */
        public Builder approverAccount(String approverAccount) {
            $.approverAccount = approverAccount;
            return this;
        }

        /**
         * @param comment Optional. An optional comment for this manual approval result.
         * 
         * @return builder
         * 
         */
        public Builder comment(String comment) {
            $.comment = comment;
            return this;
        }

        /**
         * @param decision The decision of this manual approval.
         * 
         * @return builder
         * 
         */
        public Builder decision(String decision) {
            $.decision = decision;
            return this;
        }

        /**
         * @param url Optional. An optional URL tied to this manual approval result. This field is essentially the same as comment, except that it will be rendered by the UI differently. An example use case is a link to an external job that approved this Build.
         * 
         * @return builder
         * 
         */
        public Builder url(String url) {
            $.url = url;
            return this;
        }

        public ApprovalResultResponse build() {
            $.approvalTime = Objects.requireNonNull($.approvalTime, "expected parameter 'approvalTime' to be non-null");
            $.approverAccount = Objects.requireNonNull($.approverAccount, "expected parameter 'approverAccount' to be non-null");
            $.comment = Objects.requireNonNull($.comment, "expected parameter 'comment' to be non-null");
            $.decision = Objects.requireNonNull($.decision, "expected parameter 'decision' to be non-null");
            $.url = Objects.requireNonNull($.url, "expected parameter 'url' to be non-null");
            return $;
        }
    }

}
