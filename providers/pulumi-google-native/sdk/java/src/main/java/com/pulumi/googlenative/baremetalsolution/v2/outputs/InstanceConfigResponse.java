// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.baremetalsolution.v2.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.googlenative.baremetalsolution.v2.outputs.GoogleCloudBaremetalsolutionV2LogicalInterfaceResponse;
import com.pulumi.googlenative.baremetalsolution.v2.outputs.NetworkAddressResponse;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class InstanceConfigResponse {
    /**
     * @return If true networks can be from different projects of the same vendor account.
     * 
     */
    private final Boolean accountNetworksEnabled;
    /**
     * @return Client network address. Filled if InstanceConfig.multivlan_config is false.
     * 
     */
    private final NetworkAddressResponse clientNetwork;
    /**
     * @return Whether the instance should be provisioned with Hyperthreading enabled.
     * 
     */
    private final Boolean hyperthreading;
    /**
     * @return Instance type. [Available types](https://cloud.google.com/bare-metal/docs/bms-planning#server_configurations)
     * 
     */
    private final String instanceType;
    /**
     * @return List of logical interfaces for the instance. The number of logical interfaces will be the same as number of hardware bond/nic on the chosen network template. Filled if InstanceConfig.multivlan_config is true.
     * 
     */
    private final List<GoogleCloudBaremetalsolutionV2LogicalInterfaceResponse> logicalInterfaces;
    /**
     * @return The name of the instance config.
     * 
     */
    private final String name;
    /**
     * @return The type of network configuration on the instance.
     * 
     */
    private final String networkConfig;
    /**
     * @return Server network template name. Filled if InstanceConfig.multivlan_config is true.
     * 
     */
    private final String networkTemplate;
    /**
     * @return OS image to initialize the instance. [Available images](https://cloud.google.com/bare-metal/docs/bms-planning#server_configurations)
     * 
     */
    private final String osImage;
    /**
     * @return Private network address, if any. Filled if InstanceConfig.multivlan_config is false.
     * 
     */
    private final NetworkAddressResponse privateNetwork;
    /**
     * @return User note field, it can be used by customers to add additional information for the BMS Ops team .
     * 
     */
    private final String userNote;

    @CustomType.Constructor
    private InstanceConfigResponse(
        @CustomType.Parameter("accountNetworksEnabled") Boolean accountNetworksEnabled,
        @CustomType.Parameter("clientNetwork") NetworkAddressResponse clientNetwork,
        @CustomType.Parameter("hyperthreading") Boolean hyperthreading,
        @CustomType.Parameter("instanceType") String instanceType,
        @CustomType.Parameter("logicalInterfaces") List<GoogleCloudBaremetalsolutionV2LogicalInterfaceResponse> logicalInterfaces,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("networkConfig") String networkConfig,
        @CustomType.Parameter("networkTemplate") String networkTemplate,
        @CustomType.Parameter("osImage") String osImage,
        @CustomType.Parameter("privateNetwork") NetworkAddressResponse privateNetwork,
        @CustomType.Parameter("userNote") String userNote) {
        this.accountNetworksEnabled = accountNetworksEnabled;
        this.clientNetwork = clientNetwork;
        this.hyperthreading = hyperthreading;
        this.instanceType = instanceType;
        this.logicalInterfaces = logicalInterfaces;
        this.name = name;
        this.networkConfig = networkConfig;
        this.networkTemplate = networkTemplate;
        this.osImage = osImage;
        this.privateNetwork = privateNetwork;
        this.userNote = userNote;
    }

    /**
     * @return If true networks can be from different projects of the same vendor account.
     * 
     */
    public Boolean accountNetworksEnabled() {
        return this.accountNetworksEnabled;
    }
    /**
     * @return Client network address. Filled if InstanceConfig.multivlan_config is false.
     * 
     */
    public NetworkAddressResponse clientNetwork() {
        return this.clientNetwork;
    }
    /**
     * @return Whether the instance should be provisioned with Hyperthreading enabled.
     * 
     */
    public Boolean hyperthreading() {
        return this.hyperthreading;
    }
    /**
     * @return Instance type. [Available types](https://cloud.google.com/bare-metal/docs/bms-planning#server_configurations)
     * 
     */
    public String instanceType() {
        return this.instanceType;
    }
    /**
     * @return List of logical interfaces for the instance. The number of logical interfaces will be the same as number of hardware bond/nic on the chosen network template. Filled if InstanceConfig.multivlan_config is true.
     * 
     */
    public List<GoogleCloudBaremetalsolutionV2LogicalInterfaceResponse> logicalInterfaces() {
        return this.logicalInterfaces;
    }
    /**
     * @return The name of the instance config.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The type of network configuration on the instance.
     * 
     */
    public String networkConfig() {
        return this.networkConfig;
    }
    /**
     * @return Server network template name. Filled if InstanceConfig.multivlan_config is true.
     * 
     */
    public String networkTemplate() {
        return this.networkTemplate;
    }
    /**
     * @return OS image to initialize the instance. [Available images](https://cloud.google.com/bare-metal/docs/bms-planning#server_configurations)
     * 
     */
    public String osImage() {
        return this.osImage;
    }
    /**
     * @return Private network address, if any. Filled if InstanceConfig.multivlan_config is false.
     * 
     */
    public NetworkAddressResponse privateNetwork() {
        return this.privateNetwork;
    }
    /**
     * @return User note field, it can be used by customers to add additional information for the BMS Ops team .
     * 
     */
    public String userNote() {
        return this.userNote;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(InstanceConfigResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Boolean accountNetworksEnabled;
        private NetworkAddressResponse clientNetwork;
        private Boolean hyperthreading;
        private String instanceType;
        private List<GoogleCloudBaremetalsolutionV2LogicalInterfaceResponse> logicalInterfaces;
        private String name;
        private String networkConfig;
        private String networkTemplate;
        private String osImage;
        private NetworkAddressResponse privateNetwork;
        private String userNote;

        public Builder() {
    	      // Empty
        }

        public Builder(InstanceConfigResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountNetworksEnabled = defaults.accountNetworksEnabled;
    	      this.clientNetwork = defaults.clientNetwork;
    	      this.hyperthreading = defaults.hyperthreading;
    	      this.instanceType = defaults.instanceType;
    	      this.logicalInterfaces = defaults.logicalInterfaces;
    	      this.name = defaults.name;
    	      this.networkConfig = defaults.networkConfig;
    	      this.networkTemplate = defaults.networkTemplate;
    	      this.osImage = defaults.osImage;
    	      this.privateNetwork = defaults.privateNetwork;
    	      this.userNote = defaults.userNote;
        }

        public Builder accountNetworksEnabled(Boolean accountNetworksEnabled) {
            this.accountNetworksEnabled = Objects.requireNonNull(accountNetworksEnabled);
            return this;
        }
        public Builder clientNetwork(NetworkAddressResponse clientNetwork) {
            this.clientNetwork = Objects.requireNonNull(clientNetwork);
            return this;
        }
        public Builder hyperthreading(Boolean hyperthreading) {
            this.hyperthreading = Objects.requireNonNull(hyperthreading);
            return this;
        }
        public Builder instanceType(String instanceType) {
            this.instanceType = Objects.requireNonNull(instanceType);
            return this;
        }
        public Builder logicalInterfaces(List<GoogleCloudBaremetalsolutionV2LogicalInterfaceResponse> logicalInterfaces) {
            this.logicalInterfaces = Objects.requireNonNull(logicalInterfaces);
            return this;
        }
        public Builder logicalInterfaces(GoogleCloudBaremetalsolutionV2LogicalInterfaceResponse... logicalInterfaces) {
            return logicalInterfaces(List.of(logicalInterfaces));
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder networkConfig(String networkConfig) {
            this.networkConfig = Objects.requireNonNull(networkConfig);
            return this;
        }
        public Builder networkTemplate(String networkTemplate) {
            this.networkTemplate = Objects.requireNonNull(networkTemplate);
            return this;
        }
        public Builder osImage(String osImage) {
            this.osImage = Objects.requireNonNull(osImage);
            return this;
        }
        public Builder privateNetwork(NetworkAddressResponse privateNetwork) {
            this.privateNetwork = Objects.requireNonNull(privateNetwork);
            return this;
        }
        public Builder userNote(String userNote) {
            this.userNote = Objects.requireNonNull(userNote);
            return this;
        }        public InstanceConfigResponse build() {
            return new InstanceConfigResponse(accountNetworksEnabled, clientNetwork, hyperthreading, instanceType, logicalInterfaces, name, networkConfig, networkTemplate, osImage, privateNetwork, userNote);
        }
    }
}
