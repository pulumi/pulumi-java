// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.compute_v1;

import com.pulumi.core.TypeShape;
import com.pulumi.deployment.Deployment;
import com.pulumi.deployment.InvokeOptions;
import com.pulumi.googlenative.Utilities;
import com.pulumi.googlenative.compute_v1.inputs.GetAddressArgs;
import com.pulumi.googlenative.compute_v1.inputs.GetAutoscalerArgs;
import com.pulumi.googlenative.compute_v1.inputs.GetBackendBucketArgs;
import com.pulumi.googlenative.compute_v1.inputs.GetBackendServiceArgs;
import com.pulumi.googlenative.compute_v1.inputs.GetDiskArgs;
import com.pulumi.googlenative.compute_v1.inputs.GetDiskIamPolicyArgs;
import com.pulumi.googlenative.compute_v1.inputs.GetExternalVpnGatewayArgs;
import com.pulumi.googlenative.compute_v1.inputs.GetFirewallArgs;
import com.pulumi.googlenative.compute_v1.inputs.GetFirewallPolicyArgs;
import com.pulumi.googlenative.compute_v1.inputs.GetFirewallPolicyIamPolicyArgs;
import com.pulumi.googlenative.compute_v1.inputs.GetForwardingRuleArgs;
import com.pulumi.googlenative.compute_v1.inputs.GetGlobalAddressArgs;
import com.pulumi.googlenative.compute_v1.inputs.GetGlobalForwardingRuleArgs;
import com.pulumi.googlenative.compute_v1.inputs.GetGlobalNetworkEndpointGroupArgs;
import com.pulumi.googlenative.compute_v1.inputs.GetGlobalPublicDelegatedPrefixArgs;
import com.pulumi.googlenative.compute_v1.inputs.GetHealthCheckArgs;
import com.pulumi.googlenative.compute_v1.inputs.GetHttpHealthCheckArgs;
import com.pulumi.googlenative.compute_v1.inputs.GetHttpsHealthCheckArgs;
import com.pulumi.googlenative.compute_v1.inputs.GetImageArgs;
import com.pulumi.googlenative.compute_v1.inputs.GetImageIamPolicyArgs;
import com.pulumi.googlenative.compute_v1.inputs.GetInstanceArgs;
import com.pulumi.googlenative.compute_v1.inputs.GetInstanceGroupArgs;
import com.pulumi.googlenative.compute_v1.inputs.GetInstanceGroupManagerArgs;
import com.pulumi.googlenative.compute_v1.inputs.GetInstanceIamPolicyArgs;
import com.pulumi.googlenative.compute_v1.inputs.GetInstanceTemplateArgs;
import com.pulumi.googlenative.compute_v1.inputs.GetInstanceTemplateIamPolicyArgs;
import com.pulumi.googlenative.compute_v1.inputs.GetInterconnectArgs;
import com.pulumi.googlenative.compute_v1.inputs.GetInterconnectAttachmentArgs;
import com.pulumi.googlenative.compute_v1.inputs.GetLicenseArgs;
import com.pulumi.googlenative.compute_v1.inputs.GetLicenseIamPolicyArgs;
import com.pulumi.googlenative.compute_v1.inputs.GetMachineImageArgs;
import com.pulumi.googlenative.compute_v1.inputs.GetMachineImageIamPolicyArgs;
import com.pulumi.googlenative.compute_v1.inputs.GetNetworkArgs;
import com.pulumi.googlenative.compute_v1.inputs.GetNetworkEndpointGroupArgs;
import com.pulumi.googlenative.compute_v1.inputs.GetNodeGroupArgs;
import com.pulumi.googlenative.compute_v1.inputs.GetNodeGroupIamPolicyArgs;
import com.pulumi.googlenative.compute_v1.inputs.GetNodeTemplateArgs;
import com.pulumi.googlenative.compute_v1.inputs.GetNodeTemplateIamPolicyArgs;
import com.pulumi.googlenative.compute_v1.inputs.GetPacketMirroringArgs;
import com.pulumi.googlenative.compute_v1.inputs.GetPublicAdvertisedPrefixArgs;
import com.pulumi.googlenative.compute_v1.inputs.GetPublicDelegatedPrefixArgs;
import com.pulumi.googlenative.compute_v1.inputs.GetRegionAutoscalerArgs;
import com.pulumi.googlenative.compute_v1.inputs.GetRegionBackendServiceArgs;
import com.pulumi.googlenative.compute_v1.inputs.GetRegionCommitmentArgs;
import com.pulumi.googlenative.compute_v1.inputs.GetRegionDiskArgs;
import com.pulumi.googlenative.compute_v1.inputs.GetRegionDiskIamPolicyArgs;
import com.pulumi.googlenative.compute_v1.inputs.GetRegionHealthCheckArgs;
import com.pulumi.googlenative.compute_v1.inputs.GetRegionHealthCheckServiceArgs;
import com.pulumi.googlenative.compute_v1.inputs.GetRegionInstanceGroupManagerArgs;
import com.pulumi.googlenative.compute_v1.inputs.GetRegionNetworkEndpointGroupArgs;
import com.pulumi.googlenative.compute_v1.inputs.GetRegionNotificationEndpointArgs;
import com.pulumi.googlenative.compute_v1.inputs.GetRegionSslCertificateArgs;
import com.pulumi.googlenative.compute_v1.inputs.GetRegionTargetHttpProxyArgs;
import com.pulumi.googlenative.compute_v1.inputs.GetRegionTargetHttpsProxyArgs;
import com.pulumi.googlenative.compute_v1.inputs.GetRegionUrlMapArgs;
import com.pulumi.googlenative.compute_v1.inputs.GetReservationArgs;
import com.pulumi.googlenative.compute_v1.inputs.GetReservationIamPolicyArgs;
import com.pulumi.googlenative.compute_v1.inputs.GetResourcePolicyArgs;
import com.pulumi.googlenative.compute_v1.inputs.GetResourcePolicyIamPolicyArgs;
import com.pulumi.googlenative.compute_v1.inputs.GetRouteArgs;
import com.pulumi.googlenative.compute_v1.inputs.GetRouterArgs;
import com.pulumi.googlenative.compute_v1.inputs.GetSecurityPolicyArgs;
import com.pulumi.googlenative.compute_v1.inputs.GetServiceAttachmentArgs;
import com.pulumi.googlenative.compute_v1.inputs.GetServiceAttachmentIamPolicyArgs;
import com.pulumi.googlenative.compute_v1.inputs.GetSnapshotArgs;
import com.pulumi.googlenative.compute_v1.inputs.GetSnapshotIamPolicyArgs;
import com.pulumi.googlenative.compute_v1.inputs.GetSslCertificateArgs;
import com.pulumi.googlenative.compute_v1.inputs.GetSslPolicyArgs;
import com.pulumi.googlenative.compute_v1.inputs.GetSubnetworkArgs;
import com.pulumi.googlenative.compute_v1.inputs.GetSubnetworkIamPolicyArgs;
import com.pulumi.googlenative.compute_v1.inputs.GetTargetGrpcProxyArgs;
import com.pulumi.googlenative.compute_v1.inputs.GetTargetHttpProxyArgs;
import com.pulumi.googlenative.compute_v1.inputs.GetTargetHttpsProxyArgs;
import com.pulumi.googlenative.compute_v1.inputs.GetTargetInstanceArgs;
import com.pulumi.googlenative.compute_v1.inputs.GetTargetPoolArgs;
import com.pulumi.googlenative.compute_v1.inputs.GetTargetSslProxyArgs;
import com.pulumi.googlenative.compute_v1.inputs.GetTargetTcpProxyArgs;
import com.pulumi.googlenative.compute_v1.inputs.GetTargetVpnGatewayArgs;
import com.pulumi.googlenative.compute_v1.inputs.GetUrlMapArgs;
import com.pulumi.googlenative.compute_v1.inputs.GetVpnGatewayArgs;
import com.pulumi.googlenative.compute_v1.inputs.GetVpnTunnelArgs;
import com.pulumi.googlenative.compute_v1.outputs.GetAddressResult;
import com.pulumi.googlenative.compute_v1.outputs.GetAutoscalerResult;
import com.pulumi.googlenative.compute_v1.outputs.GetBackendBucketResult;
import com.pulumi.googlenative.compute_v1.outputs.GetBackendServiceResult;
import com.pulumi.googlenative.compute_v1.outputs.GetDiskIamPolicyResult;
import com.pulumi.googlenative.compute_v1.outputs.GetDiskResult;
import com.pulumi.googlenative.compute_v1.outputs.GetExternalVpnGatewayResult;
import com.pulumi.googlenative.compute_v1.outputs.GetFirewallPolicyIamPolicyResult;
import com.pulumi.googlenative.compute_v1.outputs.GetFirewallPolicyResult;
import com.pulumi.googlenative.compute_v1.outputs.GetFirewallResult;
import com.pulumi.googlenative.compute_v1.outputs.GetForwardingRuleResult;
import com.pulumi.googlenative.compute_v1.outputs.GetGlobalAddressResult;
import com.pulumi.googlenative.compute_v1.outputs.GetGlobalForwardingRuleResult;
import com.pulumi.googlenative.compute_v1.outputs.GetGlobalNetworkEndpointGroupResult;
import com.pulumi.googlenative.compute_v1.outputs.GetGlobalPublicDelegatedPrefixResult;
import com.pulumi.googlenative.compute_v1.outputs.GetHealthCheckResult;
import com.pulumi.googlenative.compute_v1.outputs.GetHttpHealthCheckResult;
import com.pulumi.googlenative.compute_v1.outputs.GetHttpsHealthCheckResult;
import com.pulumi.googlenative.compute_v1.outputs.GetImageIamPolicyResult;
import com.pulumi.googlenative.compute_v1.outputs.GetImageResult;
import com.pulumi.googlenative.compute_v1.outputs.GetInstanceGroupManagerResult;
import com.pulumi.googlenative.compute_v1.outputs.GetInstanceGroupResult;
import com.pulumi.googlenative.compute_v1.outputs.GetInstanceIamPolicyResult;
import com.pulumi.googlenative.compute_v1.outputs.GetInstanceResult;
import com.pulumi.googlenative.compute_v1.outputs.GetInstanceTemplateIamPolicyResult;
import com.pulumi.googlenative.compute_v1.outputs.GetInstanceTemplateResult;
import com.pulumi.googlenative.compute_v1.outputs.GetInterconnectAttachmentResult;
import com.pulumi.googlenative.compute_v1.outputs.GetInterconnectResult;
import com.pulumi.googlenative.compute_v1.outputs.GetLicenseIamPolicyResult;
import com.pulumi.googlenative.compute_v1.outputs.GetLicenseResult;
import com.pulumi.googlenative.compute_v1.outputs.GetMachineImageIamPolicyResult;
import com.pulumi.googlenative.compute_v1.outputs.GetMachineImageResult;
import com.pulumi.googlenative.compute_v1.outputs.GetNetworkEndpointGroupResult;
import com.pulumi.googlenative.compute_v1.outputs.GetNetworkResult;
import com.pulumi.googlenative.compute_v1.outputs.GetNodeGroupIamPolicyResult;
import com.pulumi.googlenative.compute_v1.outputs.GetNodeGroupResult;
import com.pulumi.googlenative.compute_v1.outputs.GetNodeTemplateIamPolicyResult;
import com.pulumi.googlenative.compute_v1.outputs.GetNodeTemplateResult;
import com.pulumi.googlenative.compute_v1.outputs.GetPacketMirroringResult;
import com.pulumi.googlenative.compute_v1.outputs.GetPublicAdvertisedPrefixResult;
import com.pulumi.googlenative.compute_v1.outputs.GetPublicDelegatedPrefixResult;
import com.pulumi.googlenative.compute_v1.outputs.GetRegionAutoscalerResult;
import com.pulumi.googlenative.compute_v1.outputs.GetRegionBackendServiceResult;
import com.pulumi.googlenative.compute_v1.outputs.GetRegionCommitmentResult;
import com.pulumi.googlenative.compute_v1.outputs.GetRegionDiskIamPolicyResult;
import com.pulumi.googlenative.compute_v1.outputs.GetRegionDiskResult;
import com.pulumi.googlenative.compute_v1.outputs.GetRegionHealthCheckResult;
import com.pulumi.googlenative.compute_v1.outputs.GetRegionHealthCheckServiceResult;
import com.pulumi.googlenative.compute_v1.outputs.GetRegionInstanceGroupManagerResult;
import com.pulumi.googlenative.compute_v1.outputs.GetRegionNetworkEndpointGroupResult;
import com.pulumi.googlenative.compute_v1.outputs.GetRegionNotificationEndpointResult;
import com.pulumi.googlenative.compute_v1.outputs.GetRegionSslCertificateResult;
import com.pulumi.googlenative.compute_v1.outputs.GetRegionTargetHttpProxyResult;
import com.pulumi.googlenative.compute_v1.outputs.GetRegionTargetHttpsProxyResult;
import com.pulumi.googlenative.compute_v1.outputs.GetRegionUrlMapResult;
import com.pulumi.googlenative.compute_v1.outputs.GetReservationIamPolicyResult;
import com.pulumi.googlenative.compute_v1.outputs.GetReservationResult;
import com.pulumi.googlenative.compute_v1.outputs.GetResourcePolicyIamPolicyResult;
import com.pulumi.googlenative.compute_v1.outputs.GetResourcePolicyResult;
import com.pulumi.googlenative.compute_v1.outputs.GetRouteResult;
import com.pulumi.googlenative.compute_v1.outputs.GetRouterResult;
import com.pulumi.googlenative.compute_v1.outputs.GetSecurityPolicyResult;
import com.pulumi.googlenative.compute_v1.outputs.GetServiceAttachmentIamPolicyResult;
import com.pulumi.googlenative.compute_v1.outputs.GetServiceAttachmentResult;
import com.pulumi.googlenative.compute_v1.outputs.GetSnapshotIamPolicyResult;
import com.pulumi.googlenative.compute_v1.outputs.GetSnapshotResult;
import com.pulumi.googlenative.compute_v1.outputs.GetSslCertificateResult;
import com.pulumi.googlenative.compute_v1.outputs.GetSslPolicyResult;
import com.pulumi.googlenative.compute_v1.outputs.GetSubnetworkIamPolicyResult;
import com.pulumi.googlenative.compute_v1.outputs.GetSubnetworkResult;
import com.pulumi.googlenative.compute_v1.outputs.GetTargetGrpcProxyResult;
import com.pulumi.googlenative.compute_v1.outputs.GetTargetHttpProxyResult;
import com.pulumi.googlenative.compute_v1.outputs.GetTargetHttpsProxyResult;
import com.pulumi.googlenative.compute_v1.outputs.GetTargetInstanceResult;
import com.pulumi.googlenative.compute_v1.outputs.GetTargetPoolResult;
import com.pulumi.googlenative.compute_v1.outputs.GetTargetSslProxyResult;
import com.pulumi.googlenative.compute_v1.outputs.GetTargetTcpProxyResult;
import com.pulumi.googlenative.compute_v1.outputs.GetTargetVpnGatewayResult;
import com.pulumi.googlenative.compute_v1.outputs.GetUrlMapResult;
import com.pulumi.googlenative.compute_v1.outputs.GetVpnGatewayResult;
import com.pulumi.googlenative.compute_v1.outputs.GetVpnTunnelResult;
import java.util.concurrent.CompletableFuture;

public final class Compute_v1Functions {
    /**
     * Returns the specified address resource.
     * 
     */
    public static CompletableFuture<GetAddressResult> getAddress(GetAddressArgs args) {
        return getAddress(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetAddressResult> getAddress(GetAddressArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("google-native:compute/v1:getAddress", TypeShape.of(GetAddressResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Returns the specified autoscaler resource. Gets a list of available autoscalers by making a list() request.
     * 
     */
    public static CompletableFuture<GetAutoscalerResult> getAutoscaler(GetAutoscalerArgs args) {
        return getAutoscaler(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetAutoscalerResult> getAutoscaler(GetAutoscalerArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("google-native:compute/v1:getAutoscaler", TypeShape.of(GetAutoscalerResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Returns the specified BackendBucket resource. Gets a list of available backend buckets by making a list() request.
     * 
     */
    public static CompletableFuture<GetBackendBucketResult> getBackendBucket(GetBackendBucketArgs args) {
        return getBackendBucket(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetBackendBucketResult> getBackendBucket(GetBackendBucketArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("google-native:compute/v1:getBackendBucket", TypeShape.of(GetBackendBucketResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Returns the specified BackendService resource. Gets a list of available backend services.
     * 
     */
    public static CompletableFuture<GetBackendServiceResult> getBackendService(GetBackendServiceArgs args) {
        return getBackendService(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetBackendServiceResult> getBackendService(GetBackendServiceArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("google-native:compute/v1:getBackendService", TypeShape.of(GetBackendServiceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Returns a specified persistent disk. Gets a list of available persistent disks by making a list() request.
     * 
     */
    public static CompletableFuture<GetDiskResult> getDisk(GetDiskArgs args) {
        return getDisk(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetDiskResult> getDisk(GetDiskArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("google-native:compute/v1:getDisk", TypeShape.of(GetDiskResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets the access control policy for a resource. May be empty if no such policy or resource exists.
     * 
     */
    public static CompletableFuture<GetDiskIamPolicyResult> getDiskIamPolicy(GetDiskIamPolicyArgs args) {
        return getDiskIamPolicy(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetDiskIamPolicyResult> getDiskIamPolicy(GetDiskIamPolicyArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("google-native:compute/v1:getDiskIamPolicy", TypeShape.of(GetDiskIamPolicyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Returns the specified externalVpnGateway. Get a list of available externalVpnGateways by making a list() request.
     * 
     */
    public static CompletableFuture<GetExternalVpnGatewayResult> getExternalVpnGateway(GetExternalVpnGatewayArgs args) {
        return getExternalVpnGateway(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetExternalVpnGatewayResult> getExternalVpnGateway(GetExternalVpnGatewayArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("google-native:compute/v1:getExternalVpnGateway", TypeShape.of(GetExternalVpnGatewayResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Returns the specified firewall.
     * 
     */
    public static CompletableFuture<GetFirewallResult> getFirewall(GetFirewallArgs args) {
        return getFirewall(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetFirewallResult> getFirewall(GetFirewallArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("google-native:compute/v1:getFirewall", TypeShape.of(GetFirewallResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Returns the specified firewall policy.
     * 
     */
    public static CompletableFuture<GetFirewallPolicyResult> getFirewallPolicy(GetFirewallPolicyArgs args) {
        return getFirewallPolicy(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetFirewallPolicyResult> getFirewallPolicy(GetFirewallPolicyArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("google-native:compute/v1:getFirewallPolicy", TypeShape.of(GetFirewallPolicyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets the access control policy for a resource. May be empty if no such policy or resource exists.
     * 
     */
    public static CompletableFuture<GetFirewallPolicyIamPolicyResult> getFirewallPolicyIamPolicy(GetFirewallPolicyIamPolicyArgs args) {
        return getFirewallPolicyIamPolicy(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetFirewallPolicyIamPolicyResult> getFirewallPolicyIamPolicy(GetFirewallPolicyIamPolicyArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("google-native:compute/v1:getFirewallPolicyIamPolicy", TypeShape.of(GetFirewallPolicyIamPolicyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Returns the specified ForwardingRule resource.
     * 
     */
    public static CompletableFuture<GetForwardingRuleResult> getForwardingRule(GetForwardingRuleArgs args) {
        return getForwardingRule(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetForwardingRuleResult> getForwardingRule(GetForwardingRuleArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("google-native:compute/v1:getForwardingRule", TypeShape.of(GetForwardingRuleResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Returns the specified address resource. Gets a list of available addresses by making a list() request.
     * 
     */
    public static CompletableFuture<GetGlobalAddressResult> getGlobalAddress(GetGlobalAddressArgs args) {
        return getGlobalAddress(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetGlobalAddressResult> getGlobalAddress(GetGlobalAddressArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("google-native:compute/v1:getGlobalAddress", TypeShape.of(GetGlobalAddressResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Returns the specified GlobalForwardingRule resource. Gets a list of available forwarding rules by making a list() request.
     * 
     */
    public static CompletableFuture<GetGlobalForwardingRuleResult> getGlobalForwardingRule(GetGlobalForwardingRuleArgs args) {
        return getGlobalForwardingRule(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetGlobalForwardingRuleResult> getGlobalForwardingRule(GetGlobalForwardingRuleArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("google-native:compute/v1:getGlobalForwardingRule", TypeShape.of(GetGlobalForwardingRuleResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Returns the specified network endpoint group. Gets a list of available network endpoint groups by making a list() request.
     * 
     */
    public static CompletableFuture<GetGlobalNetworkEndpointGroupResult> getGlobalNetworkEndpointGroup(GetGlobalNetworkEndpointGroupArgs args) {
        return getGlobalNetworkEndpointGroup(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetGlobalNetworkEndpointGroupResult> getGlobalNetworkEndpointGroup(GetGlobalNetworkEndpointGroupArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("google-native:compute/v1:getGlobalNetworkEndpointGroup", TypeShape.of(GetGlobalNetworkEndpointGroupResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Returns the specified global PublicDelegatedPrefix resource.
     * 
     */
    public static CompletableFuture<GetGlobalPublicDelegatedPrefixResult> getGlobalPublicDelegatedPrefix(GetGlobalPublicDelegatedPrefixArgs args) {
        return getGlobalPublicDelegatedPrefix(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetGlobalPublicDelegatedPrefixResult> getGlobalPublicDelegatedPrefix(GetGlobalPublicDelegatedPrefixArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("google-native:compute/v1:getGlobalPublicDelegatedPrefix", TypeShape.of(GetGlobalPublicDelegatedPrefixResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Returns the specified HealthCheck resource. Gets a list of available health checks by making a list() request.
     * 
     */
    public static CompletableFuture<GetHealthCheckResult> getHealthCheck(GetHealthCheckArgs args) {
        return getHealthCheck(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetHealthCheckResult> getHealthCheck(GetHealthCheckArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("google-native:compute/v1:getHealthCheck", TypeShape.of(GetHealthCheckResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Returns the specified HttpHealthCheck resource. Gets a list of available HTTP health checks by making a list() request.
     * 
     */
    public static CompletableFuture<GetHttpHealthCheckResult> getHttpHealthCheck(GetHttpHealthCheckArgs args) {
        return getHttpHealthCheck(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetHttpHealthCheckResult> getHttpHealthCheck(GetHttpHealthCheckArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("google-native:compute/v1:getHttpHealthCheck", TypeShape.of(GetHttpHealthCheckResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Returns the specified HttpsHealthCheck resource. Gets a list of available HTTPS health checks by making a list() request.
     * 
     */
    public static CompletableFuture<GetHttpsHealthCheckResult> getHttpsHealthCheck(GetHttpsHealthCheckArgs args) {
        return getHttpsHealthCheck(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetHttpsHealthCheckResult> getHttpsHealthCheck(GetHttpsHealthCheckArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("google-native:compute/v1:getHttpsHealthCheck", TypeShape.of(GetHttpsHealthCheckResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Returns the specified image. Gets a list of available images by making a list() request.
     * 
     */
    public static CompletableFuture<GetImageResult> getImage(GetImageArgs args) {
        return getImage(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetImageResult> getImage(GetImageArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("google-native:compute/v1:getImage", TypeShape.of(GetImageResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets the access control policy for a resource. May be empty if no such policy or resource exists.
     * 
     */
    public static CompletableFuture<GetImageIamPolicyResult> getImageIamPolicy(GetImageIamPolicyArgs args) {
        return getImageIamPolicy(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetImageIamPolicyResult> getImageIamPolicy(GetImageIamPolicyArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("google-native:compute/v1:getImageIamPolicy", TypeShape.of(GetImageIamPolicyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Returns the specified Instance resource. Gets a list of available instances by making a list() request.
     * 
     */
    public static CompletableFuture<GetInstanceResult> getInstance(GetInstanceArgs args) {
        return getInstance(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetInstanceResult> getInstance(GetInstanceArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("google-native:compute/v1:getInstance", TypeShape.of(GetInstanceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Returns the specified zonal instance group. Get a list of available zonal instance groups by making a list() request. For managed instance groups, use the instanceGroupManagers or regionInstanceGroupManagers methods instead.
     * 
     */
    public static CompletableFuture<GetInstanceGroupResult> getInstanceGroup(GetInstanceGroupArgs args) {
        return getInstanceGroup(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetInstanceGroupResult> getInstanceGroup(GetInstanceGroupArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("google-native:compute/v1:getInstanceGroup", TypeShape.of(GetInstanceGroupResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Returns all of the details about the specified managed instance group. Gets a list of available managed instance groups by making a list() request.
     * 
     */
    public static CompletableFuture<GetInstanceGroupManagerResult> getInstanceGroupManager(GetInstanceGroupManagerArgs args) {
        return getInstanceGroupManager(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetInstanceGroupManagerResult> getInstanceGroupManager(GetInstanceGroupManagerArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("google-native:compute/v1:getInstanceGroupManager", TypeShape.of(GetInstanceGroupManagerResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets the access control policy for a resource. May be empty if no such policy or resource exists.
     * 
     */
    public static CompletableFuture<GetInstanceIamPolicyResult> getInstanceIamPolicy(GetInstanceIamPolicyArgs args) {
        return getInstanceIamPolicy(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetInstanceIamPolicyResult> getInstanceIamPolicy(GetInstanceIamPolicyArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("google-native:compute/v1:getInstanceIamPolicy", TypeShape.of(GetInstanceIamPolicyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Returns the specified instance template. Gets a list of available instance templates by making a list() request.
     * 
     */
    public static CompletableFuture<GetInstanceTemplateResult> getInstanceTemplate(GetInstanceTemplateArgs args) {
        return getInstanceTemplate(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetInstanceTemplateResult> getInstanceTemplate(GetInstanceTemplateArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("google-native:compute/v1:getInstanceTemplate", TypeShape.of(GetInstanceTemplateResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets the access control policy for a resource. May be empty if no such policy or resource exists.
     * 
     */
    public static CompletableFuture<GetInstanceTemplateIamPolicyResult> getInstanceTemplateIamPolicy(GetInstanceTemplateIamPolicyArgs args) {
        return getInstanceTemplateIamPolicy(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetInstanceTemplateIamPolicyResult> getInstanceTemplateIamPolicy(GetInstanceTemplateIamPolicyArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("google-native:compute/v1:getInstanceTemplateIamPolicy", TypeShape.of(GetInstanceTemplateIamPolicyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Returns the specified interconnect. Get a list of available interconnects by making a list() request.
     * 
     */
    public static CompletableFuture<GetInterconnectResult> getInterconnect(GetInterconnectArgs args) {
        return getInterconnect(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetInterconnectResult> getInterconnect(GetInterconnectArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("google-native:compute/v1:getInterconnect", TypeShape.of(GetInterconnectResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Returns the specified interconnect attachment.
     * 
     */
    public static CompletableFuture<GetInterconnectAttachmentResult> getInterconnectAttachment(GetInterconnectAttachmentArgs args) {
        return getInterconnectAttachment(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetInterconnectAttachmentResult> getInterconnectAttachment(GetInterconnectAttachmentArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("google-native:compute/v1:getInterconnectAttachment", TypeShape.of(GetInterconnectAttachmentResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Returns the specified License resource. *Caution* This resource is intended for use only by third-party partners who are creating Cloud Marketplace images.
     * 
     */
    public static CompletableFuture<GetLicenseResult> getLicense(GetLicenseArgs args) {
        return getLicense(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetLicenseResult> getLicense(GetLicenseArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("google-native:compute/v1:getLicense", TypeShape.of(GetLicenseResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets the access control policy for a resource. May be empty if no such policy or resource exists. *Caution* This resource is intended for use only by third-party partners who are creating Cloud Marketplace images.
     * 
     */
    public static CompletableFuture<GetLicenseIamPolicyResult> getLicenseIamPolicy(GetLicenseIamPolicyArgs args) {
        return getLicenseIamPolicy(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetLicenseIamPolicyResult> getLicenseIamPolicy(GetLicenseIamPolicyArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("google-native:compute/v1:getLicenseIamPolicy", TypeShape.of(GetLicenseIamPolicyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Returns the specified machine image. Gets a list of available machine images by making a list() request.
     * 
     */
    public static CompletableFuture<GetMachineImageResult> getMachineImage(GetMachineImageArgs args) {
        return getMachineImage(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetMachineImageResult> getMachineImage(GetMachineImageArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("google-native:compute/v1:getMachineImage", TypeShape.of(GetMachineImageResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets the access control policy for a resource. May be empty if no such policy or resource exists.
     * 
     */
    public static CompletableFuture<GetMachineImageIamPolicyResult> getMachineImageIamPolicy(GetMachineImageIamPolicyArgs args) {
        return getMachineImageIamPolicy(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetMachineImageIamPolicyResult> getMachineImageIamPolicy(GetMachineImageIamPolicyArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("google-native:compute/v1:getMachineImageIamPolicy", TypeShape.of(GetMachineImageIamPolicyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Returns the specified network. Gets a list of available networks by making a list() request.
     * 
     */
    public static CompletableFuture<GetNetworkResult> getNetwork(GetNetworkArgs args) {
        return getNetwork(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetNetworkResult> getNetwork(GetNetworkArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("google-native:compute/v1:getNetwork", TypeShape.of(GetNetworkResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Returns the specified network endpoint group. Gets a list of available network endpoint groups by making a list() request.
     * 
     */
    public static CompletableFuture<GetNetworkEndpointGroupResult> getNetworkEndpointGroup(GetNetworkEndpointGroupArgs args) {
        return getNetworkEndpointGroup(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetNetworkEndpointGroupResult> getNetworkEndpointGroup(GetNetworkEndpointGroupArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("google-native:compute/v1:getNetworkEndpointGroup", TypeShape.of(GetNetworkEndpointGroupResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Returns the specified NodeGroup. Get a list of available NodeGroups by making a list() request. Note: the "nodes" field should not be used. Use nodeGroups.listNodes instead.
     * 
     */
    public static CompletableFuture<GetNodeGroupResult> getNodeGroup(GetNodeGroupArgs args) {
        return getNodeGroup(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetNodeGroupResult> getNodeGroup(GetNodeGroupArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("google-native:compute/v1:getNodeGroup", TypeShape.of(GetNodeGroupResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets the access control policy for a resource. May be empty if no such policy or resource exists.
     * 
     */
    public static CompletableFuture<GetNodeGroupIamPolicyResult> getNodeGroupIamPolicy(GetNodeGroupIamPolicyArgs args) {
        return getNodeGroupIamPolicy(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetNodeGroupIamPolicyResult> getNodeGroupIamPolicy(GetNodeGroupIamPolicyArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("google-native:compute/v1:getNodeGroupIamPolicy", TypeShape.of(GetNodeGroupIamPolicyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Returns the specified node template. Gets a list of available node templates by making a list() request.
     * 
     */
    public static CompletableFuture<GetNodeTemplateResult> getNodeTemplate(GetNodeTemplateArgs args) {
        return getNodeTemplate(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetNodeTemplateResult> getNodeTemplate(GetNodeTemplateArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("google-native:compute/v1:getNodeTemplate", TypeShape.of(GetNodeTemplateResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets the access control policy for a resource. May be empty if no such policy or resource exists.
     * 
     */
    public static CompletableFuture<GetNodeTemplateIamPolicyResult> getNodeTemplateIamPolicy(GetNodeTemplateIamPolicyArgs args) {
        return getNodeTemplateIamPolicy(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetNodeTemplateIamPolicyResult> getNodeTemplateIamPolicy(GetNodeTemplateIamPolicyArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("google-native:compute/v1:getNodeTemplateIamPolicy", TypeShape.of(GetNodeTemplateIamPolicyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Returns the specified PacketMirroring resource.
     * 
     */
    public static CompletableFuture<GetPacketMirroringResult> getPacketMirroring(GetPacketMirroringArgs args) {
        return getPacketMirroring(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetPacketMirroringResult> getPacketMirroring(GetPacketMirroringArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("google-native:compute/v1:getPacketMirroring", TypeShape.of(GetPacketMirroringResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Returns the specified PublicAdvertisedPrefix resource.
     * 
     */
    public static CompletableFuture<GetPublicAdvertisedPrefixResult> getPublicAdvertisedPrefix(GetPublicAdvertisedPrefixArgs args) {
        return getPublicAdvertisedPrefix(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetPublicAdvertisedPrefixResult> getPublicAdvertisedPrefix(GetPublicAdvertisedPrefixArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("google-native:compute/v1:getPublicAdvertisedPrefix", TypeShape.of(GetPublicAdvertisedPrefixResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Returns the specified PublicDelegatedPrefix resource in the given region.
     * 
     */
    public static CompletableFuture<GetPublicDelegatedPrefixResult> getPublicDelegatedPrefix(GetPublicDelegatedPrefixArgs args) {
        return getPublicDelegatedPrefix(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetPublicDelegatedPrefixResult> getPublicDelegatedPrefix(GetPublicDelegatedPrefixArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("google-native:compute/v1:getPublicDelegatedPrefix", TypeShape.of(GetPublicDelegatedPrefixResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Returns the specified autoscaler.
     * 
     */
    public static CompletableFuture<GetRegionAutoscalerResult> getRegionAutoscaler(GetRegionAutoscalerArgs args) {
        return getRegionAutoscaler(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetRegionAutoscalerResult> getRegionAutoscaler(GetRegionAutoscalerArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("google-native:compute/v1:getRegionAutoscaler", TypeShape.of(GetRegionAutoscalerResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Returns the specified regional BackendService resource.
     * 
     */
    public static CompletableFuture<GetRegionBackendServiceResult> getRegionBackendService(GetRegionBackendServiceArgs args) {
        return getRegionBackendService(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetRegionBackendServiceResult> getRegionBackendService(GetRegionBackendServiceArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("google-native:compute/v1:getRegionBackendService", TypeShape.of(GetRegionBackendServiceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Returns the specified commitment resource. Gets a list of available commitments by making a list() request.
     * 
     */
    public static CompletableFuture<GetRegionCommitmentResult> getRegionCommitment(GetRegionCommitmentArgs args) {
        return getRegionCommitment(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetRegionCommitmentResult> getRegionCommitment(GetRegionCommitmentArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("google-native:compute/v1:getRegionCommitment", TypeShape.of(GetRegionCommitmentResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Returns a specified regional persistent disk.
     * 
     */
    public static CompletableFuture<GetRegionDiskResult> getRegionDisk(GetRegionDiskArgs args) {
        return getRegionDisk(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetRegionDiskResult> getRegionDisk(GetRegionDiskArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("google-native:compute/v1:getRegionDisk", TypeShape.of(GetRegionDiskResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets the access control policy for a resource. May be empty if no such policy or resource exists.
     * 
     */
    public static CompletableFuture<GetRegionDiskIamPolicyResult> getRegionDiskIamPolicy(GetRegionDiskIamPolicyArgs args) {
        return getRegionDiskIamPolicy(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetRegionDiskIamPolicyResult> getRegionDiskIamPolicy(GetRegionDiskIamPolicyArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("google-native:compute/v1:getRegionDiskIamPolicy", TypeShape.of(GetRegionDiskIamPolicyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Returns the specified HealthCheck resource. Gets a list of available health checks by making a list() request.
     * 
     */
    public static CompletableFuture<GetRegionHealthCheckResult> getRegionHealthCheck(GetRegionHealthCheckArgs args) {
        return getRegionHealthCheck(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetRegionHealthCheckResult> getRegionHealthCheck(GetRegionHealthCheckArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("google-native:compute/v1:getRegionHealthCheck", TypeShape.of(GetRegionHealthCheckResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Returns the specified regional HealthCheckService resource.
     * 
     */
    public static CompletableFuture<GetRegionHealthCheckServiceResult> getRegionHealthCheckService(GetRegionHealthCheckServiceArgs args) {
        return getRegionHealthCheckService(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetRegionHealthCheckServiceResult> getRegionHealthCheckService(GetRegionHealthCheckServiceArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("google-native:compute/v1:getRegionHealthCheckService", TypeShape.of(GetRegionHealthCheckServiceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Returns all of the details about the specified managed instance group.
     * 
     */
    public static CompletableFuture<GetRegionInstanceGroupManagerResult> getRegionInstanceGroupManager(GetRegionInstanceGroupManagerArgs args) {
        return getRegionInstanceGroupManager(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetRegionInstanceGroupManagerResult> getRegionInstanceGroupManager(GetRegionInstanceGroupManagerArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("google-native:compute/v1:getRegionInstanceGroupManager", TypeShape.of(GetRegionInstanceGroupManagerResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Returns the specified network endpoint group. Gets a list of available network endpoint groups by making a list() request.
     * 
     */
    public static CompletableFuture<GetRegionNetworkEndpointGroupResult> getRegionNetworkEndpointGroup(GetRegionNetworkEndpointGroupArgs args) {
        return getRegionNetworkEndpointGroup(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetRegionNetworkEndpointGroupResult> getRegionNetworkEndpointGroup(GetRegionNetworkEndpointGroupArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("google-native:compute/v1:getRegionNetworkEndpointGroup", TypeShape.of(GetRegionNetworkEndpointGroupResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Returns the specified NotificationEndpoint resource in the given region.
     * 
     */
    public static CompletableFuture<GetRegionNotificationEndpointResult> getRegionNotificationEndpoint(GetRegionNotificationEndpointArgs args) {
        return getRegionNotificationEndpoint(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetRegionNotificationEndpointResult> getRegionNotificationEndpoint(GetRegionNotificationEndpointArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("google-native:compute/v1:getRegionNotificationEndpoint", TypeShape.of(GetRegionNotificationEndpointResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Returns the specified SslCertificate resource in the specified region. Get a list of available SSL certificates by making a list() request.
     * 
     */
    public static CompletableFuture<GetRegionSslCertificateResult> getRegionSslCertificate(GetRegionSslCertificateArgs args) {
        return getRegionSslCertificate(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetRegionSslCertificateResult> getRegionSslCertificate(GetRegionSslCertificateArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("google-native:compute/v1:getRegionSslCertificate", TypeShape.of(GetRegionSslCertificateResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Returns the specified TargetHttpProxy resource in the specified region. Gets a list of available target HTTP proxies by making a list() request.
     * 
     */
    public static CompletableFuture<GetRegionTargetHttpProxyResult> getRegionTargetHttpProxy(GetRegionTargetHttpProxyArgs args) {
        return getRegionTargetHttpProxy(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetRegionTargetHttpProxyResult> getRegionTargetHttpProxy(GetRegionTargetHttpProxyArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("google-native:compute/v1:getRegionTargetHttpProxy", TypeShape.of(GetRegionTargetHttpProxyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Returns the specified TargetHttpsProxy resource in the specified region. Gets a list of available target HTTP proxies by making a list() request.
     * 
     */
    public static CompletableFuture<GetRegionTargetHttpsProxyResult> getRegionTargetHttpsProxy(GetRegionTargetHttpsProxyArgs args) {
        return getRegionTargetHttpsProxy(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetRegionTargetHttpsProxyResult> getRegionTargetHttpsProxy(GetRegionTargetHttpsProxyArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("google-native:compute/v1:getRegionTargetHttpsProxy", TypeShape.of(GetRegionTargetHttpsProxyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Returns the specified UrlMap resource. Gets a list of available URL maps by making a list() request.
     * 
     */
    public static CompletableFuture<GetRegionUrlMapResult> getRegionUrlMap(GetRegionUrlMapArgs args) {
        return getRegionUrlMap(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetRegionUrlMapResult> getRegionUrlMap(GetRegionUrlMapArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("google-native:compute/v1:getRegionUrlMap", TypeShape.of(GetRegionUrlMapResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves information about the specified reservation.
     * 
     */
    public static CompletableFuture<GetReservationResult> getReservation(GetReservationArgs args) {
        return getReservation(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetReservationResult> getReservation(GetReservationArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("google-native:compute/v1:getReservation", TypeShape.of(GetReservationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets the access control policy for a resource. May be empty if no such policy or resource exists.
     * 
     */
    public static CompletableFuture<GetReservationIamPolicyResult> getReservationIamPolicy(GetReservationIamPolicyArgs args) {
        return getReservationIamPolicy(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetReservationIamPolicyResult> getReservationIamPolicy(GetReservationIamPolicyArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("google-native:compute/v1:getReservationIamPolicy", TypeShape.of(GetReservationIamPolicyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves all information of the specified resource policy.
     * 
     */
    public static CompletableFuture<GetResourcePolicyResult> getResourcePolicy(GetResourcePolicyArgs args) {
        return getResourcePolicy(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetResourcePolicyResult> getResourcePolicy(GetResourcePolicyArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("google-native:compute/v1:getResourcePolicy", TypeShape.of(GetResourcePolicyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets the access control policy for a resource. May be empty if no such policy or resource exists.
     * 
     */
    public static CompletableFuture<GetResourcePolicyIamPolicyResult> getResourcePolicyIamPolicy(GetResourcePolicyIamPolicyArgs args) {
        return getResourcePolicyIamPolicy(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetResourcePolicyIamPolicyResult> getResourcePolicyIamPolicy(GetResourcePolicyIamPolicyArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("google-native:compute/v1:getResourcePolicyIamPolicy", TypeShape.of(GetResourcePolicyIamPolicyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Returns the specified Route resource. Gets a list of available routes by making a list() request.
     * 
     */
    public static CompletableFuture<GetRouteResult> getRoute(GetRouteArgs args) {
        return getRoute(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetRouteResult> getRoute(GetRouteArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("google-native:compute/v1:getRoute", TypeShape.of(GetRouteResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Returns the specified Router resource. Gets a list of available routers by making a list() request.
     * 
     */
    public static CompletableFuture<GetRouterResult> getRouter(GetRouterArgs args) {
        return getRouter(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetRouterResult> getRouter(GetRouterArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("google-native:compute/v1:getRouter", TypeShape.of(GetRouterResult.class), args, Utilities.withVersion(options));
    }
    /**
     * List all of the ordered rules present in a single specified policy.
     * 
     */
    public static CompletableFuture<GetSecurityPolicyResult> getSecurityPolicy(GetSecurityPolicyArgs args) {
        return getSecurityPolicy(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetSecurityPolicyResult> getSecurityPolicy(GetSecurityPolicyArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("google-native:compute/v1:getSecurityPolicy", TypeShape.of(GetSecurityPolicyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Returns the specified ServiceAttachment resource in the given scope.
     * 
     */
    public static CompletableFuture<GetServiceAttachmentResult> getServiceAttachment(GetServiceAttachmentArgs args) {
        return getServiceAttachment(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetServiceAttachmentResult> getServiceAttachment(GetServiceAttachmentArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("google-native:compute/v1:getServiceAttachment", TypeShape.of(GetServiceAttachmentResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets the access control policy for a resource. May be empty if no such policy or resource exists.
     * 
     */
    public static CompletableFuture<GetServiceAttachmentIamPolicyResult> getServiceAttachmentIamPolicy(GetServiceAttachmentIamPolicyArgs args) {
        return getServiceAttachmentIamPolicy(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetServiceAttachmentIamPolicyResult> getServiceAttachmentIamPolicy(GetServiceAttachmentIamPolicyArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("google-native:compute/v1:getServiceAttachmentIamPolicy", TypeShape.of(GetServiceAttachmentIamPolicyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Returns the specified Snapshot resource. Gets a list of available snapshots by making a list() request.
     * 
     */
    public static CompletableFuture<GetSnapshotResult> getSnapshot(GetSnapshotArgs args) {
        return getSnapshot(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetSnapshotResult> getSnapshot(GetSnapshotArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("google-native:compute/v1:getSnapshot", TypeShape.of(GetSnapshotResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets the access control policy for a resource. May be empty if no such policy or resource exists.
     * 
     */
    public static CompletableFuture<GetSnapshotIamPolicyResult> getSnapshotIamPolicy(GetSnapshotIamPolicyArgs args) {
        return getSnapshotIamPolicy(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetSnapshotIamPolicyResult> getSnapshotIamPolicy(GetSnapshotIamPolicyArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("google-native:compute/v1:getSnapshotIamPolicy", TypeShape.of(GetSnapshotIamPolicyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Returns the specified SslCertificate resource. Gets a list of available SSL certificates by making a list() request.
     * 
     */
    public static CompletableFuture<GetSslCertificateResult> getSslCertificate(GetSslCertificateArgs args) {
        return getSslCertificate(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetSslCertificateResult> getSslCertificate(GetSslCertificateArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("google-native:compute/v1:getSslCertificate", TypeShape.of(GetSslCertificateResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Lists all of the ordered rules present in a single specified policy.
     * 
     */
    public static CompletableFuture<GetSslPolicyResult> getSslPolicy(GetSslPolicyArgs args) {
        return getSslPolicy(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetSslPolicyResult> getSslPolicy(GetSslPolicyArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("google-native:compute/v1:getSslPolicy", TypeShape.of(GetSslPolicyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Returns the specified subnetwork. Gets a list of available subnetworks list() request.
     * 
     */
    public static CompletableFuture<GetSubnetworkResult> getSubnetwork(GetSubnetworkArgs args) {
        return getSubnetwork(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetSubnetworkResult> getSubnetwork(GetSubnetworkArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("google-native:compute/v1:getSubnetwork", TypeShape.of(GetSubnetworkResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets the access control policy for a resource. May be empty if no such policy or resource exists.
     * 
     */
    public static CompletableFuture<GetSubnetworkIamPolicyResult> getSubnetworkIamPolicy(GetSubnetworkIamPolicyArgs args) {
        return getSubnetworkIamPolicy(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetSubnetworkIamPolicyResult> getSubnetworkIamPolicy(GetSubnetworkIamPolicyArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("google-native:compute/v1:getSubnetworkIamPolicy", TypeShape.of(GetSubnetworkIamPolicyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Returns the specified TargetGrpcProxy resource in the given scope.
     * 
     */
    public static CompletableFuture<GetTargetGrpcProxyResult> getTargetGrpcProxy(GetTargetGrpcProxyArgs args) {
        return getTargetGrpcProxy(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetTargetGrpcProxyResult> getTargetGrpcProxy(GetTargetGrpcProxyArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("google-native:compute/v1:getTargetGrpcProxy", TypeShape.of(GetTargetGrpcProxyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Returns the specified TargetHttpProxy resource. Gets a list of available target HTTP proxies by making a list() request.
     * 
     */
    public static CompletableFuture<GetTargetHttpProxyResult> getTargetHttpProxy(GetTargetHttpProxyArgs args) {
        return getTargetHttpProxy(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetTargetHttpProxyResult> getTargetHttpProxy(GetTargetHttpProxyArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("google-native:compute/v1:getTargetHttpProxy", TypeShape.of(GetTargetHttpProxyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Returns the specified TargetHttpsProxy resource. Gets a list of available target HTTPS proxies by making a list() request.
     * 
     */
    public static CompletableFuture<GetTargetHttpsProxyResult> getTargetHttpsProxy(GetTargetHttpsProxyArgs args) {
        return getTargetHttpsProxy(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetTargetHttpsProxyResult> getTargetHttpsProxy(GetTargetHttpsProxyArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("google-native:compute/v1:getTargetHttpsProxy", TypeShape.of(GetTargetHttpsProxyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Returns the specified TargetInstance resource. Gets a list of available target instances by making a list() request.
     * 
     */
    public static CompletableFuture<GetTargetInstanceResult> getTargetInstance(GetTargetInstanceArgs args) {
        return getTargetInstance(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetTargetInstanceResult> getTargetInstance(GetTargetInstanceArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("google-native:compute/v1:getTargetInstance", TypeShape.of(GetTargetInstanceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Returns the specified target pool. Gets a list of available target pools by making a list() request.
     * 
     */
    public static CompletableFuture<GetTargetPoolResult> getTargetPool(GetTargetPoolArgs args) {
        return getTargetPool(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetTargetPoolResult> getTargetPool(GetTargetPoolArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("google-native:compute/v1:getTargetPool", TypeShape.of(GetTargetPoolResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Returns the specified TargetSslProxy resource. Gets a list of available target SSL proxies by making a list() request.
     * 
     */
    public static CompletableFuture<GetTargetSslProxyResult> getTargetSslProxy(GetTargetSslProxyArgs args) {
        return getTargetSslProxy(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetTargetSslProxyResult> getTargetSslProxy(GetTargetSslProxyArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("google-native:compute/v1:getTargetSslProxy", TypeShape.of(GetTargetSslProxyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Returns the specified TargetTcpProxy resource. Gets a list of available target TCP proxies by making a list() request.
     * 
     */
    public static CompletableFuture<GetTargetTcpProxyResult> getTargetTcpProxy(GetTargetTcpProxyArgs args) {
        return getTargetTcpProxy(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetTargetTcpProxyResult> getTargetTcpProxy(GetTargetTcpProxyArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("google-native:compute/v1:getTargetTcpProxy", TypeShape.of(GetTargetTcpProxyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Returns the specified target VPN gateway. Gets a list of available target VPN gateways by making a list() request.
     * 
     */
    public static CompletableFuture<GetTargetVpnGatewayResult> getTargetVpnGateway(GetTargetVpnGatewayArgs args) {
        return getTargetVpnGateway(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetTargetVpnGatewayResult> getTargetVpnGateway(GetTargetVpnGatewayArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("google-native:compute/v1:getTargetVpnGateway", TypeShape.of(GetTargetVpnGatewayResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Returns the specified UrlMap resource. Gets a list of available URL maps by making a list() request.
     * 
     */
    public static CompletableFuture<GetUrlMapResult> getUrlMap(GetUrlMapArgs args) {
        return getUrlMap(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetUrlMapResult> getUrlMap(GetUrlMapArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("google-native:compute/v1:getUrlMap", TypeShape.of(GetUrlMapResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Returns the specified VPN gateway. Gets a list of available VPN gateways by making a list() request.
     * 
     */
    public static CompletableFuture<GetVpnGatewayResult> getVpnGateway(GetVpnGatewayArgs args) {
        return getVpnGateway(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetVpnGatewayResult> getVpnGateway(GetVpnGatewayArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("google-native:compute/v1:getVpnGateway", TypeShape.of(GetVpnGatewayResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Returns the specified VpnTunnel resource. Gets a list of available VPN tunnels by making a list() request.
     * 
     */
    public static CompletableFuture<GetVpnTunnelResult> getVpnTunnel(GetVpnTunnelArgs args) {
        return getVpnTunnel(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetVpnTunnelResult> getVpnTunnel(GetVpnTunnelArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("google-native:compute/v1:getVpnTunnel", TypeShape.of(GetVpnTunnelResult.class), args, Utilities.withVersion(options));
    }
}
