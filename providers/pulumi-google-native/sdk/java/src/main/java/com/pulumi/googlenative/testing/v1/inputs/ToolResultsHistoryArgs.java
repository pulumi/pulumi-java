// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.testing.v1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * Represents a tool results history resource.
 * 
 */
public final class ToolResultsHistoryArgs extends com.pulumi.resources.ResourceArgs {

    public static final ToolResultsHistoryArgs Empty = new ToolResultsHistoryArgs();

    /**
     * A tool results history ID.
     * 
     */
    @Import(name="historyId", required=true)
    private Output<String> historyId;

    /**
     * @return A tool results history ID.
     * 
     */
    public Output<String> historyId() {
        return this.historyId;
    }

    /**
     * The cloud project that owns the tool results history.
     * 
     */
    @Import(name="project", required=true)
    private Output<String> project;

    /**
     * @return The cloud project that owns the tool results history.
     * 
     */
    public Output<String> project() {
        return this.project;
    }

    private ToolResultsHistoryArgs() {}

    private ToolResultsHistoryArgs(ToolResultsHistoryArgs $) {
        this.historyId = $.historyId;
        this.project = $.project;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ToolResultsHistoryArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ToolResultsHistoryArgs $;

        public Builder() {
            $ = new ToolResultsHistoryArgs();
        }

        public Builder(ToolResultsHistoryArgs defaults) {
            $ = new ToolResultsHistoryArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param historyId A tool results history ID.
         * 
         * @return builder
         * 
         */
        public Builder historyId(Output<String> historyId) {
            $.historyId = historyId;
            return this;
        }

        /**
         * @param historyId A tool results history ID.
         * 
         * @return builder
         * 
         */
        public Builder historyId(String historyId) {
            return historyId(Output.of(historyId));
        }

        /**
         * @param project The cloud project that owns the tool results history.
         * 
         * @return builder
         * 
         */
        public Builder project(Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The cloud project that owns the tool results history.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        public ToolResultsHistoryArgs build() {
            $.historyId = Objects.requireNonNull($.historyId, "expected parameter 'historyId' to be non-null");
            $.project = Objects.requireNonNull($.project, "expected parameter 'project' to be non-null");
            return $;
        }
    }

}
