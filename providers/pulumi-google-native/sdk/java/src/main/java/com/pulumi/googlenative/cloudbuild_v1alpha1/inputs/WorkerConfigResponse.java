// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.cloudbuild_v1alpha1.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.cloudbuild_v1alpha1.inputs.NetworkResponse;
import java.lang.String;
import java.util.Objects;


/**
 * WorkerConfig defines the configuration to be used for a creating workers in the pool.
 * 
 */
public final class WorkerConfigResponse extends com.pulumi.resources.InvokeArgs {

    public static final WorkerConfigResponse Empty = new WorkerConfigResponse();

    /**
     * Size of the disk attached to the worker, in GB. See https://cloud.google.com/compute/docs/disks/ If `0` is specified, Cloud Build will use a standard disk size. `disk_size` is overridden if you specify a different disk size in `build_options`. In this case, a VM with a disk size specified in the `build_options` will be created on demand at build time. For more information see https://cloud.google.com/cloud-build/docs/api/reference/rest/v1/projects.builds#buildoptions
     * 
     */
    @Import(name="diskSizeGb", required=true)
    private String diskSizeGb;

    /**
     * @return Size of the disk attached to the worker, in GB. See https://cloud.google.com/compute/docs/disks/ If `0` is specified, Cloud Build will use a standard disk size. `disk_size` is overridden if you specify a different disk size in `build_options`. In this case, a VM with a disk size specified in the `build_options` will be created on demand at build time. For more information see https://cloud.google.com/cloud-build/docs/api/reference/rest/v1/projects.builds#buildoptions
     * 
     */
    public String diskSizeGb() {
        return this.diskSizeGb;
    }

    /**
     * Machine Type of the worker, such as n1-standard-1. See https://cloud.google.com/compute/docs/machine-types. If left blank, Cloud Build will use a standard unspecified machine to create the worker pool. `machine_type` is overridden if you specify a different machine type in `build_options`. In this case, the VM specified in the `build_options` will be created on demand at build time. For more information see https://cloud.google.com/cloud-build/docs/speeding-up-builds#using_custom_virtual_machine_sizes
     * 
     */
    @Import(name="machineType", required=true)
    private String machineType;

    /**
     * @return Machine Type of the worker, such as n1-standard-1. See https://cloud.google.com/compute/docs/machine-types. If left blank, Cloud Build will use a standard unspecified machine to create the worker pool. `machine_type` is overridden if you specify a different machine type in `build_options`. In this case, the VM specified in the `build_options` will be created on demand at build time. For more information see https://cloud.google.com/cloud-build/docs/speeding-up-builds#using_custom_virtual_machine_sizes
     * 
     */
    public String machineType() {
        return this.machineType;
    }

    /**
     * The network definition used to create the worker. If this section is left empty, the workers will be created in WorkerPool.project_id on the default network.
     * 
     */
    @Import(name="network", required=true)
    private NetworkResponse network;

    /**
     * @return The network definition used to create the worker. If this section is left empty, the workers will be created in WorkerPool.project_id on the default network.
     * 
     */
    public NetworkResponse network() {
        return this.network;
    }

    /**
     * The tag applied to the worker, and the same tag used by the firewall rule. It is used to identify the Cloud Build workers among other VMs. The default value for tag is `worker`.
     * 
     */
    @Import(name="tag", required=true)
    private String tag;

    /**
     * @return The tag applied to the worker, and the same tag used by the firewall rule. It is used to identify the Cloud Build workers among other VMs. The default value for tag is `worker`.
     * 
     */
    public String tag() {
        return this.tag;
    }

    private WorkerConfigResponse() {}

    private WorkerConfigResponse(WorkerConfigResponse $) {
        this.diskSizeGb = $.diskSizeGb;
        this.machineType = $.machineType;
        this.network = $.network;
        this.tag = $.tag;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WorkerConfigResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WorkerConfigResponse $;

        public Builder() {
            $ = new WorkerConfigResponse();
        }

        public Builder(WorkerConfigResponse defaults) {
            $ = new WorkerConfigResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param diskSizeGb Size of the disk attached to the worker, in GB. See https://cloud.google.com/compute/docs/disks/ If `0` is specified, Cloud Build will use a standard disk size. `disk_size` is overridden if you specify a different disk size in `build_options`. In this case, a VM with a disk size specified in the `build_options` will be created on demand at build time. For more information see https://cloud.google.com/cloud-build/docs/api/reference/rest/v1/projects.builds#buildoptions
         * 
         * @return builder
         * 
         */
        public Builder diskSizeGb(String diskSizeGb) {
            $.diskSizeGb = diskSizeGb;
            return this;
        }

        /**
         * @param machineType Machine Type of the worker, such as n1-standard-1. See https://cloud.google.com/compute/docs/machine-types. If left blank, Cloud Build will use a standard unspecified machine to create the worker pool. `machine_type` is overridden if you specify a different machine type in `build_options`. In this case, the VM specified in the `build_options` will be created on demand at build time. For more information see https://cloud.google.com/cloud-build/docs/speeding-up-builds#using_custom_virtual_machine_sizes
         * 
         * @return builder
         * 
         */
        public Builder machineType(String machineType) {
            $.machineType = machineType;
            return this;
        }

        /**
         * @param network The network definition used to create the worker. If this section is left empty, the workers will be created in WorkerPool.project_id on the default network.
         * 
         * @return builder
         * 
         */
        public Builder network(NetworkResponse network) {
            $.network = network;
            return this;
        }

        /**
         * @param tag The tag applied to the worker, and the same tag used by the firewall rule. It is used to identify the Cloud Build workers among other VMs. The default value for tag is `worker`.
         * 
         * @return builder
         * 
         */
        public Builder tag(String tag) {
            $.tag = tag;
            return this;
        }

        public WorkerConfigResponse build() {
            $.diskSizeGb = Objects.requireNonNull($.diskSizeGb, "expected parameter 'diskSizeGb' to be non-null");
            $.machineType = Objects.requireNonNull($.machineType, "expected parameter 'machineType' to be non-null");
            $.network = Objects.requireNonNull($.network, "expected parameter 'network' to be non-null");
            $.tag = Objects.requireNonNull($.tag, "expected parameter 'tag' to be non-null");
            return $;
        }
    }

}
