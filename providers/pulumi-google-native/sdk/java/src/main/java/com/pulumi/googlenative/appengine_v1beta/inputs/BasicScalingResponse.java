// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.appengine_v1beta.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;


/**
 * A service with basic scaling will create an instance when the application receives a request. The instance will be turned down when the app becomes idle. Basic scaling is ideal for work that is intermittent or driven by user activity.
 * 
 */
public final class BasicScalingResponse extends com.pulumi.resources.InvokeArgs {

    public static final BasicScalingResponse Empty = new BasicScalingResponse();

    /**
     * Duration of time after the last request that an instance must wait before the instance is shut down.
     * 
     */
    @Import(name="idleTimeout", required=true)
    private String idleTimeout;

    /**
     * @return Duration of time after the last request that an instance must wait before the instance is shut down.
     * 
     */
    public String idleTimeout() {
        return this.idleTimeout;
    }

    /**
     * Maximum number of instances to create for this version.
     * 
     */
    @Import(name="maxInstances", required=true)
    private Integer maxInstances;

    /**
     * @return Maximum number of instances to create for this version.
     * 
     */
    public Integer maxInstances() {
        return this.maxInstances;
    }

    private BasicScalingResponse() {}

    private BasicScalingResponse(BasicScalingResponse $) {
        this.idleTimeout = $.idleTimeout;
        this.maxInstances = $.maxInstances;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BasicScalingResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BasicScalingResponse $;

        public Builder() {
            $ = new BasicScalingResponse();
        }

        public Builder(BasicScalingResponse defaults) {
            $ = new BasicScalingResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param idleTimeout Duration of time after the last request that an instance must wait before the instance is shut down.
         * 
         * @return builder
         * 
         */
        public Builder idleTimeout(String idleTimeout) {
            $.idleTimeout = idleTimeout;
            return this;
        }

        /**
         * @param maxInstances Maximum number of instances to create for this version.
         * 
         * @return builder
         * 
         */
        public Builder maxInstances(Integer maxInstances) {
            $.maxInstances = maxInstances;
            return this;
        }

        public BasicScalingResponse build() {
            $.idleTimeout = Objects.requireNonNull($.idleTimeout, "expected parameter 'idleTimeout' to be non-null");
            $.maxInstances = Objects.requireNonNull($.maxInstances, "expected parameter 'maxInstances' to be non-null");
            return $;
        }
    }

}
