// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.toolresults.v1beta3.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * A reference to a test case. Test case references are canonically ordered lexicographically by these three factors: * First, by test_suite_name. * Second, by class_name. * Third, by name.
 * 
 */
public final class TestCaseReferenceArgs extends com.pulumi.resources.ResourceArgs {

    public static final TestCaseReferenceArgs Empty = new TestCaseReferenceArgs();

    /**
     * The name of the class.
     * 
     */
    @Import(name="className")
    private @Nullable Output<String> className;

    /**
     * @return The name of the class.
     * 
     */
    public Optional<Output<String>> className() {
        return Optional.ofNullable(this.className);
    }

    /**
     * The name of the test case. Required.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the test case. Required.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The name of the test suite to which this test case belongs.
     * 
     */
    @Import(name="testSuiteName")
    private @Nullable Output<String> testSuiteName;

    /**
     * @return The name of the test suite to which this test case belongs.
     * 
     */
    public Optional<Output<String>> testSuiteName() {
        return Optional.ofNullable(this.testSuiteName);
    }

    private TestCaseReferenceArgs() {}

    private TestCaseReferenceArgs(TestCaseReferenceArgs $) {
        this.className = $.className;
        this.name = $.name;
        this.testSuiteName = $.testSuiteName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TestCaseReferenceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TestCaseReferenceArgs $;

        public Builder() {
            $ = new TestCaseReferenceArgs();
        }

        public Builder(TestCaseReferenceArgs defaults) {
            $ = new TestCaseReferenceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param className The name of the class.
         * 
         * @return builder
         * 
         */
        public Builder className(@Nullable Output<String> className) {
            $.className = className;
            return this;
        }

        /**
         * @param className The name of the class.
         * 
         * @return builder
         * 
         */
        public Builder className(String className) {
            return className(Output.of(className));
        }

        /**
         * @param name The name of the test case. Required.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the test case. Required.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param testSuiteName The name of the test suite to which this test case belongs.
         * 
         * @return builder
         * 
         */
        public Builder testSuiteName(@Nullable Output<String> testSuiteName) {
            $.testSuiteName = testSuiteName;
            return this;
        }

        /**
         * @param testSuiteName The name of the test suite to which this test case belongs.
         * 
         * @return builder
         * 
         */
        public Builder testSuiteName(String testSuiteName) {
            return testSuiteName(Output.of(testSuiteName));
        }

        public TestCaseReferenceArgs build() {
            return $;
        }
    }

}
