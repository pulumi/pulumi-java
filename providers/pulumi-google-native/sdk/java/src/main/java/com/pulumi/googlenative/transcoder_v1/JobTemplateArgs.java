// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.transcoder_v1;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import com.pulumi.googlenative.transcoder_v1.inputs.JobConfigArgs;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class JobTemplateArgs extends com.pulumi.resources.ResourceArgs {

    public static final JobTemplateArgs Empty = new JobTemplateArgs();

    /**
     * The configuration for this template.
     * 
     */
    @Import(name="config")
      private final @Nullable Output<JobConfigArgs> config;

    public Output<JobConfigArgs> config() {
        return this.config == null ? Codegen.empty() : this.config;
    }

    @Import(name="jobTemplateId", required=true)
      private final Output<String> jobTemplateId;

    public Output<String> jobTemplateId() {
        return this.jobTemplateId;
    }

    @Import(name="location")
      private final @Nullable Output<String> location;

    public Output<String> location() {
        return this.location == null ? Codegen.empty() : this.location;
    }

    /**
     * The resource name of the job template. Format: `projects/{project_number}/locations/{location}/jobTemplates/{job_template}`
     * 
     */
    @Import(name="name")
      private final @Nullable Output<String> name;

    public Output<String> name() {
        return this.name == null ? Codegen.empty() : this.name;
    }

    @Import(name="project")
      private final @Nullable Output<String> project;

    public Output<String> project() {
        return this.project == null ? Codegen.empty() : this.project;
    }

    public JobTemplateArgs(
        @Nullable Output<JobConfigArgs> config,
        Output<String> jobTemplateId,
        @Nullable Output<String> location,
        @Nullable Output<String> name,
        @Nullable Output<String> project) {
        this.config = config;
        this.jobTemplateId = Objects.requireNonNull(jobTemplateId, "expected parameter 'jobTemplateId' to be non-null");
        this.location = location;
        this.name = name;
        this.project = project;
    }

    private JobTemplateArgs() {
        this.config = Codegen.empty();
        this.jobTemplateId = Codegen.empty();
        this.location = Codegen.empty();
        this.name = Codegen.empty();
        this.project = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(JobTemplateArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<JobConfigArgs> config;
        private Output<String> jobTemplateId;
        private @Nullable Output<String> location;
        private @Nullable Output<String> name;
        private @Nullable Output<String> project;

        public Builder() {
    	      // Empty
        }

        public Builder(JobTemplateArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.config = defaults.config;
    	      this.jobTemplateId = defaults.jobTemplateId;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.project = defaults.project;
        }

        public Builder config(@Nullable Output<JobConfigArgs> config) {
            this.config = config;
            return this;
        }
        public Builder config(@Nullable JobConfigArgs config) {
            this.config = Codegen.ofNullable(config);
            return this;
        }
        public Builder jobTemplateId(Output<String> jobTemplateId) {
            this.jobTemplateId = Objects.requireNonNull(jobTemplateId);
            return this;
        }
        public Builder jobTemplateId(String jobTemplateId) {
            this.jobTemplateId = Output.of(Objects.requireNonNull(jobTemplateId));
            return this;
        }
        public Builder location(@Nullable Output<String> location) {
            this.location = location;
            return this;
        }
        public Builder location(@Nullable String location) {
            this.location = Codegen.ofNullable(location);
            return this;
        }
        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }
        public Builder name(@Nullable String name) {
            this.name = Codegen.ofNullable(name);
            return this;
        }
        public Builder project(@Nullable Output<String> project) {
            this.project = project;
            return this;
        }
        public Builder project(@Nullable String project) {
            this.project = Codegen.ofNullable(project);
            return this;
        }        public JobTemplateArgs build() {
            return new JobTemplateArgs(config, jobTemplateId, location, name, project);
        }
    }
}
