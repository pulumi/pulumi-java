// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.healthcare_v1beta1.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Double;
import java.util.Objects;


/**
 * A 2D coordinate in an image. The origin is the top-left.
 * 
 */
public final class VertexResponse extends com.pulumi.resources.InvokeArgs {

    public static final VertexResponse Empty = new VertexResponse();

    /**
     * X coordinate.
     * 
     */
    @Import(name="x", required=true)
    private Double x;

    /**
     * @return X coordinate.
     * 
     */
    public Double x() {
        return this.x;
    }

    /**
     * Y coordinate.
     * 
     */
    @Import(name="y", required=true)
    private Double y;

    /**
     * @return Y coordinate.
     * 
     */
    public Double y() {
        return this.y;
    }

    private VertexResponse() {}

    private VertexResponse(VertexResponse $) {
        this.x = $.x;
        this.y = $.y;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VertexResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VertexResponse $;

        public Builder() {
            $ = new VertexResponse();
        }

        public Builder(VertexResponse defaults) {
            $ = new VertexResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param x X coordinate.
         * 
         * @return builder
         * 
         */
        public Builder x(Double x) {
            $.x = x;
            return this;
        }

        /**
         * @param y Y coordinate.
         * 
         * @return builder
         * 
         */
        public Builder y(Double y) {
            $.y = y;
            return this;
        }

        public VertexResponse build() {
            $.x = Objects.requireNonNull($.x, "expected parameter 'x' to be non-null");
            $.y = Objects.requireNonNull($.y, "expected parameter 'y' to be non-null");
            return $;
        }
    }

}
