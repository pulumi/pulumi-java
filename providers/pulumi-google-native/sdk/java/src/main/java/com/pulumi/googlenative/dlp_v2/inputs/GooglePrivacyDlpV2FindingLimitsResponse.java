// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.dlp_v2.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.dlp_v2.inputs.GooglePrivacyDlpV2InfoTypeLimitResponse;
import java.lang.Integer;
import java.util.List;
import java.util.Objects;


/**
 * Configuration to control the number of findings returned for inspection. This is not used for de-identification or data profiling.
 * 
 */
public final class GooglePrivacyDlpV2FindingLimitsResponse extends com.pulumi.resources.InvokeArgs {

    public static final GooglePrivacyDlpV2FindingLimitsResponse Empty = new GooglePrivacyDlpV2FindingLimitsResponse();

    /**
     * Configuration of findings limit given for specified infoTypes.
     * 
     */
    @Import(name="maxFindingsPerInfoType", required=true)
    private List<GooglePrivacyDlpV2InfoTypeLimitResponse> maxFindingsPerInfoType;

    public List<GooglePrivacyDlpV2InfoTypeLimitResponse> maxFindingsPerInfoType() {
        return this.maxFindingsPerInfoType;
    }

    /**
     * Max number of findings that will be returned for each item scanned. When set within `InspectJobConfig`, the maximum returned is 2000 regardless if this is set higher. When set within `InspectContentRequest`, this field is ignored.
     * 
     */
    @Import(name="maxFindingsPerItem", required=true)
    private Integer maxFindingsPerItem;

    public Integer maxFindingsPerItem() {
        return this.maxFindingsPerItem;
    }

    /**
     * Max number of findings that will be returned per request/job. When set within `InspectContentRequest`, the maximum returned is 2000 regardless if this is set higher.
     * 
     */
    @Import(name="maxFindingsPerRequest", required=true)
    private Integer maxFindingsPerRequest;

    public Integer maxFindingsPerRequest() {
        return this.maxFindingsPerRequest;
    }

    private GooglePrivacyDlpV2FindingLimitsResponse() {}

    private GooglePrivacyDlpV2FindingLimitsResponse(GooglePrivacyDlpV2FindingLimitsResponse $) {
        this.maxFindingsPerInfoType = $.maxFindingsPerInfoType;
        this.maxFindingsPerItem = $.maxFindingsPerItem;
        this.maxFindingsPerRequest = $.maxFindingsPerRequest;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GooglePrivacyDlpV2FindingLimitsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GooglePrivacyDlpV2FindingLimitsResponse $;

        public Builder() {
            $ = new GooglePrivacyDlpV2FindingLimitsResponse();
        }

        public Builder(GooglePrivacyDlpV2FindingLimitsResponse defaults) {
            $ = new GooglePrivacyDlpV2FindingLimitsResponse(Objects.requireNonNull(defaults));
        }

        public Builder maxFindingsPerInfoType(List<GooglePrivacyDlpV2InfoTypeLimitResponse> maxFindingsPerInfoType) {
            $.maxFindingsPerInfoType = maxFindingsPerInfoType;
            return this;
        }

        public Builder maxFindingsPerInfoType(GooglePrivacyDlpV2InfoTypeLimitResponse... maxFindingsPerInfoType) {
            return maxFindingsPerInfoType(List.of(maxFindingsPerInfoType));
        }

        public Builder maxFindingsPerItem(Integer maxFindingsPerItem) {
            $.maxFindingsPerItem = maxFindingsPerItem;
            return this;
        }

        public Builder maxFindingsPerRequest(Integer maxFindingsPerRequest) {
            $.maxFindingsPerRequest = maxFindingsPerRequest;
            return this;
        }

        public GooglePrivacyDlpV2FindingLimitsResponse build() {
            $.maxFindingsPerInfoType = Objects.requireNonNull($.maxFindingsPerInfoType, "expected parameter 'maxFindingsPerInfoType' to be non-null");
            $.maxFindingsPerItem = Objects.requireNonNull($.maxFindingsPerItem, "expected parameter 'maxFindingsPerItem' to be non-null");
            $.maxFindingsPerRequest = Objects.requireNonNull($.maxFindingsPerRequest, "expected parameter 'maxFindingsPerRequest' to be non-null");
            return $;
        }
    }

}
