// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.compute_alpha;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.compute_alpha.enums.RegionNetworkNetworkFirewallPolicyEnforcementOrder;
import com.pulumi.googlenative.compute_alpha.inputs.NetworkRoutingConfigArgs;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RegionNetworkArgs extends com.pulumi.resources.ResourceArgs {

    public static final RegionNetworkArgs Empty = new RegionNetworkArgs();

    /**
     * Must be set to create a VPC network. If not set, a legacy network is created. When set to true, the VPC network is created in auto mode. When set to false, the VPC network is created in custom mode. An auto mode VPC network starts with one subnet per region. Each subnet has a predetermined range as described in Auto mode VPC network IP ranges. For custom mode VPC networks, you can add subnets using the subnetworks insert method.
     * 
     */
    @Import(name="autoCreateSubnetworks")
    private @Nullable Output<Boolean> autoCreateSubnetworks;

    public Optional<Output<Boolean>> autoCreateSubnetworks() {
        return Optional.ofNullable(this.autoCreateSubnetworks);
    }

    /**
     * An optional description of this resource. Provide this field when you create the resource.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Enable ULA internal ipv6 on this network. Enabling this feature will assign a /48 from google defined ULA prefix fd20::/20. .
     * 
     */
    @Import(name="enableUlaInternalIpv6")
    private @Nullable Output<Boolean> enableUlaInternalIpv6;

    public Optional<Output<Boolean>> enableUlaInternalIpv6() {
        return Optional.ofNullable(this.enableUlaInternalIpv6);
    }

    /**
     * When enabling ula internal ipv6, caller optionally can specify the /48 range they want from the google defined ULA prefix fd20::/20. The input must be a valid /48 ULA IPv6 address and must be within the fd20::/20. Operation will fail if the speficied /48 is already in used by another resource. If the field is not speficied, then a /48 range will be randomly allocated from fd20::/20 and returned via this field. .
     * 
     */
    @Import(name="internalIpv6Range")
    private @Nullable Output<String> internalIpv6Range;

    public Optional<Output<String>> internalIpv6Range() {
        return Optional.ofNullable(this.internalIpv6Range);
    }

    /**
     * Maximum Transmission Unit in bytes. The minimum value for this field is 1460 and the maximum value is 1500 bytes. If unspecified, defaults to 1460.
     * 
     */
    @Import(name="mtu")
    private @Nullable Output<Integer> mtu;

    public Optional<Output<Integer>> mtu() {
        return Optional.ofNullable(this.mtu);
    }

    /**
     * Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?`. The first character must be a lowercase letter, and all following characters (except for the last character) must be a dash, lowercase letter, or digit. The last character must be a lowercase letter or digit.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="networkFirewallPolicyEnforcementOrder")
    private @Nullable Output<RegionNetworkNetworkFirewallPolicyEnforcementOrder> networkFirewallPolicyEnforcementOrder;

    public Optional<Output<RegionNetworkNetworkFirewallPolicyEnforcementOrder>> networkFirewallPolicyEnforcementOrder() {
        return Optional.ofNullable(this.networkFirewallPolicyEnforcementOrder);
    }

    @Import(name="project")
    private @Nullable Output<String> project;

    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    @Import(name="region", required=true)
    private Output<String> region;

    public Output<String> region() {
        return this.region;
    }

    @Import(name="requestId")
    private @Nullable Output<String> requestId;

    public Optional<Output<String>> requestId() {
        return Optional.ofNullable(this.requestId);
    }

    /**
     * The network-level routing configuration for this network. Used by Cloud Router to determine what type of network-wide routing behavior to enforce.
     * 
     */
    @Import(name="routingConfig")
    private @Nullable Output<NetworkRoutingConfigArgs> routingConfig;

    public Optional<Output<NetworkRoutingConfigArgs>> routingConfig() {
        return Optional.ofNullable(this.routingConfig);
    }

    private RegionNetworkArgs() {}

    private RegionNetworkArgs(RegionNetworkArgs $) {
        this.autoCreateSubnetworks = $.autoCreateSubnetworks;
        this.description = $.description;
        this.enableUlaInternalIpv6 = $.enableUlaInternalIpv6;
        this.internalIpv6Range = $.internalIpv6Range;
        this.mtu = $.mtu;
        this.name = $.name;
        this.networkFirewallPolicyEnforcementOrder = $.networkFirewallPolicyEnforcementOrder;
        this.project = $.project;
        this.region = $.region;
        this.requestId = $.requestId;
        this.routingConfig = $.routingConfig;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RegionNetworkArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RegionNetworkArgs $;

        public Builder() {
            $ = new RegionNetworkArgs();
        }

        public Builder(RegionNetworkArgs defaults) {
            $ = new RegionNetworkArgs(Objects.requireNonNull(defaults));
        }

        public Builder autoCreateSubnetworks(@Nullable Output<Boolean> autoCreateSubnetworks) {
            $.autoCreateSubnetworks = autoCreateSubnetworks;
            return this;
        }

        public Builder autoCreateSubnetworks(Boolean autoCreateSubnetworks) {
            return autoCreateSubnetworks(Output.of(autoCreateSubnetworks));
        }

        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        public Builder description(String description) {
            return description(Output.of(description));
        }

        public Builder enableUlaInternalIpv6(@Nullable Output<Boolean> enableUlaInternalIpv6) {
            $.enableUlaInternalIpv6 = enableUlaInternalIpv6;
            return this;
        }

        public Builder enableUlaInternalIpv6(Boolean enableUlaInternalIpv6) {
            return enableUlaInternalIpv6(Output.of(enableUlaInternalIpv6));
        }

        public Builder internalIpv6Range(@Nullable Output<String> internalIpv6Range) {
            $.internalIpv6Range = internalIpv6Range;
            return this;
        }

        public Builder internalIpv6Range(String internalIpv6Range) {
            return internalIpv6Range(Output.of(internalIpv6Range));
        }

        public Builder mtu(@Nullable Output<Integer> mtu) {
            $.mtu = mtu;
            return this;
        }

        public Builder mtu(Integer mtu) {
            return mtu(Output.of(mtu));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder networkFirewallPolicyEnforcementOrder(@Nullable Output<RegionNetworkNetworkFirewallPolicyEnforcementOrder> networkFirewallPolicyEnforcementOrder) {
            $.networkFirewallPolicyEnforcementOrder = networkFirewallPolicyEnforcementOrder;
            return this;
        }

        public Builder networkFirewallPolicyEnforcementOrder(RegionNetworkNetworkFirewallPolicyEnforcementOrder networkFirewallPolicyEnforcementOrder) {
            return networkFirewallPolicyEnforcementOrder(Output.of(networkFirewallPolicyEnforcementOrder));
        }

        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        public Builder project(String project) {
            return project(Output.of(project));
        }

        public Builder region(Output<String> region) {
            $.region = region;
            return this;
        }

        public Builder region(String region) {
            return region(Output.of(region));
        }

        public Builder requestId(@Nullable Output<String> requestId) {
            $.requestId = requestId;
            return this;
        }

        public Builder requestId(String requestId) {
            return requestId(Output.of(requestId));
        }

        public Builder routingConfig(@Nullable Output<NetworkRoutingConfigArgs> routingConfig) {
            $.routingConfig = routingConfig;
            return this;
        }

        public Builder routingConfig(NetworkRoutingConfigArgs routingConfig) {
            return routingConfig(Output.of(routingConfig));
        }

        public RegionNetworkArgs build() {
            $.region = Objects.requireNonNull($.region, "expected parameter 'region' to be non-null");
            return $;
        }
    }

}
