// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.dialogflow_v3beta1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.dialogflow_v3beta1.inputs.GoogleCloudDialogflowCxV3beta1QueryInputArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The input from the human user.
 * 
 */
public final class GoogleCloudDialogflowCxV3beta1ConversationTurnUserInputArgs extends com.pulumi.resources.ResourceArgs {

    public static final GoogleCloudDialogflowCxV3beta1ConversationTurnUserInputArgs Empty = new GoogleCloudDialogflowCxV3beta1ConversationTurnUserInputArgs();

    /**
     * Whether sentiment analysis is enabled.
     * 
     */
    @Import(name="enableSentimentAnalysis")
    private @Nullable Output<Boolean> enableSentimentAnalysis;

    public Optional<Output<Boolean>> enableSentimentAnalysis() {
        return Optional.ofNullable(this.enableSentimentAnalysis);
    }

    /**
     * Parameters that need to be injected into the conversation during intent detection.
     * 
     */
    @Import(name="injectedParameters")
    private @Nullable Output<Map<String,String>> injectedParameters;

    public Optional<Output<Map<String,String>>> injectedParameters() {
        return Optional.ofNullable(this.injectedParameters);
    }

    /**
     * Supports text input, event input, dtmf input in the test case.
     * 
     */
    @Import(name="input")
    private @Nullable Output<GoogleCloudDialogflowCxV3beta1QueryInputArgs> input;

    public Optional<Output<GoogleCloudDialogflowCxV3beta1QueryInputArgs>> input() {
        return Optional.ofNullable(this.input);
    }

    /**
     * If webhooks should be allowed to trigger in response to the user utterance. Often if parameters are injected, webhooks should not be enabled.
     * 
     */
    @Import(name="isWebhookEnabled")
    private @Nullable Output<Boolean> isWebhookEnabled;

    public Optional<Output<Boolean>> isWebhookEnabled() {
        return Optional.ofNullable(this.isWebhookEnabled);
    }

    private GoogleCloudDialogflowCxV3beta1ConversationTurnUserInputArgs() {}

    private GoogleCloudDialogflowCxV3beta1ConversationTurnUserInputArgs(GoogleCloudDialogflowCxV3beta1ConversationTurnUserInputArgs $) {
        this.enableSentimentAnalysis = $.enableSentimentAnalysis;
        this.injectedParameters = $.injectedParameters;
        this.input = $.input;
        this.isWebhookEnabled = $.isWebhookEnabled;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GoogleCloudDialogflowCxV3beta1ConversationTurnUserInputArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GoogleCloudDialogflowCxV3beta1ConversationTurnUserInputArgs $;

        public Builder() {
            $ = new GoogleCloudDialogflowCxV3beta1ConversationTurnUserInputArgs();
        }

        public Builder(GoogleCloudDialogflowCxV3beta1ConversationTurnUserInputArgs defaults) {
            $ = new GoogleCloudDialogflowCxV3beta1ConversationTurnUserInputArgs(Objects.requireNonNull(defaults));
        }

        public Builder enableSentimentAnalysis(@Nullable Output<Boolean> enableSentimentAnalysis) {
            $.enableSentimentAnalysis = enableSentimentAnalysis;
            return this;
        }

        public Builder enableSentimentAnalysis(Boolean enableSentimentAnalysis) {
            return enableSentimentAnalysis(Output.of(enableSentimentAnalysis));
        }

        public Builder injectedParameters(@Nullable Output<Map<String,String>> injectedParameters) {
            $.injectedParameters = injectedParameters;
            return this;
        }

        public Builder injectedParameters(Map<String,String> injectedParameters) {
            return injectedParameters(Output.of(injectedParameters));
        }

        public Builder input(@Nullable Output<GoogleCloudDialogflowCxV3beta1QueryInputArgs> input) {
            $.input = input;
            return this;
        }

        public Builder input(GoogleCloudDialogflowCxV3beta1QueryInputArgs input) {
            return input(Output.of(input));
        }

        public Builder isWebhookEnabled(@Nullable Output<Boolean> isWebhookEnabled) {
            $.isWebhookEnabled = isWebhookEnabled;
            return this;
        }

        public Builder isWebhookEnabled(Boolean isWebhookEnabled) {
            return isWebhookEnabled(Output.of(isWebhookEnabled));
        }

        public GoogleCloudDialogflowCxV3beta1ConversationTurnUserInputArgs build() {
            return $;
        }
    }

}
