// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.clouddeploy_v1.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;


/**
 * TargetsPresentCondition contains information on any Targets defined in the Delivery Pipeline that do not actually exist.
 * 
 */
public final class TargetsPresentConditionResponse extends com.pulumi.resources.InvokeArgs {

    public static final TargetsPresentConditionResponse Empty = new TargetsPresentConditionResponse();

    /**
     * The list of Target names that are missing. For example, projects/{project_id}/locations/{location_name}/targets/{target_name}.
     * 
     */
    @Import(name="missingTargets", required=true)
    private List<String> missingTargets;

    /**
     * @return The list of Target names that are missing. For example, projects/{project_id}/locations/{location_name}/targets/{target_name}.
     * 
     */
    public List<String> missingTargets() {
        return this.missingTargets;
    }

    /**
     * True if there aren&#39;t any missing Targets.
     * 
     */
    @Import(name="status", required=true)
    private Boolean status;

    /**
     * @return True if there aren&#39;t any missing Targets.
     * 
     */
    public Boolean status() {
        return this.status;
    }

    /**
     * Last time the condition was updated.
     * 
     */
    @Import(name="updateTime", required=true)
    private String updateTime;

    /**
     * @return Last time the condition was updated.
     * 
     */
    public String updateTime() {
        return this.updateTime;
    }

    private TargetsPresentConditionResponse() {}

    private TargetsPresentConditionResponse(TargetsPresentConditionResponse $) {
        this.missingTargets = $.missingTargets;
        this.status = $.status;
        this.updateTime = $.updateTime;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TargetsPresentConditionResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TargetsPresentConditionResponse $;

        public Builder() {
            $ = new TargetsPresentConditionResponse();
        }

        public Builder(TargetsPresentConditionResponse defaults) {
            $ = new TargetsPresentConditionResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param missingTargets The list of Target names that are missing. For example, projects/{project_id}/locations/{location_name}/targets/{target_name}.
         * 
         * @return builder
         * 
         */
        public Builder missingTargets(List<String> missingTargets) {
            $.missingTargets = missingTargets;
            return this;
        }

        /**
         * @param missingTargets The list of Target names that are missing. For example, projects/{project_id}/locations/{location_name}/targets/{target_name}.
         * 
         * @return builder
         * 
         */
        public Builder missingTargets(String... missingTargets) {
            return missingTargets(List.of(missingTargets));
        }

        /**
         * @param status True if there aren&#39;t any missing Targets.
         * 
         * @return builder
         * 
         */
        public Builder status(Boolean status) {
            $.status = status;
            return this;
        }

        /**
         * @param updateTime Last time the condition was updated.
         * 
         * @return builder
         * 
         */
        public Builder updateTime(String updateTime) {
            $.updateTime = updateTime;
            return this;
        }

        public TargetsPresentConditionResponse build() {
            $.missingTargets = Objects.requireNonNull($.missingTargets, "expected parameter 'missingTargets' to be non-null");
            $.status = Objects.requireNonNull($.status, "expected parameter 'status' to be non-null");
            $.updateTime = Objects.requireNonNull($.updateTime, "expected parameter 'updateTime' to be non-null");
            return $;
        }
    }

}
