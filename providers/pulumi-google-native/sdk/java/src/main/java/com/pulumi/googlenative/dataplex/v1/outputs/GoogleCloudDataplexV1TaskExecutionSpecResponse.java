// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.dataplex.v1.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GoogleCloudDataplexV1TaskExecutionSpecResponse {
    /**
     * @return Optional. The arguments to pass to the task. The args can use placeholders of the format ${placeholder} as part of key/value string. These will be interpolated before passing the args to the driver. Currently supported placeholders: - ${task_id} - ${job_time} To pass positional args, set the key as TASK_ARGS. The value should be a comma-separated string of all the positional arguments. To use a delimiter other than comma, refer to https://cloud.google.com/sdk/gcloud/reference/topic/escaping. In case of other keys being present in the args, then TASK_ARGS will be passed as the last argument.
     * 
     */
    private final Map<String,String> args;
    /**
     * @return Optional. The maximum duration after which the job execution is expired.
     * 
     */
    private final String maxJobExecutionLifetime;
    /**
     * @return Optional. The project in which jobs are run. By default, the project containing the Lake is used. If a project is provided, the executionspec.service_account must belong to this same project.
     * 
     */
    private final String project;
    /**
     * @return Service account to use to execute a task. If not provided, the default Compute service account for the project is used.
     * 
     */
    private final String serviceAccount;

    @CustomType.Constructor
    private GoogleCloudDataplexV1TaskExecutionSpecResponse(
        @CustomType.Parameter("args") Map<String,String> args,
        @CustomType.Parameter("maxJobExecutionLifetime") String maxJobExecutionLifetime,
        @CustomType.Parameter("project") String project,
        @CustomType.Parameter("serviceAccount") String serviceAccount) {
        this.args = args;
        this.maxJobExecutionLifetime = maxJobExecutionLifetime;
        this.project = project;
        this.serviceAccount = serviceAccount;
    }

    /**
     * @return Optional. The arguments to pass to the task. The args can use placeholders of the format ${placeholder} as part of key/value string. These will be interpolated before passing the args to the driver. Currently supported placeholders: - ${task_id} - ${job_time} To pass positional args, set the key as TASK_ARGS. The value should be a comma-separated string of all the positional arguments. To use a delimiter other than comma, refer to https://cloud.google.com/sdk/gcloud/reference/topic/escaping. In case of other keys being present in the args, then TASK_ARGS will be passed as the last argument.
     * 
     */
    public Map<String,String> args() {
        return this.args;
    }
    /**
     * @return Optional. The maximum duration after which the job execution is expired.
     * 
     */
    public String maxJobExecutionLifetime() {
        return this.maxJobExecutionLifetime;
    }
    /**
     * @return Optional. The project in which jobs are run. By default, the project containing the Lake is used. If a project is provided, the executionspec.service_account must belong to this same project.
     * 
     */
    public String project() {
        return this.project;
    }
    /**
     * @return Service account to use to execute a task. If not provided, the default Compute service account for the project is used.
     * 
     */
    public String serviceAccount() {
        return this.serviceAccount;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GoogleCloudDataplexV1TaskExecutionSpecResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Map<String,String> args;
        private String maxJobExecutionLifetime;
        private String project;
        private String serviceAccount;

        public Builder() {
    	      // Empty
        }

        public Builder(GoogleCloudDataplexV1TaskExecutionSpecResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.args = defaults.args;
    	      this.maxJobExecutionLifetime = defaults.maxJobExecutionLifetime;
    	      this.project = defaults.project;
    	      this.serviceAccount = defaults.serviceAccount;
        }

        public Builder args(Map<String,String> args) {
            this.args = Objects.requireNonNull(args);
            return this;
        }
        public Builder maxJobExecutionLifetime(String maxJobExecutionLifetime) {
            this.maxJobExecutionLifetime = Objects.requireNonNull(maxJobExecutionLifetime);
            return this;
        }
        public Builder project(String project) {
            this.project = Objects.requireNonNull(project);
            return this;
        }
        public Builder serviceAccount(String serviceAccount) {
            this.serviceAccount = Objects.requireNonNull(serviceAccount);
            return this;
        }        public GoogleCloudDataplexV1TaskExecutionSpecResponse build() {
            return new GoogleCloudDataplexV1TaskExecutionSpecResponse(args, maxJobExecutionLifetime, project, serviceAccount);
        }
    }
}
