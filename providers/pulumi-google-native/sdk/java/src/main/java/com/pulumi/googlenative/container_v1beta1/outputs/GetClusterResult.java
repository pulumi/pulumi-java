// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.container_v1beta1.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.googlenative.container_v1beta1.outputs.AddonsConfigResponse;
import com.pulumi.googlenative.container_v1beta1.outputs.AuthenticatorGroupsConfigResponse;
import com.pulumi.googlenative.container_v1beta1.outputs.AutopilotResponse;
import com.pulumi.googlenative.container_v1beta1.outputs.BinaryAuthorizationResponse;
import com.pulumi.googlenative.container_v1beta1.outputs.ClusterAutoscalingResponse;
import com.pulumi.googlenative.container_v1beta1.outputs.ClusterTelemetryResponse;
import com.pulumi.googlenative.container_v1beta1.outputs.ConfidentialNodesResponse;
import com.pulumi.googlenative.container_v1beta1.outputs.DatabaseEncryptionResponse;
import com.pulumi.googlenative.container_v1beta1.outputs.IPAllocationPolicyResponse;
import com.pulumi.googlenative.container_v1beta1.outputs.IdentityServiceConfigResponse;
import com.pulumi.googlenative.container_v1beta1.outputs.LegacyAbacResponse;
import com.pulumi.googlenative.container_v1beta1.outputs.LoggingConfigResponse;
import com.pulumi.googlenative.container_v1beta1.outputs.MaintenancePolicyResponse;
import com.pulumi.googlenative.container_v1beta1.outputs.MasterAuthResponse;
import com.pulumi.googlenative.container_v1beta1.outputs.MasterAuthorizedNetworksConfigResponse;
import com.pulumi.googlenative.container_v1beta1.outputs.MasterResponse;
import com.pulumi.googlenative.container_v1beta1.outputs.MaxPodsConstraintResponse;
import com.pulumi.googlenative.container_v1beta1.outputs.MeshCertificatesResponse;
import com.pulumi.googlenative.container_v1beta1.outputs.MonitoringConfigResponse;
import com.pulumi.googlenative.container_v1beta1.outputs.NetworkConfigResponse;
import com.pulumi.googlenative.container_v1beta1.outputs.NetworkPolicyResponse;
import com.pulumi.googlenative.container_v1beta1.outputs.NodePoolDefaultsResponse;
import com.pulumi.googlenative.container_v1beta1.outputs.NodePoolResponse;
import com.pulumi.googlenative.container_v1beta1.outputs.NotificationConfigResponse;
import com.pulumi.googlenative.container_v1beta1.outputs.PodSecurityPolicyConfigResponse;
import com.pulumi.googlenative.container_v1beta1.outputs.PrivateClusterConfigResponse;
import com.pulumi.googlenative.container_v1beta1.outputs.ReleaseChannelResponse;
import com.pulumi.googlenative.container_v1beta1.outputs.ResourceUsageExportConfigResponse;
import com.pulumi.googlenative.container_v1beta1.outputs.ShieldedNodesResponse;
import com.pulumi.googlenative.container_v1beta1.outputs.StatusConditionResponse;
import com.pulumi.googlenative.container_v1beta1.outputs.TpuConfigResponse;
import com.pulumi.googlenative.container_v1beta1.outputs.VerticalPodAutoscalingResponse;
import com.pulumi.googlenative.container_v1beta1.outputs.WorkloadCertificatesResponse;
import com.pulumi.googlenative.container_v1beta1.outputs.WorkloadIdentityConfigResponse;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetClusterResult {
    /**
     * Configurations for the various addons available to run in the cluster.
     * 
     */
    private final AddonsConfigResponse addonsConfig;
    /**
     * Configuration controlling RBAC group membership information.
     * 
     */
    private final AuthenticatorGroupsConfigResponse authenticatorGroupsConfig;
    /**
     * Autopilot configuration for the cluster.
     * 
     */
    private final AutopilotResponse autopilot;
    /**
     * Cluster-level autoscaling configuration.
     * 
     */
    private final ClusterAutoscalingResponse autoscaling;
    /**
     * Configuration for Binary Authorization.
     * 
     */
    private final BinaryAuthorizationResponse binaryAuthorization;
    /**
     * The IP address range of the container pods in this cluster, in [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing) notation (e.g. `10.96.0.0/14`). Leave blank to have one automatically chosen or specify a `/14` block in `10.0.0.0/8`.
     * 
     */
    private final String clusterIpv4Cidr;
    /**
     * Telemetry integration for the cluster.
     * 
     */
    private final ClusterTelemetryResponse clusterTelemetry;
    /**
     * Which conditions caused the current cluster state.
     * 
     */
    private final List<StatusConditionResponse> conditions;
    /**
     * Configuration of Confidential Nodes. All the nodes in the cluster will be Confidential VM once enabled.
     * 
     */
    private final ConfidentialNodesResponse confidentialNodes;
    /**
     * [Output only] The time the cluster was created, in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
     * 
     */
    private final String createTime;
    /**
     * [Output only] The current software version of the master endpoint.
     * 
     */
    private final String currentMasterVersion;
    /**
     * [Output only] Deprecated, use [NodePool.version](https://cloud.google.com/kubernetes-engine/docs/reference/rest/v1beta1/projects.locations.clusters.nodePools) instead. The current version of the node software components. If they are currently at multiple versions because they're in the process of being upgraded, this reflects the minimum version of all nodes.
     * 
     */
    private final String currentNodeVersion;
    /**
     * Configuration of etcd encryption.
     * 
     */
    private final DatabaseEncryptionResponse databaseEncryption;
    /**
     * The default constraint on the maximum number of pods that can be run simultaneously on a node in the node pool of this cluster. Only honored if cluster created with IP Alias support.
     * 
     */
    private final MaxPodsConstraintResponse defaultMaxPodsConstraint;
    /**
     * An optional description of this cluster.
     * 
     */
    private final String description;
    /**
     * Kubernetes alpha features are enabled on this cluster. This includes alpha API groups (e.g. v1beta1) and features that may not be production ready in the kubernetes version of the master and nodes. The cluster has no SLA for uptime and master/node upgrades are disabled. Alpha enabled clusters are automatically deleted thirty days after creation.
     * 
     */
    private final Boolean enableKubernetesAlpha;
    /**
     * [Output only] The IP address of this cluster's master endpoint. The endpoint can be accessed from the internet at `https://username:password@endpoint/`. See the `masterAuth` property of this resource for username and password information.
     * 
     */
    private final String endpoint;
    /**
     * [Output only] The time the cluster will be automatically deleted in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
     * 
     */
    private final String expireTime;
    /**
     * Configuration for Identity Service component.
     * 
     */
    private final IdentityServiceConfigResponse identityServiceConfig;
    /**
     * The initial Kubernetes version for this cluster. Valid versions are those found in validMasterVersions returned by getServerConfig. The version can be upgraded over time; such upgrades are reflected in currentMasterVersion and currentNodeVersion. Users may specify either explicit versions offered by Kubernetes Engine or version aliases, which have the following behavior: - "latest": picks the highest valid Kubernetes version - "1.X": picks the highest valid patch+gke.N patch in the 1.X version - "1.X.Y": picks the highest valid gke.N patch in the 1.X.Y version - "1.X.Y-gke.N": picks an explicit Kubernetes version - "","-": picks the default Kubernetes version
     * 
     */
    private final String initialClusterVersion;
    /**
     * Configuration for cluster IP allocation.
     * 
     */
    private final IPAllocationPolicyResponse ipAllocationPolicy;
    /**
     * The fingerprint of the set of labels for this cluster.
     * 
     */
    private final String labelFingerprint;
    /**
     * Configuration for the legacy ABAC authorization mode.
     * 
     */
    private final LegacyAbacResponse legacyAbac;
    /**
     * [Output only] The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/regions-zones/regions-zones#available) or [region](https://cloud.google.com/compute/docs/regions-zones/regions-zones#available) in which the cluster resides.
     * 
     */
    private final String location;
    /**
     * The list of Google Compute Engine [zones](https://cloud.google.com/compute/docs/zones#available) in which the cluster's nodes should be located. This field provides a default value if [NodePool.Locations](https://cloud.google.com/kubernetes-engine/docs/reference/rest/v1/projects.locations.clusters.nodePools#NodePool.FIELDS.locations) are not specified during node pool creation. Warning: changing cluster locations will update the [NodePool.Locations](https://cloud.google.com/kubernetes-engine/docs/reference/rest/v1/projects.locations.clusters.nodePools#NodePool.FIELDS.locations) of all node pools and will result in nodes being added and/or removed.
     * 
     */
    private final List<String> locations;
    /**
     * Logging configuration for the cluster.
     * 
     */
    private final LoggingConfigResponse loggingConfig;
    /**
     * The logging service the cluster should use to write logs. Currently available options: * `logging.googleapis.com/kubernetes` - The Cloud Logging service with a Kubernetes-native resource model * `logging.googleapis.com` - The legacy Cloud Logging service (no longer available as of GKE 1.15). * `none` - no logs will be exported from the cluster. If left as an empty string,`logging.googleapis.com/kubernetes` will be used for GKE 1.14+ or `logging.googleapis.com` for earlier versions.
     * 
     */
    private final String loggingService;
    /**
     * Configure the maintenance policy for this cluster.
     * 
     */
    private final MaintenancePolicyResponse maintenancePolicy;
    /**
     * Configuration for master components.
     * 
     */
    private final MasterResponse master;
    /**
     * The authentication information for accessing the master endpoint. If unspecified, the defaults are used: For clusters before v1.12, if master_auth is unspecified, `username` will be set to "admin", a random password will be generated, and a client certificate will be issued.
     * 
     */
    private final MasterAuthResponse masterAuth;
    /**
     * The configuration options for master authorized networks feature.
     * 
     */
    private final MasterAuthorizedNetworksConfigResponse masterAuthorizedNetworksConfig;
    /**
     * Configuration for issuance of mTLS keys and certificates to Kubernetes pods.
     * 
     */
    private final MeshCertificatesResponse meshCertificates;
    /**
     * Monitoring configuration for the cluster.
     * 
     */
    private final MonitoringConfigResponse monitoringConfig;
    /**
     * The monitoring service the cluster should use to write metrics. Currently available options: * "monitoring.googleapis.com/kubernetes" - The Cloud Monitoring service with a Kubernetes-native resource model * `monitoring.googleapis.com` - The legacy Cloud Monitoring service (no longer available as of GKE 1.15). * `none` - No metrics will be exported from the cluster. If left as an empty string,`monitoring.googleapis.com/kubernetes` will be used for GKE 1.14+ or `monitoring.googleapis.com` for earlier versions.
     * 
     */
    private final String monitoringService;
    /**
     * The name of this cluster. The name must be unique within this project and location (e.g. zone or region), and can be up to 40 characters with the following restrictions: * Lowercase letters, numbers, and hyphens only. * Must start with a letter. * Must end with a number or a letter.
     * 
     */
    private final String name;
    /**
     * The name of the Google Compute Engine [network](https://cloud.google.com/compute/docs/networks-and-firewalls#networks) to which the cluster is connected. If left unspecified, the `default` network will be used. On output this shows the network ID instead of the name.
     * 
     */
    private final String network;
    /**
     * Configuration for cluster networking.
     * 
     */
    private final NetworkConfigResponse networkConfig;
    /**
     * Configuration options for the NetworkPolicy feature.
     * 
     */
    private final NetworkPolicyResponse networkPolicy;
    /**
     * [Output only] The size of the address space on each node for hosting containers. This is provisioned from within the `container_ipv4_cidr` range. This field will only be set when cluster is in route-based network mode.
     * 
     */
    private final Integer nodeIpv4CidrSize;
    /**
     * Default NodePool settings for the entire cluster. These settings are overridden if specified on the specific NodePool object.
     * 
     */
    private final NodePoolDefaultsResponse nodePoolDefaults;
    /**
     * The node pools associated with this cluster. This field should not be set if "node_config" or "initial_node_count" are specified.
     * 
     */
    private final List<NodePoolResponse> nodePools;
    /**
     * Notification configuration of the cluster.
     * 
     */
    private final NotificationConfigResponse notificationConfig;
    /**
     * Configuration for the PodSecurityPolicy feature.
     * 
     */
    private final PodSecurityPolicyConfigResponse podSecurityPolicyConfig;
    /**
     * Configuration for private cluster.
     * 
     */
    private final PrivateClusterConfigResponse privateClusterConfig;
    /**
     * Release channel configuration.
     * 
     */
    private final ReleaseChannelResponse releaseChannel;
    /**
     * The resource labels for the cluster to use to annotate any related Google Compute Engine resources.
     * 
     */
    private final Map<String,String> resourceLabels;
    /**
     * Configuration for exporting resource usages. Resource usage export is disabled when this config unspecified.
     * 
     */
    private final ResourceUsageExportConfigResponse resourceUsageExportConfig;
    /**
     * [Output only] Server-defined URL for the resource.
     * 
     */
    private final String selfLink;
    /**
     * [Output only] The IP address range of the Kubernetes services in this cluster, in [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing) notation (e.g. `1.2.3.4/29`). Service addresses are typically put in the last `/16` from the container CIDR.
     * 
     */
    private final String servicesIpv4Cidr;
    /**
     * Shielded Nodes configuration.
     * 
     */
    private final ShieldedNodesResponse shieldedNodes;
    /**
     * [Output only] The current status of this cluster.
     * 
     */
    private final String status;
    /**
     * The name of the Google Compute Engine [subnetwork](https://cloud.google.com/compute/docs/subnetworks) to which the cluster is connected. On output this shows the subnetwork ID instead of the name.
     * 
     */
    private final String subnetwork;
    /**
     * Configuration for Cloud TPU support;
     * 
     */
    private final TpuConfigResponse tpuConfig;
    /**
     * [Output only] The IP address range of the Cloud TPUs in this cluster, in [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing) notation (e.g. `1.2.3.4/29`).
     * 
     */
    private final String tpuIpv4CidrBlock;
    /**
     * Cluster-level Vertical Pod Autoscaling configuration.
     * 
     */
    private final VerticalPodAutoscalingResponse verticalPodAutoscaling;
    /**
     * Configuration for issuance of mTLS keys and certificates to Kubernetes pods.
     * 
     */
    private final WorkloadCertificatesResponse workloadCertificates;
    /**
     * Configuration for the use of Kubernetes Service Accounts in GCP IAM policies.
     * 
     */
    private final WorkloadIdentityConfigResponse workloadIdentityConfig;

    @CustomType.Constructor
    private GetClusterResult(
        @CustomType.Parameter("addonsConfig") AddonsConfigResponse addonsConfig,
        @CustomType.Parameter("authenticatorGroupsConfig") AuthenticatorGroupsConfigResponse authenticatorGroupsConfig,
        @CustomType.Parameter("autopilot") AutopilotResponse autopilot,
        @CustomType.Parameter("autoscaling") ClusterAutoscalingResponse autoscaling,
        @CustomType.Parameter("binaryAuthorization") BinaryAuthorizationResponse binaryAuthorization,
        @CustomType.Parameter("clusterIpv4Cidr") String clusterIpv4Cidr,
        @CustomType.Parameter("clusterTelemetry") ClusterTelemetryResponse clusterTelemetry,
        @CustomType.Parameter("conditions") List<StatusConditionResponse> conditions,
        @CustomType.Parameter("confidentialNodes") ConfidentialNodesResponse confidentialNodes,
        @CustomType.Parameter("createTime") String createTime,
        @CustomType.Parameter("currentMasterVersion") String currentMasterVersion,
        @CustomType.Parameter("currentNodeVersion") String currentNodeVersion,
        @CustomType.Parameter("databaseEncryption") DatabaseEncryptionResponse databaseEncryption,
        @CustomType.Parameter("defaultMaxPodsConstraint") MaxPodsConstraintResponse defaultMaxPodsConstraint,
        @CustomType.Parameter("description") String description,
        @CustomType.Parameter("enableKubernetesAlpha") Boolean enableKubernetesAlpha,
        @CustomType.Parameter("endpoint") String endpoint,
        @CustomType.Parameter("expireTime") String expireTime,
        @CustomType.Parameter("identityServiceConfig") IdentityServiceConfigResponse identityServiceConfig,
        @CustomType.Parameter("initialClusterVersion") String initialClusterVersion,
        @CustomType.Parameter("ipAllocationPolicy") IPAllocationPolicyResponse ipAllocationPolicy,
        @CustomType.Parameter("labelFingerprint") String labelFingerprint,
        @CustomType.Parameter("legacyAbac") LegacyAbacResponse legacyAbac,
        @CustomType.Parameter("location") String location,
        @CustomType.Parameter("locations") List<String> locations,
        @CustomType.Parameter("loggingConfig") LoggingConfigResponse loggingConfig,
        @CustomType.Parameter("loggingService") String loggingService,
        @CustomType.Parameter("maintenancePolicy") MaintenancePolicyResponse maintenancePolicy,
        @CustomType.Parameter("master") MasterResponse master,
        @CustomType.Parameter("masterAuth") MasterAuthResponse masterAuth,
        @CustomType.Parameter("masterAuthorizedNetworksConfig") MasterAuthorizedNetworksConfigResponse masterAuthorizedNetworksConfig,
        @CustomType.Parameter("meshCertificates") MeshCertificatesResponse meshCertificates,
        @CustomType.Parameter("monitoringConfig") MonitoringConfigResponse monitoringConfig,
        @CustomType.Parameter("monitoringService") String monitoringService,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("network") String network,
        @CustomType.Parameter("networkConfig") NetworkConfigResponse networkConfig,
        @CustomType.Parameter("networkPolicy") NetworkPolicyResponse networkPolicy,
        @CustomType.Parameter("nodeIpv4CidrSize") Integer nodeIpv4CidrSize,
        @CustomType.Parameter("nodePoolDefaults") NodePoolDefaultsResponse nodePoolDefaults,
        @CustomType.Parameter("nodePools") List<NodePoolResponse> nodePools,
        @CustomType.Parameter("notificationConfig") NotificationConfigResponse notificationConfig,
        @CustomType.Parameter("podSecurityPolicyConfig") PodSecurityPolicyConfigResponse podSecurityPolicyConfig,
        @CustomType.Parameter("privateClusterConfig") PrivateClusterConfigResponse privateClusterConfig,
        @CustomType.Parameter("releaseChannel") ReleaseChannelResponse releaseChannel,
        @CustomType.Parameter("resourceLabels") Map<String,String> resourceLabels,
        @CustomType.Parameter("resourceUsageExportConfig") ResourceUsageExportConfigResponse resourceUsageExportConfig,
        @CustomType.Parameter("selfLink") String selfLink,
        @CustomType.Parameter("servicesIpv4Cidr") String servicesIpv4Cidr,
        @CustomType.Parameter("shieldedNodes") ShieldedNodesResponse shieldedNodes,
        @CustomType.Parameter("status") String status,
        @CustomType.Parameter("subnetwork") String subnetwork,
        @CustomType.Parameter("tpuConfig") TpuConfigResponse tpuConfig,
        @CustomType.Parameter("tpuIpv4CidrBlock") String tpuIpv4CidrBlock,
        @CustomType.Parameter("verticalPodAutoscaling") VerticalPodAutoscalingResponse verticalPodAutoscaling,
        @CustomType.Parameter("workloadCertificates") WorkloadCertificatesResponse workloadCertificates,
        @CustomType.Parameter("workloadIdentityConfig") WorkloadIdentityConfigResponse workloadIdentityConfig) {
        this.addonsConfig = addonsConfig;
        this.authenticatorGroupsConfig = authenticatorGroupsConfig;
        this.autopilot = autopilot;
        this.autoscaling = autoscaling;
        this.binaryAuthorization = binaryAuthorization;
        this.clusterIpv4Cidr = clusterIpv4Cidr;
        this.clusterTelemetry = clusterTelemetry;
        this.conditions = conditions;
        this.confidentialNodes = confidentialNodes;
        this.createTime = createTime;
        this.currentMasterVersion = currentMasterVersion;
        this.currentNodeVersion = currentNodeVersion;
        this.databaseEncryption = databaseEncryption;
        this.defaultMaxPodsConstraint = defaultMaxPodsConstraint;
        this.description = description;
        this.enableKubernetesAlpha = enableKubernetesAlpha;
        this.endpoint = endpoint;
        this.expireTime = expireTime;
        this.identityServiceConfig = identityServiceConfig;
        this.initialClusterVersion = initialClusterVersion;
        this.ipAllocationPolicy = ipAllocationPolicy;
        this.labelFingerprint = labelFingerprint;
        this.legacyAbac = legacyAbac;
        this.location = location;
        this.locations = locations;
        this.loggingConfig = loggingConfig;
        this.loggingService = loggingService;
        this.maintenancePolicy = maintenancePolicy;
        this.master = master;
        this.masterAuth = masterAuth;
        this.masterAuthorizedNetworksConfig = masterAuthorizedNetworksConfig;
        this.meshCertificates = meshCertificates;
        this.monitoringConfig = monitoringConfig;
        this.monitoringService = monitoringService;
        this.name = name;
        this.network = network;
        this.networkConfig = networkConfig;
        this.networkPolicy = networkPolicy;
        this.nodeIpv4CidrSize = nodeIpv4CidrSize;
        this.nodePoolDefaults = nodePoolDefaults;
        this.nodePools = nodePools;
        this.notificationConfig = notificationConfig;
        this.podSecurityPolicyConfig = podSecurityPolicyConfig;
        this.privateClusterConfig = privateClusterConfig;
        this.releaseChannel = releaseChannel;
        this.resourceLabels = resourceLabels;
        this.resourceUsageExportConfig = resourceUsageExportConfig;
        this.selfLink = selfLink;
        this.servicesIpv4Cidr = servicesIpv4Cidr;
        this.shieldedNodes = shieldedNodes;
        this.status = status;
        this.subnetwork = subnetwork;
        this.tpuConfig = tpuConfig;
        this.tpuIpv4CidrBlock = tpuIpv4CidrBlock;
        this.verticalPodAutoscaling = verticalPodAutoscaling;
        this.workloadCertificates = workloadCertificates;
        this.workloadIdentityConfig = workloadIdentityConfig;
    }

    /**
     * Configurations for the various addons available to run in the cluster.
     * 
    */
    public AddonsConfigResponse addonsConfig() {
        return this.addonsConfig;
    }
    /**
     * Configuration controlling RBAC group membership information.
     * 
    */
    public AuthenticatorGroupsConfigResponse authenticatorGroupsConfig() {
        return this.authenticatorGroupsConfig;
    }
    /**
     * Autopilot configuration for the cluster.
     * 
    */
    public AutopilotResponse autopilot() {
        return this.autopilot;
    }
    /**
     * Cluster-level autoscaling configuration.
     * 
    */
    public ClusterAutoscalingResponse autoscaling() {
        return this.autoscaling;
    }
    /**
     * Configuration for Binary Authorization.
     * 
    */
    public BinaryAuthorizationResponse binaryAuthorization() {
        return this.binaryAuthorization;
    }
    /**
     * The IP address range of the container pods in this cluster, in [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing) notation (e.g. `10.96.0.0/14`). Leave blank to have one automatically chosen or specify a `/14` block in `10.0.0.0/8`.
     * 
    */
    public String clusterIpv4Cidr() {
        return this.clusterIpv4Cidr;
    }
    /**
     * Telemetry integration for the cluster.
     * 
    */
    public ClusterTelemetryResponse clusterTelemetry() {
        return this.clusterTelemetry;
    }
    /**
     * Which conditions caused the current cluster state.
     * 
    */
    public List<StatusConditionResponse> conditions() {
        return this.conditions;
    }
    /**
     * Configuration of Confidential Nodes. All the nodes in the cluster will be Confidential VM once enabled.
     * 
    */
    public ConfidentialNodesResponse confidentialNodes() {
        return this.confidentialNodes;
    }
    /**
     * [Output only] The time the cluster was created, in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
     * 
    */
    public String createTime() {
        return this.createTime;
    }
    /**
     * [Output only] The current software version of the master endpoint.
     * 
    */
    public String currentMasterVersion() {
        return this.currentMasterVersion;
    }
    /**
     * [Output only] Deprecated, use [NodePool.version](https://cloud.google.com/kubernetes-engine/docs/reference/rest/v1beta1/projects.locations.clusters.nodePools) instead. The current version of the node software components. If they are currently at multiple versions because they're in the process of being upgraded, this reflects the minimum version of all nodes.
     * 
    */
    public String currentNodeVersion() {
        return this.currentNodeVersion;
    }
    /**
     * Configuration of etcd encryption.
     * 
    */
    public DatabaseEncryptionResponse databaseEncryption() {
        return this.databaseEncryption;
    }
    /**
     * The default constraint on the maximum number of pods that can be run simultaneously on a node in the node pool of this cluster. Only honored if cluster created with IP Alias support.
     * 
    */
    public MaxPodsConstraintResponse defaultMaxPodsConstraint() {
        return this.defaultMaxPodsConstraint;
    }
    /**
     * An optional description of this cluster.
     * 
    */
    public String description() {
        return this.description;
    }
    /**
     * Kubernetes alpha features are enabled on this cluster. This includes alpha API groups (e.g. v1beta1) and features that may not be production ready in the kubernetes version of the master and nodes. The cluster has no SLA for uptime and master/node upgrades are disabled. Alpha enabled clusters are automatically deleted thirty days after creation.
     * 
    */
    public Boolean enableKubernetesAlpha() {
        return this.enableKubernetesAlpha;
    }
    /**
     * [Output only] The IP address of this cluster's master endpoint. The endpoint can be accessed from the internet at `https://username:password@endpoint/`. See the `masterAuth` property of this resource for username and password information.
     * 
    */
    public String endpoint() {
        return this.endpoint;
    }
    /**
     * [Output only] The time the cluster will be automatically deleted in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
     * 
    */
    public String expireTime() {
        return this.expireTime;
    }
    /**
     * Configuration for Identity Service component.
     * 
    */
    public IdentityServiceConfigResponse identityServiceConfig() {
        return this.identityServiceConfig;
    }
    /**
     * The initial Kubernetes version for this cluster. Valid versions are those found in validMasterVersions returned by getServerConfig. The version can be upgraded over time; such upgrades are reflected in currentMasterVersion and currentNodeVersion. Users may specify either explicit versions offered by Kubernetes Engine or version aliases, which have the following behavior: - "latest": picks the highest valid Kubernetes version - "1.X": picks the highest valid patch+gke.N patch in the 1.X version - "1.X.Y": picks the highest valid gke.N patch in the 1.X.Y version - "1.X.Y-gke.N": picks an explicit Kubernetes version - "","-": picks the default Kubernetes version
     * 
    */
    public String initialClusterVersion() {
        return this.initialClusterVersion;
    }
    /**
     * Configuration for cluster IP allocation.
     * 
    */
    public IPAllocationPolicyResponse ipAllocationPolicy() {
        return this.ipAllocationPolicy;
    }
    /**
     * The fingerprint of the set of labels for this cluster.
     * 
    */
    public String labelFingerprint() {
        return this.labelFingerprint;
    }
    /**
     * Configuration for the legacy ABAC authorization mode.
     * 
    */
    public LegacyAbacResponse legacyAbac() {
        return this.legacyAbac;
    }
    /**
     * [Output only] The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/regions-zones/regions-zones#available) or [region](https://cloud.google.com/compute/docs/regions-zones/regions-zones#available) in which the cluster resides.
     * 
    */
    public String location() {
        return this.location;
    }
    /**
     * The list of Google Compute Engine [zones](https://cloud.google.com/compute/docs/zones#available) in which the cluster's nodes should be located. This field provides a default value if [NodePool.Locations](https://cloud.google.com/kubernetes-engine/docs/reference/rest/v1/projects.locations.clusters.nodePools#NodePool.FIELDS.locations) are not specified during node pool creation. Warning: changing cluster locations will update the [NodePool.Locations](https://cloud.google.com/kubernetes-engine/docs/reference/rest/v1/projects.locations.clusters.nodePools#NodePool.FIELDS.locations) of all node pools and will result in nodes being added and/or removed.
     * 
    */
    public List<String> locations() {
        return this.locations;
    }
    /**
     * Logging configuration for the cluster.
     * 
    */
    public LoggingConfigResponse loggingConfig() {
        return this.loggingConfig;
    }
    /**
     * The logging service the cluster should use to write logs. Currently available options: * `logging.googleapis.com/kubernetes` - The Cloud Logging service with a Kubernetes-native resource model * `logging.googleapis.com` - The legacy Cloud Logging service (no longer available as of GKE 1.15). * `none` - no logs will be exported from the cluster. If left as an empty string,`logging.googleapis.com/kubernetes` will be used for GKE 1.14+ or `logging.googleapis.com` for earlier versions.
     * 
    */
    public String loggingService() {
        return this.loggingService;
    }
    /**
     * Configure the maintenance policy for this cluster.
     * 
    */
    public MaintenancePolicyResponse maintenancePolicy() {
        return this.maintenancePolicy;
    }
    /**
     * Configuration for master components.
     * 
    */
    public MasterResponse master() {
        return this.master;
    }
    /**
     * The authentication information for accessing the master endpoint. If unspecified, the defaults are used: For clusters before v1.12, if master_auth is unspecified, `username` will be set to "admin", a random password will be generated, and a client certificate will be issued.
     * 
    */
    public MasterAuthResponse masterAuth() {
        return this.masterAuth;
    }
    /**
     * The configuration options for master authorized networks feature.
     * 
    */
    public MasterAuthorizedNetworksConfigResponse masterAuthorizedNetworksConfig() {
        return this.masterAuthorizedNetworksConfig;
    }
    /**
     * Configuration for issuance of mTLS keys and certificates to Kubernetes pods.
     * 
    */
    public MeshCertificatesResponse meshCertificates() {
        return this.meshCertificates;
    }
    /**
     * Monitoring configuration for the cluster.
     * 
    */
    public MonitoringConfigResponse monitoringConfig() {
        return this.monitoringConfig;
    }
    /**
     * The monitoring service the cluster should use to write metrics. Currently available options: * "monitoring.googleapis.com/kubernetes" - The Cloud Monitoring service with a Kubernetes-native resource model * `monitoring.googleapis.com` - The legacy Cloud Monitoring service (no longer available as of GKE 1.15). * `none` - No metrics will be exported from the cluster. If left as an empty string,`monitoring.googleapis.com/kubernetes` will be used for GKE 1.14+ or `monitoring.googleapis.com` for earlier versions.
     * 
    */
    public String monitoringService() {
        return this.monitoringService;
    }
    /**
     * The name of this cluster. The name must be unique within this project and location (e.g. zone or region), and can be up to 40 characters with the following restrictions: * Lowercase letters, numbers, and hyphens only. * Must start with a letter. * Must end with a number or a letter.
     * 
    */
    public String name() {
        return this.name;
    }
    /**
     * The name of the Google Compute Engine [network](https://cloud.google.com/compute/docs/networks-and-firewalls#networks) to which the cluster is connected. If left unspecified, the `default` network will be used. On output this shows the network ID instead of the name.
     * 
    */
    public String network() {
        return this.network;
    }
    /**
     * Configuration for cluster networking.
     * 
    */
    public NetworkConfigResponse networkConfig() {
        return this.networkConfig;
    }
    /**
     * Configuration options for the NetworkPolicy feature.
     * 
    */
    public NetworkPolicyResponse networkPolicy() {
        return this.networkPolicy;
    }
    /**
     * [Output only] The size of the address space on each node for hosting containers. This is provisioned from within the `container_ipv4_cidr` range. This field will only be set when cluster is in route-based network mode.
     * 
    */
    public Integer nodeIpv4CidrSize() {
        return this.nodeIpv4CidrSize;
    }
    /**
     * Default NodePool settings for the entire cluster. These settings are overridden if specified on the specific NodePool object.
     * 
    */
    public NodePoolDefaultsResponse nodePoolDefaults() {
        return this.nodePoolDefaults;
    }
    /**
     * The node pools associated with this cluster. This field should not be set if "node_config" or "initial_node_count" are specified.
     * 
    */
    public List<NodePoolResponse> nodePools() {
        return this.nodePools;
    }
    /**
     * Notification configuration of the cluster.
     * 
    */
    public NotificationConfigResponse notificationConfig() {
        return this.notificationConfig;
    }
    /**
     * Configuration for the PodSecurityPolicy feature.
     * 
    */
    public PodSecurityPolicyConfigResponse podSecurityPolicyConfig() {
        return this.podSecurityPolicyConfig;
    }
    /**
     * Configuration for private cluster.
     * 
    */
    public PrivateClusterConfigResponse privateClusterConfig() {
        return this.privateClusterConfig;
    }
    /**
     * Release channel configuration.
     * 
    */
    public ReleaseChannelResponse releaseChannel() {
        return this.releaseChannel;
    }
    /**
     * The resource labels for the cluster to use to annotate any related Google Compute Engine resources.
     * 
    */
    public Map<String,String> resourceLabels() {
        return this.resourceLabels;
    }
    /**
     * Configuration for exporting resource usages. Resource usage export is disabled when this config unspecified.
     * 
    */
    public ResourceUsageExportConfigResponse resourceUsageExportConfig() {
        return this.resourceUsageExportConfig;
    }
    /**
     * [Output only] Server-defined URL for the resource.
     * 
    */
    public String selfLink() {
        return this.selfLink;
    }
    /**
     * [Output only] The IP address range of the Kubernetes services in this cluster, in [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing) notation (e.g. `1.2.3.4/29`). Service addresses are typically put in the last `/16` from the container CIDR.
     * 
    */
    public String servicesIpv4Cidr() {
        return this.servicesIpv4Cidr;
    }
    /**
     * Shielded Nodes configuration.
     * 
    */
    public ShieldedNodesResponse shieldedNodes() {
        return this.shieldedNodes;
    }
    /**
     * [Output only] The current status of this cluster.
     * 
    */
    public String status() {
        return this.status;
    }
    /**
     * The name of the Google Compute Engine [subnetwork](https://cloud.google.com/compute/docs/subnetworks) to which the cluster is connected. On output this shows the subnetwork ID instead of the name.
     * 
    */
    public String subnetwork() {
        return this.subnetwork;
    }
    /**
     * Configuration for Cloud TPU support;
     * 
    */
    public TpuConfigResponse tpuConfig() {
        return this.tpuConfig;
    }
    /**
     * [Output only] The IP address range of the Cloud TPUs in this cluster, in [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing) notation (e.g. `1.2.3.4/29`).
     * 
    */
    public String tpuIpv4CidrBlock() {
        return this.tpuIpv4CidrBlock;
    }
    /**
     * Cluster-level Vertical Pod Autoscaling configuration.
     * 
    */
    public VerticalPodAutoscalingResponse verticalPodAutoscaling() {
        return this.verticalPodAutoscaling;
    }
    /**
     * Configuration for issuance of mTLS keys and certificates to Kubernetes pods.
     * 
    */
    public WorkloadCertificatesResponse workloadCertificates() {
        return this.workloadCertificates;
    }
    /**
     * Configuration for the use of Kubernetes Service Accounts in GCP IAM policies.
     * 
    */
    public WorkloadIdentityConfigResponse workloadIdentityConfig() {
        return this.workloadIdentityConfig;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetClusterResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AddonsConfigResponse addonsConfig;
        private AuthenticatorGroupsConfigResponse authenticatorGroupsConfig;
        private AutopilotResponse autopilot;
        private ClusterAutoscalingResponse autoscaling;
        private BinaryAuthorizationResponse binaryAuthorization;
        private String clusterIpv4Cidr;
        private ClusterTelemetryResponse clusterTelemetry;
        private List<StatusConditionResponse> conditions;
        private ConfidentialNodesResponse confidentialNodes;
        private String createTime;
        private String currentMasterVersion;
        private String currentNodeVersion;
        private DatabaseEncryptionResponse databaseEncryption;
        private MaxPodsConstraintResponse defaultMaxPodsConstraint;
        private String description;
        private Boolean enableKubernetesAlpha;
        private String endpoint;
        private String expireTime;
        private IdentityServiceConfigResponse identityServiceConfig;
        private String initialClusterVersion;
        private IPAllocationPolicyResponse ipAllocationPolicy;
        private String labelFingerprint;
        private LegacyAbacResponse legacyAbac;
        private String location;
        private List<String> locations;
        private LoggingConfigResponse loggingConfig;
        private String loggingService;
        private MaintenancePolicyResponse maintenancePolicy;
        private MasterResponse master;
        private MasterAuthResponse masterAuth;
        private MasterAuthorizedNetworksConfigResponse masterAuthorizedNetworksConfig;
        private MeshCertificatesResponse meshCertificates;
        private MonitoringConfigResponse monitoringConfig;
        private String monitoringService;
        private String name;
        private String network;
        private NetworkConfigResponse networkConfig;
        private NetworkPolicyResponse networkPolicy;
        private Integer nodeIpv4CidrSize;
        private NodePoolDefaultsResponse nodePoolDefaults;
        private List<NodePoolResponse> nodePools;
        private NotificationConfigResponse notificationConfig;
        private PodSecurityPolicyConfigResponse podSecurityPolicyConfig;
        private PrivateClusterConfigResponse privateClusterConfig;
        private ReleaseChannelResponse releaseChannel;
        private Map<String,String> resourceLabels;
        private ResourceUsageExportConfigResponse resourceUsageExportConfig;
        private String selfLink;
        private String servicesIpv4Cidr;
        private ShieldedNodesResponse shieldedNodes;
        private String status;
        private String subnetwork;
        private TpuConfigResponse tpuConfig;
        private String tpuIpv4CidrBlock;
        private VerticalPodAutoscalingResponse verticalPodAutoscaling;
        private WorkloadCertificatesResponse workloadCertificates;
        private WorkloadIdentityConfigResponse workloadIdentityConfig;

        public Builder() {
    	      // Empty
        }

        public Builder(GetClusterResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.addonsConfig = defaults.addonsConfig;
    	      this.authenticatorGroupsConfig = defaults.authenticatorGroupsConfig;
    	      this.autopilot = defaults.autopilot;
    	      this.autoscaling = defaults.autoscaling;
    	      this.binaryAuthorization = defaults.binaryAuthorization;
    	      this.clusterIpv4Cidr = defaults.clusterIpv4Cidr;
    	      this.clusterTelemetry = defaults.clusterTelemetry;
    	      this.conditions = defaults.conditions;
    	      this.confidentialNodes = defaults.confidentialNodes;
    	      this.createTime = defaults.createTime;
    	      this.currentMasterVersion = defaults.currentMasterVersion;
    	      this.currentNodeVersion = defaults.currentNodeVersion;
    	      this.databaseEncryption = defaults.databaseEncryption;
    	      this.defaultMaxPodsConstraint = defaults.defaultMaxPodsConstraint;
    	      this.description = defaults.description;
    	      this.enableKubernetesAlpha = defaults.enableKubernetesAlpha;
    	      this.endpoint = defaults.endpoint;
    	      this.expireTime = defaults.expireTime;
    	      this.identityServiceConfig = defaults.identityServiceConfig;
    	      this.initialClusterVersion = defaults.initialClusterVersion;
    	      this.ipAllocationPolicy = defaults.ipAllocationPolicy;
    	      this.labelFingerprint = defaults.labelFingerprint;
    	      this.legacyAbac = defaults.legacyAbac;
    	      this.location = defaults.location;
    	      this.locations = defaults.locations;
    	      this.loggingConfig = defaults.loggingConfig;
    	      this.loggingService = defaults.loggingService;
    	      this.maintenancePolicy = defaults.maintenancePolicy;
    	      this.master = defaults.master;
    	      this.masterAuth = defaults.masterAuth;
    	      this.masterAuthorizedNetworksConfig = defaults.masterAuthorizedNetworksConfig;
    	      this.meshCertificates = defaults.meshCertificates;
    	      this.monitoringConfig = defaults.monitoringConfig;
    	      this.monitoringService = defaults.monitoringService;
    	      this.name = defaults.name;
    	      this.network = defaults.network;
    	      this.networkConfig = defaults.networkConfig;
    	      this.networkPolicy = defaults.networkPolicy;
    	      this.nodeIpv4CidrSize = defaults.nodeIpv4CidrSize;
    	      this.nodePoolDefaults = defaults.nodePoolDefaults;
    	      this.nodePools = defaults.nodePools;
    	      this.notificationConfig = defaults.notificationConfig;
    	      this.podSecurityPolicyConfig = defaults.podSecurityPolicyConfig;
    	      this.privateClusterConfig = defaults.privateClusterConfig;
    	      this.releaseChannel = defaults.releaseChannel;
    	      this.resourceLabels = defaults.resourceLabels;
    	      this.resourceUsageExportConfig = defaults.resourceUsageExportConfig;
    	      this.selfLink = defaults.selfLink;
    	      this.servicesIpv4Cidr = defaults.servicesIpv4Cidr;
    	      this.shieldedNodes = defaults.shieldedNodes;
    	      this.status = defaults.status;
    	      this.subnetwork = defaults.subnetwork;
    	      this.tpuConfig = defaults.tpuConfig;
    	      this.tpuIpv4CidrBlock = defaults.tpuIpv4CidrBlock;
    	      this.verticalPodAutoscaling = defaults.verticalPodAutoscaling;
    	      this.workloadCertificates = defaults.workloadCertificates;
    	      this.workloadIdentityConfig = defaults.workloadIdentityConfig;
        }

        public Builder addonsConfig(AddonsConfigResponse addonsConfig) {
            this.addonsConfig = Objects.requireNonNull(addonsConfig);
            return this;
        }
        public Builder authenticatorGroupsConfig(AuthenticatorGroupsConfigResponse authenticatorGroupsConfig) {
            this.authenticatorGroupsConfig = Objects.requireNonNull(authenticatorGroupsConfig);
            return this;
        }
        public Builder autopilot(AutopilotResponse autopilot) {
            this.autopilot = Objects.requireNonNull(autopilot);
            return this;
        }
        public Builder autoscaling(ClusterAutoscalingResponse autoscaling) {
            this.autoscaling = Objects.requireNonNull(autoscaling);
            return this;
        }
        public Builder binaryAuthorization(BinaryAuthorizationResponse binaryAuthorization) {
            this.binaryAuthorization = Objects.requireNonNull(binaryAuthorization);
            return this;
        }
        public Builder clusterIpv4Cidr(String clusterIpv4Cidr) {
            this.clusterIpv4Cidr = Objects.requireNonNull(clusterIpv4Cidr);
            return this;
        }
        public Builder clusterTelemetry(ClusterTelemetryResponse clusterTelemetry) {
            this.clusterTelemetry = Objects.requireNonNull(clusterTelemetry);
            return this;
        }
        public Builder conditions(List<StatusConditionResponse> conditions) {
            this.conditions = Objects.requireNonNull(conditions);
            return this;
        }
        public Builder conditions(StatusConditionResponse... conditions) {
            return conditions(List.of(conditions));
        }
        public Builder confidentialNodes(ConfidentialNodesResponse confidentialNodes) {
            this.confidentialNodes = Objects.requireNonNull(confidentialNodes);
            return this;
        }
        public Builder createTime(String createTime) {
            this.createTime = Objects.requireNonNull(createTime);
            return this;
        }
        public Builder currentMasterVersion(String currentMasterVersion) {
            this.currentMasterVersion = Objects.requireNonNull(currentMasterVersion);
            return this;
        }
        public Builder currentNodeVersion(String currentNodeVersion) {
            this.currentNodeVersion = Objects.requireNonNull(currentNodeVersion);
            return this;
        }
        public Builder databaseEncryption(DatabaseEncryptionResponse databaseEncryption) {
            this.databaseEncryption = Objects.requireNonNull(databaseEncryption);
            return this;
        }
        public Builder defaultMaxPodsConstraint(MaxPodsConstraintResponse defaultMaxPodsConstraint) {
            this.defaultMaxPodsConstraint = Objects.requireNonNull(defaultMaxPodsConstraint);
            return this;
        }
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        public Builder enableKubernetesAlpha(Boolean enableKubernetesAlpha) {
            this.enableKubernetesAlpha = Objects.requireNonNull(enableKubernetesAlpha);
            return this;
        }
        public Builder endpoint(String endpoint) {
            this.endpoint = Objects.requireNonNull(endpoint);
            return this;
        }
        public Builder expireTime(String expireTime) {
            this.expireTime = Objects.requireNonNull(expireTime);
            return this;
        }
        public Builder identityServiceConfig(IdentityServiceConfigResponse identityServiceConfig) {
            this.identityServiceConfig = Objects.requireNonNull(identityServiceConfig);
            return this;
        }
        public Builder initialClusterVersion(String initialClusterVersion) {
            this.initialClusterVersion = Objects.requireNonNull(initialClusterVersion);
            return this;
        }
        public Builder ipAllocationPolicy(IPAllocationPolicyResponse ipAllocationPolicy) {
            this.ipAllocationPolicy = Objects.requireNonNull(ipAllocationPolicy);
            return this;
        }
        public Builder labelFingerprint(String labelFingerprint) {
            this.labelFingerprint = Objects.requireNonNull(labelFingerprint);
            return this;
        }
        public Builder legacyAbac(LegacyAbacResponse legacyAbac) {
            this.legacyAbac = Objects.requireNonNull(legacyAbac);
            return this;
        }
        public Builder location(String location) {
            this.location = Objects.requireNonNull(location);
            return this;
        }
        public Builder locations(List<String> locations) {
            this.locations = Objects.requireNonNull(locations);
            return this;
        }
        public Builder locations(String... locations) {
            return locations(List.of(locations));
        }
        public Builder loggingConfig(LoggingConfigResponse loggingConfig) {
            this.loggingConfig = Objects.requireNonNull(loggingConfig);
            return this;
        }
        public Builder loggingService(String loggingService) {
            this.loggingService = Objects.requireNonNull(loggingService);
            return this;
        }
        public Builder maintenancePolicy(MaintenancePolicyResponse maintenancePolicy) {
            this.maintenancePolicy = Objects.requireNonNull(maintenancePolicy);
            return this;
        }
        public Builder master(MasterResponse master) {
            this.master = Objects.requireNonNull(master);
            return this;
        }
        public Builder masterAuth(MasterAuthResponse masterAuth) {
            this.masterAuth = Objects.requireNonNull(masterAuth);
            return this;
        }
        public Builder masterAuthorizedNetworksConfig(MasterAuthorizedNetworksConfigResponse masterAuthorizedNetworksConfig) {
            this.masterAuthorizedNetworksConfig = Objects.requireNonNull(masterAuthorizedNetworksConfig);
            return this;
        }
        public Builder meshCertificates(MeshCertificatesResponse meshCertificates) {
            this.meshCertificates = Objects.requireNonNull(meshCertificates);
            return this;
        }
        public Builder monitoringConfig(MonitoringConfigResponse monitoringConfig) {
            this.monitoringConfig = Objects.requireNonNull(monitoringConfig);
            return this;
        }
        public Builder monitoringService(String monitoringService) {
            this.monitoringService = Objects.requireNonNull(monitoringService);
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder network(String network) {
            this.network = Objects.requireNonNull(network);
            return this;
        }
        public Builder networkConfig(NetworkConfigResponse networkConfig) {
            this.networkConfig = Objects.requireNonNull(networkConfig);
            return this;
        }
        public Builder networkPolicy(NetworkPolicyResponse networkPolicy) {
            this.networkPolicy = Objects.requireNonNull(networkPolicy);
            return this;
        }
        public Builder nodeIpv4CidrSize(Integer nodeIpv4CidrSize) {
            this.nodeIpv4CidrSize = Objects.requireNonNull(nodeIpv4CidrSize);
            return this;
        }
        public Builder nodePoolDefaults(NodePoolDefaultsResponse nodePoolDefaults) {
            this.nodePoolDefaults = Objects.requireNonNull(nodePoolDefaults);
            return this;
        }
        public Builder nodePools(List<NodePoolResponse> nodePools) {
            this.nodePools = Objects.requireNonNull(nodePools);
            return this;
        }
        public Builder nodePools(NodePoolResponse... nodePools) {
            return nodePools(List.of(nodePools));
        }
        public Builder notificationConfig(NotificationConfigResponse notificationConfig) {
            this.notificationConfig = Objects.requireNonNull(notificationConfig);
            return this;
        }
        public Builder podSecurityPolicyConfig(PodSecurityPolicyConfigResponse podSecurityPolicyConfig) {
            this.podSecurityPolicyConfig = Objects.requireNonNull(podSecurityPolicyConfig);
            return this;
        }
        public Builder privateClusterConfig(PrivateClusterConfigResponse privateClusterConfig) {
            this.privateClusterConfig = Objects.requireNonNull(privateClusterConfig);
            return this;
        }
        public Builder releaseChannel(ReleaseChannelResponse releaseChannel) {
            this.releaseChannel = Objects.requireNonNull(releaseChannel);
            return this;
        }
        public Builder resourceLabels(Map<String,String> resourceLabels) {
            this.resourceLabels = Objects.requireNonNull(resourceLabels);
            return this;
        }
        public Builder resourceUsageExportConfig(ResourceUsageExportConfigResponse resourceUsageExportConfig) {
            this.resourceUsageExportConfig = Objects.requireNonNull(resourceUsageExportConfig);
            return this;
        }
        public Builder selfLink(String selfLink) {
            this.selfLink = Objects.requireNonNull(selfLink);
            return this;
        }
        public Builder servicesIpv4Cidr(String servicesIpv4Cidr) {
            this.servicesIpv4Cidr = Objects.requireNonNull(servicesIpv4Cidr);
            return this;
        }
        public Builder shieldedNodes(ShieldedNodesResponse shieldedNodes) {
            this.shieldedNodes = Objects.requireNonNull(shieldedNodes);
            return this;
        }
        public Builder status(String status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }
        public Builder subnetwork(String subnetwork) {
            this.subnetwork = Objects.requireNonNull(subnetwork);
            return this;
        }
        public Builder tpuConfig(TpuConfigResponse tpuConfig) {
            this.tpuConfig = Objects.requireNonNull(tpuConfig);
            return this;
        }
        public Builder tpuIpv4CidrBlock(String tpuIpv4CidrBlock) {
            this.tpuIpv4CidrBlock = Objects.requireNonNull(tpuIpv4CidrBlock);
            return this;
        }
        public Builder verticalPodAutoscaling(VerticalPodAutoscalingResponse verticalPodAutoscaling) {
            this.verticalPodAutoscaling = Objects.requireNonNull(verticalPodAutoscaling);
            return this;
        }
        public Builder workloadCertificates(WorkloadCertificatesResponse workloadCertificates) {
            this.workloadCertificates = Objects.requireNonNull(workloadCertificates);
            return this;
        }
        public Builder workloadIdentityConfig(WorkloadIdentityConfigResponse workloadIdentityConfig) {
            this.workloadIdentityConfig = Objects.requireNonNull(workloadIdentityConfig);
            return this;
        }        public GetClusterResult build() {
            return new GetClusterResult(addonsConfig, authenticatorGroupsConfig, autopilot, autoscaling, binaryAuthorization, clusterIpv4Cidr, clusterTelemetry, conditions, confidentialNodes, createTime, currentMasterVersion, currentNodeVersion, databaseEncryption, defaultMaxPodsConstraint, description, enableKubernetesAlpha, endpoint, expireTime, identityServiceConfig, initialClusterVersion, ipAllocationPolicy, labelFingerprint, legacyAbac, location, locations, loggingConfig, loggingService, maintenancePolicy, master, masterAuth, masterAuthorizedNetworksConfig, meshCertificates, monitoringConfig, monitoringService, name, network, networkConfig, networkPolicy, nodeIpv4CidrSize, nodePoolDefaults, nodePools, notificationConfig, podSecurityPolicyConfig, privateClusterConfig, releaseChannel, resourceLabels, resourceUsageExportConfig, selfLink, servicesIpv4Cidr, shieldedNodes, status, subnetwork, tpuConfig, tpuIpv4CidrBlock, verticalPodAutoscaling, workloadCertificates, workloadIdentityConfig);
        }
    }
}
