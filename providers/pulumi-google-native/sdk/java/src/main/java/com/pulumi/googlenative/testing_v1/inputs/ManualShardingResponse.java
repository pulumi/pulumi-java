// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.testing_v1.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.testing_v1.inputs.TestTargetsForShardResponse;
import java.util.List;
import java.util.Objects;


/**
 * Shards test cases into the specified groups of packages, classes, and/or methods. With manual sharding enabled, specifying test targets via environment_variables or in InstrumentationTest is invalid.
 * 
 */
public final class ManualShardingResponse extends com.pulumi.resources.InvokeArgs {

    public static final ManualShardingResponse Empty = new ManualShardingResponse();

    /**
     * Group of packages, classes, and/or test methods to be run for each shard. When any physical devices are selected, the number of test_targets_for_shard must be &gt;= 1 and &lt;= 50. When no physical devices are selected, the number must be &gt;= 1 and &lt;= 500.
     * 
     */
    @Import(name="testTargetsForShard", required=true)
    private List<TestTargetsForShardResponse> testTargetsForShard;

    /**
     * @return Group of packages, classes, and/or test methods to be run for each shard. When any physical devices are selected, the number of test_targets_for_shard must be &gt;= 1 and &lt;= 50. When no physical devices are selected, the number must be &gt;= 1 and &lt;= 500.
     * 
     */
    public List<TestTargetsForShardResponse> testTargetsForShard() {
        return this.testTargetsForShard;
    }

    private ManualShardingResponse() {}

    private ManualShardingResponse(ManualShardingResponse $) {
        this.testTargetsForShard = $.testTargetsForShard;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ManualShardingResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ManualShardingResponse $;

        public Builder() {
            $ = new ManualShardingResponse();
        }

        public Builder(ManualShardingResponse defaults) {
            $ = new ManualShardingResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param testTargetsForShard Group of packages, classes, and/or test methods to be run for each shard. When any physical devices are selected, the number of test_targets_for_shard must be &gt;= 1 and &lt;= 50. When no physical devices are selected, the number must be &gt;= 1 and &lt;= 500.
         * 
         * @return builder
         * 
         */
        public Builder testTargetsForShard(List<TestTargetsForShardResponse> testTargetsForShard) {
            $.testTargetsForShard = testTargetsForShard;
            return this;
        }

        /**
         * @param testTargetsForShard Group of packages, classes, and/or test methods to be run for each shard. When any physical devices are selected, the number of test_targets_for_shard must be &gt;= 1 and &lt;= 50. When no physical devices are selected, the number must be &gt;= 1 and &lt;= 500.
         * 
         * @return builder
         * 
         */
        public Builder testTargetsForShard(TestTargetsForShardResponse... testTargetsForShard) {
            return testTargetsForShard(List.of(testTargetsForShard));
        }

        public ManualShardingResponse build() {
            $.testTargetsForShard = Objects.requireNonNull($.testTargetsForShard, "expected parameter 'testTargetsForShard' to be non-null");
            return $;
        }
    }

}
