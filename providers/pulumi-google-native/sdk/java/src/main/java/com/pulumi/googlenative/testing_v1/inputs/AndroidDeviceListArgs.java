// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.testing_v1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import com.pulumi.googlenative.testing_v1.inputs.AndroidDeviceArgs;
import java.util.List;
import java.util.Objects;


/**
 * A list of Android device configurations in which the test is to be executed.
 * 
 */
public final class AndroidDeviceListArgs extends com.pulumi.resources.ResourceArgs {

    public static final AndroidDeviceListArgs Empty = new AndroidDeviceListArgs();

    /**
     * A list of Android devices.
     * 
     */
    @Import(name="androidDevices", required=true)
      private final Output<List<AndroidDeviceArgs>> androidDevices;

    public Output<List<AndroidDeviceArgs>> androidDevices() {
        return this.androidDevices;
    }

    public AndroidDeviceListArgs(Output<List<AndroidDeviceArgs>> androidDevices) {
        this.androidDevices = Objects.requireNonNull(androidDevices, "expected parameter 'androidDevices' to be non-null");
    }

    private AndroidDeviceListArgs() {
        this.androidDevices = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AndroidDeviceListArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<List<AndroidDeviceArgs>> androidDevices;

        public Builder() {
    	      // Empty
        }

        public Builder(AndroidDeviceListArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.androidDevices = defaults.androidDevices;
        }

        public Builder androidDevices(Output<List<AndroidDeviceArgs>> androidDevices) {
            this.androidDevices = Objects.requireNonNull(androidDevices);
            return this;
        }
        public Builder androidDevices(List<AndroidDeviceArgs> androidDevices) {
            this.androidDevices = Output.of(Objects.requireNonNull(androidDevices));
            return this;
        }
        public Builder androidDevices(AndroidDeviceArgs... androidDevices) {
            return androidDevices(List.of(androidDevices));
        }        public AndroidDeviceListArgs build() {
            return new AndroidDeviceListArgs(androidDevices);
        }
    }
}
