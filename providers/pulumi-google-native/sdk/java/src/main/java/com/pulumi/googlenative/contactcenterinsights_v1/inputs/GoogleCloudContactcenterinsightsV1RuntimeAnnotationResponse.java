// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.contactcenterinsights_v1.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.contactcenterinsights_v1.inputs.GoogleCloudContactcenterinsightsV1AnnotationBoundaryResponse;
import com.pulumi.googlenative.contactcenterinsights_v1.inputs.GoogleCloudContactcenterinsightsV1AnswerFeedbackResponse;
import com.pulumi.googlenative.contactcenterinsights_v1.inputs.GoogleCloudContactcenterinsightsV1ArticleSuggestionDataResponse;
import com.pulumi.googlenative.contactcenterinsights_v1.inputs.GoogleCloudContactcenterinsightsV1DialogflowInteractionDataResponse;
import com.pulumi.googlenative.contactcenterinsights_v1.inputs.GoogleCloudContactcenterinsightsV1FaqAnswerDataResponse;
import com.pulumi.googlenative.contactcenterinsights_v1.inputs.GoogleCloudContactcenterinsightsV1SmartComposeSuggestionDataResponse;
import com.pulumi.googlenative.contactcenterinsights_v1.inputs.GoogleCloudContactcenterinsightsV1SmartReplyDataResponse;
import java.lang.String;
import java.util.Objects;


/**
 * An annotation that was generated during the customer and agent interaction.
 * 
 */
public final class GoogleCloudContactcenterinsightsV1RuntimeAnnotationResponse extends com.pulumi.resources.InvokeArgs {

    public static final GoogleCloudContactcenterinsightsV1RuntimeAnnotationResponse Empty = new GoogleCloudContactcenterinsightsV1RuntimeAnnotationResponse();

    /**
     * The unique identifier of the annotation. Format: projects/{project}/locations/{location}/conversationDatasets/{dataset}/conversationDataItems/{data_item}/conversationAnnotations/{annotation}
     * 
     */
    @Import(name="annotationId", required=true)
    private String annotationId;

    public String annotationId() {
        return this.annotationId;
    }

    /**
     * The feedback that the customer has about the answer in `data`.
     * 
     */
    @Import(name="answerFeedback", required=true)
    private GoogleCloudContactcenterinsightsV1AnswerFeedbackResponse answerFeedback;

    public GoogleCloudContactcenterinsightsV1AnswerFeedbackResponse answerFeedback() {
        return this.answerFeedback;
    }

    /**
     * Agent Assist Article Suggestion data.
     * 
     */
    @Import(name="articleSuggestion", required=true)
    private GoogleCloudContactcenterinsightsV1ArticleSuggestionDataResponse articleSuggestion;

    public GoogleCloudContactcenterinsightsV1ArticleSuggestionDataResponse articleSuggestion() {
        return this.articleSuggestion;
    }

    /**
     * The time at which this annotation was created.
     * 
     */
    @Import(name="createTime", required=true)
    private String createTime;

    public String createTime() {
        return this.createTime;
    }

    /**
     * Dialogflow interaction data.
     * 
     */
    @Import(name="dialogflowInteraction", required=true)
    private GoogleCloudContactcenterinsightsV1DialogflowInteractionDataResponse dialogflowInteraction;

    public GoogleCloudContactcenterinsightsV1DialogflowInteractionDataResponse dialogflowInteraction() {
        return this.dialogflowInteraction;
    }

    /**
     * The boundary in the conversation where the annotation ends, inclusive.
     * 
     */
    @Import(name="endBoundary", required=true)
    private GoogleCloudContactcenterinsightsV1AnnotationBoundaryResponse endBoundary;

    public GoogleCloudContactcenterinsightsV1AnnotationBoundaryResponse endBoundary() {
        return this.endBoundary;
    }

    /**
     * Agent Assist FAQ answer data.
     * 
     */
    @Import(name="faqAnswer", required=true)
    private GoogleCloudContactcenterinsightsV1FaqAnswerDataResponse faqAnswer;

    public GoogleCloudContactcenterinsightsV1FaqAnswerDataResponse faqAnswer() {
        return this.faqAnswer;
    }

    /**
     * Agent Assist Smart Compose suggestion data.
     * 
     */
    @Import(name="smartComposeSuggestion", required=true)
    private GoogleCloudContactcenterinsightsV1SmartComposeSuggestionDataResponse smartComposeSuggestion;

    public GoogleCloudContactcenterinsightsV1SmartComposeSuggestionDataResponse smartComposeSuggestion() {
        return this.smartComposeSuggestion;
    }

    /**
     * Agent Assist Smart Reply data.
     * 
     */
    @Import(name="smartReply", required=true)
    private GoogleCloudContactcenterinsightsV1SmartReplyDataResponse smartReply;

    public GoogleCloudContactcenterinsightsV1SmartReplyDataResponse smartReply() {
        return this.smartReply;
    }

    /**
     * The boundary in the conversation where the annotation starts, inclusive.
     * 
     */
    @Import(name="startBoundary", required=true)
    private GoogleCloudContactcenterinsightsV1AnnotationBoundaryResponse startBoundary;

    public GoogleCloudContactcenterinsightsV1AnnotationBoundaryResponse startBoundary() {
        return this.startBoundary;
    }

    private GoogleCloudContactcenterinsightsV1RuntimeAnnotationResponse() {}

    private GoogleCloudContactcenterinsightsV1RuntimeAnnotationResponse(GoogleCloudContactcenterinsightsV1RuntimeAnnotationResponse $) {
        this.annotationId = $.annotationId;
        this.answerFeedback = $.answerFeedback;
        this.articleSuggestion = $.articleSuggestion;
        this.createTime = $.createTime;
        this.dialogflowInteraction = $.dialogflowInteraction;
        this.endBoundary = $.endBoundary;
        this.faqAnswer = $.faqAnswer;
        this.smartComposeSuggestion = $.smartComposeSuggestion;
        this.smartReply = $.smartReply;
        this.startBoundary = $.startBoundary;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GoogleCloudContactcenterinsightsV1RuntimeAnnotationResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GoogleCloudContactcenterinsightsV1RuntimeAnnotationResponse $;

        public Builder() {
            $ = new GoogleCloudContactcenterinsightsV1RuntimeAnnotationResponse();
        }

        public Builder(GoogleCloudContactcenterinsightsV1RuntimeAnnotationResponse defaults) {
            $ = new GoogleCloudContactcenterinsightsV1RuntimeAnnotationResponse(Objects.requireNonNull(defaults));
        }

        public Builder annotationId(String annotationId) {
            $.annotationId = annotationId;
            return this;
        }

        public Builder answerFeedback(GoogleCloudContactcenterinsightsV1AnswerFeedbackResponse answerFeedback) {
            $.answerFeedback = answerFeedback;
            return this;
        }

        public Builder articleSuggestion(GoogleCloudContactcenterinsightsV1ArticleSuggestionDataResponse articleSuggestion) {
            $.articleSuggestion = articleSuggestion;
            return this;
        }

        public Builder createTime(String createTime) {
            $.createTime = createTime;
            return this;
        }

        public Builder dialogflowInteraction(GoogleCloudContactcenterinsightsV1DialogflowInteractionDataResponse dialogflowInteraction) {
            $.dialogflowInteraction = dialogflowInteraction;
            return this;
        }

        public Builder endBoundary(GoogleCloudContactcenterinsightsV1AnnotationBoundaryResponse endBoundary) {
            $.endBoundary = endBoundary;
            return this;
        }

        public Builder faqAnswer(GoogleCloudContactcenterinsightsV1FaqAnswerDataResponse faqAnswer) {
            $.faqAnswer = faqAnswer;
            return this;
        }

        public Builder smartComposeSuggestion(GoogleCloudContactcenterinsightsV1SmartComposeSuggestionDataResponse smartComposeSuggestion) {
            $.smartComposeSuggestion = smartComposeSuggestion;
            return this;
        }

        public Builder smartReply(GoogleCloudContactcenterinsightsV1SmartReplyDataResponse smartReply) {
            $.smartReply = smartReply;
            return this;
        }

        public Builder startBoundary(GoogleCloudContactcenterinsightsV1AnnotationBoundaryResponse startBoundary) {
            $.startBoundary = startBoundary;
            return this;
        }

        public GoogleCloudContactcenterinsightsV1RuntimeAnnotationResponse build() {
            $.annotationId = Objects.requireNonNull($.annotationId, "expected parameter 'annotationId' to be non-null");
            $.answerFeedback = Objects.requireNonNull($.answerFeedback, "expected parameter 'answerFeedback' to be non-null");
            $.articleSuggestion = Objects.requireNonNull($.articleSuggestion, "expected parameter 'articleSuggestion' to be non-null");
            $.createTime = Objects.requireNonNull($.createTime, "expected parameter 'createTime' to be non-null");
            $.dialogflowInteraction = Objects.requireNonNull($.dialogflowInteraction, "expected parameter 'dialogflowInteraction' to be non-null");
            $.endBoundary = Objects.requireNonNull($.endBoundary, "expected parameter 'endBoundary' to be non-null");
            $.faqAnswer = Objects.requireNonNull($.faqAnswer, "expected parameter 'faqAnswer' to be non-null");
            $.smartComposeSuggestion = Objects.requireNonNull($.smartComposeSuggestion, "expected parameter 'smartComposeSuggestion' to be non-null");
            $.smartReply = Objects.requireNonNull($.smartReply, "expected parameter 'smartReply' to be non-null");
            $.startBoundary = Objects.requireNonNull($.startBoundary, "expected parameter 'startBoundary' to be non-null");
            return $;
        }
    }

}
