// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.datalabeling_v1beta1.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;


/**
 * Container of information related to one possible annotation that can be used in a labeling task. For example, an image classification task where images are labeled as `dog` or `cat` must reference an AnnotationSpec for `dog` and an AnnotationSpec for `cat`.
 * 
 */
public final class GoogleCloudDatalabelingV1beta1AnnotationSpecResponse extends com.pulumi.resources.InvokeArgs {

    public static final GoogleCloudDatalabelingV1beta1AnnotationSpecResponse Empty = new GoogleCloudDatalabelingV1beta1AnnotationSpecResponse();

    /**
     * Optional. User-provided description of the annotation specification. The description can be up to 10,000 characters long.
     * 
     */
    @Import(name="description", required=true)
    private String description;

    public String description() {
        return this.description;
    }

    /**
     * The display name of the AnnotationSpec. Maximum of 64 characters.
     * 
     */
    @Import(name="displayName", required=true)
    private String displayName;

    public String displayName() {
        return this.displayName;
    }

    /**
     * This is the integer index of the AnnotationSpec. The index for the whole AnnotationSpecSet is sequential starting from 0. For example, an AnnotationSpecSet with classes `dog` and `cat`, might contain one AnnotationSpec with `{ display_name: &#34;dog&#34;, index: 0 }` and one AnnotationSpec with `{ display_name: &#34;cat&#34;, index: 1 }`. This is especially useful for model training as it encodes the string labels into numeric values.
     * 
     */
    @Import(name="index", required=true)
    private Integer index;

    public Integer index() {
        return this.index;
    }

    private GoogleCloudDatalabelingV1beta1AnnotationSpecResponse() {}

    private GoogleCloudDatalabelingV1beta1AnnotationSpecResponse(GoogleCloudDatalabelingV1beta1AnnotationSpecResponse $) {
        this.description = $.description;
        this.displayName = $.displayName;
        this.index = $.index;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GoogleCloudDatalabelingV1beta1AnnotationSpecResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GoogleCloudDatalabelingV1beta1AnnotationSpecResponse $;

        public Builder() {
            $ = new GoogleCloudDatalabelingV1beta1AnnotationSpecResponse();
        }

        public Builder(GoogleCloudDatalabelingV1beta1AnnotationSpecResponse defaults) {
            $ = new GoogleCloudDatalabelingV1beta1AnnotationSpecResponse(Objects.requireNonNull(defaults));
        }

        public Builder description(String description) {
            $.description = description;
            return this;
        }

        public Builder displayName(String displayName) {
            $.displayName = displayName;
            return this;
        }

        public Builder index(Integer index) {
            $.index = index;
            return this;
        }

        public GoogleCloudDatalabelingV1beta1AnnotationSpecResponse build() {
            $.description = Objects.requireNonNull($.description, "expected parameter 'description' to be non-null");
            $.displayName = Objects.requireNonNull($.displayName, "expected parameter 'displayName' to be non-null");
            $.index = Objects.requireNonNull($.index, "expected parameter 'index' to be non-null");
            return $;
        }
    }

}
