// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.appengine.v1;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.appengine.v1.enums.VersionInboundServicesItem;
import com.pulumi.googlenative.appengine.v1.enums.VersionServingStatus;
import com.pulumi.googlenative.appengine.v1.inputs.ApiConfigHandlerArgs;
import com.pulumi.googlenative.appengine.v1.inputs.AutomaticScalingArgs;
import com.pulumi.googlenative.appengine.v1.inputs.BasicScalingArgs;
import com.pulumi.googlenative.appengine.v1.inputs.DeploymentArgs;
import com.pulumi.googlenative.appengine.v1.inputs.EndpointsApiServiceArgs;
import com.pulumi.googlenative.appengine.v1.inputs.EntrypointArgs;
import com.pulumi.googlenative.appengine.v1.inputs.ErrorHandlerArgs;
import com.pulumi.googlenative.appengine.v1.inputs.HealthCheckArgs;
import com.pulumi.googlenative.appengine.v1.inputs.LibraryArgs;
import com.pulumi.googlenative.appengine.v1.inputs.LivenessCheckArgs;
import com.pulumi.googlenative.appengine.v1.inputs.ManualScalingArgs;
import com.pulumi.googlenative.appengine.v1.inputs.NetworkArgs;
import com.pulumi.googlenative.appengine.v1.inputs.ReadinessCheckArgs;
import com.pulumi.googlenative.appengine.v1.inputs.ResourcesArgs;
import com.pulumi.googlenative.appengine.v1.inputs.UrlMapArgs;
import com.pulumi.googlenative.appengine.v1.inputs.VpcAccessConnectorArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VersionArgs extends com.pulumi.resources.ResourceArgs {

    public static final VersionArgs Empty = new VersionArgs();

    /**
     * Serving configuration for Google Cloud Endpoints (https://cloud.google.com/appengine/docs/python/endpoints/).Only returned in GET requests if view=FULL is set.
     * 
     */
    @Import(name="apiConfig")
    private @Nullable Output<ApiConfigHandlerArgs> apiConfig;

    /**
     * @return Serving configuration for Google Cloud Endpoints (https://cloud.google.com/appengine/docs/python/endpoints/).Only returned in GET requests if view=FULL is set.
     * 
     */
    public Optional<Output<ApiConfigHandlerArgs>> apiConfig() {
        return Optional.ofNullable(this.apiConfig);
    }

    /**
     * Allows App Engine second generation runtimes to access the legacy bundled services.
     * 
     */
    @Import(name="appEngineApis")
    private @Nullable Output<Boolean> appEngineApis;

    /**
     * @return Allows App Engine second generation runtimes to access the legacy bundled services.
     * 
     */
    public Optional<Output<Boolean>> appEngineApis() {
        return Optional.ofNullable(this.appEngineApis);
    }

    @Import(name="appId", required=true)
    private Output<String> appId;

    public Output<String> appId() {
        return this.appId;
    }

    /**
     * Automatic scaling is based on request rate, response latencies, and other application metrics. Instances are dynamically created and destroyed as needed in order to handle traffic.
     * 
     */
    @Import(name="automaticScaling")
    private @Nullable Output<AutomaticScalingArgs> automaticScaling;

    /**
     * @return Automatic scaling is based on request rate, response latencies, and other application metrics. Instances are dynamically created and destroyed as needed in order to handle traffic.
     * 
     */
    public Optional<Output<AutomaticScalingArgs>> automaticScaling() {
        return Optional.ofNullable(this.automaticScaling);
    }

    /**
     * A service with basic scaling will create an instance when the application receives a request. The instance will be turned down when the app becomes idle. Basic scaling is ideal for work that is intermittent or driven by user activity.
     * 
     */
    @Import(name="basicScaling")
    private @Nullable Output<BasicScalingArgs> basicScaling;

    /**
     * @return A service with basic scaling will create an instance when the application receives a request. The instance will be turned down when the app becomes idle. Basic scaling is ideal for work that is intermittent or driven by user activity.
     * 
     */
    public Optional<Output<BasicScalingArgs>> basicScaling() {
        return Optional.ofNullable(this.basicScaling);
    }

    /**
     * Metadata settings that are supplied to this version to enable beta runtime features.
     * 
     */
    @Import(name="betaSettings")
    private @Nullable Output<Map<String,String>> betaSettings;

    /**
     * @return Metadata settings that are supplied to this version to enable beta runtime features.
     * 
     */
    public Optional<Output<Map<String,String>>> betaSettings() {
        return Optional.ofNullable(this.betaSettings);
    }

    /**
     * Environment variables available to the build environment.Only returned in GET requests if view=FULL is set.
     * 
     */
    @Import(name="buildEnvVariables")
    private @Nullable Output<Map<String,String>> buildEnvVariables;

    /**
     * @return Environment variables available to the build environment.Only returned in GET requests if view=FULL is set.
     * 
     */
    public Optional<Output<Map<String,String>>> buildEnvVariables() {
        return Optional.ofNullable(this.buildEnvVariables);
    }

    /**
     * Duration that static files should be cached by web proxies and browsers. Only applicable if the corresponding StaticFilesHandler (https://cloud.google.com/appengine/docs/admin-api/reference/rest/v1/apps.services.versions#StaticFilesHandler) does not specify its own expiration time.Only returned in GET requests if view=FULL is set.
     * 
     */
    @Import(name="defaultExpiration")
    private @Nullable Output<String> defaultExpiration;

    /**
     * @return Duration that static files should be cached by web proxies and browsers. Only applicable if the corresponding StaticFilesHandler (https://cloud.google.com/appengine/docs/admin-api/reference/rest/v1/apps.services.versions#StaticFilesHandler) does not specify its own expiration time.Only returned in GET requests if view=FULL is set.
     * 
     */
    public Optional<Output<String>> defaultExpiration() {
        return Optional.ofNullable(this.defaultExpiration);
    }

    /**
     * Code and application artifacts that make up this version.Only returned in GET requests if view=FULL is set.
     * 
     */
    @Import(name="deployment")
    private @Nullable Output<DeploymentArgs> deployment;

    /**
     * @return Code and application artifacts that make up this version.Only returned in GET requests if view=FULL is set.
     * 
     */
    public Optional<Output<DeploymentArgs>> deployment() {
        return Optional.ofNullable(this.deployment);
    }

    /**
     * Cloud Endpoints configuration.If endpoints_api_service is set, the Cloud Endpoints Extensible Service Proxy will be provided to serve the API implemented by the app.
     * 
     */
    @Import(name="endpointsApiService")
    private @Nullable Output<EndpointsApiServiceArgs> endpointsApiService;

    /**
     * @return Cloud Endpoints configuration.If endpoints_api_service is set, the Cloud Endpoints Extensible Service Proxy will be provided to serve the API implemented by the app.
     * 
     */
    public Optional<Output<EndpointsApiServiceArgs>> endpointsApiService() {
        return Optional.ofNullable(this.endpointsApiService);
    }

    /**
     * The entrypoint for the application.
     * 
     */
    @Import(name="entrypoint")
    private @Nullable Output<EntrypointArgs> entrypoint;

    /**
     * @return The entrypoint for the application.
     * 
     */
    public Optional<Output<EntrypointArgs>> entrypoint() {
        return Optional.ofNullable(this.entrypoint);
    }

    /**
     * App Engine execution environment for this version.Defaults to standard.
     * 
     */
    @Import(name="env")
    private @Nullable Output<String> env;

    /**
     * @return App Engine execution environment for this version.Defaults to standard.
     * 
     */
    public Optional<Output<String>> env() {
        return Optional.ofNullable(this.env);
    }

    /**
     * Environment variables available to the application.Only returned in GET requests if view=FULL is set.
     * 
     */
    @Import(name="envVariables")
    private @Nullable Output<Map<String,String>> envVariables;

    /**
     * @return Environment variables available to the application.Only returned in GET requests if view=FULL is set.
     * 
     */
    public Optional<Output<Map<String,String>>> envVariables() {
        return Optional.ofNullable(this.envVariables);
    }

    /**
     * Custom static error pages. Limited to 10KB per page.Only returned in GET requests if view=FULL is set.
     * 
     */
    @Import(name="errorHandlers")
    private @Nullable Output<List<ErrorHandlerArgs>> errorHandlers;

    /**
     * @return Custom static error pages. Limited to 10KB per page.Only returned in GET requests if view=FULL is set.
     * 
     */
    public Optional<Output<List<ErrorHandlerArgs>>> errorHandlers() {
        return Optional.ofNullable(this.errorHandlers);
    }

    /**
     * An ordered list of URL-matching patterns that should be applied to incoming requests. The first matching URL handles the request and other request handlers are not attempted.Only returned in GET requests if view=FULL is set.
     * 
     */
    @Import(name="handlers")
    private @Nullable Output<List<UrlMapArgs>> handlers;

    /**
     * @return An ordered list of URL-matching patterns that should be applied to incoming requests. The first matching URL handles the request and other request handlers are not attempted.Only returned in GET requests if view=FULL is set.
     * 
     */
    public Optional<Output<List<UrlMapArgs>>> handlers() {
        return Optional.ofNullable(this.handlers);
    }

    /**
     * Configures health checking for instances. Unhealthy instances are stopped and replaced with new instances. Only applicable in the App Engine flexible environment.Only returned in GET requests if view=FULL is set.
     * 
     */
    @Import(name="healthCheck")
    private @Nullable Output<HealthCheckArgs> healthCheck;

    /**
     * @return Configures health checking for instances. Unhealthy instances are stopped and replaced with new instances. Only applicable in the App Engine flexible environment.Only returned in GET requests if view=FULL is set.
     * 
     */
    public Optional<Output<HealthCheckArgs>> healthCheck() {
        return Optional.ofNullable(this.healthCheck);
    }

    /**
     * Relative name of the version within the service. Example: v1. Version names can contain only lowercase letters, numbers, or hyphens. Reserved names: &#34;default&#34;, &#34;latest&#34;, and any name with the prefix &#34;ah-&#34;.
     * 
     */
    @Import(name="id")
    private @Nullable Output<String> id;

    /**
     * @return Relative name of the version within the service. Example: v1. Version names can contain only lowercase letters, numbers, or hyphens. Reserved names: &#34;default&#34;, &#34;latest&#34;, and any name with the prefix &#34;ah-&#34;.
     * 
     */
    public Optional<Output<String>> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * Before an application can receive email or XMPP messages, the application must be configured to enable the service.
     * 
     */
    @Import(name="inboundServices")
    private @Nullable Output<List<VersionInboundServicesItem>> inboundServices;

    /**
     * @return Before an application can receive email or XMPP messages, the application must be configured to enable the service.
     * 
     */
    public Optional<Output<List<VersionInboundServicesItem>>> inboundServices() {
        return Optional.ofNullable(this.inboundServices);
    }

    /**
     * Instance class that is used to run this version. Valid values are: AutomaticScaling: F1, F2, F4, F4_1G ManualScaling or BasicScaling: B1, B2, B4, B8, B4_1GDefaults to F1 for AutomaticScaling and B1 for ManualScaling or BasicScaling.
     * 
     */
    @Import(name="instanceClass")
    private @Nullable Output<String> instanceClass;

    /**
     * @return Instance class that is used to run this version. Valid values are: AutomaticScaling: F1, F2, F4, F4_1G ManualScaling or BasicScaling: B1, B2, B4, B8, B4_1GDefaults to F1 for AutomaticScaling and B1 for ManualScaling or BasicScaling.
     * 
     */
    public Optional<Output<String>> instanceClass() {
        return Optional.ofNullable(this.instanceClass);
    }

    /**
     * Configuration for third-party Python runtime libraries that are required by the application.Only returned in GET requests if view=FULL is set.
     * 
     */
    @Import(name="libraries")
    private @Nullable Output<List<LibraryArgs>> libraries;

    /**
     * @return Configuration for third-party Python runtime libraries that are required by the application.Only returned in GET requests if view=FULL is set.
     * 
     */
    public Optional<Output<List<LibraryArgs>>> libraries() {
        return Optional.ofNullable(this.libraries);
    }

    /**
     * Configures liveness health checking for instances. Unhealthy instances are stopped and replaced with new instancesOnly returned in GET requests if view=FULL is set.
     * 
     */
    @Import(name="livenessCheck")
    private @Nullable Output<LivenessCheckArgs> livenessCheck;

    /**
     * @return Configures liveness health checking for instances. Unhealthy instances are stopped and replaced with new instancesOnly returned in GET requests if view=FULL is set.
     * 
     */
    public Optional<Output<LivenessCheckArgs>> livenessCheck() {
        return Optional.ofNullable(this.livenessCheck);
    }

    /**
     * A service with manual scaling runs continuously, allowing you to perform complex initialization and rely on the state of its memory over time. Manually scaled versions are sometimes referred to as &#34;backends&#34;.
     * 
     */
    @Import(name="manualScaling")
    private @Nullable Output<ManualScalingArgs> manualScaling;

    /**
     * @return A service with manual scaling runs continuously, allowing you to perform complex initialization and rely on the state of its memory over time. Manually scaled versions are sometimes referred to as &#34;backends&#34;.
     * 
     */
    public Optional<Output<ManualScalingArgs>> manualScaling() {
        return Optional.ofNullable(this.manualScaling);
    }

    /**
     * Extra network settings. Only applicable in the App Engine flexible environment.
     * 
     */
    @Import(name="network")
    private @Nullable Output<NetworkArgs> network;

    /**
     * @return Extra network settings. Only applicable in the App Engine flexible environment.
     * 
     */
    public Optional<Output<NetworkArgs>> network() {
        return Optional.ofNullable(this.network);
    }

    /**
     * Files that match this pattern will not be built into this version. Only applicable for Go runtimes.Only returned in GET requests if view=FULL is set.
     * 
     */
    @Import(name="nobuildFilesRegex")
    private @Nullable Output<String> nobuildFilesRegex;

    /**
     * @return Files that match this pattern will not be built into this version. Only applicable for Go runtimes.Only returned in GET requests if view=FULL is set.
     * 
     */
    public Optional<Output<String>> nobuildFilesRegex() {
        return Optional.ofNullable(this.nobuildFilesRegex);
    }

    /**
     * Configures readiness health checking for instances. Unhealthy instances are not put into the backend traffic rotation.Only returned in GET requests if view=FULL is set.
     * 
     */
    @Import(name="readinessCheck")
    private @Nullable Output<ReadinessCheckArgs> readinessCheck;

    /**
     * @return Configures readiness health checking for instances. Unhealthy instances are not put into the backend traffic rotation.Only returned in GET requests if view=FULL is set.
     * 
     */
    public Optional<Output<ReadinessCheckArgs>> readinessCheck() {
        return Optional.ofNullable(this.readinessCheck);
    }

    /**
     * Machine resources for this version. Only applicable in the App Engine flexible environment.
     * 
     */
    @Import(name="resources")
    private @Nullable Output<ResourcesArgs> resources;

    /**
     * @return Machine resources for this version. Only applicable in the App Engine flexible environment.
     * 
     */
    public Optional<Output<ResourcesArgs>> resources() {
        return Optional.ofNullable(this.resources);
    }

    /**
     * Desired runtime. Example: python27.
     * 
     */
    @Import(name="runtime")
    private @Nullable Output<String> runtime;

    /**
     * @return Desired runtime. Example: python27.
     * 
     */
    public Optional<Output<String>> runtime() {
        return Optional.ofNullable(this.runtime);
    }

    /**
     * The version of the API in the given runtime environment. Please see the app.yaml reference for valid values at https://cloud.google.com/appengine/docs/standard//config/appref
     * 
     */
    @Import(name="runtimeApiVersion")
    private @Nullable Output<String> runtimeApiVersion;

    /**
     * @return The version of the API in the given runtime environment. Please see the app.yaml reference for valid values at https://cloud.google.com/appengine/docs/standard//config/appref
     * 
     */
    public Optional<Output<String>> runtimeApiVersion() {
        return Optional.ofNullable(this.runtimeApiVersion);
    }

    /**
     * The channel of the runtime to use. Only available for some runtimes. Defaults to the default channel.
     * 
     */
    @Import(name="runtimeChannel")
    private @Nullable Output<String> runtimeChannel;

    /**
     * @return The channel of the runtime to use. Only available for some runtimes. Defaults to the default channel.
     * 
     */
    public Optional<Output<String>> runtimeChannel() {
        return Optional.ofNullable(this.runtimeChannel);
    }

    /**
     * The path or name of the app&#39;s main executable.
     * 
     */
    @Import(name="runtimeMainExecutablePath")
    private @Nullable Output<String> runtimeMainExecutablePath;

    /**
     * @return The path or name of the app&#39;s main executable.
     * 
     */
    public Optional<Output<String>> runtimeMainExecutablePath() {
        return Optional.ofNullable(this.runtimeMainExecutablePath);
    }

    /**
     * The identity that the deployed version will run as. Admin API will use the App Engine Appspot service account as default if this field is neither provided in app.yaml file nor through CLI flag.
     * 
     */
    @Import(name="serviceAccount")
    private @Nullable Output<String> serviceAccount;

    /**
     * @return The identity that the deployed version will run as. Admin API will use the App Engine Appspot service account as default if this field is neither provided in app.yaml file nor through CLI flag.
     * 
     */
    public Optional<Output<String>> serviceAccount() {
        return Optional.ofNullable(this.serviceAccount);
    }

    @Import(name="serviceId", required=true)
    private Output<String> serviceId;

    public Output<String> serviceId() {
        return this.serviceId;
    }

    /**
     * Current serving status of this version. Only the versions with a SERVING status create instances and can be billed.SERVING_STATUS_UNSPECIFIED is an invalid value. Defaults to SERVING.
     * 
     */
    @Import(name="servingStatus")
    private @Nullable Output<VersionServingStatus> servingStatus;

    /**
     * @return Current serving status of this version. Only the versions with a SERVING status create instances and can be billed.SERVING_STATUS_UNSPECIFIED is an invalid value. Defaults to SERVING.
     * 
     */
    public Optional<Output<VersionServingStatus>> servingStatus() {
        return Optional.ofNullable(this.servingStatus);
    }

    /**
     * Whether multiple requests can be dispatched to this version at once.
     * 
     */
    @Import(name="threadsafe")
    private @Nullable Output<Boolean> threadsafe;

    /**
     * @return Whether multiple requests can be dispatched to this version at once.
     * 
     */
    public Optional<Output<Boolean>> threadsafe() {
        return Optional.ofNullable(this.threadsafe);
    }

    /**
     * Whether to deploy this version in a container on a virtual machine.
     * 
     */
    @Import(name="vm")
    private @Nullable Output<Boolean> vm;

    /**
     * @return Whether to deploy this version in a container on a virtual machine.
     * 
     */
    public Optional<Output<Boolean>> vm() {
        return Optional.ofNullable(this.vm);
    }

    /**
     * Enables VPC connectivity for standard apps.
     * 
     */
    @Import(name="vpcAccessConnector")
    private @Nullable Output<VpcAccessConnectorArgs> vpcAccessConnector;

    /**
     * @return Enables VPC connectivity for standard apps.
     * 
     */
    public Optional<Output<VpcAccessConnectorArgs>> vpcAccessConnector() {
        return Optional.ofNullable(this.vpcAccessConnector);
    }

    /**
     * The Google Compute Engine zones that are supported by this version in the App Engine flexible environment. Deprecated.
     * 
     * @deprecated
     * The Google Compute Engine zones that are supported by this version in the App Engine flexible environment. Deprecated.
     * 
     */
    @Deprecated /* The Google Compute Engine zones that are supported by this version in the App Engine flexible environment. Deprecated. */
    @Import(name="zones")
    private @Nullable Output<List<String>> zones;

    /**
     * @return The Google Compute Engine zones that are supported by this version in the App Engine flexible environment. Deprecated.
     * 
     * @deprecated
     * The Google Compute Engine zones that are supported by this version in the App Engine flexible environment. Deprecated.
     * 
     */
    @Deprecated /* The Google Compute Engine zones that are supported by this version in the App Engine flexible environment. Deprecated. */
    public Optional<Output<List<String>>> zones() {
        return Optional.ofNullable(this.zones);
    }

    private VersionArgs() {}

    private VersionArgs(VersionArgs $) {
        this.apiConfig = $.apiConfig;
        this.appEngineApis = $.appEngineApis;
        this.appId = $.appId;
        this.automaticScaling = $.automaticScaling;
        this.basicScaling = $.basicScaling;
        this.betaSettings = $.betaSettings;
        this.buildEnvVariables = $.buildEnvVariables;
        this.defaultExpiration = $.defaultExpiration;
        this.deployment = $.deployment;
        this.endpointsApiService = $.endpointsApiService;
        this.entrypoint = $.entrypoint;
        this.env = $.env;
        this.envVariables = $.envVariables;
        this.errorHandlers = $.errorHandlers;
        this.handlers = $.handlers;
        this.healthCheck = $.healthCheck;
        this.id = $.id;
        this.inboundServices = $.inboundServices;
        this.instanceClass = $.instanceClass;
        this.libraries = $.libraries;
        this.livenessCheck = $.livenessCheck;
        this.manualScaling = $.manualScaling;
        this.network = $.network;
        this.nobuildFilesRegex = $.nobuildFilesRegex;
        this.readinessCheck = $.readinessCheck;
        this.resources = $.resources;
        this.runtime = $.runtime;
        this.runtimeApiVersion = $.runtimeApiVersion;
        this.runtimeChannel = $.runtimeChannel;
        this.runtimeMainExecutablePath = $.runtimeMainExecutablePath;
        this.serviceAccount = $.serviceAccount;
        this.serviceId = $.serviceId;
        this.servingStatus = $.servingStatus;
        this.threadsafe = $.threadsafe;
        this.vm = $.vm;
        this.vpcAccessConnector = $.vpcAccessConnector;
        this.zones = $.zones;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VersionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VersionArgs $;

        public Builder() {
            $ = new VersionArgs();
        }

        public Builder(VersionArgs defaults) {
            $ = new VersionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param apiConfig Serving configuration for Google Cloud Endpoints (https://cloud.google.com/appengine/docs/python/endpoints/).Only returned in GET requests if view=FULL is set.
         * 
         * @return builder
         * 
         */
        public Builder apiConfig(@Nullable Output<ApiConfigHandlerArgs> apiConfig) {
            $.apiConfig = apiConfig;
            return this;
        }

        /**
         * @param apiConfig Serving configuration for Google Cloud Endpoints (https://cloud.google.com/appengine/docs/python/endpoints/).Only returned in GET requests if view=FULL is set.
         * 
         * @return builder
         * 
         */
        public Builder apiConfig(ApiConfigHandlerArgs apiConfig) {
            return apiConfig(Output.of(apiConfig));
        }

        /**
         * @param appEngineApis Allows App Engine second generation runtimes to access the legacy bundled services.
         * 
         * @return builder
         * 
         */
        public Builder appEngineApis(@Nullable Output<Boolean> appEngineApis) {
            $.appEngineApis = appEngineApis;
            return this;
        }

        /**
         * @param appEngineApis Allows App Engine second generation runtimes to access the legacy bundled services.
         * 
         * @return builder
         * 
         */
        public Builder appEngineApis(Boolean appEngineApis) {
            return appEngineApis(Output.of(appEngineApis));
        }

        public Builder appId(Output<String> appId) {
            $.appId = appId;
            return this;
        }

        public Builder appId(String appId) {
            return appId(Output.of(appId));
        }

        /**
         * @param automaticScaling Automatic scaling is based on request rate, response latencies, and other application metrics. Instances are dynamically created and destroyed as needed in order to handle traffic.
         * 
         * @return builder
         * 
         */
        public Builder automaticScaling(@Nullable Output<AutomaticScalingArgs> automaticScaling) {
            $.automaticScaling = automaticScaling;
            return this;
        }

        /**
         * @param automaticScaling Automatic scaling is based on request rate, response latencies, and other application metrics. Instances are dynamically created and destroyed as needed in order to handle traffic.
         * 
         * @return builder
         * 
         */
        public Builder automaticScaling(AutomaticScalingArgs automaticScaling) {
            return automaticScaling(Output.of(automaticScaling));
        }

        /**
         * @param basicScaling A service with basic scaling will create an instance when the application receives a request. The instance will be turned down when the app becomes idle. Basic scaling is ideal for work that is intermittent or driven by user activity.
         * 
         * @return builder
         * 
         */
        public Builder basicScaling(@Nullable Output<BasicScalingArgs> basicScaling) {
            $.basicScaling = basicScaling;
            return this;
        }

        /**
         * @param basicScaling A service with basic scaling will create an instance when the application receives a request. The instance will be turned down when the app becomes idle. Basic scaling is ideal for work that is intermittent or driven by user activity.
         * 
         * @return builder
         * 
         */
        public Builder basicScaling(BasicScalingArgs basicScaling) {
            return basicScaling(Output.of(basicScaling));
        }

        /**
         * @param betaSettings Metadata settings that are supplied to this version to enable beta runtime features.
         * 
         * @return builder
         * 
         */
        public Builder betaSettings(@Nullable Output<Map<String,String>> betaSettings) {
            $.betaSettings = betaSettings;
            return this;
        }

        /**
         * @param betaSettings Metadata settings that are supplied to this version to enable beta runtime features.
         * 
         * @return builder
         * 
         */
        public Builder betaSettings(Map<String,String> betaSettings) {
            return betaSettings(Output.of(betaSettings));
        }

        /**
         * @param buildEnvVariables Environment variables available to the build environment.Only returned in GET requests if view=FULL is set.
         * 
         * @return builder
         * 
         */
        public Builder buildEnvVariables(@Nullable Output<Map<String,String>> buildEnvVariables) {
            $.buildEnvVariables = buildEnvVariables;
            return this;
        }

        /**
         * @param buildEnvVariables Environment variables available to the build environment.Only returned in GET requests if view=FULL is set.
         * 
         * @return builder
         * 
         */
        public Builder buildEnvVariables(Map<String,String> buildEnvVariables) {
            return buildEnvVariables(Output.of(buildEnvVariables));
        }

        /**
         * @param defaultExpiration Duration that static files should be cached by web proxies and browsers. Only applicable if the corresponding StaticFilesHandler (https://cloud.google.com/appengine/docs/admin-api/reference/rest/v1/apps.services.versions#StaticFilesHandler) does not specify its own expiration time.Only returned in GET requests if view=FULL is set.
         * 
         * @return builder
         * 
         */
        public Builder defaultExpiration(@Nullable Output<String> defaultExpiration) {
            $.defaultExpiration = defaultExpiration;
            return this;
        }

        /**
         * @param defaultExpiration Duration that static files should be cached by web proxies and browsers. Only applicable if the corresponding StaticFilesHandler (https://cloud.google.com/appengine/docs/admin-api/reference/rest/v1/apps.services.versions#StaticFilesHandler) does not specify its own expiration time.Only returned in GET requests if view=FULL is set.
         * 
         * @return builder
         * 
         */
        public Builder defaultExpiration(String defaultExpiration) {
            return defaultExpiration(Output.of(defaultExpiration));
        }

        /**
         * @param deployment Code and application artifacts that make up this version.Only returned in GET requests if view=FULL is set.
         * 
         * @return builder
         * 
         */
        public Builder deployment(@Nullable Output<DeploymentArgs> deployment) {
            $.deployment = deployment;
            return this;
        }

        /**
         * @param deployment Code and application artifacts that make up this version.Only returned in GET requests if view=FULL is set.
         * 
         * @return builder
         * 
         */
        public Builder deployment(DeploymentArgs deployment) {
            return deployment(Output.of(deployment));
        }

        /**
         * @param endpointsApiService Cloud Endpoints configuration.If endpoints_api_service is set, the Cloud Endpoints Extensible Service Proxy will be provided to serve the API implemented by the app.
         * 
         * @return builder
         * 
         */
        public Builder endpointsApiService(@Nullable Output<EndpointsApiServiceArgs> endpointsApiService) {
            $.endpointsApiService = endpointsApiService;
            return this;
        }

        /**
         * @param endpointsApiService Cloud Endpoints configuration.If endpoints_api_service is set, the Cloud Endpoints Extensible Service Proxy will be provided to serve the API implemented by the app.
         * 
         * @return builder
         * 
         */
        public Builder endpointsApiService(EndpointsApiServiceArgs endpointsApiService) {
            return endpointsApiService(Output.of(endpointsApiService));
        }

        /**
         * @param entrypoint The entrypoint for the application.
         * 
         * @return builder
         * 
         */
        public Builder entrypoint(@Nullable Output<EntrypointArgs> entrypoint) {
            $.entrypoint = entrypoint;
            return this;
        }

        /**
         * @param entrypoint The entrypoint for the application.
         * 
         * @return builder
         * 
         */
        public Builder entrypoint(EntrypointArgs entrypoint) {
            return entrypoint(Output.of(entrypoint));
        }

        /**
         * @param env App Engine execution environment for this version.Defaults to standard.
         * 
         * @return builder
         * 
         */
        public Builder env(@Nullable Output<String> env) {
            $.env = env;
            return this;
        }

        /**
         * @param env App Engine execution environment for this version.Defaults to standard.
         * 
         * @return builder
         * 
         */
        public Builder env(String env) {
            return env(Output.of(env));
        }

        /**
         * @param envVariables Environment variables available to the application.Only returned in GET requests if view=FULL is set.
         * 
         * @return builder
         * 
         */
        public Builder envVariables(@Nullable Output<Map<String,String>> envVariables) {
            $.envVariables = envVariables;
            return this;
        }

        /**
         * @param envVariables Environment variables available to the application.Only returned in GET requests if view=FULL is set.
         * 
         * @return builder
         * 
         */
        public Builder envVariables(Map<String,String> envVariables) {
            return envVariables(Output.of(envVariables));
        }

        /**
         * @param errorHandlers Custom static error pages. Limited to 10KB per page.Only returned in GET requests if view=FULL is set.
         * 
         * @return builder
         * 
         */
        public Builder errorHandlers(@Nullable Output<List<ErrorHandlerArgs>> errorHandlers) {
            $.errorHandlers = errorHandlers;
            return this;
        }

        /**
         * @param errorHandlers Custom static error pages. Limited to 10KB per page.Only returned in GET requests if view=FULL is set.
         * 
         * @return builder
         * 
         */
        public Builder errorHandlers(List<ErrorHandlerArgs> errorHandlers) {
            return errorHandlers(Output.of(errorHandlers));
        }

        /**
         * @param errorHandlers Custom static error pages. Limited to 10KB per page.Only returned in GET requests if view=FULL is set.
         * 
         * @return builder
         * 
         */
        public Builder errorHandlers(ErrorHandlerArgs... errorHandlers) {
            return errorHandlers(List.of(errorHandlers));
        }

        /**
         * @param handlers An ordered list of URL-matching patterns that should be applied to incoming requests. The first matching URL handles the request and other request handlers are not attempted.Only returned in GET requests if view=FULL is set.
         * 
         * @return builder
         * 
         */
        public Builder handlers(@Nullable Output<List<UrlMapArgs>> handlers) {
            $.handlers = handlers;
            return this;
        }

        /**
         * @param handlers An ordered list of URL-matching patterns that should be applied to incoming requests. The first matching URL handles the request and other request handlers are not attempted.Only returned in GET requests if view=FULL is set.
         * 
         * @return builder
         * 
         */
        public Builder handlers(List<UrlMapArgs> handlers) {
            return handlers(Output.of(handlers));
        }

        /**
         * @param handlers An ordered list of URL-matching patterns that should be applied to incoming requests. The first matching URL handles the request and other request handlers are not attempted.Only returned in GET requests if view=FULL is set.
         * 
         * @return builder
         * 
         */
        public Builder handlers(UrlMapArgs... handlers) {
            return handlers(List.of(handlers));
        }

        /**
         * @param healthCheck Configures health checking for instances. Unhealthy instances are stopped and replaced with new instances. Only applicable in the App Engine flexible environment.Only returned in GET requests if view=FULL is set.
         * 
         * @return builder
         * 
         */
        public Builder healthCheck(@Nullable Output<HealthCheckArgs> healthCheck) {
            $.healthCheck = healthCheck;
            return this;
        }

        /**
         * @param healthCheck Configures health checking for instances. Unhealthy instances are stopped and replaced with new instances. Only applicable in the App Engine flexible environment.Only returned in GET requests if view=FULL is set.
         * 
         * @return builder
         * 
         */
        public Builder healthCheck(HealthCheckArgs healthCheck) {
            return healthCheck(Output.of(healthCheck));
        }

        /**
         * @param id Relative name of the version within the service. Example: v1. Version names can contain only lowercase letters, numbers, or hyphens. Reserved names: &#34;default&#34;, &#34;latest&#34;, and any name with the prefix &#34;ah-&#34;.
         * 
         * @return builder
         * 
         */
        public Builder id(@Nullable Output<String> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id Relative name of the version within the service. Example: v1. Version names can contain only lowercase letters, numbers, or hyphens. Reserved names: &#34;default&#34;, &#34;latest&#34;, and any name with the prefix &#34;ah-&#34;.
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            return id(Output.of(id));
        }

        /**
         * @param inboundServices Before an application can receive email or XMPP messages, the application must be configured to enable the service.
         * 
         * @return builder
         * 
         */
        public Builder inboundServices(@Nullable Output<List<VersionInboundServicesItem>> inboundServices) {
            $.inboundServices = inboundServices;
            return this;
        }

        /**
         * @param inboundServices Before an application can receive email or XMPP messages, the application must be configured to enable the service.
         * 
         * @return builder
         * 
         */
        public Builder inboundServices(List<VersionInboundServicesItem> inboundServices) {
            return inboundServices(Output.of(inboundServices));
        }

        /**
         * @param inboundServices Before an application can receive email or XMPP messages, the application must be configured to enable the service.
         * 
         * @return builder
         * 
         */
        public Builder inboundServices(VersionInboundServicesItem... inboundServices) {
            return inboundServices(List.of(inboundServices));
        }

        /**
         * @param instanceClass Instance class that is used to run this version. Valid values are: AutomaticScaling: F1, F2, F4, F4_1G ManualScaling or BasicScaling: B1, B2, B4, B8, B4_1GDefaults to F1 for AutomaticScaling and B1 for ManualScaling or BasicScaling.
         * 
         * @return builder
         * 
         */
        public Builder instanceClass(@Nullable Output<String> instanceClass) {
            $.instanceClass = instanceClass;
            return this;
        }

        /**
         * @param instanceClass Instance class that is used to run this version. Valid values are: AutomaticScaling: F1, F2, F4, F4_1G ManualScaling or BasicScaling: B1, B2, B4, B8, B4_1GDefaults to F1 for AutomaticScaling and B1 for ManualScaling or BasicScaling.
         * 
         * @return builder
         * 
         */
        public Builder instanceClass(String instanceClass) {
            return instanceClass(Output.of(instanceClass));
        }

        /**
         * @param libraries Configuration for third-party Python runtime libraries that are required by the application.Only returned in GET requests if view=FULL is set.
         * 
         * @return builder
         * 
         */
        public Builder libraries(@Nullable Output<List<LibraryArgs>> libraries) {
            $.libraries = libraries;
            return this;
        }

        /**
         * @param libraries Configuration for third-party Python runtime libraries that are required by the application.Only returned in GET requests if view=FULL is set.
         * 
         * @return builder
         * 
         */
        public Builder libraries(List<LibraryArgs> libraries) {
            return libraries(Output.of(libraries));
        }

        /**
         * @param libraries Configuration for third-party Python runtime libraries that are required by the application.Only returned in GET requests if view=FULL is set.
         * 
         * @return builder
         * 
         */
        public Builder libraries(LibraryArgs... libraries) {
            return libraries(List.of(libraries));
        }

        /**
         * @param livenessCheck Configures liveness health checking for instances. Unhealthy instances are stopped and replaced with new instancesOnly returned in GET requests if view=FULL is set.
         * 
         * @return builder
         * 
         */
        public Builder livenessCheck(@Nullable Output<LivenessCheckArgs> livenessCheck) {
            $.livenessCheck = livenessCheck;
            return this;
        }

        /**
         * @param livenessCheck Configures liveness health checking for instances. Unhealthy instances are stopped and replaced with new instancesOnly returned in GET requests if view=FULL is set.
         * 
         * @return builder
         * 
         */
        public Builder livenessCheck(LivenessCheckArgs livenessCheck) {
            return livenessCheck(Output.of(livenessCheck));
        }

        /**
         * @param manualScaling A service with manual scaling runs continuously, allowing you to perform complex initialization and rely on the state of its memory over time. Manually scaled versions are sometimes referred to as &#34;backends&#34;.
         * 
         * @return builder
         * 
         */
        public Builder manualScaling(@Nullable Output<ManualScalingArgs> manualScaling) {
            $.manualScaling = manualScaling;
            return this;
        }

        /**
         * @param manualScaling A service with manual scaling runs continuously, allowing you to perform complex initialization and rely on the state of its memory over time. Manually scaled versions are sometimes referred to as &#34;backends&#34;.
         * 
         * @return builder
         * 
         */
        public Builder manualScaling(ManualScalingArgs manualScaling) {
            return manualScaling(Output.of(manualScaling));
        }

        /**
         * @param network Extra network settings. Only applicable in the App Engine flexible environment.
         * 
         * @return builder
         * 
         */
        public Builder network(@Nullable Output<NetworkArgs> network) {
            $.network = network;
            return this;
        }

        /**
         * @param network Extra network settings. Only applicable in the App Engine flexible environment.
         * 
         * @return builder
         * 
         */
        public Builder network(NetworkArgs network) {
            return network(Output.of(network));
        }

        /**
         * @param nobuildFilesRegex Files that match this pattern will not be built into this version. Only applicable for Go runtimes.Only returned in GET requests if view=FULL is set.
         * 
         * @return builder
         * 
         */
        public Builder nobuildFilesRegex(@Nullable Output<String> nobuildFilesRegex) {
            $.nobuildFilesRegex = nobuildFilesRegex;
            return this;
        }

        /**
         * @param nobuildFilesRegex Files that match this pattern will not be built into this version. Only applicable for Go runtimes.Only returned in GET requests if view=FULL is set.
         * 
         * @return builder
         * 
         */
        public Builder nobuildFilesRegex(String nobuildFilesRegex) {
            return nobuildFilesRegex(Output.of(nobuildFilesRegex));
        }

        /**
         * @param readinessCheck Configures readiness health checking for instances. Unhealthy instances are not put into the backend traffic rotation.Only returned in GET requests if view=FULL is set.
         * 
         * @return builder
         * 
         */
        public Builder readinessCheck(@Nullable Output<ReadinessCheckArgs> readinessCheck) {
            $.readinessCheck = readinessCheck;
            return this;
        }

        /**
         * @param readinessCheck Configures readiness health checking for instances. Unhealthy instances are not put into the backend traffic rotation.Only returned in GET requests if view=FULL is set.
         * 
         * @return builder
         * 
         */
        public Builder readinessCheck(ReadinessCheckArgs readinessCheck) {
            return readinessCheck(Output.of(readinessCheck));
        }

        /**
         * @param resources Machine resources for this version. Only applicable in the App Engine flexible environment.
         * 
         * @return builder
         * 
         */
        public Builder resources(@Nullable Output<ResourcesArgs> resources) {
            $.resources = resources;
            return this;
        }

        /**
         * @param resources Machine resources for this version. Only applicable in the App Engine flexible environment.
         * 
         * @return builder
         * 
         */
        public Builder resources(ResourcesArgs resources) {
            return resources(Output.of(resources));
        }

        /**
         * @param runtime Desired runtime. Example: python27.
         * 
         * @return builder
         * 
         */
        public Builder runtime(@Nullable Output<String> runtime) {
            $.runtime = runtime;
            return this;
        }

        /**
         * @param runtime Desired runtime. Example: python27.
         * 
         * @return builder
         * 
         */
        public Builder runtime(String runtime) {
            return runtime(Output.of(runtime));
        }

        /**
         * @param runtimeApiVersion The version of the API in the given runtime environment. Please see the app.yaml reference for valid values at https://cloud.google.com/appengine/docs/standard//config/appref
         * 
         * @return builder
         * 
         */
        public Builder runtimeApiVersion(@Nullable Output<String> runtimeApiVersion) {
            $.runtimeApiVersion = runtimeApiVersion;
            return this;
        }

        /**
         * @param runtimeApiVersion The version of the API in the given runtime environment. Please see the app.yaml reference for valid values at https://cloud.google.com/appengine/docs/standard//config/appref
         * 
         * @return builder
         * 
         */
        public Builder runtimeApiVersion(String runtimeApiVersion) {
            return runtimeApiVersion(Output.of(runtimeApiVersion));
        }

        /**
         * @param runtimeChannel The channel of the runtime to use. Only available for some runtimes. Defaults to the default channel.
         * 
         * @return builder
         * 
         */
        public Builder runtimeChannel(@Nullable Output<String> runtimeChannel) {
            $.runtimeChannel = runtimeChannel;
            return this;
        }

        /**
         * @param runtimeChannel The channel of the runtime to use. Only available for some runtimes. Defaults to the default channel.
         * 
         * @return builder
         * 
         */
        public Builder runtimeChannel(String runtimeChannel) {
            return runtimeChannel(Output.of(runtimeChannel));
        }

        /**
         * @param runtimeMainExecutablePath The path or name of the app&#39;s main executable.
         * 
         * @return builder
         * 
         */
        public Builder runtimeMainExecutablePath(@Nullable Output<String> runtimeMainExecutablePath) {
            $.runtimeMainExecutablePath = runtimeMainExecutablePath;
            return this;
        }

        /**
         * @param runtimeMainExecutablePath The path or name of the app&#39;s main executable.
         * 
         * @return builder
         * 
         */
        public Builder runtimeMainExecutablePath(String runtimeMainExecutablePath) {
            return runtimeMainExecutablePath(Output.of(runtimeMainExecutablePath));
        }

        /**
         * @param serviceAccount The identity that the deployed version will run as. Admin API will use the App Engine Appspot service account as default if this field is neither provided in app.yaml file nor through CLI flag.
         * 
         * @return builder
         * 
         */
        public Builder serviceAccount(@Nullable Output<String> serviceAccount) {
            $.serviceAccount = serviceAccount;
            return this;
        }

        /**
         * @param serviceAccount The identity that the deployed version will run as. Admin API will use the App Engine Appspot service account as default if this field is neither provided in app.yaml file nor through CLI flag.
         * 
         * @return builder
         * 
         */
        public Builder serviceAccount(String serviceAccount) {
            return serviceAccount(Output.of(serviceAccount));
        }

        public Builder serviceId(Output<String> serviceId) {
            $.serviceId = serviceId;
            return this;
        }

        public Builder serviceId(String serviceId) {
            return serviceId(Output.of(serviceId));
        }

        /**
         * @param servingStatus Current serving status of this version. Only the versions with a SERVING status create instances and can be billed.SERVING_STATUS_UNSPECIFIED is an invalid value. Defaults to SERVING.
         * 
         * @return builder
         * 
         */
        public Builder servingStatus(@Nullable Output<VersionServingStatus> servingStatus) {
            $.servingStatus = servingStatus;
            return this;
        }

        /**
         * @param servingStatus Current serving status of this version. Only the versions with a SERVING status create instances and can be billed.SERVING_STATUS_UNSPECIFIED is an invalid value. Defaults to SERVING.
         * 
         * @return builder
         * 
         */
        public Builder servingStatus(VersionServingStatus servingStatus) {
            return servingStatus(Output.of(servingStatus));
        }

        /**
         * @param threadsafe Whether multiple requests can be dispatched to this version at once.
         * 
         * @return builder
         * 
         */
        public Builder threadsafe(@Nullable Output<Boolean> threadsafe) {
            $.threadsafe = threadsafe;
            return this;
        }

        /**
         * @param threadsafe Whether multiple requests can be dispatched to this version at once.
         * 
         * @return builder
         * 
         */
        public Builder threadsafe(Boolean threadsafe) {
            return threadsafe(Output.of(threadsafe));
        }

        /**
         * @param vm Whether to deploy this version in a container on a virtual machine.
         * 
         * @return builder
         * 
         */
        public Builder vm(@Nullable Output<Boolean> vm) {
            $.vm = vm;
            return this;
        }

        /**
         * @param vm Whether to deploy this version in a container on a virtual machine.
         * 
         * @return builder
         * 
         */
        public Builder vm(Boolean vm) {
            return vm(Output.of(vm));
        }

        /**
         * @param vpcAccessConnector Enables VPC connectivity for standard apps.
         * 
         * @return builder
         * 
         */
        public Builder vpcAccessConnector(@Nullable Output<VpcAccessConnectorArgs> vpcAccessConnector) {
            $.vpcAccessConnector = vpcAccessConnector;
            return this;
        }

        /**
         * @param vpcAccessConnector Enables VPC connectivity for standard apps.
         * 
         * @return builder
         * 
         */
        public Builder vpcAccessConnector(VpcAccessConnectorArgs vpcAccessConnector) {
            return vpcAccessConnector(Output.of(vpcAccessConnector));
        }

        /**
         * @param zones The Google Compute Engine zones that are supported by this version in the App Engine flexible environment. Deprecated.
         * 
         * @return builder
         * 
         * @deprecated
         * The Google Compute Engine zones that are supported by this version in the App Engine flexible environment. Deprecated.
         * 
         */
        @Deprecated /* The Google Compute Engine zones that are supported by this version in the App Engine flexible environment. Deprecated. */
        public Builder zones(@Nullable Output<List<String>> zones) {
            $.zones = zones;
            return this;
        }

        /**
         * @param zones The Google Compute Engine zones that are supported by this version in the App Engine flexible environment. Deprecated.
         * 
         * @return builder
         * 
         * @deprecated
         * The Google Compute Engine zones that are supported by this version in the App Engine flexible environment. Deprecated.
         * 
         */
        @Deprecated /* The Google Compute Engine zones that are supported by this version in the App Engine flexible environment. Deprecated. */
        public Builder zones(List<String> zones) {
            return zones(Output.of(zones));
        }

        /**
         * @param zones The Google Compute Engine zones that are supported by this version in the App Engine flexible environment. Deprecated.
         * 
         * @return builder
         * 
         * @deprecated
         * The Google Compute Engine zones that are supported by this version in the App Engine flexible environment. Deprecated.
         * 
         */
        @Deprecated /* The Google Compute Engine zones that are supported by this version in the App Engine flexible environment. Deprecated. */
        public Builder zones(String... zones) {
            return zones(List.of(zones));
        }

        public VersionArgs build() {
            $.appId = Objects.requireNonNull($.appId, "expected parameter 'appId' to be non-null");
            $.serviceId = Objects.requireNonNull($.serviceId, "expected parameter 'serviceId' to be non-null");
            return $;
        }
    }

}
