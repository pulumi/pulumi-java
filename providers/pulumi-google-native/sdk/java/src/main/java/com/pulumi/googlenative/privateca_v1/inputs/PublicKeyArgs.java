// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.privateca_v1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.privateca_v1.enums.PublicKeyFormat;
import java.lang.String;
import java.util.Objects;


/**
 * A PublicKey describes a public key.
 * 
 */
public final class PublicKeyArgs extends com.pulumi.resources.ResourceArgs {

    public static final PublicKeyArgs Empty = new PublicKeyArgs();

    /**
     * The format of the public key.
     * 
     */
    @Import(name="format", required=true)
    private Output<PublicKeyFormat> format;

    public Output<PublicKeyFormat> format() {
        return this.format;
    }

    /**
     * A public key. The padding and encoding must match with the `KeyFormat` value specified for the `format` field.
     * 
     */
    @Import(name="key", required=true)
    private Output<String> key;

    public Output<String> key() {
        return this.key;
    }

    private PublicKeyArgs() {}

    private PublicKeyArgs(PublicKeyArgs $) {
        this.format = $.format;
        this.key = $.key;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PublicKeyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PublicKeyArgs $;

        public Builder() {
            $ = new PublicKeyArgs();
        }

        public Builder(PublicKeyArgs defaults) {
            $ = new PublicKeyArgs(Objects.requireNonNull(defaults));
        }

        public Builder format(Output<PublicKeyFormat> format) {
            $.format = format;
            return this;
        }

        public Builder format(PublicKeyFormat format) {
            return format(Output.of(format));
        }

        public Builder key(Output<String> key) {
            $.key = key;
            return this;
        }

        public Builder key(String key) {
            return key(Output.of(key));
        }

        public PublicKeyArgs build() {
            $.format = Objects.requireNonNull($.format, "expected parameter 'format' to be non-null");
            $.key = Objects.requireNonNull($.key, "expected parameter 'key' to be non-null");
            return $;
        }
    }

}
