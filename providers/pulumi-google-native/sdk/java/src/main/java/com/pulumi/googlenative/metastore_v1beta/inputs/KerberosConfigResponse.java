// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.metastore_v1beta.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.metastore_v1beta.inputs.SecretResponse;
import java.lang.String;
import java.util.Objects;


/**
 * Configuration information for a Kerberos principal.
 * 
 */
public final class KerberosConfigResponse extends com.pulumi.resources.InvokeArgs {

    public static final KerberosConfigResponse Empty = new KerberosConfigResponse();

    /**
     * A Kerberos keytab file that can be used to authenticate a service principal with a Kerberos Key Distribution Center (KDC).
     * 
     */
    @Import(name="keytab", required=true)
    private SecretResponse keytab;

    public SecretResponse keytab() {
        return this.keytab;
    }

    /**
     * A Cloud Storage URI that specifies the path to a krb5.conf file. It is of the form gs://{bucket_name}/path/to/krb5.conf, although the file does not need to be named krb5.conf explicitly.
     * 
     */
    @Import(name="krb5ConfigGcsUri", required=true)
    private String krb5ConfigGcsUri;

    public String krb5ConfigGcsUri() {
        return this.krb5ConfigGcsUri;
    }

    /**
     * A Kerberos principal that exists in the both the keytab the KDC to authenticate as. A typical principal is of the form primary/instance@REALM, but there is no exact format.
     * 
     */
    @Import(name="principal", required=true)
    private String principal;

    public String principal() {
        return this.principal;
    }

    private KerberosConfigResponse() {}

    private KerberosConfigResponse(KerberosConfigResponse $) {
        this.keytab = $.keytab;
        this.krb5ConfigGcsUri = $.krb5ConfigGcsUri;
        this.principal = $.principal;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(KerberosConfigResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private KerberosConfigResponse $;

        public Builder() {
            $ = new KerberosConfigResponse();
        }

        public Builder(KerberosConfigResponse defaults) {
            $ = new KerberosConfigResponse(Objects.requireNonNull(defaults));
        }

        public Builder keytab(SecretResponse keytab) {
            $.keytab = keytab;
            return this;
        }

        public Builder krb5ConfigGcsUri(String krb5ConfigGcsUri) {
            $.krb5ConfigGcsUri = krb5ConfigGcsUri;
            return this;
        }

        public Builder principal(String principal) {
            $.principal = principal;
            return this;
        }

        public KerberosConfigResponse build() {
            $.keytab = Objects.requireNonNull($.keytab, "expected parameter 'keytab' to be non-null");
            $.krb5ConfigGcsUri = Objects.requireNonNull($.krb5ConfigGcsUri, "expected parameter 'krb5ConfigGcsUri' to be non-null");
            $.principal = Objects.requireNonNull($.principal, "expected parameter 'principal' to be non-null");
            return $;
        }
    }

}
