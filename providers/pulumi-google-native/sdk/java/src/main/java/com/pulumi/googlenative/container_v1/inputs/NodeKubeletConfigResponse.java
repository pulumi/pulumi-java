// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.container_v1.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;


/**
 * Node kubelet configs.
 * 
 */
public final class NodeKubeletConfigResponse extends com.pulumi.resources.InvokeArgs {

    public static final NodeKubeletConfigResponse Empty = new NodeKubeletConfigResponse();

    /**
     * Enable CPU CFS quota enforcement for containers that specify CPU limits. This option is enabled by default which makes kubelet use CFS quota (https://www.kernel.org/doc/Documentation/scheduler/sched-bwc.txt) to enforce container CPU limits. Otherwise, CPU limits will not be enforced at all. Disable this option to mitigate CPU throttling problems while still having your pods to be in Guaranteed QoS class by specifying the CPU limits. The default value is &#39;true&#39; if unspecified.
     * 
     */
    @Import(name="cpuCfsQuota", required=true)
    private Boolean cpuCfsQuota;

    public Boolean cpuCfsQuota() {
        return this.cpuCfsQuota;
    }

    /**
     * Set the CPU CFS quota period value &#39;cpu.cfs_period_us&#39;. The string must be a sequence of decimal numbers, each with optional fraction and a unit suffix, such as &#34;300ms&#34;. Valid time units are &#34;ns&#34;, &#34;us&#34; (or &#34;Âµs&#34;), &#34;ms&#34;, &#34;s&#34;, &#34;m&#34;, &#34;h&#34;. The value must be a positive duration.
     * 
     */
    @Import(name="cpuCfsQuotaPeriod", required=true)
    private String cpuCfsQuotaPeriod;

    public String cpuCfsQuotaPeriod() {
        return this.cpuCfsQuotaPeriod;
    }

    /**
     * Control the CPU management policy on the node. See https://kubernetes.io/docs/tasks/administer-cluster/cpu-management-policies/ The following values are allowed. * &#34;none&#34;: the default, which represents the existing scheduling behavior. * &#34;static&#34;: allows pods with certain resource characteristics to be granted increased CPU affinity and exclusivity on the node. The default value is &#39;none&#39; if unspecified.
     * 
     */
    @Import(name="cpuManagerPolicy", required=true)
    private String cpuManagerPolicy;

    public String cpuManagerPolicy() {
        return this.cpuManagerPolicy;
    }

    private NodeKubeletConfigResponse() {}

    private NodeKubeletConfigResponse(NodeKubeletConfigResponse $) {
        this.cpuCfsQuota = $.cpuCfsQuota;
        this.cpuCfsQuotaPeriod = $.cpuCfsQuotaPeriod;
        this.cpuManagerPolicy = $.cpuManagerPolicy;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NodeKubeletConfigResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NodeKubeletConfigResponse $;

        public Builder() {
            $ = new NodeKubeletConfigResponse();
        }

        public Builder(NodeKubeletConfigResponse defaults) {
            $ = new NodeKubeletConfigResponse(Objects.requireNonNull(defaults));
        }

        public Builder cpuCfsQuota(Boolean cpuCfsQuota) {
            $.cpuCfsQuota = cpuCfsQuota;
            return this;
        }

        public Builder cpuCfsQuotaPeriod(String cpuCfsQuotaPeriod) {
            $.cpuCfsQuotaPeriod = cpuCfsQuotaPeriod;
            return this;
        }

        public Builder cpuManagerPolicy(String cpuManagerPolicy) {
            $.cpuManagerPolicy = cpuManagerPolicy;
            return this;
        }

        public NodeKubeletConfigResponse build() {
            $.cpuCfsQuota = Objects.requireNonNull($.cpuCfsQuota, "expected parameter 'cpuCfsQuota' to be non-null");
            $.cpuCfsQuotaPeriod = Objects.requireNonNull($.cpuCfsQuotaPeriod, "expected parameter 'cpuCfsQuotaPeriod' to be non-null");
            $.cpuManagerPolicy = Objects.requireNonNull($.cpuManagerPolicy, "expected parameter 'cpuManagerPolicy' to be non-null");
            return $;
        }
    }

}
