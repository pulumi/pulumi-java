// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.cloudasset.v1;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.cloudasset.v1.enums.FeedContentType;
import com.pulumi.googlenative.cloudasset.v1.inputs.ExprArgs;
import com.pulumi.googlenative.cloudasset.v1.inputs.FeedOutputConfigArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FeedArgs extends com.pulumi.resources.ResourceArgs {

    public static final FeedArgs Empty = new FeedArgs();

    /**
     * A list of the full names of the assets to receive updates. You must specify either or both of asset_names and asset_types. Only asset updates matching specified asset_names or asset_types are exported to the feed. Example: `//compute.googleapis.com/projects/my_project_123/zones/zone1/instances/instance1`. For a list of the full names for supported asset types, see [Resource name format](/asset-inventory/docs/resource-name-format).
     * 
     */
    @Import(name="assetNames")
    private @Nullable Output<List<String>> assetNames;

    /**
     * @return A list of the full names of the assets to receive updates. You must specify either or both of asset_names and asset_types. Only asset updates matching specified asset_names or asset_types are exported to the feed. Example: `//compute.googleapis.com/projects/my_project_123/zones/zone1/instances/instance1`. For a list of the full names for supported asset types, see [Resource name format](/asset-inventory/docs/resource-name-format).
     * 
     */
    public Optional<Output<List<String>>> assetNames() {
        return Optional.ofNullable(this.assetNames);
    }

    /**
     * A list of types of the assets to receive updates. You must specify either or both of asset_names and asset_types. Only asset updates matching specified asset_names or asset_types are exported to the feed. Example: `&#34;compute.googleapis.com/Disk&#34;` For a list of all supported asset types, see [Supported asset types](/asset-inventory/docs/supported-asset-types).
     * 
     */
    @Import(name="assetTypes")
    private @Nullable Output<List<String>> assetTypes;

    /**
     * @return A list of types of the assets to receive updates. You must specify either or both of asset_names and asset_types. Only asset updates matching specified asset_names or asset_types are exported to the feed. Example: `&#34;compute.googleapis.com/Disk&#34;` For a list of all supported asset types, see [Supported asset types](/asset-inventory/docs/supported-asset-types).
     * 
     */
    public Optional<Output<List<String>>> assetTypes() {
        return Optional.ofNullable(this.assetTypes);
    }

    /**
     * A condition which determines whether an asset update should be published. If specified, an asset will be returned only when the expression evaluates to true. When set, `expression` field in the `Expr` must be a valid [CEL expression] (https://github.com/google/cel-spec) on a TemporalAsset with name `temporal_asset`. Example: a Feed with expression (&#34;temporal_asset.deleted == true&#34;) will only publish Asset deletions. Other fields of `Expr` are optional. See our [user guide](https://cloud.google.com/asset-inventory/docs/monitoring-asset-changes-with-condition) for detailed instructions.
     * 
     */
    @Import(name="condition")
    private @Nullable Output<ExprArgs> condition;

    /**
     * @return A condition which determines whether an asset update should be published. If specified, an asset will be returned only when the expression evaluates to true. When set, `expression` field in the `Expr` must be a valid [CEL expression] (https://github.com/google/cel-spec) on a TemporalAsset with name `temporal_asset`. Example: a Feed with expression (&#34;temporal_asset.deleted == true&#34;) will only publish Asset deletions. Other fields of `Expr` are optional. See our [user guide](https://cloud.google.com/asset-inventory/docs/monitoring-asset-changes-with-condition) for detailed instructions.
     * 
     */
    public Optional<Output<ExprArgs>> condition() {
        return Optional.ofNullable(this.condition);
    }

    /**
     * Asset content type. If not specified, no content but the asset name and type will be returned.
     * 
     */
    @Import(name="contentType")
    private @Nullable Output<FeedContentType> contentType;

    /**
     * @return Asset content type. If not specified, no content but the asset name and type will be returned.
     * 
     */
    public Optional<Output<FeedContentType>> contentType() {
        return Optional.ofNullable(this.contentType);
    }

    /**
     * This is the client-assigned asset feed identifier and it needs to be unique under a specific parent project/folder/organization.
     * 
     */
    @Import(name="feedId", required=true)
    private Output<String> feedId;

    /**
     * @return This is the client-assigned asset feed identifier and it needs to be unique under a specific parent project/folder/organization.
     * 
     */
    public Output<String> feedId() {
        return this.feedId;
    }

    /**
     * Feed output configuration defining where the asset updates are published to.
     * 
     */
    @Import(name="feedOutputConfig", required=true)
    private Output<FeedOutputConfigArgs> feedOutputConfig;

    /**
     * @return Feed output configuration defining where the asset updates are published to.
     * 
     */
    public Output<FeedOutputConfigArgs> feedOutputConfig() {
        return this.feedOutputConfig;
    }

    /**
     * The format will be projects/{project_number}/feeds/{client-assigned_feed_identifier} or folders/{folder_number}/feeds/{client-assigned_feed_identifier} or organizations/{organization_number}/feeds/{client-assigned_feed_identifier} The client-assigned feed identifier must be unique within the parent project/folder/organization.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return The format will be projects/{project_number}/feeds/{client-assigned_feed_identifier} or folders/{folder_number}/feeds/{client-assigned_feed_identifier} or organizations/{organization_number}/feeds/{client-assigned_feed_identifier} The client-assigned feed identifier must be unique within the parent project/folder/organization.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     * A list of relationship types to output, for example: `INSTANCE_TO_INSTANCEGROUP`. This field should only be specified if content_type=RELATIONSHIP. * If specified: it outputs specified relationship updates on the [asset_names] or the [asset_types]. It returns an error if any of the [relationship_types] doesn&#39;t belong to the supported relationship types of the [asset_names] or [asset_types], or any of the [asset_names] or the [asset_types] doesn&#39;t belong to the source types of the [relationship_types]. * Otherwise: it outputs the supported relationships of the types of [asset_names] and [asset_types] or returns an error if any of the [asset_names] or the [asset_types] has no replationship support. See [Introduction to Cloud Asset Inventory](https://cloud.google.com/asset-inventory/docs/overview) for all supported asset types and relationship types.
     * 
     */
    @Import(name="relationshipTypes")
    private @Nullable Output<List<String>> relationshipTypes;

    /**
     * @return A list of relationship types to output, for example: `INSTANCE_TO_INSTANCEGROUP`. This field should only be specified if content_type=RELATIONSHIP. * If specified: it outputs specified relationship updates on the [asset_names] or the [asset_types]. It returns an error if any of the [relationship_types] doesn&#39;t belong to the supported relationship types of the [asset_names] or [asset_types], or any of the [asset_names] or the [asset_types] doesn&#39;t belong to the source types of the [relationship_types]. * Otherwise: it outputs the supported relationships of the types of [asset_names] and [asset_types] or returns an error if any of the [asset_names] or the [asset_types] has no replationship support. See [Introduction to Cloud Asset Inventory](https://cloud.google.com/asset-inventory/docs/overview) for all supported asset types and relationship types.
     * 
     */
    public Optional<Output<List<String>>> relationshipTypes() {
        return Optional.ofNullable(this.relationshipTypes);
    }

    @Import(name="v1Id", required=true)
    private Output<String> v1Id;

    public Output<String> v1Id() {
        return this.v1Id;
    }

    @Import(name="v1Id1", required=true)
    private Output<String> v1Id1;

    public Output<String> v1Id1() {
        return this.v1Id1;
    }

    private FeedArgs() {}

    private FeedArgs(FeedArgs $) {
        this.assetNames = $.assetNames;
        this.assetTypes = $.assetTypes;
        this.condition = $.condition;
        this.contentType = $.contentType;
        this.feedId = $.feedId;
        this.feedOutputConfig = $.feedOutputConfig;
        this.name = $.name;
        this.relationshipTypes = $.relationshipTypes;
        this.v1Id = $.v1Id;
        this.v1Id1 = $.v1Id1;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FeedArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FeedArgs $;

        public Builder() {
            $ = new FeedArgs();
        }

        public Builder(FeedArgs defaults) {
            $ = new FeedArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param assetNames A list of the full names of the assets to receive updates. You must specify either or both of asset_names and asset_types. Only asset updates matching specified asset_names or asset_types are exported to the feed. Example: `//compute.googleapis.com/projects/my_project_123/zones/zone1/instances/instance1`. For a list of the full names for supported asset types, see [Resource name format](/asset-inventory/docs/resource-name-format).
         * 
         * @return builder
         * 
         */
        public Builder assetNames(@Nullable Output<List<String>> assetNames) {
            $.assetNames = assetNames;
            return this;
        }

        /**
         * @param assetNames A list of the full names of the assets to receive updates. You must specify either or both of asset_names and asset_types. Only asset updates matching specified asset_names or asset_types are exported to the feed. Example: `//compute.googleapis.com/projects/my_project_123/zones/zone1/instances/instance1`. For a list of the full names for supported asset types, see [Resource name format](/asset-inventory/docs/resource-name-format).
         * 
         * @return builder
         * 
         */
        public Builder assetNames(List<String> assetNames) {
            return assetNames(Output.of(assetNames));
        }

        /**
         * @param assetNames A list of the full names of the assets to receive updates. You must specify either or both of asset_names and asset_types. Only asset updates matching specified asset_names or asset_types are exported to the feed. Example: `//compute.googleapis.com/projects/my_project_123/zones/zone1/instances/instance1`. For a list of the full names for supported asset types, see [Resource name format](/asset-inventory/docs/resource-name-format).
         * 
         * @return builder
         * 
         */
        public Builder assetNames(String... assetNames) {
            return assetNames(List.of(assetNames));
        }

        /**
         * @param assetTypes A list of types of the assets to receive updates. You must specify either or both of asset_names and asset_types. Only asset updates matching specified asset_names or asset_types are exported to the feed. Example: `&#34;compute.googleapis.com/Disk&#34;` For a list of all supported asset types, see [Supported asset types](/asset-inventory/docs/supported-asset-types).
         * 
         * @return builder
         * 
         */
        public Builder assetTypes(@Nullable Output<List<String>> assetTypes) {
            $.assetTypes = assetTypes;
            return this;
        }

        /**
         * @param assetTypes A list of types of the assets to receive updates. You must specify either or both of asset_names and asset_types. Only asset updates matching specified asset_names or asset_types are exported to the feed. Example: `&#34;compute.googleapis.com/Disk&#34;` For a list of all supported asset types, see [Supported asset types](/asset-inventory/docs/supported-asset-types).
         * 
         * @return builder
         * 
         */
        public Builder assetTypes(List<String> assetTypes) {
            return assetTypes(Output.of(assetTypes));
        }

        /**
         * @param assetTypes A list of types of the assets to receive updates. You must specify either or both of asset_names and asset_types. Only asset updates matching specified asset_names or asset_types are exported to the feed. Example: `&#34;compute.googleapis.com/Disk&#34;` For a list of all supported asset types, see [Supported asset types](/asset-inventory/docs/supported-asset-types).
         * 
         * @return builder
         * 
         */
        public Builder assetTypes(String... assetTypes) {
            return assetTypes(List.of(assetTypes));
        }

        /**
         * @param condition A condition which determines whether an asset update should be published. If specified, an asset will be returned only when the expression evaluates to true. When set, `expression` field in the `Expr` must be a valid [CEL expression] (https://github.com/google/cel-spec) on a TemporalAsset with name `temporal_asset`. Example: a Feed with expression (&#34;temporal_asset.deleted == true&#34;) will only publish Asset deletions. Other fields of `Expr` are optional. See our [user guide](https://cloud.google.com/asset-inventory/docs/monitoring-asset-changes-with-condition) for detailed instructions.
         * 
         * @return builder
         * 
         */
        public Builder condition(@Nullable Output<ExprArgs> condition) {
            $.condition = condition;
            return this;
        }

        /**
         * @param condition A condition which determines whether an asset update should be published. If specified, an asset will be returned only when the expression evaluates to true. When set, `expression` field in the `Expr` must be a valid [CEL expression] (https://github.com/google/cel-spec) on a TemporalAsset with name `temporal_asset`. Example: a Feed with expression (&#34;temporal_asset.deleted == true&#34;) will only publish Asset deletions. Other fields of `Expr` are optional. See our [user guide](https://cloud.google.com/asset-inventory/docs/monitoring-asset-changes-with-condition) for detailed instructions.
         * 
         * @return builder
         * 
         */
        public Builder condition(ExprArgs condition) {
            return condition(Output.of(condition));
        }

        /**
         * @param contentType Asset content type. If not specified, no content but the asset name and type will be returned.
         * 
         * @return builder
         * 
         */
        public Builder contentType(@Nullable Output<FeedContentType> contentType) {
            $.contentType = contentType;
            return this;
        }

        /**
         * @param contentType Asset content type. If not specified, no content but the asset name and type will be returned.
         * 
         * @return builder
         * 
         */
        public Builder contentType(FeedContentType contentType) {
            return contentType(Output.of(contentType));
        }

        /**
         * @param feedId This is the client-assigned asset feed identifier and it needs to be unique under a specific parent project/folder/organization.
         * 
         * @return builder
         * 
         */
        public Builder feedId(Output<String> feedId) {
            $.feedId = feedId;
            return this;
        }

        /**
         * @param feedId This is the client-assigned asset feed identifier and it needs to be unique under a specific parent project/folder/organization.
         * 
         * @return builder
         * 
         */
        public Builder feedId(String feedId) {
            return feedId(Output.of(feedId));
        }

        /**
         * @param feedOutputConfig Feed output configuration defining where the asset updates are published to.
         * 
         * @return builder
         * 
         */
        public Builder feedOutputConfig(Output<FeedOutputConfigArgs> feedOutputConfig) {
            $.feedOutputConfig = feedOutputConfig;
            return this;
        }

        /**
         * @param feedOutputConfig Feed output configuration defining where the asset updates are published to.
         * 
         * @return builder
         * 
         */
        public Builder feedOutputConfig(FeedOutputConfigArgs feedOutputConfig) {
            return feedOutputConfig(Output.of(feedOutputConfig));
        }

        /**
         * @param name The format will be projects/{project_number}/feeds/{client-assigned_feed_identifier} or folders/{folder_number}/feeds/{client-assigned_feed_identifier} or organizations/{organization_number}/feeds/{client-assigned_feed_identifier} The client-assigned feed identifier must be unique within the parent project/folder/organization.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The format will be projects/{project_number}/feeds/{client-assigned_feed_identifier} or folders/{folder_number}/feeds/{client-assigned_feed_identifier} or organizations/{organization_number}/feeds/{client-assigned_feed_identifier} The client-assigned feed identifier must be unique within the parent project/folder/organization.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param relationshipTypes A list of relationship types to output, for example: `INSTANCE_TO_INSTANCEGROUP`. This field should only be specified if content_type=RELATIONSHIP. * If specified: it outputs specified relationship updates on the [asset_names] or the [asset_types]. It returns an error if any of the [relationship_types] doesn&#39;t belong to the supported relationship types of the [asset_names] or [asset_types], or any of the [asset_names] or the [asset_types] doesn&#39;t belong to the source types of the [relationship_types]. * Otherwise: it outputs the supported relationships of the types of [asset_names] and [asset_types] or returns an error if any of the [asset_names] or the [asset_types] has no replationship support. See [Introduction to Cloud Asset Inventory](https://cloud.google.com/asset-inventory/docs/overview) for all supported asset types and relationship types.
         * 
         * @return builder
         * 
         */
        public Builder relationshipTypes(@Nullable Output<List<String>> relationshipTypes) {
            $.relationshipTypes = relationshipTypes;
            return this;
        }

        /**
         * @param relationshipTypes A list of relationship types to output, for example: `INSTANCE_TO_INSTANCEGROUP`. This field should only be specified if content_type=RELATIONSHIP. * If specified: it outputs specified relationship updates on the [asset_names] or the [asset_types]. It returns an error if any of the [relationship_types] doesn&#39;t belong to the supported relationship types of the [asset_names] or [asset_types], or any of the [asset_names] or the [asset_types] doesn&#39;t belong to the source types of the [relationship_types]. * Otherwise: it outputs the supported relationships of the types of [asset_names] and [asset_types] or returns an error if any of the [asset_names] or the [asset_types] has no replationship support. See [Introduction to Cloud Asset Inventory](https://cloud.google.com/asset-inventory/docs/overview) for all supported asset types and relationship types.
         * 
         * @return builder
         * 
         */
        public Builder relationshipTypes(List<String> relationshipTypes) {
            return relationshipTypes(Output.of(relationshipTypes));
        }

        /**
         * @param relationshipTypes A list of relationship types to output, for example: `INSTANCE_TO_INSTANCEGROUP`. This field should only be specified if content_type=RELATIONSHIP. * If specified: it outputs specified relationship updates on the [asset_names] or the [asset_types]. It returns an error if any of the [relationship_types] doesn&#39;t belong to the supported relationship types of the [asset_names] or [asset_types], or any of the [asset_names] or the [asset_types] doesn&#39;t belong to the source types of the [relationship_types]. * Otherwise: it outputs the supported relationships of the types of [asset_names] and [asset_types] or returns an error if any of the [asset_names] or the [asset_types] has no replationship support. See [Introduction to Cloud Asset Inventory](https://cloud.google.com/asset-inventory/docs/overview) for all supported asset types and relationship types.
         * 
         * @return builder
         * 
         */
        public Builder relationshipTypes(String... relationshipTypes) {
            return relationshipTypes(List.of(relationshipTypes));
        }

        public Builder v1Id(Output<String> v1Id) {
            $.v1Id = v1Id;
            return this;
        }

        public Builder v1Id(String v1Id) {
            return v1Id(Output.of(v1Id));
        }

        public Builder v1Id1(Output<String> v1Id1) {
            $.v1Id1 = v1Id1;
            return this;
        }

        public Builder v1Id1(String v1Id1) {
            return v1Id1(Output.of(v1Id1));
        }

        public FeedArgs build() {
            $.feedId = Objects.requireNonNull($.feedId, "expected parameter 'feedId' to be non-null");
            $.feedOutputConfig = Objects.requireNonNull($.feedOutputConfig, "expected parameter 'feedOutputConfig' to be non-null");
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            $.v1Id = Objects.requireNonNull($.v1Id, "expected parameter 'v1Id' to be non-null");
            $.v1Id1 = Objects.requireNonNull($.v1Id1, "expected parameter 'v1Id1' to be non-null");
            return $;
        }
    }

}
