// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.compute_alpha.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;


/**
 * [Output only] Represents status related to the future reservation.
 * 
 */
public final class FutureReservationStatusResponse extends com.pulumi.resources.InvokeArgs {

    public static final FutureReservationStatusResponse Empty = new FutureReservationStatusResponse();

    /**
     * Fully qualified urls of the automatically created reservations at start_time.
     * 
     */
    @Import(name="autoCreatedReservations", required=true)
      private final List<String> autoCreatedReservations;

    public List<String> autoCreatedReservations() {
        return this.autoCreatedReservations;
    }

    /**
     * This count indicates the fulfilled capacity so far. This is set during "PROVISIONING" state. This count also includes capacity delivered as part of existing matching reservations.
     * 
     */
    @Import(name="fulfilledCount", required=true)
      private final String fulfilledCount;

    public String fulfilledCount() {
        return this.fulfilledCount;
    }

    /**
     * Time when Future Reservation would become LOCKED, after which no modifications to Future Reservation will be allowed. Applicable only after the Future Reservation is in the APPROVED state. The lock_time is an RFC3339 string. The procurement_status will transition to PROCURING state at this time.
     * 
     */
    @Import(name="lockTime", required=true)
      private final String lockTime;

    public String lockTime() {
        return this.lockTime;
    }

    /**
     * Current state of this Future Reservation
     * 
     */
    @Import(name="procurementStatus", required=true)
      private final String procurementStatus;

    public String procurementStatus() {
        return this.procurementStatus;
    }

    public FutureReservationStatusResponse(
        List<String> autoCreatedReservations,
        String fulfilledCount,
        String lockTime,
        String procurementStatus) {
        this.autoCreatedReservations = Objects.requireNonNull(autoCreatedReservations, "expected parameter 'autoCreatedReservations' to be non-null");
        this.fulfilledCount = Objects.requireNonNull(fulfilledCount, "expected parameter 'fulfilledCount' to be non-null");
        this.lockTime = Objects.requireNonNull(lockTime, "expected parameter 'lockTime' to be non-null");
        this.procurementStatus = Objects.requireNonNull(procurementStatus, "expected parameter 'procurementStatus' to be non-null");
    }

    private FutureReservationStatusResponse() {
        this.autoCreatedReservations = List.of();
        this.fulfilledCount = null;
        this.lockTime = null;
        this.procurementStatus = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FutureReservationStatusResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<String> autoCreatedReservations;
        private String fulfilledCount;
        private String lockTime;
        private String procurementStatus;

        public Builder() {
    	      // Empty
        }

        public Builder(FutureReservationStatusResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.autoCreatedReservations = defaults.autoCreatedReservations;
    	      this.fulfilledCount = defaults.fulfilledCount;
    	      this.lockTime = defaults.lockTime;
    	      this.procurementStatus = defaults.procurementStatus;
        }

        public Builder autoCreatedReservations(List<String> autoCreatedReservations) {
            this.autoCreatedReservations = Objects.requireNonNull(autoCreatedReservations);
            return this;
        }
        public Builder autoCreatedReservations(String... autoCreatedReservations) {
            return autoCreatedReservations(List.of(autoCreatedReservations));
        }
        public Builder fulfilledCount(String fulfilledCount) {
            this.fulfilledCount = Objects.requireNonNull(fulfilledCount);
            return this;
        }
        public Builder lockTime(String lockTime) {
            this.lockTime = Objects.requireNonNull(lockTime);
            return this;
        }
        public Builder procurementStatus(String procurementStatus) {
            this.procurementStatus = Objects.requireNonNull(procurementStatus);
            return this;
        }        public FutureReservationStatusResponse build() {
            return new FutureReservationStatusResponse(autoCreatedReservations, fulfilledCount, lockTime, procurementStatus);
        }
    }
}
