// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.container_v1beta1.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * Constraints applied to pods.
 * 
 */
public final class MaxPodsConstraintResponse extends com.pulumi.resources.InvokeArgs {

    public static final MaxPodsConstraintResponse Empty = new MaxPodsConstraintResponse();

    /**
     * Constraint enforced on the max num of pods per node.
     * 
     */
    @Import(name="maxPodsPerNode", required=true)
    private String maxPodsPerNode;

    /**
     * @return Constraint enforced on the max num of pods per node.
     * 
     */
    public String maxPodsPerNode() {
        return this.maxPodsPerNode;
    }

    private MaxPodsConstraintResponse() {}

    private MaxPodsConstraintResponse(MaxPodsConstraintResponse $) {
        this.maxPodsPerNode = $.maxPodsPerNode;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MaxPodsConstraintResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MaxPodsConstraintResponse $;

        public Builder() {
            $ = new MaxPodsConstraintResponse();
        }

        public Builder(MaxPodsConstraintResponse defaults) {
            $ = new MaxPodsConstraintResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param maxPodsPerNode Constraint enforced on the max num of pods per node.
         * 
         * @return builder
         * 
         */
        public Builder maxPodsPerNode(String maxPodsPerNode) {
            $.maxPodsPerNode = maxPodsPerNode;
            return this;
        }

        public MaxPodsConstraintResponse build() {
            $.maxPodsPerNode = Objects.requireNonNull($.maxPodsPerNode, "expected parameter 'maxPodsPerNode' to be non-null");
            return $;
        }
    }

}
