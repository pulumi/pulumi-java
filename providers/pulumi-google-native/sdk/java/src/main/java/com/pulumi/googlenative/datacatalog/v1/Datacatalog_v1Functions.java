// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.datacatalog.v1;

import com.pulumi.core.Output;
import com.pulumi.core.TypeShape;
import com.pulumi.deployment.Deployment;
import com.pulumi.deployment.InvokeOptions;
import com.pulumi.googlenative.Utilities;
import com.pulumi.googlenative.datacatalog.v1.inputs.GetEntryArgs;
import com.pulumi.googlenative.datacatalog.v1.inputs.GetEntryGroupArgs;
import com.pulumi.googlenative.datacatalog.v1.inputs.GetEntryGroupIamPolicyArgs;
import com.pulumi.googlenative.datacatalog.v1.inputs.GetEntryGroupIamPolicyPlainArgs;
import com.pulumi.googlenative.datacatalog.v1.inputs.GetEntryGroupPlainArgs;
import com.pulumi.googlenative.datacatalog.v1.inputs.GetEntryPlainArgs;
import com.pulumi.googlenative.datacatalog.v1.inputs.GetPolicyTagArgs;
import com.pulumi.googlenative.datacatalog.v1.inputs.GetPolicyTagPlainArgs;
import com.pulumi.googlenative.datacatalog.v1.inputs.GetTagTemplateArgs;
import com.pulumi.googlenative.datacatalog.v1.inputs.GetTagTemplateIamPolicyArgs;
import com.pulumi.googlenative.datacatalog.v1.inputs.GetTagTemplateIamPolicyPlainArgs;
import com.pulumi.googlenative.datacatalog.v1.inputs.GetTagTemplatePlainArgs;
import com.pulumi.googlenative.datacatalog.v1.inputs.GetTaxonomyArgs;
import com.pulumi.googlenative.datacatalog.v1.inputs.GetTaxonomyIamPolicyArgs;
import com.pulumi.googlenative.datacatalog.v1.inputs.GetTaxonomyIamPolicyPlainArgs;
import com.pulumi.googlenative.datacatalog.v1.inputs.GetTaxonomyPlainArgs;
import com.pulumi.googlenative.datacatalog.v1.inputs.GetTaxonomyPolicyTagIamPolicyArgs;
import com.pulumi.googlenative.datacatalog.v1.inputs.GetTaxonomyPolicyTagIamPolicyPlainArgs;
import com.pulumi.googlenative.datacatalog.v1.outputs.GetEntryGroupIamPolicyResult;
import com.pulumi.googlenative.datacatalog.v1.outputs.GetEntryGroupResult;
import com.pulumi.googlenative.datacatalog.v1.outputs.GetEntryResult;
import com.pulumi.googlenative.datacatalog.v1.outputs.GetPolicyTagResult;
import com.pulumi.googlenative.datacatalog.v1.outputs.GetTagTemplateIamPolicyResult;
import com.pulumi.googlenative.datacatalog.v1.outputs.GetTagTemplateResult;
import com.pulumi.googlenative.datacatalog.v1.outputs.GetTaxonomyIamPolicyResult;
import com.pulumi.googlenative.datacatalog.v1.outputs.GetTaxonomyPolicyTagIamPolicyResult;
import com.pulumi.googlenative.datacatalog.v1.outputs.GetTaxonomyResult;
import java.util.concurrent.CompletableFuture;

public final class Datacatalog_v1Functions {
    /**
     * Gets an entry.
     * 
     */
    public static Output<GetEntryResult> getEntry(GetEntryArgs args) {
        return getEntry(args, InvokeOptions.Empty);
    }
    /**
     * Gets an entry.
     * 
     */
    public static CompletableFuture<GetEntryResult> getEntryPlain(GetEntryPlainArgs args) {
        return getEntryPlain(args, InvokeOptions.Empty);
    }
    /**
     * Gets an entry.
     * 
     */
    public static Output<GetEntryResult> getEntry(GetEntryArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("google-native:datacatalog/v1:getEntry", TypeShape.of(GetEntryResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets an entry.
     * 
     */
    public static CompletableFuture<GetEntryResult> getEntryPlain(GetEntryPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("google-native:datacatalog/v1:getEntry", TypeShape.of(GetEntryResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets an entry group.
     * 
     */
    public static Output<GetEntryGroupResult> getEntryGroup(GetEntryGroupArgs args) {
        return getEntryGroup(args, InvokeOptions.Empty);
    }
    /**
     * Gets an entry group.
     * 
     */
    public static CompletableFuture<GetEntryGroupResult> getEntryGroupPlain(GetEntryGroupPlainArgs args) {
        return getEntryGroupPlain(args, InvokeOptions.Empty);
    }
    /**
     * Gets an entry group.
     * 
     */
    public static Output<GetEntryGroupResult> getEntryGroup(GetEntryGroupArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("google-native:datacatalog/v1:getEntryGroup", TypeShape.of(GetEntryGroupResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets an entry group.
     * 
     */
    public static CompletableFuture<GetEntryGroupResult> getEntryGroupPlain(GetEntryGroupPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("google-native:datacatalog/v1:getEntryGroup", TypeShape.of(GetEntryGroupResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets the access control policy for a resource. May return: * A`NOT_FOUND` error if the resource doesn&#39;t exist or you don&#39;t have the permission to view it. * An empty policy if the resource exists but doesn&#39;t have a set policy. Supported resources are: - Tag templates - Entry groups Note: This method doesn&#39;t get policies from Google Cloud Platform resources ingested into Data Catalog. To call this method, you must have the following Google IAM permissions: - `datacatalog.tagTemplates.getIamPolicy` to get policies on tag templates. - `datacatalog.entryGroups.getIamPolicy` to get policies on entry groups.
     * 
     */
    public static Output<GetEntryGroupIamPolicyResult> getEntryGroupIamPolicy(GetEntryGroupIamPolicyArgs args) {
        return getEntryGroupIamPolicy(args, InvokeOptions.Empty);
    }
    /**
     * Gets the access control policy for a resource. May return: * A`NOT_FOUND` error if the resource doesn&#39;t exist or you don&#39;t have the permission to view it. * An empty policy if the resource exists but doesn&#39;t have a set policy. Supported resources are: - Tag templates - Entry groups Note: This method doesn&#39;t get policies from Google Cloud Platform resources ingested into Data Catalog. To call this method, you must have the following Google IAM permissions: - `datacatalog.tagTemplates.getIamPolicy` to get policies on tag templates. - `datacatalog.entryGroups.getIamPolicy` to get policies on entry groups.
     * 
     */
    public static CompletableFuture<GetEntryGroupIamPolicyResult> getEntryGroupIamPolicyPlain(GetEntryGroupIamPolicyPlainArgs args) {
        return getEntryGroupIamPolicyPlain(args, InvokeOptions.Empty);
    }
    /**
     * Gets the access control policy for a resource. May return: * A`NOT_FOUND` error if the resource doesn&#39;t exist or you don&#39;t have the permission to view it. * An empty policy if the resource exists but doesn&#39;t have a set policy. Supported resources are: - Tag templates - Entry groups Note: This method doesn&#39;t get policies from Google Cloud Platform resources ingested into Data Catalog. To call this method, you must have the following Google IAM permissions: - `datacatalog.tagTemplates.getIamPolicy` to get policies on tag templates. - `datacatalog.entryGroups.getIamPolicy` to get policies on entry groups.
     * 
     */
    public static Output<GetEntryGroupIamPolicyResult> getEntryGroupIamPolicy(GetEntryGroupIamPolicyArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("google-native:datacatalog/v1:getEntryGroupIamPolicy", TypeShape.of(GetEntryGroupIamPolicyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets the access control policy for a resource. May return: * A`NOT_FOUND` error if the resource doesn&#39;t exist or you don&#39;t have the permission to view it. * An empty policy if the resource exists but doesn&#39;t have a set policy. Supported resources are: - Tag templates - Entry groups Note: This method doesn&#39;t get policies from Google Cloud Platform resources ingested into Data Catalog. To call this method, you must have the following Google IAM permissions: - `datacatalog.tagTemplates.getIamPolicy` to get policies on tag templates. - `datacatalog.entryGroups.getIamPolicy` to get policies on entry groups.
     * 
     */
    public static CompletableFuture<GetEntryGroupIamPolicyResult> getEntryGroupIamPolicyPlain(GetEntryGroupIamPolicyPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("google-native:datacatalog/v1:getEntryGroupIamPolicy", TypeShape.of(GetEntryGroupIamPolicyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets a policy tag.
     * 
     */
    public static Output<GetPolicyTagResult> getPolicyTag(GetPolicyTagArgs args) {
        return getPolicyTag(args, InvokeOptions.Empty);
    }
    /**
     * Gets a policy tag.
     * 
     */
    public static CompletableFuture<GetPolicyTagResult> getPolicyTagPlain(GetPolicyTagPlainArgs args) {
        return getPolicyTagPlain(args, InvokeOptions.Empty);
    }
    /**
     * Gets a policy tag.
     * 
     */
    public static Output<GetPolicyTagResult> getPolicyTag(GetPolicyTagArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("google-native:datacatalog/v1:getPolicyTag", TypeShape.of(GetPolicyTagResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets a policy tag.
     * 
     */
    public static CompletableFuture<GetPolicyTagResult> getPolicyTagPlain(GetPolicyTagPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("google-native:datacatalog/v1:getPolicyTag", TypeShape.of(GetPolicyTagResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets a tag template.
     * 
     */
    public static Output<GetTagTemplateResult> getTagTemplate(GetTagTemplateArgs args) {
        return getTagTemplate(args, InvokeOptions.Empty);
    }
    /**
     * Gets a tag template.
     * 
     */
    public static CompletableFuture<GetTagTemplateResult> getTagTemplatePlain(GetTagTemplatePlainArgs args) {
        return getTagTemplatePlain(args, InvokeOptions.Empty);
    }
    /**
     * Gets a tag template.
     * 
     */
    public static Output<GetTagTemplateResult> getTagTemplate(GetTagTemplateArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("google-native:datacatalog/v1:getTagTemplate", TypeShape.of(GetTagTemplateResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets a tag template.
     * 
     */
    public static CompletableFuture<GetTagTemplateResult> getTagTemplatePlain(GetTagTemplatePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("google-native:datacatalog/v1:getTagTemplate", TypeShape.of(GetTagTemplateResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets the access control policy for a resource. May return: * A`NOT_FOUND` error if the resource doesn&#39;t exist or you don&#39;t have the permission to view it. * An empty policy if the resource exists but doesn&#39;t have a set policy. Supported resources are: - Tag templates - Entry groups Note: This method doesn&#39;t get policies from Google Cloud Platform resources ingested into Data Catalog. To call this method, you must have the following Google IAM permissions: - `datacatalog.tagTemplates.getIamPolicy` to get policies on tag templates. - `datacatalog.entryGroups.getIamPolicy` to get policies on entry groups.
     * 
     */
    public static Output<GetTagTemplateIamPolicyResult> getTagTemplateIamPolicy(GetTagTemplateIamPolicyArgs args) {
        return getTagTemplateIamPolicy(args, InvokeOptions.Empty);
    }
    /**
     * Gets the access control policy for a resource. May return: * A`NOT_FOUND` error if the resource doesn&#39;t exist or you don&#39;t have the permission to view it. * An empty policy if the resource exists but doesn&#39;t have a set policy. Supported resources are: - Tag templates - Entry groups Note: This method doesn&#39;t get policies from Google Cloud Platform resources ingested into Data Catalog. To call this method, you must have the following Google IAM permissions: - `datacatalog.tagTemplates.getIamPolicy` to get policies on tag templates. - `datacatalog.entryGroups.getIamPolicy` to get policies on entry groups.
     * 
     */
    public static CompletableFuture<GetTagTemplateIamPolicyResult> getTagTemplateIamPolicyPlain(GetTagTemplateIamPolicyPlainArgs args) {
        return getTagTemplateIamPolicyPlain(args, InvokeOptions.Empty);
    }
    /**
     * Gets the access control policy for a resource. May return: * A`NOT_FOUND` error if the resource doesn&#39;t exist or you don&#39;t have the permission to view it. * An empty policy if the resource exists but doesn&#39;t have a set policy. Supported resources are: - Tag templates - Entry groups Note: This method doesn&#39;t get policies from Google Cloud Platform resources ingested into Data Catalog. To call this method, you must have the following Google IAM permissions: - `datacatalog.tagTemplates.getIamPolicy` to get policies on tag templates. - `datacatalog.entryGroups.getIamPolicy` to get policies on entry groups.
     * 
     */
    public static Output<GetTagTemplateIamPolicyResult> getTagTemplateIamPolicy(GetTagTemplateIamPolicyArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("google-native:datacatalog/v1:getTagTemplateIamPolicy", TypeShape.of(GetTagTemplateIamPolicyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets the access control policy for a resource. May return: * A`NOT_FOUND` error if the resource doesn&#39;t exist or you don&#39;t have the permission to view it. * An empty policy if the resource exists but doesn&#39;t have a set policy. Supported resources are: - Tag templates - Entry groups Note: This method doesn&#39;t get policies from Google Cloud Platform resources ingested into Data Catalog. To call this method, you must have the following Google IAM permissions: - `datacatalog.tagTemplates.getIamPolicy` to get policies on tag templates. - `datacatalog.entryGroups.getIamPolicy` to get policies on entry groups.
     * 
     */
    public static CompletableFuture<GetTagTemplateIamPolicyResult> getTagTemplateIamPolicyPlain(GetTagTemplateIamPolicyPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("google-native:datacatalog/v1:getTagTemplateIamPolicy", TypeShape.of(GetTagTemplateIamPolicyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets a taxonomy.
     * 
     */
    public static Output<GetTaxonomyResult> getTaxonomy(GetTaxonomyArgs args) {
        return getTaxonomy(args, InvokeOptions.Empty);
    }
    /**
     * Gets a taxonomy.
     * 
     */
    public static CompletableFuture<GetTaxonomyResult> getTaxonomyPlain(GetTaxonomyPlainArgs args) {
        return getTaxonomyPlain(args, InvokeOptions.Empty);
    }
    /**
     * Gets a taxonomy.
     * 
     */
    public static Output<GetTaxonomyResult> getTaxonomy(GetTaxonomyArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("google-native:datacatalog/v1:getTaxonomy", TypeShape.of(GetTaxonomyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets a taxonomy.
     * 
     */
    public static CompletableFuture<GetTaxonomyResult> getTaxonomyPlain(GetTaxonomyPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("google-native:datacatalog/v1:getTaxonomy", TypeShape.of(GetTaxonomyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets the IAM policy for a policy tag or a taxonomy.
     * 
     */
    public static Output<GetTaxonomyIamPolicyResult> getTaxonomyIamPolicy(GetTaxonomyIamPolicyArgs args) {
        return getTaxonomyIamPolicy(args, InvokeOptions.Empty);
    }
    /**
     * Gets the IAM policy for a policy tag or a taxonomy.
     * 
     */
    public static CompletableFuture<GetTaxonomyIamPolicyResult> getTaxonomyIamPolicyPlain(GetTaxonomyIamPolicyPlainArgs args) {
        return getTaxonomyIamPolicyPlain(args, InvokeOptions.Empty);
    }
    /**
     * Gets the IAM policy for a policy tag or a taxonomy.
     * 
     */
    public static Output<GetTaxonomyIamPolicyResult> getTaxonomyIamPolicy(GetTaxonomyIamPolicyArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("google-native:datacatalog/v1:getTaxonomyIamPolicy", TypeShape.of(GetTaxonomyIamPolicyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets the IAM policy for a policy tag or a taxonomy.
     * 
     */
    public static CompletableFuture<GetTaxonomyIamPolicyResult> getTaxonomyIamPolicyPlain(GetTaxonomyIamPolicyPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("google-native:datacatalog/v1:getTaxonomyIamPolicy", TypeShape.of(GetTaxonomyIamPolicyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets the IAM policy for a policy tag or a taxonomy.
     * 
     */
    public static Output<GetTaxonomyPolicyTagIamPolicyResult> getTaxonomyPolicyTagIamPolicy(GetTaxonomyPolicyTagIamPolicyArgs args) {
        return getTaxonomyPolicyTagIamPolicy(args, InvokeOptions.Empty);
    }
    /**
     * Gets the IAM policy for a policy tag or a taxonomy.
     * 
     */
    public static CompletableFuture<GetTaxonomyPolicyTagIamPolicyResult> getTaxonomyPolicyTagIamPolicyPlain(GetTaxonomyPolicyTagIamPolicyPlainArgs args) {
        return getTaxonomyPolicyTagIamPolicyPlain(args, InvokeOptions.Empty);
    }
    /**
     * Gets the IAM policy for a policy tag or a taxonomy.
     * 
     */
    public static Output<GetTaxonomyPolicyTagIamPolicyResult> getTaxonomyPolicyTagIamPolicy(GetTaxonomyPolicyTagIamPolicyArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("google-native:datacatalog/v1:getTaxonomyPolicyTagIamPolicy", TypeShape.of(GetTaxonomyPolicyTagIamPolicyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets the IAM policy for a policy tag or a taxonomy.
     * 
     */
    public static CompletableFuture<GetTaxonomyPolicyTagIamPolicyResult> getTaxonomyPolicyTagIamPolicyPlain(GetTaxonomyPolicyTagIamPolicyPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("google-native:datacatalog/v1:getTaxonomyPolicyTagIamPolicy", TypeShape.of(GetTaxonomyPolicyTagIamPolicyResult.class), args, Utilities.withVersion(options));
    }
}
