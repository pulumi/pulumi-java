// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.privateca_v1;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.privateca_v1.enums.CaPoolTier;
import com.pulumi.googlenative.privateca_v1.inputs.IssuancePolicyArgs;
import com.pulumi.googlenative.privateca_v1.inputs.PublishingOptionsArgs;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CaPoolArgs extends com.pulumi.resources.ResourceArgs {

    public static final CaPoolArgs Empty = new CaPoolArgs();

    @Import(name="caPoolId", required=true)
    private Output<String> caPoolId;

    public Output<String> caPoolId() {
        return this.caPoolId;
    }

    /**
     * Optional. The IssuancePolicy to control how Certificates will be issued from this CaPool.
     * 
     */
    @Import(name="issuancePolicy")
    private @Nullable Output<IssuancePolicyArgs> issuancePolicy;

    public Optional<Output<IssuancePolicyArgs>> issuancePolicy() {
        return Optional.ofNullable(this.issuancePolicy);
    }

    /**
     * Optional. Labels with user-defined metadata.
     * 
     */
    @Import(name="labels")
    private @Nullable Output<Map<String,String>> labels;

    public Optional<Output<Map<String,String>>> labels() {
        return Optional.ofNullable(this.labels);
    }

    @Import(name="location")
    private @Nullable Output<String> location;

    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    @Import(name="project")
    private @Nullable Output<String> project;

    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * Optional. The PublishingOptions to follow when issuing Certificates from any CertificateAuthority in this CaPool.
     * 
     */
    @Import(name="publishingOptions")
    private @Nullable Output<PublishingOptionsArgs> publishingOptions;

    public Optional<Output<PublishingOptionsArgs>> publishingOptions() {
        return Optional.ofNullable(this.publishingOptions);
    }

    @Import(name="requestId")
    private @Nullable Output<String> requestId;

    public Optional<Output<String>> requestId() {
        return Optional.ofNullable(this.requestId);
    }

    /**
     * Immutable. The Tier of this CaPool.
     * 
     */
    @Import(name="tier", required=true)
    private Output<CaPoolTier> tier;

    public Output<CaPoolTier> tier() {
        return this.tier;
    }

    private CaPoolArgs() {}

    private CaPoolArgs(CaPoolArgs $) {
        this.caPoolId = $.caPoolId;
        this.issuancePolicy = $.issuancePolicy;
        this.labels = $.labels;
        this.location = $.location;
        this.project = $.project;
        this.publishingOptions = $.publishingOptions;
        this.requestId = $.requestId;
        this.tier = $.tier;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CaPoolArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CaPoolArgs $;

        public Builder() {
            $ = new CaPoolArgs();
        }

        public Builder(CaPoolArgs defaults) {
            $ = new CaPoolArgs(Objects.requireNonNull(defaults));
        }

        public Builder caPoolId(Output<String> caPoolId) {
            $.caPoolId = caPoolId;
            return this;
        }

        public Builder caPoolId(String caPoolId) {
            return caPoolId(Output.of(caPoolId));
        }

        public Builder issuancePolicy(@Nullable Output<IssuancePolicyArgs> issuancePolicy) {
            $.issuancePolicy = issuancePolicy;
            return this;
        }

        public Builder issuancePolicy(IssuancePolicyArgs issuancePolicy) {
            return issuancePolicy(Output.of(issuancePolicy));
        }

        public Builder labels(@Nullable Output<Map<String,String>> labels) {
            $.labels = labels;
            return this;
        }

        public Builder labels(Map<String,String> labels) {
            return labels(Output.of(labels));
        }

        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        public Builder location(String location) {
            return location(Output.of(location));
        }

        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        public Builder project(String project) {
            return project(Output.of(project));
        }

        public Builder publishingOptions(@Nullable Output<PublishingOptionsArgs> publishingOptions) {
            $.publishingOptions = publishingOptions;
            return this;
        }

        public Builder publishingOptions(PublishingOptionsArgs publishingOptions) {
            return publishingOptions(Output.of(publishingOptions));
        }

        public Builder requestId(@Nullable Output<String> requestId) {
            $.requestId = requestId;
            return this;
        }

        public Builder requestId(String requestId) {
            return requestId(Output.of(requestId));
        }

        public Builder tier(Output<CaPoolTier> tier) {
            $.tier = tier;
            return this;
        }

        public Builder tier(CaPoolTier tier) {
            return tier(Output.of(tier));
        }

        public CaPoolArgs build() {
            $.caPoolId = Objects.requireNonNull($.caPoolId, "expected parameter 'caPoolId' to be non-null");
            $.tier = Objects.requireNonNull($.tier, "expected parameter 'tier' to be non-null");
            return $;
        }
    }

}
