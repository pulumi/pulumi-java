// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.networkservices_v1beta1;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ServiceBindingArgs extends com.pulumi.resources.ResourceArgs {

    public static final ServiceBindingArgs Empty = new ServiceBindingArgs();

    /**
     * Optional. A free-text description of the resource. Max length 1024 characters.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Optional. The endpoint filter associated with the Service Binding. The syntax is described in http://cloud/service-directory/docs/reference/rpc/google.cloud.servicedirectory.v1#google.cloud.servicedirectory.v1.ResolveServiceRequest
     * 
     */
    @Import(name="endpointFilter")
    private @Nullable Output<String> endpointFilter;

    public Optional<Output<String>> endpointFilter() {
        return Optional.ofNullable(this.endpointFilter);
    }

    /**
     * Optional. Set of label tags associated with the ServiceBinding resource.
     * 
     */
    @Import(name="labels")
    private @Nullable Output<Map<String,String>> labels;

    public Optional<Output<Map<String,String>>> labels() {
        return Optional.ofNullable(this.labels);
    }

    @Import(name="location")
    private @Nullable Output<String> location;

    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * Name of the ServiceBinding resource. It matches pattern `projects/*{@literal /}locations/global/serviceBindings/service_binding_name&gt;`.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="project")
    private @Nullable Output<String> project;

    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * The full service directory service name of the format /projects/*{@literal /}locations/*{@literal /}namespaces/*{@literal /}services/*
     * 
     */
    @Import(name="service", required=true)
    private Output<String> service;

    public Output<String> service() {
        return this.service;
    }

    @Import(name="serviceBindingId", required=true)
    private Output<String> serviceBindingId;

    public Output<String> serviceBindingId() {
        return this.serviceBindingId;
    }

    private ServiceBindingArgs() {}

    private ServiceBindingArgs(ServiceBindingArgs $) {
        this.description = $.description;
        this.endpointFilter = $.endpointFilter;
        this.labels = $.labels;
        this.location = $.location;
        this.name = $.name;
        this.project = $.project;
        this.service = $.service;
        this.serviceBindingId = $.serviceBindingId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServiceBindingArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServiceBindingArgs $;

        public Builder() {
            $ = new ServiceBindingArgs();
        }

        public Builder(ServiceBindingArgs defaults) {
            $ = new ServiceBindingArgs(Objects.requireNonNull(defaults));
        }

        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        public Builder description(String description) {
            return description(Output.of(description));
        }

        public Builder endpointFilter(@Nullable Output<String> endpointFilter) {
            $.endpointFilter = endpointFilter;
            return this;
        }

        public Builder endpointFilter(String endpointFilter) {
            return endpointFilter(Output.of(endpointFilter));
        }

        public Builder labels(@Nullable Output<Map<String,String>> labels) {
            $.labels = labels;
            return this;
        }

        public Builder labels(Map<String,String> labels) {
            return labels(Output.of(labels));
        }

        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        public Builder location(String location) {
            return location(Output.of(location));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        public Builder project(String project) {
            return project(Output.of(project));
        }

        public Builder service(Output<String> service) {
            $.service = service;
            return this;
        }

        public Builder service(String service) {
            return service(Output.of(service));
        }

        public Builder serviceBindingId(Output<String> serviceBindingId) {
            $.serviceBindingId = serviceBindingId;
            return this;
        }

        public Builder serviceBindingId(String serviceBindingId) {
            return serviceBindingId(Output.of(serviceBindingId));
        }

        public ServiceBindingArgs build() {
            $.service = Objects.requireNonNull($.service, "expected parameter 'service' to be non-null");
            $.serviceBindingId = Objects.requireNonNull($.serviceBindingId, "expected parameter 'serviceBindingId' to be non-null");
            return $;
        }
    }

}
