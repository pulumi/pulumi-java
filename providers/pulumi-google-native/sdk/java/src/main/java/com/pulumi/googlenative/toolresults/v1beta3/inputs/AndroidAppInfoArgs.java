// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.toolresults.v1beta3.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Android app information.
 * 
 */
public final class AndroidAppInfoArgs extends com.pulumi.resources.ResourceArgs {

    public static final AndroidAppInfoArgs Empty = new AndroidAppInfoArgs();

    /**
     * The name of the app. Optional
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the app. Optional
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The package name of the app. Required.
     * 
     */
    @Import(name="packageName")
    private @Nullable Output<String> packageName;

    /**
     * @return The package name of the app. Required.
     * 
     */
    public Optional<Output<String>> packageName() {
        return Optional.ofNullable(this.packageName);
    }

    /**
     * The internal version code of the app. Optional.
     * 
     */
    @Import(name="versionCode")
    private @Nullable Output<String> versionCode;

    /**
     * @return The internal version code of the app. Optional.
     * 
     */
    public Optional<Output<String>> versionCode() {
        return Optional.ofNullable(this.versionCode);
    }

    /**
     * The version name of the app. Optional.
     * 
     */
    @Import(name="versionName")
    private @Nullable Output<String> versionName;

    /**
     * @return The version name of the app. Optional.
     * 
     */
    public Optional<Output<String>> versionName() {
        return Optional.ofNullable(this.versionName);
    }

    private AndroidAppInfoArgs() {}

    private AndroidAppInfoArgs(AndroidAppInfoArgs $) {
        this.name = $.name;
        this.packageName = $.packageName;
        this.versionCode = $.versionCode;
        this.versionName = $.versionName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AndroidAppInfoArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AndroidAppInfoArgs $;

        public Builder() {
            $ = new AndroidAppInfoArgs();
        }

        public Builder(AndroidAppInfoArgs defaults) {
            $ = new AndroidAppInfoArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param name The name of the app. Optional
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the app. Optional
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param packageName The package name of the app. Required.
         * 
         * @return builder
         * 
         */
        public Builder packageName(@Nullable Output<String> packageName) {
            $.packageName = packageName;
            return this;
        }

        /**
         * @param packageName The package name of the app. Required.
         * 
         * @return builder
         * 
         */
        public Builder packageName(String packageName) {
            return packageName(Output.of(packageName));
        }

        /**
         * @param versionCode The internal version code of the app. Optional.
         * 
         * @return builder
         * 
         */
        public Builder versionCode(@Nullable Output<String> versionCode) {
            $.versionCode = versionCode;
            return this;
        }

        /**
         * @param versionCode The internal version code of the app. Optional.
         * 
         * @return builder
         * 
         */
        public Builder versionCode(String versionCode) {
            return versionCode(Output.of(versionCode));
        }

        /**
         * @param versionName The version name of the app. Optional.
         * 
         * @return builder
         * 
         */
        public Builder versionName(@Nullable Output<String> versionName) {
            $.versionName = versionName;
            return this;
        }

        /**
         * @param versionName The version name of the app. Optional.
         * 
         * @return builder
         * 
         */
        public Builder versionName(String versionName) {
            return versionName(Output.of(versionName));
        }

        public AndroidAppInfoArgs build() {
            return $;
        }
    }

}
