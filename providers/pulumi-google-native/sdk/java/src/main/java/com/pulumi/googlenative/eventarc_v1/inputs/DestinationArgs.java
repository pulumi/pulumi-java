// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.eventarc_v1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.eventarc_v1.inputs.CloudRunArgs;
import com.pulumi.googlenative.eventarc_v1.inputs.GKEArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Represents a target of an invocation over HTTP.
 * 
 */
public final class DestinationArgs extends com.pulumi.resources.ResourceArgs {

    public static final DestinationArgs Empty = new DestinationArgs();

    /**
     * The Cloud Function resource name. Only Cloud Functions V2 is supported. Format: projects/{project}/locations/{location}/functions/{function}
     * 
     */
    @Import(name="cloudFunction")
    private @Nullable Output<String> cloudFunction;

    /**
     * @return The Cloud Function resource name. Only Cloud Functions V2 is supported. Format: projects/{project}/locations/{location}/functions/{function}
     * 
     */
    public Optional<Output<String>> cloudFunction() {
        return Optional.ofNullable(this.cloudFunction);
    }

    /**
     * Cloud Run fully-managed resource that receives the events. The resource should be in the same project as the trigger.
     * 
     */
    @Import(name="cloudRun")
    private @Nullable Output<CloudRunArgs> cloudRun;

    /**
     * @return Cloud Run fully-managed resource that receives the events. The resource should be in the same project as the trigger.
     * 
     */
    public Optional<Output<CloudRunArgs>> cloudRun() {
        return Optional.ofNullable(this.cloudRun);
    }

    /**
     * A GKE service capable of receiving events. The service should be running in the same project as the trigger.
     * 
     */
    @Import(name="gke")
    private @Nullable Output<GKEArgs> gke;

    /**
     * @return A GKE service capable of receiving events. The service should be running in the same project as the trigger.
     * 
     */
    public Optional<Output<GKEArgs>> gke() {
        return Optional.ofNullable(this.gke);
    }

    private DestinationArgs() {}

    private DestinationArgs(DestinationArgs $) {
        this.cloudFunction = $.cloudFunction;
        this.cloudRun = $.cloudRun;
        this.gke = $.gke;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DestinationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DestinationArgs $;

        public Builder() {
            $ = new DestinationArgs();
        }

        public Builder(DestinationArgs defaults) {
            $ = new DestinationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param cloudFunction The Cloud Function resource name. Only Cloud Functions V2 is supported. Format: projects/{project}/locations/{location}/functions/{function}
         * 
         * @return builder
         * 
         */
        public Builder cloudFunction(@Nullable Output<String> cloudFunction) {
            $.cloudFunction = cloudFunction;
            return this;
        }

        /**
         * @param cloudFunction The Cloud Function resource name. Only Cloud Functions V2 is supported. Format: projects/{project}/locations/{location}/functions/{function}
         * 
         * @return builder
         * 
         */
        public Builder cloudFunction(String cloudFunction) {
            return cloudFunction(Output.of(cloudFunction));
        }

        /**
         * @param cloudRun Cloud Run fully-managed resource that receives the events. The resource should be in the same project as the trigger.
         * 
         * @return builder
         * 
         */
        public Builder cloudRun(@Nullable Output<CloudRunArgs> cloudRun) {
            $.cloudRun = cloudRun;
            return this;
        }

        /**
         * @param cloudRun Cloud Run fully-managed resource that receives the events. The resource should be in the same project as the trigger.
         * 
         * @return builder
         * 
         */
        public Builder cloudRun(CloudRunArgs cloudRun) {
            return cloudRun(Output.of(cloudRun));
        }

        /**
         * @param gke A GKE service capable of receiving events. The service should be running in the same project as the trigger.
         * 
         * @return builder
         * 
         */
        public Builder gke(@Nullable Output<GKEArgs> gke) {
            $.gke = gke;
            return this;
        }

        /**
         * @param gke A GKE service capable of receiving events. The service should be running in the same project as the trigger.
         * 
         * @return builder
         * 
         */
        public Builder gke(GKEArgs gke) {
            return gke(Output.of(gke));
        }

        public DestinationArgs build() {
            return $;
        }
    }

}
