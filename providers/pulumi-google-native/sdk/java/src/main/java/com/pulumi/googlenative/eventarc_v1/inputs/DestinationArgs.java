// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.eventarc_v1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import com.pulumi.googlenative.eventarc_v1.inputs.CloudRunArgs;
import com.pulumi.googlenative.eventarc_v1.inputs.GKEArgs;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Represents a target of an invocation over HTTP.
 * 
 */
public final class DestinationArgs extends com.pulumi.resources.ResourceArgs {

    public static final DestinationArgs Empty = new DestinationArgs();

    /**
     * The Cloud Function resource name. Only Cloud Functions V2 is supported. Format: projects/{project}/locations/{location}/functions/{function}
     * 
     */
    @Import(name="cloudFunction")
      private final @Nullable Output<String> cloudFunction;

    public Output<String> cloudFunction() {
        return this.cloudFunction == null ? Codegen.empty() : this.cloudFunction;
    }

    /**
     * Cloud Run fully-managed resource that receives the events. The resource should be in the same project as the trigger.
     * 
     */
    @Import(name="cloudRun")
      private final @Nullable Output<CloudRunArgs> cloudRun;

    public Output<CloudRunArgs> cloudRun() {
        return this.cloudRun == null ? Codegen.empty() : this.cloudRun;
    }

    /**
     * A GKE service capable of receiving events. The service should be running in the same project as the trigger.
     * 
     */
    @Import(name="gke")
      private final @Nullable Output<GKEArgs> gke;

    public Output<GKEArgs> gke() {
        return this.gke == null ? Codegen.empty() : this.gke;
    }

    public DestinationArgs(
        @Nullable Output<String> cloudFunction,
        @Nullable Output<CloudRunArgs> cloudRun,
        @Nullable Output<GKEArgs> gke) {
        this.cloudFunction = cloudFunction;
        this.cloudRun = cloudRun;
        this.gke = gke;
    }

    private DestinationArgs() {
        this.cloudFunction = Codegen.empty();
        this.cloudRun = Codegen.empty();
        this.gke = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DestinationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> cloudFunction;
        private @Nullable Output<CloudRunArgs> cloudRun;
        private @Nullable Output<GKEArgs> gke;

        public Builder() {
    	      // Empty
        }

        public Builder(DestinationArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cloudFunction = defaults.cloudFunction;
    	      this.cloudRun = defaults.cloudRun;
    	      this.gke = defaults.gke;
        }

        public Builder cloudFunction(@Nullable Output<String> cloudFunction) {
            this.cloudFunction = cloudFunction;
            return this;
        }
        public Builder cloudFunction(@Nullable String cloudFunction) {
            this.cloudFunction = Codegen.ofNullable(cloudFunction);
            return this;
        }
        public Builder cloudRun(@Nullable Output<CloudRunArgs> cloudRun) {
            this.cloudRun = cloudRun;
            return this;
        }
        public Builder cloudRun(@Nullable CloudRunArgs cloudRun) {
            this.cloudRun = Codegen.ofNullable(cloudRun);
            return this;
        }
        public Builder gke(@Nullable Output<GKEArgs> gke) {
            this.gke = gke;
            return this;
        }
        public Builder gke(@Nullable GKEArgs gke) {
            this.gke = Codegen.ofNullable(gke);
            return this;
        }        public DestinationArgs build() {
            return new DestinationArgs(cloudFunction, cloudRun, gke);
        }
    }
}
