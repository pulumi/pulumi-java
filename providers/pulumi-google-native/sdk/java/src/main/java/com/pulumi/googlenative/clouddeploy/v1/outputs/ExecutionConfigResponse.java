// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.clouddeploy.v1.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.googlenative.clouddeploy.v1.outputs.DefaultPoolResponse;
import com.pulumi.googlenative.clouddeploy.v1.outputs.PrivatePoolResponse;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class ExecutionConfigResponse {
    /**
     * @return Optional. Cloud Storage location in which to store execution outputs. This can either be a bucket (&#34;gs://my-bucket&#34;) or a path within a bucket (&#34;gs://my-bucket/my-dir&#34;). If unspecified, a default bucket located in the same region will be used.
     * 
     */
    private final String artifactStorage;
    /**
     * @return Optional. Use default Cloud Build pool.
     * 
     */
    private final DefaultPoolResponse defaultPool;
    /**
     * @return Optional. Execution timeout for a Cloud Build Execution. This must be between 10m and 24h in seconds format. If unspecified, a default timeout of 1h is used.
     * 
     */
    private final String executionTimeout;
    /**
     * @return Optional. Use private Cloud Build pool.
     * 
     */
    private final PrivatePoolResponse privatePool;
    /**
     * @return Optional. Google service account to use for execution. If unspecified, the project execution service account (-compute@developer.gserviceaccount.com) is used.
     * 
     */
    private final String serviceAccount;
    /**
     * @return Usages when this configuration should be applied.
     * 
     */
    private final List<String> usages;
    /**
     * @return Optional. The resource name of the `WorkerPool`, with the format `projects/{project}/locations/{location}/workerPools/{worker_pool}`. If this optional field is unspecified, the default Cloud Build pool will be used.
     * 
     */
    private final String workerPool;

    @CustomType.Constructor
    private ExecutionConfigResponse(
        @CustomType.Parameter("artifactStorage") String artifactStorage,
        @CustomType.Parameter("defaultPool") DefaultPoolResponse defaultPool,
        @CustomType.Parameter("executionTimeout") String executionTimeout,
        @CustomType.Parameter("privatePool") PrivatePoolResponse privatePool,
        @CustomType.Parameter("serviceAccount") String serviceAccount,
        @CustomType.Parameter("usages") List<String> usages,
        @CustomType.Parameter("workerPool") String workerPool) {
        this.artifactStorage = artifactStorage;
        this.defaultPool = defaultPool;
        this.executionTimeout = executionTimeout;
        this.privatePool = privatePool;
        this.serviceAccount = serviceAccount;
        this.usages = usages;
        this.workerPool = workerPool;
    }

    /**
     * @return Optional. Cloud Storage location in which to store execution outputs. This can either be a bucket (&#34;gs://my-bucket&#34;) or a path within a bucket (&#34;gs://my-bucket/my-dir&#34;). If unspecified, a default bucket located in the same region will be used.
     * 
     */
    public String artifactStorage() {
        return this.artifactStorage;
    }
    /**
     * @return Optional. Use default Cloud Build pool.
     * 
     */
    public DefaultPoolResponse defaultPool() {
        return this.defaultPool;
    }
    /**
     * @return Optional. Execution timeout for a Cloud Build Execution. This must be between 10m and 24h in seconds format. If unspecified, a default timeout of 1h is used.
     * 
     */
    public String executionTimeout() {
        return this.executionTimeout;
    }
    /**
     * @return Optional. Use private Cloud Build pool.
     * 
     */
    public PrivatePoolResponse privatePool() {
        return this.privatePool;
    }
    /**
     * @return Optional. Google service account to use for execution. If unspecified, the project execution service account (-compute@developer.gserviceaccount.com) is used.
     * 
     */
    public String serviceAccount() {
        return this.serviceAccount;
    }
    /**
     * @return Usages when this configuration should be applied.
     * 
     */
    public List<String> usages() {
        return this.usages;
    }
    /**
     * @return Optional. The resource name of the `WorkerPool`, with the format `projects/{project}/locations/{location}/workerPools/{worker_pool}`. If this optional field is unspecified, the default Cloud Build pool will be used.
     * 
     */
    public String workerPool() {
        return this.workerPool;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ExecutionConfigResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String artifactStorage;
        private DefaultPoolResponse defaultPool;
        private String executionTimeout;
        private PrivatePoolResponse privatePool;
        private String serviceAccount;
        private List<String> usages;
        private String workerPool;

        public Builder() {
    	      // Empty
        }

        public Builder(ExecutionConfigResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.artifactStorage = defaults.artifactStorage;
    	      this.defaultPool = defaults.defaultPool;
    	      this.executionTimeout = defaults.executionTimeout;
    	      this.privatePool = defaults.privatePool;
    	      this.serviceAccount = defaults.serviceAccount;
    	      this.usages = defaults.usages;
    	      this.workerPool = defaults.workerPool;
        }

        public Builder artifactStorage(String artifactStorage) {
            this.artifactStorage = Objects.requireNonNull(artifactStorage);
            return this;
        }
        public Builder defaultPool(DefaultPoolResponse defaultPool) {
            this.defaultPool = Objects.requireNonNull(defaultPool);
            return this;
        }
        public Builder executionTimeout(String executionTimeout) {
            this.executionTimeout = Objects.requireNonNull(executionTimeout);
            return this;
        }
        public Builder privatePool(PrivatePoolResponse privatePool) {
            this.privatePool = Objects.requireNonNull(privatePool);
            return this;
        }
        public Builder serviceAccount(String serviceAccount) {
            this.serviceAccount = Objects.requireNonNull(serviceAccount);
            return this;
        }
        public Builder usages(List<String> usages) {
            this.usages = Objects.requireNonNull(usages);
            return this;
        }
        public Builder usages(String... usages) {
            return usages(List.of(usages));
        }
        public Builder workerPool(String workerPool) {
            this.workerPool = Objects.requireNonNull(workerPool);
            return this;
        }        public ExecutionConfigResponse build() {
            return new ExecutionConfigResponse(artifactStorage, defaultPool, executionTimeout, privatePool, serviceAccount, usages, workerPool);
        }
    }
}
