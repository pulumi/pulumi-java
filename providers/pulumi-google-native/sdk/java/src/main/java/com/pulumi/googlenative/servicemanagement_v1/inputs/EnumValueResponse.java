// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.servicemanagement_v1.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.servicemanagement_v1.inputs.OptionResponse;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;


/**
 * Enum value definition.
 * 
 */
public final class EnumValueResponse extends com.pulumi.resources.InvokeArgs {

    public static final EnumValueResponse Empty = new EnumValueResponse();

    /**
     * Enum value name.
     * 
     */
    @Import(name="name", required=true)
    private String name;

    /**
     * @return Enum value name.
     * 
     */
    public String name() {
        return this.name;
    }

    /**
     * Enum value number.
     * 
     */
    @Import(name="number", required=true)
    private Integer number;

    /**
     * @return Enum value number.
     * 
     */
    public Integer number() {
        return this.number;
    }

    /**
     * Protocol buffer options.
     * 
     */
    @Import(name="options", required=true)
    private List<OptionResponse> options;

    /**
     * @return Protocol buffer options.
     * 
     */
    public List<OptionResponse> options() {
        return this.options;
    }

    private EnumValueResponse() {}

    private EnumValueResponse(EnumValueResponse $) {
        this.name = $.name;
        this.number = $.number;
        this.options = $.options;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EnumValueResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EnumValueResponse $;

        public Builder() {
            $ = new EnumValueResponse();
        }

        public Builder(EnumValueResponse defaults) {
            $ = new EnumValueResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param name Enum value name.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            $.name = name;
            return this;
        }

        /**
         * @param number Enum value number.
         * 
         * @return builder
         * 
         */
        public Builder number(Integer number) {
            $.number = number;
            return this;
        }

        /**
         * @param options Protocol buffer options.
         * 
         * @return builder
         * 
         */
        public Builder options(List<OptionResponse> options) {
            $.options = options;
            return this;
        }

        /**
         * @param options Protocol buffer options.
         * 
         * @return builder
         * 
         */
        public Builder options(OptionResponse... options) {
            return options(List.of(options));
        }

        public EnumValueResponse build() {
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            $.number = Objects.requireNonNull($.number, "expected parameter 'number' to be non-null");
            $.options = Objects.requireNonNull($.options, "expected parameter 'options' to be non-null");
            return $;
        }
    }

}
