// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.domains.v1beta1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.domains.v1beta1.enums.ManagementSettingsTransferLockState;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Defines renewal, billing, and transfer settings for a `Registration`.
 * 
 */
public final class ManagementSettingsArgs extends com.pulumi.resources.ResourceArgs {

    public static final ManagementSettingsArgs Empty = new ManagementSettingsArgs();

    /**
     * Controls whether the domain can be transferred to another registrar.
     * 
     */
    @Import(name="transferLockState")
    private @Nullable Output<ManagementSettingsTransferLockState> transferLockState;

    /**
     * @return Controls whether the domain can be transferred to another registrar.
     * 
     */
    public Optional<Output<ManagementSettingsTransferLockState>> transferLockState() {
        return Optional.ofNullable(this.transferLockState);
    }

    private ManagementSettingsArgs() {}

    private ManagementSettingsArgs(ManagementSettingsArgs $) {
        this.transferLockState = $.transferLockState;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ManagementSettingsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ManagementSettingsArgs $;

        public Builder() {
            $ = new ManagementSettingsArgs();
        }

        public Builder(ManagementSettingsArgs defaults) {
            $ = new ManagementSettingsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param transferLockState Controls whether the domain can be transferred to another registrar.
         * 
         * @return builder
         * 
         */
        public Builder transferLockState(@Nullable Output<ManagementSettingsTransferLockState> transferLockState) {
            $.transferLockState = transferLockState;
            return this;
        }

        /**
         * @param transferLockState Controls whether the domain can be transferred to another registrar.
         * 
         * @return builder
         * 
         */
        public Builder transferLockState(ManagementSettingsTransferLockState transferLockState) {
            return transferLockState(Output.of(transferLockState));
        }

        public ManagementSettingsArgs build() {
            return $;
        }
    }

}
