// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.cloudbuild_v1alpha2;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.cloudbuild_v1alpha2.inputs.NetworkConfigArgs;
import com.pulumi.googlenative.cloudbuild_v1alpha2.inputs.WorkerConfigArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class WorkerPoolArgs extends com.pulumi.resources.ResourceArgs {

    public static final WorkerPoolArgs Empty = new WorkerPoolArgs();

    /**
     * Network configuration for the `WorkerPool`.
     * 
     */
    @Import(name="networkConfig")
    private @Nullable Output<NetworkConfigArgs> networkConfig;

    public Optional<Output<NetworkConfigArgs>> networkConfig() {
        return Optional.ofNullable(this.networkConfig);
    }

    @Import(name="project")
    private @Nullable Output<String> project;

    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * Immutable. The region where the `WorkerPool` runs. Only &#34;us-central1&#34; is currently supported. Note that `region` cannot be changed once the `WorkerPool` is created.
     * 
     */
    @Import(name="region", required=true)
    private Output<String> region;

    public Output<String> region() {
        return this.region;
    }

    /**
     * Worker configuration for the `WorkerPool`.
     * 
     */
    @Import(name="workerConfig")
    private @Nullable Output<WorkerConfigArgs> workerConfig;

    public Optional<Output<WorkerConfigArgs>> workerConfig() {
        return Optional.ofNullable(this.workerConfig);
    }

    @Import(name="workerPoolId", required=true)
    private Output<String> workerPoolId;

    public Output<String> workerPoolId() {
        return this.workerPoolId;
    }

    private WorkerPoolArgs() {}

    private WorkerPoolArgs(WorkerPoolArgs $) {
        this.networkConfig = $.networkConfig;
        this.project = $.project;
        this.region = $.region;
        this.workerConfig = $.workerConfig;
        this.workerPoolId = $.workerPoolId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WorkerPoolArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WorkerPoolArgs $;

        public Builder() {
            $ = new WorkerPoolArgs();
        }

        public Builder(WorkerPoolArgs defaults) {
            $ = new WorkerPoolArgs(Objects.requireNonNull(defaults));
        }

        public Builder networkConfig(@Nullable Output<NetworkConfigArgs> networkConfig) {
            $.networkConfig = networkConfig;
            return this;
        }

        public Builder networkConfig(NetworkConfigArgs networkConfig) {
            return networkConfig(Output.of(networkConfig));
        }

        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        public Builder project(String project) {
            return project(Output.of(project));
        }

        public Builder region(Output<String> region) {
            $.region = region;
            return this;
        }

        public Builder region(String region) {
            return region(Output.of(region));
        }

        public Builder workerConfig(@Nullable Output<WorkerConfigArgs> workerConfig) {
            $.workerConfig = workerConfig;
            return this;
        }

        public Builder workerConfig(WorkerConfigArgs workerConfig) {
            return workerConfig(Output.of(workerConfig));
        }

        public Builder workerPoolId(Output<String> workerPoolId) {
            $.workerPoolId = workerPoolId;
            return this;
        }

        public Builder workerPoolId(String workerPoolId) {
            return workerPoolId(Output.of(workerPoolId));
        }

        public WorkerPoolArgs build() {
            $.region = Objects.requireNonNull($.region, "expected parameter 'region' to be non-null");
            $.workerPoolId = Objects.requireNonNull($.workerPoolId, "expected parameter 'workerPoolId' to be non-null");
            return $;
        }
    }

}
