// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.datalabeling_v1beta1.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetFeedbackMessageArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetFeedbackMessageArgs Empty = new GetFeedbackMessageArgs();

    @Import(name="annotatedDatasetId", required=true)
      private final String annotatedDatasetId;

    public String annotatedDatasetId() {
        return this.annotatedDatasetId;
    }

    @Import(name="datasetId", required=true)
      private final String datasetId;

    public String datasetId() {
        return this.datasetId;
    }

    @Import(name="feedbackMessageId", required=true)
      private final String feedbackMessageId;

    public String feedbackMessageId() {
        return this.feedbackMessageId;
    }

    @Import(name="feedbackThreadId", required=true)
      private final String feedbackThreadId;

    public String feedbackThreadId() {
        return this.feedbackThreadId;
    }

    @Import(name="project")
      private final @Nullable String project;

    public Optional<String> project() {
        return this.project == null ? Optional.empty() : Optional.ofNullable(this.project);
    }

    public GetFeedbackMessageArgs(
        String annotatedDatasetId,
        String datasetId,
        String feedbackMessageId,
        String feedbackThreadId,
        @Nullable String project) {
        this.annotatedDatasetId = Objects.requireNonNull(annotatedDatasetId, "expected parameter 'annotatedDatasetId' to be non-null");
        this.datasetId = Objects.requireNonNull(datasetId, "expected parameter 'datasetId' to be non-null");
        this.feedbackMessageId = Objects.requireNonNull(feedbackMessageId, "expected parameter 'feedbackMessageId' to be non-null");
        this.feedbackThreadId = Objects.requireNonNull(feedbackThreadId, "expected parameter 'feedbackThreadId' to be non-null");
        this.project = project;
    }

    private GetFeedbackMessageArgs() {
        this.annotatedDatasetId = null;
        this.datasetId = null;
        this.feedbackMessageId = null;
        this.feedbackThreadId = null;
        this.project = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetFeedbackMessageArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String annotatedDatasetId;
        private String datasetId;
        private String feedbackMessageId;
        private String feedbackThreadId;
        private @Nullable String project;

        public Builder() {
    	      // Empty
        }

        public Builder(GetFeedbackMessageArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.annotatedDatasetId = defaults.annotatedDatasetId;
    	      this.datasetId = defaults.datasetId;
    	      this.feedbackMessageId = defaults.feedbackMessageId;
    	      this.feedbackThreadId = defaults.feedbackThreadId;
    	      this.project = defaults.project;
        }

        public Builder annotatedDatasetId(String annotatedDatasetId) {
            this.annotatedDatasetId = Objects.requireNonNull(annotatedDatasetId);
            return this;
        }
        public Builder datasetId(String datasetId) {
            this.datasetId = Objects.requireNonNull(datasetId);
            return this;
        }
        public Builder feedbackMessageId(String feedbackMessageId) {
            this.feedbackMessageId = Objects.requireNonNull(feedbackMessageId);
            return this;
        }
        public Builder feedbackThreadId(String feedbackThreadId) {
            this.feedbackThreadId = Objects.requireNonNull(feedbackThreadId);
            return this;
        }
        public Builder project(@Nullable String project) {
            this.project = project;
            return this;
        }        public GetFeedbackMessageArgs build() {
            return new GetFeedbackMessageArgs(annotatedDatasetId, datasetId, feedbackMessageId, feedbackThreadId, project);
        }
    }
}
