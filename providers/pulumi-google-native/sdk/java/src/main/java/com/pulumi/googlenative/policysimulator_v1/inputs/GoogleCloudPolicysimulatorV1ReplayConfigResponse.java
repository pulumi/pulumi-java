// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.policysimulator_v1.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;


/**
 * The configuration used for a Replay.
 * 
 */
public final class GoogleCloudPolicysimulatorV1ReplayConfigResponse extends com.pulumi.resources.InvokeArgs {

    public static final GoogleCloudPolicysimulatorV1ReplayConfigResponse Empty = new GoogleCloudPolicysimulatorV1ReplayConfigResponse();

    /**
     * The logs to use as input for the Replay.
     * 
     */
    @Import(name="logSource", required=true)
    private String logSource;

    public String logSource() {
        return this.logSource;
    }

    /**
     * A mapping of the resources that you want to simulate policies for and the policies that you want to simulate. Keys are the full resource names for the resources. For example, `//cloudresourcemanager.googleapis.com/projects/my-project`. For examples of full resource names for Google Cloud services, see https://cloud.google.com/iam/help/troubleshooter/full-resource-names. Values are Policy objects representing the policies that you want to simulate. Replays automatically take into account any IAM policies inherited through the resource hierarchy, and any policies set on descendant resources. You do not need to include these policies in the policy overlay.
     * 
     */
    @Import(name="policyOverlay", required=true)
    private Map<String,String> policyOverlay;

    public Map<String,String> policyOverlay() {
        return this.policyOverlay;
    }

    private GoogleCloudPolicysimulatorV1ReplayConfigResponse() {}

    private GoogleCloudPolicysimulatorV1ReplayConfigResponse(GoogleCloudPolicysimulatorV1ReplayConfigResponse $) {
        this.logSource = $.logSource;
        this.policyOverlay = $.policyOverlay;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GoogleCloudPolicysimulatorV1ReplayConfigResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GoogleCloudPolicysimulatorV1ReplayConfigResponse $;

        public Builder() {
            $ = new GoogleCloudPolicysimulatorV1ReplayConfigResponse();
        }

        public Builder(GoogleCloudPolicysimulatorV1ReplayConfigResponse defaults) {
            $ = new GoogleCloudPolicysimulatorV1ReplayConfigResponse(Objects.requireNonNull(defaults));
        }

        public Builder logSource(String logSource) {
            $.logSource = logSource;
            return this;
        }

        public Builder policyOverlay(Map<String,String> policyOverlay) {
            $.policyOverlay = policyOverlay;
            return this;
        }

        public GoogleCloudPolicysimulatorV1ReplayConfigResponse build() {
            $.logSource = Objects.requireNonNull($.logSource, "expected parameter 'logSource' to be non-null");
            $.policyOverlay = Objects.requireNonNull($.policyOverlay, "expected parameter 'policyOverlay' to be non-null");
            return $;
        }
    }

}
