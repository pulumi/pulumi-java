// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.firebase.v1beta1.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetIosAppResult {
    /**
     * @return The key_id of the GCP ApiKey associated with this App. If set must have no restrictions, or only have restrictions that are valid for the associated Firebase App. Cannot be set in create requests, instead an existing valid API Key will be chosen, or if no valid API Keys exist, one will be provisioned for you. Cannot be set to an empty value in update requests.
     * 
     */
    private final String apiKeyId;
    /**
     * @return Immutable. The globally unique, Firebase-assigned identifier for the `IosApp`. This identifier should be treated as an opaque token, as the data format is not specified.
     * 
     */
    private final String appId;
    /**
     * @return The automatically generated Apple ID assigned to the iOS app by Apple in the iOS App Store.
     * 
     */
    private final String appStoreId;
    /**
     * @return Immutable. The canonical bundle ID of the iOS app as it would appear in the iOS AppStore.
     * 
     */
    private final String bundleId;
    /**
     * @return The user-assigned display name for the `IosApp`.
     * 
     */
    private final String displayName;
    /**
     * @return The resource name of the IosApp, in the format: projects/PROJECT_IDENTIFIER /iosApps/APP_ID * PROJECT_IDENTIFIER: the parent Project&#39;s [`ProjectNumber`](../projects#FirebaseProject.FIELDS.project_number) ***(recommended)*** or its [`ProjectId`](../projects#FirebaseProject.FIELDS.project_id). Learn more about using project identifiers in Google&#39;s [AIP 2510 standard](https://google.aip.dev/cloud/2510). Note that the value for PROJECT_IDENTIFIER in any response body will be the `ProjectId`. * APP_ID: the globally unique, Firebase-assigned identifier for the App (see [`appId`](../projects.iosApps#IosApp.FIELDS.app_id)).
     * 
     */
    private final String name;
    /**
     * @return Immutable. A user-assigned unique identifier of the parent FirebaseProject for the `IosApp`.
     * 
     */
    private final String project;
    /**
     * @return The lifecycle state of the App.
     * 
     */
    private final String state;
    /**
     * @return The Apple Developer Team ID associated with the App in the App Store.
     * 
     */
    private final String teamId;

    @CustomType.Constructor
    private GetIosAppResult(
        @CustomType.Parameter("apiKeyId") String apiKeyId,
        @CustomType.Parameter("appId") String appId,
        @CustomType.Parameter("appStoreId") String appStoreId,
        @CustomType.Parameter("bundleId") String bundleId,
        @CustomType.Parameter("displayName") String displayName,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("project") String project,
        @CustomType.Parameter("state") String state,
        @CustomType.Parameter("teamId") String teamId) {
        this.apiKeyId = apiKeyId;
        this.appId = appId;
        this.appStoreId = appStoreId;
        this.bundleId = bundleId;
        this.displayName = displayName;
        this.name = name;
        this.project = project;
        this.state = state;
        this.teamId = teamId;
    }

    /**
     * @return The key_id of the GCP ApiKey associated with this App. If set must have no restrictions, or only have restrictions that are valid for the associated Firebase App. Cannot be set in create requests, instead an existing valid API Key will be chosen, or if no valid API Keys exist, one will be provisioned for you. Cannot be set to an empty value in update requests.
     * 
     */
    public String apiKeyId() {
        return this.apiKeyId;
    }
    /**
     * @return Immutable. The globally unique, Firebase-assigned identifier for the `IosApp`. This identifier should be treated as an opaque token, as the data format is not specified.
     * 
     */
    public String appId() {
        return this.appId;
    }
    /**
     * @return The automatically generated Apple ID assigned to the iOS app by Apple in the iOS App Store.
     * 
     */
    public String appStoreId() {
        return this.appStoreId;
    }
    /**
     * @return Immutable. The canonical bundle ID of the iOS app as it would appear in the iOS AppStore.
     * 
     */
    public String bundleId() {
        return this.bundleId;
    }
    /**
     * @return The user-assigned display name for the `IosApp`.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return The resource name of the IosApp, in the format: projects/PROJECT_IDENTIFIER /iosApps/APP_ID * PROJECT_IDENTIFIER: the parent Project&#39;s [`ProjectNumber`](../projects#FirebaseProject.FIELDS.project_number) ***(recommended)*** or its [`ProjectId`](../projects#FirebaseProject.FIELDS.project_id). Learn more about using project identifiers in Google&#39;s [AIP 2510 standard](https://google.aip.dev/cloud/2510). Note that the value for PROJECT_IDENTIFIER in any response body will be the `ProjectId`. * APP_ID: the globally unique, Firebase-assigned identifier for the App (see [`appId`](../projects.iosApps#IosApp.FIELDS.app_id)).
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Immutable. A user-assigned unique identifier of the parent FirebaseProject for the `IosApp`.
     * 
     */
    public String project() {
        return this.project;
    }
    /**
     * @return The lifecycle state of the App.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return The Apple Developer Team ID associated with the App in the App Store.
     * 
     */
    public String teamId() {
        return this.teamId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetIosAppResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String apiKeyId;
        private String appId;
        private String appStoreId;
        private String bundleId;
        private String displayName;
        private String name;
        private String project;
        private String state;
        private String teamId;

        public Builder() {
    	      // Empty
        }

        public Builder(GetIosAppResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.apiKeyId = defaults.apiKeyId;
    	      this.appId = defaults.appId;
    	      this.appStoreId = defaults.appStoreId;
    	      this.bundleId = defaults.bundleId;
    	      this.displayName = defaults.displayName;
    	      this.name = defaults.name;
    	      this.project = defaults.project;
    	      this.state = defaults.state;
    	      this.teamId = defaults.teamId;
        }

        public Builder apiKeyId(String apiKeyId) {
            this.apiKeyId = Objects.requireNonNull(apiKeyId);
            return this;
        }
        public Builder appId(String appId) {
            this.appId = Objects.requireNonNull(appId);
            return this;
        }
        public Builder appStoreId(String appStoreId) {
            this.appStoreId = Objects.requireNonNull(appStoreId);
            return this;
        }
        public Builder bundleId(String bundleId) {
            this.bundleId = Objects.requireNonNull(bundleId);
            return this;
        }
        public Builder displayName(String displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder project(String project) {
            this.project = Objects.requireNonNull(project);
            return this;
        }
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        public Builder teamId(String teamId) {
            this.teamId = Objects.requireNonNull(teamId);
            return this;
        }        public GetIosAppResult build() {
            return new GetIosAppResult(apiKeyId, appId, appStoreId, bundleId, displayName, name, project, state, teamId);
        }
    }
}
