// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.logging.v2.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GetFolderSinkArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetFolderSinkArgs Empty = new GetFolderSinkArgs();

    @Import(name="folderId", required=true)
    private Output<String> folderId;

    public Output<String> folderId() {
        return this.folderId;
    }

    @Import(name="sinkId", required=true)
    private Output<String> sinkId;

    public Output<String> sinkId() {
        return this.sinkId;
    }

    private GetFolderSinkArgs() {}

    private GetFolderSinkArgs(GetFolderSinkArgs $) {
        this.folderId = $.folderId;
        this.sinkId = $.sinkId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetFolderSinkArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetFolderSinkArgs $;

        public Builder() {
            $ = new GetFolderSinkArgs();
        }

        public Builder(GetFolderSinkArgs defaults) {
            $ = new GetFolderSinkArgs(Objects.requireNonNull(defaults));
        }

        public Builder folderId(Output<String> folderId) {
            $.folderId = folderId;
            return this;
        }

        public Builder folderId(String folderId) {
            return folderId(Output.of(folderId));
        }

        public Builder sinkId(Output<String> sinkId) {
            $.sinkId = sinkId;
            return this;
        }

        public Builder sinkId(String sinkId) {
            return sinkId(Output.of(sinkId));
        }

        public GetFolderSinkArgs build() {
            $.folderId = Objects.requireNonNull($.folderId, "expected parameter 'folderId' to be non-null");
            $.sinkId = Objects.requireNonNull($.sinkId, "expected parameter 'sinkId' to be non-null");
            return $;
        }
    }

}
