// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.datacatalog.v1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.datacatalog.v1.inputs.GoogleCloudDatacatalogV1PhysicalSchemaArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Common Dataplex fields.
 * 
 */
public final class GoogleCloudDatacatalogV1DataplexSpecArgs extends com.pulumi.resources.ResourceArgs {

    public static final GoogleCloudDatacatalogV1DataplexSpecArgs Empty = new GoogleCloudDatacatalogV1DataplexSpecArgs();

    /**
     * Fully qualified resource name of an asset in Dataplex, to which the underlying data source (Cloud Storage bucket or BigQuery dataset) of the entity is attached.
     * 
     */
    @Import(name="asset")
    private @Nullable Output<String> asset;

    /**
     * @return Fully qualified resource name of an asset in Dataplex, to which the underlying data source (Cloud Storage bucket or BigQuery dataset) of the entity is attached.
     * 
     */
    public Optional<Output<String>> asset() {
        return Optional.ofNullable(this.asset);
    }

    /**
     * Compression format of the data, e.g., zip, gzip etc.
     * 
     */
    @Import(name="compressionFormat")
    private @Nullable Output<String> compressionFormat;

    /**
     * @return Compression format of the data, e.g., zip, gzip etc.
     * 
     */
    public Optional<Output<String>> compressionFormat() {
        return Optional.ofNullable(this.compressionFormat);
    }

    /**
     * Format of the data.
     * 
     */
    @Import(name="dataFormat")
    private @Nullable Output<GoogleCloudDatacatalogV1PhysicalSchemaArgs> dataFormat;

    /**
     * @return Format of the data.
     * 
     */
    public Optional<Output<GoogleCloudDatacatalogV1PhysicalSchemaArgs>> dataFormat() {
        return Optional.ofNullable(this.dataFormat);
    }

    /**
     * Project ID of the underlying Cloud Storage or BigQuery data. Note that this may not be the same project as the correspondingly Dataplex lake / zone / asset.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return Project ID of the underlying Cloud Storage or BigQuery data. Note that this may not be the same project as the correspondingly Dataplex lake / zone / asset.
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    private GoogleCloudDatacatalogV1DataplexSpecArgs() {}

    private GoogleCloudDatacatalogV1DataplexSpecArgs(GoogleCloudDatacatalogV1DataplexSpecArgs $) {
        this.asset = $.asset;
        this.compressionFormat = $.compressionFormat;
        this.dataFormat = $.dataFormat;
        this.project = $.project;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GoogleCloudDatacatalogV1DataplexSpecArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GoogleCloudDatacatalogV1DataplexSpecArgs $;

        public Builder() {
            $ = new GoogleCloudDatacatalogV1DataplexSpecArgs();
        }

        public Builder(GoogleCloudDatacatalogV1DataplexSpecArgs defaults) {
            $ = new GoogleCloudDatacatalogV1DataplexSpecArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param asset Fully qualified resource name of an asset in Dataplex, to which the underlying data source (Cloud Storage bucket or BigQuery dataset) of the entity is attached.
         * 
         * @return builder
         * 
         */
        public Builder asset(@Nullable Output<String> asset) {
            $.asset = asset;
            return this;
        }

        /**
         * @param asset Fully qualified resource name of an asset in Dataplex, to which the underlying data source (Cloud Storage bucket or BigQuery dataset) of the entity is attached.
         * 
         * @return builder
         * 
         */
        public Builder asset(String asset) {
            return asset(Output.of(asset));
        }

        /**
         * @param compressionFormat Compression format of the data, e.g., zip, gzip etc.
         * 
         * @return builder
         * 
         */
        public Builder compressionFormat(@Nullable Output<String> compressionFormat) {
            $.compressionFormat = compressionFormat;
            return this;
        }

        /**
         * @param compressionFormat Compression format of the data, e.g., zip, gzip etc.
         * 
         * @return builder
         * 
         */
        public Builder compressionFormat(String compressionFormat) {
            return compressionFormat(Output.of(compressionFormat));
        }

        /**
         * @param dataFormat Format of the data.
         * 
         * @return builder
         * 
         */
        public Builder dataFormat(@Nullable Output<GoogleCloudDatacatalogV1PhysicalSchemaArgs> dataFormat) {
            $.dataFormat = dataFormat;
            return this;
        }

        /**
         * @param dataFormat Format of the data.
         * 
         * @return builder
         * 
         */
        public Builder dataFormat(GoogleCloudDatacatalogV1PhysicalSchemaArgs dataFormat) {
            return dataFormat(Output.of(dataFormat));
        }

        /**
         * @param project Project ID of the underlying Cloud Storage or BigQuery data. Note that this may not be the same project as the correspondingly Dataplex lake / zone / asset.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project Project ID of the underlying Cloud Storage or BigQuery data. Note that this may not be the same project as the correspondingly Dataplex lake / zone / asset.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        public GoogleCloudDatacatalogV1DataplexSpecArgs build() {
            return $;
        }
    }

}
