// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.orgpolicy.v2.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.orgpolicy.v2.inputs.GoogleCloudOrgpolicyV2PolicySpecArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Similar to PolicySpec but with an extra &#39;launch&#39; field for launch reference. The PolicySpec here is specific for dry-run/darklaunch.
 * 
 */
public final class GoogleCloudOrgpolicyV2AlternatePolicySpecArgs extends com.pulumi.resources.ResourceArgs {

    public static final GoogleCloudOrgpolicyV2AlternatePolicySpecArgs Empty = new GoogleCloudOrgpolicyV2AlternatePolicySpecArgs();

    /**
     * Reference to the launch that will be used while audit logging and to control the launch. Should be set only in the alternate policy.
     * 
     */
    @Import(name="launch")
    private @Nullable Output<String> launch;

    /**
     * @return Reference to the launch that will be used while audit logging and to control the launch. Should be set only in the alternate policy.
     * 
     */
    public Optional<Output<String>> launch() {
        return Optional.ofNullable(this.launch);
    }

    /**
     * Specify `Constraint` for configurations of Cloud Platform resources.
     * 
     */
    @Import(name="spec")
    private @Nullable Output<GoogleCloudOrgpolicyV2PolicySpecArgs> spec;

    /**
     * @return Specify `Constraint` for configurations of Cloud Platform resources.
     * 
     */
    public Optional<Output<GoogleCloudOrgpolicyV2PolicySpecArgs>> spec() {
        return Optional.ofNullable(this.spec);
    }

    private GoogleCloudOrgpolicyV2AlternatePolicySpecArgs() {}

    private GoogleCloudOrgpolicyV2AlternatePolicySpecArgs(GoogleCloudOrgpolicyV2AlternatePolicySpecArgs $) {
        this.launch = $.launch;
        this.spec = $.spec;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GoogleCloudOrgpolicyV2AlternatePolicySpecArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GoogleCloudOrgpolicyV2AlternatePolicySpecArgs $;

        public Builder() {
            $ = new GoogleCloudOrgpolicyV2AlternatePolicySpecArgs();
        }

        public Builder(GoogleCloudOrgpolicyV2AlternatePolicySpecArgs defaults) {
            $ = new GoogleCloudOrgpolicyV2AlternatePolicySpecArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param launch Reference to the launch that will be used while audit logging and to control the launch. Should be set only in the alternate policy.
         * 
         * @return builder
         * 
         */
        public Builder launch(@Nullable Output<String> launch) {
            $.launch = launch;
            return this;
        }

        /**
         * @param launch Reference to the launch that will be used while audit logging and to control the launch. Should be set only in the alternate policy.
         * 
         * @return builder
         * 
         */
        public Builder launch(String launch) {
            return launch(Output.of(launch));
        }

        /**
         * @param spec Specify `Constraint` for configurations of Cloud Platform resources.
         * 
         * @return builder
         * 
         */
        public Builder spec(@Nullable Output<GoogleCloudOrgpolicyV2PolicySpecArgs> spec) {
            $.spec = spec;
            return this;
        }

        /**
         * @param spec Specify `Constraint` for configurations of Cloud Platform resources.
         * 
         * @return builder
         * 
         */
        public Builder spec(GoogleCloudOrgpolicyV2PolicySpecArgs spec) {
            return spec(Output.of(spec));
        }

        public GoogleCloudOrgpolicyV2AlternatePolicySpecArgs build() {
            return $;
        }
    }

}
