// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.containeranalysis_v1alpha1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import com.pulumi.googlenative.containeranalysis_v1alpha1.inputs.MaterialArgs;
import com.pulumi.googlenative.containeranalysis_v1alpha1.inputs.SlsaBuilderArgs;
import com.pulumi.googlenative.containeranalysis_v1alpha1.inputs.SlsaMetadataArgs;
import com.pulumi.googlenative.containeranalysis_v1alpha1.inputs.SlsaRecipeArgs;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * SlsaProvenance is the slsa provenance as defined by the slsa spec.
 * 
 */
public final class SlsaProvenanceArgs extends com.pulumi.resources.ResourceArgs {

    public static final SlsaProvenanceArgs Empty = new SlsaProvenanceArgs();

    /**
     * builder is the builder of this provenance
     * 
     */
    @Import(name="builder")
      private final @Nullable Output<SlsaBuilderArgs> builder;

    public Output<SlsaBuilderArgs> builder_() {
        return this.builder == null ? Codegen.empty() : this.builder;
    }

    /**
     * The collection of artifacts that influenced the build including sources, dependencies, build tools, base images, and so on. This is considered to be incomplete unless metadata.completeness.materials is true. Unset or null is equivalent to empty.
     * 
     */
    @Import(name="materials")
      private final @Nullable Output<List<MaterialArgs>> materials;

    public Output<List<MaterialArgs>> materials() {
        return this.materials == null ? Codegen.empty() : this.materials;
    }

    /**
     * metadata is the metadata of the provenance
     * 
     */
    @Import(name="metadata")
      private final @Nullable Output<SlsaMetadataArgs> metadata;

    public Output<SlsaMetadataArgs> metadata() {
        return this.metadata == null ? Codegen.empty() : this.metadata;
    }

    /**
     * Identifies the configuration used for the build. When combined with materials, this SHOULD fully describe the build, such that re-running this recipe results in bit-for-bit identical output (if the build is reproducible).
     * 
     */
    @Import(name="recipe")
      private final @Nullable Output<SlsaRecipeArgs> recipe;

    public Output<SlsaRecipeArgs> recipe() {
        return this.recipe == null ? Codegen.empty() : this.recipe;
    }

    public SlsaProvenanceArgs(
        @Nullable Output<SlsaBuilderArgs> builder,
        @Nullable Output<List<MaterialArgs>> materials,
        @Nullable Output<SlsaMetadataArgs> metadata,
        @Nullable Output<SlsaRecipeArgs> recipe) {
        this.builder = builder;
        this.materials = materials;
        this.metadata = metadata;
        this.recipe = recipe;
    }

    private SlsaProvenanceArgs() {
        this.builder = Codegen.empty();
        this.materials = Codegen.empty();
        this.metadata = Codegen.empty();
        this.recipe = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SlsaProvenanceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<SlsaBuilderArgs> builder;
        private @Nullable Output<List<MaterialArgs>> materials;
        private @Nullable Output<SlsaMetadataArgs> metadata;
        private @Nullable Output<SlsaRecipeArgs> recipe;

        public Builder() {
    	      // Empty
        }

        public Builder(SlsaProvenanceArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.builder = defaults.builder;
    	      this.materials = defaults.materials;
    	      this.metadata = defaults.metadata;
    	      this.recipe = defaults.recipe;
        }

        public Builder builder_(@Nullable Output<SlsaBuilderArgs> builder) {
            this.builder = builder;
            return this;
        }
        public Builder builder_(@Nullable SlsaBuilderArgs builder) {
            this.builder = Codegen.ofNullable(builder);
            return this;
        }
        public Builder materials(@Nullable Output<List<MaterialArgs>> materials) {
            this.materials = materials;
            return this;
        }
        public Builder materials(@Nullable List<MaterialArgs> materials) {
            this.materials = Codegen.ofNullable(materials);
            return this;
        }
        public Builder materials(MaterialArgs... materials) {
            return materials(List.of(materials));
        }
        public Builder metadata(@Nullable Output<SlsaMetadataArgs> metadata) {
            this.metadata = metadata;
            return this;
        }
        public Builder metadata(@Nullable SlsaMetadataArgs metadata) {
            this.metadata = Codegen.ofNullable(metadata);
            return this;
        }
        public Builder recipe(@Nullable Output<SlsaRecipeArgs> recipe) {
            this.recipe = recipe;
            return this;
        }
        public Builder recipe(@Nullable SlsaRecipeArgs recipe) {
            this.recipe = Codegen.ofNullable(recipe);
            return this;
        }        public SlsaProvenanceArgs build() {
            return new SlsaProvenanceArgs(builder, materials, metadata, recipe);
        }
    }
}
