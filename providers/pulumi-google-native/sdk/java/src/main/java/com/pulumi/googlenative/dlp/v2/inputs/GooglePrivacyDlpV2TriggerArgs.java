// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.dlp.v2.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.dlp.v2.inputs.GooglePrivacyDlpV2ManualArgs;
import com.pulumi.googlenative.dlp.v2.inputs.GooglePrivacyDlpV2ScheduleArgs;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * What event needs to occur for a new job to be started.
 * 
 */
public final class GooglePrivacyDlpV2TriggerArgs extends com.pulumi.resources.ResourceArgs {

    public static final GooglePrivacyDlpV2TriggerArgs Empty = new GooglePrivacyDlpV2TriggerArgs();

    /**
     * For use with hybrid jobs. Jobs must be manually created and finished.
     * 
     */
    @Import(name="manual")
    private @Nullable Output<GooglePrivacyDlpV2ManualArgs> manual;

    /**
     * @return For use with hybrid jobs. Jobs must be manually created and finished.
     * 
     */
    public Optional<Output<GooglePrivacyDlpV2ManualArgs>> manual() {
        return Optional.ofNullable(this.manual);
    }

    /**
     * Create a job on a repeating basis based on the elapse of time.
     * 
     */
    @Import(name="schedule")
    private @Nullable Output<GooglePrivacyDlpV2ScheduleArgs> schedule;

    /**
     * @return Create a job on a repeating basis based on the elapse of time.
     * 
     */
    public Optional<Output<GooglePrivacyDlpV2ScheduleArgs>> schedule() {
        return Optional.ofNullable(this.schedule);
    }

    private GooglePrivacyDlpV2TriggerArgs() {}

    private GooglePrivacyDlpV2TriggerArgs(GooglePrivacyDlpV2TriggerArgs $) {
        this.manual = $.manual;
        this.schedule = $.schedule;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GooglePrivacyDlpV2TriggerArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GooglePrivacyDlpV2TriggerArgs $;

        public Builder() {
            $ = new GooglePrivacyDlpV2TriggerArgs();
        }

        public Builder(GooglePrivacyDlpV2TriggerArgs defaults) {
            $ = new GooglePrivacyDlpV2TriggerArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param manual For use with hybrid jobs. Jobs must be manually created and finished.
         * 
         * @return builder
         * 
         */
        public Builder manual(@Nullable Output<GooglePrivacyDlpV2ManualArgs> manual) {
            $.manual = manual;
            return this;
        }

        /**
         * @param manual For use with hybrid jobs. Jobs must be manually created and finished.
         * 
         * @return builder
         * 
         */
        public Builder manual(GooglePrivacyDlpV2ManualArgs manual) {
            return manual(Output.of(manual));
        }

        /**
         * @param schedule Create a job on a repeating basis based on the elapse of time.
         * 
         * @return builder
         * 
         */
        public Builder schedule(@Nullable Output<GooglePrivacyDlpV2ScheduleArgs> schedule) {
            $.schedule = schedule;
            return this;
        }

        /**
         * @param schedule Create a job on a repeating basis based on the elapse of time.
         * 
         * @return builder
         * 
         */
        public Builder schedule(GooglePrivacyDlpV2ScheduleArgs schedule) {
            return schedule(Output.of(schedule));
        }

        public GooglePrivacyDlpV2TriggerArgs build() {
            return $;
        }
    }

}
