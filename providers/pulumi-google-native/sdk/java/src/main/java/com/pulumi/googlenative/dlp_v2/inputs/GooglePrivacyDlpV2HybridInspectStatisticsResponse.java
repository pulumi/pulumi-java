// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.dlp_v2.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * Statistics related to processing hybrid inspect requests.
 * 
 */
public final class GooglePrivacyDlpV2HybridInspectStatisticsResponse extends com.pulumi.resources.InvokeArgs {

    public static final GooglePrivacyDlpV2HybridInspectStatisticsResponse Empty = new GooglePrivacyDlpV2HybridInspectStatisticsResponse();

    /**
     * The number of hybrid inspection requests aborted because the job ran out of quota or was ended before they could be processed.
     * 
     */
    @Import(name="abortedCount", required=true)
    private String abortedCount;

    /**
     * @return The number of hybrid inspection requests aborted because the job ran out of quota or was ended before they could be processed.
     * 
     */
    public String abortedCount() {
        return this.abortedCount;
    }

    /**
     * The number of hybrid requests currently being processed. Only populated when called via method `getDlpJob`. A burst of traffic may cause hybrid inspect requests to be enqueued. Processing will take place as quickly as possible, but resource limitations may impact how long a request is enqueued for.
     * 
     */
    @Import(name="pendingCount", required=true)
    private String pendingCount;

    /**
     * @return The number of hybrid requests currently being processed. Only populated when called via method `getDlpJob`. A burst of traffic may cause hybrid inspect requests to be enqueued. Processing will take place as quickly as possible, but resource limitations may impact how long a request is enqueued for.
     * 
     */
    public String pendingCount() {
        return this.pendingCount;
    }

    /**
     * The number of hybrid inspection requests processed within this job.
     * 
     */
    @Import(name="processedCount", required=true)
    private String processedCount;

    /**
     * @return The number of hybrid inspection requests processed within this job.
     * 
     */
    public String processedCount() {
        return this.processedCount;
    }

    private GooglePrivacyDlpV2HybridInspectStatisticsResponse() {}

    private GooglePrivacyDlpV2HybridInspectStatisticsResponse(GooglePrivacyDlpV2HybridInspectStatisticsResponse $) {
        this.abortedCount = $.abortedCount;
        this.pendingCount = $.pendingCount;
        this.processedCount = $.processedCount;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GooglePrivacyDlpV2HybridInspectStatisticsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GooglePrivacyDlpV2HybridInspectStatisticsResponse $;

        public Builder() {
            $ = new GooglePrivacyDlpV2HybridInspectStatisticsResponse();
        }

        public Builder(GooglePrivacyDlpV2HybridInspectStatisticsResponse defaults) {
            $ = new GooglePrivacyDlpV2HybridInspectStatisticsResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param abortedCount The number of hybrid inspection requests aborted because the job ran out of quota or was ended before they could be processed.
         * 
         * @return builder
         * 
         */
        public Builder abortedCount(String abortedCount) {
            $.abortedCount = abortedCount;
            return this;
        }

        /**
         * @param pendingCount The number of hybrid requests currently being processed. Only populated when called via method `getDlpJob`. A burst of traffic may cause hybrid inspect requests to be enqueued. Processing will take place as quickly as possible, but resource limitations may impact how long a request is enqueued for.
         * 
         * @return builder
         * 
         */
        public Builder pendingCount(String pendingCount) {
            $.pendingCount = pendingCount;
            return this;
        }

        /**
         * @param processedCount The number of hybrid inspection requests processed within this job.
         * 
         * @return builder
         * 
         */
        public Builder processedCount(String processedCount) {
            $.processedCount = processedCount;
            return this;
        }

        public GooglePrivacyDlpV2HybridInspectStatisticsResponse build() {
            $.abortedCount = Objects.requireNonNull($.abortedCount, "expected parameter 'abortedCount' to be non-null");
            $.pendingCount = Objects.requireNonNull($.pendingCount, "expected parameter 'pendingCount' to be non-null");
            $.processedCount = Objects.requireNonNull($.processedCount, "expected parameter 'processedCount' to be non-null");
            return $;
        }
    }

}
