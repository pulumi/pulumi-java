// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.containeranalysis.v1beta1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.containeranalysis.v1beta1.inputs.VersionArgs;
import java.lang.String;
import java.util.Objects;


/**
 * The location of the vulnerability.
 * 
 */
public final class VulnerabilityLocationArgs extends com.pulumi.resources.ResourceArgs {

    public static final VulnerabilityLocationArgs Empty = new VulnerabilityLocationArgs();

    /**
     * The CPE URI in [cpe format](https://cpe.mitre.org/specification/) format. Examples include distro or storage location for vulnerable jar.
     * 
     */
    @Import(name="cpeUri", required=true)
    private Output<String> cpeUri;

    /**
     * @return The CPE URI in [cpe format](https://cpe.mitre.org/specification/) format. Examples include distro or storage location for vulnerable jar.
     * 
     */
    public Output<String> cpeUri() {
        return this.cpeUri;
    }

    /**
     * The package being described.
     * 
     */
    @Import(name="package", required=true)
    private Output<String> package_;

    /**
     * @return The package being described.
     * 
     */
    public Output<String> package_() {
        return this.package_;
    }

    /**
     * The version of the package being described.
     * 
     */
    @Import(name="version", required=true)
    private Output<VersionArgs> version;

    /**
     * @return The version of the package being described.
     * 
     */
    public Output<VersionArgs> version() {
        return this.version;
    }

    private VulnerabilityLocationArgs() {}

    private VulnerabilityLocationArgs(VulnerabilityLocationArgs $) {
        this.cpeUri = $.cpeUri;
        this.package_ = $.package_;
        this.version = $.version;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VulnerabilityLocationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VulnerabilityLocationArgs $;

        public Builder() {
            $ = new VulnerabilityLocationArgs();
        }

        public Builder(VulnerabilityLocationArgs defaults) {
            $ = new VulnerabilityLocationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param cpeUri The CPE URI in [cpe format](https://cpe.mitre.org/specification/) format. Examples include distro or storage location for vulnerable jar.
         * 
         * @return builder
         * 
         */
        public Builder cpeUri(Output<String> cpeUri) {
            $.cpeUri = cpeUri;
            return this;
        }

        /**
         * @param cpeUri The CPE URI in [cpe format](https://cpe.mitre.org/specification/) format. Examples include distro or storage location for vulnerable jar.
         * 
         * @return builder
         * 
         */
        public Builder cpeUri(String cpeUri) {
            return cpeUri(Output.of(cpeUri));
        }

        /**
         * @param package_ The package being described.
         * 
         * @return builder
         * 
         */
        public Builder package_(Output<String> package_) {
            $.package_ = package_;
            return this;
        }

        /**
         * @param package_ The package being described.
         * 
         * @return builder
         * 
         */
        public Builder package_(String package_) {
            return package_(Output.of(package_));
        }

        /**
         * @param version The version of the package being described.
         * 
         * @return builder
         * 
         */
        public Builder version(Output<VersionArgs> version) {
            $.version = version;
            return this;
        }

        /**
         * @param version The version of the package being described.
         * 
         * @return builder
         * 
         */
        public Builder version(VersionArgs version) {
            return version(Output.of(version));
        }

        public VulnerabilityLocationArgs build() {
            $.cpeUri = Objects.requireNonNull($.cpeUri, "expected parameter 'cpeUri' to be non-null");
            $.package_ = Objects.requireNonNull($.package_, "expected parameter 'package' to be non-null");
            $.version = Objects.requireNonNull($.version, "expected parameter 'version' to be non-null");
            return $;
        }
    }

}
