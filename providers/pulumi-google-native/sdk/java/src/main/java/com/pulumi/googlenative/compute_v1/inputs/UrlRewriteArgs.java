// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.compute_v1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * The spec for modifying the path before sending the request to the matched backend service.
 * 
 */
public final class UrlRewriteArgs extends com.pulumi.resources.ResourceArgs {

    public static final UrlRewriteArgs Empty = new UrlRewriteArgs();

    /**
     * Before forwarding the request to the selected service, the request's host header is replaced with contents of hostRewrite. The value must be from 1 to 255 characters.
     * 
     */
    @Import(name="hostRewrite")
      private final @Nullable Output<String> hostRewrite;

    public Output<String> hostRewrite() {
        return this.hostRewrite == null ? Codegen.empty() : this.hostRewrite;
    }

    /**
     * Before forwarding the request to the selected backend service, the matching portion of the request's path is replaced by pathPrefixRewrite. The value must be from 1 to 1024 characters.
     * 
     */
    @Import(name="pathPrefixRewrite")
      private final @Nullable Output<String> pathPrefixRewrite;

    public Output<String> pathPrefixRewrite() {
        return this.pathPrefixRewrite == null ? Codegen.empty() : this.pathPrefixRewrite;
    }

    public UrlRewriteArgs(
        @Nullable Output<String> hostRewrite,
        @Nullable Output<String> pathPrefixRewrite) {
        this.hostRewrite = hostRewrite;
        this.pathPrefixRewrite = pathPrefixRewrite;
    }

    private UrlRewriteArgs() {
        this.hostRewrite = Codegen.empty();
        this.pathPrefixRewrite = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(UrlRewriteArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> hostRewrite;
        private @Nullable Output<String> pathPrefixRewrite;

        public Builder() {
    	      // Empty
        }

        public Builder(UrlRewriteArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.hostRewrite = defaults.hostRewrite;
    	      this.pathPrefixRewrite = defaults.pathPrefixRewrite;
        }

        public Builder hostRewrite(@Nullable Output<String> hostRewrite) {
            this.hostRewrite = hostRewrite;
            return this;
        }
        public Builder hostRewrite(@Nullable String hostRewrite) {
            this.hostRewrite = Codegen.ofNullable(hostRewrite);
            return this;
        }
        public Builder pathPrefixRewrite(@Nullable Output<String> pathPrefixRewrite) {
            this.pathPrefixRewrite = pathPrefixRewrite;
            return this;
        }
        public Builder pathPrefixRewrite(@Nullable String pathPrefixRewrite) {
            this.pathPrefixRewrite = Codegen.ofNullable(pathPrefixRewrite);
            return this;
        }        public UrlRewriteArgs build() {
            return new UrlRewriteArgs(hostRewrite, pathPrefixRewrite);
        }
    }
}
