// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.privateca_v1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * IssuanceModes specifies the allowed ways in which Certificates may be requested from this CaPool.
 * 
 */
public final class IssuanceModesArgs extends com.pulumi.resources.ResourceArgs {

    public static final IssuanceModesArgs Empty = new IssuanceModesArgs();

    /**
     * Optional. When true, allows callers to create Certificates by specifying a CertificateConfig.
     * 
     */
    @Import(name="allowConfigBasedIssuance")
    private @Nullable Output<Boolean> allowConfigBasedIssuance;

    public Optional<Output<Boolean>> allowConfigBasedIssuance() {
        return Optional.ofNullable(this.allowConfigBasedIssuance);
    }

    /**
     * Optional. When true, allows callers to create Certificates by specifying a CSR.
     * 
     */
    @Import(name="allowCsrBasedIssuance")
    private @Nullable Output<Boolean> allowCsrBasedIssuance;

    public Optional<Output<Boolean>> allowCsrBasedIssuance() {
        return Optional.ofNullable(this.allowCsrBasedIssuance);
    }

    private IssuanceModesArgs() {}

    private IssuanceModesArgs(IssuanceModesArgs $) {
        this.allowConfigBasedIssuance = $.allowConfigBasedIssuance;
        this.allowCsrBasedIssuance = $.allowCsrBasedIssuance;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(IssuanceModesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private IssuanceModesArgs $;

        public Builder() {
            $ = new IssuanceModesArgs();
        }

        public Builder(IssuanceModesArgs defaults) {
            $ = new IssuanceModesArgs(Objects.requireNonNull(defaults));
        }

        public Builder allowConfigBasedIssuance(@Nullable Output<Boolean> allowConfigBasedIssuance) {
            $.allowConfigBasedIssuance = allowConfigBasedIssuance;
            return this;
        }

        public Builder allowConfigBasedIssuance(Boolean allowConfigBasedIssuance) {
            return allowConfigBasedIssuance(Output.of(allowConfigBasedIssuance));
        }

        public Builder allowCsrBasedIssuance(@Nullable Output<Boolean> allowCsrBasedIssuance) {
            $.allowCsrBasedIssuance = allowCsrBasedIssuance;
            return this;
        }

        public Builder allowCsrBasedIssuance(Boolean allowCsrBasedIssuance) {
            return allowCsrBasedIssuance(Output.of(allowCsrBasedIssuance));
        }

        public IssuanceModesArgs build() {
            return $;
        }
    }

}
