// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.compute_alpha;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import com.pulumi.googlenative.compute_alpha.enums.NetworkFirewallPolicyVpcNetworkScope;
import com.pulumi.googlenative.compute_alpha.inputs.FirewallPolicyAssociationArgs;
import com.pulumi.googlenative.compute_alpha.inputs.FirewallPolicyRuleArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class NetworkFirewallPolicyArgs extends com.pulumi.resources.ResourceArgs {

    public static final NetworkFirewallPolicyArgs Empty = new NetworkFirewallPolicyArgs();

    /**
     * A list of associations that belong to this firewall policy.
     * 
     */
    @Import(name="associations")
      private final @Nullable Output<List<FirewallPolicyAssociationArgs>> associations;

    public Output<List<FirewallPolicyAssociationArgs>> associations() {
        return this.associations == null ? Codegen.empty() : this.associations;
    }

    /**
     * An optional description of this resource. Provide this property when you create the resource.
     * 
     */
    @Import(name="description")
      private final @Nullable Output<String> description;

    public Output<String> description() {
        return this.description == null ? Codegen.empty() : this.description;
    }

    @Import(name="project")
      private final @Nullable Output<String> project;

    public Output<String> project() {
        return this.project == null ? Codegen.empty() : this.project;
    }

    @Import(name="requestId")
      private final @Nullable Output<String> requestId;

    public Output<String> requestId() {
        return this.requestId == null ? Codegen.empty() : this.requestId;
    }

    /**
     * A list of rules that belong to this policy. There must always be a default rule (rule with priority 2147483647 and match &#34;*&#34;). If no rules are provided when creating a firewall policy, a default rule with action &#34;allow&#34; will be added.
     * 
     */
    @Import(name="rules")
      private final @Nullable Output<List<FirewallPolicyRuleArgs>> rules;

    public Output<List<FirewallPolicyRuleArgs>> rules() {
        return this.rules == null ? Codegen.empty() : this.rules;
    }

    /**
     * User-provided name of the Organization firewall plicy. The name should be unique in the organization in which the firewall policy is created. This name must be set on creation and cannot be changed. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
     * 
     */
    @Import(name="shortName")
      private final @Nullable Output<String> shortName;

    public Output<String> shortName() {
        return this.shortName == null ? Codegen.empty() : this.shortName;
    }

    /**
     * The scope of networks allowed to be associated with the firewall policy. This field can be either GLOBAL_VPC_NETWORK or REGIONAL_VPC_NETWORK. A firewall policy with the VPC scope set to GLOBAL_VPC_NETWORK is allowed to be attached only to global networks. When the VPC scope is set to REGIONAL_VPC_NETWORK the firewall policy is allowed to be attached only to regional networks in the same scope as the firewall policy. Note: if not specified then GLOBAL_VPC_NETWORK will be used.
     * 
     */
    @Import(name="vpcNetworkScope")
      private final @Nullable Output<NetworkFirewallPolicyVpcNetworkScope> vpcNetworkScope;

    public Output<NetworkFirewallPolicyVpcNetworkScope> vpcNetworkScope() {
        return this.vpcNetworkScope == null ? Codegen.empty() : this.vpcNetworkScope;
    }

    public NetworkFirewallPolicyArgs(
        @Nullable Output<List<FirewallPolicyAssociationArgs>> associations,
        @Nullable Output<String> description,
        @Nullable Output<String> project,
        @Nullable Output<String> requestId,
        @Nullable Output<List<FirewallPolicyRuleArgs>> rules,
        @Nullable Output<String> shortName,
        @Nullable Output<NetworkFirewallPolicyVpcNetworkScope> vpcNetworkScope) {
        this.associations = associations;
        this.description = description;
        this.project = project;
        this.requestId = requestId;
        this.rules = rules;
        this.shortName = shortName;
        this.vpcNetworkScope = vpcNetworkScope;
    }

    private NetworkFirewallPolicyArgs() {
        this.associations = Codegen.empty();
        this.description = Codegen.empty();
        this.project = Codegen.empty();
        this.requestId = Codegen.empty();
        this.rules = Codegen.empty();
        this.shortName = Codegen.empty();
        this.vpcNetworkScope = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(NetworkFirewallPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<List<FirewallPolicyAssociationArgs>> associations;
        private @Nullable Output<String> description;
        private @Nullable Output<String> project;
        private @Nullable Output<String> requestId;
        private @Nullable Output<List<FirewallPolicyRuleArgs>> rules;
        private @Nullable Output<String> shortName;
        private @Nullable Output<NetworkFirewallPolicyVpcNetworkScope> vpcNetworkScope;

        public Builder() {
    	      // Empty
        }

        public Builder(NetworkFirewallPolicyArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.associations = defaults.associations;
    	      this.description = defaults.description;
    	      this.project = defaults.project;
    	      this.requestId = defaults.requestId;
    	      this.rules = defaults.rules;
    	      this.shortName = defaults.shortName;
    	      this.vpcNetworkScope = defaults.vpcNetworkScope;
        }

        public Builder associations(@Nullable Output<List<FirewallPolicyAssociationArgs>> associations) {
            this.associations = associations;
            return this;
        }
        public Builder associations(@Nullable List<FirewallPolicyAssociationArgs> associations) {
            this.associations = Codegen.ofNullable(associations);
            return this;
        }
        public Builder associations(FirewallPolicyAssociationArgs... associations) {
            return associations(List.of(associations));
        }
        public Builder description(@Nullable Output<String> description) {
            this.description = description;
            return this;
        }
        public Builder description(@Nullable String description) {
            this.description = Codegen.ofNullable(description);
            return this;
        }
        public Builder project(@Nullable Output<String> project) {
            this.project = project;
            return this;
        }
        public Builder project(@Nullable String project) {
            this.project = Codegen.ofNullable(project);
            return this;
        }
        public Builder requestId(@Nullable Output<String> requestId) {
            this.requestId = requestId;
            return this;
        }
        public Builder requestId(@Nullable String requestId) {
            this.requestId = Codegen.ofNullable(requestId);
            return this;
        }
        public Builder rules(@Nullable Output<List<FirewallPolicyRuleArgs>> rules) {
            this.rules = rules;
            return this;
        }
        public Builder rules(@Nullable List<FirewallPolicyRuleArgs> rules) {
            this.rules = Codegen.ofNullable(rules);
            return this;
        }
        public Builder rules(FirewallPolicyRuleArgs... rules) {
            return rules(List.of(rules));
        }
        public Builder shortName(@Nullable Output<String> shortName) {
            this.shortName = shortName;
            return this;
        }
        public Builder shortName(@Nullable String shortName) {
            this.shortName = Codegen.ofNullable(shortName);
            return this;
        }
        public Builder vpcNetworkScope(@Nullable Output<NetworkFirewallPolicyVpcNetworkScope> vpcNetworkScope) {
            this.vpcNetworkScope = vpcNetworkScope;
            return this;
        }
        public Builder vpcNetworkScope(@Nullable NetworkFirewallPolicyVpcNetworkScope vpcNetworkScope) {
            this.vpcNetworkScope = Codegen.ofNullable(vpcNetworkScope);
            return this;
        }        public NetworkFirewallPolicyArgs build() {
            return new NetworkFirewallPolicyArgs(associations, description, project, requestId, rules, shortName, vpcNetworkScope);
        }
    }
}
