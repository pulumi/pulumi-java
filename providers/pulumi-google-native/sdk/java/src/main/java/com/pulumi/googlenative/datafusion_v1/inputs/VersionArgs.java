// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.datafusion_v1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.datafusion_v1.enums.VersionType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The Data Fusion version. This proto message stores information about certain Data Fusion version, which is used for Data Fusion version upgrade.
 * 
 */
public final class VersionArgs extends com.pulumi.resources.ResourceArgs {

    public static final VersionArgs Empty = new VersionArgs();

    /**
     * Represents a list of available feature names for a given version.
     * 
     */
    @Import(name="availableFeatures")
    private @Nullable Output<List<String>> availableFeatures;

    public Optional<Output<List<String>>> availableFeatures() {
        return Optional.ofNullable(this.availableFeatures);
    }

    /**
     * Whether this is currently the default version for Cloud Data Fusion
     * 
     */
    @Import(name="defaultVersion")
    private @Nullable Output<Boolean> defaultVersion;

    public Optional<Output<Boolean>> defaultVersion() {
        return Optional.ofNullable(this.defaultVersion);
    }

    /**
     * Type represents the release availability of the version
     * 
     */
    @Import(name="type")
    private @Nullable Output<VersionType> type;

    public Optional<Output<VersionType>> type() {
        return Optional.ofNullable(this.type);
    }

    /**
     * The version number of the Data Fusion instance, such as &#39;6.0.1.0&#39;.
     * 
     */
    @Import(name="versionNumber")
    private @Nullable Output<String> versionNumber;

    public Optional<Output<String>> versionNumber() {
        return Optional.ofNullable(this.versionNumber);
    }

    private VersionArgs() {}

    private VersionArgs(VersionArgs $) {
        this.availableFeatures = $.availableFeatures;
        this.defaultVersion = $.defaultVersion;
        this.type = $.type;
        this.versionNumber = $.versionNumber;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VersionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VersionArgs $;

        public Builder() {
            $ = new VersionArgs();
        }

        public Builder(VersionArgs defaults) {
            $ = new VersionArgs(Objects.requireNonNull(defaults));
        }

        public Builder availableFeatures(@Nullable Output<List<String>> availableFeatures) {
            $.availableFeatures = availableFeatures;
            return this;
        }

        public Builder availableFeatures(List<String> availableFeatures) {
            return availableFeatures(Output.of(availableFeatures));
        }

        public Builder availableFeatures(String... availableFeatures) {
            return availableFeatures(List.of(availableFeatures));
        }

        public Builder defaultVersion(@Nullable Output<Boolean> defaultVersion) {
            $.defaultVersion = defaultVersion;
            return this;
        }

        public Builder defaultVersion(Boolean defaultVersion) {
            return defaultVersion(Output.of(defaultVersion));
        }

        public Builder type(@Nullable Output<VersionType> type) {
            $.type = type;
            return this;
        }

        public Builder type(VersionType type) {
            return type(Output.of(type));
        }

        public Builder versionNumber(@Nullable Output<String> versionNumber) {
            $.versionNumber = versionNumber;
            return this;
        }

        public Builder versionNumber(String versionNumber) {
            return versionNumber(Output.of(versionNumber));
        }

        public VersionArgs build() {
            return $;
        }
    }

}
