// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.sqladmin_v1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * The name and status of the failover replica.
 * 
 */
public final class InstanceFailoverReplicaArgs extends com.pulumi.resources.ResourceArgs {

    public static final InstanceFailoverReplicaArgs Empty = new InstanceFailoverReplicaArgs();

    /**
     * The availability status of the failover replica. A false status indicates that the failover replica is out of sync. The primary instance can only failover to the failover replica when the status is true.
     * 
     */
    @Import(name="available")
      private final @Nullable Output<Boolean> available;

    public Output<Boolean> available() {
        return this.available == null ? Codegen.empty() : this.available;
    }

    /**
     * The name of the failover replica. If specified at instance creation, a failover replica is created for the instance. The name doesn&#39;t include the project ID.
     * 
     */
    @Import(name="name")
      private final @Nullable Output<String> name;

    public Output<String> name() {
        return this.name == null ? Codegen.empty() : this.name;
    }

    public InstanceFailoverReplicaArgs(
        @Nullable Output<Boolean> available,
        @Nullable Output<String> name) {
        this.available = available;
        this.name = name;
    }

    private InstanceFailoverReplicaArgs() {
        this.available = Codegen.empty();
        this.name = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(InstanceFailoverReplicaArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<Boolean> available;
        private @Nullable Output<String> name;

        public Builder() {
    	      // Empty
        }

        public Builder(InstanceFailoverReplicaArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.available = defaults.available;
    	      this.name = defaults.name;
        }

        public Builder available(@Nullable Output<Boolean> available) {
            this.available = available;
            return this;
        }
        public Builder available(@Nullable Boolean available) {
            this.available = Codegen.ofNullable(available);
            return this;
        }
        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }
        public Builder name(@Nullable String name) {
            this.name = Codegen.ofNullable(name);
            return this;
        }        public InstanceFailoverReplicaArgs build() {
            return new InstanceFailoverReplicaArgs(available, name);
        }
    }
}
