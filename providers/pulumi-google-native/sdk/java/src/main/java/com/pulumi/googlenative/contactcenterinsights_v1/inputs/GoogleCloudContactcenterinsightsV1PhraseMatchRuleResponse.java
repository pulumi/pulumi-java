// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.contactcenterinsights_v1.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.contactcenterinsights_v1.inputs.GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfigResponse;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;


/**
 * The data for a phrase match rule.
 * 
 */
public final class GoogleCloudContactcenterinsightsV1PhraseMatchRuleResponse extends com.pulumi.resources.InvokeArgs {

    public static final GoogleCloudContactcenterinsightsV1PhraseMatchRuleResponse Empty = new GoogleCloudContactcenterinsightsV1PhraseMatchRuleResponse();

    /**
     * Provides additional information about the rule that specifies how to apply the rule.
     * 
     */
    @Import(name="config", required=true)
    private GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfigResponse config;

    /**
     * @return Provides additional information about the rule that specifies how to apply the rule.
     * 
     */
    public GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfigResponse config() {
        return this.config;
    }

    /**
     * Specifies whether the phrase must be missing from the transcript segment or present in the transcript segment.
     * 
     */
    @Import(name="negated", required=true)
    private Boolean negated;

    /**
     * @return Specifies whether the phrase must be missing from the transcript segment or present in the transcript segment.
     * 
     */
    public Boolean negated() {
        return this.negated;
    }

    /**
     * The phrase to be matched.
     * 
     */
    @Import(name="query", required=true)
    private String query;

    /**
     * @return The phrase to be matched.
     * 
     */
    public String query() {
        return this.query;
    }

    private GoogleCloudContactcenterinsightsV1PhraseMatchRuleResponse() {}

    private GoogleCloudContactcenterinsightsV1PhraseMatchRuleResponse(GoogleCloudContactcenterinsightsV1PhraseMatchRuleResponse $) {
        this.config = $.config;
        this.negated = $.negated;
        this.query = $.query;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GoogleCloudContactcenterinsightsV1PhraseMatchRuleResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GoogleCloudContactcenterinsightsV1PhraseMatchRuleResponse $;

        public Builder() {
            $ = new GoogleCloudContactcenterinsightsV1PhraseMatchRuleResponse();
        }

        public Builder(GoogleCloudContactcenterinsightsV1PhraseMatchRuleResponse defaults) {
            $ = new GoogleCloudContactcenterinsightsV1PhraseMatchRuleResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param config Provides additional information about the rule that specifies how to apply the rule.
         * 
         * @return builder
         * 
         */
        public Builder config(GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfigResponse config) {
            $.config = config;
            return this;
        }

        /**
         * @param negated Specifies whether the phrase must be missing from the transcript segment or present in the transcript segment.
         * 
         * @return builder
         * 
         */
        public Builder negated(Boolean negated) {
            $.negated = negated;
            return this;
        }

        /**
         * @param query The phrase to be matched.
         * 
         * @return builder
         * 
         */
        public Builder query(String query) {
            $.query = query;
            return this;
        }

        public GoogleCloudContactcenterinsightsV1PhraseMatchRuleResponse build() {
            $.config = Objects.requireNonNull($.config, "expected parameter 'config' to be non-null");
            $.negated = Objects.requireNonNull($.negated, "expected parameter 'negated' to be non-null");
            $.query = Objects.requireNonNull($.query, "expected parameter 'query' to be non-null");
            return $;
        }
    }

}
