// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.osconfig_v1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import com.pulumi.googlenative.osconfig_v1.inputs.OSPolicyResourceExecResourceArgs;
import com.pulumi.googlenative.osconfig_v1.inputs.OSPolicyResourceFileResourceArgs;
import com.pulumi.googlenative.osconfig_v1.inputs.OSPolicyResourcePackageResourceArgs;
import com.pulumi.googlenative.osconfig_v1.inputs.OSPolicyResourceRepositoryResourceArgs;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * An OS policy resource is used to define the desired state configuration and provides a specific functionality like installing/removing packages, executing a script etc. The system ensures that resources are always in their desired state by taking necessary actions if they have drifted from their desired state.
 * 
 */
public final class OSPolicyResourceArgs extends com.pulumi.resources.ResourceArgs {

    public static final OSPolicyResourceArgs Empty = new OSPolicyResourceArgs();

    /**
     * Exec resource
     * 
     */
    @Import(name="exec")
      private final @Nullable Output<OSPolicyResourceExecResourceArgs> exec;

    public Output<OSPolicyResourceExecResourceArgs> exec() {
        return this.exec == null ? Codegen.empty() : this.exec;
    }

    /**
     * File resource
     * 
     */
    @Import(name="file")
      private final @Nullable Output<OSPolicyResourceFileResourceArgs> file;

    public Output<OSPolicyResourceFileResourceArgs> file() {
        return this.file == null ? Codegen.empty() : this.file;
    }

    /**
     * The id of the resource with the following restrictions: * Must contain only lowercase letters, numbers, and hyphens. * Must start with a letter. * Must be between 1-63 characters. * Must end with a number or a letter. * Must be unique within the OS policy.
     * 
     */
    @Import(name="id", required=true)
      private final Output<String> id;

    public Output<String> id() {
        return this.id;
    }

    /**
     * Package resource
     * 
     */
    @Import(name="pkg")
      private final @Nullable Output<OSPolicyResourcePackageResourceArgs> pkg;

    public Output<OSPolicyResourcePackageResourceArgs> pkg() {
        return this.pkg == null ? Codegen.empty() : this.pkg;
    }

    /**
     * Package repository resource
     * 
     */
    @Import(name="repository")
      private final @Nullable Output<OSPolicyResourceRepositoryResourceArgs> repository;

    public Output<OSPolicyResourceRepositoryResourceArgs> repository() {
        return this.repository == null ? Codegen.empty() : this.repository;
    }

    public OSPolicyResourceArgs(
        @Nullable Output<OSPolicyResourceExecResourceArgs> exec,
        @Nullable Output<OSPolicyResourceFileResourceArgs> file,
        Output<String> id,
        @Nullable Output<OSPolicyResourcePackageResourceArgs> pkg,
        @Nullable Output<OSPolicyResourceRepositoryResourceArgs> repository) {
        this.exec = exec;
        this.file = file;
        this.id = Objects.requireNonNull(id, "expected parameter 'id' to be non-null");
        this.pkg = pkg;
        this.repository = repository;
    }

    private OSPolicyResourceArgs() {
        this.exec = Codegen.empty();
        this.file = Codegen.empty();
        this.id = Codegen.empty();
        this.pkg = Codegen.empty();
        this.repository = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(OSPolicyResourceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<OSPolicyResourceExecResourceArgs> exec;
        private @Nullable Output<OSPolicyResourceFileResourceArgs> file;
        private Output<String> id;
        private @Nullable Output<OSPolicyResourcePackageResourceArgs> pkg;
        private @Nullable Output<OSPolicyResourceRepositoryResourceArgs> repository;

        public Builder() {
    	      // Empty
        }

        public Builder(OSPolicyResourceArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.exec = defaults.exec;
    	      this.file = defaults.file;
    	      this.id = defaults.id;
    	      this.pkg = defaults.pkg;
    	      this.repository = defaults.repository;
        }

        public Builder exec(@Nullable Output<OSPolicyResourceExecResourceArgs> exec) {
            this.exec = exec;
            return this;
        }
        public Builder exec(@Nullable OSPolicyResourceExecResourceArgs exec) {
            this.exec = Codegen.ofNullable(exec);
            return this;
        }
        public Builder file(@Nullable Output<OSPolicyResourceFileResourceArgs> file) {
            this.file = file;
            return this;
        }
        public Builder file(@Nullable OSPolicyResourceFileResourceArgs file) {
            this.file = Codegen.ofNullable(file);
            return this;
        }
        public Builder id(Output<String> id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder id(String id) {
            this.id = Output.of(Objects.requireNonNull(id));
            return this;
        }
        public Builder pkg(@Nullable Output<OSPolicyResourcePackageResourceArgs> pkg) {
            this.pkg = pkg;
            return this;
        }
        public Builder pkg(@Nullable OSPolicyResourcePackageResourceArgs pkg) {
            this.pkg = Codegen.ofNullable(pkg);
            return this;
        }
        public Builder repository(@Nullable Output<OSPolicyResourceRepositoryResourceArgs> repository) {
            this.repository = repository;
            return this;
        }
        public Builder repository(@Nullable OSPolicyResourceRepositoryResourceArgs repository) {
            this.repository = Codegen.ofNullable(repository);
            return this;
        }        public OSPolicyResourceArgs build() {
            return new OSPolicyResourceArgs(exec, file, id, pkg, repository);
        }
    }
}
