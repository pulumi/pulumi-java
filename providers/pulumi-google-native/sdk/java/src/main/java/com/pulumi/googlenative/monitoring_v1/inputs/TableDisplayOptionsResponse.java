// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.monitoring_v1.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;


/**
 * Table display options that can be reused.
 * 
 */
public final class TableDisplayOptionsResponse extends com.pulumi.resources.InvokeArgs {

    public static final TableDisplayOptionsResponse Empty = new TableDisplayOptionsResponse();

    /**
     * Optional. Columns to display in the table. Leave empty to display all available columns. Note: This field is for future features and is not currently used.
     * 
     */
    @Import(name="shownColumns", required=true)
    private List<String> shownColumns;

    public List<String> shownColumns() {
        return this.shownColumns;
    }

    private TableDisplayOptionsResponse() {}

    private TableDisplayOptionsResponse(TableDisplayOptionsResponse $) {
        this.shownColumns = $.shownColumns;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TableDisplayOptionsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TableDisplayOptionsResponse $;

        public Builder() {
            $ = new TableDisplayOptionsResponse();
        }

        public Builder(TableDisplayOptionsResponse defaults) {
            $ = new TableDisplayOptionsResponse(Objects.requireNonNull(defaults));
        }

        public Builder shownColumns(List<String> shownColumns) {
            $.shownColumns = shownColumns;
            return this;
        }

        public Builder shownColumns(String... shownColumns) {
            return shownColumns(List.of(shownColumns));
        }

        public TableDisplayOptionsResponse build() {
            $.shownColumns = Objects.requireNonNull($.shownColumns, "expected parameter 'shownColumns' to be non-null");
            return $;
        }
    }

}
