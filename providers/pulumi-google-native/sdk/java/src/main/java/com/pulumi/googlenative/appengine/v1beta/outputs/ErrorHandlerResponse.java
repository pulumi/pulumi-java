// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.appengine.v1beta.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class ErrorHandlerResponse {
    /**
     * @return Error condition this handler applies to.
     * 
     */
    private final String errorCode;
    /**
     * @return MIME type of file. Defaults to text/html.
     * 
     */
    private final String mimeType;
    /**
     * @return Static file content to be served for this error.
     * 
     */
    private final String staticFile;

    @CustomType.Constructor
    private ErrorHandlerResponse(
        @CustomType.Parameter("errorCode") String errorCode,
        @CustomType.Parameter("mimeType") String mimeType,
        @CustomType.Parameter("staticFile") String staticFile) {
        this.errorCode = errorCode;
        this.mimeType = mimeType;
        this.staticFile = staticFile;
    }

    /**
     * @return Error condition this handler applies to.
     * 
     */
    public String errorCode() {
        return this.errorCode;
    }
    /**
     * @return MIME type of file. Defaults to text/html.
     * 
     */
    public String mimeType() {
        return this.mimeType;
    }
    /**
     * @return Static file content to be served for this error.
     * 
     */
    public String staticFile() {
        return this.staticFile;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ErrorHandlerResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String errorCode;
        private String mimeType;
        private String staticFile;

        public Builder() {
    	      // Empty
        }

        public Builder(ErrorHandlerResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.errorCode = defaults.errorCode;
    	      this.mimeType = defaults.mimeType;
    	      this.staticFile = defaults.staticFile;
        }

        public Builder errorCode(String errorCode) {
            this.errorCode = Objects.requireNonNull(errorCode);
            return this;
        }
        public Builder mimeType(String mimeType) {
            this.mimeType = Objects.requireNonNull(mimeType);
            return this;
        }
        public Builder staticFile(String staticFile) {
            this.staticFile = Objects.requireNonNull(staticFile);
            return this;
        }        public ErrorHandlerResponse build() {
            return new ErrorHandlerResponse(errorCode, mimeType, staticFile);
        }
    }
}
