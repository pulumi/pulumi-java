// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.containeranalysis_v1beta1.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * A signature object consists of the KeyID used and the signature itself.
 * 
 */
public final class GrafeasV1beta1IntotoSignatureResponse extends com.pulumi.resources.InvokeArgs {

    public static final GrafeasV1beta1IntotoSignatureResponse Empty = new GrafeasV1beta1IntotoSignatureResponse();

    @Import(name="keyid", required=true)
    private String keyid;

    public String keyid() {
        return this.keyid;
    }

    @Import(name="sig", required=true)
    private String sig;

    public String sig() {
        return this.sig;
    }

    private GrafeasV1beta1IntotoSignatureResponse() {}

    private GrafeasV1beta1IntotoSignatureResponse(GrafeasV1beta1IntotoSignatureResponse $) {
        this.keyid = $.keyid;
        this.sig = $.sig;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GrafeasV1beta1IntotoSignatureResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GrafeasV1beta1IntotoSignatureResponse $;

        public Builder() {
            $ = new GrafeasV1beta1IntotoSignatureResponse();
        }

        public Builder(GrafeasV1beta1IntotoSignatureResponse defaults) {
            $ = new GrafeasV1beta1IntotoSignatureResponse(Objects.requireNonNull(defaults));
        }

        public Builder keyid(String keyid) {
            $.keyid = keyid;
            return this;
        }

        public Builder sig(String sig) {
            $.sig = sig;
            return this;
        }

        public GrafeasV1beta1IntotoSignatureResponse build() {
            $.keyid = Objects.requireNonNull($.keyid, "expected parameter 'keyid' to be non-null");
            $.sig = Objects.requireNonNull($.sig, "expected parameter 'sig' to be non-null");
            return $;
        }
    }

}
