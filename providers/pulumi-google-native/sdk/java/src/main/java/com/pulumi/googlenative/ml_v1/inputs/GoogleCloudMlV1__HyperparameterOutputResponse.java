// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.ml_v1.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.ml_v1.inputs.GoogleCloudMlV1_HyperparameterOutput_HyperparameterMetricResponse;
import com.pulumi.googlenative.ml_v1.inputs.GoogleCloudMlV1__BuiltInAlgorithmOutputResponse;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;


/**
 * Represents the result of a single hyperparameter tuning trial from a training job. The TrainingOutput object that is returned on successful completion of a training job with hyperparameter tuning includes a list of HyperparameterOutput objects, one for each successful trial.
 * 
 */
public final class GoogleCloudMlV1__HyperparameterOutputResponse extends com.pulumi.resources.InvokeArgs {

    public static final GoogleCloudMlV1__HyperparameterOutputResponse Empty = new GoogleCloudMlV1__HyperparameterOutputResponse();

    /**
     * All recorded object metrics for this trial. This field is not currently populated.
     * 
     */
    @Import(name="allMetrics", required=true)
      private final List<GoogleCloudMlV1_HyperparameterOutput_HyperparameterMetricResponse> allMetrics;

    public List<GoogleCloudMlV1_HyperparameterOutput_HyperparameterMetricResponse> allMetrics() {
        return this.allMetrics;
    }

    /**
     * Details related to built-in algorithms jobs. Only set for trials of built-in algorithms jobs that have succeeded.
     * 
     */
    @Import(name="builtInAlgorithmOutput", required=true)
      private final GoogleCloudMlV1__BuiltInAlgorithmOutputResponse builtInAlgorithmOutput;

    public GoogleCloudMlV1__BuiltInAlgorithmOutputResponse builtInAlgorithmOutput() {
        return this.builtInAlgorithmOutput;
    }

    /**
     * End time for the trial.
     * 
     */
    @Import(name="endTime", required=true)
      private final String endTime;

    public String endTime() {
        return this.endTime;
    }

    /**
     * The final objective metric seen for this trial.
     * 
     */
    @Import(name="finalMetric", required=true)
      private final GoogleCloudMlV1_HyperparameterOutput_HyperparameterMetricResponse finalMetric;

    public GoogleCloudMlV1_HyperparameterOutput_HyperparameterMetricResponse finalMetric() {
        return this.finalMetric;
    }

    /**
     * The hyperparameters given to this trial.
     * 
     */
    @Import(name="hyperparameters", required=true)
      private final Map<String,String> hyperparameters;

    public Map<String,String> hyperparameters() {
        return this.hyperparameters;
    }

    /**
     * True if the trial is stopped early.
     * 
     */
    @Import(name="isTrialStoppedEarly", required=true)
      private final Boolean isTrialStoppedEarly;

    public Boolean isTrialStoppedEarly() {
        return this.isTrialStoppedEarly;
    }

    /**
     * Start time for the trial.
     * 
     */
    @Import(name="startTime", required=true)
      private final String startTime;

    public String startTime() {
        return this.startTime;
    }

    /**
     * The detailed state of the trial.
     * 
     */
    @Import(name="state", required=true)
      private final String state;

    public String state() {
        return this.state;
    }

    /**
     * The trial id for these results.
     * 
     */
    @Import(name="trialId", required=true)
      private final String trialId;

    public String trialId() {
        return this.trialId;
    }

    /**
     * URIs for accessing [interactive shells](https://cloud.google.com/ai-platform/training/docs/monitor-debug-interactive-shell) (one URI for each training node). Only available if this trial is part of a hyperparameter tuning job and the job's training_input.enable_web_access is `true`. The keys are names of each node in the training job; for example, `master-replica-0` for the master node, `worker-replica-0` for the first worker, and `ps-replica-0` for the first parameter server. The values are the URIs for each node's interactive shell.
     * 
     */
    @Import(name="webAccessUris", required=true)
      private final Map<String,String> webAccessUris;

    public Map<String,String> webAccessUris() {
        return this.webAccessUris;
    }

    public GoogleCloudMlV1__HyperparameterOutputResponse(
        List<GoogleCloudMlV1_HyperparameterOutput_HyperparameterMetricResponse> allMetrics,
        GoogleCloudMlV1__BuiltInAlgorithmOutputResponse builtInAlgorithmOutput,
        String endTime,
        GoogleCloudMlV1_HyperparameterOutput_HyperparameterMetricResponse finalMetric,
        Map<String,String> hyperparameters,
        Boolean isTrialStoppedEarly,
        String startTime,
        String state,
        String trialId,
        Map<String,String> webAccessUris) {
        this.allMetrics = Objects.requireNonNull(allMetrics, "expected parameter 'allMetrics' to be non-null");
        this.builtInAlgorithmOutput = Objects.requireNonNull(builtInAlgorithmOutput, "expected parameter 'builtInAlgorithmOutput' to be non-null");
        this.endTime = Objects.requireNonNull(endTime, "expected parameter 'endTime' to be non-null");
        this.finalMetric = Objects.requireNonNull(finalMetric, "expected parameter 'finalMetric' to be non-null");
        this.hyperparameters = Objects.requireNonNull(hyperparameters, "expected parameter 'hyperparameters' to be non-null");
        this.isTrialStoppedEarly = Objects.requireNonNull(isTrialStoppedEarly, "expected parameter 'isTrialStoppedEarly' to be non-null");
        this.startTime = Objects.requireNonNull(startTime, "expected parameter 'startTime' to be non-null");
        this.state = Objects.requireNonNull(state, "expected parameter 'state' to be non-null");
        this.trialId = Objects.requireNonNull(trialId, "expected parameter 'trialId' to be non-null");
        this.webAccessUris = Objects.requireNonNull(webAccessUris, "expected parameter 'webAccessUris' to be non-null");
    }

    private GoogleCloudMlV1__HyperparameterOutputResponse() {
        this.allMetrics = List.of();
        this.builtInAlgorithmOutput = null;
        this.endTime = null;
        this.finalMetric = null;
        this.hyperparameters = Map.of();
        this.isTrialStoppedEarly = null;
        this.startTime = null;
        this.state = null;
        this.trialId = null;
        this.webAccessUris = Map.of();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GoogleCloudMlV1__HyperparameterOutputResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<GoogleCloudMlV1_HyperparameterOutput_HyperparameterMetricResponse> allMetrics;
        private GoogleCloudMlV1__BuiltInAlgorithmOutputResponse builtInAlgorithmOutput;
        private String endTime;
        private GoogleCloudMlV1_HyperparameterOutput_HyperparameterMetricResponse finalMetric;
        private Map<String,String> hyperparameters;
        private Boolean isTrialStoppedEarly;
        private String startTime;
        private String state;
        private String trialId;
        private Map<String,String> webAccessUris;

        public Builder() {
    	      // Empty
        }

        public Builder(GoogleCloudMlV1__HyperparameterOutputResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allMetrics = defaults.allMetrics;
    	      this.builtInAlgorithmOutput = defaults.builtInAlgorithmOutput;
    	      this.endTime = defaults.endTime;
    	      this.finalMetric = defaults.finalMetric;
    	      this.hyperparameters = defaults.hyperparameters;
    	      this.isTrialStoppedEarly = defaults.isTrialStoppedEarly;
    	      this.startTime = defaults.startTime;
    	      this.state = defaults.state;
    	      this.trialId = defaults.trialId;
    	      this.webAccessUris = defaults.webAccessUris;
        }

        public Builder allMetrics(List<GoogleCloudMlV1_HyperparameterOutput_HyperparameterMetricResponse> allMetrics) {
            this.allMetrics = Objects.requireNonNull(allMetrics);
            return this;
        }
        public Builder allMetrics(GoogleCloudMlV1_HyperparameterOutput_HyperparameterMetricResponse... allMetrics) {
            return allMetrics(List.of(allMetrics));
        }
        public Builder builtInAlgorithmOutput(GoogleCloudMlV1__BuiltInAlgorithmOutputResponse builtInAlgorithmOutput) {
            this.builtInAlgorithmOutput = Objects.requireNonNull(builtInAlgorithmOutput);
            return this;
        }
        public Builder endTime(String endTime) {
            this.endTime = Objects.requireNonNull(endTime);
            return this;
        }
        public Builder finalMetric(GoogleCloudMlV1_HyperparameterOutput_HyperparameterMetricResponse finalMetric) {
            this.finalMetric = Objects.requireNonNull(finalMetric);
            return this;
        }
        public Builder hyperparameters(Map<String,String> hyperparameters) {
            this.hyperparameters = Objects.requireNonNull(hyperparameters);
            return this;
        }
        public Builder isTrialStoppedEarly(Boolean isTrialStoppedEarly) {
            this.isTrialStoppedEarly = Objects.requireNonNull(isTrialStoppedEarly);
            return this;
        }
        public Builder startTime(String startTime) {
            this.startTime = Objects.requireNonNull(startTime);
            return this;
        }
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        public Builder trialId(String trialId) {
            this.trialId = Objects.requireNonNull(trialId);
            return this;
        }
        public Builder webAccessUris(Map<String,String> webAccessUris) {
            this.webAccessUris = Objects.requireNonNull(webAccessUris);
            return this;
        }        public GoogleCloudMlV1__HyperparameterOutputResponse build() {
            return new GoogleCloudMlV1__HyperparameterOutputResponse(allMetrics, builtInAlgorithmOutput, endTime, finalMetric, hyperparameters, isTrialStoppedEarly, startTime, state, trialId, webAccessUris);
        }
    }
}
