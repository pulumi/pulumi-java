// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.osconfig.v1beta.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.osconfig.v1beta.inputs.AptRepositoryArgs;
import com.pulumi.googlenative.osconfig.v1beta.inputs.GooRepositoryArgs;
import com.pulumi.googlenative.osconfig.v1beta.inputs.YumRepositoryArgs;
import com.pulumi.googlenative.osconfig.v1beta.inputs.ZypperRepositoryArgs;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * A package repository.
 * 
 */
public final class PackageRepositoryArgs extends com.pulumi.resources.ResourceArgs {

    public static final PackageRepositoryArgs Empty = new PackageRepositoryArgs();

    /**
     * An Apt Repository.
     * 
     */
    @Import(name="apt")
    private @Nullable Output<AptRepositoryArgs> apt;

    /**
     * @return An Apt Repository.
     * 
     */
    public Optional<Output<AptRepositoryArgs>> apt() {
        return Optional.ofNullable(this.apt);
    }

    /**
     * A Goo Repository.
     * 
     */
    @Import(name="goo")
    private @Nullable Output<GooRepositoryArgs> goo;

    /**
     * @return A Goo Repository.
     * 
     */
    public Optional<Output<GooRepositoryArgs>> goo() {
        return Optional.ofNullable(this.goo);
    }

    /**
     * A Yum Repository.
     * 
     */
    @Import(name="yum")
    private @Nullable Output<YumRepositoryArgs> yum;

    /**
     * @return A Yum Repository.
     * 
     */
    public Optional<Output<YumRepositoryArgs>> yum() {
        return Optional.ofNullable(this.yum);
    }

    /**
     * A Zypper Repository.
     * 
     */
    @Import(name="zypper")
    private @Nullable Output<ZypperRepositoryArgs> zypper;

    /**
     * @return A Zypper Repository.
     * 
     */
    public Optional<Output<ZypperRepositoryArgs>> zypper() {
        return Optional.ofNullable(this.zypper);
    }

    private PackageRepositoryArgs() {}

    private PackageRepositoryArgs(PackageRepositoryArgs $) {
        this.apt = $.apt;
        this.goo = $.goo;
        this.yum = $.yum;
        this.zypper = $.zypper;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PackageRepositoryArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PackageRepositoryArgs $;

        public Builder() {
            $ = new PackageRepositoryArgs();
        }

        public Builder(PackageRepositoryArgs defaults) {
            $ = new PackageRepositoryArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param apt An Apt Repository.
         * 
         * @return builder
         * 
         */
        public Builder apt(@Nullable Output<AptRepositoryArgs> apt) {
            $.apt = apt;
            return this;
        }

        /**
         * @param apt An Apt Repository.
         * 
         * @return builder
         * 
         */
        public Builder apt(AptRepositoryArgs apt) {
            return apt(Output.of(apt));
        }

        /**
         * @param goo A Goo Repository.
         * 
         * @return builder
         * 
         */
        public Builder goo(@Nullable Output<GooRepositoryArgs> goo) {
            $.goo = goo;
            return this;
        }

        /**
         * @param goo A Goo Repository.
         * 
         * @return builder
         * 
         */
        public Builder goo(GooRepositoryArgs goo) {
            return goo(Output.of(goo));
        }

        /**
         * @param yum A Yum Repository.
         * 
         * @return builder
         * 
         */
        public Builder yum(@Nullable Output<YumRepositoryArgs> yum) {
            $.yum = yum;
            return this;
        }

        /**
         * @param yum A Yum Repository.
         * 
         * @return builder
         * 
         */
        public Builder yum(YumRepositoryArgs yum) {
            return yum(Output.of(yum));
        }

        /**
         * @param zypper A Zypper Repository.
         * 
         * @return builder
         * 
         */
        public Builder zypper(@Nullable Output<ZypperRepositoryArgs> zypper) {
            $.zypper = zypper;
            return this;
        }

        /**
         * @param zypper A Zypper Repository.
         * 
         * @return builder
         * 
         */
        public Builder zypper(ZypperRepositoryArgs zypper) {
            return zypper(Output.of(zypper));
        }

        public PackageRepositoryArgs build() {
            return $;
        }
    }

}
