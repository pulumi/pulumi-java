// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.datacatalog_v1;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.datacatalog_v1.enums.EntryType;
import com.pulumi.googlenative.datacatalog_v1.inputs.GoogleCloudDatacatalogV1BigQueryDateShardedSpecArgs;
import com.pulumi.googlenative.datacatalog_v1.inputs.GoogleCloudDatacatalogV1BigQueryTableSpecArgs;
import com.pulumi.googlenative.datacatalog_v1.inputs.GoogleCloudDatacatalogV1BusinessContextArgs;
import com.pulumi.googlenative.datacatalog_v1.inputs.GoogleCloudDatacatalogV1DataSourceConnectionSpecArgs;
import com.pulumi.googlenative.datacatalog_v1.inputs.GoogleCloudDatacatalogV1DatabaseTableSpecArgs;
import com.pulumi.googlenative.datacatalog_v1.inputs.GoogleCloudDatacatalogV1GcsFilesetSpecArgs;
import com.pulumi.googlenative.datacatalog_v1.inputs.GoogleCloudDatacatalogV1RoutineSpecArgs;
import com.pulumi.googlenative.datacatalog_v1.inputs.GoogleCloudDatacatalogV1SchemaArgs;
import com.pulumi.googlenative.datacatalog_v1.inputs.GoogleCloudDatacatalogV1SystemTimestampsArgs;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class EntryArgs extends com.pulumi.resources.ResourceArgs {

    public static final EntryArgs Empty = new EntryArgs();

    /**
     * Specification for a group of BigQuery tables with the `[prefix]YYYYMMDD` name pattern. For more information, see [Introduction to partitioned tables] (https://cloud.google.com/bigquery/docs/partitioned-tables#partitioning_versus_sharding).
     * 
     */
    @Import(name="bigqueryDateShardedSpec")
    private @Nullable Output<GoogleCloudDatacatalogV1BigQueryDateShardedSpecArgs> bigqueryDateShardedSpec;

    public Optional<Output<GoogleCloudDatacatalogV1BigQueryDateShardedSpecArgs>> bigqueryDateShardedSpec() {
        return Optional.ofNullable(this.bigqueryDateShardedSpec);
    }

    /**
     * Specification that applies to a BigQuery table. Valid only for entries with the `TABLE` type.
     * 
     */
    @Import(name="bigqueryTableSpec")
    private @Nullable Output<GoogleCloudDatacatalogV1BigQueryTableSpecArgs> bigqueryTableSpec;

    public Optional<Output<GoogleCloudDatacatalogV1BigQueryTableSpecArgs>> bigqueryTableSpec() {
        return Optional.ofNullable(this.bigqueryTableSpec);
    }

    /**
     * Business Context of the entry.
     * 
     */
    @Import(name="businessContext")
    private @Nullable Output<GoogleCloudDatacatalogV1BusinessContextArgs> businessContext;

    public Optional<Output<GoogleCloudDatacatalogV1BusinessContextArgs>> businessContext() {
        return Optional.ofNullable(this.businessContext);
    }

    /**
     * Specification that applies to a data source connection. Valid only for entries with the `DATA_SOURCE_CONNECTION` type.
     * 
     */
    @Import(name="dataSourceConnectionSpec")
    private @Nullable Output<GoogleCloudDatacatalogV1DataSourceConnectionSpecArgs> dataSourceConnectionSpec;

    public Optional<Output<GoogleCloudDatacatalogV1DataSourceConnectionSpecArgs>> dataSourceConnectionSpec() {
        return Optional.ofNullable(this.dataSourceConnectionSpec);
    }

    /**
     * Specification that applies to a table resource. Valid only for entries with the `TABLE` type.
     * 
     */
    @Import(name="databaseTableSpec")
    private @Nullable Output<GoogleCloudDatacatalogV1DatabaseTableSpecArgs> databaseTableSpec;

    public Optional<Output<GoogleCloudDatacatalogV1DatabaseTableSpecArgs>> databaseTableSpec() {
        return Optional.ofNullable(this.databaseTableSpec);
    }

    /**
     * Entry description that can consist of several sentences or paragraphs that describe entry contents. The description must not contain Unicode non-characters as well as C0 and C1 control codes except tabs (HT), new lines (LF), carriage returns (CR), and page breaks (FF). The maximum size is 2000 bytes when encoded in UTF-8. Default value is an empty string.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Display name of an entry. The name must contain only Unicode letters, numbers (0-9), underscores (_), dashes (-), spaces ( ), and can&#39;t start or end with spaces. The maximum size is 200 bytes when encoded in UTF-8. Default value is an empty string.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    @Import(name="entryGroupId", required=true)
    private Output<String> entryGroupId;

    public Output<String> entryGroupId() {
        return this.entryGroupId;
    }

    @Import(name="entryId", required=true)
    private Output<String> entryId;

    public Output<String> entryId() {
        return this.entryId;
    }

    /**
     * Fully qualified name (FQN) of the resource. Set automatically for entries representing resources from synced systems. Settable only during creation and read-only afterwards. Can be used for search and lookup of the entries. FQNs take two forms: * For non-regionalized resources: `{SYSTEM}:{PROJECT}.{PATH_TO_RESOURCE_SEPARATED_WITH_DOTS}` * For regionalized resources: `{SYSTEM}:{PROJECT}.{LOCATION_ID}.{PATH_TO_RESOURCE_SEPARATED_WITH_DOTS}` Example for a DPMS table: `dataproc_metastore:{PROJECT_ID}.{LOCATION_ID}.{INSTANCE_ID}.{DATABASE_ID}.{TABLE_ID}`
     * 
     */
    @Import(name="fullyQualifiedName")
    private @Nullable Output<String> fullyQualifiedName;

    public Optional<Output<String>> fullyQualifiedName() {
        return Optional.ofNullable(this.fullyQualifiedName);
    }

    /**
     * Specification that applies to a Cloud Storage fileset. Valid only for entries with the `FILESET` type.
     * 
     */
    @Import(name="gcsFilesetSpec")
    private @Nullable Output<GoogleCloudDatacatalogV1GcsFilesetSpecArgs> gcsFilesetSpec;

    public Optional<Output<GoogleCloudDatacatalogV1GcsFilesetSpecArgs>> gcsFilesetSpec() {
        return Optional.ofNullable(this.gcsFilesetSpec);
    }

    /**
     * Cloud labels attached to the entry. In Data Catalog, you can create and modify labels attached only to custom entries. Synced entries have unmodifiable labels that come from the source system.
     * 
     */
    @Import(name="labels")
    private @Nullable Output<Map<String,String>> labels;

    public Optional<Output<Map<String,String>>> labels() {
        return Optional.ofNullable(this.labels);
    }

    /**
     * The resource this metadata entry refers to. For Google Cloud Platform resources, `linked_resource` is the [Full Resource Name] (https://cloud.google.com/apis/design/resource_names#full_resource_name). For example, the `linked_resource` for a table resource from BigQuery is: `//bigquery.googleapis.com/projects/{PROJECT_ID}/datasets/{DATASET_ID}/tables/{TABLE_ID}` Output only when the entry is one of the types in the `EntryType` enum. For entries with a `user_specified_type`, this field is optional and defaults to an empty string. The resource string must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), periods (.), colons (:), slashes (/), dashes (-), and hashes (#). The maximum size is 200 bytes when encoded in UTF-8.
     * 
     */
    @Import(name="linkedResource")
    private @Nullable Output<String> linkedResource;

    public Optional<Output<String>> linkedResource() {
        return Optional.ofNullable(this.linkedResource);
    }

    @Import(name="location")
    private @Nullable Output<String> location;

    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    @Import(name="project")
    private @Nullable Output<String> project;

    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * Specification that applies to a user-defined function or procedure. Valid only for entries with the `ROUTINE` type.
     * 
     */
    @Import(name="routineSpec")
    private @Nullable Output<GoogleCloudDatacatalogV1RoutineSpecArgs> routineSpec;

    public Optional<Output<GoogleCloudDatacatalogV1RoutineSpecArgs>> routineSpec() {
        return Optional.ofNullable(this.routineSpec);
    }

    /**
     * Schema of the entry. An entry might not have any schema attached to it.
     * 
     */
    @Import(name="schema")
    private @Nullable Output<GoogleCloudDatacatalogV1SchemaArgs> schema;

    public Optional<Output<GoogleCloudDatacatalogV1SchemaArgs>> schema() {
        return Optional.ofNullable(this.schema);
    }

    /**
     * Timestamps from the underlying resource, not from the Data Catalog entry. Output only when the entry has a type listed in the `EntryType` enum. For entries with `user_specified_type`, this field is optional and defaults to an empty timestamp.
     * 
     */
    @Import(name="sourceSystemTimestamps")
    private @Nullable Output<GoogleCloudDatacatalogV1SystemTimestampsArgs> sourceSystemTimestamps;

    public Optional<Output<GoogleCloudDatacatalogV1SystemTimestampsArgs>> sourceSystemTimestamps() {
        return Optional.ofNullable(this.sourceSystemTimestamps);
    }

    /**
     * The type of the entry. Only used for entries with types listed in the `EntryType` enum. Currently, only `FILESET` enum value is allowed. All other entries created in Data Catalog must use the `user_specified_type`.
     * 
     */
    @Import(name="type")
    private @Nullable Output<EntryType> type;

    public Optional<Output<EntryType>> type() {
        return Optional.ofNullable(this.type);
    }

    /**
     * Indicates the entry&#39;s source system that Data Catalog doesn&#39;t automatically integrate with. The `user_specified_system` string has the following limitations: * Is case insensitive. * Must begin with a letter or underscore. * Can only contain letters, numbers, and underscores. * Must be at least 1 character and at most 64 characters long.
     * 
     */
    @Import(name="userSpecifiedSystem")
    private @Nullable Output<String> userSpecifiedSystem;

    public Optional<Output<String>> userSpecifiedSystem() {
        return Optional.ofNullable(this.userSpecifiedSystem);
    }

    /**
     * Custom entry type that doesn&#39;t match any of the values allowed for input and listed in the `EntryType` enum. When creating an entry, first check the type values in the enum. If there are no appropriate types for the new entry, provide a custom value, for example, `my_special_type`. The `user_specified_type` string has the following limitations: * Is case insensitive. * Must begin with a letter or underscore. * Can only contain letters, numbers, and underscores. * Must be at least 1 character and at most 64 characters long.
     * 
     */
    @Import(name="userSpecifiedType")
    private @Nullable Output<String> userSpecifiedType;

    public Optional<Output<String>> userSpecifiedType() {
        return Optional.ofNullable(this.userSpecifiedType);
    }

    private EntryArgs() {}

    private EntryArgs(EntryArgs $) {
        this.bigqueryDateShardedSpec = $.bigqueryDateShardedSpec;
        this.bigqueryTableSpec = $.bigqueryTableSpec;
        this.businessContext = $.businessContext;
        this.dataSourceConnectionSpec = $.dataSourceConnectionSpec;
        this.databaseTableSpec = $.databaseTableSpec;
        this.description = $.description;
        this.displayName = $.displayName;
        this.entryGroupId = $.entryGroupId;
        this.entryId = $.entryId;
        this.fullyQualifiedName = $.fullyQualifiedName;
        this.gcsFilesetSpec = $.gcsFilesetSpec;
        this.labels = $.labels;
        this.linkedResource = $.linkedResource;
        this.location = $.location;
        this.project = $.project;
        this.routineSpec = $.routineSpec;
        this.schema = $.schema;
        this.sourceSystemTimestamps = $.sourceSystemTimestamps;
        this.type = $.type;
        this.userSpecifiedSystem = $.userSpecifiedSystem;
        this.userSpecifiedType = $.userSpecifiedType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EntryArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EntryArgs $;

        public Builder() {
            $ = new EntryArgs();
        }

        public Builder(EntryArgs defaults) {
            $ = new EntryArgs(Objects.requireNonNull(defaults));
        }

        public Builder bigqueryDateShardedSpec(@Nullable Output<GoogleCloudDatacatalogV1BigQueryDateShardedSpecArgs> bigqueryDateShardedSpec) {
            $.bigqueryDateShardedSpec = bigqueryDateShardedSpec;
            return this;
        }

        public Builder bigqueryDateShardedSpec(GoogleCloudDatacatalogV1BigQueryDateShardedSpecArgs bigqueryDateShardedSpec) {
            return bigqueryDateShardedSpec(Output.of(bigqueryDateShardedSpec));
        }

        public Builder bigqueryTableSpec(@Nullable Output<GoogleCloudDatacatalogV1BigQueryTableSpecArgs> bigqueryTableSpec) {
            $.bigqueryTableSpec = bigqueryTableSpec;
            return this;
        }

        public Builder bigqueryTableSpec(GoogleCloudDatacatalogV1BigQueryTableSpecArgs bigqueryTableSpec) {
            return bigqueryTableSpec(Output.of(bigqueryTableSpec));
        }

        public Builder businessContext(@Nullable Output<GoogleCloudDatacatalogV1BusinessContextArgs> businessContext) {
            $.businessContext = businessContext;
            return this;
        }

        public Builder businessContext(GoogleCloudDatacatalogV1BusinessContextArgs businessContext) {
            return businessContext(Output.of(businessContext));
        }

        public Builder dataSourceConnectionSpec(@Nullable Output<GoogleCloudDatacatalogV1DataSourceConnectionSpecArgs> dataSourceConnectionSpec) {
            $.dataSourceConnectionSpec = dataSourceConnectionSpec;
            return this;
        }

        public Builder dataSourceConnectionSpec(GoogleCloudDatacatalogV1DataSourceConnectionSpecArgs dataSourceConnectionSpec) {
            return dataSourceConnectionSpec(Output.of(dataSourceConnectionSpec));
        }

        public Builder databaseTableSpec(@Nullable Output<GoogleCloudDatacatalogV1DatabaseTableSpecArgs> databaseTableSpec) {
            $.databaseTableSpec = databaseTableSpec;
            return this;
        }

        public Builder databaseTableSpec(GoogleCloudDatacatalogV1DatabaseTableSpecArgs databaseTableSpec) {
            return databaseTableSpec(Output.of(databaseTableSpec));
        }

        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        public Builder description(String description) {
            return description(Output.of(description));
        }

        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        public Builder entryGroupId(Output<String> entryGroupId) {
            $.entryGroupId = entryGroupId;
            return this;
        }

        public Builder entryGroupId(String entryGroupId) {
            return entryGroupId(Output.of(entryGroupId));
        }

        public Builder entryId(Output<String> entryId) {
            $.entryId = entryId;
            return this;
        }

        public Builder entryId(String entryId) {
            return entryId(Output.of(entryId));
        }

        public Builder fullyQualifiedName(@Nullable Output<String> fullyQualifiedName) {
            $.fullyQualifiedName = fullyQualifiedName;
            return this;
        }

        public Builder fullyQualifiedName(String fullyQualifiedName) {
            return fullyQualifiedName(Output.of(fullyQualifiedName));
        }

        public Builder gcsFilesetSpec(@Nullable Output<GoogleCloudDatacatalogV1GcsFilesetSpecArgs> gcsFilesetSpec) {
            $.gcsFilesetSpec = gcsFilesetSpec;
            return this;
        }

        public Builder gcsFilesetSpec(GoogleCloudDatacatalogV1GcsFilesetSpecArgs gcsFilesetSpec) {
            return gcsFilesetSpec(Output.of(gcsFilesetSpec));
        }

        public Builder labels(@Nullable Output<Map<String,String>> labels) {
            $.labels = labels;
            return this;
        }

        public Builder labels(Map<String,String> labels) {
            return labels(Output.of(labels));
        }

        public Builder linkedResource(@Nullable Output<String> linkedResource) {
            $.linkedResource = linkedResource;
            return this;
        }

        public Builder linkedResource(String linkedResource) {
            return linkedResource(Output.of(linkedResource));
        }

        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        public Builder location(String location) {
            return location(Output.of(location));
        }

        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        public Builder project(String project) {
            return project(Output.of(project));
        }

        public Builder routineSpec(@Nullable Output<GoogleCloudDatacatalogV1RoutineSpecArgs> routineSpec) {
            $.routineSpec = routineSpec;
            return this;
        }

        public Builder routineSpec(GoogleCloudDatacatalogV1RoutineSpecArgs routineSpec) {
            return routineSpec(Output.of(routineSpec));
        }

        public Builder schema(@Nullable Output<GoogleCloudDatacatalogV1SchemaArgs> schema) {
            $.schema = schema;
            return this;
        }

        public Builder schema(GoogleCloudDatacatalogV1SchemaArgs schema) {
            return schema(Output.of(schema));
        }

        public Builder sourceSystemTimestamps(@Nullable Output<GoogleCloudDatacatalogV1SystemTimestampsArgs> sourceSystemTimestamps) {
            $.sourceSystemTimestamps = sourceSystemTimestamps;
            return this;
        }

        public Builder sourceSystemTimestamps(GoogleCloudDatacatalogV1SystemTimestampsArgs sourceSystemTimestamps) {
            return sourceSystemTimestamps(Output.of(sourceSystemTimestamps));
        }

        public Builder type(@Nullable Output<EntryType> type) {
            $.type = type;
            return this;
        }

        public Builder type(EntryType type) {
            return type(Output.of(type));
        }

        public Builder userSpecifiedSystem(@Nullable Output<String> userSpecifiedSystem) {
            $.userSpecifiedSystem = userSpecifiedSystem;
            return this;
        }

        public Builder userSpecifiedSystem(String userSpecifiedSystem) {
            return userSpecifiedSystem(Output.of(userSpecifiedSystem));
        }

        public Builder userSpecifiedType(@Nullable Output<String> userSpecifiedType) {
            $.userSpecifiedType = userSpecifiedType;
            return this;
        }

        public Builder userSpecifiedType(String userSpecifiedType) {
            return userSpecifiedType(Output.of(userSpecifiedType));
        }

        public EntryArgs build() {
            $.entryGroupId = Objects.requireNonNull($.entryGroupId, "expected parameter 'entryGroupId' to be non-null");
            $.entryId = Objects.requireNonNull($.entryId, "expected parameter 'entryId' to be non-null");
            return $;
        }
    }

}
