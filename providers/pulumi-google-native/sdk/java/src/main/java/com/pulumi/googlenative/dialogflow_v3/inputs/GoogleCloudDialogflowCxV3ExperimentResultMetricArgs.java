// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.dialogflow_v3.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.dialogflow_v3.enums.GoogleCloudDialogflowCxV3ExperimentResultMetricCountType;
import com.pulumi.googlenative.dialogflow_v3.enums.GoogleCloudDialogflowCxV3ExperimentResultMetricType;
import com.pulumi.googlenative.dialogflow_v3.inputs.GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalArgs;
import java.lang.Double;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Metric and corresponding confidence intervals.
 * 
 */
public final class GoogleCloudDialogflowCxV3ExperimentResultMetricArgs extends com.pulumi.resources.ResourceArgs {

    public static final GoogleCloudDialogflowCxV3ExperimentResultMetricArgs Empty = new GoogleCloudDialogflowCxV3ExperimentResultMetricArgs();

    /**
     * The probability that the treatment is better than all other treatments in the experiment
     * 
     */
    @Import(name="confidenceInterval")
    private @Nullable Output<GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalArgs> confidenceInterval;

    public Optional<Output<GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalArgs>> confidenceInterval() {
        return Optional.ofNullable(this.confidenceInterval);
    }

    /**
     * Count value of a metric.
     * 
     */
    @Import(name="count")
    private @Nullable Output<Double> count;

    public Optional<Output<Double>> count() {
        return Optional.ofNullable(this.count);
    }

    /**
     * Count-based metric type. Only one of type or count_type is specified in each Metric.
     * 
     */
    @Import(name="countType")
    private @Nullable Output<GoogleCloudDialogflowCxV3ExperimentResultMetricCountType> countType;

    public Optional<Output<GoogleCloudDialogflowCxV3ExperimentResultMetricCountType>> countType() {
        return Optional.ofNullable(this.countType);
    }

    /**
     * Ratio value of a metric.
     * 
     */
    @Import(name="ratio")
    private @Nullable Output<Double> ratio;

    public Optional<Output<Double>> ratio() {
        return Optional.ofNullable(this.ratio);
    }

    /**
     * Ratio-based metric type. Only one of type or count_type is specified in each Metric.
     * 
     */
    @Import(name="type")
    private @Nullable Output<GoogleCloudDialogflowCxV3ExperimentResultMetricType> type;

    public Optional<Output<GoogleCloudDialogflowCxV3ExperimentResultMetricType>> type() {
        return Optional.ofNullable(this.type);
    }

    private GoogleCloudDialogflowCxV3ExperimentResultMetricArgs() {}

    private GoogleCloudDialogflowCxV3ExperimentResultMetricArgs(GoogleCloudDialogflowCxV3ExperimentResultMetricArgs $) {
        this.confidenceInterval = $.confidenceInterval;
        this.count = $.count;
        this.countType = $.countType;
        this.ratio = $.ratio;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GoogleCloudDialogflowCxV3ExperimentResultMetricArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GoogleCloudDialogflowCxV3ExperimentResultMetricArgs $;

        public Builder() {
            $ = new GoogleCloudDialogflowCxV3ExperimentResultMetricArgs();
        }

        public Builder(GoogleCloudDialogflowCxV3ExperimentResultMetricArgs defaults) {
            $ = new GoogleCloudDialogflowCxV3ExperimentResultMetricArgs(Objects.requireNonNull(defaults));
        }

        public Builder confidenceInterval(@Nullable Output<GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalArgs> confidenceInterval) {
            $.confidenceInterval = confidenceInterval;
            return this;
        }

        public Builder confidenceInterval(GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalArgs confidenceInterval) {
            return confidenceInterval(Output.of(confidenceInterval));
        }

        public Builder count(@Nullable Output<Double> count) {
            $.count = count;
            return this;
        }

        public Builder count(Double count) {
            return count(Output.of(count));
        }

        public Builder countType(@Nullable Output<GoogleCloudDialogflowCxV3ExperimentResultMetricCountType> countType) {
            $.countType = countType;
            return this;
        }

        public Builder countType(GoogleCloudDialogflowCxV3ExperimentResultMetricCountType countType) {
            return countType(Output.of(countType));
        }

        public Builder ratio(@Nullable Output<Double> ratio) {
            $.ratio = ratio;
            return this;
        }

        public Builder ratio(Double ratio) {
            return ratio(Output.of(ratio));
        }

        public Builder type(@Nullable Output<GoogleCloudDialogflowCxV3ExperimentResultMetricType> type) {
            $.type = type;
            return this;
        }

        public Builder type(GoogleCloudDialogflowCxV3ExperimentResultMetricType type) {
            return type(Output.of(type));
        }

        public GoogleCloudDialogflowCxV3ExperimentResultMetricArgs build() {
            return $;
        }
    }

}
