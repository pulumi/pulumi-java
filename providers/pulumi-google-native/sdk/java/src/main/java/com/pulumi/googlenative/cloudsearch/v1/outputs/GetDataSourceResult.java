// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.cloudsearch.v1.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.googlenative.cloudsearch.v1.outputs.GSuitePrincipalResponse;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetDataSourceResult {
    /**
     * @return If true, sets the datasource to read-only mode. In read-only mode, the Indexing API rejects any requests to index or delete items in this source. Enabling read-only mode does not stop the processing of previously accepted data.
     * 
     */
    private final Boolean disableModifications;
    /**
     * @return Disable serving any search or assist results.
     * 
     */
    private final Boolean disableServing;
    /**
     * @return Display name of the datasource The maximum length is 300 characters.
     * 
     */
    private final String displayName;
    /**
     * @return List of service accounts that have indexing access.
     * 
     */
    private final List<String> indexingServiceAccounts;
    /**
     * @return This field restricts visibility to items at the datasource level. Items within the datasource are restricted to the union of users and groups included in this field. Note that, this does not ensure access to a specific item, as users need to have ACL permissions on the contained items. This ensures a high level access on the entire datasource, and that the individual items are not shared outside this visibility.
     * 
     */
    private final List<GSuitePrincipalResponse> itemsVisibility;
    /**
     * @return The name of the datasource resource. Format: datasources/{source_id}. The name is ignored when creating a datasource.
     * 
     */
    private final String name;
    /**
     * @return IDs of the Long Running Operations (LROs) currently running for this schema.
     * 
     */
    private final List<String> operationIds;
    /**
     * @return Can a user request to get thumbnail URI for Items indexed in this data source.
     * 
     */
    private final Boolean returnThumbnailUrls;
    /**
     * @return A short name or alias for the source. This value will be used to match the &#39;source&#39; operator. For example, if the short name is *&lt;value&gt;* then queries like *source:&lt;value&gt;* will only return results for this source. The value must be unique across all datasources. The value must only contain alphanumeric characters (a-zA-Z0-9). The value cannot start with &#39;google&#39; and cannot be one of the following: mail, gmail, docs, drive, groups, sites, calendar, hangouts, gplus, keep, people, teams. Its maximum length is 32 characters.
     * 
     */
    private final String shortName;

    @CustomType.Constructor
    private GetDataSourceResult(
        @CustomType.Parameter("disableModifications") Boolean disableModifications,
        @CustomType.Parameter("disableServing") Boolean disableServing,
        @CustomType.Parameter("displayName") String displayName,
        @CustomType.Parameter("indexingServiceAccounts") List<String> indexingServiceAccounts,
        @CustomType.Parameter("itemsVisibility") List<GSuitePrincipalResponse> itemsVisibility,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("operationIds") List<String> operationIds,
        @CustomType.Parameter("returnThumbnailUrls") Boolean returnThumbnailUrls,
        @CustomType.Parameter("shortName") String shortName) {
        this.disableModifications = disableModifications;
        this.disableServing = disableServing;
        this.displayName = displayName;
        this.indexingServiceAccounts = indexingServiceAccounts;
        this.itemsVisibility = itemsVisibility;
        this.name = name;
        this.operationIds = operationIds;
        this.returnThumbnailUrls = returnThumbnailUrls;
        this.shortName = shortName;
    }

    /**
     * @return If true, sets the datasource to read-only mode. In read-only mode, the Indexing API rejects any requests to index or delete items in this source. Enabling read-only mode does not stop the processing of previously accepted data.
     * 
     */
    public Boolean disableModifications() {
        return this.disableModifications;
    }
    /**
     * @return Disable serving any search or assist results.
     * 
     */
    public Boolean disableServing() {
        return this.disableServing;
    }
    /**
     * @return Display name of the datasource The maximum length is 300 characters.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return List of service accounts that have indexing access.
     * 
     */
    public List<String> indexingServiceAccounts() {
        return this.indexingServiceAccounts;
    }
    /**
     * @return This field restricts visibility to items at the datasource level. Items within the datasource are restricted to the union of users and groups included in this field. Note that, this does not ensure access to a specific item, as users need to have ACL permissions on the contained items. This ensures a high level access on the entire datasource, and that the individual items are not shared outside this visibility.
     * 
     */
    public List<GSuitePrincipalResponse> itemsVisibility() {
        return this.itemsVisibility;
    }
    /**
     * @return The name of the datasource resource. Format: datasources/{source_id}. The name is ignored when creating a datasource.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return IDs of the Long Running Operations (LROs) currently running for this schema.
     * 
     */
    public List<String> operationIds() {
        return this.operationIds;
    }
    /**
     * @return Can a user request to get thumbnail URI for Items indexed in this data source.
     * 
     */
    public Boolean returnThumbnailUrls() {
        return this.returnThumbnailUrls;
    }
    /**
     * @return A short name or alias for the source. This value will be used to match the &#39;source&#39; operator. For example, if the short name is *&lt;value&gt;* then queries like *source:&lt;value&gt;* will only return results for this source. The value must be unique across all datasources. The value must only contain alphanumeric characters (a-zA-Z0-9). The value cannot start with &#39;google&#39; and cannot be one of the following: mail, gmail, docs, drive, groups, sites, calendar, hangouts, gplus, keep, people, teams. Its maximum length is 32 characters.
     * 
     */
    public String shortName() {
        return this.shortName;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDataSourceResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Boolean disableModifications;
        private Boolean disableServing;
        private String displayName;
        private List<String> indexingServiceAccounts;
        private List<GSuitePrincipalResponse> itemsVisibility;
        private String name;
        private List<String> operationIds;
        private Boolean returnThumbnailUrls;
        private String shortName;

        public Builder() {
    	      // Empty
        }

        public Builder(GetDataSourceResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.disableModifications = defaults.disableModifications;
    	      this.disableServing = defaults.disableServing;
    	      this.displayName = defaults.displayName;
    	      this.indexingServiceAccounts = defaults.indexingServiceAccounts;
    	      this.itemsVisibility = defaults.itemsVisibility;
    	      this.name = defaults.name;
    	      this.operationIds = defaults.operationIds;
    	      this.returnThumbnailUrls = defaults.returnThumbnailUrls;
    	      this.shortName = defaults.shortName;
        }

        public Builder disableModifications(Boolean disableModifications) {
            this.disableModifications = Objects.requireNonNull(disableModifications);
            return this;
        }
        public Builder disableServing(Boolean disableServing) {
            this.disableServing = Objects.requireNonNull(disableServing);
            return this;
        }
        public Builder displayName(String displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }
        public Builder indexingServiceAccounts(List<String> indexingServiceAccounts) {
            this.indexingServiceAccounts = Objects.requireNonNull(indexingServiceAccounts);
            return this;
        }
        public Builder indexingServiceAccounts(String... indexingServiceAccounts) {
            return indexingServiceAccounts(List.of(indexingServiceAccounts));
        }
        public Builder itemsVisibility(List<GSuitePrincipalResponse> itemsVisibility) {
            this.itemsVisibility = Objects.requireNonNull(itemsVisibility);
            return this;
        }
        public Builder itemsVisibility(GSuitePrincipalResponse... itemsVisibility) {
            return itemsVisibility(List.of(itemsVisibility));
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder operationIds(List<String> operationIds) {
            this.operationIds = Objects.requireNonNull(operationIds);
            return this;
        }
        public Builder operationIds(String... operationIds) {
            return operationIds(List.of(operationIds));
        }
        public Builder returnThumbnailUrls(Boolean returnThumbnailUrls) {
            this.returnThumbnailUrls = Objects.requireNonNull(returnThumbnailUrls);
            return this;
        }
        public Builder shortName(String shortName) {
            this.shortName = Objects.requireNonNull(shortName);
            return this;
        }        public GetDataSourceResult build() {
            return new GetDataSourceResult(disableModifications, disableServing, displayName, indexingServiceAccounts, itemsVisibility, name, operationIds, returnThumbnailUrls, shortName);
        }
    }
}
