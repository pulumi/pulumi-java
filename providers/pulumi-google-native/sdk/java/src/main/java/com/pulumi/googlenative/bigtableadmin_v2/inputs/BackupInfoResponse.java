// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.bigtableadmin_v2.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * Information about a backup.
 * 
 */
public final class BackupInfoResponse extends com.pulumi.resources.InvokeArgs {

    public static final BackupInfoResponse Empty = new BackupInfoResponse();

    /**
     * Name of the backup.
     * 
     */
    @Import(name="backup", required=true)
    private String backup;

    /**
     * @return Name of the backup.
     * 
     */
    public String backup() {
        return this.backup;
    }

    /**
     * This time that the backup was finished. Row data in the backup will be no newer than this timestamp.
     * 
     */
    @Import(name="endTime", required=true)
    private String endTime;

    /**
     * @return This time that the backup was finished. Row data in the backup will be no newer than this timestamp.
     * 
     */
    public String endTime() {
        return this.endTime;
    }

    /**
     * Name of the table the backup was created from.
     * 
     */
    @Import(name="sourceTable", required=true)
    private String sourceTable;

    /**
     * @return Name of the table the backup was created from.
     * 
     */
    public String sourceTable() {
        return this.sourceTable;
    }

    /**
     * The time that the backup was started. Row data in the backup will be no older than this timestamp.
     * 
     */
    @Import(name="startTime", required=true)
    private String startTime;

    /**
     * @return The time that the backup was started. Row data in the backup will be no older than this timestamp.
     * 
     */
    public String startTime() {
        return this.startTime;
    }

    private BackupInfoResponse() {}

    private BackupInfoResponse(BackupInfoResponse $) {
        this.backup = $.backup;
        this.endTime = $.endTime;
        this.sourceTable = $.sourceTable;
        this.startTime = $.startTime;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BackupInfoResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BackupInfoResponse $;

        public Builder() {
            $ = new BackupInfoResponse();
        }

        public Builder(BackupInfoResponse defaults) {
            $ = new BackupInfoResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param backup Name of the backup.
         * 
         * @return builder
         * 
         */
        public Builder backup(String backup) {
            $.backup = backup;
            return this;
        }

        /**
         * @param endTime This time that the backup was finished. Row data in the backup will be no newer than this timestamp.
         * 
         * @return builder
         * 
         */
        public Builder endTime(String endTime) {
            $.endTime = endTime;
            return this;
        }

        /**
         * @param sourceTable Name of the table the backup was created from.
         * 
         * @return builder
         * 
         */
        public Builder sourceTable(String sourceTable) {
            $.sourceTable = sourceTable;
            return this;
        }

        /**
         * @param startTime The time that the backup was started. Row data in the backup will be no older than this timestamp.
         * 
         * @return builder
         * 
         */
        public Builder startTime(String startTime) {
            $.startTime = startTime;
            return this;
        }

        public BackupInfoResponse build() {
            $.backup = Objects.requireNonNull($.backup, "expected parameter 'backup' to be non-null");
            $.endTime = Objects.requireNonNull($.endTime, "expected parameter 'endTime' to be non-null");
            $.sourceTable = Objects.requireNonNull($.sourceTable, "expected parameter 'sourceTable' to be non-null");
            $.startTime = Objects.requireNonNull($.startTime, "expected parameter 'startTime' to be non-null");
            return $;
        }
    }

}
