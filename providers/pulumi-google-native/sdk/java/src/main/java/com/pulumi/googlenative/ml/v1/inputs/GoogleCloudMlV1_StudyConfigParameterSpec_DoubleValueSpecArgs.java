// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.ml.v1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Double;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GoogleCloudMlV1_StudyConfigParameterSpec_DoubleValueSpecArgs extends com.pulumi.resources.ResourceArgs {

    public static final GoogleCloudMlV1_StudyConfigParameterSpec_DoubleValueSpecArgs Empty = new GoogleCloudMlV1_StudyConfigParameterSpec_DoubleValueSpecArgs();

    /**
     * Must be specified if type is `DOUBLE`. Maximum value of the parameter.
     * 
     */
    @Import(name="maxValue")
    private @Nullable Output<Double> maxValue;

    /**
     * @return Must be specified if type is `DOUBLE`. Maximum value of the parameter.
     * 
     */
    public Optional<Output<Double>> maxValue() {
        return Optional.ofNullable(this.maxValue);
    }

    /**
     * Must be specified if type is `DOUBLE`. Minimum value of the parameter.
     * 
     */
    @Import(name="minValue")
    private @Nullable Output<Double> minValue;

    /**
     * @return Must be specified if type is `DOUBLE`. Minimum value of the parameter.
     * 
     */
    public Optional<Output<Double>> minValue() {
        return Optional.ofNullable(this.minValue);
    }

    private GoogleCloudMlV1_StudyConfigParameterSpec_DoubleValueSpecArgs() {}

    private GoogleCloudMlV1_StudyConfigParameterSpec_DoubleValueSpecArgs(GoogleCloudMlV1_StudyConfigParameterSpec_DoubleValueSpecArgs $) {
        this.maxValue = $.maxValue;
        this.minValue = $.minValue;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GoogleCloudMlV1_StudyConfigParameterSpec_DoubleValueSpecArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GoogleCloudMlV1_StudyConfigParameterSpec_DoubleValueSpecArgs $;

        public Builder() {
            $ = new GoogleCloudMlV1_StudyConfigParameterSpec_DoubleValueSpecArgs();
        }

        public Builder(GoogleCloudMlV1_StudyConfigParameterSpec_DoubleValueSpecArgs defaults) {
            $ = new GoogleCloudMlV1_StudyConfigParameterSpec_DoubleValueSpecArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param maxValue Must be specified if type is `DOUBLE`. Maximum value of the parameter.
         * 
         * @return builder
         * 
         */
        public Builder maxValue(@Nullable Output<Double> maxValue) {
            $.maxValue = maxValue;
            return this;
        }

        /**
         * @param maxValue Must be specified if type is `DOUBLE`. Maximum value of the parameter.
         * 
         * @return builder
         * 
         */
        public Builder maxValue(Double maxValue) {
            return maxValue(Output.of(maxValue));
        }

        /**
         * @param minValue Must be specified if type is `DOUBLE`. Minimum value of the parameter.
         * 
         * @return builder
         * 
         */
        public Builder minValue(@Nullable Output<Double> minValue) {
            $.minValue = minValue;
            return this;
        }

        /**
         * @param minValue Must be specified if type is `DOUBLE`. Minimum value of the parameter.
         * 
         * @return builder
         * 
         */
        public Builder minValue(Double minValue) {
            return minValue(Output.of(minValue));
        }

        public GoogleCloudMlV1_StudyConfigParameterSpec_DoubleValueSpecArgs build() {
            return $;
        }
    }

}
