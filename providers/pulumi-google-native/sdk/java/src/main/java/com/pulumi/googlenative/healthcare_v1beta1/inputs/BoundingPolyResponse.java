// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.healthcare_v1beta1.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.healthcare_v1beta1.inputs.VertexResponse;
import java.lang.String;
import java.util.List;
import java.util.Objects;


/**
 * A bounding polygon for the detected image annotation.
 * 
 */
public final class BoundingPolyResponse extends com.pulumi.resources.InvokeArgs {

    public static final BoundingPolyResponse Empty = new BoundingPolyResponse();

    /**
     * A description of this polygon.
     * 
     */
    @Import(name="label", required=true)
    private String label;

    /**
     * @return A description of this polygon.
     * 
     */
    public String label() {
        return this.label;
    }

    /**
     * List of the vertices of this polygon.
     * 
     */
    @Import(name="vertices", required=true)
    private List<VertexResponse> vertices;

    /**
     * @return List of the vertices of this polygon.
     * 
     */
    public List<VertexResponse> vertices() {
        return this.vertices;
    }

    private BoundingPolyResponse() {}

    private BoundingPolyResponse(BoundingPolyResponse $) {
        this.label = $.label;
        this.vertices = $.vertices;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BoundingPolyResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BoundingPolyResponse $;

        public Builder() {
            $ = new BoundingPolyResponse();
        }

        public Builder(BoundingPolyResponse defaults) {
            $ = new BoundingPolyResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param label A description of this polygon.
         * 
         * @return builder
         * 
         */
        public Builder label(String label) {
            $.label = label;
            return this;
        }

        /**
         * @param vertices List of the vertices of this polygon.
         * 
         * @return builder
         * 
         */
        public Builder vertices(List<VertexResponse> vertices) {
            $.vertices = vertices;
            return this;
        }

        /**
         * @param vertices List of the vertices of this polygon.
         * 
         * @return builder
         * 
         */
        public Builder vertices(VertexResponse... vertices) {
            return vertices(List.of(vertices));
        }

        public BoundingPolyResponse build() {
            $.label = Objects.requireNonNull($.label, "expected parameter 'label' to be non-null");
            $.vertices = Objects.requireNonNull($.vertices, "expected parameter 'vertices' to be non-null");
            return $;
        }
    }

}
