// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.run_v1.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;


/**
 * VolumeMount describes a mounting of a Volume within a container.
 * 
 */
public final class VolumeMountResponse extends com.pulumi.resources.InvokeArgs {

    public static final VolumeMountResponse Empty = new VolumeMountResponse();

    /**
     * Path within the container at which the volume should be mounted. Must not contain &#39;:&#39;.
     * 
     */
    @Import(name="mountPath", required=true)
    private String mountPath;

    public String mountPath() {
        return this.mountPath;
    }

    /**
     * The name of the volume. There must be a corresponding Volume with the same name.
     * 
     */
    @Import(name="name", required=true)
    private String name;

    public String name() {
        return this.name;
    }

    /**
     * (Optional) Only true is accepted. Defaults to true.
     * 
     */
    @Import(name="readOnly", required=true)
    private Boolean readOnly;

    public Boolean readOnly() {
        return this.readOnly;
    }

    /**
     * (Optional) Path within the volume from which the container&#39;s volume should be mounted. Defaults to &#34;&#34; (volume&#39;s root).
     * 
     */
    @Import(name="subPath", required=true)
    private String subPath;

    public String subPath() {
        return this.subPath;
    }

    private VolumeMountResponse() {}

    private VolumeMountResponse(VolumeMountResponse $) {
        this.mountPath = $.mountPath;
        this.name = $.name;
        this.readOnly = $.readOnly;
        this.subPath = $.subPath;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VolumeMountResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VolumeMountResponse $;

        public Builder() {
            $ = new VolumeMountResponse();
        }

        public Builder(VolumeMountResponse defaults) {
            $ = new VolumeMountResponse(Objects.requireNonNull(defaults));
        }

        public Builder mountPath(String mountPath) {
            $.mountPath = mountPath;
            return this;
        }

        public Builder name(String name) {
            $.name = name;
            return this;
        }

        public Builder readOnly(Boolean readOnly) {
            $.readOnly = readOnly;
            return this;
        }

        public Builder subPath(String subPath) {
            $.subPath = subPath;
            return this;
        }

        public VolumeMountResponse build() {
            $.mountPath = Objects.requireNonNull($.mountPath, "expected parameter 'mountPath' to be non-null");
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            $.readOnly = Objects.requireNonNull($.readOnly, "expected parameter 'readOnly' to be non-null");
            $.subPath = Objects.requireNonNull($.subPath, "expected parameter 'subPath' to be non-null");
            return $;
        }
    }

}
