// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.deploymentmanager.alpha.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.deploymentmanager.alpha.enums.DiagnosticLevel;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DiagnosticArgs extends com.pulumi.resources.ResourceArgs {

    public static final DiagnosticArgs Empty = new DiagnosticArgs();

    /**
     * JsonPath expression on the resource that if non empty, indicates that this field needs to be extracted as a diagnostic.
     * 
     */
    @Import(name="field")
    private @Nullable Output<String> field;

    /**
     * @return JsonPath expression on the resource that if non empty, indicates that this field needs to be extracted as a diagnostic.
     * 
     */
    public Optional<Output<String>> field() {
        return Optional.ofNullable(this.field);
    }

    /**
     * Level to record this diagnostic.
     * 
     */
    @Import(name="level")
    private @Nullable Output<DiagnosticLevel> level;

    /**
     * @return Level to record this diagnostic.
     * 
     */
    public Optional<Output<DiagnosticLevel>> level() {
        return Optional.ofNullable(this.level);
    }

    private DiagnosticArgs() {}

    private DiagnosticArgs(DiagnosticArgs $) {
        this.field = $.field;
        this.level = $.level;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DiagnosticArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DiagnosticArgs $;

        public Builder() {
            $ = new DiagnosticArgs();
        }

        public Builder(DiagnosticArgs defaults) {
            $ = new DiagnosticArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param field JsonPath expression on the resource that if non empty, indicates that this field needs to be extracted as a diagnostic.
         * 
         * @return builder
         * 
         */
        public Builder field(@Nullable Output<String> field) {
            $.field = field;
            return this;
        }

        /**
         * @param field JsonPath expression on the resource that if non empty, indicates that this field needs to be extracted as a diagnostic.
         * 
         * @return builder
         * 
         */
        public Builder field(String field) {
            return field(Output.of(field));
        }

        /**
         * @param level Level to record this diagnostic.
         * 
         * @return builder
         * 
         */
        public Builder level(@Nullable Output<DiagnosticLevel> level) {
            $.level = level;
            return this;
        }

        /**
         * @param level Level to record this diagnostic.
         * 
         * @return builder
         * 
         */
        public Builder level(DiagnosticLevel level) {
            return level(Output.of(level));
        }

        public DiagnosticArgs build() {
            return $;
        }
    }

}
