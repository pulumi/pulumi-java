// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.dialogflow.v3.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.dialogflow.v3.inputs.GoogleCloudDialogflowCxV3IntentTrainingPhrasePartArgs;
import java.lang.Integer;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Represents an example that the agent is trained on to identify the intent.
 * 
 */
public final class GoogleCloudDialogflowCxV3IntentTrainingPhraseArgs extends com.pulumi.resources.ResourceArgs {

    public static final GoogleCloudDialogflowCxV3IntentTrainingPhraseArgs Empty = new GoogleCloudDialogflowCxV3IntentTrainingPhraseArgs();

    /**
     * The ordered list of training phrase parts. The parts are concatenated in order to form the training phrase. Note: The API does not automatically annotate training phrases like the Dialogflow Console does. Note: Do not forget to include whitespace at part boundaries, so the training phrase is well formatted when the parts are concatenated. If the training phrase does not need to be annotated with parameters, you just need a single part with only the Part.text field set. If you want to annotate the training phrase, you must create multiple parts, where the fields of each part are populated in one of two ways: - `Part.text` is set to a part of the phrase that has no parameters. - `Part.text` is set to a part of the phrase that you want to annotate, and the `parameter_id` field is set.
     * 
     */
    @Import(name="parts", required=true)
    private Output<List<GoogleCloudDialogflowCxV3IntentTrainingPhrasePartArgs>> parts;

    /**
     * @return The ordered list of training phrase parts. The parts are concatenated in order to form the training phrase. Note: The API does not automatically annotate training phrases like the Dialogflow Console does. Note: Do not forget to include whitespace at part boundaries, so the training phrase is well formatted when the parts are concatenated. If the training phrase does not need to be annotated with parameters, you just need a single part with only the Part.text field set. If you want to annotate the training phrase, you must create multiple parts, where the fields of each part are populated in one of two ways: - `Part.text` is set to a part of the phrase that has no parameters. - `Part.text` is set to a part of the phrase that you want to annotate, and the `parameter_id` field is set.
     * 
     */
    public Output<List<GoogleCloudDialogflowCxV3IntentTrainingPhrasePartArgs>> parts() {
        return this.parts;
    }

    /**
     * Indicates how many times this example was added to the intent.
     * 
     */
    @Import(name="repeatCount")
    private @Nullable Output<Integer> repeatCount;

    /**
     * @return Indicates how many times this example was added to the intent.
     * 
     */
    public Optional<Output<Integer>> repeatCount() {
        return Optional.ofNullable(this.repeatCount);
    }

    private GoogleCloudDialogflowCxV3IntentTrainingPhraseArgs() {}

    private GoogleCloudDialogflowCxV3IntentTrainingPhraseArgs(GoogleCloudDialogflowCxV3IntentTrainingPhraseArgs $) {
        this.parts = $.parts;
        this.repeatCount = $.repeatCount;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GoogleCloudDialogflowCxV3IntentTrainingPhraseArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GoogleCloudDialogflowCxV3IntentTrainingPhraseArgs $;

        public Builder() {
            $ = new GoogleCloudDialogflowCxV3IntentTrainingPhraseArgs();
        }

        public Builder(GoogleCloudDialogflowCxV3IntentTrainingPhraseArgs defaults) {
            $ = new GoogleCloudDialogflowCxV3IntentTrainingPhraseArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param parts The ordered list of training phrase parts. The parts are concatenated in order to form the training phrase. Note: The API does not automatically annotate training phrases like the Dialogflow Console does. Note: Do not forget to include whitespace at part boundaries, so the training phrase is well formatted when the parts are concatenated. If the training phrase does not need to be annotated with parameters, you just need a single part with only the Part.text field set. If you want to annotate the training phrase, you must create multiple parts, where the fields of each part are populated in one of two ways: - `Part.text` is set to a part of the phrase that has no parameters. - `Part.text` is set to a part of the phrase that you want to annotate, and the `parameter_id` field is set.
         * 
         * @return builder
         * 
         */
        public Builder parts(Output<List<GoogleCloudDialogflowCxV3IntentTrainingPhrasePartArgs>> parts) {
            $.parts = parts;
            return this;
        }

        /**
         * @param parts The ordered list of training phrase parts. The parts are concatenated in order to form the training phrase. Note: The API does not automatically annotate training phrases like the Dialogflow Console does. Note: Do not forget to include whitespace at part boundaries, so the training phrase is well formatted when the parts are concatenated. If the training phrase does not need to be annotated with parameters, you just need a single part with only the Part.text field set. If you want to annotate the training phrase, you must create multiple parts, where the fields of each part are populated in one of two ways: - `Part.text` is set to a part of the phrase that has no parameters. - `Part.text` is set to a part of the phrase that you want to annotate, and the `parameter_id` field is set.
         * 
         * @return builder
         * 
         */
        public Builder parts(List<GoogleCloudDialogflowCxV3IntentTrainingPhrasePartArgs> parts) {
            return parts(Output.of(parts));
        }

        /**
         * @param parts The ordered list of training phrase parts. The parts are concatenated in order to form the training phrase. Note: The API does not automatically annotate training phrases like the Dialogflow Console does. Note: Do not forget to include whitespace at part boundaries, so the training phrase is well formatted when the parts are concatenated. If the training phrase does not need to be annotated with parameters, you just need a single part with only the Part.text field set. If you want to annotate the training phrase, you must create multiple parts, where the fields of each part are populated in one of two ways: - `Part.text` is set to a part of the phrase that has no parameters. - `Part.text` is set to a part of the phrase that you want to annotate, and the `parameter_id` field is set.
         * 
         * @return builder
         * 
         */
        public Builder parts(GoogleCloudDialogflowCxV3IntentTrainingPhrasePartArgs... parts) {
            return parts(List.of(parts));
        }

        /**
         * @param repeatCount Indicates how many times this example was added to the intent.
         * 
         * @return builder
         * 
         */
        public Builder repeatCount(@Nullable Output<Integer> repeatCount) {
            $.repeatCount = repeatCount;
            return this;
        }

        /**
         * @param repeatCount Indicates how many times this example was added to the intent.
         * 
         * @return builder
         * 
         */
        public Builder repeatCount(Integer repeatCount) {
            return repeatCount(Output.of(repeatCount));
        }

        public GoogleCloudDialogflowCxV3IntentTrainingPhraseArgs build() {
            $.parts = Objects.requireNonNull($.parts, "expected parameter 'parts' to be non-null");
            return $;
        }
    }

}
