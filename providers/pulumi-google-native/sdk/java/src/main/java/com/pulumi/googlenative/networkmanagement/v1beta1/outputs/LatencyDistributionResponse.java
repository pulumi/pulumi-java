// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.networkmanagement.v1beta1.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.googlenative.networkmanagement.v1beta1.outputs.LatencyPercentileResponse;
import java.util.List;
import java.util.Objects;

@CustomType
public final class LatencyDistributionResponse {
    /**
     * @return Representative latency percentiles.
     * 
     */
    private final List<LatencyPercentileResponse> latencyPercentiles;

    @CustomType.Constructor
    private LatencyDistributionResponse(@CustomType.Parameter("latencyPercentiles") List<LatencyPercentileResponse> latencyPercentiles) {
        this.latencyPercentiles = latencyPercentiles;
    }

    /**
     * @return Representative latency percentiles.
     * 
     */
    public List<LatencyPercentileResponse> latencyPercentiles() {
        return this.latencyPercentiles;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(LatencyDistributionResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<LatencyPercentileResponse> latencyPercentiles;

        public Builder() {
    	      // Empty
        }

        public Builder(LatencyDistributionResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.latencyPercentiles = defaults.latencyPercentiles;
        }

        public Builder latencyPercentiles(List<LatencyPercentileResponse> latencyPercentiles) {
            this.latencyPercentiles = Objects.requireNonNull(latencyPercentiles);
            return this;
        }
        public Builder latencyPercentiles(LatencyPercentileResponse... latencyPercentiles) {
            return latencyPercentiles(List.of(latencyPercentiles));
        }        public LatencyDistributionResponse build() {
            return new LatencyDistributionResponse(latencyPercentiles);
        }
    }
}
