// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.billingbudgets_v1beta1.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;


/**
 * AllUpdatesRule defines notifications that are sent based on budget spend and thresholds.
 * 
 */
public final class GoogleCloudBillingBudgetsV1beta1AllUpdatesRuleResponse extends com.pulumi.resources.InvokeArgs {

    public static final GoogleCloudBillingBudgetsV1beta1AllUpdatesRuleResponse Empty = new GoogleCloudBillingBudgetsV1beta1AllUpdatesRuleResponse();

    /**
     * Optional. When set to true, disables default notifications sent when a threshold is exceeded. Default notifications are sent to those with Billing Account Administrator and Billing Account User IAM roles for the target account.
     * 
     */
    @Import(name="disableDefaultIamRecipients", required=true)
    private Boolean disableDefaultIamRecipients;

    public Boolean disableDefaultIamRecipients() {
        return this.disableDefaultIamRecipients;
    }

    /**
     * Optional. Targets to send notifications to when a threshold is exceeded. This is in addition to default recipients who have billing account IAM roles. The value is the full REST resource name of a monitoring notification channel with the form `projects/{project_id}/notificationChannels/{channel_id}`. A maximum of 5 channels are allowed. See https://cloud.google.com/billing/docs/how-to/budgets-notification-recipients for more details.
     * 
     */
    @Import(name="monitoringNotificationChannels", required=true)
    private List<String> monitoringNotificationChannels;

    public List<String> monitoringNotificationChannels() {
        return this.monitoringNotificationChannels;
    }

    /**
     * Optional. The name of the Pub/Sub topic where budget related messages will be published, in the form `projects/{project_id}/topics/{topic_id}`. Updates are sent at regular intervals to the topic. The topic needs to be created before the budget is created; see https://cloud.google.com/billing/docs/how-to/budgets-programmatic-notifications for more details. Caller is expected to have `pubsub.topics.setIamPolicy` permission on the topic when it&#39;s set for a budget, otherwise, the API call will fail with PERMISSION_DENIED. See https://cloud.google.com/billing/docs/how-to/budgets-programmatic-notifications#permissions_required_for_this_task for more details on Pub/Sub roles and permissions.
     * 
     */
    @Import(name="pubsubTopic", required=true)
    private String pubsubTopic;

    public String pubsubTopic() {
        return this.pubsubTopic;
    }

    /**
     * Optional. Required when AllUpdatesRule.pubsub_topic is set. The schema version of the notification sent to AllUpdatesRule.pubsub_topic. Only &#34;1.0&#34; is accepted. It represents the JSON schema as defined in https://cloud.google.com/billing/docs/how-to/budgets-programmatic-notifications#notification_format.
     * 
     */
    @Import(name="schemaVersion", required=true)
    private String schemaVersion;

    public String schemaVersion() {
        return this.schemaVersion;
    }

    private GoogleCloudBillingBudgetsV1beta1AllUpdatesRuleResponse() {}

    private GoogleCloudBillingBudgetsV1beta1AllUpdatesRuleResponse(GoogleCloudBillingBudgetsV1beta1AllUpdatesRuleResponse $) {
        this.disableDefaultIamRecipients = $.disableDefaultIamRecipients;
        this.monitoringNotificationChannels = $.monitoringNotificationChannels;
        this.pubsubTopic = $.pubsubTopic;
        this.schemaVersion = $.schemaVersion;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GoogleCloudBillingBudgetsV1beta1AllUpdatesRuleResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GoogleCloudBillingBudgetsV1beta1AllUpdatesRuleResponse $;

        public Builder() {
            $ = new GoogleCloudBillingBudgetsV1beta1AllUpdatesRuleResponse();
        }

        public Builder(GoogleCloudBillingBudgetsV1beta1AllUpdatesRuleResponse defaults) {
            $ = new GoogleCloudBillingBudgetsV1beta1AllUpdatesRuleResponse(Objects.requireNonNull(defaults));
        }

        public Builder disableDefaultIamRecipients(Boolean disableDefaultIamRecipients) {
            $.disableDefaultIamRecipients = disableDefaultIamRecipients;
            return this;
        }

        public Builder monitoringNotificationChannels(List<String> monitoringNotificationChannels) {
            $.monitoringNotificationChannels = monitoringNotificationChannels;
            return this;
        }

        public Builder monitoringNotificationChannels(String... monitoringNotificationChannels) {
            return monitoringNotificationChannels(List.of(monitoringNotificationChannels));
        }

        public Builder pubsubTopic(String pubsubTopic) {
            $.pubsubTopic = pubsubTopic;
            return this;
        }

        public Builder schemaVersion(String schemaVersion) {
            $.schemaVersion = schemaVersion;
            return this;
        }

        public GoogleCloudBillingBudgetsV1beta1AllUpdatesRuleResponse build() {
            $.disableDefaultIamRecipients = Objects.requireNonNull($.disableDefaultIamRecipients, "expected parameter 'disableDefaultIamRecipients' to be non-null");
            $.monitoringNotificationChannels = Objects.requireNonNull($.monitoringNotificationChannels, "expected parameter 'monitoringNotificationChannels' to be non-null");
            $.pubsubTopic = Objects.requireNonNull($.pubsubTopic, "expected parameter 'pubsubTopic' to be non-null");
            $.schemaVersion = Objects.requireNonNull($.schemaVersion, "expected parameter 'schemaVersion' to be non-null");
            return $;
        }
    }

}
