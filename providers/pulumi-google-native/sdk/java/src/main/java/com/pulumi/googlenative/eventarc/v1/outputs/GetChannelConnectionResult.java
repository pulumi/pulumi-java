// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.eventarc.v1.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetChannelConnectionResult {
    /**
     * @return Input only. Activation token for the channel. The token will be used during the creation of ChannelConnection to bind the channel with the provider project. This field will not be stored in the provider resource.
     * 
     */
    private final String activationToken;
    /**
     * @return The name of the connected subscriber Channel. This is a weak reference to avoid cross project and cross accounts references. This must be in `projects/{project}/location/{location}/channels/{channel_id}` format.
     * 
     */
    private final String channel;
    /**
     * @return The creation time.
     * 
     */
    private final String createTime;
    /**
     * @return The name of the connection.
     * 
     */
    private final String name;
    /**
     * @return Server assigned ID of the resource. The server guarantees uniqueness and immutability until deleted.
     * 
     */
    private final String uid;
    /**
     * @return The last-modified time.
     * 
     */
    private final String updateTime;

    @CustomType.Constructor
    private GetChannelConnectionResult(
        @CustomType.Parameter("activationToken") String activationToken,
        @CustomType.Parameter("channel") String channel,
        @CustomType.Parameter("createTime") String createTime,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("uid") String uid,
        @CustomType.Parameter("updateTime") String updateTime) {
        this.activationToken = activationToken;
        this.channel = channel;
        this.createTime = createTime;
        this.name = name;
        this.uid = uid;
        this.updateTime = updateTime;
    }

    /**
     * @return Input only. Activation token for the channel. The token will be used during the creation of ChannelConnection to bind the channel with the provider project. This field will not be stored in the provider resource.
     * 
     */
    public String activationToken() {
        return this.activationToken;
    }
    /**
     * @return The name of the connected subscriber Channel. This is a weak reference to avoid cross project and cross accounts references. This must be in `projects/{project}/location/{location}/channels/{channel_id}` format.
     * 
     */
    public String channel() {
        return this.channel;
    }
    /**
     * @return The creation time.
     * 
     */
    public String createTime() {
        return this.createTime;
    }
    /**
     * @return The name of the connection.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Server assigned ID of the resource. The server guarantees uniqueness and immutability until deleted.
     * 
     */
    public String uid() {
        return this.uid;
    }
    /**
     * @return The last-modified time.
     * 
     */
    public String updateTime() {
        return this.updateTime;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetChannelConnectionResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String activationToken;
        private String channel;
        private String createTime;
        private String name;
        private String uid;
        private String updateTime;

        public Builder() {
    	      // Empty
        }

        public Builder(GetChannelConnectionResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.activationToken = defaults.activationToken;
    	      this.channel = defaults.channel;
    	      this.createTime = defaults.createTime;
    	      this.name = defaults.name;
    	      this.uid = defaults.uid;
    	      this.updateTime = defaults.updateTime;
        }

        public Builder activationToken(String activationToken) {
            this.activationToken = Objects.requireNonNull(activationToken);
            return this;
        }
        public Builder channel(String channel) {
            this.channel = Objects.requireNonNull(channel);
            return this;
        }
        public Builder createTime(String createTime) {
            this.createTime = Objects.requireNonNull(createTime);
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder uid(String uid) {
            this.uid = Objects.requireNonNull(uid);
            return this;
        }
        public Builder updateTime(String updateTime) {
            this.updateTime = Objects.requireNonNull(updateTime);
            return this;
        }        public GetChannelConnectionResult build() {
            return new GetChannelConnectionResult(activationToken, channel, createTime, name, uid, updateTime);
        }
    }
}
