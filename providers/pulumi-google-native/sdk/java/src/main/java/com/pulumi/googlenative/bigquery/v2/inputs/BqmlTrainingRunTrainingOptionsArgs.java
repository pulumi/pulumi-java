// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.bigquery.v2.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * [Output-only, Beta] Training options used by this training run. These options are mutable for subsequent training runs. Default values are explicitly stored for options not specified in the input query of the first training run. For subsequent training runs, any option not explicitly specified in the input query will be copied from the previous training run.
 * 
 */
public final class BqmlTrainingRunTrainingOptionsArgs extends com.pulumi.resources.ResourceArgs {

    public static final BqmlTrainingRunTrainingOptionsArgs Empty = new BqmlTrainingRunTrainingOptionsArgs();

    @Import(name="earlyStop")
    private @Nullable Output<Boolean> earlyStop;

    public Optional<Output<Boolean>> earlyStop() {
        return Optional.ofNullable(this.earlyStop);
    }

    @Import(name="l1Reg")
    private @Nullable Output<Double> l1Reg;

    public Optional<Output<Double>> l1Reg() {
        return Optional.ofNullable(this.l1Reg);
    }

    @Import(name="l2Reg")
    private @Nullable Output<Double> l2Reg;

    public Optional<Output<Double>> l2Reg() {
        return Optional.ofNullable(this.l2Reg);
    }

    @Import(name="learnRate")
    private @Nullable Output<Double> learnRate;

    public Optional<Output<Double>> learnRate() {
        return Optional.ofNullable(this.learnRate);
    }

    @Import(name="learnRateStrategy")
    private @Nullable Output<String> learnRateStrategy;

    public Optional<Output<String>> learnRateStrategy() {
        return Optional.ofNullable(this.learnRateStrategy);
    }

    @Import(name="lineSearchInitLearnRate")
    private @Nullable Output<Double> lineSearchInitLearnRate;

    public Optional<Output<Double>> lineSearchInitLearnRate() {
        return Optional.ofNullable(this.lineSearchInitLearnRate);
    }

    @Import(name="maxIteration")
    private @Nullable Output<String> maxIteration;

    public Optional<Output<String>> maxIteration() {
        return Optional.ofNullable(this.maxIteration);
    }

    @Import(name="minRelProgress")
    private @Nullable Output<Double> minRelProgress;

    public Optional<Output<Double>> minRelProgress() {
        return Optional.ofNullable(this.minRelProgress);
    }

    @Import(name="warmStart")
    private @Nullable Output<Boolean> warmStart;

    public Optional<Output<Boolean>> warmStart() {
        return Optional.ofNullable(this.warmStart);
    }

    private BqmlTrainingRunTrainingOptionsArgs() {}

    private BqmlTrainingRunTrainingOptionsArgs(BqmlTrainingRunTrainingOptionsArgs $) {
        this.earlyStop = $.earlyStop;
        this.l1Reg = $.l1Reg;
        this.l2Reg = $.l2Reg;
        this.learnRate = $.learnRate;
        this.learnRateStrategy = $.learnRateStrategy;
        this.lineSearchInitLearnRate = $.lineSearchInitLearnRate;
        this.maxIteration = $.maxIteration;
        this.minRelProgress = $.minRelProgress;
        this.warmStart = $.warmStart;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BqmlTrainingRunTrainingOptionsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BqmlTrainingRunTrainingOptionsArgs $;

        public Builder() {
            $ = new BqmlTrainingRunTrainingOptionsArgs();
        }

        public Builder(BqmlTrainingRunTrainingOptionsArgs defaults) {
            $ = new BqmlTrainingRunTrainingOptionsArgs(Objects.requireNonNull(defaults));
        }

        public Builder earlyStop(@Nullable Output<Boolean> earlyStop) {
            $.earlyStop = earlyStop;
            return this;
        }

        public Builder earlyStop(Boolean earlyStop) {
            return earlyStop(Output.of(earlyStop));
        }

        public Builder l1Reg(@Nullable Output<Double> l1Reg) {
            $.l1Reg = l1Reg;
            return this;
        }

        public Builder l1Reg(Double l1Reg) {
            return l1Reg(Output.of(l1Reg));
        }

        public Builder l2Reg(@Nullable Output<Double> l2Reg) {
            $.l2Reg = l2Reg;
            return this;
        }

        public Builder l2Reg(Double l2Reg) {
            return l2Reg(Output.of(l2Reg));
        }

        public Builder learnRate(@Nullable Output<Double> learnRate) {
            $.learnRate = learnRate;
            return this;
        }

        public Builder learnRate(Double learnRate) {
            return learnRate(Output.of(learnRate));
        }

        public Builder learnRateStrategy(@Nullable Output<String> learnRateStrategy) {
            $.learnRateStrategy = learnRateStrategy;
            return this;
        }

        public Builder learnRateStrategy(String learnRateStrategy) {
            return learnRateStrategy(Output.of(learnRateStrategy));
        }

        public Builder lineSearchInitLearnRate(@Nullable Output<Double> lineSearchInitLearnRate) {
            $.lineSearchInitLearnRate = lineSearchInitLearnRate;
            return this;
        }

        public Builder lineSearchInitLearnRate(Double lineSearchInitLearnRate) {
            return lineSearchInitLearnRate(Output.of(lineSearchInitLearnRate));
        }

        public Builder maxIteration(@Nullable Output<String> maxIteration) {
            $.maxIteration = maxIteration;
            return this;
        }

        public Builder maxIteration(String maxIteration) {
            return maxIteration(Output.of(maxIteration));
        }

        public Builder minRelProgress(@Nullable Output<Double> minRelProgress) {
            $.minRelProgress = minRelProgress;
            return this;
        }

        public Builder minRelProgress(Double minRelProgress) {
            return minRelProgress(Output.of(minRelProgress));
        }

        public Builder warmStart(@Nullable Output<Boolean> warmStart) {
            $.warmStart = warmStart;
            return this;
        }

        public Builder warmStart(Boolean warmStart) {
            return warmStart(Output.of(warmStart));
        }

        public BqmlTrainingRunTrainingOptionsArgs build() {
            return $;
        }
    }

}
