// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.redis_v1.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.redis_v1.inputs.WeeklyMaintenanceWindowResponse;
import java.lang.String;
import java.util.List;
import java.util.Objects;


/**
 * Maintenance policy for an instance.
 * 
 */
public final class MaintenancePolicyResponse extends com.pulumi.resources.InvokeArgs {

    public static final MaintenancePolicyResponse Empty = new MaintenancePolicyResponse();

    /**
     * The time when the policy was created.
     * 
     */
    @Import(name="createTime", required=true)
      private final String createTime;

    public String createTime() {
        return this.createTime;
    }

    /**
     * Optional. Description of what this policy is for. Create/Update methods return INVALID_ARGUMENT if the length is greater than 512.
     * 
     */
    @Import(name="description", required=true)
      private final String description;

    public String description() {
        return this.description;
    }

    /**
     * The time when the policy was last updated.
     * 
     */
    @Import(name="updateTime", required=true)
      private final String updateTime;

    public String updateTime() {
        return this.updateTime;
    }

    /**
     * Optional. Maintenance window that is applied to resources covered by this policy. Minimum 1. For the current version, the maximum number of weekly_window is expected to be one.
     * 
     */
    @Import(name="weeklyMaintenanceWindow", required=true)
      private final List<WeeklyMaintenanceWindowResponse> weeklyMaintenanceWindow;

    public List<WeeklyMaintenanceWindowResponse> weeklyMaintenanceWindow() {
        return this.weeklyMaintenanceWindow;
    }

    public MaintenancePolicyResponse(
        String createTime,
        String description,
        String updateTime,
        List<WeeklyMaintenanceWindowResponse> weeklyMaintenanceWindow) {
        this.createTime = Objects.requireNonNull(createTime, "expected parameter 'createTime' to be non-null");
        this.description = Objects.requireNonNull(description, "expected parameter 'description' to be non-null");
        this.updateTime = Objects.requireNonNull(updateTime, "expected parameter 'updateTime' to be non-null");
        this.weeklyMaintenanceWindow = Objects.requireNonNull(weeklyMaintenanceWindow, "expected parameter 'weeklyMaintenanceWindow' to be non-null");
    }

    private MaintenancePolicyResponse() {
        this.createTime = null;
        this.description = null;
        this.updateTime = null;
        this.weeklyMaintenanceWindow = List.of();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MaintenancePolicyResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String createTime;
        private String description;
        private String updateTime;
        private List<WeeklyMaintenanceWindowResponse> weeklyMaintenanceWindow;

        public Builder() {
    	      // Empty
        }

        public Builder(MaintenancePolicyResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.createTime = defaults.createTime;
    	      this.description = defaults.description;
    	      this.updateTime = defaults.updateTime;
    	      this.weeklyMaintenanceWindow = defaults.weeklyMaintenanceWindow;
        }

        public Builder createTime(String createTime) {
            this.createTime = Objects.requireNonNull(createTime);
            return this;
        }
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        public Builder updateTime(String updateTime) {
            this.updateTime = Objects.requireNonNull(updateTime);
            return this;
        }
        public Builder weeklyMaintenanceWindow(List<WeeklyMaintenanceWindowResponse> weeklyMaintenanceWindow) {
            this.weeklyMaintenanceWindow = Objects.requireNonNull(weeklyMaintenanceWindow);
            return this;
        }
        public Builder weeklyMaintenanceWindow(WeeklyMaintenanceWindowResponse... weeklyMaintenanceWindow) {
            return weeklyMaintenanceWindow(List.of(weeklyMaintenanceWindow));
        }        public MaintenancePolicyResponse build() {
            return new MaintenancePolicyResponse(createTime, description, updateTime, weeklyMaintenanceWindow);
        }
    }
}
