// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.certificatemanager.v1.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class ProvisioningIssueResponse {
    /**
     * @return Human readable explanation about the issue. Provided to help address the configuration issues. Not guaranteed to be stable. For programmatic access use Reason enum.
     * 
     */
    private final String details;
    /**
     * @return Reason for provisioning failures.
     * 
     */
    private final String reason;

    @CustomType.Constructor
    private ProvisioningIssueResponse(
        @CustomType.Parameter("details") String details,
        @CustomType.Parameter("reason") String reason) {
        this.details = details;
        this.reason = reason;
    }

    /**
     * @return Human readable explanation about the issue. Provided to help address the configuration issues. Not guaranteed to be stable. For programmatic access use Reason enum.
     * 
     */
    public String details() {
        return this.details;
    }
    /**
     * @return Reason for provisioning failures.
     * 
     */
    public String reason() {
        return this.reason;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ProvisioningIssueResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String details;
        private String reason;

        public Builder() {
    	      // Empty
        }

        public Builder(ProvisioningIssueResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.details = defaults.details;
    	      this.reason = defaults.reason;
        }

        public Builder details(String details) {
            this.details = Objects.requireNonNull(details);
            return this;
        }
        public Builder reason(String reason) {
            this.reason = Objects.requireNonNull(reason);
            return this;
        }        public ProvisioningIssueResponse build() {
            return new ProvisioningIssueResponse(details, reason);
        }
    }
}
