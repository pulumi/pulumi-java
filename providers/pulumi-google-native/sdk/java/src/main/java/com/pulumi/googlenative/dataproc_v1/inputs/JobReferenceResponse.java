// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.dataproc_v1.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * Encapsulates the full scoping used to reference a job.
 * 
 */
public final class JobReferenceResponse extends com.pulumi.resources.InvokeArgs {

    public static final JobReferenceResponse Empty = new JobReferenceResponse();

    /**
     * Optional. The job ID, which must be unique within the project.The ID must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), or hyphens (-). The maximum length is 100 characters.If not specified by the caller, the job ID will be provided by the server.
     * 
     */
    @Import(name="jobId", required=true)
    private String jobId;

    public String jobId() {
        return this.jobId;
    }

    /**
     * Optional. The ID of the Google Cloud Platform project that the job belongs to. If specified, must match the request project ID.
     * 
     */
    @Import(name="project", required=true)
    private String project;

    public String project() {
        return this.project;
    }

    private JobReferenceResponse() {}

    private JobReferenceResponse(JobReferenceResponse $) {
        this.jobId = $.jobId;
        this.project = $.project;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(JobReferenceResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private JobReferenceResponse $;

        public Builder() {
            $ = new JobReferenceResponse();
        }

        public Builder(JobReferenceResponse defaults) {
            $ = new JobReferenceResponse(Objects.requireNonNull(defaults));
        }

        public Builder jobId(String jobId) {
            $.jobId = jobId;
            return this;
        }

        public Builder project(String project) {
            $.project = project;
            return this;
        }

        public JobReferenceResponse build() {
            $.jobId = Objects.requireNonNull($.jobId, "expected parameter 'jobId' to be non-null");
            $.project = Objects.requireNonNull($.project, "expected parameter 'project' to be non-null");
            return $;
        }
    }

}
