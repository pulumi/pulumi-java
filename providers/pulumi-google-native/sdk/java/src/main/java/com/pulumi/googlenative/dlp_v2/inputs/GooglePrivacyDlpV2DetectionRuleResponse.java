// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.dlp_v2.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.dlp_v2.inputs.GooglePrivacyDlpV2HotwordRuleResponse;
import java.util.Objects;


/**
 * Deprecated; use `InspectionRuleSet` instead. Rule for modifying a `CustomInfoType` to alter behavior under certain circumstances, depending on the specific details of the rule. Not supported for the `surrogate_type` custom infoType.
 * 
 */
public final class GooglePrivacyDlpV2DetectionRuleResponse extends com.pulumi.resources.InvokeArgs {

    public static final GooglePrivacyDlpV2DetectionRuleResponse Empty = new GooglePrivacyDlpV2DetectionRuleResponse();

    /**
     * Hotword-based detection rule.
     * 
     */
    @Import(name="hotwordRule", required=true)
    private GooglePrivacyDlpV2HotwordRuleResponse hotwordRule;

    public GooglePrivacyDlpV2HotwordRuleResponse hotwordRule() {
        return this.hotwordRule;
    }

    private GooglePrivacyDlpV2DetectionRuleResponse() {}

    private GooglePrivacyDlpV2DetectionRuleResponse(GooglePrivacyDlpV2DetectionRuleResponse $) {
        this.hotwordRule = $.hotwordRule;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GooglePrivacyDlpV2DetectionRuleResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GooglePrivacyDlpV2DetectionRuleResponse $;

        public Builder() {
            $ = new GooglePrivacyDlpV2DetectionRuleResponse();
        }

        public Builder(GooglePrivacyDlpV2DetectionRuleResponse defaults) {
            $ = new GooglePrivacyDlpV2DetectionRuleResponse(Objects.requireNonNull(defaults));
        }

        public Builder hotwordRule(GooglePrivacyDlpV2HotwordRuleResponse hotwordRule) {
            $.hotwordRule = hotwordRule;
            return this;
        }

        public GooglePrivacyDlpV2DetectionRuleResponse build() {
            $.hotwordRule = Objects.requireNonNull($.hotwordRule, "expected parameter 'hotwordRule' to be non-null");
            return $;
        }
    }

}
