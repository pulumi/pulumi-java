// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.dlp_v2.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.dlp_v2.inputs.GooglePrivacyDlpV2AuxiliaryTableResponse;
import com.pulumi.googlenative.dlp_v2.inputs.GooglePrivacyDlpV2TaggedFieldResponse;
import java.lang.String;
import java.util.List;
import java.util.Objects;


/**
 * Reidentifiability metric. This corresponds to a risk model similar to what is called &#34;journalist risk&#34; in the literature, except the attack dataset is statistically modeled instead of being perfectly known. This can be done using publicly available data (like the US Census), or using a custom statistical model (indicated as one or several BigQuery tables), or by extrapolating from the distribution of values in the input dataset.
 * 
 */
public final class GooglePrivacyDlpV2KMapEstimationConfigResponse extends com.pulumi.resources.InvokeArgs {

    public static final GooglePrivacyDlpV2KMapEstimationConfigResponse Empty = new GooglePrivacyDlpV2KMapEstimationConfigResponse();

    /**
     * Several auxiliary tables can be used in the analysis. Each custom_tag used to tag a quasi-identifiers column must appear in exactly one column of one auxiliary table.
     * 
     */
    @Import(name="auxiliaryTables", required=true)
    private List<GooglePrivacyDlpV2AuxiliaryTableResponse> auxiliaryTables;

    /**
     * @return Several auxiliary tables can be used in the analysis. Each custom_tag used to tag a quasi-identifiers column must appear in exactly one column of one auxiliary table.
     * 
     */
    public List<GooglePrivacyDlpV2AuxiliaryTableResponse> auxiliaryTables() {
        return this.auxiliaryTables;
    }

    /**
     * Fields considered to be quasi-identifiers. No two columns can have the same tag.
     * 
     */
    @Import(name="quasiIds", required=true)
    private List<GooglePrivacyDlpV2TaggedFieldResponse> quasiIds;

    /**
     * @return Fields considered to be quasi-identifiers. No two columns can have the same tag.
     * 
     */
    public List<GooglePrivacyDlpV2TaggedFieldResponse> quasiIds() {
        return this.quasiIds;
    }

    /**
     * ISO 3166-1 alpha-2 region code to use in the statistical modeling. Set if no column is tagged with a region-specific InfoType (like US_ZIP_5) or a region code.
     * 
     */
    @Import(name="regionCode", required=true)
    private String regionCode;

    /**
     * @return ISO 3166-1 alpha-2 region code to use in the statistical modeling. Set if no column is tagged with a region-specific InfoType (like US_ZIP_5) or a region code.
     * 
     */
    public String regionCode() {
        return this.regionCode;
    }

    private GooglePrivacyDlpV2KMapEstimationConfigResponse() {}

    private GooglePrivacyDlpV2KMapEstimationConfigResponse(GooglePrivacyDlpV2KMapEstimationConfigResponse $) {
        this.auxiliaryTables = $.auxiliaryTables;
        this.quasiIds = $.quasiIds;
        this.regionCode = $.regionCode;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GooglePrivacyDlpV2KMapEstimationConfigResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GooglePrivacyDlpV2KMapEstimationConfigResponse $;

        public Builder() {
            $ = new GooglePrivacyDlpV2KMapEstimationConfigResponse();
        }

        public Builder(GooglePrivacyDlpV2KMapEstimationConfigResponse defaults) {
            $ = new GooglePrivacyDlpV2KMapEstimationConfigResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param auxiliaryTables Several auxiliary tables can be used in the analysis. Each custom_tag used to tag a quasi-identifiers column must appear in exactly one column of one auxiliary table.
         * 
         * @return builder
         * 
         */
        public Builder auxiliaryTables(List<GooglePrivacyDlpV2AuxiliaryTableResponse> auxiliaryTables) {
            $.auxiliaryTables = auxiliaryTables;
            return this;
        }

        /**
         * @param auxiliaryTables Several auxiliary tables can be used in the analysis. Each custom_tag used to tag a quasi-identifiers column must appear in exactly one column of one auxiliary table.
         * 
         * @return builder
         * 
         */
        public Builder auxiliaryTables(GooglePrivacyDlpV2AuxiliaryTableResponse... auxiliaryTables) {
            return auxiliaryTables(List.of(auxiliaryTables));
        }

        /**
         * @param quasiIds Fields considered to be quasi-identifiers. No two columns can have the same tag.
         * 
         * @return builder
         * 
         */
        public Builder quasiIds(List<GooglePrivacyDlpV2TaggedFieldResponse> quasiIds) {
            $.quasiIds = quasiIds;
            return this;
        }

        /**
         * @param quasiIds Fields considered to be quasi-identifiers. No two columns can have the same tag.
         * 
         * @return builder
         * 
         */
        public Builder quasiIds(GooglePrivacyDlpV2TaggedFieldResponse... quasiIds) {
            return quasiIds(List.of(quasiIds));
        }

        /**
         * @param regionCode ISO 3166-1 alpha-2 region code to use in the statistical modeling. Set if no column is tagged with a region-specific InfoType (like US_ZIP_5) or a region code.
         * 
         * @return builder
         * 
         */
        public Builder regionCode(String regionCode) {
            $.regionCode = regionCode;
            return this;
        }

        public GooglePrivacyDlpV2KMapEstimationConfigResponse build() {
            $.auxiliaryTables = Objects.requireNonNull($.auxiliaryTables, "expected parameter 'auxiliaryTables' to be non-null");
            $.quasiIds = Objects.requireNonNull($.quasiIds, "expected parameter 'quasiIds' to be non-null");
            $.regionCode = Objects.requireNonNull($.regionCode, "expected parameter 'regionCode' to be non-null");
            return $;
        }
    }

}
