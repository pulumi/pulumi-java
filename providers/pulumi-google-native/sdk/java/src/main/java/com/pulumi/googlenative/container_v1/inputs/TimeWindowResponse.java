// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.container_v1.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.container_v1.inputs.MaintenanceExclusionOptionsResponse;
import java.lang.String;
import java.util.Objects;


/**
 * Represents an arbitrary window of time.
 * 
 */
public final class TimeWindowResponse extends com.pulumi.resources.InvokeArgs {

    public static final TimeWindowResponse Empty = new TimeWindowResponse();

    /**
     * The time that the window ends. The end time should take place after the start time.
     * 
     */
    @Import(name="endTime", required=true)
    private String endTime;

    /**
     * @return The time that the window ends. The end time should take place after the start time.
     * 
     */
    public String endTime() {
        return this.endTime;
    }

    /**
     * MaintenanceExclusionOptions provides maintenance exclusion related options.
     * 
     */
    @Import(name="maintenanceExclusionOptions", required=true)
    private MaintenanceExclusionOptionsResponse maintenanceExclusionOptions;

    /**
     * @return MaintenanceExclusionOptions provides maintenance exclusion related options.
     * 
     */
    public MaintenanceExclusionOptionsResponse maintenanceExclusionOptions() {
        return this.maintenanceExclusionOptions;
    }

    /**
     * The time that the window first starts.
     * 
     */
    @Import(name="startTime", required=true)
    private String startTime;

    /**
     * @return The time that the window first starts.
     * 
     */
    public String startTime() {
        return this.startTime;
    }

    private TimeWindowResponse() {}

    private TimeWindowResponse(TimeWindowResponse $) {
        this.endTime = $.endTime;
        this.maintenanceExclusionOptions = $.maintenanceExclusionOptions;
        this.startTime = $.startTime;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TimeWindowResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TimeWindowResponse $;

        public Builder() {
            $ = new TimeWindowResponse();
        }

        public Builder(TimeWindowResponse defaults) {
            $ = new TimeWindowResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param endTime The time that the window ends. The end time should take place after the start time.
         * 
         * @return builder
         * 
         */
        public Builder endTime(String endTime) {
            $.endTime = endTime;
            return this;
        }

        /**
         * @param maintenanceExclusionOptions MaintenanceExclusionOptions provides maintenance exclusion related options.
         * 
         * @return builder
         * 
         */
        public Builder maintenanceExclusionOptions(MaintenanceExclusionOptionsResponse maintenanceExclusionOptions) {
            $.maintenanceExclusionOptions = maintenanceExclusionOptions;
            return this;
        }

        /**
         * @param startTime The time that the window first starts.
         * 
         * @return builder
         * 
         */
        public Builder startTime(String startTime) {
            $.startTime = startTime;
            return this;
        }

        public TimeWindowResponse build() {
            $.endTime = Objects.requireNonNull($.endTime, "expected parameter 'endTime' to be non-null");
            $.maintenanceExclusionOptions = Objects.requireNonNull($.maintenanceExclusionOptions, "expected parameter 'maintenanceExclusionOptions' to be non-null");
            $.startTime = Objects.requireNonNull($.startTime, "expected parameter 'startTime' to be non-null");
            return $;
        }
    }

}
