// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.storage.v1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.storage.v1.inputs.BucketIamConfigurationBucketPolicyOnlyArgs;
import com.pulumi.googlenative.storage.v1.inputs.BucketIamConfigurationUniformBucketLevelAccessArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The bucket&#39;s IAM configuration.
 * 
 */
public final class BucketIamConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final BucketIamConfigurationArgs Empty = new BucketIamConfigurationArgs();

    /**
     * The bucket&#39;s uniform bucket-level access configuration. The feature was formerly known as Bucket Policy Only. For backward compatibility, this field will be populated with identical information as the uniformBucketLevelAccess field. We recommend using the uniformBucketLevelAccess field to enable and disable the feature.
     * 
     */
    @Import(name="bucketPolicyOnly")
    private @Nullable Output<BucketIamConfigurationBucketPolicyOnlyArgs> bucketPolicyOnly;

    /**
     * @return The bucket&#39;s uniform bucket-level access configuration. The feature was formerly known as Bucket Policy Only. For backward compatibility, this field will be populated with identical information as the uniformBucketLevelAccess field. We recommend using the uniformBucketLevelAccess field to enable and disable the feature.
     * 
     */
    public Optional<Output<BucketIamConfigurationBucketPolicyOnlyArgs>> bucketPolicyOnly() {
        return Optional.ofNullable(this.bucketPolicyOnly);
    }

    /**
     * The bucket&#39;s Public Access Prevention configuration. Currently, &#39;inherited&#39; and &#39;enforced&#39; are supported.
     * 
     */
    @Import(name="publicAccessPrevention")
    private @Nullable Output<String> publicAccessPrevention;

    /**
     * @return The bucket&#39;s Public Access Prevention configuration. Currently, &#39;inherited&#39; and &#39;enforced&#39; are supported.
     * 
     */
    public Optional<Output<String>> publicAccessPrevention() {
        return Optional.ofNullable(this.publicAccessPrevention);
    }

    /**
     * The bucket&#39;s uniform bucket-level access configuration.
     * 
     */
    @Import(name="uniformBucketLevelAccess")
    private @Nullable Output<BucketIamConfigurationUniformBucketLevelAccessArgs> uniformBucketLevelAccess;

    /**
     * @return The bucket&#39;s uniform bucket-level access configuration.
     * 
     */
    public Optional<Output<BucketIamConfigurationUniformBucketLevelAccessArgs>> uniformBucketLevelAccess() {
        return Optional.ofNullable(this.uniformBucketLevelAccess);
    }

    private BucketIamConfigurationArgs() {}

    private BucketIamConfigurationArgs(BucketIamConfigurationArgs $) {
        this.bucketPolicyOnly = $.bucketPolicyOnly;
        this.publicAccessPrevention = $.publicAccessPrevention;
        this.uniformBucketLevelAccess = $.uniformBucketLevelAccess;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BucketIamConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BucketIamConfigurationArgs $;

        public Builder() {
            $ = new BucketIamConfigurationArgs();
        }

        public Builder(BucketIamConfigurationArgs defaults) {
            $ = new BucketIamConfigurationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param bucketPolicyOnly The bucket&#39;s uniform bucket-level access configuration. The feature was formerly known as Bucket Policy Only. For backward compatibility, this field will be populated with identical information as the uniformBucketLevelAccess field. We recommend using the uniformBucketLevelAccess field to enable and disable the feature.
         * 
         * @return builder
         * 
         */
        public Builder bucketPolicyOnly(@Nullable Output<BucketIamConfigurationBucketPolicyOnlyArgs> bucketPolicyOnly) {
            $.bucketPolicyOnly = bucketPolicyOnly;
            return this;
        }

        /**
         * @param bucketPolicyOnly The bucket&#39;s uniform bucket-level access configuration. The feature was formerly known as Bucket Policy Only. For backward compatibility, this field will be populated with identical information as the uniformBucketLevelAccess field. We recommend using the uniformBucketLevelAccess field to enable and disable the feature.
         * 
         * @return builder
         * 
         */
        public Builder bucketPolicyOnly(BucketIamConfigurationBucketPolicyOnlyArgs bucketPolicyOnly) {
            return bucketPolicyOnly(Output.of(bucketPolicyOnly));
        }

        /**
         * @param publicAccessPrevention The bucket&#39;s Public Access Prevention configuration. Currently, &#39;inherited&#39; and &#39;enforced&#39; are supported.
         * 
         * @return builder
         * 
         */
        public Builder publicAccessPrevention(@Nullable Output<String> publicAccessPrevention) {
            $.publicAccessPrevention = publicAccessPrevention;
            return this;
        }

        /**
         * @param publicAccessPrevention The bucket&#39;s Public Access Prevention configuration. Currently, &#39;inherited&#39; and &#39;enforced&#39; are supported.
         * 
         * @return builder
         * 
         */
        public Builder publicAccessPrevention(String publicAccessPrevention) {
            return publicAccessPrevention(Output.of(publicAccessPrevention));
        }

        /**
         * @param uniformBucketLevelAccess The bucket&#39;s uniform bucket-level access configuration.
         * 
         * @return builder
         * 
         */
        public Builder uniformBucketLevelAccess(@Nullable Output<BucketIamConfigurationUniformBucketLevelAccessArgs> uniformBucketLevelAccess) {
            $.uniformBucketLevelAccess = uniformBucketLevelAccess;
            return this;
        }

        /**
         * @param uniformBucketLevelAccess The bucket&#39;s uniform bucket-level access configuration.
         * 
         * @return builder
         * 
         */
        public Builder uniformBucketLevelAccess(BucketIamConfigurationUniformBucketLevelAccessArgs uniformBucketLevelAccess) {
            return uniformBucketLevelAccess(Output.of(uniformBucketLevelAccess));
        }

        public BucketIamConfigurationArgs build() {
            return $;
        }
    }

}
