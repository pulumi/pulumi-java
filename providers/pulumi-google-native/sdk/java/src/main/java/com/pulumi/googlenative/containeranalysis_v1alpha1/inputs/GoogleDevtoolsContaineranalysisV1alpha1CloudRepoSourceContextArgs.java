// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.containeranalysis_v1alpha1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.containeranalysis_v1alpha1.inputs.GoogleDevtoolsContaineranalysisV1alpha1AliasContextArgs;
import com.pulumi.googlenative.containeranalysis_v1alpha1.inputs.GoogleDevtoolsContaineranalysisV1alpha1RepoIdArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * A CloudRepoSourceContext denotes a particular revision in a Google Cloud Source Repo.
 * 
 */
public final class GoogleDevtoolsContaineranalysisV1alpha1CloudRepoSourceContextArgs extends com.pulumi.resources.ResourceArgs {

    public static final GoogleDevtoolsContaineranalysisV1alpha1CloudRepoSourceContextArgs Empty = new GoogleDevtoolsContaineranalysisV1alpha1CloudRepoSourceContextArgs();

    /**
     * An alias, which may be a branch or tag.
     * 
     */
    @Import(name="aliasContext")
    private @Nullable Output<GoogleDevtoolsContaineranalysisV1alpha1AliasContextArgs> aliasContext;

    public Optional<Output<GoogleDevtoolsContaineranalysisV1alpha1AliasContextArgs>> aliasContext() {
        return Optional.ofNullable(this.aliasContext);
    }

    /**
     * The ID of the repo.
     * 
     */
    @Import(name="repoId")
    private @Nullable Output<GoogleDevtoolsContaineranalysisV1alpha1RepoIdArgs> repoId;

    public Optional<Output<GoogleDevtoolsContaineranalysisV1alpha1RepoIdArgs>> repoId() {
        return Optional.ofNullable(this.repoId);
    }

    /**
     * A revision ID.
     * 
     */
    @Import(name="revisionId")
    private @Nullable Output<String> revisionId;

    public Optional<Output<String>> revisionId() {
        return Optional.ofNullable(this.revisionId);
    }

    private GoogleDevtoolsContaineranalysisV1alpha1CloudRepoSourceContextArgs() {}

    private GoogleDevtoolsContaineranalysisV1alpha1CloudRepoSourceContextArgs(GoogleDevtoolsContaineranalysisV1alpha1CloudRepoSourceContextArgs $) {
        this.aliasContext = $.aliasContext;
        this.repoId = $.repoId;
        this.revisionId = $.revisionId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GoogleDevtoolsContaineranalysisV1alpha1CloudRepoSourceContextArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GoogleDevtoolsContaineranalysisV1alpha1CloudRepoSourceContextArgs $;

        public Builder() {
            $ = new GoogleDevtoolsContaineranalysisV1alpha1CloudRepoSourceContextArgs();
        }

        public Builder(GoogleDevtoolsContaineranalysisV1alpha1CloudRepoSourceContextArgs defaults) {
            $ = new GoogleDevtoolsContaineranalysisV1alpha1CloudRepoSourceContextArgs(Objects.requireNonNull(defaults));
        }

        public Builder aliasContext(@Nullable Output<GoogleDevtoolsContaineranalysisV1alpha1AliasContextArgs> aliasContext) {
            $.aliasContext = aliasContext;
            return this;
        }

        public Builder aliasContext(GoogleDevtoolsContaineranalysisV1alpha1AliasContextArgs aliasContext) {
            return aliasContext(Output.of(aliasContext));
        }

        public Builder repoId(@Nullable Output<GoogleDevtoolsContaineranalysisV1alpha1RepoIdArgs> repoId) {
            $.repoId = repoId;
            return this;
        }

        public Builder repoId(GoogleDevtoolsContaineranalysisV1alpha1RepoIdArgs repoId) {
            return repoId(Output.of(repoId));
        }

        public Builder revisionId(@Nullable Output<String> revisionId) {
            $.revisionId = revisionId;
            return this;
        }

        public Builder revisionId(String revisionId) {
            return revisionId(Output.of(revisionId));
        }

        public GoogleDevtoolsContaineranalysisV1alpha1CloudRepoSourceContextArgs build() {
            return $;
        }
    }

}
