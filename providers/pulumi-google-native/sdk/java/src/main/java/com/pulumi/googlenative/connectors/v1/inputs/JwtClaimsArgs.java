// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.connectors.v1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * JWT claims used for the jwt-bearer authorization grant.
 * 
 */
public final class JwtClaimsArgs extends com.pulumi.resources.ResourceArgs {

    public static final JwtClaimsArgs Empty = new JwtClaimsArgs();

    /**
     * Value for the &#34;aud&#34; claim.
     * 
     */
    @Import(name="audience")
    private @Nullable Output<String> audience;

    /**
     * @return Value for the &#34;aud&#34; claim.
     * 
     */
    public Optional<Output<String>> audience() {
        return Optional.ofNullable(this.audience);
    }

    /**
     * Value for the &#34;iss&#34; claim.
     * 
     */
    @Import(name="issuer")
    private @Nullable Output<String> issuer;

    /**
     * @return Value for the &#34;iss&#34; claim.
     * 
     */
    public Optional<Output<String>> issuer() {
        return Optional.ofNullable(this.issuer);
    }

    /**
     * Value for the &#34;sub&#34; claim.
     * 
     */
    @Import(name="subject")
    private @Nullable Output<String> subject;

    /**
     * @return Value for the &#34;sub&#34; claim.
     * 
     */
    public Optional<Output<String>> subject() {
        return Optional.ofNullable(this.subject);
    }

    private JwtClaimsArgs() {}

    private JwtClaimsArgs(JwtClaimsArgs $) {
        this.audience = $.audience;
        this.issuer = $.issuer;
        this.subject = $.subject;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(JwtClaimsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private JwtClaimsArgs $;

        public Builder() {
            $ = new JwtClaimsArgs();
        }

        public Builder(JwtClaimsArgs defaults) {
            $ = new JwtClaimsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param audience Value for the &#34;aud&#34; claim.
         * 
         * @return builder
         * 
         */
        public Builder audience(@Nullable Output<String> audience) {
            $.audience = audience;
            return this;
        }

        /**
         * @param audience Value for the &#34;aud&#34; claim.
         * 
         * @return builder
         * 
         */
        public Builder audience(String audience) {
            return audience(Output.of(audience));
        }

        /**
         * @param issuer Value for the &#34;iss&#34; claim.
         * 
         * @return builder
         * 
         */
        public Builder issuer(@Nullable Output<String> issuer) {
            $.issuer = issuer;
            return this;
        }

        /**
         * @param issuer Value for the &#34;iss&#34; claim.
         * 
         * @return builder
         * 
         */
        public Builder issuer(String issuer) {
            return issuer(Output.of(issuer));
        }

        /**
         * @param subject Value for the &#34;sub&#34; claim.
         * 
         * @return builder
         * 
         */
        public Builder subject(@Nullable Output<String> subject) {
            $.subject = subject;
            return this;
        }

        /**
         * @param subject Value for the &#34;sub&#34; claim.
         * 
         * @return builder
         * 
         */
        public Builder subject(String subject) {
            return subject(Output.of(subject));
        }

        public JwtClaimsArgs build() {
            return $;
        }
    }

}
