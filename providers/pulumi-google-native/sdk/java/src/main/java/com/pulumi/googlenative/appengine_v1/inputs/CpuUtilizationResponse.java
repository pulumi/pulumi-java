// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.appengine_v1.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;


/**
 * Target scaling by CPU usage.
 * 
 */
public final class CpuUtilizationResponse extends com.pulumi.resources.InvokeArgs {

    public static final CpuUtilizationResponse Empty = new CpuUtilizationResponse();

    /**
     * Period of time over which CPU utilization is calculated.
     * 
     */
    @Import(name="aggregationWindowLength", required=true)
    private String aggregationWindowLength;

    public String aggregationWindowLength() {
        return this.aggregationWindowLength;
    }

    /**
     * Target CPU utilization ratio to maintain when scaling. Must be between 0 and 1.
     * 
     */
    @Import(name="targetUtilization", required=true)
    private Double targetUtilization;

    public Double targetUtilization() {
        return this.targetUtilization;
    }

    private CpuUtilizationResponse() {}

    private CpuUtilizationResponse(CpuUtilizationResponse $) {
        this.aggregationWindowLength = $.aggregationWindowLength;
        this.targetUtilization = $.targetUtilization;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CpuUtilizationResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CpuUtilizationResponse $;

        public Builder() {
            $ = new CpuUtilizationResponse();
        }

        public Builder(CpuUtilizationResponse defaults) {
            $ = new CpuUtilizationResponse(Objects.requireNonNull(defaults));
        }

        public Builder aggregationWindowLength(String aggregationWindowLength) {
            $.aggregationWindowLength = aggregationWindowLength;
            return this;
        }

        public Builder targetUtilization(Double targetUtilization) {
            $.targetUtilization = targetUtilization;
            return this;
        }

        public CpuUtilizationResponse build() {
            $.aggregationWindowLength = Objects.requireNonNull($.aggregationWindowLength, "expected parameter 'aggregationWindowLength' to be non-null");
            $.targetUtilization = Objects.requireNonNull($.targetUtilization, "expected parameter 'targetUtilization' to be non-null");
            return $;
        }
    }

}
