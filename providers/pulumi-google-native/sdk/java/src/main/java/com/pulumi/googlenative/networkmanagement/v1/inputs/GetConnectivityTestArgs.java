// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.networkmanagement.v1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetConnectivityTestArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetConnectivityTestArgs Empty = new GetConnectivityTestArgs();

    @Import(name="connectivityTestId", required=true)
    private Output<String> connectivityTestId;

    public Output<String> connectivityTestId() {
        return this.connectivityTestId;
    }

    @Import(name="project")
    private @Nullable Output<String> project;

    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    private GetConnectivityTestArgs() {}

    private GetConnectivityTestArgs(GetConnectivityTestArgs $) {
        this.connectivityTestId = $.connectivityTestId;
        this.project = $.project;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetConnectivityTestArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetConnectivityTestArgs $;

        public Builder() {
            $ = new GetConnectivityTestArgs();
        }

        public Builder(GetConnectivityTestArgs defaults) {
            $ = new GetConnectivityTestArgs(Objects.requireNonNull(defaults));
        }

        public Builder connectivityTestId(Output<String> connectivityTestId) {
            $.connectivityTestId = connectivityTestId;
            return this;
        }

        public Builder connectivityTestId(String connectivityTestId) {
            return connectivityTestId(Output.of(connectivityTestId));
        }

        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        public Builder project(String project) {
            return project(Output.of(project));
        }

        public GetConnectivityTestArgs build() {
            $.connectivityTestId = Objects.requireNonNull($.connectivityTestId, "expected parameter 'connectivityTestId' to be non-null");
            return $;
        }
    }

}
