// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.compute.beta.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class NetworkEndpointGroupCloudFunctionResponse {
    /**
     * @return A user-defined name of the Cloud Function. The function name is case-sensitive and must be 1-63 characters long. Example value: &#34;func1&#34;.
     * 
     */
    private final String function;
    /**
     * @return A template to parse function field from a request URL. URL mask allows for routing to multiple Cloud Functions without having to create multiple Network Endpoint Groups and backend services. For example, request URLs &#34; mydomain.com/function1&#34; and &#34;mydomain.com/function2&#34; can be backed by the same Serverless NEG with URL mask &#34;/&#34;. The URL mask will parse them to { function = &#34;function1&#34; } and { function = &#34;function2&#34; } respectively.
     * 
     */
    private final String urlMask;

    @CustomType.Constructor
    private NetworkEndpointGroupCloudFunctionResponse(
        @CustomType.Parameter("function") String function,
        @CustomType.Parameter("urlMask") String urlMask) {
        this.function = function;
        this.urlMask = urlMask;
    }

    /**
     * @return A user-defined name of the Cloud Function. The function name is case-sensitive and must be 1-63 characters long. Example value: &#34;func1&#34;.
     * 
     */
    public String function() {
        return this.function;
    }
    /**
     * @return A template to parse function field from a request URL. URL mask allows for routing to multiple Cloud Functions without having to create multiple Network Endpoint Groups and backend services. For example, request URLs &#34; mydomain.com/function1&#34; and &#34;mydomain.com/function2&#34; can be backed by the same Serverless NEG with URL mask &#34;/&#34;. The URL mask will parse them to { function = &#34;function1&#34; } and { function = &#34;function2&#34; } respectively.
     * 
     */
    public String urlMask() {
        return this.urlMask;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(NetworkEndpointGroupCloudFunctionResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String function;
        private String urlMask;

        public Builder() {
    	      // Empty
        }

        public Builder(NetworkEndpointGroupCloudFunctionResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.function = defaults.function;
    	      this.urlMask = defaults.urlMask;
        }

        public Builder function(String function) {
            this.function = Objects.requireNonNull(function);
            return this;
        }
        public Builder urlMask(String urlMask) {
            this.urlMask = Objects.requireNonNull(urlMask);
            return this;
        }        public NetworkEndpointGroupCloudFunctionResponse build() {
            return new NetworkEndpointGroupCloudFunctionResponse(function, urlMask);
        }
    }
}
