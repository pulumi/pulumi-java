// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.dialogflow.v2beta1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * Plays audio from a file in Telephony Gateway.
 * 
 */
public final class GoogleCloudDialogflowV2beta1IntentMessageTelephonyPlayAudioArgs extends com.pulumi.resources.ResourceArgs {

    public static final GoogleCloudDialogflowV2beta1IntentMessageTelephonyPlayAudioArgs Empty = new GoogleCloudDialogflowV2beta1IntentMessageTelephonyPlayAudioArgs();

    /**
     * URI to a Google Cloud Storage object containing the audio to play, e.g., &#34;gs://bucket/object&#34;. The object must contain a single channel (mono) of linear PCM audio (2 bytes / sample) at 8kHz. This object must be readable by the `service-@gcp-sa-dialogflow.iam.gserviceaccount.com` service account where is the number of the Telephony Gateway project (usually the same as the Dialogflow agent project). If the Google Cloud Storage bucket is in the Telephony Gateway project, this permission is added by default when enabling the Dialogflow V2 API. For audio from other sources, consider using the `TelephonySynthesizeSpeech` message with SSML.
     * 
     */
    @Import(name="audioUri", required=true)
    private Output<String> audioUri;

    /**
     * @return URI to a Google Cloud Storage object containing the audio to play, e.g., &#34;gs://bucket/object&#34;. The object must contain a single channel (mono) of linear PCM audio (2 bytes / sample) at 8kHz. This object must be readable by the `service-@gcp-sa-dialogflow.iam.gserviceaccount.com` service account where is the number of the Telephony Gateway project (usually the same as the Dialogflow agent project). If the Google Cloud Storage bucket is in the Telephony Gateway project, this permission is added by default when enabling the Dialogflow V2 API. For audio from other sources, consider using the `TelephonySynthesizeSpeech` message with SSML.
     * 
     */
    public Output<String> audioUri() {
        return this.audioUri;
    }

    private GoogleCloudDialogflowV2beta1IntentMessageTelephonyPlayAudioArgs() {}

    private GoogleCloudDialogflowV2beta1IntentMessageTelephonyPlayAudioArgs(GoogleCloudDialogflowV2beta1IntentMessageTelephonyPlayAudioArgs $) {
        this.audioUri = $.audioUri;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GoogleCloudDialogflowV2beta1IntentMessageTelephonyPlayAudioArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GoogleCloudDialogflowV2beta1IntentMessageTelephonyPlayAudioArgs $;

        public Builder() {
            $ = new GoogleCloudDialogflowV2beta1IntentMessageTelephonyPlayAudioArgs();
        }

        public Builder(GoogleCloudDialogflowV2beta1IntentMessageTelephonyPlayAudioArgs defaults) {
            $ = new GoogleCloudDialogflowV2beta1IntentMessageTelephonyPlayAudioArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param audioUri URI to a Google Cloud Storage object containing the audio to play, e.g., &#34;gs://bucket/object&#34;. The object must contain a single channel (mono) of linear PCM audio (2 bytes / sample) at 8kHz. This object must be readable by the `service-@gcp-sa-dialogflow.iam.gserviceaccount.com` service account where is the number of the Telephony Gateway project (usually the same as the Dialogflow agent project). If the Google Cloud Storage bucket is in the Telephony Gateway project, this permission is added by default when enabling the Dialogflow V2 API. For audio from other sources, consider using the `TelephonySynthesizeSpeech` message with SSML.
         * 
         * @return builder
         * 
         */
        public Builder audioUri(Output<String> audioUri) {
            $.audioUri = audioUri;
            return this;
        }

        /**
         * @param audioUri URI to a Google Cloud Storage object containing the audio to play, e.g., &#34;gs://bucket/object&#34;. The object must contain a single channel (mono) of linear PCM audio (2 bytes / sample) at 8kHz. This object must be readable by the `service-@gcp-sa-dialogflow.iam.gserviceaccount.com` service account where is the number of the Telephony Gateway project (usually the same as the Dialogflow agent project). If the Google Cloud Storage bucket is in the Telephony Gateway project, this permission is added by default when enabling the Dialogflow V2 API. For audio from other sources, consider using the `TelephonySynthesizeSpeech` message with SSML.
         * 
         * @return builder
         * 
         */
        public Builder audioUri(String audioUri) {
            return audioUri(Output.of(audioUri));
        }

        public GoogleCloudDialogflowV2beta1IntentMessageTelephonyPlayAudioArgs build() {
            $.audioUri = Objects.requireNonNull($.audioUri, "expected parameter 'audioUri' to be non-null");
            return $;
        }
    }

}
