// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.secretmanager_v1beta1.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.secretmanager_v1beta1.inputs.AutomaticResponse;
import com.pulumi.googlenative.secretmanager_v1beta1.inputs.UserManagedResponse;
import java.util.Objects;


/**
 * A policy that defines the replication configuration of data.
 * 
 */
public final class ReplicationResponse extends com.pulumi.resources.InvokeArgs {

    public static final ReplicationResponse Empty = new ReplicationResponse();

    /**
     * The Secret will automatically be replicated without any restrictions.
     * 
     */
    @Import(name="automatic", required=true)
    private AutomaticResponse automatic;

    public AutomaticResponse automatic() {
        return this.automatic;
    }

    /**
     * The Secret will only be replicated into the locations specified.
     * 
     */
    @Import(name="userManaged", required=true)
    private UserManagedResponse userManaged;

    public UserManagedResponse userManaged() {
        return this.userManaged;
    }

    private ReplicationResponse() {}

    private ReplicationResponse(ReplicationResponse $) {
        this.automatic = $.automatic;
        this.userManaged = $.userManaged;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ReplicationResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ReplicationResponse $;

        public Builder() {
            $ = new ReplicationResponse();
        }

        public Builder(ReplicationResponse defaults) {
            $ = new ReplicationResponse(Objects.requireNonNull(defaults));
        }

        public Builder automatic(AutomaticResponse automatic) {
            $.automatic = automatic;
            return this;
        }

        public Builder userManaged(UserManagedResponse userManaged) {
            $.userManaged = userManaged;
            return this;
        }

        public ReplicationResponse build() {
            $.automatic = Objects.requireNonNull($.automatic, "expected parameter 'automatic' to be non-null");
            $.userManaged = Objects.requireNonNull($.userManaged, "expected parameter 'userManaged' to be non-null");
            return $;
        }
    }

}
