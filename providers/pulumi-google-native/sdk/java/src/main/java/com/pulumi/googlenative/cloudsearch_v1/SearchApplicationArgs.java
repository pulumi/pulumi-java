// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.cloudsearch_v1;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.cloudsearch_v1.inputs.DataSourceRestrictionArgs;
import com.pulumi.googlenative.cloudsearch_v1.inputs.FacetOptionsArgs;
import com.pulumi.googlenative.cloudsearch_v1.inputs.QueryInterpretationConfigArgs;
import com.pulumi.googlenative.cloudsearch_v1.inputs.ScoringConfigArgs;
import com.pulumi.googlenative.cloudsearch_v1.inputs.SortOptionsArgs;
import com.pulumi.googlenative.cloudsearch_v1.inputs.SourceConfigArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SearchApplicationArgs extends com.pulumi.resources.ResourceArgs {

    public static final SearchApplicationArgs Empty = new SearchApplicationArgs();

    /**
     * Retrictions applied to the configurations. The maximum number of elements is 10.
     * 
     */
    @Import(name="dataSourceRestrictions")
    private @Nullable Output<List<DataSourceRestrictionArgs>> dataSourceRestrictions;

    public Optional<Output<List<DataSourceRestrictionArgs>>> dataSourceRestrictions() {
        return Optional.ofNullable(this.dataSourceRestrictions);
    }

    /**
     * The default fields for returning facet results. The sources specified here also have been included in data_source_restrictions above.
     * 
     */
    @Import(name="defaultFacetOptions")
    private @Nullable Output<List<FacetOptionsArgs>> defaultFacetOptions;

    public Optional<Output<List<FacetOptionsArgs>>> defaultFacetOptions() {
        return Optional.ofNullable(this.defaultFacetOptions);
    }

    /**
     * The default options for sorting the search results
     * 
     */
    @Import(name="defaultSortOptions")
    private @Nullable Output<SortOptionsArgs> defaultSortOptions;

    public Optional<Output<SortOptionsArgs>> defaultSortOptions() {
        return Optional.ofNullable(this.defaultSortOptions);
    }

    /**
     * Display name of the Search Application. The maximum length is 300 characters.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * Indicates whether audit logging is on/off for requests made for the search application in query APIs.
     * 
     */
    @Import(name="enableAuditLog")
    private @Nullable Output<Boolean> enableAuditLog;

    public Optional<Output<Boolean>> enableAuditLog() {
        return Optional.ofNullable(this.enableAuditLog);
    }

    /**
     * Name of the Search Application. Format: searchapplications/{application_id}.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The default options for query interpretation
     * 
     */
    @Import(name="queryInterpretationConfig")
    private @Nullable Output<QueryInterpretationConfigArgs> queryInterpretationConfig;

    public Optional<Output<QueryInterpretationConfigArgs>> queryInterpretationConfig() {
        return Optional.ofNullable(this.queryInterpretationConfig);
    }

    /**
     * With each result we should return the URI for its thumbnail (when applicable)
     * 
     */
    @Import(name="returnResultThumbnailUrls")
    private @Nullable Output<Boolean> returnResultThumbnailUrls;

    public Optional<Output<Boolean>> returnResultThumbnailUrls() {
        return Optional.ofNullable(this.returnResultThumbnailUrls);
    }

    /**
     * Configuration for ranking results.
     * 
     */
    @Import(name="scoringConfig")
    private @Nullable Output<ScoringConfigArgs> scoringConfig;

    public Optional<Output<ScoringConfigArgs>> scoringConfig() {
        return Optional.ofNullable(this.scoringConfig);
    }

    /**
     * Configuration for a sources specified in data_source_restrictions.
     * 
     */
    @Import(name="sourceConfig")
    private @Nullable Output<List<SourceConfigArgs>> sourceConfig;

    public Optional<Output<List<SourceConfigArgs>>> sourceConfig() {
        return Optional.ofNullable(this.sourceConfig);
    }

    private SearchApplicationArgs() {}

    private SearchApplicationArgs(SearchApplicationArgs $) {
        this.dataSourceRestrictions = $.dataSourceRestrictions;
        this.defaultFacetOptions = $.defaultFacetOptions;
        this.defaultSortOptions = $.defaultSortOptions;
        this.displayName = $.displayName;
        this.enableAuditLog = $.enableAuditLog;
        this.name = $.name;
        this.queryInterpretationConfig = $.queryInterpretationConfig;
        this.returnResultThumbnailUrls = $.returnResultThumbnailUrls;
        this.scoringConfig = $.scoringConfig;
        this.sourceConfig = $.sourceConfig;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SearchApplicationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SearchApplicationArgs $;

        public Builder() {
            $ = new SearchApplicationArgs();
        }

        public Builder(SearchApplicationArgs defaults) {
            $ = new SearchApplicationArgs(Objects.requireNonNull(defaults));
        }

        public Builder dataSourceRestrictions(@Nullable Output<List<DataSourceRestrictionArgs>> dataSourceRestrictions) {
            $.dataSourceRestrictions = dataSourceRestrictions;
            return this;
        }

        public Builder dataSourceRestrictions(List<DataSourceRestrictionArgs> dataSourceRestrictions) {
            return dataSourceRestrictions(Output.of(dataSourceRestrictions));
        }

        public Builder dataSourceRestrictions(DataSourceRestrictionArgs... dataSourceRestrictions) {
            return dataSourceRestrictions(List.of(dataSourceRestrictions));
        }

        public Builder defaultFacetOptions(@Nullable Output<List<FacetOptionsArgs>> defaultFacetOptions) {
            $.defaultFacetOptions = defaultFacetOptions;
            return this;
        }

        public Builder defaultFacetOptions(List<FacetOptionsArgs> defaultFacetOptions) {
            return defaultFacetOptions(Output.of(defaultFacetOptions));
        }

        public Builder defaultFacetOptions(FacetOptionsArgs... defaultFacetOptions) {
            return defaultFacetOptions(List.of(defaultFacetOptions));
        }

        public Builder defaultSortOptions(@Nullable Output<SortOptionsArgs> defaultSortOptions) {
            $.defaultSortOptions = defaultSortOptions;
            return this;
        }

        public Builder defaultSortOptions(SortOptionsArgs defaultSortOptions) {
            return defaultSortOptions(Output.of(defaultSortOptions));
        }

        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        public Builder enableAuditLog(@Nullable Output<Boolean> enableAuditLog) {
            $.enableAuditLog = enableAuditLog;
            return this;
        }

        public Builder enableAuditLog(Boolean enableAuditLog) {
            return enableAuditLog(Output.of(enableAuditLog));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder queryInterpretationConfig(@Nullable Output<QueryInterpretationConfigArgs> queryInterpretationConfig) {
            $.queryInterpretationConfig = queryInterpretationConfig;
            return this;
        }

        public Builder queryInterpretationConfig(QueryInterpretationConfigArgs queryInterpretationConfig) {
            return queryInterpretationConfig(Output.of(queryInterpretationConfig));
        }

        public Builder returnResultThumbnailUrls(@Nullable Output<Boolean> returnResultThumbnailUrls) {
            $.returnResultThumbnailUrls = returnResultThumbnailUrls;
            return this;
        }

        public Builder returnResultThumbnailUrls(Boolean returnResultThumbnailUrls) {
            return returnResultThumbnailUrls(Output.of(returnResultThumbnailUrls));
        }

        public Builder scoringConfig(@Nullable Output<ScoringConfigArgs> scoringConfig) {
            $.scoringConfig = scoringConfig;
            return this;
        }

        public Builder scoringConfig(ScoringConfigArgs scoringConfig) {
            return scoringConfig(Output.of(scoringConfig));
        }

        public Builder sourceConfig(@Nullable Output<List<SourceConfigArgs>> sourceConfig) {
            $.sourceConfig = sourceConfig;
            return this;
        }

        public Builder sourceConfig(List<SourceConfigArgs> sourceConfig) {
            return sourceConfig(Output.of(sourceConfig));
        }

        public Builder sourceConfig(SourceConfigArgs... sourceConfig) {
            return sourceConfig(List.of(sourceConfig));
        }

        public SearchApplicationArgs build() {
            return $;
        }
    }

}
