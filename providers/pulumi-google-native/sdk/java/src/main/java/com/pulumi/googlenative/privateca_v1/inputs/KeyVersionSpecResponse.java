// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.privateca_v1.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * A Cloud KMS key configuration that a CertificateAuthority will use.
 * 
 */
public final class KeyVersionSpecResponse extends com.pulumi.resources.InvokeArgs {

    public static final KeyVersionSpecResponse Empty = new KeyVersionSpecResponse();

    /**
     * The algorithm to use for creating a managed Cloud KMS key for a for a simplified experience. All managed keys will be have their ProtectionLevel as `HSM`.
     * 
     */
    @Import(name="algorithm", required=true)
    private String algorithm;

    /**
     * @return The algorithm to use for creating a managed Cloud KMS key for a for a simplified experience. All managed keys will be have their ProtectionLevel as `HSM`.
     * 
     */
    public String algorithm() {
        return this.algorithm;
    }

    /**
     * The resource name for an existing Cloud KMS CryptoKeyVersion in the format `projects/*{@literal /}locations/*{@literal /}keyRings/*{@literal /}cryptoKeys/*{@literal /}cryptoKeyVersions/*`. This option enables full flexibility in the key&#39;s capabilities and properties.
     * 
     */
    @Import(name="cloudKmsKeyVersion", required=true)
    private String cloudKmsKeyVersion;

    /**
     * @return The resource name for an existing Cloud KMS CryptoKeyVersion in the format `projects/*{@literal /}locations/*{@literal /}keyRings/*{@literal /}cryptoKeys/*{@literal /}cryptoKeyVersions/*`. This option enables full flexibility in the key&#39;s capabilities and properties.
     * 
     */
    public String cloudKmsKeyVersion() {
        return this.cloudKmsKeyVersion;
    }

    private KeyVersionSpecResponse() {}

    private KeyVersionSpecResponse(KeyVersionSpecResponse $) {
        this.algorithm = $.algorithm;
        this.cloudKmsKeyVersion = $.cloudKmsKeyVersion;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(KeyVersionSpecResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private KeyVersionSpecResponse $;

        public Builder() {
            $ = new KeyVersionSpecResponse();
        }

        public Builder(KeyVersionSpecResponse defaults) {
            $ = new KeyVersionSpecResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param algorithm The algorithm to use for creating a managed Cloud KMS key for a for a simplified experience. All managed keys will be have their ProtectionLevel as `HSM`.
         * 
         * @return builder
         * 
         */
        public Builder algorithm(String algorithm) {
            $.algorithm = algorithm;
            return this;
        }

        /**
         * @param cloudKmsKeyVersion The resource name for an existing Cloud KMS CryptoKeyVersion in the format `projects/*{@literal /}locations/*{@literal /}keyRings/*{@literal /}cryptoKeys/*{@literal /}cryptoKeyVersions/*`. This option enables full flexibility in the key&#39;s capabilities and properties.
         * 
         * @return builder
         * 
         */
        public Builder cloudKmsKeyVersion(String cloudKmsKeyVersion) {
            $.cloudKmsKeyVersion = cloudKmsKeyVersion;
            return this;
        }

        public KeyVersionSpecResponse build() {
            $.algorithm = Objects.requireNonNull($.algorithm, "expected parameter 'algorithm' to be non-null");
            $.cloudKmsKeyVersion = Objects.requireNonNull($.cloudKmsKeyVersion, "expected parameter 'cloudKmsKeyVersion' to be non-null");
            return $;
        }
    }

}
