// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.container_v1.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.util.Objects;


/**
 * Parameters for controlling consumption metering.
 * 
 */
public final class ConsumptionMeteringConfigResponse extends com.pulumi.resources.InvokeArgs {

    public static final ConsumptionMeteringConfigResponse Empty = new ConsumptionMeteringConfigResponse();

    /**
     * Whether to enable consumption metering for this cluster. If enabled, a second BigQuery table will be created to hold resource consumption records.
     * 
     */
    @Import(name="enabled", required=true)
    private Boolean enabled;

    /**
     * @return Whether to enable consumption metering for this cluster. If enabled, a second BigQuery table will be created to hold resource consumption records.
     * 
     */
    public Boolean enabled() {
        return this.enabled;
    }

    private ConsumptionMeteringConfigResponse() {}

    private ConsumptionMeteringConfigResponse(ConsumptionMeteringConfigResponse $) {
        this.enabled = $.enabled;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ConsumptionMeteringConfigResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ConsumptionMeteringConfigResponse $;

        public Builder() {
            $ = new ConsumptionMeteringConfigResponse();
        }

        public Builder(ConsumptionMeteringConfigResponse defaults) {
            $ = new ConsumptionMeteringConfigResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param enabled Whether to enable consumption metering for this cluster. If enabled, a second BigQuery table will be created to hold resource consumption records.
         * 
         * @return builder
         * 
         */
        public Builder enabled(Boolean enabled) {
            $.enabled = enabled;
            return this;
        }

        public ConsumptionMeteringConfigResponse build() {
            $.enabled = Objects.requireNonNull($.enabled, "expected parameter 'enabled' to be non-null");
            return $;
        }
    }

}
