// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.ml.v1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetTrialArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetTrialArgs Empty = new GetTrialArgs();

    @Import(name="location", required=true)
    private Output<String> location;

    public Output<String> location() {
        return this.location;
    }

    @Import(name="project")
    private @Nullable Output<String> project;

    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    @Import(name="studyId", required=true)
    private Output<String> studyId;

    public Output<String> studyId() {
        return this.studyId;
    }

    @Import(name="trialId", required=true)
    private Output<String> trialId;

    public Output<String> trialId() {
        return this.trialId;
    }

    private GetTrialArgs() {}

    private GetTrialArgs(GetTrialArgs $) {
        this.location = $.location;
        this.project = $.project;
        this.studyId = $.studyId;
        this.trialId = $.trialId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetTrialArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetTrialArgs $;

        public Builder() {
            $ = new GetTrialArgs();
        }

        public Builder(GetTrialArgs defaults) {
            $ = new GetTrialArgs(Objects.requireNonNull(defaults));
        }

        public Builder location(Output<String> location) {
            $.location = location;
            return this;
        }

        public Builder location(String location) {
            return location(Output.of(location));
        }

        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        public Builder project(String project) {
            return project(Output.of(project));
        }

        public Builder studyId(Output<String> studyId) {
            $.studyId = studyId;
            return this;
        }

        public Builder studyId(String studyId) {
            return studyId(Output.of(studyId));
        }

        public Builder trialId(Output<String> trialId) {
            $.trialId = trialId;
            return this;
        }

        public Builder trialId(String trialId) {
            return trialId(Output.of(trialId));
        }

        public GetTrialArgs build() {
            $.location = Objects.requireNonNull($.location, "expected parameter 'location' to be non-null");
            $.studyId = Objects.requireNonNull($.studyId, "expected parameter 'studyId' to be non-null");
            $.trialId = Objects.requireNonNull($.trialId, "expected parameter 'trialId' to be non-null");
            return $;
        }
    }

}
