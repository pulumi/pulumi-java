// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.compute_beta.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.compute_beta.inputs.FixedOrPercentResponse;
import java.lang.String;
import java.util.Objects;


public final class InstanceGroupManagerVersionResponse extends com.pulumi.resources.InvokeArgs {

    public static final InstanceGroupManagerVersionResponse Empty = new InstanceGroupManagerVersionResponse();

    /**
     * The URL of the instance template that is specified for this managed instance group. The group uses this template to create new instances in the managed instance group until the `targetSize` for this version is reached. The templates for existing instances in the group do not change unless you run recreateInstances, run applyUpdatesToInstances, or set the group&#39;s updatePolicy.type to PROACTIVE; in those cases, existing instances are updated until the `targetSize` for this version is reached.
     * 
     */
    @Import(name="instanceTemplate", required=true)
    private String instanceTemplate;

    /**
     * @return The URL of the instance template that is specified for this managed instance group. The group uses this template to create new instances in the managed instance group until the `targetSize` for this version is reached. The templates for existing instances in the group do not change unless you run recreateInstances, run applyUpdatesToInstances, or set the group&#39;s updatePolicy.type to PROACTIVE; in those cases, existing instances are updated until the `targetSize` for this version is reached.
     * 
     */
    public String instanceTemplate() {
        return this.instanceTemplate;
    }

    /**
     * Name of the version. Unique among all versions in the scope of this managed instance group.
     * 
     */
    @Import(name="name", required=true)
    private String name;

    /**
     * @return Name of the version. Unique among all versions in the scope of this managed instance group.
     * 
     */
    public String name() {
        return this.name;
    }

    /**
     * Specifies the intended number of instances to be created from the instanceTemplate. The final number of instances created from the template will be equal to: - If expressed as a fixed number, the minimum of either targetSize.fixed or instanceGroupManager.targetSize is used. - if expressed as a percent, the targetSize would be (targetSize.percent/100 * InstanceGroupManager.targetSize) If there is a remainder, the number is rounded. If unset, this version will update any remaining instances not updated by another version. Read Starting a canary update for more information.
     * 
     */
    @Import(name="targetSize", required=true)
    private FixedOrPercentResponse targetSize;

    /**
     * @return Specifies the intended number of instances to be created from the instanceTemplate. The final number of instances created from the template will be equal to: - If expressed as a fixed number, the minimum of either targetSize.fixed or instanceGroupManager.targetSize is used. - if expressed as a percent, the targetSize would be (targetSize.percent/100 * InstanceGroupManager.targetSize) If there is a remainder, the number is rounded. If unset, this version will update any remaining instances not updated by another version. Read Starting a canary update for more information.
     * 
     */
    public FixedOrPercentResponse targetSize() {
        return this.targetSize;
    }

    private InstanceGroupManagerVersionResponse() {}

    private InstanceGroupManagerVersionResponse(InstanceGroupManagerVersionResponse $) {
        this.instanceTemplate = $.instanceTemplate;
        this.name = $.name;
        this.targetSize = $.targetSize;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InstanceGroupManagerVersionResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InstanceGroupManagerVersionResponse $;

        public Builder() {
            $ = new InstanceGroupManagerVersionResponse();
        }

        public Builder(InstanceGroupManagerVersionResponse defaults) {
            $ = new InstanceGroupManagerVersionResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param instanceTemplate The URL of the instance template that is specified for this managed instance group. The group uses this template to create new instances in the managed instance group until the `targetSize` for this version is reached. The templates for existing instances in the group do not change unless you run recreateInstances, run applyUpdatesToInstances, or set the group&#39;s updatePolicy.type to PROACTIVE; in those cases, existing instances are updated until the `targetSize` for this version is reached.
         * 
         * @return builder
         * 
         */
        public Builder instanceTemplate(String instanceTemplate) {
            $.instanceTemplate = instanceTemplate;
            return this;
        }

        /**
         * @param name Name of the version. Unique among all versions in the scope of this managed instance group.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            $.name = name;
            return this;
        }

        /**
         * @param targetSize Specifies the intended number of instances to be created from the instanceTemplate. The final number of instances created from the template will be equal to: - If expressed as a fixed number, the minimum of either targetSize.fixed or instanceGroupManager.targetSize is used. - if expressed as a percent, the targetSize would be (targetSize.percent/100 * InstanceGroupManager.targetSize) If there is a remainder, the number is rounded. If unset, this version will update any remaining instances not updated by another version. Read Starting a canary update for more information.
         * 
         * @return builder
         * 
         */
        public Builder targetSize(FixedOrPercentResponse targetSize) {
            $.targetSize = targetSize;
            return this;
        }

        public InstanceGroupManagerVersionResponse build() {
            $.instanceTemplate = Objects.requireNonNull($.instanceTemplate, "expected parameter 'instanceTemplate' to be non-null");
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            $.targetSize = Objects.requireNonNull($.targetSize, "expected parameter 'targetSize' to be non-null");
            return $;
        }
    }

}
