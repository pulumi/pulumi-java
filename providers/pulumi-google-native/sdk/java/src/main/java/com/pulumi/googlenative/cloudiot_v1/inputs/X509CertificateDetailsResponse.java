// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.cloudiot_v1.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * Details of an X.509 certificate. For informational purposes only.
 * 
 */
public final class X509CertificateDetailsResponse extends com.pulumi.resources.InvokeArgs {

    public static final X509CertificateDetailsResponse Empty = new X509CertificateDetailsResponse();

    /**
     * The time the certificate becomes invalid.
     * 
     */
    @Import(name="expiryTime", required=true)
    private String expiryTime;

    public String expiryTime() {
        return this.expiryTime;
    }

    /**
     * The entity that signed the certificate.
     * 
     */
    @Import(name="issuer", required=true)
    private String issuer;

    public String issuer() {
        return this.issuer;
    }

    /**
     * The type of public key in the certificate.
     * 
     */
    @Import(name="publicKeyType", required=true)
    private String publicKeyType;

    public String publicKeyType() {
        return this.publicKeyType;
    }

    /**
     * The algorithm used to sign the certificate.
     * 
     */
    @Import(name="signatureAlgorithm", required=true)
    private String signatureAlgorithm;

    public String signatureAlgorithm() {
        return this.signatureAlgorithm;
    }

    /**
     * The time the certificate becomes valid.
     * 
     */
    @Import(name="startTime", required=true)
    private String startTime;

    public String startTime() {
        return this.startTime;
    }

    /**
     * The entity the certificate and public key belong to.
     * 
     */
    @Import(name="subject", required=true)
    private String subject;

    public String subject() {
        return this.subject;
    }

    private X509CertificateDetailsResponse() {}

    private X509CertificateDetailsResponse(X509CertificateDetailsResponse $) {
        this.expiryTime = $.expiryTime;
        this.issuer = $.issuer;
        this.publicKeyType = $.publicKeyType;
        this.signatureAlgorithm = $.signatureAlgorithm;
        this.startTime = $.startTime;
        this.subject = $.subject;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(X509CertificateDetailsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private X509CertificateDetailsResponse $;

        public Builder() {
            $ = new X509CertificateDetailsResponse();
        }

        public Builder(X509CertificateDetailsResponse defaults) {
            $ = new X509CertificateDetailsResponse(Objects.requireNonNull(defaults));
        }

        public Builder expiryTime(String expiryTime) {
            $.expiryTime = expiryTime;
            return this;
        }

        public Builder issuer(String issuer) {
            $.issuer = issuer;
            return this;
        }

        public Builder publicKeyType(String publicKeyType) {
            $.publicKeyType = publicKeyType;
            return this;
        }

        public Builder signatureAlgorithm(String signatureAlgorithm) {
            $.signatureAlgorithm = signatureAlgorithm;
            return this;
        }

        public Builder startTime(String startTime) {
            $.startTime = startTime;
            return this;
        }

        public Builder subject(String subject) {
            $.subject = subject;
            return this;
        }

        public X509CertificateDetailsResponse build() {
            $.expiryTime = Objects.requireNonNull($.expiryTime, "expected parameter 'expiryTime' to be non-null");
            $.issuer = Objects.requireNonNull($.issuer, "expected parameter 'issuer' to be non-null");
            $.publicKeyType = Objects.requireNonNull($.publicKeyType, "expected parameter 'publicKeyType' to be non-null");
            $.signatureAlgorithm = Objects.requireNonNull($.signatureAlgorithm, "expected parameter 'signatureAlgorithm' to be non-null");
            $.startTime = Objects.requireNonNull($.startTime, "expected parameter 'startTime' to be non-null");
            $.subject = Objects.requireNonNull($.subject, "expected parameter 'subject' to be non-null");
            return $;
        }
    }

}
