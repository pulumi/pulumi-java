// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.compute_alpha.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * Describes a pre-shared key used to setup MACsec in static connectivity association key (CAK) mode.
 * 
 */
public final class InterconnectMacsecPreSharedKeyResponse extends com.pulumi.resources.InvokeArgs {

    public static final InterconnectMacsecPreSharedKeyResponse Empty = new InterconnectMacsecPreSharedKeyResponse();

    /**
     * A name for this pre-shared key. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
     * 
     */
    @Import(name="name", required=true)
    private String name;

    /**
     * @return A name for this pre-shared key. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
     * 
     */
    public String name() {
        return this.name;
    }

    /**
     * A RFC3339 timestamp on or after which the key is valid. startTime can be in the future. If the keychain has a single key, startTime can be omitted. If the keychain has multiple keys, startTime is mandatory for each key. The start times of keys must be in increasing order. The start times of two consecutive keys must be at least 6 hours apart.
     * 
     */
    @Import(name="startTime", required=true)
    private String startTime;

    /**
     * @return A RFC3339 timestamp on or after which the key is valid. startTime can be in the future. If the keychain has a single key, startTime can be omitted. If the keychain has multiple keys, startTime is mandatory for each key. The start times of keys must be in increasing order. The start times of two consecutive keys must be at least 6 hours apart.
     * 
     */
    public String startTime() {
        return this.startTime;
    }

    private InterconnectMacsecPreSharedKeyResponse() {}

    private InterconnectMacsecPreSharedKeyResponse(InterconnectMacsecPreSharedKeyResponse $) {
        this.name = $.name;
        this.startTime = $.startTime;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InterconnectMacsecPreSharedKeyResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InterconnectMacsecPreSharedKeyResponse $;

        public Builder() {
            $ = new InterconnectMacsecPreSharedKeyResponse();
        }

        public Builder(InterconnectMacsecPreSharedKeyResponse defaults) {
            $ = new InterconnectMacsecPreSharedKeyResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param name A name for this pre-shared key. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            $.name = name;
            return this;
        }

        /**
         * @param startTime A RFC3339 timestamp on or after which the key is valid. startTime can be in the future. If the keychain has a single key, startTime can be omitted. If the keychain has multiple keys, startTime is mandatory for each key. The start times of keys must be in increasing order. The start times of two consecutive keys must be at least 6 hours apart.
         * 
         * @return builder
         * 
         */
        public Builder startTime(String startTime) {
            $.startTime = startTime;
            return this;
        }

        public InterconnectMacsecPreSharedKeyResponse build() {
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            $.startTime = Objects.requireNonNull($.startTime, "expected parameter 'startTime' to be non-null");
            return $;
        }
    }

}
