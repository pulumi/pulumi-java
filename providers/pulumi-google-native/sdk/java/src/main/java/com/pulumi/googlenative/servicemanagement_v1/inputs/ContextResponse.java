// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.servicemanagement_v1.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.servicemanagement_v1.inputs.ContextRuleResponse;
import java.util.List;
import java.util.Objects;


/**
 * `Context` defines which contexts an API requests. Example: context: rules: - selector: &#34;*&#34; requested: - google.rpc.context.ProjectContext - google.rpc.context.OriginContext The above specifies that all methods in the API request `google.rpc.context.ProjectContext` and `google.rpc.context.OriginContext`. Available context types are defined in package `google.rpc.context`. This also provides mechanism to allowlist any protobuf message extension that can be sent in grpc metadata using “x-goog-ext--bin” and “x-goog-ext--jspb” format. For example, list any service specific protobuf types that can appear in grpc metadata as follows in your yaml file: Example: context: rules: - selector: &#34;google.example.library.v1.LibraryService.CreateBook&#34; allowed_request_extensions: - google.foo.v1.NewExtension allowed_response_extensions: - google.foo.v1.NewExtension You can also specify extension ID instead of fully qualified extension name here.
 * 
 */
public final class ContextResponse extends com.pulumi.resources.InvokeArgs {

    public static final ContextResponse Empty = new ContextResponse();

    /**
     * A list of RPC context rules that apply to individual API methods. **NOTE:** All service configuration rules follow &#34;last one wins&#34; order.
     * 
     */
    @Import(name="rules", required=true)
    private List<ContextRuleResponse> rules;

    /**
     * @return A list of RPC context rules that apply to individual API methods. **NOTE:** All service configuration rules follow &#34;last one wins&#34; order.
     * 
     */
    public List<ContextRuleResponse> rules() {
        return this.rules;
    }

    private ContextResponse() {}

    private ContextResponse(ContextResponse $) {
        this.rules = $.rules;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ContextResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ContextResponse $;

        public Builder() {
            $ = new ContextResponse();
        }

        public Builder(ContextResponse defaults) {
            $ = new ContextResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param rules A list of RPC context rules that apply to individual API methods. **NOTE:** All service configuration rules follow &#34;last one wins&#34; order.
         * 
         * @return builder
         * 
         */
        public Builder rules(List<ContextRuleResponse> rules) {
            $.rules = rules;
            return this;
        }

        /**
         * @param rules A list of RPC context rules that apply to individual API methods. **NOTE:** All service configuration rules follow &#34;last one wins&#34; order.
         * 
         * @return builder
         * 
         */
        public Builder rules(ContextRuleResponse... rules) {
            return rules(List.of(rules));
        }

        public ContextResponse build() {
            $.rules = Objects.requireNonNull($.rules, "expected parameter 'rules' to be non-null");
            return $;
        }
    }

}
