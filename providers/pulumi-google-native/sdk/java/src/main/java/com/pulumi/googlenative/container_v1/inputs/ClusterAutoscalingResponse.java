// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.container_v1.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.container_v1.inputs.AutoprovisioningNodePoolDefaultsResponse;
import com.pulumi.googlenative.container_v1.inputs.ResourceLimitResponse;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;


/**
 * ClusterAutoscaling contains global, per-cluster information required by Cluster Autoscaler to automatically adjust the size of the cluster and create/delete node pools based on the current needs.
 * 
 */
public final class ClusterAutoscalingResponse extends com.pulumi.resources.InvokeArgs {

    public static final ClusterAutoscalingResponse Empty = new ClusterAutoscalingResponse();

    /**
     * The list of Google Compute Engine [zones](https://cloud.google.com/compute/docs/zones#available) in which the NodePool&#39;s nodes can be created by NAP.
     * 
     */
    @Import(name="autoprovisioningLocations", required=true)
    private List<String> autoprovisioningLocations;

    public List<String> autoprovisioningLocations() {
        return this.autoprovisioningLocations;
    }

    /**
     * AutoprovisioningNodePoolDefaults contains defaults for a node pool created by NAP.
     * 
     */
    @Import(name="autoprovisioningNodePoolDefaults", required=true)
    private AutoprovisioningNodePoolDefaultsResponse autoprovisioningNodePoolDefaults;

    public AutoprovisioningNodePoolDefaultsResponse autoprovisioningNodePoolDefaults() {
        return this.autoprovisioningNodePoolDefaults;
    }

    /**
     * Defines autoscaling behaviour.
     * 
     */
    @Import(name="autoscalingProfile", required=true)
    private String autoscalingProfile;

    public String autoscalingProfile() {
        return this.autoscalingProfile;
    }

    /**
     * Enables automatic node pool creation and deletion.
     * 
     */
    @Import(name="enableNodeAutoprovisioning", required=true)
    private Boolean enableNodeAutoprovisioning;

    public Boolean enableNodeAutoprovisioning() {
        return this.enableNodeAutoprovisioning;
    }

    /**
     * Contains global constraints regarding minimum and maximum amount of resources in the cluster.
     * 
     */
    @Import(name="resourceLimits", required=true)
    private List<ResourceLimitResponse> resourceLimits;

    public List<ResourceLimitResponse> resourceLimits() {
        return this.resourceLimits;
    }

    private ClusterAutoscalingResponse() {}

    private ClusterAutoscalingResponse(ClusterAutoscalingResponse $) {
        this.autoprovisioningLocations = $.autoprovisioningLocations;
        this.autoprovisioningNodePoolDefaults = $.autoprovisioningNodePoolDefaults;
        this.autoscalingProfile = $.autoscalingProfile;
        this.enableNodeAutoprovisioning = $.enableNodeAutoprovisioning;
        this.resourceLimits = $.resourceLimits;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClusterAutoscalingResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClusterAutoscalingResponse $;

        public Builder() {
            $ = new ClusterAutoscalingResponse();
        }

        public Builder(ClusterAutoscalingResponse defaults) {
            $ = new ClusterAutoscalingResponse(Objects.requireNonNull(defaults));
        }

        public Builder autoprovisioningLocations(List<String> autoprovisioningLocations) {
            $.autoprovisioningLocations = autoprovisioningLocations;
            return this;
        }

        public Builder autoprovisioningLocations(String... autoprovisioningLocations) {
            return autoprovisioningLocations(List.of(autoprovisioningLocations));
        }

        public Builder autoprovisioningNodePoolDefaults(AutoprovisioningNodePoolDefaultsResponse autoprovisioningNodePoolDefaults) {
            $.autoprovisioningNodePoolDefaults = autoprovisioningNodePoolDefaults;
            return this;
        }

        public Builder autoscalingProfile(String autoscalingProfile) {
            $.autoscalingProfile = autoscalingProfile;
            return this;
        }

        public Builder enableNodeAutoprovisioning(Boolean enableNodeAutoprovisioning) {
            $.enableNodeAutoprovisioning = enableNodeAutoprovisioning;
            return this;
        }

        public Builder resourceLimits(List<ResourceLimitResponse> resourceLimits) {
            $.resourceLimits = resourceLimits;
            return this;
        }

        public Builder resourceLimits(ResourceLimitResponse... resourceLimits) {
            return resourceLimits(List.of(resourceLimits));
        }

        public ClusterAutoscalingResponse build() {
            $.autoprovisioningLocations = Objects.requireNonNull($.autoprovisioningLocations, "expected parameter 'autoprovisioningLocations' to be non-null");
            $.autoprovisioningNodePoolDefaults = Objects.requireNonNull($.autoprovisioningNodePoolDefaults, "expected parameter 'autoprovisioningNodePoolDefaults' to be non-null");
            $.autoscalingProfile = Objects.requireNonNull($.autoscalingProfile, "expected parameter 'autoscalingProfile' to be non-null");
            $.enableNodeAutoprovisioning = Objects.requireNonNull($.enableNodeAutoprovisioning, "expected parameter 'enableNodeAutoprovisioning' to be non-null");
            $.resourceLimits = Objects.requireNonNull($.resourceLimits, "expected parameter 'resourceLimits' to be non-null");
            return $;
        }
    }

}
