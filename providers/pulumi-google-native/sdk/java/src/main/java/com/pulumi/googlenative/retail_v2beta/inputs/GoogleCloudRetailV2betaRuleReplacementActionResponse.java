// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.retail_v2beta.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;


/**
 * Replaces a term in the query. Multiple replacement candidates can be specified. All `query_terms` will be replaced with the replacement term. Example: Replace &#34;gShoe&#34; with &#34;google shoe&#34;.
 * 
 */
public final class GoogleCloudRetailV2betaRuleReplacementActionResponse extends com.pulumi.resources.InvokeArgs {

    public static final GoogleCloudRetailV2betaRuleReplacementActionResponse Empty = new GoogleCloudRetailV2betaRuleReplacementActionResponse();

    /**
     * Terms from the search query. Will be replaced by replacement term. Can specify up to 100 terms.
     * 
     */
    @Import(name="queryTerms", required=true)
      private final List<String> queryTerms;

    public List<String> queryTerms() {
        return this.queryTerms;
    }

    /**
     * Term that will be used for replacement.
     * 
     */
    @Import(name="replacementTerm", required=true)
      private final String replacementTerm;

    public String replacementTerm() {
        return this.replacementTerm;
    }

    /**
     * Will be [deprecated = true] post migration;
     * 
     */
    @Import(name="term", required=true)
      private final String term;

    public String term() {
        return this.term;
    }

    public GoogleCloudRetailV2betaRuleReplacementActionResponse(
        List<String> queryTerms,
        String replacementTerm,
        String term) {
        this.queryTerms = Objects.requireNonNull(queryTerms, "expected parameter 'queryTerms' to be non-null");
        this.replacementTerm = Objects.requireNonNull(replacementTerm, "expected parameter 'replacementTerm' to be non-null");
        this.term = Objects.requireNonNull(term, "expected parameter 'term' to be non-null");
    }

    private GoogleCloudRetailV2betaRuleReplacementActionResponse() {
        this.queryTerms = List.of();
        this.replacementTerm = null;
        this.term = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GoogleCloudRetailV2betaRuleReplacementActionResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<String> queryTerms;
        private String replacementTerm;
        private String term;

        public Builder() {
    	      // Empty
        }

        public Builder(GoogleCloudRetailV2betaRuleReplacementActionResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.queryTerms = defaults.queryTerms;
    	      this.replacementTerm = defaults.replacementTerm;
    	      this.term = defaults.term;
        }

        public Builder queryTerms(List<String> queryTerms) {
            this.queryTerms = Objects.requireNonNull(queryTerms);
            return this;
        }
        public Builder queryTerms(String... queryTerms) {
            return queryTerms(List.of(queryTerms));
        }
        public Builder replacementTerm(String replacementTerm) {
            this.replacementTerm = Objects.requireNonNull(replacementTerm);
            return this;
        }
        public Builder term(String term) {
            this.term = Objects.requireNonNull(term);
            return this;
        }        public GoogleCloudRetailV2betaRuleReplacementActionResponse build() {
            return new GoogleCloudRetailV2betaRuleReplacementActionResponse(queryTerms, replacementTerm, term);
        }
    }
}
