// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.run.v1alpha1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.run.v1alpha1.inputs.ConfigMapVolumeSourceArgs;
import com.pulumi.googlenative.run.v1alpha1.inputs.SecretVolumeSourceArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Volume represents a named volume in a container.
 * 
 */
public final class VolumeArgs extends com.pulumi.resources.ResourceArgs {

    public static final VolumeArgs Empty = new VolumeArgs();

    @Import(name="configMap")
    private @Nullable Output<ConfigMapVolumeSourceArgs> configMap;

    public Optional<Output<ConfigMapVolumeSourceArgs>> configMap() {
        return Optional.ofNullable(this.configMap);
    }

    /**
     * Volume&#39;s name. In Cloud Run Fully Managed, the name &#39;cloudsql&#39; is reserved.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Volume&#39;s name. In Cloud Run Fully Managed, the name &#39;cloudsql&#39; is reserved.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="secret")
    private @Nullable Output<SecretVolumeSourceArgs> secret;

    public Optional<Output<SecretVolumeSourceArgs>> secret() {
        return Optional.ofNullable(this.secret);
    }

    private VolumeArgs() {}

    private VolumeArgs(VolumeArgs $) {
        this.configMap = $.configMap;
        this.name = $.name;
        this.secret = $.secret;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VolumeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VolumeArgs $;

        public Builder() {
            $ = new VolumeArgs();
        }

        public Builder(VolumeArgs defaults) {
            $ = new VolumeArgs(Objects.requireNonNull(defaults));
        }

        public Builder configMap(@Nullable Output<ConfigMapVolumeSourceArgs> configMap) {
            $.configMap = configMap;
            return this;
        }

        public Builder configMap(ConfigMapVolumeSourceArgs configMap) {
            return configMap(Output.of(configMap));
        }

        /**
         * @param name Volume&#39;s name. In Cloud Run Fully Managed, the name &#39;cloudsql&#39; is reserved.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Volume&#39;s name. In Cloud Run Fully Managed, the name &#39;cloudsql&#39; is reserved.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder secret(@Nullable Output<SecretVolumeSourceArgs> secret) {
            $.secret = secret;
            return this;
        }

        public Builder secret(SecretVolumeSourceArgs secret) {
            return secret(Output.of(secret));
        }

        public VolumeArgs build() {
            return $;
        }
    }

}
