// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.monitoring.v1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.monitoring.v1.enums.ThresholdColor;
import com.pulumi.googlenative.monitoring.v1.enums.ThresholdDirection;
import com.pulumi.googlenative.monitoring.v1.enums.ThresholdTargetAxis;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Defines a threshold for categorizing time series values.
 * 
 */
public final class ThresholdArgs extends com.pulumi.resources.ResourceArgs {

    public static final ThresholdArgs Empty = new ThresholdArgs();

    /**
     * The state color for this threshold. Color is not allowed in a XyChart.
     * 
     */
    @Import(name="color")
    private @Nullable Output<ThresholdColor> color;

    /**
     * @return The state color for this threshold. Color is not allowed in a XyChart.
     * 
     */
    public Optional<Output<ThresholdColor>> color() {
        return Optional.ofNullable(this.color);
    }

    /**
     * The direction for the current threshold. Direction is not allowed in a XyChart.
     * 
     */
    @Import(name="direction")
    private @Nullable Output<ThresholdDirection> direction;

    /**
     * @return The direction for the current threshold. Direction is not allowed in a XyChart.
     * 
     */
    public Optional<Output<ThresholdDirection>> direction() {
        return Optional.ofNullable(this.direction);
    }

    /**
     * A label for the threshold.
     * 
     */
    @Import(name="label")
    private @Nullable Output<String> label;

    /**
     * @return A label for the threshold.
     * 
     */
    public Optional<Output<String>> label() {
        return Optional.ofNullable(this.label);
    }

    /**
     * The target axis to use for plotting the threshold. Target axis is not allowed in a Scorecard.
     * 
     */
    @Import(name="targetAxis")
    private @Nullable Output<ThresholdTargetAxis> targetAxis;

    /**
     * @return The target axis to use for plotting the threshold. Target axis is not allowed in a Scorecard.
     * 
     */
    public Optional<Output<ThresholdTargetAxis>> targetAxis() {
        return Optional.ofNullable(this.targetAxis);
    }

    /**
     * The value of the threshold. The value should be defined in the native scale of the metric.
     * 
     */
    @Import(name="value")
    private @Nullable Output<Double> value;

    /**
     * @return The value of the threshold. The value should be defined in the native scale of the metric.
     * 
     */
    public Optional<Output<Double>> value() {
        return Optional.ofNullable(this.value);
    }

    private ThresholdArgs() {}

    private ThresholdArgs(ThresholdArgs $) {
        this.color = $.color;
        this.direction = $.direction;
        this.label = $.label;
        this.targetAxis = $.targetAxis;
        this.value = $.value;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ThresholdArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ThresholdArgs $;

        public Builder() {
            $ = new ThresholdArgs();
        }

        public Builder(ThresholdArgs defaults) {
            $ = new ThresholdArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param color The state color for this threshold. Color is not allowed in a XyChart.
         * 
         * @return builder
         * 
         */
        public Builder color(@Nullable Output<ThresholdColor> color) {
            $.color = color;
            return this;
        }

        /**
         * @param color The state color for this threshold. Color is not allowed in a XyChart.
         * 
         * @return builder
         * 
         */
        public Builder color(ThresholdColor color) {
            return color(Output.of(color));
        }

        /**
         * @param direction The direction for the current threshold. Direction is not allowed in a XyChart.
         * 
         * @return builder
         * 
         */
        public Builder direction(@Nullable Output<ThresholdDirection> direction) {
            $.direction = direction;
            return this;
        }

        /**
         * @param direction The direction for the current threshold. Direction is not allowed in a XyChart.
         * 
         * @return builder
         * 
         */
        public Builder direction(ThresholdDirection direction) {
            return direction(Output.of(direction));
        }

        /**
         * @param label A label for the threshold.
         * 
         * @return builder
         * 
         */
        public Builder label(@Nullable Output<String> label) {
            $.label = label;
            return this;
        }

        /**
         * @param label A label for the threshold.
         * 
         * @return builder
         * 
         */
        public Builder label(String label) {
            return label(Output.of(label));
        }

        /**
         * @param targetAxis The target axis to use for plotting the threshold. Target axis is not allowed in a Scorecard.
         * 
         * @return builder
         * 
         */
        public Builder targetAxis(@Nullable Output<ThresholdTargetAxis> targetAxis) {
            $.targetAxis = targetAxis;
            return this;
        }

        /**
         * @param targetAxis The target axis to use for plotting the threshold. Target axis is not allowed in a Scorecard.
         * 
         * @return builder
         * 
         */
        public Builder targetAxis(ThresholdTargetAxis targetAxis) {
            return targetAxis(Output.of(targetAxis));
        }

        /**
         * @param value The value of the threshold. The value should be defined in the native scale of the metric.
         * 
         * @return builder
         * 
         */
        public Builder value(@Nullable Output<Double> value) {
            $.value = value;
            return this;
        }

        /**
         * @param value The value of the threshold. The value should be defined in the native scale of the metric.
         * 
         * @return builder
         * 
         */
        public Builder value(Double value) {
            return value(Output.of(value));
        }

        public ThresholdArgs build() {
            return $;
        }
    }

}
