// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.dlp.v2.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.dlp.v2.inputs.GooglePrivacyDlpV2HotwordRuleArgs;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Deprecated; use `InspectionRuleSet` instead. Rule for modifying a `CustomInfoType` to alter behavior under certain circumstances, depending on the specific details of the rule. Not supported for the `surrogate_type` custom infoType.
 * 
 */
public final class GooglePrivacyDlpV2DetectionRuleArgs extends com.pulumi.resources.ResourceArgs {

    public static final GooglePrivacyDlpV2DetectionRuleArgs Empty = new GooglePrivacyDlpV2DetectionRuleArgs();

    /**
     * Hotword-based detection rule.
     * 
     */
    @Import(name="hotwordRule")
    private @Nullable Output<GooglePrivacyDlpV2HotwordRuleArgs> hotwordRule;

    /**
     * @return Hotword-based detection rule.
     * 
     */
    public Optional<Output<GooglePrivacyDlpV2HotwordRuleArgs>> hotwordRule() {
        return Optional.ofNullable(this.hotwordRule);
    }

    private GooglePrivacyDlpV2DetectionRuleArgs() {}

    private GooglePrivacyDlpV2DetectionRuleArgs(GooglePrivacyDlpV2DetectionRuleArgs $) {
        this.hotwordRule = $.hotwordRule;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GooglePrivacyDlpV2DetectionRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GooglePrivacyDlpV2DetectionRuleArgs $;

        public Builder() {
            $ = new GooglePrivacyDlpV2DetectionRuleArgs();
        }

        public Builder(GooglePrivacyDlpV2DetectionRuleArgs defaults) {
            $ = new GooglePrivacyDlpV2DetectionRuleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param hotwordRule Hotword-based detection rule.
         * 
         * @return builder
         * 
         */
        public Builder hotwordRule(@Nullable Output<GooglePrivacyDlpV2HotwordRuleArgs> hotwordRule) {
            $.hotwordRule = hotwordRule;
            return this;
        }

        /**
         * @param hotwordRule Hotword-based detection rule.
         * 
         * @return builder
         * 
         */
        public Builder hotwordRule(GooglePrivacyDlpV2HotwordRuleArgs hotwordRule) {
            return hotwordRule(Output.of(hotwordRule));
        }

        public GooglePrivacyDlpV2DetectionRuleArgs build() {
            return $;
        }
    }

}
