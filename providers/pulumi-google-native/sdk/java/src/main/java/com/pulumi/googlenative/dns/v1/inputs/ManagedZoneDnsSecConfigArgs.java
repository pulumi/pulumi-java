// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.dns.v1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.dns.v1.enums.ManagedZoneDnsSecConfigNonExistence;
import com.pulumi.googlenative.dns.v1.enums.ManagedZoneDnsSecConfigState;
import com.pulumi.googlenative.dns.v1.inputs.DnsKeySpecArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ManagedZoneDnsSecConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final ManagedZoneDnsSecConfigArgs Empty = new ManagedZoneDnsSecConfigArgs();

    /**
     * Specifies parameters for generating initial DnsKeys for this ManagedZone. Can only be changed while the state is OFF.
     * 
     */
    @Import(name="defaultKeySpecs")
    private @Nullable Output<List<DnsKeySpecArgs>> defaultKeySpecs;

    /**
     * @return Specifies parameters for generating initial DnsKeys for this ManagedZone. Can only be changed while the state is OFF.
     * 
     */
    public Optional<Output<List<DnsKeySpecArgs>>> defaultKeySpecs() {
        return Optional.ofNullable(this.defaultKeySpecs);
    }

    @Import(name="kind")
    private @Nullable Output<String> kind;

    public Optional<Output<String>> kind() {
        return Optional.ofNullable(this.kind);
    }

    /**
     * Specifies the mechanism for authenticated denial-of-existence responses. Can only be changed while the state is OFF.
     * 
     */
    @Import(name="nonExistence")
    private @Nullable Output<ManagedZoneDnsSecConfigNonExistence> nonExistence;

    /**
     * @return Specifies the mechanism for authenticated denial-of-existence responses. Can only be changed while the state is OFF.
     * 
     */
    public Optional<Output<ManagedZoneDnsSecConfigNonExistence>> nonExistence() {
        return Optional.ofNullable(this.nonExistence);
    }

    /**
     * Specifies whether DNSSEC is enabled, and what mode it is in.
     * 
     */
    @Import(name="state")
    private @Nullable Output<ManagedZoneDnsSecConfigState> state;

    /**
     * @return Specifies whether DNSSEC is enabled, and what mode it is in.
     * 
     */
    public Optional<Output<ManagedZoneDnsSecConfigState>> state() {
        return Optional.ofNullable(this.state);
    }

    private ManagedZoneDnsSecConfigArgs() {}

    private ManagedZoneDnsSecConfigArgs(ManagedZoneDnsSecConfigArgs $) {
        this.defaultKeySpecs = $.defaultKeySpecs;
        this.kind = $.kind;
        this.nonExistence = $.nonExistence;
        this.state = $.state;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ManagedZoneDnsSecConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ManagedZoneDnsSecConfigArgs $;

        public Builder() {
            $ = new ManagedZoneDnsSecConfigArgs();
        }

        public Builder(ManagedZoneDnsSecConfigArgs defaults) {
            $ = new ManagedZoneDnsSecConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param defaultKeySpecs Specifies parameters for generating initial DnsKeys for this ManagedZone. Can only be changed while the state is OFF.
         * 
         * @return builder
         * 
         */
        public Builder defaultKeySpecs(@Nullable Output<List<DnsKeySpecArgs>> defaultKeySpecs) {
            $.defaultKeySpecs = defaultKeySpecs;
            return this;
        }

        /**
         * @param defaultKeySpecs Specifies parameters for generating initial DnsKeys for this ManagedZone. Can only be changed while the state is OFF.
         * 
         * @return builder
         * 
         */
        public Builder defaultKeySpecs(List<DnsKeySpecArgs> defaultKeySpecs) {
            return defaultKeySpecs(Output.of(defaultKeySpecs));
        }

        /**
         * @param defaultKeySpecs Specifies parameters for generating initial DnsKeys for this ManagedZone. Can only be changed while the state is OFF.
         * 
         * @return builder
         * 
         */
        public Builder defaultKeySpecs(DnsKeySpecArgs... defaultKeySpecs) {
            return defaultKeySpecs(List.of(defaultKeySpecs));
        }

        public Builder kind(@Nullable Output<String> kind) {
            $.kind = kind;
            return this;
        }

        public Builder kind(String kind) {
            return kind(Output.of(kind));
        }

        /**
         * @param nonExistence Specifies the mechanism for authenticated denial-of-existence responses. Can only be changed while the state is OFF.
         * 
         * @return builder
         * 
         */
        public Builder nonExistence(@Nullable Output<ManagedZoneDnsSecConfigNonExistence> nonExistence) {
            $.nonExistence = nonExistence;
            return this;
        }

        /**
         * @param nonExistence Specifies the mechanism for authenticated denial-of-existence responses. Can only be changed while the state is OFF.
         * 
         * @return builder
         * 
         */
        public Builder nonExistence(ManagedZoneDnsSecConfigNonExistence nonExistence) {
            return nonExistence(Output.of(nonExistence));
        }

        /**
         * @param state Specifies whether DNSSEC is enabled, and what mode it is in.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable Output<ManagedZoneDnsSecConfigState> state) {
            $.state = state;
            return this;
        }

        /**
         * @param state Specifies whether DNSSEC is enabled, and what mode it is in.
         * 
         * @return builder
         * 
         */
        public Builder state(ManagedZoneDnsSecConfigState state) {
            return state(Output.of(state));
        }

        public ManagedZoneDnsSecConfigArgs build() {
            return $;
        }
    }

}
