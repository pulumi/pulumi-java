// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.monitoring.v1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.monitoring.v1.inputs.TableDataSetArgs;
import java.util.List;
import java.util.Objects;


/**
 * A table that displays time series data.
 * 
 */
public final class TimeSeriesTableArgs extends com.pulumi.resources.ResourceArgs {

    public static final TimeSeriesTableArgs Empty = new TimeSeriesTableArgs();

    /**
     * The data displayed in this table.
     * 
     */
    @Import(name="dataSets", required=true)
    private Output<List<TableDataSetArgs>> dataSets;

    /**
     * @return The data displayed in this table.
     * 
     */
    public Output<List<TableDataSetArgs>> dataSets() {
        return this.dataSets;
    }

    private TimeSeriesTableArgs() {}

    private TimeSeriesTableArgs(TimeSeriesTableArgs $) {
        this.dataSets = $.dataSets;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TimeSeriesTableArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TimeSeriesTableArgs $;

        public Builder() {
            $ = new TimeSeriesTableArgs();
        }

        public Builder(TimeSeriesTableArgs defaults) {
            $ = new TimeSeriesTableArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param dataSets The data displayed in this table.
         * 
         * @return builder
         * 
         */
        public Builder dataSets(Output<List<TableDataSetArgs>> dataSets) {
            $.dataSets = dataSets;
            return this;
        }

        /**
         * @param dataSets The data displayed in this table.
         * 
         * @return builder
         * 
         */
        public Builder dataSets(List<TableDataSetArgs> dataSets) {
            return dataSets(Output.of(dataSets));
        }

        /**
         * @param dataSets The data displayed in this table.
         * 
         * @return builder
         * 
         */
        public Builder dataSets(TableDataSetArgs... dataSets) {
            return dataSets(List.of(dataSets));
        }

        public TimeSeriesTableArgs build() {
            $.dataSets = Objects.requireNonNull($.dataSets, "expected parameter 'dataSets' to be non-null");
            return $;
        }
    }

}
