// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.pubsublite_v1.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.util.Objects;


/**
 * The throughput capacity configuration for each partition.
 * 
 */
public final class CapacityResponse extends com.pulumi.resources.InvokeArgs {

    public static final CapacityResponse Empty = new CapacityResponse();

    /**
     * Publish throughput capacity per partition in MiB/s. Must be &gt;= 4 and &lt;= 16.
     * 
     */
    @Import(name="publishMibPerSec", required=true)
    private Integer publishMibPerSec;

    /**
     * @return Publish throughput capacity per partition in MiB/s. Must be &gt;= 4 and &lt;= 16.
     * 
     */
    public Integer publishMibPerSec() {
        return this.publishMibPerSec;
    }

    /**
     * Subscribe throughput capacity per partition in MiB/s. Must be &gt;= 4 and &lt;= 32.
     * 
     */
    @Import(name="subscribeMibPerSec", required=true)
    private Integer subscribeMibPerSec;

    /**
     * @return Subscribe throughput capacity per partition in MiB/s. Must be &gt;= 4 and &lt;= 32.
     * 
     */
    public Integer subscribeMibPerSec() {
        return this.subscribeMibPerSec;
    }

    private CapacityResponse() {}

    private CapacityResponse(CapacityResponse $) {
        this.publishMibPerSec = $.publishMibPerSec;
        this.subscribeMibPerSec = $.subscribeMibPerSec;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CapacityResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CapacityResponse $;

        public Builder() {
            $ = new CapacityResponse();
        }

        public Builder(CapacityResponse defaults) {
            $ = new CapacityResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param publishMibPerSec Publish throughput capacity per partition in MiB/s. Must be &gt;= 4 and &lt;= 16.
         * 
         * @return builder
         * 
         */
        public Builder publishMibPerSec(Integer publishMibPerSec) {
            $.publishMibPerSec = publishMibPerSec;
            return this;
        }

        /**
         * @param subscribeMibPerSec Subscribe throughput capacity per partition in MiB/s. Must be &gt;= 4 and &lt;= 32.
         * 
         * @return builder
         * 
         */
        public Builder subscribeMibPerSec(Integer subscribeMibPerSec) {
            $.subscribeMibPerSec = subscribeMibPerSec;
            return this;
        }

        public CapacityResponse build() {
            $.publishMibPerSec = Objects.requireNonNull($.publishMibPerSec, "expected parameter 'publishMibPerSec' to be non-null");
            $.subscribeMibPerSec = Objects.requireNonNull($.subscribeMibPerSec, "expected parameter 'subscribeMibPerSec' to be non-null");
            return $;
        }
    }

}
