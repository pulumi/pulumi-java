// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.jobs_v3.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.jobs_v3.inputs.CompensationRangeResponse;
import com.pulumi.googlenative.jobs_v3.inputs.MoneyResponse;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;


/**
 * A compensation entry that represents one component of compensation, such as base pay, bonus, or other compensation type. Annualization: One compensation entry can be annualized if - it contains valid amount or range. - and its expected_units_per_year is set or can be derived. Its annualized range is determined as (amount or range) times expected_units_per_year.
 * 
 */
public final class CompensationEntryResponse extends com.pulumi.resources.InvokeArgs {

    public static final CompensationEntryResponse Empty = new CompensationEntryResponse();

    /**
     * Optional. Compensation amount.
     * 
     */
    @Import(name="amount", required=true)
    private MoneyResponse amount;

    /**
     * @return Optional. Compensation amount.
     * 
     */
    public MoneyResponse amount() {
        return this.amount;
    }

    /**
     * Optional. Compensation description. For example, could indicate equity terms or provide additional context to an estimated bonus.
     * 
     */
    @Import(name="description", required=true)
    private String description;

    /**
     * @return Optional. Compensation description. For example, could indicate equity terms or provide additional context to an estimated bonus.
     * 
     */
    public String description() {
        return this.description;
    }

    /**
     * Optional. Expected number of units paid each year. If not specified, when Job.employment_types is FULLTIME, a default value is inferred based on unit. Default values: - HOURLY: 2080 - DAILY: 260 - WEEKLY: 52 - MONTHLY: 12 - ANNUAL: 1
     * 
     */
    @Import(name="expectedUnitsPerYear", required=true)
    private Double expectedUnitsPerYear;

    /**
     * @return Optional. Expected number of units paid each year. If not specified, when Job.employment_types is FULLTIME, a default value is inferred based on unit. Default values: - HOURLY: 2080 - DAILY: 260 - WEEKLY: 52 - MONTHLY: 12 - ANNUAL: 1
     * 
     */
    public Double expectedUnitsPerYear() {
        return this.expectedUnitsPerYear;
    }

    /**
     * Optional. Compensation range.
     * 
     */
    @Import(name="range", required=true)
    private CompensationRangeResponse range;

    /**
     * @return Optional. Compensation range.
     * 
     */
    public CompensationRangeResponse range() {
        return this.range;
    }

    /**
     * Optional. Compensation type. Default is CompensationUnit.COMPENSATION_TYPE_UNSPECIFIED.
     * 
     */
    @Import(name="type", required=true)
    private String type;

    /**
     * @return Optional. Compensation type. Default is CompensationUnit.COMPENSATION_TYPE_UNSPECIFIED.
     * 
     */
    public String type() {
        return this.type;
    }

    /**
     * Optional. Frequency of the specified amount. Default is CompensationUnit.COMPENSATION_UNIT_UNSPECIFIED.
     * 
     */
    @Import(name="unit", required=true)
    private String unit;

    /**
     * @return Optional. Frequency of the specified amount. Default is CompensationUnit.COMPENSATION_UNIT_UNSPECIFIED.
     * 
     */
    public String unit() {
        return this.unit;
    }

    private CompensationEntryResponse() {}

    private CompensationEntryResponse(CompensationEntryResponse $) {
        this.amount = $.amount;
        this.description = $.description;
        this.expectedUnitsPerYear = $.expectedUnitsPerYear;
        this.range = $.range;
        this.type = $.type;
        this.unit = $.unit;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CompensationEntryResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CompensationEntryResponse $;

        public Builder() {
            $ = new CompensationEntryResponse();
        }

        public Builder(CompensationEntryResponse defaults) {
            $ = new CompensationEntryResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param amount Optional. Compensation amount.
         * 
         * @return builder
         * 
         */
        public Builder amount(MoneyResponse amount) {
            $.amount = amount;
            return this;
        }

        /**
         * @param description Optional. Compensation description. For example, could indicate equity terms or provide additional context to an estimated bonus.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            $.description = description;
            return this;
        }

        /**
         * @param expectedUnitsPerYear Optional. Expected number of units paid each year. If not specified, when Job.employment_types is FULLTIME, a default value is inferred based on unit. Default values: - HOURLY: 2080 - DAILY: 260 - WEEKLY: 52 - MONTHLY: 12 - ANNUAL: 1
         * 
         * @return builder
         * 
         */
        public Builder expectedUnitsPerYear(Double expectedUnitsPerYear) {
            $.expectedUnitsPerYear = expectedUnitsPerYear;
            return this;
        }

        /**
         * @param range Optional. Compensation range.
         * 
         * @return builder
         * 
         */
        public Builder range(CompensationRangeResponse range) {
            $.range = range;
            return this;
        }

        /**
         * @param type Optional. Compensation type. Default is CompensationUnit.COMPENSATION_TYPE_UNSPECIFIED.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            $.type = type;
            return this;
        }

        /**
         * @param unit Optional. Frequency of the specified amount. Default is CompensationUnit.COMPENSATION_UNIT_UNSPECIFIED.
         * 
         * @return builder
         * 
         */
        public Builder unit(String unit) {
            $.unit = unit;
            return this;
        }

        public CompensationEntryResponse build() {
            $.amount = Objects.requireNonNull($.amount, "expected parameter 'amount' to be non-null");
            $.description = Objects.requireNonNull($.description, "expected parameter 'description' to be non-null");
            $.expectedUnitsPerYear = Objects.requireNonNull($.expectedUnitsPerYear, "expected parameter 'expectedUnitsPerYear' to be non-null");
            $.range = Objects.requireNonNull($.range, "expected parameter 'range' to be non-null");
            $.type = Objects.requireNonNull($.type, "expected parameter 'type' to be non-null");
            $.unit = Objects.requireNonNull($.unit, "expected parameter 'unit' to be non-null");
            return $;
        }
    }

}
