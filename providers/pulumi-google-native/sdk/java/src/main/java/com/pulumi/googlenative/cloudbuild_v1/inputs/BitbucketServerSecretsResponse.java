// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.cloudbuild_v1.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * BitbucketServerSecrets represents the secrets in Secret Manager for a Bitbucket Server.
 * 
 */
public final class BitbucketServerSecretsResponse extends com.pulumi.resources.InvokeArgs {

    public static final BitbucketServerSecretsResponse Empty = new BitbucketServerSecretsResponse();

    /**
     * The resource name for the admin access token&#39;s secret version.
     * 
     */
    @Import(name="adminAccessTokenVersionName", required=true)
    private String adminAccessTokenVersionName;

    public String adminAccessTokenVersionName() {
        return this.adminAccessTokenVersionName;
    }

    /**
     * The resource name for the read access token&#39;s secret version.
     * 
     */
    @Import(name="readAccessTokenVersionName", required=true)
    private String readAccessTokenVersionName;

    public String readAccessTokenVersionName() {
        return this.readAccessTokenVersionName;
    }

    /**
     * Immutable. The resource name for the webhook secret&#39;s secret version. Once this field has been set, it cannot be changed. If you need to change it, please create another BitbucketServerConfig.
     * 
     */
    @Import(name="webhookSecretVersionName", required=true)
    private String webhookSecretVersionName;

    public String webhookSecretVersionName() {
        return this.webhookSecretVersionName;
    }

    private BitbucketServerSecretsResponse() {}

    private BitbucketServerSecretsResponse(BitbucketServerSecretsResponse $) {
        this.adminAccessTokenVersionName = $.adminAccessTokenVersionName;
        this.readAccessTokenVersionName = $.readAccessTokenVersionName;
        this.webhookSecretVersionName = $.webhookSecretVersionName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BitbucketServerSecretsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BitbucketServerSecretsResponse $;

        public Builder() {
            $ = new BitbucketServerSecretsResponse();
        }

        public Builder(BitbucketServerSecretsResponse defaults) {
            $ = new BitbucketServerSecretsResponse(Objects.requireNonNull(defaults));
        }

        public Builder adminAccessTokenVersionName(String adminAccessTokenVersionName) {
            $.adminAccessTokenVersionName = adminAccessTokenVersionName;
            return this;
        }

        public Builder readAccessTokenVersionName(String readAccessTokenVersionName) {
            $.readAccessTokenVersionName = readAccessTokenVersionName;
            return this;
        }

        public Builder webhookSecretVersionName(String webhookSecretVersionName) {
            $.webhookSecretVersionName = webhookSecretVersionName;
            return this;
        }

        public BitbucketServerSecretsResponse build() {
            $.adminAccessTokenVersionName = Objects.requireNonNull($.adminAccessTokenVersionName, "expected parameter 'adminAccessTokenVersionName' to be non-null");
            $.readAccessTokenVersionName = Objects.requireNonNull($.readAccessTokenVersionName, "expected parameter 'readAccessTokenVersionName' to be non-null");
            $.webhookSecretVersionName = Objects.requireNonNull($.webhookSecretVersionName, "expected parameter 'webhookSecretVersionName' to be non-null");
            return $;
        }
    }

}
