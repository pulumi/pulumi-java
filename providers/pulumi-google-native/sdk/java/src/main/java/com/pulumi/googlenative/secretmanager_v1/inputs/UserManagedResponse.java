// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.secretmanager_v1.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.secretmanager_v1.inputs.ReplicaResponse;
import java.util.List;
import java.util.Objects;


/**
 * A replication policy that replicates the Secret payload into the locations specified in Secret.replication.user_managed.replicas
 * 
 */
public final class UserManagedResponse extends com.pulumi.resources.InvokeArgs {

    public static final UserManagedResponse Empty = new UserManagedResponse();

    /**
     * The list of Replicas for this Secret. Cannot be empty.
     * 
     */
    @Import(name="replicas", required=true)
    private List<ReplicaResponse> replicas;

    /**
     * @return The list of Replicas for this Secret. Cannot be empty.
     * 
     */
    public List<ReplicaResponse> replicas() {
        return this.replicas;
    }

    private UserManagedResponse() {}

    private UserManagedResponse(UserManagedResponse $) {
        this.replicas = $.replicas;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(UserManagedResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private UserManagedResponse $;

        public Builder() {
            $ = new UserManagedResponse();
        }

        public Builder(UserManagedResponse defaults) {
            $ = new UserManagedResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param replicas The list of Replicas for this Secret. Cannot be empty.
         * 
         * @return builder
         * 
         */
        public Builder replicas(List<ReplicaResponse> replicas) {
            $.replicas = replicas;
            return this;
        }

        /**
         * @param replicas The list of Replicas for this Secret. Cannot be empty.
         * 
         * @return builder
         * 
         */
        public Builder replicas(ReplicaResponse... replicas) {
            return replicas(List.of(replicas));
        }

        public UserManagedResponse build() {
            $.replicas = Objects.requireNonNull($.replicas, "expected parameter 'replicas' to be non-null");
            return $;
        }
    }

}
