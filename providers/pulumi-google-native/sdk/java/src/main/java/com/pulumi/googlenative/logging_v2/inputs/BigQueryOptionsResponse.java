// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.logging_v2.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.util.Objects;


/**
 * Options that change functionality of a sink exporting data to BigQuery.
 * 
 */
public final class BigQueryOptionsResponse extends com.pulumi.resources.InvokeArgs {

    public static final BigQueryOptionsResponse Empty = new BigQueryOptionsResponse();

    /**
     * Optional. Whether to use BigQuery&#39;s partition tables (https://cloud.google.com/bigquery/docs/partitioned-tables). By default, Cloud Logging creates dated tables based on the log entries&#39; timestamps, e.g. syslog_20170523. With partitioned tables the date suffix is no longer present and special query syntax (https://cloud.google.com/bigquery/docs/querying-partitioned-tables) has to be used instead. In both cases, tables are sharded based on UTC timezone.
     * 
     */
    @Import(name="usePartitionedTables", required=true)
    private Boolean usePartitionedTables;

    /**
     * @return Optional. Whether to use BigQuery&#39;s partition tables (https://cloud.google.com/bigquery/docs/partitioned-tables). By default, Cloud Logging creates dated tables based on the log entries&#39; timestamps, e.g. syslog_20170523. With partitioned tables the date suffix is no longer present and special query syntax (https://cloud.google.com/bigquery/docs/querying-partitioned-tables) has to be used instead. In both cases, tables are sharded based on UTC timezone.
     * 
     */
    public Boolean usePartitionedTables() {
        return this.usePartitionedTables;
    }

    /**
     * True if new timestamp column based partitioning is in use, false if legacy ingestion-time partitioning is in use.All new sinks will have this field set true and will use timestamp column based partitioning. If use_partitioned_tables is false, this value has no meaning and will be false. Legacy sinks using partitioned tables will have this field set to false.
     * 
     */
    @Import(name="usesTimestampColumnPartitioning", required=true)
    private Boolean usesTimestampColumnPartitioning;

    /**
     * @return True if new timestamp column based partitioning is in use, false if legacy ingestion-time partitioning is in use.All new sinks will have this field set true and will use timestamp column based partitioning. If use_partitioned_tables is false, this value has no meaning and will be false. Legacy sinks using partitioned tables will have this field set to false.
     * 
     */
    public Boolean usesTimestampColumnPartitioning() {
        return this.usesTimestampColumnPartitioning;
    }

    private BigQueryOptionsResponse() {}

    private BigQueryOptionsResponse(BigQueryOptionsResponse $) {
        this.usePartitionedTables = $.usePartitionedTables;
        this.usesTimestampColumnPartitioning = $.usesTimestampColumnPartitioning;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BigQueryOptionsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BigQueryOptionsResponse $;

        public Builder() {
            $ = new BigQueryOptionsResponse();
        }

        public Builder(BigQueryOptionsResponse defaults) {
            $ = new BigQueryOptionsResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param usePartitionedTables Optional. Whether to use BigQuery&#39;s partition tables (https://cloud.google.com/bigquery/docs/partitioned-tables). By default, Cloud Logging creates dated tables based on the log entries&#39; timestamps, e.g. syslog_20170523. With partitioned tables the date suffix is no longer present and special query syntax (https://cloud.google.com/bigquery/docs/querying-partitioned-tables) has to be used instead. In both cases, tables are sharded based on UTC timezone.
         * 
         * @return builder
         * 
         */
        public Builder usePartitionedTables(Boolean usePartitionedTables) {
            $.usePartitionedTables = usePartitionedTables;
            return this;
        }

        /**
         * @param usesTimestampColumnPartitioning True if new timestamp column based partitioning is in use, false if legacy ingestion-time partitioning is in use.All new sinks will have this field set true and will use timestamp column based partitioning. If use_partitioned_tables is false, this value has no meaning and will be false. Legacy sinks using partitioned tables will have this field set to false.
         * 
         * @return builder
         * 
         */
        public Builder usesTimestampColumnPartitioning(Boolean usesTimestampColumnPartitioning) {
            $.usesTimestampColumnPartitioning = usesTimestampColumnPartitioning;
            return this;
        }

        public BigQueryOptionsResponse build() {
            $.usePartitionedTables = Objects.requireNonNull($.usePartitionedTables, "expected parameter 'usePartitionedTables' to be non-null");
            $.usesTimestampColumnPartitioning = Objects.requireNonNull($.usesTimestampColumnPartitioning, "expected parameter 'usesTimestampColumnPartitioning' to be non-null");
            return $;
        }
    }

}
