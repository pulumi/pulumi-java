// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.apigateway_v1beta.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * A lightweight description of a file.
 * 
 */
public final class ApigatewayApiConfigFileResponse extends com.pulumi.resources.InvokeArgs {

    public static final ApigatewayApiConfigFileResponse Empty = new ApigatewayApiConfigFileResponse();

    /**
     * The bytes that constitute the file.
     * 
     */
    @Import(name="contents", required=true)
    private String contents;

    public String contents() {
        return this.contents;
    }

    /**
     * The file path (full or relative path). This is typically the path of the file when it is uploaded.
     * 
     */
    @Import(name="path", required=true)
    private String path;

    public String path() {
        return this.path;
    }

    private ApigatewayApiConfigFileResponse() {}

    private ApigatewayApiConfigFileResponse(ApigatewayApiConfigFileResponse $) {
        this.contents = $.contents;
        this.path = $.path;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ApigatewayApiConfigFileResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApigatewayApiConfigFileResponse $;

        public Builder() {
            $ = new ApigatewayApiConfigFileResponse();
        }

        public Builder(ApigatewayApiConfigFileResponse defaults) {
            $ = new ApigatewayApiConfigFileResponse(Objects.requireNonNull(defaults));
        }

        public Builder contents(String contents) {
            $.contents = contents;
            return this;
        }

        public Builder path(String path) {
            $.path = path;
            return this;
        }

        public ApigatewayApiConfigFileResponse build() {
            $.contents = Objects.requireNonNull($.contents, "expected parameter 'contents' to be non-null");
            $.path = Objects.requireNonNull($.path, "expected parameter 'path' to be non-null");
            return $;
        }
    }

}
