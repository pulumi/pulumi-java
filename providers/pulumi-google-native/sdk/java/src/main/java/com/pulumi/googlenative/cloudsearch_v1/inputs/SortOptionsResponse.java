// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.cloudsearch_v1.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class SortOptionsResponse extends com.pulumi.resources.InvokeArgs {

    public static final SortOptionsResponse Empty = new SortOptionsResponse();

    /**
     * Name of the operator corresponding to the field to sort on. The corresponding property must be marked as sortable.
     * 
     */
    @Import(name="operatorName", required=true)
    private String operatorName;

    /**
     * @return Name of the operator corresponding to the field to sort on. The corresponding property must be marked as sortable.
     * 
     */
    public String operatorName() {
        return this.operatorName;
    }

    /**
     * Ascending is the default sort order
     * 
     */
    @Import(name="sortOrder", required=true)
    private String sortOrder;

    /**
     * @return Ascending is the default sort order
     * 
     */
    public String sortOrder() {
        return this.sortOrder;
    }

    private SortOptionsResponse() {}

    private SortOptionsResponse(SortOptionsResponse $) {
        this.operatorName = $.operatorName;
        this.sortOrder = $.sortOrder;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SortOptionsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SortOptionsResponse $;

        public Builder() {
            $ = new SortOptionsResponse();
        }

        public Builder(SortOptionsResponse defaults) {
            $ = new SortOptionsResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param operatorName Name of the operator corresponding to the field to sort on. The corresponding property must be marked as sortable.
         * 
         * @return builder
         * 
         */
        public Builder operatorName(String operatorName) {
            $.operatorName = operatorName;
            return this;
        }

        /**
         * @param sortOrder Ascending is the default sort order
         * 
         * @return builder
         * 
         */
        public Builder sortOrder(String sortOrder) {
            $.sortOrder = sortOrder;
            return this;
        }

        public SortOptionsResponse build() {
            $.operatorName = Objects.requireNonNull($.operatorName, "expected parameter 'operatorName' to be non-null");
            $.sortOrder = Objects.requireNonNull($.sortOrder, "expected parameter 'sortOrder' to be non-null");
            return $;
        }
    }

}
