// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.dataproc_v1.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;


/**
 * Execution configuration for a workload.
 * 
 */
public final class ExecutionConfigResponse extends com.pulumi.resources.InvokeArgs {

    public static final ExecutionConfigResponse Empty = new ExecutionConfigResponse();

    /**
     * Optional. The Cloud KMS key to use for encryption.
     * 
     */
    @Import(name="kmsKey", required=true)
    private String kmsKey;

    /**
     * @return Optional. The Cloud KMS key to use for encryption.
     * 
     */
    public String kmsKey() {
        return this.kmsKey;
    }

    /**
     * Optional. Tags used for network traffic control.
     * 
     */
    @Import(name="networkTags", required=true)
    private List<String> networkTags;

    /**
     * @return Optional. Tags used for network traffic control.
     * 
     */
    public List<String> networkTags() {
        return this.networkTags;
    }

    /**
     * Optional. Network URI to connect workload to.
     * 
     */
    @Import(name="networkUri", required=true)
    private String networkUri;

    /**
     * @return Optional. Network URI to connect workload to.
     * 
     */
    public String networkUri() {
        return this.networkUri;
    }

    /**
     * Optional. Service account that used to execute workload.
     * 
     */
    @Import(name="serviceAccount", required=true)
    private String serviceAccount;

    /**
     * @return Optional. Service account that used to execute workload.
     * 
     */
    public String serviceAccount() {
        return this.serviceAccount;
    }

    /**
     * Optional. Subnetwork URI to connect workload to.
     * 
     */
    @Import(name="subnetworkUri", required=true)
    private String subnetworkUri;

    /**
     * @return Optional. Subnetwork URI to connect workload to.
     * 
     */
    public String subnetworkUri() {
        return this.subnetworkUri;
    }

    private ExecutionConfigResponse() {}

    private ExecutionConfigResponse(ExecutionConfigResponse $) {
        this.kmsKey = $.kmsKey;
        this.networkTags = $.networkTags;
        this.networkUri = $.networkUri;
        this.serviceAccount = $.serviceAccount;
        this.subnetworkUri = $.subnetworkUri;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ExecutionConfigResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ExecutionConfigResponse $;

        public Builder() {
            $ = new ExecutionConfigResponse();
        }

        public Builder(ExecutionConfigResponse defaults) {
            $ = new ExecutionConfigResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param kmsKey Optional. The Cloud KMS key to use for encryption.
         * 
         * @return builder
         * 
         */
        public Builder kmsKey(String kmsKey) {
            $.kmsKey = kmsKey;
            return this;
        }

        /**
         * @param networkTags Optional. Tags used for network traffic control.
         * 
         * @return builder
         * 
         */
        public Builder networkTags(List<String> networkTags) {
            $.networkTags = networkTags;
            return this;
        }

        /**
         * @param networkTags Optional. Tags used for network traffic control.
         * 
         * @return builder
         * 
         */
        public Builder networkTags(String... networkTags) {
            return networkTags(List.of(networkTags));
        }

        /**
         * @param networkUri Optional. Network URI to connect workload to.
         * 
         * @return builder
         * 
         */
        public Builder networkUri(String networkUri) {
            $.networkUri = networkUri;
            return this;
        }

        /**
         * @param serviceAccount Optional. Service account that used to execute workload.
         * 
         * @return builder
         * 
         */
        public Builder serviceAccount(String serviceAccount) {
            $.serviceAccount = serviceAccount;
            return this;
        }

        /**
         * @param subnetworkUri Optional. Subnetwork URI to connect workload to.
         * 
         * @return builder
         * 
         */
        public Builder subnetworkUri(String subnetworkUri) {
            $.subnetworkUri = subnetworkUri;
            return this;
        }

        public ExecutionConfigResponse build() {
            $.kmsKey = Objects.requireNonNull($.kmsKey, "expected parameter 'kmsKey' to be non-null");
            $.networkTags = Objects.requireNonNull($.networkTags, "expected parameter 'networkTags' to be non-null");
            $.networkUri = Objects.requireNonNull($.networkUri, "expected parameter 'networkUri' to be non-null");
            $.serviceAccount = Objects.requireNonNull($.serviceAccount, "expected parameter 'serviceAccount' to be non-null");
            $.subnetworkUri = Objects.requireNonNull($.subnetworkUri, "expected parameter 'subnetworkUri' to be non-null");
            return $;
        }
    }

}
