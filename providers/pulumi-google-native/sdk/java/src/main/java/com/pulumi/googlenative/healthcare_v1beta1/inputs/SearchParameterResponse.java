// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.healthcare_v1beta1.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * Contains the versioned name and the URL for one SearchParameter.
 * 
 */
public final class SearchParameterResponse extends com.pulumi.resources.InvokeArgs {

    public static final SearchParameterResponse Empty = new SearchParameterResponse();

    /**
     * The canonical url of the search parameter resource.
     * 
     */
    @Import(name="canonicalUrl", required=true)
    private String canonicalUrl;

    public String canonicalUrl() {
        return this.canonicalUrl;
    }

    /**
     * The versioned name of the search parameter resource. The format is projects/{project-id}/locations/{location}/datasets/{dataset-id}/fhirStores/{fhirStore-id}/fhir/SearchParameter/{resource-id}/_history/{version-id} For fhir stores with disable_resource_versioning=true, the format is projects/{project-id}/locations/{location}/datasets/{dataset-id}/fhirStores/{fhirStore-id}/fhir/SearchParameter/{resource-id}/
     * 
     */
    @Import(name="parameter", required=true)
    private String parameter;

    public String parameter() {
        return this.parameter;
    }

    private SearchParameterResponse() {}

    private SearchParameterResponse(SearchParameterResponse $) {
        this.canonicalUrl = $.canonicalUrl;
        this.parameter = $.parameter;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SearchParameterResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SearchParameterResponse $;

        public Builder() {
            $ = new SearchParameterResponse();
        }

        public Builder(SearchParameterResponse defaults) {
            $ = new SearchParameterResponse(Objects.requireNonNull(defaults));
        }

        public Builder canonicalUrl(String canonicalUrl) {
            $.canonicalUrl = canonicalUrl;
            return this;
        }

        public Builder parameter(String parameter) {
            $.parameter = parameter;
            return this;
        }

        public SearchParameterResponse build() {
            $.canonicalUrl = Objects.requireNonNull($.canonicalUrl, "expected parameter 'canonicalUrl' to be non-null");
            $.parameter = Objects.requireNonNull($.parameter, "expected parameter 'parameter' to be non-null");
            return $;
        }
    }

}
