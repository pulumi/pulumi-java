// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.certificatemanager.v1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.certificatemanager.v1.enums.ProvisioningIssueReason;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Information about issues with provisioning a Managed Certificate.
 * 
 */
public final class ProvisioningIssueArgs extends com.pulumi.resources.ResourceArgs {

    public static final ProvisioningIssueArgs Empty = new ProvisioningIssueArgs();

    /**
     * Human readable explanation about the issue. Provided to help address the configuration issues. Not guaranteed to be stable. For programmatic access use Reason enum.
     * 
     */
    @Import(name="details")
    private @Nullable Output<String> details;

    /**
     * @return Human readable explanation about the issue. Provided to help address the configuration issues. Not guaranteed to be stable. For programmatic access use Reason enum.
     * 
     */
    public Optional<Output<String>> details() {
        return Optional.ofNullable(this.details);
    }

    /**
     * Reason for provisioning failures.
     * 
     */
    @Import(name="reason")
    private @Nullable Output<ProvisioningIssueReason> reason;

    /**
     * @return Reason for provisioning failures.
     * 
     */
    public Optional<Output<ProvisioningIssueReason>> reason() {
        return Optional.ofNullable(this.reason);
    }

    private ProvisioningIssueArgs() {}

    private ProvisioningIssueArgs(ProvisioningIssueArgs $) {
        this.details = $.details;
        this.reason = $.reason;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ProvisioningIssueArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ProvisioningIssueArgs $;

        public Builder() {
            $ = new ProvisioningIssueArgs();
        }

        public Builder(ProvisioningIssueArgs defaults) {
            $ = new ProvisioningIssueArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param details Human readable explanation about the issue. Provided to help address the configuration issues. Not guaranteed to be stable. For programmatic access use Reason enum.
         * 
         * @return builder
         * 
         */
        public Builder details(@Nullable Output<String> details) {
            $.details = details;
            return this;
        }

        /**
         * @param details Human readable explanation about the issue. Provided to help address the configuration issues. Not guaranteed to be stable. For programmatic access use Reason enum.
         * 
         * @return builder
         * 
         */
        public Builder details(String details) {
            return details(Output.of(details));
        }

        /**
         * @param reason Reason for provisioning failures.
         * 
         * @return builder
         * 
         */
        public Builder reason(@Nullable Output<ProvisioningIssueReason> reason) {
            $.reason = reason;
            return this;
        }

        /**
         * @param reason Reason for provisioning failures.
         * 
         * @return builder
         * 
         */
        public Builder reason(ProvisioningIssueReason reason) {
            return reason(Output.of(reason));
        }

        public ProvisioningIssueArgs build() {
            return $;
        }
    }

}
