// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.accesscontextmanager_v1beta.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.accesscontextmanager_v1beta.inputs.VpcAccessibleServicesResponse;
import java.lang.String;
import java.util.List;
import java.util.Objects;


/**
 * `ServicePerimeterConfig` specifies a set of Google Cloud resources that describe specific Service Perimeter configuration.
 * 
 */
public final class ServicePerimeterConfigResponse extends com.pulumi.resources.InvokeArgs {

    public static final ServicePerimeterConfigResponse Empty = new ServicePerimeterConfigResponse();

    /**
     * A list of `AccessLevel` resource names that allow resources within the `ServicePerimeter` to be accessed from the internet. `AccessLevels` listed must be in the same policy as this `ServicePerimeter`. Referencing a nonexistent `AccessLevel` is a syntax error. If no `AccessLevel` names are listed, resources within the perimeter can only be accessed via Google Cloud calls with request origins within the perimeter. Example: `&#34;accessPolicies/MY_POLICY/accessLevels/MY_LEVEL&#34;`. For Service Perimeter Bridge, must be empty.
     * 
     */
    @Import(name="accessLevels", required=true)
      private final List<String> accessLevels;

    public List<String> accessLevels() {
        return this.accessLevels;
    }

    /**
     * A list of Google Cloud resources that are inside of the service perimeter. Currently only projects are allowed. Format: `projects/{project_number}`
     * 
     */
    @Import(name="resources", required=true)
      private final List<String> resources;

    public List<String> resources() {
        return this.resources;
    }

    /**
     * Google Cloud services that are subject to the Service Perimeter restrictions. Must contain a list of services. For example, if `storage.googleapis.com` is specified, access to the storage buckets inside the perimeter must meet the perimeter&#39;s access restrictions.
     * 
     */
    @Import(name="restrictedServices", required=true)
      private final List<String> restrictedServices;

    public List<String> restrictedServices() {
        return this.restrictedServices;
    }

    /**
     * Beta. Configuration for APIs allowed within Perimeter.
     * 
     */
    @Import(name="vpcAccessibleServices", required=true)
      private final VpcAccessibleServicesResponse vpcAccessibleServices;

    public VpcAccessibleServicesResponse vpcAccessibleServices() {
        return this.vpcAccessibleServices;
    }

    public ServicePerimeterConfigResponse(
        List<String> accessLevels,
        List<String> resources,
        List<String> restrictedServices,
        VpcAccessibleServicesResponse vpcAccessibleServices) {
        this.accessLevels = Objects.requireNonNull(accessLevels, "expected parameter 'accessLevels' to be non-null");
        this.resources = Objects.requireNonNull(resources, "expected parameter 'resources' to be non-null");
        this.restrictedServices = Objects.requireNonNull(restrictedServices, "expected parameter 'restrictedServices' to be non-null");
        this.vpcAccessibleServices = Objects.requireNonNull(vpcAccessibleServices, "expected parameter 'vpcAccessibleServices' to be non-null");
    }

    private ServicePerimeterConfigResponse() {
        this.accessLevels = List.of();
        this.resources = List.of();
        this.restrictedServices = List.of();
        this.vpcAccessibleServices = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ServicePerimeterConfigResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<String> accessLevels;
        private List<String> resources;
        private List<String> restrictedServices;
        private VpcAccessibleServicesResponse vpcAccessibleServices;

        public Builder() {
    	      // Empty
        }

        public Builder(ServicePerimeterConfigResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessLevels = defaults.accessLevels;
    	      this.resources = defaults.resources;
    	      this.restrictedServices = defaults.restrictedServices;
    	      this.vpcAccessibleServices = defaults.vpcAccessibleServices;
        }

        public Builder accessLevels(List<String> accessLevels) {
            this.accessLevels = Objects.requireNonNull(accessLevels);
            return this;
        }
        public Builder accessLevels(String... accessLevels) {
            return accessLevels(List.of(accessLevels));
        }
        public Builder resources(List<String> resources) {
            this.resources = Objects.requireNonNull(resources);
            return this;
        }
        public Builder resources(String... resources) {
            return resources(List.of(resources));
        }
        public Builder restrictedServices(List<String> restrictedServices) {
            this.restrictedServices = Objects.requireNonNull(restrictedServices);
            return this;
        }
        public Builder restrictedServices(String... restrictedServices) {
            return restrictedServices(List.of(restrictedServices));
        }
        public Builder vpcAccessibleServices(VpcAccessibleServicesResponse vpcAccessibleServices) {
            this.vpcAccessibleServices = Objects.requireNonNull(vpcAccessibleServices);
            return this;
        }        public ServicePerimeterConfigResponse build() {
            return new ServicePerimeterConfigResponse(accessLevels, resources, restrictedServices, vpcAccessibleServices);
        }
    }
}
