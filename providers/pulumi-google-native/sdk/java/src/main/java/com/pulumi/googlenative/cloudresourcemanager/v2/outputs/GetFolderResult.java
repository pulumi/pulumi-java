// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.cloudresourcemanager.v2.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetFolderResult {
    /**
     * @return Timestamp when the Folder was created. Assigned by the server.
     * 
     */
    private final String createTime;
    /**
     * @return The folder&#39;s display name. A folder&#39;s display name must be unique amongst its siblings, e.g. no two folders with the same parent can share the same display name. The display name must start and end with a letter or digit, may contain letters, digits, spaces, hyphens and underscores and can be no longer than 30 characters. This is captured by the regular expression: `[\p{L}\p{N}]([\p{L}\p{N}_- ]{0,28}[\p{L}\p{N}])?`.
     * 
     */
    private final String displayName;
    /**
     * @return The lifecycle state of the folder. Updates to the lifecycle_state must be performed via DeleteFolder and UndeleteFolder.
     * 
     */
    private final String lifecycleState;
    /**
     * @return The resource name of the Folder. Its format is `folders/{folder_id}`, for example: &#34;folders/1234&#34;.
     * 
     */
    private final String name;
    /**
     * @return The Folder&#39;s parent&#39;s resource name. Updates to the folder&#39;s parent must be performed via MoveFolder.
     * 
     */
    private final String parent;

    @CustomType.Constructor
    private GetFolderResult(
        @CustomType.Parameter("createTime") String createTime,
        @CustomType.Parameter("displayName") String displayName,
        @CustomType.Parameter("lifecycleState") String lifecycleState,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("parent") String parent) {
        this.createTime = createTime;
        this.displayName = displayName;
        this.lifecycleState = lifecycleState;
        this.name = name;
        this.parent = parent;
    }

    /**
     * @return Timestamp when the Folder was created. Assigned by the server.
     * 
     */
    public String createTime() {
        return this.createTime;
    }
    /**
     * @return The folder&#39;s display name. A folder&#39;s display name must be unique amongst its siblings, e.g. no two folders with the same parent can share the same display name. The display name must start and end with a letter or digit, may contain letters, digits, spaces, hyphens and underscores and can be no longer than 30 characters. This is captured by the regular expression: `[\p{L}\p{N}]([\p{L}\p{N}_- ]{0,28}[\p{L}\p{N}])?`.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return The lifecycle state of the folder. Updates to the lifecycle_state must be performed via DeleteFolder and UndeleteFolder.
     * 
     */
    public String lifecycleState() {
        return this.lifecycleState;
    }
    /**
     * @return The resource name of the Folder. Its format is `folders/{folder_id}`, for example: &#34;folders/1234&#34;.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The Folder&#39;s parent&#39;s resource name. Updates to the folder&#39;s parent must be performed via MoveFolder.
     * 
     */
    public String parent() {
        return this.parent;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetFolderResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String createTime;
        private String displayName;
        private String lifecycleState;
        private String name;
        private String parent;

        public Builder() {
    	      // Empty
        }

        public Builder(GetFolderResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.createTime = defaults.createTime;
    	      this.displayName = defaults.displayName;
    	      this.lifecycleState = defaults.lifecycleState;
    	      this.name = defaults.name;
    	      this.parent = defaults.parent;
        }

        public Builder createTime(String createTime) {
            this.createTime = Objects.requireNonNull(createTime);
            return this;
        }
        public Builder displayName(String displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }
        public Builder lifecycleState(String lifecycleState) {
            this.lifecycleState = Objects.requireNonNull(lifecycleState);
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder parent(String parent) {
            this.parent = Objects.requireNonNull(parent);
            return this;
        }        public GetFolderResult build() {
            return new GetFolderResult(createTime, displayName, lifecycleState, name, parent);
        }
    }
}
