// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.testing.v1.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class AndroidMatrixResponse {
    /**
     * @return The ids of the set of Android device to be used. Use the TestEnvironmentDiscoveryService to get supported options.
     * 
     */
    private final List<String> androidModelIds;
    /**
     * @return The ids of the set of Android OS version to be used. Use the TestEnvironmentDiscoveryService to get supported options.
     * 
     */
    private final List<String> androidVersionIds;
    /**
     * @return The set of locales the test device will enable for testing. Use the TestEnvironmentDiscoveryService to get supported options.
     * 
     */
    private final List<String> locales;
    /**
     * @return The set of orientations to test with. Use the TestEnvironmentDiscoveryService to get supported options.
     * 
     */
    private final List<String> orientations;

    @CustomType.Constructor
    private AndroidMatrixResponse(
        @CustomType.Parameter("androidModelIds") List<String> androidModelIds,
        @CustomType.Parameter("androidVersionIds") List<String> androidVersionIds,
        @CustomType.Parameter("locales") List<String> locales,
        @CustomType.Parameter("orientations") List<String> orientations) {
        this.androidModelIds = androidModelIds;
        this.androidVersionIds = androidVersionIds;
        this.locales = locales;
        this.orientations = orientations;
    }

    /**
     * @return The ids of the set of Android device to be used. Use the TestEnvironmentDiscoveryService to get supported options.
     * 
     */
    public List<String> androidModelIds() {
        return this.androidModelIds;
    }
    /**
     * @return The ids of the set of Android OS version to be used. Use the TestEnvironmentDiscoveryService to get supported options.
     * 
     */
    public List<String> androidVersionIds() {
        return this.androidVersionIds;
    }
    /**
     * @return The set of locales the test device will enable for testing. Use the TestEnvironmentDiscoveryService to get supported options.
     * 
     */
    public List<String> locales() {
        return this.locales;
    }
    /**
     * @return The set of orientations to test with. Use the TestEnvironmentDiscoveryService to get supported options.
     * 
     */
    public List<String> orientations() {
        return this.orientations;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AndroidMatrixResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<String> androidModelIds;
        private List<String> androidVersionIds;
        private List<String> locales;
        private List<String> orientations;

        public Builder() {
    	      // Empty
        }

        public Builder(AndroidMatrixResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.androidModelIds = defaults.androidModelIds;
    	      this.androidVersionIds = defaults.androidVersionIds;
    	      this.locales = defaults.locales;
    	      this.orientations = defaults.orientations;
        }

        public Builder androidModelIds(List<String> androidModelIds) {
            this.androidModelIds = Objects.requireNonNull(androidModelIds);
            return this;
        }
        public Builder androidModelIds(String... androidModelIds) {
            return androidModelIds(List.of(androidModelIds));
        }
        public Builder androidVersionIds(List<String> androidVersionIds) {
            this.androidVersionIds = Objects.requireNonNull(androidVersionIds);
            return this;
        }
        public Builder androidVersionIds(String... androidVersionIds) {
            return androidVersionIds(List.of(androidVersionIds));
        }
        public Builder locales(List<String> locales) {
            this.locales = Objects.requireNonNull(locales);
            return this;
        }
        public Builder locales(String... locales) {
            return locales(List.of(locales));
        }
        public Builder orientations(List<String> orientations) {
            this.orientations = Objects.requireNonNull(orientations);
            return this;
        }
        public Builder orientations(String... orientations) {
            return orientations(List.of(orientations));
        }        public AndroidMatrixResponse build() {
            return new AndroidMatrixResponse(androidModelIds, androidVersionIds, locales, orientations);
        }
    }
}
