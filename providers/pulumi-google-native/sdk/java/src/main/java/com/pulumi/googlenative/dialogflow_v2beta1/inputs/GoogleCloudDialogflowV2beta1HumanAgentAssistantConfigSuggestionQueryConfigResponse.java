// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.dialogflow_v2beta1.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.dialogflow_v2beta1.inputs.GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionQueryConfigContextFilterSettingsResponse;
import com.pulumi.googlenative.dialogflow_v2beta1.inputs.GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionQueryConfigDialogflowQuerySourceResponse;
import com.pulumi.googlenative.dialogflow_v2beta1.inputs.GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionQueryConfigDocumentQuerySourceResponse;
import com.pulumi.googlenative.dialogflow_v2beta1.inputs.GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionQueryConfigKnowledgeBaseQuerySourceResponse;
import java.lang.Double;
import java.lang.Integer;
import java.util.Objects;


/**
 * Config for suggestion query.
 * 
 */
public final class GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionQueryConfigResponse extends com.pulumi.resources.InvokeArgs {

    public static final GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionQueryConfigResponse Empty = new GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionQueryConfigResponse();

    /**
     * Confidence threshold of query result. Agent Assist gives each suggestion a score in the range [0.0, 1.0], based on the relevance between the suggestion and the current conversation context. A score of 0.0 has no relevance, while a score of 1.0 has high relevance. Only suggestions with a score greater than or equal to the value of this field are included in the results. For a baseline model (the default), the recommended value is in the range [0.05, 0.1]. For a custom model, there is no recommended value. Tune this value by starting from a very low value and slowly increasing until you have desired results. If this field is not set, it is default to 0.0, which means that all suggestions are returned. Supported features: ARTICLE_SUGGESTION, FAQ, SMART_REPLY, SMART_COMPOSE.
     * 
     */
    @Import(name="confidenceThreshold", required=true)
      private final Double confidenceThreshold;

    public Double confidenceThreshold() {
        return this.confidenceThreshold;
    }

    /**
     * Determines how recent conversation context is filtered when generating suggestions. If unspecified, no messages will be dropped.
     * 
     */
    @Import(name="contextFilterSettings", required=true)
      private final GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionQueryConfigContextFilterSettingsResponse contextFilterSettings;

    public GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionQueryConfigContextFilterSettingsResponse contextFilterSettings() {
        return this.contextFilterSettings;
    }

    /**
     * Query from Dialogflow agent. It is used by DIALOGFLOW_ASSIST.
     * 
     */
    @Import(name="dialogflowQuerySource", required=true)
      private final GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionQueryConfigDialogflowQuerySourceResponse dialogflowQuerySource;

    public GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionQueryConfigDialogflowQuerySourceResponse dialogflowQuerySource() {
        return this.dialogflowQuerySource;
    }

    /**
     * Query from knowledge base document. It is used by: SMART_REPLY, SMART_COMPOSE.
     * 
     */
    @Import(name="documentQuerySource", required=true)
      private final GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionQueryConfigDocumentQuerySourceResponse documentQuerySource;

    public GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionQueryConfigDocumentQuerySourceResponse documentQuerySource() {
        return this.documentQuerySource;
    }

    /**
     * Query from knowledgebase. It is used by: ARTICLE_SUGGESTION, FAQ.
     * 
     */
    @Import(name="knowledgeBaseQuerySource", required=true)
      private final GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionQueryConfigKnowledgeBaseQuerySourceResponse knowledgeBaseQuerySource;

    public GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionQueryConfigKnowledgeBaseQuerySourceResponse knowledgeBaseQuerySource() {
        return this.knowledgeBaseQuerySource;
    }

    /**
     * Maximum number of results to return. Currently, if unset, defaults to 10. And the max number is 20.
     * 
     */
    @Import(name="maxResults", required=true)
      private final Integer maxResults;

    public Integer maxResults() {
        return this.maxResults;
    }

    public GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionQueryConfigResponse(
        Double confidenceThreshold,
        GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionQueryConfigContextFilterSettingsResponse contextFilterSettings,
        GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionQueryConfigDialogflowQuerySourceResponse dialogflowQuerySource,
        GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionQueryConfigDocumentQuerySourceResponse documentQuerySource,
        GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionQueryConfigKnowledgeBaseQuerySourceResponse knowledgeBaseQuerySource,
        Integer maxResults) {
        this.confidenceThreshold = Objects.requireNonNull(confidenceThreshold, "expected parameter 'confidenceThreshold' to be non-null");
        this.contextFilterSettings = Objects.requireNonNull(contextFilterSettings, "expected parameter 'contextFilterSettings' to be non-null");
        this.dialogflowQuerySource = Objects.requireNonNull(dialogflowQuerySource, "expected parameter 'dialogflowQuerySource' to be non-null");
        this.documentQuerySource = Objects.requireNonNull(documentQuerySource, "expected parameter 'documentQuerySource' to be non-null");
        this.knowledgeBaseQuerySource = Objects.requireNonNull(knowledgeBaseQuerySource, "expected parameter 'knowledgeBaseQuerySource' to be non-null");
        this.maxResults = Objects.requireNonNull(maxResults, "expected parameter 'maxResults' to be non-null");
    }

    private GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionQueryConfigResponse() {
        this.confidenceThreshold = null;
        this.contextFilterSettings = null;
        this.dialogflowQuerySource = null;
        this.documentQuerySource = null;
        this.knowledgeBaseQuerySource = null;
        this.maxResults = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionQueryConfigResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Double confidenceThreshold;
        private GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionQueryConfigContextFilterSettingsResponse contextFilterSettings;
        private GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionQueryConfigDialogflowQuerySourceResponse dialogflowQuerySource;
        private GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionQueryConfigDocumentQuerySourceResponse documentQuerySource;
        private GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionQueryConfigKnowledgeBaseQuerySourceResponse knowledgeBaseQuerySource;
        private Integer maxResults;

        public Builder() {
    	      // Empty
        }

        public Builder(GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionQueryConfigResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.confidenceThreshold = defaults.confidenceThreshold;
    	      this.contextFilterSettings = defaults.contextFilterSettings;
    	      this.dialogflowQuerySource = defaults.dialogflowQuerySource;
    	      this.documentQuerySource = defaults.documentQuerySource;
    	      this.knowledgeBaseQuerySource = defaults.knowledgeBaseQuerySource;
    	      this.maxResults = defaults.maxResults;
        }

        public Builder confidenceThreshold(Double confidenceThreshold) {
            this.confidenceThreshold = Objects.requireNonNull(confidenceThreshold);
            return this;
        }
        public Builder contextFilterSettings(GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionQueryConfigContextFilterSettingsResponse contextFilterSettings) {
            this.contextFilterSettings = Objects.requireNonNull(contextFilterSettings);
            return this;
        }
        public Builder dialogflowQuerySource(GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionQueryConfigDialogflowQuerySourceResponse dialogflowQuerySource) {
            this.dialogflowQuerySource = Objects.requireNonNull(dialogflowQuerySource);
            return this;
        }
        public Builder documentQuerySource(GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionQueryConfigDocumentQuerySourceResponse documentQuerySource) {
            this.documentQuerySource = Objects.requireNonNull(documentQuerySource);
            return this;
        }
        public Builder knowledgeBaseQuerySource(GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionQueryConfigKnowledgeBaseQuerySourceResponse knowledgeBaseQuerySource) {
            this.knowledgeBaseQuerySource = Objects.requireNonNull(knowledgeBaseQuerySource);
            return this;
        }
        public Builder maxResults(Integer maxResults) {
            this.maxResults = Objects.requireNonNull(maxResults);
            return this;
        }        public GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionQueryConfigResponse build() {
            return new GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionQueryConfigResponse(confidenceThreshold, contextFilterSettings, dialogflowQuerySource, documentQuerySource, knowledgeBaseQuerySource, maxResults);
        }
    }
}
