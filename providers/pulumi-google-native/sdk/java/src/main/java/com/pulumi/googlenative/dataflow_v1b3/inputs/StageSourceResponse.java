// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.dataflow_v1b3.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * Description of an input or output of an execution stage.
 * 
 */
public final class StageSourceResponse extends com.pulumi.resources.InvokeArgs {

    public static final StageSourceResponse Empty = new StageSourceResponse();

    /**
     * Dataflow service generated name for this source.
     * 
     */
    @Import(name="name", required=true)
    private String name;

    /**
     * @return Dataflow service generated name for this source.
     * 
     */
    public String name() {
        return this.name;
    }

    /**
     * User name for the original user transform or collection with which this source is most closely associated.
     * 
     */
    @Import(name="originalTransformOrCollection", required=true)
    private String originalTransformOrCollection;

    /**
     * @return User name for the original user transform or collection with which this source is most closely associated.
     * 
     */
    public String originalTransformOrCollection() {
        return this.originalTransformOrCollection;
    }

    /**
     * Size of the source, if measurable.
     * 
     */
    @Import(name="sizeBytes", required=true)
    private String sizeBytes;

    /**
     * @return Size of the source, if measurable.
     * 
     */
    public String sizeBytes() {
        return this.sizeBytes;
    }

    /**
     * Human-readable name for this source; may be user or system generated.
     * 
     */
    @Import(name="userName", required=true)
    private String userName;

    /**
     * @return Human-readable name for this source; may be user or system generated.
     * 
     */
    public String userName() {
        return this.userName;
    }

    private StageSourceResponse() {}

    private StageSourceResponse(StageSourceResponse $) {
        this.name = $.name;
        this.originalTransformOrCollection = $.originalTransformOrCollection;
        this.sizeBytes = $.sizeBytes;
        this.userName = $.userName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(StageSourceResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private StageSourceResponse $;

        public Builder() {
            $ = new StageSourceResponse();
        }

        public Builder(StageSourceResponse defaults) {
            $ = new StageSourceResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param name Dataflow service generated name for this source.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            $.name = name;
            return this;
        }

        /**
         * @param originalTransformOrCollection User name for the original user transform or collection with which this source is most closely associated.
         * 
         * @return builder
         * 
         */
        public Builder originalTransformOrCollection(String originalTransformOrCollection) {
            $.originalTransformOrCollection = originalTransformOrCollection;
            return this;
        }

        /**
         * @param sizeBytes Size of the source, if measurable.
         * 
         * @return builder
         * 
         */
        public Builder sizeBytes(String sizeBytes) {
            $.sizeBytes = sizeBytes;
            return this;
        }

        /**
         * @param userName Human-readable name for this source; may be user or system generated.
         * 
         * @return builder
         * 
         */
        public Builder userName(String userName) {
            $.userName = userName;
            return this;
        }

        public StageSourceResponse build() {
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            $.originalTransformOrCollection = Objects.requireNonNull($.originalTransformOrCollection, "expected parameter 'originalTransformOrCollection' to be non-null");
            $.sizeBytes = Objects.requireNonNull($.sizeBytes, "expected parameter 'sizeBytes' to be non-null");
            $.userName = Objects.requireNonNull($.userName, "expected parameter 'userName' to be non-null");
            return $;
        }
    }

}
