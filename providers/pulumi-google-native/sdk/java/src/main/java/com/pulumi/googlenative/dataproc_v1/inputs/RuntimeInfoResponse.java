// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.dataproc_v1.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;


/**
 * Runtime information about workload execution.
 * 
 */
public final class RuntimeInfoResponse extends com.pulumi.resources.InvokeArgs {

    public static final RuntimeInfoResponse Empty = new RuntimeInfoResponse();

    /**
     * A URI pointing to the location of the diagnostics tarball.
     * 
     */
    @Import(name="diagnosticOutputUri", required=true)
    private String diagnosticOutputUri;

    public String diagnosticOutputUri() {
        return this.diagnosticOutputUri;
    }

    /**
     * Map of remote access endpoints (such as web interfaces and APIs) to their URIs.
     * 
     */
    @Import(name="endpoints", required=true)
    private Map<String,String> endpoints;

    public Map<String,String> endpoints() {
        return this.endpoints;
    }

    /**
     * A URI pointing to the location of the stdout and stderr of the workload.
     * 
     */
    @Import(name="outputUri", required=true)
    private String outputUri;

    public String outputUri() {
        return this.outputUri;
    }

    private RuntimeInfoResponse() {}

    private RuntimeInfoResponse(RuntimeInfoResponse $) {
        this.diagnosticOutputUri = $.diagnosticOutputUri;
        this.endpoints = $.endpoints;
        this.outputUri = $.outputUri;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RuntimeInfoResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RuntimeInfoResponse $;

        public Builder() {
            $ = new RuntimeInfoResponse();
        }

        public Builder(RuntimeInfoResponse defaults) {
            $ = new RuntimeInfoResponse(Objects.requireNonNull(defaults));
        }

        public Builder diagnosticOutputUri(String diagnosticOutputUri) {
            $.diagnosticOutputUri = diagnosticOutputUri;
            return this;
        }

        public Builder endpoints(Map<String,String> endpoints) {
            $.endpoints = endpoints;
            return this;
        }

        public Builder outputUri(String outputUri) {
            $.outputUri = outputUri;
            return this;
        }

        public RuntimeInfoResponse build() {
            $.diagnosticOutputUri = Objects.requireNonNull($.diagnosticOutputUri, "expected parameter 'diagnosticOutputUri' to be non-null");
            $.endpoints = Objects.requireNonNull($.endpoints, "expected parameter 'endpoints' to be non-null");
            $.outputUri = Objects.requireNonNull($.outputUri, "expected parameter 'outputUri' to be non-null");
            return $;
        }
    }

}
