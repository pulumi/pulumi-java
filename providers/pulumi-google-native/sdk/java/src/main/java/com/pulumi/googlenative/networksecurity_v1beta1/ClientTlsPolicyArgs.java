// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.networksecurity_v1beta1;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.networksecurity_v1beta1.inputs.GoogleCloudNetworksecurityV1beta1CertificateProviderArgs;
import com.pulumi.googlenative.networksecurity_v1beta1.inputs.ValidationCAArgs;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ClientTlsPolicyArgs extends com.pulumi.resources.ResourceArgs {

    public static final ClientTlsPolicyArgs Empty = new ClientTlsPolicyArgs();

    /**
     * Optional. Defines a mechanism to provision client identity (public and private keys) for peer to peer authentication. The presence of this dictates mTLS.
     * 
     */
    @Import(name="clientCertificate")
    private @Nullable Output<GoogleCloudNetworksecurityV1beta1CertificateProviderArgs> clientCertificate;

    public Optional<Output<GoogleCloudNetworksecurityV1beta1CertificateProviderArgs>> clientCertificate() {
        return Optional.ofNullable(this.clientCertificate);
    }

    @Import(name="clientTlsPolicyId", required=true)
    private Output<String> clientTlsPolicyId;

    public Output<String> clientTlsPolicyId() {
        return this.clientTlsPolicyId;
    }

    /**
     * Optional. Free-text description of the resource.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Optional. Set of label tags associated with the resource.
     * 
     */
    @Import(name="labels")
    private @Nullable Output<Map<String,String>> labels;

    public Optional<Output<Map<String,String>>> labels() {
        return Optional.ofNullable(this.labels);
    }

    @Import(name="location")
    private @Nullable Output<String> location;

    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * Name of the ClientTlsPolicy resource. It matches the pattern `projects/*{@literal /}locations/{location}/clientTlsPolicies/{client_tls_policy}`
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="project")
    private @Nullable Output<String> project;

    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * Optional. Defines the mechanism to obtain the Certificate Authority certificate to validate the server certificate. If empty, client does not validate the server certificate.
     * 
     */
    @Import(name="serverValidationCa")
    private @Nullable Output<List<ValidationCAArgs>> serverValidationCa;

    public Optional<Output<List<ValidationCAArgs>>> serverValidationCa() {
        return Optional.ofNullable(this.serverValidationCa);
    }

    /**
     * Optional. Server Name Indication string to present to the server during TLS handshake. E.g: &#34;secure.example.com&#34;.
     * 
     */
    @Import(name="sni")
    private @Nullable Output<String> sni;

    public Optional<Output<String>> sni() {
        return Optional.ofNullable(this.sni);
    }

    private ClientTlsPolicyArgs() {}

    private ClientTlsPolicyArgs(ClientTlsPolicyArgs $) {
        this.clientCertificate = $.clientCertificate;
        this.clientTlsPolicyId = $.clientTlsPolicyId;
        this.description = $.description;
        this.labels = $.labels;
        this.location = $.location;
        this.name = $.name;
        this.project = $.project;
        this.serverValidationCa = $.serverValidationCa;
        this.sni = $.sni;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClientTlsPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClientTlsPolicyArgs $;

        public Builder() {
            $ = new ClientTlsPolicyArgs();
        }

        public Builder(ClientTlsPolicyArgs defaults) {
            $ = new ClientTlsPolicyArgs(Objects.requireNonNull(defaults));
        }

        public Builder clientCertificate(@Nullable Output<GoogleCloudNetworksecurityV1beta1CertificateProviderArgs> clientCertificate) {
            $.clientCertificate = clientCertificate;
            return this;
        }

        public Builder clientCertificate(GoogleCloudNetworksecurityV1beta1CertificateProviderArgs clientCertificate) {
            return clientCertificate(Output.of(clientCertificate));
        }

        public Builder clientTlsPolicyId(Output<String> clientTlsPolicyId) {
            $.clientTlsPolicyId = clientTlsPolicyId;
            return this;
        }

        public Builder clientTlsPolicyId(String clientTlsPolicyId) {
            return clientTlsPolicyId(Output.of(clientTlsPolicyId));
        }

        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        public Builder description(String description) {
            return description(Output.of(description));
        }

        public Builder labels(@Nullable Output<Map<String,String>> labels) {
            $.labels = labels;
            return this;
        }

        public Builder labels(Map<String,String> labels) {
            return labels(Output.of(labels));
        }

        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        public Builder location(String location) {
            return location(Output.of(location));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        public Builder project(String project) {
            return project(Output.of(project));
        }

        public Builder serverValidationCa(@Nullable Output<List<ValidationCAArgs>> serverValidationCa) {
            $.serverValidationCa = serverValidationCa;
            return this;
        }

        public Builder serverValidationCa(List<ValidationCAArgs> serverValidationCa) {
            return serverValidationCa(Output.of(serverValidationCa));
        }

        public Builder serverValidationCa(ValidationCAArgs... serverValidationCa) {
            return serverValidationCa(List.of(serverValidationCa));
        }

        public Builder sni(@Nullable Output<String> sni) {
            $.sni = sni;
            return this;
        }

        public Builder sni(String sni) {
            return sni(Output.of(sni));
        }

        public ClientTlsPolicyArgs build() {
            $.clientTlsPolicyId = Objects.requireNonNull($.clientTlsPolicyId, "expected parameter 'clientTlsPolicyId' to be non-null");
            return $;
        }
    }

}
