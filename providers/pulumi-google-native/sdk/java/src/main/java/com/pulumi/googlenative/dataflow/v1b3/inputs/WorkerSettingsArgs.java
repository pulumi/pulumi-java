// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.dataflow.v1b3.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Provides data to pass through to the worker harness.
 * 
 */
public final class WorkerSettingsArgs extends com.pulumi.resources.ResourceArgs {

    public static final WorkerSettingsArgs Empty = new WorkerSettingsArgs();

    /**
     * The base URL for accessing Google Cloud APIs. When workers access Google Cloud APIs, they logically do so via relative URLs. If this field is specified, it supplies the base URL to use for resolving these relative URLs. The normative algorithm used is defined by RFC 1808, &#34;Relative Uniform Resource Locators&#34;. If not specified, the default value is &#34;http://www.googleapis.com/&#34;
     * 
     */
    @Import(name="baseUrl")
    private @Nullable Output<String> baseUrl;

    /**
     * @return The base URL for accessing Google Cloud APIs. When workers access Google Cloud APIs, they logically do so via relative URLs. If this field is specified, it supplies the base URL to use for resolving these relative URLs. The normative algorithm used is defined by RFC 1808, &#34;Relative Uniform Resource Locators&#34;. If not specified, the default value is &#34;http://www.googleapis.com/&#34;
     * 
     */
    public Optional<Output<String>> baseUrl() {
        return Optional.ofNullable(this.baseUrl);
    }

    /**
     * Whether to send work progress updates to the service.
     * 
     */
    @Import(name="reportingEnabled")
    private @Nullable Output<Boolean> reportingEnabled;

    /**
     * @return Whether to send work progress updates to the service.
     * 
     */
    public Optional<Output<Boolean>> reportingEnabled() {
        return Optional.ofNullable(this.reportingEnabled);
    }

    /**
     * The Cloud Dataflow service path relative to the root URL, for example, &#34;dataflow/v1b3/projects&#34;.
     * 
     */
    @Import(name="servicePath")
    private @Nullable Output<String> servicePath;

    /**
     * @return The Cloud Dataflow service path relative to the root URL, for example, &#34;dataflow/v1b3/projects&#34;.
     * 
     */
    public Optional<Output<String>> servicePath() {
        return Optional.ofNullable(this.servicePath);
    }

    /**
     * The Shuffle service path relative to the root URL, for example, &#34;shuffle/v1beta1&#34;.
     * 
     */
    @Import(name="shuffleServicePath")
    private @Nullable Output<String> shuffleServicePath;

    /**
     * @return The Shuffle service path relative to the root URL, for example, &#34;shuffle/v1beta1&#34;.
     * 
     */
    public Optional<Output<String>> shuffleServicePath() {
        return Optional.ofNullable(this.shuffleServicePath);
    }

    /**
     * The prefix of the resources the system should use for temporary storage. The supported resource type is: Google Cloud Storage: storage.googleapis.com/{bucket}/{object} bucket.storage.googleapis.com/{object}
     * 
     */
    @Import(name="tempStoragePrefix")
    private @Nullable Output<String> tempStoragePrefix;

    /**
     * @return The prefix of the resources the system should use for temporary storage. The supported resource type is: Google Cloud Storage: storage.googleapis.com/{bucket}/{object} bucket.storage.googleapis.com/{object}
     * 
     */
    public Optional<Output<String>> tempStoragePrefix() {
        return Optional.ofNullable(this.tempStoragePrefix);
    }

    /**
     * The ID of the worker running this pipeline.
     * 
     */
    @Import(name="workerId")
    private @Nullable Output<String> workerId;

    /**
     * @return The ID of the worker running this pipeline.
     * 
     */
    public Optional<Output<String>> workerId() {
        return Optional.ofNullable(this.workerId);
    }

    private WorkerSettingsArgs() {}

    private WorkerSettingsArgs(WorkerSettingsArgs $) {
        this.baseUrl = $.baseUrl;
        this.reportingEnabled = $.reportingEnabled;
        this.servicePath = $.servicePath;
        this.shuffleServicePath = $.shuffleServicePath;
        this.tempStoragePrefix = $.tempStoragePrefix;
        this.workerId = $.workerId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WorkerSettingsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WorkerSettingsArgs $;

        public Builder() {
            $ = new WorkerSettingsArgs();
        }

        public Builder(WorkerSettingsArgs defaults) {
            $ = new WorkerSettingsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param baseUrl The base URL for accessing Google Cloud APIs. When workers access Google Cloud APIs, they logically do so via relative URLs. If this field is specified, it supplies the base URL to use for resolving these relative URLs. The normative algorithm used is defined by RFC 1808, &#34;Relative Uniform Resource Locators&#34;. If not specified, the default value is &#34;http://www.googleapis.com/&#34;
         * 
         * @return builder
         * 
         */
        public Builder baseUrl(@Nullable Output<String> baseUrl) {
            $.baseUrl = baseUrl;
            return this;
        }

        /**
         * @param baseUrl The base URL for accessing Google Cloud APIs. When workers access Google Cloud APIs, they logically do so via relative URLs. If this field is specified, it supplies the base URL to use for resolving these relative URLs. The normative algorithm used is defined by RFC 1808, &#34;Relative Uniform Resource Locators&#34;. If not specified, the default value is &#34;http://www.googleapis.com/&#34;
         * 
         * @return builder
         * 
         */
        public Builder baseUrl(String baseUrl) {
            return baseUrl(Output.of(baseUrl));
        }

        /**
         * @param reportingEnabled Whether to send work progress updates to the service.
         * 
         * @return builder
         * 
         */
        public Builder reportingEnabled(@Nullable Output<Boolean> reportingEnabled) {
            $.reportingEnabled = reportingEnabled;
            return this;
        }

        /**
         * @param reportingEnabled Whether to send work progress updates to the service.
         * 
         * @return builder
         * 
         */
        public Builder reportingEnabled(Boolean reportingEnabled) {
            return reportingEnabled(Output.of(reportingEnabled));
        }

        /**
         * @param servicePath The Cloud Dataflow service path relative to the root URL, for example, &#34;dataflow/v1b3/projects&#34;.
         * 
         * @return builder
         * 
         */
        public Builder servicePath(@Nullable Output<String> servicePath) {
            $.servicePath = servicePath;
            return this;
        }

        /**
         * @param servicePath The Cloud Dataflow service path relative to the root URL, for example, &#34;dataflow/v1b3/projects&#34;.
         * 
         * @return builder
         * 
         */
        public Builder servicePath(String servicePath) {
            return servicePath(Output.of(servicePath));
        }

        /**
         * @param shuffleServicePath The Shuffle service path relative to the root URL, for example, &#34;shuffle/v1beta1&#34;.
         * 
         * @return builder
         * 
         */
        public Builder shuffleServicePath(@Nullable Output<String> shuffleServicePath) {
            $.shuffleServicePath = shuffleServicePath;
            return this;
        }

        /**
         * @param shuffleServicePath The Shuffle service path relative to the root URL, for example, &#34;shuffle/v1beta1&#34;.
         * 
         * @return builder
         * 
         */
        public Builder shuffleServicePath(String shuffleServicePath) {
            return shuffleServicePath(Output.of(shuffleServicePath));
        }

        /**
         * @param tempStoragePrefix The prefix of the resources the system should use for temporary storage. The supported resource type is: Google Cloud Storage: storage.googleapis.com/{bucket}/{object} bucket.storage.googleapis.com/{object}
         * 
         * @return builder
         * 
         */
        public Builder tempStoragePrefix(@Nullable Output<String> tempStoragePrefix) {
            $.tempStoragePrefix = tempStoragePrefix;
            return this;
        }

        /**
         * @param tempStoragePrefix The prefix of the resources the system should use for temporary storage. The supported resource type is: Google Cloud Storage: storage.googleapis.com/{bucket}/{object} bucket.storage.googleapis.com/{object}
         * 
         * @return builder
         * 
         */
        public Builder tempStoragePrefix(String tempStoragePrefix) {
            return tempStoragePrefix(Output.of(tempStoragePrefix));
        }

        /**
         * @param workerId The ID of the worker running this pipeline.
         * 
         * @return builder
         * 
         */
        public Builder workerId(@Nullable Output<String> workerId) {
            $.workerId = workerId;
            return this;
        }

        /**
         * @param workerId The ID of the worker running this pipeline.
         * 
         * @return builder
         * 
         */
        public Builder workerId(String workerId) {
            return workerId(Output.of(workerId));
        }

        public WorkerSettingsArgs build() {
            return $;
        }
    }

}
