// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.dataflow_v1b3.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Metadata for a BigQuery connector used by the job.
 * 
 */
public final class BigQueryIODetailsArgs extends com.pulumi.resources.ResourceArgs {

    public static final BigQueryIODetailsArgs Empty = new BigQueryIODetailsArgs();

    /**
     * Dataset accessed in the connection.
     * 
     */
    @Import(name="dataset")
      private final @Nullable Output<String> dataset;

    public Output<String> dataset() {
        return this.dataset == null ? Codegen.empty() : this.dataset;
    }

    /**
     * Project accessed in the connection.
     * 
     */
    @Import(name="project")
      private final @Nullable Output<String> project;

    public Output<String> project() {
        return this.project == null ? Codegen.empty() : this.project;
    }

    /**
     * Query used to access data in the connection.
     * 
     */
    @Import(name="query")
      private final @Nullable Output<String> query;

    public Output<String> query() {
        return this.query == null ? Codegen.empty() : this.query;
    }

    /**
     * Table accessed in the connection.
     * 
     */
    @Import(name="table")
      private final @Nullable Output<String> table;

    public Output<String> table() {
        return this.table == null ? Codegen.empty() : this.table;
    }

    public BigQueryIODetailsArgs(
        @Nullable Output<String> dataset,
        @Nullable Output<String> project,
        @Nullable Output<String> query,
        @Nullable Output<String> table) {
        this.dataset = dataset;
        this.project = project;
        this.query = query;
        this.table = table;
    }

    private BigQueryIODetailsArgs() {
        this.dataset = Codegen.empty();
        this.project = Codegen.empty();
        this.query = Codegen.empty();
        this.table = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BigQueryIODetailsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> dataset;
        private @Nullable Output<String> project;
        private @Nullable Output<String> query;
        private @Nullable Output<String> table;

        public Builder() {
    	      // Empty
        }

        public Builder(BigQueryIODetailsArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dataset = defaults.dataset;
    	      this.project = defaults.project;
    	      this.query = defaults.query;
    	      this.table = defaults.table;
        }

        public Builder dataset(@Nullable Output<String> dataset) {
            this.dataset = dataset;
            return this;
        }
        public Builder dataset(@Nullable String dataset) {
            this.dataset = Codegen.ofNullable(dataset);
            return this;
        }
        public Builder project(@Nullable Output<String> project) {
            this.project = project;
            return this;
        }
        public Builder project(@Nullable String project) {
            this.project = Codegen.ofNullable(project);
            return this;
        }
        public Builder query(@Nullable Output<String> query) {
            this.query = query;
            return this;
        }
        public Builder query(@Nullable String query) {
            this.query = Codegen.ofNullable(query);
            return this;
        }
        public Builder table(@Nullable Output<String> table) {
            this.table = table;
            return this;
        }
        public Builder table(@Nullable String table) {
            this.table = Codegen.ofNullable(table);
            return this;
        }        public BigQueryIODetailsArgs build() {
            return new BigQueryIODetailsArgs(dataset, project, query, table);
        }
    }
}
