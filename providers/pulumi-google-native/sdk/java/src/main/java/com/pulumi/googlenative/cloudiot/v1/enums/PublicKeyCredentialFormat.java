// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.cloudiot.v1.enums;

import com.pulumi.core.annotations.EnumType;
import java.lang.String;
import java.util.Objects;
import java.util.StringJoiner;

    /**
     * The format of the key.
     * 
     */
    @EnumType
    public enum PublicKeyCredentialFormat {
        /**
         * The format has not been specified. This is an invalid default value and must not be used.
         * 
         */
        UnspecifiedPublicKeyFormat("UNSPECIFIED_PUBLIC_KEY_FORMAT"),
        /**
         * An RSA public key encoded in base64, and wrapped by `-----BEGIN PUBLIC KEY-----` and `-----END PUBLIC KEY-----`. This can be used to verify `RS256` signatures in JWT tokens ([RFC7518](https://www.ietf.org/rfc/rfc7518.txt)).
         * 
         */
        RsaPem("RSA_PEM"),
        /**
         * As RSA_PEM, but wrapped in an X.509v3 certificate ([RFC5280](https://www.ietf.org/rfc/rfc5280.txt)), encoded in base64, and wrapped by `-----BEGIN CERTIFICATE-----` and `-----END CERTIFICATE-----`.
         * 
         */
        RsaX509Pem("RSA_X509_PEM"),
        /**
         * Public key for the ECDSA algorithm using P-256 and SHA-256, encoded in base64, and wrapped by `-----BEGIN PUBLIC KEY-----` and `-----END PUBLIC KEY-----`. This can be used to verify JWT tokens with the `ES256` algorithm ([RFC7518](https://www.ietf.org/rfc/rfc7518.txt)). This curve is defined in [OpenSSL](https://www.openssl.org/) as the `prime256v1` curve.
         * 
         */
        Es256Pem("ES256_PEM"),
        /**
         * As ES256_PEM, but wrapped in an X.509v3 certificate ([RFC5280](https://www.ietf.org/rfc/rfc5280.txt)), encoded in base64, and wrapped by `-----BEGIN CERTIFICATE-----` and `-----END CERTIFICATE-----`.
         * 
         */
        Es256X509Pem("ES256_X509_PEM");

        private final String value;

        PublicKeyCredentialFormat(String value) {
            this.value = Objects.requireNonNull(value);
        }

        @EnumType.Converter
        public String getValue() {
            return this.value;
        }

        @Override
        public String toString() {
            return new StringJoiner(", ", "PublicKeyCredentialFormat[", "]")
                .add("value='" + this.value + "'")
                .toString();
        }
    }
