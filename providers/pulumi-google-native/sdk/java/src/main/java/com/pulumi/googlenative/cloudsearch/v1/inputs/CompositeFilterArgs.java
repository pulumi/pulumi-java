// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.cloudsearch.v1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.cloudsearch.v1.enums.CompositeFilterLogicOperator;
import com.pulumi.googlenative.cloudsearch.v1.inputs.FilterArgs;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CompositeFilterArgs extends com.pulumi.resources.ResourceArgs {

    public static final CompositeFilterArgs Empty = new CompositeFilterArgs();

    /**
     * The logic operator of the sub filter.
     * 
     */
    @Import(name="logicOperator")
    private @Nullable Output<CompositeFilterLogicOperator> logicOperator;

    /**
     * @return The logic operator of the sub filter.
     * 
     */
    public Optional<Output<CompositeFilterLogicOperator>> logicOperator() {
        return Optional.ofNullable(this.logicOperator);
    }

    /**
     * Sub filters.
     * 
     */
    @Import(name="subFilters")
    private @Nullable Output<List<FilterArgs>> subFilters;

    /**
     * @return Sub filters.
     * 
     */
    public Optional<Output<List<FilterArgs>>> subFilters() {
        return Optional.ofNullable(this.subFilters);
    }

    private CompositeFilterArgs() {}

    private CompositeFilterArgs(CompositeFilterArgs $) {
        this.logicOperator = $.logicOperator;
        this.subFilters = $.subFilters;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CompositeFilterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CompositeFilterArgs $;

        public Builder() {
            $ = new CompositeFilterArgs();
        }

        public Builder(CompositeFilterArgs defaults) {
            $ = new CompositeFilterArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param logicOperator The logic operator of the sub filter.
         * 
         * @return builder
         * 
         */
        public Builder logicOperator(@Nullable Output<CompositeFilterLogicOperator> logicOperator) {
            $.logicOperator = logicOperator;
            return this;
        }

        /**
         * @param logicOperator The logic operator of the sub filter.
         * 
         * @return builder
         * 
         */
        public Builder logicOperator(CompositeFilterLogicOperator logicOperator) {
            return logicOperator(Output.of(logicOperator));
        }

        /**
         * @param subFilters Sub filters.
         * 
         * @return builder
         * 
         */
        public Builder subFilters(@Nullable Output<List<FilterArgs>> subFilters) {
            $.subFilters = subFilters;
            return this;
        }

        /**
         * @param subFilters Sub filters.
         * 
         * @return builder
         * 
         */
        public Builder subFilters(List<FilterArgs> subFilters) {
            return subFilters(Output.of(subFilters));
        }

        /**
         * @param subFilters Sub filters.
         * 
         * @return builder
         * 
         */
        public Builder subFilters(FilterArgs... subFilters) {
            return subFilters(List.of(subFilters));
        }

        public CompositeFilterArgs build() {
            return $;
        }
    }

}
