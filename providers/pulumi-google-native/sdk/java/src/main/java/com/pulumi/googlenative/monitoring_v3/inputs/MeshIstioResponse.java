// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.monitoring_v3.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * Istio service scoped to an Istio mesh. Anthos clusters running ASM &lt; 1.6.8 will have their services ingested as this type.
 * 
 */
public final class MeshIstioResponse extends com.pulumi.resources.InvokeArgs {

    public static final MeshIstioResponse Empty = new MeshIstioResponse();

    /**
     * Identifier for the mesh in which this Istio service is defined. Corresponds to the mesh_uid metric label in Istio metrics.
     * 
     */
    @Import(name="meshUid", required=true)
    private String meshUid;

    public String meshUid() {
        return this.meshUid;
    }

    /**
     * The name of the Istio service underlying this service. Corresponds to the destination_service_name metric label in Istio metrics.
     * 
     */
    @Import(name="serviceName", required=true)
    private String serviceName;

    public String serviceName() {
        return this.serviceName;
    }

    /**
     * The namespace of the Istio service underlying this service. Corresponds to the destination_service_namespace metric label in Istio metrics.
     * 
     */
    @Import(name="serviceNamespace", required=true)
    private String serviceNamespace;

    public String serviceNamespace() {
        return this.serviceNamespace;
    }

    private MeshIstioResponse() {}

    private MeshIstioResponse(MeshIstioResponse $) {
        this.meshUid = $.meshUid;
        this.serviceName = $.serviceName;
        this.serviceNamespace = $.serviceNamespace;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MeshIstioResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MeshIstioResponse $;

        public Builder() {
            $ = new MeshIstioResponse();
        }

        public Builder(MeshIstioResponse defaults) {
            $ = new MeshIstioResponse(Objects.requireNonNull(defaults));
        }

        public Builder meshUid(String meshUid) {
            $.meshUid = meshUid;
            return this;
        }

        public Builder serviceName(String serviceName) {
            $.serviceName = serviceName;
            return this;
        }

        public Builder serviceNamespace(String serviceNamespace) {
            $.serviceNamespace = serviceNamespace;
            return this;
        }

        public MeshIstioResponse build() {
            $.meshUid = Objects.requireNonNull($.meshUid, "expected parameter 'meshUid' to be non-null");
            $.serviceName = Objects.requireNonNull($.serviceName, "expected parameter 'serviceName' to be non-null");
            $.serviceNamespace = Objects.requireNonNull($.serviceNamespace, "expected parameter 'serviceNamespace' to be non-null");
            return $;
        }
    }

}
