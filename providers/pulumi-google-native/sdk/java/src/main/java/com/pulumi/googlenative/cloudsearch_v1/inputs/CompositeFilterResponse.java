// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.cloudsearch_v1.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.cloudsearch_v1.inputs.FilterResponse;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class CompositeFilterResponse extends com.pulumi.resources.InvokeArgs {

    public static final CompositeFilterResponse Empty = new CompositeFilterResponse();

    /**
     * The logic operator of the sub filter.
     * 
     */
    @Import(name="logicOperator", required=true)
    private String logicOperator;

    /**
     * @return The logic operator of the sub filter.
     * 
     */
    public String logicOperator() {
        return this.logicOperator;
    }

    /**
     * Sub filters.
     * 
     */
    @Import(name="subFilters", required=true)
    private List<FilterResponse> subFilters;

    /**
     * @return Sub filters.
     * 
     */
    public List<FilterResponse> subFilters() {
        return this.subFilters;
    }

    private CompositeFilterResponse() {}

    private CompositeFilterResponse(CompositeFilterResponse $) {
        this.logicOperator = $.logicOperator;
        this.subFilters = $.subFilters;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CompositeFilterResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CompositeFilterResponse $;

        public Builder() {
            $ = new CompositeFilterResponse();
        }

        public Builder(CompositeFilterResponse defaults) {
            $ = new CompositeFilterResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param logicOperator The logic operator of the sub filter.
         * 
         * @return builder
         * 
         */
        public Builder logicOperator(String logicOperator) {
            $.logicOperator = logicOperator;
            return this;
        }

        /**
         * @param subFilters Sub filters.
         * 
         * @return builder
         * 
         */
        public Builder subFilters(List<FilterResponse> subFilters) {
            $.subFilters = subFilters;
            return this;
        }

        /**
         * @param subFilters Sub filters.
         * 
         * @return builder
         * 
         */
        public Builder subFilters(FilterResponse... subFilters) {
            return subFilters(List.of(subFilters));
        }

        public CompositeFilterResponse build() {
            $.logicOperator = Objects.requireNonNull($.logicOperator, "expected parameter 'logicOperator' to be non-null");
            $.subFilters = Objects.requireNonNull($.subFilters, "expected parameter 'subFilters' to be non-null");
            return $;
        }
    }

}
