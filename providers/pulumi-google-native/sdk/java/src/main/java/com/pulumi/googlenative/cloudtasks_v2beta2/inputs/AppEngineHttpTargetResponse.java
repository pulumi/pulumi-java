// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.cloudtasks_v2beta2.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.cloudtasks_v2beta2.inputs.AppEngineRoutingResponse;
import java.util.Objects;


/**
 * App Engine HTTP target. The task will be delivered to the App Engine application hostname specified by its AppEngineHttpTarget and AppEngineHttpRequest. The documentation for AppEngineHttpRequest explains how the task&#39;s host URL is constructed. Using AppEngineHttpTarget requires [`appengine.applications.get`](https://cloud.google.com/appengine/docs/admin-api/access-control) Google IAM permission for the project and the following scope: `https://www.googleapis.com/auth/cloud-platform`
 * 
 */
public final class AppEngineHttpTargetResponse extends com.pulumi.resources.InvokeArgs {

    public static final AppEngineHttpTargetResponse Empty = new AppEngineHttpTargetResponse();

    /**
     * Overrides for the task-level app_engine_routing. If set, `app_engine_routing_override` is used for all tasks in the queue, no matter what the setting is for the task-level app_engine_routing.
     * 
     */
    @Import(name="appEngineRoutingOverride", required=true)
    private AppEngineRoutingResponse appEngineRoutingOverride;

    /**
     * @return Overrides for the task-level app_engine_routing. If set, `app_engine_routing_override` is used for all tasks in the queue, no matter what the setting is for the task-level app_engine_routing.
     * 
     */
    public AppEngineRoutingResponse appEngineRoutingOverride() {
        return this.appEngineRoutingOverride;
    }

    private AppEngineHttpTargetResponse() {}

    private AppEngineHttpTargetResponse(AppEngineHttpTargetResponse $) {
        this.appEngineRoutingOverride = $.appEngineRoutingOverride;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AppEngineHttpTargetResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AppEngineHttpTargetResponse $;

        public Builder() {
            $ = new AppEngineHttpTargetResponse();
        }

        public Builder(AppEngineHttpTargetResponse defaults) {
            $ = new AppEngineHttpTargetResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param appEngineRoutingOverride Overrides for the task-level app_engine_routing. If set, `app_engine_routing_override` is used for all tasks in the queue, no matter what the setting is for the task-level app_engine_routing.
         * 
         * @return builder
         * 
         */
        public Builder appEngineRoutingOverride(AppEngineRoutingResponse appEngineRoutingOverride) {
            $.appEngineRoutingOverride = appEngineRoutingOverride;
            return this;
        }

        public AppEngineHttpTargetResponse build() {
            $.appEngineRoutingOverride = Objects.requireNonNull($.appEngineRoutingOverride, "expected parameter 'appEngineRoutingOverride' to be non-null");
            return $;
        }
    }

}
