// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.containeranalysis.v1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class JwtArgs extends com.pulumi.resources.ResourceArgs {

    public static final JwtArgs Empty = new JwtArgs();

    /**
     * The compact encoding of a JWS, which is always three base64 encoded strings joined by periods. For details, see: https://tools.ietf.org/html/rfc7515.html#section-3.1
     * 
     */
    @Import(name="compactJwt")
    private @Nullable Output<String> compactJwt;

    /**
     * @return The compact encoding of a JWS, which is always three base64 encoded strings joined by periods. For details, see: https://tools.ietf.org/html/rfc7515.html#section-3.1
     * 
     */
    public Optional<Output<String>> compactJwt() {
        return Optional.ofNullable(this.compactJwt);
    }

    private JwtArgs() {}

    private JwtArgs(JwtArgs $) {
        this.compactJwt = $.compactJwt;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(JwtArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private JwtArgs $;

        public Builder() {
            $ = new JwtArgs();
        }

        public Builder(JwtArgs defaults) {
            $ = new JwtArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param compactJwt The compact encoding of a JWS, which is always three base64 encoded strings joined by periods. For details, see: https://tools.ietf.org/html/rfc7515.html#section-3.1
         * 
         * @return builder
         * 
         */
        public Builder compactJwt(@Nullable Output<String> compactJwt) {
            $.compactJwt = compactJwt;
            return this;
        }

        /**
         * @param compactJwt The compact encoding of a JWS, which is always three base64 encoded strings joined by periods. For details, see: https://tools.ietf.org/html/rfc7515.html#section-3.1
         * 
         * @return builder
         * 
         */
        public Builder compactJwt(String compactJwt) {
            return compactJwt(Output.of(compactJwt));
        }

        public JwtArgs build() {
            return $;
        }
    }

}
