// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.dlp_v2.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.dlp_v2.inputs.GooglePrivacyDlpV2KindExpressionResponse;
import com.pulumi.googlenative.dlp_v2.inputs.GooglePrivacyDlpV2PartitionIdResponse;
import java.util.Objects;


/**
 * Options defining a data set within Google Cloud Datastore.
 * 
 */
public final class GooglePrivacyDlpV2DatastoreOptionsResponse extends com.pulumi.resources.InvokeArgs {

    public static final GooglePrivacyDlpV2DatastoreOptionsResponse Empty = new GooglePrivacyDlpV2DatastoreOptionsResponse();

    /**
     * The kind to process.
     * 
     */
    @Import(name="kind", required=true)
    private GooglePrivacyDlpV2KindExpressionResponse kind;

    /**
     * @return The kind to process.
     * 
     */
    public GooglePrivacyDlpV2KindExpressionResponse kind() {
        return this.kind;
    }

    /**
     * A partition ID identifies a grouping of entities. The grouping is always by project and namespace, however the namespace ID may be empty.
     * 
     */
    @Import(name="partitionId", required=true)
    private GooglePrivacyDlpV2PartitionIdResponse partitionId;

    /**
     * @return A partition ID identifies a grouping of entities. The grouping is always by project and namespace, however the namespace ID may be empty.
     * 
     */
    public GooglePrivacyDlpV2PartitionIdResponse partitionId() {
        return this.partitionId;
    }

    private GooglePrivacyDlpV2DatastoreOptionsResponse() {}

    private GooglePrivacyDlpV2DatastoreOptionsResponse(GooglePrivacyDlpV2DatastoreOptionsResponse $) {
        this.kind = $.kind;
        this.partitionId = $.partitionId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GooglePrivacyDlpV2DatastoreOptionsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GooglePrivacyDlpV2DatastoreOptionsResponse $;

        public Builder() {
            $ = new GooglePrivacyDlpV2DatastoreOptionsResponse();
        }

        public Builder(GooglePrivacyDlpV2DatastoreOptionsResponse defaults) {
            $ = new GooglePrivacyDlpV2DatastoreOptionsResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param kind The kind to process.
         * 
         * @return builder
         * 
         */
        public Builder kind(GooglePrivacyDlpV2KindExpressionResponse kind) {
            $.kind = kind;
            return this;
        }

        /**
         * @param partitionId A partition ID identifies a grouping of entities. The grouping is always by project and namespace, however the namespace ID may be empty.
         * 
         * @return builder
         * 
         */
        public Builder partitionId(GooglePrivacyDlpV2PartitionIdResponse partitionId) {
            $.partitionId = partitionId;
            return this;
        }

        public GooglePrivacyDlpV2DatastoreOptionsResponse build() {
            $.kind = Objects.requireNonNull($.kind, "expected parameter 'kind' to be non-null");
            $.partitionId = Objects.requireNonNull($.partitionId, "expected parameter 'partitionId' to be non-null");
            return $;
        }
    }

}
