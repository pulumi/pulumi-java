// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.iam.v1.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetWorkloadIdentityPoolResult {
    /**
     * @return A description of the pool. Cannot exceed 256 characters.
     * 
     */
    private final String description;
    /**
     * @return Whether the pool is disabled. You cannot use a disabled pool to exchange tokens, or use existing tokens to access resources. If the pool is re-enabled, existing tokens grant access again.
     * 
     */
    private final Boolean disabled;
    /**
     * @return A display name for the pool. Cannot exceed 32 characters.
     * 
     */
    private final String displayName;
    /**
     * @return The resource name of the pool.
     * 
     */
    private final String name;
    /**
     * @return The state of the pool.
     * 
     */
    private final String state;

    @CustomType.Constructor
    private GetWorkloadIdentityPoolResult(
        @CustomType.Parameter("description") String description,
        @CustomType.Parameter("disabled") Boolean disabled,
        @CustomType.Parameter("displayName") String displayName,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("state") String state) {
        this.description = description;
        this.disabled = disabled;
        this.displayName = displayName;
        this.name = name;
        this.state = state;
    }

    /**
     * @return A description of the pool. Cannot exceed 256 characters.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return Whether the pool is disabled. You cannot use a disabled pool to exchange tokens, or use existing tokens to access resources. If the pool is re-enabled, existing tokens grant access again.
     * 
     */
    public Boolean disabled() {
        return this.disabled;
    }
    /**
     * @return A display name for the pool. Cannot exceed 32 characters.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return The resource name of the pool.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The state of the pool.
     * 
     */
    public String state() {
        return this.state;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetWorkloadIdentityPoolResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String description;
        private Boolean disabled;
        private String displayName;
        private String name;
        private String state;

        public Builder() {
    	      // Empty
        }

        public Builder(GetWorkloadIdentityPoolResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.disabled = defaults.disabled;
    	      this.displayName = defaults.displayName;
    	      this.name = defaults.name;
    	      this.state = defaults.state;
        }

        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        public Builder disabled(Boolean disabled) {
            this.disabled = Objects.requireNonNull(disabled);
            return this;
        }
        public Builder displayName(String displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }        public GetWorkloadIdentityPoolResult build() {
            return new GetWorkloadIdentityPoolResult(description, disabled, displayName, name, state);
        }
    }
}
