// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.compute_v1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.compute_v1.enums.AutoscalingPolicyMode;
import com.pulumi.googlenative.compute_v1.inputs.AutoscalingPolicyCpuUtilizationArgs;
import com.pulumi.googlenative.compute_v1.inputs.AutoscalingPolicyCustomMetricUtilizationArgs;
import com.pulumi.googlenative.compute_v1.inputs.AutoscalingPolicyLoadBalancingUtilizationArgs;
import com.pulumi.googlenative.compute_v1.inputs.AutoscalingPolicyScaleInControlArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Cloud Autoscaler policy.
 * 
 */
public final class AutoscalingPolicyArgs extends com.pulumi.resources.ResourceArgs {

    public static final AutoscalingPolicyArgs Empty = new AutoscalingPolicyArgs();

    /**
     * The number of seconds that the autoscaler waits before it starts collecting information from a new instance. This prevents the autoscaler from collecting information when the instance is initializing, during which the collected usage would not be reliable. The default time autoscaler waits is 60 seconds. Virtual machine initialization times might vary because of numerous factors. We recommend that you test how long an instance may take to initialize. To do this, create an instance and time the startup process.
     * 
     */
    @Import(name="coolDownPeriodSec")
    private @Nullable Output<Integer> coolDownPeriodSec;

    public Optional<Output<Integer>> coolDownPeriodSec() {
        return Optional.ofNullable(this.coolDownPeriodSec);
    }

    /**
     * Defines the CPU utilization policy that allows the autoscaler to scale based on the average CPU utilization of a managed instance group.
     * 
     */
    @Import(name="cpuUtilization")
    private @Nullable Output<AutoscalingPolicyCpuUtilizationArgs> cpuUtilization;

    public Optional<Output<AutoscalingPolicyCpuUtilizationArgs>> cpuUtilization() {
        return Optional.ofNullable(this.cpuUtilization);
    }

    /**
     * Configuration parameters of autoscaling based on a custom metric.
     * 
     */
    @Import(name="customMetricUtilizations")
    private @Nullable Output<List<AutoscalingPolicyCustomMetricUtilizationArgs>> customMetricUtilizations;

    public Optional<Output<List<AutoscalingPolicyCustomMetricUtilizationArgs>>> customMetricUtilizations() {
        return Optional.ofNullable(this.customMetricUtilizations);
    }

    /**
     * Configuration parameters of autoscaling based on load balancer.
     * 
     */
    @Import(name="loadBalancingUtilization")
    private @Nullable Output<AutoscalingPolicyLoadBalancingUtilizationArgs> loadBalancingUtilization;

    public Optional<Output<AutoscalingPolicyLoadBalancingUtilizationArgs>> loadBalancingUtilization() {
        return Optional.ofNullable(this.loadBalancingUtilization);
    }

    /**
     * The maximum number of instances that the autoscaler can scale out to. This is required when creating or updating an autoscaler. The maximum number of replicas must not be lower than minimal number of replicas.
     * 
     */
    @Import(name="maxNumReplicas")
    private @Nullable Output<Integer> maxNumReplicas;

    public Optional<Output<Integer>> maxNumReplicas() {
        return Optional.ofNullable(this.maxNumReplicas);
    }

    /**
     * The minimum number of replicas that the autoscaler can scale in to. This cannot be less than 0. If not provided, autoscaler chooses a default value depending on maximum number of instances allowed.
     * 
     */
    @Import(name="minNumReplicas")
    private @Nullable Output<Integer> minNumReplicas;

    public Optional<Output<Integer>> minNumReplicas() {
        return Optional.ofNullable(this.minNumReplicas);
    }

    /**
     * Defines operating mode for this policy.
     * 
     */
    @Import(name="mode")
    private @Nullable Output<AutoscalingPolicyMode> mode;

    public Optional<Output<AutoscalingPolicyMode>> mode() {
        return Optional.ofNullable(this.mode);
    }

    @Import(name="scaleInControl")
    private @Nullable Output<AutoscalingPolicyScaleInControlArgs> scaleInControl;

    public Optional<Output<AutoscalingPolicyScaleInControlArgs>> scaleInControl() {
        return Optional.ofNullable(this.scaleInControl);
    }

    /**
     * Scaling schedules defined for an autoscaler. Multiple schedules can be set on an autoscaler, and they can overlap. During overlapping periods the greatest min_required_replicas of all scaling schedules is applied. Up to 128 scaling schedules are allowed.
     * 
     */
    @Import(name="scalingSchedules")
    private @Nullable Output<Map<String,String>> scalingSchedules;

    public Optional<Output<Map<String,String>>> scalingSchedules() {
        return Optional.ofNullable(this.scalingSchedules);
    }

    private AutoscalingPolicyArgs() {}

    private AutoscalingPolicyArgs(AutoscalingPolicyArgs $) {
        this.coolDownPeriodSec = $.coolDownPeriodSec;
        this.cpuUtilization = $.cpuUtilization;
        this.customMetricUtilizations = $.customMetricUtilizations;
        this.loadBalancingUtilization = $.loadBalancingUtilization;
        this.maxNumReplicas = $.maxNumReplicas;
        this.minNumReplicas = $.minNumReplicas;
        this.mode = $.mode;
        this.scaleInControl = $.scaleInControl;
        this.scalingSchedules = $.scalingSchedules;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AutoscalingPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AutoscalingPolicyArgs $;

        public Builder() {
            $ = new AutoscalingPolicyArgs();
        }

        public Builder(AutoscalingPolicyArgs defaults) {
            $ = new AutoscalingPolicyArgs(Objects.requireNonNull(defaults));
        }

        public Builder coolDownPeriodSec(@Nullable Output<Integer> coolDownPeriodSec) {
            $.coolDownPeriodSec = coolDownPeriodSec;
            return this;
        }

        public Builder coolDownPeriodSec(Integer coolDownPeriodSec) {
            return coolDownPeriodSec(Output.of(coolDownPeriodSec));
        }

        public Builder cpuUtilization(@Nullable Output<AutoscalingPolicyCpuUtilizationArgs> cpuUtilization) {
            $.cpuUtilization = cpuUtilization;
            return this;
        }

        public Builder cpuUtilization(AutoscalingPolicyCpuUtilizationArgs cpuUtilization) {
            return cpuUtilization(Output.of(cpuUtilization));
        }

        public Builder customMetricUtilizations(@Nullable Output<List<AutoscalingPolicyCustomMetricUtilizationArgs>> customMetricUtilizations) {
            $.customMetricUtilizations = customMetricUtilizations;
            return this;
        }

        public Builder customMetricUtilizations(List<AutoscalingPolicyCustomMetricUtilizationArgs> customMetricUtilizations) {
            return customMetricUtilizations(Output.of(customMetricUtilizations));
        }

        public Builder customMetricUtilizations(AutoscalingPolicyCustomMetricUtilizationArgs... customMetricUtilizations) {
            return customMetricUtilizations(List.of(customMetricUtilizations));
        }

        public Builder loadBalancingUtilization(@Nullable Output<AutoscalingPolicyLoadBalancingUtilizationArgs> loadBalancingUtilization) {
            $.loadBalancingUtilization = loadBalancingUtilization;
            return this;
        }

        public Builder loadBalancingUtilization(AutoscalingPolicyLoadBalancingUtilizationArgs loadBalancingUtilization) {
            return loadBalancingUtilization(Output.of(loadBalancingUtilization));
        }

        public Builder maxNumReplicas(@Nullable Output<Integer> maxNumReplicas) {
            $.maxNumReplicas = maxNumReplicas;
            return this;
        }

        public Builder maxNumReplicas(Integer maxNumReplicas) {
            return maxNumReplicas(Output.of(maxNumReplicas));
        }

        public Builder minNumReplicas(@Nullable Output<Integer> minNumReplicas) {
            $.minNumReplicas = minNumReplicas;
            return this;
        }

        public Builder minNumReplicas(Integer minNumReplicas) {
            return minNumReplicas(Output.of(minNumReplicas));
        }

        public Builder mode(@Nullable Output<AutoscalingPolicyMode> mode) {
            $.mode = mode;
            return this;
        }

        public Builder mode(AutoscalingPolicyMode mode) {
            return mode(Output.of(mode));
        }

        public Builder scaleInControl(@Nullable Output<AutoscalingPolicyScaleInControlArgs> scaleInControl) {
            $.scaleInControl = scaleInControl;
            return this;
        }

        public Builder scaleInControl(AutoscalingPolicyScaleInControlArgs scaleInControl) {
            return scaleInControl(Output.of(scaleInControl));
        }

        public Builder scalingSchedules(@Nullable Output<Map<String,String>> scalingSchedules) {
            $.scalingSchedules = scalingSchedules;
            return this;
        }

        public Builder scalingSchedules(Map<String,String> scalingSchedules) {
            return scalingSchedules(Output.of(scalingSchedules));
        }

        public AutoscalingPolicyArgs build() {
            return $;
        }
    }

}
