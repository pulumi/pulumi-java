// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.datacatalog.v1.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GoogleCloudDatacatalogV1StoragePropertiesResponse {
    /**
     * @return Patterns to identify a set of files for this fileset. Examples of a valid `file_pattern`: * `gs://bucket_name/dir/*`: matches all files in the `bucket_name/dir` directory * `gs://bucket_name/dir/**`: matches all files in the `bucket_name/dir` and all subdirectories recursively * `gs://bucket_name/file*`: matches files prefixed by `file` in `bucket_name` * `gs://bucket_name/??.txt`: matches files with two characters followed by `.txt` in `bucket_name` * `gs://bucket_name/[aeiou].txt`: matches files that contain a single vowel character followed by `.txt` in `bucket_name` * `gs://bucket_name/[a-m].txt`: matches files that contain `a`, `b`, ... or `m` followed by `.txt` in `bucket_name` * `gs://bucket_name/a/*{@literal /}b`: matches all files in `bucket_name` that match the `a/*{@literal /}b` pattern, such as `a/c/b`, `a/d/b` * `gs://another_bucket/a.txt`: matches `gs://another_bucket/a.txt`
     * 
     */
    private final List<String> filePattern;
    /**
     * @return File type in MIME format, for example, `text/plain`.
     * 
     */
    private final String fileType;

    @CustomType.Constructor
    private GoogleCloudDatacatalogV1StoragePropertiesResponse(
        @CustomType.Parameter("filePattern") List<String> filePattern,
        @CustomType.Parameter("fileType") String fileType) {
        this.filePattern = filePattern;
        this.fileType = fileType;
    }

    /**
     * @return Patterns to identify a set of files for this fileset. Examples of a valid `file_pattern`: * `gs://bucket_name/dir/*`: matches all files in the `bucket_name/dir` directory * `gs://bucket_name/dir/**`: matches all files in the `bucket_name/dir` and all subdirectories recursively * `gs://bucket_name/file*`: matches files prefixed by `file` in `bucket_name` * `gs://bucket_name/??.txt`: matches files with two characters followed by `.txt` in `bucket_name` * `gs://bucket_name/[aeiou].txt`: matches files that contain a single vowel character followed by `.txt` in `bucket_name` * `gs://bucket_name/[a-m].txt`: matches files that contain `a`, `b`, ... or `m` followed by `.txt` in `bucket_name` * `gs://bucket_name/a/*{@literal /}b`: matches all files in `bucket_name` that match the `a/*{@literal /}b` pattern, such as `a/c/b`, `a/d/b` * `gs://another_bucket/a.txt`: matches `gs://another_bucket/a.txt`
     * 
     */
    public List<String> filePattern() {
        return this.filePattern;
    }
    /**
     * @return File type in MIME format, for example, `text/plain`.
     * 
     */
    public String fileType() {
        return this.fileType;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GoogleCloudDatacatalogV1StoragePropertiesResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<String> filePattern;
        private String fileType;

        public Builder() {
    	      // Empty
        }

        public Builder(GoogleCloudDatacatalogV1StoragePropertiesResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.filePattern = defaults.filePattern;
    	      this.fileType = defaults.fileType;
        }

        public Builder filePattern(List<String> filePattern) {
            this.filePattern = Objects.requireNonNull(filePattern);
            return this;
        }
        public Builder filePattern(String... filePattern) {
            return filePattern(List.of(filePattern));
        }
        public Builder fileType(String fileType) {
            this.fileType = Objects.requireNonNull(fileType);
            return this;
        }        public GoogleCloudDatacatalogV1StoragePropertiesResponse build() {
            return new GoogleCloudDatacatalogV1StoragePropertiesResponse(filePattern, fileType);
        }
    }
}
