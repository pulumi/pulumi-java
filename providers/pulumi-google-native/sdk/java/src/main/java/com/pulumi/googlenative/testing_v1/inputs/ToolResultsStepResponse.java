// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.testing_v1.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * Represents a tool results step resource. This has the results of a TestExecution.
 * 
 */
public final class ToolResultsStepResponse extends com.pulumi.resources.InvokeArgs {

    public static final ToolResultsStepResponse Empty = new ToolResultsStepResponse();

    /**
     * A tool results execution ID.
     * 
     */
    @Import(name="executionId", required=true)
    private String executionId;

    /**
     * @return A tool results execution ID.
     * 
     */
    public String executionId() {
        return this.executionId;
    }

    /**
     * A tool results history ID.
     * 
     */
    @Import(name="historyId", required=true)
    private String historyId;

    /**
     * @return A tool results history ID.
     * 
     */
    public String historyId() {
        return this.historyId;
    }

    /**
     * The cloud project that owns the tool results step.
     * 
     */
    @Import(name="project", required=true)
    private String project;

    /**
     * @return The cloud project that owns the tool results step.
     * 
     */
    public String project() {
        return this.project;
    }

    /**
     * A tool results step ID.
     * 
     */
    @Import(name="stepId", required=true)
    private String stepId;

    /**
     * @return A tool results step ID.
     * 
     */
    public String stepId() {
        return this.stepId;
    }

    private ToolResultsStepResponse() {}

    private ToolResultsStepResponse(ToolResultsStepResponse $) {
        this.executionId = $.executionId;
        this.historyId = $.historyId;
        this.project = $.project;
        this.stepId = $.stepId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ToolResultsStepResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ToolResultsStepResponse $;

        public Builder() {
            $ = new ToolResultsStepResponse();
        }

        public Builder(ToolResultsStepResponse defaults) {
            $ = new ToolResultsStepResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param executionId A tool results execution ID.
         * 
         * @return builder
         * 
         */
        public Builder executionId(String executionId) {
            $.executionId = executionId;
            return this;
        }

        /**
         * @param historyId A tool results history ID.
         * 
         * @return builder
         * 
         */
        public Builder historyId(String historyId) {
            $.historyId = historyId;
            return this;
        }

        /**
         * @param project The cloud project that owns the tool results step.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            $.project = project;
            return this;
        }

        /**
         * @param stepId A tool results step ID.
         * 
         * @return builder
         * 
         */
        public Builder stepId(String stepId) {
            $.stepId = stepId;
            return this;
        }

        public ToolResultsStepResponse build() {
            $.executionId = Objects.requireNonNull($.executionId, "expected parameter 'executionId' to be non-null");
            $.historyId = Objects.requireNonNull($.historyId, "expected parameter 'historyId' to be non-null");
            $.project = Objects.requireNonNull($.project, "expected parameter 'project' to be non-null");
            $.stepId = Objects.requireNonNull($.stepId, "expected parameter 'stepId' to be non-null");
            return $;
        }
    }

}
