// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.deploymentmanager_v2beta.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.deploymentmanager_v2beta.inputs.OperationErrorErrorsItemResponse;
import java.util.List;
import java.util.Objects;


/**
 * [Output Only] If errors are generated during processing of the operation, this field will be populated.
 * 
 */
public final class OperationErrorResponse extends com.pulumi.resources.InvokeArgs {

    public static final OperationErrorResponse Empty = new OperationErrorResponse();

    /**
     * The array of errors encountered while processing this operation.
     * 
     */
    @Import(name="errors", required=true)
    private List<OperationErrorErrorsItemResponse> errors;

    /**
     * @return The array of errors encountered while processing this operation.
     * 
     */
    public List<OperationErrorErrorsItemResponse> errors() {
        return this.errors;
    }

    private OperationErrorResponse() {}

    private OperationErrorResponse(OperationErrorResponse $) {
        this.errors = $.errors;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OperationErrorResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OperationErrorResponse $;

        public Builder() {
            $ = new OperationErrorResponse();
        }

        public Builder(OperationErrorResponse defaults) {
            $ = new OperationErrorResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param errors The array of errors encountered while processing this operation.
         * 
         * @return builder
         * 
         */
        public Builder errors(List<OperationErrorErrorsItemResponse> errors) {
            $.errors = errors;
            return this;
        }

        /**
         * @param errors The array of errors encountered while processing this operation.
         * 
         * @return builder
         * 
         */
        public Builder errors(OperationErrorErrorsItemResponse... errors) {
            return errors(List.of(errors));
        }

        public OperationErrorResponse build() {
            $.errors = Objects.requireNonNull($.errors, "expected parameter 'errors' to be non-null");
            return $;
        }
    }

}
