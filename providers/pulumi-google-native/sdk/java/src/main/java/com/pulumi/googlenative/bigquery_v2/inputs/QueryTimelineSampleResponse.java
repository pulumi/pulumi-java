// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.bigquery_v2.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class QueryTimelineSampleResponse extends com.pulumi.resources.InvokeArgs {

    public static final QueryTimelineSampleResponse Empty = new QueryTimelineSampleResponse();

    /**
     * Total number of units currently being processed by workers. This does not correspond directly to slot usage. This is the largest value observed since the last sample.
     * 
     */
    @Import(name="activeUnits", required=true)
    private String activeUnits;

    public String activeUnits() {
        return this.activeUnits;
    }

    /**
     * Total parallel units of work completed by this query.
     * 
     */
    @Import(name="completedUnits", required=true)
    private String completedUnits;

    public String completedUnits() {
        return this.completedUnits;
    }

    /**
     * Milliseconds elapsed since the start of query execution.
     * 
     */
    @Import(name="elapsedMs", required=true)
    private String elapsedMs;

    public String elapsedMs() {
        return this.elapsedMs;
    }

    /**
     * Total parallel units of work remaining for the active stages.
     * 
     */
    @Import(name="pendingUnits", required=true)
    private String pendingUnits;

    public String pendingUnits() {
        return this.pendingUnits;
    }

    /**
     * Cumulative slot-ms consumed by the query.
     * 
     */
    @Import(name="totalSlotMs", required=true)
    private String totalSlotMs;

    public String totalSlotMs() {
        return this.totalSlotMs;
    }

    private QueryTimelineSampleResponse() {}

    private QueryTimelineSampleResponse(QueryTimelineSampleResponse $) {
        this.activeUnits = $.activeUnits;
        this.completedUnits = $.completedUnits;
        this.elapsedMs = $.elapsedMs;
        this.pendingUnits = $.pendingUnits;
        this.totalSlotMs = $.totalSlotMs;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(QueryTimelineSampleResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private QueryTimelineSampleResponse $;

        public Builder() {
            $ = new QueryTimelineSampleResponse();
        }

        public Builder(QueryTimelineSampleResponse defaults) {
            $ = new QueryTimelineSampleResponse(Objects.requireNonNull(defaults));
        }

        public Builder activeUnits(String activeUnits) {
            $.activeUnits = activeUnits;
            return this;
        }

        public Builder completedUnits(String completedUnits) {
            $.completedUnits = completedUnits;
            return this;
        }

        public Builder elapsedMs(String elapsedMs) {
            $.elapsedMs = elapsedMs;
            return this;
        }

        public Builder pendingUnits(String pendingUnits) {
            $.pendingUnits = pendingUnits;
            return this;
        }

        public Builder totalSlotMs(String totalSlotMs) {
            $.totalSlotMs = totalSlotMs;
            return this;
        }

        public QueryTimelineSampleResponse build() {
            $.activeUnits = Objects.requireNonNull($.activeUnits, "expected parameter 'activeUnits' to be non-null");
            $.completedUnits = Objects.requireNonNull($.completedUnits, "expected parameter 'completedUnits' to be non-null");
            $.elapsedMs = Objects.requireNonNull($.elapsedMs, "expected parameter 'elapsedMs' to be non-null");
            $.pendingUnits = Objects.requireNonNull($.pendingUnits, "expected parameter 'pendingUnits' to be non-null");
            $.totalSlotMs = Objects.requireNonNull($.totalSlotMs, "expected parameter 'totalSlotMs' to be non-null");
            return $;
        }
    }

}
