// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.firebasehosting_v1beta1.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * Contains metadata about the user who performed an action, such as creating a release or finalizing a version.
 * 
 */
public final class ActingUserResponse extends com.pulumi.resources.InvokeArgs {

    public static final ActingUserResponse Empty = new ActingUserResponse();

    /**
     * The email address of the user when the user performed the action.
     * 
     */
    @Import(name="email", required=true)
    private String email;

    public String email() {
        return this.email;
    }

    /**
     * A profile image URL for the user. May not be present if the user has changed their email address or deleted their account.
     * 
     */
    @Import(name="imageUrl", required=true)
    private String imageUrl;

    public String imageUrl() {
        return this.imageUrl;
    }

    private ActingUserResponse() {}

    private ActingUserResponse(ActingUserResponse $) {
        this.email = $.email;
        this.imageUrl = $.imageUrl;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ActingUserResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ActingUserResponse $;

        public Builder() {
            $ = new ActingUserResponse();
        }

        public Builder(ActingUserResponse defaults) {
            $ = new ActingUserResponse(Objects.requireNonNull(defaults));
        }

        public Builder email(String email) {
            $.email = email;
            return this;
        }

        public Builder imageUrl(String imageUrl) {
            $.imageUrl = imageUrl;
            return this;
        }

        public ActingUserResponse build() {
            $.email = Objects.requireNonNull($.email, "expected parameter 'email' to be non-null");
            $.imageUrl = Objects.requireNonNull($.imageUrl, "expected parameter 'imageUrl' to be non-null");
            return $;
        }
    }

}
