// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.datafusion_v1beta1.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;


/**
 * The Data Fusion version.
 * 
 */
public final class VersionResponse extends com.pulumi.resources.InvokeArgs {

    public static final VersionResponse Empty = new VersionResponse();

    /**
     * Represents a list of available feature names for a given version.
     * 
     */
    @Import(name="availableFeatures", required=true)
    private List<String> availableFeatures;

    /**
     * @return Represents a list of available feature names for a given version.
     * 
     */
    public List<String> availableFeatures() {
        return this.availableFeatures;
    }

    /**
     * Whether this is currently the default version for Cloud Data Fusion
     * 
     */
    @Import(name="defaultVersion", required=true)
    private Boolean defaultVersion;

    /**
     * @return Whether this is currently the default version for Cloud Data Fusion
     * 
     */
    public Boolean defaultVersion() {
        return this.defaultVersion;
    }

    /**
     * Type represents the release availability of the version
     * 
     */
    @Import(name="type", required=true)
    private String type;

    /**
     * @return Type represents the release availability of the version
     * 
     */
    public String type() {
        return this.type;
    }

    /**
     * The version number of the Data Fusion instance, such as &#39;6.0.1.0&#39;.
     * 
     */
    @Import(name="versionNumber", required=true)
    private String versionNumber;

    /**
     * @return The version number of the Data Fusion instance, such as &#39;6.0.1.0&#39;.
     * 
     */
    public String versionNumber() {
        return this.versionNumber;
    }

    private VersionResponse() {}

    private VersionResponse(VersionResponse $) {
        this.availableFeatures = $.availableFeatures;
        this.defaultVersion = $.defaultVersion;
        this.type = $.type;
        this.versionNumber = $.versionNumber;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VersionResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VersionResponse $;

        public Builder() {
            $ = new VersionResponse();
        }

        public Builder(VersionResponse defaults) {
            $ = new VersionResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param availableFeatures Represents a list of available feature names for a given version.
         * 
         * @return builder
         * 
         */
        public Builder availableFeatures(List<String> availableFeatures) {
            $.availableFeatures = availableFeatures;
            return this;
        }

        /**
         * @param availableFeatures Represents a list of available feature names for a given version.
         * 
         * @return builder
         * 
         */
        public Builder availableFeatures(String... availableFeatures) {
            return availableFeatures(List.of(availableFeatures));
        }

        /**
         * @param defaultVersion Whether this is currently the default version for Cloud Data Fusion
         * 
         * @return builder
         * 
         */
        public Builder defaultVersion(Boolean defaultVersion) {
            $.defaultVersion = defaultVersion;
            return this;
        }

        /**
         * @param type Type represents the release availability of the version
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            $.type = type;
            return this;
        }

        /**
         * @param versionNumber The version number of the Data Fusion instance, such as &#39;6.0.1.0&#39;.
         * 
         * @return builder
         * 
         */
        public Builder versionNumber(String versionNumber) {
            $.versionNumber = versionNumber;
            return this;
        }

        public VersionResponse build() {
            $.availableFeatures = Objects.requireNonNull($.availableFeatures, "expected parameter 'availableFeatures' to be non-null");
            $.defaultVersion = Objects.requireNonNull($.defaultVersion, "expected parameter 'defaultVersion' to be non-null");
            $.type = Objects.requireNonNull($.type, "expected parameter 'type' to be non-null");
            $.versionNumber = Objects.requireNonNull($.versionNumber, "expected parameter 'versionNumber' to be non-null");
            return $;
        }
    }

}
