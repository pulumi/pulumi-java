// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.retail_v2alpha.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import com.pulumi.googlenative.retail_v2alpha.inputs.GoogleCloudRetailV2alphaConditionArgs;
import com.pulumi.googlenative.retail_v2alpha.inputs.GoogleCloudRetailV2alphaRuleBoostActionArgs;
import com.pulumi.googlenative.retail_v2alpha.inputs.GoogleCloudRetailV2alphaRuleDoNotAssociateActionArgs;
import com.pulumi.googlenative.retail_v2alpha.inputs.GoogleCloudRetailV2alphaRuleFilterActionArgs;
import com.pulumi.googlenative.retail_v2alpha.inputs.GoogleCloudRetailV2alphaRuleIgnoreActionArgs;
import com.pulumi.googlenative.retail_v2alpha.inputs.GoogleCloudRetailV2alphaRuleOnewaySynonymsActionArgs;
import com.pulumi.googlenative.retail_v2alpha.inputs.GoogleCloudRetailV2alphaRuleRedirectActionArgs;
import com.pulumi.googlenative.retail_v2alpha.inputs.GoogleCloudRetailV2alphaRuleReplacementActionArgs;
import com.pulumi.googlenative.retail_v2alpha.inputs.GoogleCloudRetailV2alphaRuleTwowaySynonymsActionArgs;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * A rule is a condition-action pair * A condition defines when a rule is to be triggered. * An action specifies what occurs on that trigger. Currently only boost rules are supported. Currently only supported by the search endpoint.
 * 
 */
public final class GoogleCloudRetailV2alphaRuleArgs extends com.pulumi.resources.ResourceArgs {

    public static final GoogleCloudRetailV2alphaRuleArgs Empty = new GoogleCloudRetailV2alphaRuleArgs();

    /**
     * A boost action.
     * 
     */
    @Import(name="boostAction")
      private final @Nullable Output<GoogleCloudRetailV2alphaRuleBoostActionArgs> boostAction;

    public Output<GoogleCloudRetailV2alphaRuleBoostActionArgs> boostAction() {
        return this.boostAction == null ? Codegen.empty() : this.boostAction;
    }

    /**
     * The condition that triggers the rule. If the condition is empty, the rule will always apply.
     * 
     */
    @Import(name="condition", required=true)
      private final Output<GoogleCloudRetailV2alphaConditionArgs> condition;

    public Output<GoogleCloudRetailV2alphaConditionArgs> condition() {
        return this.condition;
    }

    /**
     * Prevents term from being associated with other terms.
     * 
     */
    @Import(name="doNotAssociateAction")
      private final @Nullable Output<GoogleCloudRetailV2alphaRuleDoNotAssociateActionArgs> doNotAssociateAction;

    public Output<GoogleCloudRetailV2alphaRuleDoNotAssociateActionArgs> doNotAssociateAction() {
        return this.doNotAssociateAction == null ? Codegen.empty() : this.doNotAssociateAction;
    }

    /**
     * Filters results.
     * 
     */
    @Import(name="filterAction")
      private final @Nullable Output<GoogleCloudRetailV2alphaRuleFilterActionArgs> filterAction;

    public Output<GoogleCloudRetailV2alphaRuleFilterActionArgs> filterAction() {
        return this.filterAction == null ? Codegen.empty() : this.filterAction;
    }

    /**
     * Ignores specific terms from query during search.
     * 
     */
    @Import(name="ignoreAction")
      private final @Nullable Output<GoogleCloudRetailV2alphaRuleIgnoreActionArgs> ignoreAction;

    public Output<GoogleCloudRetailV2alphaRuleIgnoreActionArgs> ignoreAction() {
        return this.ignoreAction == null ? Codegen.empty() : this.ignoreAction;
    }

    /**
     * Treats specific term as a synonym with a group of terms. Group of terms will not be treated as synonyms with the specific term.
     * 
     */
    @Import(name="onewaySynonymsAction")
      private final @Nullable Output<GoogleCloudRetailV2alphaRuleOnewaySynonymsActionArgs> onewaySynonymsAction;

    public Output<GoogleCloudRetailV2alphaRuleOnewaySynonymsActionArgs> onewaySynonymsAction() {
        return this.onewaySynonymsAction == null ? Codegen.empty() : this.onewaySynonymsAction;
    }

    /**
     * Redirects a shopper to a specific page.
     * 
     */
    @Import(name="redirectAction")
      private final @Nullable Output<GoogleCloudRetailV2alphaRuleRedirectActionArgs> redirectAction;

    public Output<GoogleCloudRetailV2alphaRuleRedirectActionArgs> redirectAction() {
        return this.redirectAction == null ? Codegen.empty() : this.redirectAction;
    }

    /**
     * Replaces specific terms in the query.
     * 
     */
    @Import(name="replacementAction")
      private final @Nullable Output<GoogleCloudRetailV2alphaRuleReplacementActionArgs> replacementAction;

    public Output<GoogleCloudRetailV2alphaRuleReplacementActionArgs> replacementAction() {
        return this.replacementAction == null ? Codegen.empty() : this.replacementAction;
    }

    /**
     * Treats a set of terms as synonyms of one another.
     * 
     */
    @Import(name="twowaySynonymsAction")
      private final @Nullable Output<GoogleCloudRetailV2alphaRuleTwowaySynonymsActionArgs> twowaySynonymsAction;

    public Output<GoogleCloudRetailV2alphaRuleTwowaySynonymsActionArgs> twowaySynonymsAction() {
        return this.twowaySynonymsAction == null ? Codegen.empty() : this.twowaySynonymsAction;
    }

    public GoogleCloudRetailV2alphaRuleArgs(
        @Nullable Output<GoogleCloudRetailV2alphaRuleBoostActionArgs> boostAction,
        Output<GoogleCloudRetailV2alphaConditionArgs> condition,
        @Nullable Output<GoogleCloudRetailV2alphaRuleDoNotAssociateActionArgs> doNotAssociateAction,
        @Nullable Output<GoogleCloudRetailV2alphaRuleFilterActionArgs> filterAction,
        @Nullable Output<GoogleCloudRetailV2alphaRuleIgnoreActionArgs> ignoreAction,
        @Nullable Output<GoogleCloudRetailV2alphaRuleOnewaySynonymsActionArgs> onewaySynonymsAction,
        @Nullable Output<GoogleCloudRetailV2alphaRuleRedirectActionArgs> redirectAction,
        @Nullable Output<GoogleCloudRetailV2alphaRuleReplacementActionArgs> replacementAction,
        @Nullable Output<GoogleCloudRetailV2alphaRuleTwowaySynonymsActionArgs> twowaySynonymsAction) {
        this.boostAction = boostAction;
        this.condition = Objects.requireNonNull(condition, "expected parameter 'condition' to be non-null");
        this.doNotAssociateAction = doNotAssociateAction;
        this.filterAction = filterAction;
        this.ignoreAction = ignoreAction;
        this.onewaySynonymsAction = onewaySynonymsAction;
        this.redirectAction = redirectAction;
        this.replacementAction = replacementAction;
        this.twowaySynonymsAction = twowaySynonymsAction;
    }

    private GoogleCloudRetailV2alphaRuleArgs() {
        this.boostAction = Codegen.empty();
        this.condition = Codegen.empty();
        this.doNotAssociateAction = Codegen.empty();
        this.filterAction = Codegen.empty();
        this.ignoreAction = Codegen.empty();
        this.onewaySynonymsAction = Codegen.empty();
        this.redirectAction = Codegen.empty();
        this.replacementAction = Codegen.empty();
        this.twowaySynonymsAction = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GoogleCloudRetailV2alphaRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<GoogleCloudRetailV2alphaRuleBoostActionArgs> boostAction;
        private Output<GoogleCloudRetailV2alphaConditionArgs> condition;
        private @Nullable Output<GoogleCloudRetailV2alphaRuleDoNotAssociateActionArgs> doNotAssociateAction;
        private @Nullable Output<GoogleCloudRetailV2alphaRuleFilterActionArgs> filterAction;
        private @Nullable Output<GoogleCloudRetailV2alphaRuleIgnoreActionArgs> ignoreAction;
        private @Nullable Output<GoogleCloudRetailV2alphaRuleOnewaySynonymsActionArgs> onewaySynonymsAction;
        private @Nullable Output<GoogleCloudRetailV2alphaRuleRedirectActionArgs> redirectAction;
        private @Nullable Output<GoogleCloudRetailV2alphaRuleReplacementActionArgs> replacementAction;
        private @Nullable Output<GoogleCloudRetailV2alphaRuleTwowaySynonymsActionArgs> twowaySynonymsAction;

        public Builder() {
    	      // Empty
        }

        public Builder(GoogleCloudRetailV2alphaRuleArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.boostAction = defaults.boostAction;
    	      this.condition = defaults.condition;
    	      this.doNotAssociateAction = defaults.doNotAssociateAction;
    	      this.filterAction = defaults.filterAction;
    	      this.ignoreAction = defaults.ignoreAction;
    	      this.onewaySynonymsAction = defaults.onewaySynonymsAction;
    	      this.redirectAction = defaults.redirectAction;
    	      this.replacementAction = defaults.replacementAction;
    	      this.twowaySynonymsAction = defaults.twowaySynonymsAction;
        }

        public Builder boostAction(@Nullable Output<GoogleCloudRetailV2alphaRuleBoostActionArgs> boostAction) {
            this.boostAction = boostAction;
            return this;
        }
        public Builder boostAction(@Nullable GoogleCloudRetailV2alphaRuleBoostActionArgs boostAction) {
            this.boostAction = Codegen.ofNullable(boostAction);
            return this;
        }
        public Builder condition(Output<GoogleCloudRetailV2alphaConditionArgs> condition) {
            this.condition = Objects.requireNonNull(condition);
            return this;
        }
        public Builder condition(GoogleCloudRetailV2alphaConditionArgs condition) {
            this.condition = Output.of(Objects.requireNonNull(condition));
            return this;
        }
        public Builder doNotAssociateAction(@Nullable Output<GoogleCloudRetailV2alphaRuleDoNotAssociateActionArgs> doNotAssociateAction) {
            this.doNotAssociateAction = doNotAssociateAction;
            return this;
        }
        public Builder doNotAssociateAction(@Nullable GoogleCloudRetailV2alphaRuleDoNotAssociateActionArgs doNotAssociateAction) {
            this.doNotAssociateAction = Codegen.ofNullable(doNotAssociateAction);
            return this;
        }
        public Builder filterAction(@Nullable Output<GoogleCloudRetailV2alphaRuleFilterActionArgs> filterAction) {
            this.filterAction = filterAction;
            return this;
        }
        public Builder filterAction(@Nullable GoogleCloudRetailV2alphaRuleFilterActionArgs filterAction) {
            this.filterAction = Codegen.ofNullable(filterAction);
            return this;
        }
        public Builder ignoreAction(@Nullable Output<GoogleCloudRetailV2alphaRuleIgnoreActionArgs> ignoreAction) {
            this.ignoreAction = ignoreAction;
            return this;
        }
        public Builder ignoreAction(@Nullable GoogleCloudRetailV2alphaRuleIgnoreActionArgs ignoreAction) {
            this.ignoreAction = Codegen.ofNullable(ignoreAction);
            return this;
        }
        public Builder onewaySynonymsAction(@Nullable Output<GoogleCloudRetailV2alphaRuleOnewaySynonymsActionArgs> onewaySynonymsAction) {
            this.onewaySynonymsAction = onewaySynonymsAction;
            return this;
        }
        public Builder onewaySynonymsAction(@Nullable GoogleCloudRetailV2alphaRuleOnewaySynonymsActionArgs onewaySynonymsAction) {
            this.onewaySynonymsAction = Codegen.ofNullable(onewaySynonymsAction);
            return this;
        }
        public Builder redirectAction(@Nullable Output<GoogleCloudRetailV2alphaRuleRedirectActionArgs> redirectAction) {
            this.redirectAction = redirectAction;
            return this;
        }
        public Builder redirectAction(@Nullable GoogleCloudRetailV2alphaRuleRedirectActionArgs redirectAction) {
            this.redirectAction = Codegen.ofNullable(redirectAction);
            return this;
        }
        public Builder replacementAction(@Nullable Output<GoogleCloudRetailV2alphaRuleReplacementActionArgs> replacementAction) {
            this.replacementAction = replacementAction;
            return this;
        }
        public Builder replacementAction(@Nullable GoogleCloudRetailV2alphaRuleReplacementActionArgs replacementAction) {
            this.replacementAction = Codegen.ofNullable(replacementAction);
            return this;
        }
        public Builder twowaySynonymsAction(@Nullable Output<GoogleCloudRetailV2alphaRuleTwowaySynonymsActionArgs> twowaySynonymsAction) {
            this.twowaySynonymsAction = twowaySynonymsAction;
            return this;
        }
        public Builder twowaySynonymsAction(@Nullable GoogleCloudRetailV2alphaRuleTwowaySynonymsActionArgs twowaySynonymsAction) {
            this.twowaySynonymsAction = Codegen.ofNullable(twowaySynonymsAction);
            return this;
        }        public GoogleCloudRetailV2alphaRuleArgs build() {
            return new GoogleCloudRetailV2alphaRuleArgs(boostAction, condition, doNotAssociateAction, filterAction, ignoreAction, onewaySynonymsAction, redirectAction, replacementAction, twowaySynonymsAction);
        }
    }
}
