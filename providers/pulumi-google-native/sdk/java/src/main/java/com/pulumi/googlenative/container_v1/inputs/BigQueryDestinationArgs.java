// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.container_v1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Parameters for using BigQuery as the destination of resource usage export.
 * 
 */
public final class BigQueryDestinationArgs extends com.pulumi.resources.ResourceArgs {

    public static final BigQueryDestinationArgs Empty = new BigQueryDestinationArgs();

    /**
     * The ID of a BigQuery Dataset.
     * 
     */
    @Import(name="datasetId")
      private final @Nullable Output<String> datasetId;

    public Output<String> datasetId() {
        return this.datasetId == null ? Codegen.empty() : this.datasetId;
    }

    public BigQueryDestinationArgs(@Nullable Output<String> datasetId) {
        this.datasetId = datasetId;
    }

    private BigQueryDestinationArgs() {
        this.datasetId = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BigQueryDestinationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> datasetId;

        public Builder() {
    	      // Empty
        }

        public Builder(BigQueryDestinationArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.datasetId = defaults.datasetId;
        }

        public Builder datasetId(@Nullable Output<String> datasetId) {
            this.datasetId = datasetId;
            return this;
        }
        public Builder datasetId(@Nullable String datasetId) {
            this.datasetId = Codegen.ofNullable(datasetId);
            return this;
        }        public BigQueryDestinationArgs build() {
            return new BigQueryDestinationArgs(datasetId);
        }
    }
}
