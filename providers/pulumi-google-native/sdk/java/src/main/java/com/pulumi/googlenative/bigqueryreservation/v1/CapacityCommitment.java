// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.bigqueryreservation.v1;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.googlenative.Utilities;
import com.pulumi.googlenative.bigqueryreservation.v1.CapacityCommitmentArgs;
import com.pulumi.googlenative.bigqueryreservation.v1.outputs.StatusResponse;
import java.lang.Boolean;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Creates a new capacity commitment resource.
 * Auto-naming is currently not supported for this resource.
 * 
 */
@ResourceType(type="google-native:bigqueryreservation/v1:CapacityCommitment")
public class CapacityCommitment extends com.pulumi.resources.CustomResource {
    /**
     * The optional capacity commitment ID. Capacity commitment name will be generated automatically if this field is empty. This field must only contain lower case alphanumeric characters or dashes. The first and last character cannot be a dash. Max length is 64 characters. NOTE: this ID won&#39;t be kept if the capacity commitment is split or merged.
     * 
     */
    @Export(name="capacityCommitmentId", type=String.class, parameters={})
    private Output</* @Nullable */ String> capacityCommitmentId;

    /**
     * @return The optional capacity commitment ID. Capacity commitment name will be generated automatically if this field is empty. This field must only contain lower case alphanumeric characters or dashes. The first and last character cannot be a dash. Max length is 64 characters. NOTE: this ID won&#39;t be kept if the capacity commitment is split or merged.
     * 
     */
    public Output<Optional<String>> capacityCommitmentId() {
        return Codegen.optional(this.capacityCommitmentId);
    }
    /**
     * The end of the current commitment period. It is applicable only for ACTIVE capacity commitments.
     * 
     */
    @Export(name="commitmentEndTime", type=String.class, parameters={})
    private Output<String> commitmentEndTime;

    /**
     * @return The end of the current commitment period. It is applicable only for ACTIVE capacity commitments.
     * 
     */
    public Output<String> commitmentEndTime() {
        return this.commitmentEndTime;
    }
    /**
     * The start of the current commitment period. It is applicable only for ACTIVE capacity commitments.
     * 
     */
    @Export(name="commitmentStartTime", type=String.class, parameters={})
    private Output<String> commitmentStartTime;

    /**
     * @return The start of the current commitment period. It is applicable only for ACTIVE capacity commitments.
     * 
     */
    public Output<String> commitmentStartTime() {
        return this.commitmentStartTime;
    }
    /**
     * If true, fail the request if another project in the organization has a capacity commitment.
     * 
     */
    @Export(name="enforceSingleAdminProjectPerOrg", type=String.class, parameters={})
    private Output</* @Nullable */ String> enforceSingleAdminProjectPerOrg;

    /**
     * @return If true, fail the request if another project in the organization has a capacity commitment.
     * 
     */
    public Output<Optional<String>> enforceSingleAdminProjectPerOrg() {
        return Codegen.optional(this.enforceSingleAdminProjectPerOrg);
    }
    /**
     * For FAILED commitment plan, provides the reason of failure.
     * 
     */
    @Export(name="failureStatus", type=StatusResponse.class, parameters={})
    private Output<StatusResponse> failureStatus;

    /**
     * @return For FAILED commitment plan, provides the reason of failure.
     * 
     */
    public Output<StatusResponse> failureStatus() {
        return this.failureStatus;
    }
    @Export(name="location", type=String.class, parameters={})
    private Output<String> location;

    public Output<String> location() {
        return this.location;
    }
    /**
     * Applicable only for commitments located within one of the BigQuery multi-regions (US or EU). If set to true, this commitment is placed in the organization&#39;s secondary region which is designated for disaster recovery purposes. If false, this commitment is placed in the organization&#39;s default region.
     * 
     */
    @Export(name="multiRegionAuxiliary", type=Boolean.class, parameters={})
    private Output<Boolean> multiRegionAuxiliary;

    /**
     * @return Applicable only for commitments located within one of the BigQuery multi-regions (US or EU). If set to true, this commitment is placed in the organization&#39;s secondary region which is designated for disaster recovery purposes. If false, this commitment is placed in the organization&#39;s default region.
     * 
     */
    public Output<Boolean> multiRegionAuxiliary() {
        return this.multiRegionAuxiliary;
    }
    /**
     * The resource name of the capacity commitment, e.g., `projects/myproject/locations/US/capacityCommitments/123` The commitment_id must only contain lower case alphanumeric characters or dashes. It must start with a letter and must not end with a dash. Its maximum length is 64 characters.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The resource name of the capacity commitment, e.g., `projects/myproject/locations/US/capacityCommitments/123` The commitment_id must only contain lower case alphanumeric characters or dashes. It must start with a letter and must not end with a dash. Its maximum length is 64 characters.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Capacity commitment commitment plan.
     * 
     */
    @Export(name="plan", type=String.class, parameters={})
    private Output<String> plan;

    /**
     * @return Capacity commitment commitment plan.
     * 
     */
    public Output<String> plan() {
        return this.plan;
    }
    @Export(name="project", type=String.class, parameters={})
    private Output<String> project;

    public Output<String> project() {
        return this.project;
    }
    /**
     * The plan this capacity commitment is converted to after commitment_end_time passes. Once the plan is changed, committed period is extended according to commitment plan. Only applicable for ANNUAL and TRIAL commitments.
     * 
     */
    @Export(name="renewalPlan", type=String.class, parameters={})
    private Output<String> renewalPlan;

    /**
     * @return The plan this capacity commitment is converted to after commitment_end_time passes. Once the plan is changed, committed period is extended according to commitment plan. Only applicable for ANNUAL and TRIAL commitments.
     * 
     */
    public Output<String> renewalPlan() {
        return this.renewalPlan;
    }
    /**
     * Number of slots in this commitment.
     * 
     */
    @Export(name="slotCount", type=String.class, parameters={})
    private Output<String> slotCount;

    /**
     * @return Number of slots in this commitment.
     * 
     */
    public Output<String> slotCount() {
        return this.slotCount;
    }
    /**
     * State of the commitment.
     * 
     */
    @Export(name="state", type=String.class, parameters={})
    private Output<String> state;

    /**
     * @return State of the commitment.
     * 
     */
    public Output<String> state() {
        return this.state;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public CapacityCommitment(String name) {
        this(name, CapacityCommitmentArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public CapacityCommitment(String name, @Nullable CapacityCommitmentArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public CapacityCommitment(String name, @Nullable CapacityCommitmentArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("google-native:bigqueryreservation/v1:CapacityCommitment", name, args == null ? CapacityCommitmentArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private CapacityCommitment(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("google-native:bigqueryreservation/v1:CapacityCommitment", name, null, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static CapacityCommitment get(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new CapacityCommitment(name, id, options);
    }
}
