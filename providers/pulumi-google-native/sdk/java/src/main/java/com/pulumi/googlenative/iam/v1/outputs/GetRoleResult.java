// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.iam.v1.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetRoleResult {
    /**
     * @return The current deleted state of the role. This field is read only. It will be ignored in calls to CreateRole and UpdateRole.
     * 
     */
    private final Boolean deleted;
    /**
     * @return Optional. A human-readable description for the role.
     * 
     */
    private final String description;
    /**
     * @return Used to perform a consistent read-modify-write.
     * 
     */
    private final String etag;
    /**
     * @return The names of the permissions this role grants when bound in an IAM policy.
     * 
     */
    private final List<String> includedPermissions;
    /**
     * @return The name of the role. When Role is used in CreateRole, the role name must not be set. When Role is used in output and other input such as UpdateRole, the role name is the complete path, e.g., roles/logging.viewer for predefined roles and organizations/{ORGANIZATION_ID}/roles/logging.viewer for custom roles.
     * 
     */
    private final String name;
    /**
     * @return The current launch stage of the role. If the `ALPHA` launch stage has been selected for a role, the `stage` field will not be included in the returned definition for the role.
     * 
     */
    private final String stage;
    /**
     * @return Optional. A human-readable title for the role. Typically this is limited to 100 UTF-8 bytes.
     * 
     */
    private final String title;

    @CustomType.Constructor
    private GetRoleResult(
        @CustomType.Parameter("deleted") Boolean deleted,
        @CustomType.Parameter("description") String description,
        @CustomType.Parameter("etag") String etag,
        @CustomType.Parameter("includedPermissions") List<String> includedPermissions,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("stage") String stage,
        @CustomType.Parameter("title") String title) {
        this.deleted = deleted;
        this.description = description;
        this.etag = etag;
        this.includedPermissions = includedPermissions;
        this.name = name;
        this.stage = stage;
        this.title = title;
    }

    /**
     * @return The current deleted state of the role. This field is read only. It will be ignored in calls to CreateRole and UpdateRole.
     * 
     */
    public Boolean deleted() {
        return this.deleted;
    }
    /**
     * @return Optional. A human-readable description for the role.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return Used to perform a consistent read-modify-write.
     * 
     */
    public String etag() {
        return this.etag;
    }
    /**
     * @return The names of the permissions this role grants when bound in an IAM policy.
     * 
     */
    public List<String> includedPermissions() {
        return this.includedPermissions;
    }
    /**
     * @return The name of the role. When Role is used in CreateRole, the role name must not be set. When Role is used in output and other input such as UpdateRole, the role name is the complete path, e.g., roles/logging.viewer for predefined roles and organizations/{ORGANIZATION_ID}/roles/logging.viewer for custom roles.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The current launch stage of the role. If the `ALPHA` launch stage has been selected for a role, the `stage` field will not be included in the returned definition for the role.
     * 
     */
    public String stage() {
        return this.stage;
    }
    /**
     * @return Optional. A human-readable title for the role. Typically this is limited to 100 UTF-8 bytes.
     * 
     */
    public String title() {
        return this.title;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRoleResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Boolean deleted;
        private String description;
        private String etag;
        private List<String> includedPermissions;
        private String name;
        private String stage;
        private String title;

        public Builder() {
    	      // Empty
        }

        public Builder(GetRoleResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.deleted = defaults.deleted;
    	      this.description = defaults.description;
    	      this.etag = defaults.etag;
    	      this.includedPermissions = defaults.includedPermissions;
    	      this.name = defaults.name;
    	      this.stage = defaults.stage;
    	      this.title = defaults.title;
        }

        public Builder deleted(Boolean deleted) {
            this.deleted = Objects.requireNonNull(deleted);
            return this;
        }
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        public Builder etag(String etag) {
            this.etag = Objects.requireNonNull(etag);
            return this;
        }
        public Builder includedPermissions(List<String> includedPermissions) {
            this.includedPermissions = Objects.requireNonNull(includedPermissions);
            return this;
        }
        public Builder includedPermissions(String... includedPermissions) {
            return includedPermissions(List.of(includedPermissions));
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder stage(String stage) {
            this.stage = Objects.requireNonNull(stage);
            return this;
        }
        public Builder title(String title) {
            this.title = Objects.requireNonNull(title);
            return this;
        }        public GetRoleResult build() {
            return new GetRoleResult(deleted, description, etag, includedPermissions, name, stage, title);
        }
    }
}
