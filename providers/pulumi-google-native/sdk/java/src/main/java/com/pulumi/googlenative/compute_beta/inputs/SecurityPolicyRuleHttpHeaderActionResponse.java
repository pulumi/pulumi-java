// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.compute_beta.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.compute_beta.inputs.SecurityPolicyRuleHttpHeaderActionHttpHeaderOptionResponse;
import java.util.List;
import java.util.Objects;


public final class SecurityPolicyRuleHttpHeaderActionResponse extends com.pulumi.resources.InvokeArgs {

    public static final SecurityPolicyRuleHttpHeaderActionResponse Empty = new SecurityPolicyRuleHttpHeaderActionResponse();

    /**
     * The list of request headers to add or overwrite if they&#39;re already present.
     * 
     */
    @Import(name="requestHeadersToAdds", required=true)
    private List<SecurityPolicyRuleHttpHeaderActionHttpHeaderOptionResponse> requestHeadersToAdds;

    public List<SecurityPolicyRuleHttpHeaderActionHttpHeaderOptionResponse> requestHeadersToAdds() {
        return this.requestHeadersToAdds;
    }

    private SecurityPolicyRuleHttpHeaderActionResponse() {}

    private SecurityPolicyRuleHttpHeaderActionResponse(SecurityPolicyRuleHttpHeaderActionResponse $) {
        this.requestHeadersToAdds = $.requestHeadersToAdds;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SecurityPolicyRuleHttpHeaderActionResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SecurityPolicyRuleHttpHeaderActionResponse $;

        public Builder() {
            $ = new SecurityPolicyRuleHttpHeaderActionResponse();
        }

        public Builder(SecurityPolicyRuleHttpHeaderActionResponse defaults) {
            $ = new SecurityPolicyRuleHttpHeaderActionResponse(Objects.requireNonNull(defaults));
        }

        public Builder requestHeadersToAdds(List<SecurityPolicyRuleHttpHeaderActionHttpHeaderOptionResponse> requestHeadersToAdds) {
            $.requestHeadersToAdds = requestHeadersToAdds;
            return this;
        }

        public Builder requestHeadersToAdds(SecurityPolicyRuleHttpHeaderActionHttpHeaderOptionResponse... requestHeadersToAdds) {
            return requestHeadersToAdds(List.of(requestHeadersToAdds));
        }

        public SecurityPolicyRuleHttpHeaderActionResponse build() {
            $.requestHeadersToAdds = Objects.requireNonNull($.requestHeadersToAdds, "expected parameter 'requestHeadersToAdds' to be non-null");
            return $;
        }
    }

}
