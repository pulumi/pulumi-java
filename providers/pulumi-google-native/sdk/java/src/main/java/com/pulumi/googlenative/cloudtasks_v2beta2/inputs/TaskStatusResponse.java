// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.cloudtasks_v2beta2.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.cloudtasks_v2beta2.inputs.AttemptStatusResponse;
import java.lang.Integer;
import java.util.Objects;


/**
 * Status of the task.
 * 
 */
public final class TaskStatusResponse extends com.pulumi.resources.InvokeArgs {

    public static final TaskStatusResponse Empty = new TaskStatusResponse();

    /**
     * The number of attempts dispatched. This count includes attempts which have been dispatched but haven&#39;t received a response.
     * 
     */
    @Import(name="attemptDispatchCount", required=true)
    private Integer attemptDispatchCount;

    /**
     * @return The number of attempts dispatched. This count includes attempts which have been dispatched but haven&#39;t received a response.
     * 
     */
    public Integer attemptDispatchCount() {
        return this.attemptDispatchCount;
    }

    /**
     * The number of attempts which have received a response. This field is not calculated for pull tasks.
     * 
     */
    @Import(name="attemptResponseCount", required=true)
    private Integer attemptResponseCount;

    /**
     * @return The number of attempts which have received a response. This field is not calculated for pull tasks.
     * 
     */
    public Integer attemptResponseCount() {
        return this.attemptResponseCount;
    }

    /**
     * The status of the task&#39;s first attempt. Only dispatch_time will be set. The other AttemptStatus information is not retained by Cloud Tasks. This field is not calculated for pull tasks.
     * 
     */
    @Import(name="firstAttemptStatus", required=true)
    private AttemptStatusResponse firstAttemptStatus;

    /**
     * @return The status of the task&#39;s first attempt. Only dispatch_time will be set. The other AttemptStatus information is not retained by Cloud Tasks. This field is not calculated for pull tasks.
     * 
     */
    public AttemptStatusResponse firstAttemptStatus() {
        return this.firstAttemptStatus;
    }

    /**
     * The status of the task&#39;s last attempt. This field is not calculated for pull tasks.
     * 
     */
    @Import(name="lastAttemptStatus", required=true)
    private AttemptStatusResponse lastAttemptStatus;

    /**
     * @return The status of the task&#39;s last attempt. This field is not calculated for pull tasks.
     * 
     */
    public AttemptStatusResponse lastAttemptStatus() {
        return this.lastAttemptStatus;
    }

    private TaskStatusResponse() {}

    private TaskStatusResponse(TaskStatusResponse $) {
        this.attemptDispatchCount = $.attemptDispatchCount;
        this.attemptResponseCount = $.attemptResponseCount;
        this.firstAttemptStatus = $.firstAttemptStatus;
        this.lastAttemptStatus = $.lastAttemptStatus;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TaskStatusResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TaskStatusResponse $;

        public Builder() {
            $ = new TaskStatusResponse();
        }

        public Builder(TaskStatusResponse defaults) {
            $ = new TaskStatusResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param attemptDispatchCount The number of attempts dispatched. This count includes attempts which have been dispatched but haven&#39;t received a response.
         * 
         * @return builder
         * 
         */
        public Builder attemptDispatchCount(Integer attemptDispatchCount) {
            $.attemptDispatchCount = attemptDispatchCount;
            return this;
        }

        /**
         * @param attemptResponseCount The number of attempts which have received a response. This field is not calculated for pull tasks.
         * 
         * @return builder
         * 
         */
        public Builder attemptResponseCount(Integer attemptResponseCount) {
            $.attemptResponseCount = attemptResponseCount;
            return this;
        }

        /**
         * @param firstAttemptStatus The status of the task&#39;s first attempt. Only dispatch_time will be set. The other AttemptStatus information is not retained by Cloud Tasks. This field is not calculated for pull tasks.
         * 
         * @return builder
         * 
         */
        public Builder firstAttemptStatus(AttemptStatusResponse firstAttemptStatus) {
            $.firstAttemptStatus = firstAttemptStatus;
            return this;
        }

        /**
         * @param lastAttemptStatus The status of the task&#39;s last attempt. This field is not calculated for pull tasks.
         * 
         * @return builder
         * 
         */
        public Builder lastAttemptStatus(AttemptStatusResponse lastAttemptStatus) {
            $.lastAttemptStatus = lastAttemptStatus;
            return this;
        }

        public TaskStatusResponse build() {
            $.attemptDispatchCount = Objects.requireNonNull($.attemptDispatchCount, "expected parameter 'attemptDispatchCount' to be non-null");
            $.attemptResponseCount = Objects.requireNonNull($.attemptResponseCount, "expected parameter 'attemptResponseCount' to be non-null");
            $.firstAttemptStatus = Objects.requireNonNull($.firstAttemptStatus, "expected parameter 'firstAttemptStatus' to be non-null");
            $.lastAttemptStatus = Objects.requireNonNull($.lastAttemptStatus, "expected parameter 'lastAttemptStatus' to be non-null");
            return $;
        }
    }

}
