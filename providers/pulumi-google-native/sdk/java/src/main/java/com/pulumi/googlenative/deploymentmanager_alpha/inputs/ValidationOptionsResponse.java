// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.deploymentmanager_alpha.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * Options for how to validate and process properties on a resource.
 * 
 */
public final class ValidationOptionsResponse extends com.pulumi.resources.InvokeArgs {

    public static final ValidationOptionsResponse Empty = new ValidationOptionsResponse();

    /**
     * Customize how deployment manager will validate the resource against schema errors.
     * 
     */
    @Import(name="schemaValidation", required=true)
    private String schemaValidation;

    /**
     * @return Customize how deployment manager will validate the resource against schema errors.
     * 
     */
    public String schemaValidation() {
        return this.schemaValidation;
    }

    /**
     * Specify what to do with extra properties when executing a request.
     * 
     */
    @Import(name="undeclaredProperties", required=true)
    private String undeclaredProperties;

    /**
     * @return Specify what to do with extra properties when executing a request.
     * 
     */
    public String undeclaredProperties() {
        return this.undeclaredProperties;
    }

    private ValidationOptionsResponse() {}

    private ValidationOptionsResponse(ValidationOptionsResponse $) {
        this.schemaValidation = $.schemaValidation;
        this.undeclaredProperties = $.undeclaredProperties;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ValidationOptionsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ValidationOptionsResponse $;

        public Builder() {
            $ = new ValidationOptionsResponse();
        }

        public Builder(ValidationOptionsResponse defaults) {
            $ = new ValidationOptionsResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param schemaValidation Customize how deployment manager will validate the resource against schema errors.
         * 
         * @return builder
         * 
         */
        public Builder schemaValidation(String schemaValidation) {
            $.schemaValidation = schemaValidation;
            return this;
        }

        /**
         * @param undeclaredProperties Specify what to do with extra properties when executing a request.
         * 
         * @return builder
         * 
         */
        public Builder undeclaredProperties(String undeclaredProperties) {
            $.undeclaredProperties = undeclaredProperties;
            return this;
        }

        public ValidationOptionsResponse build() {
            $.schemaValidation = Objects.requireNonNull($.schemaValidation, "expected parameter 'schemaValidation' to be non-null");
            $.undeclaredProperties = Objects.requireNonNull($.undeclaredProperties, "expected parameter 'undeclaredProperties' to be non-null");
            return $;
        }
    }

}
