// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.cloudidentity.v1beta1;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.googlenative.Utilities;
import com.pulumi.googlenative.cloudidentity.v1beta1.GroupArgs;
import com.pulumi.googlenative.cloudidentity.v1beta1.outputs.DynamicGroupMetadataResponse;
import com.pulumi.googlenative.cloudidentity.v1beta1.outputs.EntityKeyResponse;
import com.pulumi.googlenative.cloudidentity.v1beta1.outputs.PosixGroupResponse;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;

/**
 * Creates a `Group`.
 * Auto-naming is currently not supported for this resource.
 * 
 */
@ResourceType(type="google-native:cloudidentity/v1beta1:Group")
public class Group extends com.pulumi.resources.CustomResource {
    /**
     * Additional entity key aliases for a Group.
     * 
     */
    @Export(name="additionalGroupKeys", type=List.class, parameters={EntityKeyResponse.class})
    private Output<List<EntityKeyResponse>> additionalGroupKeys;

    /**
     * @return Additional entity key aliases for a Group.
     * 
     */
    public Output<List<EntityKeyResponse>> additionalGroupKeys() {
        return this.additionalGroupKeys;
    }
    /**
     * The time when the `Group` was created.
     * 
     */
    @Export(name="createTime", type=String.class, parameters={})
    private Output<String> createTime;

    /**
     * @return The time when the `Group` was created.
     * 
     */
    public Output<String> createTime() {
        return this.createTime;
    }
    /**
     * An extended description to help users determine the purpose of a `Group`. Must not be longer than 4,096 characters.
     * 
     */
    @Export(name="description", type=String.class, parameters={})
    private Output<String> description;

    /**
     * @return An extended description to help users determine the purpose of a `Group`. Must not be longer than 4,096 characters.
     * 
     */
    public Output<String> description() {
        return this.description;
    }
    /**
     * The display name of the `Group`.
     * 
     */
    @Export(name="displayName", type=String.class, parameters={})
    private Output<String> displayName;

    /**
     * @return The display name of the `Group`.
     * 
     */
    public Output<String> displayName() {
        return this.displayName;
    }
    /**
     * Optional. Dynamic group metadata like queries and status.
     * 
     */
    @Export(name="dynamicGroupMetadata", type=DynamicGroupMetadataResponse.class, parameters={})
    private Output<DynamicGroupMetadataResponse> dynamicGroupMetadata;

    /**
     * @return Optional. Dynamic group metadata like queries and status.
     * 
     */
    public Output<DynamicGroupMetadataResponse> dynamicGroupMetadata() {
        return this.dynamicGroupMetadata;
    }
    /**
     * The `EntityKey` of the `Group`.
     * 
     */
    @Export(name="groupKey", type=EntityKeyResponse.class, parameters={})
    private Output<EntityKeyResponse> groupKey;

    /**
     * @return The `EntityKey` of the `Group`.
     * 
     */
    public Output<EntityKeyResponse> groupKey() {
        return this.groupKey;
    }
    /**
     * Required. The initial configuration option for the `Group`.
     * 
     */
    @Export(name="initialGroupConfig", type=String.class, parameters={})
    private Output<String> initialGroupConfig;

    /**
     * @return Required. The initial configuration option for the `Group`.
     * 
     */
    public Output<String> initialGroupConfig() {
        return this.initialGroupConfig;
    }
    /**
     * One or more label entries that apply to the Group. Currently supported labels contain a key with an empty value. Google Groups are the default type of group and have a label with a key of `cloudidentity.googleapis.com/groups.discussion_forum` and an empty value. Existing Google Groups can have an additional label with a key of `cloudidentity.googleapis.com/groups.security` and an empty value added to them. **This is an immutable change and the security label cannot be removed once added.** Dynamic groups have a label with a key of `cloudidentity.googleapis.com/groups.dynamic`. Identity-mapped groups for Cloud Search have a label with a key of `system/groups/external` and an empty value.
     * 
     */
    @Export(name="labels", type=Map.class, parameters={String.class, String.class})
    private Output<Map<String,String>> labels;

    /**
     * @return One or more label entries that apply to the Group. Currently supported labels contain a key with an empty value. Google Groups are the default type of group and have a label with a key of `cloudidentity.googleapis.com/groups.discussion_forum` and an empty value. Existing Google Groups can have an additional label with a key of `cloudidentity.googleapis.com/groups.security` and an empty value added to them. **This is an immutable change and the security label cannot be removed once added.** Dynamic groups have a label with a key of `cloudidentity.googleapis.com/groups.dynamic`. Identity-mapped groups for Cloud Search have a label with a key of `system/groups/external` and an empty value.
     * 
     */
    public Output<Map<String,String>> labels() {
        return this.labels;
    }
    /**
     * The [resource name](https://cloud.google.com/apis/design/resource_names) of the `Group`. Shall be of the form `groups/{group_id}`.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The [resource name](https://cloud.google.com/apis/design/resource_names) of the `Group`. Shall be of the form `groups/{group_id}`.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Immutable. The resource name of the entity under which this `Group` resides in the Cloud Identity resource hierarchy. Must be of the form `identitysources/{identity_source_id}` for external- identity-mapped groups or `customers/{customer_id}` for Google Groups. The `customer_id` must begin with &#34;C&#34; (for example, &#39;C046psxkn&#39;).
     * 
     */
    @Export(name="parent", type=String.class, parameters={})
    private Output<String> parent;

    /**
     * @return Immutable. The resource name of the entity under which this `Group` resides in the Cloud Identity resource hierarchy. Must be of the form `identitysources/{identity_source_id}` for external- identity-mapped groups or `customers/{customer_id}` for Google Groups. The `customer_id` must begin with &#34;C&#34; (for example, &#39;C046psxkn&#39;).
     * 
     */
    public Output<String> parent() {
        return this.parent;
    }
    /**
     * Optional. The POSIX groups associated with the `Group`.
     * 
     */
    @Export(name="posixGroups", type=List.class, parameters={PosixGroupResponse.class})
    private Output<List<PosixGroupResponse>> posixGroups;

    /**
     * @return Optional. The POSIX groups associated with the `Group`.
     * 
     */
    public Output<List<PosixGroupResponse>> posixGroups() {
        return this.posixGroups;
    }
    /**
     * The time when the `Group` was last updated.
     * 
     */
    @Export(name="updateTime", type=String.class, parameters={})
    private Output<String> updateTime;

    /**
     * @return The time when the `Group` was last updated.
     * 
     */
    public Output<String> updateTime() {
        return this.updateTime;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Group(String name) {
        this(name, GroupArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Group(String name, GroupArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Group(String name, GroupArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("google-native:cloudidentity/v1beta1:Group", name, args == null ? GroupArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Group(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("google-native:cloudidentity/v1beta1:Group", name, null, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Group get(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Group(name, id, options);
    }
}
