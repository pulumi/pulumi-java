// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.containeranalysis_v1.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.containeranalysis_v1.inputs.SlsaCompletenessResponse;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;


/**
 * Other properties of the build.
 * 
 */
public final class SlsaMetadataResponse extends com.pulumi.resources.InvokeArgs {

    public static final SlsaMetadataResponse Empty = new SlsaMetadataResponse();

    /**
     * The timestamp of when the build completed.
     * 
     */
    @Import(name="buildFinishedOn", required=true)
    private String buildFinishedOn;

    /**
     * @return The timestamp of when the build completed.
     * 
     */
    public String buildFinishedOn() {
        return this.buildFinishedOn;
    }

    /**
     * Identifies the particular build invocation, which can be useful for finding associated logs or other ad-hoc analysis. The value SHOULD be globally unique, per in-toto Provenance spec.
     * 
     */
    @Import(name="buildInvocationId", required=true)
    private String buildInvocationId;

    /**
     * @return Identifies the particular build invocation, which can be useful for finding associated logs or other ad-hoc analysis. The value SHOULD be globally unique, per in-toto Provenance spec.
     * 
     */
    public String buildInvocationId() {
        return this.buildInvocationId;
    }

    /**
     * The timestamp of when the build started.
     * 
     */
    @Import(name="buildStartedOn", required=true)
    private String buildStartedOn;

    /**
     * @return The timestamp of when the build started.
     * 
     */
    public String buildStartedOn() {
        return this.buildStartedOn;
    }

    /**
     * Indicates that the builder claims certain fields in this message to be complete.
     * 
     */
    @Import(name="completeness", required=true)
    private SlsaCompletenessResponse completeness;

    /**
     * @return Indicates that the builder claims certain fields in this message to be complete.
     * 
     */
    public SlsaCompletenessResponse completeness() {
        return this.completeness;
    }

    /**
     * If true, the builder claims that running the recipe on materials will produce bit-for-bit identical output.
     * 
     */
    @Import(name="reproducible", required=true)
    private Boolean reproducible;

    /**
     * @return If true, the builder claims that running the recipe on materials will produce bit-for-bit identical output.
     * 
     */
    public Boolean reproducible() {
        return this.reproducible;
    }

    private SlsaMetadataResponse() {}

    private SlsaMetadataResponse(SlsaMetadataResponse $) {
        this.buildFinishedOn = $.buildFinishedOn;
        this.buildInvocationId = $.buildInvocationId;
        this.buildStartedOn = $.buildStartedOn;
        this.completeness = $.completeness;
        this.reproducible = $.reproducible;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SlsaMetadataResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SlsaMetadataResponse $;

        public Builder() {
            $ = new SlsaMetadataResponse();
        }

        public Builder(SlsaMetadataResponse defaults) {
            $ = new SlsaMetadataResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param buildFinishedOn The timestamp of when the build completed.
         * 
         * @return builder
         * 
         */
        public Builder buildFinishedOn(String buildFinishedOn) {
            $.buildFinishedOn = buildFinishedOn;
            return this;
        }

        /**
         * @param buildInvocationId Identifies the particular build invocation, which can be useful for finding associated logs or other ad-hoc analysis. The value SHOULD be globally unique, per in-toto Provenance spec.
         * 
         * @return builder
         * 
         */
        public Builder buildInvocationId(String buildInvocationId) {
            $.buildInvocationId = buildInvocationId;
            return this;
        }

        /**
         * @param buildStartedOn The timestamp of when the build started.
         * 
         * @return builder
         * 
         */
        public Builder buildStartedOn(String buildStartedOn) {
            $.buildStartedOn = buildStartedOn;
            return this;
        }

        /**
         * @param completeness Indicates that the builder claims certain fields in this message to be complete.
         * 
         * @return builder
         * 
         */
        public Builder completeness(SlsaCompletenessResponse completeness) {
            $.completeness = completeness;
            return this;
        }

        /**
         * @param reproducible If true, the builder claims that running the recipe on materials will produce bit-for-bit identical output.
         * 
         * @return builder
         * 
         */
        public Builder reproducible(Boolean reproducible) {
            $.reproducible = reproducible;
            return this;
        }

        public SlsaMetadataResponse build() {
            $.buildFinishedOn = Objects.requireNonNull($.buildFinishedOn, "expected parameter 'buildFinishedOn' to be non-null");
            $.buildInvocationId = Objects.requireNonNull($.buildInvocationId, "expected parameter 'buildInvocationId' to be non-null");
            $.buildStartedOn = Objects.requireNonNull($.buildStartedOn, "expected parameter 'buildStartedOn' to be non-null");
            $.completeness = Objects.requireNonNull($.completeness, "expected parameter 'completeness' to be non-null");
            $.reproducible = Objects.requireNonNull($.reproducible, "expected parameter 'reproducible' to be non-null");
            return $;
        }
    }

}
