// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.cloudbuild_v1.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;


/**
 * Pairs a set of secret environment variables containing encrypted values with the Cloud KMS key to use to decrypt the value. Note: Use `kmsKeyName` with `available_secrets` instead of using `kmsKeyName` with `secret`. For instructions see: https://cloud.google.com/cloud-build/docs/securing-builds/use-encrypted-credentials.
 * 
 */
public final class SecretResponse extends com.pulumi.resources.InvokeArgs {

    public static final SecretResponse Empty = new SecretResponse();

    /**
     * Cloud KMS key name to use to decrypt these envs.
     * 
     */
    @Import(name="kmsKeyName", required=true)
      private final String kmsKeyName;

    public String kmsKeyName() {
        return this.kmsKeyName;
    }

    /**
     * Map of environment variable name to its encrypted value. Secret environment variables must be unique across all of a build&#39;s secrets, and must be used by at least one build step. Values can be at most 64 KB in size. There can be at most 100 secret values across all of a build&#39;s secrets.
     * 
     */
    @Import(name="secretEnv", required=true)
      private final Map<String,String> secretEnv;

    public Map<String,String> secretEnv() {
        return this.secretEnv;
    }

    public SecretResponse(
        String kmsKeyName,
        Map<String,String> secretEnv) {
        this.kmsKeyName = Objects.requireNonNull(kmsKeyName, "expected parameter 'kmsKeyName' to be non-null");
        this.secretEnv = Objects.requireNonNull(secretEnv, "expected parameter 'secretEnv' to be non-null");
    }

    private SecretResponse() {
        this.kmsKeyName = null;
        this.secretEnv = Map.of();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SecretResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String kmsKeyName;
        private Map<String,String> secretEnv;

        public Builder() {
    	      // Empty
        }

        public Builder(SecretResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.kmsKeyName = defaults.kmsKeyName;
    	      this.secretEnv = defaults.secretEnv;
        }

        public Builder kmsKeyName(String kmsKeyName) {
            this.kmsKeyName = Objects.requireNonNull(kmsKeyName);
            return this;
        }
        public Builder secretEnv(Map<String,String> secretEnv) {
            this.secretEnv = Objects.requireNonNull(secretEnv);
            return this;
        }        public SecretResponse build() {
            return new SecretResponse(kmsKeyName, secretEnv);
        }
    }
}
