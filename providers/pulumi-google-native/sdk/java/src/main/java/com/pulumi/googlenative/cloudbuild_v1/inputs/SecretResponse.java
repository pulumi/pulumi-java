// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.cloudbuild_v1.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;


/**
 * Pairs a set of secret environment variables containing encrypted values with the Cloud KMS key to use to decrypt the value. Note: Use `kmsKeyName` with `available_secrets` instead of using `kmsKeyName` with `secret`. For instructions see: https://cloud.google.com/cloud-build/docs/securing-builds/use-encrypted-credentials.
 * 
 */
public final class SecretResponse extends com.pulumi.resources.InvokeArgs {

    public static final SecretResponse Empty = new SecretResponse();

    /**
     * Cloud KMS key name to use to decrypt these envs.
     * 
     */
    @Import(name="kmsKeyName", required=true)
    private String kmsKeyName;

    /**
     * @return Cloud KMS key name to use to decrypt these envs.
     * 
     */
    public String kmsKeyName() {
        return this.kmsKeyName;
    }

    /**
     * Map of environment variable name to its encrypted value. Secret environment variables must be unique across all of a build&#39;s secrets, and must be used by at least one build step. Values can be at most 64 KB in size. There can be at most 100 secret values across all of a build&#39;s secrets.
     * 
     */
    @Import(name="secretEnv", required=true)
    private Map<String,String> secretEnv;

    /**
     * @return Map of environment variable name to its encrypted value. Secret environment variables must be unique across all of a build&#39;s secrets, and must be used by at least one build step. Values can be at most 64 KB in size. There can be at most 100 secret values across all of a build&#39;s secrets.
     * 
     */
    public Map<String,String> secretEnv() {
        return this.secretEnv;
    }

    private SecretResponse() {}

    private SecretResponse(SecretResponse $) {
        this.kmsKeyName = $.kmsKeyName;
        this.secretEnv = $.secretEnv;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SecretResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SecretResponse $;

        public Builder() {
            $ = new SecretResponse();
        }

        public Builder(SecretResponse defaults) {
            $ = new SecretResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param kmsKeyName Cloud KMS key name to use to decrypt these envs.
         * 
         * @return builder
         * 
         */
        public Builder kmsKeyName(String kmsKeyName) {
            $.kmsKeyName = kmsKeyName;
            return this;
        }

        /**
         * @param secretEnv Map of environment variable name to its encrypted value. Secret environment variables must be unique across all of a build&#39;s secrets, and must be used by at least one build step. Values can be at most 64 KB in size. There can be at most 100 secret values across all of a build&#39;s secrets.
         * 
         * @return builder
         * 
         */
        public Builder secretEnv(Map<String,String> secretEnv) {
            $.secretEnv = secretEnv;
            return this;
        }

        public SecretResponse build() {
            $.kmsKeyName = Objects.requireNonNull($.kmsKeyName, "expected parameter 'kmsKeyName' to be non-null");
            $.secretEnv = Objects.requireNonNull($.secretEnv, "expected parameter 'secretEnv' to be non-null");
            return $;
        }
    }

}
