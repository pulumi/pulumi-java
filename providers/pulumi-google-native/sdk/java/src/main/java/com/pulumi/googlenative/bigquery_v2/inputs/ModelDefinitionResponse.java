// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.bigquery_v2.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.bigquery_v2.inputs.BqmlTrainingRunResponse;
import com.pulumi.googlenative.bigquery_v2.inputs.ModelDefinitionModelOptionsResponse;
import java.util.List;
import java.util.Objects;


public final class ModelDefinitionResponse extends com.pulumi.resources.InvokeArgs {

    public static final ModelDefinitionResponse Empty = new ModelDefinitionResponse();

    /**
     * [Output-only, Beta] Model options used for the first training run. These options are immutable for subsequent training runs. Default values are used for any options not specified in the input query.
     * 
     */
    @Import(name="modelOptions", required=true)
    private ModelDefinitionModelOptionsResponse modelOptions;

    public ModelDefinitionModelOptionsResponse modelOptions() {
        return this.modelOptions;
    }

    /**
     * [Output-only, Beta] Information about ml training runs, each training run comprises of multiple iterations and there may be multiple training runs for the model if warm start is used or if a user decides to continue a previously cancelled query.
     * 
     */
    @Import(name="trainingRuns", required=true)
    private List<BqmlTrainingRunResponse> trainingRuns;

    public List<BqmlTrainingRunResponse> trainingRuns() {
        return this.trainingRuns;
    }

    private ModelDefinitionResponse() {}

    private ModelDefinitionResponse(ModelDefinitionResponse $) {
        this.modelOptions = $.modelOptions;
        this.trainingRuns = $.trainingRuns;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ModelDefinitionResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ModelDefinitionResponse $;

        public Builder() {
            $ = new ModelDefinitionResponse();
        }

        public Builder(ModelDefinitionResponse defaults) {
            $ = new ModelDefinitionResponse(Objects.requireNonNull(defaults));
        }

        public Builder modelOptions(ModelDefinitionModelOptionsResponse modelOptions) {
            $.modelOptions = modelOptions;
            return this;
        }

        public Builder trainingRuns(List<BqmlTrainingRunResponse> trainingRuns) {
            $.trainingRuns = trainingRuns;
            return this;
        }

        public Builder trainingRuns(BqmlTrainingRunResponse... trainingRuns) {
            return trainingRuns(List.of(trainingRuns));
        }

        public ModelDefinitionResponse build() {
            $.modelOptions = Objects.requireNonNull($.modelOptions, "expected parameter 'modelOptions' to be non-null");
            $.trainingRuns = Objects.requireNonNull($.trainingRuns, "expected parameter 'trainingRuns' to be non-null");
            return $;
        }
    }

}
