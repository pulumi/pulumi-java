// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.logging_v2.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;


/**
 * Specifies a set of log entries that are filtered out by a sink. If your Google Cloud resource receives a large volume of log entries, you can use exclusions to reduce your chargeable logs. Note that exclusions on organization-level and folder-level sinks don&#39;t apply to child resources. Note also that you cannot modify the _Required sink or exclude logs from it.
 * 
 */
public final class LogExclusionResponse extends com.pulumi.resources.InvokeArgs {

    public static final LogExclusionResponse Empty = new LogExclusionResponse();

    /**
     * The creation timestamp of the exclusion.This field may not be present for older exclusions.
     * 
     */
    @Import(name="createTime", required=true)
    private String createTime;

    public String createTime() {
        return this.createTime;
    }

    /**
     * Optional. A description of this exclusion.
     * 
     */
    @Import(name="description", required=true)
    private String description;

    public String description() {
        return this.description;
    }

    /**
     * Optional. If set to True, then this exclusion is disabled and it does not exclude any log entries. You can update an exclusion to change the value of this field.
     * 
     */
    @Import(name="disabled", required=true)
    private Boolean disabled;

    public Boolean disabled() {
        return this.disabled;
    }

    /**
     * An advanced logs filter (https://cloud.google.com/logging/docs/view/advanced-queries) that matches the log entries to be excluded. By using the sample function (https://cloud.google.com/logging/docs/view/advanced-queries#sample), you can exclude less than 100% of the matching log entries.For example, the following query matches 99% of low-severity log entries from Google Cloud Storage buckets:resource.type=gcs_bucket severity&lt;ERROR sample(insertId, 0.99)
     * 
     */
    @Import(name="filter", required=true)
    private String filter;

    public String filter() {
        return this.filter;
    }

    /**
     * A client-assigned identifier, such as &#34;load-balancer-exclusion&#34;. Identifiers are limited to 100 characters and can include only letters, digits, underscores, hyphens, and periods. First character has to be alphanumeric.
     * 
     */
    @Import(name="name", required=true)
    private String name;

    public String name() {
        return this.name;
    }

    /**
     * The last update timestamp of the exclusion.This field may not be present for older exclusions.
     * 
     */
    @Import(name="updateTime", required=true)
    private String updateTime;

    public String updateTime() {
        return this.updateTime;
    }

    private LogExclusionResponse() {}

    private LogExclusionResponse(LogExclusionResponse $) {
        this.createTime = $.createTime;
        this.description = $.description;
        this.disabled = $.disabled;
        this.filter = $.filter;
        this.name = $.name;
        this.updateTime = $.updateTime;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LogExclusionResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LogExclusionResponse $;

        public Builder() {
            $ = new LogExclusionResponse();
        }

        public Builder(LogExclusionResponse defaults) {
            $ = new LogExclusionResponse(Objects.requireNonNull(defaults));
        }

        public Builder createTime(String createTime) {
            $.createTime = createTime;
            return this;
        }

        public Builder description(String description) {
            $.description = description;
            return this;
        }

        public Builder disabled(Boolean disabled) {
            $.disabled = disabled;
            return this;
        }

        public Builder filter(String filter) {
            $.filter = filter;
            return this;
        }

        public Builder name(String name) {
            $.name = name;
            return this;
        }

        public Builder updateTime(String updateTime) {
            $.updateTime = updateTime;
            return this;
        }

        public LogExclusionResponse build() {
            $.createTime = Objects.requireNonNull($.createTime, "expected parameter 'createTime' to be non-null");
            $.description = Objects.requireNonNull($.description, "expected parameter 'description' to be non-null");
            $.disabled = Objects.requireNonNull($.disabled, "expected parameter 'disabled' to be non-null");
            $.filter = Objects.requireNonNull($.filter, "expected parameter 'filter' to be non-null");
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            $.updateTime = Objects.requireNonNull($.updateTime, "expected parameter 'updateTime' to be non-null");
            return $;
        }
    }

}
