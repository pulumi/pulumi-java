// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.storage_v1.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.storage_v1.inputs.BucketLifecycleRuleItemResponse;
import java.util.List;
import java.util.Objects;


/**
 * The bucket&#39;s lifecycle configuration. See lifecycle management for more information.
 * 
 */
public final class BucketLifecycleResponse extends com.pulumi.resources.InvokeArgs {

    public static final BucketLifecycleResponse Empty = new BucketLifecycleResponse();

    /**
     * A lifecycle management rule, which is made of an action to take and the condition(s) under which the action will be taken.
     * 
     */
    @Import(name="rule", required=true)
    private List<BucketLifecycleRuleItemResponse> rule;

    /**
     * @return A lifecycle management rule, which is made of an action to take and the condition(s) under which the action will be taken.
     * 
     */
    public List<BucketLifecycleRuleItemResponse> rule() {
        return this.rule;
    }

    private BucketLifecycleResponse() {}

    private BucketLifecycleResponse(BucketLifecycleResponse $) {
        this.rule = $.rule;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BucketLifecycleResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BucketLifecycleResponse $;

        public Builder() {
            $ = new BucketLifecycleResponse();
        }

        public Builder(BucketLifecycleResponse defaults) {
            $ = new BucketLifecycleResponse(Objects.requireNonNull(defaults));
        }

        /**
         * @param rule A lifecycle management rule, which is made of an action to take and the condition(s) under which the action will be taken.
         * 
         * @return builder
         * 
         */
        public Builder rule(List<BucketLifecycleRuleItemResponse> rule) {
            $.rule = rule;
            return this;
        }

        /**
         * @param rule A lifecycle management rule, which is made of an action to take and the condition(s) under which the action will be taken.
         * 
         * @return builder
         * 
         */
        public Builder rule(BucketLifecycleRuleItemResponse... rule) {
            return rule(List.of(rule));
        }

        public BucketLifecycleResponse build() {
            $.rule = Objects.requireNonNull($.rule, "expected parameter 'rule' to be non-null");
            return $;
        }
    }

}
