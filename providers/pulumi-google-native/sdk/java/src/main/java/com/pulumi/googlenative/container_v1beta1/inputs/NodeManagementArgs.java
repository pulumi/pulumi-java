// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.container_v1beta1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import com.pulumi.googlenative.container_v1beta1.inputs.AutoUpgradeOptionsArgs;
import java.lang.Boolean;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * NodeManagement defines the set of node management services turned on for the node pool.
 * 
 */
public final class NodeManagementArgs extends com.pulumi.resources.ResourceArgs {

    public static final NodeManagementArgs Empty = new NodeManagementArgs();

    /**
     * Whether the nodes will be automatically repaired.
     * 
     */
    @Import(name="autoRepair")
      private final @Nullable Output<Boolean> autoRepair;

    public Output<Boolean> autoRepair() {
        return this.autoRepair == null ? Codegen.empty() : this.autoRepair;
    }

    /**
     * Whether the nodes will be automatically upgraded.
     * 
     */
    @Import(name="autoUpgrade")
      private final @Nullable Output<Boolean> autoUpgrade;

    public Output<Boolean> autoUpgrade() {
        return this.autoUpgrade == null ? Codegen.empty() : this.autoUpgrade;
    }

    /**
     * Specifies the Auto Upgrade knobs for the node pool.
     * 
     */
    @Import(name="upgradeOptions")
      private final @Nullable Output<AutoUpgradeOptionsArgs> upgradeOptions;

    public Output<AutoUpgradeOptionsArgs> upgradeOptions() {
        return this.upgradeOptions == null ? Codegen.empty() : this.upgradeOptions;
    }

    public NodeManagementArgs(
        @Nullable Output<Boolean> autoRepair,
        @Nullable Output<Boolean> autoUpgrade,
        @Nullable Output<AutoUpgradeOptionsArgs> upgradeOptions) {
        this.autoRepair = autoRepair;
        this.autoUpgrade = autoUpgrade;
        this.upgradeOptions = upgradeOptions;
    }

    private NodeManagementArgs() {
        this.autoRepair = Codegen.empty();
        this.autoUpgrade = Codegen.empty();
        this.upgradeOptions = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(NodeManagementArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<Boolean> autoRepair;
        private @Nullable Output<Boolean> autoUpgrade;
        private @Nullable Output<AutoUpgradeOptionsArgs> upgradeOptions;

        public Builder() {
    	      // Empty
        }

        public Builder(NodeManagementArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.autoRepair = defaults.autoRepair;
    	      this.autoUpgrade = defaults.autoUpgrade;
    	      this.upgradeOptions = defaults.upgradeOptions;
        }

        public Builder autoRepair(@Nullable Output<Boolean> autoRepair) {
            this.autoRepair = autoRepair;
            return this;
        }
        public Builder autoRepair(@Nullable Boolean autoRepair) {
            this.autoRepair = Codegen.ofNullable(autoRepair);
            return this;
        }
        public Builder autoUpgrade(@Nullable Output<Boolean> autoUpgrade) {
            this.autoUpgrade = autoUpgrade;
            return this;
        }
        public Builder autoUpgrade(@Nullable Boolean autoUpgrade) {
            this.autoUpgrade = Codegen.ofNullable(autoUpgrade);
            return this;
        }
        public Builder upgradeOptions(@Nullable Output<AutoUpgradeOptionsArgs> upgradeOptions) {
            this.upgradeOptions = upgradeOptions;
            return this;
        }
        public Builder upgradeOptions(@Nullable AutoUpgradeOptionsArgs upgradeOptions) {
            this.upgradeOptions = Codegen.ofNullable(upgradeOptions);
            return this;
        }        public NodeManagementArgs build() {
            return new NodeManagementArgs(autoRepair, autoUpgrade, upgradeOptions);
        }
    }
}
