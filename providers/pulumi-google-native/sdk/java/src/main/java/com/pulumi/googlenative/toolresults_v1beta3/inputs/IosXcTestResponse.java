// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.toolresults_v1beta3.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * A test of an iOS application that uses the XCTest framework.
 * 
 */
public final class IosXcTestResponse extends com.pulumi.resources.InvokeArgs {

    public static final IosXcTestResponse Empty = new IosXcTestResponse();

    /**
     * Bundle ID of the app.
     * 
     */
    @Import(name="bundleId", required=true)
      private final String bundleId;

    public String bundleId() {
        return this.bundleId;
    }

    /**
     * Xcode version that the test was run with.
     * 
     */
    @Import(name="xcodeVersion", required=true)
      private final String xcodeVersion;

    public String xcodeVersion() {
        return this.xcodeVersion;
    }

    public IosXcTestResponse(
        String bundleId,
        String xcodeVersion) {
        this.bundleId = Objects.requireNonNull(bundleId, "expected parameter 'bundleId' to be non-null");
        this.xcodeVersion = Objects.requireNonNull(xcodeVersion, "expected parameter 'xcodeVersion' to be non-null");
    }

    private IosXcTestResponse() {
        this.bundleId = null;
        this.xcodeVersion = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(IosXcTestResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String bundleId;
        private String xcodeVersion;

        public Builder() {
    	      // Empty
        }

        public Builder(IosXcTestResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bundleId = defaults.bundleId;
    	      this.xcodeVersion = defaults.xcodeVersion;
        }

        public Builder bundleId(String bundleId) {
            this.bundleId = Objects.requireNonNull(bundleId);
            return this;
        }
        public Builder xcodeVersion(String xcodeVersion) {
            this.xcodeVersion = Objects.requireNonNull(xcodeVersion);
            return this;
        }        public IosXcTestResponse build() {
            return new IosXcTestResponse(bundleId, xcodeVersion);
        }
    }
}
