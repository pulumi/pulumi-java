// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.compute.v1.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class ResourcePolicyGroupPlacementPolicyResponse {
    /**
     * @return The number of availability domains to spread instances across. If two instances are in different availability domain, they are not in the same low latency network.
     * 
     */
    private final Integer availabilityDomainCount;
    /**
     * @return Specifies network collocation
     * 
     */
    private final String collocation;
    /**
     * @return Number of VMs in this placement group. Google does not recommend that you use this field unless you use a compact policy and you want your policy to work only if it contains this exact number of VMs.
     * 
     */
    private final Integer vmCount;

    @CustomType.Constructor
    private ResourcePolicyGroupPlacementPolicyResponse(
        @CustomType.Parameter("availabilityDomainCount") Integer availabilityDomainCount,
        @CustomType.Parameter("collocation") String collocation,
        @CustomType.Parameter("vmCount") Integer vmCount) {
        this.availabilityDomainCount = availabilityDomainCount;
        this.collocation = collocation;
        this.vmCount = vmCount;
    }

    /**
     * @return The number of availability domains to spread instances across. If two instances are in different availability domain, they are not in the same low latency network.
     * 
     */
    public Integer availabilityDomainCount() {
        return this.availabilityDomainCount;
    }
    /**
     * @return Specifies network collocation
     * 
     */
    public String collocation() {
        return this.collocation;
    }
    /**
     * @return Number of VMs in this placement group. Google does not recommend that you use this field unless you use a compact policy and you want your policy to work only if it contains this exact number of VMs.
     * 
     */
    public Integer vmCount() {
        return this.vmCount;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ResourcePolicyGroupPlacementPolicyResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Integer availabilityDomainCount;
        private String collocation;
        private Integer vmCount;

        public Builder() {
    	      // Empty
        }

        public Builder(ResourcePolicyGroupPlacementPolicyResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.availabilityDomainCount = defaults.availabilityDomainCount;
    	      this.collocation = defaults.collocation;
    	      this.vmCount = defaults.vmCount;
        }

        public Builder availabilityDomainCount(Integer availabilityDomainCount) {
            this.availabilityDomainCount = Objects.requireNonNull(availabilityDomainCount);
            return this;
        }
        public Builder collocation(String collocation) {
            this.collocation = Objects.requireNonNull(collocation);
            return this;
        }
        public Builder vmCount(Integer vmCount) {
            this.vmCount = Objects.requireNonNull(vmCount);
            return this;
        }        public ResourcePolicyGroupPlacementPolicyResponse build() {
            return new ResourcePolicyGroupPlacementPolicyResponse(availabilityDomainCount, collocation, vmCount);
        }
    }
}
