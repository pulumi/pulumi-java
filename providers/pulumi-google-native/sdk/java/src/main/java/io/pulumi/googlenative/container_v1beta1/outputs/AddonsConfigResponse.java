// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.container_v1beta1.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import io.pulumi.googlenative.container_v1beta1.outputs.CloudRunConfigResponse;
import io.pulumi.googlenative.container_v1beta1.outputs.ConfigConnectorConfigResponse;
import io.pulumi.googlenative.container_v1beta1.outputs.DnsCacheConfigResponse;
import io.pulumi.googlenative.container_v1beta1.outputs.GcePersistentDiskCsiDriverConfigResponse;
import io.pulumi.googlenative.container_v1beta1.outputs.GcpFilestoreCsiDriverConfigResponse;
import io.pulumi.googlenative.container_v1beta1.outputs.GkeBackupAgentConfigResponse;
import io.pulumi.googlenative.container_v1beta1.outputs.HorizontalPodAutoscalingResponse;
import io.pulumi.googlenative.container_v1beta1.outputs.HttpLoadBalancingResponse;
import io.pulumi.googlenative.container_v1beta1.outputs.IstioConfigResponse;
import io.pulumi.googlenative.container_v1beta1.outputs.KalmConfigResponse;
import io.pulumi.googlenative.container_v1beta1.outputs.KubernetesDashboardResponse;
import io.pulumi.googlenative.container_v1beta1.outputs.NetworkPolicyConfigResponse;
import java.util.Objects;

@OutputCustomType
public final class AddonsConfigResponse {
    private final CloudRunConfigResponse cloudRunConfig;
    private final ConfigConnectorConfigResponse configConnectorConfig;
    private final DnsCacheConfigResponse dnsCacheConfig;
    private final GcePersistentDiskCsiDriverConfigResponse gcePersistentDiskCsiDriverConfig;
    private final GcpFilestoreCsiDriverConfigResponse gcpFilestoreCsiDriverConfig;
    private final GkeBackupAgentConfigResponse gkeBackupAgentConfig;
    private final HorizontalPodAutoscalingResponse horizontalPodAutoscaling;
    private final HttpLoadBalancingResponse httpLoadBalancing;
    private final IstioConfigResponse istioConfig;
    private final KalmConfigResponse kalmConfig;
    private final KubernetesDashboardResponse kubernetesDashboard;
    private final NetworkPolicyConfigResponse networkPolicyConfig;

    @OutputCustomType.Constructor({"cloudRunConfig","configConnectorConfig","dnsCacheConfig","gcePersistentDiskCsiDriverConfig","gcpFilestoreCsiDriverConfig","gkeBackupAgentConfig","horizontalPodAutoscaling","httpLoadBalancing","istioConfig","kalmConfig","kubernetesDashboard","networkPolicyConfig"})
    private AddonsConfigResponse(
        CloudRunConfigResponse cloudRunConfig,
        ConfigConnectorConfigResponse configConnectorConfig,
        DnsCacheConfigResponse dnsCacheConfig,
        GcePersistentDiskCsiDriverConfigResponse gcePersistentDiskCsiDriverConfig,
        GcpFilestoreCsiDriverConfigResponse gcpFilestoreCsiDriverConfig,
        GkeBackupAgentConfigResponse gkeBackupAgentConfig,
        HorizontalPodAutoscalingResponse horizontalPodAutoscaling,
        HttpLoadBalancingResponse httpLoadBalancing,
        IstioConfigResponse istioConfig,
        KalmConfigResponse kalmConfig,
        KubernetesDashboardResponse kubernetesDashboard,
        NetworkPolicyConfigResponse networkPolicyConfig) {
        this.cloudRunConfig = Objects.requireNonNull(cloudRunConfig);
        this.configConnectorConfig = Objects.requireNonNull(configConnectorConfig);
        this.dnsCacheConfig = Objects.requireNonNull(dnsCacheConfig);
        this.gcePersistentDiskCsiDriverConfig = Objects.requireNonNull(gcePersistentDiskCsiDriverConfig);
        this.gcpFilestoreCsiDriverConfig = Objects.requireNonNull(gcpFilestoreCsiDriverConfig);
        this.gkeBackupAgentConfig = Objects.requireNonNull(gkeBackupAgentConfig);
        this.horizontalPodAutoscaling = Objects.requireNonNull(horizontalPodAutoscaling);
        this.httpLoadBalancing = Objects.requireNonNull(httpLoadBalancing);
        this.istioConfig = Objects.requireNonNull(istioConfig);
        this.kalmConfig = Objects.requireNonNull(kalmConfig);
        this.kubernetesDashboard = Objects.requireNonNull(kubernetesDashboard);
        this.networkPolicyConfig = Objects.requireNonNull(networkPolicyConfig);
    }

    public CloudRunConfigResponse getCloudRunConfig() {
        return this.cloudRunConfig;
    }
    public ConfigConnectorConfigResponse getConfigConnectorConfig() {
        return this.configConnectorConfig;
    }
    public DnsCacheConfigResponse getDnsCacheConfig() {
        return this.dnsCacheConfig;
    }
    public GcePersistentDiskCsiDriverConfigResponse getGcePersistentDiskCsiDriverConfig() {
        return this.gcePersistentDiskCsiDriverConfig;
    }
    public GcpFilestoreCsiDriverConfigResponse getGcpFilestoreCsiDriverConfig() {
        return this.gcpFilestoreCsiDriverConfig;
    }
    public GkeBackupAgentConfigResponse getGkeBackupAgentConfig() {
        return this.gkeBackupAgentConfig;
    }
    public HorizontalPodAutoscalingResponse getHorizontalPodAutoscaling() {
        return this.horizontalPodAutoscaling;
    }
    public HttpLoadBalancingResponse getHttpLoadBalancing() {
        return this.httpLoadBalancing;
    }
    public IstioConfigResponse getIstioConfig() {
        return this.istioConfig;
    }
    public KalmConfigResponse getKalmConfig() {
        return this.kalmConfig;
    }
    public KubernetesDashboardResponse getKubernetesDashboard() {
        return this.kubernetesDashboard;
    }
    public NetworkPolicyConfigResponse getNetworkPolicyConfig() {
        return this.networkPolicyConfig;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AddonsConfigResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CloudRunConfigResponse cloudRunConfig;
        private ConfigConnectorConfigResponse configConnectorConfig;
        private DnsCacheConfigResponse dnsCacheConfig;
        private GcePersistentDiskCsiDriverConfigResponse gcePersistentDiskCsiDriverConfig;
        private GcpFilestoreCsiDriverConfigResponse gcpFilestoreCsiDriverConfig;
        private GkeBackupAgentConfigResponse gkeBackupAgentConfig;
        private HorizontalPodAutoscalingResponse horizontalPodAutoscaling;
        private HttpLoadBalancingResponse httpLoadBalancing;
        private IstioConfigResponse istioConfig;
        private KalmConfigResponse kalmConfig;
        private KubernetesDashboardResponse kubernetesDashboard;
        private NetworkPolicyConfigResponse networkPolicyConfig;

        public Builder() {
    	      // Empty
        }

        public Builder(AddonsConfigResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cloudRunConfig = defaults.cloudRunConfig;
    	      this.configConnectorConfig = defaults.configConnectorConfig;
    	      this.dnsCacheConfig = defaults.dnsCacheConfig;
    	      this.gcePersistentDiskCsiDriverConfig = defaults.gcePersistentDiskCsiDriverConfig;
    	      this.gcpFilestoreCsiDriverConfig = defaults.gcpFilestoreCsiDriverConfig;
    	      this.gkeBackupAgentConfig = defaults.gkeBackupAgentConfig;
    	      this.horizontalPodAutoscaling = defaults.horizontalPodAutoscaling;
    	      this.httpLoadBalancing = defaults.httpLoadBalancing;
    	      this.istioConfig = defaults.istioConfig;
    	      this.kalmConfig = defaults.kalmConfig;
    	      this.kubernetesDashboard = defaults.kubernetesDashboard;
    	      this.networkPolicyConfig = defaults.networkPolicyConfig;
        }

        public Builder setCloudRunConfig(CloudRunConfigResponse cloudRunConfig) {
            this.cloudRunConfig = Objects.requireNonNull(cloudRunConfig);
            return this;
        }

        public Builder setConfigConnectorConfig(ConfigConnectorConfigResponse configConnectorConfig) {
            this.configConnectorConfig = Objects.requireNonNull(configConnectorConfig);
            return this;
        }

        public Builder setDnsCacheConfig(DnsCacheConfigResponse dnsCacheConfig) {
            this.dnsCacheConfig = Objects.requireNonNull(dnsCacheConfig);
            return this;
        }

        public Builder setGcePersistentDiskCsiDriverConfig(GcePersistentDiskCsiDriverConfigResponse gcePersistentDiskCsiDriverConfig) {
            this.gcePersistentDiskCsiDriverConfig = Objects.requireNonNull(gcePersistentDiskCsiDriverConfig);
            return this;
        }

        public Builder setGcpFilestoreCsiDriverConfig(GcpFilestoreCsiDriverConfigResponse gcpFilestoreCsiDriverConfig) {
            this.gcpFilestoreCsiDriverConfig = Objects.requireNonNull(gcpFilestoreCsiDriverConfig);
            return this;
        }

        public Builder setGkeBackupAgentConfig(GkeBackupAgentConfigResponse gkeBackupAgentConfig) {
            this.gkeBackupAgentConfig = Objects.requireNonNull(gkeBackupAgentConfig);
            return this;
        }

        public Builder setHorizontalPodAutoscaling(HorizontalPodAutoscalingResponse horizontalPodAutoscaling) {
            this.horizontalPodAutoscaling = Objects.requireNonNull(horizontalPodAutoscaling);
            return this;
        }

        public Builder setHttpLoadBalancing(HttpLoadBalancingResponse httpLoadBalancing) {
            this.httpLoadBalancing = Objects.requireNonNull(httpLoadBalancing);
            return this;
        }

        public Builder setIstioConfig(IstioConfigResponse istioConfig) {
            this.istioConfig = Objects.requireNonNull(istioConfig);
            return this;
        }

        public Builder setKalmConfig(KalmConfigResponse kalmConfig) {
            this.kalmConfig = Objects.requireNonNull(kalmConfig);
            return this;
        }

        public Builder setKubernetesDashboard(KubernetesDashboardResponse kubernetesDashboard) {
            this.kubernetesDashboard = Objects.requireNonNull(kubernetesDashboard);
            return this;
        }

        public Builder setNetworkPolicyConfig(NetworkPolicyConfigResponse networkPolicyConfig) {
            this.networkPolicyConfig = Objects.requireNonNull(networkPolicyConfig);
            return this;
        }

        public AddonsConfigResponse build() {
            return new AddonsConfigResponse(cloudRunConfig, configConnectorConfig, dnsCacheConfig, gcePersistentDiskCsiDriverConfig, gcpFilestoreCsiDriverConfig, gkeBackupAgentConfig, horizontalPodAutoscaling, httpLoadBalancing, istioConfig, kalmConfig, kubernetesDashboard, networkPolicyConfig);
        }
    }
}
