// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.osconfig_v1beta.inputs;

import io.pulumi.core.internal.annotations.InputImport;
import io.pulumi.googlenative.osconfig_v1beta.inputs.AssignmentGroupLabelResponse;
import io.pulumi.googlenative.osconfig_v1beta.inputs.AssignmentOsTypeResponse;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class AssignmentResponse extends io.pulumi.resources.InvokeArgs {

    public static final AssignmentResponse Empty = new AssignmentResponse();

    @InputImport(name="groupLabels", required=true)
    private final List<AssignmentGroupLabelResponse> groupLabels;

    public List<AssignmentGroupLabelResponse> getGroupLabels() {
        return this.groupLabels;
    }

    @InputImport(name="instanceNamePrefixes", required=true)
    private final List<String> instanceNamePrefixes;

    public List<String> getInstanceNamePrefixes() {
        return this.instanceNamePrefixes;
    }

    @InputImport(name="instances", required=true)
    private final List<String> instances;

    public List<String> getInstances() {
        return this.instances;
    }

    @InputImport(name="osTypes", required=true)
    private final List<AssignmentOsTypeResponse> osTypes;

    public List<AssignmentOsTypeResponse> getOsTypes() {
        return this.osTypes;
    }

    @InputImport(name="zones", required=true)
    private final List<String> zones;

    public List<String> getZones() {
        return this.zones;
    }

    public AssignmentResponse(
        List<AssignmentGroupLabelResponse> groupLabels,
        List<String> instanceNamePrefixes,
        List<String> instances,
        List<AssignmentOsTypeResponse> osTypes,
        List<String> zones) {
        this.groupLabels = Objects.requireNonNull(groupLabels, "expected parameter 'groupLabels' to be non-null");
        this.instanceNamePrefixes = Objects.requireNonNull(instanceNamePrefixes, "expected parameter 'instanceNamePrefixes' to be non-null");
        this.instances = Objects.requireNonNull(instances, "expected parameter 'instances' to be non-null");
        this.osTypes = Objects.requireNonNull(osTypes, "expected parameter 'osTypes' to be non-null");
        this.zones = Objects.requireNonNull(zones, "expected parameter 'zones' to be non-null");
    }

    private AssignmentResponse() {
        this.groupLabels = List.of();
        this.instanceNamePrefixes = List.of();
        this.instances = List.of();
        this.osTypes = List.of();
        this.zones = List.of();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AssignmentResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<AssignmentGroupLabelResponse> groupLabels;
        private List<String> instanceNamePrefixes;
        private List<String> instances;
        private List<AssignmentOsTypeResponse> osTypes;
        private List<String> zones;

        public Builder() {
    	      // Empty
        }

        public Builder(AssignmentResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.groupLabels = defaults.groupLabels;
    	      this.instanceNamePrefixes = defaults.instanceNamePrefixes;
    	      this.instances = defaults.instances;
    	      this.osTypes = defaults.osTypes;
    	      this.zones = defaults.zones;
        }

        public Builder setGroupLabels(List<AssignmentGroupLabelResponse> groupLabels) {
            this.groupLabels = Objects.requireNonNull(groupLabels);
            return this;
        }

        public Builder setInstanceNamePrefixes(List<String> instanceNamePrefixes) {
            this.instanceNamePrefixes = Objects.requireNonNull(instanceNamePrefixes);
            return this;
        }

        public Builder setInstances(List<String> instances) {
            this.instances = Objects.requireNonNull(instances);
            return this;
        }

        public Builder setOsTypes(List<AssignmentOsTypeResponse> osTypes) {
            this.osTypes = Objects.requireNonNull(osTypes);
            return this;
        }

        public Builder setZones(List<String> zones) {
            this.zones = Objects.requireNonNull(zones);
            return this;
        }

        public AssignmentResponse build() {
            return new AssignmentResponse(groupLabels, instanceNamePrefixes, instances, osTypes, zones);
        }
    }
}
