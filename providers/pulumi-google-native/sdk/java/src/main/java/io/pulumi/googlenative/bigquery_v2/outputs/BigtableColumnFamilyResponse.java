// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.bigquery_v2.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import io.pulumi.googlenative.bigquery_v2.outputs.BigtableColumnResponse;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@OutputCustomType
public final class BigtableColumnFamilyResponse {
    private final List<BigtableColumnResponse> columns;
    private final String encoding;
    private final String familyId;
    private final Boolean onlyReadLatest;
    private final String type;

    @OutputCustomType.Constructor({"columns","encoding","familyId","onlyReadLatest","type"})
    private BigtableColumnFamilyResponse(
        List<BigtableColumnResponse> columns,
        String encoding,
        String familyId,
        Boolean onlyReadLatest,
        String type) {
        this.columns = Objects.requireNonNull(columns);
        this.encoding = Objects.requireNonNull(encoding);
        this.familyId = Objects.requireNonNull(familyId);
        this.onlyReadLatest = Objects.requireNonNull(onlyReadLatest);
        this.type = Objects.requireNonNull(type);
    }

    public List<BigtableColumnResponse> getColumns() {
        return this.columns;
    }
    public String getEncoding() {
        return this.encoding;
    }
    public String getFamilyId() {
        return this.familyId;
    }
    public Boolean getOnlyReadLatest() {
        return this.onlyReadLatest;
    }
    public String getType() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BigtableColumnFamilyResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<BigtableColumnResponse> columns;
        private String encoding;
        private String familyId;
        private Boolean onlyReadLatest;
        private String type;

        public Builder() {
    	      // Empty
        }

        public Builder(BigtableColumnFamilyResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.columns = defaults.columns;
    	      this.encoding = defaults.encoding;
    	      this.familyId = defaults.familyId;
    	      this.onlyReadLatest = defaults.onlyReadLatest;
    	      this.type = defaults.type;
        }

        public Builder setColumns(List<BigtableColumnResponse> columns) {
            this.columns = Objects.requireNonNull(columns);
            return this;
        }

        public Builder setEncoding(String encoding) {
            this.encoding = Objects.requireNonNull(encoding);
            return this;
        }

        public Builder setFamilyId(String familyId) {
            this.familyId = Objects.requireNonNull(familyId);
            return this;
        }

        public Builder setOnlyReadLatest(Boolean onlyReadLatest) {
            this.onlyReadLatest = Objects.requireNonNull(onlyReadLatest);
            return this;
        }

        public Builder setType(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }

        public BigtableColumnFamilyResponse build() {
            return new BigtableColumnFamilyResponse(columns, encoding, familyId, onlyReadLatest, type);
        }
    }
}
