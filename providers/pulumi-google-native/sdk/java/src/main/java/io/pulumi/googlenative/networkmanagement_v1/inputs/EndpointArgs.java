// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.networkmanagement_v1.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.googlenative.networkmanagement_v1.enums.EndpointNetworkType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Source or destination of the Connectivity Test.
 * 
 */
public final class EndpointArgs extends io.pulumi.resources.ResourceArgs {

    public static final EndpointArgs Empty = new EndpointArgs();

    /**
     * A [Cloud SQL](https://cloud.google.com/sql) instance URI.
     * 
     */
    @Import(name="cloudSqlInstance")
      private final @Nullable Output<String> cloudSqlInstance;

    public Output<String> getCloudSqlInstance() {
        return this.cloudSqlInstance == null ? Output.empty() : this.cloudSqlInstance;
    }

    /**
     * A cluster URI for [Google Kubernetes Engine master](https://cloud.google.com/kubernetes-engine/docs/concepts/cluster-architecture).
     * 
     */
    @Import(name="gkeMasterCluster")
      private final @Nullable Output<String> gkeMasterCluster;

    public Output<String> getGkeMasterCluster() {
        return this.gkeMasterCluster == null ? Output.empty() : this.gkeMasterCluster;
    }

    /**
     * A Compute Engine instance URI.
     * 
     */
    @Import(name="instance")
      private final @Nullable Output<String> instance;

    public Output<String> getInstance() {
        return this.instance == null ? Output.empty() : this.instance;
    }

    /**
     * The IP address of the endpoint, which can be an external or internal IP. An IPv6 address is only allowed when the test's destination is a [global load balancer VIP](/load-balancing/docs/load-balancing-overview).
     * 
     */
    @Import(name="ipAddress")
      private final @Nullable Output<String> ipAddress;

    public Output<String> getIpAddress() {
        return this.ipAddress == null ? Output.empty() : this.ipAddress;
    }

    /**
     * A Compute Engine network URI.
     * 
     */
    @Import(name="network")
      private final @Nullable Output<String> network;

    public Output<String> getNetwork() {
        return this.network == null ? Output.empty() : this.network;
    }

    /**
     * Type of the network where the endpoint is located. Applicable only to source endpoint, as destination network type can be inferred from the source.
     * 
     */
    @Import(name="networkType")
      private final @Nullable Output<EndpointNetworkType> networkType;

    public Output<EndpointNetworkType> getNetworkType() {
        return this.networkType == null ? Output.empty() : this.networkType;
    }

    /**
     * The IP protocol port of the endpoint. Only applicable when protocol is TCP or UDP.
     * 
     */
    @Import(name="port")
      private final @Nullable Output<Integer> port;

    public Output<Integer> getPort() {
        return this.port == null ? Output.empty() : this.port;
    }

    /**
     * Project ID where the endpoint is located. The Project ID can be derived from the URI if you provide a VM instance or network URI. The following are two cases where you must provide the project ID: 1. Only the IP address is specified, and the IP address is within a GCP project. 2. When you are using Shared VPC and the IP address that you provide is from the service project. In this case, the network that the IP address resides in is defined in the host project.
     * 
     */
    @Import(name="project")
      private final @Nullable Output<String> project;

    public Output<String> getProject() {
        return this.project == null ? Output.empty() : this.project;
    }

    public EndpointArgs(
        @Nullable Output<String> cloudSqlInstance,
        @Nullable Output<String> gkeMasterCluster,
        @Nullable Output<String> instance,
        @Nullable Output<String> ipAddress,
        @Nullable Output<String> network,
        @Nullable Output<EndpointNetworkType> networkType,
        @Nullable Output<Integer> port,
        @Nullable Output<String> project) {
        this.cloudSqlInstance = cloudSqlInstance;
        this.gkeMasterCluster = gkeMasterCluster;
        this.instance = instance;
        this.ipAddress = ipAddress;
        this.network = network;
        this.networkType = networkType;
        this.port = port;
        this.project = project;
    }

    private EndpointArgs() {
        this.cloudSqlInstance = Output.empty();
        this.gkeMasterCluster = Output.empty();
        this.instance = Output.empty();
        this.ipAddress = Output.empty();
        this.network = Output.empty();
        this.networkType = Output.empty();
        this.port = Output.empty();
        this.project = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(EndpointArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> cloudSqlInstance;
        private @Nullable Output<String> gkeMasterCluster;
        private @Nullable Output<String> instance;
        private @Nullable Output<String> ipAddress;
        private @Nullable Output<String> network;
        private @Nullable Output<EndpointNetworkType> networkType;
        private @Nullable Output<Integer> port;
        private @Nullable Output<String> project;

        public Builder() {
    	      // Empty
        }

        public Builder(EndpointArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cloudSqlInstance = defaults.cloudSqlInstance;
    	      this.gkeMasterCluster = defaults.gkeMasterCluster;
    	      this.instance = defaults.instance;
    	      this.ipAddress = defaults.ipAddress;
    	      this.network = defaults.network;
    	      this.networkType = defaults.networkType;
    	      this.port = defaults.port;
    	      this.project = defaults.project;
        }

        public Builder cloudSqlInstance(@Nullable Output<String> cloudSqlInstance) {
            this.cloudSqlInstance = cloudSqlInstance;
            return this;
        }
        public Builder cloudSqlInstance(@Nullable String cloudSqlInstance) {
            this.cloudSqlInstance = Output.ofNullable(cloudSqlInstance);
            return this;
        }
        public Builder gkeMasterCluster(@Nullable Output<String> gkeMasterCluster) {
            this.gkeMasterCluster = gkeMasterCluster;
            return this;
        }
        public Builder gkeMasterCluster(@Nullable String gkeMasterCluster) {
            this.gkeMasterCluster = Output.ofNullable(gkeMasterCluster);
            return this;
        }
        public Builder instance(@Nullable Output<String> instance) {
            this.instance = instance;
            return this;
        }
        public Builder instance(@Nullable String instance) {
            this.instance = Output.ofNullable(instance);
            return this;
        }
        public Builder ipAddress(@Nullable Output<String> ipAddress) {
            this.ipAddress = ipAddress;
            return this;
        }
        public Builder ipAddress(@Nullable String ipAddress) {
            this.ipAddress = Output.ofNullable(ipAddress);
            return this;
        }
        public Builder network(@Nullable Output<String> network) {
            this.network = network;
            return this;
        }
        public Builder network(@Nullable String network) {
            this.network = Output.ofNullable(network);
            return this;
        }
        public Builder networkType(@Nullable Output<EndpointNetworkType> networkType) {
            this.networkType = networkType;
            return this;
        }
        public Builder networkType(@Nullable EndpointNetworkType networkType) {
            this.networkType = Output.ofNullable(networkType);
            return this;
        }
        public Builder port(@Nullable Output<Integer> port) {
            this.port = port;
            return this;
        }
        public Builder port(@Nullable Integer port) {
            this.port = Output.ofNullable(port);
            return this;
        }
        public Builder project(@Nullable Output<String> project) {
            this.project = project;
            return this;
        }
        public Builder project(@Nullable String project) {
            this.project = Output.ofNullable(project);
            return this;
        }        public EndpointArgs build() {
            return new EndpointArgs(cloudSqlInstance, gkeMasterCluster, instance, ipAddress, network, networkType, port, project);
        }
    }
}
