// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.containeranalysis_v1.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@OutputCustomType
public final class CommandResponse {
    private final List<String> args;
    private final String dir;
    private final List<String> env;
    private final String name;
    private final List<String> waitFor;

    @OutputCustomType.Constructor({"args","dir","env","name","waitFor"})
    private CommandResponse(
        List<String> args,
        String dir,
        List<String> env,
        String name,
        List<String> waitFor) {
        this.args = Objects.requireNonNull(args);
        this.dir = Objects.requireNonNull(dir);
        this.env = Objects.requireNonNull(env);
        this.name = Objects.requireNonNull(name);
        this.waitFor = Objects.requireNonNull(waitFor);
    }

    public List<String> getArgs() {
        return this.args;
    }
    public String getDir() {
        return this.dir;
    }
    public List<String> getEnv() {
        return this.env;
    }
    public String getName() {
        return this.name;
    }
    public List<String> getWaitFor() {
        return this.waitFor;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CommandResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<String> args;
        private String dir;
        private List<String> env;
        private String name;
        private List<String> waitFor;

        public Builder() {
    	      // Empty
        }

        public Builder(CommandResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.args = defaults.args;
    	      this.dir = defaults.dir;
    	      this.env = defaults.env;
    	      this.name = defaults.name;
    	      this.waitFor = defaults.waitFor;
        }

        public Builder setArgs(List<String> args) {
            this.args = Objects.requireNonNull(args);
            return this;
        }

        public Builder setDir(String dir) {
            this.dir = Objects.requireNonNull(dir);
            return this;
        }

        public Builder setEnv(List<String> env) {
            this.env = Objects.requireNonNull(env);
            return this;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setWaitFor(List<String> waitFor) {
            this.waitFor = Objects.requireNonNull(waitFor);
            return this;
        }

        public CommandResponse build() {
            return new CommandResponse(args, dir, env, name, waitFor);
        }
    }
}
