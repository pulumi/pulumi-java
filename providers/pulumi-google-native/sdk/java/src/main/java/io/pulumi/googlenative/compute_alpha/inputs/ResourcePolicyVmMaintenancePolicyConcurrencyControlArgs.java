// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.compute_alpha.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.Integer;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ResourcePolicyVmMaintenancePolicyConcurrencyControlArgs extends io.pulumi.resources.ResourceArgs {

    public static final ResourcePolicyVmMaintenancePolicyConcurrencyControlArgs Empty = new ResourcePolicyVmMaintenancePolicyConcurrencyControlArgs();

    @InputImport(name="concurrencyLimit")
    private final @Nullable Input<Integer> concurrencyLimit;

    public Input<Integer> getConcurrencyLimit() {
        return this.concurrencyLimit == null ? Input.empty() : this.concurrencyLimit;
    }

    public ResourcePolicyVmMaintenancePolicyConcurrencyControlArgs(@Nullable Input<Integer> concurrencyLimit) {
        this.concurrencyLimit = concurrencyLimit;
    }

    private ResourcePolicyVmMaintenancePolicyConcurrencyControlArgs() {
        this.concurrencyLimit = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ResourcePolicyVmMaintenancePolicyConcurrencyControlArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<Integer> concurrencyLimit;

        public Builder() {
    	      // Empty
        }

        public Builder(ResourcePolicyVmMaintenancePolicyConcurrencyControlArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.concurrencyLimit = defaults.concurrencyLimit;
        }

        public Builder setConcurrencyLimit(@Nullable Input<Integer> concurrencyLimit) {
            this.concurrencyLimit = concurrencyLimit;
            return this;
        }

        public Builder setConcurrencyLimit(@Nullable Integer concurrencyLimit) {
            this.concurrencyLimit = Input.ofNullable(concurrencyLimit);
            return this;
        }

        public ResourcePolicyVmMaintenancePolicyConcurrencyControlArgs build() {
            return new ResourcePolicyVmMaintenancePolicyConcurrencyControlArgs(concurrencyLimit);
        }
    }
}
